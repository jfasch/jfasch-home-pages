Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda", "trainings/log/detail/2023-XX-XX-C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/context_manager/screenplay", "trainings/material/soup/python/misc/context_manager/slides", "trainings/material/soup/python/misc/context_manager/topic", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/pcap-exam", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/context_manager/screenplay.rst", "trainings/material/soup/python/misc/context_manager/slides.rst", "trainings/material/soup/python/misc/context_manager/topic.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/pcap-exam.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Embedded Computing 2021", "SS2023", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-23 - 2023-10-25)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "Interfaces", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++ 03", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Such", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Structured Binding", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "C++ 11", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "Context Managers (Livehacking Tutorial)", "Context Managers (Slideshow)", "Context Managers (the <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement) (<em>incomplete</em>)", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "PCAP Exam", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 22, 146, 149, 217, 411, 1045, 1047, 1051, 1053], "j\u00f6rg": [0, 22, 150, 184, 192, 196, 211, 214, 217, 227, 230, 245, 266, 272, 293, 294, 296, 298, 363, 437, 953, 956, 994, 1018, 1045, 1046, 1047, 1048, 1051, 1052, 1053], "faschingbau": [0, 11, 22, 35, 48, 57, 60, 114, 131, 138, 139, 147, 165, 168, 169, 171, 172, 173, 174, 184, 191, 196, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 245, 252, 262, 266, 272, 277, 293, 294, 296, 299, 302, 307, 363, 394, 411, 416, 429, 436, 437, 470, 486, 542, 588, 617, 618, 619, 620, 621, 622, 639, 785, 786, 793, 795, 800, 814, 830, 843, 849, 874, 911, 953, 956, 957, 969, 970, 972, 973, 974, 976, 977, 979, 985, 1007, 1034, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1055, 1064, 1067, 1073, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1087, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "offic": [0, 30, 137, 153], "co": [0, 11, 30, 35, 114, 128, 139, 168, 169, 171, 172, 173, 174, 235, 252, 256, 302, 307, 409, 416, 635, 957, 979, 1055, 1073, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1087, 1105, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "43": [0, 6, 135, 142, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 296, 297, 386, 399, 411, 570, 640, 690, 706, 840, 849, 862, 864, 903, 966], "0": [0, 6, 20, 22, 30, 59, 61, 105, 108, 109, 116, 118, 128, 131, 133, 134, 135, 137, 143, 147, 151, 152, 153, 154, 155, 165, 168, 170, 172, 175, 180, 182, 183, 184, 185, 188, 191, 192, 193, 196, 197, 201, 204, 205, 207, 210, 212, 214, 217, 220, 223, 224, 227, 230, 232, 233, 235, 237, 242, 245, 248, 249, 250, 252, 256, 260, 261, 262, 266, 272, 279, 288, 294, 295, 296, 297, 298, 299, 302, 324, 325, 327, 329, 331, 333, 334, 335, 337, 344, 345, 347, 348, 349, 357, 360, 362, 363, 369, 370, 372, 375, 390, 391, 392, 393, 395, 396, 399, 400, 403, 405, 409, 411, 412, 415, 419, 420, 422, 425, 428, 429, 434, 436, 439, 441, 448, 449, 451, 453, 454, 455, 456, 458, 459, 460, 463, 464, 467, 468, 469, 473, 476, 477, 481, 483, 484, 485, 486, 487, 495, 501, 502, 510, 513, 519, 522, 529, 530, 531, 533, 534, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 552, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 592, 594, 598, 599, 601, 602, 604, 605, 607, 609, 611, 616, 617, 618, 619, 620, 621, 622, 623, 627, 631, 632, 635, 638, 639, 640, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 669, 671, 672, 674, 676, 677, 679, 681, 685, 686, 688, 689, 690, 691, 696, 699, 701, 705, 709, 713, 716, 717, 721, 724, 736, 738, 748, 771, 772, 774, 789, 793, 795, 800, 803, 814, 815, 818, 840, 842, 843, 844, 849, 855, 858, 862, 863, 864, 873, 875, 878, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 894, 896, 898, 899, 905, 913, 914, 916, 918, 919, 920, 922, 925, 926, 929, 930, 932, 933, 935, 944, 947, 948, 950, 952, 954, 955, 958, 960, 964, 966, 968, 981, 984, 985, 986, 987, 991, 993, 995, 998, 1000, 1001, 1002, 1006, 1008, 1010, 1011, 1013, 1016, 1017, 1018, 1023, 1025, 1034, 1044, 1051, 1053, 1059, 1060, 1061, 1064, 1071, 1072, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1088, 1093, 1095, 1100, 1105], "664": [0, 207, 803], "5783814": 0, "gpg": 0, "kei": [0, 8, 30, 40, 95, 99, 100, 106, 111, 127, 129, 131, 143, 151, 160, 165, 170, 172, 173, 175, 180, 182, 184, 187, 188, 189, 191, 196, 197, 199, 201, 202, 204, 205, 207, 212, 214, 215, 217, 220, 224, 227, 229, 230, 234, 238, 241, 242, 245, 247, 248, 252, 262, 265, 266, 268, 269, 271, 272, 296, 299, 302, 307, 335, 383, 583, 585, 588, 627, 676, 711, 785, 786, 793, 850, 854, 866, 867, 868, 870, 875, 956, 960, 969, 987, 988, 1004, 1013, 1023, 1024, 1046, 1048, 1056, 1067, 1080, 1081, 1088, 1113, 1119], "prankergass": [0, 191, 212, 830], "33": [0, 6, 129, 142, 154, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 249, 252, 256, 262, 266, 272, 296, 297, 298, 411, 432, 789, 830, 932, 1060, 1061], "8020": [0, 191, 207, 212, 250, 411, 785, 786, 824, 830], "graz": [0, 1, 3, 22, 57, 60, 115, 173, 191, 250, 319, 411, 785, 786, 824, 830, 1055], "uid": [0, 212, 217, 220, 302, 307, 709, 785, 786, 793, 803, 875, 890, 946, 1034], "vat": [0, 176, 1123], "atu63522469": 0, "write": [0, 12, 15, 26, 28, 35, 41, 46, 51, 52, 53, 54, 55, 57, 60, 61, 64, 68, 76, 95, 112, 132, 133, 134, 143, 148, 152, 165, 168, 169, 171, 172, 173, 184, 189, 191, 192, 193, 194, 199, 201, 202, 205, 208, 210, 212, 218, 220, 229, 232, 239, 241, 248, 258, 265, 271, 283, 288, 291, 293, 302, 304, 306, 308, 313, 329, 332, 333, 338, 350, 352, 374, 385, 389, 395, 396, 399, 409, 411, 434, 437, 449, 451, 454, 465, 474, 475, 486, 487, 489, 494, 505, 511, 516, 522, 527, 529, 530, 533, 543, 545, 592, 599, 608, 611, 613, 627, 632, 643, 655, 667, 676, 682, 691, 705, 709, 710, 711, 717, 719, 729, 731, 738, 742, 758, 774, 785, 786, 789, 795, 800, 801, 803, 804, 805, 806, 812, 814, 816, 819, 837, 849, 851, 854, 858, 862, 863, 864, 871, 878, 880, 881, 882, 885, 887, 888, 889, 890, 892, 893, 894, 895, 896, 898, 899, 902, 906, 912, 916, 925, 926, 929, 930, 934, 937, 940, 958, 969, 974, 975, 979, 1002, 1003, 1008, 1013, 1014, 1015, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1029, 1030, 1032, 1034, 1036, 1037, 1038, 1040, 1041, 1045, 1047, 1050, 1054, 1056, 1072, 1083, 1086, 1093, 1094, 1095, 1113, 1114, 1126], "review": [0, 133, 156, 167, 261, 326], "http": [0, 3, 4, 7, 12, 19, 22, 30, 35, 37, 42, 57, 59, 60, 83, 104, 111, 116, 118, 128, 136, 137, 138, 139, 143, 147, 149, 151, 159, 160, 161, 162, 168, 169, 172, 173, 181, 186, 192, 194, 195, 201, 207, 208, 210, 217, 218, 220, 224, 232, 237, 239, 248, 251, 257, 258, 259, 261, 265, 271, 275, 276, 301, 302, 307, 322, 470, 484, 505, 547, 607, 680, 684, 689, 714, 729, 731, 735, 758, 759, 857, 859, 862, 898, 944, 946, 1001, 1011, 1065, 1070, 1072, 1086, 1088, 1089], "g": [0, 30, 46, 61, 95, 111, 112, 135, 139, 143, 147, 152, 153, 155, 165, 180, 184, 193, 197, 201, 204, 207, 212, 214, 217, 220, 224, 242, 248, 256, 272, 324, 344, 348, 351, 354, 359, 365, 366, 367, 369, 372, 387, 391, 399, 403, 404, 411, 412, 414, 417, 423, 424, 437, 441, 449, 470, 483, 486, 529, 533, 534, 563, 583, 601, 602, 631, 635, 638, 640, 649, 669, 690, 698, 702, 709, 717, 736, 758, 777, 796, 803, 818, 840, 847, 850, 857, 875, 884, 894, 914, 916, 918, 929, 930, 932, 933, 934, 935, 946, 951, 953, 955, 963, 975, 977, 978, 996, 997, 1001, 1002, 1068, 1072, 1083, 1095, 1100, 1116], "page": [0, 31, 37, 59, 70, 72, 76, 104, 111, 127, 128, 129, 131, 132, 134, 135, 139, 144, 164, 169, 172, 193, 218, 248, 274, 309, 333, 334, 337, 382, 393, 433, 470, 711, 717, 736, 742, 744, 756, 782, 785, 786, 802, 851, 855, 864, 875, 885, 888, 916, 1063], "r": [0, 6, 12, 30, 36, 41, 59, 135, 137, 138, 142, 143, 151, 153, 154, 155, 164, 165, 168, 170, 171, 175, 180, 182, 185, 188, 191, 193, 197, 198, 201, 204, 207, 210, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 249, 250, 252, 262, 266, 272, 294, 297, 302, 311, 323, 344, 369, 399, 411, 418, 432, 451, 452, 481, 485, 549, 576, 679, 687, 709, 722, 731, 736, 754, 758, 759, 789, 795, 800, 803, 814, 817, 818, 820, 840, 847, 855, 862, 863, 864, 866, 867, 875, 886, 889, 890, 898, 932, 933, 934, 944, 946, 947, 954, 975, 980, 983, 989, 1000, 1006, 1011, 1043, 1072, 1095, 1131], "ctb02zug3crheb0": 0, "geboren": [1, 22], "am": [1, 3, 6, 16, 30, 35, 57, 60, 63, 105, 114, 132, 133, 134, 135, 137, 138, 139, 140, 141, 151, 164, 176, 185, 221, 225, 252, 540, 677, 758, 797, 846, 851, 864, 873, 875, 890, 1000, 1107, 1108, 1110, 1123, 1126, 1130], "19": [1, 6, 22, 111, 142, 144, 153, 154, 155, 164, 170, 173, 175, 180, 182, 184, 185, 188, 191, 196, 197, 201, 204, 207, 208, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 295, 296, 297, 299, 307, 310, 319, 387, 411, 418, 687, 818, 840, 864, 935, 944, 976, 982, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1055, 1060, 1061, 1068, 1076, 1088, 1093, 1095], "6": [1, 6, 30, 59, 61, 107, 112, 133, 135, 143, 147, 149, 152, 153, 154, 155, 165, 170, 172, 177, 180, 182, 183, 185, 188, 191, 192, 193, 195, 198, 200, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 231, 233, 242, 245, 249, 252, 256, 262, 266, 272, 294, 295, 297, 298, 302, 326, 327, 349, 386, 392, 403, 448, 449, 488, 489, 490, 491, 503, 522, 529, 531, 534, 537, 538, 541, 543, 546, 547, 548, 549, 567, 568, 569, 570, 576, 607, 608, 644, 690, 709, 814, 837, 840, 844, 849, 855, 862, 863, 864, 878, 886, 899, 932, 944, 946, 949, 955, 958, 964, 987, 988, 991, 993, 995, 1011, 1017, 1034, 1041, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1060, 1061, 1068, 1072, 1086, 1088, 1093, 1094, 1095, 1100, 1124], "1966": [1, 22, 173, 207, 217, 227, 230, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1068], "diplom": [1, 22], "au": [1, 7, 22, 30, 140, 141, 149, 150, 151, 155, 165, 176, 186, 188, 195, 211, 214, 220, 221, 223, 235, 272, 297, 302, 303, 320, 1108, 1110, 1111, 1112, 1117, 1123, 1126], "technisch": [1, 22, 320, 1125], "mathematik": [1, 22], "an": [1, 3, 12, 16, 20, 22, 27, 36, 38, 41, 43, 44, 46, 52, 53, 55, 56, 57, 60, 67, 71, 72, 76, 80, 81, 83, 90, 105, 106, 108, 109, 111, 120, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 162, 164, 165, 168, 170, 171, 172, 175, 183, 184, 188, 189, 191, 192, 193, 194, 196, 199, 201, 204, 205, 208, 209, 210, 212, 215, 217, 218, 220, 224, 230, 232, 233, 237, 239, 241, 248, 251, 254, 256, 257, 258, 259, 261, 265, 266, 276, 283, 288, 289, 313, 319, 321, 325, 327, 331, 334, 335, 348, 357, 365, 369, 372, 375, 376, 387, 390, 391, 392, 393, 395, 398, 405, 409, 411, 415, 418, 424, 427, 428, 429, 432, 433, 437, 438, 439, 448, 449, 451, 452, 453, 454, 470, 472, 476, 481, 483, 485, 486, 489, 490, 491, 503, 505, 529, 530, 532, 534, 537, 538, 539, 543, 545, 546, 547, 548, 549, 562, 567, 580, 583, 586, 587, 592, 598, 601, 602, 609, 614, 618, 620, 621, 622, 623, 627, 628, 631, 635, 639, 648, 654, 667, 669, 677, 679, 686, 687, 689, 690, 691, 697, 709, 710, 711, 712, 717, 722, 724, 727, 729, 736, 758, 766, 771, 784, 785, 786, 790, 791, 795, 803, 812, 817, 818, 821, 824, 843, 845, 855, 862, 864, 866, 867, 872, 875, 880, 881, 882, 883, 885, 889, 890, 891, 892, 896, 898, 899, 905, 911, 913, 914, 917, 918, 919, 920, 926, 930, 932, 933, 938, 942, 947, 948, 951, 952, 955, 961, 962, 963, 967, 972, 973, 975, 977, 978, 979, 983, 984, 985, 987, 991, 997, 1006, 1007, 1008, 1011, 1013, 1026, 1032, 1033, 1034, 1050, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1071, 1072, 1075, 1080, 1081, 1085, 1088, 1093, 1094, 1096, 1105, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1126, 1127, 1131], "der": [1, 3, 6, 7, 10, 62, 128, 140, 141, 142, 146, 149, 150, 151, 152, 155, 157, 159, 165, 167, 176, 177, 178, 181, 182, 185, 186, 188, 191, 195, 211, 212, 214, 220, 223, 224, 227, 235, 294, 302, 307, 1107, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "tu": [1, 22], "iicm": [1, 22], "1993": [1, 22], "universit\u00e4tsassist": [1, 22], "ebendort": [1, 22], "bi": [1, 3, 22, 30, 140, 141, 165, 175, 272, 1108, 1127], "1998": [1, 3, 22, 143, 151, 207, 528], "vorlesungen": 1, "programmieren": [1, 151, 155, 303, 319, 1112, 1117, 1120, 1124, 1126, 1130, 1131], "basi": [1, 3, 6, 23, 76, 156, 164, 185, 194, 208, 220, 254, 297, 372, 1116, 1127, 1128], "c": [1, 3, 4, 8, 11, 20, 22, 36, 40, 41, 61, 63, 70, 71, 72, 76, 83, 85, 104, 107, 117, 127, 128, 131, 132, 133, 134, 135, 138, 145, 148, 150, 152, 160, 161, 165, 170, 171, 177, 180, 182, 187, 188, 191, 192, 201, 204, 205, 207, 211, 212, 214, 217, 220, 224, 227, 232, 233, 242, 245, 252, 258, 262, 266, 272, 275, 288, 297, 301, 303, 304, 309, 315, 316, 319, 321, 322, 323, 324, 325, 327, 331, 333, 335, 336, 337, 340, 343, 345, 347, 348, 349, 351, 355, 359, 360, 363, 364, 365, 366, 367, 371, 373, 375, 376, 377, 381, 382, 384, 385, 387, 388, 389, 391, 392, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 412, 415, 416, 417, 418, 421, 422, 423, 428, 429, 431, 432, 437, 441, 447, 449, 452, 458, 470, 473, 476, 477, 478, 479, 480, 482, 483, 485, 486, 488, 494, 528, 530, 532, 533, 534, 535, 539, 540, 541, 545, 546, 548, 550, 553, 558, 563, 565, 566, 570, 572, 576, 578, 580, 582, 583, 584, 585, 588, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 629, 635, 636, 640, 641, 642, 643, 644, 648, 654, 655, 666, 667, 668, 670, 671, 672, 673, 674, 675, 678, 679, 680, 681, 683, 684, 686, 687, 689, 690, 691, 692, 693, 695, 700, 701, 708, 709, 711, 712, 714, 717, 721, 722, 726, 727, 731, 733, 736, 738, 748, 758, 760, 761, 766, 774, 777, 782, 784, 790, 795, 797, 800, 815, 818, 840, 846, 849, 855, 856, 862, 863, 864, 876, 880, 881, 882, 887, 888, 889, 890, 891, 900, 903, 908, 916, 919, 921, 922, 925, 928, 929, 930, 932, 933, 934, 940, 942, 944, 948, 949, 950, 951, 953, 954, 978, 986, 987, 995, 996, 1000, 1006, 1013, 1070, 1071, 1075, 1094, 1095, 1102, 1105, 1115, 1117, 1118, 1120, 1126, 1127, 1128, 1129, 1130, 1131], "und": [1, 3, 4, 5, 6, 7, 35, 37, 125, 140, 141, 146, 150, 151, 155, 157, 159, 167, 171, 177, 181, 183, 185, 190, 192, 196, 201, 212, 216, 217, 222, 224, 228, 234, 235, 252, 262, 272, 297, 298, 302, 307, 319, 321, 357, 365, 798, 845, 846, 865, 1107, 1108, 1109, 1110, 1111, 1115, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "\u00fcbertragungsprotokol": [1, 145], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 22], "2001": [1, 3, 22, 201, 207, 217, 220, 245], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 41, 70, 71, 72, 76, 104, 111, 112, 145, 168, 181, 183, 192, 211, 218, 219, 222, 248, 252, 258, 260, 261, 265, 306, 315, 316, 411, 433, 475, 527, 528, 535, 598, 599, 602, 604, 605, 627, 691, 711, 750, 760, 957, 971, 1113, 1116], "design": [1, 3, 19, 22, 51, 55, 72, 76, 78, 80, 83, 104, 112, 128, 129, 132, 145, 148, 168, 194, 195, 211, 257, 259, 310, 319, 321, 348, 378, 398, 399, 402, 410, 419, 426, 427, 428, 429, 431, 432, 434, 436, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 475, 483, 485, 527, 528, 534, 536, 552, 624, 673, 686, 690, 691, 693, 709, 711, 712, 863, 932, 1051, 1094, 1112, 1115], "analys": [1, 3, 145, 1110], "ration": [1, 3, 36, 138], "rose": [1, 3, 30], "f\u00fcr": [1, 3, 62, 140, 141, 146, 150, 152, 155, 176, 177, 188, 195, 211, 223, 235, 249, 302, 307, 319, 321, 820, 1107, 1108, 1110, 1117, 1123, 1124, 1126, 1129], "java": [1, 8, 175, 176, 187, 199, 208, 588, 601, 686, 691, 698, 968, 981, 987, 996, 1123, 1131], "releasemanag": [1, 3, 22, 145, 1125], "cv": [1, 3, 22, 30, 128, 202, 1125], "subvers": [1, 3, 148, 321, 840], "systemnah": [1, 3, 22, 127, 145, 922, 925, 929, 1126], "programmierung": [1, 3, 4, 5, 7, 22, 125, 145, 199, 226, 235, 319, 1108, 1109, 1110, 1112, 1117, 1124, 1126, 1129], "unter": [1, 3, 22, 62, 141, 149, 150, 167, 175, 303, 846, 1108, 1109, 1112, 1117, 1120, 1124, 1127, 1129, 1130], "unix": [1, 70, 71, 72, 76, 95, 129, 132, 161, 184, 248, 288, 302, 303, 304, 315, 316, 320, 337, 391, 437, 611, 702, 709, 711, 715, 717, 750, 783, 784, 785, 800, 802, 814, 842, 845, 851, 855, 858, 863, 875, 900, 916, 926, 982, 1006, 1034, 1108, 1109, 1111, 1115, 1117, 1119, 1120, 1124, 1126, 1127, 1128, 1130], "window": [1, 3, 30, 95, 96, 101, 102, 111, 120, 132, 137, 139, 149, 151, 164, 172, 189, 203, 205, 207, 218, 221, 232, 237, 239, 241, 247, 248, 260, 276, 279, 288, 299, 302, 305, 307, 320, 332, 399, 693, 696, 711, 788, 792, 818, 854, 884, 900, 905, 980, 982, 983, 1006, 1056, 1095], "nt": 1, "salomon": [1, 3, 22], "friesach": [1, 3, 22], "bei": [1, 3, 22, 140, 141, 146, 150, 155, 159, 165, 167, 176, 177, 180, 182, 220, 235, 294, 319, 918, 1107, 1108, 1123, 1125], "2006": [1, 3, 22, 207], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 140, 141, 146, 151, 159, 165, 167, 176, 177, 182, 189, 297, 319, 846, 918, 1107, 1108, 1112, 1123, 1124, 1129], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 140, 150, 221, 1110], "softwarearchitekt": 1, "leiter": [1, 22], "abteilung": [1, 176, 1123], "forschung": 1, "entwicklung": [1, 3, 4, 303, 1119, 1125], "atron": [1, 3, 22], "unterpremst\u00e4tten": [1, 3, 22], "2010": [1, 3, 22, 128, 144, 207, 981], "enterpris": 1, "architect": [1, 419, 1087], "softwarearchitektur": [1, 3, 22], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 138, 1125], "massgeblich": 1, "portierung": [1, 3, 4, 145], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 62, 114, 140, 141, 149, 150, 159, 167, 171, 172, 174, 176, 177, 180, 183, 185, 186, 188, 197, 214, 221, 226, 233, 242, 249, 302, 303, 307, 319, 321, 783, 845, 846, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "enea": [1, 3, 132], "os": [1, 3, 132], "nach": [1, 3, 4, 140, 141, 145, 146, 151, 155, 159, 175, 176, 182, 220, 221, 227, 320, 780, 1107, 1123], "linux": [1, 3, 4, 23, 35, 37, 41, 57, 59, 60, 61, 63, 70, 71, 72, 76, 82, 83, 84, 85, 96, 101, 102, 104, 117, 124, 127, 128, 129, 131, 133, 134, 135, 139, 142, 143, 144, 149, 156, 159, 164, 171, 193, 194, 201, 207, 210, 217, 220, 221, 224, 229, 232, 237, 239, 241, 250, 257, 259, 260, 276, 279, 288, 299, 301, 302, 303, 304, 308, 309, 315, 316, 319, 321, 363, 385, 393, 402, 405, 422, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 513, 527, 694, 700, 709, 710, 711, 712, 714, 715, 717, 718, 720, 722, 723, 725, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 762, 763, 764, 767, 768, 769, 772, 773, 775, 776, 778, 779, 781, 783, 784, 785, 786, 792, 794, 796, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 846, 848, 851, 855, 857, 858, 859, 863, 865, 866, 867, 868, 869, 870, 871, 873, 874, 875, 878, 880, 881, 882, 883, 884, 885, 890, 892, 893, 896, 897, 898, 899, 901, 909, 912, 915, 917, 922, 925, 926, 929, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 980, 982, 1044, 1072, 1093, 1096, 1109, 1110, 1111, 1112, 1115, 1117, 1120, 1124], "beteiligt": [1, 22], "seit": [1, 22, 159, 165, 175, 180, 1108, 1117], "april": [1, 3, 22], "selbstst\u00e4ndig": [1, 22], "fh": [1, 22, 95, 104, 107, 108, 109, 111, 115, 137, 184, 299, 301, 302, 307, 308, 310, 475, 486, 507, 527, 535, 550, 610, 624, 711, 788, 792, 807, 813, 832, 838, 854, 939, 942, 1102], "joanneum": [1, 115, 137, 1102], "kapfenberg": 1, "2011": [1, 3, 128, 129, 144, 257, 259, 319, 323, 528, 627], "2015": [1, 22, 192, 218, 256, 319, 634, 1056], "lehrveranstaltung": [1, 303], "im": [1, 3, 7, 28, 30, 36, 88, 140, 141, 150, 151, 155, 159, 164, 165, 167, 168, 171, 173, 176, 177, 180, 182, 186, 188, 189, 195, 196, 199, 202, 203, 205, 208, 211, 215, 216, 217, 223, 224, 226, 228, 229, 231, 244, 246, 251, 253, 254, 258, 260, 261, 264, 265, 267, 270, 271, 273, 279, 288, 289, 290, 291, 292, 293, 302, 307, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1061, 1072, 1073, 1095, 1108, 1111, 1117, 1119, 1123, 1124, 1126, 1127, 1130, 1131], "lehrgang": 1, "softwar": [1, 12, 22, 23, 39, 66, 71, 72, 76, 83, 95, 102, 111, 131, 139, 142, 143, 148, 159, 165, 171, 175, 184, 201, 207, 208, 217, 218, 220, 245, 257, 259, 260, 261, 274, 299, 320, 321, 387, 419, 427, 428, 437, 439, 605, 691, 711, 712, 742, 789, 802, 854, 855, 862, 863, 878, 930, 939, 942, 1011, 1058, 1115, 1116, 1118, 1131], "avl": [1, 22, 129], "2018": [1, 22, 135, 207, 632], "2019": [1, 38, 113, 128, 170, 192, 241, 265, 319, 505, 632, 673, 840, 1055, 1056, 1058], "linuxexpert": [1, 22], "architekt": [1, 22], "build": [1, 4, 16, 27, 38, 40, 42, 48, 70, 71, 72, 76, 82, 85, 95, 102, 106, 111, 116, 122, 128, 132, 137, 138, 144, 148, 159, 162, 172, 193, 210, 213, 237, 239, 241, 248, 257, 259, 262, 269, 274, 275, 305, 308, 309, 320, 321, 324, 365, 378, 393, 405, 417, 418, 419, 421, 423, 433, 447, 453, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 505, 510, 513, 527, 618, 655, 675, 685, 699, 711, 715, 718, 720, 723, 725, 727, 728, 735, 737, 738, 739, 743, 749, 754, 755, 760, 762, 767, 773, 776, 779, 815, 854, 863, 864, 888, 889, 890, 891, 905, 924, 928, 932, 935, 939, 942, 943, 947, 994, 1005, 1011, 1088, 1093, 1099, 1103, 1108, 1113, 1115], "manag": [1, 13, 22, 28, 61, 66, 70, 71, 72, 76, 92, 95, 106, 131, 133, 142, 147, 148, 156, 159, 161, 164, 168, 171, 172, 178, 179, 183, 188, 189, 192, 194, 204, 210, 213, 218, 220, 221, 227, 230, 245, 252, 259, 261, 262, 265, 266, 269, 305, 306, 308, 315, 316, 320, 321, 382, 399, 410, 428, 441, 499, 505, 530, 535, 624, 635, 636, 638, 667, 672, 683, 684, 686, 687, 688, 692, 700, 708, 710, 711, 729, 735, 742, 744, 767, 773, 776, 779, 789, 793, 794, 849, 854, 863, 871, 883, 916, 917, 930, 946, 957, 966, 985, 1009, 1013, 1054, 1055, 1056, 1057, 1058, 1062, 1073, 1075, 1088, 1090, 1092, 1093, 1097, 1102, 1113, 1115, 1118, 1125], "schittstel": 1, "zum": [1, 3, 140, 141, 150, 155, 159, 165, 175, 188, 195, 212, 272, 320, 1108, 1110, 1111, 1112, 1124, 1127, 1129], "weiser": 1, "alter": [1, 167, 168, 218, 241, 320, 531, 539, 845, 1056], "mann": 1, "2020": [1, 22, 111, 112, 113, 128, 129, 135, 139, 140, 144, 147, 151, 170, 172, 207, 319, 486, 487, 635, 648, 785, 786, 865, 874, 892, 981, 1055, 1060, 1102, 1124], "embed": [1, 3, 4, 22, 70, 85, 102, 115, 127, 128, 129, 132, 134, 145, 148, 172, 174, 197, 240, 300, 305, 307, 319, 321, 693, 711, 746, 758, 796, 818, 864, 875, 916, 932, 959, 1000, 1109, 1110, 1111, 1115, 1119, 1120, 1124, 1128], "comput": [1, 22, 27, 28, 30, 70, 82, 85, 99, 115, 135, 174, 224, 233, 257, 259, 287, 300, 302, 305, 307, 319, 328, 401, 406, 407, 432, 529, 539, 542, 548, 581, 677, 690, 702, 711, 780, 787, 855, 863, 865, 866, 873, 900, 914, 917, 981, 1072, 1088, 1118], "electron": [1, 137, 320, 863], "engin": [1, 135, 208, 210, 276, 320, 391, 395, 399, 409, 440, 473, 481, 863, 979, 1131], "kontakt": [2, 22], "curriculum": 2, "vita": 2, "skill": [2, 83, 128, 916, 979], "projekt": [2, 129, 150, 1120, 1124], "stand": [3, 142, 191, 305, 758, 864, 948, 1067], "j\u00e4nner": [3, 22], "2014": [3, 129, 150, 171, 207, 241, 256, 265, 860, 1056], "devicedriv": 3, "die": [3, 6, 7, 35, 43, 44, 45, 49, 53, 54, 57, 60, 62, 128, 141, 146, 149, 150, 151, 152, 155, 159, 165, 167, 175, 176, 178, 180, 182, 185, 186, 188, 191, 195, 204, 211, 214, 217, 220, 223, 224, 227, 252, 297, 302, 303, 307, 320, 321, 455, 469, 711, 845, 846, 918, 1056, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "pci": [3, 179, 711, 735, 736, 797, 854, 862, 898, 1118], "hardwar": [3, 63, 67, 70, 71, 72, 76, 78, 117, 121, 131, 132, 135, 145, 148, 207, 208, 220, 257, 260, 261, 279, 288, 303, 304, 305, 320, 321, 337, 348, 351, 387, 405, 409, 479, 480, 481, 482, 486, 702, 711, 738, 758, 789, 794, 795, 854, 855, 856, 857, 860, 863, 879, 881, 882, 895, 898, 930, 1107, 1116, 1118, 1124], "ein": [3, 6, 7, 35, 140, 141, 146, 149, 150, 151, 152, 155, 157, 159, 167, 171, 172, 174, 175, 176, 178, 180, 182, 183, 185, 186, 188, 189, 191, 195, 197, 201, 204, 205, 211, 212, 214, 217, 220, 221, 223, 224, 227, 235, 242, 245, 252, 262, 266, 272, 294, 297, 302, 307, 320, 321, 365, 493, 784, 845, 846, 918, 986, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1117, 1120, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "messger\u00e4teherstel": 3, "de": [3, 6, 7, 30, 35, 128, 140, 142, 146, 149, 150, 155, 159, 165, 167, 175, 176, 185, 186, 195, 211, 220, 223, 227, 302, 396, 689, 780, 782, 846, 859, 1055, 1084, 1107, 1108, 1109, 1110, 1112, 1117, 1119, 1123, 1124, 1126, 1127, 1129, 1130, 1131], "untenstehenden": 3, "zeit": [3, 141, 176, 1108, 1110, 1130], "dato": 3, "ort": 3, "raum": [3, 155], "anbindung": 3, "verschieden": [3, 22, 165, 320, 1109, 1110, 1111, 1117, 1124, 1129], "hardwareinterfac": 3, "i2c": [3, 4, 63, 76, 79, 83, 117, 120, 132, 133, 159, 172, 248, 305, 308, 313, 320, 426, 456, 515, 516, 524, 711, 758, 854, 861, 863, 898, 1117, 1124], "spi": [3, 4, 76, 132, 150, 159, 320, 515, 516, 524, 856, 857, 858, 863, 898, 1117, 1124], "can": [3, 11, 16, 28, 55, 56, 66, 73, 78, 81, 106, 108, 109, 111, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 143, 147, 148, 149, 152, 154, 156, 160, 161, 162, 164, 168, 169, 170, 184, 191, 193, 201, 204, 207, 208, 210, 217, 220, 224, 227, 230, 248, 251, 254, 256, 257, 259, 262, 266, 272, 274, 283, 288, 294, 296, 299, 302, 307, 313, 320, 325, 327, 331, 335, 339, 345, 348, 359, 363, 369, 370, 373, 380, 385, 387, 391, 392, 393, 394, 395, 398, 399, 403, 404, 405, 409, 411, 412, 414, 420, 422, 423, 429, 434, 437, 438, 441, 448, 449, 453, 454, 455, 467, 471, 480, 487, 513, 519, 529, 531, 536, 538, 539, 544, 545, 552, 563, 567, 583, 584, 589, 598, 602, 605, 609, 614, 619, 621, 622, 623, 632, 634, 637, 638, 639, 640, 644, 649, 673, 676, 677, 679, 685, 686, 689, 690, 691, 694, 697, 699, 707, 709, 711, 717, 729, 744, 748, 752, 756, 758, 763, 766, 772, 784, 785, 786, 789, 790, 791, 793, 795, 796, 797, 798, 800, 801, 803, 808, 810, 812, 814, 816, 818, 819, 854, 855, 861, 862, 863, 864, 867, 869, 871, 873, 874, 875, 882, 884, 888, 892, 901, 903, 914, 917, 918, 926, 930, 934, 944, 949, 951, 953, 954, 955, 956, 958, 959, 960, 963, 966, 967, 968, 975, 976, 978, 979, 984, 987, 988, 991, 996, 998, 1004, 1006, 1008, 1011, 1013, 1020, 1030, 1041, 1051, 1052, 1053, 1055, 1061, 1063, 1065, 1071, 1072, 1078, 1080, 1085, 1088, 1093, 1113, 1115, 1117, 1124, 1128, 1130], "custom": [3, 26, 28, 30, 37, 95, 117, 121, 125, 128, 132, 135, 137, 138, 144, 148, 161, 169, 171, 173, 201, 207, 210, 217, 220, 221, 248, 250, 257, 259, 288, 289, 290, 291, 293, 301, 302, 320, 409, 414, 433, 447, 475, 478, 481, 483, 485, 505, 527, 529, 535, 600, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 655, 657, 667, 672, 683, 692, 700, 708, 710, 711, 731, 758, 874, 905, 930, 1055, 1101], "firmwar": [3, 120, 132, 133, 135, 142, 151, 855, 862, 898], "kunden": [3, 22, 146, 250, 320, 1107], "dezemb": [3, 22], "2012": [3, 22, 128, 144, 207], "backport": 3, "integr": [3, 15, 22, 36, 41, 129, 137, 139, 147, 159, 164, 184, 274, 304, 309, 310, 311, 399, 425, 428, 432, 644, 731, 740, 797, 818, 855, 857, 863, 864, 1084, 1093, 1096, 1115, 1117, 1124], "touchcontrol": 3, "driver": [3, 76, 83, 117, 120, 132, 135, 137, 145, 148, 149, 248, 303, 304, 319, 321, 405, 711, 712, 714, 715, 717, 718, 719, 720, 721, 722, 723, 725, 727, 728, 729, 730, 732, 733, 734, 737, 738, 739, 741, 742, 743, 745, 747, 749, 751, 752, 753, 755, 757, 758, 759, 762, 764, 767, 769, 773, 776, 779, 789, 794, 797, 854, 863, 864, 884, 898, 1108, 1128, 1130], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 41, 63, 106, 108, 109, 120, 132, 136, 138, 143, 147, 191, 201, 207, 214, 217, 220, 224, 230, 257, 266, 335, 342, 344, 348, 357, 414, 418, 451, 536, 589, 687, 697, 701, 709, 740, 742, 750, 758, 791, 800, 805, 806, 818, 863, 864, 886, 888, 889, 890, 892, 947, 948, 956, 998, 1084, 1095], "2013": [3, 22, 128, 319], "python": [3, 4, 5, 6, 9, 12, 20, 22, 23, 27, 28, 38, 59, 63, 70, 72, 76, 83, 89, 90, 115, 116, 127, 128, 129, 145, 147, 148, 151, 153, 161, 176, 177, 181, 184, 185, 186, 188, 191, 193, 200, 201, 207, 216, 217, 220, 224, 227, 248, 250, 259, 288, 289, 290, 291, 292, 293, 297, 298, 301, 303, 304, 309, 310, 311, 315, 316, 317, 319, 321, 333, 485, 626, 644, 663, 675, 681, 698, 711, 712, 818, 840, 854, 856, 861, 862, 903, 951, 952, 953, 954, 956, 958, 959, 961, 962, 963, 965, 966, 967, 968, 971, 975, 976, 982, 986, 990, 991, 997, 999, 1001, 1002, 1004, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1074, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1091, 1092, 1093, 1095, 1096, 1097, 1113, 1117, 1123, 1124, 1131], "programm": [3, 57, 60, 150, 151, 155, 164, 175, 180, 184, 188, 220, 245, 257, 258, 259, 297, 303, 320, 369, 382, 389, 395, 399, 529, 531, 532, 601, 635, 669, 672, 794, 800, 851, 863, 884, 918, 979, 980, 984, 1006, 1063, 1073, 1087, 1110, 1113, 1118, 1126, 1127, 1129, 1131], "zur": [3, 140, 155, 159, 167, 177, 188, 297, 302, 307, 320, 918, 1108, 1110, 1111, 1112, 1124, 1129, 1130, 1131], "IT": [3, 248, 250, 533], "wie": [3, 140, 141, 149, 150, 151, 155, 159, 165, 167, 175, 180, 183, 190, 214, 297, 320, 1107, 1108, 1110, 1111, 1112, 1117, 1120, 1124, 1125, 1127, 1129, 1130], "beispiel": [3, 22, 151, 175, 176, 198, 204, 225, 320, 1110, 1111, 1112, 1123, 1124, 1126, 1127, 1129, 1131], "e": [3, 6, 30, 35, 36, 40, 46, 61, 95, 111, 112, 135, 137, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 153, 154, 155, 159, 165, 167, 175, 176, 180, 182, 184, 185, 188, 191, 192, 193, 196, 197, 201, 204, 205, 207, 210, 212, 214, 217, 220, 221, 224, 227, 230, 233, 242, 245, 248, 249, 252, 254, 256, 262, 266, 272, 295, 296, 297, 298, 302, 307, 320, 324, 341, 344, 348, 351, 354, 359, 369, 372, 387, 391, 395, 398, 399, 411, 412, 414, 417, 423, 424, 428, 437, 441, 449, 454, 458, 470, 483, 486, 487, 522, 529, 533, 534, 544, 552, 563, 583, 601, 602, 616, 621, 628, 631, 635, 638, 649, 655, 669, 690, 699, 701, 702, 709, 717, 736, 777, 784, 785, 786, 795, 796, 800, 801, 802, 803, 818, 840, 847, 862, 863, 864, 875, 884, 894, 896, 914, 917, 918, 929, 930, 932, 934, 935, 946, 951, 955, 963, 975, 977, 978, 996, 1001, 1002, 1025, 1068, 1072, 1077, 1080, 1083, 1086, 1087, 1093, 1095, 1107, 1108, 1110, 1112, 1116, 1117, 1123, 1124, 1126, 1127, 1129, 1131], "bill": [3, 252], "email": [3, 30, 40, 114, 133, 139, 143, 148, 172, 188, 252, 313, 871, 1072, 1076, 1077, 1078, 1080, 1081, 1082], "kommunik": [3, 22, 1124, 1127, 1129, 1130, 1131], "extrakt": 3, "attach": [3, 153, 201, 207, 217, 220, 432, 740, 863, 916, 1063], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 28, 30, 43, 58, 88, 95, 96, 102, 111, 116, 128, 129, 132, 133, 137, 159, 162, 168, 169, 171, 173, 184, 199, 201, 202, 205, 207, 210, 215, 217, 220, 221, 229, 232, 241, 244, 251, 254, 257, 258, 259, 264, 265, 269, 270, 271, 275, 276, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 415, 416, 422, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 499, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 667, 683, 692, 700, 708, 710, 711, 731, 738, 754, 758, 759, 797, 854, 857, 862, 864, 929, 931, 934, 937, 939, 942, 963, 979, 983, 1009, 1054, 1070, 1077, 1088, 1089, 1096, 1101, 1103], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 13, 22, 35, 43, 71, 76, 78, 95, 99, 100, 106, 108, 109, 111, 128, 129, 132, 133, 138, 139, 143, 145, 147, 148, 149, 150, 156, 159, 161, 162, 172, 184, 189, 192, 199, 201, 204, 205, 209, 210, 215, 217, 218, 220, 227, 230, 236, 237, 238, 245, 247, 252, 257, 262, 265, 266, 268, 299, 302, 303, 304, 305, 306, 307, 313, 315, 316, 319, 321, 355, 364, 371, 375, 377, 381, 384, 388, 395, 396, 397, 401, 402, 406, 407, 409, 414, 417, 419, 432, 433, 440, 453, 475, 486, 527, 562, 605, 629, 667, 700, 701, 702, 708, 709, 710, 711, 714, 717, 729, 731, 750, 756, 758, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 815, 818, 844, 845, 849, 854, 858, 863, 864, 865, 870, 876, 880, 881, 882, 883, 885, 888, 890, 893, 894, 896, 897, 898, 899, 909, 912, 915, 917, 918, 920, 926, 929, 930, 932, 933, 934, 955, 956, 967, 983, 1011, 1056, 1086, 1095, 1109, 1116, 1118, 1119], "auf": [3, 7, 22, 62, 128, 133, 141, 146, 149, 150, 151, 155, 159, 165, 167, 175, 176, 180, 186, 188, 195, 196, 211, 214, 221, 223, 235, 297, 302, 303, 307, 320, 846, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1123, 1127, 1130, 1131], "gentoo": [3, 128, 131, 144, 405, 1108], "updat": [3, 42, 131, 133, 147, 151, 179, 204, 212, 227, 237, 239, 245, 252, 257, 259, 266, 272, 302, 309, 484, 486, 547, 768, 916, 946, 947, 948, 949, 950, 1004, 1006, 1083, 1096, 1102, 1125], "betriebssystem": [3, 1117, 1119, 1124, 1126], "usb": [3, 4, 61, 131, 132, 133, 135, 320, 398, 736, 789, 1117], "touchscreen": 3, "cheat": [3, 31, 63, 172, 184, 402, 655, 818], "detect": [3, 30, 104, 152, 164, 367, 370, 404, 412, 510, 537, 640, 665, 686, 752, 863, 864, 890, 899, 922, 933, 934, 1035], "m\u00fcnzeinwurf": 3, "via": [3, 16, 61, 83, 112, 132, 135, 139, 144, 153, 168, 169, 191, 197, 218, 220, 248, 251, 254, 257, 266, 301, 308, 429, 434, 454, 539, 563, 674, 688, 738, 758, 761, 789, 794, 800, 815, 851, 862, 873, 874, 881, 888, 898, 919, 926, 944, 1010, 1113], "gpio": [3, 4, 57, 60, 63, 70, 71, 72, 76, 82, 111, 129, 248, 257, 292, 305, 307, 311, 711, 735, 760, 762, 767, 773, 776, 779, 854, 859, 863, 895, 899, 1117, 1124], "interrupt": [3, 61, 84, 108, 109, 150, 179, 248, 405, 711, 729, 735, 750, 752, 753, 755, 756, 760, 761, 762, 766, 767, 770, 773, 776, 777, 779, 789, 791, 794, 797, 854, 859, 876, 878, 879, 880, 881, 882, 883, 895, 897, 898, 914, 917, 918, 920, 929, 930, 1117, 1118, 1124], "m\u00e4rz": 3, "firma": [3, 146, 155, 250, 319, 1107, 1117, 1124], "spielo": 3, "intern": [3, 55, 82, 165, 170, 193, 201, 204, 205, 207, 217, 220, 251, 254, 295, 309, 338, 368, 383, 398, 414, 423, 428, 542, 583, 630, 673, 705, 736, 744, 770, 862, 863, 864, 905, 956, 960, 1004, 1013, 1072, 1077], "datenkonvertierung": 3, "einem": [3, 22, 140, 150, 151, 155, 159, 165, 167, 175, 176, 180, 182, 188, 214, 220, 227, 242, 302, 303, 307, 320, 1108, 1110, 1112, 1117, 1126, 1130, 1131], "konvertierung": [3, 22, 1110], "asterix": 3, "format": [3, 16, 22, 28, 29, 40, 49, 51, 52, 53, 54, 88, 114, 135, 151, 152, 154, 155, 162, 169, 171, 173, 176, 180, 189, 192, 199, 200, 202, 208, 213, 214, 218, 220, 221, 226, 229, 230, 241, 244, 245, 250, 264, 265, 266, 270, 271, 273, 279, 325, 326, 331, 367, 411, 711, 712, 758, 789, 795, 818, 878, 932, 971, 979, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1049, 1050, 1051, 1052, 1054, 1056, 1061, 1075, 1088, 1123, 1127], "zweck": [3, 165, 1124], "extern": [3, 12, 20, 22, 28, 61, 83, 131, 135, 139, 161, 164, 171, 193, 194, 199, 210, 215, 220, 229, 250, 265, 275, 302, 307, 335, 339, 365, 367, 369, 371, 377, 381, 384, 388, 392, 397, 401, 406, 407, 416, 417, 513, 629, 667, 673, 708, 710, 711, 715, 718, 720, 723, 725, 728, 731, 735, 736, 737, 739, 743, 749, 755, 758, 762, 767, 768, 773, 776, 779, 854, 864, 914, 980, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1054, 1056, 1100, 1102, 1110, 1117, 1124], "datenquellen": 3, "export": [3, 38, 59, 132, 143, 168, 193, 194, 197, 199, 288, 673, 714, 790, 819, 855, 863, 896, 898, 899, 944, 946, 949, 1047, 1067], "daten": [3, 165, 167, 180, 190, 195, 918, 1130], "soap": [3, 30], "ip": [3, 114, 136, 139, 149, 156, 184, 299, 302, 308, 313, 510, 522, 857, 875, 881, 917, 1088, 1117, 1124, 1128, 1130], "kamera": 3, "einen": [3, 22, 140, 141, 151, 155, 159, 165, 167, 175, 188, 224, 320, 588, 845, 1107, 1108, 1109, 1110, 1112, 1119, 1127, 1129, 1130, 1131], "videomautsystemen": 3, "implement": [3, 15, 22, 23, 27, 40, 48, 51, 52, 53, 57, 60, 61, 67, 80, 82, 83, 95, 108, 109, 111, 117, 132, 134, 137, 152, 160, 168, 170, 188, 193, 194, 201, 207, 211, 214, 215, 217, 218, 222, 224, 239, 245, 254, 257, 258, 259, 260, 261, 266, 279, 289, 290, 295, 302, 313, 336, 338, 370, 380, 382, 383, 399, 409, 414, 421, 424, 425, 427, 428, 429, 431, 432, 433, 436, 437, 439, 448, 449, 453, 454, 455, 470, 474, 476, 477, 478, 479, 480, 482, 483, 484, 488, 489, 490, 491, 493, 495, 500, 503, 504, 528, 530, 534, 538, 546, 547, 548, 549, 554, 583, 589, 598, 600, 601, 602, 609, 617, 618, 619, 620, 621, 622, 623, 624, 630, 635, 636, 637, 639, 649, 664, 665, 666, 667, 673, 674, 676, 685, 689, 691, 693, 699, 705, 706, 709, 710, 711, 717, 724, 727, 744, 772, 789, 791, 795, 797, 855, 862, 864, 875, 878, 884, 900, 905, 926, 950, 954, 955, 960, 961, 962, 968, 972, 996, 1031, 1035, 1044, 1051, 1056, 1068, 1071, 1075, 1113, 1118], "gige": 3, "vision": [3, 250], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 172], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1107], "applik": [3, 149], "august": [3, 22], "logistik": 3, "autom": [3, 171, 184, 215, 229, 271, 320, 855, 866, 873, 946, 948, 956, 1056], "beteiligten": 3, "protokol": [3, 4, 1117, 1124, 1129], "server": [3, 114, 136, 139, 145, 151, 172, 184, 195, 204, 220, 227, 230, 241, 245, 252, 262, 266, 405, 451, 465, 784, 858, 871, 873, 881, 926, 1071, 1088, 1105, 1124], "zu": [3, 7, 140, 141, 146, 149, 150, 155, 159, 165, 176, 177, 180, 182, 186, 195, 196, 211, 212, 221, 223, 227, 235, 242, 302, 307, 320, 780, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "sp": [3, 637], "tcp": [3, 132, 139, 156, 172, 277, 856, 881, 1075, 1117, 1124, 1128, 1130], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 174, 855, 1063], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1117, 1119], "beratend": 3, "versionskontrol": [3, 22, 145, 1125], "architektur": [3, 22, 145, 320], "2008": [3, 143, 207, 981], "ylog": [3, 22], "gmbh": [3, 22, 411], "dobl": [3, 22], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 180], "mit": [3, 4, 6, 7, 22, 128, 140, 141, 149, 150, 151, 155, 157, 159, 167, 171, 172, 176, 177, 178, 181, 182, 185, 186, 188, 195, 196, 197, 198, 211, 220, 221, 223, 224, 227, 235, 266, 298, 302, 303, 307, 319, 321, 845, 1011, 1107, 1109, 1110, 1111, 1112, 1117, 1119, 1123, 1125, 1126, 1127, 1129, 1130, 1131], "iar": 3, "arm": [3, 131, 143, 184, 343, 738, 758, 759, 862, 875, 929, 932, 933, 944], "workbench": 3, "segger": [3, 132], "embo": [3, 132], "vba": 3, "excel": [3, 76, 133, 171, 197, 1047, 1061], "verteilung": 3, "microsoft": [3, 10, 138, 139, 142, 144, 148, 159, 167, 237, 239, 248, 257, 259, 320, 322, 370, 386, 797, 1047, 1107], "net": [3, 22, 37, 41, 111, 112, 118, 149, 150, 175, 227, 233, 410, 486, 487, 752, 758, 785, 786, 846, 881, 1072], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 151, 1126, 1127], "script": [3, 36, 59, 122, 125, 128, 131, 133, 138, 139, 148, 163, 171, 172, 174, 199, 201, 207, 217, 220, 247, 248, 268, 293, 302, 319, 321, 403, 411, 422, 673, 758, 800, 803, 818, 946, 957, 983, 984, 1008, 1011, 1095, 1108, 1119], "shell": [3, 4, 30, 95, 97, 99, 102, 111, 148, 152, 171, 172, 174, 212, 220, 238, 247, 268, 287, 288, 301, 302, 303, 304, 307, 319, 321, 323, 405, 411, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 709, 710, 711, 758, 781, 785, 786, 787, 788, 791, 792, 793, 795, 796, 799, 800, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 833, 834, 835, 836, 846, 847, 848, 851, 854, 855, 865, 866, 867, 868, 869, 877, 883, 884, 885, 893, 895, 898, 899, 909, 912, 915, 917, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 946, 982, 983, 985, 1006, 1008, 1034, 1100, 1108, 1115, 1117, 1119, 1120, 1124, 1125, 1126, 1128], "oststeiermark": 3, "erweiterung": [3, 320], "buildumgebung": 3, "cmake": [3, 4, 42, 63, 70, 71, 72, 76, 85, 95, 104, 111, 129, 138, 143, 148, 159, 162, 194, 210, 237, 239, 257, 259, 305, 319, 321, 322, 413, 415, 417, 418, 421, 422, 423, 424, 425, 433, 447, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 527, 547, 711, 712, 854, 942, 1098, 1120], "www": [3, 19, 22, 57, 60, 83, 128, 138, 147, 149, 169, 172, 173, 218, 245, 322, 689, 714, 729, 735, 759, 898, 1070, 1072, 1086], "org": [3, 4, 22, 59, 118, 124, 128, 131, 135, 139, 143, 149, 151, 162, 172, 175, 192, 201, 207, 208, 217, 220, 224, 245, 258, 306, 322, 714, 729, 731, 735, 758, 759, 898, 944, 946, 980, 1001, 1011, 1050, 1065, 1070, 1088, 1089], "confix": [3, 129], "2009": [3, 1056], "schulungen": [3, 22, 128, 129, 146], "dem": [3, 7, 22, 140, 141, 149, 150, 151, 155, 159, 172, 176, 186, 195, 198, 211, 212, 221, 223, 235, 266, 302, 307, 320, 321, 918, 1107, 1108, 1109, 1111, 1112, 1117, 1119, 1126, 1127, 1129], "umkrei": 3, "softwareentwicklung": [3, 4, 145], "nicht": [3, 6, 22, 35, 140, 141, 146, 149, 155, 159, 176, 177, 180, 185, 188, 207, 212, 214, 220, 227, 233, 252, 262, 297, 302, 320, 846, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1129, 1130, 1131], "from": [3, 7, 12, 20, 26, 31, 32, 33, 34, 37, 42, 51, 52, 54, 59, 61, 63, 66, 71, 72, 76, 79, 80, 82, 84, 88, 95, 96, 97, 99, 100, 101, 104, 107, 108, 109, 111, 112, 114, 121, 125, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 145, 147, 148, 149, 151, 152, 154, 155, 160, 164, 165, 168, 169, 171, 172, 173, 174, 176, 182, 183, 184, 189, 191, 192, 193, 194, 196, 198, 199, 201, 205, 207, 208, 214, 215, 217, 218, 221, 222, 224, 227, 229, 232, 236, 237, 239, 241, 242, 244, 247, 250, 254, 257, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 276, 279, 280, 283, 287, 288, 289, 290, 291, 292, 293, 295, 299, 301, 302, 304, 305, 306, 307, 309, 310, 323, 324, 330, 332, 333, 337, 340, 343, 346, 347, 348, 351, 355, 362, 364, 365, 370, 371, 377, 378, 381, 384, 385, 387, 388, 389, 391, 393, 397, 398, 399, 401, 405, 406, 407, 409, 410, 412, 413, 417, 420, 421, 422, 423, 425, 427, 428, 429, 434, 438, 448, 452, 454, 470, 471, 472, 473, 475, 478, 481, 483, 484, 485, 486, 487, 505, 513, 516, 522, 527, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 544, 545, 547, 548, 558, 562, 563, 580, 592, 599, 602, 604, 610, 613, 620, 624, 627, 628, 629, 631, 635, 640, 644, 649, 655, 661, 666, 667, 679, 681, 685, 686, 687, 688, 691, 693, 699, 701, 706, 707, 708, 709, 710, 711, 712, 713, 714, 717, 727, 729, 733, 738, 740, 746, 750, 758, 759, 760, 761, 766, 768, 770, 778, 783, 784, 785, 786, 789, 790, 793, 794, 795, 797, 800, 801, 802, 808, 810, 815, 817, 818, 819, 820, 821, 823, 824, 837, 842, 850, 851, 854, 855, 857, 858, 859, 860, 863, 864, 867, 871, 875, 878, 879, 880, 881, 882, 885, 888, 890, 891, 893, 895, 898, 901, 906, 911, 912, 917, 918, 920, 929, 930, 935, 944, 946, 948, 950, 955, 956, 957, 960, 963, 964, 965, 966, 967, 968, 971, 975, 978, 979, 980, 983, 984, 987, 990, 999, 1002, 1003, 1005, 1006, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1057, 1058, 1059, 1060, 1062, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1084, 1086, 1087, 1088, 1090, 1092, 1093, 1095, 1097, 1100, 1102, 1105, 1116, 1123], "scratch": [3, 40, 164, 862, 1063], "mathia": [3, 1108], "kettner": [3, 128], "novemb": [3, 22], "bodenseo": [3, 1124], "singen": 3, "bodense": [3, 1124], "spielesoftwar": 3, "entwurf": [3, 22], "systemschnittstellen": [3, 1126], "driverentwicklung": [3, 145], "powerpc": 3, "vanilla": [3, 135], "kernel": [3, 4, 41, 59, 63, 76, 108, 109, 114, 117, 121, 122, 127, 128, 129, 131, 132, 134, 142, 143, 144, 145, 148, 150, 165, 172, 204, 217, 220, 227, 230, 245, 248, 252, 262, 266, 288, 308, 319, 321, 363, 385, 398, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 723, 725, 727, 728, 729, 730, 737, 738, 739, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 757, 762, 764, 767, 769, 770, 771, 772, 773, 776, 778, 779, 783, 789, 793, 795, 796, 797, 802, 846, 851, 854, 858, 860, 861, 863, 864, 875, 878, 881, 882, 884, 887, 898, 900, 901, 914, 916, 917, 920, 925, 929, 930, 932, 1108, 1117, 1128], "abteilungsleitung": 3, "ag": [3, 30, 137, 139, 151, 165, 207, 210, 252, 296, 394, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 711, 783, 932, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084], "realtim": [4, 76, 78, 145, 148, 149, 248, 303, 304, 315, 316, 321, 699, 701, 711, 756, 760, 763, 766, 777, 854, 858, 863, 864, 895, 914, 915, 917, 926, 1127, 1128, 1129], "hardwareintegr": [4, 145], "netzwerkprogrammierung": [4, 1117, 1130], "multithread": [4, 28, 57, 60, 70, 71, 72, 73, 76, 127, 128, 132, 134, 145, 164, 168, 199, 208, 218, 235, 257, 259, 311, 315, 316, 320, 321, 386, 396, 627, 655, 693, 710, 711, 903, 908, 917, 930, 931, 957, 966, 1054, 1056, 1113, 1117, 1128], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 22, 40, 42, 48, 61, 95, 101, 102, 104, 108, 109, 111, 120, 131, 132, 133, 134, 136, 138, 141, 143, 145, 147, 156, 160, 165, 170, 177, 180, 184, 185, 193, 201, 207, 210, 214, 217, 218, 220, 221, 224, 232, 248, 257, 259, 266, 275, 287, 297, 302, 319, 343, 357, 410, 412, 415, 416, 422, 427, 432, 433, 434, 447, 448, 449, 451, 453, 454, 470, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 492, 494, 527, 531, 534, 535, 538, 542, 543, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 605, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 628, 636, 640, 644, 649, 667, 674, 677, 683, 687, 692, 694, 700, 708, 710, 711, 719, 724, 731, 756, 758, 770, 787, 790, 791, 800, 802, 804, 808, 810, 812, 814, 829, 830, 854, 856, 862, 864, 867, 871, 874, 881, 889, 892, 895, 897, 905, 911, 916, 918, 926, 933, 937, 938, 939, 940, 942, 956, 963, 964, 980, 983, 1001, 1003, 1013, 1014, 1024, 1033, 1039, 1044, 1052, 1056, 1068, 1071, 1075, 1083, 1084, 1095, 1096, 1110, 1114, 1117, 1124, 1126], "userspac": [4, 79, 83, 84, 117, 132, 133, 204, 220, 227, 230, 245, 248, 252, 262, 266, 320, 398, 405, 711, 716, 727, 735, 736, 744, 750, 756, 760, 766, 770, 774, 776, 794, 796, 854, 857, 861, 864, 875, 895, 897, 898, 916, 920, 926, 1117, 1118], "host": [4, 106, 131, 138, 143, 299, 313, 738, 759, 856, 862, 933, 935, 944, 1070, 1075, 1088], "devic": [4, 67, 70, 71, 72, 76, 82, 87, 117, 131, 132, 137, 150, 171, 179, 261, 303, 304, 305, 470, 486, 487, 697, 699, 701, 709, 711, 720, 727, 728, 729, 735, 736, 739, 740, 742, 749, 758, 760, 762, 767, 773, 774, 776, 777, 779, 791, 794, 797, 800, 840, 854, 863, 875, 878, 884, 892, 898, 917, 920, 921, 923, 926, 942, 967, 1108, 1117, 1118, 1119, 1124], "libusb": [4, 132], "gadgetf": [4, 132], "modbu": [4, 149], "verschiedenen": [4, 22, 159, 176, 1110, 1111, 1123, 1129], "rto": [4, 132], "yocto": [4, 117, 121, 122, 143, 711, 758, 852, 935, 1108], "programmiersprachen": [4, 7, 176, 186, 195, 211, 223, 1112, 1129], "incl": [4, 22, 129, 1119], "buildsystem": 4, "autoconf": [4, 59, 143], "automak": [4, 138, 143, 946, 1120], "meson": [4, 138, 143, 924, 928, 946], "ninja": [4, 30, 143, 412, 934, 946], "make": [4, 12, 16, 41, 42, 43, 59, 61, 63, 66, 68, 76, 78, 107, 117, 122, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 148, 152, 153, 156, 160, 161, 164, 168, 169, 170, 174, 183, 184, 191, 193, 194, 205, 208, 220, 224, 237, 239, 261, 266, 269, 274, 302, 305, 321, 354, 366, 370, 378, 385, 387, 389, 399, 405, 409, 412, 413, 414, 418, 420, 421, 423, 425, 427, 428, 429, 432, 448, 449, 454, 455, 472, 485, 487, 499, 505, 510, 516, 534, 545, 547, 549, 552, 564, 599, 601, 614, 627, 635, 640, 644, 681, 686, 687, 691, 701, 705, 706, 719, 726, 727, 731, 733, 736, 738, 758, 759, 775, 787, 797, 801, 803, 824, 837, 856, 857, 862, 863, 864, 885, 888, 890, 911, 914, 916, 918, 920, 925, 929, 932, 944, 946, 947, 948, 949, 953, 957, 960, 963, 975, 1006, 1013, 1026, 1034, 1061, 1077, 1115, 1116, 1126], "perl": [4, 143, 669, 847, 983], "leider": [4, 140, 207, 220, 227, 242, 1108, 1110], "objektorientiert": [4, 320, 1112], "ooa": 4, "ood": 4, "unit": [4, 70, 71, 72, 76, 80, 82, 95, 104, 111, 112, 134, 152, 167, 168, 171, 172, 183, 192, 210, 224, 249, 250, 257, 261, 274, 311, 315, 316, 392, 411, 412, 425, 451, 474, 480, 484, 513, 544, 673, 701, 702, 711, 712, 864, 916, 998, 1006, 1056, 1071, 1094, 1115, 1116], "test": [4, 15, 16, 31, 38, 70, 71, 72, 76, 80, 82, 95, 111, 128, 132, 134, 135, 137, 138, 139, 145, 148, 151, 152, 158, 159, 160, 163, 167, 168, 171, 183, 189, 192, 205, 207, 208, 210, 220, 237, 239, 259, 266, 275, 311, 313, 315, 321, 322, 334, 396, 409, 410, 416, 420, 427, 428, 429, 430, 431, 432, 433, 436, 437, 439, 440, 449, 451, 452, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 510, 522, 524, 529, 530, 531, 542, 543, 545, 546, 548, 549, 607, 618, 619, 620, 621, 622, 623, 632, 634, 637, 638, 639, 670, 676, 681, 685, 686, 687, 688, 690, 705, 706, 707, 709, 711, 712, 716, 748, 758, 761, 763, 766, 774, 818, 856, 857, 862, 885, 940, 948, 979, 988, 998, 1002, 1005, 1025, 1050, 1056, 1062, 1063, 1071, 1079, 1086, 1099, 1101, 1103, 1106, 1116], "driven": [4, 43, 69, 76, 80, 132, 145, 148, 159, 168, 183, 210, 248, 250, 276, 321, 409, 436, 546, 548, 549, 916, 922, 923, 1084, 1093, 1116], "develop": [4, 20, 43, 69, 71, 76, 78, 80, 101, 102, 133, 135, 137, 138, 139, 143, 145, 148, 156, 159, 167, 168, 171, 176, 183, 189, 194, 195, 202, 204, 205, 210, 215, 240, 245, 250, 275, 276, 301, 303, 304, 313, 319, 321, 387, 399, 405, 409, 414, 422, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 527, 546, 548, 549, 602, 626, 700, 710, 711, 712, 715, 718, 720, 721, 723, 725, 728, 730, 731, 732, 734, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 758, 759, 762, 764, 767, 769, 773, 776, 779, 788, 791, 792, 794, 797, 854, 856, 857, 877, 883, 885, 893, 895, 909, 912, 915, 917, 933, 934, 937, 938, 939, 940, 941, 943, 949, 981, 1011, 1013, 1056, 1093, 1094, 1115, 1128], "gui": [4, 131, 137, 143, 147, 210, 309, 310, 797, 900, 1126], "gtk": [4, 128], "qt": 4, "sampl": [5, 111, 132, 143, 189, 192, 193, 205, 209, 215, 221, 224, 241, 257, 288, 405, 473, 699, 905, 925, 1008], "log": [5, 94, 129, 137, 138, 147, 154, 159, 162, 171, 191, 201, 207, 217, 220, 248, 250, 262, 301, 414, 415, 434, 691, 721, 758, 787, 794, 796, 818, 855, 857, 863, 865, 869, 871, 874, 875, 1055, 1058, 1088, 1102], "record": [5, 28, 38, 51, 127, 128, 136, 138, 139, 165, 176, 177, 183, 193, 198, 205, 221, 241, 256, 276, 293, 305, 404, 405, 711, 857, 951, 956, 971, 1013, 1015, 1034, 1045, 1046, 1047, 1048, 1049, 1051, 1054, 1067, 1123], "grundlagen": [5, 7, 22, 125, 226, 265, 319, 1110, 1112, 1119, 1120, 1123, 1124, 1126, 1127, 1130], "anhand": [5, 150, 159, 172, 174, 176, 177, 226, 319, 321, 1109, 1115, 1123, 1128], "12": [5, 6, 7, 38, 61, 104, 111, 114, 128, 137, 142, 143, 144, 153, 154, 158, 165, 170, 176, 177, 180, 182, 185, 188, 191, 192, 196, 197, 198, 201, 204, 205, 209, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 248, 249, 250, 252, 256, 262, 266, 272, 277, 296, 297, 301, 315, 316, 319, 387, 411, 412, 420, 505, 638, 644, 677, 709, 789, 800, 803, 818, 840, 842, 849, 862, 864, 866, 890, 898, 916, 932, 944, 946, 947, 953, 959, 987, 998, 1055, 1058, 1060, 1061, 1088, 1099, 1123], "13": [5, 6, 61, 104, 115, 125, 135, 137, 144, 151, 153, 154, 165, 170, 173, 177, 180, 182, 185, 188, 191, 196, 198, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 250, 253, 256, 262, 266, 272, 277, 297, 298, 319, 403, 410, 415, 418, 529, 644, 686, 722, 800, 840, 863, 888, 898, 918, 946, 953, 955, 996, 1007, 1060, 1061, 1088, 1123], "4": [5, 6, 7, 30, 59, 61, 104, 107, 124, 129, 131, 135, 137, 143, 151, 152, 153, 154, 155, 158, 165, 170, 172, 176, 177, 180, 182, 185, 188, 191, 192, 196, 197, 198, 199, 201, 202, 204, 205, 207, 212, 214, 215, 217, 220, 224, 227, 229, 230, 233, 241, 242, 245, 249, 250, 252, 256, 262, 265, 266, 271, 272, 277, 295, 296, 297, 299, 302, 315, 316, 319, 333, 349, 369, 372, 375, 392, 396, 399, 400, 410, 411, 413, 431, 434, 473, 477, 478, 479, 480, 481, 483, 485, 486, 488, 504, 506, 522, 529, 531, 539, 540, 543, 545, 546, 547, 548, 549, 561, 562, 570, 580, 630, 632, 634, 649, 650, 651, 653, 655, 664, 666, 670, 677, 679, 690, 709, 758, 759, 796, 844, 847, 849, 857, 862, 863, 864, 886, 899, 916, 920, 952, 954, 955, 962, 964, 968, 975, 978, 987, 988, 993, 996, 997, 998, 1002, 1003, 1007, 1008, 1010, 1011, 1013, 1017, 1030, 1034, 1045, 1047, 1051, 1053, 1056, 1060, 1061, 1063, 1072, 1076, 1077, 1078, 1080, 1081, 1083, 1088, 1093, 1108, 1123], "2021": [5, 9, 22, 113, 125, 142, 144, 180, 182, 191, 197, 198, 201, 206, 209, 232, 299, 301, 315, 316, 319, 505, 648, 673, 814, 818, 840, 841, 918, 932, 946, 982], "templat": [5, 63, 72, 104, 159, 194, 235, 257, 262, 304, 305, 413, 475, 494, 527, 528, 572, 578, 582, 583, 590, 591, 592, 594, 612, 619, 620, 621, 622, 623, 624, 631, 637, 642, 645, 646, 647, 648, 652, 653, 655, 658, 685, 689, 691, 699, 701, 709, 711, 903, 1112, 1114], "descript": [5, 7, 37, 104, 116, 134, 135, 147, 148, 164, 168, 169, 171, 172, 173, 174, 179, 194, 199, 201, 205, 207, 210, 217, 220, 224, 236, 237, 240, 274, 275, 321, 414, 424, 432, 442, 443, 444, 445, 446, 450, 460, 484, 679, 686, 687, 688, 697, 699, 701, 709, 758, 770, 782, 784, 793, 818, 820, 840, 847, 850, 851, 864, 876, 884, 934, 946, 997, 1011, 1034, 1095, 1116], "sidebar": [5, 16, 63, 129, 770], "metadata": [5, 27, 37, 128, 147, 245, 790, 793, 863, 866, 892, 954, 1118], "einr\u00fcckung": [6, 177, 185], "ist": [6, 7, 140, 141, 146, 149, 150, 151, 155, 159, 167, 175, 176, 180, 182, 185, 186, 188, 191, 195, 197, 201, 204, 205, 210, 211, 212, 214, 217, 220, 223, 227, 233, 242, 252, 266, 294, 297, 298, 302, 307, 320, 365, 918, 1077, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "wichtig": [6, 185, 235, 302, 307, 1131], "1": [6, 30, 37, 40, 48, 59, 61, 70, 72, 85, 104, 107, 108, 109, 114, 124, 125, 128, 133, 135, 138, 139, 141, 142, 143, 147, 148, 150, 151, 152, 153, 154, 155, 160, 161, 162, 165, 167, 170, 177, 180, 181, 182, 185, 188, 191, 192, 196, 197, 198, 201, 204, 207, 210, 212, 214, 217, 220, 224, 227, 230, 232, 233, 237, 242, 245, 249, 250, 252, 256, 262, 266, 272, 275, 277, 287, 288, 294, 295, 296, 297, 298, 299, 300, 302, 305, 307, 315, 316, 319, 333, 334, 356, 363, 372, 376, 378, 386, 403, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 427, 428, 448, 449, 455, 465, 473, 474, 477, 481, 483, 485, 486, 487, 489, 493, 495, 496, 497, 498, 499, 500, 501, 506, 509, 512, 515, 518, 521, 522, 524, 529, 530, 531, 537, 539, 543, 545, 546, 547, 548, 549, 554, 559, 561, 567, 568, 569, 570, 571, 576, 580, 592, 594, 602, 604, 607, 611, 621, 627, 628, 630, 631, 632, 634, 637, 638, 640, 642, 644, 646, 647, 649, 651, 652, 653, 655, 656, 657, 664, 670, 672, 675, 676, 677, 679, 681, 682, 685, 686, 688, 689, 690, 699, 707, 709, 711, 716, 721, 727, 731, 736, 758, 775, 784, 785, 786, 789, 790, 791, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804, 808, 810, 812, 814, 815, 819, 820, 821, 837, 840, 841, 842, 843, 844, 846, 847, 849, 850, 851, 853, 855, 862, 863, 865, 866, 874, 875, 876, 878, 880, 881, 882, 884, 885, 886, 888, 889, 890, 891, 896, 898, 899, 911, 913, 914, 916, 918, 920, 921, 922, 925, 928, 929, 931, 932, 935, 944, 946, 947, 948, 949, 951, 952, 954, 955, 956, 959, 960, 962, 964, 966, 968, 969, 975, 976, 978, 980, 981, 982, 983, 985, 988, 989, 990, 991, 992, 995, 997, 998, 1003, 1008, 1010, 1011, 1013, 1018, 1021, 1024, 1034, 1038, 1041, 1044, 1045, 1047, 1051, 1052, 1053, 1059, 1060, 1061, 1062, 1071, 1076, 1077, 1078, 1080, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1100, 1104, 1107, 1113, 1115, 1116, 1120, 1123, 1125, 1130], "i": [6, 11, 12, 13, 16, 20, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 47, 51, 52, 53, 55, 57, 59, 60, 61, 63, 64, 66, 67, 76, 78, 80, 82, 83, 85, 87, 88, 89, 95, 96, 97, 98, 102, 104, 105, 106, 107, 108, 109, 111, 117, 119, 120, 125, 126, 128, 129, 131, 132, 135, 136, 137, 138, 139, 142, 143, 147, 148, 149, 152, 153, 154, 155, 156, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 180, 182, 183, 184, 185, 188, 189, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 208, 209, 210, 211, 213, 214, 215, 218, 219, 221, 222, 223, 224, 226, 228, 231, 232, 233, 237, 238, 239, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 270, 272, 274, 276, 277, 279, 283, 287, 288, 289, 290, 291, 292, 293, 297, 298, 299, 302, 305, 307, 308, 310, 313, 315, 316, 320, 321, 323, 324, 325, 326, 327, 333, 334, 335, 337, 339, 340, 341, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 359, 360, 361, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 427, 429, 431, 432, 433, 434, 437, 440, 441, 448, 449, 451, 452, 453, 454, 455, 468, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 492, 494, 499, 503, 505, 510, 513, 516, 519, 522, 527, 528, 530, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 554, 557, 558, 562, 563, 564, 565, 566, 567, 568, 570, 571, 576, 580, 583, 584, 585, 587, 589, 592, 594, 599, 601, 602, 607, 608, 609, 611, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 629, 631, 632, 634, 635, 637, 638, 639, 641, 644, 649, 650, 651, 652, 653, 655, 666, 667, 670, 671, 675, 676, 679, 680, 681, 685, 687, 688, 689, 691, 693, 697, 699, 700, 701, 702, 705, 708, 709, 710, 711, 712, 713, 714, 717, 719, 722, 724, 726, 727, 729, 733, 736, 740, 744, 746, 748, 750, 752, 754, 756, 758, 759, 760, 765, 766, 768, 770, 771, 772, 774, 775, 783, 784, 785, 786, 787, 788, 790, 791, 792, 795, 796, 797, 798, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 817, 818, 819, 820, 821, 822, 823, 825, 826, 829, 830, 832, 833, 834, 838, 840, 842, 845, 847, 850, 851, 854, 855, 856, 857, 858, 860, 861, 862, 863, 865, 866, 867, 868, 869, 870, 871, 873, 878, 885, 888, 890, 892, 895, 896, 898, 899, 900, 901, 902, 903, 905, 906, 908, 909, 912, 915, 916, 917, 918, 919, 920, 925, 926, 929, 930, 933, 934, 935, 936, 940, 942, 943, 944, 945, 946, 947, 948, 950, 952, 953, 954, 955, 957, 958, 959, 960, 963, 964, 966, 967, 968, 969, 970, 972, 973, 975, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1010, 1011, 1013, 1014, 1015, 1016, 1018, 1025, 1028, 1031, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1081, 1082, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1096, 1098, 1100, 1102, 1106, 1108, 1110, 1113, 1115, 1116, 1117, 1118, 1126, 1127, 1128, 1130], "41": [6, 137, 142, 153, 154, 165, 175, 180, 182, 185, 188, 191, 193, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 296, 297, 434, 690, 748, 840, 863, 968, 1011, 1013, 1060, 1095], "42": [6, 20, 40, 59, 149, 151, 152, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 298, 344, 370, 372, 373, 375, 378, 386, 391, 393, 399, 413, 423, 428, 432, 449, 451, 480, 481, 485, 486, 487, 488, 489, 490, 491, 503, 510, 522, 529, 537, 538, 542, 544, 570, 573, 576, 583, 607, 611, 631, 632, 640, 642, 670, 677, 690, 691, 701, 705, 706, 707, 721, 803, 840, 849, 857, 903, 911, 925, 932, 933, 934, 954, 955, 956, 963, 966, 984, 986, 987, 996, 997, 998, 1001, 1020, 1105], "print": [6, 61, 128, 151, 152, 154, 155, 165, 168, 170, 171, 175, 180, 182, 183, 184, 185, 188, 191, 192, 196, 197, 198, 201, 204, 205, 207, 212, 214, 217, 220, 223, 224, 227, 230, 233, 242, 245, 249, 250, 252, 262, 266, 272, 277, 294, 295, 296, 297, 298, 328, 332, 334, 403, 414, 558, 585, 608, 655, 669, 677, 679, 795, 796, 802, 818, 820, 821, 862, 910, 920, 951, 954, 955, 956, 958, 959, 960, 964, 966, 968, 969, 972, 974, 977, 982, 983, 984, 985, 990, 991, 994, 995, 996, 997, 998, 1000, 1001, 1006, 1007, 1021, 1023, 1033, 1034, 1035, 1037, 1038, 1044, 1059, 1064, 1067, 1071, 1075, 1084], "ja": [6, 22, 141, 165, 182, 185, 188, 201, 204, 233], "da": [6, 7, 62, 140, 141, 146, 149, 150, 151, 152, 159, 167, 171, 175, 176, 180, 183, 185, 186, 188, 192, 195, 196, 197, 201, 204, 211, 212, 214, 217, 220, 221, 223, 225, 233, 235, 242, 252, 262, 266, 283, 294, 297, 302, 307, 320, 846, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1123, 1124, 1125, 1126, 1127, 1130, 1131], "kleiner": [6, 185, 845], "basta": [6, 132, 185, 987], "2": [6, 28, 30, 40, 48, 59, 61, 70, 102, 104, 125, 128, 133, 135, 141, 142, 143, 149, 151, 152, 153, 154, 155, 166, 170, 176, 177, 180, 181, 185, 188, 191, 192, 196, 197, 198, 201, 206, 207, 212, 214, 217, 218, 220, 224, 227, 230, 232, 233, 242, 245, 249, 250, 252, 256, 262, 266, 272, 275, 277, 288, 294, 295, 296, 297, 298, 299, 302, 303, 304, 305, 311, 319, 332, 333, 345, 351, 352, 372, 376, 403, 409, 410, 411, 412, 415, 416, 417, 421, 422, 423, 424, 425, 427, 449, 473, 474, 477, 483, 485, 486, 489, 493, 495, 496, 497, 498, 500, 501, 505, 520, 522, 529, 530, 531, 537, 539, 540, 543, 545, 546, 547, 548, 549, 554, 559, 563, 567, 568, 569, 570, 571, 576, 580, 584, 585, 586, 587, 592, 602, 607, 627, 630, 631, 632, 634, 637, 640, 642, 644, 645, 647, 649, 652, 653, 655, 665, 666, 669, 670, 675, 676, 677, 679, 681, 682, 685, 686, 687, 688, 689, 690, 699, 701, 709, 711, 717, 758, 785, 786, 793, 796, 797, 800, 801, 802, 814, 837, 840, 843, 844, 849, 851, 853, 855, 859, 862, 863, 875, 878, 880, 881, 882, 884, 885, 888, 889, 890, 891, 892, 894, 896, 898, 899, 911, 913, 916, 918, 920, 931, 932, 947, 949, 951, 952, 954, 955, 957, 960, 962, 964, 968, 972, 975, 976, 978, 979, 980, 981, 982, 983, 985, 988, 989, 990, 992, 997, 998, 1003, 1008, 1010, 1012, 1013, 1014, 1015, 1017, 1021, 1024, 1034, 1038, 1041, 1044, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1054, 1056, 1059, 1060, 1061, 1069, 1076, 1077, 1078, 1080, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1099, 1100, 1107, 1115, 1116, 1123, 1126, 1127, 1129, 1130, 1131], "1234": [6, 30, 185, 188, 198, 207, 212, 214, 266, 297, 873, 881, 930, 987], "3": [6, 30, 59, 61, 104, 107, 108, 109, 114, 128, 137, 142, 143, 147, 149, 151, 152, 153, 154, 155, 162, 164, 165, 170, 176, 177, 180, 181, 182, 185, 188, 191, 192, 196, 198, 200, 201, 206, 207, 210, 212, 214, 217, 220, 224, 227, 229, 231, 232, 233, 235, 242, 245, 249, 250, 252, 256, 262, 266, 272, 277, 295, 296, 297, 298, 302, 303, 304, 307, 319, 333, 345, 346, 347, 360, 369, 370, 391, 392, 400, 403, 405, 410, 411, 412, 415, 420, 431, 448, 449, 473, 474, 478, 481, 483, 484, 485, 486, 488, 489, 490, 491, 495, 496, 497, 498, 500, 501, 503, 505, 522, 529, 531, 537, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 554, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 576, 592, 602, 607, 609, 630, 631, 632, 634, 642, 644, 645, 649, 650, 651, 652, 653, 655, 670, 675, 677, 679, 681, 686, 687, 689, 690, 709, 716, 722, 758, 796, 801, 815, 818, 840, 842, 844, 849, 851, 857, 859, 862, 863, 864, 866, 875, 876, 878, 880, 881, 882, 885, 889, 890, 891, 899, 900, 901, 905, 911, 913, 916, 919, 920, 921, 924, 926, 929, 930, 932, 933, 934, 952, 954, 955, 957, 960, 962, 964, 968, 975, 978, 979, 980, 981, 982, 985, 986, 988, 990, 992, 993, 996, 997, 998, 1003, 1004, 1005, 1007, 1010, 1011, 1013, 1030, 1034, 1038, 1044, 1045, 1047, 1051, 1053, 1056, 1059, 1060, 1061, 1064, 1065, 1067, 1070, 1076, 1077, 1078, 1080, 1081, 1083, 1088, 1093, 1094, 1095, 1102, 1107, 1109, 1111, 1113, 1116, 1119, 1123], "decim": [6, 185, 220, 224, 266, 288, 325, 411, 987, 1001], "5": [6, 30, 59, 61, 124, 128, 135, 137, 143, 153, 154, 155, 160, 163, 166, 170, 176, 177, 180, 182, 183, 185, 188, 189, 191, 192, 195, 197, 198, 199, 201, 202, 204, 205, 207, 212, 214, 215, 217, 220, 224, 227, 229, 230, 232, 233, 237, 241, 242, 245, 249, 252, 256, 262, 265, 266, 271, 272, 277, 288, 294, 296, 297, 302, 307, 315, 316, 319, 325, 327, 332, 349, 351, 360, 387, 392, 396, 405, 410, 414, 417, 428, 431, 434, 449, 457, 473, 476, 478, 483, 484, 486, 487, 488, 489, 490, 491, 503, 504, 509, 522, 529, 530, 531, 537, 541, 542, 545, 546, 548, 549, 570, 580, 607, 627, 631, 634, 635, 637, 638, 644, 646, 647, 649, 664, 665, 677, 679, 686, 687, 688, 690, 709, 731, 736, 759, 787, 789, 840, 844, 849, 855, 862, 863, 864, 880, 882, 890, 899, 916, 932, 944, 952, 954, 955, 958, 964, 968, 975, 981, 986, 987, 988, 992, 993, 995, 998, 1001, 1003, 1007, 1008, 1011, 1034, 1038, 1045, 1047, 1051, 1053, 1056, 1060, 1061, 1067, 1072, 1083, 1088, 1093, 1095, 1100, 1104, 1110, 1112, 1117, 1118, 1123, 1124], "10": [6, 61, 95, 100, 103, 104, 107, 111, 112, 121, 128, 134, 135, 140, 142, 143, 153, 154, 165, 170, 172, 176, 177, 180, 182, 185, 188, 189, 191, 196, 197, 198, 199, 201, 202, 204, 205, 207, 212, 214, 217, 220, 224, 227, 229, 230, 232, 233, 243, 245, 250, 252, 259, 260, 261, 262, 265, 266, 271, 272, 277, 280, 288, 295, 296, 297, 298, 301, 315, 316, 319, 331, 333, 335, 337, 345, 363, 370, 387, 389, 403, 413, 423, 453, 473, 475, 476, 478, 481, 484, 489, 492, 512, 513, 518, 519, 521, 522, 527, 537, 540, 542, 549, 616, 617, 623, 627, 634, 638, 639, 665, 677, 686, 687, 688, 689, 699, 711, 748, 758, 766, 787, 789, 795, 814, 818, 820, 840, 842, 846, 849, 857, 862, 863, 864, 881, 890, 898, 925, 928, 932, 933, 934, 946, 947, 956, 958, 959, 987, 988, 995, 1017, 1018, 1038, 1044, 1055, 1056, 1060, 1061, 1064, 1080, 1081, 1088, 1093, 1105, 1123], "hexadecim": [6, 185, 224, 344, 863, 987, 1000, 1001], "16": [6, 61, 128, 137, 139, 140, 142, 151, 153, 154, 159, 160, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 246, 249, 252, 256, 262, 266, 272, 277, 294, 295, 296, 297, 298, 302, 307, 308, 319, 343, 387, 394, 405, 412, 549, 607, 686, 736, 748, 840, 857, 862, 864, 875, 880, 881, 889, 898, 932, 934, 946, 947, 952, 959, 962, 987, 1013, 1060, 1061, 1095], "7": [6, 30, 40, 61, 129, 132, 135, 137, 142, 149, 152, 153, 154, 155, 165, 170, 177, 180, 182, 183, 185, 188, 189, 191, 195, 197, 198, 199, 201, 202, 204, 207, 212, 214, 217, 220, 224, 227, 229, 230, 232, 233, 241, 242, 245, 249, 250, 252, 256, 262, 266, 271, 272, 277, 287, 296, 297, 302, 307, 308, 319, 333, 337, 351, 378, 387, 411, 412, 415, 420, 428, 448, 449, 473, 476, 481, 485, 486, 488, 489, 490, 491, 503, 510, 518, 522, 529, 537, 538, 542, 544, 545, 546, 548, 569, 573, 576, 585, 602, 611, 631, 639, 664, 665, 666, 670, 677, 705, 706, 707, 789, 790, 801, 802, 818, 840, 849, 862, 863, 864, 881, 889, 913, 916, 925, 926, 929, 930, 933, 934, 955, 958, 964, 968, 981, 986, 987, 988, 991, 993, 995, 996, 1011, 1023, 1041, 1044, 1056, 1060, 1061, 1067, 1072, 1083, 1093], "0x1234": [6, 185, 987], "4660": [6, 185, 207, 987], "8": [6, 30, 61, 107, 128, 134, 135, 139, 143, 151, 152, 153, 154, 155, 159, 164, 165, 168, 170, 177, 180, 182, 183, 185, 188, 189, 191, 192, 197, 198, 199, 201, 202, 204, 205, 207, 211, 212, 214, 217, 220, 224, 227, 229, 230, 233, 241, 242, 245, 248, 249, 252, 256, 262, 266, 269, 271, 272, 277, 294, 295, 296, 297, 302, 319, 343, 387, 399, 405, 411, 415, 417, 420, 448, 480, 515, 522, 529, 534, 537, 542, 546, 548, 549, 638, 686, 709, 731, 754, 758, 789, 795, 803, 840, 842, 849, 855, 856, 857, 858, 862, 863, 932, 949, 955, 958, 964, 987, 988, 993, 1001, 1006, 1010, 1011, 1017, 1053, 1056, 1060, 1061, 1070, 1086, 1088, 1095], "bin\u00e4r": [6, 22, 185, 188], "9": [6, 7, 30, 59, 61, 128, 133, 137, 140, 147, 151, 152, 153, 154, 155, 163, 165, 167, 170, 171, 172, 173, 174, 177, 178, 180, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 195, 197, 198, 199, 201, 204, 205, 207, 212, 214, 217, 220, 221, 224, 227, 230, 232, 233, 242, 245, 248, 249, 252, 256, 257, 259, 262, 266, 272, 277, 294, 295, 297, 298, 302, 307, 319, 325, 327, 333, 342, 345, 403, 411, 428, 448, 457, 476, 522, 524, 540, 549, 639, 649, 677, 736, 814, 837, 840, 862, 863, 864, 880, 916, 952, 962, 981, 982, 988, 993, 995, 1003, 1007, 1011, 1018, 1023, 1060, 1061, 1072, 1086, 1088, 1093], "0b100110": [6, 185, 214, 987], "38": [6, 22, 128, 135, 142, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 298, 432, 448, 473, 540, 686, 840, 935, 944, 1060, 1061], "arithmet": [6, 106, 152, 185, 190, 210, 213, 225, 240, 257, 302, 326, 340, 347, 348, 354, 355, 364, 370, 371, 377, 381, 384, 386, 387, 388, 397, 401, 406, 407, 426, 435, 447, 448, 461, 475, 523, 527, 557, 561, 562, 565, 570, 627, 629, 667, 676, 677, 708, 710, 711], "11": [6, 38, 61, 104, 111, 128, 129, 144, 153, 154, 159, 160, 164, 165, 170, 171, 172, 176, 177, 180, 182, 185, 188, 191, 194, 196, 197, 198, 201, 206, 207, 208, 212, 214, 217, 220, 224, 227, 230, 233, 236, 237, 242, 246, 249, 252, 256, 262, 266, 272, 283, 294, 295, 296, 297, 298, 305, 308, 315, 316, 319, 321, 323, 337, 403, 405, 419, 431, 484, 512, 521, 522, 528, 530, 531, 533, 537, 539, 540, 546, 548, 558, 563, 565, 570, 583, 584, 585, 588, 601, 625, 629, 632, 635, 636, 641, 642, 643, 644, 654, 666, 667, 668, 669, 670, 671, 672, 674, 677, 678, 681, 683, 686, 687, 689, 690, 692, 699, 700, 701, 708, 709, 711, 712, 783, 796, 840, 849, 903, 908, 932, 933, 934, 982, 988, 993, 1011, 1045, 1047, 1051, 1053, 1055, 1058, 1060, 1061, 1075, 1093, 1105, 1112, 1113, 1114, 1123], "man": [6, 30, 35, 111, 132, 134, 140, 141, 149, 155, 159, 165, 167, 175, 176, 182, 185, 188, 193, 195, 197, 208, 214, 221, 224, 248, 269, 302, 307, 309, 320, 417, 510, 519, 531, 693, 709, 717, 736, 784, 785, 786, 789, 790, 793, 800, 801, 802, 803, 804, 808, 810, 812, 815, 819, 820, 821, 837, 840, 841, 843, 844, 846, 847, 849, 850, 864, 871, 874, 875, 876, 878, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 894, 900, 901, 903, 905, 907, 908, 911, 913, 919, 926, 929, 930, 932, 948, 949, 1108, 1109, 1110, 1112, 1120, 1123, 1125, 1126, 1127, 1129, 1130, 1131], "behaviour": [6, 185, 193, 744, 890, 1006], "erzwingen": [6, 165, 177, 185], "floor": [6, 36, 177, 185, 188, 192, 204, 205, 207, 212, 214, 220, 224, 297, 975, 987, 1086], "divis": [6, 34, 36, 177, 185, 188, 204, 207, 212, 214, 220, 297, 325, 346, 448, 449, 463, 975, 987, 1041], "modul": [6, 11, 20, 22, 28, 63, 115, 122, 128, 135, 137, 142, 154, 160, 162, 164, 167, 168, 169, 170, 171, 178, 179, 185, 188, 192, 194, 199, 201, 202, 205, 207, 208, 211, 212, 214, 215, 217, 218, 220, 221, 223, 224, 226, 227, 231, 232, 235, 241, 243, 244, 245, 250, 252, 260, 261, 264, 266, 270, 271, 274, 275, 276, 287, 288, 297, 303, 304, 305, 307, 313, 320, 365, 409, 411, 415, 416, 422, 424, 425, 437, 626, 667, 710, 711, 714, 715, 717, 718, 720, 722, 723, 724, 725, 727, 728, 735, 738, 739, 743, 749, 754, 755, 759, 760, 762, 767, 770, 773, 776, 779, 854, 855, 862, 864, 953, 954, 955, 956, 957, 960, 968, 969, 971, 975, 976, 980, 981, 984, 985, 996, 997, 998, 1002, 1004, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1049, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1062, 1064, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1080, 1081, 1087, 1088, 1090, 1092, 1093, 1096, 1097, 1103, 1115, 1117, 1118, 1124, 1128, 1131], "restklassen": [6, 185], "rest": [6, 16, 38, 139, 141, 151, 175, 185, 188, 192, 194, 212, 220, 252, 266, 297, 323, 333, 358, 412, 560, 561, 622, 679, 746, 797, 858, 888, 916, 975, 978, 1002, 1031, 1035, 1067, 1082, 1115, 1131], "14": [6, 61, 125, 129, 142, 153, 154, 165, 170, 177, 180, 182, 184, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 232, 233, 236, 242, 245, 249, 252, 256, 262, 266, 272, 294, 295, 297, 298, 299, 319, 411, 422, 423, 425, 434, 528, 602, 626, 638, 677, 679, 687, 689, 800, 803, 815, 840, 842, 862, 863, 864, 866, 881, 890, 920, 932, 933, 934, 953, 1055, 1060, 1061, 1112, 1123], "15": [6, 59, 61, 104, 111, 128, 131, 139, 142, 151, 153, 154, 162, 165, 168, 170, 176, 177, 180, 182, 184, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 215, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 267, 272, 276, 277, 295, 297, 298, 299, 301, 308, 315, 316, 319, 411, 477, 478, 495, 496, 497, 498, 500, 501, 604, 664, 687, 709, 787, 801, 855, 889, 898, 968, 1059, 1060, 1061, 1084, 1088, 1123], "oper": [6, 28, 31, 32, 33, 36, 71, 76, 78, 95, 106, 131, 132, 134, 138, 150, 151, 153, 156, 159, 164, 168, 169, 170, 171, 173, 177, 182, 185, 190, 191, 192, 193, 194, 199, 201, 205, 206, 209, 212, 214, 215, 219, 222, 225, 228, 230, 233, 235, 245, 252, 257, 258, 259, 260, 261, 262, 265, 266, 279, 288, 302, 307, 325, 333, 343, 349, 364, 369, 370, 371, 375, 377, 378, 381, 384, 386, 388, 390, 393, 397, 399, 401, 406, 407, 429, 430, 449, 469, 475, 487, 492, 494, 522, 527, 528, 529, 534, 535, 539, 542, 546, 547, 548, 549, 550, 553, 554, 556, 562, 570, 571, 572, 578, 582, 583, 586, 591, 594, 595, 607, 612, 619, 620, 621, 622, 623, 624, 627, 629, 635, 637, 638, 640, 644, 649, 651, 652, 653, 655, 658, 662, 665, 667, 669, 670, 671, 672, 677, 679, 686, 687, 690, 697, 701, 708, 709, 710, 711, 720, 725, 728, 729, 735, 739, 749, 758, 760, 762, 767, 773, 774, 776, 779, 785, 786, 789, 818, 824, 849, 850, 854, 862, 863, 864, 875, 880, 881, 882, 883, 884, 885, 896, 899, 903, 905, 925, 929, 933, 946, 949, 957, 960, 967, 968, 971, 988, 992, 996, 1001, 1002, 1007, 1021, 1054, 1056, 1068, 1077, 1100, 1105, 1112, 1118], "preced": [6, 33, 36, 185, 207, 212, 220, 225, 228, 325, 331, 346, 347, 355, 360, 364, 369, 371, 375, 377, 379, 381, 384, 388, 397, 401, 406, 407, 558, 562, 629, 667, 708, 710, 711, 818, 867], "implizit": [6, 165, 185, 262, 1110, 1127], "klammerung": [6, 185, 846], "durch": [6, 140, 141, 149, 155, 159, 167, 175, 185, 217, 227, 302, 307, 320, 846, 1107, 1108, 1110], "pr\u00e4zedenz": [6, 165, 177, 185], "17": [6, 61, 94, 104, 111, 137, 143, 147, 151, 153, 154, 165, 170, 172, 175, 180, 182, 185, 188, 191, 196, 197, 201, 206, 208, 209, 213, 214, 215, 217, 220, 224, 227, 233, 236, 237, 243, 245, 249, 252, 256, 262, 267, 272, 276, 277, 294, 297, 298, 319, 537, 585, 626, 635, 644, 665, 677, 687, 709, 722, 758, 789, 840, 864, 880, 886, 916, 920, 947, 955, 976, 1018, 1060, 1061, 1072, 1084], "18": [6, 61, 135, 142, 143, 147, 153, 154, 170, 175, 180, 182, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 213, 214, 220, 224, 227, 230, 233, 242, 246, 248, 249, 252, 256, 262, 266, 272, 277, 295, 297, 298, 301, 319, 537, 602, 666, 674, 686, 711, 722, 731, 758, 795, 801, 803, 837, 840, 854, 864, 888, 890, 924, 935, 942, 943, 944, 947, 976, 1011, 1018, 1060, 1061], "6666666666666665": [6, 185], "frage": [6, 141, 151, 155, 182, 185, 188, 194, 214, 320, 1117, 1124, 1131], "warum": [6, 22, 176, 177, 185, 227, 1117, 1123, 1124, 1129, 1131], "6665": [6, 185], "6667": [6, 185], "ieee": [6, 185], "floatingpoint": [6, 185, 346, 347, 470, 758, 1033], "representaion": [6, 185], "20": [6, 7, 22, 61, 128, 135, 137, 142, 151, 152, 153, 154, 165, 170, 175, 176, 180, 182, 185, 186, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 249, 252, 256, 258, 262, 266, 273, 276, 277, 297, 298, 301, 319, 325, 327, 329, 345, 369, 409, 449, 477, 478, 483, 512, 513, 518, 519, 521, 522, 537, 634, 637, 638, 639, 648, 655, 677, 679, 680, 685, 686, 687, 688, 777, 783, 803, 818, 840, 855, 862, 863, 864, 918, 935, 944, 958, 959, 983, 1002, 1010, 1011, 1037, 1060, 1061, 1093, 1095, 1102], "true": [6, 33, 36, 48, 56, 61, 108, 109, 133, 135, 137, 142, 151, 152, 153, 154, 164, 165, 170, 175, 180, 182, 183, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 212, 214, 217, 218, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 288, 294, 297, 331, 347, 348, 360, 372, 375, 415, 473, 537, 545, 570, 598, 609, 611, 632, 655, 656, 657, 658, 660, 661, 662, 663, 688, 697, 699, 701, 746, 748, 778, 791, 818, 831, 899, 905, 910, 911, 914, 916, 917, 925, 926, 929, 938, 953, 959, 960, 964, 966, 967, 968, 969, 972, 975, 988, 989, 991, 992, 993, 996, 1002, 1005, 1006, 1072, 1076, 1078, 1083, 1099, 1100, 1102], "zahlen": [6, 175, 176, 185, 1110, 1123], "vergleichen": [6, 165, 185], "21": [6, 95, 97, 100, 103, 104, 111, 139, 142, 153, 154, 165, 170, 173, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 297, 301, 319, 411, 748, 800, 840, 863, 864, 875, 946, 1060, 1061], "ab": [6, 22, 30, 140, 142, 165, 175, 176, 185, 220, 224, 227, 242, 245, 266, 529, 531, 539, 548, 634, 690, 1061, 1117, 1123], "0001": [6, 135, 153, 185], "sind": [6, 22, 140, 141, 150, 151, 155, 159, 167, 176, 177, 182, 185, 188, 204, 221, 302, 307, 320, 845, 846, 918, 1107, 1110, 1111, 1112, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1130, 1131], "aber": [6, 22, 35, 141, 149, 151, 155, 165, 175, 176, 180, 183, 185, 214, 217, 220, 272, 320, 846, 1108, 1110, 1112, 1119, 1126, 1130, 1131], "unendlich": [6, 7, 176, 185, 186], "lang": [6, 137, 140, 141, 150, 185, 293, 294, 311, 320, 414, 1109, 1125, 1130], "22": [6, 61, 95, 103, 104, 111, 134, 137, 142, 144, 153, 154, 165, 170, 172, 175, 180, 181, 182, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 273, 276, 277, 294, 296, 297, 298, 319, 803, 840, 864, 865, 873, 874, 889, 933, 934, 1018, 1055, 1060, 1061, 1124], "1000000": [6, 134, 165, 185, 262, 297, 403, 855, 863], "23": [6, 61, 111, 135, 142, 143, 144, 150, 153, 154, 155, 165, 170, 172, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 218, 220, 223, 224, 227, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 280, 319, 375, 411, 414, 655, 803, 840, 862, 863, 944, 1013, 1018, 1060, 1061, 1095, 1102], "32": [6, 142, 143, 149, 151, 154, 165, 170, 175, 180, 182, 185, 188, 191, 194, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 297, 325, 327, 343, 348, 387, 428, 434, 457, 473, 486, 754, 783, 789, 814, 840, 856, 858, 933, 934, 944, 1011], "4294967295": [6, 185, 204, 212, 220], "24": [6, 61, 95, 103, 110, 135, 142, 150, 153, 154, 155, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 266, 272, 277, 294, 295, 297, 298, 319, 422, 620, 622, 644, 686, 687, 758, 785, 786, 840, 862, 949, 1060, 1061], "64": [6, 134, 137, 142, 165, 170, 175, 180, 182, 185, 188, 191, 193, 194, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 331, 343, 348, 372, 387, 393, 396, 422, 754, 896, 899, 922, 929, 932, 949, 1013, 1060, 1108], "18446744073709551615": [6, 165, 175, 185, 188, 201, 204, 212, 214, 220, 224, 227, 230, 252, 297], "overflow": [6, 40, 42, 48, 134, 175, 185, 201, 204, 205, 207, 210, 211, 217, 220, 227, 230, 245, 252, 262, 266, 348, 350, 386, 395, 795], "wenn": [6, 22, 140, 141, 146, 151, 159, 165, 167, 175, 176, 182, 185, 221, 227, 262, 845, 1107, 1109, 1110, 1117, 1119, 1120, 1123, 1126, 1131], "verwendet": [6, 22, 155, 159, 165, 185, 227, 1108, 1110, 1120, 1124, 1126, 1131], "wird": [6, 22, 140, 141, 146, 149, 150, 151, 159, 165, 175, 176, 182, 185, 214, 302, 307, 320, 1107, 1108, 1111, 1112, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "wert": [6, 22, 176, 177, 182, 185, 217, 220, 224, 227, 233, 262, 266, 272, 1123, 1131], "w\u00e4re": [6, 149, 175, 185, 221, 1112, 1119], "dort": [6, 62, 141, 149, 151, 159, 175, 176, 185, 320, 1123, 1129, 1131], "25": [6, 61, 95, 142, 143, 153, 154, 155, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 218, 220, 223, 224, 227, 230, 232, 233, 242, 245, 249, 252, 256, 262, 266, 272, 280, 288, 297, 298, 319, 521, 522, 644, 681, 738, 840, 864, 932, 958, 1001, 1045, 1047, 1051, 1053, 1060, 1061, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "18446744073709551616": [6, 165, 175, 185, 188, 201, 204, 212, 214, 224, 227, 245, 252, 262, 266, 272, 297], "26": [6, 135, 137, 142, 143, 144, 153, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 237, 242, 245, 249, 252, 256, 266, 272, 277, 297, 301, 319, 521, 522, 649, 665, 818, 840, 864, 896, 898, 899, 932, 934, 1060, 1061, 1088, 1124], "1000": [6, 22, 165, 175, 185, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 262, 266, 272, 294, 297, 486, 487, 505, 580, 627, 701, 768, 793, 795, 800, 814, 815, 842, 843, 847, 849, 875, 882, 890, 911, 916, 920, 946, 953, 1002, 1034, 1064], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [6, 165, 175, 185, 188, 201, 224, 227, 245, 272], "27": [6, 61, 95, 111, 142, 144, 153, 154, 165, 175, 180, 182, 184, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 223, 224, 227, 230, 232, 233, 242, 245, 249, 252, 256, 262, 266, 272, 294, 296, 297, 299, 319, 411, 485, 510, 677, 840, 862, 864, 932, 1060, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "10000": [6, 43, 185, 204, 207, 220, 252, 956, 972], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [6, 185, 204, 220, 252], "28": [6, 22, 95, 103, 128, 135, 142, 143, 153, 154, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 296, 297, 298, 315, 316, 319, 411, 423, 470, 486, 487, 510, 519, 602, 649, 748, 800, 840, 864, 892, 933, 934, 946, 1013, 1060, 1105], "hallo": [6, 165, 175, 180, 183, 185, 188, 196, 204, 207, 214, 217, 220, 224, 227, 233, 245, 249, 252, 272, 297, 345, 537, 709, 789, 837, 865, 878, 881, 887], "39": [6, 129, 142, 151, 153, 154, 165, 170, 175, 180, 182, 184, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 294, 295, 296, 297, 298, 299, 448, 602, 649, 803, 932, 968, 1060, 1061], "29": [6, 95, 104, 142, 143, 153, 154, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 294, 297, 301, 315, 316, 319, 411, 689, 722, 862, 864, 932, 935, 944, 1060], "30": [6, 22, 61, 95, 104, 107, 111, 128, 129, 134, 142, 144, 154, 164, 165, 170, 175, 180, 182, 184, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 256, 262, 266, 269, 272, 294, 296, 297, 299, 319, 332, 346, 411, 473, 477, 512, 513, 518, 519, 521, 522, 638, 639, 686, 687, 688, 814, 840, 846, 862, 863, 864, 920, 946, 958, 959, 1011, 1060, 1067, 1075, 1093, 1102], "eingebettet": [6, 185], "34": [6, 142, 143, 151, 154, 165, 170, 175, 180, 182, 184, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 249, 250, 252, 256, 262, 266, 272, 277, 296, 297, 298, 299, 434, 448, 452, 453, 454, 455, 467, 468, 469, 567, 568, 569, 570, 571, 576, 608, 815, 818, 840, 968, 987, 1060, 1061], "31": [6, 104, 111, 135, 137, 142, 154, 165, 170, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 215, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 296, 297, 319, 383, 411, 418, 664, 840, 898, 930, 947, 981, 1013, 1060, 1086], "eingenbettet": [6, 185], "mississippi": [6, 185, 188, 197, 201, 204, 212, 214, 220, 224, 230, 233, 245, 252, 266, 272, 607], "count": [6, 28, 61, 85, 87, 132, 144, 147, 185, 188, 189, 192, 197, 201, 204, 207, 212, 214, 217, 220, 224, 230, 233, 245, 251, 252, 266, 272, 331, 332, 333, 334, 347, 403, 459, 485, 513, 627, 677, 702, 711, 714, 717, 718, 719, 720, 722, 725, 728, 729, 735, 739, 749, 762, 767, 773, 776, 779, 789, 798, 818, 840, 851, 854, 884, 887, 894, 905, 926, 1002, 1015, 1025, 1028, 1036, 1039, 1054, 1061, 1066, 1072, 1113], "ss": [6, 30, 185, 188, 197, 201, 204, 212, 214, 220, 224, 230, 233, 245, 252, 266, 272, 607], "35": [6, 128, 142, 154, 165, 172, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 294, 296, 297, 298, 448, 477, 620, 622, 638, 968, 1060], "find": [6, 16, 40, 42, 45, 46, 51, 63, 111, 131, 132, 133, 134, 138, 143, 148, 160, 161, 162, 172, 174, 185, 188, 192, 194, 197, 201, 205, 207, 210, 212, 214, 217, 220, 224, 227, 230, 233, 238, 245, 247, 250, 252, 257, 259, 266, 268, 269, 272, 274, 283, 287, 296, 302, 307, 390, 396, 403, 415, 423, 430, 437, 458, 463, 464, 467, 468, 469, 470, 475, 492, 493, 522, 527, 530, 544, 546, 548, 549, 570, 572, 583, 586, 588, 591, 595, 607, 620, 622, 624, 627, 670, 674, 707, 711, 724, 763, 784, 785, 786, 788, 793, 797, 798, 800, 801, 802, 804, 818, 845, 848, 851, 854, 863, 864, 875, 903, 932, 935, 949, 979, 983, 994, 1002, 1062, 1064, 1086, 1103, 1115, 1117, 1118, 1119, 1124], "36": [6, 128, 133, 137, 142, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 249, 252, 256, 262, 266, 272, 294, 297, 302, 307, 415, 428, 434, 452, 476, 479, 480, 481, 485, 486, 487, 637, 686, 687, 688, 709, 840, 862, 968, 1044], "37": [6, 142, 153, 154, 165, 166, 170, 175, 180, 182, 185, 188, 191, 193, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 296, 297, 298, 452, 1060, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "capit": [6, 36, 185, 188, 197, 204, 214, 220, 245, 266, 296, 818, 1013], "zeil": [6, 151, 165, 175, 182, 185, 188, 191, 197, 201, 220, 224, 242, 245, 297], "nnoch": [6, 182, 185, 201], "noch": [6, 140, 141, 151, 155, 159, 165, 175, 176, 180, 182, 185, 188, 191, 201, 214, 220, 221, 224, 245, 252, 320, 1112, 1123, 1130], "some": [6, 16, 20, 104, 119, 131, 132, 133, 134, 136, 139, 142, 143, 147, 153, 156, 161, 164, 168, 171, 173, 184, 185, 191, 193, 201, 207, 208, 213, 219, 220, 224, 236, 237, 239, 245, 248, 251, 252, 254, 258, 260, 261, 268, 283, 320, 344, 378, 389, 405, 428, 434, 505, 530, 532, 552, 570, 583, 586, 640, 649, 677, 685, 687, 697, 700, 710, 711, 717, 722, 731, 746, 754, 758, 775, 777, 795, 800, 855, 863, 864, 885, 888, 914, 916, 918, 926, 955, 957, 984, 1000, 1006, 1052, 1073, 1093, 1115, 1116], "name": [6, 22, 37, 38, 55, 63, 108, 109, 111, 114, 124, 128, 131, 132, 134, 135, 136, 139, 146, 147, 152, 154, 156, 161, 164, 165, 168, 171, 173, 175, 180, 185, 188, 191, 192, 203, 205, 206, 207, 210, 212, 214, 217, 222, 224, 227, 242, 245, 249, 250, 252, 256, 266, 287, 293, 296, 297, 298, 313, 335, 349, 355, 363, 364, 370, 371, 377, 381, 384, 388, 389, 392, 394, 397, 401, 403, 405, 406, 407, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 432, 434, 449, 453, 454, 455, 460, 463, 467, 468, 469, 484, 486, 489, 494, 499, 531, 541, 543, 545, 609, 622, 628, 629, 639, 640, 649, 667, 669, 673, 679, 687, 708, 709, 710, 711, 714, 722, 726, 736, 740, 752, 754, 778, 784, 785, 786, 789, 797, 798, 800, 803, 804, 818, 824, 840, 846, 851, 858, 862, 863, 864, 866, 867, 874, 875, 878, 880, 884, 892, 925, 929, 932, 933, 934, 944, 946, 947, 949, 950, 951, 954, 956, 963, 968, 970, 973, 977, 978, 980, 981, 985, 986, 994, 996, 998, 1000, 1001, 1002, 1007, 1011, 1013, 1018, 1034, 1035, 1045, 1051, 1053, 1061, 1067, 1070, 1071, 1072, 1077, 1078, 1080, 1081, 1082, 1083, 1086, 1093, 1100, 1102, 1112, 1116, 1118, 1119], "directori": [6, 16, 42, 59, 95, 97, 98, 100, 107, 111, 128, 131, 132, 133, 134, 143, 147, 158, 163, 166, 172, 184, 185, 191, 192, 193, 194, 201, 204, 205, 207, 217, 220, 232, 237, 238, 239, 247, 248, 260, 261, 265, 268, 269, 274, 279, 287, 288, 302, 307, 313, 315, 316, 369, 403, 405, 410, 413, 417, 419, 421, 423, 424, 426, 429, 431, 433, 447, 448, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 506, 509, 512, 515, 518, 521, 524, 527, 618, 700, 710, 711, 736, 758, 760, 780, 784, 787, 788, 789, 791, 792, 793, 795, 797, 798, 800, 801, 802, 804, 805, 806, 807, 812, 813, 815, 817, 818, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 838, 842, 847, 854, 862, 863, 864, 866, 871, 875, 877, 880, 883, 890, 891, 892, 893, 895, 898, 900, 909, 912, 915, 917, 921, 924, 928, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 955, 963, 983, 1034, 1043, 1044, 1086, 1095, 1099, 1104, 1115, 1119, 1128], "40": [6, 22, 104, 128, 135, 142, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 333, 411, 432, 434, 448, 518, 519, 540, 686, 687, 688, 840, 859, 862, 863, 864, 944, 958, 959, 968, 983], "multilin": [6, 175, 185, 200, 203, 207, 212, 220, 224, 302, 370, 956, 984], "jetzt": [6, 140, 151, 155, 165, 175, 182, 185, 195, 224], "schluss": [6, 140, 165, 185], "l": [6, 30, 36, 59, 61, 97, 111, 135, 139, 143, 151, 152, 154, 155, 160, 165, 170, 175, 180, 182, 183, 184, 185, 188, 191, 196, 197, 201, 204, 207, 210, 212, 214, 217, 220, 224, 227, 230, 233, 238, 242, 245, 247, 248, 252, 262, 266, 268, 269, 272, 294, 296, 297, 302, 307, 375, 376, 383, 387, 399, 404, 405, 411, 418, 421, 422, 437, 449, 475, 522, 527, 546, 576, 627, 700, 709, 710, 711, 722, 736, 758, 759, 785, 786, 787, 788, 789, 791, 792, 795, 797, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 822, 825, 826, 829, 830, 832, 833, 834, 836, 837, 838, 842, 847, 851, 854, 855, 857, 862, 863, 864, 865, 866, 873, 875, 880, 881, 883, 885, 886, 888, 889, 890, 893, 895, 898, 901, 909, 912, 915, 916, 917, 926, 930, 932, 933, 934, 935, 944, 946, 947, 952, 954, 975, 983, 985, 988, 989, 993, 995, 1003, 1011, 1038, 1102, 1119], "44": [6, 128, 135, 142, 154, 165, 175, 180, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 864, 1088], "geht": [6, 7, 22, 62, 140, 141, 149, 151, 159, 165, 175, 176, 180, 185, 186, 195, 196, 211, 217, 223, 233, 297, 320, 846], "45": [6, 28, 49, 51, 53, 54, 70, 71, 72, 85, 88, 121, 124, 137, 140, 142, 154, 164, 165, 168, 170, 175, 180, 182, 185, 188, 189, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 288, 289, 290, 291, 292, 293, 296, 297, 302, 307, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 416, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 567, 568, 569, 570, 571, 572, 576, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 643, 667, 668, 678, 683, 692, 700, 708, 709, 710, 711, 715, 718, 720, 723, 725, 728, 730, 734, 735, 737, 739, 741, 743, 749, 751, 753, 755, 762, 764, 767, 769, 773, 776, 779, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 861, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 897, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1060, 1062, 1066, 1069, 1072, 1073, 1075, 1079, 1087, 1090, 1092, 1097, 1098], "46": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 840, 864, 880, 1060, 1061], "47": [6, 135, 137, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 298, 677, 851, 916, 944, 1001, 1060], "try": [6, 26, 111, 128, 131, 132, 134, 139, 151, 154, 164, 165, 168, 172, 175, 180, 182, 185, 188, 191, 194, 197, 199, 201, 204, 207, 210, 212, 214, 217, 220, 224, 227, 229, 230, 232, 233, 236, 237, 239, 241, 242, 245, 248, 249, 252, 259, 260, 261, 262, 265, 266, 272, 283, 288, 295, 296, 297, 298, 302, 306, 307, 317, 395, 399, 425, 429, 453, 458, 467, 475, 483, 492, 494, 527, 535, 553, 556, 572, 578, 582, 587, 591, 594, 595, 612, 614, 616, 619, 620, 621, 622, 623, 624, 655, 663, 667, 677, 683, 687, 701, 705, 707, 710, 711, 763, 766, 863, 884, 929, 953, 960, 1013, 1056, 1062, 1064, 1076, 1077, 1081, 1095], "except": [6, 20, 28, 41, 44, 59, 61, 72, 108, 109, 133, 137, 143, 151, 152, 159, 164, 165, 168, 169, 171, 173, 175, 180, 182, 185, 188, 192, 193, 194, 197, 199, 201, 204, 205, 208, 209, 212, 214, 218, 219, 222, 224, 227, 229, 230, 234, 242, 245, 249, 252, 260, 261, 262, 265, 266, 272, 279, 287, 289, 295, 296, 297, 298, 302, 307, 315, 316, 335, 387, 390, 424, 429, 430, 437, 464, 475, 492, 494, 527, 556, 572, 578, 582, 591, 594, 595, 599, 612, 619, 620, 622, 623, 624, 628, 631, 655, 663, 684, 686, 687, 698, 711, 726, 758, 791, 796, 862, 916, 930, 953, 957, 960, 963, 966, 969, 979, 981, 984, 1002, 1004, 1054, 1056, 1066, 1073, 1076, 1081, 1095, 1105, 1112], "index": [6, 12, 22, 28, 37, 49, 51, 88, 108, 109, 128, 129, 138, 151, 153, 158, 163, 165, 166, 168, 169, 171, 173, 177, 178, 180, 183, 185, 188, 189, 191, 192, 194, 197, 199, 202, 204, 205, 207, 208, 210, 211, 213, 214, 215, 218, 220, 221, 223, 225, 226, 227, 229, 230, 232, 241, 242, 244, 245, 250, 251, 252, 254, 256, 258, 260, 261, 264, 265, 266, 270, 271, 273, 276, 279, 302, 309, 333, 349, 375, 403, 411, 506, 509, 512, 515, 518, 521, 522, 524, 562, 563, 565, 570, 609, 649, 677, 689, 711, 754, 921, 924, 928, 979, 980, 992, 995, 1002, 1008, 1009, 1010, 1011, 1013, 1015, 1028, 1034, 1039, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1073, 1075, 1077, 1079, 1080, 1082, 1086, 1087, 1097, 1099, 1104], "out": [6, 42, 43, 48, 53, 61, 63, 73, 83, 104, 111, 118, 124, 125, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 147, 152, 153, 160, 161, 164, 168, 171, 172, 180, 185, 188, 193, 201, 207, 208, 210, 217, 220, 224, 228, 257, 288, 302, 308, 313, 324, 345, 363, 369, 370, 378, 389, 396, 403, 404, 405, 409, 411, 412, 417, 422, 425, 427, 429, 454, 455, 470, 473, 483, 499, 505, 522, 529, 531, 545, 560, 602, 605, 640, 655, 674, 677, 690, 701, 707, 726, 727, 736, 758, 766, 771, 785, 786, 789, 793, 797, 800, 804, 814, 845, 851, 855, 862, 863, 864, 881, 882, 898, 916, 919, 929, 930, 932, 944, 949, 956, 960, 1000, 1001, 1008, 1034, 1037, 1066, 1067, 1072, 1074, 1080, 1082, 1083, 1088, 1094, 1113], "rang": [6, 28, 40, 61, 88, 106, 111, 139, 152, 153, 154, 159, 168, 171, 173, 176, 177, 180, 183, 185, 188, 189, 192, 199, 200, 202, 203, 205, 206, 207, 210, 211, 213, 215, 216, 219, 220, 225, 226, 228, 229, 231, 233, 235, 243, 244, 245, 251, 253, 254, 261, 262, 264, 265, 267, 270, 271, 273, 279, 294, 348, 375, 391, 393, 439, 473, 476, 477, 481, 505, 521, 522, 558, 560, 563, 566, 667, 705, 708, 710, 711, 722, 855, 862, 911, 917, 920, 952, 955, 957, 962, 964, 966, 968, 978, 979, 987, 991, 1008, 1012, 1013, 1014, 1015, 1025, 1027, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1066, 1069, 1072, 1073, 1080, 1082, 1112, 1113, 1123], "48": [6, 135, 142, 151, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 298, 862], "append": [6, 151, 152, 153, 154, 155, 165, 170, 172, 175, 180, 182, 183, 184, 185, 188, 191, 196, 197, 198, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 298, 411, 414, 504, 522, 564, 580, 592, 619, 719, 731, 746, 758, 785, 786, 800, 803, 824, 837, 862, 871, 884, 920, 952, 958, 959, 972, 988, 993, 996, 998, 1003, 1006, 1007, 1033, 1084, 1088], "one": [6, 20, 26, 30, 38, 42, 43, 48, 57, 60, 61, 64, 78, 82, 83, 104, 108, 109, 111, 114, 120, 122, 126, 128, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 147, 152, 153, 154, 156, 161, 164, 165, 168, 170, 172, 175, 180, 182, 183, 184, 185, 188, 191, 193, 194, 201, 204, 207, 212, 214, 215, 217, 218, 220, 223, 224, 227, 230, 232, 242, 245, 248, 251, 252, 254, 256, 258, 262, 266, 271, 272, 274, 287, 288, 293, 294, 299, 302, 308, 320, 325, 332, 343, 348, 350, 358, 363, 365, 366, 370, 373, 375, 380, 383, 391, 392, 393, 395, 399, 403, 405, 411, 412, 414, 415, 417, 419, 423, 424, 427, 428, 429, 434, 436, 437, 439, 440, 448, 453, 455, 473, 476, 478, 479, 483, 484, 486, 505, 516, 522, 533, 534, 542, 543, 545, 546, 547, 548, 549, 560, 561, 569, 580, 583, 587, 602, 609, 626, 627, 630, 631, 632, 635, 644, 655, 674, 676, 677, 685, 687, 688, 689, 690, 691, 697, 699, 701, 709, 719, 726, 733, 736, 746, 752, 758, 766, 774, 778, 783, 784, 785, 791, 800, 802, 803, 818, 837, 851, 855, 857, 858, 859, 862, 863, 864, 865, 867, 871, 874, 875, 881, 882, 884, 885, 888, 891, 892, 894, 900, 901, 902, 903, 905, 908, 911, 914, 916, 917, 918, 925, 929, 932, 935, 938, 944, 947, 948, 950, 951, 953, 955, 956, 958, 964, 966, 967, 969, 980, 981, 984, 985, 986, 988, 992, 993, 995, 997, 998, 1002, 1004, 1006, 1007, 1014, 1024, 1027, 1034, 1035, 1060, 1061, 1062, 1063, 1068, 1072, 1073, 1075, 1077, 1083, 1084, 1085, 1089, 1093, 1095, 1100, 1102, 1115, 1118], "49": [6, 142, 151, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 298, 670, 803, 944, 958], "50": [6, 104, 107, 142, 153, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 298, 303, 304, 394, 396, 412, 483, 518, 519, 840, 862, 863, 864, 958, 981, 1001, 1013, 1060, 1061, 1076, 1093], "extend": [6, 133, 134, 165, 182, 183, 185, 190, 196, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 258, 262, 266, 272, 297, 432, 439, 448, 473, 546, 548, 549, 601, 719, 790, 988, 993, 1003, 1061, 1076], "slice": [6, 28, 88, 153, 155, 164, 168, 169, 171, 173, 178, 181, 182, 185, 192, 204, 205, 207, 208, 211, 215, 216, 222, 223, 225, 226, 227, 229, 241, 244, 246, 251, 254, 261, 264, 265, 267, 270, 271, 273, 279, 711, 756, 917, 979, 992, 996, 1015, 1028, 1039, 1054, 1073, 1077, 1079, 1081, 1086], "inclus": [6, 171, 185, 212, 224, 369, 562, 1017, 1080], "exclus": [6, 159, 185, 207, 224, 261, 351, 562, 697, 884, 917, 966, 1002, 1006, 1017, 1080], "51": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 584, 585, 586, 587, 840, 842, 1060], "l\u00f6schen": [6, 175, 181, 185, 302], "52": [6, 142, 151, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 298, 864, 1060], "del": [6, 36, 151, 154, 155, 165, 180, 182, 185, 188, 196, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 295, 297, 963, 988, 1004], "53": [6, 135, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 309, 453, 454, 680, 738, 840, 862, 932, 944, 1060, 1061], "iter": [6, 23, 28, 61, 152, 155, 159, 164, 168, 169, 171, 173, 176, 177, 181, 183, 185, 189, 190, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 219, 222, 224, 226, 227, 231, 243, 246, 252, 260, 261, 263, 267, 272, 279, 287, 302, 308, 360, 362, 375, 411, 436, 486, 505, 522, 564, 565, 566, 570, 573, 580, 583, 585, 587, 592, 642, 649, 658, 679, 705, 711, 881, 953, 957, 959, 968, 981, 991, 1005, 1006, 1012, 1013, 1014, 1015, 1028, 1039, 1051, 1054, 1056, 1065, 1066, 1069, 1071, 1073, 1084, 1086, 1123], "mittel": [6, 10, 22, 155, 165, 167, 183, 185, 190, 320, 1107, 1110, 1119, 1127], "54": [6, 142, 151, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 296, 297, 309, 584, 585, 586, 587, 687, 748, 840, 862, 944, 1060], "element": [6, 7, 33, 36, 104, 107, 108, 109, 111, 152, 154, 155, 165, 170, 171, 176, 177, 180, 182, 183, 185, 186, 188, 191, 195, 196, 197, 201, 204, 205, 207, 211, 213, 214, 220, 223, 224, 227, 231, 252, 256, 259, 262, 271, 296, 297, 333, 360, 375, 383, 387, 390, 475, 489, 492, 494, 503, 522, 527, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 573, 577, 580, 584, 587, 609, 627, 630, 632, 649, 663, 677, 679, 711, 719, 926, 958, 960, 977, 988, 993, 994, 1003, 1005, 1038, 1067, 1084, 1093, 1116, 1123], "55": [6, 142, 151, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 296, 297, 298, 309, 386, 411, 617, 618, 619, 620, 622, 932, 1013], "def": [6, 61, 151, 152, 155, 165, 170, 171, 175, 180, 182, 183, 185, 188, 191, 192, 197, 198, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 250, 252, 262, 266, 272, 277, 297, 298, 411, 669, 910, 953, 954, 955, 958, 959, 960, 963, 964, 966, 968, 970, 972, 973, 974, 975, 976, 977, 978, 984, 987, 997, 998, 1003, 1007, 1038, 1044, 1051, 1052, 1053, 1064, 1075, 1080, 1081, 1083, 1093, 1094], "is_integ": [6, 185, 242], "elem": [6, 151, 155, 165, 170, 175, 180, 182, 185, 197, 204, 207, 212, 217, 242, 245, 252, 262, 266, 272, 489, 586, 588, 635, 655, 657, 659, 662, 676, 677, 679, 699, 960, 1003, 1007], "type": [6, 28, 48, 76, 81, 98, 108, 109, 112, 124, 125, 128, 131, 132, 135, 137, 139, 147, 151, 152, 155, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 184, 185, 188, 191, 192, 193, 196, 197, 201, 206, 209, 210, 212, 214, 218, 219, 222, 224, 228, 230, 232, 233, 235, 243, 245, 248, 249, 252, 260, 261, 262, 265, 266, 272, 277, 279, 294, 295, 296, 297, 302, 304, 305, 313, 335, 346, 347, 354, 359, 364, 365, 369, 371, 375, 377, 378, 381, 384, 385, 386, 387, 388, 391, 393, 394, 396, 397, 401, 406, 407, 411, 427, 429, 438, 441, 449, 455, 485, 489, 510, 519, 529, 531, 537, 538, 542, 544, 545, 555, 563, 592, 598, 602, 605, 607, 609, 611, 617, 629, 630, 635, 640, 641, 649, 655, 666, 667, 669, 674, 675, 676, 677, 686, 687, 689, 690, 691, 696, 706, 707, 708, 709, 710, 711, 714, 717, 719, 724, 727, 746, 758, 784, 788, 800, 803, 815, 818, 821, 832, 834, 835, 838, 846, 854, 855, 857, 862, 863, 866, 871, 880, 881, 884, 887, 888, 889, 890, 891, 901, 913, 922, 925, 929, 930, 932, 949, 951, 954, 957, 960, 964, 969, 970, 971, 978, 982, 984, 986, 987, 988, 992, 994, 995, 996, 1001, 1002, 1004, 1006, 1008, 1021, 1032, 1033, 1051, 1054, 1056, 1061, 1068, 1072, 1077, 1078, 1080, 1088, 1093, 1095, 1113, 1114], "int": [6, 20, 44, 105, 108, 109, 134, 143, 152, 154, 165, 171, 175, 180, 182, 183, 185, 188, 192, 193, 198, 201, 204, 205, 207, 210, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 251, 252, 254, 262, 266, 272, 295, 297, 298, 324, 325, 327, 329, 331, 333, 334, 335, 337, 338, 339, 343, 344, 345, 347, 348, 349, 353, 363, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 378, 379, 380, 383, 385, 386, 390, 391, 392, 393, 394, 395, 399, 400, 434, 441, 448, 449, 453, 454, 455, 456, 459, 462, 463, 465, 467, 468, 469, 471, 473, 481, 483, 485, 487, 488, 489, 490, 491, 493, 503, 505, 510, 513, 519, 522, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 552, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 580, 583, 584, 585, 586, 587, 588, 592, 594, 598, 599, 602, 604, 605, 607, 608, 609, 611, 616, 617, 618, 619, 620, 621, 622, 623, 627, 628, 630, 631, 634, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 674, 675, 676, 677, 679, 681, 688, 689, 690, 691, 694, 696, 699, 701, 714, 717, 722, 724, 729, 736, 738, 740, 742, 746, 750, 752, 754, 763, 768, 775, 795, 815, 858, 862, 876, 878, 880, 881, 882, 884, 887, 888, 889, 890, 891, 894, 896, 899, 901, 903, 905, 907, 913, 916, 919, 920, 922, 925, 926, 929, 930, 932, 944, 948, 950, 975, 986, 987, 995, 996, 998, 1001, 1007, 1008, 1023, 1046, 1048, 1051, 1052, 1081, 1100, 1105], "return": [6, 20, 26, 61, 105, 128, 131, 133, 134, 135, 139, 143, 151, 152, 155, 165, 169, 171, 173, 175, 180, 182, 183, 185, 188, 191, 192, 193, 197, 198, 201, 204, 205, 207, 210, 212, 214, 217, 220, 224, 227, 230, 234, 235, 242, 245, 250, 252, 256, 262, 266, 277, 297, 298, 324, 325, 327, 331, 333, 335, 344, 353, 363, 369, 375, 376, 378, 385, 386, 389, 390, 392, 393, 395, 399, 411, 418, 427, 428, 429, 430, 434, 436, 439, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 473, 480, 481, 485, 486, 489, 505, 513, 519, 522, 529, 530, 531, 533, 534, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 552, 554, 555, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 583, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 611, 615, 616, 617, 618, 619, 620, 621, 622, 623, 627, 632, 634, 635, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 669, 670, 671, 672, 673, 674, 677, 679, 684, 685, 687, 688, 689, 690, 691, 697, 699, 701, 705, 706, 707, 709, 714, 721, 729, 736, 740, 748, 750, 772, 774, 778, 795, 815, 862, 876, 878, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 896, 899, 900, 901, 911, 913, 916, 922, 925, 926, 929, 930, 932, 944, 948, 949, 950, 951, 953, 954, 955, 956, 958, 959, 960, 968, 972, 973, 975, 976, 977, 998, 1000, 1002, 1003, 1004, 1007, 1013, 1029, 1031, 1035, 1038, 1039, 1046, 1048, 1051, 1078, 1080, 1081, 1083, 1093, 1100, 1105], "els": [6, 20, 41, 48, 61, 108, 109, 132, 134, 135, 138, 147, 152, 155, 165, 168, 171, 175, 183, 185, 188, 191, 192, 193, 197, 201, 204, 205, 208, 209, 210, 212, 216, 217, 222, 224, 227, 231, 233, 242, 244, 245, 250, 252, 262, 266, 272, 287, 298, 309, 331, 337, 348, 353, 364, 370, 371, 377, 381, 384, 388, 389, 397, 401, 406, 407, 411, 419, 420, 434, 458, 465, 468, 522, 545, 569, 570, 580, 587, 601, 621, 629, 634, 667, 688, 690, 697, 701, 708, 710, 711, 740, 750, 774, 785, 786, 791, 810, 812, 815, 821, 842, 863, 876, 879, 884, 910, 911, 913, 916, 918, 956, 963, 975, 976, 979, 990, 998, 1004, 1064, 1081, 1086, 1112], "fals": [6, 44, 108, 109, 135, 137, 151, 152, 165, 170, 175, 180, 182, 183, 185, 188, 191, 197, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 256, 262, 266, 272, 277, 296, 311, 327, 331, 348, 385, 411, 545, 570, 602, 609, 632, 644, 697, 701, 778, 791, 818, 910, 911, 916, 918, 938, 953, 968, 972, 975, 988, 989, 991, 992, 996, 1077, 1078, 1081, 1083, 1100], "56": [6, 128, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 296, 297, 309, 348, 452, 540, 837, 862, 864, 1060, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "x": [6, 22, 30, 40, 59, 61, 137, 143, 151, 152, 153, 155, 165, 175, 180, 182, 184, 185, 188, 191, 201, 204, 207, 208, 212, 214, 220, 224, 227, 230, 232, 233, 242, 245, 249, 252, 261, 262, 266, 298, 302, 344, 347, 348, 354, 369, 370, 372, 375, 378, 379, 383, 385, 393, 395, 399, 422, 473, 483, 520, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 543, 545, 547, 548, 555, 562, 570, 630, 631, 632, 634, 649, 651, 652, 653, 670, 681, 690, 784, 785, 786, 789, 793, 795, 800, 803, 805, 806, 814, 815, 840, 843, 847, 849, 855, 862, 863, 864, 880, 890, 896, 898, 899, 907, 911, 932, 933, 934, 935, 940, 944, 946, 947, 952, 953, 981, 983, 989, 997, 998, 1000, 1001, 1002, 1005, 1006, 1010, 1034, 1061, 1064, 1081, 1093, 1094, 1100], "filter": [6, 28, 104, 107, 111, 149, 152, 185, 192, 205, 222, 245, 251, 254, 258, 259, 266, 475, 492, 527, 685, 686, 711, 783, 802, 851, 1054, 1073, 1079, 1082, 1086, 1100], "57": [6, 128, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 298, 418, 423, 840, 862, 875, 933, 934, 1060], "zero": [6, 30, 36, 128, 134, 150, 152, 153, 155, 165, 175, 183, 185, 188, 201, 207, 212, 214, 217, 220, 224, 227, 242, 266, 302, 324, 333, 351, 676, 686, 690, 717, 729, 744, 789, 818, 833, 840, 864, 884, 905, 911, 914, 917, 920, 925, 926, 992], "two": [6, 11, 16, 28, 30, 32, 33, 34, 36, 40, 42, 52, 67, 83, 104, 120, 122, 125, 126, 131, 132, 133, 134, 147, 152, 153, 154, 160, 164, 165, 170, 175, 176, 178, 180, 182, 183, 185, 188, 189, 191, 193, 194, 195, 199, 201, 202, 205, 207, 210, 211, 212, 214, 215, 220, 221, 223, 224, 226, 228, 229, 230, 242, 244, 245, 248, 250, 251, 252, 260, 262, 264, 265, 266, 270, 271, 272, 276, 288, 294, 302, 308, 311, 320, 321, 332, 339, 369, 375, 377, 378, 381, 383, 384, 387, 388, 390, 392, 395, 397, 401, 406, 407, 409, 410, 411, 412, 421, 424, 437, 439, 449, 453, 454, 473, 483, 485, 505, 513, 516, 522, 538, 543, 545, 562, 585, 627, 628, 629, 630, 631, 667, 673, 676, 677, 679, 686, 689, 691, 708, 710, 711, 756, 758, 761, 823, 825, 845, 855, 857, 862, 863, 864, 881, 884, 885, 892, 902, 903, 911, 916, 925, 930, 940, 950, 958, 964, 967, 970, 975, 978, 979, 985, 988, 991, 1002, 1004, 1006, 1012, 1015, 1017, 1018, 1019, 1022, 1024, 1025, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1051, 1054, 1055, 1061, 1063, 1072, 1080, 1094, 1100, 1113, 1123, 1128], "58": [6, 135, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 309, 411, 864, 933, 934, 944, 1060, 1061], "59": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 309, 934, 935, 944, 1060], "three": [6, 11, 30, 34, 36, 41, 61, 108, 109, 133, 145, 152, 153, 164, 165, 168, 169, 175, 180, 182, 183, 185, 191, 199, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 250, 251, 252, 254, 260, 261, 262, 266, 271, 272, 302, 320, 389, 564, 609, 791, 800, 803, 818, 855, 862, 864, 884, 916, 925, 960, 970, 988, 992, 1002, 1004, 1006, 1018, 1024, 1055, 1056, 1114, 1128], "60": [6, 61, 104, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 232, 233, 242, 245, 249, 252, 262, 266, 272, 296, 297, 453, 454, 455, 467, 468, 469, 476, 800, 862, 863, 864, 958, 1060, 1061], "61": [6, 61, 142, 153, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 294, 297, 302, 307, 1060, 1061], "62": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 800, 1013, 1060], "63": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 302, 307, 1013, 1060], "k": [6, 28, 134, 153, 155, 165, 168, 180, 182, 185, 188, 192, 193, 204, 207, 212, 214, 217, 220, 227, 230, 242, 245, 251, 252, 262, 272, 279, 303, 304, 323, 451, 584, 627, 689, 711, 818, 865, 900, 1054, 1057, 1063, 1073, 1093], "v": [6, 19, 22, 30, 86, 114, 128, 132, 139, 153, 156, 159, 165, 169, 171, 173, 177, 179, 180, 183, 184, 185, 190, 192, 193, 194, 195, 201, 204, 205, 207, 208, 210, 211, 213, 219, 222, 223, 225, 228, 230, 234, 241, 242, 245, 248, 253, 261, 263, 267, 271, 272, 278, 288, 302, 399, 423, 428, 449, 475, 509, 527, 584, 604, 627, 631, 635, 640, 641, 642, 649, 650, 651, 652, 653, 658, 661, 662, 663, 669, 675, 676, 677, 700, 707, 710, 711, 720, 725, 728, 730, 735, 739, 741, 745, 749, 750, 751, 753, 755, 758, 760, 762, 766, 767, 769, 773, 776, 779, 784, 788, 791, 792, 795, 818, 820, 847, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 925, 926, 932, 975, 998, 1086, 1095, 1096, 1108, 1110, 1127, 1129], "65": [6, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 617, 920, 1060, 1061], "item": [6, 132, 152, 154, 165, 170, 175, 180, 182, 185, 188, 191, 192, 196, 197, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 232, 236, 237, 239, 242, 245, 250, 252, 262, 266, 272, 283, 296, 387, 391, 393, 412, 676, 708, 710, 711, 925, 926, 960, 961, 962, 968, 994, 1001, 1004, 1006, 1044, 1086, 1093], "66": [6, 135, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 607, 1013, 1060, 1061], "": [6, 7, 13, 19, 22, 33, 35, 36, 38, 41, 42, 43, 46, 53, 57, 59, 60, 61, 63, 64, 76, 87, 102, 106, 107, 111, 118, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 149, 152, 153, 154, 156, 158, 159, 161, 162, 164, 165, 168, 170, 171, 175, 176, 180, 182, 183, 184, 185, 186, 188, 191, 193, 194, 197, 198, 201, 204, 205, 207, 208, 210, 211, 212, 214, 217, 218, 220, 224, 227, 230, 233, 236, 237, 239, 242, 245, 248, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 266, 269, 272, 274, 276, 279, 283, 287, 288, 296, 297, 299, 302, 305, 306, 320, 322, 335, 337, 343, 348, 369, 370, 373, 382, 387, 389, 391, 392, 393, 394, 395, 399, 410, 411, 412, 414, 415, 417, 419, 420, 423, 424, 427, 428, 429, 431, 432, 433, 434, 437, 438, 449, 451, 452, 454, 455, 459, 470, 472, 483, 484, 485, 486, 489, 495, 497, 498, 506, 509, 512, 513, 515, 518, 521, 524, 531, 533, 534, 537, 538, 541, 542, 544, 545, 554, 564, 574, 575, 585, 592, 594, 599, 601, 604, 605, 607, 611, 614, 618, 628, 629, 631, 633, 635, 638, 639, 640, 641, 644, 648, 649, 655, 664, 667, 669, 672, 676, 677, 679, 681, 685, 686, 687, 689, 691, 699, 701, 702, 707, 709, 710, 711, 717, 726, 729, 731, 736, 742, 744, 754, 763, 766, 778, 783, 784, 785, 786, 789, 790, 793, 795, 796, 800, 801, 802, 804, 808, 810, 812, 814, 815, 816, 818, 820, 821, 837, 840, 841, 843, 844, 846, 847, 849, 850, 851, 855, 858, 862, 863, 864, 865, 866, 873, 874, 875, 876, 878, 879, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 892, 894, 896, 898, 899, 901, 902, 903, 907, 908, 911, 913, 916, 917, 918, 920, 921, 922, 924, 926, 928, 929, 930, 935, 944, 946, 947, 948, 949, 950, 951, 953, 954, 955, 958, 959, 961, 962, 963, 967, 968, 975, 979, 980, 981, 984, 988, 989, 995, 998, 1001, 1002, 1005, 1006, 1013, 1018, 1025, 1036, 1043, 1044, 1045, 1047, 1055, 1062, 1067, 1068, 1071, 1072, 1075, 1082, 1083, 1084, 1085, 1087, 1088, 1093, 1094, 1099, 1102, 1104, 1105, 1108, 1113, 1115, 1118, 1131], "rot": [6, 185, 196], "gruen": [6, 185], "blau": [6, 185, 196], "67": [6, 142, 153, 165, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 411, 476, 920, 1001, 1013, 1060, 1061], "69": [6, 59, 137, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 1060, 1061, 1083], "schwarz": [6, 185, 196], "70": [6, 59, 134, 142, 165, 170, 172, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 411, 476, 862, 863, 864, 958, 1060, 1061, 1093], "add": [6, 22, 40, 42, 47, 63, 112, 114, 116, 127, 128, 132, 133, 134, 138, 139, 143, 147, 152, 161, 164, 165, 168, 171, 180, 182, 183, 185, 188, 191, 193, 197, 201, 204, 205, 207, 212, 217, 220, 224, 227, 230, 236, 237, 242, 245, 248, 252, 256, 262, 266, 272, 277, 302, 308, 350, 351, 390, 391, 399, 412, 413, 419, 422, 429, 431, 432, 448, 449, 453, 458, 459, 470, 478, 485, 487, 505, 519, 529, 542, 543, 545, 547, 616, 617, 618, 627, 635, 655, 666, 677, 685, 699, 701, 724, 726, 727, 731, 738, 746, 748, 758, 771, 774, 784, 857, 862, 863, 864, 892, 916, 918, 920, 926, 931, 944, 946, 953, 954, 976, 980, 988, 1006, 1011, 1081, 1093, 1094, 1100], "71": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 933, 934, 1060, 1061], "72": [6, 142, 165, 170, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 294, 297, 302, 307, 537, 849, 944, 1013, 1060, 1061], "remov": [6, 55, 97, 107, 111, 138, 139, 152, 154, 165, 180, 185, 191, 197, 205, 207, 212, 214, 220, 224, 227, 231, 232, 238, 245, 247, 248, 262, 266, 268, 269, 272, 414, 415, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 493, 494, 499, 503, 522, 527, 557, 563, 580, 613, 635, 688, 699, 700, 701, 706, 709, 710, 711, 719, 736, 746, 754, 777, 784, 785, 786, 787, 788, 791, 792, 805, 806, 808, 810, 811, 812, 813, 815, 816, 822, 823, 824, 825, 827, 828, 830, 832, 838, 854, 865, 875, 877, 883, 885, 888, 893, 895, 898, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 958, 978, 988, 1003, 1004, 1005, 1038], "73": [6, 142, 153, 165, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 294, 297, 1060], "74": [6, 135, 137, 142, 165, 175, 180, 182, 185, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 840, 849, 1013, 1060, 1061], "75": [6, 142, 165, 175, 180, 182, 185, 188, 191, 193, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 411, 1060, 1061], "sum": [6, 36, 61, 165, 185, 189, 190, 204, 205, 207, 210, 212, 220, 223, 224, 227, 230, 245, 252, 360, 375, 390, 392, 393, 395, 459, 485, 505, 529, 543, 545, 558, 562, 610, 624, 711, 917, 975, 991, 1077], "100": [6, 30, 131, 132, 137, 147, 151, 152, 165, 175, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 223, 224, 227, 230, 232, 233, 242, 245, 248, 249, 250, 252, 256, 262, 266, 272, 297, 298, 302, 307, 360, 366, 367, 409, 412, 425, 434, 467, 468, 476, 495, 557, 558, 559, 560, 561, 563, 564, 565, 566, 580, 627, 644, 665, 729, 768, 814, 817, 840, 857, 896, 918, 920, 924, 925, 933, 934, 959, 991, 995, 1013, 1044, 1093], "5050": [6, 165, 185, 207, 220, 227, 252], "bestimmen": [6, 185], "maximum": [6, 28, 125, 165, 175, 176, 178, 180, 183, 185, 188, 189, 195, 199, 201, 202, 204, 205, 207, 211, 212, 214, 215, 217, 220, 221, 223, 224, 226, 228, 229, 244, 245, 251, 252, 264, 265, 266, 270, 271, 298, 350, 623, 701, 711, 719, 795, 855, 920, 926, 998, 1015, 1017, 1018, 1019, 1022, 1025, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1055, 1059, 1060, 1061, 1062, 1088, 1123], "zwei": [6, 62, 141, 151, 159, 165, 177, 180, 182, 185, 188, 201, 204, 212, 217, 220, 224, 230, 252, 272, 297, 493, 584, 585, 586, 587, 845, 1110, 1127], "inlin": [6, 112, 153, 159, 171, 185, 201, 230, 233, 235, 257, 370, 392, 395, 516, 531, 545, 584, 621, 673, 691, 952, 1031], "ohn": [6, 22, 149, 151, 159, 185, 188, 780, 846, 1109, 1129, 1130, 1131], "funktion": [6, 22, 155, 159, 165, 176, 177, 178, 182, 185, 188, 191, 212, 214, 217, 220, 252, 297, 1123], "666": [6, 40, 48, 105, 151, 152, 165, 175, 180, 182, 185, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 293, 294, 295, 297, 298, 333, 413, 432, 487, 488, 489, 490, 491, 495, 496, 497, 498, 500, 501, 503, 510, 522, 529, 533, 542, 544, 567, 568, 569, 570, 571, 573, 576, 584, 587, 607, 611, 640, 642, 649, 651, 652, 653, 657, 677, 681, 684, 686, 691, 694, 705, 706, 707, 716, 717, 951, 955, 997, 998, 1001, 1105], "b": [6, 20, 30, 36, 61, 71, 72, 105, 114, 135, 147, 151, 152, 153, 155, 165, 170, 175, 180, 182, 185, 188, 191, 198, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 277, 294, 296, 297, 298, 334, 342, 344, 353, 369, 383, 386, 399, 529, 531, 539, 540, 546, 547, 548, 549, 554, 598, 599, 604, 605, 634, 640, 674, 681, 691, 709, 758, 789, 801, 818, 840, 845, 846, 862, 863, 864, 903, 919, 948, 954, 963, 966, 978, 986, 987, 993, 996, 998, 1000, 1001, 1006, 1072, 1075, 1088, 1108, 1117, 1119, 1124], "var1": [6, 175, 185, 1021], "var2": [6, 175, 185, 1021], "6712": [6, 185, 207], "isn": [6, 131, 147, 185, 251, 254, 310, 324, 375, 562, 566, 605, 628, 655, 675, 862, 1000, 1100], "fehler": [6, 159, 165, 185, 302, 307], "link": [6, 12, 16, 26, 30, 42, 63, 101, 102, 111, 125, 128, 129, 131, 132, 138, 139, 140, 141, 142, 143, 149, 151, 159, 165, 172, 185, 208, 210, 238, 239, 247, 248, 256, 261, 268, 269, 274, 302, 315, 316, 365, 378, 384, 388, 392, 397, 401, 406, 407, 412, 415, 417, 418, 423, 433, 447, 470, 475, 476, 477, 478, 479, 480, 481, 482, 485, 505, 512, 513, 527, 542, 629, 635, 643, 667, 677, 678, 708, 709, 710, 711, 719, 720, 724, 725, 728, 736, 739, 748, 749, 758, 760, 762, 767, 773, 776, 779, 788, 838, 840, 845, 854, 863, 870, 900, 903, 905, 932, 933, 934, 935, 937, 938, 939, 940, 942, 944, 950, 1055, 1087, 1097, 1100, 1107, 1108, 1115], "recht": [6, 62, 140, 141, 151, 159, 165, 176, 185, 1123, 1124], "\u212c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2145": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u212d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2102": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2146": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03dd": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2130": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2147": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2131": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u02c7": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u210f": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u210b": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2111": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2148": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2110": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2124": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2112": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2133": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2115": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2134": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u210c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2119": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u210d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u211a": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u211c": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u211b": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u211d": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03f5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03d5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03c5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03b5": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03f0": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03c6": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03d6": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03f1": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03c2": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u03d1": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "\u2128": [7, 23, 24, 25, 36, 39, 40, 41, 42, 43, 48, 52, 53, 61, 71, 72, 95, 104, 111, 112, 168, 169, 171, 172, 173, 174, 176, 178, 179, 186, 189, 192, 193, 194, 195, 199, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 232, 236, 237, 238, 239, 240, 247, 248, 250, 257, 258, 259, 260, 261, 268, 269, 274, 275, 276, 279, 280, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 309, 310, 311, 312, 313, 314, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 448, 449, 456, 457, 458, 459, 460, 462, 463, 464, 470, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 554, 555, 562, 563, 564, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 592, 594, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 648, 649, 654, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 709, 713, 714, 716, 717, 719, 721, 722, 724, 726, 727, 729, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 760, 761, 763, 765, 766, 768, 771, 772, 774, 775, 777, 778, 780, 782, 783, 784, 789, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 814, 815, 816, 817, 818, 819, 820, 821, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 856, 857, 858, 859, 862, 865, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 882, 883, 884, 887, 888, 889, 890, 891, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 913, 914, 916, 918, 919, 920, 932, 933, 934, 935, 940, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 958, 960, 963, 964, 966, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1065, 1067, 1068, 1070, 1071, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1089, 1093, 1094, 1095, 1096, 1123], "start": [7, 40, 108, 109, 126, 128, 131, 132, 133, 134, 137, 142, 143, 147, 151, 156, 161, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 186, 189, 193, 194, 199, 205, 214, 220, 221, 230, 232, 245, 248, 250, 252, 254, 257, 259, 261, 266, 269, 288, 305, 319, 322, 329, 332, 333, 342, 345, 359, 382, 403, 404, 417, 425, 429, 432, 439, 505, 516, 522, 588, 599, 604, 607, 627, 679, 702, 709, 719, 758, 771, 785, 786, 790, 791, 794, 796, 797, 818, 819, 831, 840, 842, 855, 881, 882, 891, 894, 901, 902, 906, 910, 911, 914, 916, 919, 925, 929, 932, 946, 951, 958, 963, 964, 966, 967, 975, 985, 986, 992, 1002, 1018, 1025, 1026, 1044, 1063, 1068, 1076, 1077, 1081, 1084, 1093, 1101, 1113, 1116], "mittwoch": [7, 176, 178, 186], "00": [7, 134, 135, 137, 142, 147, 155, 159, 167, 168, 169, 171, 172, 173, 174, 176, 178, 180, 182, 184, 186, 189, 193, 199, 201, 207, 217, 220, 221, 248, 249, 256, 257, 259, 295, 403, 411, 425, 680, 702, 709, 785, 786, 840, 862, 863, 864, 916, 935, 944, 982, 1093], "cours": [7, 12, 38, 102, 114, 115, 128, 129, 130, 131, 132, 134, 147, 160, 161, 171, 179, 183, 189, 194, 199, 210, 218, 221, 238, 240, 248, 257, 259, 260, 274, 275, 302, 320, 321, 323, 372, 373, 389, 416, 427, 433, 439, 484, 709, 733, 758, 770, 785, 786, 847, 856, 885, 892, 934, 956, 957, 979, 1011, 1043, 1052, 1056, 1072, 1073, 1087, 1113, 1116, 1128], "tectrain": [7, 10, 155, 167, 176, 178, 186, 189, 192, 193, 194, 195, 199, 211, 223, 320], "materi": [7, 11, 12, 13, 16, 22, 26, 63, 95, 104, 125, 128, 129, 132, 146, 147, 164, 167, 168, 169, 171, 173, 174, 176, 178, 179, 183, 186, 189, 192, 194, 195, 198, 199, 202, 205, 208, 210, 211, 223, 226, 229, 232, 236, 237, 239, 241, 244, 251, 254, 260, 261, 265, 271, 275, 276, 279, 280, 302, 310, 320, 412, 414, 415, 416, 417, 418, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 434, 436, 439, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 483, 485, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 527, 607, 687, 712, 860, 871, 896, 899, 956, 957, 959, 979, 980, 1008, 1058, 1073, 1074, 1087, 1098, 1102, 1110, 1112, 1115, 1117, 1118, 1124], "program": [7, 28, 29, 40, 57, 60, 70, 71, 72, 74, 76, 82, 83, 88, 95, 99, 108, 109, 111, 125, 127, 128, 129, 131, 132, 133, 134, 137, 139, 142, 143, 145, 147, 150, 152, 153, 155, 156, 160, 167, 168, 169, 171, 172, 173, 178, 183, 184, 189, 192, 193, 199, 201, 202, 205, 208, 211, 215, 218, 221, 222, 223, 229, 234, 238, 247, 250, 251, 254, 257, 259, 267, 268, 269, 271, 275, 280, 287, 288, 289, 290, 291, 292, 293, 299, 301, 302, 303, 304, 305, 306, 307, 308, 313, 315, 316, 319, 321, 326, 328, 329, 332, 334, 335, 337, 338, 339, 340, 343, 345, 348, 350, 355, 368, 377, 381, 382, 384, 386, 388, 389, 396, 398, 401, 403, 404, 405, 406, 410, 411, 412, 416, 417, 421, 422, 425, 427, 433, 437, 447, 448, 449, 453, 454, 455, 470, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 487, 492, 494, 516, 522, 527, 528, 534, 535, 550, 553, 556, 572, 578, 582, 591, 592, 594, 595, 600, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 667, 669, 672, 677, 682, 683, 687, 692, 694, 700, 708, 710, 711, 712, 716, 727, 729, 738, 758, 772, 774, 775, 788, 790, 791, 792, 793, 794, 795, 798, 800, 801, 802, 813, 818, 821, 847, 851, 854, 855, 857, 860, 861, 862, 863, 871, 875, 878, 880, 881, 882, 883, 884, 885, 888, 889, 890, 891, 893, 897, 898, 902, 906, 909, 912, 915, 916, 917, 918, 922, 923, 925, 930, 931, 933, 940, 944, 946, 949, 950, 956, 957, 959, 965, 966, 967, 968, 979, 982, 986, 987, 990, 991, 994, 998, 999, 1001, 1008, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1059, 1061, 1062, 1063, 1066, 1068, 1069, 1071, 1072, 1073, 1075, 1079, 1087, 1088, 1090, 1092, 1093, 1097, 1100, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120], "absolut": [7, 28, 63, 88, 97, 111, 130, 134, 139, 145, 148, 155, 165, 168, 169, 171, 173, 184, 189, 193, 201, 207, 208, 215, 217, 218, 220, 221, 224, 229, 232, 238, 241, 244, 247, 248, 251, 254, 260, 261, 265, 268, 269, 271, 276, 279, 280, 288, 289, 290, 291, 292, 293, 299, 301, 302, 305, 320, 405, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 697, 700, 710, 711, 712, 756, 768, 784, 785, 786, 787, 788, 791, 792, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 874, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1063, 1066, 1069, 1072, 1073, 1075, 1079, 1082, 1084, 1087, 1090, 1092, 1097], "beginn": [7, 28, 30, 76, 88, 129, 130, 140, 145, 148, 159, 165, 168, 169, 171, 173, 184, 199, 202, 203, 205, 208, 215, 218, 221, 225, 232, 244, 251, 254, 260, 261, 271, 276, 279, 280, 288, 289, 290, 291, 292, 293, 301, 302, 305, 347, 655, 711, 712, 957, 964, 965, 966, 967, 971, 979, 981, 987, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1063, 1066, 1069, 1072, 1073, 1075, 1079, 1087, 1090, 1092, 1097], "advanc": [7, 28, 76, 88, 129, 139, 145, 148, 153, 156, 159, 169, 173, 181, 184, 189, 199, 204, 205, 215, 229, 251, 271, 288, 289, 290, 291, 292, 293, 301, 302, 303, 304, 305, 319, 397, 399, 401, 406, 407, 559, 629, 667, 702, 708, 710, 711, 712, 899, 956, 957, 959, 964, 965, 966, 967, 971, 979, 981, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1061, 1062, 1063, 1066, 1069, 1072, 1073, 1075, 1079, 1086, 1087, 1090, 1092, 1097, 1100, 1114], "product": [7, 28, 36, 41, 76, 83, 88, 134, 145, 148, 168, 169, 171, 173, 189, 208, 215, 218, 221, 229, 232, 241, 244, 251, 254, 256, 260, 261, 265, 271, 276, 279, 280, 288, 289, 290, 291, 292, 293, 301, 302, 305, 405, 409, 425, 711, 712, 855, 864, 935, 949, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1063, 1066, 1069, 1072, 1073, 1075, 1079, 1087, 1090, 1092, 1097], "html": [7, 16, 17, 22, 37, 38, 129, 138, 151, 159, 176, 186, 189, 192, 196, 199, 202, 205, 208, 224, 255, 297, 607, 714, 729, 735, 818, 840, 926, 930, 1001, 1065, 1070], "download": [7, 16, 61, 63, 104, 120, 131, 137, 139, 143, 147, 152, 155, 164, 171, 176, 184, 186, 189, 192, 193, 194, 199, 202, 205, 215, 218, 221, 223, 226, 229, 232, 241, 244, 251, 255, 262, 293, 322, 412, 415, 476, 477, 478, 479, 480, 481, 482, 485, 486, 531, 616, 618, 622, 623, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 677, 679, 818, 820, 840, 842, 855, 862, 863, 864, 874, 940, 946, 980, 1013, 1025, 1034, 1044, 1045, 1047, 1058, 1060, 1062, 1088], "github": [7, 22, 40, 42, 63, 95, 104, 107, 111, 112, 114, 116, 128, 129, 139, 143, 144, 146, 147, 150, 152, 159, 160, 161, 171, 173, 178, 179, 183, 184, 186, 193, 194, 195, 199, 201, 202, 205, 208, 210, 211, 215, 218, 221, 223, 226, 229, 232, 236, 237, 239, 240, 241, 244, 248, 251, 257, 258, 259, 261, 265, 269, 271, 275, 276, 280, 283, 301, 306, 307, 308, 309, 316, 321, 322, 474, 505, 547, 714, 717, 719, 722, 724, 727, 736, 738, 748, 750, 758, 759, 760, 761, 766, 770, 857, 862, 864, 932, 933, 934, 936, 942, 946, 948, 949, 950], "repositori": [7, 22, 75, 95, 107, 114, 119, 128, 135, 138, 146, 150, 159, 161, 168, 169, 179, 184, 186, 189, 193, 194, 195, 199, 202, 205, 210, 211, 215, 218, 221, 223, 226, 232, 240, 248, 258, 259, 261, 265, 271, 275, 276, 280, 287, 301, 302, 307, 475, 492, 527, 711, 758, 1102, 1107], "kurssprach": [7, 176, 186, 195, 211, 223], "kurs": [7, 22, 129, 146, 167, 178, 186, 195, 211, 223, 1107, 1108, 1109, 1117, 1124, 1131], "viel": [7, 22, 150, 155, 159, 165, 176, 186, 195, 201, 211, 212, 223, 242, 1110, 1111, 1117, 1125, 1126], "spezifisch": [7, 176, 186, 195, 211, 223, 1108, 1127, 1130], "werden": [7, 35, 140, 141, 146, 149, 150, 151, 159, 165, 167, 176, 177, 180, 186, 195, 196, 211, 223, 235, 846, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1130, 1131], "hier": [7, 16, 22, 62, 140, 141, 146, 149, 150, 152, 155, 159, 167, 171, 175, 176, 182, 186, 192, 195, 196, 205, 211, 214, 223, 224, 266, 320, 1107, 1110, 1117, 1123, 1124, 1126, 1127, 1129], "unterrichtet": [7, 176, 186, 195, 211, 223], "themenreihenfolg": [7, 176, 186, 195, 211, 223], "\u00fcbungen": [7, 146, 159, 167, 176, 177, 186, 195, 211, 223, 320, 1110, 1117, 1119, 1123, 1126], "herdt": [7, 125, 186, 195, 211, 223], "skriptum": [7, 176, 186, 195, 211, 223, 1123], "beispielen": [7, 146, 172, 174, 176, 186, 195, 211, 223, 320, 321, 1115, 1128], "\u00fcbernommen": [7, 176, 186, 195, 211, 223], "etwa": [7, 22, 140, 141, 150, 155, 165, 167, 176, 186, 188, 195, 211, 223, 320, 1108, 1110, 1117, 1123, 1124, 1126, 1131], "allgemein": [7, 176, 186, 195, 211, 223, 1123], "gehalten": [7, 128, 155, 167, 176, 186, 195, 211, 223, 1107, 1112, 1123], "allgemeinen": [7, 176, 180, 186, 195, 211, 223, 1126], "dadurch": [7, 176, 186, 195, 211, 223, 320, 1110, 1130], "verwirrend": [7, 176, 186, 195, 211, 223, 1123], "weswegen": [7, 176, 186, 195, 211, 223], "vielen": [7, 22, 150, 175, 186, 195, 211, 223, 320, 1117, 1119], "f\u00e4llen": [7, 22, 176, 186, 195, 211, 223], "ausnahmen": [7, 176, 186, 195, 211, 223], "gemacht": [7, 22, 140, 146, 176, 186, 195, 211, 223, 1123, 1131], "kursstruktur": [7, 186], "sieh": [7, 22, 149, 150, 151, 155, 159, 165, 176, 178, 181, 186, 195, 211, 223, 320, 1108, 1109, 1123], "jjj": [7, 129, 173, 178, 186, 208, 256, 261, 311, 713, 714, 715, 719, 727], "hello": [7, 28, 61, 88, 125, 143, 165, 168, 171, 175, 176, 178, 182, 186, 188, 189, 193, 195, 197, 199, 201, 202, 205, 207, 210, 211, 212, 214, 215, 221, 222, 223, 224, 226, 227, 229, 231, 244, 245, 251, 254, 262, 264, 265, 270, 271, 288, 289, 290, 291, 292, 293, 297, 298, 302, 337, 340, 344, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 534, 537, 607, 629, 635, 638, 655, 660, 661, 662, 663, 667, 708, 710, 711, 715, 718, 720, 723, 725, 728, 735, 739, 743, 749, 755, 760, 762, 767, 770, 773, 776, 779, 785, 786, 789, 790, 822, 824, 829, 830, 837, 854, 865, 887, 911, 932, 933, 934, 944, 946, 948, 949, 950, 957, 964, 965, 966, 967, 971, 979, 983, 984, 990, 993, 995, 999, 1000, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1083, 1087, 1109, 1123], "py": [7, 16, 20, 30, 38, 61, 63, 116, 128, 147, 151, 152, 155, 163, 164, 165, 168, 169, 171, 173, 183, 186, 192, 198, 201, 205, 207, 208, 211, 212, 215, 217, 218, 220, 221, 223, 224, 230, 232, 244, 250, 251, 252, 260, 261, 265, 266, 271, 279, 287, 302, 411, 669, 862, 918, 920, 953, 954, 955, 956, 958, 959, 960, 963, 964, 966, 968, 969, 975, 976, 982, 983, 985, 991, 997, 998, 1002, 1008, 1010, 1011, 1012, 1013, 1017, 1018, 1020, 1021, 1023, 1025, 1030, 1034, 1036, 1038, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1058, 1059, 1064, 1067, 1075, 1080, 1081, 1086, 1093, 1094], "commandlin": [7, 28, 40, 78, 88, 97, 111, 125, 128, 150, 152, 172, 174, 184, 186, 189, 193, 199, 210, 211, 215, 221, 222, 223, 226, 229, 244, 251, 254, 260, 264, 265, 270, 271, 279, 302, 303, 304, 305, 306, 320, 377, 381, 384, 388, 397, 401, 406, 407, 410, 412, 422, 433, 447, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 629, 667, 700, 708, 710, 711, 727, 758, 781, 785, 786, 787, 788, 791, 792, 798, 799, 800, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 819, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 855, 863, 877, 883, 885, 893, 895, 909, 911, 912, 915, 917, 931, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 950, 979, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1109, 1117, 1119, 1120, 1124, 1125, 1126], "swap": [7, 28, 134, 170, 176, 186, 188, 195, 207, 210, 211, 223, 228, 229, 238, 247, 248, 268, 269, 377, 381, 384, 388, 397, 401, 406, 407, 505, 629, 667, 708, 710, 711, 744, 788, 799, 800, 854, 986, 1015, 1017, 1018, 1019, 1020, 1022, 1054, 1123, 1127], "exercis": [7, 28, 76, 91, 95, 100, 102, 104, 111, 112, 129, 151, 159, 164, 171, 172, 176, 178, 183, 186, 189, 195, 199, 202, 205, 206, 208, 211, 215, 218, 221, 223, 226, 228, 229, 238, 240, 247, 251, 253, 254, 268, 269, 273, 287, 288, 289, 290, 291, 293, 301, 304, 307, 315, 316, 333, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 426, 434, 474, 495, 496, 497, 498, 500, 501, 502, 507, 527, 594, 595, 609, 629, 667, 695, 708, 710, 711, 712, 719, 781, 785, 786, 788, 792, 799, 809, 811, 813, 838, 848, 854, 870, 893, 895, 904, 912, 931, 938, 979, 980, 1014, 1043, 1054, 1055, 1093, 1113, 1116, 1118, 1123, 1128], "greet": [7, 28, 165, 176, 186, 189, 195, 201, 202, 211, 212, 214, 220, 221, 223, 226, 229, 244, 245, 298, 421, 711, 933, 934, 940, 950, 1015, 1017, 1019, 1022, 1054, 1123], "depend": [7, 12, 27, 28, 61, 76, 111, 125, 128, 129, 132, 133, 139, 143, 162, 164, 176, 186, 189, 194, 195, 201, 202, 207, 208, 211, 217, 220, 221, 223, 226, 229, 244, 261, 269, 275, 302, 317, 325, 341, 343, 351, 354, 370, 387, 399, 405, 409, 413, 417, 420, 424, 427, 434, 440, 474, 486, 512, 514, 522, 602, 628, 676, 699, 709, 711, 717, 770, 781, 788, 792, 799, 802, 813, 838, 848, 855, 863, 881, 933, 944, 948, 950, 957, 979, 980, 982, 1015, 1019, 1028, 1054, 1066, 1087, 1088, 1118, 1120, 1123], "time": [7, 28, 34, 36, 41, 51, 61, 71, 74, 83, 87, 96, 108, 109, 111, 112, 122, 131, 132, 133, 134, 136, 137, 139, 152, 153, 156, 164, 168, 170, 171, 172, 176, 182, 184, 186, 189, 191, 193, 194, 195, 201, 202, 204, 207, 208, 211, 212, 220, 221, 223, 226, 227, 229, 230, 244, 245, 248, 251, 252, 254, 257, 258, 260, 261, 262, 266, 269, 279, 288, 309, 320, 337, 345, 359, 365, 368, 391, 393, 398, 399, 402, 403, 404, 405, 409, 414, 425, 427, 428, 431, 437, 486, 516, 529, 536, 538, 579, 580, 634, 641, 655, 669, 677, 679, 690, 697, 701, 709, 711, 729, 731, 735, 736, 738, 750, 756, 758, 760, 773, 776, 779, 783, 789, 790, 791, 797, 798, 802, 818, 849, 854, 855, 862, 863, 864, 874, 884, 890, 891, 892, 896, 899, 900, 902, 905, 908, 914, 916, 917, 918, 919, 920, 925, 947, 948, 954, 958, 964, 967, 968, 979, 980, 981, 984, 991, 994, 997, 998, 1015, 1017, 1019, 1022, 1054, 1060, 1072, 1077, 1088, 1118, 1123, 1129], "dai": [7, 11, 28, 133, 134, 136, 142, 145, 151, 152, 156, 170, 176, 186, 189, 195, 197, 206, 211, 220, 221, 223, 226, 229, 244, 252, 256, 308, 310, 311, 320, 410, 415, 416, 427, 448, 711, 775, 814, 879, 916, 957, 979, 986, 995, 1015, 1017, 1019, 1022, 1054, 1055, 1062, 1087, 1114, 1115, 1116, 1118, 1123, 1128], "hen": [7, 186], "vehikelkauf": [7, 186], "datentypen": [7, 155, 159, 176, 177, 183, 186, 217, 235, 303, 1110, 1123, 1130], "\u00fcbersicht": [7, 176, 186, 189, 199, 202, 205], "git": [7, 12, 22, 59, 63, 70, 71, 72, 76, 111, 112, 115, 119, 124, 136, 138, 146, 159, 160, 161, 164, 181, 183, 184, 186, 208, 210, 221, 232, 237, 239, 257, 258, 259, 308, 309, 315, 316, 412, 473, 484, 547, 711, 733, 758, 759, 818, 857, 862, 946, 947, 1011, 1102, 1107], "scm": [7, 59, 135, 159, 186, 731], "com": [7, 12, 19, 22, 35, 40, 42, 48, 83, 104, 111, 114, 116, 128, 137, 138, 139, 143, 147, 159, 160, 161, 162, 168, 169, 172, 173, 181, 186, 188, 194, 208, 210, 218, 220, 232, 237, 239, 245, 248, 251, 252, 257, 258, 259, 261, 265, 271, 275, 276, 301, 302, 307, 313, 322, 470, 484, 505, 547, 567, 568, 569, 570, 571, 573, 574, 575, 576, 579, 588, 607, 689, 758, 759, 818, 857, 862, 865, 873, 874, 946, 1011, 1072, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1086], "pep": [7, 128, 176, 186, 258, 260, 261, 279], "The": [7, 12, 16, 28, 29, 38, 47, 51, 55, 57, 60, 61, 63, 76, 82, 88, 97, 104, 105, 106, 107, 108, 109, 111, 115, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 144, 147, 148, 149, 152, 153, 155, 156, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 184, 186, 189, 192, 195, 199, 200, 201, 202, 205, 206, 207, 210, 211, 214, 215, 217, 218, 220, 223, 224, 226, 229, 231, 234, 236, 237, 238, 239, 241, 244, 247, 250, 251, 254, 257, 259, 261, 264, 265, 267, 268, 270, 271, 288, 289, 290, 291, 292, 293, 299, 302, 303, 304, 305, 307, 308, 319, 320, 321, 324, 326, 334, 340, 348, 350, 352, 353, 354, 355, 360, 364, 368, 371, 377, 381, 384, 387, 388, 391, 397, 399, 401, 406, 410, 412, 414, 427, 428, 429, 432, 433, 438, 447, 448, 449, 451, 453, 455, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 492, 494, 527, 528, 530, 534, 535, 537, 546, 547, 548, 549, 550, 553, 556, 564, 572, 578, 582, 591, 594, 595, 600, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 632, 636, 638, 648, 667, 677, 679, 683, 692, 699, 700, 705, 708, 709, 710, 711, 712, 719, 721, 731, 733, 736, 752, 758, 760, 763, 781, 783, 785, 786, 787, 788, 791, 792, 795, 796, 799, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 817, 820, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 836, 848, 854, 858, 862, 863, 864, 877, 879, 883, 885, 888, 889, 890, 891, 893, 895, 898, 902, 903, 905, 906, 909, 912, 915, 916, 917, 926, 929, 930, 933, 936, 937, 938, 939, 940, 941, 942, 943, 946, 947, 948, 949, 950, 951, 955, 957, 958, 961, 962, 965, 966, 967, 969, 970, 971, 978, 980, 982, 984, 985, 992, 996, 999, 1003, 1004, 1006, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1062, 1063, 1066, 1068, 1069, 1072, 1073, 1075, 1079, 1081, 1087, 1090, 1093, 1095, 1097, 1100, 1110, 1113, 1114, 1116, 1123], "zen": [7, 135, 176, 186, 214, 225, 258, 644], "corei": [7, 153, 164, 167, 168, 171, 173, 176, 178, 184, 186, 189, 192, 199, 202, 205, 215, 218, 229, 232, 241, 265, 271, 302, 307, 1056, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1096], "schaefer": [7, 173, 176, 178, 184, 186], "youtub": [7, 19, 139, 153, 164, 167, 169, 171, 173, 176, 178, 186, 193, 260, 261, 279, 288], "channel": [7, 137, 153, 176, 186, 855, 863, 925], "trainer": [7, 11, 22, 23, 57, 60, 139, 158, 159, 164, 176, 186, 237, 239, 257, 414, 416, 484, 531, 679, 863, 957, 964, 979, 980, 1055, 1073, 1085, 1087, 1093, 1113, 1118], "hacker": [7, 176, 186, 1118], "schier": [7, 176, 186], "anzahl": [7, 176, 186], "sehr": [7, 22, 35, 140, 141, 155, 159, 165, 167, 175, 176, 180, 186, 217, 320, 1108, 1110, 1117, 1120, 1123, 1124, 1126, 1131], "guten": [7, 155, 165, 167, 176, 186, 220, 224, 320, 1112], "tutori": [7, 139, 153, 164, 167, 172, 176, 184, 186, 192, 193, 195, 202, 205, 215, 218, 241, 271, 288, 302, 307, 818, 864, 1008, 1010, 1066, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1096], "stil": [7, 176, 186], "repertoir": [7, 27, 147, 176, 186, 433], "hat": [7, 22, 35, 135, 140, 141, 149, 150, 151, 152, 155, 159, 165, 167, 175, 176, 180, 182, 186, 197, 217, 272, 295, 302, 320, 982, 1107, 1110, 1112, 1117, 1124, 1125, 1126, 1129, 1130, 1131], "besser": [7, 22, 140, 151, 175, 176, 186, 196, 1123], "al": [7, 22, 30, 95, 140, 141, 146, 149, 150, 151, 155, 157, 159, 167, 176, 177, 184, 186, 188, 196, 214, 215, 217, 225, 229, 271, 303, 320, 537, 686, 783, 819, 840, 845, 846, 878, 1056, 1107, 1110, 1112, 1117, 1123, 1124, 1125, 1126, 1129], "ander": [7, 155, 165, 176, 186, 196, 204, 217, 297, 302, 307, 311, 320, 784, 1108, 1109, 1112, 1117, 1120, 1125, 1129, 1130], "auswahl": [7, 176, 186], "einleitung": [8, 187], "datatyp": [8, 28, 88, 125, 164, 168, 171, 176, 177, 178, 181, 183, 187, 189, 190, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 221, 222, 223, 225, 226, 228, 231, 241, 243, 246, 253, 261, 263, 267, 273, 288, 289, 290, 291, 292, 293, 302, 307, 341, 348, 533, 562, 630, 711, 925, 957, 962, 964, 965, 966, 967, 971, 979, 990, 999, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087, 1123], "number": [8, 23, 26, 28, 34, 51, 55, 57, 60, 61, 66, 76, 78, 80, 82, 83, 108, 109, 122, 125, 131, 133, 134, 137, 139, 142, 143, 147, 150, 152, 155, 161, 164, 168, 171, 174, 175, 176, 178, 183, 184, 187, 189, 190, 192, 195, 199, 201, 202, 204, 205, 207, 208, 211, 213, 214, 215, 217, 220, 221, 223, 225, 226, 228, 229, 230, 232, 237, 239, 241, 244, 245, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 270, 271, 274, 279, 288, 293, 302, 309, 320, 325, 327, 329, 331, 333, 334, 335, 341, 345, 347, 348, 359, 370, 386, 390, 395, 399, 403, 409, 411, 421, 439, 440, 448, 473, 481, 483, 486, 488, 499, 505, 532, 552, 560, 563, 570, 586, 611, 620, 623, 632, 644, 670, 677, 679, 709, 711, 717, 719, 726, 729, 738, 740, 752, 754, 760, 768, 772, 783, 791, 798, 824, 843, 845, 847, 849, 851, 863, 874, 875, 878, 882, 883, 884, 889, 890, 891, 892, 911, 916, 917, 925, 926, 930, 932, 935, 955, 956, 958, 960, 961, 962, 972, 984, 985, 986, 991, 992, 1002, 1003, 1004, 1006, 1007, 1015, 1018, 1019, 1022, 1025, 1026, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1050, 1054, 1055, 1056, 1059, 1067, 1085, 1086, 1088, 1093, 1106, 1115, 1118, 1123], "integ": [8, 36, 73, 74, 86, 150, 152, 154, 169, 170, 171, 173, 177, 181, 187, 190, 194, 201, 204, 205, 207, 210, 213, 216, 217, 218, 220, 225, 228, 234, 246, 253, 266, 273, 302, 325, 326, 331, 341, 344, 346, 347, 348, 359, 370, 372, 374, 375, 386, 387, 391, 397, 401, 406, 407, 448, 449, 452, 470, 505, 533, 559, 562, 610, 624, 628, 629, 631, 667, 670, 696, 708, 710, 711, 717, 892, 902, 903, 904, 911, 951, 964, 967, 995, 1001, 1007, 1033, 1064, 1080, 1082, 1110, 1114, 1129], "string": [8, 28, 40, 48, 56, 88, 95, 104, 128, 129, 134, 159, 168, 169, 170, 171, 173, 176, 177, 180, 183, 187, 189, 190, 192, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 219, 221, 222, 223, 225, 226, 228, 231, 234, 236, 237, 239, 241, 243, 244, 246, 250, 251, 253, 254, 256, 264, 265, 267, 270, 271, 273, 279, 287, 288, 289, 290, 291, 292, 293, 298, 302, 307, 313, 326, 329, 333, 340, 349, 355, 364, 370, 371, 377, 381, 384, 388, 393, 397, 401, 406, 407, 411, 419, 430, 434, 436, 451, 453, 454, 455, 458, 460, 463, 464, 465, 467, 468, 469, 470, 486, 487, 488, 493, 504, 505, 513, 519, 522, 528, 530, 533, 534, 537, 552, 554, 571, 574, 575, 576, 580, 583, 584, 585, 586, 587, 588, 591, 595, 606, 608, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 629, 630, 631, 633, 635, 636, 640, 655, 659, 661, 662, 663, 664, 667, 669, 671, 672, 676, 686, 687, 688, 689, 691, 708, 709, 710, 711, 790, 881, 892, 896, 899, 903, 911, 916, 925, 929, 956, 957, 960, 968, 977, 979, 984, 992, 1006, 1013, 1014, 1015, 1020, 1025, 1028, 1029, 1030, 1033, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1070, 1071, 1072, 1073, 1075, 1078, 1110, 1123], "compound": [8, 28, 88, 125, 168, 171, 176, 177, 178, 187, 189, 195, 199, 200, 202, 203, 205, 206, 208, 209, 211, 213, 215, 216, 221, 222, 223, 225, 226, 228, 229, 231, 243, 244, 251, 254, 261, 263, 264, 265, 267, 270, 271, 273, 279, 288, 289, 290, 291, 292, 293, 302, 325, 356, 375, 711, 957, 964, 965, 966, 967, 971, 979, 1012, 1013, 1014, 1015, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087, 1123], "list": [8, 26, 28, 35, 61, 88, 97, 111, 116, 125, 128, 129, 132, 139, 143, 154, 159, 161, 164, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 183, 184, 187, 189, 190, 192, 195, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 222, 223, 225, 226, 228, 229, 231, 233, 237, 238, 241, 243, 244, 246, 247, 248, 251, 253, 254, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 273, 279, 287, 294, 297, 299, 302, 306, 307, 308, 320, 378, 384, 388, 389, 397, 401, 403, 405, 406, 407, 411, 412, 415, 424, 431, 433, 434, 473, 475, 483, 486, 519, 521, 523, 527, 531, 532, 537, 562, 578, 591, 595, 614, 624, 629, 632, 667, 675, 681, 686, 699, 700, 708, 709, 710, 711, 712, 720, 724, 725, 728, 735, 736, 739, 749, 760, 762, 766, 767, 773, 776, 779, 784, 785, 786, 787, 788, 791, 792, 798, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 825, 826, 829, 830, 832, 833, 834, 835, 836, 838, 846, 854, 863, 883, 885, 887, 893, 895, 903, 905, 909, 912, 915, 917, 932, 934, 949, 953, 956, 957, 960, 961, 962, 975, 977, 979, 980, 986, 987, 992, 993, 994, 995, 998, 1004, 1006, 1007, 1008, 1013, 1015, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1046, 1048, 1051, 1053, 1054, 1055, 1056, 1061, 1067, 1077, 1080, 1084, 1095, 1100, 1107, 1110, 1123, 1124], "arrai": [8, 95, 106, 111, 155, 176, 177, 182, 187, 189, 193, 194, 196, 202, 210, 215, 220, 229, 232, 236, 237, 257, 265, 271, 325, 334, 340, 344, 355, 364, 371, 381, 384, 388, 390, 392, 393, 396, 397, 401, 406, 407, 485, 488, 511, 519, 522, 560, 561, 563, 565, 567, 570, 571, 576, 580, 592, 612, 619, 620, 621, 622, 623, 624, 627, 629, 667, 675, 690, 708, 710, 711, 729, 790, 795, 911, 988, 992, 1004, 1056, 1059, 1061, 1088, 1123], "javascript": [8, 22, 130, 165, 175, 187, 196, 220, 225, 951, 997], "std": [8, 40, 48, 56, 104, 106, 107, 108, 109, 111, 143, 159, 160, 187, 235, 248, 257, 259, 413, 414, 419, 427, 430, 432, 434, 436, 441, 448, 451, 453, 454, 455, 458, 459, 460, 463, 464, 465, 466, 467, 468, 469, 470, 473, 475, 476, 481, 483, 485, 486, 487, 489, 490, 491, 492, 503, 505, 513, 523, 527, 530, 531, 533, 538, 539, 540, 544, 552, 554, 558, 559, 560, 561, 562, 567, 568, 569, 570, 571, 573, 574, 575, 579, 580, 582, 585, 586, 587, 588, 591, 592, 595, 596, 598, 599, 602, 604, 605, 606, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 624, 629, 631, 634, 635, 636, 637, 638, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 671, 672, 674, 679, 682, 685, 689, 692, 694, 700, 704, 705, 707, 708, 710, 711, 862, 896, 899, 903, 911, 913, 925, 929, 1061, 1100, 1105, 1113], "vector": [8, 12, 104, 106, 108, 109, 111, 159, 187, 193, 210, 236, 237, 250, 256, 257, 259, 432, 434, 458, 459, 475, 476, 483, 489, 490, 491, 492, 503, 521, 523, 527, 531, 533, 538, 543, 567, 569, 570, 571, 573, 576, 578, 591, 595, 609, 611, 612, 619, 620, 621, 622, 624, 630, 631, 635, 640, 641, 642, 649, 650, 651, 652, 653, 655, 675, 676, 679, 705, 707, 711, 929, 985, 1063, 1083, 1105], "dictionari": [8, 28, 61, 88, 154, 164, 168, 169, 170, 171, 173, 176, 177, 178, 181, 183, 187, 189, 190, 195, 199, 200, 202, 203, 205, 206, 208, 209, 211, 213, 215, 216, 219, 222, 223, 225, 226, 228, 229, 231, 234, 241, 243, 244, 246, 251, 253, 254, 258, 260, 261, 263, 264, 265, 267, 270, 271, 273, 276, 279, 302, 307, 310, 676, 711, 957, 960, 964, 965, 966, 967, 970, 971, 975, 979, 1013, 1015, 1023, 1028, 1033, 1034, 1039, 1042, 1043, 1044, 1046, 1048, 1049, 1054, 1056, 1066, 1067, 1073, 1077, 1084, 1087, 1123], "valu": [8, 56, 82, 106, 111, 112, 132, 134, 136, 147, 149, 151, 152, 153, 165, 169, 171, 173, 175, 180, 182, 187, 188, 189, 191, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 207, 208, 210, 212, 214, 215, 217, 220, 224, 227, 229, 230, 241, 242, 245, 248, 250, 252, 262, 265, 266, 271, 272, 288, 296, 302, 324, 329, 331, 333, 334, 344, 347, 348, 349, 357, 359, 360, 368, 370, 372, 373, 378, 389, 393, 395, 397, 401, 406, 407, 411, 414, 419, 421, 424, 429, 432, 434, 448, 449, 451, 454, 458, 460, 463, 465, 466, 468, 479, 480, 481, 483, 486, 493, 505, 522, 531, 532, 533, 536, 542, 545, 583, 585, 587, 588, 629, 631, 632, 638, 640, 649, 655, 658, 661, 662, 663, 667, 676, 687, 701, 705, 708, 710, 711, 714, 717, 736, 738, 740, 742, 758, 768, 790, 803, 854, 863, 884, 892, 894, 895, 897, 898, 899, 902, 905, 911, 914, 925, 926, 929, 930, 949, 951, 953, 956, 960, 964, 966, 968, 975, 986, 987, 988, 996, 998, 1001, 1003, 1004, 1008, 1013, 1016, 1021, 1023, 1026, 1033, 1035, 1056, 1059, 1061, 1067, 1070, 1071, 1077, 1078, 1081, 1082, 1083, 1086, 1100], "map": [8, 30, 32, 40, 57, 60, 104, 106, 107, 134, 141, 159, 165, 179, 181, 183, 187, 189, 190, 192, 193, 196, 204, 205, 207, 222, 236, 237, 239, 245, 257, 259, 266, 283, 302, 405, 430, 434, 463, 467, 468, 469, 475, 486, 492, 521, 523, 527, 582, 585, 586, 587, 588, 591, 595, 624, 627, 631, 635, 641, 667, 686, 687, 688, 690, 710, 711, 742, 754, 916, 925, 926, 974, 978, 987, 988, 1007, 1063, 1086, 1117, 1127], "set": [8, 13, 20, 28, 31, 57, 60, 63, 76, 83, 88, 106, 111, 114, 132, 133, 134, 135, 136, 137, 138, 139, 143, 147, 148, 149, 152, 153, 164, 165, 168, 169, 171, 172, 173, 176, 177, 181, 182, 183, 187, 189, 190, 193, 195, 199, 200, 202, 203, 205, 206, 208, 209, 211, 213, 215, 216, 217, 222, 223, 225, 226, 228, 229, 231, 237, 239, 241, 243, 244, 246, 248, 250, 251, 253, 254, 257, 258, 259, 261, 263, 264, 265, 267, 270, 271, 273, 276, 279, 302, 307, 309, 320, 322, 337, 343, 360, 365, 366, 375, 378, 390, 391, 399, 405, 413, 414, 415, 417, 419, 421, 422, 424, 429, 432, 434, 449, 454, 463, 464, 468, 477, 478, 483, 484, 485, 486, 503, 531, 532, 546, 547, 548, 549, 562, 631, 640, 655, 685, 686, 701, 709, 711, 729, 742, 744, 754, 758, 763, 768, 790, 797, 803, 819, 855, 857, 862, 863, 864, 871, 876, 878, 884, 892, 896, 900, 905, 913, 914, 917, 918, 929, 931, 932, 933, 944, 947, 953, 956, 957, 960, 969, 970, 976, 979, 980, 983, 987, 992, 1011, 1033, 1044, 1051, 1052, 1054, 1056, 1058, 1061, 1062, 1063, 1068, 1072, 1087, 1088, 1100, 1102, 1105, 1116, 1123], "mathematisch": [8, 187, 245], "mengen": [8, 176, 177, 187, 1123], "while": [8, 12, 28, 51, 52, 61, 88, 125, 136, 138, 139, 147, 153, 164, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 187, 188, 189, 191, 192, 195, 196, 197, 199, 201, 202, 205, 206, 207, 210, 211, 213, 215, 216, 218, 219, 221, 222, 223, 224, 226, 228, 229, 231, 241, 244, 245, 251, 253, 254, 258, 260, 264, 265, 266, 270, 271, 272, 279, 288, 289, 290, 291, 292, 293, 294, 302, 305, 307, 325, 327, 331, 333, 335, 342, 347, 349, 363, 364, 370, 371, 375, 377, 381, 384, 385, 388, 390, 392, 397, 399, 401, 406, 407, 417, 429, 434, 448, 455, 473, 522, 558, 562, 563, 566, 568, 570, 573, 588, 611, 617, 627, 629, 640, 655, 656, 657, 663, 667, 688, 699, 701, 705, 708, 710, 711, 735, 738, 746, 748, 758, 760, 766, 767, 773, 776, 779, 791, 795, 802, 854, 855, 862, 863, 875, 880, 881, 882, 883, 890, 899, 905, 910, 911, 914, 916, 922, 925, 929, 944, 949, 957, 958, 959, 960, 964, 967, 979, 980, 984, 989, 994, 1006, 1012, 1013, 1014, 1015, 1019, 1025, 1027, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1062, 1063, 1066, 1069, 1073, 1087, 1110, 1114, 1116, 1118, 1123], "function": [8, 20, 28, 36, 48, 57, 60, 61, 76, 78, 80, 88, 95, 108, 109, 111, 112, 125, 129, 132, 134, 143, 151, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 183, 184, 187, 189, 190, 192, 193, 195, 199, 200, 202, 203, 205, 206, 207, 208, 210, 211, 213, 215, 216, 217, 218, 221, 222, 223, 225, 226, 227, 231, 234, 235, 242, 244, 246, 248, 250, 251, 253, 254, 257, 259, 260, 261, 262, 264, 265, 267, 270, 271, 272, 278, 287, 297, 298, 304, 305, 307, 320, 324, 325, 331, 334, 338, 339, 340, 345, 350, 354, 355, 363, 364, 365, 366, 368, 370, 375, 377, 378, 381, 382, 383, 384, 386, 388, 389, 390, 392, 397, 399, 401, 403, 406, 407, 410, 418, 424, 432, 437, 449, 470, 474, 475, 486, 489, 490, 491, 492, 494, 503, 516, 522, 527, 531, 534, 537, 539, 540, 541, 542, 548, 553, 556, 558, 572, 578, 582, 591, 594, 595, 602, 605, 608, 609, 610, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 631, 632, 635, 636, 644, 647, 653, 655, 664, 665, 666, 667, 669, 671, 672, 677, 683, 687, 689, 690, 700, 708, 709, 710, 711, 722, 725, 728, 729, 735, 739, 742, 746, 749, 752, 758, 760, 762, 767, 773, 774, 776, 777, 778, 779, 788, 791, 792, 854, 862, 875, 877, 883, 884, 885, 892, 893, 895, 900, 901, 902, 908, 909, 911, 912, 915, 917, 930, 932, 940, 950, 957, 960, 961, 962, 963, 971, 979, 981, 984, 985, 989, 991, 1012, 1013, 1014, 1015, 1018, 1021, 1022, 1025, 1026, 1027, 1028, 1033, 1036, 1037, 1039, 1040, 1041, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1066, 1069, 1073, 1075, 1086, 1089, 1093, 1105, 1113, 1114, 1115, 1123], "basic": [9, 27, 28, 70, 71, 72, 75, 76, 81, 95, 99, 101, 104, 108, 109, 111, 112, 128, 129, 132, 134, 139, 142, 147, 148, 153, 156, 159, 168, 181, 194, 199, 210, 218, 220, 223, 224, 248, 250, 257, 258, 259, 267, 275, 283, 301, 302, 303, 304, 305, 307, 309, 313, 319, 321, 371, 377, 381, 384, 388, 397, 399, 401, 403, 404, 406, 407, 414, 416, 417, 424, 431, 433, 434, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 521, 522, 527, 553, 561, 566, 578, 582, 590, 591, 594, 595, 599, 600, 612, 619, 620, 621, 622, 623, 624, 629, 632, 633, 635, 638, 640, 667, 684, 700, 706, 708, 710, 711, 715, 718, 720, 725, 728, 735, 739, 749, 758, 760, 762, 767, 773, 776, 778, 779, 781, 785, 786, 792, 794, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 860, 861, 866, 867, 868, 869, 870, 880, 881, 882, 883, 885, 890, 893, 895, 903, 909, 912, 915, 917, 925, 928, 929, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 949, 987, 1015, 1042, 1043, 1054, 1055, 1067, 1073, 1079, 1080, 1082, 1098, 1102, 1114, 1115, 1128], "xx": [9, 201, 232, 266, 272], "yy": 9, "kur": [10, 22, 150, 152, 155, 167, 320, 1108, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1126, 1127, 1129], "fand": [10, 167, 320], "onlin": [10, 22, 137, 144, 146, 147, 159, 164, 167, 320], "team": [10, 139, 144, 147, 148, 159, 167, 168, 169, 184, 193, 218, 260, 320, 797, 803, 810, 812, 958, 1055, 1107, 1115], "statt": [10, 22, 167, 320, 1124, 1125, 1131], "wurd": [10, 141, 155, 159, 165, 167, 176, 302, 307, 320, 1112, 1123, 1124, 1130], "\u00fcber": [10, 22, 140, 141, 146, 150, 151, 155, 159, 167, 176, 177, 181, 190, 195, 221, 303, 320, 1107, 1117, 1123, 1124, 1129, 1130], "meinen": [10, 22, 167, 195, 211, 223, 320], "partner": [10, 22, 167, 320, 1107], "gebucht": [10, 141, 155, 167, 320], "mehr": [10, 22, 140, 149, 151, 175, 181, 201, 320, 1107, 1108, 1110, 1112, 1117, 1124, 1125, 1126, 1131], "durat": [11, 26, 137, 147, 382, 416, 486, 697, 701, 702, 957, 979, 1055, 1087, 1115, 1116, 1118, 1128], "each": [11, 38, 61, 74, 104, 108, 109, 132, 133, 134, 147, 153, 171, 172, 184, 201, 204, 207, 217, 220, 224, 257, 259, 266, 287, 293, 299, 302, 307, 375, 400, 403, 405, 429, 437, 470, 484, 485, 541, 627, 702, 709, 746, 754, 758, 785, 791, 812, 816, 818, 862, 863, 864, 902, 906, 914, 948, 960, 963, 968, 974, 1034, 1055, 1061, 1063, 1067, 1068, 1083, 1088, 1118, 1128], "about": [11, 22, 28, 29, 37, 40, 41, 42, 43, 44, 47, 61, 63, 66, 73, 78, 81, 82, 88, 95, 111, 112, 120, 125, 126, 128, 132, 133, 134, 136, 139, 147, 156, 160, 161, 164, 168, 169, 170, 171, 172, 173, 176, 183, 184, 189, 192, 193, 194, 195, 199, 201, 202, 205, 208, 209, 210, 211, 213, 215, 217, 218, 220, 221, 223, 225, 226, 229, 238, 241, 243, 244, 246, 247, 248, 254, 258, 259, 264, 265, 268, 270, 271, 273, 279, 283, 288, 289, 290, 291, 292, 293, 302, 304, 307, 313, 343, 348, 357, 359, 387, 390, 391, 393, 399, 403, 405, 409, 423, 429, 522, 531, 532, 555, 562, 628, 637, 641, 642, 672, 676, 681, 690, 691, 709, 711, 727, 729, 758, 768, 777, 785, 786, 804, 821, 855, 862, 863, 864, 875, 879, 885, 900, 917, 925, 951, 957, 958, 960, 967, 968, 975, 979, 987, 998, 1006, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1063, 1072, 1073, 1074, 1075, 1079, 1088, 1093, 1102, 1115, 1116, 1123, 1128], "book": [11, 28, 30, 128, 132, 137, 147, 148, 159, 168, 193, 215, 251, 260, 261, 410, 416, 818, 957, 979, 1055, 1073, 1087, 1114, 1116, 1118, 1128], "separ": [11, 36, 76, 101, 102, 111, 132, 159, 161, 171, 191, 204, 210, 220, 224, 227, 230, 245, 248, 251, 252, 254, 262, 266, 274, 332, 370, 391, 411, 414, 421, 433, 437, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 505, 522, 527, 552, 673, 701, 709, 711, 726, 727, 760, 794, 798, 803, 849, 851, 854, 864, 900, 916, 932, 934, 937, 938, 939, 940, 942, 950, 955, 1012, 1029, 1034, 1055, 1067, 1100, 1110, 1115, 1128], "requir": [11, 12, 26, 35, 37, 40, 59, 87, 106, 111, 124, 128, 132, 133, 134, 137, 139, 143, 152, 160, 162, 164, 168, 172, 180, 191, 194, 205, 208, 210, 212, 217, 218, 232, 248, 257, 259, 260, 313, 324, 357, 387, 389, 412, 421, 424, 432, 452, 454, 474, 483, 486, 505, 554, 567, 583, 620, 631, 637, 638, 644, 647, 652, 653, 677, 684, 855, 863, 864, 875, 880, 916, 918, 925, 944, 949, 957, 970, 979, 980, 998, 1007, 1008, 1011, 1067, 1073, 1087, 1088, 1093, 1095, 1096, 1102, 1114, 1116, 1118, 1128, 1131], "particip": [11, 137, 139, 161, 164, 248, 470, 857, 980, 994, 1014, 1055, 1128], "should": [11, 35, 41, 43, 53, 55, 75, 78, 128, 133, 134, 137, 139, 143, 147, 154, 160, 164, 168, 193, 194, 208, 214, 220, 224, 248, 288, 293, 308, 309, 323, 348, 370, 385, 395, 399, 409, 414, 421, 427, 432, 437, 438, 440, 441, 449, 486, 530, 537, 539, 635, 638, 640, 644, 655, 699, 717, 736, 748, 750, 754, 758, 783, 802, 818, 825, 830, 862, 863, 864, 871, 890, 906, 917, 955, 964, 968, 976, 987, 1021, 1025, 1034, 1062, 1064, 1075, 1088, 1093, 1094, 1128], "fluent": [11, 271, 303, 304, 1056, 1128], "target": [11, 16, 38, 61, 106, 133, 135, 143, 184, 193, 275, 304, 393, 396, 412, 415, 416, 422, 425, 438, 542, 711, 731, 733, 738, 758, 820, 885, 910, 934, 935, 944, 946, 953, 957, 964, 966, 979, 1063, 1073, 1087, 1095, 1118], "audienc": [11, 132, 134, 164, 169, 957, 979, 1011, 1073, 1087, 1113, 1118], "languag": [11, 28, 41, 57, 60, 76, 88, 111, 112, 128, 153, 155, 167, 168, 169, 171, 173, 176, 178, 183, 184, 186, 189, 191, 192, 193, 195, 211, 215, 218, 221, 223, 226, 251, 254, 257, 258, 259, 288, 289, 290, 291, 292, 293, 302, 305, 319, 321, 323, 325, 337, 340, 351, 355, 364, 369, 371, 377, 381, 382, 384, 397, 401, 406, 409, 414, 416, 433, 447, 448, 449, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 492, 494, 527, 528, 535, 540, 542, 550, 553, 555, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 631, 636, 643, 644, 654, 668, 673, 675, 678, 683, 687, 690, 691, 692, 700, 708, 710, 711, 712, 790, 847, 855, 856, 932, 934, 951, 960, 964, 965, 966, 967, 968, 971, 976, 980, 984, 986, 987, 990, 999, 1007, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1062, 1066, 1069, 1072, 1073, 1075, 1079, 1084, 1087, 1090, 1092, 1097, 1102, 1110, 1113, 1114, 1115, 1116, 1118], "english": [11, 28, 104, 125, 152, 171, 178, 189, 199, 202, 211, 215, 221, 223, 226, 228, 229, 244, 251, 256, 264, 265, 270, 271, 300, 301, 302, 307, 416, 711, 957, 979, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054, 1055, 1072, 1073, 1087], "german": [11, 13, 416, 957, 979, 1055, 1072, 1073, 1075, 1087], "see": [11, 12, 22, 26, 28, 40, 41, 43, 44, 48, 51, 53, 55, 61, 63, 75, 76, 83, 87, 97, 104, 111, 112, 117, 118, 120, 125, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 149, 152, 153, 154, 162, 164, 168, 169, 178, 183, 184, 188, 191, 193, 194, 199, 201, 204, 205, 207, 208, 210, 211, 217, 220, 224, 229, 232, 241, 245, 248, 250, 254, 256, 257, 258, 259, 261, 265, 266, 274, 275, 285, 288, 293, 302, 305, 306, 308, 313, 316, 321, 324, 333, 334, 335, 337, 343, 360, 373, 379, 382, 392, 398, 411, 412, 417, 421, 422, 423, 424, 428, 429, 432, 433, 434, 442, 443, 444, 445, 446, 450, 453, 454, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 503, 504, 505, 513, 519, 522, 527, 529, 530, 531, 532, 537, 539, 540, 545, 546, 548, 563, 567, 580, 594, 598, 599, 601, 602, 614, 618, 620, 621, 623, 627, 630, 635, 637, 638, 639, 640, 642, 649, 655, 669, 670, 672, 675, 676, 677, 679, 681, 685, 686, 687, 688, 689, 690, 699, 701, 706, 709, 712, 714, 717, 719, 721, 722, 724, 726, 727, 729, 731, 733, 736, 738, 744, 746, 748, 750, 752, 754, 758, 761, 765, 766, 772, 774, 784, 785, 786, 790, 793, 796, 797, 814, 818, 819, 821, 822, 824, 827, 829, 845, 855, 862, 863, 864, 885, 888, 890, 891, 892, 896, 899, 901, 903, 906, 913, 925, 929, 932, 933, 934, 935, 940, 942, 945, 946, 947, 948, 949, 950, 953, 954, 955, 956, 957, 960, 968, 969, 972, 973, 975, 978, 980, 982, 985, 993, 996, 997, 998, 1008, 1011, 1014, 1023, 1027, 1030, 1041, 1052, 1053, 1059, 1061, 1067, 1072, 1073, 1075, 1077, 1080, 1081, 1082, 1087, 1090, 1093, 1098, 1100, 1105, 1115, 1116, 1118, 1128], "also": [11, 12, 22, 26, 55, 61, 63, 128, 133, 134, 136, 137, 139, 140, 142, 143, 144, 151, 153, 154, 155, 156, 159, 161, 162, 164, 165, 168, 174, 176, 194, 201, 207, 217, 218, 220, 224, 230, 236, 237, 239, 248, 250, 257, 258, 259, 265, 266, 275, 288, 320, 411, 412, 417, 422, 429, 438, 448, 451, 453, 454, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 493, 494, 504, 529, 530, 531, 532, 537, 539, 545, 563, 580, 583, 598, 599, 601, 627, 635, 638, 639, 640, 642, 655, 666, 669, 672, 675, 676, 677, 679, 681, 685, 687, 690, 691, 699, 701, 709, 748, 758, 763, 784, 796, 802, 803, 818, 822, 824, 827, 829, 849, 855, 865, 874, 875, 888, 892, 896, 903, 913, 934, 935, 942, 947, 949, 951, 953, 954, 955, 957, 960, 968, 972, 978, 980, 984, 987, 997, 998, 1001, 1011, 1023, 1027, 1030, 1041, 1061, 1062, 1073, 1077, 1080, 1081, 1082, 1087, 1090, 1093, 1115, 1117, 1123, 1124, 1128], "train": [11, 12, 13, 22, 28, 29, 30, 35, 63, 104, 115, 127, 128, 133, 137, 144, 145, 147, 155, 156, 159, 160, 161, 164, 167, 191, 201, 207, 217, 220, 250, 257, 259, 262, 274, 310, 320, 412, 414, 415, 416, 417, 418, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 434, 436, 439, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 483, 485, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 527, 607, 687, 712, 714, 717, 722, 727, 733, 736, 744, 865, 871, 873, 874, 875, 896, 899, 922, 925, 929, 956, 957, 959, 979, 980, 1008, 1011, 1014, 1058, 1059, 1062, 1063, 1073, 1087, 1098, 1102, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "sourc": [12, 22, 27, 29, 37, 59, 63, 66, 71, 84, 108, 109, 111, 112, 131, 132, 133, 134, 137, 138, 139, 143, 147, 149, 150, 152, 153, 160, 173, 178, 183, 201, 207, 215, 217, 220, 224, 229, 237, 239, 241, 244, 245, 248, 269, 276, 365, 366, 369, 404, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 433, 484, 487, 488, 602, 635, 638, 644, 649, 655, 685, 726, 756, 759, 770, 802, 818, 819, 851, 892, 932, 933, 935, 936, 938, 942, 944, 946, 947, 948, 949, 950, 987, 1043, 1052, 1095, 1102, 1108, 1118, 1125], "under": [12, 20, 33, 53, 131, 132, 134, 139, 160, 171, 173, 320, 434, 449, 486, 794, 795, 862, 863, 864, 865, 866, 867, 874, 875, 917, 932, 956, 963, 970, 1004, 1093], "why": [12, 23, 27, 43, 48, 63, 64, 67, 111, 128, 132, 133, 138, 144, 164, 168, 169, 171, 173, 184, 193, 213, 251, 254, 260, 261, 279, 283, 302, 305, 306, 309, 323, 335, 341, 348, 351, 369, 380, 385, 386, 391, 395, 398, 405, 410, 448, 471, 530, 545, 563, 576, 602, 605, 621, 627, 628, 644, 675, 691, 694, 707, 726, 738, 754, 758, 789, 795, 798, 855, 908, 911, 929, 944, 946, 954, 955, 958, 1004, 1006, 1056, 1061, 1074, 1082], "appli": [12, 74, 81, 129, 134, 173, 191, 250, 256, 352, 387, 393, 411, 542, 642, 677, 731, 758, 798, 801, 818, 862, 863, 888, 949, 1078], "websit": [12, 22, 133, 147, 1089, 1102], "contain": [12, 16, 28, 33, 36, 59, 104, 105, 106, 108, 109, 111, 128, 129, 135, 138, 143, 147, 152, 154, 159, 160, 162, 164, 165, 168, 171, 173, 191, 193, 194, 201, 207, 217, 218, 220, 224, 231, 232, 235, 236, 237, 250, 257, 266, 287, 288, 297, 304, 305, 311, 313, 350, 369, 383, 403, 405, 411, 413, 414, 418, 432, 448, 470, 473, 475, 484, 485, 486, 492, 493, 494, 527, 528, 530, 538, 547, 564, 567, 580, 591, 595, 609, 618, 623, 624, 630, 635, 675, 687, 690, 705, 706, 707, 709, 711, 714, 719, 727, 729, 731, 752, 754, 758, 778, 785, 786, 789, 798, 800, 823, 824, 825, 830, 837, 862, 863, 864, 871, 892, 900, 901, 916, 926, 932, 935, 940, 944, 949, 956, 958, 963, 980, 1002, 1005, 1011, 1013, 1025, 1034, 1038, 1053, 1056, 1058, 1062, 1067, 1070, 1072, 1077, 1088, 1089, 1093, 1099, 1100, 1112, 1113], "give": [12, 26, 38, 51, 57, 60, 108, 109, 125, 129, 131, 132, 134, 139, 142, 153, 156, 160, 161, 168, 173, 184, 192, 224, 229, 241, 257, 259, 321, 335, 336, 351, 367, 370, 378, 403, 409, 411, 414, 429, 481, 483, 499, 516, 552, 567, 613, 621, 644, 673, 758, 784, 791, 809, 811, 863, 864, 883, 884, 896, 899, 918, 920, 925, 926, 932, 935, 944, 953, 956, 979, 996, 1008, 1056, 1060, 1061, 1088, 1093, 1095, 1113, 1116, 1118], "structur": [12, 28, 63, 76, 87, 106, 132, 147, 169, 183, 210, 211, 218, 220, 221, 223, 226, 229, 232, 235, 244, 251, 254, 261, 265, 271, 275, 276, 280, 302, 306, 308, 310, 325, 335, 343, 348, 377, 379, 383, 384, 388, 397, 400, 401, 406, 407, 411, 412, 416, 424, 431, 449, 474, 484, 503, 552, 585, 618, 627, 629, 667, 708, 710, 711, 746, 748, 752, 756, 758, 778, 814, 845, 881, 887, 903, 908, 926, 996, 998, 1038, 1044, 1084, 1087, 1094, 1101, 1113], "much": [12, 26, 33, 36, 61, 78, 131, 132, 133, 134, 139, 142, 147, 156, 162, 164, 168, 169, 170, 172, 194, 205, 207, 208, 210, 212, 218, 232, 233, 236, 237, 239, 251, 254, 260, 261, 279, 283, 305, 337, 348, 359, 395, 399, 409, 424, 449, 528, 538, 544, 563, 584, 604, 627, 628, 637, 638, 642, 655, 667, 668, 669, 673, 675, 677, 687, 691, 710, 711, 714, 729, 736, 744, 746, 752, 754, 758, 797, 798, 847, 855, 858, 861, 863, 875, 917, 926, 929, 930, 932, 934, 944, 951, 954, 955, 968, 969, 974, 975, 978, 987, 1004, 1056, 1062, 1063, 1065, 1093, 1095, 1113], "like": [12, 20, 26, 27, 29, 37, 41, 43, 53, 57, 60, 61, 63, 75, 76, 111, 112, 125, 131, 132, 133, 134, 136, 137, 139, 142, 143, 147, 152, 155, 156, 160, 161, 162, 164, 168, 170, 173, 183, 184, 191, 193, 194, 201, 207, 208, 210, 211, 217, 220, 233, 235, 237, 239, 245, 248, 250, 251, 254, 257, 259, 288, 293, 305, 313, 334, 337, 341, 363, 365, 370, 375, 387, 391, 399, 402, 409, 415, 419, 421, 424, 427, 428, 429, 449, 473, 483, 484, 485, 486, 487, 499, 505, 513, 516, 522, 531, 534, 537, 541, 542, 543, 545, 566, 583, 592, 599, 601, 604, 607, 608, 617, 618, 626, 627, 630, 631, 637, 638, 655, 673, 675, 676, 686, 687, 690, 691, 697, 707, 709, 712, 714, 716, 719, 727, 729, 731, 736, 742, 748, 750, 752, 754, 758, 763, 771, 774, 778, 786, 789, 790, 794, 795, 797, 800, 818, 820, 823, 825, 830, 847, 855, 856, 858, 862, 863, 864, 865, 874, 875, 879, 883, 885, 888, 892, 898, 900, 901, 919, 926, 930, 932, 934, 935, 948, 951, 953, 955, 958, 960, 968, 973, 978, 980, 982, 984, 986, 988, 992, 996, 998, 1001, 1002, 1005, 1008, 1010, 1013, 1021, 1024, 1034, 1035, 1038, 1044, 1045, 1046, 1047, 1048, 1050, 1055, 1058, 1061, 1063, 1064, 1065, 1067, 1075, 1077, 1078, 1083, 1093, 1094, 1095, 1100, 1102, 1113, 1118], "topic": [12, 15, 26, 27, 28, 57, 60, 67, 76, 88, 95, 104, 111, 112, 125, 129, 134, 138, 139, 152, 156, 169, 172, 173, 174, 176, 184, 189, 199, 202, 208, 218, 220, 221, 236, 237, 241, 259, 261, 265, 288, 289, 290, 291, 293, 301, 302, 307, 308, 313, 315, 316, 319, 320, 321, 505, 546, 548, 607, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 709, 758, 760, 770, 781, 788, 790, 792, 799, 804, 808, 810, 812, 813, 838, 848, 861, 863, 866, 867, 869, 885, 935, 944, 945, 949, 957, 962, 979, 980, 984, 1011, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1059, 1063, 1066, 1072, 1087, 1090, 1093, 1097, 1115, 1116, 1123], "other": [12, 26, 28, 31, 37, 38, 49, 51, 57, 60, 61, 76, 78, 80, 108, 109, 114, 120, 128, 132, 133, 134, 135, 136, 139, 143, 147, 156, 160, 164, 168, 169, 171, 172, 173, 184, 192, 201, 207, 208, 217, 220, 224, 245, 266, 273, 274, 288, 305, 309, 313, 333, 339, 348, 357, 375, 378, 389, 405, 409, 412, 414, 420, 421, 424, 425, 426, 432, 513, 528, 530, 531, 537, 539, 540, 543, 544, 545, 555, 583, 605, 628, 637, 638, 669, 673, 685, 687, 689, 691, 702, 709, 711, 729, 748, 750, 784, 791, 794, 795, 811, 816, 818, 820, 840, 857, 862, 863, 864, 867, 871, 874, 883, 884, 890, 891, 903, 908, 911, 917, 926, 930, 932, 934, 944, 951, 953, 955, 964, 967, 968, 969, 972, 975, 978, 982, 984, 985, 986, 987, 993, 994, 998, 1000, 1002, 1004, 1005, 1018, 1034, 1061, 1068, 1071, 1073, 1075, 1093, 1105, 1113, 1115, 1116, 1118, 1128], "exampl": [12, 16, 23, 28, 37, 38, 63, 76, 85, 111, 112, 125, 126, 128, 131, 132, 133, 134, 139, 142, 143, 147, 151, 152, 153, 156, 160, 164, 168, 170, 172, 183, 191, 193, 197, 201, 204, 207, 208, 210, 216, 217, 218, 221, 222, 223, 225, 229, 232, 241, 248, 250, 251, 254, 258, 260, 261, 265, 266, 274, 276, 279, 290, 293, 302, 310, 313, 326, 332, 333, 334, 342, 348, 400, 412, 423, 424, 425, 432, 436, 438, 448, 449, 451, 453, 473, 474, 486, 505, 541, 543, 545, 554, 563, 570, 608, 617, 635, 644, 649, 664, 665, 669, 670, 674, 677, 681, 687, 691, 709, 711, 717, 729, 736, 758, 785, 786, 790, 795, 815, 818, 828, 840, 847, 855, 862, 863, 864, 865, 874, 878, 885, 888, 889, 890, 891, 892, 900, 907, 926, 929, 931, 932, 933, 934, 935, 936, 942, 948, 949, 950, 951, 954, 955, 956, 960, 967, 974, 977, 979, 980, 981, 983, 991, 996, 1005, 1011, 1013, 1029, 1034, 1052, 1053, 1054, 1062, 1063, 1064, 1072, 1074, 1080, 1081, 1087, 1092, 1100, 1102, 1115, 1116], "here": [12, 13, 61, 66, 71, 72, 75, 76, 78, 79, 83, 104, 118, 120, 129, 131, 132, 134, 135, 137, 138, 139, 142, 143, 147, 152, 154, 160, 161, 162, 164, 168, 170, 173, 183, 184, 188, 191, 192, 193, 194, 199, 202, 210, 211, 215, 218, 220, 224, 237, 239, 241, 245, 248, 250, 254, 257, 259, 266, 269, 285, 288, 293, 299, 302, 305, 306, 308, 321, 324, 389, 391, 398, 405, 421, 427, 429, 449, 454, 465, 468, 471, 473, 484, 486, 488, 503, 505, 513, 527, 530, 531, 534, 540, 546, 548, 552, 564, 592, 598, 618, 620, 621, 627, 638, 644, 649, 655, 665, 669, 674, 677, 679, 685, 687, 690, 699, 712, 726, 731, 733, 736, 748, 754, 758, 784, 818, 855, 857, 862, 863, 864, 871, 875, 882, 888, 892, 898, 903, 916, 925, 929, 930, 941, 944, 948, 950, 953, 954, 955, 956, 968, 971, 975, 980, 983, 984, 991, 997, 1007, 1008, 1014, 1035, 1038, 1055, 1061, 1062, 1063, 1064, 1067, 1072, 1086, 1093, 1095, 1098, 1102, 1116, 1118], "discuss": [12, 40, 48, 111, 164, 168, 169, 171, 173, 208, 218, 254, 258, 259, 279, 302, 306, 309, 310, 313, 315, 316, 320, 422, 510, 513, 516, 519, 522, 525, 695, 701, 738, 771, 818, 925, 929, 958, 1100, 1102, 1105, 1116], "over": [12, 32, 33, 36, 40, 59, 63, 87, 95, 125, 128, 129, 131, 132, 134, 136, 137, 142, 152, 156, 164, 168, 170, 171, 172, 183, 188, 191, 193, 194, 201, 206, 207, 208, 210, 213, 216, 244, 248, 251, 254, 260, 261, 277, 279, 287, 302, 305, 348, 359, 360, 375, 389, 409, 419, 427, 437, 451, 528, 534, 562, 580, 592, 620, 627, 675, 676, 694, 705, 758, 855, 859, 863, 865, 871, 892, 906, 914, 917, 932, 944, 946, 951, 954, 991, 1004, 1008], "lwn": [12, 37, 149, 738, 750, 768, 1108], "attribut": [12, 129, 132, 134, 149, 168, 182, 188, 192, 201, 204, 207, 212, 214, 219, 220, 224, 227, 230, 234, 235, 242, 245, 249, 252, 262, 266, 272, 295, 297, 306, 313, 387, 403, 405, 417, 432, 699, 709, 790, 796, 817, 821, 888, 900, 901, 918, 919, 926, 930, 954, 955, 968, 970, 981, 1007, 1061, 1129], "sharealik": 12, "cc": [12, 22, 30, 114, 150, 158, 159, 160, 237, 412, 434, 483, 485, 486, 506, 509, 512, 513, 515, 516, 518, 519, 521, 522, 524, 547, 685, 686, 691, 736, 924, 925, 928, 929, 934, 1099, 1100, 1102, 1104, 1105], "BY": [12, 22, 33, 655], "sa": [12, 22, 30, 916], "don": [12, 23, 56, 59, 76, 82, 111, 120, 125, 131, 132, 133, 134, 137, 138, 139, 147, 162, 164, 168, 172, 183, 184, 194, 201, 205, 207, 208, 210, 217, 220, 272, 310, 334, 375, 387, 390, 391, 393, 399, 405, 409, 411, 428, 485, 513, 519, 528, 529, 544, 545, 552, 562, 598, 605, 635, 638, 640, 655, 669, 670, 682, 691, 696, 701, 726, 731, 750, 758, 763, 793, 818, 820, 825, 831, 842, 855, 858, 862, 863, 867, 875, 879, 880, 881, 882, 901, 902, 903, 908, 929, 930, 935, 956, 964, 966, 980, 983, 987, 1011, 1068, 1074, 1081, 1088, 1099, 1105], "t": [12, 23, 41, 48, 56, 59, 61, 63, 76, 82, 111, 120, 125, 129, 131, 133, 134, 137, 138, 139, 142, 143, 147, 149, 151, 162, 164, 165, 168, 171, 172, 175, 180, 182, 183, 184, 188, 194, 197, 201, 204, 205, 207, 208, 210, 212, 214, 217, 218, 220, 224, 227, 230, 233, 239, 242, 245, 250, 251, 252, 254, 256, 262, 266, 272, 288, 294, 296, 297, 299, 310, 322, 324, 325, 327, 333, 334, 344, 359, 365, 367, 370, 375, 385, 387, 389, 390, 391, 393, 399, 405, 409, 411, 414, 428, 481, 483, 485, 505, 513, 519, 528, 529, 531, 538, 544, 545, 552, 554, 555, 562, 566, 598, 605, 627, 628, 630, 635, 637, 638, 640, 644, 645, 646, 647, 655, 658, 669, 670, 675, 681, 682, 685, 686, 687, 689, 691, 694, 696, 699, 701, 717, 726, 731, 738, 750, 752, 758, 763, 775, 778, 784, 785, 786, 793, 795, 818, 819, 820, 824, 825, 831, 837, 840, 842, 855, 858, 862, 863, 864, 867, 871, 875, 879, 880, 881, 882, 889, 901, 902, 903, 908, 918, 925, 926, 929, 930, 932, 933, 935, 944, 947, 950, 956, 957, 964, 966, 968, 976, 980, 983, 986, 987, 988, 994, 1000, 1004, 1006, 1007, 1008, 1011, 1013, 1060, 1064, 1068, 1072, 1074, 1081, 1088, 1099, 1100, 1105, 1115], "want": [12, 16, 26, 28, 29, 43, 48, 59, 61, 76, 82, 114, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 152, 155, 160, 164, 168, 171, 172, 183, 184, 191, 194, 201, 208, 212, 214, 248, 250, 251, 254, 276, 288, 299, 313, 335, 347, 363, 391, 403, 405, 409, 413, 414, 429, 432, 453, 472, 481, 486, 505, 516, 529, 534, 537, 545, 570, 605, 621, 635, 640, 655, 676, 681, 687, 689, 690, 691, 709, 714, 733, 758, 763, 793, 795, 797, 800, 815, 818, 819, 837, 855, 858, 862, 863, 864, 875, 879, 880, 881, 882, 887, 901, 916, 918, 919, 920, 929, 932, 934, 944, 946, 948, 951, 952, 953, 954, 955, 956, 957, 959, 963, 970, 975, 979, 986, 995, 998, 1008, 1012, 1014, 1050, 1055, 1068, 1072, 1073, 1075, 1077, 1081, 1093, 1095, 1096, 1100, 1113, 1118], "anybodi": [12, 63, 132, 137, 164, 183, 184, 392, 890, 901, 1105], "monei": [12, 133, 136, 139, 207, 797, 1013], "my": [12, 16, 23, 27, 30, 37, 57, 60, 61, 63, 95, 114, 120, 131, 132, 133, 135, 136, 138, 139, 142, 143, 147, 160, 164, 168, 171, 184, 191, 218, 232, 234, 248, 258, 299, 302, 307, 399, 410, 432, 486, 522, 540, 551, 605, 687, 709, 742, 754, 758, 760, 786, 793, 808, 810, 815, 821, 842, 855, 862, 864, 866, 867, 874, 875, 880, 881, 882, 891, 926, 968, 987, 1010, 1050, 1075, 1093, 1113], "without": [12, 131, 132, 133, 134, 142, 143, 168, 212, 276, 335, 359, 366, 392, 395, 399, 404, 409, 420, 432, 437, 449, 516, 522, 528, 534, 598, 605, 628, 655, 673, 693, 694, 701, 729, 742, 758, 797, 798, 840, 864, 866, 875, 901, 920, 925, 926, 930, 953, 954, 957, 958, 960, 967, 969, 971, 973, 975, 982, 987, 1004, 1093, 1095, 1113, 1118], "modif": [12, 53, 104, 147, 210, 335, 337, 343, 348, 379, 409, 432, 437, 484, 542, 702, 709, 731, 758, 803, 819, 840, 967, 987, 1004, 1068, 1105], "back": [12, 28, 30, 61, 64, 133, 134, 137, 143, 168, 170, 172, 197, 205, 210, 221, 223, 241, 256, 276, 385, 400, 451, 476, 505, 525, 545, 559, 564, 602, 635, 649, 684, 691, 711, 726, 731, 740, 758, 760, 789, 821, 855, 862, 875, 916, 926, 932, 951, 958, 971, 975, 987, 1015, 1049, 1050, 1051, 1054, 1083], "m": [12, 22, 30, 36, 59, 116, 118, 133, 134, 135, 137, 139, 142, 147, 160, 165, 170, 175, 184, 188, 197, 198, 199, 201, 205, 220, 224, 230, 232, 237, 249, 298, 302, 303, 304, 309, 323, 411, 434, 480, 483, 484, 485, 486, 522, 547, 655, 677, 686, 726, 727, 733, 736, 768, 795, 797, 818, 862, 875, 920, 973, 1010, 1011, 1018, 1043, 1044, 1061, 1074, 1088, 1093, 1095, 1100], "lawyer": 12, "understand": [12, 111, 131, 132, 134, 138, 139, 142, 143, 147, 156, 164, 168, 193, 220, 251, 254, 257, 259, 260, 261, 276, 279, 304, 313, 341, 389, 398, 405, 437, 473, 614, 635, 644, 665, 676, 758, 797, 803, 855, 975, 1013, 1056, 1061, 1062, 1082, 1113, 1114, 1115], "permit": [12, 134, 139, 184, 248, 299, 510, 531, 538, 862, 873, 917, 981, 1084], "exactli": [12, 76, 132, 134, 156, 162, 191, 261, 293, 327, 367, 473, 484, 562, 638, 675, 758, 864, 889, 890, 930, 948, 1067, 1087], "gnu": [12, 143, 148, 184, 193, 299, 305, 321, 406, 407, 412, 414, 537, 686, 711, 738, 759, 818, 933, 934, 944, 946, 948, 1111, 1115], "free": [12, 30, 138, 143, 159, 184, 299, 382, 396, 434, 511, 531, 537, 539, 599, 618, 619, 621, 622, 638, 665, 684, 685, 686, 722, 729, 760, 880, 881, 882, 894, 917, 930, 932, 1062, 1075, 1084, 1110], "document": [12, 23, 38, 40, 63, 76, 84, 111, 129, 132, 134, 136, 143, 144, 150, 153, 160, 172, 184, 190, 191, 199, 201, 206, 207, 208, 210, 217, 220, 224, 237, 239, 241, 250, 257, 259, 262, 286, 288, 293, 302, 309, 310, 385, 386, 389, 396, 412, 413, 414, 415, 417, 420, 421, 422, 423, 424, 425, 437, 484, 503, 544, 548, 562, 563, 607, 618, 620, 630, 635, 642, 644, 649, 665, 666, 672, 674, 677, 679, 686, 687, 688, 690, 697, 698, 699, 701, 705, 709, 729, 731, 754, 758, 759, 766, 770, 784, 790, 797, 804, 808, 810, 812, 842, 843, 844, 846, 847, 849, 850, 858, 862, 863, 864, 898, 905, 913, 946, 948, 949, 953, 955, 956, 960, 964, 966, 968, 974, 991, 1001, 1002, 1052, 1067, 1070, 1077, 1078, 1081, 1083, 1091, 1094, 1101, 1102, 1121, 1122], "A": [12, 19, 22, 26, 27, 28, 36, 37, 38, 39, 59, 63, 67, 71, 72, 76, 80, 82, 83, 95, 96, 106, 107, 108, 109, 111, 119, 131, 134, 135, 136, 137, 139, 144, 147, 148, 149, 152, 153, 154, 168, 170, 171, 172, 180, 184, 191, 193, 195, 201, 204, 207, 211, 217, 218, 220, 224, 232, 238, 240, 244, 247, 248, 259, 261, 266, 268, 269, 272, 279, 288, 294, 299, 303, 304, 319, 324, 327, 328, 340, 341, 342, 355, 360, 364, 370, 371, 373, 376, 377, 381, 384, 385, 386, 387, 388, 391, 393, 394, 395, 397, 399, 401, 406, 407, 409, 415, 422, 425, 426, 427, 431, 432, 435, 437, 447, 449, 461, 474, 475, 484, 486, 492, 527, 532, 533, 538, 540, 541, 542, 591, 592, 594, 595, 598, 609, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 629, 631, 644, 655, 665, 667, 670, 677, 683, 689, 693, 702, 707, 708, 709, 710, 711, 712, 719, 733, 735, 752, 775, 787, 788, 791, 792, 797, 800, 801, 805, 806, 811, 815, 821, 851, 854, 861, 862, 864, 879, 883, 884, 887, 893, 895, 900, 901, 902, 903, 912, 917, 918, 929, 930, 933, 935, 940, 942, 943, 944, 947, 948, 954, 955, 956, 960, 961, 962, 963, 964, 966, 967, 968, 969, 986, 987, 994, 996, 1001, 1007, 1011, 1012, 1013, 1018, 1041, 1044, 1047, 1058, 1062, 1067, 1068, 1071, 1075, 1078, 1079, 1085, 1088, 1094, 1095, 1105, 1113, 1114, 1115, 1116, 1118, 1128], "ago": [12, 134, 138, 194, 783], "wa": [12, 35, 51, 63, 76, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 147, 149, 151, 152, 153, 155, 159, 160, 165, 167, 168, 171, 175, 181, 182, 188, 191, 194, 197, 198, 208, 210, 212, 214, 221, 224, 233, 245, 252, 258, 261, 266, 283, 302, 307, 320, 323, 370, 395, 415, 519, 527, 528, 537, 538, 583, 612, 619, 620, 621, 622, 623, 624, 631, 635, 638, 693, 709, 711, 733, 740, 748, 754, 793, 815, 845, 847, 855, 864, 891, 911, 930, 955, 987, 1061, 1078, 1081, 1088, 1093, 1095, 1098, 1108, 1110, 1111, 1112, 1113, 1125, 1131], "debian": [12, 76, 120, 121, 122, 139, 143, 147, 149, 161, 172, 184, 269, 299, 320, 499, 711, 758, 857, 934, 946, 1095, 1100], "resolut": [12, 218, 222, 224, 392, 640, 702, 736, 768, 864], "us": [12, 13, 16, 20, 23, 37, 38, 43, 46, 52, 57, 59, 60, 61, 63, 66, 68, 69, 72, 75, 76, 79, 80, 82, 83, 84, 86, 87, 95, 104, 105, 111, 112, 124, 125, 127, 128, 129, 131, 132, 134, 135, 138, 142, 144, 147, 149, 152, 156, 158, 159, 161, 164, 168, 170, 171, 183, 184, 189, 192, 199, 201, 202, 204, 205, 208, 209, 211, 215, 217, 218, 220, 224, 227, 229, 230, 232, 237, 239, 241, 245, 248, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 265, 266, 271, 274, 279, 283, 287, 288, 293, 299, 302, 305, 307, 308, 311, 320, 331, 334, 335, 338, 339, 340, 343, 345, 354, 355, 357, 359, 360, 364, 365, 366, 369, 370, 371, 373, 377, 378, 381, 384, 388, 392, 393, 397, 399, 400, 401, 405, 406, 407, 409, 411, 412, 414, 419, 420, 421, 422, 425, 427, 428, 430, 431, 434, 437, 438, 439, 441, 448, 451, 452, 453, 471, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 499, 503, 504, 505, 506, 509, 512, 515, 518, 521, 524, 529, 531, 532, 536, 537, 540, 542, 544, 545, 546, 548, 549, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 571, 574, 575, 576, 580, 583, 584, 585, 586, 587, 588, 592, 598, 601, 602, 604, 605, 608, 609, 611, 612, 614, 616, 617, 618, 619, 620, 621, 622, 624, 626, 627, 629, 630, 631, 632, 634, 636, 638, 642, 644, 649, 655, 657, 664, 665, 667, 669, 670, 672, 674, 677, 682, 686, 687, 688, 689, 691, 693, 697, 699, 702, 705, 708, 709, 710, 711, 716, 717, 719, 721, 724, 726, 727, 729, 731, 733, 736, 738, 742, 744, 746, 750, 752, 754, 758, 759, 761, 763, 771, 772, 774, 777, 778, 784, 785, 786, 789, 793, 794, 797, 798, 800, 802, 804, 810, 815, 818, 820, 823, 824, 825, 827, 837, 843, 845, 849, 854, 855, 858, 859, 861, 865, 866, 867, 874, 875, 878, 884, 885, 888, 889, 890, 892, 896, 898, 899, 901, 903, 904, 905, 907, 908, 911, 913, 914, 917, 918, 921, 924, 925, 926, 928, 929, 930, 932, 935, 942, 943, 946, 947, 948, 949, 950, 954, 957, 958, 960, 961, 962, 963, 964, 967, 968, 973, 975, 977, 979, 980, 981, 983, 987, 989, 991, 995, 996, 997, 998, 1001, 1004, 1006, 1008, 1011, 1013, 1016, 1017, 1018, 1021, 1022, 1023, 1027, 1029, 1032, 1033, 1034, 1035, 1039, 1041, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1065, 1067, 1068, 1071, 1072, 1075, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1093, 1096, 1099, 1100, 1102, 1104, 1105, 1113, 1115, 1116, 1118], "gfdl": 12, "becaus": [12, 16, 36, 59, 64, 78, 126, 131, 132, 134, 143, 147, 156, 164, 168, 170, 184, 194, 201, 207, 217, 220, 327, 348, 387, 396, 399, 402, 409, 411, 420, 429, 432, 449, 483, 486, 529, 530, 537, 540, 580, 602, 621, 677, 685, 688, 727, 738, 756, 758, 797, 837, 855, 862, 863, 864, 873, 884, 885, 888, 891, 905, 911, 926, 929, 930, 953, 956, 982, 1012, 1072, 1088, 1095, 1100, 1113], "too": [12, 26, 51, 54, 61, 78, 132, 134, 139, 148, 161, 164, 180, 191, 193, 210, 220, 224, 227, 236, 237, 239, 250, 252, 260, 261, 266, 279, 283, 344, 389, 399, 409, 423, 429, 528, 542, 649, 651, 655, 667, 668, 669, 675, 681, 687, 709, 710, 711, 756, 758, 763, 790, 855, 864, 865, 871, 888, 901, 918, 934, 953, 954, 955, 958, 1004, 1008, 1089, 1113], "restrict": [12, 133, 162, 172, 387, 392, 421, 471, 552, 756, 785, 786, 874, 1072], "articl": [12, 147, 149, 738, 750, 768, 862, 864, 944], "describ": [12, 63, 105, 111, 129, 131, 132, 133, 134, 137, 139, 142, 143, 158, 184, 220, 224, 232, 258, 266, 269, 299, 432, 441, 487, 506, 509, 512, 515, 518, 521, 524, 677, 691, 758, 768, 791, 818, 864, 869, 921, 924, 928, 933, 941, 947, 948, 977, 1061, 1099, 1102, 1104], "pretti": [12, 133, 134, 156, 170, 174, 193, 210, 220, 399, 414, 562, 619, 694, 951, 1084], "same": [12, 16, 23, 27, 37, 38, 41, 42, 63, 132, 133, 134, 136, 138, 139, 142, 143, 147, 152, 153, 154, 156, 164, 165, 170, 173, 184, 192, 196, 201, 207, 210, 217, 218, 220, 223, 224, 242, 251, 254, 260, 261, 266, 279, 289, 290, 299, 306, 331, 335, 346, 347, 348, 365, 366, 370, 375, 378, 387, 389, 393, 395, 399, 400, 403, 404, 414, 432, 436, 439, 440, 451, 470, 471, 479, 483, 503, 505, 512, 514, 528, 531, 537, 540, 543, 562, 565, 571, 580, 583, 584, 585, 609, 620, 628, 633, 640, 642, 644, 647, 649, 673, 674, 677, 689, 690, 691, 697, 726, 727, 731, 736, 738, 740, 748, 750, 756, 758, 774, 790, 796, 802, 818, 819, 821, 845, 855, 862, 863, 864, 865, 874, 875, 881, 887, 901, 902, 903, 916, 920, 926, 930, 932, 948, 954, 955, 958, 963, 964, 967, 969, 973, 975, 991, 993, 996, 1001, 1003, 1004, 1005, 1038, 1046, 1048, 1062, 1067, 1068, 1071, 1072, 1075, 1077, 1080, 1081, 1082, 1093, 1095, 1100], "issu": [12, 132, 135, 142, 143, 194, 259, 260, 261, 279, 322, 335, 393, 894, 920, 929, 946, 964], "how": [12, 22, 23, 35, 40, 43, 48, 63, 68, 69, 73, 75, 76, 79, 80, 82, 83, 84, 85, 86, 89, 102, 111, 118, 120, 128, 129, 132, 135, 137, 138, 139, 143, 144, 147, 152, 154, 156, 160, 161, 167, 168, 169, 170, 171, 172, 173, 184, 189, 191, 192, 193, 199, 201, 202, 204, 205, 207, 208, 210, 213, 215, 218, 229, 232, 236, 237, 241, 248, 251, 254, 256, 257, 258, 259, 260, 261, 265, 271, 274, 276, 279, 288, 304, 305, 309, 320, 335, 341, 366, 373, 375, 376, 387, 389, 391, 393, 398, 402, 409, 411, 413, 420, 434, 440, 470, 473, 481, 484, 505, 522, 529, 537, 538, 541, 552, 562, 601, 605, 611, 621, 627, 649, 686, 689, 690, 691, 701, 705, 706, 712, 719, 721, 722, 736, 748, 758, 763, 774, 785, 786, 791, 798, 818, 837, 845, 851, 855, 862, 863, 864, 872, 880, 881, 882, 885, 888, 891, 892, 898, 911, 914, 917, 918, 920, 925, 929, 930, 942, 944, 946, 948, 961, 962, 979, 980, 983, 997, 1000, 1014, 1052, 1053, 1056, 1061, 1062, 1078, 1080, 1081, 1084, 1093, 1096, 1102, 1105, 1115, 1116, 1118], "do": [12, 26, 30, 38, 41, 43, 48, 56, 57, 60, 61, 76, 81, 83, 87, 89, 95, 111, 115, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 147, 148, 149, 151, 152, 153, 156, 160, 161, 164, 168, 169, 172, 182, 183, 184, 192, 194, 201, 204, 208, 210, 212, 214, 215, 218, 220, 223, 224, 230, 232, 234, 237, 239, 248, 251, 254, 288, 290, 297, 299, 302, 304, 338, 357, 359, 360, 362, 363, 364, 369, 370, 371, 377, 378, 381, 384, 387, 388, 395, 397, 401, 406, 407, 409, 411, 413, 429, 434, 437, 440, 448, 449, 470, 472, 484, 505, 513, 519, 522, 528, 530, 542, 546, 548, 549, 552, 589, 602, 605, 619, 620, 621, 629, 635, 640, 644, 666, 667, 673, 677, 679, 685, 686, 687, 689, 690, 691, 707, 708, 710, 711, 731, 735, 746, 750, 754, 756, 758, 783, 787, 788, 791, 795, 798, 802, 803, 812, 814, 819, 823, 825, 854, 855, 858, 862, 863, 864, 866, 867, 873, 875, 879, 880, 881, 882, 883, 884, 890, 901, 902, 904, 908, 914, 916, 917, 920, 922, 925, 930, 948, 949, 951, 953, 955, 956, 957, 960, 969, 979, 980, 981, 984, 987, 991, 997, 998, 1011, 1013, 1032, 1056, 1062, 1063, 1064, 1073, 1074, 1081, 1084, 1093, 1100, 1102, 1118], "choos": [12, 26, 131, 132, 143, 156, 164, 522, 758, 855, 862, 864, 947, 980, 987, 1000, 1062, 1072, 1095], "altogeth": [12, 142, 191, 260, 261, 279, 638, 766, 958], "have": [12, 26, 27, 29, 35, 41, 48, 63, 67, 78, 80, 82, 100, 108, 109, 111, 112, 114, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 152, 153, 154, 156, 160, 161, 162, 164, 168, 171, 172, 183, 184, 189, 191, 192, 193, 194, 201, 204, 205, 207, 208, 215, 220, 224, 227, 237, 239, 241, 248, 250, 251, 254, 257, 258, 260, 261, 265, 266, 288, 293, 302, 305, 307, 334, 335, 339, 348, 367, 369, 389, 391, 394, 395, 399, 403, 405, 410, 412, 415, 419, 420, 424, 427, 428, 429, 433, 436, 437, 449, 470, 473, 483, 486, 495, 522, 528, 532, 536, 538, 540, 545, 546, 548, 549, 580, 586, 602, 609, 614, 620, 621, 622, 626, 627, 631, 639, 642, 644, 655, 664, 669, 673, 674, 676, 679, 682, 686, 687, 690, 691, 706, 722, 726, 727, 729, 731, 736, 738, 750, 758, 761, 766, 774, 783, 791, 795, 797, 800, 801, 803, 810, 825, 845, 855, 862, 863, 864, 865, 867, 871, 873, 875, 879, 880, 882, 887, 892, 894, 900, 908, 925, 929, 930, 933, 934, 942, 946, 947, 950, 953, 956, 964, 968, 969, 973, 983, 986, 987, 991, 998, 1005, 1016, 1020, 1030, 1035, 1051, 1056, 1061, 1063, 1064, 1067, 1068, 1072, 1075, 1077, 1081, 1084, 1088, 1093, 1095, 1100, 1102, 1115, 1116], "idea": [12, 13, 131, 132, 192, 205, 214, 224, 257, 259, 260, 261, 276, 393, 617, 639, 677, 685, 758, 855, 890, 900, 920, 944, 955, 979, 987, 1086, 1118], "choosealicens": 12, "appear": [12, 132, 133, 134, 135, 136, 137, 138, 139, 142, 152, 156, 160, 162, 164, 165, 184, 193, 220, 260, 261, 279, 324, 367, 370, 414, 415, 432, 503, 544, 687, 754, 758, 766, 782, 862, 863, 864, 875, 933, 955, 1027, 1028, 1038, 1047, 1076, 1081], "help": [12, 28, 131, 132, 134, 135, 143, 147, 165, 184, 188, 193, 201, 207, 212, 214, 217, 220, 224, 227, 230, 232, 245, 252, 257, 261, 266, 293, 297, 302, 320, 370, 391, 393, 395, 396, 405, 414, 531, 534, 540, 627, 640, 675, 685, 687, 729, 797, 857, 862, 947, 979, 982, 1008, 1011, 1084, 1093, 1100, 1115], "happen": [12, 26, 108, 109, 131, 132, 134, 147, 164, 168, 172, 191, 210, 274, 307, 375, 387, 391, 395, 409, 414, 534, 551, 623, 655, 669, 672, 694, 721, 754, 758, 775, 790, 791, 795, 864, 888, 890, 900, 905, 929, 967, 968, 1007, 1021, 1024, 1038, 1055, 1061, 1065, 1093, 1102, 1115], "clone": [12, 59, 75, 107, 111, 114, 124, 134, 135, 138, 159, 161, 164, 181, 193, 194, 210, 237, 239, 269, 276, 302, 307, 470, 473, 547, 731, 758, 759, 862, 946, 947], "jfasch": [12, 38, 41, 59, 104, 111, 112, 114, 128, 129, 135, 136, 137, 142, 143, 147, 151, 160, 161, 162, 165, 168, 181, 191, 201, 204, 207, 208, 210, 212, 217, 220, 227, 230, 232, 237, 239, 245, 248, 250, 251, 252, 257, 258, 259, 261, 262, 265, 266, 271, 275, 276, 301, 302, 307, 310, 412, 414, 415, 417, 418, 420, 421, 423, 425, 434, 470, 484, 485, 486, 487, 505, 547, 607, 685, 686, 687, 731, 733, 758, 784, 785, 786, 789, 790, 793, 795, 800, 803, 814, 819, 820, 821, 837, 840, 842, 843, 847, 849, 851, 862, 865, 873, 874, 875, 880, 886, 888, 889, 890, 911, 916, 932, 933, 934, 935, 944, 946, 947, 948, 949, 950, 953, 955, 956, 959, 983, 1002, 1008, 1011, 1034, 1064, 1080, 1081, 1093, 1095], "home": [12, 30, 38, 40, 41, 48, 59, 63, 98, 114, 128, 129, 133, 135, 136, 137, 139, 143, 147, 160, 161, 162, 165, 184, 191, 201, 204, 205, 207, 212, 217, 220, 227, 230, 232, 237, 239, 245, 248, 250, 252, 262, 266, 310, 405, 412, 414, 415, 417, 418, 420, 421, 423, 425, 434, 484, 485, 486, 487, 547, 607, 640, 685, 686, 687, 711, 733, 758, 784, 785, 786, 788, 793, 795, 797, 798, 800, 803, 808, 810, 812, 814, 815, 818, 819, 821, 822, 823, 824, 825, 829, 832, 835, 838, 840, 842, 843, 849, 854, 865, 866, 871, 873, 874, 911, 913, 929, 932, 933, 934, 944, 946, 947, 948, 949, 950, 953, 956, 959, 1008, 1034, 1043, 1064, 1080, 1081, 1093, 1095], "built": [12, 27, 111, 131, 132, 134, 135, 138, 143, 160, 165, 167, 168, 176, 177, 189, 192, 201, 207, 212, 215, 217, 218, 220, 224, 232, 241, 245, 248, 250, 265, 274, 337, 341, 365, 386, 412, 420, 423, 424, 448, 470, 583, 640, 696, 701, 727, 731, 733, 758, 862, 864, 875, 933, 934, 935, 940, 948, 953, 956, 960, 976, 991, 1007, 1056, 1062, 1063, 1083, 1093, 1095, 1096, 1111, 1115, 1123], "wonder": [12, 726, 744, 771, 958], "gener": [12, 22, 23, 28, 37, 63, 66, 67, 76, 78, 79, 107, 108, 109, 125, 129, 132, 136, 139, 144, 151, 154, 164, 168, 169, 171, 172, 173, 174, 183, 191, 199, 200, 201, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 221, 222, 223, 224, 229, 230, 244, 246, 250, 259, 264, 266, 270, 271, 273, 305, 308, 325, 335, 337, 343, 348, 359, 369, 387, 393, 396, 398, 399, 402, 412, 413, 414, 418, 473, 475, 481, 484, 492, 527, 534, 538, 554, 562, 563, 566, 617, 635, 638, 665, 679, 685, 691, 699, 738, 740, 742, 761, 791, 802, 818, 855, 857, 862, 875, 900, 929, 930, 932, 935, 946, 947, 953, 954, 955, 957, 975, 981, 983, 984, 985, 991, 995, 1012, 1013, 1014, 1015, 1028, 1054, 1056, 1063, 1066, 1068, 1069, 1071, 1072, 1073, 1081, 1088, 1093, 1116, 1117, 1124], "homepag": [12, 136, 138, 146, 149, 150, 164, 191, 199, 201, 236, 237, 239, 396, 944, 1093], "content": [12, 26, 37, 47, 48, 55, 61, 164, 171, 172, 173, 184, 192, 210, 212, 220, 242, 248, 294, 369, 372, 374, 487, 530, 580, 588, 676, 760, 763, 784, 785, 786, 800, 803, 805, 806, 840, 843, 851, 863, 867, 890, 932, 987, 1006, 1012, 1025, 1055, 1078, 1095, 1128], "which": [12, 13, 16, 27, 55, 66, 76, 78, 81, 87, 108, 109, 117, 124, 125, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 143, 147, 152, 154, 160, 161, 162, 164, 168, 170, 172, 184, 191, 193, 201, 205, 207, 208, 220, 223, 224, 232, 233, 250, 251, 254, 256, 261, 266, 283, 320, 338, 343, 344, 350, 354, 375, 387, 399, 409, 410, 411, 412, 414, 417, 419, 420, 427, 429, 440, 470, 471, 472, 473, 476, 478, 479, 480, 481, 482, 484, 499, 510, 516, 529, 536, 538, 542, 544, 552, 599, 609, 613, 614, 620, 621, 623, 632, 638, 639, 677, 681, 682, 690, 691, 707, 709, 711, 727, 736, 758, 760, 778, 784, 791, 795, 797, 800, 801, 802, 803, 809, 811, 814, 818, 831, 842, 845, 854, 855, 858, 862, 863, 864, 875, 884, 885, 888, 890, 892, 893, 895, 900, 905, 912, 914, 916, 917, 925, 930, 933, 938, 946, 950, 953, 955, 957, 967, 968, 972, 980, 984, 987, 996, 1027, 1046, 1048, 1051, 1053, 1072, 1074, 1075, 1077, 1080, 1095, 1100, 1113], "differ": [12, 33, 36, 57, 60, 67, 74, 79, 83, 86, 119, 131, 132, 137, 139, 143, 153, 160, 164, 168, 180, 204, 205, 248, 250, 256, 257, 259, 266, 283, 288, 323, 335, 343, 348, 349, 365, 366, 369, 387, 393, 395, 399, 409, 411, 428, 429, 473, 484, 486, 505, 512, 513, 522, 531, 532, 536, 542, 544, 545, 554, 558, 563, 602, 605, 609, 631, 644, 647, 674, 689, 702, 709, 731, 736, 750, 756, 758, 778, 783, 789, 793, 794, 796, 815, 840, 855, 858, 862, 864, 871, 882, 890, 892, 905, 914, 916, 917, 937, 942, 947, 949, 950, 955, 968, 975, 983, 996, 1000, 1005, 1006, 1007, 1068, 1077, 1095, 1096, 1116, 1118], "so": [12, 16, 22, 30, 35, 37, 47, 53, 64, 119, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 151, 152, 153, 154, 155, 156, 160, 161, 162, 164, 165, 176, 177, 182, 190, 192, 193, 194, 203, 204, 205, 234, 248, 256, 258, 262, 274, 288, 297, 302, 305, 320, 334, 338, 339, 347, 349, 365, 375, 376, 378, 387, 391, 393, 395, 396, 400, 410, 412, 415, 417, 422, 423, 427, 449, 451, 470, 486, 499, 538, 545, 549, 562, 585, 592, 601, 608, 617, 666, 676, 681, 684, 685, 687, 702, 717, 719, 722, 727, 731, 733, 736, 758, 771, 783, 797, 798, 800, 802, 808, 810, 812, 818, 822, 829, 855, 861, 862, 863, 864, 867, 869, 871, 879, 882, 885, 890, 892, 900, 918, 920, 929, 932, 933, 934, 935, 946, 948, 949, 958, 959, 963, 975, 980, 982, 987, 1004, 1006, 1008, 1010, 1020, 1024, 1030, 1034, 1061, 1067, 1075, 1082, 1085, 1093, 1095, 1099, 1100, 1102, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1117, 1123, 1126, 1131], "ye": [12, 30, 48, 59, 134, 135, 138, 143, 184, 299, 585, 694, 785, 786, 803, 805, 806, 864, 875, 932, 1000, 1033], "realli": [12, 20, 41, 48, 51, 53, 54, 63, 133, 134, 135, 137, 139, 153, 164, 168, 171, 428, 644, 681, 691, 711, 750, 863, 864, 875, 898, 1056, 1063, 1072], "great": [12, 76, 137, 139, 194, 214, 224, 409, 528, 543, 699, 758, 863, 1113, 1118], "static": [12, 22, 63, 95, 101, 102, 108, 109, 111, 132, 134, 136, 138, 139, 149, 159, 193, 194, 201, 207, 210, 217, 220, 224, 248, 257, 259, 266, 302, 308, 371, 377, 381, 384, 386, 388, 395, 397, 399, 401, 406, 407, 412, 417, 418, 422, 424, 433, 447, 455, 467, 468, 469, 470, 471, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 513, 522, 527, 531, 534, 545, 550, 553, 556, 572, 576, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 629, 638, 667, 669, 671, 672, 676, 687, 690, 696, 701, 708, 710, 711, 717, 736, 754, 758, 760, 854, 900, 903, 905, 907, 916, 922, 929, 933, 934, 935, 937, 938, 939, 940, 942, 1070, 1105, 1108, 1110, 1111, 1112], "It": [12, 20, 37, 41, 43, 53, 57, 60, 76, 120, 131, 132, 133, 134, 137, 138, 139, 142, 143, 152, 154, 156, 160, 161, 165, 170, 171, 184, 193, 194, 201, 207, 210, 217, 220, 224, 232, 237, 239, 248, 251, 254, 257, 315, 316, 332, 343, 347, 365, 370, 393, 395, 409, 427, 432, 437, 440, 449, 451, 473, 476, 477, 484, 485, 531, 611, 623, 640, 641, 677, 687, 711, 722, 758, 785, 786, 797, 800, 815, 854, 855, 863, 864, 885, 890, 892, 893, 895, 908, 912, 917, 933, 934, 944, 949, 954, 956, 967, 975, 979, 980, 1013, 1029, 1034, 1038, 1041, 1047, 1062, 1071, 1083, 1093, 1094, 1113, 1115, 1116, 1118], "let": [12, 16, 40, 57, 60, 61, 132, 133, 134, 137, 138, 139, 142, 147, 154, 155, 156, 161, 162, 194, 208, 212, 214, 220, 224, 251, 254, 256, 258, 261, 276, 391, 399, 409, 411, 413, 420, 423, 427, 429, 431, 436, 449, 455, 472, 483, 484, 486, 489, 505, 519, 529, 530, 542, 546, 548, 549, 599, 605, 611, 617, 627, 644, 672, 676, 681, 685, 727, 731, 750, 758, 766, 793, 802, 815, 820, 855, 862, 863, 875, 888, 890, 891, 905, 914, 916, 932, 934, 944, 947, 948, 954, 956, 960, 997, 1004, 1006, 1013, 1021, 1043, 1051, 1056, 1063, 1067, 1072, 1075, 1093, 1113], "me": [12, 22, 30, 35, 57, 60, 111, 126, 131, 132, 133, 134, 137, 138, 139, 142, 143, 147, 160, 161, 162, 164, 168, 191, 193, 194, 218, 269, 302, 391, 393, 394, 409, 412, 516, 540, 605, 640, 681, 687, 731, 793, 820, 855, 863, 864, 875, 879, 932, 935, 944, 960, 963, 1004, 1056, 1060, 1094], "focu": [12, 135, 139, 142, 156, 164, 168, 251, 254, 398, 402, 434, 626, 655, 855, 863, 865, 980, 1063, 1087, 1116], "myself": [12, 128, 129, 139, 160, 168, 183, 199, 731, 793, 815, 820, 837], "ey": [12, 30, 35, 217, 220, 230, 252, 991], "toward": [12, 164, 308, 391, 451, 580], "consist": [12, 26, 164, 179, 220, 293, 310, 324, 327, 365, 367, 405, 476, 484, 529, 818, 892, 926, 980, 981, 984, 1025, 1034, 1058, 1082], "won": [12, 142, 143, 220, 250, 288, 322, 389, 414, 483, 485, 531, 681, 687, 726, 738, 863, 875, 882, 935, 957, 1006, 1064], "break": [12, 34, 36, 125, 155, 164, 165, 170, 177, 183, 184, 192, 204, 207, 213, 214, 217, 220, 223, 224, 227, 230, 245, 252, 266, 294, 359, 363, 364, 371, 377, 381, 384, 388, 391, 395, 397, 399, 401, 406, 407, 409, 570, 601, 611, 613, 620, 629, 655, 663, 667, 688, 701, 708, 710, 711, 748, 880, 881, 890, 916, 922, 929, 960, 968, 1006, 1064, 1072], "move": [12, 52, 61, 97, 111, 116, 120, 128, 129, 133, 143, 161, 169, 172, 183, 194, 210, 235, 238, 247, 248, 259, 268, 269, 286, 287, 302, 305, 409, 410, 423, 467, 476, 505, 530, 531, 538, 539, 540, 541, 543, 589, 635, 655, 667, 679, 683, 686, 688, 689, 692, 699, 700, 701, 707, 708, 710, 711, 727, 760, 782, 785, 786, 787, 788, 821, 822, 823, 824, 827, 828, 829, 830, 832, 838, 854, 855, 879, 880, 917, 950, 987, 1089, 1112, 1113, 1114, 1121, 1122], "around": [12, 23, 35, 57, 60, 96, 111, 132, 133, 134, 139, 143, 153, 164, 168, 192, 218, 229, 236, 237, 239, 259, 283, 348, 423, 437, 439, 448, 473, 529, 625, 628, 630, 680, 682, 710, 711, 758, 763, 890, 905, 926, 929, 950, 956, 972, 976, 978, 1000, 1052, 1056, 1058, 1062, 1063, 1077, 1078, 1081], "last": [12, 57, 60, 111, 128, 132, 133, 134, 149, 154, 164, 165, 171, 183, 184, 191, 199, 201, 204, 207, 208, 217, 220, 230, 245, 250, 252, 266, 293, 299, 306, 308, 375, 393, 557, 559, 560, 561, 562, 566, 569, 658, 661, 662, 663, 709, 711, 758, 818, 821, 824, 840, 849, 851, 854, 882, 887, 895, 904, 909, 911, 916, 931, 942, 953, 954, 955, 956, 960, 964, 968, 969, 975, 976, 981, 989, 997, 998, 1002, 1004, 1007, 1008, 1018, 1045, 1051, 1053, 1064, 1067, 1072, 1080, 1081, 1094, 1101, 1131], "least": [12, 23, 35, 57, 60, 63, 79, 134, 142, 156, 160, 162, 164, 171, 172, 191, 193, 194, 208, 210, 220, 224, 250, 254, 256, 266, 268, 323, 341, 347, 348, 361, 387, 390, 391, 399, 415, 427, 499, 584, 627, 677, 679, 686, 691, 694, 721, 754, 756, 790, 855, 857, 865, 903, 926, 930, 951, 960, 964, 980, 981, 991, 1014, 1062, 1101], "ha": [12, 20, 23, 26, 27, 41, 43, 51, 54, 61, 76, 108, 109, 119, 129, 131, 132, 133, 134, 135, 136, 137, 139, 142, 143, 147, 152, 154, 156, 160, 161, 164, 168, 170, 171, 172, 182, 184, 188, 189, 191, 192, 194, 201, 204, 207, 210, 212, 214, 215, 217, 220, 224, 227, 230, 233, 241, 242, 245, 248, 249, 250, 251, 252, 254, 256, 257, 259, 262, 265, 266, 272, 274, 286, 288, 295, 297, 299, 308, 322, 331, 334, 344, 347, 348, 357, 360, 368, 369, 376, 382, 383, 386, 390, 392, 393, 399, 405, 409, 411, 414, 420, 422, 423, 424, 425, 427, 428, 429, 432, 437, 438, 441, 449, 454, 468, 470, 480, 503, 513, 528, 530, 531, 532, 533, 536, 537, 538, 541, 542, 545, 552, 562, 583, 584, 601, 602, 605, 614, 615, 620, 621, 623, 632, 634, 637, 640, 649, 650, 651, 655, 664, 665, 666, 669, 677, 685, 687, 690, 691, 693, 699, 709, 711, 712, 722, 727, 752, 754, 756, 758, 768, 771, 772, 774, 778, 785, 789, 790, 791, 793, 795, 796, 797, 803, 814, 816, 821, 847, 855, 861, 862, 863, 864, 873, 875, 878, 884, 890, 900, 902, 903, 905, 913, 914, 916, 917, 918, 919, 926, 930, 932, 946, 948, 949, 951, 953, 954, 955, 958, 960, 963, 968, 969, 970, 978, 980, 983, 986, 987, 991, 996, 997, 1001, 1018, 1038, 1053, 1055, 1056, 1062, 1063, 1067, 1068, 1072, 1080, 1081, 1083, 1085, 1093, 1095, 1100, 1102, 1113, 1115, 1116, 1118, 1121, 1122], "extens": [12, 13, 22, 27, 30, 35, 38, 127, 142, 164, 191, 193, 201, 207, 217, 220, 288, 369, 409, 437, 528, 666, 709, 712, 783, 795, 932, 963, 980, 983, 1088, 1093], "interfac": [12, 51, 54, 70, 71, 72, 76, 78, 80, 83, 104, 112, 128, 129, 132, 149, 151, 152, 159, 168, 194, 208, 210, 218, 222, 240, 241, 248, 257, 275, 283, 291, 292, 302, 303, 304, 308, 311, 320, 321, 409, 415, 416, 421, 426, 427, 428, 429, 432, 433, 439, 447, 451, 453, 454, 475, 479, 481, 505, 527, 552, 600, 602, 624, 666, 673, 674, 690, 691, 711, 854, 855, 860, 862, 864, 898, 932, 954, 1071, 1112, 1117, 1118, 1124, 1127, 1130], "lot": [12, 63, 67, 90, 95, 129, 131, 132, 134, 139, 143, 161, 164, 168, 184, 261, 305, 341, 390, 395, 399, 405, 419, 522, 599, 711, 742, 752, 758, 787, 788, 797, 818, 854, 863, 880, 932, 947, 975, 980, 1002, 1058, 1114], "littl": [12, 26, 42, 134, 136, 139, 142, 143, 152, 164, 192, 201, 207, 208, 210, 217, 220, 242, 248, 259, 320, 370, 398, 399, 410, 539, 542, 545, 601, 607, 687, 690, 714, 855, 857, 863, 911, 933, 1003, 1075], "maintain": [12, 27, 29, 52, 68, 78, 129, 131, 132, 139, 161, 170, 191, 193, 201, 205, 207, 217, 220, 229, 302, 316, 395, 409, 577, 627, 638, 736, 758, 766, 768, 770, 901, 932, 933, 934, 936, 942, 947, 948, 949, 950, 998, 1061, 1115], "packag": [12, 20, 22, 28, 30, 59, 95, 102, 111, 115, 121, 122, 128, 133, 147, 162, 164, 165, 168, 169, 171, 178, 183, 189, 191, 192, 193, 199, 201, 205, 207, 208, 211, 215, 217, 218, 220, 221, 223, 226, 229, 232, 250, 260, 261, 265, 269, 274, 302, 303, 304, 305, 309, 320, 321, 412, 414, 417, 418, 711, 731, 854, 862, 863, 934, 939, 942, 957, 980, 987, 1009, 1010, 1012, 1013, 1014, 1015, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1062, 1069, 1073, 1074, 1075, 1080, 1081, 1092, 1093, 1094, 1096, 1097, 1102, 1115], "virtual": [12, 28, 67, 78, 104, 105, 112, 128, 134, 137, 139, 159, 164, 168, 179, 183, 199, 215, 218, 221, 232, 237, 239, 241, 248, 257, 258, 259, 260, 261, 265, 276, 279, 309, 320, 321, 424, 428, 430, 433, 434, 439, 441, 447, 451, 456, 458, 459, 460, 463, 464, 465, 466, 467, 468, 475, 485, 525, 527, 552, 599, 600, 601, 624, 666, 674, 685, 687, 691, 711, 717, 789, 794, 797, 856, 862, 864, 873, 882, 898, 916, 926, 980, 983, 1009, 1010, 1011, 1054, 1056, 1057, 1058, 1062, 1073, 1075, 1087, 1090, 1093, 1112, 1119, 1128], "environ": [12, 20, 28, 63, 73, 76, 95, 102, 111, 120, 128, 132, 143, 147, 168, 174, 183, 184, 189, 199, 202, 205, 215, 218, 221, 232, 238, 241, 247, 260, 261, 265, 268, 269, 276, 279, 303, 304, 315, 316, 434, 454, 468, 483, 484, 485, 486, 547, 685, 686, 711, 788, 792, 796, 797, 818, 819, 838, 854, 855, 895, 912, 917, 933, 942, 943, 944, 949, 951, 963, 983, 985, 1009, 1010, 1011, 1054, 1056, 1057, 1058, 1062, 1063, 1073, 1075, 1087, 1088, 1090, 1093, 1094, 1100, 1104, 1106], "repo": [12, 112, 114, 143, 147, 159, 162, 173, 288, 293, 302, 306, 307, 495, 496, 497, 498, 500, 501, 502, 731, 758, 760, 946, 1102], "creat": [12, 16, 20, 23, 37, 40, 42, 52, 57, 59, 60, 61, 75, 97, 99, 100, 107, 111, 112, 115, 118, 125, 128, 132, 133, 134, 136, 139, 142, 143, 147, 149, 151, 152, 153, 168, 169, 170, 171, 172, 173, 184, 189, 197, 202, 207, 208, 210, 215, 217, 220, 224, 229, 232, 237, 238, 239, 247, 248, 256, 259, 260, 261, 265, 266, 268, 269, 271, 276, 302, 307, 326, 403, 405, 411, 412, 425, 427, 429, 432, 433, 434, 447, 448, 449, 453, 455, 456, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 527, 529, 532, 543, 583, 585, 601, 616, 619, 621, 630, 632, 655, 669, 672, 681, 687, 688, 700, 701, 706, 707, 709, 710, 711, 714, 717, 721, 722, 727, 729, 731, 733, 736, 742, 754, 758, 787, 788, 789, 790, 791, 792, 798, 800, 801, 805, 806, 807, 809, 811, 813, 816, 822, 823, 825, 827, 828, 829, 830, 832, 838, 854, 862, 863, 864, 866, 867, 868, 870, 871, 873, 875, 877, 883, 884, 885, 892, 893, 894, 895, 900, 901, 902, 908, 909, 912, 915, 916, 917, 924, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 947, 948, 953, 954, 956, 958, 960, 964, 968, 969, 970, 972, 986, 987, 996, 997, 998, 1007, 1010, 1011, 1012, 1024, 1032, 1033, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1056, 1058, 1059, 1060, 1062, 1068, 1071, 1075, 1084, 1093, 1095, 1096, 1115], "popul": [12, 134, 138, 224, 257, 714], "yourself": [12, 132, 139, 143, 154, 210, 354, 530, 547, 552, 763, 820, 903, 926, 979, 1118], "root": [12, 36, 61, 78, 111, 114, 131, 137, 139, 142, 143, 154, 159, 160, 161, 168, 172, 182, 204, 210, 220, 224, 227, 230, 245, 248, 252, 262, 266, 287, 288, 293, 322, 389, 398, 402, 405, 414, 422, 428, 486, 548, 604, 709, 722, 758, 759, 760, 789, 793, 795, 814, 818, 830, 831, 837, 840, 842, 843, 844, 846, 847, 849, 855, 862, 863, 864, 866, 867, 871, 880, 885, 890, 898, 918, 932, 935, 944, 946, 955, 1034, 1043, 1044, 1084, 1093], "bin": [12, 22, 48, 61, 111, 128, 131, 133, 143, 152, 155, 165, 182, 192, 201, 204, 207, 212, 217, 220, 224, 227, 230, 242, 245, 250, 252, 262, 266, 302, 310, 412, 413, 414, 415, 417, 418, 419, 420, 423, 425, 470, 485, 486, 736, 758, 790, 793, 795, 800, 803, 814, 818, 819, 843, 844, 849, 862, 864, 880, 887, 890, 896, 910, 911, 920, 932, 933, 934, 944, 946, 949, 953, 959, 983, 1010, 1011, 1034, 1043, 1044, 1059, 1064, 1075, 1088, 1093, 1095, 1107], "activ": [12, 137, 147, 149, 172, 232, 627, 738, 740, 744, 752, 793, 795, 850, 1010, 1093, 1095], "txt": [12, 31, 40, 42, 111, 127, 134, 150, 151, 155, 158, 159, 160, 161, 162, 191, 193, 198, 201, 210, 211, 220, 232, 242, 276, 293, 294, 334, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 470, 483, 484, 485, 486, 487, 506, 509, 512, 513, 515, 518, 521, 524, 618, 709, 729, 784, 785, 786, 798, 802, 812, 822, 823, 824, 825, 829, 830, 837, 858, 862, 863, 864, 898, 921, 924, 928, 933, 934, 944, 955, 1002, 1025, 1043, 1095, 1096, 1099, 1102, 1104], "fedorish": [12, 731, 875, 1075], "your": [12, 41, 63, 100, 107, 111, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 147, 148, 161, 164, 167, 168, 172, 184, 192, 193, 210, 218, 224, 237, 239, 241, 248, 251, 254, 283, 288, 299, 308, 310, 354, 389, 397, 399, 401, 406, 407, 409, 418, 428, 432, 453, 470, 473, 484, 486, 487, 544, 618, 619, 621, 622, 629, 635, 643, 667, 708, 710, 711, 733, 750, 758, 763, 784, 785, 786, 788, 795, 797, 798, 807, 808, 809, 810, 811, 812, 813, 819, 822, 823, 824, 825, 827, 836, 854, 855, 862, 864, 866, 867, 871, 875, 890, 892, 944, 947, 958, 969, 975, 980, 984, 1025, 1039, 1043, 1044, 1056, 1061, 1075, 1085, 1088, 1093, 1094, 1095, 1102, 1118], "mileag": [12, 237, 239, 1075, 1093], "might": [12, 26, 57, 59, 60, 131, 132, 133, 135, 137, 139, 142, 143, 147, 160, 162, 164, 172, 193, 201, 207, 212, 217, 220, 251, 254, 257, 288, 313, 385, 399, 409, 414, 423, 424, 429, 432, 453, 486, 536, 545, 664, 674, 687, 688, 689, 709, 733, 744, 748, 754, 758, 800, 855, 862, 863, 864, 875, 880, 889, 911, 918, 929, 944, 947, 955, 964, 967, 980, 1058, 1075, 1093, 1096, 1100], "vari": [12, 201, 207, 217, 220, 224, 237, 239, 260, 261, 279, 325, 399, 583, 702, 758, 864, 949, 1071, 1075, 1093, 1113], "dnf": [12, 59, 128, 135, 143, 147, 161, 322, 415, 422, 499, 731, 759, 857, 875, 934, 946, 1075, 1100, 1102], "pandoc": 12, "graphviz": [12, 418, 934], "dia": [12, 204, 262, 840, 1013], "gtest": [12, 42, 63, 111, 159, 160, 161, 162, 322, 427, 428, 429, 431, 432, 434, 436, 449, 451, 452, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 522, 529, 530, 531, 542, 543, 545, 546, 547, 548, 549, 607, 632, 634, 637, 638, 639, 670, 676, 681, 685, 686, 687, 688, 690, 705, 706, 707, 709, 711, 1098], "devel": [12, 128, 143, 161, 415, 417, 422, 731, 1100, 1102], "markdown": [12, 22, 297, 1011], "handl": [12, 20, 28, 44, 72, 126, 132, 152, 164, 168, 169, 171, 173, 179, 192, 194, 199, 201, 205, 208, 209, 217, 222, 229, 241, 248, 258, 265, 266, 276, 302, 307, 309, 315, 316, 323, 363, 370, 375, 391, 395, 415, 475, 505, 527, 542, 552, 585, 589, 611, 620, 621, 622, 655, 657, 684, 687, 699, 700, 710, 711, 717, 721, 740, 752, 788, 791, 792, 854, 862, 877, 879, 880, 881, 882, 883, 884, 885, 887, 890, 892, 893, 895, 903, 909, 912, 915, 917, 920, 926, 929, 957, 975, 980, 981, 996, 1006, 1054, 1056, 1066, 1073, 1086, 1112, 1118, 1127], "jupyt": [12, 147, 152, 153, 155, 164, 165, 167, 175, 215, 217, 218, 220, 221, 250, 251, 254, 255, 261, 265, 271, 276, 280, 302, 307, 840, 980, 1058, 1059, 1063, 1123], "notebook": [12, 30, 147, 151, 152, 153, 155, 164, 167, 175, 208, 215, 218, 220, 221, 223, 226, 229, 232, 241, 244, 250, 251, 254, 255, 261, 265, 271, 276, 280, 287, 307, 980, 1058, 1063, 1123], "those": [12, 23, 76, 125, 132, 133, 139, 142, 147, 162, 164, 168, 173, 191, 193, 194, 201, 205, 210, 211, 212, 214, 220, 224, 256, 257, 258, 259, 261, 276, 287, 299, 302, 308, 313, 334, 389, 399, 409, 411, 413, 414, 415, 428, 429, 432, 433, 499, 542, 564, 605, 608, 615, 630, 665, 681, 689, 691, 709, 724, 727, 758, 785, 786, 802, 803, 855, 862, 863, 864, 929, 948, 949, 950, 951, 955, 956, 957, 963, 968, 979, 1020, 1030, 1051, 1061, 1072, 1073, 1080, 1093, 1115, 1116, 1118], "funki": [12, 16, 134], "graph": [12, 28, 76, 85, 202, 215, 229, 232, 265, 271, 302, 309, 404, 418, 424, 934, 948, 949, 1056, 1062], "histor": [12, 23, 76, 134, 156, 335, 348, 393, 626, 717, 796, 875, 930, 1047, 1105], "baggag": [12, 335, 348, 626, 930, 1047], "convert": [12, 16, 28, 40, 125, 153, 183, 191, 197, 201, 204, 207, 210, 214, 217, 220, 221, 224, 241, 266, 276, 287, 348, 370, 395, 405, 413, 418, 428, 483, 598, 605, 639, 640, 711, 712, 892, 932, 971, 1013, 1015, 1020, 1027, 1030, 1049, 1050, 1051, 1054, 1072], "draw": [12, 129, 172, 310, 345, 481, 679, 715, 719, 727, 748, 771], "svg": [12, 129], "ani": [12, 37, 43, 47, 116, 125, 128, 131, 132, 133, 134, 137, 139, 143, 147, 152, 156, 167, 170, 172, 184, 191, 193, 201, 207, 217, 220, 224, 235, 236, 237, 245, 261, 266, 283, 288, 309, 310, 343, 387, 395, 409, 432, 437, 479, 480, 481, 482, 486, 487, 499, 516, 534, 537, 563, 601, 609, 614, 627, 630, 632, 649, 655, 673, 674, 677, 686, 687, 688, 690, 691, 699, 709, 716, 717, 729, 731, 750, 758, 768, 775, 785, 786, 795, 798, 805, 806, 809, 810, 811, 818, 830, 840, 855, 862, 863, 864, 867, 890, 901, 905, 925, 951, 953, 954, 955, 956, 960, 967, 968, 975, 978, 987, 992, 994, 1005, 1006, 1011, 1035, 1037, 1052, 1063, 1082, 1087, 1088, 1100, 1113, 1118], "That": [12, 82, 96, 97, 111, 131, 132, 133, 134, 137, 142, 143, 147, 156, 164, 168, 171, 210, 234, 238, 240, 254, 257, 259, 313, 377, 378, 381, 384, 388, 397, 401, 406, 407, 415, 428, 429, 439, 451, 453, 455, 471, 473, 486, 533, 537, 619, 629, 667, 693, 699, 700, 708, 710, 711, 785, 786, 788, 789, 791, 792, 794, 795, 804, 807, 808, 809, 810, 811, 812, 813, 818, 854, 855, 863, 866, 867, 868, 869, 870, 873, 891, 895, 909, 915, 917, 942, 943, 954, 980, 987, 1046, 1048, 1053, 1085, 1093, 1103, 1113], "sloppili": [12, 888], "track": [12, 135, 139, 147, 171, 191, 201, 207, 217, 220, 686, 731, 758, 759, 763, 795, 967], "opentrain": [12, 21, 27, 116, 129, 169, 176, 194, 310, 321, 1093, 1123], "recip": [12, 37, 124, 128, 132, 133, 303, 304, 389, 554], "sphinx": [13, 16, 22, 37, 63, 128, 129, 144, 308, 712, 1093], "togeth": [13, 23, 41, 48, 102, 104, 108, 109, 122, 139, 142, 143, 147, 152, 162, 164, 168, 172, 184, 193, 210, 237, 239, 256, 257, 259, 274, 310, 320, 366, 399, 400, 476, 486, 505, 527, 545, 546, 548, 549, 699, 701, 722, 735, 758, 785, 786, 844, 845, 863, 864, 894, 908, 932, 938, 942, 944, 947, 951, 1029, 1062, 1085, 1088, 1096, 1098, 1100, 1113, 1115], "form": [13, 28, 134, 139, 152, 156, 180, 201, 207, 208, 217, 220, 257, 259, 321, 386, 402, 441, 449, 451, 490, 491, 503, 601, 712, 758, 763, 766, 790, 840, 864, 991, 1010, 1013, 1046, 1048, 1051, 1052, 1058, 1067, 1088, 1093, 1113], "short": [13, 30, 33, 41, 104, 132, 139, 147, 160, 164, 168, 171, 172, 173, 183, 184, 201, 205, 206, 207, 212, 215, 217, 218, 222, 240, 256, 257, 258, 259, 260, 261, 325, 341, 343, 348, 352, 353, 378, 387, 433, 447, 475, 487, 527, 532, 536, 711, 754, 760, 763, 797, 818, 843, 862, 864, 875, 882, 892, 914, 919, 952, 966, 989, 992, 1008, 1083, 1093, 1095, 1113], "video": [13, 21, 126, 135, 137, 139, 150, 164, 167, 168, 171, 176, 189, 192, 193, 215, 259, 262, 265, 410, 677, 855, 863, 1056, 1063, 1075], "explain": [13, 61, 63, 95, 126, 131, 137, 143, 156, 164, 168, 170, 194, 205, 210, 212, 214, 215, 223, 224, 261, 287, 317, 320, 389, 399, 519, 798, 818, 821, 855, 864, 920, 1003, 1056, 1093, 1118], "case": [13, 23, 41, 95, 102, 104, 107, 131, 132, 133, 136, 139, 142, 143, 147, 153, 156, 168, 170, 172, 174, 194, 207, 208, 214, 220, 224, 227, 236, 237, 239, 240, 248, 251, 254, 266, 283, 310, 332, 339, 358, 360, 391, 393, 411, 414, 417, 426, 433, 437, 440, 475, 483, 484, 486, 492, 494, 513, 527, 534, 544, 583, 589, 609, 621, 627, 644, 655, 667, 674, 677, 685, 699, 709, 710, 711, 731, 758, 771, 774, 786, 790, 793, 800, 814, 830, 847, 854, 855, 864, 874, 875, 881, 892, 911, 916, 930, 937, 939, 942, 944, 946, 948, 955, 956, 986, 987, 998, 1002, 1025, 1067, 1083, 1093, 1101, 1116], "netide": 13, "f\u00f6rderantrag": 13, "miscellan": [13, 28, 88, 115, 168, 176, 189, 192, 199, 202, 203, 205, 211, 213, 215, 216, 221, 222, 223, 226, 229, 231, 239, 244, 246, 250, 251, 254, 264, 265, 267, 270, 273, 288, 289, 290, 291, 292, 293, 302, 310, 321, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711, 712, 854, 884, 885, 890, 893, 895, 909, 912, 957, 979, 1009, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1062, 1063, 1066, 1072, 1075, 1079, 1087, 1090, 1097, 1112, 1113, 1114, 1123], "s5": [15, 22, 128, 926, 930, 1127], "slide": [15, 22, 23, 26, 35, 128, 129, 132, 150, 157, 159, 164, 168, 172, 173, 174, 183, 184, 193, 194, 210, 236, 237, 248, 313, 316, 321, 522, 770, 927, 931, 1028, 1072, 1109, 1110, 1111, 1119, 1120, 1126, 1127, 1129, 1130, 1131], "work": [15, 23, 26, 38, 40, 41, 42, 55, 59, 69, 76, 78, 96, 97, 102, 104, 107, 114, 117, 118, 128, 129, 131, 132, 133, 135, 137, 138, 139, 142, 143, 147, 156, 160, 161, 162, 171, 172, 174, 184, 189, 191, 193, 201, 202, 205, 207, 208, 210, 215, 217, 220, 224, 229, 238, 241, 247, 248, 250, 251, 254, 261, 262, 265, 266, 268, 269, 271, 288, 302, 307, 308, 310, 315, 316, 321, 322, 366, 367, 387, 389, 399, 409, 411, 412, 414, 415, 417, 418, 420, 421, 423, 425, 428, 429, 432, 433, 434, 447, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 522, 527, 547, 576, 583, 616, 618, 620, 628, 630, 632, 675, 681, 685, 686, 687, 691, 693, 700, 707, 710, 711, 712, 721, 726, 736, 738, 742, 756, 758, 763, 766, 780, 784, 785, 786, 787, 788, 791, 792, 793, 795, 797, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 840, 842, 851, 854, 855, 863, 867, 871, 875, 877, 882, 883, 885, 888, 891, 893, 895, 900, 909, 912, 914, 915, 917, 930, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 947, 949, 955, 956, 959, 978, 981, 982, 983, 1002, 1008, 1010, 1011, 1033, 1043, 1044, 1056, 1063, 1066, 1075, 1077, 1078, 1080, 1081, 1083, 1093, 1102, 1113, 1118, 1119, 1125], "progress": [15, 128, 321, 712, 820, 1102], "web": [15, 22, 70, 72, 76, 115, 129, 139, 168, 171, 192, 195, 241, 265, 711, 1056, 1063, 1072, 1075], "note": [15, 30, 34, 38, 42, 58, 61, 111, 115, 117, 131, 132, 134, 139, 152, 153, 164, 183, 191, 193, 204, 205, 207, 232, 261, 266, 293, 294, 411, 415, 417, 421, 451, 499, 522, 531, 532, 538, 543, 602, 644, 664, 665, 666, 677, 679, 685, 686, 687, 689, 717, 758, 775, 785, 786, 845, 863, 881, 892, 944, 997, 1000, 1002, 1006, 1061, 1075, 1077, 1080, 1100], "screencast": [15, 22, 115, 1056], "written": [15, 40, 41, 76, 104, 131, 132, 137, 147, 170, 220, 304, 366, 369, 385, 393, 395, 399, 412, 449, 539, 605, 618, 638, 712, 797, 884, 891, 926, 933, 934, 942, 974, 981, 1011, 1115], "new": [15, 30, 40, 42, 47, 48, 53, 61, 63, 76, 105, 112, 129, 132, 134, 135, 136, 137, 138, 139, 142, 147, 159, 164, 184, 201, 205, 207, 217, 220, 224, 232, 242, 259, 265, 266, 288, 313, 319, 348, 378, 382, 383, 391, 395, 409, 412, 432, 434, 452, 456, 468, 470, 474, 483, 485, 486, 495, 496, 497, 498, 500, 501, 505, 511, 519, 528, 529, 534, 537, 583, 585, 596, 598, 599, 604, 621, 625, 629, 631, 632, 636, 637, 638, 640, 643, 654, 665, 668, 672, 674, 676, 678, 679, 683, 684, 685, 686, 687, 688, 692, 693, 700, 702, 704, 708, 710, 711, 715, 752, 758, 766, 790, 814, 837, 855, 858, 862, 863, 864, 887, 888, 889, 898, 900, 901, 907, 919, 950, 969, 984, 987, 996, 1035, 1060, 1061, 1081, 1088, 1093, 1112, 1113, 1114, 1116], "draft": [15, 28, 164, 711, 854, 1008, 1054, 1055, 1073], "convers": [16, 171, 183, 190, 193, 194, 201, 206, 207, 210, 213, 216, 217, 222, 225, 228, 246, 257, 259, 263, 267, 273, 302, 326, 341, 355, 364, 371, 377, 381, 384, 388, 395, 397, 401, 406, 407, 411, 448, 510, 598, 602, 626, 628, 629, 631, 667, 708, 710, 711, 761, 1006, 1023, 1027, 1030, 1041], "old": [16, 28, 128, 129, 132, 134, 137, 162, 172, 204, 205, 220, 252, 262, 266, 321, 344, 383, 404, 409, 432, 505, 558, 565, 570, 585, 617, 623, 626, 631, 632, 673, 691, 702, 715, 721, 731, 750, 855, 863, 919, 995, 1001, 1013, 1034, 1083, 1114], "latex": [16, 22, 23, 505], "beamer": [16, 22, 23], "To": [16, 28, 43, 44, 45, 49, 53, 54, 59, 76, 100, 115, 131, 132, 134, 136, 147, 156, 160, 164, 179, 191, 201, 207, 217, 220, 221, 224, 228, 236, 237, 239, 241, 261, 276, 283, 335, 338, 393, 405, 429, 474, 487, 583, 597, 608, 624, 626, 667, 683, 706, 710, 711, 731, 735, 746, 758, 787, 793, 854, 855, 862, 863, 868, 870, 883, 892, 948, 957, 971, 1015, 1021, 1044, 1049, 1050, 1051, 1054, 1062, 1072], "put": [16, 56, 67, 78, 125, 131, 132, 133, 160, 168, 283, 411, 415, 419, 420, 483, 527, 613, 637, 673, 699, 727, 735, 748, 750, 775, 855, 863, 892, 917, 932, 947, 950, 955, 1013, 1098], "more": [16, 20, 26, 28, 41, 43, 57, 60, 63, 67, 76, 80, 88, 95, 99, 104, 111, 125, 129, 132, 133, 136, 137, 139, 142, 143, 145, 147, 153, 154, 156, 161, 164, 168, 169, 170, 171, 172, 173, 174, 176, 178, 183, 184, 189, 191, 192, 193, 194, 195, 199, 202, 205, 206, 208, 209, 210, 211, 213, 214, 215, 218, 221, 222, 223, 225, 226, 228, 232, 236, 237, 238, 239, 243, 246, 247, 257, 258, 259, 266, 268, 269, 273, 275, 283, 288, 289, 290, 291, 292, 293, 305, 307, 313, 320, 321, 332, 337, 341, 344, 348, 358, 359, 360, 369, 371, 377, 378, 381, 384, 388, 389, 394, 395, 397, 399, 401, 403, 404, 405, 406, 407, 411, 414, 416, 417, 420, 433, 440, 447, 449, 453, 454, 465, 470, 475, 483, 485, 505, 522, 527, 531, 535, 584, 598, 599, 600, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 626, 629, 636, 637, 648, 655, 664, 667, 668, 676, 677, 679, 681, 683, 684, 686, 687, 690, 692, 700, 701, 708, 709, 710, 711, 714, 717, 729, 731, 736, 742, 744, 746, 750, 752, 754, 758, 784, 789, 794, 818, 821, 851, 855, 857, 861, 862, 863, 864, 875, 881, 884, 887, 890, 901, 903, 914, 918, 920, 926, 930, 932, 933, 934, 942, 944, 948, 949, 950, 956, 958, 960, 964, 965, 966, 967, 971, 974, 975, 979, 980, 982, 986, 987, 998, 1009, 1012, 1013, 1014, 1015, 1025, 1027, 1028, 1034, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1066, 1068, 1069, 1072, 1073, 1075, 1078, 1082, 1087, 1088, 1090, 1092, 1094, 1095, 1097, 1102, 1106, 1113, 1115, 1116, 1123], "precis": [16, 164, 168, 224, 241, 265, 325, 343, 607, 702, 758, 1001, 1056], "restructuredtext": [16, 22, 30, 31, 32, 33, 34, 36, 712], "turn": [16, 73, 108, 109, 132, 134, 137, 142, 143, 164, 168, 184, 193, 210, 256, 302, 399, 414, 415, 451, 476, 477, 634, 649, 814, 855, 862, 863, 864, 932, 934, 938, 948, 956, 961, 962, 972, 974, 1085], "rst2s5": 16, "tool": [16, 30, 59, 66, 111, 139, 143, 148, 164, 172, 174, 184, 194, 220, 238, 247, 262, 267, 268, 302, 305, 307, 320, 321, 322, 367, 402, 404, 405, 409, 601, 655, 673, 711, 782, 788, 789, 802, 854, 864, 875, 878, 933, 934, 942, 946, 980, 981, 984, 1011, 1087, 1111, 1113, 1115, 1117, 1124], "thi": [16, 23, 27, 28, 29, 37, 38, 41, 42, 43, 48, 51, 52, 55, 57, 59, 60, 61, 63, 67, 75, 76, 82, 83, 87, 88, 95, 102, 104, 107, 108, 109, 111, 112, 115, 122, 126, 129, 131, 132, 133, 135, 136, 137, 138, 147, 149, 151, 152, 154, 156, 158, 159, 160, 161, 164, 168, 169, 170, 171, 172, 173, 174, 184, 191, 193, 194, 201, 204, 205, 207, 210, 212, 214, 215, 217, 220, 223, 224, 230, 233, 237, 239, 241, 248, 256, 257, 259, 261, 266, 276, 286, 288, 293, 302, 305, 308, 320, 321, 323, 327, 334, 335, 348, 357, 358, 382, 386, 387, 389, 390, 391, 393, 398, 399, 409, 413, 414, 419, 420, 421, 425, 431, 439, 440, 451, 453, 455, 473, 475, 484, 485, 488, 489, 490, 491, 492, 493, 494, 495, 499, 500, 503, 504, 505, 506, 509, 512, 513, 515, 516, 518, 519, 521, 522, 524, 527, 529, 530, 531, 533, 534, 537, 539, 540, 542, 545, 550, 553, 556, 558, 560, 561, 564, 572, 576, 578, 582, 584, 589, 591, 592, 594, 595, 599, 602, 605, 609, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 627, 636, 637, 638, 649, 655, 657, 658, 661, 662, 663, 664, 665, 666, 667, 672, 675, 677, 679, 680, 683, 685, 687, 689, 690, 691, 692, 699, 700, 701, 702, 708, 709, 710, 711, 712, 717, 722, 727, 731, 733, 740, 754, 758, 763, 770, 778, 785, 786, 789, 790, 797, 800, 802, 803, 812, 814, 815, 818, 823, 825, 855, 860, 861, 862, 863, 864, 867, 874, 875, 881, 888, 889, 890, 891, 892, 896, 899, 908, 911, 920, 921, 924, 925, 928, 930, 933, 934, 936, 942, 944, 945, 946, 947, 948, 950, 951, 952, 953, 954, 957, 960, 962, 964, 966, 968, 975, 978, 979, 980, 982, 984, 991, 994, 996, 997, 998, 1001, 1002, 1004, 1006, 1007, 1008, 1012, 1028, 1043, 1058, 1059, 1060, 1061, 1062, 1063, 1067, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1084, 1087, 1088, 1093, 1095, 1098, 1099, 1100, 1102, 1104, 1105, 1113, 1115, 1116, 1118, 1121, 1122, 1128], "sens": [16, 76, 134, 136, 153, 156, 161, 164, 183, 424, 432, 449, 534, 545, 552, 599, 627, 640, 719, 758, 797, 864, 888, 911, 918, 925, 975, 1005, 1061, 1116], "entir": [16, 23, 29, 78, 108, 109, 125, 129, 132, 133, 134, 137, 143, 147, 156, 161, 168, 171, 189, 192, 193, 201, 215, 218, 221, 224, 236, 237, 239, 241, 251, 258, 261, 265, 271, 276, 280, 339, 368, 372, 379, 382, 387, 395, 403, 411, 429, 635, 666, 686, 758, 785, 786, 791, 815, 820, 829, 837, 855, 862, 864, 867, 873, 890, 901, 934, 963, 967, 981, 986, 987, 1004, 1006, 1025, 1056, 1093, 1096, 1099, 1116], "site": [16, 22, 26, 37, 59, 63, 115, 128, 129, 132, 144, 147, 159, 160, 161, 165, 191, 201, 207, 217, 220, 544, 690, 797, 1060, 1080, 1081, 1088, 1095, 1102], "massag": [16, 30, 122, 143, 161, 237, 239, 712, 862, 934], "itself": [16, 26, 132, 134, 160, 164, 170, 201, 207, 217, 220, 266, 291, 337, 369, 405, 414, 420, 448, 449, 471, 486, 532, 539, 598, 675, 690, 699, 702, 733, 736, 758, 778, 784, 785, 786, 800, 818, 847, 917, 930, 944, 972, 975, 980, 1001, 1041, 1085, 1102], "upon": [16, 26, 67, 95, 134, 135, 164, 168, 172, 179, 218, 250, 257, 276, 391, 409, 437, 489, 505, 544, 562, 685, 702, 731, 864, 930, 1018, 1085, 1093, 1113], "you": [16, 20, 41, 56, 57, 60, 107, 111, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 147, 148, 152, 153, 154, 156, 160, 161, 164, 168, 170, 171, 172, 184, 189, 191, 192, 193, 194, 201, 204, 207, 208, 210, 214, 215, 217, 218, 220, 224, 232, 241, 248, 251, 254, 257, 259, 261, 265, 288, 293, 299, 302, 305, 307, 310, 333, 334, 347, 363, 389, 393, 409, 451, 470, 471, 472, 473, 477, 480, 483, 484, 486, 519, 530, 531, 537, 542, 545, 546, 548, 549, 563, 584, 592, 599, 605, 613, 614, 618, 635, 641, 669, 679, 690, 706, 707, 709, 731, 733, 750, 758, 763, 784, 785, 786, 789, 790, 793, 797, 798, 804, 808, 810, 812, 818, 819, 820, 822, 823, 824, 825, 829, 830, 855, 858, 862, 863, 864, 865, 866, 867, 869, 871, 874, 875, 879, 881, 885, 890, 892, 900, 901, 902, 903, 904, 908, 932, 933, 934, 935, 937, 940, 944, 947, 948, 951, 956, 957, 966, 968, 979, 980, 984, 987, 1000, 1006, 1013, 1022, 1024, 1039, 1043, 1044, 1053, 1056, 1062, 1072, 1075, 1081, 1093, 1094, 1095, 1102, 1105, 1113, 1118], "view": [16, 61, 137, 138, 142, 153, 155, 168, 170, 236, 237, 241, 248, 283, 320, 337, 339, 402, 629, 667, 676, 678, 710, 711, 785, 786, 795, 802, 855, 864, 866, 987, 1055, 1113, 1116, 1118], "state": [16, 43, 111, 128, 139, 144, 164, 172, 194, 201, 204, 207, 217, 218, 220, 342, 359, 391, 409, 476, 477, 481, 482, 529, 635, 669, 699, 716, 754, 775, 789, 847, 857, 901, 905, 916, 917, 954, 960], "rather": [16, 63, 83, 112, 128, 132, 134, 135, 136, 137, 138, 139, 142, 143, 147, 156, 160, 164, 168, 184, 193, 211, 212, 288, 313, 325, 367, 399, 400, 409, 427, 478, 479, 480, 481, 482, 487, 522, 529, 531, 545, 552, 563, 583, 608, 614, 628, 649, 699, 701, 731, 758, 763, 795, 797, 843, 855, 862, 863, 864, 866, 873, 878, 901, 902, 929, 933, 948, 973, 980, 983, 991, 1031, 1032, 1035, 1046, 1048, 1063, 1073, 1095, 1100, 1113, 1115], "huge": [16, 138, 143, 153, 440, 676, 736, 754, 979, 981, 1089], "tabl": [16, 37, 61, 63, 125, 129, 131, 164, 170, 171, 188, 196, 201, 207, 208, 210, 211, 214, 215, 217, 220, 227, 232, 266, 321, 325, 340, 354, 355, 359, 360, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 607, 629, 667, 676, 708, 710, 711, 797, 1004, 1013, 1045, 1047, 1071, 1072], "isnot": 16, "big": [16, 102, 129, 132, 133, 139, 164, 168, 188, 194, 208, 215, 218, 261, 302, 348, 393, 405, 484, 534, 564, 627, 691, 878, 1056, 1071, 1128], "fat": [16, 129, 131, 135, 139, 208, 621, 691, 789, 1071], "sai": [16, 23, 63, 64, 104, 120, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 147, 152, 153, 164, 168, 205, 210, 232, 251, 254, 258, 260, 261, 279, 288, 302, 393, 399, 405, 415, 425, 429, 438, 449, 455, 470, 472, 484, 513, 522, 531, 541, 589, 602, 614, 623, 627, 655, 659, 661, 662, 663, 665, 670, 677, 680, 681, 686, 717, 731, 758, 797, 800, 802, 837, 855, 862, 864, 875, 879, 890, 892, 902, 914, 925, 929, 935, 944, 947, 948, 958, 980, 996, 1008, 1013, 1043, 1065, 1067, 1102, 1116], "file": [16, 26, 28, 32, 33, 34, 36, 38, 42, 45, 48, 51, 52, 53, 54, 66, 76, 78, 83, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 111, 116, 119, 124, 125, 128, 129, 131, 132, 133, 134, 137, 138, 143, 147, 151, 154, 156, 158, 159, 160, 161, 163, 164, 166, 168, 169, 171, 172, 173, 174, 179, 181, 182, 183, 184, 189, 192, 193, 194, 197, 198, 199, 202, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 217, 218, 221, 222, 223, 224, 226, 228, 231, 232, 236, 237, 238, 241, 245, 247, 250, 251, 253, 254, 260, 261, 263, 267, 268, 272, 274, 275, 279, 287, 288, 289, 290, 291, 292, 299, 302, 303, 304, 305, 306, 307, 313, 315, 316, 320, 331, 334, 335, 365, 366, 368, 369, 370, 371, 377, 381, 384, 388, 392, 397, 401, 403, 405, 406, 407, 410, 412, 414, 416, 417, 418, 423, 424, 427, 433, 447, 470, 471, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 506, 509, 512, 514, 515, 518, 521, 524, 527, 532, 534, 546, 547, 548, 549, 555, 607, 611, 618, 621, 629, 644, 667, 673, 677, 687, 700, 708, 709, 710, 711, 714, 719, 720, 724, 725, 727, 728, 735, 736, 739, 749, 754, 760, 762, 765, 767, 773, 774, 776, 779, 782, 783, 784, 787, 788, 790, 791, 792, 794, 795, 797, 798, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 814, 816, 817, 818, 822, 826, 827, 828, 829, 830, 832, 835, 838, 843, 846, 851, 854, 855, 858, 862, 863, 864, 865, 867, 868, 870, 871, 877, 878, 881, 882, 883, 892, 895, 896, 899, 900, 906, 909, 912, 915, 917, 921, 923, 924, 925, 928, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 948, 949, 950, 955, 956, 957, 960, 963, 968, 971, 974, 979, 983, 985, 987, 998, 1004, 1007, 1008, 1014, 1015, 1025, 1028, 1039, 1040, 1043, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1064, 1072, 1073, 1084, 1088, 1093, 1094, 1095, 1096, 1099, 1101, 1104, 1110, 1115, 1117, 1118, 1119, 1126, 1127, 1128, 1130], "rst": [16, 22, 30, 32, 33, 34, 36, 111, 116, 128, 151, 158, 163, 166, 172, 220, 230, 310, 506, 509, 512, 515, 518, 521, 524, 921, 924, 928, 1099, 1104], "render": [16, 38, 137], "dure": [16, 26, 43, 44, 102, 104, 122, 131, 132, 133, 134, 138, 139, 143, 147, 152, 164, 168, 220, 305, 368, 372, 373, 387, 399, 404, 448, 455, 481, 484, 565, 583, 640, 679, 754, 758, 763, 790, 796, 862, 864, 873, 934, 948, 949, 968, 981, 983, 998, 1085, 1093], "regular": [16, 132, 156, 167, 181, 197, 204, 205, 212, 231, 232, 234, 236, 237, 246, 265, 266, 327, 393, 411, 542, 544, 676, 709, 746, 758, 803, 837, 840, 842, 851, 864, 875, 925, 926, 968, 998, 1000, 1056], "process": [16, 27, 59, 61, 63, 71, 76, 78, 95, 97, 108, 109, 111, 137, 142, 149, 156, 162, 164, 171, 172, 174, 208, 238, 247, 260, 261, 268, 279, 304, 305, 312, 317, 370, 376, 405, 414, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 694, 700, 709, 710, 711, 720, 725, 728, 730, 735, 739, 741, 744, 745, 748, 749, 750, 751, 753, 755, 758, 762, 763, 764, 767, 769, 772, 773, 775, 776, 778, 779, 785, 786, 787, 788, 789, 792, 793, 794, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 863, 866, 867, 868, 869, 870, 873, 877, 878, 879, 883, 884, 885, 887, 888, 890, 892, 893, 895, 900, 901, 902, 909, 914, 915, 917, 918, 919, 926, 929, 930, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 950, 959, 967, 980, 981, 1035, 1105, 1118, 1127, 1128], "mean": [16, 28, 71, 72, 108, 109, 111, 132, 134, 137, 139, 153, 155, 156, 168, 188, 191, 192, 205, 207, 220, 224, 251, 266, 274, 279, 287, 288, 325, 346, 347, 348, 370, 389, 394, 399, 453, 531, 539, 542, 543, 609, 655, 677, 681, 689, 690, 711, 717, 733, 793, 800, 803, 805, 806, 814, 855, 862, 863, 864, 891, 898, 914, 918, 920, 948, 951, 960, 975, 983, 986, 1000, 1001, 1006, 1034, 1054, 1057, 1061, 1063, 1067, 1073, 1078, 1086, 1100, 1115, 1118], "specif": [16, 61, 135, 201, 207, 208, 217, 220, 266, 272, 288, 322, 370, 387, 399, 429, 476, 479, 481, 484, 630, 673, 687, 709, 717, 731, 754, 758, 784, 794, 855, 862, 864, 878, 884, 900, 901, 926, 932, 944, 955, 963, 964, 1068, 1084, 1093, 1128, 1129], "markup": [16, 37], "class": [16, 20, 28, 40, 42, 53, 56, 61, 67, 68, 71, 72, 83, 90, 95, 104, 105, 106, 108, 109, 111, 112, 139, 150, 151, 152, 154, 159, 168, 169, 170, 171, 173, 175, 176, 188, 192, 194, 201, 204, 205, 207, 208, 212, 216, 218, 219, 222, 224, 227, 230, 232, 234, 236, 237, 239, 244, 245, 249, 251, 252, 254, 258, 259, 260, 261, 263, 264, 265, 266, 270, 272, 279, 283, 288, 290, 296, 297, 304, 305, 306, 313, 339, 385, 409, 411, 419, 427, 428, 429, 430, 431, 433, 434, 436, 437, 441, 447, 448, 449, 451, 452, 454, 455, 456, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 492, 494, 499, 505, 513, 516, 519, 525, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 540, 541, 543, 545, 550, 552, 553, 556, 562, 571, 572, 578, 582, 588, 591, 594, 595, 600, 601, 602, 604, 605, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 631, 632, 633, 634, 635, 636, 637, 640, 644, 649, 651, 652, 653, 655, 657, 658, 661, 662, 663, 664, 665, 666, 667, 669, 670, 672, 674, 681, 683, 686, 687, 690, 691, 692, 699, 700, 701, 705, 706, 707, 708, 710, 711, 713, 855, 862, 863, 864, 896, 898, 899, 953, 955, 957, 963, 964, 965, 966, 967, 970, 971, 976, 977, 978, 979, 981, 984, 986, 987, 995, 1015, 1042, 1043, 1044, 1049, 1051, 1054, 1066, 1072, 1073, 1086, 1087, 1093, 1094, 1105, 1113, 1123], "handout": [16, 111], "warn": [16, 30, 38, 128, 143, 184, 194, 245, 257, 299, 310, 335, 359, 390, 391, 393, 414, 428, 483, 485, 529, 533, 584, 628, 640, 711, 727, 733, 736, 795, 854, 863, 884, 895, 909, 931, 955, 1006, 1088], "produc": [16, 106, 152, 154, 193, 207, 387, 399, 404, 655, 661, 663, 699, 701, 875, 905, 906, 924, 932, 935, 948, 961, 962, 995, 998, 1000, 1067], "error": [16, 20, 26, 28, 44, 63, 86, 95, 128, 131, 132, 133, 134, 137, 138, 147, 151, 154, 162, 165, 168, 171, 178, 189, 193, 199, 201, 204, 208, 209, 210, 214, 217, 220, 224, 227, 229, 232, 241, 242, 245, 248, 251, 254, 265, 266, 287, 302, 307, 309, 313, 332, 335, 337, 344, 348, 362, 363, 369, 375, 376, 378, 391, 392, 393, 396, 413, 414, 415, 417, 418, 419, 420, 423, 430, 434, 453, 454, 455, 467, 475, 486, 505, 522, 527, 529, 531, 532, 536, 537, 538, 539, 540, 542, 544, 552, 555, 560, 602, 604, 605, 614, 621, 628, 631, 635, 637, 638, 639, 640, 644, 664, 665, 666, 674, 677, 679, 681, 686, 687, 689, 700, 701, 710, 711, 714, 721, 736, 746, 750, 754, 758, 774, 788, 791, 792, 798, 801, 854, 855, 863, 865, 877, 879, 880, 881, 882, 883, 884, 892, 893, 895, 903, 909, 911, 912, 915, 916, 917, 925, 929, 930, 934, 935, 944, 949, 955, 985, 986, 997, 998, 1002, 1006, 1008, 1015, 1028, 1054, 1056, 1063, 1088, 1093, 1095, 1100, 1113], "output": [16, 22, 38, 49, 51, 53, 54, 59, 61, 83, 84, 105, 112, 128, 134, 136, 137, 138, 151, 154, 160, 172, 173, 184, 193, 201, 207, 210, 211, 217, 220, 248, 287, 302, 307, 325, 326, 331, 332, 333, 334, 338, 370, 404, 405, 411, 412, 413, 453, 455, 470, 485, 488, 489, 490, 491, 503, 505, 513, 516, 542, 592, 610, 611, 624, 672, 677, 685, 711, 716, 771, 782, 789, 798, 801, 802, 803, 814, 818, 840, 844, 845, 850, 851, 855, 865, 876, 884, 887, 890, 898, 901, 902, 906, 926, 929, 930, 932, 962, 1001, 1006, 1007, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1030, 1036, 1038, 1040, 1045, 1046, 1047, 1048, 1059, 1062, 1063, 1071, 1075, 1084, 1088, 1101, 1108, 1124], "must": [16, 37, 41, 42, 108, 109, 111, 135, 139, 154, 160, 164, 165, 167, 168, 171, 175, 176, 189, 191, 193, 201, 207, 208, 215, 217, 218, 220, 241, 266, 325, 342, 345, 359, 367, 385, 387, 402, 409, 411, 415, 421, 432, 437, 438, 451, 454, 455, 468, 469, 483, 486, 489, 490, 491, 503, 513, 539, 540, 542, 544, 554, 555, 589, 602, 609, 616, 623, 631, 632, 634, 635, 655, 679, 681, 693, 697, 711, 736, 742, 750, 756, 763, 785, 786, 802, 812, 820, 854, 865, 871, 874, 884, 885, 888, 893, 895, 903, 912, 914, 916, 926, 932, 935, 950, 955, 956, 973, 978, 984, 997, 998, 1000, 1001, 1003, 1006, 1035, 1056, 1094, 1105], "role": [16, 37, 63, 135, 139, 405, 486, 855], "somewher": [16, 153, 172, 184, 191, 224, 236, 237, 287, 299, 370, 387, 389, 409, 434, 455, 522, 655, 901, 958, 983, 1072], "top": [16, 27, 30, 32, 33, 36, 37, 48, 131, 132, 134, 135, 147, 153, 155, 156, 172, 174, 201, 207, 210, 217, 220, 412, 761, 770, 855, 875, 914, 916, 955, 963, 985, 1031, 1035, 1113, 1117, 1119, 1124], "insid": [16, 33, 37, 40, 48, 111, 112, 131, 132, 160, 162, 184, 201, 207, 217, 220, 237, 257, 259, 274, 287, 302, 331, 335, 345, 363, 366, 368, 369, 387, 392, 411, 473, 484, 489, 537, 543, 545, 701, 709, 719, 729, 797, 827, 837, 862, 864, 887, 901, 920, 946, 951, 954, 963, 1000, 1006, 1077, 1080, 1084, 1096, 1115, 1118], "ideal": [16, 143, 159, 201, 207, 217, 220, 237, 239, 398, 414, 425, 432, 480, 601, 655, 717, 736, 754, 758, 851, 871, 935, 975, 977], "slideshow": [16, 22, 211, 223, 250, 260, 271, 279, 715, 718, 720, 723, 725, 728, 730, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 762, 764, 767, 769, 773, 776, 779, 999, 1066, 1090, 1097], "manual": [16, 59, 61, 129, 139, 147, 170, 171, 201, 202, 207, 210, 217, 220, 250, 252, 333, 334, 337, 344, 382, 387, 411, 528, 570, 620, 627, 638, 664, 676, 677, 713, 714, 717, 758, 785, 786, 855, 862, 863, 885, 888, 901, 903, 905, 946, 948, 953, 961, 962, 966, 970, 1011, 1064], "theme": [16, 63, 294, 987, 1006], "url": [16, 129, 136, 138, 147, 159, 484, 954, 1011], "_static": 16, "ui": [16, 30, 139, 348, 607], "default": [16, 22, 56, 59, 95, 108, 109, 111, 132, 133, 138, 139, 143, 149, 160, 169, 171, 173, 180, 182, 193, 201, 204, 207, 210, 213, 216, 217, 220, 224, 227, 230, 235, 238, 245, 247, 248, 252, 256, 257, 259, 262, 266, 268, 269, 295, 302, 348, 359, 391, 399, 405, 411, 412, 414, 417, 421, 424, 430, 433, 447, 449, 458, 459, 475, 485, 527, 529, 530, 535, 536, 539, 540, 564, 583, 584, 600, 605, 607, 609, 612, 613, 614, 615, 617, 619, 620, 621, 622, 623, 624, 627, 628, 635, 636, 665, 667, 683, 692, 697, 699, 700, 701, 708, 710, 711, 754, 782, 785, 786, 788, 800, 813, 818, 837, 849, 850, 854, 855, 857, 862, 863, 865, 871, 874, 888, 892, 898, 901, 903, 905, 917, 929, 931, 933, 935, 946, 975, 977, 983, 1002, 1004, 1006, 1011, 1047, 1067, 1077, 1080, 1082, 1088, 1093, 1095, 1113], "given": [16, 37, 57, 60, 67, 79, 100, 104, 105, 108, 109, 117, 132, 134, 137, 139, 143, 153, 201, 207, 217, 220, 224, 248, 256, 257, 259, 266, 288, 335, 350, 393, 452, 481, 484, 486, 505, 529, 598, 609, 634, 709, 719, 729, 740, 758, 795, 800, 809, 811, 818, 840, 862, 942, 954, 1041, 1050, 1056, 1058, 1067, 1078, 1081, 1116, 1128], "path": [16, 20, 95, 97, 111, 120, 121, 128, 137, 160, 164, 172, 175, 192, 203, 204, 205, 209, 212, 216, 217, 220, 238, 247, 248, 268, 269, 272, 274, 275, 287, 288, 293, 295, 302, 307, 369, 405, 411, 413, 416, 417, 419, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 527, 552, 684, 700, 710, 711, 722, 736, 748, 758, 784, 785, 786, 787, 788, 791, 792, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 874, 877, 883, 884, 885, 893, 894, 895, 909, 911, 912, 913, 915, 917, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 953, 963, 980, 983, 1044, 1086, 1088, 1093, 1095, 1103, 1115], "commit": [16, 44, 75, 114, 135, 138, 146, 147, 189, 193, 194, 205, 208, 218, 310, 731, 1056, 1068, 1071, 1093, 1125], "place": [16, 53, 111, 120, 129, 133, 134, 136, 137, 138, 139, 147, 152, 161, 165, 188, 204, 210, 220, 256, 257, 325, 341, 363, 370, 387, 410, 419, 423, 427, 451, 453, 467, 486, 499, 544, 558, 560, 561, 572, 583, 591, 594, 595, 605, 624, 690, 693, 701, 706, 709, 711, 736, 758, 787, 808, 809, 810, 811, 862, 863, 871, 917, 947, 949, 958, 988, 997, 1001, 1003, 1021, 1081, 1095], "_download": 16, "7a046b2e956b892f20b3485964f7b2cf": 16, "rel": [16, 76, 97, 111, 132, 139, 168, 184, 205, 238, 247, 248, 268, 269, 320, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 644, 649, 700, 710, 711, 758, 785, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 862, 874, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 1060, 1061, 1071, 1084], "up": [16, 20, 26, 30, 32, 33, 36, 41, 43, 51, 76, 122, 129, 131, 132, 133, 135, 137, 139, 142, 147, 151, 152, 183, 189, 194, 199, 201, 205, 207, 217, 220, 232, 237, 239, 248, 257, 287, 305, 309, 315, 316, 383, 390, 399, 400, 405, 409, 413, 414, 434, 483, 484, 485, 486, 499, 522, 546, 547, 548, 549, 552, 599, 604, 669, 672, 685, 686, 699, 717, 721, 726, 727, 729, 740, 742, 750, 754, 758, 759, 797, 818, 819, 837, 850, 855, 857, 862, 863, 864, 871, 881, 914, 920, 925, 930, 932, 935, 944, 953, 956, 967, 971, 977, 1000, 1013, 1017, 1034, 1039, 1051, 1056, 1061, 1067, 1075, 1088, 1094, 1100, 1105, 1116], "uri": 16, "well": [16, 40, 63, 132, 134, 137, 138, 139, 143, 156, 160, 168, 191, 193, 220, 256, 258, 266, 274, 288, 348, 370, 399, 409, 437, 477, 483, 486, 487, 510, 530, 534, 545, 559, 627, 634, 641, 664, 677, 687, 691, 783, 802, 818, 851, 858, 863, 864, 875, 888, 890, 908, 932, 934, 947, 955, 956, 959, 963, 966, 970, 973, 976, 987, 991, 1001, 1059, 1061, 1072, 1089, 1115], "blah": [18, 22, 37, 60, 63, 114, 132, 135, 154, 165, 172, 175, 180, 188, 191, 197, 201, 207, 208, 210, 212, 217, 220, 227, 230, 242, 249, 252, 262, 266, 294, 295, 302, 310, 313, 393, 640, 709, 714, 722, 881, 882, 925, 926, 951, 986, 992, 1011, 1064, 1075], "watch": [19, 30, 133, 134, 135, 153, 160, 164, 168, 169, 173, 259, 261, 265, 410, 677, 855, 863, 899, 959, 980, 1085], "w5g8k7a2gbg": 19, "bore": [19, 193, 215, 229, 245, 271, 818, 926, 930, 987, 1056], "good": [19, 26, 28, 41, 95, 111, 129, 131, 132, 133, 134, 139, 147, 156, 164, 168, 171, 189, 192, 193, 201, 205, 210, 211, 212, 214, 215, 218, 224, 239, 241, 251, 254, 257, 259, 265, 266, 283, 321, 344, 348, 389, 393, 395, 403, 404, 409, 432, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 510, 527, 531, 535, 536, 550, 553, 556, 572, 578, 582, 585, 591, 594, 595, 600, 604, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 638, 667, 678, 683, 689, 692, 698, 700, 702, 708, 710, 711, 715, 717, 750, 758, 763, 783, 797, 801, 851, 855, 863, 864, 888, 890, 907, 916, 919, 920, 926, 929, 955, 968, 986, 987, 998, 1001, 1003, 1006, 1018, 1028, 1055, 1056, 1063, 1085, 1115], "j2hzby8e4yq": 19, "pov": 19, "classmethod": [20, 245], "staticmethod": [20, 245], "member": [20, 33, 36, 41, 55, 61, 108, 109, 111, 147, 153, 154, 155, 165, 170, 192, 210, 222, 235, 250, 257, 266, 306, 378, 387, 394, 431, 473, 475, 478, 481, 505, 519, 527, 529, 530, 532, 533, 534, 535, 541, 545, 546, 548, 550, 583, 584, 588, 609, 612, 615, 616, 617, 619, 620, 621, 622, 623, 624, 627, 635, 639, 640, 649, 655, 665, 681, 687, 707, 711, 719, 724, 726, 746, 754, 758, 771, 777, 784, 785, 786, 801, 802, 803, 804, 805, 806, 812, 847, 851, 862, 890, 944, 1005, 1084, 1105], "final": [20, 36, 40, 59, 76, 104, 128, 154, 164, 168, 171, 191, 193, 201, 207, 208, 217, 222, 235, 241, 265, 411, 484, 486, 551, 552, 601, 627, 638, 667, 710, 711, 721, 752, 758, 785, 786, 851, 863, 864, 932, 949, 953, 966, 1018, 1034, 1056, 1064, 1113], "exec": [20, 28, 139, 164, 173, 204, 218, 219, 227, 234, 246, 250, 252, 260, 261, 262, 266, 273, 279, 711, 846, 851, 884, 887, 908, 932, 957, 1054, 1126], "dict": [20, 151, 164, 165, 169, 180, 182, 183, 188, 191, 205, 206, 207, 208, 211, 213, 216, 217, 218, 222, 228, 242, 245, 252, 262, 266, 272, 277, 294, 297, 302, 627, 953, 956, 968, 969, 978, 1004], "There": [20, 43, 53, 55, 63, 66, 79, 95, 128, 129, 131, 133, 134, 135, 136, 139, 143, 144, 160, 161, 165, 167, 168, 171, 175, 176, 189, 194, 210, 213, 214, 215, 218, 224, 251, 254, 257, 258, 259, 260, 261, 279, 288, 323, 333, 339, 348, 363, 366, 387, 389, 396, 399, 410, 411, 415, 424, 429, 454, 455, 505, 513, 530, 535, 580, 605, 623, 624, 636, 638, 644, 667, 672, 683, 687, 691, 692, 700, 708, 710, 711, 731, 758, 763, 789, 818, 855, 862, 863, 908, 918, 929, 930, 981, 987, 998, 1056, 1068, 1094, 1100], "half": [20, 34, 132, 133, 134, 194, 395, 414, 756, 797, 863, 916, 953], "heart": [20, 30, 36, 122, 414, 797, 1062], "split": [20, 128, 129, 152, 155, 188, 192, 197, 198, 201, 204, 205, 207, 212, 216, 222, 230, 233, 245, 250, 252, 266, 272, 293, 302, 387, 411, 433, 505, 953, 1062, 1086], "pimp": 20, "elabor": [20, 143, 208, 218, 389, 412, 863], "namespac": [20, 164, 201, 207, 214, 217, 220, 224, 235, 245, 434, 436, 451, 487, 488, 489, 490, 491, 493, 503, 504, 522, 544, 552, 557, 558, 559, 560, 561, 567, 568, 570, 571, 574, 575, 576, 580, 594, 611, 617, 618, 627, 642, 664, 674, 677, 699, 701, 702, 862, 896, 899, 911, 913, 963], "__init__": [20, 61, 128, 151, 152, 163, 165, 168, 170, 188, 191, 192, 204, 205, 207, 214, 217, 220, 224, 230, 233, 242, 245, 252, 262, 266, 411, 953, 954, 955, 963, 968, 969, 970, 972, 973, 974, 975, 976, 977, 1086, 1093], "__all__": [20, 220, 224], "etc": [20, 22, 28, 61, 88, 98, 111, 121, 125, 129, 133, 137, 146, 149, 150, 154, 161, 168, 171, 175, 176, 178, 181, 182, 189, 190, 192, 193, 195, 199, 202, 204, 205, 207, 211, 212, 215, 221, 222, 223, 224, 226, 227, 229, 231, 234, 244, 245, 248, 251, 252, 254, 262, 264, 265, 267, 270, 271, 288, 289, 290, 291, 292, 293, 302, 307, 310, 320, 343, 348, 404, 414, 422, 436, 519, 607, 669, 675, 702, 709, 711, 717, 731, 758, 770, 780, 788, 790, 793, 795, 798, 800, 801, 802, 803, 814, 818, 821, 832, 835, 837, 838, 840, 842, 843, 844, 845, 846, 847, 849, 851, 854, 864, 865, 866, 874, 875, 878, 879, 880, 885, 891, 900, 911, 925, 926, 930, 932, 953, 955, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1002, 1006, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1064, 1065, 1066, 1069, 1072, 1073, 1079, 1084, 1087, 1108, 1109, 1117, 1119, 1123, 1124, 1127, 1129], "user": [20, 22, 28, 45, 51, 61, 63, 82, 99, 100, 108, 109, 111, 116, 118, 128, 129, 131, 132, 133, 134, 136, 137, 139, 147, 154, 160, 163, 164, 165, 168, 172, 179, 188, 191, 193, 195, 204, 210, 212, 217, 218, 220, 221, 223, 224, 227, 230, 232, 241, 242, 245, 248, 251, 252, 254, 262, 266, 269, 276, 277, 283, 287, 299, 302, 311, 367, 398, 409, 411, 412, 414, 419, 427, 437, 454, 455, 475, 489, 505, 527, 530, 531, 537, 544, 588, 592, 611, 613, 614, 615, 616, 623, 624, 640, 644, 676, 687, 700, 710, 711, 717, 719, 729, 731, 756, 758, 771, 772, 785, 786, 788, 792, 796, 797, 798, 802, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 842, 846, 849, 854, 855, 856, 863, 865, 871, 878, 883, 884, 885, 888, 890, 893, 895, 900, 909, 912, 913, 915, 917, 918, 929, 932, 946, 948, 949, 950, 953, 970, 971, 1008, 1015, 1017, 1018, 1022, 1034, 1035, 1041, 1046, 1048, 1051, 1053, 1054, 1065, 1070, 1075, 1078, 1082, 1085, 1095, 1102, 1113], "import": [20, 28, 61, 63, 120, 128, 134, 139, 142, 152, 153, 154, 155, 164, 165, 168, 170, 171, 176, 180, 182, 183, 184, 192, 196, 197, 198, 203, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 236, 237, 242, 245, 249, 250, 251, 252, 254, 256, 262, 266, 272, 277, 295, 297, 325, 341, 411, 414, 415, 552, 569, 635, 673, 687, 690, 711, 740, 758, 800, 818, 855, 858, 862, 871, 883, 910, 920, 931, 952, 953, 954, 956, 964, 966, 968, 974, 975, 978, 984, 985, 986, 987, 988, 989, 991, 996, 1000, 1008, 1009, 1010, 1011, 1044, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1061, 1062, 1067, 1070, 1071, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1093, 1094, 1097, 1100, 1118, 1123], "pythonpath": [20, 38, 59, 164, 250, 963, 1011], "goto": [20, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711, 929], "orgi": [20, 419, 631], "perspect": [20, 36, 139, 161], "alwai": [20, 41, 63, 78, 128, 129, 134, 144, 161, 168, 191, 213, 224, 250, 251, 254, 294, 302, 307, 325, 343, 369, 370, 382, 394, 395, 399, 400, 402, 403, 419, 420, 439, 449, 479, 528, 534, 544, 563, 566, 622, 627, 631, 642, 666, 675, 679, 682, 686, 691, 717, 736, 754, 758, 763, 784, 818, 819, 862, 863, 864, 878, 884, 890, 918, 929, 934, 944, 949, 955, 983, 987, 1001, 1056, 1061, 1062, 1063, 1093, 1094, 1113], "valgrind": [20, 95, 159, 193, 320, 397, 401, 402, 404, 406, 407, 434, 499, 509, 511, 519, 522, 537, 672, 685, 686, 711, 1110, 1111], "supervis": [20, 1063], "hack": [20, 51, 57, 60, 95, 126, 128, 129, 147, 155, 159, 164, 168, 169, 193, 194, 208, 210, 218, 229, 236, 237, 238, 239, 247, 259, 260, 268, 269, 276, 283, 302, 306, 310, 311, 313, 320, 321, 369, 412, 433, 434, 447, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 547, 562, 563, 583, 625, 636, 667, 668, 669, 673, 685, 700, 709, 710, 711, 712, 788, 813, 814, 854, 895, 942, 980, 1079, 1085, 1093, 1112, 1113, 1127], "someth": [20, 41, 53, 64, 70, 71, 72, 76, 81, 82, 85, 125, 131, 132, 134, 135, 137, 139, 143, 147, 153, 160, 164, 172, 180, 182, 183, 184, 194, 204, 208, 215, 230, 233, 257, 259, 276, 283, 297, 360, 361, 375, 429, 451, 484, 486, 522, 533, 537, 542, 545, 552, 576, 620, 621, 622, 632, 635, 649, 679, 687, 689, 690, 705, 706, 707, 711, 719, 731, 735, 746, 754, 758, 760, 763, 778, 830, 854, 855, 858, 862, 863, 864, 879, 880, 888, 890, 891, 903, 914, 916, 917, 929, 944, 951, 953, 954, 956, 960, 977, 984, 986, 991, 1001, 1007, 1038, 1063, 1118], "malloc": [20, 159, 382, 383, 396, 511, 744, 878, 930, 932, 1110], "seomth": 20, "cleanup": [20, 132, 151, 313, 528, 604, 640, 684, 930, 953, 1065, 1094], "obviou": [20, 55, 139, 147, 153, 214, 224, 251, 254, 299, 370, 389, 411, 486, 528, 635, 644, 685, 691, 884, 926, 951, 987, 998, 1116], "lead": [20, 108, 109, 132, 134, 138, 139, 156, 193, 220, 224, 248, 266, 329, 337, 347, 419, 609, 621, 758, 784, 797, 863, 916, 925, 926, 944, 971, 997, 1008, 1018, 1072, 1087], "sever": [20, 85, 111, 132, 192, 193, 367, 436, 441, 615, 626, 756, 814, 855, 955, 981, 992], "code": [20, 22, 27, 28, 31, 38, 40, 51, 53, 61, 63, 68, 71, 78, 83, 101, 102, 106, 111, 115, 117, 125, 128, 129, 131, 132, 133, 134, 135, 138, 139, 146, 147, 150, 152, 155, 156, 157, 159, 160, 161, 164, 167, 168, 169, 171, 173, 178, 183, 184, 188, 192, 193, 194, 199, 201, 202, 204, 207, 210, 215, 217, 218, 220, 221, 229, 239, 241, 244, 248, 250, 251, 254, 257, 259, 262, 264, 265, 266, 270, 271, 272, 275, 276, 279, 287, 288, 297, 302, 307, 319, 322, 329, 331, 335, 339, 345, 359, 365, 370, 386, 387, 391, 393, 395, 401, 402, 404, 405, 406, 407, 408, 412, 414, 415, 416, 418, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 508, 510, 511, 513, 514, 516, 517, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 531, 533, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 592, 598, 599, 601, 602, 604, 605, 607, 613, 616, 620, 621, 627, 628, 632, 634, 636, 637, 638, 640, 642, 644, 655, 664, 665, 666, 667, 669, 670, 671, 672, 674, 676, 681, 685, 686, 688, 689, 690, 691, 699, 701, 705, 706, 707, 709, 710, 711, 712, 717, 722, 735, 736, 750, 756, 758, 763, 770, 773, 774, 776, 779, 797, 824, 854, 855, 863, 864, 879, 880, 896, 899, 903, 907, 916, 920, 922, 923, 925, 927, 929, 931, 932, 933, 934, 935, 936, 937, 939, 940, 942, 944, 955, 956, 958, 959, 960, 964, 966, 975, 977, 980, 981, 983, 984, 990, 991, 992, 998, 1002, 1003, 1004, 1011, 1031, 1035, 1054, 1058, 1064, 1065, 1073, 1075, 1084, 1087, 1093, 1094, 1096, 1100, 1101, 1102, 1105, 1106, 1113, 1118, 1126, 1127, 1131], "duplic": [20, 40, 47, 95, 152, 165, 210, 218, 228, 250, 287, 329, 331, 392, 393, 436, 495, 503, 516, 537, 544, 555, 633, 690, 711, 765, 801, 854, 890, 893, 895, 912, 1038, 1093, 1095], "when": [20, 27, 29, 41, 61, 63, 73, 78, 108, 109, 119, 120, 129, 131, 132, 133, 134, 137, 139, 147, 149, 161, 164, 170, 193, 194, 201, 205, 207, 208, 210, 217, 218, 220, 223, 224, 237, 239, 248, 256, 257, 259, 266, 274, 288, 293, 302, 313, 320, 327, 335, 337, 343, 348, 359, 366, 370, 385, 390, 391, 392, 393, 394, 399, 409, 411, 414, 417, 421, 424, 425, 428, 429, 433, 453, 455, 486, 487, 531, 533, 534, 537, 545, 567, 583, 598, 599, 602, 604, 609, 611, 616, 620, 622, 627, 630, 632, 634, 635, 638, 655, 669, 674, 677, 682, 686, 687, 690, 694, 697, 699, 701, 709, 726, 729, 736, 740, 752, 754, 756, 758, 772, 791, 793, 797, 800, 802, 814, 818, 840, 851, 863, 864, 871, 875, 879, 880, 884, 887, 888, 906, 908, 914, 917, 918, 920, 925, 929, 930, 932, 934, 949, 953, 954, 955, 960, 964, 967, 973, 975, 980, 983, 986, 987, 989, 991, 996, 997, 998, 1008, 1047, 1065, 1067, 1072, 1077, 1088, 1093, 1095, 1102, 1113, 1115, 1116], "void": [20, 40, 42, 53, 56, 105, 134, 135, 143, 175, 193, 205, 302, 324, 325, 327, 331, 333, 335, 339, 345, 349, 363, 365, 366, 367, 368, 370, 373, 375, 376, 379, 382, 383, 385, 386, 392, 393, 396, 412, 419, 428, 429, 430, 434, 436, 440, 449, 458, 459, 463, 464, 467, 468, 469, 471, 483, 485, 486, 487, 510, 522, 529, 531, 532, 533, 534, 537, 538, 539, 540, 541, 542, 544, 545, 552, 558, 562, 571, 584, 598, 601, 602, 605, 607, 608, 617, 619, 627, 628, 633, 637, 640, 641, 655, 657, 658, 660, 661, 662, 663, 665, 666, 669, 670, 671, 672, 673, 674, 676, 677, 679, 684, 685, 686, 687, 689, 691, 694, 696, 699, 701, 719, 722, 729, 736, 738, 740, 742, 744, 752, 754, 763, 768, 772, 778, 795, 815, 876, 880, 881, 882, 884, 894, 901, 903, 905, 907, 911, 916, 922, 925, 926, 929, 930, 932, 944, 948, 950, 1105], "f": [20, 36, 41, 61, 107, 111, 118, 133, 134, 135, 143, 155, 165, 170, 171, 176, 177, 180, 182, 188, 189, 191, 192, 198, 200, 201, 204, 205, 207, 211, 213, 214, 217, 220, 224, 227, 229, 231, 233, 241, 242, 245, 249, 252, 257, 262, 266, 271, 273, 294, 296, 298, 313, 339, 344, 354, 356, 365, 368, 373, 392, 393, 395, 399, 403, 411, 428, 534, 538, 554, 628, 634, 640, 641, 670, 691, 694, 717, 722, 784, 795, 802, 818, 837, 844, 846, 847, 862, 863, 864, 865, 887, 918, 920, 925, 940, 944, 947, 951, 953, 954, 955, 956, 968, 970, 972, 973, 976, 977, 978, 997, 998, 1006, 1013, 1018, 1051, 1053, 1056, 1064, 1065, 1067, 1093, 1123], "alloc": [20, 134, 135, 152, 154, 193, 201, 204, 207, 217, 220, 242, 337, 366, 382, 387, 390, 393, 396, 434, 518, 520, 534, 536, 537, 544, 563, 568, 575, 580, 591, 595, 599, 624, 635, 638, 672, 677, 686, 687, 691, 711, 714, 717, 719, 744, 746, 760, 763, 795, 801, 880, 881, 882, 902, 962, 1013], "variabl": [20, 28, 85, 87, 88, 95, 102, 108, 109, 128, 133, 134, 143, 147, 151, 153, 154, 160, 164, 165, 168, 169, 170, 171, 173, 176, 177, 178, 183, 184, 189, 190, 192, 193, 195, 199, 202, 203, 205, 206, 207, 210, 211, 213, 215, 221, 222, 223, 224, 226, 228, 229, 231, 235, 238, 243, 244, 245, 247, 248, 251, 254, 257, 261, 263, 264, 265, 267, 268, 269, 270, 271, 277, 279, 288, 289, 290, 291, 292, 293, 302, 304, 305, 324, 326, 327, 335, 340, 348, 355, 359, 360, 363, 364, 365, 369, 371, 372, 375, 377, 381, 382, 384, 385, 387, 388, 389, 395, 396, 397, 399, 401, 406, 407, 413, 415, 419, 421, 440, 448, 454, 463, 468, 473, 514, 519, 534, 542, 543, 550, 562, 602, 609, 624, 629, 635, 638, 640, 667, 669, 681, 700, 707, 708, 709, 710, 711, 727, 746, 758, 788, 789, 792, 795, 819, 838, 854, 895, 900, 903, 907, 908, 909, 914, 932, 942, 943, 944, 949, 951, 953, 956, 957, 963, 964, 965, 966, 967, 971, 979, 983, 985, 990, 994, 996, 998, 999, 1002, 1007, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1063, 1066, 1069, 1072, 1073, 1079, 1081, 1086, 1087, 1088, 1114, 1116, 1123, 1129], "filenam": [20, 40, 48, 53, 56, 131, 151, 155, 180, 198, 201, 204, 205, 207, 212, 217, 220, 230, 245, 248, 261, 262, 266, 294, 411, 470, 473, 487, 709, 758, 784, 785, 847, 885, 888, 889, 890, 891, 892, 896, 899, 925, 953, 963, 1008, 1013, 1025, 1034, 1036, 1040, 1046, 1048], "getenv": [20, 468, 913], "fopen": 20, "read": [20, 28, 41, 45, 51, 53, 54, 55, 71, 72, 81, 83, 111, 131, 132, 133, 134, 135, 137, 139, 142, 143, 147, 160, 164, 168, 169, 171, 173, 179, 189, 192, 199, 202, 205, 207, 208, 210, 212, 218, 220, 221, 226, 227, 229, 232, 239, 240, 241, 244, 248, 250, 252, 258, 262, 264, 265, 266, 269, 270, 271, 287, 288, 289, 290, 291, 292, 302, 306, 308, 313, 332, 333, 340, 348, 355, 364, 371, 377, 381, 384, 385, 387, 388, 389, 391, 393, 396, 397, 401, 405, 406, 407, 410, 426, 433, 454, 470, 475, 486, 487, 510, 516, 527, 530, 531, 533, 536, 539, 542, 588, 592, 611, 614, 626, 629, 636, 644, 667, 681, 689, 705, 708, 709, 710, 711, 717, 731, 742, 758, 760, 784, 785, 786, 789, 795, 800, 801, 802, 803, 805, 806, 809, 818, 819, 851, 854, 858, 862, 863, 864, 871, 876, 878, 879, 881, 882, 885, 888, 891, 893, 894, 895, 896, 898, 899, 906, 908, 912, 916, 922, 925, 926, 929, 930, 949, 955, 956, 971, 974, 976, 984, 992, 1014, 1015, 1025, 1034, 1044, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1062, 1067, 1075, 1082, 1086, 1126], "onli": [20, 28, 40, 41, 87, 106, 108, 109, 111, 122, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 147, 152, 153, 160, 164, 168, 170, 171, 189, 191, 194, 201, 204, 207, 210, 211, 212, 214, 217, 218, 220, 221, 223, 224, 229, 231, 232, 233, 244, 245, 248, 250, 251, 257, 261, 264, 266, 270, 271, 274, 293, 296, 310, 317, 327, 333, 335, 336, 337, 339, 344, 345, 347, 352, 359, 360, 363, 365, 367, 368, 369, 370, 386, 387, 391, 392, 393, 394, 395, 404, 409, 411, 412, 414, 415, 418, 423, 424, 428, 429, 430, 432, 440, 448, 449, 451, 453, 454, 455, 467, 468, 483, 484, 487, 490, 491, 505, 516, 529, 530, 531, 532, 534, 536, 538, 539, 542, 544, 545, 551, 565, 567, 583, 584, 588, 598, 599, 601, 605, 609, 613, 614, 621, 623, 627, 634, 638, 640, 644, 649, 655, 665, 669, 672, 676, 677, 681, 682, 686, 687, 693, 695, 697, 699, 701, 711, 714, 716, 719, 722, 727, 738, 744, 754, 758, 763, 766, 771, 775, 783, 784, 785, 786, 793, 796, 800, 802, 803, 808, 814, 818, 819, 840, 847, 855, 856, 857, 862, 863, 864, 865, 875, 880, 881, 884, 886, 887, 888, 892, 894, 898, 900, 903, 908, 911, 914, 916, 917, 918, 919, 925, 926, 929, 930, 932, 933, 944, 948, 949, 953, 954, 955, 958, 964, 968, 970, 973, 975, 976, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 996, 1001, 1002, 1006, 1008, 1011, 1015, 1020, 1028, 1030, 1031, 1034, 1035, 1039, 1041, 1054, 1056, 1061, 1062, 1063, 1068, 1071, 1080, 1084, 1085, 1093, 1099, 1100, 1102, 1105, 1113, 1115, 1118, 1130], "bullshit": [20, 63, 176, 188, 224, 414, 677, 1123], "everyon": [20, 63, 132, 137, 147, 168, 409, 614, 665, 805, 806, 816, 918], "get": [20, 53, 61, 95, 108, 109, 120, 121, 128, 129, 132, 134, 135, 142, 143, 151, 164, 165, 168, 170, 175, 182, 183, 184, 191, 193, 194, 201, 204, 207, 208, 210, 213, 214, 217, 220, 227, 233, 237, 239, 242, 245, 248, 252, 262, 266, 272, 297, 302, 305, 307, 322, 348, 393, 402, 425, 429, 434, 449, 458, 463, 540, 547, 619, 627, 637, 655, 661, 681, 682, 685, 686, 687, 688, 690, 709, 711, 719, 724, 731, 758, 760, 774, 777, 791, 793, 797, 798, 818, 854, 864, 871, 874, 880, 881, 882, 895, 897, 902, 919, 926, 930, 947, 953, 966, 969, 975, 979, 987, 1004, 1064, 1077, 1084, 1095, 1100, 1105, 1118], "point": [20, 32, 34, 36, 38, 59, 87, 95, 104, 107, 111, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 147, 152, 153, 154, 155, 159, 164, 168, 169, 170, 171, 173, 191, 193, 194, 201, 204, 207, 210, 217, 220, 225, 228, 250, 259, 266, 288, 308, 309, 310, 313, 324, 325, 326, 331, 337, 339, 341, 343, 347, 369, 372, 375, 378, 379, 382, 383, 393, 395, 424, 429, 432, 439, 440, 448, 471, 473, 485, 505, 506, 507, 530, 532, 534, 536, 537, 538, 540, 541, 543, 546, 550, 561, 562, 570, 585, 586, 599, 604, 605, 624, 627, 630, 632, 634, 638, 644, 655, 677, 681, 686, 690, 702, 711, 754, 758, 787, 795, 797, 801, 802, 818, 855, 856, 864, 874, 878, 881, 884, 917, 930, 933, 946, 950, 951, 952, 954, 958, 966, 992, 996, 998, 1001, 1063, 1068, 1070, 1072, 1093, 1095, 1102, 1105, 1110, 1114], "unobvi": [20, 758], "best": [20, 29, 37, 46, 55, 132, 133, 134, 143, 156, 213, 335, 367, 389, 396, 399, 400, 409, 488, 532, 537, 601, 666, 679, 699, 746, 748, 750, 754, 756, 795, 818, 840, 856, 863, 864, 900, 914, 918, 946, 960, 966, 1003, 1008, 1010, 1070, 1080], "resourc": [20, 78, 95, 108, 109, 132, 134, 137, 149, 159, 194, 210, 251, 254, 259, 305, 313, 441, 505, 519, 530, 534, 535, 599, 624, 635, 636, 638, 667, 672, 683, 684, 686, 687, 692, 699, 700, 708, 710, 711, 742, 744, 752, 791, 795, 796, 863, 880, 881, 882, 900, 914, 917, 953, 1006, 1065], "leaki": 20, "erron": [20, 396, 1018], "worst": [20, 132, 367, 864, 916, 929, 1113, 1116], "extract": [20, 28, 53, 95, 121, 125, 192, 218, 221, 226, 229, 241, 244, 264, 265, 270, 271, 351, 370, 474, 475, 505, 516, 527, 709, 711, 758, 771, 784, 946, 971, 993, 1015, 1049, 1050, 1051, 1052, 1054, 1062], "common": [20, 23, 124, 132, 189, 205, 206, 218, 224, 229, 370, 379, 410, 485, 563, 690, 709, 783, 855, 856, 864, 888, 925, 955, 960, 961, 962, 978, 987, 988, 992, 998, 1002, 1005, 1056, 1067, 1068, 1093, 1116], "hm": [20, 30, 61, 172, 182, 201, 204, 207, 214, 294, 748, 774, 775, 882, 975, 1060, 1095, 1100, 1102], "end": [20, 22, 30, 35, 40, 104, 126, 131, 134, 135, 137, 139, 142, 164, 165, 170, 171, 176, 180, 184, 204, 205, 207, 208, 210, 220, 224, 227, 230, 244, 245, 266, 272, 293, 294, 331, 334, 338, 359, 375, 387, 391, 392, 393, 395, 398, 399, 402, 432, 454, 455, 463, 464, 467, 468, 469, 519, 522, 534, 558, 560, 562, 563, 564, 566, 567, 569, 570, 571, 573, 574, 576, 580, 583, 587, 588, 594, 611, 627, 655, 658, 662, 669, 675, 676, 677, 679, 684, 685, 698, 699, 750, 756, 758, 774, 801, 802, 803, 818, 846, 850, 851, 862, 864, 880, 881, 882, 884, 890, 906, 925, 958, 978, 982, 984, 991, 994, 998, 1002, 1006, 1080, 1082, 1084, 1088, 1123, 1126], "sketch": [20, 129, 135, 164, 171, 172, 184, 193, 194, 261, 306, 310, 372, 373, 383, 395, 627, 715, 727, 925], "clearest": 20, "ach": 20, "bad": [20, 41, 128, 131, 134, 141, 156, 164, 189, 195, 211, 212, 214, 223, 224, 239, 260, 261, 279, 283, 348, 391, 395, 409, 551, 617, 667, 678, 685, 710, 711, 726, 738, 763, 766, 875, 876, 901, 903, 907, 908, 929, 948, 953, 955, 968, 969, 980, 987, 998, 1028, 1056, 1113], "earliest": 20, "noth": [20, 41, 61, 122, 131, 132, 134, 137, 142, 147, 161, 172, 191, 204, 230, 323, 362, 369, 393, 411, 418, 522, 601, 635, 642, 655, 669, 672, 726, 736, 754, 756, 790, 840, 855, 863, 864, 879, 881, 903, 925, 930, 956, 963, 975, 996, 998, 1004, 1093, 1100, 1102], "jump": [20, 43, 102, 131, 359, 363, 522, 669, 672, 679, 797, 850, 929, 1067], "outest": 20, "level": [20, 76, 132, 133, 143, 201, 207, 217, 220, 241, 274, 313, 337, 363, 369, 409, 412, 414, 415, 421, 429, 437, 648, 649, 709, 740, 742, 754, 761, 770, 794, 855, 862, 871, 875, 934, 942, 955, 963, 975, 996, 1006, 1031, 1035, 1068, 1071, 1081, 1088, 1115], "cleanup_stage1": 20, "screenplai": [21, 58, 125, 134, 155, 159, 211, 223, 232, 250, 258, 260, 271, 279, 302, 410, 426, 434, 505, 508, 511, 514, 517, 520, 523, 526, 562, 563, 583, 715, 718, 723, 728, 732, 734, 770, 773, 776, 779, 923, 927, 931, 999, 1090, 1097, 1101, 1103, 1106], "dies": [22, 140, 141, 146, 149, 150, 151, 159, 165, 175, 176, 180, 188, 195, 212, 214, 220, 221, 224, 302, 307, 320, 1108, 1110, 1111, 1112, 1117, 1123, 1124, 1126, 1130, 1131], "einreichungsunterlagen": 22, "diesem": [22, 141, 175, 1110, 1127], "formular": 22, "projekten": [22, 1124, 1125], "mehrer": [22, 1117], "projektpartn": 22, "muss": [22, 155, 165, 175, 180, 221, 302, 307, 1108, 1110, 1117, 1124], "federf\u00fchrend": 22, "auftreten": 22, "projektleitung": 22, "projektabwicklung": 22, "seiten": 22, "f\u00f6rdergeb": 22, "erfolgtausschlie\u00dflich": 22, "federf\u00fchrenden": 22, "antragstel": 22, "s\u00e4mtlich": 22, "weiterenprojektpartn": 22, "innen": 22, "zus\u00e4tzlich": [22, 140], "anzugeben": 22, "aufteilung": 22, "f\u00f6rdersumm": 22, "erfolgen": [22, 146, 176], "soll": [22, 141, 167, 196, 235, 1107], "punkt": [22, 141, 151, 167, 177, 221], "erfolgreichemf\u00f6rderantrag": 22, "anschluss": 22, "individuel": [22, 167, 1107], "f\u00f6rdervertrag": 22, "erstellt": 22, "derzuerkannten": 22, "direkt": [22, 159, 1110, 1126], "\u00fcberweisungen": 22, "f\u00f6rderraten": 22, "anteil": 22, "dieprojektpartn": 22, "fall": [22, 141, 150, 164, 167, 175, 180, 224, 235, 351, 359, 477, 649, 655, 740, 898, 899, 916, 1058, 1081], "allenprojektpartn": 22, "unterschreiben": 22, "verbindlich": 22, "vereinbart": 22, "privatperson": 22, "organis": [22, 193], "uni": 22, "contemporari": 22, "open": [22, 32, 33, 36, 37, 40, 46, 47, 52, 61, 66, 111, 131, 132, 135, 139, 147, 149, 153, 155, 169, 171, 173, 182, 191, 192, 194, 198, 201, 204, 205, 207, 212, 215, 220, 227, 230, 232, 245, 248, 250, 252, 257, 259, 262, 266, 294, 309, 348, 409, 411, 417, 724, 752, 760, 785, 786, 794, 795, 797, 800, 802, 843, 862, 871, 879, 880, 885, 888, 890, 891, 894, 896, 899, 900, 922, 925, 929, 932, 949, 955, 956, 1025, 1051, 1053, 1064, 1065, 1067, 1086, 1093, 1108, 1125, 1126], "wer": [22, 140], "unser": [22, 168, 176, 1108], "motiv": [22, 27, 95, 797, 816, 914, 961, 962], "300": [22, 151, 153, 165, 201, 204, 207, 212, 214, 220, 224, 227, 245, 266, 272, 294, 325, 327, 329, 345, 369, 557, 558, 559, 560, 561, 563, 564, 565, 566, 580, 731], "zeichen": [22, 214], "ich": [22, 62, 140, 141, 149, 150, 151, 155, 165, 175, 183, 214, 266, 302, 320, 1070, 1107, 1108, 1117, 1124, 1125, 1131], "einzelunternehm": 22, "lebe": 22, "einerseit": [22, 146], "kleineren": 22, "gr\u00f6\u00dferen": [22, 1125], "andererseit": [22, 146], "haupts\u00e4chlich": [22, 176, 1123], "unternehmen": 22, "halt": [22, 108, 109, 175, 204, 220, 227, 230, 245, 252, 262, 266, 791, 849, 864], "bringen": [22, 1108], "schulungsunterlagen": [22, 1107], "deren": [22, 149, 171, 1112, 1125, 1129, 1130], "wartbarkeit": 22, "nichtverf\u00fcgbarkeit": 22, "problem": [22, 43, 55, 78, 105, 111, 120, 132, 139, 148, 151, 153, 155, 156, 162, 164, 165, 168, 169, 171, 173, 184, 188, 193, 210, 212, 218, 232, 237, 239, 250, 254, 257, 258, 260, 261, 269, 274, 275, 288, 309, 320, 348, 359, 369, 370, 373, 387, 393, 395, 411, 416, 440, 455, 499, 505, 540, 554, 567, 599, 602, 626, 699, 711, 758, 797, 857, 918, 942, 944, 948, 953, 958, 960, 963, 964, 975, 987, 1001, 1051, 1056, 1058, 1062, 1084, 1093, 1094, 1108, 1115, 1116], "darstellt": 22, "wen": 22, "nutzen": [22, 1126], "400": [22, 129, 134, 151, 165, 175, 204, 207, 249, 266, 411, 580, 1013, 1016], "stellen": [22, 146], "kursverlauf": 22, "vorhandenem": 22, "zusammen": [22, 1107], "bereiten": [22, 175], "kursergebniss": 22, "editoren": 22, "kreieren": 22, "warten": 22, "kursmateri": 22, "endbenutz": 22, "konsumieren": 22, "auch": [22, 140, 141, 146, 151, 155, 165, 177, 180, 182, 188, 191, 196, 217, 221, 227, 252, 297, 298, 320, 1107, 1108, 1109, 1110, 1111, 1117, 1120, 1124, 1129, 1131], "usecas": [22, 875, 978], "gel\u00f6st": [22, 165], "500": [22, 175, 182, 201, 204, 207, 249, 580, 855, 882, 1013, 1016], "hierarchisch": 22, "gruppierung": 22, "einzelthemen": 22, "zuwenig": 22, "themen": [22, 146, 157, 159, 1117], "bauen": [22, 1110, 1120, 1129], "aufeinand": [22, 845], "explizit": [22, 149, 159, 165, 175, 235, 262, 1110, 1111, 1127], "abh\u00e4ngigkeitsbeziehungen": [22, 1120], "fehlen": 22, "extrem": [22, 132, 191, 212, 220, 227, 230, 252, 302, 307, 370, 409, 562, 631, 679, 758, 785, 786, 1071, 1108, 1120], "verringert": 22, "zusammenarbeit": [22, 1107], "trainern": 22, "fehlend": [22, 151], "aggregierbarkeit": 22, "bzw": [22, 140, 149, 155, 159, 181, 320, 1117, 1124, 1126], "referenzierbarkeit": 22, "fremdunterlagen": 22, "analog": [22, 165, 925, 1077], "librari": [22, 61, 69, 72, 76, 83, 95, 101, 102, 104, 106, 108, 109, 111, 132, 134, 143, 151, 153, 155, 160, 161, 162, 169, 171, 173, 192, 194, 201, 207, 217, 220, 224, 236, 237, 248, 250, 274, 275, 303, 304, 305, 320, 321, 324, 325, 334, 342, 365, 382, 392, 399, 405, 415, 416, 421, 423, 424, 433, 447, 470, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 487, 494, 513, 527, 528, 572, 578, 582, 590, 591, 592, 594, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 644, 649, 675, 700, 709, 710, 711, 736, 788, 791, 792, 854, 875, 876, 877, 882, 883, 885, 892, 893, 895, 900, 903, 909, 912, 915, 917, 929, 932, 933, 934, 935, 937, 938, 939, 940, 942, 944, 979, 981, 996, 998, 1001, 1065, 1071, 1089, 1102, 1110, 1112, 1114, 1115, 1126, 1128], "anfangen": 22, "geben": [22, 1111, 1112], "trainingsunterlagen": 22, "ging": [22, 140, 320], "funktioniert": [22, 165, 214], "projektergebni": 22, "basiert": [22, 235, 1108, 1111, 1120, 1127], "popul\u00e4ren": 22, "dokumentationstool": 22, "gestaltet": [22, 159, 1107, 1117], "eigentlich": [22, 151, 165, 1108, 1111], "kern": 22, "begleitet": [22, 167], "meinem": [22, 141, 150, 176, 846, 1123], "eigenen": [22, 1117, 1124], "schulungsmateri": 22, "damit": [22, 140, 165, 195, 221, 302, 307, 320, 1108, 1126, 1130], "quasi": [22, 155, 159], "spin": [22, 699, 761, 795], "off": [22, 131, 133, 134, 137, 142, 153, 164, 184, 227, 348, 351, 390, 398, 399, 414, 420, 421, 476, 477, 482, 522, 602, 655, 690, 752, 763, 789, 814, 842, 855, 862, 864, 890, 899, 908, 918, 925, 984, 1002, 1036, 1061, 1118], "anwendbar": [22, 1130], "klarer": 22, "bezug": [22, 221], "f\u00f6rdervoraussetzung": 22, "bitt": [22, 140, 159, 165, 175, 176, 1107, 1123], "gehen": 22, "folgenden": [22, 159, 320, 846], "ausschlie\u00dflich": 22, "jene": 22, "aspekt": [22, 1109, 1117, 1124, 1127], "denen": [22, 140, 1117], "klaren": 22, "mehrwert": 22, "technologi": [22, 204, 916, 932, 1013], "infrastruktur": [22, 1108, 1117, 1124], "sozial": 22, "gesellschaft": 22, "umwelt": 22, "wirtschaftlich": [22, 167], "oder": [22, 128, 149, 155, 159, 165, 176, 177, 182, 196, 205, 214, 221, 818, 846, 1084, 1107, 1110, 1111, 1117, 1120, 1123, 1124, 1125, 1127, 1130, 1131], "wissenschaftlich": 22, "kooperationen": 22, "regionalpolitik": 22, "framework": [22, 76, 149, 159, 168, 194, 210, 425, 484, 862, 864, 1085, 1093, 1094, 1129, 1131], "jeglich": [22, 1117], "art": [22, 30, 43, 944, 1116], "konsistenzgecheckt": 22, "crossreferenc": 22, "webseiten": 22, "hinweg": [22, 176, 1123], "erm\u00f6glicht": [22, 167, 320], "gesellschaftlich": 22, "\u00f6ffentlich": [22, 146, 1107], "verf\u00fcgbarkeit": 22, "erleichterung": 22, "machen": [22, 140, 151, 155, 165, 214, 297, 320, 1108, 1111, 1112, 1117, 1131], "commun": [22, 61, 70, 71, 72, 76, 79, 81, 85, 117, 120, 132, 147, 156, 164, 179, 248, 299, 308, 309, 385, 429, 700, 701, 710, 711, 717, 758, 770, 791, 854, 855, 862, 863, 864, 879, 884, 895, 900, 909, 916, 919, 925, 930, 964, 1052, 1055, 1075, 1113, 1116, 1118, 1127, 1128], "trainerinnen": 22, "kann": [22, 35, 140, 141, 149, 155, 159, 165, 175, 188, 195, 235, 302, 307, 320, 1107, 1108, 1110, 1112, 1117, 1124, 1125, 1126, 1129, 1131], "sch\u00f6pfen": 22, "trainerinnenn": 22, "gegeneinand": 22, "arbeiten": [22, 165, 176, 1123], "genau": [22, 149, 151, 165, 297, 846, 1110, 1127, 1129, 1130], "die_der": 22, "adressat_in": 22, "je": [22, 30, 141, 175], "konkret": 22, "eingrenzen": 22, "desto": 22, "k\u00f6nnen": [22, 146, 149, 159, 165, 177, 190, 302, 303, 307, 320, 846, 1107, 1109, 1110, 1120, 1130, 1131], "bed\u00fcrfniss": [22, 167], "dieser": [22, 35, 140, 159, 175, 227, 297, 320, 1107, 1108, 1109, 1117, 1119, 1120, 1126, 1127], "adressat_innen": 22, "ber\u00fccksichtigen": 22, "wahrscheinlich": [22, 155, 1117, 1124], "deshalb": 22, "nachhaltig": 22, "wirkung": 22, "weil": [22, 151, 165, 167, 188, 227, 320, 1108, 1110, 1112], "speziellen": 22, "konzepten": 22, "unterschiedlich": [22, 176, 221, 1123], "zielgruppen": 22, "beziehung": [22, 159], "zueinand": 22, "stehen": [22, 165, 1129], "anbieter_innen": 22, "nachfrager_innen": 22, "drei": [22, 140, 151, 159, 165, 175, 180, 182, 201, 204, 212, 214, 217, 220, 227, 230, 245, 252, 262, 266, 272, 297], "angeben": 22, "sollt": [22, 140, 141, 146, 149, 188, 1110, 1129], "m\u00f6glichst": 22, "erheblich": 22, "ihrer": [22, 212, 302, 307, 1117, 1124], "jeweiligen": [22, 1107], "sein": [22, 141, 149, 150, 167, 175, 176, 188, 214, 252, 1108, 1110, 1123, 1124, 1126, 1129, 1130, 1131], "dann": [22, 141, 151, 159, 165, 176, 214, 220, 221, 227, 262, 320, 1108, 1120, 1123, 1131], "einzelnen": 22, "aussieht": [22, 1109], "erst": [22, 159, 175, 188, 214, 221, 227, 245, 297, 1108, 1110], "bestandteil": [22, 1129], "um": [22, 30, 140, 141, 149, 151, 155, 159, 165, 175, 176, 214, 227, 242, 320, 1107, 1109, 1110, 1111, 1112, 1117, 1123, 1127], "n": [22, 33, 36, 38, 48, 61, 109, 134, 143, 151, 152, 153, 159, 165, 175, 180, 182, 183, 191, 193, 196, 197, 198, 201, 204, 205, 207, 210, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 256, 262, 266, 293, 294, 295, 297, 302, 324, 325, 327, 331, 333, 335, 337, 339, 344, 347, 357, 359, 365, 366, 370, 375, 383, 387, 392, 411, 412, 419, 486, 519, 538, 544, 562, 608, 609, 612, 613, 615, 616, 619, 620, 621, 622, 623, 624, 632, 634, 649, 711, 736, 772, 791, 795, 805, 815, 818, 831, 847, 849, 850, 864, 876, 878, 879, 880, 881, 882, 888, 889, 891, 916, 922, 926, 929, 932, 938, 944, 948, 950, 975, 976, 978, 993, 995, 1000, 1001, 1006, 1007, 1051, 1053, 1093, 1105], "ihrem": [22, 1107], "l\u00f6sen": 22, "wollen": [22, 35, 180, 320, 1112, 1117, 1120, 1124, 1126], "hilfestellung": 22, "abgrenzung": 22, "organisationen": 22, "privatpersonen": 22, "bestimmt": 22, "branch": [22, 48, 52, 59, 124, 135, 138, 147, 251, 254, 363, 404, 405, 731, 758, 760, 770, 862, 864, 991, 1125, 1131], "firmen": 22, "gruppen": 22, "staatlich": 22, "verwaltung": 22, "privat": [22, 55, 100, 105, 111, 134, 146, 147, 159, 161, 168, 169, 172, 192, 205, 210, 222, 241, 257, 259, 301, 302, 307, 419, 423, 428, 430, 434, 436, 441, 451, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 473, 513, 519, 528, 532, 534, 536, 537, 539, 540, 541, 543, 545, 555, 570, 571, 588, 598, 600, 601, 613, 624, 627, 630, 631, 633, 634, 637, 638, 649, 651, 652, 653, 655, 657, 658, 661, 662, 663, 664, 670, 671, 672, 685, 686, 687, 690, 691, 699, 701, 711, 752, 787, 788, 793, 807, 813, 854, 871, 976, 1086, 1088, 1105, 1127], "verein": 22, "npo": 22, "wissenschaft": 22, "universit\u00e4t": 22, "fachhochschulen": 22, "richtungen": 22, "regionen": 22, "stadt": [22, 197], "land": [22, 417], "bezirk": 22, "gemeinden": 22, "interessensgruppen": 22, "selbstvermarkter_innen": 22, "landwirtschaft": 22, "handwerk": 22, "u": [22, 30, 32, 33, 34, 36, 40, 51, 57, 60, 111, 114, 134, 137, 142, 152, 162, 165, 168, 170, 176, 193, 204, 208, 212, 214, 217, 220, 242, 249, 266, 347, 378, 403, 687, 727, 733, 768, 795, 803, 814, 815, 817, 818, 842, 855, 862, 863, 864, 883, 920, 929, 932, 942, 950, 987, 989, 1013, 1067, 1071, 1075, 1088, 1093, 1100, 1116, 1123], "altersgrupp": 22, "genderspezifisch": 22, "frauen": 22, "region": [22, 132, 714, 742], "grupp": [22, 180, 311, 846], "sch\u00fcler_innen": 22, "lehrer_innen": 22, "thematisch": 22, "muttersprach": 22, "deutsch": [22, 196, 300, 301, 1107], "fl\u00fcchtling": 22, "posit": [22, 28, 61, 139, 165, 168, 169, 171, 173, 175, 180, 188, 192, 201, 208, 212, 217, 218, 220, 227, 230, 241, 244, 251, 254, 256, 258, 260, 261, 264, 266, 270, 272, 276, 279, 288, 333, 370, 383, 522, 563, 570, 579, 580, 711, 818, 855, 863, 879, 880, 884, 925, 953, 954, 957, 998, 999, 1001, 1002, 1003, 1054, 1066, 1072, 1073, 1080, 1095, 1100], "zielgruppentyp": 22, "350": [22, 204, 207, 252, 266, 1013], "bereitet": 22, "schulung": [22, 127, 140, 141, 155, 164, 167, 320, 321, 714, 717, 722, 727, 736, 744, 922, 925, 929, 957, 959, 979, 1055, 1073, 1087, 1107, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1128], "vor": [22, 140, 141, 155, 165, 177, 212, 1120, 1129], "agenda": [22, 26, 156, 261, 265, 269, 271, 275, 280, 284], "lt": [22, 30, 33, 34, 134, 139, 151, 154, 159, 160, 165, 170, 175, 180, 182, 188, 191, 196, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 296, 297, 298, 475, 492, 494, 527, 572, 578, 582, 591, 594, 595, 624, 711], "zielvorgaben": 22, "basierend": [22, 151, 1107, 1112], "existierendem": 22, "f\u00fchrt": [22, 141, 1127], "jederzeit": [22, 146, 155, 320], "\u00fcberblick": [22, 155, 159, 221, 235, 320, 321, 1107, 1115, 1117, 1123, 1124, 1127, 1129], "behaltend": 22, "behandelten": 22, "fragen": [22, 167, 183, 302, 307, 320, 1107, 1117, 1124], "antworten": [22, 167], "weiterf\u00fchrend": 22, "info": [22, 142, 249, 250, 399, 403, 404, 405, 411, 412, 414, 537, 686, 733, 863, 903, 933, 934, 1093], "bed\u00fcrfni": [22, 140], "schulungsagenden": 22, "erstellen": [22, 320, 1112, 1117], "zeitaufw\u00e4ndig": 22, "fehlertr\u00e4chtig": 22, "vom": [22, 62, 140, 149, 150, 151, 165, 175, 176, 195, 220, 224, 1117, 1123, 1124, 1131], "erwartet": [22, 141, 165], "w\u00e4hrend": [22, 1107], "einzugehen": [22, 167, 1130], "geplanten": [22, 1107], "verlassen": [22, 780], "birgt": 22, "chao": [22, 816, 987], "teilnehmerinnen": 22, "\u00fcbersichtlich": 22, "nachbearbeitung": 22, "hinterlassen": [22, 140], "absch\u00e4tzung": 22, "zielgruppengr\u00f6\u00df": 22, "affinem": 22, "background": [22, 143, 236, 237, 239, 283, 625, 629, 655, 667, 694, 708, 710, 711, 733, 796, 863, 901, 910, 916, 964], "inklus": [22, 152, 165, 175, 188, 1107, 1112, 1117], "betroffen": 22, "eu": [22, 30], "20000": [22, 131, 207], "erkennung": 22, "abstand": 22, "erfordert": [22, 1117], "vgl": [22, 165, 1127, 1130], "frosch": 22, "wassergla": 22, "selbst": [22, 35, 155, 165, 175, 780, 1107, 1108, 1117, 1120, 1126, 1131], "umstellung": 22, "zus\u00e4tzlichen": 22, "aufwand": 22, "bedeutet": [22, 283], "besten": [22, 155, 221, 1110], "einsatz": [22, 1108], "erw\u00e4gung": 22, "ziehen": 22, "angegebenen": 22, "erheblichen": [22, 1110], "wesentlichen": [22, 167, 1109], "bed\u00fcrfnissen": 22, "kenntni": 22, "erlangt": 22, "mitgli": 22, "editor": [22, 29, 61, 147, 164, 288, 843, 980, 984, 1063, 1085], "verfasst": 22, "oft": [22, 140, 165, 167, 1111], "identisch": 22, "obig": 22, "behebt": 22, "inkonsistenzen": 22, "baut": [22, 1108, 1126], "neue": [22, 165, 175, 207, 235, 297, 320, 1127], "verliert": [22, 1131], "aufbaubeziehungen": 22, "thema": [22, 150, 167, 221, 235, 302, 307, 1107], "verlangt": [22, 1107], "grundlag": 22, "folienmateri": 22, "meist": [22, 1126], "powerpoint": [22, 29], "anderen": [22, 165, 175, 180, 182, 320, 1107, 1108, 1110, 1112, 1131], "propriet\u00e4r": 22, "formaten": 22, "praktisch": [22, 151, 1107], "unm\u00f6glich": 22, "macht": [22, 149, 151, 155, 159, 165, 171, 175, 217, 221, 297, 1110, 1117, 1124, 1131], "artefakttypen": 22, "livehack": [22, 23, 58, 111, 125, 151, 157, 159, 168, 169, 176, 195, 208, 210, 211, 223, 232, 237, 239, 240, 248, 251, 258, 260, 265, 271, 276, 279, 302, 320, 410, 426, 433, 505, 709, 711, 723, 760, 999, 1066, 1090, 1097, 1123], "st\u00fcckwerk": 22, "gew\u00f6hnlich": 22, "trainerin": 22, "oben": [22, 140, 165, 176, 182, 1123], "zielt": 22, "darauf": [22, 140, 151, 1107, 1110], "transpar": [22, 28, 35, 742, 744, 794, 1072], "wiederzuverwenden": 22, "sodass": [22, 35, 159, 1126, 1131], "aufgebrochen": 22, "schwer": [22, 155, 165, 320, 1117, 1124, 1129], "abzusch\u00e4tzen": 22, "abzielt": 22, "weg": [22, 140, 141, 151, 155, 167, 180, 195, 235, 320, 1108, 1110, 1111, 1112, 1124], "dorthin": 22, "m\u00fcssen": [22, 165, 302, 307, 1117, 1124], "unterst\u00fctzt": [22, 1131], "kursf\u00fchrung": [22, 320], "fragt": [22, 141], "unklarheiten": 22, "weist": [22, 140], "etwaig": 22, "verwandt": [22, 1110], "hin": [22, 320], "plausibl": [22, 134], "realistisch": 22, "bzgl": 22, "kursdauer": 22, "strukturierten": [22, 176], "langweiligen": 22, "tatsachen": 22, "entsprechend": 22, "hunderttausend": 22, "allerd": [22, 165, 167, 1111, 1112, 1126, 1131], "keinen": [22, 140, 1110], "einfluss": 22, "wahl": [22, 1131], "gespr\u00e4ch": 22, "betroffenen": 22, "assoziieren": 22, "metadaten": 22, "setzt": [22, 149, 1108, 1117], "vorau": 22, "beziehungen": 22, "passt": [22, 175, 176, 1123], "ganz": [22, 140, 141, 150, 151, 155, 165, 167, 181, 182, 196, 213, 214, 320, 1111, 1112, 1126], "gut": [22, 140, 141, 165, 176, 320, 638, 1107, 1123], "y": [22, 109, 114, 143, 152, 153, 155, 182, 191, 197, 198, 204, 205, 207, 208, 220, 230, 233, 242, 245, 252, 262, 266, 272, 348, 354, 372, 375, 378, 379, 383, 395, 399, 411, 473, 483, 529, 530, 531, 532, 534, 536, 537, 538, 539, 540, 541, 543, 545, 547, 548, 555, 562, 570, 609, 630, 631, 632, 634, 649, 651, 652, 653, 670, 681, 690, 726, 727, 758, 759, 791, 805, 818, 820, 831, 837, 862, 863, 864, 938, 946, 952, 1010, 1013, 1061], "algorithmen": [22, 235, 1112], "automatisch": [22, 1127, 1131], "berechnen": 22, "semiautomatisch": 22, "kursnavig": 22, "nachbereitung": 22, "plaintext": 22, "meisten": [22, 159, 165, 320, 1108, 1129], "artefakt": [22, 1112], "text": [22, 26, 37, 38, 58, 128, 142, 153, 164, 167, 172, 173, 180, 192, 193, 198, 205, 212, 214, 232, 235, 238, 245, 247, 266, 268, 344, 418, 711, 788, 850, 854, 881, 932, 980, 987, 993, 1002, 1011, 1034, 1071, 1078, 1083, 1085, 1086, 1120], "restrukturierung": 22, "o": [22, 28, 30, 36, 61, 76, 83, 88, 95, 96, 98, 105, 108, 109, 111, 114, 125, 132, 134, 135, 142, 143, 151, 155, 159, 169, 171, 172, 173, 175, 180, 182, 183, 189, 192, 193, 197, 199, 202, 203, 204, 205, 208, 209, 210, 211, 216, 217, 221, 222, 223, 224, 226, 228, 231, 233, 235, 238, 242, 244, 247, 248, 249, 251, 252, 254, 257, 258, 261, 263, 264, 265, 267, 268, 270, 272, 279, 287, 288, 289, 290, 291, 292, 293, 302, 307, 309, 320, 322, 324, 340, 355, 364, 370, 371, 375, 377, 381, 384, 387, 388, 397, 399, 401, 403, 404, 406, 407, 411, 412, 418, 423, 437, 464, 475, 486, 527, 545, 629, 667, 693, 699, 700, 701, 708, 709, 710, 711, 726, 727, 735, 736, 758, 765, 784, 785, 786, 787, 788, 789, 791, 792, 794, 795, 803, 815, 818, 822, 823, 825, 826, 829, 830, 832, 838, 846, 847, 851, 854, 855, 862, 863, 875, 885, 888, 889, 890, 891, 892, 895, 900, 901, 909, 912, 915, 916, 917, 926, 932, 933, 934, 938, 940, 944, 948, 949, 950, 953, 955, 957, 958, 959, 963, 979, 982, 985, 987, 993, 1001, 1008, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1072, 1073, 1088, 1093, 1100, 1110, 1117, 1130], "konsistent": 22, "referenzierung": 22, "fremdmateri": 22, "speisekart": 22, "unterst\u00fctzung": 22, "themenauswahl": [22, 1107], "korrekt": [22, 1110], "vorbereitet": [22, 320], "ma\u00dfnahmen": 22, "sicherstellung": 22, "geplant": 22, "beispielsweis": [22, 146, 1130], "rahmen": 22, "webplattform": 22, "entsteht": 22, "erh\u00f6hung": 22, "sichtbarkeit": [22, 1110, 1127], "aktuel": 22, "inhalt": [22, 165, 167, 197, 303, 780, 1107, 1131], "wartung": 22, "performanceverbesserungen": 22, "plane": [22, 153, 155, 1058], "kein": [22, 150, 151, 155, 165, 175, 182, 197, 233, 252, 297, 320, 1125], "impactmein": 22, "sicherzustellen": 22, "erkl\u00e4rung": [22, 189], "erkl\u00e4ren": [22, 1110], "gew\u00fcnscht": [22, 165], "erreicht": [22, 140, 141, 1124], "hatt": [22, 140, 141, 155, 165, 167], "button": [22, 111, 131, 139, 218, 855], "gew\u00e4hlt": [22, 140, 141], "dzugeh\u00f6rig": 22, "textfeld": 22, "l\u00e4sst": [22, 1126], "sich": [22, 35, 140, 141, 146, 149, 150, 151, 155, 165, 167, 175, 196, 214, 217, 227, 303, 1107, 1108, 1110, 1111, 1112, 1117, 1120, 1124, 1125, 1126, 1129, 1130, 1131], "bearbeiten": 22, "daher": [22, 1131], "mein": [22, 140, 141, 146, 150, 151, 165, 175, 176, 195, 320, 857, 925, 1108, 1123], "konvertiert": 22, "unten": [22, 141, 155, 165, 1108], "beschriebenen": 22, "kan\u00e4len": 22, "promot": [22, 136], "angab": 22, "quellen": 22, "literatur": [22, 193, 542], "lightweight": [22, 122, 147, 164, 168, 184, 218, 220, 232, 630, 688, 691, 1056, 1071, 1113], "daringfirebal": 22, "project": [22, 23, 28, 29, 36, 40, 51, 57, 60, 63, 66, 104, 111, 112, 114, 122, 128, 132, 133, 137, 138, 139, 144, 151, 153, 155, 161, 164, 168, 171, 178, 183, 192, 211, 215, 218, 221, 248, 251, 258, 265, 306, 307, 313, 315, 320, 321, 391, 398, 402, 410, 412, 413, 414, 417, 418, 420, 422, 425, 426, 427, 433, 473, 474, 483, 486, 546, 548, 549, 693, 711, 758, 797, 853, 855, 857, 862, 863, 874, 892, 932, 933, 934, 947, 948, 1009, 1015, 1042, 1044, 1054, 1055, 1057, 1058, 1062, 1073, 1075, 1090, 1092, 1096, 1097, 1102], "docutil": [22, 30, 32, 33, 34, 36], "sourceforg": 22, "io": [22, 30, 53, 61, 89, 132, 136, 138, 153, 155, 169, 171, 172, 173, 174, 181, 183, 184, 192, 193, 206, 222, 238, 245, 247, 253, 268, 269, 290, 302, 305, 307, 309, 324, 528, 709, 711, 735, 754, 755, 770, 788, 791, 799, 854, 863, 864, 917, 925, 946, 953, 1006, 1109, 1117, 1119, 1124, 1126, 1130], "generatoren": [22, 155, 222, 320], "staticgen": 22, "learn": [22, 28, 63, 66, 68, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 115, 132, 134, 152, 153, 155, 164, 168, 172, 193, 202, 279, 288, 303, 305, 409, 673, 711, 800, 855, 863, 917, 979, 980, 1054, 1058, 1062, 1073, 1095], "moodl": [22, 104, 107, 108, 109, 111, 139, 306, 308, 309, 610, 624, 711, 788, 792, 807, 813, 832, 838, 854, 939, 942], "schoologi": 22, "eduongo": 22, "produkt": 22, "dienstleistungen": 22, "gem\u00e4\u00df": [22, 141], "recherch": [22, 155], "hinblick": [22, 1119], "ihnen": [22, 141, 845, 1107, 1117, 1124], "nennen": 22, "beschreiben": 22, "st\u00e4rken": [22, 1110], "schw\u00e4chen": [22, 1112], "konkurrierenden": 22, "konzept": [22, 320, 1117, 1119, 1126], "relevant": [22, 155, 320, 1130], "anbiet": 22, "ziel": [22, 1108, 1124], "allumfassend": 22, "eh": [22, 30, 165, 175, 180, 188, 214, 220, 224, 227, 272], "all": [22, 23, 28, 33, 38, 40, 43, 44, 45, 49, 53, 54, 55, 57, 59, 60, 63, 68, 78, 86, 108, 109, 119, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 152, 153, 154, 159, 161, 164, 165, 167, 168, 170, 175, 180, 184, 190, 192, 193, 201, 204, 207, 208, 212, 217, 218, 220, 237, 239, 242, 245, 248, 250, 257, 259, 266, 287, 289, 290, 297, 313, 325, 329, 339, 343, 344, 347, 348, 349, 360, 368, 369, 375, 385, 387, 389, 391, 392, 395, 398, 399, 402, 404, 409, 411, 412, 413, 414, 415, 418, 419, 423, 424, 427, 428, 432, 434, 437, 439, 440, 448, 449, 454, 455, 476, 478, 486, 487, 505, 533, 534, 537, 539, 544, 562, 563, 580, 585, 598, 599, 613, 621, 623, 638, 640, 642, 655, 665, 669, 674, 675, 677, 687, 688, 691, 694, 696, 699, 711, 717, 719, 726, 729, 731, 736, 744, 748, 750, 754, 756, 758, 766, 772, 775, 784, 785, 786, 790, 791, 793, 794, 796, 798, 800, 801, 802, 803, 818, 819, 830, 837, 840, 842, 844, 845, 846, 847, 849, 855, 856, 857, 858, 862, 863, 864, 874, 875, 879, 881, 884, 890, 892, 901, 908, 914, 917, 918, 919, 930, 934, 940, 944, 949, 950, 954, 955, 956, 967, 975, 980, 981, 985, 987, 1000, 1001, 1004, 1005, 1006, 1011, 1017, 1018, 1034, 1035, 1051, 1055, 1056, 1068, 1072, 1081, 1088, 1093, 1095, 1100, 1107, 1108, 1110, 1112, 1116, 1117, 1124, 1125, 1128, 1131], "vielmehr": 22, "bietet": [22, 146, 149, 1126], "beim": [22, 140, 141, 151, 155, 165, 1110], "verfassen": 22, "kernthema": 22, "bleibt": [22, 1127], "zwischen": [22, 149, 165, 175, 182, 188, 320, 1110, 1111, 1112, 1124, 1131], "benutz": [22, 1127], "vorgaben": 22, "existiert": [22, 165, 177], "wald": 22, "dass": [22, 140, 141, 149, 151, 155, 159, 165, 176, 180, 182, 196, 302, 307, 320, 1107, 1110, 1111, 1112, 1117, 1123, 1124, 1127, 1131], "beisteuert": 22, "eben": [22, 146, 149, 175], "\u00fcbergreifend": 22, "definiert": [22, 151, 165, 1107, 1110], "ansatz": 22, "mir": [22, 140, 141, 155, 165, 176, 180, 212, 302, 307, 320, 1110, 1123], "bekannt": [22, 165, 1112], "verfolgt": [22, 1124], "essentiel": 22, "gesundheit": 22, "unterlagen": [22, 128, 195, 211, 223, 320], "licht": 22, "lesen": [22, 149, 150, 151, 165, 177, 302, 307], "einig": [22, 141, 152, 167, 320, 1110, 1117], "plugin": [22, 134, 437, 674, 946], "helfen": 22, "lieblo": 22, "halbherzig": 22, "On": [22, 95, 99, 104, 107, 108, 109, 111, 114, 132, 134, 147, 168, 184, 194, 210, 226, 228, 236, 237, 239, 242, 248, 254, 257, 283, 302, 387, 393, 402, 405, 437, 475, 483, 572, 591, 595, 624, 627, 667, 675, 694, 710, 711, 736, 759, 763, 788, 791, 792, 854, 856, 862, 864, 871, 875, 876, 879, 883, 890, 893, 895, 912, 920, 930, 935, 942, 943, 947, 985, 1075, 1079, 1095, 1113], "zentral": [22, 128], "ergebni": [22, 217], "niemand": 22, "doc": [22, 35, 37, 63, 136, 138, 151, 152, 154, 184, 192, 199, 201, 207, 216, 217, 220, 224, 227, 242, 287, 299, 302, 307, 310, 311, 322, 522, 714, 729, 735, 738, 818, 840, 898, 1001, 1065, 1070], "show": [22, 23, 26, 28, 41, 56, 61, 111, 112, 131, 132, 134, 135, 139, 160, 168, 171, 172, 184, 193, 201, 207, 210, 217, 218, 220, 248, 260, 261, 274, 279, 287, 288, 306, 308, 309, 310, 313, 372, 412, 414, 423, 454, 470, 476, 522, 611, 721, 740, 742, 774, 785, 786, 818, 840, 843, 845, 847, 855, 857, 862, 863, 864, 883, 914, 916, 920, 925, 929, 942, 944, 952, 991, 1008, 1010, 1061, 1062, 1088, 1095, 1102, 1115], "revealj": 22, "option": [22, 76, 126, 132, 133, 134, 138, 142, 147, 151, 156, 172, 184, 208, 220, 224, 232, 235, 236, 237, 245, 250, 254, 266, 274, 275, 283, 302, 322, 331, 332, 348, 359, 360, 399, 412, 415, 416, 424, 425, 431, 458, 486, 711, 727, 778, 782, 785, 786, 794, 846, 864, 865, 867, 875, 888, 892, 926, 934, 990, 1008, 1011, 1088, 1095, 1102, 1110, 1115, 1128], "webslid": 22, "tv": [22, 30, 139], "sicht": [22, 150, 221, 1110], "entscheidend": 22, "usp": 22, "wodurch": 22, "vorteilhaft": 22, "unterscheidet": [22, 1110], "600": [22, 201, 207, 580], "kernfeatur": 22, "inbeziehungsetzen": 22, "dessen": [22, 150, 165, 262, 320, 1108, 1112, 1125], "versagen": 22, "implementierung": 22, "solcher": [22, 149, 165], "featur": [22, 28, 40, 44, 53, 54, 76, 78, 111, 112, 137, 139, 149, 160, 165, 168, 169, 171, 173, 178, 183, 192, 201, 207, 210, 217, 218, 220, 221, 223, 224, 263, 283, 304, 320, 321, 397, 401, 406, 407, 409, 410, 412, 601, 626, 629, 636, 643, 654, 668, 678, 679, 683, 687, 692, 700, 707, 708, 710, 711, 750, 758, 855, 863, 864, 884, 916, 926, 933, 934, 950, 964, 965, 966, 967, 971, 974, 981, 993, 994, 1009, 1012, 1013, 1014, 1015, 1028, 1039, 1042, 1043, 1044, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1059, 1062, 1066, 1069, 1073, 1075, 1077, 1087, 1090, 1092, 1093, 1097, 1108, 1110, 1111, 1113, 1117, 1124], "indem": [22, 175, 303, 1117], "foku": [22, 320], "schulbetrieb": 22, "legen": [22, 845], "ferner": 22, "schwere": 22, "abh\u00e4ngigkeiten": [22, 1120], "fett": [22, 165, 182], "datenbanken": [22, 188, 320], "webserv": [22, 863], "hintergrund": [22, 175], "redaktionel": 22, "arbeit": [22, 155, 1108], "offlin": 22, "laptop": [22, 133, 135, 142, 874], "zug": 22, "erledigen": [22, 1108], "einschr\u00e4nkung": 22, "geserv": 22, "erarbeitet": [22, 1107], "sinn": [22, 159, 1110], "prinzip": [22, 1127, 1129, 1131], "kostenlo": 22, "genutzt": [22, 149], "weiterentwickelt": [22, 1112, 1117], "f\u00f6rderbedingungen": 22, "projektseit": 22, "ver\u00f6ffentlichen": 22, "nachvollziehbar": 22, "strukturieren": 22, "f\u00f6rderzusag": 22, "hinwei": 22, "verpflichtend": 22, "gesondert": 22, "erw\u00e4hnen": 22, "projektzwischenbericht": 22, "projektzusammenfassung": 22, "projektendbericht": 22, "entwicklerdokument": 22, "anwenderdokument": 22, "dienstleistungsbeschreibung": 22, "abh\u00e4ngig": 22, "dokument": [22, 150, 165, 176, 197, 212, 224, 297, 1125], "externkommunik": 22, "erreichung": 22, "nachhaltigkeit": 22, "projektergebnistyp": 22, "haupteigenschaften": 22, "funktionalit\u00e4t": [22, 165], "sourcecod": [22, 149], "bestehend": 22, "unabh\u00e4ngigem": 22, "unitgetestetem": 22, "core": [22, 57, 60, 128, 131, 132, 134, 135, 164, 167, 171, 176, 189, 204, 215, 218, 220, 227, 230, 245, 249, 252, 262, 266, 325, 337, 382, 426, 427, 434, 439, 453, 454, 485, 537, 542, 635, 665, 685, 729, 733, 758, 795, 833, 849, 914, 917, 918, 929, 930, 946, 1013, 1056, 1061, 1077, 1078, 1080, 1081, 1093, 1128], "reih": [22, 146, 159, 167], "direct": [22, 35, 37, 61, 111, 129, 132, 193, 251, 254, 288, 359, 370, 405, 418, 545, 691, 717, 794, 851, 878, 880, 896, 898, 899, 934, 948, 975, 1061, 1072, 1081, 1115, 1118], "generierten": 22, "kursagenda": 22, "graphen": 22, "lizenz": 22, "gpl": [22, 537, 686, 714], "pypi": [22, 115, 128, 164, 168, 183, 199, 215, 241, 1087, 1088, 1093], "installierbar": 22, "paket": [22, 149, 1108], "generiert": [22, 165], "readthedoc": [22, 30, 37], "gehostet": 22, "verf\u00fcgbar": [22, 918, 1120], "obigen": 22, "bisherigen": [22, 1112], "aktuellen": [22, 175], "bereich": [22, 155, 320], "umfeld": 22, "projektantrag": 22, "bisher": [22, 128, 1107], "softwarebasi": 22, "grundlegend": [22, 177, 1112, 1117, 1124, 1126, 1129], "semiprofessionel": 22, "visualisierung": 22, "plan": [22, 40, 59, 112, 131, 155, 164, 199, 208, 218, 301, 302, 306, 310, 316, 409, 525, 635, 693, 758, 1093, 1100], "kurz": [22, 140, 141, 165, 167, 176, 181, 196, 221, 1109, 1123, 1126], "lebensl\u00e4uf": 22, "projektbeteiligten": 22, "sowi": [22, 1120], "ver\u00f6ffentlichungen": 22, "b\u00fccher": 22, "fachartikel": 22, "patent": 22, "vortr\u00e4g": 22, "gebiet": [22, 141, 1129], "projektinhalt": 22, "verdeutlichen": [22, 1108], "teamleitung": 22, "softwareprojekt": 22, "stefan": [22, 150], "walkner": 22, "1983": [22, 528], "hallein": 22, "master": [22, 59, 114, 135, 138, 147, 303, 304, 754, 758, 847, 859], "scienc": [22, 27, 76, 139, 153, 164, 168, 173, 202, 271, 304, 528, 581, 981, 1060, 1061, 1062, 1063], "salzburg": 22, "consult": [22, 57, 60, 129, 132, 145, 183, 201, 207, 217, 220, 224, 308, 434], "isamberth": 22, "adnet": 22, "2000": [22, 188, 191, 207, 212, 224, 245, 411, 437, 918], "2002": [22, 207, 537, 686], "divers": [22, 156, 1109], "2005": [22, 528], "2007": 22, "entwicklungsleit": 22, "nextsens": 22, "2016": [22, 167, 168, 189, 192, 207, 215, 241, 248, 256, 265, 1056], "programmiererfahrung": [22, 1117, 1124, 1131], "bash": [22, 97, 111, 129, 139, 148, 172, 182, 184, 204, 212, 220, 227, 230, 238, 245, 247, 248, 252, 259, 262, 266, 268, 302, 303, 304, 307, 309, 321, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 677, 680, 700, 709, 710, 711, 781, 785, 786, 787, 788, 790, 791, 792, 793, 795, 796, 799, 800, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 843, 848, 849, 854, 877, 880, 883, 885, 887, 890, 893, 895, 896, 909, 911, 912, 915, 917, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 946, 953, 1034, 1064, 1108, 1119], "davon": [22, 140, 151, 1110, 1129], "teamleit": 22, "m\u00f6chten": [22, 1131], "ggf": 22, "kennenlernen": 22, "knackig": [22, 128], "darstellung": 22, "handelnden": 22, "personen": 22, "sendung": 22, "minuten": [22, 846], "millionen": 22, "ihren": [22, 165, 177], "antrag": 22, "nochmal": 22, "vorgelesen": 22, "bekommen": [22, 159, 320, 1107, 1120], "un": [22, 159, 167, 320, 736, 842, 975, 1108], "hintergrundmusik": 22, "windger\u00e4usch": 22, "gerad": [22, 141, 175, 176, 320, 1110, 1123], "f\u00f6rdern": 22, "sollen": 22, "animiert": 22, "produktvideo": 22, "interessieren": 22, "sicher": [22, 151, 155], "mindesten": [22, 151], "vier": [22, 151, 165, 175, 180, 182, 197, 201, 204, 212, 214, 217, 224, 230, 242, 245, 249, 252, 262, 272, 297, 1117, 1130], "monat": 22, "einreichschluss": 22, "uneingeschr\u00e4nkt": 22, "aufrufbar": 22, "youtu": [22, 680, 684], "hobyb1zukdi": 22, "projektrisiken": 22, "sehen": [22, 141], "wenig": [22, 150, 165, 235, 320, 1108], "pflegen": 22, "frontalen": 22, "vortragsstil": 22, "starker": 22, "paradigmenwechsel": 22, "wechsel": 22, "jahrelang": 22, "gewohnten": 22, "verfahrensweisen": 22, "abrupt": 22, "gro\u00dfer": 22, "monolithisch": 22, "zerhacken": 22, "welchen": 22, "bewerten": 22, "messen": 22, "zielerreichung": 22, "kriterium": 22, "arbeitserleichterung": 22, "minimal": [22, 165], "erfolg": [22, 1110], "mindestkriterien": 22, "positiven": 22, "projekterfolg": 22, "jedenfal": 22, "abgedeckt": 22, "ausgezeichnet": 22, "kriterien": [22, 146, 159, 846], "angestrebten": 22, "ausgezeichneten": 22, "anerkennen": 22, "gesteigerten": 22, "effekt": [22, 165, 176, 1123, 1131], "weiter": [22, 35, 140, 141, 165, 167, 176, 190, 214, 232, 262, 846, 1107, 1117, 1123, 1124, 1126, 1127, 1131], "bekundet": 22, "interess": [22, 221, 1108, 1119], "medien": [22, 1130], "berichtet": 22, "migrat": [22, 159], "zehn": [22, 175], "migrieren": 22, "verwenden": [22, 146, 159, 165, 171, 175, 180, 1130], "untereinand": 22, "zutun": 22, "zusammenzuarbeiten": 22, "kooperationspartner_innen": 22, "dienstleister_innen": 22, "mitwirkend": 22, "zielgruppenvertreter_innen": 22, "werbeagentur": 22, "schaar": 22, "logo": 22, "webdesign": 22, "wof\u00fcr": 22, "arbeitsstunden": 22, "geld": 22, "allem": [22, 140, 155, 165, 320, 1129], "eingesetzt": [22, 1108, 1125], "basisarbeit": 22, "workflow": [22, 159, 193, 208, 731, 926, 1125], "datenstrukturen": [22, 177, 195, 216, 1112], "zeitgem\u00e4\u00df": 22, "interakt": [22, 1006], "know": [22, 40, 57, 60, 63, 67, 78, 82, 112, 129, 131, 132, 133, 134, 137, 138, 139, 147, 152, 153, 156, 160, 161, 164, 168, 172, 183, 184, 191, 194, 251, 254, 258, 304, 335, 337, 343, 348, 365, 375, 387, 389, 391, 393, 397, 398, 399, 401, 405, 406, 407, 409, 418, 424, 428, 429, 441, 478, 486, 513, 529, 531, 537, 539, 543, 562, 599, 602, 605, 626, 627, 629, 638, 640, 642, 665, 667, 676, 685, 687, 691, 701, 708, 710, 711, 713, 729, 736, 758, 797, 818, 855, 858, 862, 864, 875, 880, 882, 891, 901, 929, 950, 958, 963, 964, 975, 980, 983, 986, 987, 1006, 1013, 1051, 1055, 1093, 1118], "person": [22, 139, 169, 188, 191, 230, 232, 234, 241, 245, 252, 309, 394, 429, 430, 433, 458, 542, 601, 871, 969, 970, 972, 973, 974, 976, 977, 1051, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1093, 1094], "welchem": [22, 151], "umfang": 22, "sachressourcen": 22, "ben\u00f6tigt": [22, 176, 177, 1123], "zugekauft": 22, "backendprogrammierung": 22, "programmiersprach": [22, 1109, 1112, 1124, 1126], "ca": [22, 30, 140, 142, 1088], "200": [22, 128, 129, 151, 153, 165, 182, 184, 191, 198, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 249, 256, 266, 272, 294, 299, 557, 558, 559, 560, 561, 563, 564, 565, 566, 580, 634, 736, 916, 1030], "stunden": 22, "webprogrammierung": 22, "css": [22, 129, 130], "150": [22, 151, 165, 175, 182, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 627], "kreativarbeit": 22, "erreichen": [22, 1124, 1127], "pers\u00f6nlich": [22, 320], "freund": 22, "ebenfal": [22, 1125], "t\u00e4tig": 22, "mich": [22, 140, 155, 175, 183, 320, 1107], "ermutigt": 22, "\u00fcberhaupt": [22, 1117, 1124, 1131], "starten": [22, 1129], "repr\u00e4sent": 22, "post": [22, 64, 91, 128, 132, 134, 136, 137, 138, 139, 142, 193, 208, 257, 335, 349, 433, 529, 855, 924, 926, 929, 1055], "meiner": [22, 221, 320, 1108], "facebookseit": 22, "relevanten": 22, "foren": 22, "linkedin": 22, "typisch": [22, 176, 1110], "projektbeginn": 22, "liegt": [22, 140, 151, 155, 224, 1111, 1127], "abschluss": [22, 141, 302], "oktob": 22, "projektdau": 22, "\u00fcberschreiten": 22, "mitarbeiter_innen": 22, "stundenanzahl": 22, "jeweilig": 22, "stundens\u00e4tz": 22, "senior": 22, "junior": 22, "programmierer_in": 22, "designer_in": 22, "contentmanager_in": 22, "projektmanager_in": 22, "assistenz": 22, "administr": [22, 139, 795, 862, 871, 878, 917], "sachbearbeiter_in": 22, "social": [22, 43, 429, 436, 440, 453, 454, 455, 458, 464, 467, 468, 469], "media": [22, 76, 149, 758, 863], "spzialist_in": 22, "firmeneigent\u00fcmer_innen": 22, "gesellschafter_innen": 22, "vereinsfunktion\u00e4r_innen": 22, "betr\u00e4gt": 22, "f\u00f6rderbar": 22, "stundensatz": 22, "brutto": 22, "nachweislich": 22, "angestellt": 22, "projektmitarbeiter_innen": 22, "errechnet": 22, "vollzeitvertrag": 22, "jahresstundenteil": 22, "1720": [22, 207], "teilzeitbesch\u00e4ftigten": 22, "aliquot": 22, "reduziert": [22, 155], "dienstgeberanteil": 22, "faktor": 22, "ber\u00fccksichtigt": 22, "kalkul": 22, "jahresbruttogehalt": 22, "hohe": 22, "risiko": 22, "h\u00f6herer": 22, "eigenmittelanteil": 22, "bedingung": 22, "festgelegt": 22, "erh\u00f6hen": 22, "gemeinkosten": 22, "gef\u00f6rdert": 22, "antr\u00e4gen": 22, "diplomarbeiten": 22, "mitarbeit": 22, "betrag": 22, "8000": [22, 207], "frontendprogrammierung": 22, "4500": [22, 207], "sachkosten": 22, "projektbedingt": 22, "reisekosten": 22, "betriebskosten": 22, "unmittelbar": 22, "projektt\u00e4tigkeit": 22, "entstehen": [22, 294], "leistungen": 22, "reisen": 22, "gliedern": 22, "rechnung": [22, 141, 249], "enthalten": 22, "umsatzsteu": 22, "darf": [22, 302], "kostenabrechnung": 22, "nur": [22, 140, 146, 150, 151, 155, 165, 167, 175, 176, 180, 182, 190, 212, 297, 320, 1109, 1110, 1117, 1120, 1123, 1124, 1125, 1127, 1129, 1130, 1131], "f\u00f6rdernehmer_in": 22, "vorsteuerabzugsberechtigt": 22, "13500": [22, 207], "beantragt": 22, "differenz": [22, 227], "aufgliedern": 22, "eigenmittel": 22, "f\u00f6rderungseinrichtungen": 22, "fremdmittel": 22, "kredit": 22, "leas": 22, "pro": [22, 168, 846, 949], "bono": 22, "beitrag": 22, "restfinanzierung": 22, "gesamtbetrag": 22, "ber\u00fccksichtigten": 22, "einzelkosten": 22, "achtung": 22, "gesamtprojektkosten": 22, "h\u00f6her": 22, "auszuf\u00fcllen": 22, "leer": [22, 182, 188, 196, 252], "bleiben": [22, 141, 165, 175, 1117, 1124, 1127], "reich": [22, 165], "nein": [22, 176, 182, 188, 233, 242, 1123], "neben": [22, 155], "antr\u00e4g": 22, "oderstipendium": 22, "laufenden": 22, "call": [22, 30, 40, 48, 61, 64, 108, 109, 128, 131, 132, 133, 134, 135, 137, 142, 149, 152, 154, 162, 168, 170, 191, 199, 201, 207, 212, 215, 217, 222, 224, 229, 230, 233, 248, 250, 252, 265, 266, 274, 302, 307, 309, 320, 324, 331, 335, 336, 339, 350, 366, 368, 372, 378, 379, 382, 392, 395, 396, 404, 412, 415, 427, 434, 438, 453, 454, 455, 471, 475, 480, 483, 484, 486, 487, 499, 513, 527, 531, 534, 537, 539, 543, 552, 598, 599, 602, 604, 605, 609, 611, 616, 623, 631, 632, 640, 644, 655, 658, 661, 662, 663, 664, 674, 677, 685, 690, 691, 699, 700, 701, 710, 711, 712, 726, 736, 738, 740, 744, 746, 748, 750, 752, 754, 756, 758, 763, 766, 772, 777, 778, 784, 788, 791, 792, 793, 794, 796, 798, 801, 802, 815, 818, 854, 858, 866, 876, 877, 880, 881, 882, 883, 885, 887, 893, 894, 895, 900, 901, 908, 909, 911, 912, 915, 916, 917, 926, 929, 930, 932, 934, 951, 953, 954, 955, 960, 966, 968, 969, 970, 972, 973, 975, 976, 977, 997, 998, 1002, 1004, 1007, 1008, 1013, 1031, 1035, 1056, 1061, 1064, 1072, 1075, 1080, 1081, 1094, 1095, 1096, 1115, 1119, 1127, 1128, 1130], "weiteren": 22, "stipendium": 22, "imlaufenden": 22, "habe": [22, 140, 141, 150, 155, 171, 320], "zuge": 22, "projektantragsstellung": 22, "rundschreiben": 22, "expert": [22, 27, 136, 137, 142, 486, 797, 818, 864, 1060], "group": [22, 28, 99, 100, 111, 125, 128, 147, 152, 164, 169, 171, 180, 183, 184, 191, 197, 204, 212, 221, 224, 230, 233, 245, 259, 266, 269, 272, 302, 315, 316, 320, 331, 356, 399, 400, 475, 505, 711, 758, 785, 786, 788, 791, 792, 793, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 840, 844, 845, 846, 847, 851, 854, 862, 874, 875, 883, 884, 885, 890, 893, 895, 909, 912, 917, 930, 953, 1034, 1093], "wirtschaftkamm": 22, "nehmen": [22, 141, 1109], "larg": [23, 29, 36, 76, 134, 137, 139, 164, 183, 184, 193, 204, 210, 251, 254, 378, 387, 389, 393, 399, 400, 439, 664, 673, 709, 752, 758, 932, 956, 958, 960, 980, 987, 1013, 1034, 1073, 1077, 1081, 1100], "amount": [23, 104, 108, 109, 132, 133, 134, 137, 143, 164, 171, 199, 249, 250, 399, 411, 542, 664, 665, 789, 791, 875, 892, 980], "pdf": [23, 35, 157, 159, 164, 168, 171, 172, 174, 224, 238, 247, 248, 268, 269, 301, 302, 305, 307, 310, 321, 818, 840, 841, 864, 896, 934, 1028, 1109, 1110, 1111, 1119, 1120, 1126, 1127, 1129, 1130, 1131], "Not": [23, 41, 45, 51, 78, 107, 134, 135, 136, 139, 142, 164, 167, 168, 208, 210, 211, 212, 225, 234, 261, 265, 339, 348, 370, 382, 385, 387, 393, 409, 412, 475, 492, 494, 527, 534, 536, 538, 543, 544, 612, 624, 644, 655, 659, 661, 662, 663, 681, 688, 691, 697, 702, 709, 711, 721, 729, 736, 740, 742, 856, 894, 914, 916, 918, 920, 930, 953, 955, 960, 961, 962, 963, 973, 975, 987, 996, 1001, 1056, 1060, 1068, 1082, 1084, 1101, 1113], "satisfi": [23, 30, 168, 428, 544, 632, 644, 677], "colleagu": [23, 27, 143, 184, 389, 601, 958, 975, 987], "aren": [23, 129, 214, 224, 640, 819, 908, 918], "either": [23, 37, 40, 41, 132, 134, 142, 143, 248, 251, 254, 387, 454, 627, 635, 638, 699, 785, 786, 815, 818, 850, 864, 955, 1022, 1075, 1113], "nobodi": [23, 41, 132, 134, 153, 164, 204, 220, 227, 230, 245, 252, 262, 266, 390, 392, 529, 570, 642, 713, 785, 786, 795, 810, 812, 818, 819, 871, 879, 1008, 1062, 1065, 1096, 1102], "doe": [23, 36, 43, 46, 47, 59, 67, 76, 81, 82, 108, 109, 111, 128, 131, 132, 133, 136, 137, 138, 139, 142, 143, 147, 152, 160, 164, 168, 170, 182, 191, 194, 207, 224, 227, 233, 251, 252, 254, 257, 259, 261, 302, 313, 329, 335, 343, 347, 348, 349, 350, 357, 366, 367, 376, 379, 382, 383, 385, 387, 389, 391, 393, 398, 399, 400, 403, 404, 405, 409, 411, 412, 413, 417, 423, 424, 427, 429, 432, 437, 441, 449, 451, 453, 479, 480, 481, 482, 483, 486, 487, 510, 519, 522, 529, 530, 531, 534, 537, 539, 540, 542, 545, 568, 575, 583, 589, 598, 601, 602, 608, 609, 616, 627, 632, 633, 635, 642, 644, 664, 666, 674, 675, 677, 681, 685, 686, 687, 690, 691, 693, 697, 698, 707, 709, 721, 722, 726, 727, 729, 736, 750, 758, 763, 774, 784, 793, 797, 798, 800, 803, 851, 855, 862, 863, 864, 875, 880, 881, 883, 887, 890, 901, 905, 908, 914, 916, 917, 926, 930, 932, 933, 934, 935, 940, 944, 948, 949, 951, 953, 954, 955, 956, 958, 960, 969, 973, 975, 976, 980, 983, 986, 1004, 1005, 1006, 1025, 1033, 1035, 1062, 1065, 1067, 1068, 1070, 1077, 1078, 1081, 1082, 1083, 1085, 1088, 1093, 1113, 1115], "even": [23, 28, 57, 60, 76, 120, 132, 133, 134, 139, 143, 153, 154, 164, 168, 171, 172, 176, 178, 183, 189, 191, 192, 194, 195, 204, 208, 211, 212, 215, 218, 221, 223, 224, 226, 229, 230, 241, 251, 254, 265, 266, 366, 375, 389, 395, 399, 427, 432, 528, 536, 539, 585, 632, 674, 677, 684, 693, 709, 711, 750, 758, 795, 814, 855, 863, 880, 881, 914, 916, 917, 933, 952, 964, 975, 1001, 1004, 1015, 1018, 1019, 1054, 1056, 1080, 1088, 1095, 1115, 1123], "tech": [23, 43, 131], "although": [23, 28, 76, 132, 134, 138, 143, 154, 164, 170, 194, 214, 224, 320, 483, 627, 628, 669, 691, 797, 800, 871, 951, 956, 1013, 1062], "gain": [23, 139, 251, 254, 399, 758, 797], "incred": 23, "momentum": 23, "expect": [23, 36, 48, 131, 134, 180, 201, 207, 208, 217, 220, 227, 252, 266, 376, 414, 429, 472, 537, 602, 655, 664, 677, 731, 742, 855, 863, 864, 903, 920, 929, 975, 985, 998, 1028, 1038, 1061, 1099, 1100, 1103], "context": [23, 28, 57, 60, 108, 109, 132, 153, 156, 168, 171, 173, 175, 182, 213, 217, 218, 220, 224, 227, 233, 241, 245, 250, 260, 261, 262, 265, 272, 276, 279, 320, 386, 448, 449, 463, 531, 537, 665, 686, 709, 711, 720, 725, 728, 730, 735, 738, 739, 740, 741, 744, 745, 749, 750, 751, 753, 754, 755, 762, 763, 764, 766, 767, 768, 769, 772, 773, 776, 778, 779, 791, 795, 854, 855, 878, 918, 929, 930, 957, 966, 1054, 1068, 1073], "defin": [23, 51, 112, 125, 135, 152, 154, 169, 171, 173, 175, 180, 188, 191, 192, 194, 201, 205, 207, 210, 214, 217, 220, 224, 232, 234, 245, 256, 266, 283, 297, 308, 329, 334, 339, 344, 345, 348, 365, 366, 367, 368, 369, 370, 383, 391, 392, 393, 395, 399, 412, 413, 418, 419, 420, 437, 441, 449, 470, 471, 483, 505, 513, 530, 531, 532, 534, 536, 537, 539, 540, 543, 544, 545, 552, 555, 576, 580, 601, 608, 627, 628, 637, 638, 639, 640, 641, 644, 664, 669, 673, 682, 685, 690, 691, 717, 719, 731, 795, 815, 855, 856, 864, 875, 882, 900, 922, 932, 934, 948, 950, 954, 956, 958, 970, 975, 987, 997, 1052, 1068, 1072, 1086, 1105, 1113, 1115, 1118], "solv": [23, 43, 78, 87, 111, 128, 129, 132, 133, 162, 164, 168, 169, 171, 173, 184, 189, 202, 210, 215, 218, 229, 232, 254, 258, 265, 269, 271, 274, 288, 369, 411, 420, 626, 700, 710, 711, 758, 797, 854, 895, 909, 942, 944, 946, 975, 1051, 1056, 1062, 1115, 1116], "provid": [23, 26, 35, 56, 63, 66, 132, 134, 135, 136, 138, 139, 142, 143, 147, 160, 201, 207, 208, 217, 220, 224, 258, 274, 385, 414, 419, 420, 429, 440, 448, 601, 664, 691, 758, 794, 797, 837, 863, 864, 871, 885, 917, 926, 958, 967, 985, 998, 1061, 1087, 1095, 1115], "depth": [23, 164, 168, 189, 201, 207, 217, 218, 220, 389, 689, 960, 1056, 1060, 1061], "repres": [23, 132, 134, 156, 201, 207, 217, 220, 224, 245, 256, 288, 398, 432, 449, 451, 538, 709, 729, 754, 791, 794, 862, 864, 892, 987, 1013, 1051, 1055, 1077, 1084, 1118], "own": [23, 27, 38, 41, 63, 108, 109, 132, 133, 135, 136, 142, 147, 160, 164, 210, 234, 239, 248, 258, 283, 389, 395, 410, 424, 432, 449, 454, 518, 519, 528, 618, 619, 621, 622, 636, 640, 643, 655, 665, 667, 679, 687, 702, 709, 710, 711, 758, 791, 793, 794, 803, 805, 806, 814, 815, 837, 847, 862, 863, 875, 882, 900, 905, 916, 917, 929, 948, 955, 972, 977, 978, 980, 1063, 1100, 1115, 1116, 1118], "yield": [23, 28, 151, 152, 165, 168, 169, 171, 180, 192, 199, 205, 209, 211, 213, 214, 220, 224, 229, 231, 241, 244, 245, 252, 260, 261, 262, 265, 266, 271, 273, 370, 439, 448, 655, 658, 661, 662, 663, 711, 953, 957, 959, 960, 962, 981, 991, 1012, 1013, 1014, 1015, 1028, 1039, 1054, 1066, 1069, 1073], "multipl": [23, 33, 34, 57, 60, 74, 104, 108, 109, 132, 133, 135, 149, 164, 168, 171, 191, 192, 193, 205, 207, 224, 259, 325, 327, 331, 332, 335, 344, 346, 349, 358, 365, 369, 387, 392, 405, 410, 417, 449, 463, 476, 531, 544, 602, 609, 622, 649, 655, 677, 679, 686, 694, 697, 701, 702, 709, 711, 727, 729, 735, 739, 740, 748, 749, 750, 758, 760, 762, 763, 766, 767, 773, 776, 779, 791, 794, 795, 798, 800, 805, 806, 851, 854, 863, 884, 900, 905, 925, 938, 975, 986, 987, 1000, 1001, 1006, 1056, 1084, 1086], "artifact": [23, 138, 142, 156, 161, 274, 405, 719, 932, 933, 934, 944, 1102, 1115], "complet": [23, 40, 61, 76, 111, 128, 131, 132, 153, 164, 172, 180, 189, 202, 205, 208, 215, 229, 230, 232, 259, 265, 271, 276, 283, 287, 288, 369, 386, 399, 412, 424, 476, 485, 530, 531, 605, 674, 689, 709, 752, 758, 785, 786, 796, 858, 864, 879, 916, 953, 957, 979, 980, 1056, 1061, 1062, 1067, 1073, 1075, 1087, 1088, 1105, 1113], "prepar": [26, 111, 128, 131, 164, 221, 302, 320, 433, 474, 505, 567, 604, 925, 949, 1052, 1061, 1094], "base": [26, 28, 29, 40, 43, 51, 76, 78, 95, 105, 111, 124, 132, 134, 135, 147, 154, 159, 164, 165, 168, 171, 172, 175, 179, 182, 184, 194, 208, 210, 213, 217, 218, 222, 227, 229, 235, 242, 245, 250, 252, 256, 257, 258, 259, 260, 261, 266, 271, 279, 298, 302, 306, 313, 335, 343, 370, 387, 405, 410, 411, 429, 433, 438, 439, 441, 448, 473, 485, 489, 505, 516, 558, 560, 561, 562, 563, 565, 566, 570, 602, 604, 605, 607, 649, 666, 667, 674, 679, 686, 690, 702, 705, 708, 710, 711, 731, 738, 742, 754, 758, 760, 809, 811, 851, 855, 914, 926, 930, 932, 933, 946, 947, 949, 957, 964, 966, 971, 972, 1012, 1018, 1034, 1054, 1063, 1067, 1081, 1112, 1113, 1116], "exist": [26, 36, 44, 45, 51, 53, 54, 107, 108, 109, 125, 128, 138, 143, 172, 184, 191, 257, 261, 287, 299, 302, 305, 387, 409, 411, 427, 432, 452, 455, 475, 486, 492, 494, 527, 537, 585, 620, 622, 631, 685, 709, 711, 758, 785, 786, 791, 793, 800, 809, 811, 820, 824, 825, 837, 854, 862, 864, 875, 880, 884, 890, 893, 895, 912, 919, 926, 944, 948, 949, 954, 955, 964, 969, 1004, 1006, 1024, 1068, 1076, 1077, 1088, 1093, 1095], "navig": [26, 1084], "through": [26, 32, 36, 59, 71, 76, 102, 129, 131, 132, 134, 139, 143, 147, 160, 164, 168, 170, 173, 184, 192, 193, 194, 199, 205, 218, 258, 260, 261, 276, 279, 309, 313, 320, 339, 359, 378, 398, 402, 415, 424, 455, 477, 480, 546, 548, 549, 598, 599, 602, 605, 627, 642, 644, 669, 677, 681, 687, 691, 729, 756, 789, 797, 845, 855, 863, 864, 873, 926, 929, 930, 955, 960, 963, 978, 980, 983, 1018, 1063, 1086, 1113, 1114, 1118], "deviat": [26, 139, 152, 160, 169, 193, 224, 320, 758], "after": [26, 41, 128, 129, 132, 133, 134, 139, 142, 152, 161, 164, 171, 184, 191, 201, 207, 217, 220, 223, 224, 230, 245, 250, 257, 259, 266, 288, 327, 335, 336, 369, 389, 396, 415, 417, 453, 454, 477, 484, 536, 539, 552, 587, 635, 637, 638, 640, 649, 655, 702, 709, 736, 740, 746, 798, 801, 818, 819, 851, 862, 902, 920, 925, 926, 929, 932, 951, 953, 955, 980, 981, 985, 1021, 1034, 1052, 1060, 1072, 1084, 1094, 1095, 1100], "writeup": [26, 143, 944], "what": [26, 27, 41, 42, 44, 45, 46, 49, 53, 54, 55, 56, 57, 60, 63, 67, 76, 81, 84, 85, 95, 96, 97, 102, 105, 111, 112, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 143, 147, 151, 152, 153, 154, 155, 156, 158, 160, 164, 165, 168, 169, 170, 171, 172, 173, 174, 183, 191, 193, 194, 208, 209, 210, 219, 224, 232, 238, 248, 251, 254, 258, 260, 261, 274, 279, 283, 287, 288, 294, 302, 305, 307, 309, 310, 313, 324, 332, 337, 347, 348, 350, 363, 372, 375, 382, 385, 387, 389, 390, 393, 394, 395, 399, 403, 405, 410, 411, 414, 419, 421, 428, 430, 432, 453, 454, 464, 470, 472, 481, 484, 505, 506, 509, 512, 515, 518, 521, 522, 524, 534, 537, 539, 540, 541, 542, 543, 545, 552, 555, 562, 598, 605, 614, 632, 635, 638, 644, 649, 655, 665, 676, 677, 685, 686, 687, 691, 694, 698, 700, 701, 707, 709, 710, 711, 719, 722, 726, 729, 731, 736, 754, 761, 766, 771, 784, 785, 786, 788, 789, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 807, 808, 809, 810, 811, 812, 813, 818, 833, 834, 836, 854, 855, 862, 863, 864, 866, 867, 868, 869, 870, 881, 882, 888, 889, 890, 891, 893, 895, 900, 901, 902, 903, 904, 909, 912, 915, 917, 918, 920, 921, 924, 925, 926, 928, 930, 933, 942, 943, 947, 949, 950, 951, 955, 957, 958, 961, 962, 966, 967, 975, 979, 980, 998, 1004, 1008, 1013, 1016, 1024, 1051, 1055, 1063, 1068, 1075, 1084, 1093, 1095, 1099, 1100, 1102, 1104, 1115, 1118], "collect": [26, 28, 128, 131, 133, 176, 183, 192, 198, 199, 216, 218, 219, 220, 232, 241, 243, 250, 258, 260, 261, 265, 276, 279, 287, 398, 405, 516, 562, 677, 686, 698, 711, 758, 789, 861, 942, 953, 957, 963, 971, 1005, 1011, 1015, 1044, 1049, 1051, 1054, 1055, 1065, 1073, 1087, 1088, 1093, 1095, 1123], "question": [26, 28, 30, 33, 34, 36, 100, 111, 134, 139, 147, 152, 164, 168, 170, 192, 193, 194, 204, 205, 207, 208, 210, 230, 302, 309, 316, 344, 373, 379, 391, 410, 413, 417, 421, 474, 538, 598, 605, 693, 697, 711, 736, 750, 766, 785, 786, 788, 807, 813, 837, 854, 862, 864, 875, 879, 895, 914, 915, 948, 956, 957, 960, 965, 1054, 1056], "ask": [26, 132, 137, 139, 147, 164, 167, 168, 233, 265, 302, 309, 409, 428, 429, 451, 470, 522, 534, 545, 666, 688, 814, 869, 871, 975, 1056], "answer": [26, 43, 136, 139, 152, 164, 168, 170, 171, 194, 205, 212, 309, 413, 417, 474, 598, 605, 607, 677, 682, 701, 722, 766, 785, 786, 791, 803, 805, 806, 809, 811, 862, 864, 871, 875, 914, 917, 948, 955, 956, 960, 967, 984, 987, 1056], "cover": [26, 76, 79, 125, 139, 156, 164, 168, 172, 174, 192, 193, 205, 218, 257, 259, 409, 428, 862, 864, 946, 955, 957, 980, 1028, 1051, 1056, 1060, 1061, 1086, 1087, 1093, 1116, 1118], "been": [26, 57, 60, 131, 132, 133, 134, 136, 137, 138, 143, 147, 152, 153, 164, 172, 201, 207, 217, 220, 251, 254, 256, 266, 299, 308, 368, 382, 383, 412, 423, 432, 449, 505, 664, 712, 754, 772, 778, 783, 793, 797, 801, 821, 855, 862, 863, 864, 875, 884, 894, 905, 930, 933, 934, 951, 958, 996, 1095, 1113, 1115, 1116], "further": [26, 129, 131, 138, 142, 158, 207, 239, 254, 310, 375, 386, 424, 486, 506, 509, 512, 515, 518, 521, 524, 636, 667, 710, 711, 729, 752, 758, 840, 865, 901, 921, 924, 928, 963, 1099, 1104, 1118], "inform": [26, 27, 28, 104, 131, 134, 135, 137, 142, 151, 152, 153, 155, 160, 180, 201, 207, 217, 220, 245, 260, 261, 279, 386, 396, 403, 404, 414, 423, 691, 709, 717, 729, 793, 818, 851, 855, 862, 864, 866, 898, 954, 982, 1056, 1067, 1072, 1088, 1095], "internet": [26, 63, 76, 131, 133, 136, 137, 139, 160, 172, 180, 208, 221, 260, 261, 276, 279, 299, 411, 855, 856, 858, 916, 956, 1116, 1130], "subtract": [26, 201, 224, 256, 346, 449, 463, 677, 817, 917, 967, 975, 987], "known": [26, 128, 133, 144, 184, 201, 207, 217, 220, 237, 239, 257, 274, 299, 345, 347, 359, 366, 393, 399, 564, 729, 818, 947, 1063, 1115, 1116], "calcul": [26, 80, 83, 134, 168, 192, 201, 224, 345, 347, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 448, 478, 483, 485, 629, 634, 667, 694, 708, 710, 711, 900, 917, 958, 960, 1031, 1063, 1071, 1093], "minimum": [26, 61, 224, 649, 758, 953, 1059, 1060, 1061, 1062], "come": [26, 41, 76, 108, 109, 128, 129, 131, 132, 133, 134, 137, 138, 139, 142, 143, 154, 160, 161, 164, 184, 210, 237, 239, 250, 257, 258, 293, 299, 323, 325, 326, 342, 369, 405, 412, 449, 483, 565, 602, 605, 610, 624, 676, 679, 681, 691, 701, 711, 726, 758, 789, 791, 795, 801, 814, 818, 855, 862, 863, 864, 890, 916, 944, 955, 956, 960, 978, 979, 980, 981, 987, 998, 1006, 1008, 1013, 1018, 1036, 1047, 1067, 1070, 1075, 1089, 1116], "she": [26, 191, 602, 635, 793, 795, 1000, 1008], "who": [26, 28, 43, 129, 132, 136, 139, 143, 162, 164, 210, 220, 245, 276, 320, 395, 399, 409, 414, 437, 454, 486, 607, 677, 687, 731, 758, 766, 785, 786, 793, 797, 803, 814, 855, 863, 864, 879, 890, 932, 949, 951, 957, 979, 1055, 1073, 1085, 1093, 1113, 1116, 1118], "repetit": [26, 245, 818, 1113], "prone": [26, 344, 532, 542, 562, 635, 679, 746, 934, 1002, 1100, 1113], "possibl": [26, 57, 59, 60, 104, 111, 114, 119, 122, 128, 131, 132, 139, 142, 147, 154, 164, 168, 184, 194, 201, 207, 210, 212, 217, 218, 220, 237, 239, 248, 257, 260, 261, 266, 334, 345, 348, 365, 378, 385, 391, 395, 399, 400, 403, 409, 415, 424, 427, 429, 432, 437, 441, 449, 451, 486, 519, 529, 531, 532, 537, 544, 545, 563, 580, 621, 627, 628, 635, 649, 653, 666, 677, 685, 686, 687, 691, 736, 763, 793, 802, 827, 856, 857, 862, 863, 873, 876, 905, 953, 954, 955, 963, 968, 976, 978, 987, 996, 1001, 1003, 1004, 1006, 1055, 1056, 1068, 1080], "abl": [26, 27, 29, 41, 131, 132, 134, 135, 137, 139, 147, 164, 184, 191, 273, 389, 395, 421, 428, 432, 486, 634, 644, 785, 786, 803, 809, 811, 812, 855, 863, 864, 890, 926, 957, 1071, 1118], "fix": [26, 44, 61, 63, 74, 105, 128, 132, 145, 147, 168, 189, 194, 204, 205, 210, 229, 232, 259, 260, 261, 279, 302, 327, 350, 393, 409, 411, 417, 454, 487, 499, 510, 522, 528, 547, 563, 613, 620, 641, 711, 726, 731, 735, 738, 739, 759, 760, 766, 767, 773, 776, 779, 802, 854, 858, 878, 888, 919, 929, 949, 951, 954, 981, 1013, 1056, 1064], "inconsist": [26, 529, 1082], "easi": [26, 66, 120, 132, 134, 135, 136, 137, 138, 139, 143, 152, 153, 156, 168, 214, 224, 348, 363, 389, 405, 627, 644, 686, 738, 740, 744, 756, 763, 797, 862, 863, 864, 891, 908, 926, 935, 949, 975, 979, 987, 996, 998, 1062, 1093, 1094, 1118], "plain": [26, 134, 194, 313, 505, 541, 544, 623, 676, 691, 761, 863, 954, 967], "happi": [26, 63, 137, 164, 393, 537, 1061], "clear": [26, 41, 132, 134, 139, 151, 184, 194, 223, 303, 304, 370, 395, 399, 414, 424, 430, 436, 543, 598, 631, 649, 686, 758, 766, 794, 797, 818, 878, 952, 967, 987, 989, 1060, 1061, 1095], "front": [26, 76, 129, 139, 164, 220, 266, 399, 580, 699, 1116], "later": [26, 78, 131, 132, 135, 142, 153, 164, 325, 329, 335, 337, 339, 395, 399, 405, 412, 531, 532, 534, 546, 548, 549, 583, 638, 669, 672, 717, 719, 721, 726, 742, 744, 754, 761, 800, 862, 884, 900, 901, 903, 914, 918, 968, 976, 986, 989, 991, 1072, 1078], "menu": [26, 128, 172, 758, 1108], "mine": [27, 131, 132, 135, 143, 160, 164, 168, 320, 519, 758], "hi": [27, 43, 147, 152, 164, 168, 171, 189, 215, 218, 392, 481, 968, 1056], "data": [27, 28, 47, 68, 71, 76, 87, 106, 108, 109, 112, 132, 133, 134, 135, 139, 142, 151, 153, 155, 164, 168, 169, 173, 181, 183, 188, 198, 201, 202, 207, 208, 210, 217, 220, 224, 230, 245, 249, 250, 251, 252, 254, 257, 259, 260, 261, 266, 271, 274, 276, 304, 305, 320, 334, 348, 355, 364, 371, 377, 378, 381, 383, 384, 388, 393, 397, 398, 400, 401, 406, 407, 410, 417, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 492, 494, 503, 527, 528, 530, 534, 537, 550, 553, 555, 556, 567, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 633, 636, 667, 679, 683, 691, 692, 700, 701, 708, 709, 710, 711, 713, 716, 717, 748, 752, 756, 763, 771, 789, 795, 800, 802, 810, 856, 858, 862, 863, 864, 865, 875, 879, 881, 889, 894, 900, 903, 906, 908, 920, 944, 953, 955, 960, 964, 967, 980, 981, 992, 994, 995, 996, 1004, 1015, 1043, 1044, 1054, 1058, 1059, 1060, 1062, 1067, 1068, 1072, 1073, 1077, 1078, 1081, 1083, 1084, 1088, 1093, 1114, 1115, 1129], "convinc": [27, 348], "him": [27, 164, 168, 171, 189, 192, 215, 241, 265, 676, 905, 1056], "wai": [27, 41, 48, 57, 60, 61, 63, 78, 79, 122, 128, 129, 131, 134, 139, 143, 144, 147, 153, 156, 160, 165, 167, 168, 170, 171, 172, 175, 176, 184, 189, 192, 204, 205, 210, 213, 214, 215, 217, 218, 222, 224, 232, 236, 237, 250, 251, 254, 258, 260, 261, 279, 290, 294, 344, 348, 352, 353, 363, 369, 385, 386, 387, 395, 411, 412, 419, 429, 431, 432, 436, 452, 454, 473, 483, 487, 499, 505, 513, 529, 530, 537, 542, 545, 583, 585, 611, 617, 628, 644, 665, 675, 687, 691, 714, 727, 736, 750, 752, 758, 785, 786, 794, 800, 802, 805, 806, 855, 863, 864, 875, 882, 890, 916, 919, 929, 930, 934, 940, 944, 955, 967, 972, 978, 981, 982, 985, 996, 1000, 1001, 1003, 1006, 1008, 1013, 1041, 1056, 1077, 1085, 1093, 1100, 1118], "go": [27, 38, 40, 57, 59, 60, 61, 63, 78, 95, 129, 132, 135, 136, 138, 139, 161, 164, 171, 175, 184, 193, 194, 210, 251, 254, 256, 305, 409, 411, 429, 470, 631, 669, 681, 687, 699, 711, 719, 722, 726, 758, 760, 789, 801, 818, 820, 854, 855, 862, 863, 890, 893, 895, 900, 908, 912, 932, 935, 949, 980, 1014], "relev": [27, 134, 207, 232, 335, 424, 486, 691, 758, 771, 862, 863, 955, 1055, 1074, 1088], "part": [27, 41, 78, 90, 104, 111, 125, 132, 133, 134, 135, 137, 139, 142, 153, 156, 164, 171, 172, 173, 194, 220, 232, 251, 254, 266, 304, 311, 325, 348, 382, 409, 432, 437, 451, 472, 486, 529, 627, 699, 709, 729, 736, 758, 778, 785, 786, 818, 853, 855, 862, 863, 864, 865, 880, 932, 979, 980, 993, 998, 1000, 1046, 1048, 1062, 1063, 1077, 1078, 1080, 1081, 1082, 1083, 1103], "natur": [27, 36, 73, 132, 134, 139, 164, 218, 224, 266, 320, 325, 343, 387, 428, 429, 581, 583, 627, 687, 863, 991], "straighforward": 27, "approach": [27, 33, 36, 131, 132, 171, 275, 327, 411, 415, 416, 424, 685, 711, 797, 863, 916, 918, 1076], "would": [27, 55, 102, 105, 131, 133, 134, 136, 137, 143, 152, 154, 161, 164, 168, 170, 183, 194, 207, 220, 224, 259, 261, 359, 378, 385, 387, 398, 399, 413, 414, 417, 424, 427, 485, 499, 503, 537, 541, 543, 545, 592, 599, 608, 632, 638, 677, 687, 699, 707, 758, 761, 785, 786, 809, 811, 814, 840, 863, 864, 874, 875, 891, 900, 908, 929, 948, 949, 953, 955, 956, 976, 987, 991, 995, 998, 1004, 1008, 1013, 1034, 1061, 1064, 1067, 1077, 1084], "copi": [27, 34, 40, 48, 68, 95, 97, 99, 100, 111, 122, 124, 128, 132, 133, 134, 135, 138, 143, 147, 153, 159, 162, 172, 179, 182, 194, 204, 210, 216, 220, 224, 227, 230, 236, 237, 238, 239, 242, 247, 248, 252, 256, 257, 259, 266, 268, 269, 272, 283, 305, 335, 337, 349, 355, 364, 369, 371, 373, 377, 378, 381, 384, 388, 397, 401, 406, 407, 422, 454, 455, 468, 469, 470, 475, 492, 504, 505, 507, 516, 521, 523, 525, 527, 528, 529, 535, 545, 546, 548, 549, 558, 562, 572, 580, 589, 591, 594, 595, 607, 609, 615, 618, 621, 624, 629, 630, 631, 635, 636, 637, 655, 667, 669, 679, 683, 687, 688, 692, 700, 707, 708, 709, 710, 711, 733, 738, 758, 759, 774, 784, 785, 786, 787, 788, 789, 798, 818, 824, 825, 827, 828, 829, 830, 832, 838, 854, 865, 868, 870, 875, 887, 892, 893, 894, 895, 902, 903, 908, 912, 925, 942, 943, 944, 946, 948, 949, 953, 954, 988, 1003, 1006, 1072, 1076, 1081, 1095, 1100, 1102, 1113, 1125], "dumb": [27, 43, 152, 183, 287, 729, 903, 905], "reason": [27, 59, 119, 134, 147, 153, 164, 193, 212, 299, 382, 389, 391, 393, 399, 402, 415, 427, 546, 548, 549, 583, 627, 670, 689, 726, 742, 754, 758, 809, 811, 908, 916, 917, 930, 944, 949, 987, 996, 998, 1061], "ar": [27, 30, 41, 43, 45, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 66, 76, 78, 79, 87, 104, 106, 107, 108, 109, 116, 119, 125, 126, 129, 131, 134, 135, 136, 138, 139, 142, 143, 147, 148, 149, 152, 153, 154, 156, 160, 162, 164, 168, 169, 170, 171, 172, 173, 184, 191, 192, 193, 194, 201, 204, 205, 207, 208, 210, 211, 213, 215, 216, 217, 218, 220, 224, 228, 232, 237, 239, 241, 248, 250, 251, 254, 256, 257, 258, 259, 261, 266, 269, 274, 278, 287, 288, 289, 293, 299, 302, 304, 305, 307, 308, 324, 326, 327, 329, 332, 334, 335, 337, 339, 342, 343, 346, 347, 348, 354, 357, 360, 365, 366, 369, 373, 375, 376, 378, 379, 380, 385, 386, 387, 389, 390, 393, 396, 399, 402, 409, 410, 412, 414, 417, 418, 423, 424, 427, 428, 429, 439, 449, 451, 454, 473, 476, 483, 484, 485, 486, 487, 490, 494, 499, 503, 513, 519, 522, 529, 530, 531, 532, 534, 537, 538, 541, 542, 543, 545, 552, 555, 562, 563, 564, 567, 577, 583, 584, 589, 592, 599, 601, 602, 604, 605, 609, 615, 616, 617, 618, 622, 628, 630, 631, 632, 635, 638, 639, 640, 644, 649, 666, 669, 670, 675, 676, 677, 679, 681, 685, 686, 687, 688, 690, 691, 693, 696, 698, 702, 709, 711, 713, 714, 717, 727, 729, 731, 736, 742, 744, 746, 750, 752, 754, 756, 758, 763, 777, 784, 785, 786, 789, 791, 793, 794, 796, 797, 798, 800, 801, 803, 804, 809, 811, 818, 819, 821, 831, 836, 840, 842, 845, 855, 856, 862, 863, 864, 865, 871, 873, 875, 878, 880, 881, 884, 885, 892, 898, 900, 901, 903, 905, 906, 908, 911, 917, 918, 919, 920, 925, 929, 930, 932, 933, 934, 935, 938, 940, 944, 946, 947, 949, 950, 951, 953, 955, 956, 958, 960, 964, 967, 968, 969, 970, 974, 976, 979, 980, 983, 984, 985, 986, 987, 989, 992, 996, 1004, 1006, 1007, 1008, 1010, 1018, 1023, 1051, 1055, 1056, 1061, 1062, 1063, 1067, 1068, 1071, 1072, 1073, 1075, 1077, 1078, 1081, 1083, 1084, 1087, 1093, 1095, 1096, 1099, 1100, 1103, 1115, 1116, 1118], "need": [27, 41, 43, 44, 45, 49, 53, 54, 59, 61, 102, 132, 133, 134, 137, 139, 143, 147, 148, 153, 164, 171, 172, 174, 184, 194, 208, 210, 232, 276, 290, 302, 332, 334, 337, 357, 365, 366, 385, 391, 392, 398, 402, 404, 405, 409, 412, 414, 417, 419, 422, 424, 428, 429, 451, 481, 483, 484, 485, 486, 516, 522, 528, 529, 544, 564, 584, 598, 605, 609, 638, 644, 673, 687, 690, 696, 701, 711, 717, 731, 733, 746, 750, 754, 758, 797, 801, 814, 819, 855, 856, 857, 858, 862, 863, 864, 871, 875, 881, 882, 885, 888, 899, 903, 914, 935, 944, 948, 949, 950, 954, 959, 972, 980, 981, 983, 986, 995, 1000, 1011, 1012, 1061, 1062, 1072, 1087, 1095, 1116], "mechan": [27, 30, 87, 119, 132, 133, 156, 164, 168, 179, 194, 248, 427, 605, 905, 926, 964, 1056, 1088, 1113, 1118, 1128], "where": [27, 51, 87, 107, 111, 117, 118, 128, 131, 132, 133, 134, 135, 137, 139, 142, 147, 152, 153, 160, 161, 164, 165, 168, 191, 192, 193, 194, 201, 204, 207, 208, 210, 217, 220, 224, 232, 241, 248, 266, 274, 302, 307, 308, 343, 347, 357, 365, 366, 368, 369, 370, 383, 387, 398, 400, 410, 420, 433, 440, 471, 473, 484, 499, 505, 522, 541, 602, 605, 609, 627, 685, 686, 690, 752, 756, 758, 770, 800, 801, 815, 818, 821, 842, 847, 855, 862, 863, 864, 871, 876, 882, 884, 887, 890, 891, 907, 917, 918, 925, 929, 930, 933, 944, 948, 949, 956, 958, 960, 963, 985, 987, 997, 1038, 1056, 1063, 1071, 1093, 1115, 1118], "could": [27, 48, 55, 108, 109, 111, 128, 129, 132, 133, 137, 139, 143, 153, 162, 164, 170, 184, 193, 194, 204, 214, 220, 248, 258, 260, 261, 279, 320, 348, 392, 413, 415, 428, 429, 453, 486, 537, 545, 609, 621, 627, 640, 641, 649, 664, 674, 689, 712, 729, 758, 771, 797, 815, 863, 864, 871, 882, 888, 925, 987, 1038, 1052, 1071, 1081, 1088, 1100, 1113], "exchang": [27, 76, 161, 204, 409, 437, 453, 483, 637, 638, 729, 802, 920, 1013, 1021], "meta": [27, 37, 124, 139, 758, 770, 818], "retriev": [27, 143, 655, 758, 960, 1008], "check": [27, 28, 36, 86, 95, 102, 117, 131, 132, 134, 135, 136, 137, 138, 143, 147, 152, 164, 168, 172, 176, 201, 207, 210, 217, 220, 224, 248, 261, 287, 310, 313, 335, 350, 359, 361, 362, 367, 375, 382, 386, 394, 396, 412, 476, 477, 499, 510, 522, 529, 537, 544, 545, 562, 583, 621, 637, 638, 649, 686, 709, 711, 731, 733, 738, 758, 774, 775, 777, 854, 855, 862, 863, 885, 890, 896, 899, 903, 933, 934, 939, 942, 944, 951, 980, 985, 998, 1008, 1011, 1015, 1017, 1019, 1035, 1041, 1054, 1088, 1093, 1102, 1113, 1123], "everyth": [27, 40, 41, 96, 111, 125, 132, 138, 139, 156, 164, 168, 172, 183, 191, 209, 210, 238, 247, 248, 251, 254, 268, 269, 313, 320, 337, 357, 360, 385, 399, 405, 409, 470, 528, 529, 531, 538, 542, 547, 552, 602, 644, 673, 677, 693, 700, 709, 710, 711, 727, 736, 756, 760, 763, 788, 791, 792, 794, 795, 819, 840, 854, 855, 856, 862, 863, 864, 881, 883, 884, 895, 908, 909, 915, 917, 920, 930, 952, 958, 963, 967, 1063, 1081, 1126, 1127, 1128, 1130], "clearli": [27, 41, 147, 164, 387, 634, 655, 682, 758, 777, 891, 956, 987, 1008, 1115], "intersphinx": [27, 129], "spinx": 27, "possibli": [28, 75, 83, 132, 164, 411, 545, 621, 635, 644, 649, 664, 676, 686, 698, 699, 803, 840, 863, 911, 946, 1075], "arrang": [28, 82, 108, 109, 136, 486, 691, 791, 851], "subgroup": [28, 33, 36, 505], "refer": [28, 64, 88, 95, 108, 109, 111, 128, 131, 137, 138, 152, 154, 159, 168, 171, 173, 176, 177, 188, 189, 191, 193, 194, 199, 202, 203, 205, 206, 208, 209, 210, 215, 216, 217, 220, 224, 226, 228, 229, 231, 235, 243, 244, 246, 251, 253, 254, 258, 259, 261, 264, 265, 267, 270, 271, 273, 274, 279, 283, 288, 289, 290, 291, 292, 293, 302, 366, 372, 379, 418, 475, 483, 492, 494, 505, 527, 528, 529, 530, 545, 546, 548, 549, 550, 553, 556, 572, 578, 582, 591, 594, 595, 596, 604, 609, 612, 615, 616, 619, 620, 621, 622, 623, 624, 635, 655, 667, 668, 676, 679, 683, 687, 692, 700, 708, 709, 710, 711, 717, 718, 720, 722, 725, 728, 735, 739, 749, 758, 762, 767, 770, 773, 776, 779, 801, 831, 840, 854, 855, 862, 863, 887, 926, 932, 948, 951, 956, 957, 979, 1006, 1007, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1072, 1073, 1093, 1095, 1113, 1114, 1115, 1123], "veri": [28, 33, 35, 36, 131, 132, 134, 153, 164, 168, 171, 173, 184, 189, 192, 215, 218, 241, 265, 313, 320, 341, 348, 358, 359, 379, 395, 396, 398, 404, 411, 414, 429, 516, 527, 540, 555, 573, 601, 630, 631, 669, 672, 675, 686, 689, 758, 763, 768, 796, 797, 856, 861, 863, 864, 881, 882, 898, 903, 918, 932, 960, 968, 984, 987, 991, 992, 998, 1002, 1006, 1011, 1056, 1063, 1067, 1089, 1098, 1105, 1113], "unawar": [28, 147, 164, 171], "simpli": [28, 59, 126, 132, 135, 137, 139, 143, 147, 156, 220, 221, 260, 261, 279, 348, 390, 432, 470, 537, 546, 548, 549, 598, 608, 619, 655, 676, 677, 682, 687, 701, 736, 790, 803, 862, 884, 888, 932, 948, 956], "interest": [28, 133, 134, 147, 153, 164, 172, 302, 414, 429, 955, 957, 1078], "catalog": [28, 1116], "chapter": [28, 40, 184, 193, 201, 207, 217, 220, 221, 505, 818], "subchapt": 28, "cluster_python": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1063, 1066, 1069, 1072, 1073, 1075, 1079, 1087, 1090, 1092, 1097], "cluster_python_swdev": [28, 168, 711, 1009, 1054, 1057, 1058, 1062, 1073, 1075, 1087, 1090, 1092, 1097], "cluster_python_swdev_pytest": [28, 711, 1054, 1087, 1092], "pytest": [28, 208, 218, 221, 229, 232, 241, 250, 258, 260, 265, 276, 279, 310, 411, 711, 1044, 1052, 1053, 1054, 1087], "cluster_python_bas": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "fundament": [28, 57, 60, 71, 88, 155, 164, 167, 168, 169, 171, 173, 176, 178, 183, 186, 189, 192, 195, 205, 211, 215, 223, 226, 288, 289, 290, 291, 292, 293, 302, 320, 321, 409, 439, 711, 736, 957, 964, 965, 966, 967, 971, 990, 999, 1004, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1066, 1069, 1072, 1073, 1079, 1087, 1088], "cluster_python_advanc": [28, 168, 711, 957, 964, 965, 966, 967, 971, 1009, 1012, 1013, 1014, 1015, 1028, 1039, 1042, 1043, 1044, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1066, 1069, 1073, 1075, 1087, 1090, 1092, 1097], "cluster_python_advanced_oo": [28, 168, 711, 957, 964, 965, 966, 967, 971, 1015, 1042, 1043, 1044, 1049, 1051, 1054, 1066, 1073, 1087], "object": [28, 61, 68, 71, 72, 76, 88, 95, 101, 102, 104, 105, 106, 108, 109, 111, 125, 147, 149, 152, 154, 159, 164, 168, 171, 180, 182, 183, 188, 191, 192, 194, 197, 199, 201, 204, 205, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 225, 227, 230, 234, 242, 246, 248, 249, 251, 252, 254, 256, 259, 262, 266, 272, 278, 289, 291, 292, 295, 297, 302, 303, 304, 305, 339, 365, 392, 410, 412, 417, 418, 422, 423, 424, 429, 431, 433, 438, 447, 449, 455, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 492, 494, 499, 505, 519, 527, 528, 530, 532, 535, 536, 538, 540, 541, 546, 548, 549, 550, 552, 553, 556, 572, 578, 582, 583, 584, 591, 594, 595, 598, 599, 604, 605, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 627, 635, 636, 638, 639, 649, 655, 667, 669, 671, 672, 676, 677, 682, 683, 685, 687, 688, 691, 692, 698, 700, 701, 705, 706, 708, 709, 710, 711, 801, 854, 932, 933, 934, 937, 938, 939, 940, 942, 948, 951, 953, 956, 957, 960, 964, 965, 966, 967, 968, 970, 972, 974, 975, 977, 979, 980, 981, 987, 996, 998, 1004, 1005, 1015, 1042, 1043, 1044, 1049, 1051, 1054, 1061, 1064, 1066, 1073, 1078, 1080, 1082, 1083, 1084, 1087, 1093, 1113, 1114, 1116, 1118], "orient": [28, 68, 71, 72, 76, 95, 111, 152, 168, 171, 183, 192, 194, 199, 205, 208, 211, 222, 223, 232, 234, 246, 251, 254, 257, 259, 289, 291, 292, 302, 303, 304, 337, 410, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 492, 494, 527, 528, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 691, 692, 700, 708, 710, 711, 957, 964, 965, 966, 967, 981, 1015, 1042, 1043, 1044, 1049, 1051, 1054, 1066, 1073, 1087, 1093, 1114, 1116], "cluster_python_advanced_multithread": [28, 711, 957, 964, 965, 966, 967, 1054], "cluster_python_misc": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1009, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1063, 1066, 1072, 1073, 1075, 1079, 1087, 1090, 1097], "cluster_python_misc_ai": [28, 168, 711, 1054, 1057, 1058, 1062, 1063, 1073], "machin": [28, 100, 108, 109, 111, 124, 134, 139, 153, 168, 184, 191, 192, 201, 202, 205, 207, 217, 220, 274, 279, 301, 305, 325, 341, 343, 351, 359, 387, 391, 405, 486, 487, 711, 758, 785, 786, 791, 794, 797, 847, 854, 868, 869, 870, 871, 873, 874, 875, 917, 932, 935, 942, 956, 1054, 1058, 1062, 1073, 1086, 1115], "artifici": [28, 168, 193, 251, 279, 387, 621, 711, 875, 948, 1054, 1058, 1062, 1063, 1073], "intellig": [28, 132, 168, 208, 244, 251, 254, 264, 270, 279, 308, 711, 729, 953, 957, 1054, 1058, 1062, 1063, 1073], "cluster_python_misc_panda": [28, 711, 1054, 1073, 1079], "panda": [28, 153, 164, 183, 189, 202, 215, 229, 232, 250, 253, 265, 279, 320, 411, 711, 980, 1054, 1056, 1059, 1062, 1073], "cluster_python_draft": [28, 711, 1009, 1054], "cluster_python_exercis": [28, 189, 302, 711, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "cluster_python_exercises_userdb": [28, 711, 1015, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "databas": [28, 40, 41, 53, 76, 129, 151, 152, 171, 193, 199, 204, 205, 208, 210, 211, 214, 218, 232, 260, 261, 279, 293, 429, 430, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 711, 814, 845, 866, 974, 1013, 1015, 1034, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1073, 1077, 1089, 1105], "seri": [28, 98, 133, 204, 208, 249, 250, 251, 252, 254, 256, 258, 389, 410, 439, 711, 867, 981, 1013, 1015, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1061, 1073, 1078, 1079, 1080, 1082, 1083, 1128], "cluster_python_exercises_legaci": [28, 189, 302, 711, 1015, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054], "legaci": [28, 128, 189, 302, 432, 711, 1015, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054, 1108], "cluster_python_exercises_csv": [28, 711, 1012, 1013, 1014, 1015, 1054], "csv": [28, 42, 49, 51, 52, 53, 54, 76, 104, 168, 171, 180, 183, 189, 193, 194, 197, 199, 201, 202, 205, 206, 208, 212, 215, 218, 220, 226, 227, 230, 245, 249, 250, 252, 255, 256, 260, 261, 267, 272, 276, 279, 410, 711, 800, 803, 818, 840, 968, 971, 974, 1008, 1015, 1049, 1050, 1051, 1052, 1054, 1056, 1059, 1060, 1061, 1062, 1073], "cluster_python_exercises_herdt": [28, 711, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1054], "cluster_python_exercises_sensor": [28, 711, 1015, 1042, 1043, 1044, 1054], "sensor": [28, 67, 70, 71, 72, 76, 79, 82, 95, 104, 107, 111, 112, 159, 168, 172, 208, 229, 240, 248, 257, 260, 261, 276, 279, 302, 306, 308, 426, 431, 433, 441, 447, 448, 451, 452, 456, 462, 465, 471, 475, 476, 477, 478, 479, 480, 481, 492, 495, 496, 497, 498, 499, 500, 501, 502, 527, 535, 600, 637, 686, 687, 688, 711, 758, 854, 861, 893, 895, 912, 968, 1015, 1043, 1054, 1124], "And": [28, 95, 97, 100, 101, 102, 104, 111, 112, 132, 133, 134, 136, 139, 162, 168, 171, 191, 194, 199, 201, 210, 212, 221, 229, 236, 237, 238, 240, 241, 243, 244, 246, 247, 250, 254, 264, 265, 267, 268, 270, 275, 410, 416, 422, 426, 433, 435, 447, 461, 475, 476, 477, 478, 479, 480, 481, 482, 485, 488, 492, 504, 505, 527, 535, 557, 565, 570, 580, 583, 591, 595, 624, 636, 667, 668, 669, 678, 683, 690, 692, 700, 708, 709, 710, 711, 781, 787, 788, 791, 792, 796, 800, 808, 810, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 838, 848, 854, 861, 868, 870, 877, 883, 885, 890, 893, 895, 899, 909, 912, 915, 917, 920, 932, 934, 936, 937, 938, 939, 940, 943, 955, 957, 962, 965, 966, 967, 971, 972, 996, 1012, 1013, 1014, 1015, 1028, 1039, 1049, 1050, 1051, 1054, 1066, 1069, 1073, 1079, 1087, 1113], "acquisit": [28, 132, 159, 260, 261, 276, 279, 519, 711, 1011, 1015, 1043, 1044, 1054], "cluster_python_db": [28, 711, 1012, 1014, 1015, 1054, 1069], "python_python_5550_xml_etre": [28, 711, 1054], "xml": [28, 128, 129, 711, 1054, 1073], "elementtre": [28, 232, 711, 1054, 1073], "etre": [28, 232, 711, 1054, 1073], "python_basics_python_0220_for": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1012, 1013, 1014, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1073], "loop": [28, 30, 32, 36, 40, 57, 60, 87, 88, 95, 108, 109, 111, 112, 120, 125, 132, 147, 156, 168, 171, 173, 176, 177, 178, 181, 189, 191, 192, 193, 195, 199, 202, 205, 210, 211, 213, 215, 216, 221, 223, 225, 226, 228, 229, 231, 241, 244, 251, 254, 261, 264, 265, 270, 271, 288, 289, 290, 291, 292, 293, 294, 302, 307, 325, 328, 331, 340, 343, 355, 362, 363, 364, 371, 377, 381, 384, 385, 388, 389, 397, 401, 406, 407, 474, 475, 516, 527, 558, 563, 620, 627, 629, 655, 667, 690, 701, 708, 710, 711, 746, 756, 761, 775, 789, 791, 795, 802, 858, 880, 881, 882, 890, 916, 920, 926, 929, 930, 957, 958, 961, 962, 967, 979, 1012, 1013, 1014, 1015, 1017, 1019, 1025, 1027, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1066, 1069, 1073, 1075, 1112, 1113, 1114, 1123], "gt": [28, 30, 33, 34, 51, 53, 54, 70, 71, 72, 85, 88, 121, 151, 154, 165, 168, 170, 175, 182, 188, 189, 191, 196, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 288, 289, 290, 291, 292, 293, 296, 297, 302, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 416, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 643, 667, 668, 678, 683, 692, 700, 708, 710, 711, 715, 718, 720, 723, 725, 728, 730, 734, 735, 737, 739, 741, 743, 749, 751, 753, 755, 762, 764, 767, 769, 773, 776, 779, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 861, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 897, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1066, 1069, 1072, 1073, 1075, 1079, 1087, 1090, 1092, 1097, 1098], "python_basics_python_0450_dictionari": [28, 88, 711, 957, 979, 1015, 1028, 1039, 1054], "python_advanced_modul": [28, 168, 711, 957, 1009, 1012, 1013, 1014, 1015, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1069, 1073, 1075, 1087, 1090, 1092, 1097], "python_swdev_venv": [28, 168, 711, 1009, 1054, 1057, 1058, 1062, 1073, 1075, 1087, 1097], "python_swdev_pip": [28, 168, 711, 1009, 1054, 1057, 1058, 1062, 1073, 1075, 1087, 1090, 1097], "python_misc_import": [28, 168, 711, 1009, 1054, 1057, 1058, 1062, 1073, 1075, 1087, 1090, 1097], "statement": [28, 52, 88, 108, 109, 152, 164, 168, 169, 170, 171, 176, 178, 183, 189, 192, 193, 195, 199, 202, 205, 211, 215, 221, 223, 226, 229, 235, 241, 244, 251, 254, 258, 260, 261, 264, 265, 270, 271, 276, 279, 288, 289, 290, 291, 292, 293, 302, 307, 324, 327, 331, 344, 357, 359, 360, 363, 364, 369, 371, 377, 381, 384, 388, 391, 397, 401, 406, 407, 583, 609, 628, 629, 667, 708, 710, 711, 719, 791, 831, 917, 938, 952, 955, 957, 958, 963, 967, 969, 979, 986, 989, 991, 998, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1058, 1062, 1069, 1073, 1075, 1087, 1090, 1093, 1097, 1123], "incomplet": [28, 162, 168, 201, 207, 217, 220, 224, 420, 527, 602, 711, 861, 1009, 1054, 1057, 1058, 1062, 1073, 1075, 1087, 1090, 1097, 1098], "python_swdev_unittest": [28, 711, 1054, 1087], "unittest": [28, 63, 111, 128, 129, 145, 148, 159, 161, 164, 167, 168, 178, 181, 192, 194, 199, 241, 250, 261, 292, 302, 310, 311, 320, 321, 709, 711, 998, 1054, 1056, 1087, 1098], "python_advanced_oo_inherit": [28, 168, 711, 957, 964, 965, 966, 967, 971, 1054, 1066, 1073, 1087], "inherit": [28, 63, 67, 71, 104, 112, 149, 159, 168, 192, 205, 218, 222, 224, 257, 258, 259, 260, 261, 265, 279, 311, 433, 447, 475, 483, 485, 525, 527, 528, 552, 601, 604, 624, 666, 711, 750, 790, 793, 796, 817, 819, 926, 955, 957, 965, 966, 967, 968, 971, 973, 976, 1054, 1066, 1073, 1086, 1087, 1129], "python_swdev_pytest_intro": [28, 711, 1054, 1087, 1092], "introduct": [28, 70, 71, 72, 76, 95, 96, 97, 104, 111, 145, 148, 193, 194, 208, 210, 218, 221, 229, 232, 238, 240, 241, 247, 248, 250, 257, 260, 261, 265, 268, 276, 279, 301, 306, 310, 319, 321, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 629, 636, 648, 655, 667, 683, 692, 700, 710, 711, 712, 760, 781, 785, 786, 787, 788, 791, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 853, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 898, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 979, 1052, 1053, 1054, 1063, 1087, 1092, 1114, 1128], "By": [28, 49, 51, 132, 134, 139, 143, 147, 159, 165, 201, 207, 208, 210, 217, 218, 220, 221, 225, 229, 232, 236, 237, 239, 241, 250, 258, 260, 261, 265, 276, 279, 283, 310, 342, 369, 392, 395, 612, 613, 615, 616, 619, 621, 623, 624, 667, 668, 708, 710, 711, 727, 800, 849, 862, 898, 917, 933, 944, 968, 975, 1052, 1053, 1054, 1063, 1087, 1092], "python_basics_instal": [28, 88, 168, 711, 979, 1054], "python_basics_python_0225_rang": [28, 88, 168, 189, 711, 957, 979, 1012, 1013, 1014, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1066, 1069, 1073], "python_basics_python_0200_sequential_typ": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1012, 1013, 1014, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079], "sequenti": [28, 61, 88, 104, 106, 168, 169, 171, 173, 176, 177, 178, 181, 189, 194, 199, 202, 205, 210, 211, 213, 215, 223, 225, 226, 229, 233, 241, 244, 251, 254, 257, 259, 261, 262, 264, 265, 270, 271, 279, 288, 289, 290, 291, 292, 293, 302, 307, 400, 475, 488, 492, 527, 562, 572, 580, 591, 595, 624, 711, 862, 864, 894, 957, 962, 979, 1012, 1013, 1014, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1123], "python_basics_python_0210_indexing_sl": [28, 88, 711, 979, 1015, 1028, 1039, 1054, 1073, 1079], "python_basics_python_0400_list": [28, 88, 711, 979, 1054], "python_basics_python_0150_datatypes_overview_compound": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 1012, 1013, 1014, 1015, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "python_basics_python_0500_fil": [28, 88, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073], "python_misc_encod": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1073], "encod": [28, 41, 88, 151, 168, 169, 171, 173, 189, 192, 199, 201, 204, 207, 208, 211, 217, 218, 220, 226, 228, 231, 245, 249, 250, 252, 265, 266, 273, 287, 288, 289, 290, 291, 292, 293, 307, 411, 711, 957, 979, 987, 992, 1006, 1013, 1014, 1015, 1025, 1028, 1036, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1067, 1073, 1075], "python_basics_python_0160_boolean": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 990, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1073], "boolean": [28, 56, 82, 88, 152, 153, 168, 169, 171, 173, 176, 177, 178, 189, 195, 199, 202, 203, 205, 206, 207, 211, 213, 215, 216, 221, 222, 223, 225, 226, 228, 229, 244, 251, 254, 264, 265, 270, 271, 288, 289, 290, 291, 292, 293, 302, 307, 331, 354, 370, 711, 905, 957, 979, 987, 990, 991, 1002, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1071, 1073, 1123], "python_basics_python_0150_datatypes_overview": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "python_basics_python_0460_set": [28, 88, 711, 979, 1054], "python_basics_python_0310_strings_format": [28, 88, 189, 711, 979, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1054], "python_basics_python_0300_str": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1073], "python_basics_python_0130_syntax_etc": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "syntax": [28, 66, 88, 125, 155, 164, 168, 171, 172, 174, 176, 177, 178, 183, 189, 190, 195, 199, 202, 205, 211, 212, 215, 217, 221, 222, 223, 226, 229, 231, 242, 244, 251, 253, 254, 264, 265, 267, 270, 271, 283, 288, 289, 290, 291, 292, 293, 302, 449, 528, 529, 632, 649, 676, 689, 711, 846, 952, 954, 955, 956, 957, 964, 965, 966, 967, 971, 979, 981, 990, 998, 999, 1001, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087, 1113, 1123], "python_basics_python_0120_helloworld": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "world": [28, 76, 88, 125, 128, 129, 132, 137, 143, 162, 168, 171, 175, 176, 178, 182, 189, 193, 195, 197, 199, 201, 202, 205, 207, 210, 211, 212, 214, 215, 221, 222, 223, 224, 226, 227, 229, 232, 244, 245, 251, 254, 264, 265, 270, 271, 288, 289, 290, 291, 292, 293, 297, 302, 335, 340, 344, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 412, 417, 425, 448, 453, 455, 626, 629, 667, 693, 701, 708, 710, 711, 715, 718, 720, 723, 725, 728, 735, 739, 743, 749, 755, 760, 762, 767, 770, 773, 776, 779, 796, 809, 821, 854, 892, 903, 918, 919, 932, 944, 946, 948, 949, 950, 957, 964, 965, 966, 967, 971, 979, 983, 984, 990, 993, 995, 999, 1000, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1066, 1069, 1072, 1073, 1079, 1087, 1109, 1113, 1123], "python_basics_python_0193_whil": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1012, 1013, 1014, 1015, 1017, 1019, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1073], "python_basics_python_1000_function_object": [28, 88, 711, 979, 1054], "python_basics_python_0270_funct": [28, 88, 168, 189, 711, 957, 979, 999, 1012, 1013, 1014, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1073], "python_basics_python_0250_refs_flat_deep_copi": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1073], "mutabl": [28, 88, 164, 168, 169, 171, 173, 176, 177, 183, 189, 190, 199, 202, 203, 205, 206, 207, 208, 213, 215, 216, 219, 222, 226, 228, 229, 231, 234, 244, 246, 251, 253, 254, 258, 260, 261, 263, 264, 265, 267, 270, 271, 273, 279, 288, 289, 290, 291, 292, 293, 302, 677, 711, 957, 979, 988, 992, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1073, 1123], "python_basics_python_0170_if": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 990, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1073], "python_basics_python_0140_vari": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "python_basics_python_0139_commandline_argv": [28, 88, 189, 302, 711, 979, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "argument": [28, 55, 61, 88, 95, 111, 125, 131, 134, 137, 151, 152, 165, 168, 180, 189, 192, 199, 201, 205, 207, 208, 210, 211, 213, 215, 217, 218, 221, 222, 223, 224, 226, 229, 244, 245, 248, 251, 254, 258, 260, 261, 264, 265, 266, 270, 271, 279, 302, 324, 325, 370, 377, 381, 384, 388, 397, 401, 406, 407, 411, 473, 505, 529, 539, 540, 629, 644, 664, 667, 677, 689, 708, 709, 710, 711, 716, 717, 818, 840, 854, 888, 890, 892, 895, 912, 950, 953, 957, 979, 981, 982, 999, 1007, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1064, 1066, 1070, 1073, 1086, 1093, 1095], "sy": [28, 30, 88, 133, 150, 152, 154, 155, 180, 182, 183, 189, 192, 198, 201, 205, 207, 212, 215, 217, 220, 221, 223, 224, 226, 227, 229, 242, 244, 245, 250, 251, 254, 260, 264, 265, 266, 270, 271, 279, 287, 288, 295, 302, 398, 411, 470, 486, 487, 711, 713, 717, 738, 815, 844, 855, 862, 863, 864, 880, 881, 882, 884, 888, 889, 890, 891, 892, 894, 896, 898, 899, 913, 920, 922, 925, 929, 946, 956, 963, 978, 979, 998, 1006, 1008, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1084, 1086, 1093, 1108], "argv": [28, 40, 48, 88, 134, 151, 152, 155, 165, 183, 189, 192, 193, 198, 201, 205, 207, 210, 211, 215, 217, 220, 221, 223, 226, 229, 244, 250, 251, 254, 260, 264, 265, 270, 271, 279, 287, 295, 302, 376, 411, 412, 434, 473, 711, 862, 888, 889, 890, 891, 892, 896, 899, 913, 920, 929, 950, 956, 963, 979, 1008, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1100, 1105], "python_basics_python_0125_run": [28, 88, 189, 302, 711, 979, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "run": [28, 40, 57, 60, 61, 88, 95, 106, 108, 109, 122, 125, 128, 131, 132, 133, 134, 135, 138, 139, 142, 143, 151, 163, 164, 171, 172, 184, 189, 193, 194, 199, 204, 212, 220, 221, 224, 227, 230, 232, 237, 244, 245, 248, 251, 252, 254, 262, 264, 265, 266, 270, 271, 275, 287, 302, 305, 327, 345, 387, 390, 398, 399, 403, 404, 416, 417, 429, 434, 453, 454, 455, 483, 485, 486, 487, 509, 536, 549, 558, 570, 627, 685, 686, 709, 711, 731, 746, 756, 758, 759, 768, 791, 793, 795, 796, 797, 798, 814, 815, 818, 819, 849, 862, 863, 864, 865, 873, 875, 883, 885, 901, 914, 916, 917, 918, 920, 925, 930, 932, 935, 940, 942, 944, 948, 953, 964, 967, 979, 980, 982, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1058, 1075, 1088, 1094, 1099, 1100, 1105, 1118], "python_basics_python_0320_strings_method": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 979, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1072, 1073], "method": [28, 40, 41, 52, 53, 55, 61, 63, 67, 68, 71, 88, 95, 104, 105, 108, 109, 112, 137, 168, 169, 170, 171, 173, 176, 189, 190, 192, 194, 199, 202, 203, 205, 210, 211, 213, 215, 216, 218, 219, 221, 222, 223, 224, 226, 229, 231, 241, 244, 246, 250, 251, 254, 256, 258, 259, 260, 261, 264, 265, 267, 270, 271, 273, 276, 279, 288, 289, 290, 291, 292, 293, 302, 306, 307, 383, 409, 429, 431, 433, 437, 447, 454, 455, 473, 475, 480, 485, 486, 487, 492, 494, 499, 505, 518, 520, 527, 528, 529, 532, 541, 553, 555, 556, 572, 578, 582, 588, 591, 594, 595, 598, 599, 600, 601, 604, 609, 610, 612, 615, 616, 619, 620, 621, 622, 623, 624, 627, 636, 649, 666, 667, 670, 674, 683, 691, 692, 700, 701, 705, 706, 708, 709, 710, 711, 719, 721, 726, 727, 736, 738, 748, 760, 771, 903, 953, 954, 957, 960, 964, 968, 969, 970, 971, 972, 976, 979, 984, 993, 996, 1013, 1014, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1061, 1068, 1072, 1073, 1078, 1081, 1083, 1086, 1116, 1123, 1130], "python_basics_python_0110_blahblah": [28, 88, 168, 189, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087], "blahblah": [28, 88, 168, 171, 176, 178, 189, 195, 199, 202, 205, 211, 215, 221, 222, 223, 225, 226, 228, 229, 231, 244, 251, 254, 264, 265, 270, 271, 288, 289, 290, 291, 292, 293, 302, 711, 957, 964, 965, 966, 967, 971, 979, 990, 999, 1009, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1066, 1069, 1072, 1073, 1079, 1087, 1123], "python_advanced_exec": [28, 711, 957, 1054], "python_advanced_decor": [28, 168, 711, 957, 1054, 1066, 1073], "decor": [28, 57, 60, 152, 164, 167, 168, 183, 192, 208, 218, 232, 426, 433, 447, 461, 475, 527, 711, 953, 957, 968, 975, 976, 978, 999, 1054, 1056, 1066, 1073, 1093, 1116], "python_advanced_closur": [28, 168, 711, 957, 1054, 1066, 1073], "closur": [28, 57, 60, 61, 151, 164, 168, 176, 177, 192, 205, 208, 218, 251, 254, 671, 711, 954, 957, 997, 999, 1054, 1066, 1073, 1123], "python_advanced_stararg": [28, 168, 711, 957, 1054, 1066, 1073], "keyword": [28, 37, 61, 116, 127, 165, 168, 169, 170, 171, 173, 192, 194, 208, 213, 218, 220, 241, 244, 245, 251, 254, 258, 260, 261, 264, 266, 270, 276, 279, 302, 369, 399, 542, 543, 545, 563, 614, 674, 711, 907, 953, 954, 955, 957, 981, 997, 999, 1011, 1054, 1066, 1070, 1073, 1110, 1112], "python_advanced_python_1010_generators_yield": [28, 168, 711, 957, 1012, 1013, 1014, 1015, 1028, 1039, 1054, 1066, 1069, 1073], "python_advanced_comprehens": [28, 711, 957, 1054], "comprehens": [28, 61, 66, 152, 153, 165, 168, 171, 177, 191, 192, 193, 200, 205, 206, 208, 209, 210, 213, 216, 222, 225, 241, 244, 246, 253, 258, 264, 265, 270, 271, 279, 672, 711, 729, 746, 754, 957, 962, 1054, 1078], "python_advanced_except": [28, 168, 711, 957, 1054, 1066, 1073], "python_advanced_context_mgr": [28, 711, 957, 1054], "python_advanced_iteration_gener": [28, 711, 957, 1054], "python_advanced_oo_classes_and_dict": [28, 168, 711, 957, 964, 965, 966, 967, 971, 1015, 1042, 1043, 1044, 1049, 1051, 1054, 1066, 1073, 1087], "python_advanced_oo_constructor": [28, 168, 711, 957, 964, 965, 966, 967, 971, 1054, 1066, 1073, 1087], "constructor": [28, 41, 51, 54, 68, 95, 108, 109, 111, 112, 159, 165, 168, 171, 191, 192, 194, 205, 210, 218, 222, 241, 244, 246, 251, 254, 257, 258, 259, 260, 261, 262, 264, 265, 270, 276, 279, 304, 305, 306, 379, 433, 447, 473, 475, 478, 481, 485, 486, 505, 514, 520, 527, 528, 529, 535, 552, 583, 599, 600, 609, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 627, 635, 636, 637, 639, 665, 667, 683, 686, 687, 688, 692, 697, 698, 699, 700, 701, 708, 710, 711, 717, 719, 750, 903, 957, 964, 965, 966, 967, 969, 971, 972, 973, 987, 1054, 1066, 1073, 1086, 1087, 1093, 1105, 1113], "python_advanced_oo_abc": [28, 711, 957, 971, 1054], "abstract": [28, 76, 82, 168, 208, 240, 257, 258, 259, 260, 261, 279, 306, 370, 409, 411, 426, 433, 437, 439, 441, 447, 449, 461, 475, 485, 527, 562, 601, 602, 679, 711, 791, 795, 864, 879, 957, 971, 1054, 1116, 1118], "abc": [28, 30, 151, 165, 168, 170, 175, 180, 182, 188, 191, 193, 197, 201, 204, 207, 208, 212, 214, 217, 220, 224, 227, 230, 233, 241, 242, 245, 252, 258, 260, 261, 262, 266, 272, 276, 279, 289, 297, 411, 485, 554, 575, 592, 594, 711, 957, 971, 987, 1054], "duck": [28, 30, 128, 167, 168, 218, 222, 241, 258, 260, 261, 265, 279, 426, 485, 711, 957, 964, 971, 1054, 1056, 1061, 1113], "python_advanced_oo_operator_overload": [28, 168, 711, 957, 971, 1054], "overload": [28, 95, 151, 159, 168, 194, 222, 257, 258, 259, 260, 261, 279, 283, 395, 475, 483, 492, 494, 527, 529, 550, 553, 554, 556, 562, 572, 578, 582, 583, 591, 594, 595, 609, 610, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 635, 636, 640, 667, 683, 692, 700, 708, 710, 711, 717, 957, 971, 1054, 1112], "python_advanced_oo_namedtupl": [28, 711, 957, 971, 1015, 1049, 1051, 1054], "namedtupl": [28, 168, 176, 183, 198, 199, 201, 207, 217, 220, 241, 258, 260, 261, 265, 276, 279, 711, 957, 971, 1015, 1049, 1051, 1054, 1077, 1123], "python_advanced_oo_properti": [28, 711, 957, 971, 1054], "properti": [28, 38, 152, 168, 192, 205, 222, 224, 241, 245, 258, 260, 261, 265, 275, 276, 279, 306, 415, 416, 417, 422, 425, 711, 957, 971, 1054, 1086, 1099, 1102], "python_advanced_oo_str_repr": [28, 711, 957, 971, 1054], "str": [28, 151, 154, 165, 175, 180, 182, 183, 188, 191, 193, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 241, 242, 244, 245, 249, 250, 251, 252, 254, 256, 258, 260, 261, 262, 264, 265, 266, 270, 272, 276, 277, 279, 287, 293, 296, 297, 298, 302, 375, 393, 411, 460, 465, 546, 547, 548, 549, 664, 676, 711, 955, 957, 969, 971, 972, 975, 984, 986, 987, 998, 1002, 1006, 1013, 1021, 1023, 1054, 1064, 1072, 1078, 1083, 1084], "repr": [28, 182, 201, 207, 217, 220, 224, 227, 230, 241, 244, 245, 251, 254, 258, 260, 261, 264, 265, 266, 270, 276, 277, 279, 711, 955, 957, 971, 972, 1054], "python_advanced_oo_method": [28, 711, 957, 971, 1015, 1042, 1043, 1044, 1054], "python_advanced_multithreading_mutex": [28, 711, 957, 965, 966, 967, 1054], "race": [28, 70, 71, 72, 76, 85, 132, 150, 210, 236, 237, 239, 248, 259, 260, 261, 279, 283, 310, 311, 317, 386, 396, 505, 677, 693, 700, 710, 711, 735, 739, 760, 762, 767, 771, 773, 776, 779, 854, 884, 894, 895, 900, 908, 909, 915, 957, 965, 967, 1054, 1118, 1128, 1129], "condit": [28, 70, 71, 72, 76, 85, 87, 132, 143, 150, 191, 210, 230, 236, 237, 239, 248, 259, 260, 261, 279, 283, 310, 311, 317, 325, 327, 331, 354, 355, 357, 358, 360, 362, 364, 371, 377, 381, 384, 386, 388, 396, 397, 401, 406, 407, 414, 419, 420, 421, 505, 522, 611, 629, 667, 677, 687, 693, 700, 701, 708, 710, 711, 735, 739, 760, 762, 767, 771, 773, 775, 776, 779, 854, 884, 890, 894, 895, 900, 908, 909, 911, 915, 957, 965, 967, 990, 991, 1006, 1054, 1060, 1078, 1118, 1128, 1129], "mutex": [28, 70, 71, 72, 74, 76, 85, 87, 150, 179, 210, 235, 236, 237, 239, 248, 259, 260, 261, 279, 283, 310, 311, 317, 505, 694, 696, 698, 699, 700, 710, 711, 735, 739, 756, 760, 761, 762, 767, 773, 776, 777, 779, 854, 895, 900, 905, 908, 909, 957, 965, 967, 1054, 1113, 1118, 1129], "python_advanced_multithreading_bas": [28, 711, 957, 964, 965, 966, 967, 1054], "python_advanced_multithreading_exam_quest": [28, 711, 957, 965, 967, 1054], "exam": [28, 94, 95, 104, 193, 209, 215, 238, 247, 268, 304, 316, 711, 788, 854, 895, 915, 957, 965, 1054, 1055], "python_misc_context_manag": [28, 168, 711, 1054, 1066, 1073], "python_misc_csv": [28, 711, 1013, 1014, 1015, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073], "python_misc_vscod": [28, 711, 1054, 1073], "visual": [28, 76, 102, 159, 164, 168, 169, 171, 173, 184, 193, 194, 199, 202, 215, 221, 229, 232, 244, 248, 251, 254, 258, 264, 265, 270, 271, 302, 307, 322, 711, 797, 863, 934, 980, 1013, 1054, 1073], "studio": [28, 102, 159, 164, 168, 169, 171, 173, 184, 193, 194, 199, 202, 215, 221, 229, 244, 248, 251, 254, 258, 264, 265, 270, 271, 302, 307, 322, 711, 797, 980, 1054, 1073], "python_misc_mqtt": [28, 711, 1054, 1073, 1075], "mqtt": [28, 181, 183, 197, 199, 208, 221, 222, 226, 260, 261, 276, 279, 308, 311, 313, 711, 971, 1011, 1015, 1049, 1052, 1054, 1073], "python_misc_ai_machine_learning_intro": [28, 168, 711, 1054, 1057, 1058, 1062, 1063, 1073], "concept": [28, 76, 95, 96, 97, 111, 132, 142, 156, 164, 168, 170, 172, 174, 184, 235, 238, 247, 248, 251, 268, 279, 304, 305, 320, 323, 370, 393, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 569, 626, 667, 677, 700, 710, 711, 781, 785, 786, 787, 788, 791, 797, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 899, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 986, 994, 1004, 1054, 1057, 1058, 1062, 1072, 1073, 1075, 1128], "terminologi": [28, 96, 97, 111, 138, 156, 168, 203, 238, 247, 248, 251, 268, 279, 360, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 542, 700, 710, 711, 781, 785, 786, 787, 788, 791, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 847, 848, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 909, 912, 915, 916, 917, 931, 934, 936, 937, 938, 939, 940, 941, 942, 943, 1054, 1057, 1058, 1062, 1073, 1131], "python_misc_ai_linear_regress": [28, 168, 711, 1054, 1057, 1058, 1062, 1073], "linear": [28, 153, 155, 165, 168, 170, 188, 196, 251, 279, 378, 400, 552, 677, 711, 794, 863, 929, 991, 1054, 1057, 1058, 1063, 1073], "regress": [28, 168, 220, 251, 279, 711, 1054, 1057, 1058, 1063, 1073], "python_misc_ai_k_mean": [28, 168, 711, 1054, 1057, 1058, 1073], "python_misc_pandas_mod_col": [28, 711, 1054, 1073, 1079], "ad": [28, 30, 31, 37, 83, 138, 142, 143, 144, 147, 152, 172, 184, 194, 250, 251, 254, 258, 299, 350, 369, 391, 418, 428, 432, 437, 546, 548, 549, 584, 638, 674, 711, 727, 862, 864, 914, 918, 919, 954, 972, 987, 1006, 1054, 1073, 1079, 1080, 1084, 1094], "modifi": [28, 40, 73, 86, 108, 109, 134, 139, 147, 150, 152, 172, 191, 248, 250, 251, 254, 258, 259, 260, 261, 279, 313, 328, 330, 336, 373, 385, 392, 409, 411, 413, 422, 432, 434, 437, 453, 454, 474, 483, 486, 487, 489, 490, 491, 503, 516, 519, 529, 536, 539, 540, 542, 545, 557, 609, 613, 615, 618, 621, 635, 649, 672, 677, 689, 700, 702, 705, 706, 709, 710, 711, 731, 746, 766, 785, 786, 798, 803, 854, 867, 871, 876, 895, 903, 909, 947, 948, 954, 956, 967, 988, 1031, 1035, 1053, 1054, 1073, 1079, 1081, 1125, 1129], "column": [28, 61, 125, 134, 137, 152, 155, 201, 220, 249, 250, 251, 252, 254, 258, 400, 411, 711, 798, 803, 814, 1013, 1025, 1037, 1054, 1061, 1067, 1073, 1079], "python_misc_pandas_bas": [28, 711, 1054, 1073, 1079], "datafram": [28, 250, 251, 252, 254, 258, 261, 411, 711, 1054, 1059, 1062, 1073, 1076, 1078, 1079, 1080, 1082, 1083], "python_misc_pandas_add_row": [28, 711, 1054, 1073, 1079], "row": [28, 133, 155, 171, 191, 204, 208, 210, 212, 224, 249, 250, 251, 254, 258, 271, 358, 400, 711, 798, 903, 955, 974, 994, 1013, 1045, 1047, 1054, 1061, 1067, 1071, 1073, 1077, 1078, 1079, 1083], "python_misc_pandas_loc": [28, 711, 1054, 1073, 1079], "select": [28, 61, 131, 132, 134, 138, 191, 196, 204, 221, 251, 254, 348, 370, 711, 758, 802, 859, 864, 898, 899, 918, 921, 923, 926, 946, 1013, 1054, 1059, 1071, 1073, 1079, 1081, 1093, 1101, 1128, 1130], "With": [28, 115, 120, 133, 139, 159, 220, 229, 248, 250, 251, 254, 259, 266, 274, 276, 319, 360, 389, 405, 415, 425, 426, 435, 447, 461, 475, 527, 636, 667, 710, 711, 712, 758, 787, 788, 854, 861, 862, 893, 895, 912, 930, 933, 944, 975, 979, 1054, 1073, 1077, 1079, 1081, 1089, 1113, 1115, 1116, 1118], "loc": [28, 152, 245, 249, 250, 251, 252, 254, 256, 258, 386, 711, 903, 966, 1054, 1073, 1076, 1077, 1078, 1079, 1080], "python_misc_pandas_iloc": [28, 711, 1054, 1073, 1079], "iloc": [28, 251, 252, 254, 256, 258, 411, 711, 1054, 1073, 1077, 1079, 1082], "python_misc_pandas_index": [28, 711, 1054, 1073, 1079], "python_misc_pandas_filt": [28, 711, 1054, 1073, 1079], "python_drafts_setuptool": [28, 711, 1009, 1054], "setuptool": [28, 59, 128, 241, 276, 711, 1009, 1054, 1095], "python_drafts_matplotlib": [28, 711, 1009, 1054], "matplotlib": [28, 164, 183, 202, 203, 215, 229, 230, 232, 234, 265, 311, 711, 952, 1009, 1054, 1056, 1062], "python_drafts_argpars": [28, 711, 1009, 1054], "pars": [28, 151, 188, 189, 199, 200, 202, 205, 211, 215, 220, 221, 223, 229, 232, 260, 265, 279, 288, 293, 306, 711, 1009, 1015, 1028, 1039, 1054, 1056, 1084], "argpars": [28, 208, 229, 260, 279, 288, 711, 1009, 1054], "python_exercises_userdb_csvdictreader_funct": [28, 711, 1015, 1046, 1049, 1050, 1051, 1052, 1053, 1054], "refactor": [28, 41, 53, 129, 218, 221, 226, 229, 241, 244, 260, 264, 265, 270, 271, 370, 410, 427, 674, 711, 719, 725, 735, 739, 749, 760, 762, 767, 773, 776, 779, 854, 971, 1015, 1049, 1050, 1051, 1052, 1054], "Into": [28, 95, 210, 215, 218, 221, 226, 229, 241, 244, 250, 264, 265, 270, 271, 340, 355, 364, 370, 371, 377, 381, 384, 388, 397, 401, 405, 406, 407, 474, 475, 527, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 629, 667, 708, 710, 711, 946, 971, 1015, 1049, 1050, 1051, 1052, 1054], "dictread": [28, 183, 204, 205, 218, 221, 226, 229, 241, 244, 264, 265, 270, 271, 711, 971, 1013, 1015, 1049, 1050, 1051, 1052, 1053, 1054], "python_exercises_userdb_csvdictread": [28, 711, 1015, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054], "python_exercises_userdb_user_json": [28, 711, 1015, 1049, 1050, 1051, 1052, 1054], "json": [28, 76, 83, 90, 111, 129, 165, 171, 181, 195, 199, 200, 208, 209, 217, 220, 221, 225, 228, 234, 243, 276, 278, 322, 711, 971, 1015, 1049, 1050, 1051, 1054, 1075, 1089], "python_exercises_userdb_userdb_modul": [28, 711, 1015, 1049, 1050, 1051, 1052, 1053, 1054], "both": [28, 52, 61, 83, 111, 122, 132, 134, 139, 152, 164, 170, 191, 207, 210, 218, 221, 224, 226, 229, 241, 244, 256, 264, 265, 270, 271, 403, 409, 411, 412, 437, 483, 485, 505, 537, 545, 618, 674, 685, 711, 729, 752, 758, 797, 898, 902, 906, 919, 942, 948, 955, 968, 971, 975, 982, 989, 996, 1000, 1005, 1015, 1018, 1021, 1027, 1049, 1050, 1051, 1052, 1054, 1062, 1093, 1100, 1113], "python_exercises_userdb_csvread": [28, 711, 1015, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054], "reader": [28, 129, 204, 218, 221, 226, 229, 241, 244, 264, 265, 270, 271, 392, 411, 434, 711, 802, 968, 971, 998, 1015, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054], "python_exercises_userdb_user_class_person": [28, 711, 1015, 1049, 1051, 1054], "awai": [28, 61, 75, 82, 131, 132, 133, 137, 156, 172, 193, 199, 207, 241, 244, 264, 265, 270, 276, 291, 423, 686, 711, 797, 818, 929, 953, 971, 1015, 1049, 1054], "raw": [28, 61, 177, 180, 183, 188, 200, 203, 212, 216, 222, 236, 237, 241, 243, 244, 248, 250, 264, 265, 270, 273, 276, 287, 297, 323, 411, 412, 418, 441, 448, 486, 566, 687, 711, 794, 971, 987, 992, 1008, 1015, 1049, 1054, 1064], "python_exercises_userdb_mqtt_publish_csv": [28, 711, 1015, 1049, 1050, 1054], "publish": [28, 136, 138, 147, 208, 220, 221, 241, 299, 308, 310, 711, 971, 1015, 1049, 1052, 1054, 1056, 1091], "python_exercises_userdb_csvreader_funct": [28, 711, 1015, 1048, 1049, 1054], "python_exercises_legacy_revert": [28, 189, 711, 1015, 1025, 1028, 1036, 1039, 1054], "revert": [28, 132, 189, 711, 736, 754, 916, 975, 1015, 1025, 1028, 1039, 1054], "line": [28, 32, 33, 34, 36, 61, 128, 129, 132, 134, 137, 147, 151, 154, 155, 168, 172, 182, 184, 188, 189, 191, 192, 197, 198, 201, 202, 204, 205, 207, 208, 210, 211, 212, 215, 217, 218, 220, 221, 223, 224, 227, 229, 230, 232, 233, 244, 245, 250, 251, 252, 254, 258, 262, 264, 265, 266, 270, 271, 272, 293, 302, 325, 331, 332, 340, 344, 347, 349, 355, 364, 366, 371, 377, 381, 384, 388, 393, 397, 400, 401, 403, 406, 407, 411, 414, 417, 424, 454, 455, 605, 608, 611, 629, 667, 708, 710, 711, 727, 731, 738, 740, 758, 785, 786, 789, 798, 800, 802, 824, 845, 847, 849, 850, 851, 855, 859, 862, 863, 864, 906, 916, 947, 953, 958, 959, 983, 1000, 1004, 1006, 1007, 1008, 1013, 1015, 1028, 1034, 1039, 1053, 1054, 1056, 1059, 1064, 1067, 1072, 1094], "python_exercises_legacy_wc": [28, 189, 711, 1015, 1025, 1028, 1036, 1039, 1040, 1054], "word": [28, 41, 63, 125, 132, 152, 160, 164, 168, 171, 178, 183, 189, 193, 199, 202, 210, 211, 215, 218, 220, 221, 223, 226, 228, 229, 236, 237, 239, 244, 251, 258, 264, 265, 266, 270, 271, 283, 302, 307, 332, 385, 427, 432, 505, 605, 683, 692, 700, 710, 711, 798, 800, 847, 919, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1041, 1054], "charact": [28, 134, 150, 175, 180, 184, 189, 193, 197, 204, 210, 220, 227, 230, 248, 251, 266, 272, 325, 326, 332, 340, 343, 349, 350, 355, 364, 371, 377, 381, 384, 387, 388, 392, 394, 397, 401, 406, 407, 592, 629, 667, 708, 709, 710, 711, 720, 725, 728, 735, 739, 749, 752, 760, 762, 767, 773, 774, 776, 779, 798, 800, 818, 840, 854, 862, 917, 967, 986, 1000, 1001, 1002, 1006, 1008, 1015, 1018, 1025, 1028, 1036, 1039, 1054, 1072, 1100], "python_exercises_legacy_cmdline_digit": [28, 189, 302, 711, 1015, 1023, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054], "digit": [28, 125, 151, 152, 171, 178, 183, 189, 199, 202, 211, 215, 220, 221, 223, 224, 226, 228, 229, 244, 251, 264, 265, 266, 270, 271, 287, 307, 333, 342, 711, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054], "python_exercises_legacy_for_prim": [28, 189, 711, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "prime": [28, 36, 151, 152, 171, 175, 176, 178, 183, 189, 195, 199, 211, 215, 218, 223, 229, 244, 251, 264, 265, 270, 271, 387, 711, 1015, 1025, 1028, 1029, 1031, 1036, 1037, 1038, 1039, 1040, 1054, 1123], "python_exercises_legacy_while_prim": [28, 189, 711, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054], "python_exercises_legacy_mixed_list_execut": [28, 189, 711, 1015, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "mix": [28, 171, 178, 189, 192, 199, 202, 205, 206, 210, 212, 215, 244, 251, 264, 265, 270, 271, 273, 348, 387, 390, 391, 393, 395, 538, 711, 984, 987, 1003, 1006, 1015, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1055, 1072, 1077, 1083, 1128], "execut": [28, 42, 61, 106, 108, 109, 111, 125, 128, 132, 134, 142, 143, 147, 152, 159, 164, 171, 178, 184, 189, 199, 201, 202, 205, 207, 215, 217, 220, 244, 251, 264, 265, 270, 271, 274, 275, 287, 288, 295, 302, 324, 325, 359, 361, 365, 387, 392, 396, 405, 413, 416, 417, 429, 448, 451, 458, 465, 470, 484, 513, 537, 552, 655, 709, 711, 756, 758, 784, 785, 786, 793, 795, 800, 805, 806, 814, 818, 865, 874, 903, 916, 930, 932, 933, 934, 935, 938, 942, 944, 948, 950, 956, 960, 964, 967, 980, 990, 991, 994, 1013, 1015, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1068, 1071, 1101, 1103, 1115, 1126, 1127], "python_exercises_legacy_mixed_list_interact": [28, 189, 711, 1015, 1025, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "interact": [28, 61, 83, 128, 139, 171, 172, 178, 189, 199, 201, 202, 205, 207, 215, 217, 220, 225, 244, 245, 251, 264, 265, 270, 271, 273, 711, 818, 866, 871, 874, 884, 946, 981, 1015, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1054, 1061, 1072], "interpret": [28, 61, 128, 134, 152, 153, 164, 168, 171, 178, 189, 192, 199, 201, 202, 205, 207, 215, 217, 220, 224, 240, 241, 244, 250, 251, 264, 265, 266, 270, 271, 273, 279, 302, 387, 422, 426, 433, 437, 447, 461, 475, 527, 711, 758, 842, 864, 885, 932, 933, 980, 981, 982, 983, 1013, 1015, 1024, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1056, 1065, 1072, 1095, 1116], "python_exercises_legacy_function_prim": [28, 189, 711, 1015, 1025, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "python_exercises_legacy_max_numbers_funct": [28, 189, 711, 1015, 1025, 1028, 1029, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "determin": [28, 100, 111, 125, 131, 155, 160, 162, 170, 171, 176, 178, 183, 189, 195, 199, 201, 202, 205, 211, 215, 221, 223, 226, 228, 229, 244, 251, 264, 265, 270, 271, 605, 639, 640, 677, 711, 766, 788, 807, 808, 809, 810, 811, 812, 813, 850, 854, 863, 881, 918, 919, 949, 1015, 1017, 1018, 1019, 1022, 1025, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1054, 1088, 1123], "python_exercises_legacy_python_0350_exercis": [28, 189, 711, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1054], "right": [28, 32, 33, 34, 36, 40, 61, 78, 82, 125, 131, 132, 134, 137, 152, 172, 183, 184, 189, 194, 199, 212, 214, 220, 224, 232, 245, 258, 266, 288, 294, 326, 346, 347, 348, 354, 365, 395, 425, 476, 484, 531, 546, 548, 549, 627, 639, 655, 681, 686, 691, 711, 719, 738, 742, 758, 777, 800, 801, 803, 818, 873, 903, 953, 975, 986, 992, 1015, 1025, 1028, 1036, 1039, 1040, 1054], "justifi": [28, 152, 164, 189, 199, 220, 266, 326, 693, 711, 980, 1015, 1025, 1028, 1036, 1039, 1040, 1054], "python_exercises_legacy_join_funct": [28, 189, 711, 1015, 1025, 1028, 1029, 1036, 1037, 1039, 1040, 1054], "join": [28, 33, 61, 143, 171, 189, 191, 192, 197, 199, 201, 204, 205, 207, 212, 216, 222, 230, 245, 252, 262, 266, 272, 287, 296, 411, 504, 627, 688, 694, 699, 701, 711, 901, 906, 929, 1015, 1025, 1028, 1036, 1037, 1039, 1040, 1054, 1086, 1093], "python_exercises_legacy_max_numb": [28, 189, 711, 1015, 1025, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1038, 1039, 1040, 1054], "python_exercises_legacy_uniq_funct": [28, 189, 711, 1015, 1025, 1028, 1029, 1036, 1037, 1038, 1039, 1040, 1054], "uniq": [28, 151, 152, 169, 171, 183, 189, 199, 202, 205, 211, 215, 221, 223, 226, 244, 251, 264, 265, 270, 271, 503, 711, 851, 1015, 1025, 1028, 1029, 1036, 1037, 1040, 1054], "python_exercises_legacy_passwd": [28, 711, 1015, 1028, 1039, 1054], "passwd": [28, 98, 99, 111, 172, 182, 191, 204, 205, 207, 211, 212, 215, 220, 221, 223, 227, 229, 230, 238, 245, 247, 248, 252, 262, 266, 268, 269, 709, 711, 788, 790, 793, 795, 798, 800, 802, 813, 832, 835, 837, 838, 840, 843, 845, 849, 851, 854, 855, 863, 865, 866, 874, 875, 879, 880, 885, 891, 911, 925, 953, 955, 1002, 1006, 1015, 1028, 1039, 1054, 1064, 1065, 1088], "python_exercises_legacy_distil": [28, 189, 711, 1015, 1025, 1028, 1039, 1054], "elimin": [28, 56, 125, 189, 211, 218, 220, 221, 223, 229, 244, 251, 264, 270, 271, 454, 499, 690, 711, 851, 958, 1015, 1028, 1039, 1054], "empti": [28, 36, 40, 46, 48, 132, 135, 142, 150, 170, 172, 189, 201, 204, 211, 212, 218, 220, 221, 223, 224, 227, 229, 230, 233, 244, 245, 250, 251, 252, 262, 264, 266, 270, 271, 297, 331, 383, 522, 531, 532, 536, 546, 548, 564, 565, 583, 601, 621, 627, 676, 686, 687, 699, 709, 711, 721, 758, 785, 786, 798, 802, 812, 849, 858, 871, 905, 925, 963, 1004, 1015, 1028, 1029, 1033, 1039, 1054], "comment": [28, 32, 33, 34, 36, 42, 125, 134, 169, 189, 190, 192, 205, 211, 213, 217, 218, 221, 223, 228, 229, 244, 251, 253, 264, 270, 271, 302, 325, 370, 389, 417, 454, 455, 483, 711, 863, 1001, 1015, 1028, 1039, 1054, 1072, 1086], "python_exercises_legacy_python_1011_generators_yield": [28, 711, 1015, 1028, 1054], "fibonacci": [28, 152, 155, 171, 192, 205, 244, 258, 260, 261, 265, 271, 279, 634, 656, 711, 960, 961, 962, 1015, 1028, 1054], "python_exercises_legacy_uniq_gener": [28, 711, 1015, 1028, 1039, 1054], "python_exercises_legacy_dict_keyerror": [28, 711, 1015, 1024, 1028, 1054], "python_exercises_csv_csv_modul": [28, 711, 1013, 1014, 1015, 1054], "python_exercises_csv_csv_db": [28, 711, 1012, 1014, 1015, 1054], "sqlite3": [28, 83, 168, 199, 205, 211, 218, 711, 1014, 1015, 1054, 1068, 1069, 1073], "python_db_sqlite3": [28, 711, 1012, 1014, 1015, 1054, 1069], "dbapi": [28, 168, 199, 211, 711, 1012, 1014, 1015, 1054, 1069], "python_exercises_herdt_swap": [28, 711, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1054], "python_exercises_herdt_boolean": [28, 711, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1054], "express": [28, 57, 60, 151, 167, 168, 170, 171, 181, 191, 200, 205, 206, 208, 212, 231, 232, 234, 235, 236, 237, 240, 241, 246, 265, 266, 271, 325, 327, 331, 335, 344, 345, 347, 348, 349, 352, 354, 357, 359, 360, 362, 364, 370, 371, 377, 381, 384, 388, 397, 401, 406, 407, 411, 426, 435, 447, 448, 451, 455, 461, 462, 475, 483, 527, 529, 607, 629, 640, 644, 649, 667, 708, 710, 711, 818, 851, 932, 952, 962, 968, 989, 991, 998, 1000, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1052, 1053, 1054, 1056, 1080, 1112, 1113, 1114], "python_exercises_herdt_greet": [28, 711, 1015, 1017, 1018, 1019, 1022, 1054], "python_exercises_herdt_max_numb": [28, 711, 1015, 1017, 1018, 1019, 1020, 1022, 1054], "python_exercises_herdt_while_even_numb": [28, 711, 1015, 1017, 1019, 1054], "python_exercises_herdt_username_password": [28, 711, 1015, 1017, 1019, 1022, 1054], "usernam": [28, 147, 176, 184, 205, 299, 711, 785, 793, 802, 865, 875, 1002, 1015, 1017, 1019, 1034, 1054, 1123], "password": [28, 139, 142, 147, 172, 176, 184, 205, 299, 302, 307, 711, 793, 815, 855, 863, 865, 866, 871, 1015, 1017, 1019, 1034, 1054, 1070, 1123], "python_exercises_sensors_sensor_const": [28, 711, 1015, 1042, 1043, 1044, 1054], "python_exercises_sensors_project_setup": [28, 711, 1015, 1042, 1043, 1044, 1054], "setup": [28, 104, 111, 116, 120, 129, 147, 159, 163, 164, 202, 204, 220, 227, 230, 232, 237, 239, 245, 248, 252, 262, 266, 299, 302, 307, 308, 393, 426, 440, 451, 453, 467, 481, 484, 486, 487, 620, 622, 711, 726, 752, 849, 854, 862, 864, 879, 881, 892, 929, 933, 937, 939, 942, 943, 953, 960, 968, 1011, 1015, 1042, 1054, 1094, 1104, 1106], "python_db_dbapi2": [28, 711, 1012, 1014, 1015, 1054, 1069], "python_db_postgr": [28, 711, 1054, 1069], "postgresql": [28, 711, 1054, 1068, 1069], "As": [29, 44, 66, 78, 111, 129, 132, 134, 139, 143, 149, 161, 164, 168, 199, 212, 274, 305, 322, 360, 391, 394, 470, 472, 486, 537, 542, 544, 545, 622, 731, 758, 784, 793, 862, 863, 871, 873, 890, 918, 926, 948, 954, 975, 980, 984, 1041, 1045, 1058, 1103, 1115], "follow": [29, 37, 41, 76, 104, 105, 107, 122, 131, 132, 134, 135, 136, 137, 139, 147, 152, 156, 160, 161, 164, 168, 172, 173, 184, 201, 207, 217, 218, 220, 224, 233, 237, 239, 256, 257, 259, 265, 266, 299, 321, 323, 326, 343, 344, 357, 360, 387, 389, 391, 393, 398, 399, 402, 410, 412, 417, 427, 428, 431, 432, 448, 449, 451, 452, 453, 454, 455, 473, 476, 477, 480, 481, 483, 484, 485, 486, 487, 499, 505, 531, 546, 547, 548, 549, 602, 609, 611, 616, 618, 619, 622, 623, 626, 644, 677, 705, 706, 709, 719, 721, 727, 758, 784, 785, 786, 791, 793, 795, 797, 809, 811, 812, 818, 822, 830, 831, 855, 862, 863, 864, 885, 888, 889, 890, 891, 900, 917, 926, 930, 932, 938, 940, 942, 944, 946, 947, 948, 951, 955, 956, 960, 967, 986, 1000, 1008, 1013, 1016, 1021, 1025, 1027, 1031, 1034, 1035, 1038, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1081, 1085, 1095, 1116], "version": [29, 59, 131, 135, 137, 138, 139, 142, 145, 147, 148, 160, 161, 162, 164, 171, 180, 182, 191, 192, 201, 205, 207, 211, 217, 220, 227, 232, 235, 244, 250, 256, 257, 258, 259, 266, 295, 310, 370, 409, 410, 412, 413, 415, 422, 425, 522, 619, 621, 622, 669, 673, 685, 706, 731, 733, 750, 758, 759, 774, 818, 862, 863, 933, 934, 944, 946, 947, 949, 980, 981, 987, 1011, 1086, 1088, 1095, 1096, 1102, 1108], "control": [29, 43, 57, 60, 61, 84, 131, 138, 145, 147, 150, 161, 164, 169, 171, 172, 173, 174, 183, 184, 199, 202, 215, 220, 226, 240, 303, 304, 305, 307, 310, 348, 362, 363, 409, 412, 426, 433, 476, 477, 480, 486, 528, 711, 731, 756, 758, 763, 818, 854, 856, 857, 861, 862, 864, 880, 929, 934, 953, 956, 964, 976, 989, 991, 1094, 1096, 1114, 1124, 1130], "done": [29, 40, 44, 45, 48, 51, 53, 54, 55, 61, 73, 82, 85, 89, 100, 108, 109, 119, 124, 128, 129, 131, 133, 134, 136, 137, 138, 139, 142, 147, 152, 153, 156, 160, 164, 171, 193, 208, 212, 218, 220, 236, 237, 239, 251, 254, 261, 266, 280, 283, 288, 294, 305, 311, 326, 327, 375, 382, 383, 385, 387, 398, 409, 411, 412, 413, 417, 451, 470, 484, 487, 529, 541, 542, 570, 584, 592, 597, 621, 622, 624, 627, 634, 655, 658, 662, 663, 673, 679, 687, 691, 699, 701, 711, 717, 727, 729, 748, 750, 758, 760, 785, 786, 790, 791, 793, 794, 802, 814, 837, 855, 856, 858, 863, 864, 880, 881, 882, 892, 906, 914, 920, 929, 933, 934, 942, 946, 948, 955, 958, 959, 960, 978, 987, 998, 1006, 1007, 1008, 1011, 1014, 1035, 1071, 1093, 1118], "No": [29, 41, 61, 78, 122, 128, 132, 134, 138, 139, 147, 174, 191, 207, 208, 224, 250, 313, 333, 335, 349, 365, 369, 376, 387, 392, 404, 409, 413, 414, 417, 419, 422, 423, 424, 425, 437, 483, 522, 532, 533, 545, 552, 562, 577, 580, 598, 616, 626, 628, 631, 635, 638, 642, 686, 687, 694, 701, 736, 738, 740, 742, 756, 758, 763, 775, 794, 800, 802, 805, 806, 821, 829, 837, 840, 856, 858, 864, 878, 885, 890, 891, 900, 901, 903, 905, 914, 918, 926, 929, 935, 949, 951, 968, 975, 981, 984, 987, 988, 996, 1000, 1004, 1006, 1063, 1067, 1071, 1072, 1081, 1084, 1093, 1095, 1101], "proprietari": 29, "accept": [29, 30, 58, 134, 160, 256, 409, 411, 677, 687, 689, 726, 858, 884, 954, 978, 1128, 1130], "proven": [29, 398, 402, 546, 548, 549, 638], "difficult": [29, 66, 191, 354, 372, 522, 744, 756, 918], "unicod": [30, 32, 33, 34, 36, 192, 201, 205, 207, 217, 220, 242, 266, 337, 986, 992, 1006, 1072, 1086], "sphinxemojicod": 30, "pip": [30, 59, 116, 128, 164, 168, 189, 218, 232, 884, 980, 1010, 1011, 1043, 1056, 1075, 1087, 1088, 1089, 1093, 1095, 1096], "conf": [30, 63, 133, 135, 137, 422, 758, 864, 956], "grimac": 30, "astonish": 30, "rolling_ey": 30, "face_with_raised_eyebrow": 30, "flush": [30, 245, 486, 717, 729], "innoc": [30, 138, 392, 693, 797, 931, 975], "kiss": 30, "kissing_heart": 30, "middle_fing": 30, "metal": [30, 76, 78, 85, 87, 132, 320, 855, 863, 864], "muscl": 30, "nerd": [30, 818], "ok_hand": 30, "penguin": 30, "pig": [30, 387], "point_up": 30, "sleep": [30, 61, 132, 207, 236, 237, 260, 261, 279, 288, 360, 369, 699, 711, 735, 738, 740, 750, 760, 763, 767, 773, 775, 776, 779, 854, 855, 863, 892, 896, 899, 914, 916, 917, 920, 925, 964], "sunglass": 30, "think": [30, 40, 41, 67, 132, 133, 147, 170, 194, 370, 391, 392, 395, 481, 485, 532, 552, 627, 635, 637, 686, 785, 786, 789, 879, 925, 987], "thumbsdown": 30, "thumbsup": 30, "wink": 30, "1_tone1": 30, "1_tone2": 30, "1_tone3": 30, "1_tone4": 30, "1_tone5": 30, "1st_place_med": 30, "2nd_place_med": 30, "3rd_place_med": 30, "8ball": 30, "abacu": 30, "abcd": [30, 182, 188, 204, 224, 266], "ac": [30, 142, 180], "accordion": 30, "adhesive_bandag": 30, "admission_ticket": 30, "adult": [30, 976], "adult_dark_skin_ton": 30, "adult_light_skin_ton": 30, "adult_medium_dark_skin_ton": 30, "adult_medium_light_skin_ton": 30, "adult_medium_skin_ton": 30, "adult_tone1": 30, "adult_tone2": 30, "adult_tone3": 30, "adult_tone4": 30, "adult_tone5": 30, "ae": [30, 142], "aerial_tramwai": 30, "af": [30, 142], "afghanistan": 30, "ai": [30, 168, 1063, 1073], "airplan": [30, 855], "airplane_arriv": 30, "airplane_departur": 30, "airplane_smal": 30, "aland_island": 30, "alarm_clock": 30, "albania": 30, "alemb": 30, "algeria": 30, "alien": 30, "ambul": 30, "american_samoa": 30, "amphora": 30, "anatomical_heart": 30, "anchor": 30, "andorra": 30, "angel": [30, 256], "angel_tone1": 30, "angel_tone2": 30, "angel_tone3": 30, "angel_tone4": 30, "angel_tone5": 30, "anger": 30, "anger_right": 30, "angola": 30, "angri": 30, "anguilla": 30, "anguish": 30, "ant": 30, "antarctica": 30, "antigua_barbuda": 30, "ao": 30, "appl": [30, 932, 998], "aq": 30, "aquariu": 30, "archeri": 30, "argentina": 30, "ari": [30, 33, 36], "armenia": 30, "arrow_backward": 30, "arrow_double_down": 30, "arrow_double_up": 30, "arrow_down": 30, "arrow_down_smal": 30, "arrow_forward": 30, "arrow_heading_down": 30, "arrow_heading_up": 30, "arrow_left": 30, "arrow_lower_left": 30, "arrow_lower_right": 30, "arrow_right": 30, "arrow_right_hook": 30, "arrow_up": 30, "arrow_up_down": 30, "arrow_up_smal": 30, "arrow_upper_left": 30, "arrow_upper_right": 30, "arrows_clockwis": 30, "arrows_counterclockwis": 30, "articulated_lorri": 30, "artificial_satellit": 30, "artist": 30, "artist_dark_skin_ton": 30, "artist_light_skin_ton": 30, "artist_medium_dark_skin_ton": 30, "artist_medium_light_skin_ton": 30, "artist_medium_skin_ton": 30, "artist_tone1": 30, "artist_tone2": 30, "artist_tone3": 30, "artist_tone4": 30, "artist_tone5": 30, "aruba": 30, "ascens": 30, "astronaut": 30, "astronaut_dark_skin_ton": 30, "astronaut_light_skin_ton": 30, "astronaut_medium_dark_skin_ton": 30, "astronaut_medium_light_skin_ton": 30, "astronaut_medium_skin_ton": 30, "astronaut_tone1": 30, "astronaut_tone2": 30, "astronaut_tone3": 30, "astronaut_tone4": 30, "astronaut_tone5": 30, "athletic_sho": 30, "atm": 30, "atom": [30, 63, 74, 86, 155, 210, 235, 236, 237, 239, 248, 259, 283, 505, 637, 686, 699, 700, 710, 711, 720, 725, 728, 730, 735, 738, 739, 741, 744, 745, 749, 750, 751, 753, 755, 760, 763, 764, 767, 768, 769, 773, 776, 778, 779, 854, 894, 904, 905, 967, 1113], "atom_symbol": 30, "australia": 30, "austria": [30, 132, 320], "auto_rickshaw": 30, "avocado": 30, "aw": 30, "ax": [30, 153, 952], "az": 30, "azerbaijan": 30, "ba": [30, 142], "babi": 30, "baby_bottl": 30, "baby_chick": 30, "baby_symbol": 30, "baby_tone1": 30, "baby_tone2": 30, "baby_tone3": 30, "baby_tone4": 30, "baby_tone5": 30, "back_of_hand": 30, "back_of_hand_tone1": 30, "back_of_hand_tone2": 30, "back_of_hand_tone3": 30, "back_of_hand_tone4": 30, "back_of_hand_tone5": 30, "bacon": 30, "badger": 30, "badminton": 30, "bagel": 30, "baggage_claim": 30, "baguette_bread": 30, "bahama": 30, "bahrain": 30, "balance_scal": 30, "bald": 30, "ballet_sho": 30, "balloon": 30, "ballot_box": 30, "ballot_box_with_ballot": 30, "ballot_box_with_check": 30, "bamboo": 30, "banana": 30, "bangbang": 30, "bangladesh": 30, "banjo": 30, "bank": [30, 411], "bar_chart": 30, "barbado": 30, "barber": 30, "basebal": 30, "basket": 30, "basketbal": 30, "basketball_man": 30, "basketball_play": 30, "basketball_player_tone1": 30, "basketball_player_tone2": 30, "basketball_player_tone3": 30, "basketball_player_tone4": 30, "basketball_player_tone5": 30, "basketball_woman": 30, "bat": [30, 1095], "bath": 30, "bath_tone1": 30, "bath_tone2": 30, "bath_tone3": 30, "bath_tone4": 30, "bath_tone5": 30, "bathtub": 30, "batteri": [30, 87, 164, 302, 855, 979, 980, 981, 1007, 1089], "bb": [30, 124, 135, 862], "bd": [30, 142], "beach": 30, "beach_umbrella": 30, "beach_with_umbrella": 30, "bear": [30, 903, 1082], "bearded_person": 30, "bearded_person_dark_skin_ton": 30, "bearded_person_light_skin_ton": 30, "bearded_person_medium_dark_skin_ton": 30, "bearded_person_medium_light_skin_ton": 30, "bearded_person_medium_skin_ton": 30, "bearded_person_tone1": 30, "bearded_person_tone2": 30, "bearded_person_tone3": 30, "bearded_person_tone4": 30, "bearded_person_tone5": 30, "beaver": 30, "bed": 30, "bee": 30, "beer": [30, 389], "beetl": 30, "belaru": 30, "belgium": 30, "beliz": 30, "bell": [30, 975, 978], "bell_pepp": 30, "bellhop": 30, "bellhop_bel": 30, "benin": 30, "bento": 30, "bermuda": 30, "beverage_box": 30, "bf": [30, 142], "bg": [30, 411], "bh": 30, "bhutan": 30, "bicyclist": 30, "bicyclist_tone1": 30, "bicyclist_tone2": 30, "bicyclist_tone3": 30, "bicyclist_tone4": 30, "bicyclist_tone5": 30, "bike": 30, "biking_man": 30, "biking_woman": 30, "bikini": 30, "billed_cap": 30, "biohazard": 30, "biohazard_sign": 30, "bird": 30, "birthdai": [30, 173, 617], "bison": [30, 143, 738, 862, 946], "bj": 30, "bl": 30, "black_cat": 30, "black_circl": 30, "black_flag": 30, "black_heart": 30, "black_jok": 30, "black_large_squar": 30, "black_medium_small_squar": 30, "black_medium_squar": 30, "black_nib": 30, "black_small_squar": 30, "black_square_button": 30, "blond": 30, "haired_man": 30, "haired_man_dark_skin_ton": 30, "haired_man_light_skin_ton": 30, "haired_man_medium_dark_skin_ton": 30, "haired_man_medium_light_skin_ton": 30, "haired_man_medium_skin_ton": 30, "haired_man_tone1": 30, "haired_man_tone2": 30, "haired_man_tone3": 30, "haired_man_tone4": 30, "haired_man_tone5": 30, "haired_woman": 30, "haired_woman_dark_skin_ton": 30, "haired_woman_light_skin_ton": 30, "haired_woman_medium_dark_skin_ton": 30, "haired_woman_medium_light_skin_ton": 30, "haired_woman_medium_skin_ton": 30, "haired_woman_tone1": 30, "haired_woman_tone2": 30, "haired_woman_tone3": 30, "haired_woman_tone4": 30, "haired_woman_tone5": 30, "blond_haired_person": 30, "blond_haired_person_tone1": 30, "blond_haired_person_tone2": 30, "blond_haired_person_tone3": 30, "blond_haired_person_tone4": 30, "blond_haired_person_tone5": 30, "blonde_man": 30, "blonde_woman": 30, "blossom": 30, "blowfish": 30, "blue_book": 30, "blue_car": 30, "blue_circl": 30, "blue_heart": 30, "blue_squar": 30, "blueberri": 30, "blush": 30, "bm": 30, "bn": 30, "bo": [30, 969], "boar": 30, "boat": 30, "bolivia": 30, "bomb": 30, "bone": 30, "bookmark": [30, 1071], "bookmark_tab": 30, "boom": [30, 655, 672], "boomerang": 30, "boot": [30, 122, 133, 135, 139, 151, 252, 405, 702, 731, 736, 754, 758, 768, 796, 862, 863, 864, 1108], "bosnia_herzegovina": 30, "botswana": 30, "bottle_with_popping_cork": 30, "bouquet": 30, "bouvet_island": 30, "bow": 30, "bow_and_arrow": 30, "bow_tone1": 30, "bow_tone2": 30, "bow_tone3": 30, "bow_tone4": 30, "bow_tone5": 30, "bowing_man": 30, "bowing_woman": 30, "bowl_with_spoon": 30, "bowl": 30, "boxing_glov": 30, "boi": 30, "boy_tone1": 30, "boy_tone2": 30, "boy_tone3": 30, "boy_tone4": 30, "boy_tone5": 30, "bq": 30, "br": [30, 230, 1064], "brain": [30, 57, 60], "brazil": 30, "bread": 30, "breast_feed": 30, "breast_feeding_dark_skin_ton": 30, "breast_feeding_light_skin_ton": 30, "breast_feeding_medium_dark_skin_ton": 30, "breast_feeding_medium_light_skin_ton": 30, "breast_feeding_medium_skin_ton": 30, "breast_feeding_tone1": 30, "breast_feeding_tone2": 30, "breast_feeding_tone3": 30, "breast_feeding_tone4": 30, "breast_feeding_tone5": 30, "brick": [30, 131, 144], "bride_with_veil": 30, "bride_with_veil_tone1": 30, "bride_with_veil_tone2": 30, "bride_with_veil_tone3": 30, "bride_with_veil_tone4": 30, "bride_with_veil_tone5": 30, "bridge_at_night": 30, "briefcas": 30, "brief": [30, 403, 818], "british_indian_ocean_territori": 30, "british_virgin_island": 30, "broccoli": 30, "broken_heart": 30, "broom": 30, "brown_circl": 30, "brown_heart": 30, "brown_squar": 30, "brunei": 30, "bt": 30, "bubble_tea": 30, "bucket": [30, 729], "bug": [30, 44, 53, 54, 105, 133, 134, 135, 175, 194, 210, 221, 311, 367, 369, 370, 385, 390, 392, 396, 409, 414, 419, 510, 512, 514, 522, 528, 529, 532, 537, 599, 602, 655, 665, 684, 701, 711, 748, 876, 907, 916, 917, 949, 969, 970, 984, 987], "building_construct": 30, "bulb": 30, "bulgaria": 30, "bullettrain_front": 30, "bullettrain_sid": 30, "burkina_faso": 30, "burrito": 30, "burundi": 30, "bu": [30, 79, 179, 204, 220, 227, 229, 230, 245, 248, 252, 262, 266, 427, 441, 456, 470, 486, 487, 711, 729, 754, 818, 854, 856, 861, 862, 863, 892, 898, 954, 1055, 1117, 1124, 1128, 1130], "business_suit_levit": 30, "busstop": 30, "bust_in_silhouett": 30, "busts_in_silhouett": 30, "butter": 30, "butterfli": 30, "bv": 30, "bw": 30, "bz": 30, "cactu": 30, "cake": 30, "calendar": 30, "calendar_spir": 30, "call_m": 30, "call_me_hand": 30, "call_me_hand_tone1": 30, "call_me_hand_tone2": 30, "call_me_hand_tone3": 30, "call_me_hand_tone4": 30, "call_me_hand_tone5": 30, "call_me_tone1": 30, "call_me_tone2": 30, "call_me_tone3": 30, "call_me_tone4": 30, "call_me_tone5": 30, "cambodia": 30, "camel": 30, "camera": [30, 137, 139, 863], "camera_flash": 30, "camera_with_flash": 30, "cameroon": 30, "camp": 30, "canada": 30, "canary_island": 30, "cancer": 30, "candl": 30, "candi": 30, "canned_food": 30, "cano": 30, "cape_verd": 30, "capital_abcd": 30, "capricorn": 30, "car": [30, 250, 411, 855], "card_box": 30, "card_file_box": 30, "card_index": 30, "card_index_divid": 30, "caribbean_netherland": 30, "carousel_hors": 30, "carpentry_saw": 30, "carrot": 30, "cartwheel": 30, "cartwheel_tone1": 30, "cartwheel_tone2": 30, "cartwheel_tone3": 30, "cartwheel_tone4": 30, "cartwheel_tone5": 30, "cat2": 30, "cat": [30, 134, 138, 172, 184, 238, 247, 248, 250, 268, 269, 287, 288, 387, 411, 486, 711, 716, 721, 738, 758, 774, 785, 786, 788, 789, 798, 800, 802, 830, 837, 845, 846, 848, 849, 851, 854, 855, 862, 863, 864, 865, 889, 891, 892, 896, 920, 926, 929, 1119], "cayman_island": 30, "cd": [30, 59, 118, 135, 136, 138, 139, 142, 143, 147, 160, 161, 194, 204, 224, 232, 237, 239, 288, 302, 307, 412, 484, 487, 547, 731, 733, 758, 759, 782, 784, 785, 786, 789, 795, 803, 808, 810, 818, 842, 855, 862, 863, 871, 884, 933, 934, 946, 947, 1011], "central_african_republ": 30, "ceuta_melilla": 30, "cf": [30, 784, 901], "cg": 30, "ch": 30, "chad": 30, "chain": [30, 125, 131, 142, 152, 214, 231, 389, 763, 911], "chair": [30, 164], "champagn": 30, "champagne_glass": 30, "chart": [30, 178, 193, 202, 215, 229, 232, 265, 271, 1056, 1063], "chart_with_downwards_trend": 30, "chart_with_upwards_trend": 30, "checkered_flag": 30, "chees": 30, "cheese_wedg": 30, "cherri": 30, "cherry_blossom": 30, "chess_pawn": 30, "chestnut": 30, "chicken": 30, "child": [30, 97, 149, 238, 247, 248, 268, 269, 709, 711, 788, 790, 792, 793, 804, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 827, 829, 830, 854, 866, 867, 868, 869, 870, 895, 901, 908, 913, 930, 942, 943, 973, 1084], "child_dark_skin_ton": 30, "child_light_skin_ton": 30, "child_medium_dark_skin_ton": 30, "child_medium_light_skin_ton": 30, "child_medium_skin_ton": 30, "child_tone1": 30, "child_tone2": 30, "child_tone3": 30, "child_tone4": 30, "child_tone5": 30, "children_cross": 30, "chile": 30, "china": 30, "chipmunk": 30, "chocolate_bar": 30, "chopstick": 30, "christmas_island": 30, "christmas_tre": 30, "church": 30, "ci": [30, 1093], "cinema": 30, "circus_t": 30, "city_dusk": 30, "city_sunris": 30, "city_sunset": 30, "cityscap": 30, "ck": 30, "cl": [30, 220, 245, 972, 973], "clamp": 30, "clap": 30, "clap_tone1": 30, "clap_tone2": 30, "clap_tone3": 30, "clap_tone4": 30, "clap_tone5": 30, "clapper": 30, "classical_build": 30, "clinking_glass": 30, "clipboard": 30, "clipperton_island": 30, "clock1030": 30, "clock10": 30, "clock1130": 30, "clock11": 30, "clock1230": 30, "clock12": 30, "clock130": 30, "clock1": 30, "clock230": 30, "clock2": 30, "clock330": 30, "clock3": 30, "clock430": 30, "clock4": 30, "clock530": 30, "clock5": 30, "clock630": 30, "clock6": 30, "clock730": 30, "clock7": 30, "clock830": 30, "clock8": 30, "clock930": 30, "clock9": 30, "clock": [30, 207, 208, 398, 862], "closed_book": 30, "closed_lock_with_kei": 30, "closed_umbrella": 30, "cloud": [30, 99, 139, 184, 208, 301, 302, 305, 630, 632, 871, 1060, 1061, 1088], "cloud_lightn": 30, "cloud_rain": 30, "cloud_snow": 30, "cloud_tornado": 30, "cloud_with_lightn": 30, "cloud_with_lightning_and_rain": 30, "cloud_with_rain": 30, "cloud_with_snow": 30, "cloud_with_tornado": 30, "clown": 30, "clown_fac": 30, "club": [30, 36], "cm": 30, "cn": [30, 142], "coat": 30, "cockroach": 30, "cocktail": 30, "coconut": [30, 256], "cocos_island": 30, "coffe": [30, 135, 602, 862], "coffin": 30, "coin": 30, "cold_fac": 30, "cold_sweat": 30, "colombia": 30, "comet": 30, "comoro": 30, "compass": 30, "compress": [30, 133, 147, 238, 247, 248, 268, 711, 782, 788, 854, 942, 943, 944, 947], "computer_mous": 30, "confetti_bal": 30, "confound": 30, "confus": [30, 132, 136, 164, 193, 344, 352, 398, 545, 555, 631, 642, 998, 1085], "congo": 30, "congo_brazzavil": 30, "congo_kinshasa": 30, "congratul": 30, "construct": [30, 164, 170, 251, 254, 347, 360, 370, 399, 409, 513, 564, 583, 584, 640, 688, 970, 977, 994, 1005], "construction_sit": 30, "construction_work": 30, "construction_worker_man": 30, "construction_worker_tone1": 30, "construction_worker_tone2": 30, "construction_worker_tone3": 30, "construction_worker_tone4": 30, "construction_worker_tone5": 30, "construction_worker_woman": 30, "control_knob": 30, "convenience_stor": 30, "cook": [30, 248], "cook_dark_skin_ton": 30, "cook_island": 30, "cook_light_skin_ton": 30, "cook_medium_dark_skin_ton": 30, "cook_medium_light_skin_ton": 30, "cook_medium_skin_ton": 30, "cook_tone1": 30, "cook_tone2": 30, "cook_tone3": 30, "cook_tone4": 30, "cook_tone5": 30, "cooki": [30, 740, 754], "cool": [30, 63, 118, 133, 134, 137, 139, 147, 152, 153, 164, 165, 168, 183, 248, 261, 320, 405, 411, 439, 448, 585, 627, 628, 644, 647, 666, 676, 679, 701, 758, 814, 864, 949, 953, 956, 973, 992, 1006, 1056, 1063, 1071, 1113], "cop": 30, "cop_tone1": 30, "cop_tone2": 30, "cop_tone3": 30, "cop_tone4": 30, "cop_tone5": 30, "copyright": [30, 34, 143, 184, 201, 207, 217, 220, 245, 295, 299, 537, 686, 982], "corn": 30, "costa_rica": 30, "cote_divoir": 30, "couch": 30, "couch_and_lamp": 30, "coupl": [30, 41, 131, 132, 133, 134, 139, 152, 164, 168, 323, 360, 394, 399, 675, 851, 886, 905], "couple_mm": 30, "couple_with_heart": 30, "couple_with_heart_dark_skin_ton": 30, "couple_with_heart_light_skin_ton": 30, "couple_with_heart_man_man": 30, "couple_with_heart_man_man_dark_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_light_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_man_man_medium_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_man_man_tone1": 30, "couple_with_heart_man_man_tone1_tone2": 30, "couple_with_heart_man_man_tone1_tone3": 30, "couple_with_heart_man_man_tone1_tone4": 30, "couple_with_heart_man_man_tone1_tone5": 30, "couple_with_heart_man_man_tone2": 30, "couple_with_heart_man_man_tone2_tone1": 30, "couple_with_heart_man_man_tone2_tone3": 30, "couple_with_heart_man_man_tone2_tone4": 30, "couple_with_heart_man_man_tone2_tone5": 30, "couple_with_heart_man_man_tone3": 30, "couple_with_heart_man_man_tone3_tone1": 30, "couple_with_heart_man_man_tone3_tone2": 30, "couple_with_heart_man_man_tone3_tone4": 30, "couple_with_heart_man_man_tone3_tone5": 30, "couple_with_heart_man_man_tone4": 30, "couple_with_heart_man_man_tone4_tone1": 30, "couple_with_heart_man_man_tone4_tone2": 30, "couple_with_heart_man_man_tone4_tone3": 30, "couple_with_heart_man_man_tone4_tone5": 30, "couple_with_heart_man_man_tone5": 30, "couple_with_heart_man_man_tone5_tone1": 30, "couple_with_heart_man_man_tone5_tone2": 30, "couple_with_heart_man_man_tone5_tone3": 30, "couple_with_heart_man_man_tone5_tone4": 30, "couple_with_heart_medium_dark_skin_ton": 30, "couple_with_heart_medium_light_skin_ton": 30, "couple_with_heart_medium_skin_ton": 30, "couple_with_heart_mm": 30, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_person_person_tone1_tone2": 30, "couple_with_heart_person_person_tone1_tone3": 30, "couple_with_heart_person_person_tone1_tone4": 30, "couple_with_heart_person_person_tone1_tone5": 30, "couple_with_heart_person_person_tone2_tone1": 30, "couple_with_heart_person_person_tone2_tone3": 30, "couple_with_heart_person_person_tone2_tone4": 30, "couple_with_heart_person_person_tone2_tone5": 30, "couple_with_heart_person_person_tone3_tone1": 30, "couple_with_heart_person_person_tone3_tone2": 30, "couple_with_heart_person_person_tone3_tone4": 30, "couple_with_heart_person_person_tone3_tone5": 30, "couple_with_heart_person_person_tone4_tone1": 30, "couple_with_heart_person_person_tone4_tone2": 30, "couple_with_heart_person_person_tone4_tone3": 30, "couple_with_heart_person_person_tone4_tone5": 30, "couple_with_heart_person_person_tone5_tone1": 30, "couple_with_heart_person_person_tone5_tone2": 30, "couple_with_heart_person_person_tone5_tone3": 30, "couple_with_heart_person_person_tone5_tone4": 30, "couple_with_heart_tone1": 30, "couple_with_heart_tone2": 30, "couple_with_heart_tone3": 30, "couple_with_heart_tone4": 30, "couple_with_heart_tone5": 30, "couple_with_heart_woman_man": 30, "couple_with_heart_woman_man_dark_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_light_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_man_tone1": 30, "couple_with_heart_woman_man_tone1_tone2": 30, "couple_with_heart_woman_man_tone1_tone3": 30, "couple_with_heart_woman_man_tone1_tone4": 30, "couple_with_heart_woman_man_tone1_tone5": 30, "couple_with_heart_woman_man_tone2": 30, "couple_with_heart_woman_man_tone2_tone1": 30, "couple_with_heart_woman_man_tone2_tone3": 30, "couple_with_heart_woman_man_tone2_tone4": 30, "couple_with_heart_woman_man_tone2_tone5": 30, "couple_with_heart_woman_man_tone3": 30, "couple_with_heart_woman_man_tone3_tone1": 30, "couple_with_heart_woman_man_tone3_tone2": 30, "couple_with_heart_woman_man_tone3_tone4": 30, "couple_with_heart_woman_man_tone3_tone5": 30, "couple_with_heart_woman_man_tone4": 30, "couple_with_heart_woman_man_tone4_tone1": 30, "couple_with_heart_woman_man_tone4_tone2": 30, "couple_with_heart_woman_man_tone4_tone3": 30, "couple_with_heart_woman_man_tone4_tone5": 30, "couple_with_heart_woman_man_tone5": 30, "couple_with_heart_woman_man_tone5_tone1": 30, "couple_with_heart_woman_man_tone5_tone2": 30, "couple_with_heart_woman_man_tone5_tone3": 30, "couple_with_heart_woman_man_tone5_tone4": 30, "couple_with_heart_woman_woman": 30, "couple_with_heart_woman_woman_dark_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 30, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 30, "couple_with_heart_woman_woman_tone1": 30, "couple_with_heart_woman_woman_tone1_tone2": 30, "couple_with_heart_woman_woman_tone1_tone3": 30, "couple_with_heart_woman_woman_tone1_tone4": 30, "couple_with_heart_woman_woman_tone1_tone5": 30, "couple_with_heart_woman_woman_tone2": 30, "couple_with_heart_woman_woman_tone2_tone1": 30, "couple_with_heart_woman_woman_tone2_tone3": 30, "couple_with_heart_woman_woman_tone2_tone4": 30, "couple_with_heart_woman_woman_tone2_tone5": 30, "couple_with_heart_woman_woman_tone3": 30, "couple_with_heart_woman_woman_tone3_tone1": 30, "couple_with_heart_woman_woman_tone3_tone2": 30, "couple_with_heart_woman_woman_tone3_tone4": 30, "couple_with_heart_woman_woman_tone3_tone5": 30, "couple_with_heart_woman_woman_tone4": 30, "couple_with_heart_woman_woman_tone4_tone1": 30, "couple_with_heart_woman_woman_tone4_tone2": 30, "couple_with_heart_woman_woman_tone4_tone3": 30, "couple_with_heart_woman_woman_tone4_tone5": 30, "couple_with_heart_woman_woman_tone5": 30, "couple_with_heart_woman_woman_tone5_tone1": 30, "couple_with_heart_woman_woman_tone5_tone2": 30, "couple_with_heart_woman_woman_tone5_tone3": 30, "couple_with_heart_woman_woman_tone5_tone4": 30, "couple_with_heart_ww": 30, "couple_ww": 30, "couplekiss": 30, "couplekiss_man_man": 30, "couplekiss_man_woman": 30, "couplekiss_mm": 30, "couplekiss_woman_woman": 30, "couplekiss_ww": 30, "cow2": 30, "cow": 30, "cowboi": 30, "cowboy_hat_fac": 30, "cp": [30, 97, 111, 133, 135, 138, 172, 174, 238, 247, 248, 268, 269, 302, 307, 711, 758, 785, 786, 787, 788, 789, 818, 822, 823, 825, 826, 829, 830, 832, 838, 854, 862, 874, 885, 946, 1119], "cr": [30, 1006], "crab": 30, "crayon": 30, "credit_card": 30, "crescent_moon": 30, "cricket": 30, "cricket_bat_bal": 30, "cricket_gam": 30, "croatia": 30, "crocodil": 30, "croissant": 30, "cross": [30, 36, 63, 101, 102, 104, 131, 144, 168, 262, 274, 275, 303, 304, 305, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 892, 893, 895, 909, 912, 915, 917, 934, 938, 939, 940, 941, 943, 946, 1115], "crossed_fing": 30, "crossed_flag": 30, "crossed_sword": 30, "crown": 30, "cruise_ship": 30, "cry": [30, 132], "crying_cat_fac": 30, "crystal_bal": 30, "cu": 30, "cuba": 30, "cucumb": 30, "cup_with_straw": 30, "cupcak": 30, "cupid": 30, "curacao": 30, "curling_ston": 30, "curly_hair": 30, "curly_loop": 30, "currency_exchang": 30, "curri": [30, 193], "custard": 30, "cut_of_meat": 30, "cw": 30, "cx": 30, "cy": 30, "cyclon": 30, "cypru": 30, "cz": 30, "czech_republ": 30, "dagger": [30, 36], "dagger_knif": 30, "dancer": 30, "dancer_tone1": 30, "dancer_tone2": 30, "dancer_tone3": 30, "dancer_tone4": 30, "dancer_tone5": 30, "dancing_men": 30, "dancing_women": 30, "dango": 30, "dark_sunglass": 30, "dart": 30, "dash": [30, 32, 33, 36, 571], "date": [30, 129, 135, 143, 147, 164, 170, 200, 232, 248, 250, 315, 316, 411, 759, 951, 1045, 1047, 1051, 1053, 1060, 1068], "deaf_man": 30, "deaf_man_dark_skin_ton": 30, "deaf_man_light_skin_ton": 30, "deaf_man_medium_dark_skin_ton": 30, "deaf_man_medium_light_skin_ton": 30, "deaf_man_medium_skin_ton": 30, "deaf_man_tone1": 30, "deaf_man_tone2": 30, "deaf_man_tone3": 30, "deaf_man_tone4": 30, "deaf_man_tone5": 30, "deaf_person": 30, "deaf_person_dark_skin_ton": 30, "deaf_person_light_skin_ton": 30, "deaf_person_medium_dark_skin_ton": 30, "deaf_person_medium_light_skin_ton": 30, "deaf_person_medium_skin_ton": 30, "deaf_person_tone1": 30, "deaf_person_tone2": 30, "deaf_person_tone3": 30, "deaf_person_tone4": 30, "deaf_person_tone5": 30, "deaf_woman": 30, "deaf_woman_dark_skin_ton": 30, "deaf_woman_light_skin_ton": 30, "deaf_woman_medium_dark_skin_ton": 30, "deaf_woman_medium_light_skin_ton": 30, "deaf_woman_medium_skin_ton": 30, "deaf_woman_tone1": 30, "deaf_woman_tone2": 30, "deaf_woman_tone3": 30, "deaf_woman_tone4": 30, "deaf_woman_tone5": 30, "deciduous_tre": 30, "deer": 30, "denmark": 30, "department_stor": 30, "derelict_hous": 30, "derelict_house_build": 30, "desert": 30, "desert_island": 30, "desktop": [30, 120, 132, 137, 193, 262, 840, 917, 1117, 1124], "desktop_comput": 30, "detective_tone1": 30, "detective_tone2": 30, "detective_tone3": 30, "detective_tone4": 30, "detective_tone5": 30, "dg": 30, "diamond_shape_with_a_dot_insid": 30, "diamond": [30, 32, 36, 192, 205, 1086], "diego_garcia": 30, "digit_eight": 30, "digit_f": 30, "digit_four": 30, "digit_nin": 30, "digit_on": 30, "digit_seven": 30, "digit_six": 30, "digit_thre": 30, "digit_two": 30, "digit_zero": 30, "disappoint": 30, "disappointed_reliev": 30, "disguised_fac": 30, "divid": [30, 33, 34, 36, 224, 1063], "diving_mask": 30, "diya_lamp": 30, "dizzi": 30, "dizzy_fac": 30, "dj": 30, "djibouti": 30, "dk": 30, "dm": 30, "dna": 30, "do_not_litt": 30, "dodo": 30, "dog2": 30, "dog": [30, 387], "dollar": [30, 34], "doll": 30, "dolphin": 30, "dominica": 30, "dominican_republ": 30, "door": [30, 210, 505, 748, 966], "double_vertical_bar": 30, "doughnut": 30, "dove": 30, "dove_of_peac": 30, "dragon": [30, 95, 194, 210, 257, 259, 505, 529, 530, 535, 624, 636, 638, 667, 672, 683, 687, 692, 700, 708, 710, 711, 929], "dragon_fac": 30, "dress": [30, 129], "dromedary_camel": 30, "drool": 30, "drooling_fac": 30, "drop_of_blood": 30, "droplet": 30, "drum": 30, "drum_with_drumstick": 30, "dumpl": 30, "dvd": 30, "dz": 30, "mail": [30, 129, 204, 220, 227, 230, 245, 252, 262, 266, 849, 1072, 1107], "ea": [30, 142], "eagl": [30, 204, 1013], "ear": 30, "ear_of_ric": 30, "ear_tone1": 30, "ear_tone2": 30, "ear_tone3": 30, "ear_tone4": 30, "ear_tone5": 30, "ear_with_hearing_aid": 30, "ear_with_hearing_aid_dark_skin_ton": 30, "ear_with_hearing_aid_light_skin_ton": 30, "ear_with_hearing_aid_medium_dark_skin_ton": 30, "ear_with_hearing_aid_medium_light_skin_ton": 30, "ear_with_hearing_aid_medium_skin_ton": 30, "ear_with_hearing_aid_tone1": 30, "ear_with_hearing_aid_tone2": 30, "ear_with_hearing_aid_tone3": 30, "ear_with_hearing_aid_tone4": 30, "ear_with_hearing_aid_tone5": 30, "earth_africa": 30, "earth_america": 30, "earth_asia": 30, "ec": [30, 95, 142, 184, 299, 302, 307, 310, 319, 711, 787, 788, 818, 854], "ecuador": 30, "ee": [30, 142], "eg": [30, 33], "egg": [30, 59, 1000], "eggplant": 30, "egypt": 30, "eight": [30, 134, 152, 165, 175, 183, 212, 214, 302, 864, 1072], "eight_pointed_black_star": 30, "eight_spoked_asterisk": 30, "eject": 30, "eject_symbol": 30, "el_salvador": 30, "electric_plug": 30, "eleph": 30, "elev": 30, "elf": [30, 140, 143, 175, 191, 201, 417, 513, 901, 932, 933, 949, 983, 1127], "elf_dark_skin_ton": 30, "elf_light_skin_ton": 30, "elf_medium_dark_skin_ton": 30, "elf_medium_light_skin_ton": 30, "elf_medium_skin_ton": 30, "elf_tone1": 30, "elf_tone2": 30, "elf_tone3": 30, "elf_tone4": 30, "elf_tone5": 30, "england": 30, "envelop": [30, 758], "envelope_with_arrow": 30, "equatorial_guinea": 30, "er": [30, 141, 150, 165, 167, 175, 212, 1108, 1109, 1110], "eritrea": 30, "estonia": 30, "et": [30, 95, 537, 686, 878, 933, 934, 975], "ethiopia": 30, "euro": [30, 453, 454, 455, 467, 468, 469], "european_castl": 30, "european_post_offic": 30, "european_union": 30, "evergreen_tre": 30, "exclam": [30, 34], "expecting_woman": 30, "expecting_woman_tone1": 30, "expecting_woman_tone2": 30, "expecting_woman_tone3": 30, "expecting_woman_tone4": 30, "expecting_woman_tone5": 30, "exploding_head": 30, "expressionless": 30, "eye_in_speech_bubbl": 30, "eye_speech_bubbl": 30, "eyeglass": 30, "face_exh": 30, "face_in_cloud": 30, "face_palm": 30, "face_palm_tone1": 30, "face_palm_tone2": 30, "face_palm_tone3": 30, "face_palm_tone4": 30, "face_palm_tone5": 30, "face_vomit": 30, "face_with_cowboy_hat": 30, "face_with_hand_over_mouth": 30, "face_with_head_bandag": 30, "face_with_monocl": 30, "face_with_rolling_ey": 30, "face_with_spiral_ey": 30, "face_with_symbols_over_mouth": 30, "face_with_thermomet": 30, "facepalm": 30, "facepalm_tone1": 30, "facepalm_tone2": 30, "facepalm_tone3": 30, "facepalm_tone4": 30, "facepalm_tone5": 30, "factori": [30, 104, 192, 205, 240, 259, 311, 426, 433, 447, 461, 475, 527, 711, 884, 1086, 1116], "factory_work": 30, "factory_worker_dark_skin_ton": 30, "factory_worker_light_skin_ton": 30, "factory_worker_medium_dark_skin_ton": 30, "factory_worker_medium_light_skin_ton": 30, "factory_worker_medium_skin_ton": 30, "factory_worker_tone1": 30, "factory_worker_tone2": 30, "factory_worker_tone3": 30, "factory_worker_tone4": 30, "factory_worker_tone5": 30, "fairi": 30, "fairy_dark_skin_ton": 30, "fairy_light_skin_ton": 30, "fairy_medium_dark_skin_ton": 30, "fairy_medium_light_skin_ton": 30, "fairy_medium_skin_ton": 30, "fairy_tone1": 30, "fairy_tone2": 30, "fairy_tone3": 30, "fairy_tone4": 30, "fairy_tone5": 30, "falafel": 30, "falkland_island": 30, "fallen_leaf": 30, "famili": [30, 156, 858, 864], "family_man_boi": 30, "family_man_boy_boi": 30, "family_man_girl": 30, "family_man_girl_boi": 30, "family_man_girl_girl": 30, "family_man_man_boi": 30, "family_man_man_boy_boi": 30, "family_man_man_girl": 30, "family_man_man_girl_boi": 30, "family_man_man_girl_girl": 30, "family_man_woman_boi": 30, "family_man_woman_boy_boi": 30, "family_man_woman_girl": 30, "family_man_woman_girl_boi": 30, "family_man_woman_girl_girl": 30, "family_mmb": 30, "family_mmbb": 30, "family_mmg": 30, "family_mmgb": 30, "family_mmgg": 30, "family_mwbb": 30, "family_mwg": 30, "family_mwgb": 30, "family_mwgg": 30, "family_woman_boi": 30, "family_woman_boy_boi": 30, "family_woman_girl": 30, "family_woman_girl_boi": 30, "family_woman_girl_girl": 30, "family_woman_woman_boi": 30, "family_woman_woman_boy_boi": 30, "family_woman_woman_girl": 30, "family_woman_woman_girl_boi": 30, "family_woman_woman_girl_girl": 30, "family_wwb": 30, "family_wwbb": 30, "family_wwg": 30, "family_wwgb": 30, "family_wwgg": 30, "farmer": 30, "farmer_dark_skin_ton": 30, "farmer_light_skin_ton": 30, "farmer_medium_dark_skin_ton": 30, "farmer_medium_light_skin_ton": 30, "farmer_medium_skin_ton": 30, "farmer_tone1": 30, "farmer_tone2": 30, "farmer_tone3": 30, "farmer_tone4": 30, "farmer_tone5": 30, "faroe_island": 30, "fast_forward": 30, "fax": 30, "fear": [30, 250, 892], "feather": 30, "feet": 30, "female_detect": 30, "female_sign": 30, "fencer": 30, "fenc": 30, "ferris_wheel": 30, "ferri": 30, "fi": [30, 888, 896, 911], "field_hockei": 30, "fiji": 30, "file_cabinet": 30, "file_fold": 30, "film_fram": 30, "film_projector": 30, "film_strip": 30, "fingers_cross": 30, "fingers_crossed_tone1": 30, "fingers_crossed_tone2": 30, "fingers_crossed_tone3": 30, "fingers_crossed_tone4": 30, "fingers_crossed_tone5": 30, "finland": 30, "fire": [30, 41, 61, 389], "fire_engin": 30, "fire_extinguish": 30, "firecrack": 30, "firefight": 30, "firefighter_dark_skin_ton": 30, "firefighter_light_skin_ton": 30, "firefighter_medium_dark_skin_ton": 30, "firefighter_medium_light_skin_ton": 30, "firefighter_medium_skin_ton": 30, "firefighter_tone1": 30, "firefighter_tone2": 30, "firefighter_tone3": 30, "firefighter_tone4": 30, "firefighter_tone5": 30, "firework": 30, "first_plac": 30, "first_place_med": 30, "first_quarter_moon": 30, "first_quarter_moon_with_fac": 30, "fish": [30, 32, 1095], "fish_cak": 30, "fishing_pole_and_fish": 30, "fist": 30, "fist_left": 30, "fist_oncom": 30, "fist_rais": 30, "fist_right": 30, "fist_tone1": 30, "fist_tone2": 30, "fist_tone3": 30, "fist_tone4": 30, "fist_tone5": 30, "five": [30, 34, 61, 132, 152, 165, 175, 183, 204, 214, 220, 230, 245, 266, 283, 302, 320, 1013, 1055], "fj": 30, "fk": 30, "flag_ac": 30, "flag_ad": 30, "flag_a": 30, "flag_af": 30, "flag_ag": 30, "flag_ai": 30, "flag_al": 30, "flag_am": 30, "flag_ao": 30, "flag_aq": 30, "flag_ar": 30, "flag_at": 30, "flag_au": 30, "flag_aw": 30, "flag_ax": 30, "flag_az": 30, "flag_ba": 30, "flag_bb": 30, "flag_bd": 30, "flag_b": 30, "flag_bf": 30, "flag_bg": 30, "flag_bh": 30, "flag_bi": 30, "flag_bj": 30, "flag_bl": 30, "flag_black": 30, "flag_bm": 30, "flag_bn": 30, "flag_bo": 30, "flag_bq": 30, "flag_br": 30, "flag_bt": 30, "flag_bv": 30, "flag_bw": 30, "flag_bz": 30, "flag_ca": 30, "flag_cc": 30, "flag_cd": 30, "flag_cf": 30, "flag_cg": 30, "flag_ch": 30, "flag_ci": 30, "flag_ck": 30, "flag_cl": 30, "flag_cm": 30, "flag_cn": 30, "flag_co": 30, "flag_cp": 30, "flag_cr": 30, "flag_cu": 30, "flag_cv": 30, "flag_cw": 30, "flag_cx": 30, "flag_cz": 30, "flag_d": 30, "flag_dg": 30, "flag_dj": 30, "flag_dk": 30, "flag_dm": 30, "flag_do": 30, "flag_dz": 30, "flag_ea": 30, "flag_ec": 30, "flag_e": 30, "flag_eg": 30, "flag_eh": 30, "flag_er": 30, "flag_": 30, "flag_et": 30, "flag_eu": 30, "flag_fi": 30, "flag_fj": 30, "flag_fk": 30, "flag_fm": 30, "flag_fo": 30, "flag_fr": 30, "flag_ga": 30, "flag_gb": 30, "flag_gd": 30, "flag_g": 30, "flag_gf": 30, "flag_gg": 30, "flag_gh": 30, "flag_gi": 30, "flag_gl": 30, "flag_gm": 30, "flag_gn": 30, "flag_gp": 30, "flag_gq": 30, "flag_gr": 30, "flag_gt": 30, "flag_gu": 30, "flag_gw": 30, "flag_hk": 30, "flag_hm": 30, "flag_hn": 30, "flag_hr": 30, "flag_ht": 30, "flag_hu": 30, "flag_ic": 30, "flag_id": 30, "flag_i": 30, "flag_il": 30, "flag_im": 30, "flag_in": 30, "flag_io": 30, "flag_iq": 30, "flag_ir": 30, "flag_it": 30, "flag_j": 30, "flag_jm": 30, "flag_jo": 30, "flag_jp": 30, "flag_k": 30, "flag_kg": 30, "flag_kh": 30, "flag_ki": 30, "flag_km": 30, "flag_kn": 30, "flag_kp": 30, "flag_kr": 30, "flag_kw": 30, "flag_kz": 30, "flag_la": 30, "flag_lb": 30, "flag_lc": 30, "flag_li": 30, "flag_lk": 30, "flag_lr": 30, "flag_l": 30, "flag_lt": 30, "flag_lu": 30, "flag_lv": 30, "flag_ma": 30, "flag_mc": 30, "flag_md": 30, "flag_m": 30, "flag_mf": 30, "flag_mg": 30, "flag_mh": 30, "flag_mk": 30, "flag_ml": 30, "flag_mm": 30, "flag_mn": 30, "flag_mo": 30, "flag_mp": 30, "flag_mq": 30, "flag_mr": 30, "flag_mt": 30, "flag_mu": 30, "flag_mv": 30, "flag_mw": 30, "flag_mx": 30, "flag_mi": 30, "flag_mz": 30, "flag_na": 30, "flag_nc": 30, "flag_n": 30, "flag_nf": 30, "flag_ng": 30, "flag_ni": 30, "flag_nl": 30, "flag_no": 30, "flag_np": 30, "flag_nr": 30, "flag_nu": 30, "flag_nz": 30, "flag_om": 30, "flag_pa": 30, "flag_p": 30, "flag_pf": 30, "flag_pg": 30, "flag_ph": 30, "flag_pk": 30, "flag_pl": 30, "flag_pm": 30, "flag_pn": 30, "flag_pr": 30, "flag_pt": 30, "flag_pw": 30, "flag_pi": 30, "flag_qa": 30, "flag_r": 30, "flag_ro": 30, "flag_ru": 30, "flag_rw": 30, "flag_sa": 30, "flag_sb": 30, "flag_sc": 30, "flag_sd": 30, "flag_s": 30, "flag_sg": 30, "flag_sh": 30, "flag_si": 30, "flag_sj": 30, "flag_sk": 30, "flag_sl": 30, "flag_sm": 30, "flag_sn": 30, "flag_so": 30, "flag_sr": 30, "flag_ss": 30, "flag_st": 30, "flag_sv": 30, "flag_sx": 30, "flag_sz": 30, "flag_ta": 30, "flag_tc": 30, "flag_td": 30, "flag_tf": 30, "flag_tg": 30, "flag_th": 30, "flag_tj": 30, "flag_tk": 30, "flag_tl": 30, "flag_tm": 30, "flag_tn": 30, "flag_to": 30, "flag_tr": 30, "flag_tt": 30, "flag_tv": 30, "flag_tw": 30, "flag_tz": 30, "flag_ua": 30, "flag_ug": 30, "flag_um": 30, "flag_u": 30, "flag_ui": 30, "flag_uz": 30, "flag_va": 30, "flag_vc": 30, "flag_v": 30, "flag_vg": 30, "flag_vi": 30, "flag_vn": 30, "flag_vu": 30, "flag_wf": 30, "flag_whit": 30, "flag_w": 30, "flag_xk": 30, "flag_y": 30, "flag_yt": 30, "flag_za": 30, "flag_zm": 30, "flag_zw": 30, "flag": [30, 46, 132, 134, 149, 160, 171, 201, 207, 210, 214, 217, 220, 245, 248, 259, 261, 275, 295, 414, 415, 416, 421, 424, 610, 624, 701, 711, 717, 726, 740, 763, 766, 768, 856, 858, 887, 888, 889, 891, 905, 926, 930, 991], "flame": [30, 135], "flamingo": 30, "flan": 30, "flashlight": 30, "flatbread": 30, "fleur": 30, "li": [30, 128, 224, 563], "fleur_de_li": 30, "flight_arriv": 30, "flight_departur": 30, "floppy_disk": 30, "flower_playing_card": 30, "fly": [30, 784, 855], "flying_disc": 30, "flying_sauc": 30, "fm": 30, "fo": 30, "fog": 30, "foggi": 30, "fondu": 30, "foot": [30, 67, 363, 820], "foot_dark_skin_ton": 30, "foot_light_skin_ton": 30, "foot_medium_dark_skin_ton": 30, "foot_medium_light_skin_ton": 30, "foot_medium_skin_ton": 30, "foot_tone1": 30, "foot_tone2": 30, "foot_tone3": 30, "foot_tone4": 30, "foot_tone5": 30, "footbal": 30, "footprint": [30, 164, 980], "fork_and_knif": 30, "fork_and_knife_with_pl": 30, "fork_knife_pl": 30, "fortune_cooki": 30, "fountain": 30, "fountain_pen": 30, "four": [30, 33, 63, 131, 136, 152, 164, 165, 168, 175, 182, 183, 191, 207, 212, 214, 224, 227, 230, 241, 245, 248, 262, 265, 266, 272, 302, 758, 824, 994, 1002, 1055, 1056, 1067, 1093, 1116], "four_leaf_clov": 30, "fox": [30, 387], "fox_fac": 30, "fr": [30, 143], "frame_photo": 30, "frame_with_pictur": 30, "framed_pictur": 30, "franc": 30, "french_bread": 30, "french_guiana": 30, "french_polynesia": 30, "french_southern_territori": 30, "fried_egg": 30, "fried_shrimp": 30, "fri": 30, "frog": 30, "frowning2": 30, "frown": [30, 33, 67, 1113], "frowning_fac": 30, "frowning_man": 30, "frowning_woman": 30, "fuelpump": 30, "full_moon": 30, "full_moon_with_fac": 30, "funeral_urn": 30, "ga": 30, "gabon": 30, "gambia": 30, "game_di": 30, "garlic": 30, "gay_pride_flag": 30, "gb": [30, 886], "gd": 30, "ge": [30, 33], "gear": 30, "gem": 30, "gemini": 30, "geni": 30, "georgia": 30, "germani": [30, 132, 133, 320], "gf": 30, "gg": [30, 33, 36], "gh": [30, 128, 1081], "ghana": 30, "ghost": 30, "gi": [30, 128, 215], "gibraltar": 30, "gift": [30, 168, 199], "gift_heart": 30, "giraff": 30, "girl": 30, "girl_tone1": 30, "girl_tone2": 30, "girl_tone3": 30, "girl_tone4": 30, "girl_tone5": 30, "gl": [30, 33], "glass_of_milk": 30, "globe_with_meridian": 30, "glove": 30, "gm": 30, "gn": 30, "goal": [30, 40, 66, 132, 251, 254, 287, 411, 421, 690, 785, 786, 948, 957], "goal_net": 30, "goat": 30, "goggl": 30, "golf": 30, "golfer": 30, "golfing_man": 30, "golfing_woman": 30, "gorilla": 30, "gp": 30, "gq": 30, "gr": [30, 272, 1072], "grandma": 30, "grandma_tone1": 30, "grandma_tone2": 30, "grandma_tone3": 30, "grandma_tone4": 30, "grandma_tone5": 30, "grape": 30, "great_britain": 30, "greec": 30, "green_appl": 30, "green_book": 30, "green_circl": 30, "green_heart": 30, "green_salad": 30, "green_squar": 30, "greenland": 30, "grenada": 30, "grey_exclam": 30, "grey_quest": 30, "grin": 30, "gu": 30, "guadeloup": 30, "guam": 30, "guard": [30, 194, 210, 419, 698, 699, 701], "guard_tone1": 30, "guard_tone2": 30, "guard_tone3": 30, "guard_tone4": 30, "guard_tone5": 30, "guardsman": 30, "guardsman_tone1": 30, "guardsman_tone2": 30, "guardsman_tone3": 30, "guardsman_tone4": 30, "guardsman_tone5": 30, "guardswoman": 30, "guatemala": 30, "guernsei": 30, "guide_dog": 30, "guinea": 30, "guinea_bissau": 30, "guitar": 30, "gun": 30, "guyana": 30, "gw": 30, "gy": 30, "haircut": 30, "haircut_man": 30, "haircut_tone1": 30, "haircut_tone2": 30, "haircut_tone3": 30, "haircut_tone4": 30, "haircut_tone5": 30, "haircut_woman": 30, "haiti": 30, "hamburg": 30, "hammer": [30, 132, 208, 248, 738, 748], "hammer_and_pick": 30, "hammer_and_wrench": 30, "hammer_pick": 30, "hamster": 30, "hand": [30, 128, 140, 147, 152, 159, 168, 183, 194, 210, 229, 256, 310, 337, 348, 367, 369, 432, 451, 519, 530, 546, 548, 549, 675, 802, 818, 863, 864, 880, 908, 942, 960, 975, 982, 1113, 1119, 1131], "hand_splai": 30, "hand_splayed_tone1": 30, "hand_splayed_tone2": 30, "hand_splayed_tone3": 30, "hand_splayed_tone4": 30, "hand_splayed_tone5": 30, "hand_with_index_and_middle_finger_cross": 30, "hand_with_index_and_middle_fingers_crossed_tone1": 30, "hand_with_index_and_middle_fingers_crossed_tone2": 30, "hand_with_index_and_middle_fingers_crossed_tone3": 30, "hand_with_index_and_middle_fingers_crossed_tone4": 30, "hand_with_index_and_middle_fingers_crossed_tone5": 30, "handbag": 30, "handbal": 30, "handball_tone1": 30, "handball_tone2": 30, "handball_tone3": 30, "handball_tone4": 30, "handball_tone5": 30, "handshak": [30, 699], "handshake_tone1": 30, "handshake_tone2": 30, "handshake_tone3": 30, "handshake_tone4": 30, "handshake_tone5": 30, "hankei": 30, "hash": [30, 164, 170, 171, 182, 188, 201, 207, 208, 211, 215, 217, 220, 224, 245, 252, 266, 302, 422, 758, 1004, 1088], "hatched_chick": 30, "hatching_chick": 30, "head_bandag": 30, "headphon": 30, "headston": 30, "health_work": 30, "health_worker_dark_skin_ton": 30, "health_worker_light_skin_ton": 30, "health_worker_medium_dark_skin_ton": 30, "health_worker_medium_light_skin_ton": 30, "health_worker_medium_skin_ton": 30, "health_worker_tone1": 30, "health_worker_tone2": 30, "health_worker_tone3": 30, "health_worker_tone4": 30, "health_worker_tone5": 30, "hear_no_evil": 30, "heart_decor": 30, "heart_exclam": 30, "heart_ey": 30, "heart_eyes_cat": 30, "heart_on_fir": 30, "heartbeat": 30, "heartpuls": 30, "heavy_check_mark": 30, "heavy_division_sign": 30, "heavy_dollar_sign": 30, "heavy_heart_exclam": 30, "heavy_heart_exclamation_mark_orna": 30, "heavy_minus_sign": 30, "heavy_multiplication_x": 30, "heavy_plus_sign": 30, "hedgehog": 30, "helicopt": 30, "helmet_with_cross": 30, "helmet_with_white_cross": 30, "herb": 30, "hibiscu": 30, "high_bright": 30, "high_heel": 30, "hiking_boot": 30, "hindu_templ": 30, "hippopotamu": 30, "hk": 30, "hn": 30, "hocho": 30, "hockei": 30, "hole": [30, 210, 711, 854, 884, 893, 894, 895, 912, 925], "hondura": 30, "honey_pot": 30, "hong_kong": 30, "hook": [30, 32, 36, 183, 201, 207, 217, 220, 250, 403, 438, 694, 717], "hors": 30, "horse_rac": 30, "horse_racing_tone1": 30, "horse_racing_tone2": 30, "horse_racing_tone3": 30, "horse_racing_tone4": 30, "horse_racing_tone5": 30, "hospit": 30, "hot_dog": 30, "hot_fac": 30, "hot_pepp": 30, "hotdog": 30, "hotel": [30, 137, 320], "hotspr": 30, "hourglass": 30, "hourglass_flowing_sand": 30, "hous": [30, 132], "house_abandon": 30, "house_build": 30, "house_with_garden": 30, "hr": 30, "ht": 30, "hu": [30, 293, 294, 311], "hug": 30, "hugging_fac": 30, "hungari": 30, "hush": 30, "hut": 30, "ic": [30, 348, 429, 458, 1112], "ice_cream": 30, "ice_cub": 30, "ice_hockei": 30, "ice_sk": 30, "icecream": 30, "iceland": 30, "id": [30, 40, 44, 105, 108, 109, 134, 137, 147, 151, 154, 164, 165, 175, 182, 188, 201, 204, 207, 214, 217, 218, 220, 227, 230, 234, 242, 245, 252, 258, 262, 266, 272, 277, 297, 418, 453, 454, 455, 467, 468, 469, 486, 722, 754, 756, 778, 785, 786, 791, 793, 802, 803, 804, 814, 821, 842, 844, 845, 856, 862, 864, 871, 890, 900, 942, 969, 980, 996, 1034, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1062, 1067, 1085, 1129], "ideograph_advantag": 30, "ie": 30, "il": [30, 142], "imp": 30, "inbox_trai": 30, "incoming_envelop": 30, "india": [30, 192, 241, 265, 1056], "indonesia": 30, "infin": [30, 171, 220, 961, 962], "information_desk_person": 30, "information_desk_person_tone1": 30, "information_desk_person_tone2": 30, "information_desk_person_tone3": 30, "information_desk_person_tone4": 30, "information_desk_person_tone5": 30, "\u2139": 30, "information_sourc": 30, "interrobang": 30, "iphon": 30, "iq": 30, "ir": [30, 818], "iran": 30, "iraq": 30, "ireland": 30, "island": 30, "isle_of_man": 30, "israel": [30, 192, 241, 1056], "itali": 30, "izakaya_lantern": 30, "jack_o_lantern": 30, "jamaica": 30, "japan": 30, "japanese_castl": 30, "japanese_goblin": 30, "japanese_ogr": 30, "jean": 30, "jersei": 30, "jigsaw": 30, "jm": 30, "jo": [30, 175, 188, 201, 204, 214, 217, 220, 224, 227, 266, 272], "jordan": 30, "joi": 30, "joy_cat": 30, "joystick": 30, "jp": 30, "judg": 30, "judge_dark_skin_ton": 30, "judge_light_skin_ton": 30, "judge_medium_dark_skin_ton": 30, "judge_medium_light_skin_ton": 30, "judge_medium_skin_ton": 30, "judge_tone1": 30, "judge_tone2": 30, "judge_tone3": 30, "judge_tone4": 30, "judge_tone5": 30, "juggler": 30, "juggler_tone1": 30, "juggler_tone2": 30, "juggler_tone3": 30, "juggler_tone4": 30, "juggler_tone5": 30, "juggl": 30, "juggling_tone1": 30, "juggling_tone2": 30, "juggling_tone3": 30, "juggling_tone4": 30, "juggling_tone5": 30, "kaaba": 30, "kangaroo": 30, "karate_uniform": 30, "kayak": 30, "kazakhstan": 30, "ke": 30, "kenya": 30, "key2": 30, "keyboard": [30, 302, 800, 850], "keycap_ten": 30, "kg": 30, "kh": 30, "ki": [30, 173], "kick_scoot": 30, "kimono": 30, "kiribati": 30, "kiss_dark_skin_ton": 30, "kiss_light_skin_ton": 30, "kiss_man_man_dark_skin_ton": 30, "kiss_man_man_dark_skin_tone_light_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_dark_skin_tone_medium_skin_ton": 30, "kiss_man_man_light_skin_ton": 30, "kiss_man_man_light_skin_tone_dark_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_light_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_dark_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_light_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 30, "kiss_man_man_medium_skin_ton": 30, "kiss_man_man_medium_skin_tone_dark_skin_ton": 30, "kiss_man_man_medium_skin_tone_light_skin_ton": 30, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 30, "kiss_man_man_tone1": 30, "kiss_man_man_tone1_tone2": 30, "kiss_man_man_tone1_tone3": 30, "kiss_man_man_tone1_tone4": 30, "kiss_man_man_tone1_tone5": 30, "kiss_man_man_tone2": 30, "kiss_man_man_tone2_tone1": 30, "kiss_man_man_tone2_tone3": 30, "kiss_man_man_tone2_tone4": 30, "kiss_man_man_tone2_tone5": 30, "kiss_man_man_tone3": 30, "kiss_man_man_tone3_tone1": 30, "kiss_man_man_tone3_tone2": 30, "kiss_man_man_tone3_tone4": 30, "kiss_man_man_tone3_tone5": 30, "kiss_man_man_tone4": 30, "kiss_man_man_tone4_tone1": 30, "kiss_man_man_tone4_tone2": 30, "kiss_man_man_tone4_tone3": 30, "kiss_man_man_tone4_tone5": 30, "kiss_man_man_tone5": 30, "kiss_man_man_tone5_tone1": 30, "kiss_man_man_tone5_tone2": 30, "kiss_man_man_tone5_tone3": 30, "kiss_man_man_tone5_tone4": 30, "kiss_medium_dark_skin_ton": 30, "kiss_medium_light_skin_ton": 30, "kiss_medium_skin_ton": 30, "kiss_mm": 30, "kiss_person_person_dark_skin_tone_light_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_dark_skin_tone_medium_skin_ton": 30, "kiss_person_person_light_skin_tone_dark_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_light_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 30, "kiss_person_person_medium_skin_tone_dark_skin_ton": 30, "kiss_person_person_medium_skin_tone_light_skin_ton": 30, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 30, "kiss_person_person_tone1_tone2": 30, "kiss_person_person_tone1_tone3": 30, "kiss_person_person_tone1_tone4": 30, "kiss_person_person_tone1_tone5": 30, "kiss_person_person_tone2_tone1": 30, "kiss_person_person_tone2_tone3": 30, "kiss_person_person_tone2_tone4": 30, "kiss_person_person_tone2_tone5": 30, "kiss_person_person_tone3_tone1": 30, "kiss_person_person_tone3_tone2": 30, "kiss_person_person_tone3_tone4": 30, "kiss_person_person_tone3_tone5": 30, "kiss_person_person_tone4_tone1": 30, "kiss_person_person_tone4_tone2": 30, "kiss_person_person_tone4_tone3": 30, "kiss_person_person_tone4_tone5": 30, "kiss_person_person_tone5_tone1": 30, "kiss_person_person_tone5_tone2": 30, "kiss_person_person_tone5_tone3": 30, "kiss_person_person_tone5_tone4": 30, "kiss_tone1": 30, "kiss_tone2": 30, "kiss_tone3": 30, "kiss_tone4": 30, "kiss_tone5": 30, "kiss_woman_man": 30, "kiss_woman_man_dark_skin_ton": 30, "kiss_woman_man_dark_skin_tone_light_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_man_light_skin_ton": 30, "kiss_woman_man_light_skin_tone_dark_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_light_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_dark_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_light_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 30, "kiss_woman_man_medium_skin_ton": 30, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 30, "kiss_woman_man_medium_skin_tone_light_skin_ton": 30, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 30, "kiss_woman_man_tone1": 30, "kiss_woman_man_tone1_tone2": 30, "kiss_woman_man_tone1_tone3": 30, "kiss_woman_man_tone1_tone4": 30, "kiss_woman_man_tone1_tone5": 30, "kiss_woman_man_tone2": 30, "kiss_woman_man_tone2_tone1": 30, "kiss_woman_man_tone2_tone3": 30, "kiss_woman_man_tone2_tone4": 30, "kiss_woman_man_tone2_tone5": 30, "kiss_woman_man_tone3": 30, "kiss_woman_man_tone3_tone1": 30, "kiss_woman_man_tone3_tone2": 30, "kiss_woman_man_tone3_tone4": 30, "kiss_woman_man_tone3_tone5": 30, "kiss_woman_man_tone4": 30, "kiss_woman_man_tone4_tone1": 30, "kiss_woman_man_tone4_tone2": 30, "kiss_woman_man_tone4_tone3": 30, "kiss_woman_man_tone4_tone5": 30, "kiss_woman_man_tone5": 30, "kiss_woman_man_tone5_tone1": 30, "kiss_woman_man_tone5_tone2": 30, "kiss_woman_man_tone5_tone3": 30, "kiss_woman_man_tone5_tone4": 30, "kiss_woman_woman_dark_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_light_skin_ton": 30, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_light_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 30, "kiss_woman_woman_medium_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 30, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 30, "kiss_woman_woman_tone1": 30, "kiss_woman_woman_tone1_tone2": 30, "kiss_woman_woman_tone1_tone3": 30, "kiss_woman_woman_tone1_tone4": 30, "kiss_woman_woman_tone1_tone5": 30, "kiss_woman_woman_tone2": 30, "kiss_woman_woman_tone2_tone1": 30, "kiss_woman_woman_tone2_tone3": 30, "kiss_woman_woman_tone2_tone4": 30, "kiss_woman_woman_tone2_tone5": 30, "kiss_woman_woman_tone3": 30, "kiss_woman_woman_tone3_tone1": 30, "kiss_woman_woman_tone3_tone2": 30, "kiss_woman_woman_tone3_tone4": 30, "kiss_woman_woman_tone3_tone5": 30, "kiss_woman_woman_tone4": 30, "kiss_woman_woman_tone4_tone1": 30, "kiss_woman_woman_tone4_tone2": 30, "kiss_woman_woman_tone4_tone3": 30, "kiss_woman_woman_tone4_tone5": 30, "kiss_woman_woman_tone5": 30, "kiss_woman_woman_tone5_tone1": 30, "kiss_woman_woman_tone5_tone2": 30, "kiss_woman_woman_tone5_tone3": 30, "kiss_woman_woman_tone5_tone4": 30, "kiss_ww": 30, "kissing_cat": 30, "kissing_closed_ey": 30, "kissing_smiling_ey": 30, "kite": 30, "kiwi": 30, "kiwi_fruit": 30, "kiwifruit": 30, "km": [30, 153, 155], "kn": 30, "knife": [30, 717, 884, 1113], "knot": 30, "koala": 30, "koko": 30, "korea": 30, "kosovo": 30, "kp": 30, "kr": 30, "kuwait": 30, "kw": [30, 201, 207, 217, 220], "ky": 30, "kyrgyzstan": 30, "kz": 30, "la": 30, "lab_coat": 30, "label": [30, 37, 38, 56, 153, 155, 202, 215, 229, 232, 265, 271, 359, 364, 371, 377, 381, 384, 388, 391, 397, 401, 406, 407, 628, 629, 667, 708, 710, 711, 738, 1056, 1063, 1078, 1081], "lacross": 30, "ladder": 30, "lady_beetl": 30, "lao": 30, "large_blue_circl": 30, "large_blue_diamond": 30, "large_orange_diamond": 30, "last_quarter_moon": 30, "last_quarter_moon_with_fac": 30, "latin_cross": 30, "latvia": 30, "laugh": 30, "lb": 30, "lc": [30, 169], "leafy_green": 30, "leav": [30, 47, 63, 129, 132, 133, 139, 142, 172, 201, 224, 261, 313, 531, 533, 542, 543, 558, 560, 561, 706, 709, 721, 726, 736, 758, 863, 888, 908, 996, 1072], "lebanon": 30, "ledger": 30, "left_facing_fist": 30, "left_facing_fist_tone1": 30, "left_facing_fist_tone2": 30, "left_facing_fist_tone3": 30, "left_facing_fist_tone4": 30, "left_facing_fist_tone5": 30, "left_fist": 30, "left_fist_tone1": 30, "left_fist_tone2": 30, "left_fist_tone3": 30, "left_fist_tone4": 30, "left_fist_tone5": 30, "left_luggag": 30, "left_right_arrow": 30, "left_speech_bubbl": 30, "leftwards_arrow_with_hook": 30, "leg": [30, 33], "leg_dark_skin_ton": 30, "leg_light_skin_ton": 30, "leg_medium_dark_skin_ton": 30, "leg_medium_light_skin_ton": 30, "leg_medium_skin_ton": 30, "leg_tone1": 30, "leg_tone2": 30, "leg_tone3": 30, "leg_tone4": 30, "leg_tone5": 30, "lemon": 30, "leo": [30, 293, 294, 311], "leopard": 30, "lesotho": 30, "level_slid": 30, "levit": 30, "levitate_tone1": 30, "levitate_tone2": 30, "levitate_tone3": 30, "levitate_tone4": 30, "levitate_tone5": 30, "liar": 30, "liberia": 30, "libra": 30, "libya": 30, "liechtenstein": 30, "lifter": 30, "lifter_tone1": 30, "lifter_tone2": 30, "lifter_tone3": 30, "lifter_tone4": 30, "lifter_tone5": 30, "light_rail": 30, "linked_paperclip": 30, "lion": 30, "lion_fac": 30, "lip": 30, "lipstick": 30, "lithuania": 30, "lizard": 30, "lk": 30, "llama": 30, "lobster": 30, "lock": [30, 132, 134, 164, 168, 201, 207, 210, 217, 220, 236, 237, 239, 248, 269, 279, 283, 311, 385, 425, 505, 688, 694, 697, 699, 700, 706, 710, 711, 748, 756, 761, 766, 795, 871, 903, 908, 910, 918, 925, 966, 1056, 1113, 1125, 1128], "lock_with_ink_pen": 30, "lollipop": 30, "long_drum": 30, "loud_sound": 30, "loudspeak": 30, "love_hotel": 30, "love_lett": 30, "love_you_gestur": 30, "love_you_gesture_dark_skin_ton": 30, "love_you_gesture_light_skin_ton": 30, "love_you_gesture_medium_dark_skin_ton": 30, "love_you_gesture_medium_light_skin_ton": 30, "love_you_gesture_medium_skin_ton": 30, "love_you_gesture_tone1": 30, "love_you_gesture_tone2": 30, "love_you_gesture_tone3": 30, "love_you_gesture_tone4": 30, "love_you_gesture_tone5": 30, "low_bright": 30, "lower_left_ballpoint_pen": 30, "lower_left_crayon": 30, "lower_left_fountain_pen": 30, "lower_left_paintbrush": 30, "lr": 30, "lu": 30, "luggag": 30, "lung": 30, "luxembourg": 30, "lv": 30, "ly": 30, "lying_fac": 30, "ma": 30, "macau": 30, "macedonia": 30, "madagascar": 30, "mag": 30, "mag_right": 30, "mage": 30, "mage_dark_skin_ton": 30, "mage_light_skin_ton": 30, "mage_medium_dark_skin_ton": 30, "mage_medium_light_skin_ton": 30, "mage_medium_skin_ton": 30, "mage_tone1": 30, "mage_tone2": 30, "mage_tone3": 30, "mage_tone4": 30, "mage_tone5": 30, "magic_wand": 30, "magnet": 30, "mahjong": 30, "mailbox": 30, "mailbox_clos": 30, "mailbox_with_mail": 30, "mailbox_with_no_mail": 30, "malawi": 30, "malaysia": 30, "maldiv": 30, "male_danc": 30, "male_dancer_tone1": 30, "male_dancer_tone2": 30, "male_dancer_tone3": 30, "male_dancer_tone4": 30, "male_dancer_tone5": 30, "male_detect": 30, "male_sign": 30, "mali": 30, "malta": 30, "mammoth": 30, "man_artist": 30, "man_artist_dark_skin_ton": 30, "man_artist_light_skin_ton": 30, "man_artist_medium_dark_skin_ton": 30, "man_artist_medium_light_skin_ton": 30, "man_artist_medium_skin_ton": 30, "man_artist_tone1": 30, "man_artist_tone2": 30, "man_artist_tone3": 30, "man_artist_tone4": 30, "man_artist_tone5": 30, "man_astronaut": 30, "man_astronaut_dark_skin_ton": 30, "man_astronaut_light_skin_ton": 30, "man_astronaut_medium_dark_skin_ton": 30, "man_astronaut_medium_light_skin_ton": 30, "man_astronaut_medium_skin_ton": 30, "man_astronaut_tone1": 30, "man_astronaut_tone2": 30, "man_astronaut_tone3": 30, "man_astronaut_tone4": 30, "man_astronaut_tone5": 30, "man_bald": 30, "man_bald_dark_skin_ton": 30, "man_bald_light_skin_ton": 30, "man_bald_medium_dark_skin_ton": 30, "man_bald_medium_light_skin_ton": 30, "man_bald_medium_skin_ton": 30, "man_bald_tone1": 30, "man_bald_tone2": 30, "man_bald_tone3": 30, "man_bald_tone4": 30, "man_bald_tone5": 30, "man_beard": 30, "man_bik": 30, "man_biking_dark_skin_ton": 30, "man_biking_light_skin_ton": 30, "man_biking_medium_dark_skin_ton": 30, "man_biking_medium_light_skin_ton": 30, "man_biking_medium_skin_ton": 30, "man_biking_tone1": 30, "man_biking_tone2": 30, "man_biking_tone3": 30, "man_biking_tone4": 30, "man_biking_tone5": 30, "man_bouncing_bal": 30, "man_bouncing_ball_dark_skin_ton": 30, "man_bouncing_ball_light_skin_ton": 30, "man_bouncing_ball_medium_dark_skin_ton": 30, "man_bouncing_ball_medium_light_skin_ton": 30, "man_bouncing_ball_medium_skin_ton": 30, "man_bouncing_ball_tone1": 30, "man_bouncing_ball_tone2": 30, "man_bouncing_ball_tone3": 30, "man_bouncing_ball_tone4": 30, "man_bouncing_ball_tone5": 30, "man_bow": 30, "man_bowing_dark_skin_ton": 30, "man_bowing_light_skin_ton": 30, "man_bowing_medium_dark_skin_ton": 30, "man_bowing_medium_light_skin_ton": 30, "man_bowing_medium_skin_ton": 30, "man_bowing_tone1": 30, "man_bowing_tone2": 30, "man_bowing_tone3": 30, "man_bowing_tone4": 30, "man_bowing_tone5": 30, "man_cartwheel": 30, "man_cartwheeling_dark_skin_ton": 30, "man_cartwheeling_light_skin_ton": 30, "man_cartwheeling_medium_dark_skin_ton": 30, "man_cartwheeling_medium_light_skin_ton": 30, "man_cartwheeling_medium_skin_ton": 30, "man_cartwheeling_tone1": 30, "man_cartwheeling_tone2": 30, "man_cartwheeling_tone3": 30, "man_cartwheeling_tone4": 30, "man_cartwheeling_tone5": 30, "man_climb": 30, "man_climbing_dark_skin_ton": 30, "man_climbing_light_skin_ton": 30, "man_climbing_medium_dark_skin_ton": 30, "man_climbing_medium_light_skin_ton": 30, "man_climbing_medium_skin_ton": 30, "man_climbing_tone1": 30, "man_climbing_tone2": 30, "man_climbing_tone3": 30, "man_climbing_tone4": 30, "man_climbing_tone5": 30, "man_construction_work": 30, "man_construction_worker_dark_skin_ton": 30, "man_construction_worker_light_skin_ton": 30, "man_construction_worker_medium_dark_skin_ton": 30, "man_construction_worker_medium_light_skin_ton": 30, "man_construction_worker_medium_skin_ton": 30, "man_construction_worker_tone1": 30, "man_construction_worker_tone2": 30, "man_construction_worker_tone3": 30, "man_construction_worker_tone4": 30, "man_construction_worker_tone5": 30, "man_cook": 30, "man_cook_dark_skin_ton": 30, "man_cook_light_skin_ton": 30, "man_cook_medium_dark_skin_ton": 30, "man_cook_medium_light_skin_ton": 30, "man_cook_medium_skin_ton": 30, "man_cook_tone1": 30, "man_cook_tone2": 30, "man_cook_tone3": 30, "man_cook_tone4": 30, "man_cook_tone5": 30, "man_curly_hair": 30, "man_curly_haired_dark_skin_ton": 30, "man_curly_haired_light_skin_ton": 30, "man_curly_haired_medium_dark_skin_ton": 30, "man_curly_haired_medium_light_skin_ton": 30, "man_curly_haired_medium_skin_ton": 30, "man_curly_haired_tone1": 30, "man_curly_haired_tone2": 30, "man_curly_haired_tone3": 30, "man_curly_haired_tone4": 30, "man_curly_haired_tone5": 30, "man_danc": 30, "man_dancing_tone1": 30, "man_dancing_tone2": 30, "man_dancing_tone3": 30, "man_dancing_tone4": 30, "man_dancing_tone5": 30, "man_dark_skin_tone_beard": 30, "man_detect": 30, "man_detective_dark_skin_ton": 30, "man_detective_light_skin_ton": 30, "man_detective_medium_dark_skin_ton": 30, "man_detective_medium_light_skin_ton": 30, "man_detective_medium_skin_ton": 30, "man_detective_tone1": 30, "man_detective_tone2": 30, "man_detective_tone3": 30, "man_detective_tone4": 30, "man_detective_tone5": 30, "man_elf": 30, "man_elf_dark_skin_ton": 30, "man_elf_light_skin_ton": 30, "man_elf_medium_dark_skin_ton": 30, "man_elf_medium_light_skin_ton": 30, "man_elf_medium_skin_ton": 30, "man_elf_tone1": 30, "man_elf_tone2": 30, "man_elf_tone3": 30, "man_elf_tone4": 30, "man_elf_tone5": 30, "man_facepalm": 30, "man_facepalming_dark_skin_ton": 30, "man_facepalming_light_skin_ton": 30, "man_facepalming_medium_dark_skin_ton": 30, "man_facepalming_medium_light_skin_ton": 30, "man_facepalming_medium_skin_ton": 30, "man_facepalming_tone1": 30, "man_facepalming_tone2": 30, "man_facepalming_tone3": 30, "man_facepalming_tone4": 30, "man_facepalming_tone5": 30, "man_factory_work": 30, "man_factory_worker_dark_skin_ton": 30, "man_factory_worker_light_skin_ton": 30, "man_factory_worker_medium_dark_skin_ton": 30, "man_factory_worker_medium_light_skin_ton": 30, "man_factory_worker_medium_skin_ton": 30, "man_factory_worker_tone1": 30, "man_factory_worker_tone2": 30, "man_factory_worker_tone3": 30, "man_factory_worker_tone4": 30, "man_factory_worker_tone5": 30, "man_fairi": 30, "man_fairy_dark_skin_ton": 30, "man_fairy_light_skin_ton": 30, "man_fairy_medium_dark_skin_ton": 30, "man_fairy_medium_light_skin_ton": 30, "man_fairy_medium_skin_ton": 30, "man_fairy_tone1": 30, "man_fairy_tone2": 30, "man_fairy_tone3": 30, "man_fairy_tone4": 30, "man_fairy_tone5": 30, "man_farm": 30, "man_farmer_dark_skin_ton": 30, "man_farmer_light_skin_ton": 30, "man_farmer_medium_dark_skin_ton": 30, "man_farmer_medium_light_skin_ton": 30, "man_farmer_medium_skin_ton": 30, "man_farmer_tone1": 30, "man_farmer_tone2": 30, "man_farmer_tone3": 30, "man_farmer_tone4": 30, "man_farmer_tone5": 30, "man_feeding_babi": 30, "man_feeding_baby_dark_skin_ton": 30, "man_feeding_baby_light_skin_ton": 30, "man_feeding_baby_medium_dark_skin_ton": 30, "man_feeding_baby_medium_light_skin_ton": 30, "man_feeding_baby_medium_skin_ton": 30, "man_feeding_baby_tone1": 30, "man_feeding_baby_tone2": 30, "man_feeding_baby_tone3": 30, "man_feeding_baby_tone4": 30, "man_feeding_baby_tone5": 30, "man_firefight": 30, "man_firefighter_dark_skin_ton": 30, "man_firefighter_light_skin_ton": 30, "man_firefighter_medium_dark_skin_ton": 30, "man_firefighter_medium_light_skin_ton": 30, "man_firefighter_medium_skin_ton": 30, "man_firefighter_tone1": 30, "man_firefighter_tone2": 30, "man_firefighter_tone3": 30, "man_firefighter_tone4": 30, "man_firefighter_tone5": 30, "man_frown": 30, "man_frowning_dark_skin_ton": 30, "man_frowning_light_skin_ton": 30, "man_frowning_medium_dark_skin_ton": 30, "man_frowning_medium_light_skin_ton": 30, "man_frowning_medium_skin_ton": 30, "man_frowning_tone1": 30, "man_frowning_tone2": 30, "man_frowning_tone3": 30, "man_frowning_tone4": 30, "man_frowning_tone5": 30, "man_geni": 30, "man_gesturing_no": 30, "man_gesturing_no_dark_skin_ton": 30, "man_gesturing_no_light_skin_ton": 30, "man_gesturing_no_medium_dark_skin_ton": 30, "man_gesturing_no_medium_light_skin_ton": 30, "man_gesturing_no_medium_skin_ton": 30, "man_gesturing_no_tone1": 30, "man_gesturing_no_tone2": 30, "man_gesturing_no_tone3": 30, "man_gesturing_no_tone4": 30, "man_gesturing_no_tone5": 30, "man_gesturing_ok": 30, "man_gesturing_ok_dark_skin_ton": 30, "man_gesturing_ok_light_skin_ton": 30, "man_gesturing_ok_medium_dark_skin_ton": 30, "man_gesturing_ok_medium_light_skin_ton": 30, "man_gesturing_ok_medium_skin_ton": 30, "man_gesturing_ok_tone1": 30, "man_gesturing_ok_tone2": 30, "man_gesturing_ok_tone3": 30, "man_gesturing_ok_tone4": 30, "man_gesturing_ok_tone5": 30, "man_getting_face_massag": 30, "man_getting_face_massage_dark_skin_ton": 30, "man_getting_face_massage_light_skin_ton": 30, "man_getting_face_massage_medium_dark_skin_ton": 30, "man_getting_face_massage_medium_light_skin_ton": 30, "man_getting_face_massage_medium_skin_ton": 30, "man_getting_face_massage_tone1": 30, "man_getting_face_massage_tone2": 30, "man_getting_face_massage_tone3": 30, "man_getting_face_massage_tone4": 30, "man_getting_face_massage_tone5": 30, "man_getting_haircut": 30, "man_getting_haircut_dark_skin_ton": 30, "man_getting_haircut_light_skin_ton": 30, "man_getting_haircut_medium_dark_skin_ton": 30, "man_getting_haircut_medium_light_skin_ton": 30, "man_getting_haircut_medium_skin_ton": 30, "man_getting_haircut_tone1": 30, "man_getting_haircut_tone2": 30, "man_getting_haircut_tone3": 30, "man_getting_haircut_tone4": 30, "man_getting_haircut_tone5": 30, "man_golf": 30, "man_golfing_dark_skin_ton": 30, "man_golfing_light_skin_ton": 30, "man_golfing_medium_dark_skin_ton": 30, "man_golfing_medium_light_skin_ton": 30, "man_golfing_medium_skin_ton": 30, "man_golfing_tone1": 30, "man_golfing_tone2": 30, "man_golfing_tone3": 30, "man_golfing_tone4": 30, "man_golfing_tone5": 30, "man_guard": 30, "man_guard_dark_skin_ton": 30, "man_guard_light_skin_ton": 30, "man_guard_medium_dark_skin_ton": 30, "man_guard_medium_light_skin_ton": 30, "man_guard_medium_skin_ton": 30, "man_guard_tone1": 30, "man_guard_tone2": 30, "man_guard_tone3": 30, "man_guard_tone4": 30, "man_guard_tone5": 30, "man_health_work": 30, "man_health_worker_dark_skin_ton": 30, "man_health_worker_light_skin_ton": 30, "man_health_worker_medium_dark_skin_ton": 30, "man_health_worker_medium_light_skin_ton": 30, "man_health_worker_medium_skin_ton": 30, "man_health_worker_tone1": 30, "man_health_worker_tone2": 30, "man_health_worker_tone3": 30, "man_health_worker_tone4": 30, "man_health_worker_tone5": 30, "man_in_business_suit_levit": 30, "man_in_business_suit_levitating_dark_skin_ton": 30, "man_in_business_suit_levitating_light_skin_ton": 30, "man_in_business_suit_levitating_medium_dark_skin_ton": 30, "man_in_business_suit_levitating_medium_light_skin_ton": 30, "man_in_business_suit_levitating_medium_skin_ton": 30, "man_in_business_suit_levitating_tone1": 30, "man_in_business_suit_levitating_tone2": 30, "man_in_business_suit_levitating_tone3": 30, "man_in_business_suit_levitating_tone4": 30, "man_in_business_suit_levitating_tone5": 30, "man_in_lotus_posit": 30, "man_in_lotus_position_dark_skin_ton": 30, "man_in_lotus_position_light_skin_ton": 30, "man_in_lotus_position_medium_dark_skin_ton": 30, "man_in_lotus_position_medium_light_skin_ton": 30, "man_in_lotus_position_medium_skin_ton": 30, "man_in_lotus_position_tone1": 30, "man_in_lotus_position_tone2": 30, "man_in_lotus_position_tone3": 30, "man_in_lotus_position_tone4": 30, "man_in_lotus_position_tone5": 30, "man_in_manual_wheelchair": 30, "man_in_manual_wheelchair_dark_skin_ton": 30, "man_in_manual_wheelchair_light_skin_ton": 30, "man_in_manual_wheelchair_medium_dark_skin_ton": 30, "man_in_manual_wheelchair_medium_light_skin_ton": 30, "man_in_manual_wheelchair_medium_skin_ton": 30, "man_in_manual_wheelchair_tone1": 30, "man_in_manual_wheelchair_tone2": 30, "man_in_manual_wheelchair_tone3": 30, "man_in_manual_wheelchair_tone4": 30, "man_in_manual_wheelchair_tone5": 30, "man_in_motorized_wheelchair": 30, "man_in_motorized_wheelchair_dark_skin_ton": 30, "man_in_motorized_wheelchair_light_skin_ton": 30, "man_in_motorized_wheelchair_medium_dark_skin_ton": 30, "man_in_motorized_wheelchair_medium_light_skin_ton": 30, "man_in_motorized_wheelchair_medium_skin_ton": 30, "man_in_motorized_wheelchair_tone1": 30, "man_in_motorized_wheelchair_tone2": 30, "man_in_motorized_wheelchair_tone3": 30, "man_in_motorized_wheelchair_tone4": 30, "man_in_motorized_wheelchair_tone5": 30, "man_in_steamy_room": 30, "man_in_steamy_room_dark_skin_ton": 30, "man_in_steamy_room_light_skin_ton": 30, "man_in_steamy_room_medium_dark_skin_ton": 30, "man_in_steamy_room_medium_light_skin_ton": 30, "man_in_steamy_room_medium_skin_ton": 30, "man_in_steamy_room_tone1": 30, "man_in_steamy_room_tone2": 30, "man_in_steamy_room_tone3": 30, "man_in_steamy_room_tone4": 30, "man_in_steamy_room_tone5": 30, "man_in_tuxedo": 30, "man_in_tuxedo_dark_skin_ton": 30, "man_in_tuxedo_light_skin_ton": 30, "man_in_tuxedo_medium_dark_skin_ton": 30, "man_in_tuxedo_medium_light_skin_ton": 30, "man_in_tuxedo_medium_skin_ton": 30, "man_in_tuxedo_tone1": 30, "man_in_tuxedo_tone2": 30, "man_in_tuxedo_tone3": 30, "man_in_tuxedo_tone4": 30, "man_in_tuxedo_tone5": 30, "man_judg": 30, "man_judge_dark_skin_ton": 30, "man_judge_light_skin_ton": 30, "man_judge_medium_dark_skin_ton": 30, "man_judge_medium_light_skin_ton": 30, "man_judge_medium_skin_ton": 30, "man_judge_tone1": 30, "man_judge_tone2": 30, "man_judge_tone3": 30, "man_judge_tone4": 30, "man_judge_tone5": 30, "man_juggl": 30, "man_juggling_dark_skin_ton": 30, "man_juggling_light_skin_ton": 30, "man_juggling_medium_dark_skin_ton": 30, "man_juggling_medium_light_skin_ton": 30, "man_juggling_medium_skin_ton": 30, "man_juggling_tone1": 30, "man_juggling_tone2": 30, "man_juggling_tone3": 30, "man_juggling_tone4": 30, "man_juggling_tone5": 30, "man_kneel": 30, "man_kneeling_dark_skin_ton": 30, "man_kneeling_light_skin_ton": 30, "man_kneeling_medium_dark_skin_ton": 30, "man_kneeling_medium_light_skin_ton": 30, "man_kneeling_medium_skin_ton": 30, "man_kneeling_tone1": 30, "man_kneeling_tone2": 30, "man_kneeling_tone3": 30, "man_kneeling_tone4": 30, "man_kneeling_tone5": 30, "man_lifting_weight": 30, "man_lifting_weights_dark_skin_ton": 30, "man_lifting_weights_light_skin_ton": 30, "man_lifting_weights_medium_dark_skin_ton": 30, "man_lifting_weights_medium_light_skin_ton": 30, "man_lifting_weights_medium_skin_ton": 30, "man_lifting_weights_tone1": 30, "man_lifting_weights_tone2": 30, "man_lifting_weights_tone3": 30, "man_lifting_weights_tone4": 30, "man_lifting_weights_tone5": 30, "man_light_skin_tone_beard": 30, "man_mag": 30, "man_mage_dark_skin_ton": 30, "man_mage_light_skin_ton": 30, "man_mage_medium_dark_skin_ton": 30, "man_mage_medium_light_skin_ton": 30, "man_mage_medium_skin_ton": 30, "man_mage_tone1": 30, "man_mage_tone2": 30, "man_mage_tone3": 30, "man_mage_tone4": 30, "man_mage_tone5": 30, "man_mechan": 30, "man_mechanic_dark_skin_ton": 30, "man_mechanic_light_skin_ton": 30, "man_mechanic_medium_dark_skin_ton": 30, "man_mechanic_medium_light_skin_ton": 30, "man_mechanic_medium_skin_ton": 30, "man_mechanic_tone1": 30, "man_mechanic_tone2": 30, "man_mechanic_tone3": 30, "man_mechanic_tone4": 30, "man_mechanic_tone5": 30, "man_medium_dark_skin_tone_beard": 30, "man_medium_light_skin_tone_beard": 30, "man_medium_skin_tone_beard": 30, "man_mountain_bik": 30, "man_mountain_biking_dark_skin_ton": 30, "man_mountain_biking_light_skin_ton": 30, "man_mountain_biking_medium_dark_skin_ton": 30, "man_mountain_biking_medium_light_skin_ton": 30, "man_mountain_biking_medium_skin_ton": 30, "man_mountain_biking_tone1": 30, "man_mountain_biking_tone2": 30, "man_mountain_biking_tone3": 30, "man_mountain_biking_tone4": 30, "man_mountain_biking_tone5": 30, "man_office_work": 30, "man_office_worker_dark_skin_ton": 30, "man_office_worker_light_skin_ton": 30, "man_office_worker_medium_dark_skin_ton": 30, "man_office_worker_medium_light_skin_ton": 30, "man_office_worker_medium_skin_ton": 30, "man_office_worker_tone1": 30, "man_office_worker_tone2": 30, "man_office_worker_tone3": 30, "man_office_worker_tone4": 30, "man_office_worker_tone5": 30, "man_pilot": 30, "man_pilot_dark_skin_ton": 30, "man_pilot_light_skin_ton": 30, "man_pilot_medium_dark_skin_ton": 30, "man_pilot_medium_light_skin_ton": 30, "man_pilot_medium_skin_ton": 30, "man_pilot_tone1": 30, "man_pilot_tone2": 30, "man_pilot_tone3": 30, "man_pilot_tone4": 30, "man_pilot_tone5": 30, "man_playing_handbal": 30, "man_playing_handball_dark_skin_ton": 30, "man_playing_handball_light_skin_ton": 30, "man_playing_handball_medium_dark_skin_ton": 30, "man_playing_handball_medium_light_skin_ton": 30, "man_playing_handball_medium_skin_ton": 30, "man_playing_handball_tone1": 30, "man_playing_handball_tone2": 30, "man_playing_handball_tone3": 30, "man_playing_handball_tone4": 30, "man_playing_handball_tone5": 30, "man_playing_water_polo": 30, "man_playing_water_polo_dark_skin_ton": 30, "man_playing_water_polo_light_skin_ton": 30, "man_playing_water_polo_medium_dark_skin_ton": 30, "man_playing_water_polo_medium_light_skin_ton": 30, "man_playing_water_polo_medium_skin_ton": 30, "man_playing_water_polo_tone1": 30, "man_playing_water_polo_tone2": 30, "man_playing_water_polo_tone3": 30, "man_playing_water_polo_tone4": 30, "man_playing_water_polo_tone5": 30, "man_police_offic": 30, "man_police_officer_dark_skin_ton": 30, "man_police_officer_light_skin_ton": 30, "man_police_officer_medium_dark_skin_ton": 30, "man_police_officer_medium_light_skin_ton": 30, "man_police_officer_medium_skin_ton": 30, "man_police_officer_tone1": 30, "man_police_officer_tone2": 30, "man_police_officer_tone3": 30, "man_police_officer_tone4": 30, "man_police_officer_tone5": 30, "man_pout": 30, "man_pouting_dark_skin_ton": 30, "man_pouting_light_skin_ton": 30, "man_pouting_medium_dark_skin_ton": 30, "man_pouting_medium_light_skin_ton": 30, "man_pouting_medium_skin_ton": 30, "man_pouting_tone1": 30, "man_pouting_tone2": 30, "man_pouting_tone3": 30, "man_pouting_tone4": 30, "man_pouting_tone5": 30, "man_raising_hand": 30, "man_raising_hand_dark_skin_ton": 30, "man_raising_hand_light_skin_ton": 30, "man_raising_hand_medium_dark_skin_ton": 30, "man_raising_hand_medium_light_skin_ton": 30, "man_raising_hand_medium_skin_ton": 30, "man_raising_hand_tone1": 30, "man_raising_hand_tone2": 30, "man_raising_hand_tone3": 30, "man_raising_hand_tone4": 30, "man_raising_hand_tone5": 30, "man_red_hair": 30, "man_red_haired_dark_skin_ton": 30, "man_red_haired_light_skin_ton": 30, "man_red_haired_medium_dark_skin_ton": 30, "man_red_haired_medium_light_skin_ton": 30, "man_red_haired_medium_skin_ton": 30, "man_red_haired_tone1": 30, "man_red_haired_tone2": 30, "man_red_haired_tone3": 30, "man_red_haired_tone4": 30, "man_red_haired_tone5": 30, "man_rowing_boat": 30, "man_rowing_boat_dark_skin_ton": 30, "man_rowing_boat_light_skin_ton": 30, "man_rowing_boat_medium_dark_skin_ton": 30, "man_rowing_boat_medium_light_skin_ton": 30, "man_rowing_boat_medium_skin_ton": 30, "man_rowing_boat_tone1": 30, "man_rowing_boat_tone2": 30, "man_rowing_boat_tone3": 30, "man_rowing_boat_tone4": 30, "man_rowing_boat_tone5": 30, "man_run": 30, "man_running_dark_skin_ton": 30, "man_running_light_skin_ton": 30, "man_running_medium_dark_skin_ton": 30, "man_running_medium_light_skin_ton": 30, "man_running_medium_skin_ton": 30, "man_running_tone1": 30, "man_running_tone2": 30, "man_running_tone3": 30, "man_running_tone4": 30, "man_running_tone5": 30, "man_scientist": 30, "man_scientist_dark_skin_ton": 30, "man_scientist_light_skin_ton": 30, "man_scientist_medium_dark_skin_ton": 30, "man_scientist_medium_light_skin_ton": 30, "man_scientist_medium_skin_ton": 30, "man_scientist_tone1": 30, "man_scientist_tone2": 30, "man_scientist_tone3": 30, "man_scientist_tone4": 30, "man_scientist_tone5": 30, "man_shrug": 30, "man_shrugging_dark_skin_ton": 30, "man_shrugging_light_skin_ton": 30, "man_shrugging_medium_dark_skin_ton": 30, "man_shrugging_medium_light_skin_ton": 30, "man_shrugging_medium_skin_ton": 30, "man_shrugging_tone1": 30, "man_shrugging_tone2": 30, "man_shrugging_tone3": 30, "man_shrugging_tone4": 30, "man_shrugging_tone5": 30, "man_sing": 30, "man_singer_dark_skin_ton": 30, "man_singer_light_skin_ton": 30, "man_singer_medium_dark_skin_ton": 30, "man_singer_medium_light_skin_ton": 30, "man_singer_medium_skin_ton": 30, "man_singer_tone1": 30, "man_singer_tone2": 30, "man_singer_tone3": 30, "man_singer_tone4": 30, "man_singer_tone5": 30, "man_stand": 30, "man_standing_dark_skin_ton": 30, "man_standing_light_skin_ton": 30, "man_standing_medium_dark_skin_ton": 30, "man_standing_medium_light_skin_ton": 30, "man_standing_medium_skin_ton": 30, "man_standing_tone1": 30, "man_standing_tone2": 30, "man_standing_tone3": 30, "man_standing_tone4": 30, "man_standing_tone5": 30, "man_stud": 30, "man_student_dark_skin_ton": 30, "man_student_light_skin_ton": 30, "man_student_medium_dark_skin_ton": 30, "man_student_medium_light_skin_ton": 30, "man_student_medium_skin_ton": 30, "man_student_tone1": 30, "man_student_tone2": 30, "man_student_tone3": 30, "man_student_tone4": 30, "man_student_tone5": 30, "man_superhero": 30, "man_superhero_dark_skin_ton": 30, "man_superhero_light_skin_ton": 30, "man_superhero_medium_dark_skin_ton": 30, "man_superhero_medium_light_skin_ton": 30, "man_superhero_medium_skin_ton": 30, "man_superhero_tone1": 30, "man_superhero_tone2": 30, "man_superhero_tone3": 30, "man_superhero_tone4": 30, "man_superhero_tone5": 30, "man_supervillain": 30, "man_supervillain_dark_skin_ton": 30, "man_supervillain_light_skin_ton": 30, "man_supervillain_medium_dark_skin_ton": 30, "man_supervillain_medium_light_skin_ton": 30, "man_supervillain_medium_skin_ton": 30, "man_supervillain_tone1": 30, "man_supervillain_tone2": 30, "man_supervillain_tone3": 30, "man_supervillain_tone4": 30, "man_supervillain_tone5": 30, "man_surf": 30, "man_surfing_dark_skin_ton": 30, "man_surfing_light_skin_ton": 30, "man_surfing_medium_dark_skin_ton": 30, "man_surfing_medium_light_skin_ton": 30, "man_surfing_medium_skin_ton": 30, "man_surfing_tone1": 30, "man_surfing_tone2": 30, "man_surfing_tone3": 30, "man_surfing_tone4": 30, "man_surfing_tone5": 30, "man_swim": 30, "man_swimming_dark_skin_ton": 30, "man_swimming_light_skin_ton": 30, "man_swimming_medium_dark_skin_ton": 30, "man_swimming_medium_light_skin_ton": 30, "man_swimming_medium_skin_ton": 30, "man_swimming_tone1": 30, "man_swimming_tone2": 30, "man_swimming_tone3": 30, "man_swimming_tone4": 30, "man_swimming_tone5": 30, "man_teach": 30, "man_teacher_dark_skin_ton": 30, "man_teacher_light_skin_ton": 30, "man_teacher_medium_dark_skin_ton": 30, "man_teacher_medium_light_skin_ton": 30, "man_teacher_medium_skin_ton": 30, "man_teacher_tone1": 30, "man_teacher_tone2": 30, "man_teacher_tone3": 30, "man_teacher_tone4": 30, "man_teacher_tone5": 30, "man_technologist": 30, "man_technologist_dark_skin_ton": 30, "man_technologist_light_skin_ton": 30, "man_technologist_medium_dark_skin_ton": 30, "man_technologist_medium_light_skin_ton": 30, "man_technologist_medium_skin_ton": 30, "man_technologist_tone1": 30, "man_technologist_tone2": 30, "man_technologist_tone3": 30, "man_technologist_tone4": 30, "man_technologist_tone5": 30, "man_tipping_hand": 30, "man_tipping_hand_dark_skin_ton": 30, "man_tipping_hand_light_skin_ton": 30, "man_tipping_hand_medium_dark_skin_ton": 30, "man_tipping_hand_medium_light_skin_ton": 30, "man_tipping_hand_medium_skin_ton": 30, "man_tipping_hand_tone1": 30, "man_tipping_hand_tone2": 30, "man_tipping_hand_tone3": 30, "man_tipping_hand_tone4": 30, "man_tipping_hand_tone5": 30, "man_tone1": 30, "man_tone1_beard": 30, "man_tone2": 30, "man_tone2_beard": 30, "man_tone3": 30, "man_tone3_beard": 30, "man_tone4": 30, "man_tone4_beard": 30, "man_tone5": 30, "man_tone5_beard": 30, "man_vampir": 30, "man_vampire_dark_skin_ton": 30, "man_vampire_light_skin_ton": 30, "man_vampire_medium_dark_skin_ton": 30, "man_vampire_medium_light_skin_ton": 30, "man_vampire_medium_skin_ton": 30, "man_vampire_tone1": 30, "man_vampire_tone2": 30, "man_vampire_tone3": 30, "man_vampire_tone4": 30, "man_vampire_tone5": 30, "man_walk": 30, "man_walking_dark_skin_ton": 30, "man_walking_light_skin_ton": 30, "man_walking_medium_dark_skin_ton": 30, "man_walking_medium_light_skin_ton": 30, "man_walking_medium_skin_ton": 30, "man_walking_tone1": 30, "man_walking_tone2": 30, "man_walking_tone3": 30, "man_walking_tone4": 30, "man_walking_tone5": 30, "man_wearing_turban": 30, "man_wearing_turban_dark_skin_ton": 30, "man_wearing_turban_light_skin_ton": 30, "man_wearing_turban_medium_dark_skin_ton": 30, "man_wearing_turban_medium_light_skin_ton": 30, "man_wearing_turban_medium_skin_ton": 30, "man_wearing_turban_tone1": 30, "man_wearing_turban_tone2": 30, "man_wearing_turban_tone3": 30, "man_wearing_turban_tone4": 30, "man_wearing_turban_tone5": 30, "man_white_hair": 30, "man_white_haired_dark_skin_ton": 30, "man_white_haired_light_skin_ton": 30, "man_white_haired_medium_dark_skin_ton": 30, "man_white_haired_medium_light_skin_ton": 30, "man_white_haired_medium_skin_ton": 30, "man_white_haired_tone1": 30, "man_white_haired_tone2": 30, "man_white_haired_tone3": 30, "man_white_haired_tone4": 30, "man_white_haired_tone5": 30, "man_with_chinese_cap": 30, "man_with_chinese_cap_tone1": 30, "man_with_chinese_cap_tone2": 30, "man_with_chinese_cap_tone3": 30, "man_with_chinese_cap_tone4": 30, "man_with_chinese_cap_tone5": 30, "man_with_gua_pi_mao": 30, "man_with_gua_pi_mao_tone1": 30, "man_with_gua_pi_mao_tone2": 30, "man_with_gua_pi_mao_tone3": 30, "man_with_gua_pi_mao_tone4": 30, "man_with_gua_pi_mao_tone5": 30, "man_with_probing_can": 30, "man_with_probing_cane_dark_skin_ton": 30, "man_with_probing_cane_light_skin_ton": 30, "man_with_probing_cane_medium_dark_skin_ton": 30, "man_with_probing_cane_medium_light_skin_ton": 30, "man_with_probing_cane_medium_skin_ton": 30, "man_with_probing_cane_tone1": 30, "man_with_probing_cane_tone2": 30, "man_with_probing_cane_tone3": 30, "man_with_probing_cane_tone4": 30, "man_with_probing_cane_tone5": 30, "man_with_turban": 30, "man_with_turban_tone1": 30, "man_with_turban_tone2": 30, "man_with_turban_tone3": 30, "man_with_turban_tone4": 30, "man_with_turban_tone5": 30, "man_with_veil": 30, "man_with_veil_dark_skin_ton": 30, "man_with_veil_light_skin_ton": 30, "man_with_veil_medium_dark_skin_ton": 30, "man_with_veil_medium_light_skin_ton": 30, "man_with_veil_medium_skin_ton": 30, "man_with_veil_tone1": 30, "man_with_veil_tone2": 30, "man_with_veil_tone3": 30, "man_with_veil_tone4": 30, "man_with_veil_tone5": 30, "man_zombi": 30, "mango": 30, "mans_sho": 30, "mantelpiece_clock": 30, "mantlepiece_clock": 30, "manual_wheelchair": 30, "maple_leaf": 30, "marshall_island": 30, "martial_arts_uniform": 30, "martiniqu": 30, "mask": [30, 153, 224, 351, 754, 805, 806, 817, 900, 929, 931], "massage_man": 30, "massage_tone1": 30, "massage_tone2": 30, "massage_tone3": 30, "massage_tone4": 30, "massage_tone5": 30, "massage_woman": 30, "mate": [30, 218, 810], "mauritania": 30, "mauritiu": 30, "mayott": 30, "mc": [30, 135, 250, 411], "md": [30, 116, 322, 759], "meat_on_bon": 30, "mechanic_dark_skin_ton": 30, "mechanic_light_skin_ton": 30, "mechanic_medium_dark_skin_ton": 30, "mechanic_medium_light_skin_ton": 30, "mechanic_medium_skin_ton": 30, "mechanic_tone1": 30, "mechanic_tone2": 30, "mechanic_tone3": 30, "mechanic_tone4": 30, "mechanic_tone5": 30, "mechanical_arm": 30, "mechanical_leg": 30, "medal": 30, "medal_militari": 30, "medal_sport": 30, "medical_symbol": 30, "mega": [30, 953], "melon": 30, "memo": 30, "men_holding_hands_dark_skin_ton": 30, "men_holding_hands_dark_skin_tone_light_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_dark_skin_tone_medium_skin_ton": 30, "men_holding_hands_light_skin_ton": 30, "men_holding_hands_light_skin_tone_dark_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_light_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_dark_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_light_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "men_holding_hands_medium_skin_ton": 30, "men_holding_hands_medium_skin_tone_dark_skin_ton": 30, "men_holding_hands_medium_skin_tone_light_skin_ton": 30, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "men_holding_hands_tone1": 30, "men_holding_hands_tone1_tone2": 30, "men_holding_hands_tone1_tone3": 30, "men_holding_hands_tone1_tone4": 30, "men_holding_hands_tone1_tone5": 30, "men_holding_hands_tone2": 30, "men_holding_hands_tone2_tone1": 30, "men_holding_hands_tone2_tone3": 30, "men_holding_hands_tone2_tone4": 30, "men_holding_hands_tone2_tone5": 30, "men_holding_hands_tone3": 30, "men_holding_hands_tone3_tone1": 30, "men_holding_hands_tone3_tone2": 30, "men_holding_hands_tone3_tone4": 30, "men_holding_hands_tone3_tone5": 30, "men_holding_hands_tone4": 30, "men_holding_hands_tone4_tone1": 30, "men_holding_hands_tone4_tone2": 30, "men_holding_hands_tone4_tone3": 30, "men_holding_hands_tone4_tone5": 30, "men_holding_hands_tone5": 30, "men_holding_hands_tone5_tone1": 30, "men_holding_hands_tone5_tone2": 30, "men_holding_hands_tone5_tone3": 30, "men_holding_hands_tone5_tone4": 30, "men_with_bunny_ears_parti": 30, "men_wrestl": 30, "mending_heart": 30, "menorah": 30, "men": [30, 349, 405, 528], "mermaid": 30, "mermaid_dark_skin_ton": 30, "mermaid_light_skin_ton": 30, "mermaid_medium_dark_skin_ton": 30, "mermaid_medium_light_skin_ton": 30, "mermaid_medium_skin_ton": 30, "mermaid_tone1": 30, "mermaid_tone2": 30, "mermaid_tone3": 30, "mermaid_tone4": 30, "mermaid_tone5": 30, "merman": 30, "merman_dark_skin_ton": 30, "merman_light_skin_ton": 30, "merman_medium_dark_skin_ton": 30, "merman_medium_light_skin_ton": 30, "merman_medium_skin_ton": 30, "merman_tone1": 30, "merman_tone2": 30, "merman_tone3": 30, "merman_tone4": 30, "merman_tone5": 30, "merperson": 30, "merperson_dark_skin_ton": 30, "merperson_light_skin_ton": 30, "merperson_medium_dark_skin_ton": 30, "merperson_medium_light_skin_ton": 30, "merperson_medium_skin_ton": 30, "merperson_tone1": 30, "merperson_tone2": 30, "merperson_tone3": 30, "merperson_tone4": 30, "merperson_tone5": 30, "metal_tone1": 30, "metal_tone2": 30, "metal_tone3": 30, "metal_tone4": 30, "metal_tone5": 30, "metro": 30, "mexico": 30, "mf": [30, 204, 1013], "mg": 30, "mh": 30, "microb": 30, "micronesia": 30, "microphone2": 30, "microphon": [30, 137, 139], "microscop": 30, "middle_finger_tone1": 30, "middle_finger_tone2": 30, "middle_finger_tone3": 30, "middle_finger_tone4": 30, "middle_finger_tone5": 30, "military_helmet": 30, "military_med": 30, "milk": 30, "milk_glass": 30, "milky_wai": 30, "minibu": 30, "minidisc": 30, "mirror": 30, "mk": 30, "ml": 30, "mm": [30, 410], "mn": 30, "mo": [30, 519], "mobile_phon": 30, "mobile_phone_off": 30, "moldova": 30, "monaco": 30, "money_mouth": 30, "money_mouth_fac": 30, "money_with_w": 30, "moneybag": 30, "mongolia": 30, "monkei": 30, "monkey_fac": 30, "monorail": 30, "montenegro": 30, "montserrat": 30, "moon": 30, "moon_cak": 30, "morocco": 30, "mortar_board": 30, "mosqu": 30, "mosquito": 30, "mother_christma": 30, "mother_christmas_tone1": 30, "mother_christmas_tone2": 30, "mother_christmas_tone3": 30, "mother_christmas_tone4": 30, "mother_christmas_tone5": 30, "motor_boat": 30, "motor_scoot": 30, "motorbik": 30, "motorboat": 30, "motorcycl": 30, "motorized_wheelchair": 30, "motorwai": 30, "mount_fuji": 30, "mountain": 30, "mountain_bicyclist": 30, "mountain_bicyclist_tone1": 30, "mountain_bicyclist_tone2": 30, "mountain_bicyclist_tone3": 30, "mountain_bicyclist_tone4": 30, "mountain_bicyclist_tone5": 30, "mountain_biking_man": 30, "mountain_biking_woman": 30, "mountain_cablewai": 30, "mountain_railwai": 30, "mountain_snow": 30, "mouse2": 30, "mous": [30, 132, 137, 818, 994, 1002], "mouse_three_button": 30, "mouse_trap": 30, "movie_camera": 30, "moyai": 30, "mozambiqu": 30, "mp": [30, 36], "mq": [30, 924, 925], "mr": [30, 111, 201, 212, 220, 224, 1018], "mrs_clau": 30, "mrs_claus_tone1": 30, "mrs_claus_tone2": 30, "mrs_claus_tone3": 30, "mrs_claus_tone4": 30, "mrs_claus_tone5": 30, "mt": [30, 311, 928, 929], "mu": [30, 224], "muscle_tone1": 30, "muscle_tone2": 30, "muscle_tone3": 30, "muscle_tone4": 30, "muscle_tone5": 30, "mushroom": 30, "musical_keyboard": 30, "musical_not": 30, "musical_scor": 30, "mute": 30, "mv": [30, 97, 111, 172, 174, 238, 247, 248, 268, 269, 302, 307, 711, 731, 788, 825, 838, 854, 1119], "mw": 30, "mx": 30, "mx_clau": 30, "mx_claus_dark_skin_ton": 30, "mx_claus_light_skin_ton": 30, "mx_claus_medium_dark_skin_ton": 30, "mx_claus_medium_light_skin_ton": 30, "mx_claus_medium_skin_ton": 30, "mx_claus_tone1": 30, "mx_claus_tone2": 30, "mx_claus_tone3": 30, "mx_claus_tone4": 30, "mx_claus_tone5": 30, "myanmar": 30, "mz": 30, "na": [30, 201, 204, 207, 220, 227, 245], "nail_car": 30, "nail_care_tone1": 30, "nail_care_tone2": 30, "nail_care_tone3": 30, "nail_care_tone4": 30, "nail_care_tone5": 30, "name_badg": 30, "namibia": 30, "national_park": 30, "nauru": 30, "nauseated_fac": 30, "nazar_amulet": 30, "nc": [30, 172, 174, 247, 268, 269, 331, 881], "ne": [30, 529, 547, 549, 896], "neckti": 30, "negative_squared_cross_mark": 30, "nepal": 30, "nerd_fac": 30, "nesting_dol": 30, "netherland": [30, 133, 981], "neutral_fac": 30, "new_caledonia": 30, "new_moon": 30, "new_moon_with_fac": 30, "new_zealand": 30, "newspaper2": 30, "newspap": [30, 41], "newspaper_rol": 30, "next_track": 30, "next_track_button": 30, "nf": [30, 204, 220, 227, 230, 245, 252, 262, 266, 875], "ng": [30, 133, 144, 248, 711, 854, 933, 935, 942, 943, 944], "ni": 30, "nicaragua": 30, "niger": 30, "nigeria": 30, "night_with_star": 30, "nine": [30, 152, 165, 175, 183, 201, 212, 302], "ninja_dark_skin_ton": 30, "ninja_light_skin_ton": 30, "ninja_medium_dark_skin_ton": 30, "ninja_medium_light_skin_ton": 30, "ninja_medium_skin_ton": 30, "ninja_tone1": 30, "ninja_tone2": 30, "ninja_tone3": 30, "ninja_tone4": 30, "ninja_tone5": 30, "niue": 30, "nl": [30, 331], "no_bel": 30, "no_bicycl": 30, "no_entri": 30, "no_entry_sign": 30, "no_good": 30, "no_good_man": 30, "no_good_tone1": 30, "no_good_tone2": 30, "no_good_tone3": 30, "no_good_tone4": 30, "no_good_tone5": 30, "no_good_woman": 30, "no_mobile_phon": 30, "no_mouth": 30, "no_pedestrian": 30, "no_smok": 30, "non": [30, 76, 111, 112, 114, 128, 134, 135, 142, 159, 172, 194, 212, 220, 224, 229, 248, 257, 259, 266, 365, 387, 405, 421, 424, 475, 518, 520, 527, 529, 532, 540, 544, 545, 584, 599, 634, 640, 681, 685, 686, 701, 711, 744, 750, 763, 774, 795, 798, 800, 840, 865, 866, 874, 892, 907, 911, 918, 926, 951, 955, 967, 968, 991, 1004, 1024, 1041, 1080, 1081, 1087, 1101, 1116], "potable_wat": 30, "norfolk_island": 30, "north_korea": 30, "northern_mariana_island": 30, "norwai": 30, "nose": 30, "nose_tone1": 30, "nose_tone2": 30, "nose_tone3": 30, "nose_tone4": 30, "nose_tone5": 30, "notebook_with_decorative_cov": 30, "notepad_spir": 30, "np": [30, 155, 182, 250, 411, 1059, 1081], "nr": [30, 180, 224, 717], "nu": 30, "nut_and_bolt": 30, "nz": 30, "o2": [30, 399], "ocean": 30, "octagonal_sign": 30, "octopu": 30, "oden": 30, "office_work": 30, "office_worker_dark_skin_ton": 30, "office_worker_light_skin_ton": 30, "office_worker_medium_dark_skin_ton": 30, "office_worker_medium_light_skin_ton": 30, "office_worker_medium_skin_ton": 30, "office_worker_tone1": 30, "office_worker_tone2": 30, "office_worker_tone3": 30, "office_worker_tone4": 30, "office_worker_tone5": 30, "oil": 30, "oil_drum": 30, "ok": [30, 51, 63, 131, 133, 134, 138, 147, 164, 180, 210, 250, 298, 339, 375, 393, 395, 425, 434, 484, 485, 486, 531, 539, 542, 547, 552, 562, 614, 621, 632, 640, 655, 674, 677, 686, 687, 772, 863, 890, 908, 935, 946, 964, 967, 980, 1100], "ok_hand_tone1": 30, "ok_hand_tone2": 30, "ok_hand_tone3": 30, "ok_hand_tone4": 30, "ok_hand_tone5": 30, "ok_man": 30, "ok_woman": 30, "ok_woman_tone1": 30, "ok_woman_tone2": 30, "ok_woman_tone3": 30, "ok_woman_tone4": 30, "ok_woman_tone5": 30, "old_kei": 30, "older_adult": 30, "older_adult_dark_skin_ton": 30, "older_adult_light_skin_ton": 30, "older_adult_medium_dark_skin_ton": 30, "older_adult_medium_light_skin_ton": 30, "older_adult_medium_skin_ton": 30, "older_adult_tone1": 30, "older_adult_tone2": 30, "older_adult_tone3": 30, "older_adult_tone4": 30, "older_adult_tone5": 30, "older_man": 30, "older_man_tone1": 30, "older_man_tone2": 30, "older_man_tone3": 30, "older_man_tone4": 30, "older_man_tone5": 30, "older_woman": 30, "older_woman_tone1": 30, "older_woman_tone2": 30, "older_woman_tone3": 30, "older_woman_tone4": 30, "older_woman_tone5": 30, "oliv": [30, 196], "om": [30, 665], "om_symbol": 30, "oman": 30, "oncoming_automobil": 30, "oncoming_bu": 30, "oncoming_police_car": 30, "oncoming_taxi": 30, "one_piece_swimsuit": 30, "onion": 30, "open_file_fold": 30, "open_hand": 30, "open_hands_tone1": 30, "open_hands_tone2": 30, "open_hands_tone3": 30, "open_hands_tone4": 30, "open_hands_tone5": 30, "open_mouth": 30, "open_umbrella": 30, "ophiuchu": 30, "orange_book": 30, "orange_circl": 30, "orange_heart": 30, "orange_squar": 30, "orangutan": 30, "orthodox_cross": 30, "otter": 30, "outbox_trai": 30, "owl": 30, "ox": 30, "oyster": 30, "pa": [30, 201, 207, 217, 220, 375, 559, 561, 562], "paella": 30, "page_facing_up": 30, "page_with_curl": 30, "pager": [30, 850], "paintbrush": 30, "pakistan": 30, "palau": 30, "palestinian_territori": 30, "palm_tre": 30, "palms_up_togeth": 30, "palms_up_together_dark_skin_ton": 30, "palms_up_together_light_skin_ton": 30, "palms_up_together_medium_dark_skin_ton": 30, "palms_up_together_medium_light_skin_ton": 30, "palms_up_together_medium_skin_ton": 30, "palms_up_together_tone1": 30, "palms_up_together_tone2": 30, "palms_up_together_tone3": 30, "palms_up_together_tone4": 30, "palms_up_together_tone5": 30, "panama": 30, "pancak": 30, "panda_fac": 30, "paperclip": 30, "papua_new_guinea": 30, "parachut": 30, "paraguai": 30, "parasol_on_ground": 30, "park": 30, "parrot": 30, "part_alternation_mark": 30, "partly_sunni": 30, "partying_fac": 30, "passenger_ship": 30, "passport_control": 30, "pause_button": 30, "paw_print": 30, "pe": 30, "peac": 30, "peace_symbol": 30, "peach": 30, "peacock": 30, "peanut": 30, "pear": 30, "pen": 30, "pen_ballpoint": 30, "pen_fountain": 30, "pencil2": 30, "pencil": 30, "pensiv": 30, "people_holding_hand": 30, "people_holding_hands_dark_skin_ton": 30, "people_holding_hands_dark_skin_tone_light_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_dark_skin_tone_medium_skin_ton": 30, "people_holding_hands_light_skin_ton": 30, "people_holding_hands_light_skin_tone_dark_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_light_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_dark_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_light_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "people_holding_hands_medium_skin_ton": 30, "people_holding_hands_medium_skin_tone_dark_skin_ton": 30, "people_holding_hands_medium_skin_tone_light_skin_ton": 30, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "people_holding_hands_tone1": 30, "people_holding_hands_tone1_tone2": 30, "people_holding_hands_tone1_tone3": 30, "people_holding_hands_tone1_tone4": 30, "people_holding_hands_tone1_tone5": 30, "people_holding_hands_tone2": 30, "people_holding_hands_tone2_tone1": 30, "people_holding_hands_tone2_tone3": 30, "people_holding_hands_tone2_tone4": 30, "people_holding_hands_tone2_tone5": 30, "people_holding_hands_tone3": 30, "people_holding_hands_tone3_tone1": 30, "people_holding_hands_tone3_tone2": 30, "people_holding_hands_tone3_tone4": 30, "people_holding_hands_tone3_tone5": 30, "people_holding_hands_tone4": 30, "people_holding_hands_tone4_tone1": 30, "people_holding_hands_tone4_tone2": 30, "people_holding_hands_tone4_tone3": 30, "people_holding_hands_tone4_tone5": 30, "people_holding_hands_tone5": 30, "people_holding_hands_tone5_tone1": 30, "people_holding_hands_tone5_tone2": 30, "people_holding_hands_tone5_tone3": 30, "people_holding_hands_tone5_tone4": 30, "people_hug": 30, "people_with_bunny_ears_parti": 30, "people_wrestl": 30, "performing_art": 30, "persever": 30, "person_bald": 30, "person_bik": 30, "person_biking_tone1": 30, "person_biking_tone2": 30, "person_biking_tone3": 30, "person_biking_tone4": 30, "person_biking_tone5": 30, "person_bouncing_bal": 30, "person_bouncing_ball_tone1": 30, "person_bouncing_ball_tone2": 30, "person_bouncing_ball_tone3": 30, "person_bouncing_ball_tone4": 30, "person_bouncing_ball_tone5": 30, "person_bow": 30, "person_bowing_tone1": 30, "person_bowing_tone2": 30, "person_bowing_tone3": 30, "person_bowing_tone4": 30, "person_bowing_tone5": 30, "person_climb": 30, "person_climbing_dark_skin_ton": 30, "person_climbing_light_skin_ton": 30, "person_climbing_medium_dark_skin_ton": 30, "person_climbing_medium_light_skin_ton": 30, "person_climbing_medium_skin_ton": 30, "person_climbing_tone1": 30, "person_climbing_tone2": 30, "person_climbing_tone3": 30, "person_climbing_tone4": 30, "person_climbing_tone5": 30, "person_curly_hair": 30, "person_dark_skin_tone_bald": 30, "person_dark_skin_tone_curly_hair": 30, "person_dark_skin_tone_red_hair": 30, "person_dark_skin_tone_white_hair": 30, "person_doing_cartwheel": 30, "person_doing_cartwheel_tone1": 30, "person_doing_cartwheel_tone2": 30, "person_doing_cartwheel_tone3": 30, "person_doing_cartwheel_tone4": 30, "person_doing_cartwheel_tone5": 30, "person_facepalm": 30, "person_facepalming_tone1": 30, "person_facepalming_tone2": 30, "person_facepalming_tone3": 30, "person_facepalming_tone4": 30, "person_facepalming_tone5": 30, "person_feeding_babi": 30, "person_feeding_baby_dark_skin_ton": 30, "person_feeding_baby_light_skin_ton": 30, "person_feeding_baby_medium_dark_skin_ton": 30, "person_feeding_baby_medium_light_skin_ton": 30, "person_feeding_baby_medium_skin_ton": 30, "person_feeding_baby_tone1": 30, "person_feeding_baby_tone2": 30, "person_feeding_baby_tone3": 30, "person_feeding_baby_tone4": 30, "person_feeding_baby_tone5": 30, "person_fenc": 30, "person_frown": 30, "person_frowning_tone1": 30, "person_frowning_tone2": 30, "person_frowning_tone3": 30, "person_frowning_tone4": 30, "person_frowning_tone5": 30, "person_gesturing_no": 30, "person_gesturing_no_tone1": 30, "person_gesturing_no_tone2": 30, "person_gesturing_no_tone3": 30, "person_gesturing_no_tone4": 30, "person_gesturing_no_tone5": 30, "person_gesturing_ok": 30, "person_gesturing_ok_tone1": 30, "person_gesturing_ok_tone2": 30, "person_gesturing_ok_tone3": 30, "person_gesturing_ok_tone4": 30, "person_gesturing_ok_tone5": 30, "person_getting_haircut": 30, "person_getting_haircut_tone1": 30, "person_getting_haircut_tone2": 30, "person_getting_haircut_tone3": 30, "person_getting_haircut_tone4": 30, "person_getting_haircut_tone5": 30, "person_getting_massag": 30, "person_getting_massage_tone1": 30, "person_getting_massage_tone2": 30, "person_getting_massage_tone3": 30, "person_getting_massage_tone4": 30, "person_getting_massage_tone5": 30, "person_golf": 30, "person_golfing_dark_skin_ton": 30, "person_golfing_light_skin_ton": 30, "person_golfing_medium_dark_skin_ton": 30, "person_golfing_medium_light_skin_ton": 30, "person_golfing_medium_skin_ton": 30, "person_golfing_tone1": 30, "person_golfing_tone2": 30, "person_golfing_tone3": 30, "person_golfing_tone4": 30, "person_golfing_tone5": 30, "person_in_bed_dark_skin_ton": 30, "person_in_bed_light_skin_ton": 30, "person_in_bed_medium_dark_skin_ton": 30, "person_in_bed_medium_light_skin_ton": 30, "person_in_bed_medium_skin_ton": 30, "person_in_bed_tone1": 30, "person_in_bed_tone2": 30, "person_in_bed_tone3": 30, "person_in_bed_tone4": 30, "person_in_bed_tone5": 30, "person_in_lotus_posit": 30, "person_in_lotus_position_dark_skin_ton": 30, "person_in_lotus_position_light_skin_ton": 30, "person_in_lotus_position_medium_dark_skin_ton": 30, "person_in_lotus_position_medium_light_skin_ton": 30, "person_in_lotus_position_medium_skin_ton": 30, "person_in_lotus_position_tone1": 30, "person_in_lotus_position_tone2": 30, "person_in_lotus_position_tone3": 30, "person_in_lotus_position_tone4": 30, "person_in_lotus_position_tone5": 30, "person_in_manual_wheelchair": 30, "person_in_manual_wheelchair_dark_skin_ton": 30, "person_in_manual_wheelchair_light_skin_ton": 30, "person_in_manual_wheelchair_medium_dark_skin_ton": 30, "person_in_manual_wheelchair_medium_light_skin_ton": 30, "person_in_manual_wheelchair_medium_skin_ton": 30, "person_in_manual_wheelchair_tone1": 30, "person_in_manual_wheelchair_tone2": 30, "person_in_manual_wheelchair_tone3": 30, "person_in_manual_wheelchair_tone4": 30, "person_in_manual_wheelchair_tone5": 30, "person_in_motorized_wheelchair": 30, "person_in_motorized_wheelchair_dark_skin_ton": 30, "person_in_motorized_wheelchair_light_skin_ton": 30, "person_in_motorized_wheelchair_medium_dark_skin_ton": 30, "person_in_motorized_wheelchair_medium_light_skin_ton": 30, "person_in_motorized_wheelchair_medium_skin_ton": 30, "person_in_motorized_wheelchair_tone1": 30, "person_in_motorized_wheelchair_tone2": 30, "person_in_motorized_wheelchair_tone3": 30, "person_in_motorized_wheelchair_tone4": 30, "person_in_motorized_wheelchair_tone5": 30, "person_in_steamy_room": 30, "person_in_steamy_room_dark_skin_ton": 30, "person_in_steamy_room_light_skin_ton": 30, "person_in_steamy_room_medium_dark_skin_ton": 30, "person_in_steamy_room_medium_light_skin_ton": 30, "person_in_steamy_room_medium_skin_ton": 30, "person_in_steamy_room_tone1": 30, "person_in_steamy_room_tone2": 30, "person_in_steamy_room_tone3": 30, "person_in_steamy_room_tone4": 30, "person_in_steamy_room_tone5": 30, "person_in_tuxedo": 30, "person_in_tuxedo_tone1": 30, "person_in_tuxedo_tone2": 30, "person_in_tuxedo_tone3": 30, "person_in_tuxedo_tone4": 30, "person_in_tuxedo_tone5": 30, "person_juggl": 30, "person_juggling_tone1": 30, "person_juggling_tone2": 30, "person_juggling_tone3": 30, "person_juggling_tone4": 30, "person_juggling_tone5": 30, "person_kneel": 30, "person_kneeling_dark_skin_ton": 30, "person_kneeling_light_skin_ton": 30, "person_kneeling_medium_dark_skin_ton": 30, "person_kneeling_medium_light_skin_ton": 30, "person_kneeling_medium_skin_ton": 30, "person_kneeling_tone1": 30, "person_kneeling_tone2": 30, "person_kneeling_tone3": 30, "person_kneeling_tone4": 30, "person_kneeling_tone5": 30, "person_lifting_weight": 30, "person_lifting_weights_tone1": 30, "person_lifting_weights_tone2": 30, "person_lifting_weights_tone3": 30, "person_lifting_weights_tone4": 30, "person_lifting_weights_tone5": 30, "person_light_skin_tone_bald": 30, "person_light_skin_tone_curly_hair": 30, "person_light_skin_tone_red_hair": 30, "person_light_skin_tone_white_hair": 30, "person_medium_dark_skin_tone_bald": 30, "person_medium_dark_skin_tone_curly_hair": 30, "person_medium_dark_skin_tone_red_hair": 30, "person_medium_dark_skin_tone_white_hair": 30, "person_medium_light_skin_tone_bald": 30, "person_medium_light_skin_tone_curly_hair": 30, "person_medium_light_skin_tone_red_hair": 30, "person_medium_light_skin_tone_white_hair": 30, "person_medium_skin_tone_bald": 30, "person_medium_skin_tone_curly_hair": 30, "person_medium_skin_tone_red_hair": 30, "person_medium_skin_tone_white_hair": 30, "person_mountain_bik": 30, "person_mountain_biking_tone1": 30, "person_mountain_biking_tone2": 30, "person_mountain_biking_tone3": 30, "person_mountain_biking_tone4": 30, "person_mountain_biking_tone5": 30, "person_playing_handbal": 30, "person_playing_handball_tone1": 30, "person_playing_handball_tone2": 30, "person_playing_handball_tone3": 30, "person_playing_handball_tone4": 30, "person_playing_handball_tone5": 30, "person_playing_water_polo": 30, "person_playing_water_polo_tone1": 30, "person_playing_water_polo_tone2": 30, "person_playing_water_polo_tone3": 30, "person_playing_water_polo_tone4": 30, "person_playing_water_polo_tone5": 30, "person_pout": 30, "person_pouting_tone1": 30, "person_pouting_tone2": 30, "person_pouting_tone3": 30, "person_pouting_tone4": 30, "person_pouting_tone5": 30, "person_raising_hand": 30, "person_raising_hand_tone1": 30, "person_raising_hand_tone2": 30, "person_raising_hand_tone3": 30, "person_raising_hand_tone4": 30, "person_raising_hand_tone5": 30, "person_red_hair": 30, "person_rowing_boat": 30, "person_rowing_boat_tone1": 30, "person_rowing_boat_tone2": 30, "person_rowing_boat_tone3": 30, "person_rowing_boat_tone4": 30, "person_rowing_boat_tone5": 30, "person_run": 30, "person_running_tone1": 30, "person_running_tone2": 30, "person_running_tone3": 30, "person_running_tone4": 30, "person_running_tone5": 30, "person_shrug": 30, "person_shrugging_tone1": 30, "person_shrugging_tone2": 30, "person_shrugging_tone3": 30, "person_shrugging_tone4": 30, "person_shrugging_tone5": 30, "person_stand": 30, "person_standing_dark_skin_ton": 30, "person_standing_light_skin_ton": 30, "person_standing_medium_dark_skin_ton": 30, "person_standing_medium_light_skin_ton": 30, "person_standing_medium_skin_ton": 30, "person_standing_tone1": 30, "person_standing_tone2": 30, "person_standing_tone3": 30, "person_standing_tone4": 30, "person_standing_tone5": 30, "person_surf": 30, "person_surfing_tone1": 30, "person_surfing_tone2": 30, "person_surfing_tone3": 30, "person_surfing_tone4": 30, "person_surfing_tone5": 30, "person_swim": 30, "person_swimming_tone1": 30, "person_swimming_tone2": 30, "person_swimming_tone3": 30, "person_swimming_tone4": 30, "person_swimming_tone5": 30, "person_tipping_hand": 30, "person_tipping_hand_tone1": 30, "person_tipping_hand_tone2": 30, "person_tipping_hand_tone3": 30, "person_tipping_hand_tone4": 30, "person_tipping_hand_tone5": 30, "person_tone1_bald": 30, "person_tone1_curly_hair": 30, "person_tone1_red_hair": 30, "person_tone1_white_hair": 30, "person_tone2_bald": 30, "person_tone2_curly_hair": 30, "person_tone2_red_hair": 30, "person_tone2_white_hair": 30, "person_tone3_bald": 30, "person_tone3_curly_hair": 30, "person_tone3_red_hair": 30, "person_tone3_white_hair": 30, "person_tone4_bald": 30, "person_tone4_curly_hair": 30, "person_tone4_red_hair": 30, "person_tone4_white_hair": 30, "person_tone5_bald": 30, "person_tone5_curly_hair": 30, "person_tone5_red_hair": 30, "person_tone5_white_hair": 30, "person_walk": 30, "person_walking_tone1": 30, "person_walking_tone2": 30, "person_walking_tone3": 30, "person_walking_tone4": 30, "person_walking_tone5": 30, "person_wearing_turban": 30, "person_wearing_turban_tone1": 30, "person_wearing_turban_tone2": 30, "person_wearing_turban_tone3": 30, "person_wearing_turban_tone4": 30, "person_wearing_turban_tone5": 30, "person_white_hair": 30, "person_with_bal": 30, "person_with_ball_tone1": 30, "person_with_ball_tone2": 30, "person_with_ball_tone3": 30, "person_with_ball_tone4": 30, "person_with_ball_tone5": 30, "person_with_blond_hair": 30, "person_with_blond_hair_tone1": 30, "person_with_blond_hair_tone2": 30, "person_with_blond_hair_tone3": 30, "person_with_blond_hair_tone4": 30, "person_with_blond_hair_tone5": 30, "person_with_pouting_fac": 30, "person_with_pouting_face_tone1": 30, "person_with_pouting_face_tone2": 30, "person_with_pouting_face_tone3": 30, "person_with_pouting_face_tone4": 30, "person_with_pouting_face_tone5": 30, "person_with_probing_can": 30, "person_with_probing_cane_dark_skin_ton": 30, "person_with_probing_cane_light_skin_ton": 30, "person_with_probing_cane_medium_dark_skin_ton": 30, "person_with_probing_cane_medium_light_skin_ton": 30, "person_with_probing_cane_medium_skin_ton": 30, "person_with_probing_cane_tone1": 30, "person_with_probing_cane_tone2": 30, "person_with_probing_cane_tone3": 30, "person_with_probing_cane_tone4": 30, "person_with_probing_cane_tone5": 30, "person_with_veil": 30, "person_with_veil_tone1": 30, "person_with_veil_tone2": 30, "person_with_veil_tone3": 30, "person_with_veil_tone4": 30, "person_with_veil_tone5": 30, "peru": 30, "petri_dish": 30, "pf": [30, 135], "pg": [30, 403], "ph": 30, "philippin": 30, "phone": 30, "pick": [30, 76, 125, 135, 142, 193, 413, 486, 914, 944, 949], "pickup_truck": 30, "pie": 30, "pig2": 30, "pig_nos": 30, "pill": 30, "pilot": 30, "pilot_dark_skin_ton": 30, "pilot_light_skin_ton": 30, "pilot_medium_dark_skin_ton": 30, "pilot_medium_light_skin_ton": 30, "pilot_medium_skin_ton": 30, "pilot_tone1": 30, "pilot_tone2": 30, "pilot_tone3": 30, "pilot_tone4": 30, "pilot_tone5": 30, "pinched_fing": 30, "pinched_fingers_dark_skin_ton": 30, "pinched_fingers_light_skin_ton": 30, "pinched_fingers_medium_dark_skin_ton": 30, "pinched_fingers_medium_light_skin_ton": 30, "pinched_fingers_medium_skin_ton": 30, "pinched_fingers_tone1": 30, "pinched_fingers_tone2": 30, "pinched_fingers_tone3": 30, "pinched_fingers_tone4": 30, "pinched_fingers_tone5": 30, "pinching_hand": 30, "pinching_hand_dark_skin_ton": 30, "pinching_hand_light_skin_ton": 30, "pinching_hand_medium_dark_skin_ton": 30, "pinching_hand_medium_light_skin_ton": 30, "pinching_hand_medium_skin_ton": 30, "pinching_hand_tone1": 30, "pinching_hand_tone2": 30, "pinching_hand_tone3": 30, "pinching_hand_tone4": 30, "pinching_hand_tone5": 30, "pineappl": [30, 256], "ping_pong": 30, "pirate_flag": 30, "pisc": 30, "pitcairn_island": 30, "pizza": 30, "pi\u00f1ata": 30, "pk": 30, "pl": 30, "placard": 30, "place_of_worship": 30, "plate_with_cutleri": 30, "play_or_pause_button": 30, "play_paus": 30, "pleading_fac": 30, "plunger": 30, "pm": [30, 36], "pn": 30, "point_down": 30, "point_down_tone1": 30, "point_down_tone2": 30, "point_down_tone3": 30, "point_down_tone4": 30, "point_down_tone5": 30, "point_left": 30, "point_left_tone1": 30, "point_left_tone2": 30, "point_left_tone3": 30, "point_left_tone4": 30, "point_left_tone5": 30, "point_right": 30, "point_right_tone1": 30, "point_right_tone2": 30, "point_right_tone3": 30, "point_right_tone4": 30, "point_right_tone5": 30, "point_up_2": 30, "point_up_2_tone1": 30, "point_up_2_tone2": 30, "point_up_2_tone3": 30, "point_up_2_tone4": 30, "point_up_2_tone5": 30, "point_up_tone1": 30, "point_up_tone2": 30, "point_up_tone3": 30, "point_up_tone4": 30, "point_up_tone5": 30, "poland": 30, "polar_bear": 30, "police_car": 30, "police_offic": 30, "police_officer_tone1": 30, "police_officer_tone2": 30, "police_officer_tone3": 30, "police_officer_tone4": 30, "police_officer_tone5": 30, "policeman": 30, "policewoman": 30, "poo": 30, "poodl": 30, "poop": 30, "popcorn": 30, "portug": 30, "post_offic": 30, "postal_horn": 30, "postbox": 30, "potato": 30, "potted_pl": 30, "pouch": 30, "poultry_leg": 30, "pound": [30, 34], "pound_symbol": 30, "pouting_cat": 30, "pouting_man": 30, "pouting_woman": 30, "pr": [30, 33, 220, 235], "prai": 30, "pray_tone1": 30, "pray_tone2": 30, "pray_tone3": 30, "pray_tone4": 30, "pray_tone5": 30, "prayer_bead": 30, "pregnant_woman": 30, "pregnant_woman_tone1": 30, "pregnant_woman_tone2": 30, "pregnant_woman_tone3": 30, "pregnant_woman_tone4": 30, "pregnant_woman_tone5": 30, "pretzel": 30, "previous_track": 30, "previous_track_button": 30, "princ": 30, "prince_tone1": 30, "prince_tone2": 30, "prince_tone3": 30, "prince_tone4": 30, "prince_tone5": 30, "princess": 30, "princess_tone1": 30, "princess_tone2": 30, "princess_tone3": 30, "princess_tone4": 30, "princess_tone5": 30, "printer": 30, "probing_can": 30, "projector": 30, "p": [30, 36, 61, 111, 112, 128, 132, 133, 137, 138, 144, 160, 172, 174, 175, 191, 204, 220, 224, 250, 252, 335, 369, 375, 378, 379, 382, 383, 387, 458, 483, 484, 486, 487, 529, 531, 534, 539, 540, 541, 542, 543, 545, 547, 548, 562, 570, 630, 633, 634, 637, 639, 642, 651, 652, 653, 655, 657, 658, 661, 662, 663, 669, 671, 672, 681, 685, 690, 701, 706, 709, 722, 758, 777, 785, 786, 795, 818, 820, 837, 840, 847, 857, 865, 874, 881, 892, 901, 916, 929, 944, 953, 1013, 1095, 1119], "pt": [30, 689, 789, 916], "pud": 30, "puerto_rico": 30, "punch": 30, "punch_tone1": 30, "punch_tone2": 30, "punch_tone3": 30, "punch_tone4": 30, "punch_tone5": 30, "purple_circl": 30, "purple_heart": 30, "purple_squar": 30, "purs": 30, "pushpin": 30, "put_litter_in_its_plac": 30, "pw": 30, "qa": 30, "qatar": 30, "rabbit2": 30, "rabbit": 30, "raccoon": 30, "race_car": 30, "racehors": 30, "racing_car": 30, "racing_motorcycl": 30, "radio": 30, "radio_button": 30, "radioact": 30, "radioactive_sign": 30, "rage": 30, "railroad_track": 30, "railway_car": 30, "railway_track": 30, "rainbow": 30, "rainbow_flag": 30, "raised_back_of_hand": 30, "raised_back_of_hand_tone1": 30, "raised_back_of_hand_tone2": 30, "raised_back_of_hand_tone3": 30, "raised_back_of_hand_tone4": 30, "raised_back_of_hand_tone5": 30, "raised_hand": 30, "raised_hand_tone1": 30, "raised_hand_tone2": 30, "raised_hand_tone3": 30, "raised_hand_tone4": 30, "raised_hand_tone5": 30, "raised_hand_with_fingers_splai": 30, "raised_hand_with_fingers_splayed_tone1": 30, "raised_hand_with_fingers_splayed_tone2": 30, "raised_hand_with_fingers_splayed_tone3": 30, "raised_hand_with_fingers_splayed_tone4": 30, "raised_hand_with_fingers_splayed_tone5": 30, "raised_hand_with_part_between_middle_and_ring_fing": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 30, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 30, "raised_hands_tone1": 30, "raised_hands_tone2": 30, "raised_hands_tone3": 30, "raised_hands_tone4": 30, "raised_hands_tone5": 30, "raising_hand": 30, "raising_hand_man": 30, "raising_hand_tone1": 30, "raising_hand_tone2": 30, "raising_hand_tone3": 30, "raising_hand_tone4": 30, "raising_hand_tone5": 30, "raising_hand_woman": 30, "ram": [30, 134, 135, 139, 257, 758, 794, 796, 880], "ramen": 30, "rat": 30, "razor": 30, "re": [30, 36, 61, 134, 139, 171, 180, 183, 184, 194, 197, 204, 205, 207, 212, 214, 220, 224, 230, 232, 233, 242, 245, 249, 265, 266, 272, 302, 307, 365, 411, 412, 421, 429, 454, 484, 531, 537, 655, 677, 727, 763, 772, 777, 819, 908, 929, 944, 948, 953, 958, 977, 1000, 1051, 1056], "receipt": 30, "record_button": 30, "recycl": 30, "red_car": 30, "red_circl": 30, "red_envelop": 30, "red_hair": 30, "red_squar": 30, "regional_indicator_a": 30, "regional_indicator_b": 30, "regional_indicator_c": 30, "regional_indicator_d": 30, "regional_indicator_": 30, "regional_indicator_f": 30, "regional_indicator_g": 30, "regional_indicator_h": 30, "regional_indicator_i": 30, "regional_indicator_j": 30, "regional_indicator_k": 30, "regional_indicator_l": 30, "regional_indicator_m": 30, "regional_indicator_n": 30, "regional_indicator_o": 30, "regional_indicator_p": 30, "regional_indicator_q": 30, "regional_indicator_r": 30, "regional_indicator_t": 30, "regional_indicator_u": 30, "regional_indicator_v": 30, "regional_indicator_w": 30, "regional_indicator_x": 30, "regional_indicator_z": 30, "regist": [30, 34, 36, 132, 142, 150, 175, 179, 207, 220, 266, 288, 351, 385, 436, 464, 485, 487, 494, 714, 721, 729, 736, 742, 754, 845, 862, 878, 882, 983, 1075], "relax": 30, "reliev": [30, 55], "reminder_ribbon": 30, "repeat": [30, 41, 98, 111, 122, 138, 193, 218, 248, 309, 399, 411, 547, 711, 758, 788, 818, 822, 826, 829, 832, 837, 838, 854, 867, 894, 991], "repeat_on": 30, "rescue_worker_helmet": 30, "restroom": 30, "reunion": 30, "reversed_hand_with_middle_finger_extend": 30, "reversed_hand_with_middle_finger_extended_tone1": 30, "reversed_hand_with_middle_finger_extended_tone2": 30, "reversed_hand_with_middle_finger_extended_tone3": 30, "reversed_hand_with_middle_finger_extended_tone4": 30, "reversed_hand_with_middle_finger_extended_tone5": 30, "revolving_heart": 30, "rewind": [30, 294, 677], "rhino": 30, "rhinocero": 30, "ribbon": 30, "rice": 30, "rice_bal": 30, "rice_crack": 30, "rice_scen": 30, "right_anger_bubbl": 30, "right_facing_fist": 30, "right_facing_fist_tone1": 30, "right_facing_fist_tone2": 30, "right_facing_fist_tone3": 30, "right_facing_fist_tone4": 30, "right_facing_fist_tone5": 30, "right_fist": 30, "right_fist_tone1": 30, "right_fist_tone2": 30, "right_fist_tone3": 30, "right_fist_tone4": 30, "right_fist_tone5": 30, "ring": [30, 33, 36, 818], "ringed_planet": 30, "ro": 30, "robot": [30, 220], "robot_fac": 30, "rock": [30, 261, 409, 948, 950, 1089], "rocket": [30, 139], "rofl": 30, "roll_ey": 30, "roll_of_pap": 30, "rolled_up_newspap": 30, "roller_coast": 30, "roller_sk": 30, "rolling_on_the_floor_laugh": 30, "romania": 30, "rooster": 30, "rosett": 30, "rotating_light": 30, "round_pushpin": 30, "rowboat": 30, "rowboat_tone1": 30, "rowboat_tone2": 30, "rowboat_tone3": 30, "rowboat_tone4": 30, "rowboat_tone5": 30, "rowing_man": 30, "rowing_woman": 30, "ru": 30, "rugby_footbal": 30, "runner": [30, 42, 1100, 1131], "runner_tone1": 30, "runner_tone2": 30, "runner_tone3": 30, "runner_tone4": 30, "runner_tone5": 30, "running_man": 30, "running_shirt_with_sash": 30, "running_woman": 30, "russia": [30, 1072], "rw": [30, 59, 61, 133, 134, 143, 151, 220, 230, 418, 709, 714, 722, 789, 800, 803, 814, 817, 837, 840, 855, 862, 863, 864, 866, 875, 886, 889, 890, 898, 926, 932, 933, 934, 944, 946, 947, 983, 1011], "rwanda": 30, "safety_pin": 30, "safety_vest": 30, "sagittariu": 30, "sailboat": 30, "saint_martin": 30, "sake": 30, "salad": 30, "salt": [30, 814], "samoa": 30, "san_marino": 30, "sandal": 30, "sandwich": 30, "santa": 30, "santa_tone1": 30, "santa_tone2": 30, "santa_tone3": 30, "santa_tone4": 30, "santa_tone5": 30, "sao_tome_princip": 30, "sari": 30, "satellit": 30, "satellite_orbit": 30, "saudi": 30, "saudi_arabia": 30, "saudiarabia": 30, "sauropod": 30, "saxophon": 30, "sb": [30, 249], "sc": [30, 33], "scale": [30, 76, 164, 210, 224, 399, 862, 935, 948], "scarf": 30, "school": [30, 224, 470, 505, 1081, 1114], "school_satchel": 30, "scientist": [30, 164, 980, 1061, 1062, 1063, 1073], "scientist_dark_skin_ton": 30, "scientist_light_skin_ton": 30, "scientist_medium_dark_skin_ton": 30, "scientist_medium_light_skin_ton": 30, "scientist_medium_skin_ton": 30, "scientist_tone1": 30, "scientist_tone2": 30, "scientist_tone3": 30, "scientist_tone4": 30, "scientist_tone5": 30, "scissor": 30, "scooter": 30, "scorpion": 30, "scorpiu": 30, "scotland": 30, "scream": [30, 193, 818], "scream_cat": 30, "screwdriv": 30, "scroll": [30, 138, 470], "sd": [30, 204, 220, 224, 227, 230, 245, 252, 262, 266, 758], "se": [30, 534], "seal": 30, "seat": 30, "second_plac": 30, "second_place_med": 30, "secret": [30, 614, 635, 871, 955, 1070], "see_no_evil": 30, "seedl": 30, "selfi": 30, "selfie_tone1": 30, "selfie_tone2": 30, "selfie_tone3": 30, "selfie_tone4": 30, "selfie_tone5": 30, "seneg": 30, "serbia": 30, "service_dog": 30, "seven": [30, 34, 82, 152, 165, 175, 183, 212, 302, 1023, 1034], "sewing_needl": 30, "seychel": 30, "sg": 30, "sh": [30, 59, 139, 143, 232, 731, 785, 786, 803, 864, 886, 896, 1043], "shaking_hand": 30, "shaking_hands_tone1": 30, "shaking_hands_tone2": 30, "shaking_hands_tone3": 30, "shaking_hands_tone4": 30, "shaking_hands_tone5": 30, "shallow_pan_of_food": 30, "shamrock": 30, "shark": 30, "shaved_ic": 30, "sheep": 30, "shelled_peanut": 30, "shield": [30, 132], "shinto_shrin": 30, "ship": [30, 137], "shirt": [30, 41, 129], "shit": [30, 191], "shop": [30, 256], "shopping_bag": 30, "shopping_cart": 30, "shopping_trollei": 30, "shower": 30, "shrimp": 30, "shrug": 30, "shrug_tone1": 30, "shrug_tone2": 30, "shrug_tone3": 30, "shrug_tone4": 30, "shrug_tone5": 30, "shushing_fac": 30, "si": 30, "sick": [30, 433], "sierra_leon": 30, "sign_of_the_horn": 30, "sign_of_the_horns_tone1": 30, "sign_of_the_horns_tone2": 30, "sign_of_the_horns_tone3": 30, "sign_of_the_horns_tone4": 30, "sign_of_the_horns_tone5": 30, "signal_strength": 30, "singapor": 30, "singer": 30, "singer_dark_skin_ton": 30, "singer_light_skin_ton": 30, "singer_medium_dark_skin_ton": 30, "singer_medium_light_skin_ton": 30, "singer_medium_skin_ton": 30, "singer_tone1": 30, "singer_tone2": 30, "singer_tone3": 30, "singer_tone4": 30, "singer_tone5": 30, "sint_maarten": 30, "six": [30, 152, 165, 175, 183, 201, 302, 991], "six_pointed_star": 30, "sj": 30, "sk": 30, "skateboard": 30, "skeleton": [30, 135, 147, 412, 787], "ski": 30, "skier": 30, "skull": 30, "skull_and_crossbon": 30, "skull_crossbon": 30, "skunk": 30, "sl": [30, 294, 916], "sled": 30, "sleeping_accommod": 30, "sleeping_b": 30, "sleepi": 30, "sleuth_or_spi": 30, "sleuth_or_spy_tone1": 30, "sleuth_or_spy_tone2": 30, "sleuth_or_spy_tone3": 30, "sleuth_or_spy_tone4": 30, "sleuth_or_spy_tone5": 30, "slight_frown": 30, "slight_smil": 30, "slightly_frowning_fac": 30, "slightly_smiling_fac": 30, "slot_machin": 30, "sloth": 30, "slovakia": 30, "slovenia": [30, 199], "sm": 30, "small_airplan": 30, "small_blue_diamond": 30, "small_orange_diamond": 30, "small_red_triangl": 30, "small_red_triangle_down": 30, "smile": [30, 33], "smile_cat": 30, "smilei": [30, 61], "smiley_cat": 30, "smiling_face_with_3_heart": 30, "smiling_face_with_tear": 30, "smiling_imp": 30, "smirk": 30, "smirk_cat": 30, "smoke": 30, "sn": 30, "snail": 30, "snake": 30, "sneez": 30, "sneezing_fac": 30, "snow_capped_mountain": 30, "snowboard": 30, "snowboarder_dark_skin_ton": 30, "snowboarder_light_skin_ton": 30, "snowboarder_medium_dark_skin_ton": 30, "snowboarder_medium_light_skin_ton": 30, "snowboarder_medium_skin_ton": 30, "snowboarder_tone1": 30, "snowboarder_tone2": 30, "snowboarder_tone3": 30, "snowboarder_tone4": 30, "snowboarder_tone5": 30, "snowflak": 30, "snowman2": 30, "snowman": 30, "snowman_with_snow": 30, "sob": 30, "soccer": 30, "sock": 30, "softbal": 30, "solomon_island": 30, "somalia": 30, "soon": [30, 133, 134, 139, 534, 621, 758, 864, 916, 930, 1075], "sound": [30, 57, 60, 131, 135, 138, 139, 208, 691, 800, 855, 863, 864, 1094], "south_africa": 30, "south_georgia_south_sandwich_island": 30, "south_sudan": 30, "space_invad": 30, "spade": [30, 36], "spaghetti": [30, 399, 410], "spain": 30, "sparkl": 30, "sparkler": 30, "sparkling_heart": 30, "speak_no_evil": 30, "speaker": 30, "speaking_head": 30, "speaking_head_in_silhouett": 30, "speech_balloon": 30, "speech_left": 30, "speedboat": 30, "spider": 30, "spider_web": 30, "spiral_calendar": 30, "spiral_calendar_pad": 30, "spiral_note_pad": 30, "spiral_notepad": 30, "spong": 30, "spoon": 30, "sports_med": 30, "spy": 30, "spy_tone1": 30, "spy_tone2": 30, "spy_tone3": 30, "spy_tone4": 30, "spy_tone5": 30, "squeeze_bottl": 30, "squid": 30, "sr": [30, 204, 1013], "sri_lanka": 30, "st": [30, 198, 411, 926, 928, 929], "st_barthelemi": 30, "st_helena": 30, "st_kitts_nevi": 30, "st_lucia": 30, "st_pierre_miquelon": 30, "st_vincent_grenadin": 30, "stadium": 30, "star2": 30, "star": [30, 36, 571, 864, 946], "star_and_cresc": 30, "star_of_david": 30, "star_struck": 30, "station": 30, "statue_of_liberti": 30, "steam_locomot": 30, "stethoscop": 30, "stew": 30, "stop_button": 30, "stop_sign": 30, "stopwatch": 30, "straight_rul": 30, "strawberri": 30, "stuck_out_tongu": 30, "stuck_out_tongue_closed_ey": 30, "stuck_out_tongue_winking_ey": 30, "student": [30, 99, 104, 111, 139, 232, 287, 288, 293, 294, 302, 956, 1095], "student_dark_skin_ton": 30, "student_light_skin_ton": 30, "student_medium_dark_skin_ton": 30, "student_medium_light_skin_ton": 30, "student_medium_skin_ton": 30, "student_tone1": 30, "student_tone2": 30, "student_tone3": 30, "student_tone4": 30, "student_tone5": 30, "studio_microphon": 30, "stuffed_flatbread": 30, "stuffed_pita": 30, "sudan": 30, "sun_behind_large_cloud": 30, "sun_behind_rain_cloud": 30, "sun_behind_small_cloud": 30, "sun_with_fac": 30, "sunflow": 30, "sunni": [30, 107, 251, 254, 475, 486, 492, 494, 527, 711, 911, 955], "sunris": 30, "sunrise_over_mountain": 30, "superhero": 30, "superhero_dark_skin_ton": 30, "superhero_light_skin_ton": 30, "superhero_medium_dark_skin_ton": 30, "superhero_medium_light_skin_ton": 30, "superhero_medium_skin_ton": 30, "superhero_tone1": 30, "superhero_tone2": 30, "superhero_tone3": 30, "superhero_tone4": 30, "superhero_tone5": 30, "supervillain": 30, "supervillain_dark_skin_ton": 30, "supervillain_light_skin_ton": 30, "supervillain_medium_dark_skin_ton": 30, "supervillain_medium_light_skin_ton": 30, "supervillain_medium_skin_ton": 30, "supervillain_tone1": 30, "supervillain_tone2": 30, "supervillain_tone3": 30, "supervillain_tone4": 30, "supervillain_tone5": 30, "surfer": 30, "surfer_tone1": 30, "surfer_tone2": 30, "surfer_tone3": 30, "surfer_tone4": 30, "surfer_tone5": 30, "surfing_man": 30, "surfing_woman": 30, "surinam": 30, "sushi": 30, "suspension_railwai": 30, "sv": [30, 453, 454], "swan": 30, "swaziland": 30, "sweat": 30, "sweat_drop": 30, "sweat_smil": 30, "sweden": 30, "sweet_potato": 30, "swimmer": 30, "swimmer_tone1": 30, "swimmer_tone2": 30, "swimmer_tone3": 30, "swimmer_tone4": 30, "swimmer_tone5": 30, "swimming_man": 30, "swimming_woman": 30, "switzerland": 30, "sx": 30, "symbol": [30, 31, 36, 111, 143, 172, 193, 201, 207, 210, 217, 220, 238, 247, 248, 268, 269, 340, 355, 364, 371, 377, 381, 384, 388, 391, 392, 397, 401, 406, 407, 629, 667, 673, 708, 709, 710, 711, 714, 733, 736, 758, 788, 803, 818, 838, 840, 854, 863, 963], "synagogu": 30, "syria": 30, "syring": 30, "sz": [30, 134, 137], "t_rex": 30, "ta": 30, "table_tenni": 30, "taco": 30, "tada": 30, "taiwan": 30, "tajikistan": 30, "takeout_box": 30, "tamal": 30, "tanabata_tre": 30, "tangerin": 30, "tanzania": 30, "tauru": 30, "taxi": 30, "tc": 30, "td": [30, 196], "tea": 30, "teacher": [30, 104, 137, 415, 417, 785, 786, 944], "teacher_dark_skin_ton": 30, "teacher_light_skin_ton": 30, "teacher_medium_dark_skin_ton": 30, "teacher_medium_light_skin_ton": 30, "teacher_medium_skin_ton": 30, "teacher_tone1": 30, "teacher_tone2": 30, "teacher_tone3": 30, "teacher_tone4": 30, "teacher_tone5": 30, "teapot": 30, "technologist": 30, "technologist_dark_skin_ton": 30, "technologist_light_skin_ton": 30, "technologist_medium_dark_skin_ton": 30, "technologist_medium_light_skin_ton": 30, "technologist_medium_skin_ton": 30, "technologist_tone1": 30, "technologist_tone2": 30, "technologist_tone3": 30, "technologist_tone4": 30, "technologist_tone5": 30, "teddy_bear": 30, "telephon": 30, "telephone_receiv": 30, "telescop": 30, "ten": [30, 134, 155, 175, 214, 220, 849], "tenni": 30, "tent": 30, "test_tub": 30, "tf": [30, 227, 784, 953], "tg": 30, "th": [30, 168, 196, 333, 375, 484, 562, 993, 1002], "thailand": 30, "thermomet": [30, 67, 80, 82, 83, 159, 168, 220, 240, 306, 308, 309, 311, 426, 433, 436, 438, 447, 448, 461, 475, 515, 516, 524, 527, 602, 605, 711, 864], "thermometer_fac": 30, "thinking_fac": 30, "third_plac": 30, "third_place_med": 30, "thong_sand": 30, "thought_balloon": 30, "thread": [30, 57, 60, 63, 81, 87, 89, 137, 149, 150, 159, 164, 168, 179, 201, 207, 208, 210, 217, 220, 235, 236, 237, 239, 248, 257, 259, 283, 312, 315, 316, 317, 405, 434, 451, 465, 528, 669, 677, 686, 688, 695, 697, 700, 701, 710, 711, 740, 750, 756, 770, 778, 854, 876, 895, 903, 905, 906, 908, 910, 914, 915, 917, 928, 929, 930, 966, 967, 1056, 1102, 1112, 1113, 1114, 1116, 1128, 1129, 1130], "three_button_mous": 30, "thumbdown": 30, "thumbdown_tone1": 30, "thumbdown_tone2": 30, "thumbdown_tone3": 30, "thumbdown_tone4": 30, "thumbdown_tone5": 30, "thumbsdown_tone1": 30, "thumbsdown_tone2": 30, "thumbsdown_tone3": 30, "thumbsdown_tone4": 30, "thumbsdown_tone5": 30, "thumbsup_tone1": 30, "thumbsup_tone2": 30, "thumbsup_tone3": 30, "thumbsup_tone4": 30, "thumbsup_tone5": 30, "thumbup": 30, "thumbup_tone1": 30, "thumbup_tone2": 30, "thumbup_tone3": 30, "thumbup_tone4": 30, "thumbup_tone5": 30, "thunder_cloud_and_rain": 30, "thunder_cloud_rain": 30, "ticket": 30, "tiger2": 30, "tiger": 30, "timer": [30, 57, 60, 63, 111, 156, 257, 390, 702, 711, 735, 760, 767, 773, 776, 777, 779, 791, 794, 854, 863, 879, 883, 895, 914, 920, 922, 930, 1127, 1130], "timer_clock": 30, "timor_lest": 30, "tipping_hand_man": 30, "tipping_hand_woman": 30, "tired_fac": 30, "tj": 30, "tk": 30, "tl": [30, 137], "tm": 30, "tn": [30, 172], "togo": 30, "toilet": [30, 210, 505, 748, 966], "tokelau": 30, "tokyo_tow": 30, "tomato": 30, "tone1": 30, "tone2": 30, "tone3": 30, "tone4": 30, "tone5": 30, "tonga": 30, "tongu": [30, 1113], "toolbox": [30, 153], "tooth": 30, "toothbrush": 30, "tophat": 30, "tornado": 30, "tr": [30, 196], "track_next": 30, "track_previ": 30, "trackbal": 30, "tractor": 30, "traffic_light": 30, "train2": 30, "tram": 30, "transgender_flag": 30, "transgender_symbol": 30, "triangular_flag_on_post": 30, "triangular_rul": 30, "trident": 30, "trinidad_tobago": 30, "tristan_da_cunha": 30, "triumph": 30, "trolleybu": 30, "trophi": 30, "tropical_drink": 30, "tropical_fish": 30, "truck": 30, "trumpet": 30, "tt": 30, "tulip": 30, "tumbler_glass": 30, "tunisia": 30, "turkei": 30, "turkmenistan": 30, "turks_caicos_island": 30, "turtl": 30, "tuvalu": 30, "tuxedo_tone1": 30, "tuxedo_tone2": 30, "tuxedo_tone3": 30, "tuxedo_tone4": 30, "tuxedo_tone5": 30, "tw": 30, "twisted_rightwards_arrow": 30, "two_heart": 30, "two_men_holding_hand": 30, "two_women_holding_hand": 30, "tz": 30, "u5272": 30, "u5408": 30, "u55b6": 30, "u6307": 30, "u6708": 30, "u6709": 30, "u6e80": 30, "u7121": 30, "u7533": 30, "u7981": 30, "u7a7a": 30, "ua": [30, 199, 208], "ug": 30, "uganda": 30, "ukrain": 30, "umbrella2": 30, "umbrella": 30, "umbrella_on_ground": 30, "unamus": 30, "underag": 30, "unicorn": 30, "unicorn_fac": 30, "united_arab_emir": 30, "united_n": 30, "united_st": 30, "unlock": [30, 697, 699, 701, 750, 756, 903, 1125], "upside_down": 30, "upside_down_fac": 30, "urn": 30, "uruguai": 30, "us_virgin_island": 30, "uz": 30, "uzbekistan": 30, "v_tone1": 30, "v_tone2": 30, "v_tone3": 30, "v_tone4": 30, "v_tone5": 30, "va": [30, 251, 254], "vampir": 30, "vampire_dark_skin_ton": 30, "vampire_light_skin_ton": 30, "vampire_medium_dark_skin_ton": 30, "vampire_medium_light_skin_ton": 30, "vampire_medium_skin_ton": 30, "vampire_tone1": 30, "vampire_tone2": 30, "vampire_tone3": 30, "vampire_tone4": 30, "vampire_tone5": 30, "vanuatu": 30, "vatican_c": 30, "vc": [30, 114, 138], "ve": [30, 132, 134, 800, 1094], "venezuela": 30, "vertical_traffic_light": 30, "vg": 30, "vh": 30, "vi": 30, "vibration_mod": 30, "video_camera": 30, "video_gam": 30, "vietnam": 30, "violin": 30, "virgo": 30, "vn": 30, "volcano": 30, "volleybal": 30, "vu": 30, "vulcan": 30, "vulcan_salut": 30, "vulcan_tone1": 30, "vulcan_tone2": 30, "vulcan_tone3": 30, "vulcan_tone4": 30, "vulcan_tone5": 30, "waffl": 30, "wale": 30, "walk": [30, 131, 151, 164, 260, 261, 279, 309, 320, 627, 644, 802, 864, 968], "walking_man": 30, "walking_tone1": 30, "walking_tone2": 30, "walking_tone3": 30, "walking_tone4": 30, "walking_tone5": 30, "walking_woman": 30, "wallis_futuna": 30, "waning_crescent_moon": 30, "waning_gibbous_moon": 30, "wastebasket": 30, "water_buffalo": 30, "water_polo": 30, "water_polo_tone1": 30, "water_polo_tone2": 30, "water_polo_tone3": 30, "water_polo_tone4": 30, "water_polo_tone5": 30, "watermelon": [30, 256], "wave": [30, 32, 36, 248, 265], "wave_tone1": 30, "wave_tone2": 30, "wave_tone3": 30, "wave_tone4": 30, "wave_tone5": 30, "waving_black_flag": 30, "waving_white_flag": 30, "wavy_dash": 30, "waxing_crescent_moon": 30, "waxing_gibbous_moon": 30, "wc": [30, 192, 193, 210, 230, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 411, 629, 667, 708, 710, 711, 798, 801, 851, 865, 1040], "weari": 30, "wed": [30, 191], "weight_lift": 30, "weight_lifter_tone1": 30, "weight_lifter_tone2": 30, "weight_lifter_tone3": 30, "weight_lifter_tone4": 30, "weight_lifter_tone5": 30, "weight_lifting_man": 30, "weight_lifting_woman": 30, "western_sahara": 30, "wf": 30, "whale2": 30, "whale": 30, "wheel_of_dharma": 30, "wheelchair": 30, "whiski": 30, "white_check_mark": 30, "white_circl": 30, "white_flag": 30, "white_flow": 30, "white_frowning_fac": 30, "white_hair": 30, "white_heart": 30, "white_large_squar": 30, "white_medium_small_squar": 30, "white_medium_squar": 30, "white_small_squar": 30, "white_square_button": 30, "white_sun_behind_cloud": 30, "white_sun_behind_cloud_with_rain": 30, "white_sun_cloud": 30, "white_sun_rain_cloud": 30, "white_sun_small_cloud": 30, "white_sun_with_small_cloud": 30, "wilted_flow": 30, "wilted_ros": 30, "wind_blowing_fac": 30, "wind_chim": 30, "wind_fac": 30, "wine_glass": 30, "wolf": 30, "woman": 30, "woman_and_man_holding_hands_dark_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_light_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "woman_and_man_holding_hands_tone1": 30, "woman_and_man_holding_hands_tone1_tone2": 30, "woman_and_man_holding_hands_tone1_tone3": 30, "woman_and_man_holding_hands_tone1_tone4": 30, "woman_and_man_holding_hands_tone1_tone5": 30, "woman_and_man_holding_hands_tone2": 30, "woman_and_man_holding_hands_tone2_tone1": 30, "woman_and_man_holding_hands_tone2_tone3": 30, "woman_and_man_holding_hands_tone2_tone4": 30, "woman_and_man_holding_hands_tone2_tone5": 30, "woman_and_man_holding_hands_tone3": 30, "woman_and_man_holding_hands_tone3_tone1": 30, "woman_and_man_holding_hands_tone3_tone2": 30, "woman_and_man_holding_hands_tone3_tone4": 30, "woman_and_man_holding_hands_tone3_tone5": 30, "woman_and_man_holding_hands_tone4": 30, "woman_and_man_holding_hands_tone4_tone1": 30, "woman_and_man_holding_hands_tone4_tone2": 30, "woman_and_man_holding_hands_tone4_tone3": 30, "woman_and_man_holding_hands_tone4_tone5": 30, "woman_and_man_holding_hands_tone5": 30, "woman_and_man_holding_hands_tone5_tone1": 30, "woman_and_man_holding_hands_tone5_tone2": 30, "woman_and_man_holding_hands_tone5_tone3": 30, "woman_and_man_holding_hands_tone5_tone4": 30, "woman_artist": 30, "woman_artist_dark_skin_ton": 30, "woman_artist_light_skin_ton": 30, "woman_artist_medium_dark_skin_ton": 30, "woman_artist_medium_light_skin_ton": 30, "woman_artist_medium_skin_ton": 30, "woman_artist_tone1": 30, "woman_artist_tone2": 30, "woman_artist_tone3": 30, "woman_artist_tone4": 30, "woman_artist_tone5": 30, "woman_astronaut": 30, "woman_astronaut_dark_skin_ton": 30, "woman_astronaut_light_skin_ton": 30, "woman_astronaut_medium_dark_skin_ton": 30, "woman_astronaut_medium_light_skin_ton": 30, "woman_astronaut_medium_skin_ton": 30, "woman_astronaut_tone1": 30, "woman_astronaut_tone2": 30, "woman_astronaut_tone3": 30, "woman_astronaut_tone4": 30, "woman_astronaut_tone5": 30, "woman_bald": 30, "woman_bald_dark_skin_ton": 30, "woman_bald_light_skin_ton": 30, "woman_bald_medium_dark_skin_ton": 30, "woman_bald_medium_light_skin_ton": 30, "woman_bald_medium_skin_ton": 30, "woman_bald_tone1": 30, "woman_bald_tone2": 30, "woman_bald_tone3": 30, "woman_bald_tone4": 30, "woman_bald_tone5": 30, "woman_beard": 30, "woman_bik": 30, "woman_biking_dark_skin_ton": 30, "woman_biking_light_skin_ton": 30, "woman_biking_medium_dark_skin_ton": 30, "woman_biking_medium_light_skin_ton": 30, "woman_biking_medium_skin_ton": 30, "woman_biking_tone1": 30, "woman_biking_tone2": 30, "woman_biking_tone3": 30, "woman_biking_tone4": 30, "woman_biking_tone5": 30, "woman_bouncing_bal": 30, "woman_bouncing_ball_dark_skin_ton": 30, "woman_bouncing_ball_light_skin_ton": 30, "woman_bouncing_ball_medium_dark_skin_ton": 30, "woman_bouncing_ball_medium_light_skin_ton": 30, "woman_bouncing_ball_medium_skin_ton": 30, "woman_bouncing_ball_tone1": 30, "woman_bouncing_ball_tone2": 30, "woman_bouncing_ball_tone3": 30, "woman_bouncing_ball_tone4": 30, "woman_bouncing_ball_tone5": 30, "woman_bow": 30, "woman_bowing_dark_skin_ton": 30, "woman_bowing_light_skin_ton": 30, "woman_bowing_medium_dark_skin_ton": 30, "woman_bowing_medium_light_skin_ton": 30, "woman_bowing_medium_skin_ton": 30, "woman_bowing_tone1": 30, "woman_bowing_tone2": 30, "woman_bowing_tone3": 30, "woman_bowing_tone4": 30, "woman_bowing_tone5": 30, "woman_cartwheel": 30, "woman_cartwheeling_dark_skin_ton": 30, "woman_cartwheeling_light_skin_ton": 30, "woman_cartwheeling_medium_dark_skin_ton": 30, "woman_cartwheeling_medium_light_skin_ton": 30, "woman_cartwheeling_medium_skin_ton": 30, "woman_cartwheeling_tone1": 30, "woman_cartwheeling_tone2": 30, "woman_cartwheeling_tone3": 30, "woman_cartwheeling_tone4": 30, "woman_cartwheeling_tone5": 30, "woman_climb": 30, "woman_climbing_dark_skin_ton": 30, "woman_climbing_light_skin_ton": 30, "woman_climbing_medium_dark_skin_ton": 30, "woman_climbing_medium_light_skin_ton": 30, "woman_climbing_medium_skin_ton": 30, "woman_climbing_tone1": 30, "woman_climbing_tone2": 30, "woman_climbing_tone3": 30, "woman_climbing_tone4": 30, "woman_climbing_tone5": 30, "woman_construction_work": 30, "woman_construction_worker_dark_skin_ton": 30, "woman_construction_worker_light_skin_ton": 30, "woman_construction_worker_medium_dark_skin_ton": 30, "woman_construction_worker_medium_light_skin_ton": 30, "woman_construction_worker_medium_skin_ton": 30, "woman_construction_worker_tone1": 30, "woman_construction_worker_tone2": 30, "woman_construction_worker_tone3": 30, "woman_construction_worker_tone4": 30, "woman_construction_worker_tone5": 30, "woman_cook": 30, "woman_cook_dark_skin_ton": 30, "woman_cook_light_skin_ton": 30, "woman_cook_medium_dark_skin_ton": 30, "woman_cook_medium_light_skin_ton": 30, "woman_cook_medium_skin_ton": 30, "woman_cook_tone1": 30, "woman_cook_tone2": 30, "woman_cook_tone3": 30, "woman_cook_tone4": 30, "woman_cook_tone5": 30, "woman_curly_hair": 30, "woman_curly_haired_dark_skin_ton": 30, "woman_curly_haired_light_skin_ton": 30, "woman_curly_haired_medium_dark_skin_ton": 30, "woman_curly_haired_medium_light_skin_ton": 30, "woman_curly_haired_medium_skin_ton": 30, "woman_curly_haired_tone1": 30, "woman_curly_haired_tone2": 30, "woman_curly_haired_tone3": 30, "woman_curly_haired_tone4": 30, "woman_curly_haired_tone5": 30, "woman_dark_skin_tone_beard": 30, "woman_detect": 30, "woman_detective_dark_skin_ton": 30, "woman_detective_light_skin_ton": 30, "woman_detective_medium_dark_skin_ton": 30, "woman_detective_medium_light_skin_ton": 30, "woman_detective_medium_skin_ton": 30, "woman_detective_tone1": 30, "woman_detective_tone2": 30, "woman_detective_tone3": 30, "woman_detective_tone4": 30, "woman_detective_tone5": 30, "woman_elf": 30, "woman_elf_dark_skin_ton": 30, "woman_elf_light_skin_ton": 30, "woman_elf_medium_dark_skin_ton": 30, "woman_elf_medium_light_skin_ton": 30, "woman_elf_medium_skin_ton": 30, "woman_elf_tone1": 30, "woman_elf_tone2": 30, "woman_elf_tone3": 30, "woman_elf_tone4": 30, "woman_elf_tone5": 30, "woman_facepalm": 30, "woman_facepalming_dark_skin_ton": 30, "woman_facepalming_light_skin_ton": 30, "woman_facepalming_medium_dark_skin_ton": 30, "woman_facepalming_medium_light_skin_ton": 30, "woman_facepalming_medium_skin_ton": 30, "woman_facepalming_tone1": 30, "woman_facepalming_tone2": 30, "woman_facepalming_tone3": 30, "woman_facepalming_tone4": 30, "woman_facepalming_tone5": 30, "woman_factory_work": 30, "woman_factory_worker_dark_skin_ton": 30, "woman_factory_worker_light_skin_ton": 30, "woman_factory_worker_medium_dark_skin_ton": 30, "woman_factory_worker_medium_light_skin_ton": 30, "woman_factory_worker_medium_skin_ton": 30, "woman_factory_worker_tone1": 30, "woman_factory_worker_tone2": 30, "woman_factory_worker_tone3": 30, "woman_factory_worker_tone4": 30, "woman_factory_worker_tone5": 30, "woman_fairi": 30, "woman_fairy_dark_skin_ton": 30, "woman_fairy_light_skin_ton": 30, "woman_fairy_medium_dark_skin_ton": 30, "woman_fairy_medium_light_skin_ton": 30, "woman_fairy_medium_skin_ton": 30, "woman_fairy_tone1": 30, "woman_fairy_tone2": 30, "woman_fairy_tone3": 30, "woman_fairy_tone4": 30, "woman_fairy_tone5": 30, "woman_farm": 30, "woman_farmer_dark_skin_ton": 30, "woman_farmer_light_skin_ton": 30, "woman_farmer_medium_dark_skin_ton": 30, "woman_farmer_medium_light_skin_ton": 30, "woman_farmer_medium_skin_ton": 30, "woman_farmer_tone1": 30, "woman_farmer_tone2": 30, "woman_farmer_tone3": 30, "woman_farmer_tone4": 30, "woman_farmer_tone5": 30, "woman_feeding_babi": 30, "woman_feeding_baby_dark_skin_ton": 30, "woman_feeding_baby_light_skin_ton": 30, "woman_feeding_baby_medium_dark_skin_ton": 30, "woman_feeding_baby_medium_light_skin_ton": 30, "woman_feeding_baby_medium_skin_ton": 30, "woman_feeding_baby_tone1": 30, "woman_feeding_baby_tone2": 30, "woman_feeding_baby_tone3": 30, "woman_feeding_baby_tone4": 30, "woman_feeding_baby_tone5": 30, "woman_firefight": 30, "woman_firefighter_dark_skin_ton": 30, "woman_firefighter_light_skin_ton": 30, "woman_firefighter_medium_dark_skin_ton": 30, "woman_firefighter_medium_light_skin_ton": 30, "woman_firefighter_medium_skin_ton": 30, "woman_firefighter_tone1": 30, "woman_firefighter_tone2": 30, "woman_firefighter_tone3": 30, "woman_firefighter_tone4": 30, "woman_firefighter_tone5": 30, "woman_frown": 30, "woman_frowning_dark_skin_ton": 30, "woman_frowning_light_skin_ton": 30, "woman_frowning_medium_dark_skin_ton": 30, "woman_frowning_medium_light_skin_ton": 30, "woman_frowning_medium_skin_ton": 30, "woman_frowning_tone1": 30, "woman_frowning_tone2": 30, "woman_frowning_tone3": 30, "woman_frowning_tone4": 30, "woman_frowning_tone5": 30, "woman_geni": 30, "woman_gesturing_no": 30, "woman_gesturing_no_dark_skin_ton": 30, "woman_gesturing_no_light_skin_ton": 30, "woman_gesturing_no_medium_dark_skin_ton": 30, "woman_gesturing_no_medium_light_skin_ton": 30, "woman_gesturing_no_medium_skin_ton": 30, "woman_gesturing_no_tone1": 30, "woman_gesturing_no_tone2": 30, "woman_gesturing_no_tone3": 30, "woman_gesturing_no_tone4": 30, "woman_gesturing_no_tone5": 30, "woman_gesturing_ok": 30, "woman_gesturing_ok_dark_skin_ton": 30, "woman_gesturing_ok_light_skin_ton": 30, "woman_gesturing_ok_medium_dark_skin_ton": 30, "woman_gesturing_ok_medium_light_skin_ton": 30, "woman_gesturing_ok_medium_skin_ton": 30, "woman_gesturing_ok_tone1": 30, "woman_gesturing_ok_tone2": 30, "woman_gesturing_ok_tone3": 30, "woman_gesturing_ok_tone4": 30, "woman_gesturing_ok_tone5": 30, "woman_getting_face_massag": 30, "woman_getting_face_massage_dark_skin_ton": 30, "woman_getting_face_massage_light_skin_ton": 30, "woman_getting_face_massage_medium_dark_skin_ton": 30, "woman_getting_face_massage_medium_light_skin_ton": 30, "woman_getting_face_massage_medium_skin_ton": 30, "woman_getting_face_massage_tone1": 30, "woman_getting_face_massage_tone2": 30, "woman_getting_face_massage_tone3": 30, "woman_getting_face_massage_tone4": 30, "woman_getting_face_massage_tone5": 30, "woman_getting_haircut": 30, "woman_getting_haircut_dark_skin_ton": 30, "woman_getting_haircut_light_skin_ton": 30, "woman_getting_haircut_medium_dark_skin_ton": 30, "woman_getting_haircut_medium_light_skin_ton": 30, "woman_getting_haircut_medium_skin_ton": 30, "woman_getting_haircut_tone1": 30, "woman_getting_haircut_tone2": 30, "woman_getting_haircut_tone3": 30, "woman_getting_haircut_tone4": 30, "woman_getting_haircut_tone5": 30, "woman_golf": 30, "woman_golfing_dark_skin_ton": 30, "woman_golfing_light_skin_ton": 30, "woman_golfing_medium_dark_skin_ton": 30, "woman_golfing_medium_light_skin_ton": 30, "woman_golfing_medium_skin_ton": 30, "woman_golfing_tone1": 30, "woman_golfing_tone2": 30, "woman_golfing_tone3": 30, "woman_golfing_tone4": 30, "woman_golfing_tone5": 30, "woman_guard": 30, "woman_guard_dark_skin_ton": 30, "woman_guard_light_skin_ton": 30, "woman_guard_medium_dark_skin_ton": 30, "woman_guard_medium_light_skin_ton": 30, "woman_guard_medium_skin_ton": 30, "woman_guard_tone1": 30, "woman_guard_tone2": 30, "woman_guard_tone3": 30, "woman_guard_tone4": 30, "woman_guard_tone5": 30, "woman_health_work": 30, "woman_health_worker_dark_skin_ton": 30, "woman_health_worker_light_skin_ton": 30, "woman_health_worker_medium_dark_skin_ton": 30, "woman_health_worker_medium_light_skin_ton": 30, "woman_health_worker_medium_skin_ton": 30, "woman_health_worker_tone1": 30, "woman_health_worker_tone2": 30, "woman_health_worker_tone3": 30, "woman_health_worker_tone4": 30, "woman_health_worker_tone5": 30, "woman_in_lotus_posit": 30, "woman_in_lotus_position_dark_skin_ton": 30, "woman_in_lotus_position_light_skin_ton": 30, "woman_in_lotus_position_medium_dark_skin_ton": 30, "woman_in_lotus_position_medium_light_skin_ton": 30, "woman_in_lotus_position_medium_skin_ton": 30, "woman_in_lotus_position_tone1": 30, "woman_in_lotus_position_tone2": 30, "woman_in_lotus_position_tone3": 30, "woman_in_lotus_position_tone4": 30, "woman_in_lotus_position_tone5": 30, "woman_in_manual_wheelchair": 30, "woman_in_manual_wheelchair_dark_skin_ton": 30, "woman_in_manual_wheelchair_light_skin_ton": 30, "woman_in_manual_wheelchair_medium_dark_skin_ton": 30, "woman_in_manual_wheelchair_medium_light_skin_ton": 30, "woman_in_manual_wheelchair_medium_skin_ton": 30, "woman_in_manual_wheelchair_tone1": 30, "woman_in_manual_wheelchair_tone2": 30, "woman_in_manual_wheelchair_tone3": 30, "woman_in_manual_wheelchair_tone4": 30, "woman_in_manual_wheelchair_tone5": 30, "woman_in_motorized_wheelchair": 30, "woman_in_motorized_wheelchair_dark_skin_ton": 30, "woman_in_motorized_wheelchair_light_skin_ton": 30, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 30, "woman_in_motorized_wheelchair_medium_light_skin_ton": 30, "woman_in_motorized_wheelchair_medium_skin_ton": 30, "woman_in_motorized_wheelchair_tone1": 30, "woman_in_motorized_wheelchair_tone2": 30, "woman_in_motorized_wheelchair_tone3": 30, "woman_in_motorized_wheelchair_tone4": 30, "woman_in_motorized_wheelchair_tone5": 30, "woman_in_steamy_room": 30, "woman_in_steamy_room_dark_skin_ton": 30, "woman_in_steamy_room_light_skin_ton": 30, "woman_in_steamy_room_medium_dark_skin_ton": 30, "woman_in_steamy_room_medium_light_skin_ton": 30, "woman_in_steamy_room_medium_skin_ton": 30, "woman_in_steamy_room_tone1": 30, "woman_in_steamy_room_tone2": 30, "woman_in_steamy_room_tone3": 30, "woman_in_steamy_room_tone4": 30, "woman_in_steamy_room_tone5": 30, "woman_in_tuxedo": 30, "woman_in_tuxedo_dark_skin_ton": 30, "woman_in_tuxedo_light_skin_ton": 30, "woman_in_tuxedo_medium_dark_skin_ton": 30, "woman_in_tuxedo_medium_light_skin_ton": 30, "woman_in_tuxedo_medium_skin_ton": 30, "woman_in_tuxedo_tone1": 30, "woman_in_tuxedo_tone2": 30, "woman_in_tuxedo_tone3": 30, "woman_in_tuxedo_tone4": 30, "woman_in_tuxedo_tone5": 30, "woman_judg": 30, "woman_judge_dark_skin_ton": 30, "woman_judge_light_skin_ton": 30, "woman_judge_medium_dark_skin_ton": 30, "woman_judge_medium_light_skin_ton": 30, "woman_judge_medium_skin_ton": 30, "woman_judge_tone1": 30, "woman_judge_tone2": 30, "woman_judge_tone3": 30, "woman_judge_tone4": 30, "woman_judge_tone5": 30, "woman_juggl": 30, "woman_juggling_dark_skin_ton": 30, "woman_juggling_light_skin_ton": 30, "woman_juggling_medium_dark_skin_ton": 30, "woman_juggling_medium_light_skin_ton": 30, "woman_juggling_medium_skin_ton": 30, "woman_juggling_tone1": 30, "woman_juggling_tone2": 30, "woman_juggling_tone3": 30, "woman_juggling_tone4": 30, "woman_juggling_tone5": 30, "woman_kneel": 30, "woman_kneeling_dark_skin_ton": 30, "woman_kneeling_light_skin_ton": 30, "woman_kneeling_medium_dark_skin_ton": 30, "woman_kneeling_medium_light_skin_ton": 30, "woman_kneeling_medium_skin_ton": 30, "woman_kneeling_tone1": 30, "woman_kneeling_tone2": 30, "woman_kneeling_tone3": 30, "woman_kneeling_tone4": 30, "woman_kneeling_tone5": 30, "woman_lifting_weight": 30, "woman_lifting_weights_dark_skin_ton": 30, "woman_lifting_weights_light_skin_ton": 30, "woman_lifting_weights_medium_dark_skin_ton": 30, "woman_lifting_weights_medium_light_skin_ton": 30, "woman_lifting_weights_medium_skin_ton": 30, "woman_lifting_weights_tone1": 30, "woman_lifting_weights_tone2": 30, "woman_lifting_weights_tone3": 30, "woman_lifting_weights_tone4": 30, "woman_lifting_weights_tone5": 30, "woman_light_skin_tone_beard": 30, "woman_mag": 30, "woman_mage_dark_skin_ton": 30, "woman_mage_light_skin_ton": 30, "woman_mage_medium_dark_skin_ton": 30, "woman_mage_medium_light_skin_ton": 30, "woman_mage_medium_skin_ton": 30, "woman_mage_tone1": 30, "woman_mage_tone2": 30, "woman_mage_tone3": 30, "woman_mage_tone4": 30, "woman_mage_tone5": 30, "woman_mechan": 30, "woman_mechanic_dark_skin_ton": 30, "woman_mechanic_light_skin_ton": 30, "woman_mechanic_medium_dark_skin_ton": 30, "woman_mechanic_medium_light_skin_ton": 30, "woman_mechanic_medium_skin_ton": 30, "woman_mechanic_tone1": 30, "woman_mechanic_tone2": 30, "woman_mechanic_tone3": 30, "woman_mechanic_tone4": 30, "woman_mechanic_tone5": 30, "woman_medium_dark_skin_tone_beard": 30, "woman_medium_light_skin_tone_beard": 30, "woman_medium_skin_tone_beard": 30, "woman_mountain_bik": 30, "woman_mountain_biking_dark_skin_ton": 30, "woman_mountain_biking_light_skin_ton": 30, "woman_mountain_biking_medium_dark_skin_ton": 30, "woman_mountain_biking_medium_light_skin_ton": 30, "woman_mountain_biking_medium_skin_ton": 30, "woman_mountain_biking_tone1": 30, "woman_mountain_biking_tone2": 30, "woman_mountain_biking_tone3": 30, "woman_mountain_biking_tone4": 30, "woman_mountain_biking_tone5": 30, "woman_office_work": 30, "woman_office_worker_dark_skin_ton": 30, "woman_office_worker_light_skin_ton": 30, "woman_office_worker_medium_dark_skin_ton": 30, "woman_office_worker_medium_light_skin_ton": 30, "woman_office_worker_medium_skin_ton": 30, "woman_office_worker_tone1": 30, "woman_office_worker_tone2": 30, "woman_office_worker_tone3": 30, "woman_office_worker_tone4": 30, "woman_office_worker_tone5": 30, "woman_pilot": 30, "woman_pilot_dark_skin_ton": 30, "woman_pilot_light_skin_ton": 30, "woman_pilot_medium_dark_skin_ton": 30, "woman_pilot_medium_light_skin_ton": 30, "woman_pilot_medium_skin_ton": 30, "woman_pilot_tone1": 30, "woman_pilot_tone2": 30, "woman_pilot_tone3": 30, "woman_pilot_tone4": 30, "woman_pilot_tone5": 30, "woman_playing_handbal": 30, "woman_playing_handball_dark_skin_ton": 30, "woman_playing_handball_light_skin_ton": 30, "woman_playing_handball_medium_dark_skin_ton": 30, "woman_playing_handball_medium_light_skin_ton": 30, "woman_playing_handball_medium_skin_ton": 30, "woman_playing_handball_tone1": 30, "woman_playing_handball_tone2": 30, "woman_playing_handball_tone3": 30, "woman_playing_handball_tone4": 30, "woman_playing_handball_tone5": 30, "woman_playing_water_polo": 30, "woman_playing_water_polo_dark_skin_ton": 30, "woman_playing_water_polo_light_skin_ton": 30, "woman_playing_water_polo_medium_dark_skin_ton": 30, "woman_playing_water_polo_medium_light_skin_ton": 30, "woman_playing_water_polo_medium_skin_ton": 30, "woman_playing_water_polo_tone1": 30, "woman_playing_water_polo_tone2": 30, "woman_playing_water_polo_tone3": 30, "woman_playing_water_polo_tone4": 30, "woman_playing_water_polo_tone5": 30, "woman_police_offic": 30, "woman_police_officer_dark_skin_ton": 30, "woman_police_officer_light_skin_ton": 30, "woman_police_officer_medium_dark_skin_ton": 30, "woman_police_officer_medium_light_skin_ton": 30, "woman_police_officer_medium_skin_ton": 30, "woman_police_officer_tone1": 30, "woman_police_officer_tone2": 30, "woman_police_officer_tone3": 30, "woman_police_officer_tone4": 30, "woman_police_officer_tone5": 30, "woman_pout": 30, "woman_pouting_dark_skin_ton": 30, "woman_pouting_light_skin_ton": 30, "woman_pouting_medium_dark_skin_ton": 30, "woman_pouting_medium_light_skin_ton": 30, "woman_pouting_medium_skin_ton": 30, "woman_pouting_tone1": 30, "woman_pouting_tone2": 30, "woman_pouting_tone3": 30, "woman_pouting_tone4": 30, "woman_pouting_tone5": 30, "woman_raising_hand": 30, "woman_raising_hand_dark_skin_ton": 30, "woman_raising_hand_light_skin_ton": 30, "woman_raising_hand_medium_dark_skin_ton": 30, "woman_raising_hand_medium_light_skin_ton": 30, "woman_raising_hand_medium_skin_ton": 30, "woman_raising_hand_tone1": 30, "woman_raising_hand_tone2": 30, "woman_raising_hand_tone3": 30, "woman_raising_hand_tone4": 30, "woman_raising_hand_tone5": 30, "woman_red_hair": 30, "woman_red_haired_dark_skin_ton": 30, "woman_red_haired_light_skin_ton": 30, "woman_red_haired_medium_dark_skin_ton": 30, "woman_red_haired_medium_light_skin_ton": 30, "woman_red_haired_medium_skin_ton": 30, "woman_red_haired_tone1": 30, "woman_red_haired_tone2": 30, "woman_red_haired_tone3": 30, "woman_red_haired_tone4": 30, "woman_red_haired_tone5": 30, "woman_rowing_boat": 30, "woman_rowing_boat_dark_skin_ton": 30, "woman_rowing_boat_light_skin_ton": 30, "woman_rowing_boat_medium_dark_skin_ton": 30, "woman_rowing_boat_medium_light_skin_ton": 30, "woman_rowing_boat_medium_skin_ton": 30, "woman_rowing_boat_tone1": 30, "woman_rowing_boat_tone2": 30, "woman_rowing_boat_tone3": 30, "woman_rowing_boat_tone4": 30, "woman_rowing_boat_tone5": 30, "woman_run": 30, "woman_running_dark_skin_ton": 30, "woman_running_light_skin_ton": 30, "woman_running_medium_dark_skin_ton": 30, "woman_running_medium_light_skin_ton": 30, "woman_running_medium_skin_ton": 30, "woman_running_tone1": 30, "woman_running_tone2": 30, "woman_running_tone3": 30, "woman_running_tone4": 30, "woman_running_tone5": 30, "woman_scientist": 30, "woman_scientist_dark_skin_ton": 30, "woman_scientist_light_skin_ton": 30, "woman_scientist_medium_dark_skin_ton": 30, "woman_scientist_medium_light_skin_ton": 30, "woman_scientist_medium_skin_ton": 30, "woman_scientist_tone1": 30, "woman_scientist_tone2": 30, "woman_scientist_tone3": 30, "woman_scientist_tone4": 30, "woman_scientist_tone5": 30, "woman_shrug": 30, "woman_shrugging_dark_skin_ton": 30, "woman_shrugging_light_skin_ton": 30, "woman_shrugging_medium_dark_skin_ton": 30, "woman_shrugging_medium_light_skin_ton": 30, "woman_shrugging_medium_skin_ton": 30, "woman_shrugging_tone1": 30, "woman_shrugging_tone2": 30, "woman_shrugging_tone3": 30, "woman_shrugging_tone4": 30, "woman_shrugging_tone5": 30, "woman_sing": 30, "woman_singer_dark_skin_ton": 30, "woman_singer_light_skin_ton": 30, "woman_singer_medium_dark_skin_ton": 30, "woman_singer_medium_light_skin_ton": 30, "woman_singer_medium_skin_ton": 30, "woman_singer_tone1": 30, "woman_singer_tone2": 30, "woman_singer_tone3": 30, "woman_singer_tone4": 30, "woman_singer_tone5": 30, "woman_stand": 30, "woman_standing_dark_skin_ton": 30, "woman_standing_light_skin_ton": 30, "woman_standing_medium_dark_skin_ton": 30, "woman_standing_medium_light_skin_ton": 30, "woman_standing_medium_skin_ton": 30, "woman_standing_tone1": 30, "woman_standing_tone2": 30, "woman_standing_tone3": 30, "woman_standing_tone4": 30, "woman_standing_tone5": 30, "woman_stud": 30, "woman_student_dark_skin_ton": 30, "woman_student_light_skin_ton": 30, "woman_student_medium_dark_skin_ton": 30, "woman_student_medium_light_skin_ton": 30, "woman_student_medium_skin_ton": 30, "woman_student_tone1": 30, "woman_student_tone2": 30, "woman_student_tone3": 30, "woman_student_tone4": 30, "woman_student_tone5": 30, "woman_superhero": 30, "woman_superhero_dark_skin_ton": 30, "woman_superhero_light_skin_ton": 30, "woman_superhero_medium_dark_skin_ton": 30, "woman_superhero_medium_light_skin_ton": 30, "woman_superhero_medium_skin_ton": 30, "woman_superhero_tone1": 30, "woman_superhero_tone2": 30, "woman_superhero_tone3": 30, "woman_superhero_tone4": 30, "woman_superhero_tone5": 30, "woman_supervillain": 30, "woman_supervillain_dark_skin_ton": 30, "woman_supervillain_light_skin_ton": 30, "woman_supervillain_medium_dark_skin_ton": 30, "woman_supervillain_medium_light_skin_ton": 30, "woman_supervillain_medium_skin_ton": 30, "woman_supervillain_tone1": 30, "woman_supervillain_tone2": 30, "woman_supervillain_tone3": 30, "woman_supervillain_tone4": 30, "woman_supervillain_tone5": 30, "woman_surf": 30, "woman_surfing_dark_skin_ton": 30, "woman_surfing_light_skin_ton": 30, "woman_surfing_medium_dark_skin_ton": 30, "woman_surfing_medium_light_skin_ton": 30, "woman_surfing_medium_skin_ton": 30, "woman_surfing_tone1": 30, "woman_surfing_tone2": 30, "woman_surfing_tone3": 30, "woman_surfing_tone4": 30, "woman_surfing_tone5": 30, "woman_swim": 30, "woman_swimming_dark_skin_ton": 30, "woman_swimming_light_skin_ton": 30, "woman_swimming_medium_dark_skin_ton": 30, "woman_swimming_medium_light_skin_ton": 30, "woman_swimming_medium_skin_ton": 30, "woman_swimming_tone1": 30, "woman_swimming_tone2": 30, "woman_swimming_tone3": 30, "woman_swimming_tone4": 30, "woman_swimming_tone5": 30, "woman_teach": 30, "woman_teacher_dark_skin_ton": 30, "woman_teacher_light_skin_ton": 30, "woman_teacher_medium_dark_skin_ton": 30, "woman_teacher_medium_light_skin_ton": 30, "woman_teacher_medium_skin_ton": 30, "woman_teacher_tone1": 30, "woman_teacher_tone2": 30, "woman_teacher_tone3": 30, "woman_teacher_tone4": 30, "woman_teacher_tone5": 30, "woman_technologist": 30, "woman_technologist_dark_skin_ton": 30, "woman_technologist_light_skin_ton": 30, "woman_technologist_medium_dark_skin_ton": 30, "woman_technologist_medium_light_skin_ton": 30, "woman_technologist_medium_skin_ton": 30, "woman_technologist_tone1": 30, "woman_technologist_tone2": 30, "woman_technologist_tone3": 30, "woman_technologist_tone4": 30, "woman_technologist_tone5": 30, "woman_tipping_hand": 30, "woman_tipping_hand_dark_skin_ton": 30, "woman_tipping_hand_light_skin_ton": 30, "woman_tipping_hand_medium_dark_skin_ton": 30, "woman_tipping_hand_medium_light_skin_ton": 30, "woman_tipping_hand_medium_skin_ton": 30, "woman_tipping_hand_tone1": 30, "woman_tipping_hand_tone2": 30, "woman_tipping_hand_tone3": 30, "woman_tipping_hand_tone4": 30, "woman_tipping_hand_tone5": 30, "woman_tone1": 30, "woman_tone1_beard": 30, "woman_tone2": 30, "woman_tone2_beard": 30, "woman_tone3": 30, "woman_tone3_beard": 30, "woman_tone4": 30, "woman_tone4_beard": 30, "woman_tone5": 30, "woman_tone5_beard": 30, "woman_vampir": 30, "woman_vampire_dark_skin_ton": 30, "woman_vampire_light_skin_ton": 30, "woman_vampire_medium_dark_skin_ton": 30, "woman_vampire_medium_light_skin_ton": 30, "woman_vampire_medium_skin_ton": 30, "woman_vampire_tone1": 30, "woman_vampire_tone2": 30, "woman_vampire_tone3": 30, "woman_vampire_tone4": 30, "woman_vampire_tone5": 30, "woman_walk": 30, "woman_walking_dark_skin_ton": 30, "woman_walking_light_skin_ton": 30, "woman_walking_medium_dark_skin_ton": 30, "woman_walking_medium_light_skin_ton": 30, "woman_walking_medium_skin_ton": 30, "woman_walking_tone1": 30, "woman_walking_tone2": 30, "woman_walking_tone3": 30, "woman_walking_tone4": 30, "woman_walking_tone5": 30, "woman_wearing_turban": 30, "woman_wearing_turban_dark_skin_ton": 30, "woman_wearing_turban_light_skin_ton": 30, "woman_wearing_turban_medium_dark_skin_ton": 30, "woman_wearing_turban_medium_light_skin_ton": 30, "woman_wearing_turban_medium_skin_ton": 30, "woman_wearing_turban_tone1": 30, "woman_wearing_turban_tone2": 30, "woman_wearing_turban_tone3": 30, "woman_wearing_turban_tone4": 30, "woman_wearing_turban_tone5": 30, "woman_white_hair": 30, "woman_white_haired_dark_skin_ton": 30, "woman_white_haired_light_skin_ton": 30, "woman_white_haired_medium_dark_skin_ton": 30, "woman_white_haired_medium_light_skin_ton": 30, "woman_white_haired_medium_skin_ton": 30, "woman_white_haired_tone1": 30, "woman_white_haired_tone2": 30, "woman_white_haired_tone3": 30, "woman_white_haired_tone4": 30, "woman_white_haired_tone5": 30, "woman_with_headscarf": 30, "woman_with_headscarf_dark_skin_ton": 30, "woman_with_headscarf_light_skin_ton": 30, "woman_with_headscarf_medium_dark_skin_ton": 30, "woman_with_headscarf_medium_light_skin_ton": 30, "woman_with_headscarf_medium_skin_ton": 30, "woman_with_headscarf_tone1": 30, "woman_with_headscarf_tone2": 30, "woman_with_headscarf_tone3": 30, "woman_with_headscarf_tone4": 30, "woman_with_headscarf_tone5": 30, "woman_with_probing_can": 30, "woman_with_probing_cane_dark_skin_ton": 30, "woman_with_probing_cane_light_skin_ton": 30, "woman_with_probing_cane_medium_dark_skin_ton": 30, "woman_with_probing_cane_medium_light_skin_ton": 30, "woman_with_probing_cane_medium_skin_ton": 30, "woman_with_probing_cane_tone1": 30, "woman_with_probing_cane_tone2": 30, "woman_with_probing_cane_tone3": 30, "woman_with_probing_cane_tone4": 30, "woman_with_probing_cane_tone5": 30, "woman_with_turban": 30, "woman_with_veil": 30, "woman_with_veil_dark_skin_ton": 30, "woman_with_veil_light_skin_ton": 30, "woman_with_veil_medium_dark_skin_ton": 30, "woman_with_veil_medium_light_skin_ton": 30, "woman_with_veil_medium_skin_ton": 30, "woman_with_veil_tone1": 30, "woman_with_veil_tone2": 30, "woman_with_veil_tone3": 30, "woman_with_veil_tone4": 30, "woman_with_veil_tone5": 30, "woman_zombi": 30, "womans_cloth": 30, "womans_flat_sho": 30, "womans_hat": 30, "women_holding_hands_dark_skin_ton": 30, "women_holding_hands_dark_skin_tone_light_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_dark_skin_tone_medium_skin_ton": 30, "women_holding_hands_light_skin_ton": 30, "women_holding_hands_light_skin_tone_dark_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_light_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_dark_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_light_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 30, "women_holding_hands_medium_skin_ton": 30, "women_holding_hands_medium_skin_tone_dark_skin_ton": 30, "women_holding_hands_medium_skin_tone_light_skin_ton": 30, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 30, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 30, "women_holding_hands_tone1": 30, "women_holding_hands_tone1_tone2": 30, "women_holding_hands_tone1_tone3": 30, "women_holding_hands_tone1_tone4": 30, "women_holding_hands_tone1_tone5": 30, "women_holding_hands_tone2": 30, "women_holding_hands_tone2_tone1": 30, "women_holding_hands_tone2_tone3": 30, "women_holding_hands_tone2_tone4": 30, "women_holding_hands_tone2_tone5": 30, "women_holding_hands_tone3": 30, "women_holding_hands_tone3_tone1": 30, "women_holding_hands_tone3_tone2": 30, "women_holding_hands_tone3_tone4": 30, "women_holding_hands_tone3_tone5": 30, "women_holding_hands_tone4": 30, "women_holding_hands_tone4_tone1": 30, "women_holding_hands_tone4_tone2": 30, "women_holding_hands_tone4_tone3": 30, "women_holding_hands_tone4_tone5": 30, "women_holding_hands_tone5": 30, "women_holding_hands_tone5_tone1": 30, "women_holding_hands_tone5_tone2": 30, "women_holding_hands_tone5_tone3": 30, "women_holding_hands_tone5_tone4": 30, "women_with_bunny_ears_parti": 30, "women_wrestl": 30, "women": 30, "wood": 30, "woozy_fac": 30, "world_map": 30, "worm": [30, 422], "worri": [30, 390], "worship_symbol": 30, "wrench": 30, "wrestler": 30, "wrestlers_tone1": 30, "wrestlers_tone2": 30, "wrestlers_tone3": 30, "wrestlers_tone4": 30, "wrestlers_tone5": 30, "wrestl": 30, "wrestling_tone1": 30, "wrestling_tone2": 30, "wrestling_tone3": 30, "wrestling_tone4": 30, "wrestling_tone5": 30, "writing_hand": 30, "writing_hand_tone1": 30, "writing_hand_tone2": 30, "writing_hand_tone3": 30, "writing_hand_tone4": 30, "writing_hand_tone5": 30, "w": [30, 38, 168, 172, 175, 197, 201, 207, 217, 220, 227, 248, 262, 303, 304, 323, 411, 546, 607, 803, 817, 863, 864, 898, 953, 993, 1006, 1051, 1053, 1084, 1088, 1093], "xk": 30, "yarn": 30, "yawning_fac": 30, "yellow_circl": 30, "yellow_heart": 30, "yellow_squar": 30, "yemen": 30, "yen": [30, 34], "yin_yang": 30, "yo_yo": 30, "yt": 30, "yum": 30, "za": [30, 272, 342], "zambia": 30, "zany_fac": 30, "zap": 30, "zebra": 30, "zimbabw": 30, "zipper_mouth": 30, "zipper_mouth_fac": 30, "zm": 30, "zombi": 30, "zw": 30, "zzz": 30, "sheet": [31, 63, 133, 172, 184, 306, 308, 309, 655, 818, 862, 863], "layout": [31, 128, 149, 218, 222, 387, 400, 1093], "emoji": 31, "sphinxemoji": 31, "mmlalia": 31, "mathml": 31, "alias": [31, 343, 819], "entiti": [31, 132, 351, 365, 392, 409, 429, 437, 544, 727, 916, 1072], "isoamsa": 31, "mathemat": [31, 224, 1005], "arrow": [31, 33, 34, 36, 71, 72, 818, 948], "isoamsr": 31, "relat": [31, 67, 120, 153, 164, 168, 189, 193, 248, 261, 355, 364, 371, 375, 377, 381, 384, 388, 397, 401, 406, 407, 414, 529, 629, 667, 684, 708, 709, 710, 711, 726, 735, 783, 861, 916, 926, 1056, 1093, 1094], "isonum": 31, "binari": [31, 40, 48, 52, 53, 56, 74, 85, 86, 128, 132, 138, 192, 193, 201, 205, 207, 208, 210, 215, 217, 220, 230, 310, 354, 387, 399, 567, 644, 736, 750, 758, 803, 932, 935, 948, 960, 987, 992, 1064, 1072, 1086], "sphinxish": 31, "taken": [32, 33, 34, 36, 38, 71, 72, 131, 135, 136, 143, 192, 389, 421, 486, 495, 542, 697, 761, 783, 793, 818, 932, 983, 1072, 1086], "standard": [32, 33, 34, 36, 104, 111, 124, 139, 160, 164, 169, 171, 173, 194, 201, 207, 216, 217, 220, 224, 235, 248, 250, 274, 293, 302, 303, 304, 305, 307, 323, 324, 325, 331, 332, 337, 338, 342, 387, 475, 494, 513, 527, 528, 572, 578, 582, 589, 590, 591, 592, 594, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 644, 649, 675, 677, 679, 680, 709, 711, 798, 801, 802, 818, 851, 865, 881, 887, 890, 903, 906, 930, 960, 979, 980, 996, 1072, 1084, 1089, 1103, 1109, 1110, 1112, 1113, 1114, 1115, 1119], "definit": [32, 33, 34, 36, 105, 128, 132, 134, 135, 137, 139, 152, 161, 164, 165, 170, 184, 191, 193, 257, 259, 275, 302, 323, 324, 325, 355, 364, 367, 370, 371, 377, 381, 384, 388, 394, 395, 396, 397, 399, 400, 401, 406, 407, 414, 416, 420, 428, 429, 451, 473, 513, 531, 532, 533, 538, 539, 545, 546, 548, 557, 560, 561, 583, 609, 618, 629, 639, 655, 667, 669, 682, 686, 690, 708, 710, 711, 736, 758, 819, 863, 864, 932, 951, 958, 964, 969, 980, 984, 997, 998, 1001, 1068, 1082, 1100, 1110, 1113], "includ": [32, 33, 34, 36, 42, 105, 124, 134, 139, 143, 147, 149, 160, 164, 171, 183, 184, 193, 194, 201, 205, 207, 208, 210, 217, 220, 224, 245, 259, 266, 275, 299, 310, 324, 325, 327, 331, 333, 335, 366, 367, 382, 387, 390, 392, 396, 403, 412, 413, 415, 416, 417, 419, 424, 427, 428, 429, 430, 431, 432, 434, 436, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 513, 519, 522, 529, 530, 531, 533, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 554, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 607, 611, 616, 617, 618, 619, 620, 621, 622, 623, 626, 627, 628, 630, 632, 634, 637, 638, 639, 640, 642, 644, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 669, 670, 671, 672, 674, 676, 677, 679, 681, 685, 686, 687, 688, 689, 690, 691, 694, 696, 699, 701, 702, 705, 706, 707, 709, 711, 717, 722, 727, 729, 736, 738, 740, 742, 744, 746, 750, 752, 754, 763, 768, 772, 775, 778, 795, 815, 818, 824, 851, 856, 858, 862, 878, 880, 881, 882, 884, 887, 888, 889, 890, 891, 894, 896, 899, 907, 911, 913, 916, 922, 925, 929, 932, 935, 944, 947, 948, 950, 952, 980, 981, 1006, 1007, 1082, 1089, 1095, 1100, 1102, 1105, 1115], "substitut": [32, 33, 34, 36, 104, 184, 220, 266, 299, 393, 409, 413, 644, 875, 1071], "angzarr": 32, "0237c": 32, "angl": [32, 34, 36, 1116], "WITH": [32, 33, 36, 881], "downward": [32, 33, 34, 36, 421], "zigzag": 32, "cirmid": 32, "02aef": 32, "vertic": [32, 33, 34, 36, 344], "circl": [32, 33, 36, 194, 505, 798], "abov": [32, 33, 36, 76, 111, 132, 134, 135, 136, 137, 139, 143, 147, 151, 170, 173, 184, 193, 201, 207, 217, 220, 224, 313, 360, 383, 393, 403, 429, 449, 451, 473, 476, 477, 486, 487, 512, 522, 539, 540, 544, 545, 564, 608, 670, 719, 752, 758, 768, 785, 786, 802, 830, 862, 863, 864, 888, 892, 918, 925, 948, 956, 987, 1001, 1075, 1081, 1093, 1100], "cudarrl": 32, "02938": 32, "side": [32, 152, 174, 248, 257, 339, 348, 389, 451, 483, 522, 546, 548, 549, 699, 738, 742, 797, 818, 866, 956, 989, 1035, 1061, 1063, 1075], "arc": 32, "clockwis": [32, 36], "cudarrr": 32, "02935": 32, "rightward": [32, 33, 34, 36], "THEN": 32, "curv": [32, 33], "cularr": 32, "021b6": [32, 36], "anticlockwis": [32, 36], "semicircl": [32, 36], "cularrp": 32, "0293d": 32, "plu": [32, 33, 34, 36, 63, 133, 139, 201, 207, 217, 220, 233, 360, 487, 513, 545, 547, 549, 758, 884], "curarr": 32, "021b7": [32, 36], "curarrm": 32, "0293c": 32, "minu": [32, 33, 34, 36, 212, 547, 690], "darr": [32, 34], "021a1": 32, "head": [32, 36, 38, 59, 133, 135, 138, 172, 174, 184, 238, 247, 256, 268, 269, 699, 711, 788, 844, 845, 848, 851, 854, 879, 880, 947, 1013], "021d3": [32, 36], "doubl": [32, 33, 34, 36, 194, 210, 214, 220, 310, 325, 343, 344, 345, 348, 367, 387, 396, 428, 434, 439, 441, 448, 457, 459, 460, 465, 466, 467, 468, 469, 470, 473, 481, 483, 485, 486, 487, 498, 529, 531, 537, 539, 540, 544, 548, 580, 607, 631, 634, 637, 640, 644, 649, 650, 651, 652, 665, 684, 685, 687, 690, 699, 758, 818, 862, 956, 976, 1000, 1080], "darr2": 32, "021ca": [32, 36], "pair": [32, 36, 99, 100, 147, 189, 199, 202, 205, 210, 214, 215, 220, 227, 229, 241, 242, 265, 271, 430, 434, 437, 487, 505, 583, 584, 585, 588, 630, 676, 677, 681, 711, 722, 727, 854, 866, 867, 868, 870, 950, 960, 1004, 1056, 1070, 1088], "ddarr": 32, "ddotrahd": 32, "02911": 32, "dot": [32, 33, 34, 36, 136, 403, 418, 423, 840, 934], "stem": [32, 727], "dfisht": 32, "0297f": 32, "down": [32, 33, 36, 131, 132, 135, 160, 237, 275, 308, 329, 370, 415, 416, 427, 434, 476, 483, 484, 485, 486, 505, 547, 580, 605, 627, 644, 669, 686, 711, 726, 727, 758, 804, 850, 857, 864, 932, 935, 1100, 1105], "tail": [32, 36, 133, 172, 174, 184, 238, 247, 268, 269, 699, 711, 746, 788, 845, 848, 851, 854, 1084], "dhar": 32, "02965": 32, "harpoon": [32, 36], "barb": [32, 36], "left": [32, 33, 34, 36, 61, 82, 108, 109, 131, 132, 134, 152, 183, 194, 220, 266, 346, 347, 354, 360, 432, 476, 483, 529, 532, 536, 544, 545, 602, 609, 635, 800, 801, 818, 862, 871, 890, 932, 960, 964, 975, 976, 987, 1001, 1055, 1061, 1082], "besid": [32, 33, 36, 147], "dharl": 32, "021c3": [32, 36], "leftward": [32, 33, 34, 36], "dharr": 32, "021c2": [32, 36], "dlarr": 32, "02199": [32, 36], "south": [32, 36], "west": [32, 36, 141], "drarr": 32, "02198": [32, 36], "east": [32, 36], "duarr": 32, "021f5": [32, 36], "OF": [32, 33, 36, 135, 677], "upward": [32, 34, 36], "duhar": 32, "0296f": [32, 36], "dzigrarr": 32, "027ff": 32, "long": [32, 33, 36, 51, 131, 132, 133, 134, 135, 139, 142, 160, 164, 172, 184, 201, 205, 207, 210, 217, 220, 228, 256, 302, 320, 331, 341, 343, 344, 348, 352, 353, 380, 387, 389, 398, 402, 404, 405, 424, 429, 486, 531, 532, 537, 542, 607, 677, 686, 696, 717, 729, 738, 740, 756, 758, 763, 768, 772, 797, 818, 840, 864, 875, 881, 884, 914, 922, 951, 958, 998, 1008, 1056, 1063, 1077, 1084, 1113], "squiggl": 32, "erarr": 32, "02971": 32, "equal": [32, 33, 34, 36, 134, 156, 168, 184, 191, 194, 220, 224, 256, 257, 266, 278, 325, 331, 347, 354, 359, 370, 395, 398, 475, 481, 488, 492, 527, 572, 591, 595, 622, 624, 690, 711, 793, 797, 851, 875, 914, 918, 919, 987, 1041, 1100], "sign": [32, 33, 34, 36, 135, 142, 147, 210, 341, 343, 351, 395, 409, 433, 607, 670, 731, 987, 1001, 1061, 1110, 1111], "harr": 32, "021d4": [32, 36], "02194": [32, 36], "harrcir": 32, "02948": 32, "small": [32, 36, 41, 104, 131, 133, 134, 164, 184, 188, 244, 323, 395, 399, 432, 484, 529, 641, 686, 855, 856, 862, 894, 926, 979, 1002, 1071, 1100], "harrw": 32, "021ad": [32, 36], "hoarr": 32, "021ff": 32, "imof": 32, "022b7": 32, "imag": [32, 33, 36, 126, 128, 131, 132, 133, 134, 142, 155, 217, 220, 224, 242, 302, 308, 405, 411, 418, 537, 736, 758, 855, 1058, 1063], "laarr": 32, "021da": [32, 36], "tripl": [32, 33, 36, 57, 60], "larr": [32, 34], "0219e": [32, 36], "larr2": 32, "021c7": [32, 36], "larrbf": 32, "0291f": 32, "bar": [32, 33, 34, 36, 138, 159, 179, 202, 215, 220, 229, 232, 262, 265, 266, 271, 311, 411, 476, 691, 954, 996, 1056], "TO": [32, 33, 36, 1011], "black": [32, 36, 137, 188, 196, 208, 211, 583, 944], "larrf": 32, "0291d": 32, "larrhk": 32, "021a9": [32, 36], "larrlp": 32, "021ab": [32, 36], "larrpl": 32, "02939": 32, "larrsim": 32, "02973": 32, "tild": [32, 33, 36], "larrtl": 32, "021a2": [32, 36], "latail": 32, "0291b": 32, "02919": 32, "lbarr": 32, "0290e": 32, "0290c": 32, "ldca": 32, "02936": 32, "ldrdhar": 32, "02967": 32, "ldrushar": 32, "0294b": 32, "ldsh": 32, "021b2": 32, "tip": [32, 36, 189, 199, 202, 205, 229, 241, 265, 271, 1056], "lfisht": 32, "0297c": 32, "lhar": 32, "02962": 32, "lhard": 32, "021bd": [32, 36], "lharu": 32, "021bc": [32, 36], "lharul": 32, "0296a": 32, "llarr": 32, "llhard": 32, "0296b": 32, "below": [32, 33, 36, 128, 132, 133, 134, 137, 139, 143, 152, 164, 173, 191, 224, 237, 334, 336, 403, 410, 421, 454, 468, 476, 477, 483, 486, 621, 623, 637, 649, 669, 670, 686, 690, 699, 701, 706, 707, 709, 731, 752, 793, 797, 801, 818, 855, 864, 885, 929, 932, 1100], "loarr": 32, "021fd": 32, "lrarr": 32, "021c6": [32, 36], "lrarr2": 32, "lrhar": 32, "021cb": [32, 36], "lrhar2": 32, "lrhard": 32, "0296d": 32, "lsh": [32, 36], "021b0": [32, 36], "lurdshar": 32, "0294a": 32, "luruhar": 32, "02966": 32, "02905": 32, "021a6": [32, 36], "midcir": 32, "02af0": 32, "mumap": 32, "022b8": [32, 36], "multimap": [32, 36, 257, 505, 582, 591, 595, 624, 711], "nearhk": 32, "02924": 32, "north": [32, 36], "nearr": 32, "021d7": 32, "02197": [32, 36], "nesear": 32, "02928": [32, 36], "AND": [32, 33, 36, 331, 347, 370, 533, 846, 975], "nharr": 32, "021ce": [32, 36], "stroke": [32, 36], "021ae": [32, 36], "nlarr": 32, "021cd": [32, 36], "0219a": [32, 36], "nrarr": 32, "021cf": [32, 36], "0219b": [32, 36], "nrarrc": 32, "02933": 32, "00338": [32, 36], "directli": [32, 38, 128, 147, 233, 258, 288, 427, 544, 613, 729, 742, 754, 761, 772, 864, 874, 878, 932, 955, 975, 983, 1046, 1048, 1078], "slash": [32, 36, 842, 926], "nrarrw": 32, "0219d": [32, 36], "nvharr": 32, "02904": 32, "nvlarr": 32, "02902": 32, "nvrarr": 32, "02903": 32, "nwarhk": 32, "02923": 32, "nwarr": 32, "021d6": 32, "02196": [32, 36], "nwnear": 32, "02927": 32, "olarr": 32, "021ba": [32, 36], "orarr": 32, "021bb": [32, 36], "origof": 32, "022b6": 32, "origin": [32, 33, 36, 59, 61, 114, 129, 135, 137, 142, 147, 153, 165, 197, 201, 207, 210, 212, 217, 220, 245, 256, 261, 265, 266, 268, 269, 271, 275, 280, 284, 369, 385, 429, 432, 483, 530, 538, 539, 540, 568, 619, 620, 622, 623, 681, 685, 688, 690, 701, 731, 758, 759, 782, 785, 786, 801, 815, 953, 1058, 1072, 1095], "raarr": 32, "021db": [32, 36], "rarr": [32, 34], "021a0": [32, 36], "rarr2": 32, "021c9": [32, 36], "rarrap": 32, "02975": 32, "almost": [32, 33, 36, 57, 60, 134, 147, 156, 193, 348, 396, 398, 419, 534, 599, 627, 675, 691, 926], "rarrbf": 32, "02920": 32, "rarrc": 32, "rarrf": 32, "0291e": 32, "rarrhk": 32, "021aa": [32, 36], "rarrlp": 32, "021ac": [32, 36], "rarrpl": 32, "02945": 32, "rarrsim": 32, "02974": 32, "rarrtl": 32, "02916": 32, "021a3": [32, 36], "rarrw": 32, "ratail": 32, "0291c": 32, "0291a": 32, "rbarr": 32, "02910": [32, 36], "0290f": [32, 36], "0290d": [32, 36], "rdca": 32, "02937": 32, "rdldhar": 32, "02969": 32, "rdsh": 32, "021b3": 32, "rfisht": 32, "0297d": 32, "rhar": 32, "02964": 32, "rhard": 32, "021c1": [32, 36], "rharu": 32, "021c0": [32, 36], "rharul": 32, "0296c": 32, "rlarr": 32, "021c4": [32, 36], "rlarr2": 32, "rlhar": 32, "021cc": [32, 36], "rlhar2": 32, "roarr": 32, "021fe": 32, "rrarr": 32, "rsh": [32, 36, 545, 865], "021b1": [32, 36], "ruluhar": 32, "02968": 32, "searhk": 32, "02925": [32, 36], "searr": 32, "021d8": 32, "seswar": 32, "02929": [32, 36], "simrarr": 32, "02972": 32, "slarr": 32, "02190": [32, 34, 36], "srarr": 32, "02192": [32, 34, 36], "swarhk": 32, "02926": [32, 36], "swarr": 32, "021d9": 32, "swnwar": 32, "0292a": 32, "uarr": [32, 34], "0219f": 32, "021d1": [32, 36], "uarr2": 32, "021c8": [32, 36], "uarrocir": 32, "02949": 32, "udarr": 32, "021c5": [32, 36], "udhar": 32, "0296e": [32, 36], "ufisht": 32, "0297e": 32, "uhar": 32, "02963": 32, "uharl": 32, "021bf": [32, 36], "uharr": 32, "021be": [32, 36], "uuarr": 32, "varr": 32, "021d5": [32, 36], "02195": [32, 36], "xharr": 32, "027fa": [32, 36], "027f7": [32, 36], "xlarr": 32, "027f8": [32, 36], "027f5": [32, 36], "xmap": 32, "027fc": [32, 36], "xrarr": 32, "027f9": [32, 36], "027f6": [32, 36], "zigrarr": 32, "021dd": 32, "ap": [33, 888], "02a70": 33, "approxim": [33, 36, 134, 230], "OR": [33, 36, 207, 331, 347, 370, 387, 846, 975], "0224a": [33, 36], "apid": 33, "0224b": 33, "asymp": 33, "02248": [33, 36], "barv": 33, "02ae7": 33, "tack": [33, 36], "overbar": 33, "bcong": 33, "0224c": [33, 36], "bepsi": 33, "003f6": [33, 36], "greek": [33, 36], "revers": [33, 34, 36, 177, 204, 210, 227, 245, 252, 257, 266, 272, 328, 505, 512, 513, 572, 576, 591, 595, 624, 669, 711, 713, 752, 791, 855, 916, 1003, 1036], "lunat": [33, 36], "epsilon": [33, 36], "bowti": 33, "022c8": 33, "bsim": 33, "0223d": [33, 36], "bsime": 33, "022cd": [33, 36], "bsolhsub": 33, "0005c": [33, 34], "02282": [33, 36], "solidu": [33, 34], "subset": [33, 36, 220, 935, 948, 1005], "bump": 33, "0224e": [33, 36], "geometr": [33, 36, 224], "equival": [33, 36, 76, 90, 104, 107, 220, 356, 360, 375, 380, 541, 618, 782, 784, 819, 851, 884, 964, 986, 996, 1006], "02aae": 33, "bumpi": 33, "0224f": [33, 36], "between": [33, 36, 67, 87, 101, 132, 133, 134, 136, 142, 143, 153, 168, 180, 193, 201, 204, 207, 212, 214, 217, 220, 224, 227, 242, 245, 252, 266, 271, 288, 298, 332, 335, 348, 370, 375, 382, 395, 400, 409, 420, 441, 451, 473, 481, 545, 562, 621, 677, 687, 691, 702, 712, 713, 717, 763, 789, 790, 795, 855, 862, 892, 902, 916, 917, 918, 919, 926, 930, 964, 975, 985, 987, 998, 1062, 1118], "cire": 33, "02257": [33, 36], "colon": [33, 34, 36, 1034], "02237": [33, 36], "proport": [33, 36, 133], "02a74": 33, "02254": [33, 36], "congdot": 33, "02a6d": 33, "congruent": [33, 36], "csub": 33, "02acf": 33, "close": [33, 52, 137, 143, 152, 164, 182, 191, 192, 205, 212, 236, 237, 239, 262, 266, 283, 375, 409, 414, 487, 505, 655, 683, 692, 700, 710, 711, 801, 862, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 894, 896, 899, 925, 929, 953, 1064, 1068, 1086, 1126], "csube": 33, "02ad1": 33, "csup": 33, "02ad0": 33, "superset": [33, 36, 1005, 1112], "csupe": 33, "02ad2": 33, "cuepr": 33, "022de": [33, 36], "cuesc": 33, "022df": [33, 36], "succe": [33, 36, 736, 837, 866, 955], "cupr": 33, "0227c": [33, 36], "dashv": 33, "02ae4": [33, 36], "turnstil": [33, 36], "022a3": [33, 36], "easter": [33, 184], "02a6e": 33, "asterisk": [33, 34, 36], "ecir": 33, "02256": [33, 36], "IN": [33, 36, 136], "ecolon": 33, "02255": [33, 36], "eddot": 33, "02a77": [33, 36], "edot": 33, "02251": [33, 36], "efdot": 33, "02252": [33, 36], "THE": [33, 36, 881], "02a9a": 33, "greater": [33, 34, 36, 104, 111, 259, 347, 475, 481, 489, 492, 527, 669, 711, 744, 987], "than": [33, 34, 36, 41, 63, 66, 104, 111, 112, 128, 132, 133, 137, 139, 142, 143, 147, 164, 168, 171, 175, 184, 191, 194, 201, 207, 212, 214, 217, 220, 224, 251, 254, 259, 288, 347, 348, 367, 369, 398, 399, 400, 411, 412, 414, 420, 427, 475, 483, 489, 492, 527, 531, 543, 546, 548, 549, 614, 627, 638, 664, 677, 701, 711, 714, 729, 744, 750, 754, 758, 818, 843, 847, 855, 863, 873, 874, 881, 884, 901, 929, 933, 948, 949, 964, 969, 986, 987, 1031, 1035, 1068, 1075, 1078, 1095, 1113], "02a96": [33, 36], "slant": [33, 36], "egsdot": 33, "02a98": 33, "el": [33, 180, 191, 227], "02a99": 33, "less": [33, 34, 36, 57, 60, 76, 128, 132, 133, 134, 139, 143, 193, 207, 224, 238, 247, 248, 254, 268, 269, 325, 347, 348, 352, 395, 398, 429, 481, 585, 605, 631, 677, 679, 701, 711, 729, 731, 758, 788, 802, 818, 845, 848, 849, 851, 854, 884, 969, 987, 1006, 1088, 1089, 1102, 1113, 1119], "02a95": [33, 36], "elsdot": 33, "02a97": 33, "equest": 33, "0225f": [33, 36], "equivdd": 33, "02a78": 33, "erdot": 33, "02253": [33, 36], "esdot": 33, "02250": [33, 36], "limit": [33, 36, 61, 132, 133, 149, 171, 201, 207, 217, 220, 266, 348, 390, 583, 627, 758, 795, 900, 919, 961, 962, 987, 1060, 1085], "esim": 33, "02a73": 33, "02242": [33, 36], "fork": [33, 41, 112, 134, 149, 153, 711, 717, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854, 887, 900, 908, 926, 1126], "022d4": [33, 36], "pitchfork": [33, 36], "forkv": 33, "02ad9": 33, "02322": 33, "gap": 33, "02a86": [33, 36], "02267": [33, 36], "gel": 33, "02a8c": [33, 36], "022db": [33, 36], "02a7e": [33, 36], "gescc": 33, "02aa9": 33, "gesdot": 33, "02a80": 33, "gesdoto": 33, "02a82": 33, "gesdotol": 33, "02a84": 33, "gesl": 33, "0fe00": [33, 36], "02a94": 33, "022d9": [33, 36], "02277": [33, 36], "gla": 33, "02aa5": 33, "gle": 33, "02a92": 33, "glj": 33, "02aa4": 33, "overlap": [33, 220, 224, 266, 742, 967], "gsdot": 33, "022d7": [33, 36], "gsim": 33, "02273": [33, 36], "gsime": 33, "02a8e": 33, "similar": [33, 57, 60, 132, 134, 164, 168, 172, 174, 205, 218, 232, 350, 357, 428, 455, 484, 485, 516, 528, 537, 655, 690, 691, 706, 707, 729, 744, 758, 802, 948, 950, 1056], "gsiml": 33, "02a90": 33, "0226b": [33, 36], "gtcc": 33, "02aa7": 33, "gtcir": 33, "02a7a": 33, "gtdot": 33, "gtquest": 33, "02a7c": 33, "mark": [33, 34, 36, 191, 232, 303, 304, 344, 366, 666, 674, 774, 964, 966, 1088], "gtrarr": 33, "02978": 33, "homtht": 33, "0223b": 33, "homothet": 33, "lap": 33, "02a85": [33, 36], "lat": 33, "02aab": 33, "larger": [33, 66, 76, 164, 171, 194, 211, 224, 274, 396, 399, 411, 449, 529, 546, 548, 729, 778, 800, 862, 864, 929, 949, 962, 1115], "late": [33, 132, 134, 257, 259, 690, 691, 864, 920, 964, 981, 998, 1116], "02aad": 33, "ldot": 33, "022d6": [33, 36], "le": [33, 449], "02266": [33, 36], "02a8b": [33, 36], "022da": [33, 36], "02a7d": [33, 36], "lescc": 33, "02aa8": 33, "lesdot": 33, "02a7f": 33, "lesdoto": 33, "02a81": 33, "lesdotor": 33, "02a83": 33, "lesg": 33, "02a93": 33, "lg": [33, 272, 1072], "02276": [33, 36], "lge": 33, "02a91": 33, "ll": [33, 36, 57, 60, 111, 131, 132, 133, 135, 137, 139, 142, 147, 148, 160, 162, 172, 174, 188, 217, 220, 248, 251, 254, 470, 484, 546, 548, 549, 758, 784, 855, 864, 875, 890, 937, 940, 946, 979, 1075], "022d8": 33, "lsim": 33, "02272": [33, 36], "lsime": 33, "02a8d": 33, "lsimg": 33, "02a8f": 33, "0226a": [33, 36], "ltcc": 33, "02aa6": 33, "ltcir": 33, "02a79": 33, "ltdot": 33, "ltlarr": 33, "02976": 33, "ltquest": 33, "02a7b": 33, "ltrie": 33, "022b4": [33, 36], "normal": [33, 36, 86, 120, 132, 134, 139, 147, 150, 155, 164, 224, 387, 414, 419, 424, 543, 545, 774, 790, 795, 916, 930, 983, 1062, 1078, 1093, 1105], "mcomma": 33, "02a29": 33, "comma": [33, 34, 170, 183, 204, 1067], "mddot": 33, "0223a": 33, "mid": 33, "02223": [33, 36], "mlcp": 33, "02adb": 33, "transvers": 33, "intersect": [33, 36, 188, 212, 1005], "model": [33, 112, 235, 250, 256, 259, 386, 987, 1059, 1062, 1084], "022a7": 33, "mstpo": 33, "0223e": 33, "invert": [33, 34, 61, 164, 898], "lazi": [33, 201, 207, 217, 220, 339, 686], "02abb": 33, "0227a": [33, 36], "prap": 33, "02ab7": [33, 36], "prcue": 33, "pre": [33, 134, 164, 193, 349, 531, 533, 537, 583, 584, 585, 635, 676, 677, 818, 980, 995, 1071], "02ab3": 33, "02aaf": [33, 36], "singl": [33, 34, 36, 42, 57, 60, 61, 82, 104, 108, 109, 111, 114, 132, 134, 152, 191, 192, 201, 205, 207, 213, 214, 217, 220, 224, 248, 325, 331, 343, 344, 356, 402, 405, 409, 411, 414, 440, 453, 538, 592, 666, 677, 685, 687, 698, 717, 727, 729, 791, 793, 794, 795, 818, 823, 824, 825, 827, 843, 855, 863, 867, 903, 914, 916, 917, 926, 929, 933, 935, 938, 944, 948, 949, 950, 963, 1000, 1001, 1008, 1023, 1029, 1062, 1072, 1080, 1083, 1086, 1088, 1093, 1094, 1101], "prsim": 33, "0227e": [33, 36], "prurel": 33, "022b0": 33, "ratio": [33, 224], "02236": 33, "rtrie": 33, "022b5": [33, 36], "AS": [33, 36, 881], "rtriltri": 33, "029ce": 33, "triangl": [33, 36, 505], "samalg": 33, "02210": [33, 36], "coproduct": [33, 36], "02abc": 33, "0227b": [33, 36], "scap": 33, "02ab8": [33, 36], "sccue": 33, "0227d": [33, 36], "sce": 33, "02ab4": 33, "02ab0": [33, 36], "scsim": 33, "0227f": [33, 36], "sdote": 33, "02a66": 33, "sfrown": 33, "simg": 33, "02a9e": 33, "02aa0": 33, "siml": 33, "02a9d": 33, "02a9f": 33, "smid": 33, "02323": 33, "smt": 33, "02aaa": 33, "smaller": [33, 210, 224, 325, 387, 396, 411, 950], "smte": 33, "02aac": 33, "spar": [33, 250, 411], "02225": [33, 36], "parallel": [33, 36, 57, 60, 70, 71, 72, 76, 89, 138, 161, 164, 168, 170, 205, 260, 261, 279, 419, 699, 711, 748, 750, 758, 761, 794, 802, 903, 914, 917, 964, 966, 967, 1051, 1056, 1117, 1118, 1125, 1129], "sqsub": 33, "0228f": [33, 36], "squar": [33, 34, 36, 61, 152, 165, 175, 191, 197, 204, 207, 212, 214, 220, 224, 233, 245, 259, 266, 437, 548, 958, 1007, 1010, 1080], "sqsube": 33, "02291": [33, 36], "sqsup": 33, "02290": [33, 36], "sqsupe": 33, "02292": [33, 36], "ssmile": 33, "sub": [33, 208, 220, 266, 432, 449, 529, 954, 993, 1002, 1008, 1102], "022d0": [33, 36], "sube": 33, "02ac5": [33, 36], "subedot": 33, "02ac3": 33, "submult": 33, "02ac1": 33, "subplu": 33, "02abf": 33, "subrarr": 33, "02979": 33, "subsim": 33, "02ac7": 33, "subsub": 33, "02ad5": 33, "subsup": 33, "02ad3": 33, "sup": [33, 888], "022d1": [33, 36], "supdsub": 33, "02ad8": 33, "supe": 33, "02ac6": [33, 36], "supedot": 33, "02ac4": 33, "suphsol": 33, "02283": [33, 36], "0002f": [33, 34], "suphsub": 33, "02ad7": 33, "suplarr": 33, "0297b": 33, "supmult": 33, "02ac2": 33, "supplu": 33, "02ac0": 33, "supsim": 33, "02ac8": 33, "supsub": 33, "02ad4": 33, "supsup": 33, "02ad6": 33, "thkap": 33, "thksim": 33, "0223c": [33, 36], "topfork": 33, "02ada": 33, "tee": [33, 802], "trie": 33, "0225c": [33, 36], "delta": [33, 36, 147, 197], "twixt": 33, "0226c": [33, 36], "vbar": 33, "02aeb": 33, "02ae8": 33, "underbar": 33, "vbarv": 33, "02ae9": 33, "vdash": 33, "022ab": 33, "022a9": 33, "forc": [33, 131, 133, 137, 160, 220, 320, 394, 409, 437, 533, 793, 871, 900, 934, 1055, 1113], "022a8": [33, 36], "022a2": [33, 36], "vdashl": 33, "02ae6": 33, "veebar": 33, "022bb": 33, "xor": [33, 975], "vltri": 33, "022b2": [33, 36], "vprop": 33, "0221d": [33, 36], "vrtri": 33, "022b3": [33, 36], "vvdash": 33, "022aa": 33, "\u00bd": 34, "\u00bc": 34, "\u215b": 34, "\u00be": 34, "\u215c": 34, "\u215d": 34, "\u215e": 34, "_": [34, 37, 61, 152, 153, 188, 201, 204, 205, 207, 214, 217, 220, 227, 230, 242, 266, 294, 342, 411, 541, 664, 748, 818, 920, 946, 964, 966], "\u00b5": 34, "\u03c9": 34, "\u00aa": 34, "\u00ba": 34, "\u00b9": 34, "\u00b2": 34, "\u00b3": 34, "amp": [34, 204], "00026": 34, "ampersand": [34, 640], "apo": 34, "00027": 34, "apostroph": 34, "ast": [34, 449], "0002a": 34, "brvbar": 34, "000a6": 34, "broken": [34, 385, 386, 655, 750, 763, 968, 1034, 1067], "bsol": 34, "cent": 34, "000a2": 34, "0003a": 34, "0002c": 34, "commat": 34, "00040": 34, "commerci": [34, 139, 736, 797], "AT": 34, "000a9": 34, "curren": 34, "000a4": 34, "currenc": [34, 250, 411], "02193": [34, 36], "deg": 34, "000b0": 34, "degre": [34, 428, 439, 470, 581, 864, 981], "000f7": [34, 36], "00024": 34, "0003d": 34, "excl": 34, "00021": 34, "frac12": 34, "000bd": 34, "vulgar": 34, "fraction": [34, 224, 288], "ONE": [34, 628], "frac14": 34, "000bc": 34, "quarter": 34, "frac18": 34, "0215b": 34, "eighth": 34, "frac34": 34, "000be": 34, "frac38": 34, "0215c": 34, "frac58": 34, "0215d": 34, "frac78": 34, "0215e": 34, "0003e": 34, "horbar": 34, "02015": 34, "horizont": [34, 344], "hyphen": 34, "02010": 34, "iexcl": 34, "000a1": 34, "iquest": 34, "000bf": 34, "laquo": 34, "000ab": 34, "quotat": [34, 36], "lcub": 34, "0007b": [34, 36], "curli": [34, 36], "bracket": [34, 36, 984], "ldquo": 34, "0201c": [34, 36], "lowbar": 34, "0005f": 34, "low": [34, 128, 175, 204, 224, 241, 337, 369, 405, 409, 414, 437, 460, 473, 476, 477, 481, 685, 687, 740, 754, 794, 862, 918, 934, 1013, 1115], "lpar": 34, "00028": 34, "parenthesi": 34, "lsqb": 34, "0005b": [34, 36], "lsquo": 34, "02018": [34, 36], "0003c": 34, "micro": [34, 201, 207, 217, 220], "000b5": 34, "middot": 34, "000b7": [34, 36], "middl": [34, 36, 37, 61, 142, 153, 208, 224, 276, 389, 409, 476, 505, 736, 855, 865, 871, 932, 966], "nbsp": 34, "000a0": [34, 36], "NO": [34, 36, 143, 184, 299, 608, 864, 929], "space": [34, 36, 61, 76, 97, 108, 109, 111, 128, 132, 133, 134, 139, 152, 155, 179, 193, 220, 238, 245, 247, 248, 266, 268, 269, 293, 304, 305, 313, 332, 351, 353, 372, 433, 438, 447, 451, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 536, 545, 580, 700, 710, 711, 719, 756, 771, 785, 786, 787, 788, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854, 863, 866, 867, 868, 869, 870, 877, 881, 882, 883, 884, 885, 893, 895, 900, 908, 909, 911, 912, 915, 917, 925, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 964, 967, 1001], "000ac": 34, "NOT": [34, 36, 162, 331, 370, 415, 454, 455, 468, 469, 729, 846, 1078], "num": [34, 137, 151, 152, 165, 175, 191, 205, 207, 212, 214, 220, 224, 242, 245, 375, 560, 562, 644, 645, 646, 647, 656, 676, 846, 851, 959, 1067], "00023": 34, "ohm": 34, "02126": 34, "ordf": 34, "000aa": 34, "feminin": 34, "ordin": [34, 220, 227, 230, 266, 272, 1072], "indic": [34, 183, 201, 207, 212, 217, 220, 256, 583, 719], "ordm": 34, "000ba": 34, "masculin": 34, "para": 34, "000b6": 34, "pilcrow": 34, "percnt": 34, "00025": 34, "percent": [34, 224], "period": [34, 82, 149, 172, 403, 536, 702, 768, 855, 863, 882, 892, 914, 916, 929, 1088], "0002e": 34, "full": [34, 150, 195, 199, 245, 348, 363, 391, 396, 499, 510, 545, 649, 686, 699, 797, 802, 863, 905, 911, 956, 975, 1008, 1067, 1075], "stop": [34, 126, 137, 193, 220, 257, 259, 261, 266, 287, 414, 454, 468, 752, 855, 930, 955, 1081, 1100], "0002b": 34, "plusmn": 34, "000b1": [34, 36], "000a3": 34, "quest": 34, "0003f": 34, "quot": [34, 152, 200, 203, 207, 214, 220, 228, 344, 783, 846, 847, 865, 1000], "00022": 34, "raquo": 34, "000bb": 34, "rcub": 34, "0007d": [34, 36], "rdquo": 34, "0201d": [34, 36], "reg": 34, "000ae": [34, 36], "rpar": 34, "00029": 34, "rsqb": 34, "0005d": [34, 36], "rsquo": 34, "02019": [34, 36], "sect": 34, "000a7": 34, "section": [34, 36, 86, 132, 136, 137, 138, 147, 156, 169, 193, 218, 251, 254, 257, 320, 513, 531, 613, 698, 748, 750, 818, 861, 862, 878, 932, 933, 934, 936, 942, 948, 949, 950, 1093], "semi": [34, 252, 441, 685, 900, 951], "0003b": 34, "semicolon": [34, 414, 1067], "shy": 34, "000ad": 34, "soft": [34, 129, 309, 756], "sol": 34, "sung": 34, "0266a": 34, "sup1": 34, "000b9": 34, "superscript": 34, "sup2": 34, "000b2": 34, "sup3": 34, "000b3": 34, "000d7": 34, "trade": 34, "02122": 34, "02191": [34, 36], "verbar": 34, "0007c": [34, 36], "000a5": 34, "lorem": 35, "ipsum": 35, "h\u00f6dlmoser": 35, "anywai": [35, 41, 51, 59, 131, 133, 134, 143, 162, 164, 184, 193, 194, 220, 351, 399, 405, 409, 415, 531, 537, 546, 548, 549, 627, 635, 638, 642, 676, 677, 687, 750, 758, 797, 818, 908, 964, 1078, 1093], "hmm": [35, 129, 138, 151, 162, 516, 649, 929], "annoi": [35, 41, 288, 411, 627, 1093], "thing": [35, 38, 40, 41, 47, 98, 125, 131, 132, 134, 135, 136, 137, 138, 139, 143, 152, 156, 160, 163, 164, 168, 172, 184, 201, 207, 208, 210, 217, 220, 230, 291, 349, 365, 369, 393, 399, 402, 409, 433, 437, 505, 512, 513, 529, 531, 538, 543, 545, 567, 627, 649, 666, 690, 699, 709, 717, 722, 754, 758, 783, 797, 802, 851, 855, 856, 883, 888, 911, 916, 932, 944, 948, 949, 955, 969, 983, 1006, 1100, 1118], "thin": [35, 36], "border": 35, "anfrag": [35, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "dauer": [35, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "tage": [35, 157, 159, 167, 319, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1124, 1126, 1127, 1129, 1130, 1131], "sysprog": [35, 128, 129, 248, 321, 711, 765, 770, 854, 895, 896, 899, 1126, 1127, 1129, 1130], "catcher": 35, "somehow": [35, 40, 116, 133, 543, 766, 1088, 1089], "einf\u00fchrungskur": [35, 1109, 1126, 1127, 1129, 1130], "richtet": [35, 1111, 1126], "programmier": [35, 319, 320, 1111, 1112, 1117, 1119, 1120, 1125, 1126], "kennen": [35, 303, 1126], "lernen": [35, 1126], "zusammenh\u00e4ng": [35, 1126], "grundpfeil": [35, 1126], "erkl\u00e4rt": [35, 152, 155, 159, 1110, 1126, 1130, 1131], "gro\u00dfe": [35, 165, 1126], "bild": [35, 155, 1126], "orientieren": [35, 1126], "zurechtfinden": [35, 303, 1126], "somedai": 35, "better": [35, 55, 59, 63, 126, 128, 129, 133, 137, 143, 144, 154, 164, 165, 167, 168, 170, 171, 172, 175, 176, 189, 193, 199, 201, 202, 204, 205, 210, 211, 212, 214, 215, 218, 221, 224, 229, 233, 241, 248, 261, 265, 271, 328, 340, 348, 355, 364, 369, 370, 371, 377, 381, 384, 388, 389, 397, 399, 401, 406, 407, 410, 414, 419, 420, 425, 427, 505, 532, 540, 554, 567, 584, 607, 619, 622, 627, 629, 667, 679, 690, 708, 710, 711, 758, 837, 863, 864, 884, 900, 903, 929, 930, 958, 969, 987, 1001, 1013, 1052, 1053, 1056, 1061, 1063, 1071, 1077, 1093, 1102], "yet": [35, 76, 122, 128, 132, 139, 142, 152, 154, 221, 222, 232, 245, 366, 399, 427, 436, 449, 451, 486, 487, 499, 505, 598, 701, 758, 775, 785, 786, 863, 871, 875, 929, 956, 986, 1013, 1083, 1093, 1102], "redefin": 35, "wrap": [35, 61, 191, 229, 448, 687, 693, 758, 1084], "look": [35, 40, 41, 43, 57, 60, 63, 80, 87, 100, 111, 125, 126, 131, 132, 133, 134, 135, 137, 139, 142, 147, 152, 160, 164, 168, 171, 183, 189, 193, 218, 248, 251, 254, 257, 258, 276, 287, 320, 383, 391, 399, 405, 409, 411, 414, 415, 422, 470, 485, 486, 499, 516, 542, 554, 566, 618, 631, 655, 687, 693, 694, 712, 717, 727, 754, 758, 785, 786, 790, 794, 797, 808, 810, 815, 822, 830, 845, 856, 862, 863, 871, 888, 898, 925, 926, 949, 953, 963, 980, 983, 1021, 1025, 1034, 1056, 1063, 1067, 1078, 1095, 1113, 1116], "mdbootstrap": 35, "jqueri": 35, "icon": 35, "longrightarrow": 36, "rightarrow": 36, "doubleleftrightarrow": 36, "02220": 36, "applyfunct": 36, "02061": 36, "applic": [36, 61, 76, 92, 117, 132, 137, 149, 162, 184, 299, 320, 395, 398, 405, 486, 563, 566, 634, 675, 796, 856, 863, 875, 900, 1063], "approx": [36, 1044, 1093], "approxeq": 36, "assign": [36, 95, 152, 153, 154, 159, 165, 175, 182, 190, 201, 204, 207, 210, 212, 216, 217, 222, 224, 228, 252, 256, 257, 259, 302, 308, 309, 331, 348, 354, 355, 364, 371, 377, 378, 381, 384, 388, 393, 395, 397, 401, 406, 407, 441, 448, 454, 455, 463, 468, 469, 531, 532, 535, 542, 598, 607, 614, 624, 628, 629, 631, 635, 642, 665, 667, 672, 681, 687, 707, 708, 710, 711, 862, 864, 903, 914, 917, 919, 996, 1007, 1081, 1083], "backcong": 36, "backepsilon": 36, "backprim": 36, "02035": 36, "backsim": 36, "backsimeq": 36, "backslash": [36, 344, 842, 1000], "02216": 36, "barwedg": 36, "02305": 36, "02235": 36, "bernoulli": 36, "0212c": 36, "bigcap": 36, "022c2": 36, "bigcirc": 36, "025ef": 36, "bigcup": 36, "022c3": 36, "union": [36, 188, 196, 212, 387, 704, 1005, 1114], "bigodot": 36, "02a00": 36, "bigoplu": 36, "02a01": 36, "bigotim": 36, "02a02": 36, "bigsqcup": 36, "02a06": 36, "bigstar": 36, "02605": 36, "bigtriangledown": 36, "025bd": 36, "white": [36, 256, 333], "bigtriangleup": 36, "025b3": 36, "biguplu": 36, "02a04": 36, "bigve": 36, "022c1": 36, "logic": [36, 134, 291, 339, 355, 364, 369, 371, 377, 381, 384, 388, 393, 397, 401, 406, 407, 434, 451, 629, 667, 708, 710, 711, 1078], "bigwedg": 36, "022c0": 36, "bkarow": 36, "blacklozeng": 36, "029eb": 36, "lozeng": 36, "blacksquar": 36, "025aa": 36, "blacktriangl": 36, "025b4": 36, "blacktriangledown": 36, "025be": 36, "blacktriangleleft": 36, "025c2": 36, "blacktriangleright": 36, "025b8": 36, "bot": [36, 1093], "022a5": 36, "boxminu": 36, "0229f": 36, "boxplu": 36, "0229e": 36, "boxtim": 36, "022a0": 36, "breve": 36, "002d8": 36, "bullet": [36, 134, 1063], "02022": 36, "bumpeq": 36, "capitaldifferentiald": 36, "02145": 36, "struck": 36, "ital": 36, "d": [36, 83, 95, 105, 111, 132, 133, 134, 135, 151, 154, 162, 165, 170, 175, 180, 182, 188, 191, 194, 197, 198, 202, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 248, 252, 261, 262, 265, 266, 272, 294, 296, 297, 302, 325, 332, 333, 335, 339, 366, 370, 399, 409, 411, 425, 432, 437, 531, 537, 544, 598, 599, 604, 605, 607, 611, 637, 674, 686, 687, 699, 701, 731, 752, 766, 782, 785, 786, 795, 797, 801, 802, 815, 818, 819, 840, 844, 846, 851, 857, 862, 863, 864, 876, 881, 929, 932, 954, 956, 982, 988, 993, 995, 996, 1000, 1001, 1004, 1024], "caylei": 36, "0212d": 36, "letter": [36, 63, 342, 986], "cedilla": 36, "000b8": 36, "centerdot": 36, "checkmark": 36, "02713": 36, "circeq": 36, "circlearrowleft": 36, "circlearrowright": 36, "circledast": 36, "0229b": 36, "circledcirc": 36, "0229a": 36, "circleddash": 36, "0229d": 36, "circledot": 36, "02299": 36, "circledr": 36, "024c8": 36, "latin": [36, 211, 272], "circleminu": 36, "02296": 36, "circleplu": 36, "02295": 36, "circletim": 36, "02297": 36, "clockwisecontourintegr": 36, "02232": 36, "contour": 36, "closecurlydoublequot": 36, "closecurlyquot": 36, "clubsuit": 36, "02663": 36, "suit": [36, 42, 95, 128, 168, 237, 241, 310, 387, 396, 427, 428, 429, 431, 432, 434, 436, 449, 451, 452, 470, 483, 484, 485, 486, 487, 546, 547, 548, 549, 638, 639, 676, 685, 686, 705, 706, 707, 709, 1094, 1101, 1116, 1131], "coloneq": 36, "complement": [36, 104, 348], "02201": 36, "complex": [36, 67, 132, 143, 147, 164, 170, 190, 207, 212, 214, 220, 224, 228, 230, 245, 252, 266, 302, 323, 366, 378, 393, 702, 862, 863, 887, 903, 926, 987, 996, 1106, 1116], "02102": 36, "02261": 36, "ident": [36, 216, 266, 278, 522, 975, 977, 996], "contourintegr": 36, "0222e": 36, "counterclockwisecontourintegr": 36, "02233": 36, "cupcap": 36, "0224d": 36, "curlyeqprec": 36, "curlyeqsucc": 36, "curlyve": 36, "022ce": 36, "curlywedg": 36, "022cf": 36, "curvearrowleft": 36, "curvearrowright": 36, "dbkarow": 36, "ddagger": 36, "02021": 36, "ddotseq": 36, "02207": 36, "nabla": 36, "diacriticalacut": 36, "000b4": 36, "acut": 36, "accent": 36, "diacriticaldot": 36, "002d9": 36, "diacriticaldoubleacut": 36, "002dd": 36, "diacriticalgrav": 36, "00060": 36, "grave": 36, "diacriticaltild": 36, "002dc": 36, "022c4": 36, "diamondsuit": 36, "02666": 36, "differentiald": 36, "02146": 36, "digamma": 36, "003dd": 36, "div": [36, 399, 449], "divideontim": 36, "022c7": 36, "doteq": 36, "doteqdot": 36, "dotequ": 36, "dotminu": 36, "02238": 36, "dotplu": 36, "02214": 36, "dotsquar": 36, "022a1": 36, "doublebarwedg": 36, "02306": 36, "doublecontourintegr": 36, "0222f": 36, "surfac": [36, 164, 794, 862, 863, 1061, 1063], "doubledot": 36, "000a8": 36, "diaeresi": 36, "doubledownarrow": 36, "doubleleftarrow": 36, "021d0": 36, "doubleleftte": 36, "doublelongleftarrow": 36, "doublelongleftrightarrow": 36, "doublelongrightarrow": 36, "doublerightarrow": 36, "021d2": 36, "doublerightte": 36, "doubleuparrow": 36, "doubleupdownarrow": 36, "doubleverticalbar": 36, "downarrow": 36, "downarrowuparrow": 36, "downdownarrow": 36, "downharpoonleft": 36, "downharpoonright": 36, "downleftvector": 36, "downrightvector": 36, "downte": 36, "022a4": 36, "downteearrow": 36, "021a7": 36, "drbkarow": 36, "02208": 36, "emptyset": 36, "02205": 36, "eqcirc": 36, "eqcolon": 36, "eqsim": 36, "eqslantgtr": 36, "eqslantless": 36, "equaltild": 36, "equilibrium": 36, "02203": 36, "THERE": [36, 533], "02130": 36, "exponential": 36, "02147": 36, "fallingdotseq": 36, "foral": [36, 1007], "02200": 36, "FOR": [36, 143, 165, 172], "fouriertrf": 36, "02131": 36, "geq": 36, "02265": 36, "geqq": 36, "geqslant": 36, "ggg": 36, "gnapprox": 36, "02a8a": 36, "gneq": 36, "02a88": 36, "gneqq": 36, "02269": 36, "BUT": 36, "greaterequ": 36, "greaterequalless": 36, "greaterfullequ": 36, "greaterless": 36, "greaterslantequ": 36, "greatertild": 36, "gtrapprox": 36, "gtrdot": 36, "gtreqless": 36, "gtreqqless": 36, "gtrless": 36, "gtrsim": 36, "gvertneqq": 36, "hacek": 36, "002c7": 36, "caron": 36, "hbar": 36, "0210f": 36, "planck": 36, "constant": [36, 193, 201, 207, 210, 211, 212, 217, 220, 224, 262, 331, 339, 340, 345, 355, 359, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 472, 579, 629, 640, 667, 677, 679, 708, 710, 711], "pi": [36, 76, 104, 111, 112, 115, 144, 148, 174, 204, 207, 248, 259, 308, 319, 321, 345, 372, 375, 393, 483, 486, 487, 542, 562, 642, 711, 735, 739, 762, 767, 773, 776, 779, 854, 861, 863, 864, 875, 920, 933, 935, 942, 943, 946, 987], "heartsuit": 36, "02665": 36, "hilbertspac": 36, "0210b": 36, "h": [36, 40, 42, 95, 111, 112, 134, 139, 155, 158, 160, 165, 171, 175, 180, 193, 194, 201, 204, 205, 212, 214, 224, 237, 248, 259, 283, 324, 325, 327, 331, 333, 335, 343, 366, 367, 369, 375, 382, 390, 392, 396, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 434, 436, 439, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 506, 512, 513, 515, 516, 519, 522, 524, 529, 530, 531, 532, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 607, 616, 617, 618, 619, 620, 621, 622, 623, 632, 634, 637, 638, 639, 655, 656, 659, 670, 673, 676, 677, 681, 685, 686, 687, 688, 690, 699, 701, 705, 706, 707, 709, 717, 722, 726, 727, 729, 736, 738, 740, 742, 744, 746, 750, 752, 754, 763, 768, 771, 772, 775, 777, 778, 784, 795, 802, 815, 818, 840, 846, 856, 858, 862, 878, 880, 881, 882, 884, 885, 887, 888, 889, 890, 891, 894, 896, 899, 913, 916, 920, 922, 924, 925, 929, 930, 932, 933, 934, 935, 940, 944, 947, 948, 950, 993, 1008, 1088, 1095, 1100, 1102, 1105], "hksearow": 36, "hkswarow": 36, "hookleftarrow": 36, "hookrightarrow": 36, "hslash": 36, "humpdownhump": 36, "humpequ": 36, "iiiint": 36, "02a0c": 36, "quadrupl": 36, "iiint": 36, "0222d": 36, "02111": 36, "imaginaryi": 36, "02148": 36, "imaglin": 36, "02110": 36, "imagpart": 36, "impli": [36, 691, 1088], "02124": 36, "z": [36, 107, 151, 152, 155, 165, 175, 207, 208, 220, 223, 245, 272, 332, 342, 353, 354, 415, 548, 611, 681, 784, 845, 930, 982, 1108, 1117, 1119, 1124], "0222b": 36, "interc": 36, "022ba": 36, "intercal": 36, "intprod": 36, "02a3c": 36, "interior": 36, "invisiblecomma": 36, "02063": 36, "invis": [36, 455], "invisibletim": 36, "02062": 36, "langl": 36, "02329": 36, "laplacetrf": 36, "02112": 36, "lbrace": 36, "lbrack": 36, "leftanglebracket": 36, "leftarrow": 36, "leftarrowbar": 36, "021e4": 36, "leftarrowrightarrow": 36, "leftarrowtail": 36, "leftceil": 36, "02308": 36, "ceil": [36, 192, 205, 224, 1086], "leftdoublebracket": 36, "0301a": 36, "leftdownvector": 36, "leftfloor": 36, "0230a": 36, "leftharpoondown": 36, "leftharpoonup": 36, "leftleftarrow": 36, "leftrightarrow": 36, "leftrightharpoon": 36, "leftrightsquigarrow": 36, "leftte": 36, "leftteearrow": 36, "021a4": 36, "leftthreetim": 36, "022cb": 36, "semidirect": 36, "lefttriangl": 36, "lefttriangleequ": 36, "leftupvector": 36, "leftvector": 36, "leq": 36, "02264": 36, "leqq": 36, "leqslant": 36, "lessapprox": 36, "lessdot": 36, "lesseqgtr": 36, "lesseqqgtr": 36, "lessequalgreat": 36, "lessfullequ": 36, "lessgreat": 36, "lessgtr": 36, "lesssim": 36, "lessslantequ": 36, "lesstild": 36, "llcorner": 36, "0231e": 36, "bottom": [36, 179, 470, 483, 756, 818, 837, 855, 955], "corner": [36, 193, 256, 320, 332, 412, 424, 483, 699], "lleftarrow": 36, "lmoustach": 36, "023b0": 36, "upper": [36, 165, 188, 212, 214, 220, 230, 245, 252, 266, 287, 296, 325, 329, 345, 369, 917, 1017], "lower": [36, 134, 188, 201, 207, 212, 217, 220, 224, 230, 245, 266, 287, 296, 325, 329, 345, 369, 429, 573, 918, 926, 975, 1083], "lnapprox": 36, "02a89": 36, "lneq": 36, "02a87": 36, "lneqq": 36, "02268": 36, "longleftarrow": 36, "longleftrightarrow": 36, "longmapsto": 36, "looparrowleft": 36, "looparrowright": 36, "lowerleftarrow": 36, "lowerrightarrow": 36, "025ca": 36, "lrcorner": 36, "0231f": 36, "lvertneqq": 36, "maltes": 36, "02720": 36, "mapsto": 36, "measuredangl": 36, "02221": 36, "measur": [36, 95, 112, 134, 224, 257, 261, 395, 402, 448, 452, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 527, 605, 711, 717, 784, 793, 884, 925, 949, 1061, 1063], "mellintrf": 36, "02133": 36, "minusplu": 36, "02213": 36, "napprox": 36, "02249": 36, "0266e": 36, "music": [36, 134, 262], "02115": 36, "nearrow": 36, "negativemediumspac": 36, "0200b": 36, "width": [36, 201, 207, 210, 211, 217, 220, 242, 250, 266, 325, 348, 437, 522, 546, 855, 926, 1001, 1067, 1117, 1124], "negativethickspac": 36, "negativethinspac": 36, "negativeverythinspac": 36, "nestedgreatergreat": 36, "nestedlessless": 36, "nexist": 36, "02204": 36, "ngeq": 36, "02271": 36, "neither": [36, 152, 427, 454, 468, 638, 803, 805, 806, 888, 997], "nor": [36, 152, 208, 454, 468, 538, 638, 803, 805, 806, 855, 875, 888, 997], "ngeqq": 36, "ngeqslant": 36, "ngtr": 36, "0226f": 36, "nleftarrow": 36, "nleftrightarrow": 36, "nleq": 36, "02270": 36, "nleqq": 36, "nleqslant": 36, "nless": 36, "0226e": 36, "nonbreakingspac": 36, "notcongru": 36, "02262": 36, "notdoubleverticalbar": 36, "02226": 36, "notel": 36, "02209": 36, "notequ": 36, "02260": 36, "notequaltild": 36, "notexist": 36, "notgreat": 36, "notgreaterequ": 36, "notgreaterfullequ": 36, "notgreatergreat": 36, "notgreaterless": 36, "02279": 36, "notgreaterslantequ": 36, "notgreatertild": 36, "02275": 36, "nothumpdownhump": 36, "notlefttriangl": 36, "022ea": 36, "notlefttriangleequ": 36, "022ec": 36, "notless": 36, "notlessequ": 36, "notlessgreat": 36, "02278": 36, "notlessless": 36, "notlessslantequ": 36, "notlesstild": 36, "02274": 36, "notpreced": 36, "02280": 36, "notprecedesequ": 36, "notprecedesslantequ": 36, "022e0": 36, "notreverseel": 36, "0220c": 36, "notrighttriangl": 36, "022eb": 36, "notrighttriangleequ": 36, "022ed": 36, "notsquaresubsetequ": 36, "022e2": 36, "notsquaresupersetequ": 36, "022e3": 36, "notsubset": 36, "020d2": 36, "notsubsetequ": 36, "02288": 36, "notsucce": 36, "02281": 36, "notsucceedsequ": 36, "notsucceedsslantequ": 36, "022e1": 36, "notsuperset": 36, "notsupersetequ": 36, "02289": 36, "nottild": 36, "02241": 36, "nottildeequ": 36, "02244": 36, "asymptot": 36, "nottildefullequ": 36, "02247": 36, "actual": [36, 40, 41, 46, 59, 134, 137, 142, 147, 164, 191, 201, 207, 210, 217, 220, 224, 251, 254, 256, 305, 429, 439, 598, 605, 627, 685, 717, 855, 863, 887, 930, 953, 969, 978, 1011, 1059, 1061, 1063, 1085, 1100], "nottildetild": 36, "notverticalbar": 36, "02224": 36, "nparallel": 36, "nprec": 36, "npreceq": 36, "nrightarrow": 36, "nshortmid": 36, "nshortparallel": 36, "nsimeq": 36, "nsubset": 36, "nsubseteq": 36, "nsubseteqq": 36, "nsucc": 36, "nsucceq": 36, "nsupset": 36, "nsupseteq": 36, "nsupseteqq": 36, "ntriangleleft": 36, "ntrianglelefteq": 36, "ntriangleright": 36, "ntrianglerighteq": 36, "nwarrow": 36, "oint": 36, "opencurlydoublequot": 36, "opencurlyquot": 36, "orderof": 36, "02134": 36, "partiald": 36, "02202": 36, "partial": [36, 258, 736, 1060], "differenti": [36, 67, 621, 689, 758, 803, 862, 987, 1055, 1072], "plusminu": 36, "poincareplan": 36, "0210c": 36, "prec": 36, "precapprox": 36, "preccurlyeq": 36, "precedesequ": 36, "precedesslantequ": 36, "precedestild": 36, "preceq": 36, "precnapprox": 36, "02ab9": 36, "precneqq": 36, "02ab5": 36, "precnsim": 36, "022e8": 36, "precsim": 36, "02119": 36, "propto": 36, "quaternion": 36, "0210d": 36, "questeq": 36, "rangl": 36, "0232a": 36, "0211a": 36, "q": [36, 111, 172, 224, 369, 375, 529, 547, 548, 562, 690, 795, 818, 850, 925, 1088], "rbrace": 36, "rbrack": 36, "0211c": 36, "realin": 36, "0211b": 36, "realpart": 36, "real": [36, 71, 123, 139, 142, 147, 150, 152, 168, 189, 202, 207, 208, 215, 217, 220, 224, 229, 232, 242, 250, 256, 265, 271, 288, 349, 398, 405, 419, 425, 431, 448, 470, 478, 479, 480, 481, 482, 486, 528, 529, 534, 649, 664, 682, 685, 719, 758, 795, 796, 818, 855, 863, 875, 916, 1002, 1056, 1059, 1061, 1094, 1113, 1116], "0211d": 36, "reverseel": 36, "0220b": 36, "reverseequilibrium": 36, "reverseupequilibrium": 36, "rightanglebracket": 36, "rightarrowbar": 36, "021e5": 36, "rightarrowleftarrow": 36, "rightarrowtail": 36, "rightceil": 36, "02309": 36, "rightdoublebracket": 36, "0301b": 36, "rightdownvector": 36, "rightfloor": 36, "0230b": 36, "rightharpoondown": 36, "rightharpoonup": 36, "rightleftarrow": 36, "rightleftharpoon": 36, "rightrightarrow": 36, "rightsquigarrow": 36, "rightte": 36, "rightteearrow": 36, "rightthreetim": 36, "022cc": 36, "righttriangl": 36, "righttriangleequ": 36, "rightupvector": 36, "rightvector": 36, "risingdotseq": 36, "rmoustach": 36, "023b1": 36, "rrightarrow": 36, "searrow": 36, "setminu": 36, "shortdownarrow": 36, "shortleftarrow": 36, "shortmid": 36, "shortparallel": 36, "shortrightarrow": 36, "shortuparrow": 36, "simeq": 36, "02243": 36, "smallcircl": 36, "02218": 36, "smallsetminu": 36, "spadesuit": 36, "02660": 36, "sqrt": [36, 192, 205, 529, 531, 539, 540, 548, 634, 649, 650, 651, 652, 653, 690, 1086], "0221a": 36, "sqsubset": 36, "sqsubseteq": 36, "sqsupset": 36, "sqsupseteq": 36, "025a1": 36, "squareintersect": 36, "02293": 36, "cap": [36, 204, 1013], "squaresubset": 36, "squaresubsetequ": 36, "squaresuperset": 36, "squaresupersetequ": 36, "squareunion": 36, "02294": 36, "cup": [36, 262], "022c6": 36, "straightepsilon": 36, "003f5": 36, "straightphi": 36, "003d5": 36, "phi": 36, "subseteq": 36, "02286": 36, "subseteqq": 36, "subsetequ": 36, "subsetneq": 36, "0228a": 36, "subsetneqq": 36, "02acb": 36, "succ": 36, "succapprox": 36, "succcurlyeq": 36, "succeedsequ": 36, "succeedsslantequ": 36, "succeedstild": 36, "succeq": 36, "succnapprox": 36, "02aba": 36, "succneqq": 36, "02ab6": 36, "succnsim": 36, "022e9": 36, "succsim": 36, "suchthat": 36, "02211": 36, "summat": 36, "supersetequ": 36, "02287": 36, "supset": 36, "supseteq": 36, "supseteqq": 36, "supsetneq": 36, "0228b": 36, "supsetneqq": 36, "02acc": 36, "swarrow": 36, "therefor": [36, 122, 132], "02234": 36, "thickapprox": 36, "thicksim": 36, "thinspac": 36, "02009": 36, "tildeequ": 36, "tildefullequ": 36, "02245": 36, "tildetild": 36, "toea": 36, "tosa": 36, "025b5": 36, "triangledown": 36, "025bf": 36, "triangleleft": 36, "025c3": 36, "trianglelefteq": 36, "triangleq": 36, "triangleright": 36, "025b9": 36, "trianglerighteq": 36, "tripledot": 36, "020db": 36, "combin": [36, 83, 106, 108, 109, 135, 153, 184, 240, 354, 365, 370, 387, 395, 426, 435, 447, 461, 475, 527, 562, 601, 679, 711, 740, 798, 800, 802, 818, 840, 851, 888, 889, 891, 938, 991, 1006, 1022, 1078, 1113], "twoheadleftarrow": 36, "twoheadrightarrow": 36, "ulcorn": 36, "0231c": 36, "unionplu": 36, "0228e": 36, "multiset": 36, "uparrow": 36, "uparrowdownarrow": 36, "updownarrow": 36, "upequilibrium": 36, "upharpoonleft": 36, "upharpoonright": 36, "upperleftarrow": 36, "upperrightarrow": 36, "upsilon": 36, "003c5": 36, "upte": 36, "upteearrow": 36, "021a5": 36, "upuparrow": 36, "urcorn": 36, "0231d": 36, "varepsilon": 36, "003b5": 36, "varkappa": 36, "003f0": 36, "kappa": 36, "varnoth": 36, "varphi": 36, "003c6": 36, "varpi": 36, "003d6": 36, "varpropto": 36, "varrho": 36, "003f1": 36, "rho": 36, "varsigma": 36, "003c2": 36, "sigma": [36, 224], "varsubsetneq": 36, "variant": [36, 176, 192, 205, 235, 236, 237, 283, 325, 341, 458, 522, 675, 679, 681, 704, 736, 1086, 1120, 1123], "varsubsetneqq": 36, "varsupsetneq": 36, "varsupsetneqq": 36, "vartheta": 36, "003d1": 36, "theta": 36, "vartriangleleft": 36, "vartriangleright": 36, "vee": 36, "02228": 36, "vert": 36, "02016": 36, "verticalbar": 36, "verticaltild": 36, "02240": 36, "wreath": 36, "verythinspac": 36, "0200a": 36, "hair": 36, "wedg": 36, "02227": 36, "wp": 36, "02118": 36, "wr": 36, "zeetrf": 36, "02128": 36, "restructured text": 37, "cheat sheet": 37, "restructur": 37, "guid": [37, 116, 137, 147, 168, 193, 322, 402, 480, 632, 729, 744, 797], "author": [37, 135, 142, 220, 545, 731, 862, 1011, 1068], "overridden": [37, 348, 599, 666, 1093], "titl": [37, 38, 128, 138, 202, 215, 220, 229, 232, 265, 266, 271, 972, 1056, 1061], "favorit": [37, 164, 168, 171, 189, 193, 215, 218, 288, 758, 864, 916, 980, 1056], "__": [37, 149, 151, 159, 266, 680, 684, 976], "ref": [37, 111, 147, 236, 237, 627, 642, 686, 706], "uniqu": [37, 147, 194, 236, 237, 239, 283, 486, 505, 687, 699, 706, 708, 710, 711, 864, 878, 892, 951, 1004, 1008, 1081], "across": [37, 41, 132, 139, 149, 201, 207, 217, 220, 250, 259, 320, 348, 368, 392, 427, 432, 451, 514, 690, 701, 709, 785, 786, 797, 815, 862, 864, 884, 892, 926, 987, 998, 1068], "tree": [37, 40, 98, 100, 111, 122, 124, 133, 135, 138, 143, 147, 160, 161, 168, 192, 205, 208, 211, 215, 248, 276, 378, 400, 405, 417, 449, 484, 486, 583, 586, 711, 733, 736, 750, 760, 783, 785, 786, 788, 802, 818, 819, 826, 830, 832, 838, 847, 854, 863, 868, 870, 875, 895, 903, 912, 935, 940, 960, 972, 1063, 1084, 1086, 1093, 1095], "next": [37, 40, 61, 96, 111, 128, 133, 134, 139, 147, 152, 154, 165, 170, 172, 180, 184, 191, 197, 201, 204, 205, 207, 210, 212, 214, 217, 220, 224, 230, 236, 237, 242, 245, 252, 262, 266, 272, 287, 294, 308, 342, 360, 362, 383, 411, 449, 453, 467, 477, 486, 522, 559, 635, 648, 655, 657, 679, 748, 758, 777, 802, 818, 850, 862, 864, 884, 894, 914, 933, 959, 960, 963, 991, 994, 1061, 1101], "_dummi": 37, "dummi": [37, 138, 308, 309, 738, 777, 1100], "One": [37, 41, 57, 60, 61, 74, 78, 80, 95, 104, 132, 134, 143, 160, 171, 192, 210, 231, 232, 257, 288, 302, 313, 329, 369, 382, 391, 394, 403, 405, 410, 416, 421, 427, 486, 505, 513, 528, 547, 552, 562, 567, 632, 666, 691, 701, 758, 763, 789, 791, 794, 802, 818, 862, 863, 864, 888, 900, 905, 916, 917, 925, 930, 935, 967, 991, 1067, 1068, 1072, 1077, 1115, 1129], "a_footnot": 37, "footer": 37, "block": [37, 96, 108, 109, 131, 132, 133, 134, 172, 174, 192, 199, 201, 205, 207, 217, 220, 229, 232, 241, 262, 265, 287, 302, 307, 311, 325, 327, 345, 364, 370, 371, 377, 381, 384, 388, 396, 397, 399, 401, 406, 407, 434, 534, 537, 629, 655, 667, 686, 697, 698, 699, 700, 701, 708, 709, 710, 711, 744, 760, 770, 774, 788, 789, 791, 792, 794, 795, 840, 854, 863, 887, 894, 895, 900, 905, 909, 910, 915, 917, 925, 926, 929, 931, 953, 955, 981, 984, 991, 994, 1056], "rubric": 37, "nbsphinx": 38, "capabl": [38, 76, 132, 133, 139, 696, 758, 784, 847, 855, 863, 916, 1085, 1116], "nice": [38, 129, 132, 149, 172, 194, 259, 404, 405, 425, 473, 540, 627, 777, 784, 857, 863, 914, 977, 1013, 1061, 1063, 1075, 1081, 1096], "few": [38, 132, 133, 134, 135, 138, 139, 164, 168, 201, 323, 393, 644, 758, 796, 955, 959, 1094, 1118], "keep": [38, 41, 108, 109, 133, 134, 147, 156, 168, 171, 175, 191, 224, 288, 313, 337, 393, 399, 400, 609, 649, 750, 758, 763, 782, 797, 800, 856, 908, 944, 947, 967, 984, 1061, 1062, 1113], "mind": [38, 132, 133, 326, 693, 984], "though": [38, 41, 43, 51, 66, 131, 132, 137, 139, 142, 143, 147, 148, 153, 160, 164, 168, 170, 171, 189, 192, 194, 205, 207, 208, 210, 215, 218, 232, 241, 250, 251, 254, 265, 288, 329, 339, 348, 360, 365, 427, 428, 429, 432, 441, 449, 451, 484, 485, 486, 505, 529, 531, 532, 536, 539, 542, 545, 546, 548, 549, 562, 563, 598, 605, 627, 635, 637, 644, 649, 655, 672, 676, 681, 686, 687, 690, 697, 712, 713, 717, 736, 750, 789, 796, 797, 800, 803, 837, 851, 855, 862, 863, 864, 874, 882, 884, 911, 916, 918, 920, 926, 935, 953, 955, 956, 959, 964, 966, 973, 975, 983, 987, 1000, 1025, 1056, 1063, 1067, 1080, 1088, 1089, 1093, 1095, 1113, 1116], "toplevel": [38, 42, 107, 111, 160, 193, 242, 413, 415, 419, 420, 421, 423, 470, 731, 759, 784, 953, 1102], "begin": [38, 40, 41, 114, 131, 132, 142, 170, 191, 192, 204, 207, 220, 224, 236, 237, 241, 258, 266, 319, 325, 333, 345, 348, 369, 375, 392, 393, 395, 425, 432, 522, 532, 545, 558, 560, 562, 563, 564, 566, 567, 569, 570, 571, 573, 574, 575, 576, 580, 583, 594, 627, 642, 655, 658, 662, 669, 675, 676, 679, 693, 784, 818, 842, 850, 876, 884, 960, 984, 1006, 1056, 1094], "deeper": [38, 133, 164, 251, 254, 414, 911], "trail": [38, 136, 220, 262, 266, 293, 294], "underscor": [38, 342, 956, 963, 976, 986], "For": [38, 111, 130, 131, 132, 136, 139, 142, 144, 145, 147, 148, 153, 156, 161, 162, 164, 168, 184, 189, 192, 199, 202, 205, 210, 220, 223, 225, 229, 237, 239, 240, 241, 265, 271, 276, 313, 319, 321, 333, 334, 340, 355, 364, 371, 377, 381, 384, 386, 388, 397, 401, 406, 407, 424, 449, 505, 530, 537, 541, 554, 563, 583, 629, 667, 674, 677, 681, 686, 691, 708, 710, 711, 729, 744, 758, 785, 786, 795, 818, 854, 855, 863, 864, 865, 874, 878, 905, 926, 933, 934, 935, 942, 943, 947, 980, 981, 991, 998, 1006, 1029, 1034, 1056, 1059, 1061, 1063], "ipynb": [38, 151, 171, 181, 183, 220, 230, 251, 255, 261, 265, 271, 276, 280, 1058, 1062], "labels_": [38, 153, 155], "result": [38, 76, 125, 134, 143, 149, 151, 171, 175, 191, 201, 207, 210, 217, 220, 224, 233, 242, 262, 266, 332, 348, 383, 390, 392, 393, 399, 429, 454, 458, 545, 573, 634, 640, 649, 677, 729, 874, 920, 948, 960, 975, 989, 995, 1007, 1067], "cluster": [38, 155, 1058, 1063], "membership": [38, 153, 170, 171, 213, 441, 988, 1005], "input": [38, 66, 84, 152, 153, 154, 155, 165, 168, 171, 173, 195, 201, 207, 210, 217, 220, 223, 224, 245, 248, 302, 307, 331, 332, 338, 362, 370, 393, 398, 410, 488, 489, 490, 491, 503, 542, 592, 611, 634, 709, 729, 784, 802, 833, 851, 855, 865, 881, 884, 896, 898, 899, 906, 962, 977, 1006, 1018, 1022, 1023, 1035, 1038, 1041, 1047, 1050, 1058, 1059, 1062, 1063, 1124], "sequenc": [38, 104, 107, 125, 152, 153, 155, 165, 171, 192, 194, 203, 205, 206, 207, 210, 213, 217, 220, 224, 242, 257, 259, 266, 272, 324, 378, 429, 475, 490, 491, 492, 527, 572, 591, 595, 611, 624, 632, 679, 711, 917, 960, 961, 962, 978, 987, 988, 993, 995, 998, 1002, 1003, 1026, 1038, 1072, 1086, 1116], "bring": [38, 43, 112, 125, 128, 132, 134, 142, 143, 164, 168, 171, 174, 210, 248, 251, 254, 257, 259, 310, 315, 316, 505, 544, 583, 607, 618, 626, 754, 758, 770, 862, 863, 864, 933, 980, 1028, 1051, 1072, 1113, 1116], "bigplan": [38, 155, 1058], "686": [38, 153, 207, 946], "unknown": [38, 250, 411, 714, 863, 969], "cmd": [38, 138, 752, 777, 1095], "color": [38, 137, 155, 840, 1058, 1064, 1088], "tmp": [38, 114, 128, 133, 135, 138, 175, 188, 191, 207, 212, 220, 224, 227, 230, 232, 237, 239, 242, 245, 252, 262, 266, 272, 334, 376, 399, 412, 417, 418, 425, 486, 487, 607, 684, 736, 758, 780, 784, 789, 798, 802, 803, 816, 817, 818, 820, 822, 823, 825, 827, 830, 837, 840, 841, 846, 867, 874, 885, 886, 888, 889, 891, 916, 922, 953, 954, 955, 960, 968, 969, 975, 976, 997, 998, 1002, 1006, 1012, 1071, 1080, 1081, 1094, 1095], "craft": [39, 51, 218, 260, 261, 409, 454, 691, 712], "tar": [40, 59, 107, 111, 119, 128, 143, 172, 174, 238, 247, 248, 268, 269, 405, 711, 758, 780, 781, 783, 788, 854, 940, 942, 943, 944, 946, 947, 953, 1011, 1095, 1119], "xz": [40, 59, 135, 143, 248, 398, 940, 944, 946, 947], "push": [40, 75, 114, 136, 138, 147, 150, 193, 208, 218, 275, 308, 370, 415, 416, 427, 451, 699, 711, 758, 900, 918, 1031, 1035, 1093], "cmakelist": [40, 42, 111, 158, 159, 160, 161, 162, 193, 210, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 470, 483, 484, 485, 486, 487, 506, 509, 512, 513, 515, 518, 521, 524, 618, 921, 924, 928, 933, 934, 1099, 1102, 1104], "src": [40, 132, 133, 135, 193, 207, 237, 239, 245, 308, 337, 349, 399, 423, 424, 434, 470, 473, 483, 484, 485, 486, 488, 547, 564, 685, 686, 784, 802, 846, 1006, 1011, 1093], "talk": [40, 43, 48, 82, 111, 132, 136, 147, 152, 156, 164, 168, 171, 176, 208, 210, 211, 304, 409, 410, 672, 681, 758, 777, 855, 860, 864, 871, 1065, 1105], "memori": [40, 41, 47, 53, 71, 76, 78, 95, 107, 108, 109, 127, 131, 132, 133, 135, 137, 144, 148, 152, 153, 154, 157, 159, 164, 170, 171, 179, 183, 184, 188, 201, 207, 210, 217, 220, 235, 257, 259, 261, 266, 320, 321, 323, 337, 343, 365, 366, 372, 385, 387, 388, 390, 396, 397, 399, 401, 405, 406, 407, 434, 449, 451, 453, 454, 455, 457, 459, 460, 467, 468, 475, 492, 494, 495, 519, 527, 528, 533, 534, 544, 562, 563, 564, 580, 599, 609, 624, 627, 629, 638, 665, 667, 672, 679, 684, 686, 687, 688, 708, 710, 711, 720, 725, 728, 730, 735, 739, 749, 753, 754, 755, 758, 760, 762, 763, 767, 770, 776, 779, 789, 794, 796, 802, 854, 871, 880, 900, 902, 903, 916, 917, 949, 953, 966, 967, 980, 987, 1071, 1110, 1111, 1114, 1118, 1119, 1128], "load": [40, 41, 51, 54, 61, 73, 86, 131, 142, 143, 150, 151, 155, 171, 179, 180, 196, 197, 201, 207, 217, 220, 224, 227, 233, 242, 259, 260, 261, 277, 279, 385, 405, 417, 700, 710, 711, 714, 715, 717, 718, 720, 723, 725, 726, 728, 733, 735, 738, 739, 743, 749, 752, 754, 755, 758, 760, 762, 767, 770, 773, 776, 779, 794, 854, 863, 864, 895, 903, 909, 932, 949, 1056, 1077, 1118, 1127, 1129], "store": [40, 55, 61, 73, 86, 104, 131, 133, 150, 152, 160, 161, 191, 194, 201, 259, 260, 261, 279, 333, 385, 429, 611, 655, 669, 672, 679, 700, 710, 711, 724, 758, 797, 810, 854, 871, 895, 903, 909, 933, 951, 955, 956, 960, 1004, 1034, 1071, 1088, 1129], "search": [40, 49, 51, 104, 125, 127, 128, 132, 153, 156, 162, 164, 170, 171, 180, 191, 192, 194, 197, 201, 204, 205, 207, 210, 211, 212, 215, 217, 220, 233, 242, 245, 249, 252, 257, 262, 266, 272, 274, 369, 396, 399, 411, 475, 486, 488, 492, 527, 572, 577, 591, 595, 612, 624, 711, 736, 800, 818, 850, 911, 933, 946, 963, 992, 1062, 1086, 1093, 1115], "payload": [40, 719, 746, 856, 858], "primari": [40, 132, 143, 164, 250, 251, 254, 403, 756, 785, 786, 793, 795, 1034], "insert": [40, 61, 107, 126, 131, 147, 151, 168, 170, 175, 205, 207, 210, 212, 214, 220, 224, 227, 245, 266, 272, 302, 366, 383, 387, 403, 430, 436, 458, 464, 475, 492, 493, 494, 505, 522, 527, 563, 564, 577, 587, 588, 612, 620, 621, 622, 624, 631, 638, 640, 655, 676, 707, 709, 711, 736, 742, 752, 754, 758, 818, 862, 875, 906, 916, 988, 1003, 1004, 1012, 1071, 1093], "const": [40, 56, 68, 95, 105, 107, 108, 109, 111, 159, 194, 210, 257, 259, 283, 337, 345, 349, 367, 369, 375, 383, 395, 397, 399, 401, 406, 407, 412, 428, 430, 431, 432, 434, 436, 451, 452, 458, 459, 460, 463, 464, 465, 467, 468, 469, 475, 479, 483, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 513, 518, 520, 522, 527, 529, 530, 531, 532, 534, 536, 537, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555, 556, 562, 566, 568, 569, 570, 571, 572, 578, 582, 584, 587, 588, 591, 594, 595, 598, 601, 602, 605, 607, 608, 609, 612, 613, 616, 617, 619, 620, 621, 622, 623, 624, 631, 633, 634, 635, 636, 637, 638, 639, 640, 649, 650, 651, 652, 653, 655, 657, 658, 661, 662, 663, 664, 665, 667, 669, 670, 671, 672, 674, 675, 677, 679, 683, 685, 686, 687, 688, 689, 692, 700, 701, 705, 706, 707, 708, 709, 710, 711, 714, 717, 722, 738, 740, 744, 752, 754, 768, 772, 778, 876, 884, 888, 889, 890, 891, 894, 896, 899, 901, 903, 905, 913, 919, 922, 925, 926, 930, 950, 968, 1044, 1070, 1105, 1111, 1112], "care": [40, 44, 46, 78, 131, 132, 134, 137, 139, 164, 172, 204, 293, 325, 348, 357, 359, 375, 399, 400, 423, 454, 455, 530, 544, 562, 605, 676, 677, 681, 690, 705, 712, 736, 748, 750, 758, 763, 784, 785, 786, 863, 871, 875, 887, 900, 908, 934, 956, 980, 984, 996, 1003, 1006, 1007, 1013, 1036, 1060, 1071, 1084, 1095], "dump": [40, 132, 151, 180, 196, 197, 207, 220, 224, 227, 233, 242, 277, 434, 453, 454, 537, 542, 665, 685, 796, 929, 930], "db": [40, 48, 142, 168, 193, 194, 195, 199, 205, 218, 233, 415, 429, 430, 436, 458, 464, 619, 620, 621, 622, 623, 691, 1012], "pull": [40, 42, 48, 61, 75, 111, 112, 136, 147, 184, 193, 194, 208, 287, 310, 411, 415, 427, 544, 731, 758, 960, 963, 1083], "paramet": [40, 56, 61, 108, 109, 131, 134, 139, 149, 152, 159, 160, 164, 169, 170, 171, 173, 175, 183, 184, 188, 191, 192, 193, 194, 201, 205, 207, 210, 211, 213, 216, 217, 220, 227, 230, 251, 252, 254, 256, 288, 293, 302, 324, 333, 335, 339, 350, 354, 369, 370, 375, 377, 378, 381, 384, 388, 389, 395, 397, 401, 406, 407, 410, 412, 417, 473, 483, 489, 505, 519, 529, 531, 534, 538, 541, 542, 545, 549, 554, 555, 609, 615, 629, 632, 639, 655, 667, 669, 674, 687, 699, 708, 710, 711, 716, 717, 724, 738, 761, 766, 771, 774, 777, 778, 798, 800, 863, 878, 901, 911, 926, 934, 947, 956, 970, 973, 978, 985, 1001, 1008, 1013, 1023, 1029, 1031, 1035, 1041, 1050, 1061, 1067, 1070, 1077, 1080, 1081, 1083, 1086, 1109, 1110], "stdin": [40, 184, 192, 201, 207, 210, 217, 220, 295, 302, 334, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711, 784, 800, 801, 833, 884, 1004, 1006, 1007, 1018, 1072, 1084, 1119], "entri": [40, 129, 133, 134, 138, 196, 207, 324, 424, 440, 583, 585, 605, 746, 784, 797, 801, 802, 803, 840, 846, 878, 884, 898, 949, 956, 1004, 1070, 1102], "o_creat": [40, 711, 854, 884, 885, 889, 893, 895, 912, 925], "o_trunc": [40, 46, 884], "o_wronli": [40, 711, 854, 884, 885, 887, 888, 889, 893, 894, 895, 896, 899, 912, 925], "0666": [40, 817, 888, 889, 925], "assert": [40, 44, 168, 192, 205, 217, 220, 234, 250, 411, 434, 576, 617, 620, 622, 628, 701, 882, 894, 896, 899, 925, 929, 930, 968, 1044, 1051, 1052, 1053, 1086, 1093, 1099, 1100, 1102, 1110], "ing": [40, 890], "mode": [40, 99, 111, 135, 147, 149, 184, 192, 201, 204, 205, 207, 217, 220, 224, 227, 245, 248, 252, 266, 269, 399, 475, 527, 700, 710, 711, 717, 750, 756, 784, 785, 786, 788, 791, 792, 795, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 854, 857, 864, 878, 883, 884, 885, 893, 895, 909, 912, 915, 917, 925, 926, 981, 983, 1086, 1088], "binaryus": 40, "hton": [40, 881], "arpa": [40, 881], "inet": [40, 149, 881], "again": [40, 97, 111, 131, 132, 134, 137, 139, 143, 147, 148, 160, 164, 168, 170, 171, 172, 184, 193, 218, 223, 232, 238, 241, 247, 248, 265, 268, 271, 302, 303, 304, 307, 308, 313, 320, 321, 370, 411, 433, 437, 447, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 522, 527, 529, 531, 544, 545, 549, 559, 638, 649, 691, 699, 700, 706, 709, 710, 711, 778, 781, 785, 786, 787, 788, 791, 792, 799, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 848, 854, 864, 871, 874, 877, 879, 881, 882, 883, 885, 890, 893, 895, 896, 905, 909, 911, 912, 915, 917, 926, 934, 936, 937, 938, 939, 940, 941, 942, 943, 953, 973, 978, 996, 1001, 1006, 1056, 1077, 1080, 1113], "od": [40, 220], "hardwir": [40, 61, 719, 880, 973], "enter": [40, 108, 109, 165, 172, 201, 206, 207, 217, 220, 229, 230, 232, 233, 250, 287, 302, 307, 327, 522, 545, 604, 638, 644, 655, 687, 736, 758, 774, 791, 814, 916, 917, 991, 1043], "joerg": [40, 48, 114, 151, 165, 166, 168, 169, 171, 173, 180, 184, 188, 191, 197, 204, 207, 210, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 259, 261, 262, 266, 272, 277, 296, 299, 394, 421, 429, 436, 470, 486, 488, 504, 542, 576, 588, 607, 617, 618, 619, 620, 622, 639, 785, 786, 793, 795, 800, 814, 830, 843, 849, 874, 911, 969, 970, 972, 973, 974, 976, 977, 985, 1007, 1034, 1051, 1064, 1067, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "huber": [40, 214, 220, 1067], "caro": [40, 204, 214, 217, 224, 227, 230, 233, 242, 245, 252, 266, 429, 436, 488, 504, 576, 588, 620, 622, 972, 974, 994, 1045, 1047, 1051, 1053, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "johanna": [40, 204, 214, 217, 224, 227, 245, 252, 266, 429, 488, 504, 576, 588, 994, 1045, 1047, 1051, 1053, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "bodi": [40, 48, 53, 108, 109, 138, 324, 325, 327, 331, 360, 370, 399, 489, 522, 531, 532, 536, 539, 609, 627, 628, 631, 690, 960, 1094], "compil": [40, 41, 63, 101, 102, 106, 108, 109, 111, 133, 134, 143, 152, 159, 160, 161, 180, 194, 197, 210, 217, 233, 242, 245, 248, 249, 257, 266, 272, 274, 310, 322, 335, 344, 345, 354, 357, 359, 366, 367, 376, 378, 385, 388, 391, 392, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 406, 407, 411, 415, 418, 420, 423, 424, 427, 433, 447, 449, 454, 455, 468, 469, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 513, 519, 522, 527, 529, 532, 534, 538, 540, 544, 555, 583, 602, 609, 614, 616, 627, 628, 629, 630, 632, 634, 635, 637, 638, 640, 642, 644, 649, 652, 655, 664, 665, 667, 673, 676, 677, 679, 681, 685, 686, 708, 710, 711, 726, 727, 742, 854, 862, 933, 934, 937, 938, 939, 940, 942, 956, 981, 986, 998, 1000, 1100, 1102, 1110, 1111, 1113, 1114, 1115, 1126], "still": [40, 52, 59, 120, 126, 131, 132, 133, 134, 142, 143, 152, 153, 154, 194, 204, 210, 248, 250, 293, 313, 322, 373, 385, 411, 414, 420, 473, 495, 516, 519, 537, 538, 559, 565, 598, 613, 638, 655, 672, 676, 681, 685, 686, 688, 689, 690, 721, 726, 758, 761, 801, 815, 837, 862, 863, 864, 914, 916, 918, 929, 951, 959, 962, 968, 981, 984, 987, 1011, 1047, 1073, 1081, 1102, 1110], "funni": [40, 42, 48, 98, 111, 164, 248, 432, 711, 788, 826, 832, 838, 854, 933], "temp": [40, 42, 220, 311, 685, 686, 687], "got": [40, 43, 132, 142, 194, 266, 369, 641, 884, 957], "overwritten": [40, 45, 51, 53, 54, 564, 711, 885, 963], "suspect": [40, 134, 136], "inmem": 40, "loos": [40, 41, 168, 184, 323, 348, 395, 748], "foolishli": 40, "main": [40, 48, 61, 105, 125, 134, 137, 138, 143, 171, 193, 205, 217, 218, 220, 237, 248, 256, 259, 261, 274, 276, 302, 322, 324, 325, 327, 331, 333, 335, 336, 350, 365, 366, 367, 369, 373, 385, 392, 396, 399, 400, 403, 405, 411, 412, 414, 418, 434, 448, 453, 454, 455, 470, 471, 473, 481, 483, 485, 486, 505, 513, 516, 519, 533, 537, 538, 540, 542, 544, 545, 547, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 611, 616, 617, 618, 619, 620, 621, 622, 623, 627, 632, 642, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 669, 671, 672, 674, 677, 679, 685, 686, 688, 689, 690, 691, 694, 699, 701, 709, 719, 726, 727, 729, 758, 795, 797, 815, 862, 864, 865, 878, 880, 881, 882, 888, 889, 890, 891, 896, 899, 900, 902, 906, 911, 913, 916, 917, 922, 925, 926, 929, 932, 940, 944, 950, 964, 967, 982, 1046, 1048, 1100, 1105, 1118], "chang": [40, 43, 44, 45, 49, 53, 54, 75, 78, 111, 131, 134, 136, 137, 138, 139, 142, 143, 147, 155, 168, 184, 193, 224, 232, 309, 348, 385, 387, 391, 394, 395, 399, 409, 412, 427, 472, 478, 483, 484, 486, 487, 538, 563, 620, 674, 699, 709, 711, 731, 736, 784, 793, 795, 797, 815, 824, 827, 842, 855, 857, 862, 863, 874, 878, 899, 929, 932, 947, 963, 987, 996, 1035, 1046, 1048, 1051, 1077, 1081, 1096, 1113], "errorhandl": 40, "just": [40, 44, 61, 67, 82, 106, 122, 131, 132, 133, 134, 135, 136, 138, 139, 143, 147, 154, 156, 160, 164, 171, 194, 205, 208, 233, 274, 290, 331, 350, 375, 378, 387, 405, 409, 414, 424, 429, 470, 473, 483, 485, 486, 487, 510, 529, 530, 531, 537, 540, 541, 542, 545, 564, 592, 599, 605, 609, 613, 627, 634, 638, 640, 641, 655, 670, 673, 687, 689, 691, 709, 716, 721, 729, 731, 738, 742, 748, 750, 758, 774, 797, 818, 821, 822, 851, 855, 863, 864, 879, 881, 882, 888, 889, 891, 900, 901, 911, 918, 926, 944, 951, 954, 955, 958, 960, 978, 979, 985, 986, 987, 994, 998, 1006, 1007, 1061, 1062, 1072, 1077, 1078, 1082, 1083, 1089, 1093, 1105, 1115], "silent": [40, 63, 214, 224, 631, 862], "truncat": [40, 220, 266, 325, 346, 448, 800, 884, 1006], "faschingb": 40, "echo": [40, 133, 184, 220, 248, 288, 486, 611, 731, 740, 758, 785, 786, 789, 790, 798, 802, 812, 821, 824, 828, 837, 855, 857, 862, 863, 864, 865, 885, 887, 896, 898, 899, 911, 914, 920, 929, 1095], "success": [40, 161, 201, 207, 217, 220, 386, 415, 644, 697, 736, 740, 830, 1022], "failur": [40, 41, 201, 207, 217, 220, 232, 237, 266, 287, 395, 405, 411, 425, 483, 487, 1093, 1094, 1101, 1102, 1105], "renam": [40, 48, 55, 61, 64, 97, 111, 125, 128, 191, 238, 247, 248, 268, 269, 522, 674, 711, 726, 727, 788, 825, 838, 854, 950, 1071], "most": [41, 42, 55, 57, 60, 63, 85, 128, 131, 132, 134, 135, 138, 143, 154, 156, 162, 164, 168, 170, 192, 201, 204, 207, 208, 217, 218, 220, 224, 230, 250, 252, 266, 287, 323, 331, 360, 363, 370, 385, 387, 393, 398, 399, 403, 404, 414, 428, 441, 484, 544, 545, 583, 635, 679, 684, 687, 693, 736, 744, 758, 763, 783, 785, 786, 789, 796, 820, 851, 855, 862, 864, 876, 884, 890, 903, 918, 926, 929, 930, 932, 953, 954, 955, 960, 967, 968, 969, 975, 976, 984, 986, 987, 988, 991, 994, 997, 998, 1002, 1004, 1007, 1008, 1013, 1055, 1056, 1064, 1068, 1072, 1076, 1080, 1081, 1087, 1089, 1093, 1094, 1100, 1115, 1116, 1118], "somebodi": [41, 139, 147, 160, 194, 337, 394, 415, 513, 537, 589, 649, 655, 666, 697, 748, 766, 920], "concis": [41, 131, 164, 168, 218, 303, 304, 414, 758, 1056], "longer": [41, 147, 920, 981, 1113], "necessari": [41, 59, 125, 133, 139, 143, 152, 161, 175, 191, 194, 251, 254, 327, 337, 369, 409, 411, 415, 427, 473, 532, 536, 604, 630, 631, 665, 675, 687, 699, 754, 758, 793, 862, 864, 865, 880, 918, 929, 949, 976, 983, 987, 1011, 1066, 1071, 1093], "gosh": [41, 128, 348, 393, 395, 589, 672, 908, 954, 960, 987], "hungarian": [41, 389], "notat": [41, 159, 199, 215, 220, 225, 266, 389, 702, 863, 969], "userdb": [41, 45, 46, 49, 51, 52, 54, 55, 194, 196, 210, 218, 265, 276, 612, 620, 621, 622, 624, 711, 1045, 1046, 1047, 1048, 1053], "bolt": [41, 194], "onto": [41, 57, 60, 142, 153, 194, 210, 451, 533, 610, 624, 687, 711, 758, 843, 855, 863, 882, 914, 937, 944], "unclear": [41, 476, 930], "semant": [41, 47, 79, 132, 156, 236, 237, 239, 257, 380, 394, 395, 449, 530, 583, 589, 628, 635, 667, 683, 686, 687, 688, 689, 692, 700, 708, 710, 711, 717, 722, 750, 929, 930, 987, 1068, 1113], "backingstor": [41, 51, 54, 711], "mangl": [41, 191, 192, 205, 222, 981, 1086], "prefix": [41, 59, 128, 143, 201, 205, 207, 217, 220, 266, 295, 541, 571, 627, 758, 944, 946, 953, 975, 976, 1001, 1008, 1064, 1095], "m_": 41, "enough": [41, 135, 139, 156, 164, 214, 224, 257, 266, 313, 337, 428, 604, 862, 875, 903, 933, 955, 972, 980, 1001, 1072, 1077, 1084, 1087, 1094, 1115], "take": [41, 46, 84, 100, 108, 109, 125, 126, 131, 132, 133, 136, 137, 138, 139, 142, 147, 149, 152, 153, 155, 160, 164, 165, 170, 171, 172, 192, 205, 210, 212, 220, 224, 230, 254, 287, 288, 293, 302, 332, 369, 372, 389, 391, 398, 400, 404, 405, 409, 410, 412, 427, 428, 451, 452, 454, 455, 473, 483, 486, 499, 505, 519, 531, 538, 542, 545, 547, 585, 609, 627, 632, 639, 640, 649, 677, 679, 685, 689, 699, 721, 748, 758, 784, 785, 786, 862, 892, 920, 944, 950, 954, 958, 980, 996, 997, 1013, 1020, 1023, 1025, 1029, 1030, 1031, 1034, 1035, 1036, 1038, 1040, 1050, 1055, 1063, 1067, 1072, 1077, 1086, 1088, 1095], "dogmat": [41, 210, 320, 1072], "switch": [41, 43, 52, 56, 57, 60, 108, 109, 111, 112, 133, 137, 139, 151, 152, 193, 201, 207, 217, 218, 220, 288, 289, 291, 308, 311, 314, 344, 358, 362, 364, 371, 377, 381, 384, 386, 388, 397, 401, 404, 406, 407, 411, 414, 427, 441, 475, 476, 477, 527, 588, 628, 629, 667, 708, 710, 711, 738, 756, 763, 772, 775, 777, 791, 795, 855, 858, 916, 949, 1110, 1114], "bool": [41, 48, 51, 53, 54, 175, 182, 204, 207, 210, 212, 214, 217, 220, 227, 230, 245, 249, 250, 252, 256, 266, 419, 421, 488, 489, 493, 495, 500, 529, 531, 545, 546, 547, 548, 549, 567, 570, 576, 585, 632, 644, 645, 646, 647, 655, 658, 662, 669, 699, 701, 711, 771, 778, 916, 922, 929, 987, 1013, 1078, 1083], "wear": [41, 129, 133], "incorrect": [41, 201, 207, 217, 220, 224, 348, 367, 1084], "metaphor": 41, "But": [41, 132, 133, 134, 137, 148, 184, 193, 331, 337, 366, 369, 375, 378, 391, 393, 399, 409, 528, 529, 537, 542, 543, 544, 562, 580, 598, 599, 637, 640, 676, 685, 689, 691, 711, 740, 742, 758, 768, 785, 786, 840, 854, 862, 863, 864, 871, 885, 893, 895, 900, 908, 912, 935, 949, 951, 972, 975, 981, 1061, 1067], "support": [41, 76, 133, 135, 139, 143, 152, 156, 168, 180, 182, 201, 204, 207, 212, 214, 217, 220, 224, 227, 242, 245, 252, 298, 367, 391, 405, 411, 528, 529, 531, 635, 687, 691, 705, 709, 714, 750, 840, 862, 863, 864, 874, 926, 932, 960, 968, 975, 981, 998, 1011, 1061, 1063, 1081, 1100], "copy_process": 41, "law": [41, 184, 299, 342, 387, 955, 1083], "tdd": [41, 111, 163, 168, 178, 218, 260, 276, 321, 1093], "until": [41, 53, 95, 96, 97, 100, 103, 108, 109, 111, 120, 122, 132, 134, 136, 138, 183, 192, 204, 223, 241, 261, 359, 365, 390, 393, 487, 547, 611, 655, 661, 699, 701, 726, 746, 756, 766, 768, 774, 791, 795, 802, 818, 830, 837, 879, 880, 881, 882, 905, 919, 926, 930, 959, 960, 981, 989, 991, 1056], "fail": [41, 42, 128, 132, 134, 142, 143, 147, 159, 164, 194, 220, 237, 269, 287, 313, 412, 415, 425, 434, 483, 614, 635, 637, 644, 649, 709, 711, 736, 758, 837, 854, 864, 885, 890, 893, 895, 910, 911, 912, 929, 949, 953, 955, 964, 1006, 1022, 1081, 1094, 1095, 1099, 1101, 1103], "suffici": [41, 147, 152, 164, 288, 536, 564, 605, 609, 620, 628, 731, 840, 930, 978, 980, 1008, 1094], "pass": [41, 42, 46, 53, 55, 56, 61, 108, 109, 152, 160, 164, 169, 170, 171, 173, 180, 191, 193, 197, 201, 207, 210, 212, 214, 217, 220, 224, 227, 230, 232, 233, 237, 242, 245, 250, 251, 254, 262, 266, 287, 313, 333, 335, 337, 348, 369, 373, 376, 378, 395, 425, 427, 432, 434, 473, 483, 484, 485, 486, 488, 489, 529, 539, 540, 546, 547, 548, 549, 558, 609, 615, 639, 669, 677, 682, 686, 689, 705, 706, 707, 724, 761, 802, 862, 888, 891, 902, 911, 934, 951, 953, 954, 955, 956, 968, 969, 970, 972, 978, 996, 998, 1006, 1008, 1044, 1055, 1076, 1093, 1100], "current": [41, 97, 107, 111, 118, 120, 133, 134, 135, 137, 139, 142, 143, 147, 172, 194, 201, 207, 217, 220, 238, 245, 247, 248, 266, 268, 269, 294, 313, 316, 321, 370, 403, 411, 427, 429, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 527, 617, 621, 686, 687, 700, 710, 711, 727, 758, 766, 780, 784, 785, 786, 787, 788, 791, 792, 793, 795, 801, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 818, 819, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 840, 842, 854, 863, 877, 883, 884, 885, 893, 895, 900, 902, 909, 912, 915, 916, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 954, 959, 980, 983, 991, 994, 1119], "initi": [41, 43, 61, 108, 109, 111, 114, 131, 132, 135, 139, 147, 149, 159, 164, 168, 173, 179, 188, 192, 193, 203, 204, 205, 220, 224, 227, 230, 235, 245, 252, 257, 259, 262, 266, 325, 327, 334, 378, 383, 393, 397, 401, 403, 406, 407, 429, 431, 449, 454, 455, 468, 469, 473, 475, 476, 477, 478, 479, 480, 483, 505, 519, 522, 527, 531, 532, 533, 535, 540, 542, 544, 546, 548, 563, 564, 565, 570, 583, 588, 609, 614, 616, 617, 618, 623, 624, 638, 649, 667, 675, 686, 687, 689, 701, 708, 710, 711, 716, 719, 721, 722, 729, 736, 744, 754, 758, 785, 786, 794, 819, 849, 863, 864, 879, 882, 900, 903, 916, 925, 926, 932, 967, 970, 1000, 1061, 1068, 1086, 1113, 1118], "mess": [41, 132, 218, 237, 239, 283, 629, 667, 710, 711, 987, 1000, 1094], "roughli": [41, 63, 134, 139, 398, 783, 916, 925], "took": [41, 131, 138, 168, 1021], "our": [41, 51, 57, 60, 68, 75, 102, 111, 114, 133, 134, 136, 138, 143, 147, 154, 168, 183, 184, 193, 194, 208, 210, 248, 259, 261, 302, 395, 398, 409, 420, 428, 432, 437, 449, 453, 470, 481, 486, 620, 623, 731, 738, 758, 862, 863, 888, 891, 916, 926, 930, 932, 944, 947, 950, 956, 1053, 1061, 1067], "craftsmanship": [41, 43], "anoth": [41, 61, 76, 131, 132, 133, 134, 138, 139, 142, 143, 147, 154, 156, 161, 164, 170, 171, 194, 201, 207, 210, 217, 222, 224, 230, 245, 248, 251, 254, 257, 339, 357, 358, 372, 380, 392, 399, 410, 427, 428, 431, 436, 451, 454, 455, 468, 469, 473, 478, 487, 539, 542, 543, 545, 627, 632, 655, 679, 687, 691, 701, 746, 758, 784, 785, 786, 791, 800, 802, 814, 851, 862, 864, 874, 875, 889, 903, 905, 917, 925, 930, 947, 950, 951, 954, 955, 972, 979, 987, 1003, 1007, 1012, 1067, 1075, 1081, 1084, 1093, 1116], "If": [41, 43, 45, 51, 53, 54, 55, 87, 111, 131, 132, 133, 134, 137, 138, 139, 147, 148, 156, 164, 201, 207, 214, 217, 220, 224, 232, 237, 239, 248, 254, 266, 302, 307, 348, 357, 387, 399, 419, 421, 427, 477, 483, 484, 499, 529, 534, 598, 605, 621, 622, 635, 640, 686, 690, 691, 699, 701, 711, 731, 736, 750, 758, 763, 775, 784, 793, 797, 800, 818, 819, 827, 830, 854, 855, 862, 863, 864, 865, 871, 885, 893, 895, 903, 908, 912, 925, 947, 948, 960, 968, 970, 980, 987, 995, 997, 1008, 1033, 1061, 1067, 1081, 1094, 1113], "isol": [41, 52, 162, 164, 168, 218, 232, 862, 916, 917, 967, 1056, 1071, 1088, 1104, 1106], "wrong": [41, 76, 132, 134, 257, 348, 370, 389, 605, 691, 731, 888, 903, 917, 951, 955, 967, 986, 1050, 1061], "oracl": [41, 1068], "conduct": [41, 1093], "serious": 41, "safeti": [41, 210, 391, 394, 397, 401, 406, 407, 410, 505, 628, 698, 711, 717, 855, 929, 930, 953], "architectur": [41, 106, 129, 139, 191, 319, 343, 370, 387, 410, 691, 719, 855, 882, 932, 933, 942, 944, 1116], "treat": [41, 79, 224, 335, 365, 800], "them": [41, 61, 64, 108, 109, 125, 129, 131, 132, 134, 137, 138, 139, 142, 143, 147, 152, 153, 154, 161, 164, 168, 169, 171, 173, 189, 191, 194, 205, 229, 232, 241, 261, 271, 365, 387, 418, 429, 433, 449, 485, 546, 548, 549, 602, 609, 611, 614, 627, 677, 691, 758, 784, 790, 791, 797, 800, 825, 837, 864, 871, 916, 917, 926, 929, 932, 933, 944, 949, 954, 955, 956, 957, 978, 980, 1002, 1034, 1037, 1056, 1062, 1072, 1083, 1100], "carefulli": [41, 134, 147, 395, 454, 644, 1062], "fast": [41, 139, 147, 171, 193, 208, 210, 224, 233, 399, 505, 677, 691, 1004, 1089, 1125], "independ": [41, 61, 212, 224, 337, 370, 542, 842, 856, 864, 934], "self": [41, 57, 60, 61, 132, 133, 143, 151, 152, 159, 165, 168, 170, 188, 191, 192, 204, 205, 207, 214, 217, 218, 222, 224, 230, 233, 245, 252, 262, 266, 272, 403, 411, 529, 531, 635, 637, 638, 672, 685, 691, 697, 719, 750, 754, 913, 949, 953, 954, 955, 964, 968, 969, 972, 973, 974, 975, 976, 977, 987, 1080, 1081, 1086, 1094, 1099, 1100, 1102, 1113], "valid": [41, 131, 134, 142, 220, 223, 266, 313, 368, 375, 391, 395, 554, 562, 586, 621, 635, 672, 675, 701, 771, 986, 987, 1001, 1002, 1018, 1023, 1080, 1081, 1088], "first": [41, 51, 59, 61, 85, 122, 129, 131, 134, 135, 137, 138, 139, 143, 147, 152, 162, 164, 171, 191, 204, 205, 212, 214, 218, 220, 224, 248, 250, 261, 266, 287, 293, 299, 323, 331, 354, 369, 370, 375, 383, 399, 400, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 425, 475, 516, 522, 527, 529, 535, 537, 541, 560, 561, 562, 566, 585, 588, 620, 622, 627, 649, 656, 657, 676, 677, 679, 705, 706, 707, 711, 725, 728, 735, 739, 749, 758, 760, 762, 767, 773, 776, 779, 796, 797, 798, 803, 814, 818, 824, 840, 842, 845, 849, 851, 854, 855, 862, 863, 881, 885, 905, 913, 916, 919, 925, 933, 934, 948, 949, 950, 951, 955, 956, 960, 967, 969, 973, 981, 982, 983, 984, 986, 987, 996, 997, 1000, 1006, 1007, 1013, 1036, 1045, 1051, 1053, 1062, 1067, 1075, 1094, 1100, 1113, 1118], "debug": [41, 132, 133, 161, 191, 201, 207, 217, 220, 271, 275, 302, 307, 320, 370, 396, 399, 403, 404, 405, 413, 415, 416, 432, 510, 655, 672, 711, 716, 738, 740, 800, 818, 884, 908, 929, 1006, 1088, 1111, 1114, 1119, 1128], "fact": [41, 51, 132, 133, 164, 367, 375, 399, 409, 758, 803, 888, 926, 1068], "hard": [41, 68, 76, 83, 111, 122, 132, 134, 137, 138, 143, 148, 153, 160, 164, 171, 193, 208, 214, 224, 238, 247, 248, 268, 269, 348, 367, 396, 409, 437, 513, 709, 711, 758, 788, 794, 797, 838, 840, 854, 857, 863, 944, 953, 955, 975, 992, 1006, 1058, 1082, 1113, 1129], "principl": [41, 51, 52, 81, 104, 128, 134, 143, 258, 259, 260, 261, 410, 433, 434, 711, 758, 862, 864, 875, 935, 1067], "mayb": [41, 43, 55, 56, 59, 61, 76, 111, 122, 125, 132, 133, 134, 137, 138, 147, 160, 164, 191, 207, 208, 258, 259, 260, 261, 276, 305, 308, 310, 311, 412, 431, 432, 433, 465, 518, 519, 589, 637, 707, 863, 947, 969, 1102], "overview": [41, 96, 111, 128, 139, 156, 172, 174, 189, 193, 205, 238, 239, 247, 251, 254, 257, 259, 268, 269, 316, 320, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 547, 643, 654, 667, 678, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 866, 867, 868, 869, 870, 877, 878, 881, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943, 947, 979, 1056, 1113, 1114, 1116, 1118], "respons": [41, 51, 54, 87, 117, 131, 142, 147, 195, 409, 451, 465, 473, 531, 539, 687, 711, 754, 766, 863, 864, 887, 916, 917, 983, 1063, 1118], "googl": [42, 127, 132, 139, 141, 153, 156, 159, 160, 164, 165, 168, 189, 194, 322, 484, 685, 686, 847, 981, 1056, 1100, 1102, 1131], "cloner": 42, "init": [42, 114, 131, 133, 149, 153, 230, 237, 239, 333, 360, 458, 459, 481, 484, 512, 529, 547, 565, 713, 721, 726, 746, 748, 760, 794, 846, 930], "cpp": [42, 48, 95, 111, 143, 158, 168, 193, 194, 210, 237, 248, 257, 259, 322, 413, 414, 415, 420, 427, 428, 429, 431, 432, 434, 436, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 529, 530, 531, 532, 533, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 549, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 607, 611, 616, 617, 618, 619, 620, 621, 622, 623, 627, 632, 634, 637, 638, 639, 642, 644, 649, 655, 664, 665, 666, 669, 670, 671, 672, 673, 674, 676, 677, 679, 681, 685, 686, 687, 688, 689, 690, 699, 701, 705, 706, 707, 709, 862, 892, 896, 899, 911, 913, 916, 932], "assert_eq": [42, 427, 429, 432, 436, 449, 476, 477, 483, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 500, 501, 502, 503, 504, 522, 529, 530, 531, 542, 543, 545, 546, 547, 548, 549, 607, 632, 634, 637, 638, 639, 670, 681, 685, 686, 687, 688, 690, 705, 706, 707, 709, 1100, 1105], "test_f": [42, 451, 486, 487, 709, 1105], "simplefixtur": 42, "public": [42, 53, 99, 100, 105, 111, 129, 142, 147, 184, 192, 205, 233, 238, 247, 248, 256, 262, 268, 269, 299, 302, 307, 383, 419, 420, 421, 423, 428, 430, 434, 436, 439, 440, 441, 451, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 473, 486, 487, 499, 513, 519, 528, 529, 530, 532, 533, 534, 536, 537, 538, 539, 540, 541, 543, 544, 545, 552, 555, 570, 571, 588, 598, 599, 601, 602, 604, 605, 613, 614, 619, 621, 622, 627, 630, 631, 632, 633, 634, 637, 638, 640, 649, 651, 652, 653, 655, 657, 658, 661, 662, 663, 664, 665, 666, 670, 671, 672, 674, 685, 686, 687, 690, 691, 699, 701, 709, 711, 722, 726, 787, 788, 793, 807, 813, 854, 866, 867, 868, 869, 870, 875, 976, 981, 1086, 1105], "myfirstsuit": 42, "test_find": 42, "wtf": [42, 51, 111, 170, 201, 206, 207, 210, 212, 230, 269, 522, 537, 711, 854, 879, 883, 895, 929, 931, 954], "tallk": 42, "morph": [42, 61, 159, 168, 193, 194, 259, 507, 519, 522, 525, 531, 627, 679, 760, 958], "fixtur": [42, 159, 168, 260, 261, 276, 279, 310, 440, 451, 487, 711, 1098, 1131], "trivial": [42, 132, 143, 274, 349, 365, 522, 539, 635, 640, 691, 763, 771, 864, 880, 916, 1115], "tempfil": [42, 953], "crap": [42, 133, 208, 250, 395, 411, 414, 589, 628, 864, 929], "null": [42, 61, 133, 134, 135, 150, 175, 191, 204, 220, 227, 230, 245, 252, 262, 266, 324, 337, 344, 372, 383, 393, 398, 411, 486, 542, 641, 716, 722, 729, 754, 789, 798, 800, 801, 818, 833, 840, 882, 887, 894, 901, 903, 905, 907, 913, 916, 917, 922, 925, 929], "deriv": [42, 105, 154, 208, 220, 289, 313, 487, 505, 531, 601, 602, 604, 605, 666, 674, 955, 968, 1105], "seminar": [43, 115], "psycho": 43, "rule": [43, 133, 139, 164, 214, 220, 224, 257, 283, 310, 325, 344, 346, 347, 348, 363, 369, 387, 398, 399, 400, 402, 410, 412, 437, 449, 454, 555, 601, 635, 638, 642, 644, 664, 690, 691, 797, 818, 879, 955, 978, 986, 987, 997, 1006, 1072, 1120], "dont": [43, 224, 409, 731], "scenario": [43, 134, 147, 156, 164, 168, 332, 453, 605, 699, 917, 918, 925], "robert": [43, 437], "martin": [43, 409, 410, 437], "someon": [43, 164, 205, 220, 227, 230, 261, 309, 544, 699, 750, 815, 821, 842, 864, 888, 932, 980], "mistak": [43, 132, 138, 139, 189, 205, 229, 862, 1056, 1072], "kill": [43, 133, 134, 210, 818, 872, 901, 920, 929, 930, 959, 1119], "peopl": [43, 61, 129, 132, 134, 136, 137, 139, 147, 152, 164, 193, 227, 320, 409, 437, 455, 644, 758, 797, 964, 980, 1008, 1063, 1068], "polit": [43, 677], "thei": [43, 53, 63, 76, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 152, 154, 156, 160, 172, 194, 201, 205, 207, 210, 217, 220, 224, 266, 274, 313, 339, 345, 365, 393, 396, 399, 405, 409, 410, 414, 423, 428, 429, 449, 454, 455, 483, 485, 505, 522, 532, 537, 563, 567, 599, 627, 628, 631, 638, 639, 686, 687, 693, 717, 731, 750, 758, 783, 793, 797, 819, 855, 862, 863, 864, 875, 900, 929, 930, 935, 950, 960, 968, 975, 978, 1028, 1051, 1058, 1061, 1062, 1072, 1075, 1078, 1093, 1099, 1115, 1118], "regul": 43, "ethic": 43, "everi": [43, 51, 57, 60, 61, 76, 87, 108, 109, 125, 132, 138, 168, 191, 220, 261, 334, 391, 405, 409, 432, 437, 453, 472, 473, 542, 552, 604, 626, 628, 633, 709, 729, 742, 758, 783, 791, 793, 795, 796, 812, 819, 821, 863, 878, 913, 916, 929, 930, 949, 951, 960, 996, 1014, 1025, 1036, 1062, 1100, 1115], "particular": [43, 131, 143, 164, 378, 403, 429, 453, 505, 709, 804, 979, 980], "electr": 43, "seem": [43, 120, 131, 133, 134, 153, 258, 428, 862, 864, 929, 1115], "adher": [43, 800], "immedi": [43, 61, 132, 133, 138, 139, 210, 251, 254, 257, 259, 288, 370, 580, 694, 699, 740, 750, 754, 855, 905, 914, 917, 919, 1000, 1100], "survei": [43, 153], "had": [43, 131, 133, 134, 138, 139, 143, 147, 152, 164, 168, 197, 199, 218, 339, 378, 449, 516, 528, 613, 627, 752, 785, 786, 797, 822, 862, 875, 946, 980, 987, 1006, 1078, 1082], "life": [43, 128, 139, 144, 147, 150, 152, 160, 534, 664, 685, 700, 710, 711, 758, 797, 854, 895, 909, 915, 981, 1002, 1059], "accomplish": [43, 55, 76, 172, 258, 260, 261, 395, 410, 862], "befor": [43, 128, 132, 133, 135, 136, 137, 139, 142, 147, 152, 168, 171, 175, 193, 220, 236, 237, 239, 260, 261, 266, 279, 283, 327, 335, 336, 345, 365, 414, 486, 516, 522, 561, 587, 602, 628, 640, 655, 667, 672, 673, 683, 687, 688, 693, 694, 699, 701, 702, 709, 710, 711, 722, 736, 746, 752, 758, 784, 820, 855, 864, 903, 918, 920, 932, 955, 960, 978, 1021, 1046, 1048, 1052, 1061, 1077, 1081, 1084, 1094, 1095, 1101], "formal": [43, 142, 156, 193, 194, 476, 1094], "googletest": [43, 63, 95, 159, 161, 162, 194, 237, 239, 274, 425, 434, 470, 483, 485, 486, 547, 685, 686, 687, 711, 712, 1100, 1102, 1115], "messag": [43, 127, 129, 137, 138, 147, 150, 156, 162, 170, 171, 197, 201, 204, 207, 217, 220, 227, 230, 245, 252, 260, 261, 262, 266, 290, 302, 307, 410, 413, 415, 434, 539, 555, 614, 644, 649, 669, 671, 672, 681, 691, 699, 711, 733, 758, 791, 795, 800, 854, 876, 895, 905, 909, 984, 998, 1008, 1050, 1095, 1099, 1101, 1127, 1128, 1129], "saniti": [43, 401, 406, 407, 410, 414, 418, 544, 629, 667, 708, 710, 711], "perform": [43, 132, 138, 147, 149, 171, 190, 191, 220, 261, 308, 349, 352, 375, 382, 387, 395, 398, 399, 402, 405, 406, 407, 413, 522, 562, 580, 583, 605, 626, 640, 682, 711, 742, 920, 937, 947, 948, 1006, 1093, 1111, 1114], "delici": [43, 51], "fearlessli": [43, 51], "backlog": [43, 44, 45, 49, 53, 54, 711], "Or": [43, 44, 45, 49, 53, 54, 132, 239, 283, 394, 410, 513, 641, 667, 678, 710, 711, 849, 875, 885, 911, 986, 1000, 1080, 1084], "Will": [43, 44, 45, 49, 53, 54, 132, 165, 224, 288, 711, 719, 932, 998, 1088, 1102, 1108, 1127], "high": [44, 51, 153, 193, 207, 224, 409, 437, 460, 473, 477, 481, 685, 687, 702, 740, 752, 756, 768, 777], "speed": [44, 51, 122, 127, 132, 201, 205, 207, 217, 220, 224, 400, 690, 752, 758, 918, 920, 1060, 1061], "hype": 44, "we": [44, 45, 48, 49, 53, 54, 57, 59, 60, 66, 112, 114, 122, 128, 131, 132, 134, 135, 136, 137, 138, 139, 143, 147, 148, 151, 152, 153, 154, 155, 156, 160, 161, 164, 168, 169, 170, 171, 172, 174, 183, 184, 191, 192, 193, 194, 198, 201, 204, 205, 207, 208, 210, 237, 239, 241, 248, 251, 254, 256, 258, 260, 261, 288, 305, 308, 309, 313, 324, 339, 350, 357, 365, 378, 387, 389, 393, 395, 398, 403, 410, 412, 420, 421, 427, 428, 429, 432, 434, 436, 439, 448, 449, 453, 454, 470, 471, 472, 473, 481, 484, 485, 486, 516, 522, 531, 543, 567, 598, 602, 619, 620, 621, 622, 623, 627, 638, 649, 655, 681, 682, 687, 690, 701, 711, 719, 722, 726, 727, 731, 733, 736, 754, 758, 760, 766, 774, 785, 786, 800, 801, 815, 821, 822, 837, 855, 862, 863, 864, 871, 875, 880, 881, 882, 888, 889, 890, 891, 903, 916, 925, 942, 946, 947, 948, 956, 975, 980, 1006, 1008, 1012, 1014, 1043, 1050, 1051, 1052, 1056, 1061, 1062, 1063, 1067, 1074, 1075, 1081, 1084, 1101, 1102, 1118], "did": [44, 133, 134, 136, 138, 139, 142, 143, 151, 160, 164, 171, 256, 389, 393, 409, 434, 472, 620, 689, 691, 706, 731, 736, 758, 797, 855, 866, 875, 956, 1113], "consequ": [44, 131, 132, 251, 254, 369, 390, 393, 394, 437, 888, 975, 1078, 1113], "unsign": [44, 205, 210, 341, 343, 351, 380, 383, 387, 395, 441, 456, 471, 485, 486, 487, 537, 607, 608, 617, 665, 699, 701, 714, 717, 722, 729, 738, 740, 742, 748, 754, 763, 768, 772, 884, 925, 926, 1110, 1111], "introduc": [44, 56, 76, 95, 193, 210, 218, 259, 274, 391, 399, 411, 427, 432, 454, 472, 473, 474, 475, 505, 527, 613, 711, 777, 929, 958, 984, 998, 1063, 1115], "throw": [44, 136, 139, 210, 429, 453, 454, 458, 464, 465, 467, 468, 469, 487, 505, 583, 621, 663, 684, 687, 698, 701, 1105], "notfounderror": 44, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 44, "cluster_clean_cod": [44, 45, 49, 51, 53, 54, 711], "cluster_clean_code_bug": [44, 45, 51, 53, 54, 711], "clean_code_bugs_find_error": [44, 45, 51, 711], "twice": [45, 51, 53, 54, 55, 132, 331, 370, 392, 412, 635, 638, 697, 711, 778, 818, 855, 871, 903, 948], "crash": [45, 51, 61, 108, 109, 130, 132, 133, 134, 137, 189, 191, 201, 207, 217, 220, 320, 360, 367, 453, 537, 564, 609, 685, 711, 916, 930, 1056], "found": [45, 51, 106, 107, 119, 128, 131, 143, 152, 164, 197, 201, 204, 207, 210, 212, 214, 217, 220, 230, 245, 252, 266, 274, 288, 302, 396, 405, 415, 417, 425, 463, 467, 468, 469, 475, 486, 488, 492, 493, 494, 522, 527, 567, 570, 573, 583, 587, 588, 612, 620, 622, 624, 632, 706, 711, 729, 790, 793, 800, 847, 864, 932, 935, 944, 949, 955, 963, 972, 1002, 1034, 1060, 1063, 1103, 1115], "clean_code_bugs_overwrite_store_content_on_read": [45, 51, 53, 54, 711], "clean_code_bugs_overwrite_existing_fil": [45, 51, 53, 54, 711], "explicitli": [46, 133, 134, 138, 164, 204, 214, 224, 257, 347, 348, 366, 404, 410, 454, 531, 534, 542, 583, 632, 635, 638, 691, 789, 917, 926, 954, 964, 983, 1072, 1080], "solut": [46, 63, 111, 137, 139, 147, 148, 156, 158, 164, 183, 193, 194, 199, 202, 205, 210, 215, 221, 237, 240, 251, 260, 261, 265, 271, 283, 369, 370, 373, 392, 395, 413, 426, 453, 475, 505, 527, 533, 534, 554, 591, 593, 595, 602, 616, 624, 639, 644, 649, 675, 691, 711, 819, 820, 837, 900, 905, 918, 919, 935, 960, 996, 1027, 1039, 1072, 1116], "force_overwrit": 46, "descriptor": [46, 132, 156, 188, 220, 224, 245, 266, 309, 534, 717, 738, 774, 794, 800, 801, 858, 880, 881, 882, 926], "mani": [47, 51, 54, 57, 60, 87, 132, 134, 138, 139, 156, 161, 164, 180, 191, 212, 222, 227, 248, 252, 256, 257, 259, 265, 288, 309, 313, 337, 349, 351, 360, 375, 389, 391, 396, 411, 412, 424, 425, 428, 431, 436, 439, 478, 505, 552, 562, 581, 583, 602, 614, 626, 627, 635, 655, 676, 681, 689, 697, 711, 717, 719, 736, 744, 750, 754, 758, 784, 794, 795, 797, 798, 851, 863, 881, 882, 901, 911, 914, 929, 930, 932, 942, 951, 953, 955, 960, 969, 979, 984, 987, 990, 994, 1002, 1006, 1008, 1012, 1061, 1063, 1065, 1067, 1068, 1072, 1081, 1100, 1113, 1116], "overwrit": [47, 107, 453, 454, 467, 475, 492, 494, 527, 537, 583, 585, 614, 711, 758, 820, 825, 837, 889, 1004], "present": [47, 59, 129, 135, 139, 143, 147, 152, 165, 220, 266, 274, 421, 533, 754, 758, 793, 864, 875, 894, 955, 1038, 1081, 1115], "continu": [48, 51, 61, 87, 97, 104, 108, 109, 125, 133, 142, 143, 155, 164, 165, 168, 177, 182, 183, 184, 213, 218, 224, 230, 240, 299, 363, 364, 370, 371, 377, 381, 384, 388, 393, 397, 401, 406, 407, 409, 411, 414, 415, 432, 546, 548, 549, 609, 629, 637, 667, 706, 707, 708, 709, 710, 711, 855, 857, 861, 867, 890, 891, 929, 930, 935, 946, 953, 960, 964, 997, 1000, 1018, 1063, 1081, 1100], "expected_cont": 48, "fill": [48, 134, 135, 147, 169, 220, 221, 266, 351, 627, 631, 676, 686, 729, 754, 758, 824, 881, 958], "strategi": [48, 204, 385, 863, 1013, 1093], "hurri": [48, 370], "read_fil": 48, "compar": [48, 111, 192, 194, 205, 220, 261, 266, 348, 390, 404, 405, 414, 483, 529, 686, 866, 901, 998, 1003, 1027, 1031, 1061, 1086], "binaryfil": 48, "per": [48, 76, 138, 165, 293, 313, 343, 382, 387, 476, 748, 754, 768, 772, 777, 778, 790, 794, 814, 840, 907, 916, 933, 1106, 1131], "doesn": [48, 134, 137, 245, 365, 367, 370, 385, 399, 681, 717, 778, 785, 786, 820, 824, 837, 933, 944, 1000], "belong": [48, 161, 164, 337, 357, 383, 410, 505, 529, 543, 545, 803, 811, 890, 971, 985], "test_write_csv": 48, "test_read_csv": [48, 1053], "ah": [48, 57, 60, 138, 154, 191, 193, 207, 584, 932, 1008, 1075], "altern": [49, 51, 53, 54, 61, 63, 66, 76, 81, 131, 132, 139, 165, 184, 210, 271, 344, 421, 529, 538, 552, 563, 566, 635, 684, 690, 711, 758, 797, 818, 858, 862, 864, 876, 884, 890, 901, 907, 925, 932, 980, 1000, 1003, 1080, 1084, 1088, 1095, 1105, 1108, 1124, 1125, 1127, 1130], "cluster_clean_code_featur": [49, 51, 53, 54, 711], "clean_code_features_other_index": [49, 51, 711], "clean_code_features_csv": [49, 51, 53, 54, 711], "establish": [51, 69, 172, 184, 248, 260, 261, 279, 299, 409, 758, 916, 1116], "were": [51, 125, 132, 134, 138, 147, 164, 168, 320, 369, 425, 528, 537, 538, 564, 631, 670, 785, 786, 864, 891, 946, 954, 978, 987, 1006, 1011, 1072, 1078, 1113], "occas": [51, 87, 133, 686], "ourselv": [51, 164, 855], "gather": [51, 139, 171, 260, 261, 279, 287, 403, 405, 1040], "wreak": [51, 108, 109, 385, 609], "havoc": [51, 108, 109, 385, 609], "shoehorn": 51, "violat": [51, 132, 409, 437, 665, 687, 772, 916, 930], "nearli": [51, 164, 170, 387, 908], "solid": [51, 128, 144, 257, 259, 410, 437, 1111, 1112, 1126, 1127, 1129, 1130], "chanc": [51, 132, 134, 169, 389, 409, 713, 758, 883, 1118], "clean": [51, 61, 115, 147, 199, 218, 319, 387, 398, 399, 402, 408, 529, 627, 712, 932, 934, 944, 953, 1006, 1055], "cluster_clean_code_refactor": [51, 53, 54, 711], "clean_code_refactoring_backingstore_interfac": [51, 54, 711], "clean_code_refactoring_backingstore_monolith": [51, 53, 54, 711], "clean_code_refactoring_store_enum_switch": [51, 53, 54, 711], "clean_code_refactoring_pass_store_in_ctor": [51, 54, 711], "now": [52, 59, 131, 132, 133, 134, 135, 136, 138, 139, 147, 151, 160, 170, 180, 197, 204, 210, 214, 224, 232, 252, 256, 277, 288, 289, 302, 365, 378, 393, 398, 423, 429, 436, 449, 454, 476, 477, 484, 543, 567, 570, 576, 580, 588, 631, 682, 687, 702, 716, 736, 758, 766, 768, 774, 790, 793, 855, 862, 863, 864, 890, 891, 899, 944, 946, 951, 954, 969, 972, 996, 1051, 1061, 1063, 1084, 1094, 1113], "violatin": 52, "respect": [52, 57, 60, 63, 125, 133, 147, 194, 256, 258, 294, 341, 389, 409, 454, 472, 531, 538, 601, 635, 686, 687, 789, 797, 862, 916, 930, 975], "mainli": [53, 132, 168, 257, 266, 583, 709, 898, 958], "bugfix": 53, "ongo": [53, 918], "scene": [53, 932, 975], "pleas": [53, 111, 133, 134, 137, 139, 143, 160, 164, 168, 169, 171, 172, 173, 174, 184, 210, 237, 239, 248, 269, 293, 335, 369, 399, 487, 544, 546, 547, 548, 549, 797, 855, 863, 864, 879, 908, 926, 934, 935, 980, 1085], "wait": [53, 70, 71, 72, 76, 81, 85, 121, 132, 133, 134, 135, 136, 138, 179, 288, 599, 627, 694, 702, 711, 735, 750, 756, 760, 763, 766, 768, 791, 794, 802, 854, 855, 881, 883, 887, 899, 911, 914, 917, 924, 926, 929, 1004, 1075, 1100, 1118, 1126], "unnecessarili": [53, 67, 926], "conflict": [53, 73, 75, 259, 260, 261, 279, 335, 386, 538, 628, 700, 710, 711, 714, 717, 727, 854, 863, 895, 903, 909, 929, 963, 1096], "rip": [53, 135, 411, 470, 916, 1074], "detail": [53, 82, 129, 134, 137, 142, 146, 147, 159, 165, 179, 190, 191, 193, 194, 201, 207, 217, 221, 222, 224, 228, 250, 261, 302, 409, 414, 437, 474, 484, 486, 534, 686, 736, 818, 862, 864, 918, 950, 1058, 1102, 1111], "instanc": [53, 55, 105, 108, 109, 139, 180, 188, 192, 201, 204, 205, 212, 214, 219, 222, 224, 227, 242, 245, 252, 266, 298, 313, 427, 432, 440, 451, 453, 454, 455, 467, 468, 469, 472, 485, 598, 609, 616, 621, 669, 672, 719, 724, 727, 925, 926, 953, 955, 969, 970, 972, 975, 998, 1086], "its": [53, 55, 57, 60, 63, 82, 85, 106, 108, 109, 126, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 149, 154, 156, 160, 161, 162, 164, 184, 191, 192, 194, 201, 205, 207, 217, 220, 224, 233, 248, 250, 251, 254, 257, 259, 266, 293, 304, 335, 357, 368, 370, 385, 387, 389, 396, 398, 420, 428, 432, 451, 454, 455, 470, 471, 472, 473, 478, 483, 486, 528, 529, 530, 532, 534, 539, 569, 609, 627, 639, 649, 675, 694, 709, 722, 731, 736, 758, 763, 785, 786, 789, 791, 795, 800, 805, 806, 818, 819, 840, 842, 863, 866, 867, 874, 884, 885, 890, 905, 911, 914, 916, 917, 918, 926, 948, 953, 955, 958, 963, 968, 972, 978, 986, 996, 998, 1003, 1007, 1013, 1061, 1063, 1085, 1086, 1093, 1095, 1113, 1115, 1116, 1118], "replac": [53, 61, 95, 137, 182, 193, 201, 204, 205, 207, 208, 210, 217, 220, 252, 266, 287, 329, 344, 385, 411, 474, 475, 527, 560, 561, 620, 627, 655, 672, 686, 701, 709, 711, 761, 864, 904, 916, 930, 954, 1064], "symptom": [55, 142], "mismatch": [55, 511], "appar": [55, 59, 61, 63, 64, 134, 136, 137, 139, 143, 193, 204, 256, 414, 428, 599, 644, 655, 687, 726, 862, 920, 1072], "onc": [55, 131, 133, 134, 137, 138, 139, 142, 147, 152, 153, 287, 305, 327, 352, 361, 369, 399, 412, 428, 429, 430, 434, 439, 451, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 484, 486, 544, 562, 563, 617, 658, 669, 679, 697, 709, 719, 722, 754, 855, 864, 906, 929, 930, 949, 955, 956, 957, 991, 1012, 1021, 1034, 1068, 1071, 1095], "sync": [55, 133, 204, 220, 227, 230, 245, 252, 262, 266, 385, 389, 758, 849], "imho": [55, 666], "forbidden": [56, 387], "accord": [56, 61, 111, 131, 134, 220, 618, 802, 818, 851, 855, 863, 864], "uncl": [56, 320], "bob": [56, 220, 320, 409], "enum": [56, 193, 194, 344, 359, 397, 401, 406, 407, 411, 414, 629, 667, 708, 710, 711, 717, 719, 727, 916, 1113], "instead": [56, 61, 125, 131, 132, 133, 134, 152, 153, 161, 193, 210, 212, 220, 250, 266, 287, 308, 313, 350, 399, 427, 470, 473, 487, 549, 565, 621, 623, 640, 644, 686, 687, 701, 726, 727, 736, 789, 818, 840, 863, 905, 925, 932, 934, 944, 950, 981, 1027, 1039, 1051, 1078, 1100], "born": [57, 60, 796, 981], "bound": [57, 60, 61, 210, 214, 245, 257, 272, 386, 396, 401, 406, 407, 511, 539, 541, 543, 640, 711, 796, 800, 856, 917, 920, 973, 994, 1017, 1080], "employe": [57, 60, 159, 191, 972], "year": [57, 60, 131, 132, 133, 134, 138, 143, 164, 204, 210, 252, 256, 409, 528, 612, 613, 615, 616, 619, 620, 621, 622, 623, 624, 626, 673, 711, 1013], "emploi": [57, 60, 133, 143, 168, 370, 758], "configur": [57, 59, 60, 61, 66, 71, 76, 80, 82, 83, 84, 102, 111, 112, 117, 118, 131, 133, 134, 137, 139, 162, 172, 238, 247, 248, 257, 268, 269, 275, 276, 302, 308, 412, 416, 417, 419, 420, 432, 434, 439, 476, 477, 478, 486, 711, 731, 738, 758, 772, 788, 789, 790, 793, 802, 838, 851, 854, 855, 863, 875, 882, 896, 898, 926, 933, 934, 946, 956, 1026, 1067, 1071, 1080, 1088, 1116], "pattern": [57, 60, 80, 104, 128, 129, 145, 148, 167, 168, 194, 197, 220, 259, 310, 319, 321, 409, 426, 427, 428, 429, 431, 432, 434, 436, 437, 438, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 475, 527, 690, 691, 711, 712, 818, 847, 914, 961, 962, 1100, 1120], "led": [57, 60, 70, 71, 72, 76, 89, 112, 150, 172, 248, 288, 311, 476, 711, 717, 855, 863], "hei": [57, 60, 132, 172, 224, 544, 545, 793, 879, 1001, 1072], "reinvent": [57, 60, 192, 241, 1056], "wheel": [57, 60, 116, 128, 760, 795, 890, 1088], "admit": [57, 60, 139], "notori": [57, 60], "fun": [57, 60, 132, 137, 190, 192, 228, 257, 320, 433, 670, 758, 797, 855, 862, 863, 960, 972, 984, 1000, 1055, 1056, 1087, 1094, 1113], "live": [57, 60, 68, 95, 96, 111, 128, 129, 133, 137, 155, 159, 164, 168, 173, 184, 192, 193, 194, 195, 208, 210, 218, 229, 236, 237, 238, 239, 241, 247, 249, 250, 257, 258, 259, 260, 261, 265, 268, 269, 283, 302, 306, 310, 311, 313, 320, 321, 322, 382, 399, 411, 412, 417, 433, 438, 447, 449, 451, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 562, 563, 583, 625, 636, 667, 668, 669, 686, 700, 709, 710, 711, 712, 722, 758, 788, 791, 792, 797, 813, 814, 854, 895, 963, 980, 1013, 1056, 1085, 1094, 1112, 1113, 1127], "session": [57, 60, 128, 137, 139, 157, 164, 168, 172, 176, 201, 207, 217, 220, 232, 236, 237, 239, 250, 258, 308, 760, 789, 790, 872, 883, 1044, 1056, 1085, 1093, 1123], "simpl": [57, 60, 70, 72, 73, 76, 84, 119, 128, 132, 136, 137, 139, 142, 143, 147, 152, 156, 159, 160, 164, 168, 171, 194, 210, 212, 214, 220, 224, 276, 323, 324, 331, 370, 372, 386, 389, 396, 411, 412, 413, 414, 415, 419, 420, 422, 432, 530, 537, 538, 576, 604, 612, 613, 615, 616, 619, 620, 621, 622, 623, 624, 644, 677, 687, 696, 711, 717, 731, 738, 750, 758, 760, 768, 794, 847, 855, 856, 862, 863, 892, 898, 900, 903, 918, 926, 929, 933, 934, 935, 940, 956, 960, 980, 981, 989, 1008, 1056, 1062, 1067, 1083, 1099, 1100], "thu": [57, 60, 132, 133, 134, 170, 354, 429, 731, 736, 778, 785, 888, 1071, 1118], "techniqu": [57, 60, 67, 68, 69, 389, 399, 485, 609, 858], "usag": [57, 60, 63, 78, 104, 112, 134, 139, 184, 194, 205, 218, 232, 257, 259, 260, 279, 288, 308, 320, 370, 395, 396, 403, 414, 418, 424, 433, 434, 447, 473, 474, 475, 527, 537, 544, 545, 563, 598, 600, 604, 605, 624, 626, 638, 649, 655, 669, 676, 711, 760, 795, 818, 847, 850, 865, 896, 899, 914, 950, 955, 958, 1008, 1050, 1052, 1088, 1095, 1102, 1113], "At": [57, 60, 132, 133, 136, 139, 143, 147, 164, 168, 194, 204, 208, 210, 244, 334, 363, 367, 399, 427, 685, 750, 951, 968, 1056], "flow": [57, 60, 133, 164, 169, 171, 172, 173, 174, 178, 183, 184, 199, 202, 215, 226, 303, 304, 305, 307, 343, 363, 371, 377, 381, 384, 388, 397, 399, 401, 406, 407, 629, 667, 676, 708, 710, 711, 929, 964, 989, 991, 998, 1114], "event": [57, 60, 61, 84, 135, 156, 192, 201, 205, 207, 217, 220, 248, 260, 261, 405, 655, 699, 711, 726, 727, 735, 760, 761, 773, 774, 775, 776, 779, 791, 795, 854, 858, 883, 895, 898, 914, 917, 918, 922, 926, 967, 1075, 1084, 1086, 1118, 1127, 1129, 1130], "save": [57, 60, 61, 83, 128, 131, 132, 144, 152, 155, 201, 207, 217, 220, 251, 254, 257, 351, 353, 627, 658, 661, 662, 663, 802, 820, 874, 883, 920, 949, 953, 959, 969, 1002, 1061, 1095, 1113], "schedul": [57, 60, 61, 63, 97, 108, 109, 111, 132, 149, 172, 174, 238, 247, 248, 268, 315, 316, 427, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 740, 750, 756, 763, 778, 785, 786, 787, 788, 792, 794, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 900, 909, 911, 912, 916, 920, 934, 936, 937, 938, 939, 940, 941, 942, 943, 1071, 1108, 1118, 1119, 1129], "overhead": [57, 60, 399, 405, 516, 525, 690, 691], "usual": [57, 60, 82, 106, 111, 132, 133, 139, 142, 147, 152, 162, 164, 224, 258, 274, 325, 365, 366, 392, 405, 409, 415, 417, 422, 427, 441, 449, 455, 484, 529, 545, 586, 640, 675, 676, 690, 699, 702, 709, 717, 729, 731, 736, 746, 752, 754, 758, 772, 774, 778, 794, 796, 800, 819, 855, 856, 863, 884, 898, 916, 917, 932, 933, 934, 935, 944, 953, 954, 955, 956, 960, 963, 966, 967, 973, 975, 977, 978, 980, 983, 989, 994, 1055, 1062, 1063, 1072, 1095, 1096, 1102, 1115], "exhibit": [57, 60, 210, 621, 864, 885, 890], "glitch": [57, 60, 134, 139, 863, 864], "caus": [57, 60, 132, 135, 147, 201, 207, 217, 220, 224, 864, 911, 916, 1081], "hiccup": [57, 60, 139, 250, 934], "twist": [57, 60, 742], "amazingli": [57, 60, 802], "submiss": 58, "submit": [58, 107, 752], "grazer": [58, 150, 171, 860], "linuxtag": [58, 171, 860], "2023": [58, 94, 104, 111, 112, 249, 250, 253, 256, 267, 273, 319, 410, 411, 680], "pure": [59, 67, 139, 302, 365, 438, 601, 627, 666, 691, 797, 987, 1113], "local": [59, 132, 133, 135, 138, 147, 160, 164, 165, 172, 173, 177, 193, 194, 208, 210, 211, 217, 220, 223, 224, 245, 248, 260, 262, 271, 274, 279, 288, 302, 335, 339, 363, 365, 382, 420, 424, 433, 447, 449, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 527, 534, 552, 635, 638, 640, 669, 711, 731, 758, 763, 785, 786, 790, 840, 854, 862, 864, 865, 866, 867, 873, 875, 881, 892, 900, 942, 944, 951, 954, 999, 1088, 1115, 1116, 1129], "easili": [59, 126, 133, 139, 288, 344, 363, 396, 409, 428, 601, 677, 740, 756, 884, 914, 920, 950, 963, 995, 1113], "guess": [59, 214, 224, 250, 389, 394, 644, 871, 926], "autotool": [59, 143], "portabl": [59, 156, 337, 399, 694, 900, 907, 926, 930, 987, 1068], "archiv": [59, 101, 102, 111, 143, 144, 172, 174, 238, 247, 248, 268, 405, 418, 424, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 711, 788, 818, 854, 934, 937, 939, 940, 942, 943, 944, 949, 953, 1088], "m4": 59, "macro": [59, 210, 275, 329, 340, 343, 355, 364, 371, 377, 381, 384, 388, 391, 397, 401, 406, 407, 415, 416, 420, 421, 424, 629, 667, 673, 708, 710, 711, 727, 746, 760, 800, 878, 884, 890, 900, 934, 1006, 1100, 1105, 1110, 1114], "stock": [59, 204, 205, 1012, 1013], "sudo": [59, 99, 111, 128, 135, 137, 139, 147, 161, 172, 210, 238, 247, 248, 257, 259, 268, 269, 415, 422, 499, 711, 788, 813, 815, 854, 855, 863, 864, 918, 946, 1095], "pwd": [59, 107, 160, 237, 239, 302, 307, 418, 484, 486, 547, 733, 736, 785, 786, 795, 840, 842, 855, 933, 934, 947, 949, 1093], "blink": [59, 115, 259, 262, 288, 291, 855, 896, 899], "pub": [59, 135, 172, 731, 871, 1050], "lib": [59, 111, 128, 137, 143, 171, 191, 194, 204, 220, 227, 230, 245, 252, 259, 262, 266, 417, 483, 736, 748, 754, 758, 849, 864, 929, 933, 935, 944, 946, 1088, 1095], "remot": [59, 100, 102, 135, 137, 139, 147, 184, 193, 240, 288, 426, 447, 461, 475, 527, 711, 731, 758, 759, 763, 784, 787, 854, 863, 865, 868, 869, 870, 873, 881, 944, 956, 1116, 1117, 1124], "v0": 59, "v1": [59, 250, 434, 449, 631], "v2": [59, 61, 139, 159, 250, 434, 449, 631], "autotooleri": 59, "autogen": 59, "step": [59, 61, 131, 132, 138, 139, 143, 147, 168, 207, 210, 211, 237, 239, 252, 256, 261, 325, 327, 329, 345, 369, 411, 414, 431, 474, 484, 522, 547, 552, 685, 758, 785, 786, 932, 940, 1080, 1081, 1094], "noconfigur": 59, "suppress": [59, 138, 184, 403, 428, 537, 686, 837, 1088], "absorb": [59, 125, 170, 408, 410, 638, 1013], "Be": [59, 95, 210, 257, 259, 288, 342, 375, 484, 505, 530, 535, 597, 624, 636, 638, 667, 669, 672, 683, 692, 700, 708, 710, 711, 784, 929, 944], "awar": [59, 288, 386, 419, 918], "enabl": [59, 131, 137, 164, 172, 193, 201, 207, 217, 220, 248, 258, 348, 399, 425, 432, 454, 510, 756, 758, 763, 810, 855, 859, 863, 875, 918, 942, 946, 956, 1118], "mkdir": [59, 98, 111, 118, 133, 138, 142, 160, 161, 237, 239, 248, 302, 307, 484, 486, 487, 547, 709, 711, 758, 785, 786, 787, 788, 822, 823, 824, 825, 826, 829, 830, 832, 838, 854, 871, 875, 925, 944, 946, 947, 953], "dist": [59, 116, 690, 1011], "406332": 59, "apr": [59, 61, 191, 201, 230, 295, 933, 934, 947], "transfer": [59, 132, 194, 197, 274, 288, 405, 487, 537, 638, 729, 758, 771, 772, 784, 785, 786, 845, 865, 871, 874, 1075, 1113, 1115], "scp": [59, 95, 99, 111, 118, 143, 172, 238, 247, 248, 268, 269, 486, 487, 711, 731, 785, 786, 854, 865, 866, 867, 868, 870, 875, 892, 942, 943, 944], "192": [59, 165, 172, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 308, 731, 793, 875, 1130], "168": [59, 165, 172, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 308, 731, 793, 875, 944, 1130], "82": [59, 142, 151, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 1013, 1060, 1061], "prerequisit": [59, 102, 210, 731, 862, 983], "apt": [59, 143, 147, 161, 210, 257, 259, 499, 738, 857, 862, 864, 875, 934, 946, 1095, 1100], "python3": [59, 61, 84, 116, 128, 143, 152, 165, 171, 191, 201, 207, 217, 220, 224, 910, 920, 946, 956, 983, 1080, 1081, 1088, 1095], "along": [59, 133, 139, 192, 205, 320, 369, 439, 709, 803, 911, 932, 963, 1086], "omit": [59, 61, 138, 147, 152, 201, 207, 217, 220, 221, 224, 306, 350, 387, 399, 411, 431, 605, 627, 674, 736, 752, 801, 862, 863, 864, 871, 887, 888, 892, 903, 953, 956, 1008, 1093], "bind": [59, 133, 235, 257, 259, 347, 354, 585, 627, 640, 667, 691, 692, 694, 700, 710, 711, 858, 932, 964, 968, 987, 998, 1078, 1113, 1128, 1130], "cxx": [59, 129, 412, 427, 428, 429, 430, 431, 432, 434, 436, 439, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 483, 485, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 933, 934], "xf": [59, 143, 784, 946], "ld_library_path": [59, 417, 949], "gpiod": [59, 61, 738], "py3": [59, 116, 128, 1011], "aarch64": [59, 143, 944], "multi": [61, 1062, 1072], "chmod": [61, 139, 302, 785, 786, 803, 808, 810, 812, 815, 867, 871], "snippet": [61, 152, 171, 287, 592, 863, 956], "subdirectori": [61, 138, 147, 159, 161, 184, 275, 412, 416, 417, 470, 484, 711, 733, 784, 785, 786, 798, 808, 810, 827, 842, 846, 863, 864, 944, 1044, 1100], "stuff": [61, 68, 76, 98, 111, 131, 134, 138, 147, 152, 164, 168, 171, 184, 193, 194, 215, 229, 248, 250, 271, 288, 306, 405, 411, 513, 560, 709, 711, 717, 726, 758, 788, 818, 826, 832, 838, 854, 862, 892, 953, 955, 1011, 1051, 1056, 1058, 1093], "stuff_complet": 61, "strace": [61, 95, 132, 134, 320, 716, 721, 774, 881, 887, 900, 916, 925, 1126], "pid": [61, 132, 134, 135, 404, 777, 790, 794, 796, 900, 916, 919, 925, 929, 930], "4677": 61, "11hello": 61, "clock_gettime64": 61, "clock_monoton": [61, 702, 882, 916], "tv_sec": [61, 916], "164646": 61, "tv_nsec": [61, 916], "833862215": 61, "_newselect": 61, "tv_usec": 61, "500000": [61, 857, 863, 1061], "unfinish": [61, 134], "4679": 61, "resum": [61, 657, 658, 661, 662, 663, 754, 916], "timeout": [61, 697, 699, 701, 881, 1088], "mi": [61, 212], "845864201": 61, "4678": [61, 207], "fd": [61, 142, 204, 248, 487, 717, 862, 876, 880, 881, 882, 884, 888, 889, 890, 891, 894, 896, 899, 922, 925, 929, 1013], "fourth": 61, "involv": [61, 76, 132, 135, 139, 142, 194, 248, 260, 261, 279, 308, 385, 393, 399, 405, 470, 537, 539, 628, 729, 758, 855, 933, 942, 944], "occasion": [61, 120, 147, 164, 193, 210, 395, 409, 419, 621, 758, 802, 980, 994, 1055, 1073], "due": [61, 139, 164, 427, 691, 1088], "weird": [61, 248, 395, 665, 717, 742, 911, 929], "gil": [61, 164, 168, 260, 261, 279, 1056], "jitter": [61, 918, 920], "heavi": [61, 156, 164, 437, 864, 980, 1118], "usr": [61, 132, 133, 137, 143, 152, 155, 160, 162, 184, 191, 192, 201, 204, 207, 217, 220, 224, 227, 230, 245, 250, 252, 262, 266, 299, 302, 412, 414, 415, 417, 418, 422, 644, 677, 687, 731, 758, 784, 790, 802, 814, 846, 849, 862, 864, 910, 920, 929, 932, 933, 934, 935, 944, 947, 949, 956, 959, 983, 1044, 1059, 1075, 1088, 1095, 1102], "env": [61, 128, 133, 155, 250, 910, 920, 983, 1010, 1044, 1059, 1075], "hello_left": 61, "hello_right": 61, "rjust": [61, 152, 220, 266], "hello_middl": 61, "center": [61, 155, 197, 212, 214, 220, 224, 245, 252, 266, 296, 403, 483], "t1": [61, 151, 214, 224, 245, 249, 266, 901], "t2": [61, 151, 207, 214, 224, 245, 901], "t3": 61, "async": [61, 132, 164, 168, 201, 207, 217, 218, 220, 655, 908, 931, 1056, 1128], "await": 61, "epoll_wait": 61, "201": [61, 135, 165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272], "multiplex": [61, 863, 882, 916, 1130], "create_task": 61, "sysf": [61, 111, 129, 179, 248, 289, 290, 486, 711, 714, 715, 760, 854, 855, 862, 864, 895, 896, 899, 1117, 1124], "unmaintain": [61, 238, 247, 248, 934, 998, 1110], "immun": [61, 544, 702], "hotplug": [61, 862], "reset": [61, 131, 434, 436, 686, 687, 688, 709, 1081, 1129], "pullup": 61, "pulldown": 61, "rpi": [61, 114, 143, 288, 758, 759, 862], "hope": [61, 132, 134, 137, 139, 143], "major": [61, 137, 150, 201, 207, 217, 220, 257, 259, 409, 413, 544, 717, 724, 789, 917, 981, 987, 1002], "releas": [61, 135, 161, 275, 370, 416, 687, 698, 699, 701, 711, 717, 731, 855, 862, 905, 910, 946, 949, 981, 1094, 1125], "ton": [61, 685, 797, 859, 884, 916, 920, 1113], "bartosz": 61, "golaszewski": 61, "dev": [61, 98, 132, 133, 143, 149, 150, 160, 161, 204, 210, 220, 227, 230, 245, 248, 252, 257, 259, 262, 266, 308, 398, 417, 481, 711, 713, 714, 716, 722, 729, 738, 752, 754, 758, 771, 788, 789, 798, 800, 801, 818, 832, 835, 838, 840, 854, 857, 862, 863, 864, 887, 894, 914, 917, 920, 922, 925, 926, 946, 1100, 1102, 1118], "gpiochip0": [61, 738, 898], "ioctl": [61, 248, 391, 724, 726, 752, 760, 761, 766, 772, 858, 862], "crw": [61, 722, 789, 840, 862, 863, 864], "254": [61, 153, 204, 207, 212, 214, 217, 224, 227, 245, 252, 262, 266, 272], "request": [61, 91, 96, 112, 133, 134, 137, 194, 196, 221, 227, 410, 429, 451, 465, 634, 635, 638, 639, 716, 760, 884, 899, 1093], "request_lin": 61, "consum": [61, 112, 134, 137, 154, 204, 403, 420, 449, 699, 701, 783, 791, 798, 905, 906, 917, 922, 924, 926, 929, 956, 978, 987, 1013, 1071, 1118], "mytest": 61, "config": [61, 95, 121, 122, 128, 133, 135, 137, 143, 151, 245, 262, 266, 306, 313, 322, 486, 687, 711, 731, 759, 840, 862, 863, 864, 871, 946, 956, 1088], "lineset": 61, "set_valu": [61, 701], "all_io": 61, "transform": [61, 64, 152, 167, 168, 171, 173, 183, 188, 189, 191, 192, 199, 210, 212, 215, 218, 241, 248, 250, 259, 265, 283, 287, 399, 490, 491, 503, 505, 558, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 655, 679, 711, 942, 962, 1006, 1039, 1056], "ntime": [61, 966], "task": [61, 75, 147, 189, 202, 215, 229, 232, 235, 265, 271, 306, 309, 311, 312, 315, 316, 317, 320, 711, 785, 786, 803, 845, 854, 862, 865, 880, 895, 901, 914, 915, 917, 918, 1056, 1093], "interv": [61, 87, 171, 201, 207, 208, 217, 220, 224, 245, 306, 471, 473, 486, 487, 627, 701, 702, 882, 892, 916, 920], "none": [61, 116, 128, 131, 132, 137, 142, 151, 153, 165, 175, 182, 183, 192, 197, 198, 201, 204, 207, 213, 214, 217, 220, 224, 227, 233, 242, 245, 249, 250, 252, 262, 266, 272, 297, 389, 390, 411, 414, 534, 620, 622, 881, 898, 926, 953, 956, 978, 1004, 1011, 1084, 1100], "itertool": [61, 229, 231, 960], "cram": [61, 125, 162, 726, 916, 953, 1072], "goe": [61, 63, 83, 135, 137, 152, 257, 399, 434, 499, 602, 622, 631, 681, 722, 758, 800, 801, 887, 914, 920, 930, 933, 940, 983, 986, 1006], "stuff_raw": 61, "mod": [61, 220, 245, 265, 736], "sidewai": [61, 168, 171, 226, 315, 316, 961, 962], "numpi": [61, 164, 168, 183, 202, 208, 215, 250, 256, 411, 980, 1055, 1059, 1062, 1073, 1077, 1088, 1095], "transpos": [61, 818], "col": 61, "tolist": 61, "outsid": [61, 220, 438, 451, 531, 539, 544, 686, 687, 748, 819, 901, 917, 956], "instanti": [61, 128, 191, 306, 429, 440, 454, 455, 468, 469, 470, 473, 555, 584, 602, 623, 649, 655, 677, 690, 691, 968, 969, 1059], "coro": [61, 655, 657, 658, 660, 661, 662, 663], "cannot": [61, 108, 109, 128, 132, 133, 134, 139, 143, 154, 155, 161, 162, 164, 171, 191, 224, 251, 254, 288, 365, 366, 369, 370, 389, 391, 393, 396, 399, 417, 420, 432, 455, 483, 522, 531, 534, 536, 539, 540, 563, 598, 599, 601, 602, 604, 605, 609, 628, 631, 634, 640, 666, 676, 677, 681, 687, 689, 699, 701, 754, 758, 763, 778, 795, 800, 803, 814, 829, 837, 873, 917, 926, 948, 949, 950, 954, 956, 968, 973, 980, 988, 989, 995, 996, 1006, 1080, 1081, 1093, 1118], "stuff_raw2": 61, "01": [61, 94, 95, 103, 104, 111, 128, 129, 137, 142, 144, 151, 155, 173, 184, 191, 198, 207, 213, 220, 232, 249, 250, 252, 256, 299, 301, 315, 316, 319, 398, 411, 412, 425, 512, 513, 702, 787, 814, 864, 918, 920, 947, 1044, 1055, 1060, 1093], "05": [61, 95, 111, 112, 135, 142, 147, 191, 226, 249, 256, 267, 276, 301, 319, 418, 1060, 1064], "runtimeerror": [61, 155, 191, 245, 287, 953, 955], "reus": [61, 147, 153, 948, 998], "alreadi": [61, 78, 111, 132, 133, 135, 143, 154, 156, 164, 168, 224, 251, 254, 382, 393, 399, 431, 451, 453, 464, 467, 486, 503, 583, 711, 717, 731, 738, 746, 756, 758, 761, 778, 854, 862, 863, 864, 871, 884, 885, 887, 892, 893, 895, 912, 947, 953, 980, 1006, 1088, 1093, 1095, 1102], "bare": [61, 76, 78, 85, 87, 106, 114, 132, 320, 855, 863], "create_coro": 61, "ctor": [61, 159, 168, 217, 266, 483, 505, 513, 530, 533, 534, 537, 547, 549, 584, 607, 631, 632, 634, 638, 639, 664, 672, 687, 777], "nest": [61, 128, 192, 205, 214, 224, 231, 235, 252, 262, 333, 362, 363, 389, 649, 701, 705, 763, 953, 996, 1086], "_blink": 61, "coro_cr": 61, "creator": [61, 126, 143], "create_factory_for_blink": 61, "blinkfunc": 61, "blink_func": 61, "stuff_decorator_stage1": 61, "stage1": 61, "stararg": [61, 954, 957, 978], "func": [61, 191, 201, 207, 217, 220, 251, 265, 489, 558, 627, 642, 649, 690, 954, 958], "becom": [61, 66, 76, 87, 90, 132, 134, 160, 172, 251, 254, 274, 276, 348, 378, 380, 387, 390, 411, 427, 431, 470, 631, 686, 687, 688, 758, 795, 814, 847, 863, 864, 871, 914, 917, 918, 953, 959, 989, 1094, 1100, 1115, 1116], "obsolet": [61, 164, 980], "prog": [61, 205, 287], "demo": [61, 95, 96, 111, 132, 155, 159, 164, 167, 169, 172, 173, 176, 184, 191, 199, 202, 205, 208, 210, 215, 221, 238, 241, 244, 247, 248, 268, 269, 302, 320, 412, 413, 417, 418, 422, 425, 473, 481, 611, 688, 711, 788, 791, 792, 813, 814, 854, 883, 925, 934, 980, 1062, 1099, 1119, 1123], "opposit": [61, 136, 363, 864, 917, 1072], "futur": [61, 111, 139, 204, 224, 236, 237, 239, 248, 283, 293, 315, 316, 387, 451, 621, 655, 697, 699, 700, 710, 711, 768, 1113], "steig": [62, 140], "normalweg": 62, "w\u00e4r": 62, "umst\u00e4nden": [62, 1108, 1112, 1127], "renat": 62, "beschreibung": [62, 176, 178, 186, 189, 192, 193, 195, 211, 223, 846], "bergfex": 62, "reden": 62, "sie": [62, 140, 146, 151, 155, 212, 217, 297, 303, 320, 780, 845, 1107, 1109, 1110, 1111, 1117, 1127, 1129, 1130, 1131], "tagen": [62, 1117], "wir": [62, 150, 155, 159, 165, 167, 175, 176, 181, 195, 214, 220, 227, 320, 588, 1108, 1123, 1124], "w\u00fcrden": 62, "denk": [62, 140, 196, 1127], "beiden": [62, 151, 165, 212, 220, 227], "h\u00fctten": [62, 141], "schlafen": 62, "hochk\u00f6nig": 63, "cite": [63, 139, 153, 164], "complain": [63, 134, 143, 147, 161, 349, 522, 537, 538, 733, 761, 871], "subrepo": 63, "whole": [63, 211, 223, 224, 226, 229, 232, 241, 244, 287, 411, 640, 649, 691, 733, 736, 758, 803, 885, 954, 1025, 1116], "subtitl": 63, "fight": [63, 797], "against": [63, 134, 143, 184, 192, 204, 205, 369, 411, 415, 419, 470, 486, 702, 731, 733, 738, 742, 750, 793, 890, 935, 940, 950, 964, 1022, 1086, 1093, 1118], "fake": [63, 862], "simplest": [63, 170, 232, 412, 429, 562, 569, 676, 697, 763, 793, 847, 911, 944, 982, 987, 1093, 1101], "unprofession": [63, 136], "populist": 63, "gtest_discover_test": 63, "robust": 63, "sentenc": 63, "implicitli": [63, 188, 193, 204, 376, 426, 534, 542, 632, 640, 721, 888, 953, 985, 1072], "gtest_add_test": 63, "scan": [63, 201, 224, 227, 862, 864], "primit": [63, 132, 176, 177, 257, 962, 1113, 1123], "sort": [63, 83, 104, 106, 119, 132, 159, 165, 173, 177, 192, 194, 204, 205, 210, 212, 214, 215, 220, 228, 242, 245, 252, 257, 266, 272, 399, 400, 403, 404, 414, 505, 563, 581, 591, 595, 624, 665, 669, 677, 690, 699, 701, 711, 798, 802, 840, 851, 864, 955, 1003, 1004, 1058, 1086, 1088], "port": [63, 128, 129, 134, 139, 144, 204, 238, 247, 268, 269, 288, 320, 711, 791, 797, 845, 854, 865, 870, 874, 892, 1013, 1071, 1075, 1088, 1117, 1124], "trap": [63, 133, 194, 382, 387, 405, 533, 1112, 1114], "hehe": [63, 164, 171], "html_sidebar": 63, "rtd": [63, 129], "linkcheck": 63, "admonit": 63, "matrix": [63, 153, 155, 256, 309, 311, 400], "thoma": [63, 126], "cokela": 63, "ablog": 63, "couldn": [63, 139, 143, 168, 171, 994], "figur": [63, 111, 118, 124, 129, 137, 138, 153, 208, 952], "piec": [63, 76, 125, 133, 389, 505, 557, 863, 894], "especi": [63, 84, 90, 112, 133, 137, 156, 164, 248, 302, 320, 322, 348, 359, 389, 409, 631, 733, 864], "feed": [63, 82, 129, 1061], "blog_baseurl": 63, "nicer": [63, 918], "pour": [63, 427, 784], "tag": [63, 135, 137, 140, 141, 165, 181, 183, 225, 414, 422, 731, 946, 949, 1125], "resolv": [64, 75, 143, 147, 201, 204, 207, 210, 217, 220, 227, 230, 245, 252, 262, 266, 366, 392, 541, 875, 932, 935, 1060, 1061], "buildenviron": 64, "resolve_refer": 64, "builder": [64, 204, 1013], "get_and_resolve_doctre": 64, "apply_post_transform": 64, "addnod": 64, "docstr": [64, 128, 188, 191, 201, 207, 213, 225, 228, 231, 253, 302, 984], "emit": [64, 82, 454, 455, 800], "doctre": 64, "increasingli": 66, "whose": [66, 143, 201, 207, 217, 220, 256, 266, 315, 316, 449, 519, 622, 623, 855, 956, 1093, 1100], "mainten": [66, 344, 370, 389, 949], "easier": [66, 78, 83, 90, 153, 194, 411, 437, 542, 626, 758, 1113], "never": [66, 108, 109, 132, 133, 134, 139, 152, 214, 220, 224, 266, 348, 369, 385, 396, 399, 409, 427, 449, 528, 609, 687, 797, 855, 878, 903, 933], "simpler": [66, 143, 194, 258, 261, 327, 386, 420, 566, 754, 758, 863, 875], "wors": [66, 120, 135, 220, 395, 411, 649, 880, 1096], "makefil": [66, 95, 194, 237, 239, 412, 423, 727, 731, 759, 760, 937, 940, 942, 949, 950], "everytbodi": 67, "runtim": [67, 132, 143, 165, 169, 193, 217, 220, 324, 345, 393, 403, 404, 417, 422, 453, 454, 467, 481, 516, 525, 565, 583, 584, 627, 669, 676, 690, 691, 901, 932, 968, 986, 998, 1062, 1063], "dispatch": [67, 516, 525, 601, 604, 605], "hell": [67, 184, 218, 395, 428, 641, 672, 694, 748, 783, 908, 1072], "destructor": [67, 68, 95, 104, 112, 194, 210, 231, 257, 259, 304, 305, 433, 447, 475, 485, 499, 505, 514, 520, 527, 528, 529, 530, 535, 537, 552, 600, 601, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 640, 667, 683, 692, 698, 700, 708, 710, 711, 719, 750, 763, 775, 1105], "opportun": [67, 139, 142, 152, 164, 183, 399, 618, 969, 1116], "shoot": [67, 820], "oneself": [67, 1118], "encapsul": [68, 71, 192, 205, 210, 257, 259, 288, 409, 429, 433, 447, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 527, 528, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 627, 636, 667, 683, 692, 700, 708, 710, 711, 727, 760, 926, 981, 1064, 1086, 1114], "hide": [68, 193, 205, 261, 981], "fanci": [68, 1001, 1062, 1085], "whatnot": [68, 208, 699, 758, 855, 863, 881, 911], "boost": [69, 210, 422, 425, 505, 655, 919, 1131], "feel": [69, 132, 134, 143, 164, 522, 619, 621, 622, 627, 900, 918, 980], "cluster_ecpropos": [70, 71, 72, 85, 711], "cluster_ecproposal_ec2": [70, 72, 711], "cluster_ecproposal_ec2_python": [70, 72, 711], "cluster_ecproposal_ec1": [70, 71, 72, 85, 711], "cluster_ecproposal_ec1_linux": [70, 71, 72, 711], "cluster_ecproposal_ec1_mt": [70, 71, 72, 85, 711], "cluster_ecproposal_ec1_cxx": [70, 71, 72, 85, 711], "ecproposal_ec2_python_web_sensor": [70, 72, 711], "ecproposal_ec2_python_exercise_avg_displai": [70, 72, 711], "ex": [70, 71, 72, 76, 85, 120, 192, 205, 499, 516, 677, 711, 803, 818, 1086, 1095], "averag": [70, 71, 72, 76, 82, 83, 168, 204, 208, 224, 259, 432, 448, 478, 485, 711, 920, 1013], "displai": [70, 71, 72, 76, 112, 137, 201, 207, 217, 220, 245, 248, 250, 252, 257, 262, 266, 311, 403, 476, 711, 793, 840, 849, 862, 916, 1095], "ecproposal_ec2_python_flask": [70, 72, 711], "ecproposal_ec2_python_exercise_sensor": [70, 72, 711], "temperatur": [70, 71, 72, 76, 80, 89, 92, 95, 111, 168, 201, 248, 308, 311, 326, 328, 330, 428, 434, 439, 460, 474, 475, 476, 477, 478, 479, 480, 481, 485, 486, 487, 498, 516, 527, 605, 637, 711, 758, 854, 861, 893, 895, 912, 968, 1044, 1059, 1060, 1061, 1062], "ecproposal_ec1_linux_exercise_avg_sensor": [70, 71, 72, 711], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [70, 71, 72, 711], "ecproposal_ec1_linux_exercise_led_displai": [70, 71, 72, 711], "ecproposal_ec2_python_bas": [70, 72, 711], "ecproposal_ec1_linux_exercise_sensor": [70, 71, 72, 711], "ecproposal_ec1_git": [70, 71, 72, 711], "ecproposal_ec1_linux_dev_mgmt": [70, 71, 72, 711], "ecproposal_ec1_cxx_ifac": [70, 71, 72, 711], "ecproposal_ec1_cxx_build": [70, 71, 72, 85, 711], "ecproposal_ec1_cxx_unittest": [70, 71, 72, 711], "ecproposal_ec1_mt_exercise_mt_race_fix": [70, 71, 72, 85, 711], "avoid": [70, 71, 72, 76, 85, 132, 139, 147, 224, 335, 370, 448, 483, 485, 495, 529, 533, 584, 711, 756, 847, 863, 1114], "ecproposal_ec1_mt_wait": [70, 71, 72, 85, 711], "ecproposal_ec1_linux_gpio": [70, 71, 72, 711], "ecproposal_ec1_linux_bas": [70, 71, 72, 711], "ecproposal_ec1_mt_lock": [70, 71, 72, 85, 711], "semaphor": [70, 71, 72, 74, 76, 85, 87, 127, 156, 157, 179, 201, 207, 217, 220, 320, 699, 711, 750, 905, 1118, 1128], "ecproposal_ec1_mt_exercise_mt_rac": [70, 71, 72, 85, 711], "ecproposal_ec1_cxx_oo_bas": [70, 71, 72, 711], "qualiti": [71, 139, 193, 256, 863, 1087], "assur": 71, "characterist": 71, "polymorph": [72, 104, 111, 112, 191, 192, 205, 257, 259, 261, 276, 411, 433, 447, 475, 527, 600, 604, 605, 624, 685, 690, 711, 1086, 1113, 1116], "concurr": [72, 164, 168, 218, 677, 748, 964, 1056], "increment": [73, 150, 193, 207, 210, 233, 256, 327, 331, 335, 355, 364, 371, 375, 377, 381, 384, 388, 397, 401, 406, 407, 505, 522, 629, 667, 708, 710, 711, 790, 902, 903, 904, 925, 926, 964], "lossi": 73, "access": [74, 76, 86, 108, 109, 129, 133, 134, 135, 137, 139, 152, 162, 172, 179, 191, 201, 204, 207, 210, 217, 220, 227, 230, 245, 248, 252, 262, 266, 276, 288, 302, 305, 307, 339, 378, 399, 400, 438, 454, 479, 480, 481, 482, 505, 528, 540, 542, 545, 546, 548, 549, 563, 588, 602, 609, 612, 615, 616, 619, 620, 621, 622, 623, 624, 638, 655, 670, 674, 686, 711, 716, 726, 729, 735, 746, 754, 758, 760, 776, 791, 794, 803, 805, 806, 829, 854, 864, 873, 874, 880, 884, 888, 890, 894, 898, 902, 916, 917, 925, 930, 951, 956, 963, 964, 967, 986, 993, 995, 1008, 1024, 1060, 1080, 1095, 1118], "flavor": [74, 85, 132, 412, 676, 681], "stash": 75, "suffic": [75, 139, 337, 387], "purpos": [75, 76, 78, 125, 133, 137, 143, 164, 183, 201, 207, 217, 220, 232, 245, 305, 333, 411, 423, 530, 562, 602, 691, 758, 791, 800, 863, 885, 890, 911, 932, 950, 980, 1061, 1094, 1117, 1124], "unifi": [76, 171, 555], "intention": [76, 193, 266, 642], "power": [76, 87, 131, 133, 148, 153, 193, 210, 303, 304, 305, 323, 335, 336, 378, 387, 758, 768, 775, 789, 855, 859, 862, 863, 864, 883, 898, 916, 920, 957, 975, 979, 981, 987, 992, 1004, 1082], "being": [76, 79, 120, 132, 135, 136, 142, 156, 164, 170, 191, 220, 224, 302, 348, 375, 392, 428, 431, 516, 540, 583, 685, 687, 691, 693, 699, 709, 740, 754, 758, 793, 875, 890, 916, 963, 970, 980, 983, 1060, 1102, 1105, 1118], "address": [76, 97, 104, 108, 109, 111, 132, 134, 135, 136, 139, 172, 179, 184, 191, 193, 194, 210, 212, 238, 247, 248, 259, 268, 269, 299, 304, 305, 313, 366, 368, 377, 381, 384, 387, 388, 396, 397, 401, 406, 407, 427, 433, 438, 441, 447, 449, 451, 456, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 527, 537, 542, 629, 639, 640, 667, 681, 700, 708, 710, 711, 738, 742, 754, 756, 785, 786, 787, 788, 791, 792, 794, 798, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854, 856, 858, 863, 864, 866, 867, 868, 869, 870, 875, 877, 881, 883, 885, 892, 893, 895, 900, 908, 909, 911, 912, 915, 917, 925, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 949, 964, 967, 1060, 1061, 1083, 1093], "crucial": [76, 132, 156, 402, 564], "mmu": [76, 132, 729, 772, 795, 916], "sophist": [76, 201, 428, 449, 486, 623], "permiss": [76, 95, 98, 99, 100, 111, 167, 168, 172, 174, 184, 191, 207, 227, 238, 247, 262, 265, 268, 288, 297, 302, 303, 304, 305, 307, 475, 527, 613, 700, 709, 710, 711, 717, 758, 785, 786, 788, 791, 792, 795, 801, 804, 808, 809, 810, 811, 812, 814, 815, 816, 820, 832, 835, 837, 838, 840, 854, 855, 863, 865, 868, 870, 871, 874, 875, 880, 883, 884, 885, 888, 890, 891, 893, 895, 909, 912, 915, 917, 918, 930, 955, 1056, 1088, 1095, 1119, 1128], "nativ": [76, 95, 102, 111, 131, 137, 139, 165, 201, 237, 239, 257, 309, 711, 758, 854, 933, 937, 939, 942, 1068, 1071, 1077], "varieti": [76, 405, 794, 932, 1116], "storag": [76, 137, 142, 412, 640, 758, 794, 855, 863, 880, 900, 1129], "underli": [76, 192, 199, 215, 224, 265, 302, 307, 677, 864, 1056, 1061, 1068], "platform": [76, 139, 192, 201, 205, 207, 217, 220, 224, 232, 250, 295, 304, 322, 738, 758, 863, 864, 898, 916, 1044, 1086, 1093, 1095], "offer": [76, 132, 142, 183, 258, 363, 540, 544], "pc": [76, 106, 128, 184, 248, 288, 305, 308, 487, 856, 857, 863, 1108], "popular": [76, 143, 156, 160, 358, 635, 783, 864, 916, 932, 948, 974, 1058, 1067, 1075, 1089, 1116], "often": [76, 87, 131, 132, 133, 134, 164, 214, 224, 251, 254, 274, 344, 354, 375, 414, 429, 441, 555, 677, 758, 818, 894, 960, 980, 994, 1115, 1116], "appropri": [76, 119, 125, 132, 142, 147, 152, 184, 224, 344, 358, 370, 485, 691, 754, 862, 874, 925, 1062, 1071, 1116], "prototyp": [76, 288, 335, 427, 489, 522, 638, 758, 855, 863, 876, 953, 1071], "higher": [76, 132, 143, 201, 207, 217, 220, 709, 756, 855, 917, 919, 926, 934, 942, 1071, 1115], "raspberri": [76, 95, 102, 104, 114, 115, 127, 144, 148, 174, 248, 259, 305, 307, 308, 319, 321, 487, 711, 735, 739, 758, 762, 767, 773, 776, 779, 854, 861, 863, 864, 875, 920, 933, 935, 939, 942, 944, 946, 957, 979, 983, 1073, 1075, 1087, 1108, 1117], "fulli": [76, 136, 139, 143, 168, 391, 486, 926], "distribut": [76, 137, 142, 147, 159, 164, 184, 194, 212, 224, 299, 427, 473, 481, 694, 729, 758, 796, 797, 918, 980], "en": [76, 137, 149, 159, 220, 248, 607], "vogu": 76, "serial": [76, 131, 132, 142, 172, 207, 208, 220, 791, 793, 1117, 1124], "groundwork": 76, "lai": 76, "instruct": [76, 131, 135, 139, 162, 193, 248, 257, 259, 399, 470, 686, 701, 904, 916, 947, 1044], "consolid": [76, 164], "makeri": 76, "everybodi": [76, 137, 258, 391, 437, 531, 570, 613, 789, 983, 987, 1093, 1113], "clarifi": 76, "earli": [76, 128, 131, 164, 168, 173, 258, 763, 775, 790, 918, 951, 968, 1006, 1115], "matter": [76, 131, 136, 137, 139, 147, 164, 170, 172, 329, 373, 405, 412, 419, 429, 529, 530, 542, 545, 631, 670, 677, 687, 689, 733, 758, 760, 803, 814, 856, 862, 864, 875, 955, 980, 1084, 1095, 1105, 1116], "rewrit": [76, 78, 132, 411], "translat": [76, 89, 90, 152, 165, 183, 220, 224, 227, 230, 266, 676, 1023], "flask": [76, 91, 129, 168, 171, 954], "network": [76, 108, 109, 118, 127, 128, 129, 132, 139, 149, 150, 172, 174, 179, 204, 220, 227, 230, 241, 245, 247, 248, 252, 262, 266, 268, 304, 320, 321, 405, 438, 711, 712, 735, 775, 791, 793, 794, 796, 854, 857, 858, 863, 864, 865, 875, 879, 880, 883, 884, 895, 914, 1124, 1128], "oppos": [78, 111, 131, 171, 205, 212, 222, 257, 370, 414, 419, 516, 842, 856, 863, 871, 905, 918, 925, 930, 949, 975, 986, 987, 1072, 1080], "ahead": [78, 147, 409, 970], "optimz": 78, "donald": [78, 398], "knuth": [78, 398], "prematur": [78, 398, 402], "optim": [78, 133, 245, 257, 385, 401, 402, 406, 407, 414, 711, 742, 1071, 1112, 1114], "evil": [78, 210, 339, 389, 398, 402, 414, 542], "knowledg": [79, 83, 251, 254, 257, 486, 620, 622, 758, 856, 864, 957, 979, 1087], "onewir": [79, 83, 95, 104, 111, 248, 259, 302, 305, 474, 475, 527, 711, 854, 861, 862, 893, 895, 912], "protocol": [79, 124, 137, 170, 171, 181, 203, 206, 208, 209, 213, 216, 219, 222, 231, 244, 246, 251, 254, 260, 261, 263, 264, 267, 270, 279, 308, 311, 343, 351, 438, 451, 716, 845, 856, 858, 862, 864, 865, 873, 874, 894, 953, 957, 961, 968, 1065], "aspect": [79, 164, 168, 194, 218, 257, 259, 434, 789, 862, 864, 1056, 1087, 1093, 1118], "regard": [79, 139, 164, 288, 818, 980, 987, 1089, 1093], "filesystem": [79, 83, 104, 111, 131, 134, 143, 172, 174, 184, 235, 302, 307, 486, 710, 711, 758, 784, 863, 875, 891, 898, 916, 935, 1093, 1119, 1124, 1126, 1130], "hwmon": [79, 83, 308, 311], "composit": [80, 104, 168, 194, 240, 258, 259, 276, 426, 433, 447, 461, 475, 527, 711, 960, 1116], "mock": [80, 111, 112, 258, 260, 261, 279, 289, 291, 475, 476, 477, 478, 480, 516, 527, 711, 1100], "pool": [81, 193, 778, 917, 919, 1065], "pin": [82, 248, 288, 855, 859, 862, 863], "light": [82, 142, 797, 979, 1093], "linearli": [82, 224, 569, 794], "cold": [82, 183], "hot": [82, 134, 400, 403, 740], "queri": [82, 988], "said": [82, 108, 109, 134, 147, 164, 251, 254, 261, 449, 562, 609, 693, 699, 719, 855, 863, 864, 875, 902, 917, 960, 980, 1000, 1072, 1085], "ds18s20": [83, 308, 1093], "datasheet": [83, 117, 754, 855, 864], "lm73": [83, 248, 308, 311, 711, 854, 861, 864], "ti": [83, 131, 409, 487, 531, 688], "hoc": [83, 194, 369], "report": [83, 131, 134, 135, 147, 149, 151, 313, 395, 405, 528, 876, 911, 1100, 1102], "experi": [83, 120, 139, 164, 409, 414, 513, 863, 864, 1094], "subsystem": [84, 95, 96, 101, 102, 111, 150, 172, 179, 184, 221, 237, 239, 241, 247, 248, 257, 259, 260, 276, 279, 711, 736, 754, 768, 788, 792, 794, 854, 855, 862, 863, 864, 898, 914, 955, 1093, 1117, 1118, 1124], "deprec": [84, 261, 596, 884, 898, 1113], "foremost": 85, "osen": [85, 87, 142, 693, 709, 916], "recurs": [85, 86, 168, 192, 201, 207, 217, 220, 697, 750, 763, 802, 803, 818, 830, 840, 847, 867, 874, 911, 992, 996, 1113], "mother": [86, 106, 148, 210, 505, 973, 1113], "protect": [86, 132, 134, 184, 192, 204, 257, 259, 350, 369, 467, 468, 528, 531, 542, 598, 600, 601, 624, 699, 711, 742, 750, 756, 795, 837, 863, 904, 905, 916, 964, 967, 976, 1105, 1118], "critic": [86, 132, 142, 405, 698, 748, 750, 1088], "kind": [86, 132, 134, 142, 147, 152, 164, 168, 201, 207, 208, 217, 218, 220, 232, 248, 260, 261, 279, 434, 486, 534, 581, 631, 640, 685, 699, 789, 855, 862, 863, 964, 1056, 1085, 1087, 1118], "poll": [87, 138, 149, 750, 752, 775, 898, 903, 905, 922, 926, 1117, 1124, 1128, 1130], "second": [87, 131, 134, 135, 139, 151, 164, 170, 191, 197, 201, 205, 207, 217, 220, 224, 250, 252, 288, 323, 333, 387, 403, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 463, 467, 468, 469, 473, 476, 486, 522, 537, 585, 587, 588, 627, 656, 657, 676, 687, 688, 701, 702, 705, 706, 707, 768, 795, 800, 803, 863, 882, 885, 892, 916, 925, 929, 933, 934, 948, 949, 950, 1000, 1008, 1088, 1100, 1113], "readi": [87, 131, 855, 1093], "rare": [87, 137, 154, 168, 412, 422, 484, 486, 537, 635, 686, 840, 862, 879, 991, 995, 1008, 1094], "btw": [87, 136, 142, 164, 170, 184, 191, 211, 214, 302, 386, 727, 793, 1045, 1047], "increas": [87, 134, 399, 855, 918, 920, 948, 1116], "tight": [87, 156, 343, 701, 761, 1084], "bui": [87, 132, 428], "bigger": [87, 132, 164, 399, 1062], "avail": [87, 131, 132, 134, 135, 137, 143, 147, 156, 160, 164, 184, 193, 201, 207, 217, 220, 274, 279, 321, 413, 415, 420, 424, 429, 454, 455, 655, 691, 697, 701, 731, 758, 763, 790, 814, 855, 859, 862, 863, 914, 917, 918, 935, 946, 951, 956, 963, 987, 1005, 1006, 1055, 1067, 1084, 1088, 1095, 1096, 1115, 1118], "intro": [91, 111, 129, 159, 183, 193, 202, 215, 216, 229, 232, 251, 254, 259, 265, 271, 527, 627, 635, 655, 679, 711, 854, 878, 895, 897, 899, 1056, 1114, 1116, 1128], "rout": [91, 168, 954], "jinja2": 91, "ss2022": [94, 711, 787, 788, 854], "ws2022": 94, "lab": [94, 104, 111, 302], "vo": [95, 104, 111, 112, 308], "ku": [95, 103, 104, 111, 112], "g1": [95, 711, 787, 788, 854], "g2": [95, 302, 711, 787, 788, 854], "2022": [95, 103, 104, 115, 144, 207, 213, 217, 220, 236, 237, 243, 246, 315, 316, 319, 411, 422, 484, 655, 680, 684, 709, 818, 820, 934, 944, 1011, 1055, 1086], "03": [95, 103, 111, 128, 129, 137, 142, 144, 151, 159, 194, 215, 217, 220, 249, 250, 253, 256, 262, 275, 298, 301, 305, 319, 321, 403, 410, 411, 412, 433, 447, 473, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 505, 522, 527, 528, 530, 531, 533, 535, 537, 538, 540, 542, 545, 550, 553, 556, 572, 578, 582, 590, 591, 592, 594, 595, 597, 600, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 626, 636, 667, 683, 692, 700, 708, 710, 711, 712, 820, 944, 1060, 1086, 1102, 1112], "08": [95, 97, 103, 111, 135, 142, 143, 144, 198, 201, 226, 230, 256, 319, 423, 855, 862, 864, 886, 947, 1060], "cont": [95, 111, 202, 265], "command": [95, 97, 111, 128, 131, 136, 142, 172, 184, 189, 199, 201, 207, 208, 215, 217, 220, 229, 232, 238, 240, 247, 248, 265, 268, 269, 288, 302, 307, 320, 370, 391, 402, 414, 424, 425, 426, 433, 447, 451, 461, 475, 484, 527, 537, 686, 700, 710, 711, 758, 784, 785, 786, 787, 788, 791, 792, 793, 795, 796, 797, 798, 800, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 820, 821, 822, 823, 825, 826, 827, 829, 830, 832, 833, 834, 836, 838, 846, 851, 854, 863, 864, 865, 866, 867, 874, 878, 883, 885, 893, 895, 909, 911, 912, 915, 916, 917, 918, 932, 933, 940, 944, 948, 1008, 1056, 1088, 1095, 1102, 1116], "wsl": [95, 96, 101, 102, 111, 221, 241, 247, 260, 276, 279, 711, 788, 792, 854, 935, 942, 943, 947], "homework": [95, 100, 103, 111, 134], "ssh": [95, 99, 100, 111, 112, 114, 129, 139, 143, 172, 204, 220, 227, 230, 238, 245, 247, 252, 262, 266, 268, 288, 301, 302, 308, 309, 315, 316, 320, 486, 487, 711, 784, 785, 786, 793, 840, 849, 854, 855, 863, 866, 867, 892, 942, 943, 944, 1117, 1119, 1124], "sshf": [95, 99, 111, 238, 247, 248, 268, 269, 309, 711, 854, 865, 870, 935, 944], "toolchain": [95, 101, 102, 104, 106, 111, 127, 144, 159, 161, 248, 320, 411, 412, 418, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 486, 487, 527, 700, 710, 711, 759, 788, 791, 792, 854, 877, 883, 885, 892, 893, 895, 909, 912, 915, 917, 934, 935, 936, 937, 940, 948, 949, 950, 981, 1108, 1110, 1111, 1112, 1120, 1126, 1128], "04": [95, 103, 111, 115, 128, 139, 142, 144, 159, 160, 184, 232, 248, 249, 252, 256, 299, 301, 319, 412, 711, 854, 935, 942, 943, 947, 1060, 1093], "bashrc": [95, 102, 111, 131, 143, 204, 238, 247, 248, 262, 268, 269, 711, 788, 790, 838, 840, 854, 874, 944, 946], "studi": [95, 102, 193, 236, 237, 239, 240, 248, 283, 426, 433, 627, 667, 710, 711, 854, 937, 939, 942], "09": [95, 128, 135, 144, 168, 184, 249, 299, 319, 411, 414, 840, 863, 864, 888, 983, 1060], "ds18b20": [95, 111, 248, 302, 711, 854, 861, 892], "slave": [95, 111, 248, 711, 854, 859, 861, 892], "redirect": [95, 98, 111, 133, 136, 172, 174, 184, 201, 207, 217, 220, 238, 247, 248, 268, 287, 302, 307, 711, 785, 786, 787, 788, 802, 822, 823, 825, 826, 829, 830, 832, 838, 851, 854, 884, 1006, 1109, 1119, 1126], "pipe": [95, 132, 137, 139, 152, 172, 174, 184, 238, 247, 248, 250, 268, 287, 302, 307, 709, 711, 788, 795, 800, 840, 845, 854, 884, 928, 929, 930, 944, 1006, 1109, 1119, 1126], "06": [95, 104, 111, 142, 173, 217, 236, 249, 256, 273, 276, 301, 319, 411, 422, 505, 709, 955, 983, 1060], "02": [95, 104, 111, 128, 135, 142, 144, 151, 155, 181, 191, 218, 232, 249, 250, 256, 315, 316, 319, 403, 411, 412, 864, 932, 933, 934, 944, 946, 1060], "past": [95, 132, 136, 137, 194, 210, 375, 560, 562, 566, 569, 573, 638, 731, 733, 797, 1051, 1055, 1110], "2p": [95, 102], "3p": [95, 102], "5p": [95, 102], "pointer": [95, 106, 111, 112, 135, 159, 235, 294, 303, 304, 305, 320, 333, 335, 337, 378, 379, 381, 382, 384, 386, 387, 388, 397, 401, 406, 407, 441, 486, 499, 516, 521, 523, 528, 529, 531, 539, 546, 548, 557, 561, 565, 569, 570, 573, 579, 583, 596, 629, 636, 637, 638, 665, 667, 672, 674, 676, 681, 686, 688, 691, 692, 700, 706, 707, 708, 710, 711, 717, 724, 729, 740, 746, 775, 778, 876, 902, 930, 1006, 1110, 1111, 1112, 1113, 1114, 1116], "exit": [95, 111, 128, 132, 134, 162, 183, 201, 207, 210, 217, 220, 242, 248, 295, 320, 324, 376, 418, 425, 434, 537, 604, 684, 686, 711, 721, 726, 760, 854, 864, 880, 881, 882, 884, 885, 890, 892, 895, 896, 912, 922, 929, 930, 949, 955, 963, 964, 982, 985, 998, 1008, 1018, 1035, 1088, 1095], "statu": [95, 111, 128, 133, 135, 147, 201, 207, 210, 217, 220, 232, 242, 248, 320, 324, 376, 414, 418, 425, 604, 709, 711, 760, 774, 854, 885, 890, 892, 895, 912, 916, 929, 949, 985, 1011, 1073], "yai": [95, 128, 204, 212, 214, 227, 233, 252, 262, 570, 621, 627, 911], "07": [95, 104, 111, 128, 142, 144, 155, 168, 197, 198, 232, 237, 249, 250, 256, 272, 301, 315, 316, 319, 417, 785, 786, 862, 983, 1011, 1055, 1060], "ol": [95, 111, 210, 257, 259, 266, 311, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 531, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 679, 683, 689, 692, 700, 708, 710, 711, 851, 926, 1001, 1006, 1028], "randomsensor": [95, 434, 439, 448, 460, 474, 475, 481, 485, 495, 496, 497, 498, 500, 501, 527, 685, 686, 687, 688, 711, 968], "rectangl": [95, 125, 437, 505, 534, 550, 624, 711], "mystr": [95, 158, 210], "point3d": [95, 550, 624, 711], "cuboid": [95, 550, 624, 711], "hierarchi": [97, 104, 108, 109, 168, 169, 171, 173, 191, 192, 205, 208, 220, 238, 247, 248, 268, 269, 313, 400, 427, 428, 429, 432, 433, 447, 448, 452, 454, 475, 485, 527, 711, 788, 791, 792, 793, 804, 807, 808, 809, 810, 811, 812, 813, 818, 824, 830, 837, 854, 866, 867, 868, 869, 870, 895, 913, 942, 943, 1086], "parent": [97, 107, 108, 109, 134, 147, 149, 238, 247, 248, 268, 269, 709, 711, 738, 788, 790, 791, 792, 793, 794, 803, 804, 807, 808, 809, 810, 811, 812, 813, 821, 822, 823, 824, 825, 827, 829, 830, 831, 842, 854, 866, 867, 868, 869, 870, 895, 901, 942, 943], "login": [97, 111, 112, 137, 139, 172, 184, 238, 301, 302, 711, 785, 786, 788, 789, 790, 792, 794, 795, 796, 804, 807, 808, 809, 810, 811, 812, 813, 819, 854, 855, 863, 866, 867, 868, 869, 870, 871, 873, 875, 892, 942, 943, 1034, 1108, 1117, 1124], "bourn": [97, 111, 148, 172, 174, 238, 247, 248, 268, 302, 303, 304, 307, 320, 321, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 709, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 848, 854, 877, 883, 885, 893, 895, 896, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "verifi": [98, 100, 111, 120, 142, 148, 160, 172, 184, 248, 313, 522, 540, 711, 788, 793, 822, 825, 826, 829, 832, 838, 854, 867, 868, 870, 1022, 1059, 1062, 1088], "joke": [98, 132], "mostli": [98, 218, 320, 325, 331, 343, 359, 389, 398, 543, 584, 686, 691, 726, 794, 797, 818, 884, 911, 914, 935, 1115], "size": [98, 107, 131, 133, 134, 151, 153, 159, 201, 202, 207, 210, 215, 217, 220, 224, 229, 232, 248, 265, 266, 271, 302, 333, 350, 355, 364, 371, 375, 377, 381, 382, 384, 387, 388, 390, 395, 396, 397, 399, 401, 406, 407, 429, 430, 436, 475, 487, 488, 492, 493, 494, 495, 496, 500, 501, 504, 510, 522, 527, 529, 533, 537, 542, 546, 548, 549, 562, 563, 564, 565, 570, 575, 576, 580, 584, 586, 587, 592, 594, 621, 623, 629, 632, 633, 638, 649, 650, 651, 653, 667, 677, 686, 690, 691, 699, 708, 709, 710, 711, 717, 729, 744, 754, 774, 783, 788, 789, 795, 802, 832, 835, 838, 840, 846, 850, 854, 858, 863, 884, 886, 925, 926, 932, 949, 952, 1056, 1072], "secur": [99, 111, 135, 137, 139, 184, 204, 210, 238, 247, 268, 301, 711, 785, 786, 791, 793, 796, 814, 818, 854, 855, 863, 865, 866, 867, 868, 869, 873, 884, 892, 942, 943, 949, 951, 983, 1013], "account": [99, 108, 109, 111, 137, 139, 159, 164, 168, 169, 204, 210, 220, 227, 230, 245, 249, 250, 252, 262, 266, 302, 307, 332, 405, 411, 609, 627, 731, 862, 875, 980, 1060], "authent": [99, 111, 172, 184, 193, 238, 247, 248, 268, 269, 299, 302, 711, 785, 786, 854, 865, 866, 867, 868, 869, 870, 875, 1022], "ownership": [99, 111, 159, 194, 248, 269, 475, 495, 499, 505, 527, 640, 682, 685, 686, 700, 710, 711, 785, 786, 788, 791, 792, 795, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 854, 883, 884, 885, 893, 895, 909, 912, 915, 917, 1113, 1116], "setuid": [99, 111, 172, 238, 247, 248, 268, 269, 711, 788, 793, 813, 854], "send": [99, 111, 114, 129, 132, 143, 168, 169, 171, 172, 173, 174, 207, 208, 227, 229, 230, 248, 269, 302, 307, 451, 782, 798, 814, 857, 858, 862, 871, 881, 929, 931, 1052, 1072], "quick": [100, 111, 164, 171, 189, 193, 199, 208, 215, 229, 241, 271, 454, 691, 845, 855, 1056, 1085], "credenti": [100, 111, 139, 232, 711, 786, 787, 788, 793, 807, 808, 809, 810, 811, 812, 813, 854, 871, 900, 953], "share": [100, 101, 104, 108, 109, 111, 114, 127, 132, 134, 139, 143, 147, 156, 157, 159, 160, 162, 165, 184, 194, 201, 204, 207, 217, 220, 224, 227, 230, 235, 236, 237, 239, 245, 248, 252, 262, 266, 275, 283, 299, 320, 321, 365, 392, 393, 399, 405, 412, 416, 423, 424, 428, 440, 485, 505, 513, 627, 688, 690, 691, 699, 701, 708, 710, 711, 736, 740, 756, 763, 787, 788, 791, 797, 807, 810, 811, 813, 849, 854, 863, 887, 900, 902, 908, 914, 920, 932, 935, 942, 944, 964, 967, 1102, 1117, 1118, 1126, 1128], "adjust": [100, 122, 126, 711, 758, 854, 863, 868, 870, 926, 933], "ubuntu": [101, 133, 139, 143, 147, 159, 160, 161, 162, 172, 237, 239, 248, 320, 711, 797, 854, 857, 875, 934, 935, 942, 943, 947, 1095, 1100], "zoom": [101, 102, 111, 139, 148, 164, 248, 262, 320, 412, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 711, 840, 854, 934, 937, 938, 939, 940, 942, 1107], "recap": [102, 111, 112, 168, 172, 181, 210, 257, 258, 302, 523, 962], "endeavor": 102, "hoop": [102, 797, 929], "doze": [102, 138, 193, 194, 207, 302, 309, 387, 709, 797, 842, 1000, 1006, 1095], "pictur": [102, 129, 132, 153, 164, 168, 261, 262, 399, 405, 484, 770, 818, 820, 840, 855, 874, 878, 1128], "fit": [102, 143, 148, 153, 155, 343, 348, 428, 552, 627, 649, 717, 758, 855, 1059, 1061, 1073], "theori": [104, 168, 372, 399, 1061], "Of": [104, 111, 112, 134, 137, 167, 168, 218, 236, 237, 239, 241, 248, 257, 259, 283, 433, 447, 475, 485, 527, 560, 600, 611, 624, 708, 710, 711, 787, 802, 849, 854, 892, 895, 897, 962, 1056, 1072, 1116], "ece20": [104, 107, 470, 486, 547, 785, 786, 793], "uml": [104, 240, 258, 260, 261, 433, 447, 475, 485, 527, 711], "foundat": [104, 215, 245, 433, 447, 475, 527, 711, 758, 1124], "adapt": [104, 135, 168, 240, 258, 426, 433, 435, 436, 447, 451, 461, 465, 475, 527, 691, 711, 863, 864, 1116], "syllabu": [104, 310], "vote": 104, "beurteilungsschema": 104, "grade": [104, 107, 111, 306, 316, 1093], "total": [104, 107, 134, 143, 147, 151, 204, 220, 230, 237, 398, 403, 411, 425, 434, 449, 483, 484, 485, 486, 537, 547, 686, 840, 842, 855, 862, 863, 864, 875, 898, 926, 933, 934, 935, 944, 947, 1011, 1013, 1100], "compos": [104, 114, 148, 210, 337, 429, 608, 758, 946, 949, 958, 972, 1018, 1072], "practic": [104, 205, 214, 218, 224, 372, 409, 562, 601, 638, 673, 680, 862, 888, 930, 1067, 1086, 1113, 1116], "theoret": [104, 304, 323, 694], "semest": [104, 107, 306, 308], "addition": [104, 131, 134, 348, 432, 449], "deliv": [104, 132, 858, 929, 930], "variou": [104, 134, 210, 236, 237, 685, 699, 701, 758, 790, 1118], "weight": [104, 155, 164, 394, 752, 864, 980], "decid": [104, 133, 134, 139, 164, 218, 398, 428, 489, 503, 567, 754, 758, 778, 862, 963, 980], "excerpt": [104, 168, 171, 304, 305, 1013, 1073], "w1": [104, 111, 248, 470, 486, 487, 892], "soup": [104, 129, 412, 414, 415, 417, 418, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 434, 436, 439, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 483, 485, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 607, 687, 896, 899, 956, 959, 1008, 1093, 1102], "armv8": [104, 143, 248, 487, 933, 946, 947], "rpi4": [104, 143, 248, 487, 933, 946, 947], "gnueabihf": [104, 143, 248, 487, 758, 933, 944, 946, 947], "shape": [104, 125, 153, 155, 194, 256, 257, 475, 505, 527, 547, 627, 711, 758, 884, 1061, 1067, 1077], "algorithm": [104, 133, 142, 153, 201, 207, 215, 217, 220, 228, 230, 236, 237, 257, 266, 399, 475, 492, 516, 523, 527, 554, 565, 567, 568, 570, 571, 574, 575, 591, 594, 595, 624, 669, 677, 679, 690, 694, 711, 1035, 1058, 1062], "find_if": [104, 106, 194, 210, 257, 283, 569, 572, 591, 595, 612, 621, 624, 690, 711], "customiz": [104, 257, 572, 591, 595, 624, 711], "binary_search": [104, 106, 194, 210, 257, 572, 591, 595, 624, 711], "associ": [104, 143, 161, 169, 171, 173, 189, 194, 248, 251, 254, 257, 259, 346, 347, 355, 360, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 475, 476, 492, 494, 527, 562, 591, 595, 624, 627, 629, 655, 667, 708, 710, 711, 717, 724, 782, 856, 884, 956, 986, 987, 988, 1004, 1006, 1063, 1116], "hour": [104, 137, 139, 164, 168, 201, 223, 241, 252, 265, 308, 1018, 1056, 1063], "sent": [104, 132, 133, 172, 277, 405, 451, 798, 906, 926, 930, 1075], "015": 104, "voluntari": 104, "odd": [104, 111, 224, 259, 387, 475, 489, 492, 527, 711, 863, 958, 960], "char": [105, 134, 150, 193, 210, 220, 266, 325, 332, 337, 338, 341, 343, 344, 345, 348, 349, 362, 367, 370, 375, 376, 383, 387, 393, 394, 396, 412, 430, 434, 464, 468, 473, 487, 488, 519, 534, 537, 538, 542, 552, 592, 607, 608, 622, 638, 640, 665, 672, 689, 714, 717, 722, 738, 740, 752, 778, 862, 876, 880, 881, 884, 888, 889, 890, 891, 894, 896, 899, 913, 916, 922, 925, 926, 929, 950, 995, 1001, 1070, 1100, 1105], "cout": [105, 143, 413, 419, 434, 448, 453, 454, 455, 467, 468, 469, 470, 473, 481, 485, 486, 513, 531, 533, 538, 540, 544, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 608, 611, 618, 621, 627, 632, 642, 644, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 669, 671, 672, 674, 675, 677, 679, 688, 689, 690, 691, 699, 701, 702, 801, 862, 896, 899, 911, 913, 925, 929, 1100], "endl": [105, 143, 413, 434, 448, 453, 454, 455, 467, 468, 469, 470, 473, 481, 485, 486, 513, 531, 533, 538, 540, 544, 545, 552, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 608, 611, 618, 621, 627, 642, 644, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 669, 671, 672, 674, 675, 677, 679, 688, 689, 690, 691, 699, 701, 702, 862, 896, 899, 911, 913, 925, 929, 1100], "constitut": 105, "_id": 105, "objectcontain": 105, "add_object": 105, "_contain": [105, 677], "push_back": [105, 458, 459, 522, 563, 564, 565, 570, 573, 576, 580, 584, 631, 632, 635, 640, 699, 929, 1105], "fragment": [105, 400, 960, 1100], "iostream": [105, 201, 207, 217, 220, 434, 448, 453, 454, 455, 463, 467, 468, 469, 470, 473, 481, 485, 513, 531, 533, 538, 540, 544, 545, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 570, 571, 574, 575, 576, 580, 584, 585, 586, 587, 588, 594, 598, 599, 602, 604, 605, 611, 617, 618, 619, 620, 621, 622, 627, 632, 642, 645, 646, 647, 650, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 669, 671, 672, 674, 677, 679, 688, 689, 690, 691, 699, 701, 709, 862, 896, 899, 903, 911, 913, 925, 929, 930, 1100], "my_vector": 105, "sysroot": [106, 143, 933, 947], "intel": [106, 117, 121, 135, 711, 932], "header": [106, 128, 160, 194, 210, 235, 265, 274, 275, 369, 370, 371, 377, 381, 384, 388, 392, 397, 401, 406, 407, 411, 416, 417, 418, 423, 424, 434, 555, 629, 644, 649, 667, 673, 708, 710, 711, 802, 859, 864, 933, 935, 944, 1013, 1046, 1050, 1051, 1053, 1061, 1067, 1115], "match": [106, 131, 138, 167, 180, 197, 204, 205, 207, 212, 220, 230, 232, 233, 242, 245, 265, 266, 272, 367, 411, 486, 640, 644, 664, 677, 681, 793, 802, 875, 935, 955, 1001, 1056, 1100], "linker": [106, 108, 109, 127, 159, 274, 366, 392, 399, 403, 404, 415, 422, 544, 555, 758, 932, 935, 938, 942, 949, 1110, 1111, 1112, 1115, 1120, 1126], "uniquifi": [107, 259, 475, 492, 527, 711], "lookup": [107, 152, 169, 182, 201, 207, 212, 217, 220, 234, 266, 394, 449, 475, 492, 494, 527, 642, 711, 968, 997, 1004, 1034, 1072, 1081, 1130], "leak": [107, 134, 382, 396, 434, 454, 455, 475, 492, 494, 495, 511, 519, 522, 527, 528, 534, 599, 673, 684, 686, 711, 956], "sure": [107, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 172, 184, 191, 208, 210, 250, 299, 393, 428, 429, 432, 451, 454, 455, 484, 510, 607, 681, 706, 758, 863, 864, 885, 889, 944, 956, 1116], "gz": [107, 128, 758, 759, 782, 783, 784, 1011, 1095], "whatev": [107, 131, 132, 134, 139, 155, 170, 230, 288, 405, 451, 530, 630, 655, 709, 823, 825, 875, 880, 916, 918, 986, 1053, 1061, 1071, 1072, 1095], "quiz": [108, 109, 111, 610, 624, 711, 788, 792, 807, 813, 832, 838, 854, 939, 942], "servic": [108, 109, 128, 137, 138, 139, 172, 204, 220, 227, 230, 245, 252, 262, 266, 405, 411, 694, 750, 756, 761, 791, 794, 845, 864, 873, 875, 882, 918, 985], "owner": [108, 109, 133, 172, 302, 307, 687, 717, 758, 791, 805, 806, 814, 840, 875, 903], "dimension": [108, 109, 153, 649, 791, 1061, 1062], "identifi": [108, 109, 133, 142, 201, 207, 217, 220, 266, 348, 370, 391, 393, 403, 618, 716, 756, 791, 862, 864, 1002, 1063], "pthread": [108, 109, 132, 143, 149, 201, 207, 217, 220, 693, 699, 791, 900, 905, 908, 916, 930, 935], "timeslic": [108, 109, 132, 791, 914, 919], "suspend": [108, 109, 132, 133, 655, 657, 697, 754, 789, 791, 802, 905, 930], "favor": [108, 109, 791, 917, 1113], "fair": [108, 109, 132, 756, 791, 917, 919], "ensur": [108, 109, 220, 429, 477, 791], "evenli": [108, 109, 212, 791], "cpu": [108, 109, 131, 132, 135, 139, 142, 165, 175, 179, 259, 313, 317, 385, 386, 398, 400, 405, 563, 694, 701, 711, 729, 742, 756, 763, 768, 778, 789, 791, 794, 798, 854, 862, 863, 864, 878, 895, 903, 905, 915, 916, 917, 918, 919, 966, 983, 1118], "infinit": [108, 109, 132, 152, 171, 201, 205, 207, 210, 212, 217, 220, 228, 261, 265, 360, 378, 385, 791, 795, 914, 917, 960, 961, 962, 991, 1026], "illus": [108, 109, 791, 795, 914, 917, 1118], "action": [108, 109, 142, 171, 227, 412, 418, 530, 609, 817, 818, 879, 884, 916, 929, 931, 1063, 1088], "undefin": [108, 109, 193, 341, 348, 375, 418, 536, 544, 568, 575, 580, 604, 609, 640, 669, 929], "behavior": [108, 109, 132, 134, 137, 169, 191, 193, 220, 348, 568, 575, 580, 609, 640, 657, 791, 885, 889, 930, 933, 953, 958, 975], "declar": [108, 109, 192, 193, 205, 210, 324, 340, 355, 364, 369, 371, 377, 378, 381, 384, 385, 388, 391, 392, 393, 397, 399, 401, 406, 407, 412, 532, 542, 602, 609, 618, 619, 629, 640, 649, 665, 667, 687, 708, 710, 711, 864, 884, 888, 890, 891, 917, 1086, 1102], "promis": [108, 109, 134, 236, 237, 239, 248, 283, 335, 393, 451, 519, 531, 540, 609, 655, 657, 658, 661, 662, 699, 700, 710, 711, 929, 981, 1113], "caller": [108, 109, 134, 210, 335, 337, 373, 379, 403, 405, 542, 609, 621, 638, 687, 689, 694, 697, 750, 761, 901, 905, 956, 1035], "uniniti": [108, 109, 396, 522, 529, 531, 532, 533, 536, 609, 713], "guarante": [108, 109, 132, 170, 201, 220, 387, 432, 609, 722, 729, 863, 864, 917, 918, 926, 953], "contigu": [108, 109, 400, 563, 580, 609, 744, 894, 1080], "vec": [108, 109, 529, 531, 538, 545, 546, 547, 548, 549, 609], "ss2023": 110, "ws2023": 110, "firstnam": [111, 112, 165, 191, 204, 212, 214, 217, 220, 224, 227, 230, 232, 233, 242, 245, 252, 266, 272, 277, 288, 293, 429, 430, 458, 464, 473, 474, 487, 542, 588, 614, 618, 620, 622, 639, 785, 786, 822, 823, 825, 827, 830, 956, 969, 970, 972, 973, 974, 976, 977, 985, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1067, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "lastnam": [111, 112, 165, 194, 204, 210, 212, 214, 217, 220, 224, 227, 230, 232, 233, 245, 252, 266, 272, 277, 288, 293, 429, 430, 458, 464, 473, 474, 487, 542, 588, 612, 614, 618, 621, 624, 639, 711, 785, 786, 822, 823, 825, 827, 830, 956, 969, 970, 972, 973, 974, 976, 977, 985, 1045, 1046, 1047, 1048, 1051, 1052, 1053, 1067, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "bouncem": [111, 112, 486, 487, 785, 786], "procf": [111, 172, 174, 248, 711, 796, 854, 895, 912, 1117, 1124], "umask": [111, 238, 247, 248, 268, 269, 302, 307, 711, 788, 813, 837, 854, 888, 900], "diff": [111, 188, 207, 529, 531, 975, 1119], "raspi": [111, 128, 262, 302, 308, 711, 735, 758, 759, 760, 762, 767, 773, 776, 779, 854, 856, 857, 858, 859, 862, 863, 864, 946, 947], "spirit": [111, 363], "readm": [111, 116, 151, 257, 259, 862, 863], "modular": [111, 164, 169, 171, 199, 218, 250, 304, 305, 335, 412, 932, 959], "plc": 111, "sallok": 111, "constantsensor_nopoli": [111, 112, 475, 481, 527, 711], "randomsensor_nopoli": [111, 112, 475, 527, 711], "ece21": 111, "labexam": 111, "hysteresis_nopoli": [111, 112, 475, 476, 527, 711], "upload": [111, 138, 818, 1011, 1087], "j": [111, 129, 137, 143, 180, 195, 197, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 266, 272, 349, 352, 369, 393, 400, 449, 542, 631, 642, 690, 768, 784, 940, 944, 960, 1072, 1078], "bz2": [111, 133, 405, 758, 780, 783, 953], "influenc": [111, 933, 1113], "felber": 111, "vscode": [111, 162, 308, 322, 840], "folder": [111, 138], "comprehend": [111, 218, 348, 354, 929], "workspacefold": 111, "suppli": [111, 134, 172, 487, 489, 533, 717, 758, 774, 793, 855, 859, 862, 864, 879, 888, 1017, 1065], "cpprefer": [111, 567, 568, 569, 570, 571, 573, 574, 575, 576, 579, 588, 607], "averagingsensor_nopoli": [111, 112, 475, 527, 711], "toolcas": [111, 257, 259, 644], "mocksensor_nopoli": [111, 112, 475, 476, 477, 478, 527, 711], "specifi": [111, 132, 149, 220, 232, 266, 343, 411, 420, 473, 476, 481, 484, 533, 613, 627, 642, 666, 677, 758, 818, 875, 888, 892, 918, 930, 983, 998, 1006, 1010, 1027, 1046, 1048, 1080, 1082, 1088], "hint": [111, 147, 220, 232, 261, 326, 429, 489, 499, 503, 614, 785, 786, 798, 867, 916], "target_link_librari": [111, 160, 415, 417, 418, 419, 420, 424, 470, 506, 509, 515, 521, 524, 928, 933, 934, 1099, 1102, 1104], "inter": [111, 132, 150, 156, 917, 1117, 1124, 1127, 1129], "likewis": [111, 207, 516, 547, 784, 803, 874, 890, 940, 1061, 1102], "ledstripedisplay_nopoli": [111, 112, 475, 527, 711], "nopoli": [476, 477, 478, 479, 480, 481, 482], "stripe": 476, "hysteresi": [112, 311, 477], "checkout": [114, 124, 135, 147, 161, 731, 758, 759, 1125], "dir": [114, 165, 184, 192, 205, 214, 217, 224, 242, 245, 265, 266, 287, 295, 376, 411, 412, 418, 423, 803, 933, 934, 946, 969, 1086, 1088, 1095], "wo": [114, 140, 150, 151, 159, 165, 167, 320, 1110, 1111, 1129], "sinc": [114, 143, 149, 194, 200, 231, 298, 399, 402, 531, 539, 540, 570, 583, 626, 627, 655, 676, 681, 687, 702, 709, 758, 862, 875, 882, 888, 891, 903, 918, 925, 986, 1114], "libgpiod": [114, 115, 129, 259, 288, 290], "jf": [114, 125, 139, 176, 177, 235, 252, 302, 307, 321, 451, 465, 733, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1118, 1123], "aon": 114, "client": [114, 137, 139, 150, 195, 199, 227, 241, 409, 437, 438, 451, 690, 691, 858, 871, 873, 881, 926, 1071, 1088], "biz": 114, "svn": [114, 128, 148, 194, 320, 321], "recommend": [114, 143, 164, 172, 184, 217, 399, 552, 583, 758, 818, 863, 1011, 1068, 1076], "lokalen": 114, "fetch": [114, 133, 147, 758, 901, 929], "myremot": 114, "orig": [114, 135, 182], "stia": 114, "improv": [115, 399, 402, 414, 670, 685, 709, 951], "stack": [115, 153, 154, 155, 162, 176, 177, 195, 201, 204, 207, 217, 220, 227, 230, 245, 252, 262, 266, 393, 399, 449, 533, 564, 684, 791, 795, 863, 888, 900, 1123], "hang": [115, 175, 529, 761, 784], "seo": [115, 770], "blog": [115, 128, 132, 135, 142, 147, 689], "i2": [115, 117, 122, 227, 262, 711], "audio": [115, 120, 134, 139, 711, 1117], "kontron": [115, 124, 711], "smarc": [115, 124, 711], "pointless": [115, 245, 259, 266, 391, 538], "asyncio": [115, 164, 168, 218, 259, 655, 1056], "proper": [116, 132, 160, 385, 733, 758, 890, 975], "manifest": [116, 944, 1096], "cfg": [116, 124], "author_email": 116, "classifi": [116, 1011, 1058], "tox": 116, "ini": [116, 137, 151, 310, 313, 1093], "travi": 116, "yml": 116, "upgrad": [116, 120, 121, 151, 711, 1088, 1095], "zip": [116, 124, 128, 192, 212, 218, 232, 245, 818, 824, 840], "zipfil": [116, 192], "99": [116, 142, 151, 165, 175, 182, 188, 191, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307, 403, 919, 995, 1030, 1060], "999": [116, 204, 207, 220, 227, 230, 245, 252, 262, 266], "whl": [116, 128, 1011, 1088], "uninstal": [116, 417, 1088, 1093], "pypa": 116, "sampleproject": 116, "devicetre": [117, 863], "connect": [117, 132, 139, 152, 172, 184, 205, 248, 277, 299, 307, 308, 383, 701, 789, 851, 855, 856, 863, 864, 873, 878, 884, 898, 1068, 1070, 1075, 1088, 1116, 1128, 1130], "signal": [117, 128, 129, 157, 259, 320, 403, 701, 711, 729, 750, 795, 854, 855, 863, 895, 900, 908, 916, 917, 922, 926, 1119, 1126, 1127, 1130], "audio_mck": 117, "i2s0_ck": 117, "i2s0_lrck": 117, "i2s0_sdout": 117, "alsa": [117, 135], "tlv320dac3203irg": 117, "tlv320dac3203": 117, "drive": [117, 250, 389, 477, 863, 884, 1063], "suggest": [117, 131, 132, 134, 136, 138, 139, 147, 156, 164, 171, 172, 173, 174, 218, 237, 239, 257, 259, 363, 980, 1008, 1093], "tlv320aic32x4": 117, "compat": [117, 137, 153, 256, 538, 628, 644, 709, 714, 733, 935, 981, 1004, 1072, 1088, 1089], "tlv320aic31xxsw": 117, "tlv320aic31xx": 117, "wget": [118, 137, 139, 143, 262, 944, 946], "cdimag": 118, "amd64": [118, 184, 299, 343], "iso": [118, 192, 210, 211, 227, 230, 250, 272, 323, 411, 528, 544, 782], "netinst": 118, "img": [118, 153, 155, 398, 758, 862], "qcow2": 118, "virtualdebian": 118, "30g": [118, 139], "kvm": [118, 135], "hda": 118, "cdrom": 118, "2048": [118, 142, 207], "nic": 118, "sic": [118, 143], "box": [118, 122, 164, 855, 862, 980], "order": [119, 125, 131, 137, 138, 142, 143, 152, 164, 165, 168, 170, 201, 207, 212, 218, 222, 224, 227, 257, 274, 328, 354, 365, 387, 399, 414, 429, 448, 503, 505, 512, 514, 577, 623, 709, 713, 729, 742, 758, 847, 855, 862, 864, 880, 919, 944, 960, 980, 1028, 1038, 1115], "deliveri": [119, 123, 132, 928, 931], "outcom": [120, 168, 173, 259, 758, 817, 818, 940, 1012], "dirti": [120, 121, 134, 148, 369, 434, 711], "forget": [120, 125, 132, 133, 134, 208, 334, 337, 382, 411, 1068, 1074, 1094, 1113], "situat": [120, 132, 134, 143, 164, 191, 483, 484, 487, 499, 561, 638, 752, 758, 809, 811, 855, 871, 890, 918, 935, 944, 947, 948, 996, 1108, 1113], "graphic": [120, 404, 793, 794, 863], "plug": [120, 133, 135, 433], "monitor": [120, 135, 149], "4k": [120, 134, 916, 925], "dual": [120, 122], "gnome": [120, 132, 137, 204, 220, 227, 230, 245, 252, 262, 266, 405, 758, 793, 849, 917], "applianc": [120, 134, 405], "automat": [120, 134, 136, 138, 139, 147, 182, 184, 188, 194, 201, 207, 217, 220, 224, 257, 259, 339, 348, 375, 392, 395, 399, 411, 440, 441, 530, 533, 598, 602, 640, 669, 714, 729, 758, 862, 864, 891, 953, 1006, 1013, 1018], "x11": 120, "wayland": [120, 137], "benchmark": 120, "glxgear": 120, "su": [120, 946], "pect": 120, "cluster_project_xxx": [121, 711], "project_xxx_dirty_upgrad": [121, 711], "project_xxx_debian_config": [121, 711], "project_xxx_yocto_kernel": [121, 711], "bsp": [121, 711], "project_xxx_debian_kernel_packag": [121, 711], "finish": [121, 164, 183, 694, 711, 768, 967], "project_xxx_hardware_bringup": [121, 711], "bringup": [121, 122, 711], "project_xxx_audio_chip": [121, 711], "chip": [121, 150, 204, 711, 855, 859, 862, 880, 882, 916, 1013], "project_xxx_wait_hardwar": [121, 711], "shot": [122, 139, 363, 627, 701, 709], "dac": 122, "massacr": [122, 151, 210, 302, 363, 369, 395, 419, 627, 963], "distro": [122, 417, 987, 1102], "bootload": [122, 131, 142, 405, 794, 862, 864], "oldconfig": [122, 133, 731, 738, 758, 759], "qemu": [122, 204, 220, 227, 230, 245, 252, 262, 266], "grub": [122, 142], "stabl": [122, 139, 143, 409, 736, 758, 797, 916, 948, 950, 1011, 1089], "yoctoproject": 124, "v5": [124, 135], "bsp_smarc": 124, "sxal4_smarc": 124, "sxal_r1": 124, "0_combin": 124, "sxal4_5": 124, "sxal4": 124, "inc": [124, 135, 256, 386, 423, 424, 696, 903, 966], "filesextrapaths_prepend": 124, "thisdir": 124, "linux_vers": 124, "linux_version_extens": 124, "linux_kernel_typ": 124, "kbranch": 124, "kmeta": 124, "lic_files_chksum": 124, "md5": 124, "bbea815ee2795b2f4230826c0c6b8814": 124, "srcrev_machine_pn": 124, "3604bc07c035939266d78d65084c6cd54ffc6d56": 124, "srcrev_meta_pn": 124, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 124, "src_uri": 124, "bareclon": 124, "cach": [124, 128, 133, 259, 262, 385, 399, 404, 405, 563, 580, 840, 917, 1088, 1095, 1111], "destsuffix": 124, "scc": 124, "pv": 124, "srcpv": 124, "include_patch": 124, "patch": [124, 143, 144, 918, 946, 1108], "compatible_machin": 124, "therebi": [125, 164, 635, 849, 929, 975, 1013], "made": [125, 126, 131, 132, 133, 135, 138, 139, 143, 147, 184, 199, 224, 248, 302, 334, 372, 373, 375, 378, 409, 429, 433, 449, 455, 655, 742, 758, 789, 790, 795, 855, 862, 888, 894, 899, 917, 935, 960, 967, 977, 1013, 1061], "special": [125, 128, 132, 179, 212, 214, 220, 224, 248, 324, 376, 437, 448, 451, 454, 455, 499, 522, 527, 640, 642, 696, 707, 784, 795, 800, 856, 878, 884, 906, 930, 949, 954, 973, 975, 983, 992, 994, 998, 1058, 1063, 1098, 1118, 1119], "node": [125, 137, 142, 152, 383, 403, 420, 583, 714, 717, 721, 727, 736, 948, 1075, 1093], "simplifi": 125, "fine": [125, 134, 139, 168, 414, 415, 530, 642, 644, 738, 768, 875, 879, 947, 964, 976, 985, 991, 1006, 1072], "grain": [125, 139, 411, 414, 768, 976, 991], "surround": [125, 628, 669, 681], "cut": [125, 153, 171, 184, 224, 238, 247, 268, 269, 348, 383, 711, 748, 788, 802, 848, 851, 854, 864], "linewis": 125, "wherev": [125, 327], "obs studio": 126, "video edit": 126, "screen record": 126, "These": [126, 134, 136, 137, 201, 207, 217, 220, 414, 427, 731, 758, 862, 934], "offici": [126, 168, 169, 172, 173, 174, 179, 527, 946, 1098], "jonathan": [126, 303, 304, 1108], "himself": [126, 864], "paus": [126, 134, 916, 929], "bit": [126, 131, 132, 134, 137, 139, 142, 143, 164, 165, 168, 175, 194, 205, 207, 208, 214, 238, 241, 247, 248, 251, 254, 268, 269, 297, 302, 307, 313, 325, 331, 337, 343, 348, 355, 364, 371, 372, 377, 381, 384, 387, 388, 397, 401, 406, 407, 470, 484, 545, 629, 664, 667, 677, 687, 708, 710, 711, 754, 758, 777, 788, 789, 813, 815, 817, 854, 855, 856, 858, 863, 865, 888, 916, 933, 942, 952, 992, 1056, 1072, 1108, 1113], "meanwhil": 126, "freez": [126, 1088, 1096], "frame": [126, 137, 149, 171, 201, 207, 217, 220, 250, 256, 382, 395, 399, 449, 640, 856, 857, 1077], "photo": 126, "length": [126, 188, 191, 201, 207, 217, 220, 249, 256, 266, 411, 483, 534, 546, 607, 729, 742, 754, 856, 858, 884, 894, 926, 1061, 1072, 1076, 1083], "grab": [126, 855, 863], "neil": 127, "patel": 127, "insight": [127, 131, 414, 944, 1087], "consol": [127, 184, 793, 796, 851, 1035, 1119], "crawlabl": 127, "dn": [127, 136, 139, 204, 220, 227, 230, 245, 252, 262, 266, 1130], "domain": [127, 128, 138, 139, 144, 395, 409, 421, 917, 1055, 1058, 1128, 1130], "ipc": [127, 128, 129, 132, 319, 321, 709, 711, 854, 895, 923, 1128], "queue": [127, 128, 133, 142, 143, 150, 156, 176, 177, 179, 208, 236, 237, 239, 248, 260, 261, 279, 283, 451, 700, 710, 711, 752, 760, 778, 791, 795, 854, 895, 905, 909, 1123, 1127, 1128, 1129], "pydbu": 128, "openh": [128, 129, 150, 191], "traceback": [128, 154, 201, 207, 217, 220, 230, 250, 252, 266, 953, 954, 955, 960, 968, 969, 975, 976, 997, 998, 1002, 1004, 1007, 1008, 1064, 1072, 1080, 1081, 1094], "recent": [128, 131, 134, 139, 154, 162, 201, 207, 217, 220, 230, 250, 252, 266, 323, 758, 837, 953, 954, 955, 960, 968, 969, 975, 976, 997, 998, 1002, 1004, 1007, 1008, 1064, 1072, 1080, 1081, 1094], "oh_test": 128, "easysuit": 128, "oh_dbus_easysuit": 128, "easysuite_error": 128, "error_suit": 128, "dbusheatingerror": 128, "modulenotfounderror": [128, 245, 250, 955], "research": [128, 131, 132, 245, 1062], "pygobject": 128, "714": [128, 207], "kb": [128, 134, 1095], "venv": [128, 165, 191, 201, 207, 217, 218, 220, 232, 262, 309, 310, 840, 1010, 1043, 1056, 1074, 1080, 1081, 1087, 1093, 1095, 1096], "standalon": [128, 387, 640, 929, 1100], "ss_9wmug": 128, "__env_pip__": 128, "ignor": [128, 149, 161, 220, 266, 313, 349, 369, 399, 421, 429, 627, 642, 655, 677, 716, 800, 863, 888, 930, 953, 1088], "9lrqmi4l": 128, "overlai": [128, 758, 862, 863], "locat": [128, 129, 133, 138, 143, 164, 201, 207, 217, 220, 224, 274, 302, 320, 372, 385, 393, 399, 427, 449, 542, 562, 638, 686, 733, 758, 862, 863, 864, 884, 902, 926, 933, 953, 1060, 1080, 1115], "pycairo": 128, "cwd": [128, 484, 709, 784, 795, 821, 840, 842, 846, 934], "821": [128, 207], "py2": 128, "344": [128, 207, 220, 252, 266], "517": [128, 207, 252], "tmpabab356k_in_process": 128, "build_wheel": 128, "tmpt1yod7mc": 128, "o4u45fjc": 128, "pycairo_33865a19ad6b4a719885f07926efe16d": 128, "bdist_wheel": [128, 1011], "build_pi": 128, "x86_64": [128, 135, 137, 184, 191, 299, 322, 348, 486, 547, 731, 736, 935, 944], "cairo": 128, "pyi": 128, "build_ext": 128, "pkg": 128, "perhap": [128, 224, 727, 1067], "pkg_config_path": 128, "gobject": 128, "introspect": [128, 916], "cp39": 128, "linux_x86_64": 128, "lib64": [128, 160, 165, 191, 201, 207, 217, 220, 224, 405, 415, 417, 422, 932, 935, 949, 956, 1080, 1081, 1088, 1102], "_vendor": 128, "pep517": 128, "in_process": 128, "_in_process": 128, "tmpf2wjv23h": 128, "4rtfumdz": 128, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 128, "pygtkcompat": 128, "generictreemodel": 128, "_signalhelp": 128, "_propertyhelp": 128, "_ossighelp": 128, "_option": 128, "_gtktemplat": 128, "_error": [128, 458], "_constant": 128, "overrid": [112, 128, 192, 205, 220, 235, 428, 434, 436, 441, 456, 458, 459, 460, 462, 463, 465, 487, 601, 602, 666, 667, 710, 711, 953, 968, 1086, 1105], "keysym": 128, "pango": 128, "gio": 128, "gdkpixbuf": 128, "gdk": 128, "glib": 128, "gimarshallingtest": 128, "tmp56g_ixbz": 128, "bvay4iv4": 128, "pygobject_6777f13e15934fb2b13139399b143557": 128, "todo": [128, 173, 208, 236, 237, 315, 316, 485, 627, 712, 1066], "summari": [128, 169, 434, 537, 686, 1093], "explan": [128, 131, 134, 160, 164, 171, 194, 225, 302, 403, 424, 505, 758, 789, 855, 863, 890, 920, 925, 1059, 1062, 1066, 1095], "pseudo": [128, 134, 152], "gmunden": [128, 140, 320], "beliv": 128, "style": [128, 132, 137, 201, 207, 210, 217, 220, 259, 395, 410, 411, 505, 530, 531, 536, 570, 604, 607, 618, 627, 632, 663, 679, 704, 726, 775, 898, 984, 1025, 1050, 1061], "c1": [128, 142, 432, 546, 631], "misc": [128, 129, 151, 152, 505, 727, 771, 1112], "w3school": 128, "howto": [128, 129, 729], "howto_css_image_transpar": 128, "asp": 128, "titelseit": 128, "mitt": 128, "howto_js_read_mor": 128, "subdir": [128, 709, 953], "gegen": [128, 1108], "clutter": [128, 161], "404": [128, 138, 207, 214, 252, 266], "prio": [128, 170, 918, 919, 925], "beagleboard": [128, 133, 144], "repair": [128, 144, 204], "nand": [128, 144], "40w": [128, 144], "fedora": [128, 137, 143, 144, 147, 161, 248, 499, 711, 715, 718, 720, 723, 725, 728, 735, 737, 738, 739, 743, 749, 755, 759, 762, 767, 773, 776, 779, 814, 818, 854, 857, 934, 935, 942, 943, 944, 947, 1075, 1100], "suck": [128, 129, 144], "disk": [128, 131, 132, 135, 139, 144, 398, 794, 795, 815, 844, 879, 880, 949, 1006, 1108], "contact": [128, 1115], "ssl": [128, 139, 1088], "certif": [128, 139, 142, 189, 218, 1086, 1088], "070": [128, 627], "fortgeschritten": [128, 321, 1110], "700": [128, 207, 580, 688, 871], "lf": [128, 191, 465, 1006], "descr": [128, 212], "050": [128, 627, 928, 929], "080": [128, 607, 627], "020": [128, 207, 248, 607, 627, 924, 925, 928, 929], "060": [128, 129, 168, 310, 627], "_hidden": 128, "010": [128, 627, 817, 921, 922, 924, 925, 928, 929], "190": [128, 165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "propos": [128, 395, 473], "030": [128, 627, 637, 687, 924, 925, 928, 929], "040": [128, 627, 924, 925, 928, 929], "central": [129, 161, 194, 323, 367, 427, 709, 949, 994, 1006, 1116], "rstjinja": 129, "105": [129, 151, 165, 175, 180, 182, 188, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 920], "110": [129, 136, 151, 165, 175, 182, 188, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297, 467, 468, 627, 817, 924, 925], "cxx_class_templ": [129, 527, 711], "cxx_dynamic_memori": [129, 527, 711], "cxx_global_initi": [129, 527, 711], "cxx_inheritance_virtu": [129, 527, 711], "cxx_ownership_raii": [129, 527, 711], "cxx_stl_container_intro": [129, 527, 711], "cxx_templates_vs_interfac": [129, 527, 711], "maj": [129, 715], "min": [129, 245, 715, 1061], "cdev": [129, 714, 715, 717, 721, 722, 727], "fop": [129, 715, 722], "devtmpf": [129, 714, 715, 760], "dynam": [129, 159, 167, 168, 201, 207, 217, 218, 220, 263, 320, 384, 388, 397, 401, 406, 407, 417, 448, 485, 516, 525, 527, 534, 599, 601, 604, 605, 624, 629, 638, 667, 691, 708, 710, 711, 715, 720, 725, 728, 730, 735, 739, 749, 753, 755, 760, 762, 767, 773, 776, 779, 784, 795, 854, 903, 905, 914, 932, 933, 972, 986, 1007, 1056, 1114, 1118], "auto": [129, 141, 149, 153, 159, 235, 429, 434, 458, 459, 463, 464, 467, 468, 469, 522, 530, 539, 540, 563, 585, 586, 588, 629, 630, 637, 644, 647, 649, 652, 655, 656, 657, 659, 660, 661, 662, 663, 667, 669, 670, 671, 672, 677, 679, 681, 686, 687, 688, 690, 701, 705, 706, 707, 708, 709, 710, 711, 758, 929, 1113, 1124, 1129], "sysprog_ev": 129, "sysprog_ipc": 129, "sysprog_sign": 129, "unittest_gtest_bas": [129, 711, 1098], "unittest_gtest_fixtur": [129, 711, 1098], "brows": [129, 131, 147, 797, 863], "blender": 129, "corda": 129, "figclass": 129, "homebrain": [129, 250, 262, 840, 841], "literalinclud": 129, "within": [129, 134, 210, 220, 266, 320, 476, 477, 481, 486, 531, 602, 665, 722, 855, 967, 984, 996, 1083], "045": [129, 248], "tex": 129, "055": 129, "056": 129, "910": [129, 207, 840], "glt": 129, "virtmem": 129, "tester": [129, 1093, 1119], "fart": 129, "ungern": 129, "lost": [129, 139, 204, 210, 396, 505, 627, 686, 871, 905, 908, 925, 967, 1093, 1094, 1100], "he": [129, 133, 147, 155, 164, 168, 171, 184, 189, 192, 194, 215, 218, 241, 260, 261, 265, 279, 640, 642, 677, 680, 873, 906, 919, 930, 972, 1000, 1056, 1085], "subscrib": [129, 208, 220], "friend": [131, 132, 179, 200, 236, 237, 239, 248, 259, 283, 405, 468, 545, 700, 701, 710, 711, 729, 750, 855, 1102], "alia": [131, 136, 184, 210, 381, 384, 388, 397, 401, 406, 407, 415, 629, 667, 708, 710, 711, 818, 819, 946], "rm": [131, 133, 137, 138, 172, 174, 302, 307, 865, 875, 1095], "rf": [131, 133, 818, 828, 1095], "creativ": [131, 209, 1065], "variat": [131, 689, 763, 800], "thereof": [131, 248, 256, 432, 549, 972], "happili": [131, 132, 210, 395, 544], "stage3": 131, "decad": [131, 139, 156, 758, 862, 864, 875, 954, 1116], "busybox": [131, 132], "initramf": [131, 783], "resid": [131, 134], "flash": [131, 134, 139, 405, 796, 855, 916], "correct": [131, 139, 143, 171, 191, 193, 204, 302, 348, 385, 389, 390, 397, 400, 401, 406, 407, 409, 437, 505, 537, 602, 604, 605, 637, 682, 685, 693, 711, 801, 805, 806, 830, 862, 863, 864, 917, 959, 967, 1061, 1088], "eras": [131, 464, 522, 583, 688, 705, 815], "hit": [131, 133, 134, 153, 156, 194, 709, 818, 847, 850, 1088], "sole": 131, "liter": [131, 154, 170, 175, 182, 192, 200, 201, 205, 212, 217, 220, 224, 227, 236, 237, 245, 252, 266, 283, 294, 298, 302, 329, 337, 344, 393, 448, 463, 483, 627, 640, 758, 930, 987, 1000, 1004, 1086], "told": [131, 134, 415, 454, 855], "reboot": [131, 133, 150, 758, 819, 862, 863, 864], "fatal": [131, 159, 413, 423, 758, 1101], "saw": [131, 134, 164, 193, 313, 350, 531, 888, 890], "termin": [131, 133, 137, 151, 162, 184, 230, 232, 248, 251, 254, 257, 259, 261, 324, 327, 331, 334, 337, 344, 356, 362, 385, 405, 411, 423, 427, 453, 454, 486, 505, 534, 655, 661, 688, 694, 774, 793, 796, 800, 801, 802, 818, 840, 850, 851, 884, 902, 906, 911, 916, 928, 929, 930, 985, 987, 991, 1006, 1018, 1035, 1063, 1072, 1075, 1124], "115200": 131, "8n1": 131, "remaind": [131, 132, 135, 137, 160, 164, 248, 736, 758, 855, 863, 934], "recov": [131, 151], "fauxpa": 131, "annot": [131, 192, 241, 404, 528, 1056], "beagl": 131, "omap": 131, "rom": 131, "stage": [131, 147, 193, 1063], "processor": [131, 132, 191, 192, 205, 343, 387, 580, 691, 758, 763, 900, 917, 932, 1086], "sram": 131, "dram": 131, "latter": [131, 134, 916, 956, 996, 1063], "abil": [131, 627], "press": [131, 738, 775, 818, 855], "wrote": [131, 134, 310, 1113], "board": [131, 133, 758, 862], "ones": [131, 147, 154, 156, 220, 258, 266, 331, 399, 863, 864, 989, 1076], "revis": [131, 135, 138, 235, 528, 626, 1113], "slightli": [131, 143, 164, 193, 210, 211, 505, 984], "season": 131, "c4": [131, 142], "valuabl": [131, 403, 785, 786, 948, 950, 956], "c3": [131, 135, 142], "angstrom": 131, "mlo": 131, "ift": 131, "fdisk": [131, 1108], "obvoiusli": 131, "fat32": [131, 758], "fat16": 131, "partit": [131, 132, 133, 220, 266, 758], "mount": [131, 133, 248, 308, 714, 758, 789, 898, 925, 926, 935, 944, 946], "sector": [131, 204, 1013], "intend": [131, 137, 138, 139, 149, 184, 201, 207, 217, 220, 414, 731, 863, 890, 891, 1011], "slot": [131, 894, 975], "partli": [131, 133, 391], "meaning": [131, 139, 740], "hold": [131, 133, 152, 168, 170, 171, 191, 218, 325, 337, 357, 429, 559, 614, 621, 672, 677, 691, 699, 722, 756, 760, 761, 855, 862, 918, 956, 969, 991, 1039, 1061], "scr": 131, "omap3": 131, "mmc1": 131, "arch": [131, 135, 738, 758, 759, 862], "mach": [131, 193, 198, 214], "omap2": 131, "omap3beagl": 131, "Near": 131, "notic": [131, 132, 134, 147, 201, 207, 217, 220, 395, 414, 415, 472, 707, 798, 902, 904, 964, 1081], "offset": [131, 729, 887, 949], "128k": 131, "0x80000": 131, "byte": [131, 134, 147, 149, 151, 201, 207, 217, 220, 227, 230, 245, 266, 272, 287, 302, 325, 333, 343, 344, 375, 378, 387, 390, 396, 400, 434, 529, 534, 537, 542, 549, 562, 686, 772, 789, 795, 818, 849, 856, 862, 879, 880, 881, 884, 886, 888, 889, 890, 891, 914, 917, 922, 925, 929, 981, 987, 992, 1006, 1064, 1072], "reli": [131, 164, 676, 768, 987], "ecc": [131, 135], "nandecc": 131, "hw": 131, "80000": 131, "0x0": [131, 862], "0x60000": 131, "unlik": [131, 184, 235, 691, 698, 855, 995, 1077, 1118], "intermedi": [131, 152, 432, 932, 981], "nevertheless": [131, 132, 139, 251, 254, 758], "0x20000": 131, "fatload": 131, "80200000": 131, "20392": 131, "131072": [131, 716], "40000": 131, "0x40000": 131, "60000": 131, "incarn": [131, 139, 369, 675], "choic": [131, 132, 133, 156, 192, 205, 224, 399, 409, 419, 484, 532, 601, 686, 862, 916, 944, 1075, 1086], "finger": [131, 142, 399, 797, 855], "sw": [131, 482], "0x1e0000": 131, "1e0000": 131, "0x240000": 131, "275928": 131, "1966080": 131, "prompt": [131, 139, 142, 152, 184, 195, 223, 232, 790, 818, 820, 863, 871, 981, 982, 1018, 1022, 1035, 1041, 1095], "280000": 131, "400000": [131, 863, 1061], "month": [132, 194, 204, 252, 256, 344], "met": [132, 391, 864], "microcontrol": [132, 360, 855, 863, 916], "clue": 132, "minim": [132, 134, 143, 152, 393, 399, 552, 840, 944, 955], "vxwork": 132, "ce": [132, 142, 946], "quit": [132, 134, 137, 259, 370, 385, 387, 605, 620, 759, 818, 819, 850, 855, 863, 906, 929, 944], "blob": [132, 248, 259, 322, 505, 758], "presenc": [132, 134, 421, 1118], "disabl": [132, 135, 137, 143, 201, 207, 217, 220, 370, 750, 756, 761, 763, 918, 1088, 1108], "probabl": [132, 138, 164, 224, 254, 294, 420, 425, 530, 635, 758, 770, 818, 864, 916, 992, 1006, 1072, 1075], "term": [132, 134, 156, 184, 224, 257, 259, 299, 399, 542, 545, 609, 687, 690, 791, 864, 883, 917, 929, 1061, 1100], "sooner": [132, 147, 395, 761], "chose": [132, 143, 210, 621, 842, 875, 944], "opinion": [132, 143, 164, 218, 709, 797, 964], "stori": [132, 133, 134, 138, 139, 143, 160, 161, 193, 256, 380, 513, 531, 545, 733, 736, 759, 797, 858, 875], "unless": [132, 214, 220, 224, 266, 599, 632, 784, 840, 901, 987, 1006, 1080], "hire": 132, "cheap": [132, 134, 412, 542, 635, 640, 676, 677, 763, 1113], "misl": 132, "posix": [132, 134, 157, 693, 700, 702, 710, 711, 795, 854, 884, 895, 901, 905, 907, 915, 923, 1006, 1127, 1128], "tell": [132, 133, 134, 137, 138, 139, 147, 161, 208, 392, 563, 784, 864, 932], "pitfal": [132, 216, 236, 237, 239, 283, 302, 563, 642, 667, 668, 669, 687, 710, 711, 855, 1113], "seen": [132, 134, 139, 152, 165, 193, 335, 354, 392, 427, 437, 729, 754, 783, 903, 1063, 1070, 1105], "didn": [132, 133, 134, 143, 164, 168, 184, 194, 218, 758, 837, 889, 1006, 1008, 1056, 1060], "rtoss": 132, "commonli": [132, 201, 224, 251, 254, 441, 702, 709, 744, 778, 820, 884, 932, 1084], "tear": [132, 237, 434, 483, 484, 485, 486, 547, 686, 727, 932, 1100], "notif": [132, 137, 156, 699, 859, 930], "dread": 132, "segment": [132, 134, 367, 476, 542, 665, 685, 916, 926], "fault": [132, 134, 315, 316, 367, 542, 685, 916], "arriv": [132, 750, 775, 914, 929], "handler": [132, 201, 207, 217, 220, 259, 266, 403, 738, 740, 768, 900, 916, 928, 931], "pai": [132, 256, 398, 421, 789], "attent": [132, 188, 204, 212, 333, 354, 356, 385, 404, 414, 564, 569, 638, 669, 672, 750, 918, 953, 1082, 1105], "safe": [132, 201, 207, 208, 217, 220, 230, 395, 635, 677, 679, 687, 701, 871, 876, 900, 903, 908, 931], "pthread_": 132, "defer": [132, 409, 756, 778], "trick": [132, 189, 199, 202, 205, 229, 241, 265, 271, 370, 1056], "asynchron": [132, 201, 207, 217, 220, 288, 879, 896, 899, 929, 930], "sigwait": [132, 929], "sigwaitinfo": 132, "sigtimedwait": 132, "caught": [132, 201, 207, 217, 220, 402, 552], "synchron": [132, 204, 210, 220, 227, 230, 245, 252, 260, 261, 262, 266, 279, 694, 700, 710, 711, 849, 854, 879, 895, 901, 902, 909, 915, 916, 926, 928, 931, 1118], "dedic": [132, 133, 164, 169, 218, 248, 251, 254, 395, 411, 726, 796, 797, 862, 863, 864, 898, 900, 934, 952, 963, 996, 1116], "signalfd": [132, 884, 922, 1127, 1128], "Its": [132, 134, 137, 483, 847, 917], "emb": 132, "among": [132, 156, 164, 201, 207, 217, 220, 392, 686, 803, 862, 884, 890, 914, 930, 980, 1067, 1068, 1093, 1116], "epol": [132, 898, 922, 926, 1128, 1130], "err": [132, 171, 191, 256, 486, 583, 722, 752, 754, 789, 856, 858, 862, 975, 1081], "naiv": [132, 152, 207, 210, 274, 387, 420, 429, 521, 523, 537, 604, 685, 707, 766, 900, 920, 931, 961, 962, 1063, 1071, 1105, 1115], "intra": 132, "oss": 132, "synchronis": [132, 900, 1129], "pthread_mutex_init": [132, 699, 903], "critical_sect": 132, "closest": [132, 635], "pendant": [132, 522, 717], "expir": [132, 768, 882, 914, 916, 930], "sometim": [132, 147, 224, 359, 375, 399, 536, 626, 789, 796, 889, 901, 946, 952, 983, 1093], "api": [132, 139, 156, 179, 193, 220, 313, 317, 711, 714, 721, 729, 736, 740, 752, 854, 895, 907, 915, 918, 926, 1011, 1070, 1089, 1117, 1118], "setitim": 132, "timer_cr": [132, 916], "drawback": [132, 369, 386, 391, 396, 440, 563, 871], "unfortun": [132, 133, 156, 193, 454, 855, 863, 1077], "straightforward": [132, 211, 649, 687, 726, 958, 975, 993, 1061], "nanosleep": [132, 701, 916], "timerfd_cr": [132, 882, 884, 1127, 1128], "conjunct": 132, "emul": [132, 237, 239, 257, 387, 396, 402], "stupid": [132, 134, 191, 207, 210, 212, 344, 369, 375, 393, 399, 409, 635, 690, 775, 837, 879, 960, 1006], "screw": [132, 589], "otherwis": [132, 133, 218, 220, 224, 261, 266, 293, 348, 359, 385, 395, 545, 583, 640, 669, 676, 691, 697, 729, 742, 750, 758, 766, 785, 786, 871, 900, 905, 911, 926, 955, 984, 987, 1004, 1006, 1025, 1036, 1105], "millisecond": [132, 201, 207, 217, 220, 688, 702, 766, 863], "etern": 132, "nowadai": [132, 134, 136, 137, 193, 260, 261, 279, 325, 343, 733, 768, 793, 796, 884, 930, 1072], "imagin": [132, 134, 389, 394, 395, 427, 440, 758, 797, 814, 855, 864, 903, 930], "moder": [132, 139, 199], "tri": [132, 133, 134, 143, 147, 153, 164, 212, 313, 484, 614, 697, 709, 855, 864, 917, 1113], "achiev": [132, 191, 224, 605, 914, 967], "albeit": [132, 449, 675, 911, 992, 1113], "lose": [132, 183, 194, 214, 217, 220, 230, 991], "wealth": 132, "socket": [132, 150, 171, 241, 709, 711, 791, 794, 854, 879, 883, 884, 895, 926, 930, 1088, 1127, 1128, 1130], "arbitrari": [132, 153, 220, 224, 329, 345, 363, 399, 414, 552, 579, 580, 632, 690, 702, 717, 859, 884, 888, 916, 956, 992, 1006, 1034], "uart": [132, 391, 791], "mention": [132, 133, 160, 164, 168, 194, 218, 260, 261, 279, 472, 486, 670, 770, 863, 951, 1056, 1075], "previous": [132, 201, 207, 217, 220, 224, 930, 1113], "regardless": [132, 370, 863], "surpris": [132, 134, 248, 393, 598, 951, 975], "anyon": [132, 519, 729], "alon": [132, 133, 134, 147, 257, 259, 399, 403, 644, 996, 1063, 1118], "advantag": [132, 391, 542], "consid": [132, 134, 164, 168, 192, 201, 207, 217, 218, 220, 224, 248, 266, 363, 390, 391, 399, 451, 605, 818, 862, 917, 972, 980, 1056, 1087, 1088, 1115], "regularli": [132, 396], "buffer": [132, 220, 245, 260, 261, 266, 279, 331, 460, 465, 640, 774, 802, 876, 879, 880, 881, 882, 890, 929, 1006], "ttys0": 132, "stream": [132, 137, 139, 179, 205, 220, 245, 528, 545, 802, 856, 914, 960, 1084, 1086, 1130], "eventfd": [132, 884, 922, 1127, 1128], "complic": [132, 133, 142, 171, 214, 224, 341, 360, 399, 424, 555, 638, 644, 664, 717, 754, 856, 864, 929, 932, 960, 1075, 1115, 1118], "infrastructur": [132, 404, 714, 926], "unregist": [132, 436], "callback": [132, 168, 201, 207, 217, 220, 311, 655, 768, 777, 1075], "comfort": [132, 184, 305, 679, 862, 1084], "excit": 132, "hundr": [132, 134, 139, 242, 245, 884], "panel": 132, "deal": [132, 208, 393, 539, 758, 864, 985, 1058, 1072, 1113, 1118], "touch": [132, 138, 164, 201, 207, 217, 220, 411, 803, 812, 817, 862, 885, 891, 1118], "stai": [132, 156, 168, 199, 929], "harder": [132, 691, 865], "buggi": [132, 537, 665, 677, 916], "examin": [132, 134, 395, 545, 686, 818, 911], "debugg": [132, 201, 207, 217, 218, 220, 432, 1111, 1126], "gdb": [132, 184, 320, 1111], "remain": [132, 133, 143, 152, 165, 212, 220, 266, 490, 491, 503, 532, 580, 586, 617, 623, 628, 690, 698, 740, 871, 919, 930, 932, 1031, 1034, 1035, 1038, 1046, 1048, 1064, 1067, 1102], "spidev": 132, "bluntli": 132, "whether": [132, 152, 220, 224, 245, 256, 266, 334, 398, 489, 534, 567, 709, 754, 863, 1035, 1041, 1088], "deadlin": 132, "howev": [132, 142, 161, 224, 428, 731, 733, 855, 898, 900], "sched_setschedul": [132, 149, 919], "pthread_attr_setschedparam": [132, 919], "runnabl": [132, 756, 917, 918, 919], "prioriti": [132, 149, 220, 750, 756, 758, 760, 795, 917, 918, 926, 1129], "anymor": [132, 138, 143, 156, 193, 210, 411, 415, 544, 638, 640, 649, 673, 686, 687, 691, 793, 862, 905, 916, 918, 949, 987, 989, 1081], "potenti": [132, 412, 542, 649, 697, 875, 955, 967, 1012], "harm": [132, 363, 391, 687, 689, 955], "polici": [132, 137, 149, 411, 427, 601, 605, 736, 917, 918, 1129], "sched_fifo": [132, 918, 919, 1108], "sched_rr": [132, 134, 919, 1108], "round": [132, 199, 204, 214, 224, 240, 245, 426, 433, 434, 436, 438, 447, 448, 461, 475, 527, 711, 919, 1129], "robin": [132, 199, 919, 1129], "manner": [132, 369, 758, 862], "troubl": 132, "trigger": [132, 313, 740, 744, 862, 975, 1068], "certain": [132, 164, 171, 390, 395, 453, 476, 477, 655, 677, 754, 789, 802, 905, 932, 980], "circumst": [132, 917], "deadlock": [132, 505, 697, 698, 750, 763, 903, 917, 918], "inspect": [132, 134, 201, 207, 217, 220, 238, 247, 258, 268, 711, 788, 854, 875], "deploy": [132, 164, 168, 189, 275, 416, 422, 711, 733, 1056], "uclibc": 132, "minut": [132, 138, 139, 164, 168, 171, 208, 864, 1056, 1075], "investig": 132, "spend": [132, 139, 153, 164, 168, 189, 192, 215, 241, 265, 398, 1056], "todai": [133, 184, 192, 208, 241, 258, 274, 311, 337, 1056, 1115, 1118], "browser": [133, 139, 151, 162, 195], "significantli": [133, 929], "decreas": [133, 134, 387, 818, 920], "lifetim": [112, 133, 191, 193, 210, 222, 340, 355, 364, 371, 377, 381, 382, 384, 388, 397, 401, 406, 407, 441, 534, 617, 629, 640, 667, 708, 710, 711, 1066], "week": [133, 148, 389], "forth": [133, 400, 789, 862, 875, 987], "spare": 133, "volum": 133, "undertak": 133, "indirectli": [133, 686], "pocket": 133, "purchas": [133, 224], "corsair": 133, "120": [133, 151, 165, 175, 182, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 546, 627, 924, 925], "receiv": [133, 152, 207, 210, 248, 277, 335, 451, 542, 640, 717, 729, 750, 758, 818, 855, 858, 864, 871, 879, 884, 906, 914, 929, 930, 953, 956, 1006, 1037, 1052, 1072], "overhaul": 133, "reserv": [133, 139, 156, 168, 204, 220, 245, 266, 342, 564, 722, 754, 814, 919, 1013], "fresh": 133, "livecd": 133, "ssd": [133, 398, 880], "vanish": 133, "gone": [133, 154, 204, 655, 687, 738, 761, 819, 908], "nowher": [133, 272, 497], "depart": 133, "unusu": 133, "cope": 133, "bet": 133, "themselv": [133, 369, 409, 449], "aggress": 133, "harddisk": 133, "treatment": [133, 224, 818, 949], "proud": 133, "120g": 133, "fresher": 133, "plenti": [133, 135, 403], "4g": [133, 134], "shouldn": [133, 627, 758, 1004], "hibern": 133, "fstab": 133, "room": [133, 139, 168, 429, 580, 752, 864, 1072, 1116], "swapon": 133, "sda1": 133, "swapoff": 133, "overal": 133, "mitig": [133, 752], "temporari": [133, 142, 159, 201, 207, 210, 217, 220, 260, 261, 279, 414, 486, 487, 635, 639, 640, 655, 669, 677, 709, 802, 932, 958, 1039], "perfect": [133, 139, 147, 193, 241, 283, 323, 580, 636, 667, 690, 710, 711, 958, 1011, 1056, 1091, 1113], "portag": [133, 758, 847], "openoffic": 133, "tmpdir": [133, 258, 411, 486, 709, 953, 1051, 1053, 1093], "gcc": [133, 134, 160, 180, 182, 201, 207, 217, 220, 295, 322, 324, 348, 365, 369, 387, 390, 391, 393, 403, 404, 412, 414, 513, 696, 758, 759, 795, 815, 880, 881, 882, 888, 889, 890, 891, 900, 903, 933, 944, 946, 947, 948, 949, 950, 982, 1102, 1108], "500m": 133, "2g": 133, "6g": 133, "throwawai": 133, "1tb": 133, "sdc1": [133, 789], "mnt": [133, 789, 797, 926], "emerg": 133, "umount": 133, "runnung": 133, "logfil": [133, 171, 800, 851], "offend": [133, 135, 137, 147, 454, 916], "candid": [133, 152, 193, 399, 644, 664, 677, 955, 1027], "destin": [133, 350, 417, 522, 563, 638, 874, 881], "app": [133, 137, 916, 1071], "admin": [133, 139, 302, 869, 873], "cron": [133, 801, 985], "rc": [133, 855], "grep": [133, 137, 143, 172, 174, 184, 238, 247, 268, 269, 711, 777, 782, 788, 793, 795, 800, 802, 814, 845, 848, 851, 854, 862, 864, 865, 901, 911, 916, 1075, 1117, 1119, 1124], "tune": [133, 134, 143, 399, 785, 786, 808, 810, 812, 819, 867, 984], "rotat": [133, 855, 880], "exce": [133, 168, 719, 916, 926], "20m": [133, 855, 914], "compresscmd": 133, "bzip2": [133, 143, 172, 174, 783, 784, 946], "compressopt": 133, "compressext": 133, "missingok": 133, "sharedscript": 133, "postrot": 133, "reload": [133, 172], "endscript": 133, "adjac": [133, 309, 686, 729], "sda": [133, 862, 864], "cfq": 133, "noop": [133, 857], "believ": [133, 139, 855, 864, 892], "r5": 133, "menuconfig": [133, 143, 758, 862, 946], "xorg": [133, 137], "hardcod": [133, 306, 505, 717, 721, 1022], "emerge_log_dir": 133, "unionf": 133, "fuse": [133, 135, 865, 875], "persist": [133, 149, 339, 343, 351, 421, 819, 863], "held": [134, 276, 320, 716, 750, 763], "compani": [134, 137, 138, 139, 174, 184, 224, 250, 261, 276, 409, 427, 428, 797, 1058], "z\u00fcrich": [134, 319], "hardcor": 134, "attitud": [134, 139, 258], "began": 134, "dive": [134, 251, 254, 1073], "inevit": [134, 320, 679], "came": [134, 201, 205, 207, 217, 220, 815, 821, 862, 987, 1039, 1113], "mb": [134, 796], "heap": [134, 382, 434, 534, 537, 589, 669, 686, 719, 744], "128": [134, 137, 151, 165, 175, 182, 188, 191, 197, 201, 204, 207, 210, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 398, 542, 862, 890, 947, 1072], "dead": [134, 143, 399], "attempt": [134, 139, 162, 220, 321, 635, 637, 1088], "reject": [134, 147], "proof": [134, 156, 387, 398, 402, 432, 516], "evid": 134, "fortun": [134, 139, 399, 411, 640, 1061], "overnight": [134, 199], "night": [134, 168], "instinct": 134, "defens": [134, 341, 342], "grow": [134, 563, 795, 948], "growth": [134, 204, 1013], "cumbersom": [134, 136, 171, 540, 563, 631, 675, 714, 900, 926, 1100], "handi": [134, 1124], "tricki": 134, "alloca": 134, "essenti": [134, 161, 210, 257, 259, 617], "stdio": [134, 193, 205, 324, 325, 327, 331, 333, 335, 366, 392, 412, 538, 544, 795, 815, 862, 880, 881, 882, 884, 885, 888, 889, 890, 891, 903, 916, 922, 925, 929, 930, 932, 935, 944, 948, 950, 1006], "unistd": [134, 390, 487, 519, 815, 862, 878, 880, 881, 882, 884, 887, 888, 889, 890, 891, 894, 896, 899, 913, 916, 922, 925, 929], "stdlib": [134, 382, 396, 862, 880, 881, 882, 913, 922, 929], "size_t": [134, 382, 395, 430, 510, 519, 522, 565, 570, 576, 580, 586, 607, 621, 633, 638, 649, 650, 651, 652, 653, 705, 706, 707, 709, 717, 744, 876, 884, 894, 926, 929], "stack_growth": 134, "argc": [134, 376, 434, 473, 862, 888, 889, 890, 891, 896, 899, 913, 929, 950, 1100, 1105], "mem": [134, 150, 519, 722], "fprintf": [134, 357, 370, 876, 916, 950], "stderr": [134, 183, 192, 201, 207, 217, 220, 230, 238, 247, 248, 268, 269, 295, 302, 357, 370, 414, 711, 788, 799, 800, 854, 876, 884, 916, 950, 985, 998, 1006, 1119], "atoi": [134, 892], "printf": [134, 143, 193, 205, 324, 325, 327, 333, 335, 339, 365, 366, 369, 370, 392, 412, 538, 544, 795, 815, 878, 882, 922, 929, 930, 932, 944, 948, 950, 995, 1001], "getpid": [134, 929], "memset": [134, 881, 916, 925, 929], "24299": 134, "vsz": 134, "rss": 134, "3944": [134, 207], "986": [134, 204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "188": [134, 165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 242, 245, 252, 262, 266, 272], "320": [134, 207, 217, 220, 245, 252, 266, 272], "exact": [134, 184, 224, 299, 363, 674, 691, 731, 733, 1088], "glibc": [134, 738, 944, 946, 947, 1108], "presum": 134, "assum": [134, 220, 224, 266, 393, 540, 701, 736, 818, 862, 864, 875, 947, 1016, 1095], "writabl": [134, 393, 803, 818, 890], "eater": [134, 920], "1k": 134, "furthermor": 134, "188k": 134, "anyth": [134, 138, 139, 164, 191, 207, 211, 234, 256, 257, 309, 409, 420, 424, 441, 476, 551, 620, 640, 705, 706, 707, 855, 867, 875, 879, 885, 914, 948, 953, 954, 955, 998, 1006, 1061, 1081, 1085], "proce": [134, 142, 221, 254, 308, 486], "million": [134, 170, 427, 605, 758, 958], "24908": 134, "4800": [134, 207], "1200": [134, 207, 580, 1081], "1044": [134, 207], "1376": [134, 207], "grown": [134, 137], "reflect": [134, 758, 917, 947, 948, 975], "greedi": 134, "10000000": [134, 207, 351, 902, 958, 966], "24960": 134, "8mb": 134, "barrier": [134, 385, 686, 701, 742], "ulimit": [134, 795], "8192": [134, 207, 370, 795], "8000000": 134, "25018": 134, "11632": [134, 207], "2908": [134, 207], "7876": [134, 207], "8236": [134, 207], "demand": [134, 137, 154, 254, 393, 758, 809, 811, 960, 995], "magic": [134, 136, 376, 411, 655, 717, 758, 960, 1093], "hood": [134, 932], "bother": [134, 875, 879], "pthread_attr_setstacks": 134, "2mb": 134, "rlimit_stack": 134, "pthread_creat": [134, 901, 916], "nthread": 134, "act": [134, 191, 494, 564, 864, 875, 878, 930, 966], "shut": [134, 726, 758], "sit": [134, 210, 308, 439, 802, 862, 863, 873, 875, 879, 929, 1075], "stack_limit": 134, "thread_func": 134, "arg": [134, 151, 165, 191, 192, 201, 205, 207, 217, 218, 220, 224, 230, 245, 266, 412, 717, 901, 953, 957, 978, 985, 1008, 1064, 1086, 1102, 1108], "pthread_attr_t": [134, 901, 919], "attr": [134, 149, 901, 903, 905, 919, 925, 926], "pthread_attr_init": 134, "ld": [134, 418, 422, 513, 531, 604, 736, 758, 785, 786, 803, 816, 840, 922, 932, 933, 944, 949], "strerror": [134, 207, 876, 885, 916, 929], "p_attr": 134, "pthread_t": [134, 901, 916, 919], "rv": [134, 180, 242], "31524": 134, "825840": 134, "206460": 134, "819936": 134, "1404": [134, 207], "800mb": 134, "writeabl": [134, 814, 837], "worth": [134, 758, 864, 984, 1055, 1113, 1128], "physic": [134, 137, 172, 179, 260, 261, 279, 400, 605, 742, 794, 863, 882, 886, 916, 917], "eaten": 134, "field": [134, 137, 139, 151, 156, 162, 198, 205, 212, 220, 230, 233, 250, 252, 256, 266, 294, 313, 326, 793, 798, 817, 851, 1002, 1013, 1034, 1063, 1067], "alleg": 134, "wast": [134, 142, 143, 395, 682, 699, 1072], "moment": [134, 168, 395, 427, 429, 623, 672], "carri": [134, 139, 154, 391, 423, 432, 449, 709, 862, 919, 932, 955], "771": [134, 207], "766604": 134, "aha": [134, 154, 165, 287, 721, 738, 863, 1072, 1100], "hasn": [134, 137, 138, 147, 752, 775, 986], "effect": [134, 138, 159, 303, 304, 339, 389, 399, 451, 598, 713, 742, 814, 819, 862, 874, 875, 917, 931, 956, 968, 989, 1035, 1063, 1087, 1095], "4096": [134, 151, 207, 709, 785, 786, 855, 862, 863, 864, 875, 898, 925], "1026": [134, 207], "invalid": [134, 175, 182, 212, 217, 218, 220, 224, 227, 245, 252, 259, 266, 298, 313, 396, 454, 465, 468, 522, 537, 620, 621, 622, 635, 638, 644, 685, 687, 701, 716, 905, 1008], "insist": [134, 164, 544, 1102], "pthread_stack_min": 134, "16384": [134, 139, 207, 862, 863, 864], "1125": 134, "7840": [134, 207], "1960": [134, 207], "1936": [134, 207], "risk": [134, 427, 855, 863, 873, 918, 983], "512": [134, 207, 252, 400, 795], "513": [134, 207, 252, 686], "2212": [134, 207], "4210920": 134, "1052730": 134, "4205016": 134, "4576": [134, 207], "misunderstand": [134, 695], "obvious": [134, 135, 137, 143, 155, 325, 389, 393, 420, 449, 513, 539, 545, 583, 598, 599, 627, 638, 672, 676, 681, 709, 756, 758, 771, 794, 795, 801, 815, 863, 864, 874, 890, 891, 918, 930, 932, 948, 969, 972, 1115], "overcommit": 134, "kept": [134, 139, 164, 170, 370, 385, 795, 856, 932, 960], "plai": [134, 142, 184, 387, 405, 758, 855, 973, 976, 1063], "stutter": 134, "4353": 134, "red": [134, 135, 180, 182, 188, 196, 208, 211, 224, 256, 295, 583, 855, 982, 1075], "chili": 134, "pepper": 134, "overli": [134, 801, 959], "adob": 134, "riddanc": 134, "8462": [134, 207], "3284640": 134, "821160": 134, "3278736": 134, "3064580": 134, "lie": [134, 677], "constraint": [134, 142, 644, 647, 649, 864], "800": [134, 175, 207, 580, 1016], "4000000": 134, "11338": [134, 207], "900": [134, 207, 580], "12156": [134, 207], "shrink": [134, 563], "inadvert": 134, "3mb": 134, "nois": 134, "henc": [134, 139, 486, 540, 584, 880, 884, 932], "14386": [134, 207], "child_stack": 134, "0x7f5813f22ff0": 134, "clone_vm": 134, "clone_f": 134, "clone_fil": 134, "clone_sigha": 134, "14413": 134, "mmap": [134, 924, 926, 1127], "8392704": 134, "prot_read": [134, 925], "prot_writ": [134, 925], "map_priv": [134, 925], "map_anonym": 134, "map_stack": 134, "0x7fd14f9af000": 134, "mprotect": 134, "0x7fd14f1ae000": 134, "prot_non": 134, "placehold": [134, 455, 487, 642, 691, 864], "addit": [134, 152, 164, 191, 220, 223, 287, 346, 393, 414, 448, 449, 463, 485, 531, 543, 549, 620, 758, 795, 871, 975, 987, 1003, 1005, 1088], "proc": [134, 204, 220, 227, 230, 245, 252, 262, 266, 721, 738, 740, 742, 758, 759, 884, 901, 925, 929, 1126], "7fd14f1af000": 134, "7fd14f9af000": 134, "00000000": 134, "7fd14f9b0000": 134, "topmost": [134, 1093], "redund": [134, 370, 399], "smap": 134, "7fd14f1ae000": 134, "pss": 134, "shared_clean": 134, "shared_dirti": 134, "private_clean": 134, "private_dirti": 134, "referenc": [134, 152, 175, 426, 544, 686, 687, 688, 892, 1102], "anonym": [134, 429, 731, 925], "anonhugepag": 134, "kernelpages": 134, "mmupages": 134, "miss": [134, 153, 160, 162, 164, 180, 207, 212, 217, 224, 302, 359, 404, 405, 413, 415, 423, 485, 516, 537, 628, 664, 733, 736, 882, 916, 934, 957], "shallow": [134, 204, 216, 630], "extent": [134, 164, 171, 184, 299, 390, 395, 758, 932, 980], "8k": [134, 802], "swamp": 134, "panic": [134, 147, 766, 818], "meaningless": 134, "global": [134, 135, 153, 159, 164, 168, 173, 177, 180, 193, 201, 204, 207, 210, 211, 217, 220, 223, 234, 237, 245, 257, 260, 262, 266, 271, 275, 279, 297, 302, 348, 365, 371, 377, 381, 384, 388, 392, 395, 397, 401, 402, 406, 407, 415, 416, 421, 434, 440, 449, 483, 484, 485, 486, 527, 534, 547, 629, 667, 670, 685, 686, 696, 708, 710, 711, 727, 864, 900, 903, 907, 908, 910, 932, 953, 956, 964, 966, 999, 1013, 1056, 1088, 1096, 1100], "dig": [134, 136], "thorough": [134, 143, 979, 1063, 1085, 1128], "counter": [134, 217, 327, 333, 334, 343, 399, 404, 405, 529, 638, 925], "delai": [134, 201, 207, 217, 220, 863], "substanti": 134, "overcom": [134, 302, 389], "beforehand": 134, "mlock": [134, 1127], "mlockal": [134, 1127], "contradictori": 134, "lengthi": 134, "felt": 134, "lucki": [134, 537], "kilomet": [134, 669, 818], "agre": [134, 164, 168, 308, 437, 917, 1062], "glad": 134, "outdat": [135, 143, 758, 1088], "halfwai": 135, "procedur": [135, 143, 335, 679, 855, 1013], "thunderbolt": 135, "hdmi": 135, "unplug": 135, "oop": [135, 1112], "feb": [135, 180, 182, 184, 299, 344, 840, 898, 944], "derefer": [135, 542], "0000000000000080": 135, "supervisor": 135, "error_cod": 135, "0x0000": 135, "pgd": 135, "p4d": 135, "0000": [135, 220, 266, 864], "smp": [135, 184, 191, 299], "pti": 135, "281": [135, 204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 266, 272], "comm": 135, "kworker": 135, "taint": 135, "fc31": 135, "asustek": 135, "zenbook": 135, "ux391ua": 135, "bio": 135, "204": [135, 165, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 266, 272, 434], "workqueu": [135, 711, 735, 760, 773, 776, 854], "ucsi_connector_chang": 135, "typec_ucsi": 135, "0010": 135, "ucsi_displayport_remove_partn": 135, "0xa": 135, "0x20": [135, 748], "c7": [135, 142, 1088], "83": [135, 142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 759, 1060, 1061], "5b": [135, 142], "e9": [135, 142], "6d": [135, 142, 326, 327], "f3": [135, 142], "3d": [135, 142, 153], "fb": [135, 142], "2e": [135, 142, 631], "0f": [135, 142], "1f": [135, 142], "84": [135, 142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 1060, 1061], "90": [135, 142, 151, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 411, 1060, 1061, 1093], "85": [135, 142, 151, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 933, 934, 1060, 1061, 1100], "ff": [135, 142, 320, 864], "8b": 135, "78": [135, 142, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 233, 242, 245, 249, 252, 262, 266, 272, 297, 483, 1060, 1061], "c6": 135, "rsp": [135, 204, 1013], "0018": 135, "ffff9daa002d3df8": 135, "eflag": 135, "00010202": 135, "rax": 135, "0000000000000008": 135, "rbx": 135, "ffff901f4ce35710": 135, "rcx": 135, "0000000000003c7d": 135, "rdx": 135, "0000000000003c7c": 135, "rsi": [135, 818], "0000000000000001": 135, "rdi": 135, "rbp": 135, "0000000000000000": [135, 950], "r08": 135, "ffffffffbc7dbe60": 135, "r09": 135, "ffff9daa002d3cf0": 135, "r10": 135, "ffff901f54951a18": 135, "r11": 135, "ffff901f56a68a78": 135, "r12": 135, "r13": 135, "r14": 135, "ffff901f4ce35860": 135, "r15": 135, "ffff901f4ce355d8": 135, "ffff901f56a00000": 135, "knlg": 135, "cr0": 135, "0000000080050033": 135, "cr2": 135, "cr3": 135, "000000028fbbc003": 135, "cr4": 135, "00000000003606f0": 135, "trace": [135, 154, 201, 207, 217, 220, 414, 748], "ucsi_unregister_altmod": 135, "0x77": 135, "0x90": [135, 748], "ucsi_unregister_partn": 135, "0x13": 135, "0x30": [135, 351], "0x247": 135, "0x340": 135, "process_one_work": 135, "0x1b5": 135, "0x360": 135, "worker_thread": 135, "0x50": 135, "0x3c0": 135, "kthread": 135, "0xf9": 135, "0x130": 135, "kthread_park": 135, "ret_from_fork": 135, "0x35": 135, "0x40": [135, 863], "cdc_ether": 135, "usbnet": 135, "r8152": 135, "mii": 135, "rc_cec": 135, "typec_displayport": 135, "uinput": 135, "rfcomm": 135, "ccm": 135, "xt_checksum": 135, "xt_masquerad": 135, "nf_nat_tftp": 135, "nf_conntrack_tftp": 135, "tun": [135, 140, 155, 159, 175, 182, 221, 1110, 1111, 1112], "bridg": 135, "stp": 135, "llc": 135, "nf_conntrack_netbios_n": 135, "nf_conntrack_broadcast": 135, "xt_ct": 135, "ip6t_reject": 135, "nf_reject_ipv6": 135, "ip6t_rpfilt": 135, "ipt_reject": 135, "nf_reject_ipv4": 135, "xt_conntrack": 135, "ebtable_nat": 135, "ebtable_brout": 135, "ip6table_nat": 135, "ip6table_mangl": 135, "ip6table_raw": 135, "ip6table_secur": 135, "iptable_nat": 135, "nf_nat": 135, "iptable_mangl": 135, "iptable_raw": 135, "iptable_secur": 135, "nf_conntrack": 135, "nf_defrag_ipv6": 135, "nf_defrag_ipv4": 135, "libcrc32c": 135, "ip_set": 135, "nfnetlink": 135, "ebtable_filt": 135, "ebtabl": 135, "ip6table_filt": 135, "ip6_tabl": 135, "iptable_filt": 135, "cmac": 135, "bnep": 135, "sunrpc": 135, "vfat": [135, 758, 789], "snd_hda_codec_hdmi": 135, "snd_soc_skl": 135, "snd_soc_sst_ipc": 135, "snd_soc_sst_dsp": 135, "snd_hda_ext_cor": 135, "x86_pkg_temp_therm": 135, "intel_powerclamp": 135, "snd_soc_acpi_intel_match": 135, "coretemp": 135, "snd_soc_acpi": 135, "kvm_intel": 135, "snd_soc_cor": 135, "snd_hda_codec_realtek": 135, "snd_hda_codec_gener": 135, "snd_compress": 135, "ledtrig_audio": 135, "ac97_bu": 135, "snd_pcm_dmaengin": 135, "iwlmvm": 135, "snd_hda_intel": 135, "snd_intel_dspcfg": 135, "irqbypass": 135, "snd_hda_codec": 135, "uvcvideo": 135, "mac80211": 135, "btusb": 135, "itco_wdt": 135, "btrtl": 135, "crct10dif_pclmul": 135, "videobuf2_vmalloc": 135, "itco_vendor_support": 135, "videobuf2_memop": 135, "mei_hdcp": 135, "btbcm": 135, "btintel": 135, "crc32_pclmul": 135, "intel_rapl_msr": 135, "snd_hda_cor": 135, "videobuf2_v4l2": 135, "libarc4": 135, "ghash_clmulni_intel": 135, "videobuf2_common": 135, "snd_hwdep": 135, "intel_cst": 135, "bluetooth": [135, 1117, 1130], "snd_seq": 135, "asus_nb_wmi": 135, "iwlwifi": 135, "videodev": 135, "snd_seq_devic": 135, "intel_uncor": 135, "asus_wmi": 135, "snd_pcm": 135, "intel_rapl_perf": 135, "cdc_acm": 135, "sparse_keymap": 135, "wmi_bmof": 135, "ecdh_gener": 135, "cfg80211": 135, "intel_wmi_thunderbolt": 135, "pcspkr": 135, "snd_timer": 135, "snd": 135, "i2c_i801": 135, "soundcor": 135, "joydev": 135, "idma64": 135, "intel_xhci_usb_role_switch": 135, "mei_m": 135, "ucsi_acpi": 135, "processor_thermal_devic": 135, "intel_rapl_common": 135, "mei": [135, 207], "intel_soc_dts_iosf": 135, "intel_pch_therm": 135, "typec": 135, "int3403_therm": 135, "int340x_thermal_zon": 135, "int3400_therm": 135, "acpi_thermal_rel": 135, "acpi_pad": 135, "binfmt_misc": 135, "ip_tabl": 135, "rfkill": 135, "i915": 135, "i2c_algo_bit": 135, "drm_kms_helper": 135, "hid_multitouch": 135, "drm": 135, "nvme": 135, "crc32c_intel": 135, "nvme_cor": 135, "serio_raw": 135, "wmi": 135, "i2c_hid": 135, "76d248e576fee192": 135, "deferenc": 135, "dp": 135, "ness": [135, 171, 256], "ucsi": 135, "displayport": 135, "linu": [135, 750, 758], "struct": [135, 159, 193, 194, 210, 370, 375, 381, 382, 383, 384, 387, 388, 391, 393, 395, 397, 401, 406, 407, 429, 434, 451, 486, 487, 531, 532, 537, 539, 541, 542, 562, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 627, 629, 630, 631, 632, 639, 655, 658, 660, 661, 662, 663, 667, 672, 690, 691, 701, 708, 709, 710, 711, 717, 719, 722, 724, 726, 727, 729, 742, 746, 748, 750, 752, 754, 760, 761, 766, 768, 771, 775, 777, 778, 856, 858, 862, 881, 882, 894, 905, 916, 919, 925, 926, 929, 930, 1114], "typec_altmod": 135, "alt": [135, 165, 818, 846, 1110, 1117, 1124], "ucsi_dp": 135, "typec_altmode_get_drvdata": 135, "271": [135, 204, 207, 212, 214, 220, 245, 252, 266, 272], "bugzilla": 135, "1785972": 135, "upstream": [135, 138, 143, 147, 736], "john": [135, 399], "stebbin": 135, "roundtrip": 135, "wiki": [135, 149, 260, 261, 279, 731, 758], "explod": [135, 733, 995], "jwboyer": [135, 731], "f31": 135, "quiet": [135, 168, 1088], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 135, "josh": 135, "boyer": 135, "fedoraproject": [135, 731], "mon": 135, "rpmdevtool": [135, 731], "koji": 135, "rpmdev": 135, "setuptre": 135, "spec": [135, 220, 731, 754], "srpm": 135, "unam": [135, 731, 736, 754, 758, 759], "correspond": [135, 147, 220, 324, 367, 863, 940, 948, 987, 1023, 1058, 1088], "kenrel": 135, "ivh": [135, 137], "crypto": 135, "ccp": 135, "sha": 135, "drop": [135, 147, 430, 449, 458, 679, 686, 688, 777, 925, 930], "edit": [135, 137, 138, 147, 179, 184, 220, 248, 323, 483, 731, 758, 863, 1011, 1085, 1126], "zips": 135, "ko": [135, 727, 736, 758], "endif": [135, 367, 369, 370, 412, 414, 419, 420, 513, 522, 531, 537, 539, 540, 580, 638, 639, 685, 701, 932, 948, 950, 1102], "buildid": [135, 731, 933], "primary_target": 135, "825": [135, 207], "asoc": 135, "patch601": 135, "patch999": 135, "roedel": [135, 484, 487, 934, 947, 1043, 1095], "patienc": [135, 164, 980], "oldpackag": 135, "uefi": [135, 142], "footnot": [135, 137, 138, 139, 142, 143, 148, 155, 161, 164, 167, 251, 254, 428, 455, 499, 546, 548, 549, 562, 592, 611, 727, 729, 790, 797, 812, 862, 863, 864, 885, 888, 948, 980, 983, 1013, 1047, 1062, 1113, 1116], "previou": [136, 152, 470, 522, 538, 620, 818, 850, 890, 957, 959, 979, 981, 1025, 1087], "serv": [136, 138, 360, 1062, 1094, 1128], "market": [136, 139, 204, 248, 256, 1013], "intent": [136, 138, 142, 143, 432, 687, 691, 731, 888, 890, 891], "remark": 136, "organ": [136, 161, 365, 400, 411, 439, 580, 794, 880, 947], "numer": [136, 153, 169, 171, 173, 207, 217, 220, 224, 256, 266, 414, 586, 875], "enforc": [136, 194, 387, 409, 544, 717, 864], "cname": [136, 138], "propag": [136, 341, 399, 415, 423, 424, 605, 655, 865], "1100": [136, 201, 207, 224, 580], "3600": [136, 207], "185": [136, 165, 182, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "199": [136, 165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272, 758, 1013], "109": [136, 151, 165, 175, 180, 182, 188, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307], "153": [136, 151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 309], "111": [136, 151, 153, 165, 175, 182, 188, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297], "108": [136, 151, 165, 175, 182, 188, 191, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297], "strip": [136, 155, 164, 198, 200, 201, 204, 212, 216, 217, 222, 224, 230, 233, 245, 252, 262, 266, 272, 302, 311, 932, 933, 935, 944, 963, 1036, 1084], "breviti": 136, "fqdn": 136, "qualifi": [136, 393, 539, 540, 677], "surf": 136, "consequenti": [136, 139, 142, 170, 789, 862, 952, 973, 1102], "microsoft team": 137, "chrome": 137, "google chrom": 137, "confer": [137, 139, 168, 192, 215, 241], "virtual classroom": 137, "classroom": [137, 139], "remote train": 137, "dr": [137, 947], "chromium": [137, 172], "frequent": [137, 139, 147, 164, 224, 843, 863, 980, 1001], "meet": [137, 139, 164, 387, 802, 944, 957], "face": [137, 139, 164, 214, 224, 693], "travel": [137, 818], "corona": [137, 139, 164], "viru": [137, 139], "conferenc": 137, "dramat": 137, "march": 137, "spent": [137, 398, 702, 954, 1062], "weston": 137, "shown": [137, 170, 293, 840, 926, 1072], "invest": [137, 139, 143, 224], "smooth": 137, "layer": [137, 237, 239, 257, 717, 789, 863, 875, 885, 894], "cornercas": 137, "hover": 137, "sharer": 137, "gdm": [137, 204, 220, 227, 230, 245, 252, 262, 266, 793, 849], "daemon": [137, 184, 204, 220, 227, 230, 245, 252, 262, 266, 405, 793, 796, 843, 844, 847, 849, 865, 873, 878, 880, 910, 966], "uncom": [137, 454, 455, 649, 862], "waylanden": 137, "defaultsess": 137, "deb": [137, 269], "5153": 137, "thank": [137, 218, 245, 641, 677, 740, 900, 1061], "marjan": 137, "javorka": 137, "fashion": 137, "efl": [137, 777, 865, 916], "61762": 137, "1670": [137, 207], "80": [137, 142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 403, 476, 840, 916, 946, 958, 1013, 1060, 1061, 1093], "947213": 137, "61764": 137, "98775": 137, "zygot": 137, "sandbox": [137, 164, 168, 218, 232, 250, 1056, 1095, 1096], "61800": 137, "239615": 137, "gpu": 137, "sharedarraybuff": 137, "sparerendererforsiteperprocess": 137, "prefer": [137, 214, 224, 343, 399, 441, 545, 632, 640, 644, 750, 802, 1008], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 137, "token": [137, 194, 210, 329, 369, 793, 906, 1011, 1110], "4327801531638606376": 137, "61825": 137, "420846": 137, "autoplai": 137, "gestur": 137, "12993561460135093079": 137, "asar": 137, "agent": [137, 871, 1063], "mozilla": [137, 262, 840], "applewebkit": 137, "537": [137, 207], "khtml": 137, "gecko": 137, "microsoftteam": 137, "preview": [137, 222, 275, 416, 711], "3497": 137, "safari": 137, "webview": 137, "preload": 137, "preload_notif": 137, "fff": 137, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 137, "raster": 137, "v8_context_snapshot_data": 137, "v8_natives_data": 137, "101": [137, 151, 165, 175, 182, 188, 197, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 991, 1060, 1061], "msteam": 137, "notificationsmanag": 137, "61973": 137, "790018": 137, "432557619363765409": 137, "mainwindow": 137, "62033": 137, "1259666": 137, "5585537623314398260": 137, "pluginhost": 137, "wish": [137, 139, 147, 168, 403, 412, 551, 618, 699, 979, 1077, 1078, 1095], "insan": [137, 276, 789], "killal": [137, 920, 930], "63500": 137, "298385": 137, "63502": 137, "blood": 137, "pressur": [137, 201], "rise": [137, 477, 740, 898, 899, 916], "wipe": 137, "logout": 137, "pop": [137, 150, 212, 214, 227, 242, 252, 262, 272, 370, 699, 978, 1003], "desir": [137, 201, 207, 217, 220, 344, 348, 359, 481, 531, 533, 539, 621, 756, 889, 891, 1063], "morn": [137, 173, 183, 201, 210, 212, 218, 1018], "webassembli": 137, "blow": 137, "water": [137, 256], "tab": [137, 138, 151, 220, 248, 266, 293, 344, 758, 818, 1000, 1025, 1119], "firefox": [137, 405, 901, 930, 1071], "dom": [137, 196], "gave": [137, 139, 152, 164, 860, 1061], "3987": 137, "132": [137, 151, 153, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "plagu": 137, "rememb": [137, 138, 153, 160, 170, 191, 354, 387, 437, 563, 564, 598, 601, 638, 639, 687, 754, 758, 800, 815, 818, 837, 862, 871, 873, 954, 1020, 1030], "invent": [137, 337, 369, 429, 451, 452, 1115, 1116], "game": [137, 204, 220, 227, 230, 245, 252, 262, 266, 814, 878, 994], "pornwatch": 137, "teamview": 137, "webpag": 138, "properli": [138, 623, 701, 758, 944], "retrospect": 138, "jekyl": 138, "bend": [138, 481], "companion": [138, 256], "pollut": [138, 370, 393, 399, 432, 628, 934], "distinguish": [138, 538, 691, 790, 944], "handwritten": [138, 236, 237, 239, 283, 537, 637, 667, 668, 669, 685, 710, 711], "remind": 138, "pile": [138, 147, 439, 930], "incomprehens": [138, 218, 601, 1113], "blame": [138, 864], "technic": [138, 139, 161, 424, 428, 528, 583, 627, 960, 1072, 1105], "nojekyl": 138, "eof": [138, 188, 191, 210, 211, 227, 294, 331, 332, 333, 334, 347, 611, 760, 774, 880, 881, 884, 890, 922, 929, 982], "doctyp": 138, "constel": 138, "machineri": [138, 260, 261, 279], "eventu": [138, 147, 402, 898, 947], "click": [138, 139], "danc": [138, 486, 778, 948], "cri": [138, 690], "backup": [138, 172, 412, 787, 789, 871, 1077], "haven": [138, 139, 164, 505, 855, 862], "subdomain": 138, "afterthough": 138, "preserv": [138, 149, 170, 227, 387, 785, 786, 820, 874, 1084], "_build": 138, "restor": [138, 147, 154, 201, 207, 217, 220, 731, 930, 953], "shini": 138, "nervous": 138, "marketinges": [138, 248], "familiar": [138, 164, 220, 304, 305, 694, 863, 980], "big blue button": 139, "strongli": [139, 201, 207, 217, 220, 251, 254, 485, 583, 629, 667, 708, 710, 711, 1113], "shame": 139, "pursu": 139, "collabor": [112, 139, 149, 156, 161, 168, 241], "moreov": 139, "focus": 139, "teach": [139, 164, 320], "trust": [139, 142, 204, 260, 261, 279, 635, 871, 873, 1013, 1088, 1105], "benefit": [139, 251, 254, 257, 259, 393, 1051], "beat": [139, 214, 224, 1055], "talent": 139, "whiteboard": [139, 925], "chat": 139, "wide": [139, 143, 325, 326, 790, 871, 926, 932], "breakout": [139, 862], "stabil": [139, 434, 864, 1089], "thousand": [139, 245, 789], "curiou": [139, 1056], "curious": 139, "licens": [139, 245, 421, 714, 982, 1011], "lgpl": 139, "blindsid": 139, "govern": [139, 744, 884], "html5": 139, "exception": [139, 864], "modern": [139, 143, 145, 156, 159, 164, 171, 193, 215, 415, 689, 711, 718, 720, 725, 728, 735, 739, 749, 760, 762, 767, 773, 776, 779, 854, 932, 951, 981, 1056, 1085, 1114, 1116], "heavili": [139, 161, 164, 248, 250, 320, 485, 680, 758, 855, 864, 980], "webrtc": 139, "pain": [139, 758, 935, 944], "death": [139, 191, 930], "firewal": [139, 172, 873], "busi": [139, 409, 419, 544, 763, 775, 787, 822, 824, 829, 830], "indefinit": [139, 617], "vm": [139, 305], "encrypt": [139, 793, 814, 865, 873, 874, 875, 1034, 1075], "bbb": [139, 151, 212, 230], "provis": 139, "gcp": 139, "expertis": [139, 486], "n1": [139, 165, 224], "accordingli": [139, 172, 473, 483, 486, 516, 862, 864, 949, 984, 987, 1084], "500gb": 139, "10gb": 139, "spars": [139, 214, 224, 547, 549, 754], "mandatori": [139, 864, 981], "issuanc": 139, "udp": [139, 856, 858, 1128, 1130], "32768": 139, "clickabl": 139, "7443": 139, "755": [139, 207, 302, 803, 983], "xenial": 139, "220": [139, 165, 180, 191, 201, 204, 207, 212, 214, 220, 224, 227, 242, 245, 252, 262, 266, 272], "hostnam": [139, 1088], "certbot": 139, "greenlight": 139, "letsencrypt": 139, "minor": [139, 143, 201, 207, 217, 220, 250, 717, 724, 789], "docker": [139, 143], "bundl": [139, 162, 1071, 1088], "rake": 139, "succesfulli": 139, "screenshot": [139, 162, 302], "tryout": [139, 864], "kid": [139, 184, 202, 288], "layman": 139, "knew": [139, 168, 642, 949], "reproduc": [139, 142, 258, 396, 864], "thought": [139, 370, 682, 758, 1072], "fred": [139, 856, 956], "dixon": 139, "leader": 139, "aka": [139, 184, 207, 210, 212, 232, 505, 689], "canva": 139, "bradlei": 139, "schreffler": 139, "upfront": 139, "far": [139, 164, 172, 193, 199, 207, 210, 250, 339, 354, 375, 376, 378, 389, 393, 398, 423, 552, 562, 627, 690, 736, 800, 864, 958, 980, 1061, 1113], "exhaust": [139, 914, 917, 960], "heard": 139, "tast": [139, 329, 545, 601, 627, 670, 690], "era": 139, "budget": [139, 188], "advertis": [139, 680], "viabl": 139, "shout": [139, 669, 672], "loud": [139, 348, 563, 631, 669, 675, 676], "traunse": 140, "hike": [140, 141, 168], "bergsteigen": [140, 141], "climb": [140, 141, 168, 199], "klettern": [140, 141], "outdoor": [140, 141], "donnerstag": 140, "geistigen": 140, "ersch\u00f6pfung": 140, "k\u00f6rperlich": 140, "erfahren": [140, 141, 320, 1111], "dazu": [140, 149, 150, 155, 159, 176, 302, 307, 320, 1109, 1123, 1131], "ausgesucht": [140, 141], "zwar": [140, 1108, 1112, 1124], "lo": [140, 141, 182, 220, 256, 481, 738, 968], "\u00fcbernachtung": 140, "gmundner": [140, 168], "h\u00fctte": [140, 141, 168], "n\u00e4chsten": 140, "naturfreundesteig": 140, "zusammenfassung": [140, 146], "wunsch": 140, "vollend": 140, "erf\u00fcllt": 140, "unversichert": 140, "unmarkiert": 140, "leicht": [140, 176, 1108, 1123, 1129, 1130], "panik": 140, "geraten": 140, "h\u00e4nde": [140, 141], "braucht": [140, 141], "fingern\u00e4gel": 140, "z\u00e4hne": 140, "mitunt": [140, 141, 1120], "verkoffert": 140, "augen": [140, 227], "offenhalten": 140, "jeder": [140, 1107, 1110, 1111, 1130], "spur": 140, "folgen": [140, 176, 177, 1110, 1123], "eher": [140, 176, 1109, 1123], "fr\u00fcher": [140, 221], "umdrehen": 140, "sackgass": 140, "erweist": 140, "vielleicht": [140, 165, 176, 227, 1112, 1123], "weggehen": 140, "stirnlamp": 140, "mitnehmen": 140, "tour": [140, 199, 236, 237, 239, 259, 283, 320, 473, 625, 710, 711, 1055, 1113, 1114], "war": [140, 150, 155, 157, 165, 176, 180, 320, 409, 1108, 1110, 1112, 1123, 1129, 1130], "sch\u00f6nsten": 140, "jemal": 140, "zuletzt": 140, "traumhaften": 140, "gegend": 140, "immer": [140, 141, 155, 159, 165, 167, 180, 252, 1108, 1112, 1119, 1129], "griffweit": 140, "erscheint": 140, "paar": [140, 150, 165, 167, 175, 182, 214, 302, 307, 1108, 1131], "eindr\u00fcck": 140, "m\u00fcder": 140, "abklatsch": 140, "erinnerungen": 140, "hirn": 140, "eingebrannt": 140, "haben": [140, 141, 150, 155, 159, 167, 175, 176, 188, 320, 588, 1108, 1109, 1110, 1111, 1112, 1117, 1123, 1125, 1126, 1127, 1130], "einstieg": [140, 176, 1123], "traunsteinstra\u00df": 140, "hundert": [140, 151, 224], "meter": 140, "s\u00fcdlich": 140, "hoisn": [140, 168], "wirt": [140, 168], "markiert": [140, 141], "wanderweg": [140, 141], "wegweisern": [140, 141], "bergauf": [140, 141], "kupp": 140, "klamm": 140, "einsteigt": 140, "bergab": 140, "touristisch": 140, "erschlossen": 140, "trifft": 140, "familien": 140, "kindern": [140, 1124], "ungef\u00e4hr": 140, "rechter": 140, "felsstock": 140, "adlerhorst": 140, "sieht": [140, 151, 155, 165], "rau": [140, 214], "touristenzon": 140, "rauf": 140, "schart": 140, "durchschnaufen": 140, "einstellen": 140, "gen\u00fcsslich": 140, "h\u00f6henmet": 140, "verspeisen": 140, "steinmanderl": 140, "verfehlen": 140, "erkennbar": [140, 151, 1126], "kamm": 140, "r\u00fcber": 140, "traunsteinfelsen": 140, "erstreckt": [140, 141], "sch\u00f6nste": 140, "teil": [140, 150, 159, 167, 1108, 1110], "meditativ": 140, "wundersch\u00f6n": [140, 141], "steil": 140, "voll": 140, "zecken": 140, "schon": [140, 141, 150, 165, 167, 175, 205, 320, 1110, 1112, 1117, 1124, 1126, 1129], "bl\u00fcht": 140, "rinnen": 140, "leichtest": [140, 151], "dahin": [140, 1108], "wieder": [140, 165, 167, 175, 180, 182, 196, 1110, 1124], "vertun": 140, "manderl": 140, "aufstellen": 140, "nachwelt": 140, "nemesi": 140, "bergverr\u00fcckten": 140, "gleich": [140, 151, 165, 175, 176, 180, 182, 214, 262, 297, 1108, 1123, 1130], "schl\u00fcsselstel": 140, "quert": 140, "latschen": 140, "\u00f6fter": [140, 141], "festhalten": 140, "gel\u00e4nd": 140, "einsam": 140, "bohrhaken": 140, "verrotteten": 140, "schuhband": 140, "festh\u00e4lt": 140, "runterfallen": 140, "glaub": [140, 149, 150], "stell": [140, 165, 196], "umgehen": [140, 1117], "querung": 140, "hierher": 140, "st\u00fcck": 140, "reinzum\u00fcnden": 140, "scheint": [140, 149], "gibt": [140, 141, 146, 149, 151, 152, 155, 165, 176, 177, 188, 214, 297, 1107, 1108, 1109, 1110, 1112, 1117, 1123, 1129], "foto": [140, 820], "mittendrin": 140, "besch\u00e4ftigt": 140, "hose": 140, "kacken": 140, "gesagt": [140, 155, 165, 175, 320, 1108], "manderln": 140, "aufnahmen": 140, "zunehmenden": 140, "sonnenuntergang": 140, "unvergesslich": 140, "nacht": [140, 141], "geworden": 140, "halten": [140, 141], "zumindest": [140, 165, 1110], "hinauf": 140, "stund": [140, 845, 1131], "gekostet": 140, "exklus": [140, 165, 175], "schneck": 140, "j\u00e4gerbrot": 140, "schein": 140, "ausstieg": 140, "hernlersteig": 140, "m\u00fcndet": 140, "gmundnerh\u00fctt": 140, "gem\u00fctlich": [140, 141], "nett": [140, 141, 155, 266, 320, 1117, 1124], "wirtsleut": 140, "h\u00fcttenruh": 140, "ansitzen": 140, "schweinsbraten": 140, "reinkommt": 140, "k\u00fcche": 140, "geputzt": 140, "backerbsen": 140, "morgen": [140, 220, 224], "hochnebel": 140, "blick": [140, 141, 1109], "flugzeug": 140, "gipfel": [140, 141], "dolin": 140, "nebel": 140, "dabei": [140, 151, 155, 191, 320, 1107], "verziehen": 140, "r\u00fcckweg": 140, "hoisnwirt": 140, "miesweg": 140, "karibik": 140, "steiner alpen": 141, "kamni\u0161ke alp": 141, "kamni\u0161ko savinjskih alp": 141, "alten": [141, 1112], "tradit": [141, 204, 207, 395, 410, 546, 548, 549, 551, 571, 800, 864, 1003, 1034, 1127], "bleiburg": [141, 199], "k\u00e4rnten": [141, 320], "den": [141, 149, 150, 151, 155, 159, 165, 167, 175, 176, 181, 188, 195, 224, 272, 302, 303, 307, 320, 780, 1108, 1109, 1110, 1111, 1112, 1117, 1120, 1123, 1124, 1130, 1131], "umliegenden": 141, "bergen": 141, "interessantesten": 141, "2558m": [141, 199], "steiner": 141, "alpen": 141, "davor": [141, 183], "gekannt": 141, "nun": [141, 159, 165, 188, 195, 220, 588], "gesehen": [141, 165, 171, 205], "steht": [141, 165, 175, 176, 1120, 1123], "fest": 141, "n\u00e4chste": [141, 159], "jahr": [141, 165], "\u00fcberschreitung": 141, "soweit": [141, 1117, 1124], "h\u00f6chst": 141, "interessant": [141, 1109], "steinhaufen": 141, "unge\u00fcbt": 141, "verloren": [141, 180, 183], "mal": [141, 155, 165, 176, 227, 320, 1108, 1112, 1123], "h\u00f6henangst": 141, "schauen": [141, 176, 1123], "helm": 141, "schaden": 141, "schottersurf": 141, "kommen": [141, 146, 214, 302, 307, 320, 846], "ihr": [141, 146, 150, 155, 165, 780, 1107, 1109, 1111, 1112, 1117, 1124, 1130], "artikel": [141, 149], "rein": [141, 151, 176, 1123, 1124], "ins": [141, 150, 320, 696, 1108, 1124], "eisenkappel": 141, "seebergsattel": 141, "openstreetmap": 141, "klein": [141, 150, 151, 155, 1108, 1110, 1111], "dorf": 141, "uhren": 141, "stehengeblieben": 141, "scheinen": 141, "parkplatz": 141, "geparkt": 141, "wissend": 141, "hinten": 141, "tal": 141, "beginnt": [141, 175, 1131], "ahnen": 141, "stetig": 141, "verzagen": 141, "eingang": [141, 1108], "kar": 141, "pl\u00f6tzlich": 141, "freundlich": 141, "vorhanden": [141, 1117, 1124], "fr\u00fchst\u00fcck": 141, "lager": [141, 256], "respektvol": 141, "erklimmenden": 141, "zieht": 141, "haltend": 141, "wand": 141, "wiederum": [141, 165], "gilt": [141, 155, 196, 320], "mittlerweil": [141, 1108, 1125], "akzeptiert": 141, "deswegen": [141, 175, 180, 1110], "schliesslich": [141, 1108], "stehend": 141, "denn": [141, 165, 175, 1129, 1131], "hinaufkomm": 141, "passiert": [141, 165, 182], "anf\u00e4ngern": 141, "geschehen": 141, "jung": [141, 320], "izola": 141, "slowenien": 141, "stellten": 141, "ankam": 141, "ob": [141, 149, 175, 1112, 1131], "beantwortet": 141, "adoptivs\u00f6hn": 141, "gewonnen": 141, "nachbarberg": 141, "ko\u010dna": 141, "sichtlich": 141, "spa\u00df": [141, 221, 1126], "abstieg": 141, "erweitert": 141, "rund": 141, "fertig": [141, 175, 192, 220, 648, 655], "empfehl": [141, 1108], "runterzugehen": 141, "raufgekommen": 141, "ostseitigen": 141, "westseitig": 141, "sch\u00f6ner": [141, 165], "langen": 141, "grat": 141, "felst\u00fcrm": 141, "daf\u00fcr": [141, 159, 165, 175, 176, 1108], "anstrengend": 141, "200m": 141, "pulverhangerl": 141, "zur\u00fcck": [141, 165, 177, 1117, 1124], "wohlverdient": 141, "la\u0161ko": 141, "geschmack": 141, "schroff": 141, "selektiv": 141, "jedermann": 141, "kett": 141, "umfasst": 141, "2000m": 141, "umschlossen": 141, "gletschergeformten": 141, "karen": 141, "steilen": 141, "w\u00e4nden": 141, "ost": 141, "richtung": [141, 1119], "schlafm\u00f6glichkeiten": 141, "biwak": 141, "einladung": 141, "\u00fcberquerung": 141, "dringend": 141, "f\u00e4llig": [141, 320], "fu\u00dfnoten": [141, 1107], "belieben": 141, "gummi": 141, "reifen": 141, "fahren": 141, "mehrplatzlag": 141, "reserviert": 141, "h\u00fcttenschl\u00e4fer": 141, "ohrenst\u00f6psel": 141, "f\u00e4lle": 141, "eingetreten": 141, "fassen": [141, 220], "typ": [141, 177, 188, 198, 846, 1071], "geschnarcht": 141, "geschrien": 141, "modules sign": 142, "secure boot": 142, "shim": 142, "dell xps 13": 142, "unresolv": [142, 733, 736, 932], "upset": [142, 680], "tendenc": 142, "vendor": [142, 143, 425, 427, 486, 754, 758, 862, 892], "efi": 142, "implementor": [142, 236, 237, 239, 283, 629, 667, 676, 710, 711, 717, 1093, 1113], "shine": 142, "stuck": 142, "cryptographi": 142, "third": [142, 179, 191, 220, 266, 415, 543, 545, 656, 657, 736, 738, 803, 845, 888], "parti": [142, 147, 433, 545, 729, 736, 884, 925, 1075], "signatur": [142, 188, 220, 224, 245, 266, 531, 627, 674, 690, 691, 926], "openssl": [142, 814], "req": 142, "x509": 142, "newkei": 142, "rsa": [142, 871], "keyout": 142, "xps13": 142, "priv": [142, 752], "outform": 142, "36500": [142, 486], "subj": 142, "passphras": [142, 172, 871], "expiri": 142, "0x2": 142, "97": [142, 151, 165, 175, 180, 182, 188, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 403, 1060], "e5": 142, "ef": 142, "88": [142, 151, 165, 175, 180, 182, 188, 191, 193, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307, 405, 1000, 1060, 1061, 1100], "3a": 142, "b3": 142, "9c": 142, "1b": 142, "a4": 142, "d7": 142, "sha256withrsaencrypt": 142, "issuer": [142, 429], "sep": [142, 143, 171, 191, 204, 207, 212, 220, 224, 227, 245, 266, 411, 608, 840, 862, 864, 875, 932], "gmt": 142, "aug": [142, 207, 855, 863], "2121": 142, "subject": [142, 412, 719, 756, 1093], "rsaencrypt": 142, "modulu": [142, 201, 207, 217, 220], "b5": 142, "2d": [142, 194, 545, 1001], "5c": 142, "6f": [142, 920], "b0": 142, "95": [142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 1060, 1061], "f6": 142, "9e": 142, "9d": 142, "0d": 142, "bc": [142, 738, 862], "f5": 142, "6e": 142, "fe": [142, 411], "94": [142, 151, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 454, 455, 1060], "2b": [142, 864], "e6": 142, "b2": 142, "a0": [142, 863], "f8": 142, "7d": 142, "1c": 142, "2c": 142, "9f": 142, "4d": [142, 1001], "86": [142, 151, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 1060, 1061], "e3": [142, 448], "dd": [142, 789, 818, 1108], "7b": 142, "3f": 142, "aa": 142, "b8": 142, "a5": [142, 863], "d5": 142, "0b": 142, "81": [142, 151, 153, 165, 175, 180, 182, 188, 191, 193, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 934, 958, 1060, 1061], "d1": [142, 214, 277, 602], "e8": 142, "dc": [142, 429], "c5": 142, "d2": [142, 214, 277, 602], "c2": [142, 432, 546, 631], "0a": [142, 331], "a1": [142, 204, 249, 1013], "e1": [142, 192, 205, 448, 628, 1086], "89": [142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 403, 862, 863, 864, 934, 1060, 1061], "4c": 142, "4a": 142, "77": [142, 165, 173, 175, 180, 182, 184, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 299, 302, 307, 1060, 1061], "a9": 142, "68": [142, 165, 170, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 294, 297, 840, 1060, 1061], "b6": 142, "a8": 142, "9b": 142, "d8": 142, "7f": [142, 864], "e2": [142, 192, 205, 448, 628, 1086], "a3": 142, "79": [142, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307, 1060, 1061], "f4": 142, "96": [142, 151, 165, 175, 180, 182, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 403, 933, 934, 1060, 1061], "4f": [142, 1001], "1d": 142, "7e": 142, "4e": 142, "0e": 142, "d9": 142, "8c": 142, "d3": [142, 602], "c8": 142, "f7": 142, "8e": 142, "d6": 142, "3b": 142, "1e": 142, "4b": [142, 864, 920], "5e": [142, 987], "5f": 142, "7c": 142, "expon": [142, 987], "65537": 142, "0x10001": 142, "x509v3": 142, "98": [142, 151, 165, 175, 182, 188, 191, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 528, 565, 934], "0c": [142, 864], "keyid": 142, "c0": 142, "8f": 142, "b1": 142, "b7": 142, "9a": 142, "fa": 142, "7a": 142, "df": [142, 168, 411], "a6": 142, "c9": 142, "76": [142, 165, 175, 180, 182, 188, 191, 193, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307, 422, 423, 687, 1013, 1060, 1061], "f0": 142, "b4": 142, "f9": 142, "eb": 142, "f1": 142, "6c": [142, 864], "2f": [142, 327, 1001], "5a": 142, "e0": 142, "d0": 142, "93": [142, 151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 297, 1060], "8d": 142, "2a": 142, "fc": [142, 428, 429], "1a": 142, "b9": 142, "cb": [142, 592], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 142, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 142, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 142, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 142, "wl72mzqr": 142, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 142, "hmszvaowukuzi2kflrpvc": 142, "79gwnr4": 142, "jc": 142, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 142, "valspcvotvjdokib4eyxnavjbdjdldd": 142, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 142, "nb3kgq7zt5ym": 142, "b8ce2f": 142, "ettmprmfi94x": 142, "7i5tuqrbsylistict": 142, "rf1kw6": 142, "zuzvmwyow9cyzwc5rar": 142, "ys0exg3v": 142, "hyjl7vaxa23rb": 142, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 142, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 142, "dz1idzapbgnvhrmbaf8ebtadaqh": 142, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 142, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 142, "xra": 142, "kdtflvc7uuvwtp": 142, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 142, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 142, "yqfvxbjphkw": 142, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 142, "ahemjzbycfiiq65b5x": 142, "y7aq": 142, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 142, "rk": 142, "b3lljngstu2g": 142, "mokutil": 142, "mokmanag": 142, "bloodi": [142, 929, 1072], "fan": [142, 164, 168, 194, 218, 1056], "highest": [142, 201, 207, 217, 220, 266, 354, 399, 863, 919], "rate": [142, 164, 224, 391, 777, 916], "melt": 142, "7390": [142, 207], "cross develop": 143, "raspberry pi": [143, 855, 856, 857, 858, 859, 862, 863, 864], "crosstool-ng": 143, "c++": [143, 145, 1112, 1113, 1114, 1116], "sadli": [143, 194, 393, 727, 862, 896, 899, 933, 955], "linaro": [143, 711, 854, 942, 943], "libstdc": [143, 944, 946], "unsatisfi": 143, "libpthread": [143, 935], "feedback": [143, 159, 162, 171, 172, 173], "thankfulli": 143, "gperf": [143, 946], "flex": [143, 738, 862, 946], "texinfo": [143, 946], "help2man": [143, 946], "libtool": [143, 946], "ncurs": [143, 731], "unzip": [143, 759, 946], "rsync": [143, 946], "diffutil": 143, "libncurses5": [143, 946], "gawk": [143, 946], "util": [143, 150, 171, 426, 432, 451, 465, 580, 635, 638, 640, 946, 953, 1088], "ct": [143, 946], "zlib": [143, 946], "extra": [143, 165, 175, 201, 360, 421, 513, 684, 758], "prior": [143, 784, 800, 825, 862, 932, 948, 1002], "bootstrap": [143, 946, 1095], "latest": [143, 714, 729, 735, 1088], "yann": 143, "morin": 143, "warranti": [143, 184, 299], "merchant": 143, "chosen": [143, 414, 855, 862, 864, 890, 894, 914, 918, 1062, 1078], "rpi3": 143, "armv7": 143, "rpi2": 143, "23179": 143, "libc": [143, 932, 949], "glibc_2": [143, 932], "ldd": [143, 415, 417, 949], "0xb6e06000": 143, "invok": [143, 173, 192, 205, 288, 293, 429, 531, 543, 602, 632, 911, 933, 970, 982, 983, 1008, 1086], "rpt2": 143, "rpi1": 143, "deb10u1": 143, "quirk": [143, 855], "werror": [143, 335, 348, 391, 414, 726, 727, 1102], "behind": [143, 183, 348, 399, 429, 451, 561, 758, 873, 932, 975, 1076], "glibcxx_3": 143, "libgcc_": 143, "downgrad": 143, "cmake_find_root_path": [143, 933], "cmake_sysroot": [143, 933], "viewpoint": 143, "bye": [143, 655, 659, 661, 662, 663, 1072], "relocat": 143, "pack": [143, 147, 193, 484, 505, 784, 818, 856, 858], "fragil": 143, "sdk": 143, "job": [143, 164, 174, 233, 392, 855, 863, 880, 881, 882, 951, 969, 981, 985, 1061, 1093], "buildroot": 143, "encount": [143, 172, 220, 224, 863, 864, 890], "ct_prefix": 143, "categori": [144, 156, 411, 1058], "crosstool": [144, 248, 711, 854, 933, 935, 942, 943, 944], "1399": 144, "dell": 144, "xp": [144, 409], "grintovec": [144, 199], "plan\u0161arsko": 144, "jezero": 144, "\u010de\u0161ka": [144, 199], "ko\u010da": [144, 199], "traunstein": [144, 168, 320], "zierlersteig": [144, 168], "bigbluebutton": [144, 148, 1107], "deploi": [144, 172, 302, 307, 427, 748, 785, 786, 863, 864, 869, 871, 875], "consumpt": 144, "buildmanag": 145, "embeddedentwicklung": 145, "anpassungen": 145, "paketen": 145, "rootfilesystem": [145, 935], "dient": 146, "vermarktung": 146, "angebot": 146, "referenz": [146, 235], "kursteilnehm": [146, 320], "beendigung": 146, "entstandenen": 146, "zur\u00fcckgreifen": 146, "finden": [146, 150, 159, 1107], "sofern": 146, "kund": [146, 159], "w\u00fcnscht": 146, "abstufungen": 146, "\u00f6ffentlichkeit": [146, 1124], "vorab": [146, 159, 195], "besprochen": 146, "folgend": [146, 165, 176, 221, 1123], "hierbei": 146, "anwendung": [146, 1129], "g\u00e4nzlich": 146, "abgesehen": 146, "ausdr\u00fccklich": 146, "zustimmt": 146, "namen": [146, 165, 175, 224, 846, 1131], "individuen": 146, "prinzipiel": 146, "erw\u00e4hnt": [146, 159], "erlaubni": 146, "sollten": [146, 214, 252], "vorgehen": [146, 232, 1124, 1131], "speziel": [146, 175, 176, 235, 1120, 1123, 1126, 1130], "anbietet": 146, "nie": [146, 155, 167, 320, 1112], "zug\u00e4nglich": 146, "onlinekursen": 146, "m\u00f6glichkeit": [146, 149, 167, 1110, 1129, 1130], "\u00fcbungsmateri": 146, "zustimmen": 146, "einzeln": [146, 159], "teilnehm": [146, 155, 159, 167, 320, 1117, 1124], "keinesfal": 146, "ver\u00f6ffentlicht": 146, "verschiedenst": 146, "m\u00f6glichkeiten": [146, 159, 1126, 1129], "entstanden": [146, 159, 167], "nichtsdestotrotz": [146, 1110], "verf\u00fcgung": [146, 165, 1112, 1129], "accompani": [147, 168, 257, 259, 1059, 1118], "privaci": [147, 164, 168, 169], "guidelin": [147, 164, 864], "certainli": [147, 890], "redhat": [147, 269, 405], "gitk": [147, 818], "traine": [147, 174], "visibl": [147, 173, 193, 259, 288, 335, 337, 339, 363, 365, 396, 397, 401, 406, 407, 471, 620, 711, 729, 862, 864, 926, 997, 1025, 1068], "suppos": [147, 168, 224, 287, 451, 736, 758, 775, 797, 855, 903, 1050, 1093], "respositori": [147, 159], "user1": 147, "user2": 147, "user3": 147, "untrack": 147, "beast": 147, "similarli": 147, "unstag": 147, "accident": [147, 542, 674, 742, 785, 786, 825, 889, 997], "7434a5b": 147, "100755": 147, "cowork": 147, "employ": [147, 409], "favourit": 147, "forward": [147, 210, 236, 237, 238, 247, 268, 269, 283, 340, 355, 364, 370, 371, 377, 381, 384, 388, 397, 401, 406, 407, 592, 629, 636, 667, 677, 708, 710, 711, 758, 818, 842, 850, 854, 855, 865, 870, 1113], "enumer": [147, 153, 155, 165, 171, 176, 177, 181, 183, 189, 190, 192, 213, 217, 222, 228, 242, 246, 263, 266, 344, 391, 411, 628, 719, 754, 864, 1123], "unpack": [147, 151, 171, 177, 181, 183, 188, 192, 196, 201, 204, 209, 213, 214, 220, 225, 227, 231, 232, 243, 248, 250, 253, 262, 266, 287, 302, 681, 758, 784, 856, 858, 862, 933, 940, 946, 947, 986, 1004, 1113], "869": [147, 207], "124": [147, 151, 165, 172, 175, 182, 188, 191, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 1013], "kib": 147, "a4b9666": 147, "bf5bb75": 147, "went": [147, 168], "retri": [147, 876, 975, 1088], "noon": [147, 918, 1006], "lack": [147, 389, 414, 486, 620, 622, 864, 944], "unavoid": 147, "her": [147, 151, 176, 220, 223, 622, 793, 814, 1022, 1067, 1123], "confid": 147, "merg": [147, 193, 760, 918, 1004, 1125], "gentl": [148, 1114], "histori": [148, 156, 192, 210, 236, 237, 239, 241, 283, 348, 625, 629, 631, 667, 708, 710, 711, 717, 760, 789, 795, 846, 1056, 1062, 1071, 1115, 1119, 1126], "tinker": 148, "solder": 148, "sysv": [149, 933], "grace": [149, 261, 694], "sigterm": [149, 929, 930], "sigkil": 149, "beeinflussen": 149, "shutdown": [149, 204, 220, 227, 230, 245, 252, 262, 266, 310, 736, 849, 926, 964], "herausgefunden": [149, 155, 320], "nachfolgend": [149, 1108], "manpag": 149, "verhindern": 149, "genehm": 149, "systemd": [149, 204, 220, 227, 230, 245, 252, 262, 266, 758, 796, 849, 864, 929, 1108], "inhibit": [149, 627, 665], "children": [149, 403], "vererbt": 149, "attributen": 149, "setprior": 149, "execv": [149, 887, 932], "sched_reset_on_fork": 149, "ORed": 149, "privileg": [149, 204, 220, 227, 230, 245, 252, 262, 266, 814, 849], "playback": 149, "prevent": [149, 152, 201, 207, 210, 217, 220, 248, 385, 391, 395, 795, 884, 889, 918, 929, 955, 967, 997], "evad": 149, "rlimit_rttim": 149, "getr": 149, "anstel": 149, "prozessen": 149, "teilen": 149, "prozess": [149, 303, 1117, 1119, 1126, 1127, 1130], "startenden": 149, "gestarteten": 149, "weitergegeben": 149, "ausser": [149, 176, 297, 1123], "unterbunden": 149, "pthread_attr_setinheritsch": 149, "pthread_inherit_sch": 149, "pthread_explicit_sch": 149, "newli": [149, 391], "sowa": [149, 155, 320, 1108], "\u00e4hnlich": [149, 180], "wikipedia": [149, 210, 399, 542, 864, 875, 919, 951, 1072], "filter_driv": 149, "offenbar": [149, 165, 320, 1110], "miser": [149, 580], "netzwerkdrivern": 149, "hoher": 149, "interruptlast": 149, "verbessern": 149, "n\u00f6tig": [149, 1119], "diesbez\u00fcglich": 149, "\u00fcberlegt": 149, "schaltet": 149, "netzwerkdriv": 149, "30107": 149, "linuxfound": 149, "workgroup": 149, "napi": [149, 179, 752], "implementationen": 149, "libmodbu": 149, "freemodbu": 149, "konfiguriert": [149, 150], "jumbo": 149, "jumbo_fram": 149, "mtu": [149, 857], "1500": [149, 207], "eth0": 149, "9000": [149, 207], "ifconfig": [149, 752], "abgelegt": 149, "konfigur": [149, 151], "ifac": [149, 454, 468, 691], "vorsicht": [149, 175, 846], "routern": 149, "fragmentieren": 149, "tracerout": 149, "netzwerkverbindung": 149, "g\u00fcte": 149, "wissen": [149, 320, 1110, 1117], "sar": 149, "sysstat": 149, "schmerzvol": 149, "netter": 149, "ausprogrammiert": 150, "konflikt": [150, 1125], "parallelen": [150, 1129], "demonstr": [150, 152, 172, 244, 481, 530, 1058, 1062, 1105], "mutter": [150, 320, 321, 1129], "aller": [150, 159, 320, 321, 1108, 1129], "danach": [150, 1107], "hilf": [150, 175, 302, 307, 1119], "gefixt": 150, "kommunk": 150, "variablen": [150, 151, 176, 177, 180, 183, 188, 216, 234, 235, 294, 297, 303, 1109, 1119, 1120, 1123], "frontal": 150, "vorgef\u00fchrt": 150, "diskuss": [150, 159, 181, 320], "dank": [150, 155, 320, 1108], "beispielcod": 150, "h\u00e4ndisch": [150, 1111], "zweier": [150, 176, 1123], "bewundern": 150, "k\u00f6nnt": 150, "euch": 150, "erinnern": [150, 320], "blinken": 150, "liess": 150, "irgendwo": [150, 224], "hatten": [150, 155, 320], "edg": [150, 194, 740, 898, 899], "waren": [150, 155, 1108, 1112], "kleinen": 150, "empf": 150, "unbedingt": [150, 165, 1108], "beispielprogramm": 150, "horcht": 150, "gesprochen": 150, "ausf\u00fchrlich": [150, 235], "schamlos": 150, "eigenwerbung": 150, "vortrag": [150, 1107], "linuxtagen": 150, "\u00fcberbleibsel": 150, "ehemaligen": 150, "socketcan": [150, 856, 857], "absorbiert": 150, "worden": [150, 159, 1108], "enth\u00e4lt": [150, 165], "schnuckelig": 150, "aufzeichnen": 150, "replai": [150, 857], "folien": [150, 159, 167, 1107], "freitag": [150, 1108], "kerneldrivertag": 150, "sorri": [150, 156, 797], "emanuel": 150, "beispieldriv": 150, "random": [112, 150, 152, 168, 180, 192, 204, 205, 208, 212, 214, 217, 220, 225, 227, 230, 252, 261, 297, 302, 345, 432, 434, 439, 448, 474, 485, 495, 496, 497, 498, 500, 501, 502, 532, 685, 789, 864, 875, 894, 922, 956, 968, 991, 1063, 1075, 1086], "han": 150, "findet": 150, "angeboten": [150, 1107], "promin": [150, 684, 754], "implementiert": [150, 165, 196, 1117, 1131], "gute": [150, 167, 1117, 1124], "anfang": [150, 151, 159], "mcp2515": [150, 758], "angesprochen": [150, 167], "fortgeschrittener": [150, 167], "einpflegt": 150, "agiert": 150, "mcp251x": 150, "at91": 150, "soc": [150, 862, 863, 864, 898], "deinem": 150, "stecker": 150, "verbaut": 150, "at91_can": 150, "lacht": 150, "zeilenweisen": 151, "nutzdaten": [151, 204], "extrahieren": [151, 178], "wollend": [151, 1124], "spalt": 151, "offensichtlich": [151, 1111], "separiert": 151, "felder": 151, "antwort": [151, 252], "stdtype": 151, "gscheitesten": 151, "aufeinanderfolgend": 151, "whitespac": [151, 212, 220, 266, 333, 1002, 1025, 1084], "nimmt": [151, 176, 188, 212, 214, 220, 252, 1110, 1123], "tupl": [151, 164, 169, 171, 173, 177, 181, 183, 189, 190, 192, 196, 199, 202, 203, 205, 206, 208, 209, 213, 215, 216, 217, 222, 225, 228, 229, 231, 241, 243, 246, 249, 250, 253, 263, 265, 267, 271, 272, 287, 302, 458, 960, 978, 979, 986, 987, 992, 1001, 1004, 1033, 1056, 1080, 1081, 1113], "weiss": [151, 155, 165, 1126, 1131], "rauskommen": 151, "aaa": [151, 212, 224, 230, 266], "tbbb": 151, "tccc": 151, "feld0": 151, "feld1": 151, "feld2": 151, "ccc": [151, 230], "optional": [151, 1110], "splittet": 151, "bearbeitet": [151, 1130], "manuel": [151, 175, 180], "ddd": 151, "eee": 151, "maxsplit": [151, 220, 266, 411], "restfield": 151, "len": [151, 152, 153, 155, 165, 175, 180, 182, 183, 188, 191, 192, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 273, 294, 297, 411, 754, 858, 959, 972, 985, 987, 993, 995, 1002, 1004, 1006, 1007, 1051, 1072, 1076, 1080, 1083], "10101010": 151, "switchnumb": 151, "rsplit": [151, 220, 266, 411, 1002], "l1": [151, 154, 165, 182, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 449], "l2": [151, 154, 165, 182, 188, 191, 196, 201, 204, 207, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272], "\u00e4nderung": [151, 165, 1131], "87": [151, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 1013, 1060, 1061], "zeigen": [151, 845], "dasselb": 151, "objekt": [151, 165, 175, 266], "140070310441600": 151, "ver\u00e4ndert": 151, "91": [151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 1060, 1061], "140070371015728": 151, "92": [151, 152, 175, 180, 182, 184, 188, 191, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 302, 307, 842, 1060, 1061], "attributeerror": [151, 165, 201, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 955, 968, 969, 976], "gottseidank": 151, "alternativ": 151, "aufruf": [151, 165, 171, 175, 220, 298], "paaren": 151, "keyerror": [151, 154, 165, 175, 182, 191, 201, 204, 207, 212, 214, 217, 220, 227, 230, 242, 245, 252, 262, 266, 272, 297, 955, 1004, 1081], "nix": [151, 152, 165, 183, 191, 212, 214, 217, 242, 262, 297, 487], "umstaendlich": 151, "einfach": [151, 165, 176, 180, 262, 1111, 1112, 1117, 1123, 1125, 1127, 1129, 1131], "102": [151, 165, 175, 180, 182, 188, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 297, 302, 307], "103": [151, 165, 175, 182, 188, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297], "104": [151, 153, 165, 175, 180, 182, 188, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 1013], "106": [151, 165, 175, 180, 182, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297, 840], "setdefault": [151, 192, 212, 227, 242, 245, 252, 262, 266, 272, 1004], "107": [151, 165, 175, 180, 182, 184, 188, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 297, 299, 398], "meinvoelligsinnlosertyp": 151, "sinnlose_addit": 151, "sinnlobj": 151, "112": [151, 165, 172, 175, 180, 182, 188, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 249, 252, 262, 266, 272, 297, 840], "113": [151, 165, 175, 180, 182, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 249, 252, 262, 266, 272, 434], "__main__": [151, 155, 165, 170, 188, 191, 201, 204, 205, 207, 212, 214, 217, 220, 224, 227, 230, 233, 245, 252, 262, 266, 272, 297, 302, 956, 959, 963, 969, 977, 1088, 1094], "0x7f64a8934890": 151, "114": [151, 153, 165, 175, 182, 188, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "115": [151, 165, 175, 180, 182, 188, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "116": [151, 165, 175, 182, 188, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "nochwenigersinnvol": 151, "der_absolute_unsinn": 151, "super": [151, 167, 168, 175, 189, 191, 192, 207, 215, 218, 222, 241, 245, 256, 265, 448, 953, 955, 972, 1056, 1063], "unsinn": 151, "uebertreibs_jetzt_bitt": 151, "117": [151, 165, 175, 182, 188, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "118": [151, 165, 175, 182, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 840, 1013], "0x7f64a894a790": 151, "119": [151, 165, 175, 182, 184, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 299], "121": [151, 153, 165, 175, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 956], "1335": 151, "122": [151, 153, 165, 175, 180, 182, 188, 191, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 934], "819508": 151, "123": [151, 165, 175, 182, 183, 188, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 344, 857, 1013, 1020, 1094], "uptim": 151, "timedelta": [151, 170, 197, 199, 252], "358": [151, 207, 252, 266, 405], "125": [151, 175, 180, 182, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "irgendwann_einmal_gewesen": 151, "834972": 151, "126": [151, 165, 175, 180, 182, 188, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "datetime_from_batteri": 151, "840837": 151, "127": [151, 165, 175, 180, 182, 188, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 873, 881], "846889": 151, "woher": [151, 214], "ausschauen": 151, "sinnlo": [151, 214], "sinnlos": [151, 188, 266], "repraesent": 151, "129": [151, 165, 175, 182, 184, 191, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 299], "130": [151, 165, 175, 182, 197, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 256, 262, 266, 272, 627, 731, 1000], "completedprocess": [151, 220, 230], "returncod": [151, 220, 230], "erfolgreich": 151, "beendet": [151, 1129], "schau": 151, "du": [151, 165, 220, 227, 233, 881, 886], "verwendest": 151, "anzuzeigen": 151, "cell": [151, 164, 855, 980, 1061], "gesendet": 151, "ausf\u00fchrt": 151, "krieg": 151, "131": [151, 165, 175, 182, 191, 197, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 677], "capture_output": [151, 230], "stdout": [112, 151, 184, 188, 192, 201, 207, 217, 220, 230, 238, 245, 247, 248, 268, 269, 287, 295, 297, 302, 306, 308, 598, 711, 782, 784, 788, 799, 800, 843, 846, 849, 854, 884, 929, 956, 1006, 1008, 1013, 1018, 1022, 1025, 1040, 1075, 1084, 1119], "ndrwxrwxr": [151, 230], "mar": [151, 220, 344, 785, 786, 789, 803, 815, 837, 840, 842, 866, 880, 890, 932, 935, 944], "2607": 151, "33768": 151, "ndrwxr": 151, "xr": [151, 422, 785, 786, 803, 805, 806, 814, 815, 840, 855, 862, 863, 864, 932, 944, 946, 947, 983], "switchzeug": 151, "sondern": [151, 165, 176, 1108, 1117, 1120, 1123, 1130], "keiner": [151, 165, 1112], "seinen": [151, 165], "formuliert": [151, 159], "logisch": [151, 175], "irgendwa": [151, 197, 212, 214], "konverti": 151, "musst": 151, "dich": 151, "festlegen": 151, "133": [151, 165, 175, 182, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "stdout_as_utf8": 151, "utf": [151, 192, 201, 204, 205, 207, 211, 217, 220, 230, 252, 266, 272, 987, 1006, 1053, 1086], "134": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 686], "135": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "drwxrwxr": [151, 230, 840, 898, 933, 934, 935, 944, 946], "drwxr": [151, 785, 786, 803, 840, 855, 862, 863, 864, 944, 946], "136": [151, 153, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272, 423], "fuer": [151, 212, 217, 224], "listdir": [151, 258, 262, 309, 411], "ipynb_checkpoint": [151, 230], "gitignor": [151, 412, 934], "137": [151, 162, 165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "rekurs": 151, "iterieren": [151, 155, 165, 180, 188], "dirpath": 151, "dirnam": [151, 204, 207, 258, 411, 486, 709, 1093], "checkpoint": [151, 201, 207, 217, 220], "itg": 151, "scope": [151, 159, 165, 176, 177, 180, 211, 223, 236, 237, 239, 248, 260, 271, 279, 283, 302, 339, 345, 449, 499, 519, 532, 534, 543, 628, 669, 681, 684, 699, 700, 710, 711, 954, 999, 1113, 1123, 1127], "getter": [151, 540, 588], "setter": [151, 191, 976], "fibo": [151, 152, 171, 191, 205, 655, 657, 959], "listcomprehens": 151, "generatorexpress": [151, 152], "switchdb": 151, "schema": [151, 232, 529, 1012], "michi": 151, "pyexec": 151, "ifadminstatu": 151, "ifdescr": 151, "iflastchang": 151, "snmpenginetim": 151, "ifoperstatu": 151, "fein": [151, 175], "helferlein": 151, "hochtrabend": 151, "nennt": 151, "funktional": 151, "138": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 1013], "139": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "140": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 262, 266, 272, 627], "l_quadrat": 151, "141": [151, 165, 175, 182, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 344, 840], "kompliziert": [151, 165, 217, 220, 242, 1108, 1127], "anm": 151, "versionen": [151, 221], "aufgebaut": 151, "rausnehmen": 151, "konfigurationsfil": 151, "configpars": 151, "142": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 249, 262, 266, 272, 875, 920], "143": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "liste_als_str": 151, "144": [151, 165, 175, 182, 191, 198, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 423], "145": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 1077], "herbert": 151, "146": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "heraussen": 151, "147": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272, 793], "148": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 546], "149": [151, 165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "151": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 309], "152": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 309], "mein_dict": 151, "gerhard": 151, "175": [151, 165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 266, 272], "154": [151, 165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 840], "dict_as_json_str": 151, "155": [151, 165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 309], "gelesenes_dict_von_json": 151, "nahm": 152, "woch": [152, 172, 320, 321, 1108], "anspruch": 152, "platz": 152, "gesammelten": 152, "notizen": 152, "schnell": [152, 155, 175, 196, 221, 1111], "sachen": [152, 178], "is_prim": [152, 175, 178, 183, 1035], "divisor": [152, 183, 709, 1027], "unmodifi": [152, 165, 201, 212, 432, 483, 529, 543, 862, 864, 955, 968, 1038], "randomnumb": 152, "howmani": 152, "randrang": [152, 180, 204, 212, 214, 217, 220, 224, 227, 230, 252, 297, 956, 991], "prev": [152, 748], "cur": [152, 272, 349], "fibonum": 152, "tend": [152, 251, 254, 261, 399, 731, 797, 947], "input_list_str": 152, "input_list": [152, 227, 1038], "__n": 152, "__lt__": [152, 214, 217, 220, 224, 242, 245, 266], "rh": [152, 201, 205, 220, 337, 379, 395, 449, 463, 529, 543, 545, 669], "__le__": [152, 214, 217, 220, 224, 242, 245, 266, 975], "__eq__": [152, 214, 217, 220, 224, 242, 245, 266, 975], "__iadd__": 152, "iadd": 152, "__add__": [152, 217, 220, 224, 242, 266, 975], "new_numb": [152, 207], "__radd__": [152, 217, 224, 242, 975], "radd": 152, "lh": [152, 201, 205, 337, 379, 395, 449, 463, 519, 529, 543, 545, 669, 789], "makesnosens": 152, "__number": 152, "input_numb": 152, "numnber": 152, "list_of_squar": 152, "shorter": [152, 963, 974, 1006, 1055], "compehens": 152, "effort": [152, 224, 258, 392, 393, 410, 863], "local_assign": 152, "read_global_vari": 152, "enclos": [152, 220, 362], "local_shadows_glob": 152, "explicit_global_assign": 152, "creation": [152, 261, 693, 695, 700, 710, 711, 817, 854, 884, 895, 900, 909, 915, 926, 935, 997, 1006, 1007, 1095], "captur": [152, 235, 236, 237, 239, 259, 283, 287, 302, 667, 668, 671, 710, 711, 855, 951, 1113], "create_funct": 152, "inner_funct": 152, "whic": 152, "f_one": 152, "f_two": 152, "launch": [152, 168], "somewhat": [152, 193, 399, 432], "discov": [152, 164, 171], "area": [152, 161, 194, 224, 754, 863, 1124, 1130], "scikit": [153, 155, 202, 1095], "manipul": [153, 414, 563, 686, 709, 756, 862, 875, 884, 919, 931, 994, 1012], "appreci": [153, 204, 797, 1013], "beauti": [153, 167, 168, 171, 189, 191, 192, 199, 210, 214, 215, 218, 224, 241, 265, 302, 375, 505, 563, 900, 957, 1006, 1013, 1056], "spectral": [153, 1058], "matlab": [153, 155, 208, 320, 1055, 1058], "mat": 153, "scipi": [153, 155, 183, 202, 1095], "loadmat": [153, 155], "sklearn": [153, 155, 1059, 1061, 1095], "pixel": 153, "rgb": [153, 155, 311], "dimens": [153, 155, 1061, 1116], "xkcd": 153, "schafer": [153, 164, 167, 168, 171, 189, 192, 199, 202, 205, 215, 218, 229, 232, 241, 265, 271, 302, 307, 1056, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1096], "keith": [153, 164, 168, 189, 202, 215, 229, 232, 265, 271, 1056], "galli": [153, 164, 168, 189, 202, 215, 229, 232, 265, 271, 1056], "sci": 153, "kit": [153, 311], "spyder": [153, 164, 980], "pycharm": [153, 164, 258, 980], "retain": [153, 368, 998], "invoc": [153, 449], "comparison": [153, 170, 193, 207, 210, 220, 228, 266, 344, 348, 354, 505, 669, 989, 1031], "misfeatur": 153, "png": [153, 155, 418, 934, 1058], "imgfil": 153, "veggi": [153, 155, 1058], "pillow": [153, 155], "welcom": 153, "cooper": [153, 694], "477x686": 153, "imgarrai": [153, 155], "ndim": [153, 1061], "477": [153, 207, 252], "dtype": [153, 155, 249, 252, 256, 1061, 1077, 1078, 1080, 1081, 1082, 1083], "uint8": 153, "255": [153, 188, 204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272, 911], "172": [153, 165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 394], "nrow": [153, 155], "ncol": [153, 155], "reshap": [153, 155, 189, 202, 215, 229, 232, 265, 271, 1056, 1059, 1061], "irrelev": [153, 170, 175, 208, 344, 386, 409, 803, 987, 1072], "colorspac": 153, "mpl_toolkit": 153, "mplot3d": 153, "axes3d": 153, "pyplot": [153, 182, 201, 230, 233, 952, 1010, 1061], "plt": [153, 182, 201, 230, 233, 952, 1010, 1061], "fig": 153, "add_subplot": 153, "set_xlabel": 153, "set_ylabel": 153, "set_zlabel": 153, "ndindex": 153, "scatter": [153, 729], "rgb_linear": 153, "n_cluster": [153, 155], "copy_x": 153, "max_it": 153, "n_init": 153, "n_job": 153, "precompute_dist": 153, "random_st": [153, 1059, 1061], "tol": 153, "verbos": [153, 160, 414, 687, 784, 818, 820, 991, 1088], "cluster_cent": 153, "int32": [153, 395], "327222": 153, "cluster_centers_": [153, 155], "20529747": 153, "50360681": 153, "3796182": 153, "94408609": 153, "75471018": 153, "53133237": 153, "226": [153, 165, 184, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272, 299], "64913628": 153, "76939951": 153, "92569235": 153, "71464963": 153, "47333306": 153, "60640492": 153, "8888303": 153, "92275244": 153, "84313209": 153, "157": [153, 165, 175, 182, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "30685398": 153, "43988931": 153, "03959132": 153, "225": [153, 165, 204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 266, 272, 418, 1013], "55934051": 153, "182": [153, 165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 262, 266, 272], "98255893": 153, "3232048": 153, "241": [153, 204, 207, 212, 214, 217, 220, 227, 230, 245, 262, 266, 272, 1013], "37322907": 153, "159": [153, 165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "54158234": 153, "51775529": 153, "idx": [153, 155, 220], "cube": 153, "concaten": [153, 155, 192, 204, 205, 212, 220, 266, 296, 344, 410, 843, 992, 1000, 1086], "axi": [153, 155, 256, 1080, 1081], "reduced_img": [153, 155], "fromarrai": [153, 155], "float": [154, 165, 169, 171, 173, 175, 182, 183, 188, 191, 201, 204, 205, 207, 210, 212, 214, 217, 220, 225, 228, 242, 245, 250, 262, 266, 272, 297, 298, 325, 326, 327, 331, 341, 343, 344, 348, 378, 387, 392, 411, 439, 448, 554, 555, 644, 862, 920, 930, 968, 986, 1001, 1008, 1013, 1110, 1114], "franziska": [154, 155], "baseexcept": [154, 191, 220, 224, 245, 955], "callabl": [154, 168, 204, 217, 227, 230, 245, 252, 262, 266, 273, 627, 669, 691, 699, 969, 970, 1007], "forev": [154, 369, 370], "rescu": [154, 212, 542, 563, 685, 687, 758, 953], "pooh": [154, 555], "hex": [154, 165, 175, 182, 197, 207, 217, 230, 242, 245, 252, 262, 272, 297, 313, 486, 864, 1001], "0x7f03d41165f0": 154, "nonexist": 154, "react": [154, 169, 171, 173, 274, 391, 552, 862, 879, 955, 1115], "ensu": 154, "catch": [154, 194, 210, 233, 259, 287, 313, 458, 475, 492, 494, 527, 553, 556, 572, 578, 582, 587, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 655, 663, 701, 711, 930], "jessa": [154, 175, 182, 204, 233], "verdammt": [154, 302], "ipython": [154, 191, 201, 207, 217, 220, 245, 262, 840], "bd3a1af9b474": 154, "issubclass": [154, 191, 207, 220, 245], "rais": [154, 155, 169, 171, 173, 191, 192, 201, 205, 207, 208, 212, 214, 217, 218, 220, 224, 232, 233, 266, 287, 313, 953, 960, 966, 976, 1002, 1004, 1080, 1081, 1086], "bummer": [154, 207, 701, 1000], "peter": [154, 177, 214, 224, 293, 294, 993], "paul": [154, 293, 294, 993], "mari": [154, 993], "pet": 154, "perfectli": [154, 210], "bloh": [154, 191], "blech": [154, 262, 640, 1075], "range_iter": [154, 165, 180, 197, 204, 212, 214, 217, 220, 230, 242, 245, 252, 262], "0x7f03d402e570": 154, "stopiter": [154, 165, 180, 191, 197, 201, 204, 207, 212, 214, 217, 220, 224, 230, 242, 245, 252, 262, 266, 272, 655, 663, 955, 960], "einf\u00fchrung": [155, 159, 172, 174, 321, 979, 1109, 1114, 1115, 1117, 1126, 1128], "beantwortung": [155, 320], "herrschaft": [155, 320], "gestellt": [155, 165, 320, 1112], "schulungsr\u00e4umen": [155, 320], "platzhirsch": [155, 320], "schlagen": [155, 320], "spass": [155, 320, 1117, 1119, 1124], "unglaublich": [155, 320], "lustig": [155, 176, 320, 1108, 1119], "vermittelt": [155, 320, 1129], "gelernt": [155, 320, 1117], "anwend": [155, 320], "beachten": [155, 176, 320, 1123], "zudem": [155, 320], "kursleit": [155, 320], "sympathisch": [155, 320], "kompet": [155, 320], "w\u00fcrde": [155, 165, 320], "weiterempfehlen": [155, 320], "wiederholen": [155, 320], "christoph": [155, 197, 320], "jemand": [155, 320], "lassen": [155, 165, 176, 320, 1111, 1117, 1123, 1127, 1131], "bevor": [155, 1117, 1124, 1131], "anf\u00e4ngerthemen": 155, "vorbei": [155, 214, 220, 1120], "herumzureiten": 155, "gehackt": [155, 195], "zeug": [155, 1126], "chef": 155, "vorgespr\u00e4ch": 155, "\u00fcbungsbeispiel": [155, 165], "mitgegeben": 155, "ausgehend": [155, 176, 320], "spektralbild": 155, "sagt": [155, 212], "verwend": [155, 188, 320], "clusteringalgorithmu": 155, "kategorisieren": 155, "abgebildeten": 155, "st\u00fccke": [155, 159], "erkennen": [155, 1112], "hab": 155, "erlaubt": [155, 165, 1108], "kursvorbereitung": 155, "appet": 155, "reduzieren": 155, "farbredukt": 155, "farben": 155, "bilddaten": 155, "schreiben": [155, 177, 302, 303, 307, 1110, 1127, 1129], "interoperiert": 155, "nahtlo": [155, 1117, 1124], "zufal": [155, 181, 1111], "alpha": [155, 220, 266, 1011], "ausgangsbild": 155, "abzuschneiden": 155, "restoren": 155, "algorithmu": [155, 175, 220, 224, 227], "reduc": [155, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 427, 629, 667, 708, 710, 711, 864, 1058], "acht": [155, 175, 176, 220, 252, 272, 1123], "\u00fcberschaubar": 155, "ausdrucksst\u00e4rk": 155, "bemerkbar": 155, "wegschneiden": 155, "pil": 155, "kmean": 155, "nrgba": 155, "disregard": [155, 348], "arbitrarili": [155, 717, 890, 894, 953], "linear_rgb": 155, "rgba": 155, "ergeben": 155, "testprogramm": 155, "imndata": 155, "teilzeitmitarbeiterin": 155, "studiert": 155, "physik": 155, "folgendem": [155, 197, 1131], "bekackten": 155, "inputformat": 155, "parsen": [155, 180], "zwischendurch": 155, "gruppenarbeit": 155, "h2o": 155, "dat": 155, "mass": [155, 261], "0000000e": 155, "2662399e": 155, "5994910e": 155, "4391972e": 155, "0048070e": 155, "0078250e": 155, "hessian": 155, "hartre": 155, "bohr": 155, "kamu": 155, "05054e": 155, "61610e": 155, "00000e": 155, "20781e": 155, "08051e": 155, "83024e": 155, "06829e": 155, "42629e": 155, "65256e": 155, "52600e": 155, "69570e": 155, "91733e": 155, "04388e": 155, "34292e": 155, "04780e": 155, "63758e": 155, "19019e": 155, "41217e": 155, "11622e": 155, "21912e": 155, "11752e": 155, "04198e": 155, "36702e": 155, "14839e": 155, "71613e": 155, "96373e": 155, "40456e": 155, "21369e": 155, "24236e": 155, "60956e": 155, "84350e": 155, "29686e": 155, "92365e": 155, "einigen": [155, 176, 320], "runden": [155, 165], "nachdenken": 155, "einigerma\u00dfen": 155, "zufrieden": 155, "load_dat": 155, "matrix_lin": 155, "readlin": [155, 182, 184, 191, 192, 204, 205, 211, 220, 227, 252, 262, 294, 818, 1006, 1086], "vergeigt": 155, "matrix_el": 155, "unnecessari": [155, 339, 369], "triangular": 155, "max": [155, 165, 183, 188, 201, 207, 210, 212, 214, 217, 222, 227, 245, 353, 369, 505, 554, 795, 856, 1061], "row_no": 155, "__name__": [155, 191, 192, 205, 214, 220, 224, 245, 262, 266, 295, 302, 954, 956, 959, 963, 1086], "bildverarbeitung": 155, "ahnung": [155, 197], "beeeeeep": 156, "broad": [156, 428, 1063, 1113, 1114], "responsibl": [156, 917, 1093], "sane": [156, 313, 795, 1067, 1093], "interfer": [156, 399, 412, 863], "paradigm": [156, 794, 802, 855, 863, 1128], "breakag": [156, 738], "nontrivi": [156, 164, 168, 304, 980, 1087], "inappropri": [156, 326, 331, 432, 716], "conclus": [156, 164, 171, 756], "awkward": 156, "encourag": [156, 717], "hear": 156, "predat": [156, 721, 847, 926], "transport": [156, 208, 210, 484, 701, 1052, 1075], "doubt": [156, 201, 207, 217, 220, 224, 686, 987], "schulungsbeschreibung": [157, 1107], "drehbuch": 157, "workshop": 157, "infolgedessen": 157, "virtuel": [157, 221, 1117, 1127, 1128], "konzipiert": [157, 167, 320], "add_subdirectori": [158, 419, 423, 924, 1102], "group1": 158, "group2": 158, "montag": [159, 167, 168, 189, 193, 1108], "vorbereitung": [159, 320, 1110], "mitbringen": 159, "teilzunehmen": 159, "stattfinden": [159, 235], "folgt": 159, "hierzu": 159, "privatheitsrichtlinien": 159, "bauanleitung": 159, "ausprobieren": 159, "willkommen": 159, "schulungsbeschreibungen": 159, "raii": [159, 261, 527, 711], "stl": [159, 311, 375, 488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504, 527, 528, 566, 570, 592, 594, 595, 609, 624, 635, 711, 1112, 1113, 1114], "scott": [159, 634, 689], "meyer": [159, 437, 689], "primer": [159, 1100], "sonstig": 159, "argh": [159, 370, 621, 649, 955, 1088, 1100], "kursanforderung": 159, "erg\u00e4nzend": 159, "lasst": 159, "testgetrieben": 159, "entwickeln": 159, "testcas": [159, 1094], "aufgab": [159, 165, 195, 1120], "hacken": 159, "diskutieren": 159, "niederschrift": 159, "geschehenen": 159, "geh\u00f6renden": 159, "privaten": 159, "entwickelt": [159, 1117, 1124, 1126], "verl\u00e4uft": 159, "ansehen": 159, "clonen": 159, "wann": [159, 167], "zugeh\u00f6rigen": 159, "entspricht": 159, "unbetr\u00e4chtlich": 159, "gcc5": 159, "laufen": [159, 1108], "darau": [159, 167], "installationsanleitung": 159, "benutzung": [159, 302, 307], "zuerst": [159, 1131], "aggreg": [159, 400, 411, 529, 770, 1077, 1100], "klassen": [159, 165, 171, 303, 1112], "konstruktoren": [159, 183, 235, 303, 1112], "methoden": [159, 165, 177, 297, 1112], "referenzen": [159, 165, 176, 177, 235, 1112, 1123], "klass": [159, 188], "\u00e4quival": 159, "\u00fcbergab": 159, "langsam": [159, 165, 214], "ausbauen": 159, "dynamisch": [159, 190, 1110, 1112, 1127], "dynmem": 159, "demonstrieren": 159, "alloziert": [159, 165, 182], "delet": [159, 171, 201, 220, 235, 245, 266, 297, 396, 427, 430, 469, 486, 495, 499, 511, 519, 534, 537, 596, 599, 604, 627, 637, 638, 639, 667, 672, 684, 685, 686, 687, 710, 711, 736, 766, 795, 1068, 1095, 1112, 1113], "konstruktor": 159, "destruktor": 159, "vermeiden": [159, 165, 1129], "dtor": [159, 427, 513, 599, 604, 635, 638, 672], "ausflug": [159, 175, 216], "capac": [159, 580], "\u00fcbung": [159, 176, 177, 1123], "handgestrickt": 159, "fallen": [159, 1111, 1112], "lustvol": 159, "erleiden": 159, "teufel": [159, 1111], "smart": [159, 235, 257, 303, 304, 305, 320, 409, 486, 596, 636, 637, 667, 687, 692, 700, 708, 710, 711, 1113, 1116], "shared_ptr": [159, 194, 210, 236, 237, 239, 257, 259, 283, 441, 505, 596, 627, 636, 667, 682, 688, 689, 692, 700, 708, 710, 711, 1113], "unique_ptr": [159, 194, 210, 236, 237, 239, 257, 259, 283, 427, 434, 441, 467, 468, 505, 596, 635, 636, 667, 682, 685, 692, 700, 707, 708, 710, 711, 1113], "demonstriert": 159, "vorgriff": 159, "sortieren": [159, 1112], "employeerecord": 159, "parametrisierbarem": 159, "koordinatentyp": 159, "102ff": 159, "arten": [159, 1110], "containern": 159, "pointerarithmetik": 159, "wiederholung": [159, 176, 183, 219, 1123], "iteratoren": [159, 222], "laufzeitverhalten": [159, 177], "verbesserungen": 159, "gegen\u00fcb": [159, 1110], "6ff": 159, "lambda": [159, 191, 192, 205, 207, 210, 222, 235, 242, 259, 262, 267, 411, 505, 570, 642, 667, 672, 677, 679, 691, 694, 699, 710, 711, 951, 1112, 1113, 1114], "gegen\u00fcberstellung": 159, "sort_algorithm_reverse_lambda": 159, "vererbung": [159, 1112], "fallstudi": 159, "livegehackt": 159, "angebunden": 159, "komplex": [159, 212, 214, 220, 227, 252, 1129], "aufbauen": 159, "vergleichbaren": 159, "anbinden": 159, "wurden": [159, 167], "eigen": [159, 178, 1112, 1117, 1124, 1129, 1130], "kapitel": [159, 302, 307, 1110], "behandelt": [159, 1107], "vorbeigehen": 159, "dcmake_cxx_flag": 160, "dcmake_install_prefix": [160, 417], "libgtest": [160, 161, 257, 259, 1100, 1102], "claim": [160, 337, 546, 548, 549, 793, 886], "simlp": 160, "concret": [160, 168, 194, 257, 427, 434, 439, 454, 516, 602, 604, 699, 968, 1063], "find_packag": [160, 162, 1102], "add_execut": [160, 412, 418, 424, 470, 506, 509, 512, 515, 518, 521, 524, 618, 921, 928, 933, 934, 1099, 1102, 1104], "add_test": [160, 425, 509, 1099, 1102], "emphasi": [160, 283], "ultim": [160, 191, 211, 537, 702, 863], "luke": [160, 220, 1102], "thetoplevel": 160, "findgtest": [160, 162, 1102], "gtest_root": 160, "dgtest_root": 160, "paranoidli": 160, "bitrot": [161, 1102], "var": [161, 165, 204, 220, 227, 230, 245, 252, 262, 266, 463, 758, 790, 820, 840, 845, 846, 849, 946], "libgmock": [161, 257, 259], "gmock": [161, 1100], "dcmake_build_typ": [161, 414], "loudli": [161, 537, 761, 871], "flathub": 162, "appstream": 162, "visualstudio": [162, 221, 322], "flatpakref": 162, "stone": 162, "snap": 162, "hate": [162, 531], "textual": [162, 164, 484], "findpackagehandlestandardarg": 162, "gtest_librari": 162, "gtest_include_dir": 162, "gtest_main_librari": 162, "378": [162, 204, 207, 214, 252, 1013], "_fphsa_failure_messag": 162, "197": [162, 165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 245, 262, 266, 272], "find_package_handle_standard_arg": 162, "occur": [162, 224, 329, 344, 349, 350, 396, 420, 503, 697, 756, 818, 847, 917, 1001, 1002, 1006, 1118], "gessmann": 162, "cpoint_demo": 162, "cmakefil": [162, 412, 418, 423, 933, 934], "cmakeoutput": 162, "sigh": [162, 194, 486, 689, 1047], "jail": 162, "dict_extensions_suit": 163, "thing_suit": 163, "xsv": 163, "dict_extens": 163, "wednesdai": [164, 172, 254], "thursdai": [164, 168], "publicli": [164, 519], "freedom": [164, 399, 605], "spontan": 164, "cost": 164, "agil": [164, 178, 409, 1087], "methodologi": 164, "formul": [164, 260, 411, 644, 702, 881, 1116], "diadact": [164, 980], "anaconda": [164, 258, 980], "dictat": [164, 274, 348, 387, 926, 980, 981, 1068, 1085, 1088, 1115], "volumin": [164, 980], "nodepad": [164, 980], "configurabilti": [164, 1085], "eclips": [164, 980, 1075], "pydev": [164, 980], "seemingli": [164, 168, 932, 980, 1056], "strang": [164, 862, 980], "emac": [164, 184, 262, 818, 840, 932, 980, 1085], "immutabilii": 164, "crisi": 164, "slept": 164, "lunch": 164, "squeez": 164, "Such": [164, 239, 243, 636, 667, 677, 683, 692, 700, 708, 710, 711, 932, 1093], "takeawai": 164, "nonverb": 164, "antenna": 164, "Being": [164, 801, 842, 864, 996], "stubborn": 164, "greybeard": 164, "distutil": 164, "azur": 164, "devop": [164, 979], "heavyweight": [164, 308, 691], "reach": [164, 212, 611, 686, 717, 722, 789, 890, 1001], "afternoon": 164, "simplic": [164, 449, 789, 856, 879, 953], "paral": 164, "imposs": [164, 224, 395, 431, 655, 666, 756, 908], "expand": [164, 220, 266, 369, 370, 861, 890, 932, 934], "entertain": [164, 168, 189, 192, 215, 241, 265, 1056], "david": [164, 167, 168, 176, 189, 192, 215, 241, 256, 260, 261, 265, 279, 303, 304, 635, 684], "beazlei": [164, 167, 168, 176, 189, 192, 215, 241, 260, 261, 265, 279, 303, 304], "freelanc": 164, "raymond": [164, 167, 168, 171, 175, 176, 189, 192, 199, 215, 218, 241, 265], "hetting": [164, 167, 168, 171, 175, 176, 189, 192, 199, 215, 218, 241, 265], "bias": 164, "humor": [164, 862, 1001], "emphas": [164, 171, 193, 522, 713, 721, 738, 1088], "dissect": [164, 168, 256, 672, 960, 1056], "multiprocess": [164, 168, 218, 260, 261, 1056, 1117, 1124, 1128], "truli": [164, 168, 1056], "chri": [164, 168, 189, 1056], "wilcox": [164, 168, 189, 1056], "frontier": [164, 168, 241, 265, 1056], "whop": [164, 168, 241, 265, 947, 1056, 1063], "simul": [164, 308, 309, 486], "covid": 164, "apart": [164, 224, 261, 362, 628, 856, 958], "ipykernel_launch": [165, 217, 220], "57bd7d77": 165, "6e54": 165, "4dcd": 165, "b7a8": 165, "452f82f88569": 165, "welt": [165, 175, 188, 297, 320, 1108, 1129], "gern": [165, 1107, 1117, 1124], "doku": [165, 175, 242], "aeh": 165, "__doc__": [165, 188, 191, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 266, 295, 297, 956, 984, 1007], "interaktiven": 165, "modu": 165, "formatierung": [165, 175, 235], "\u00fcbernimmt": 165, "nachdem": [165, 175], "welch": [165, 205], "hamma": 165, "bieten": [165, 1127], "sech": [165, 175, 188, 220, 227, 252, 266], "zurueck": [165, 224, 262], "objektidentit\u00e4t": [165, 183], "0x7fe9d8578dc0": 165, "referenzieren": 165, "wechselt": 165, "zeigt": [165, 175, 1124], "identit\u00e4t": 165, "0x7fe9c4454d90": 165, "listen": [165, 171, 176, 177, 181, 216, 235, 302, 742, 857, 873, 1075, 1123, 1128, 1130], "ausdrucksstark": 165, "trotzdem": [165, 1117, 1124], "lesbar": [165, 214], "beid": [165, 180, 196, 1131], "modifizieren": 165, "modifik": 165, "sichtbar": [165, 320], "gerechnet": 165, "valueerror": [165, 175, 191, 197, 204, 212, 214, 217, 220, 224, 227, 230, 233, 245, 252, 266, 955, 1002], "typeerror": [165, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 296, 954, 955, 968, 975, 998, 1007, 1064, 1081], "gel\u00f6scht": 165, "retten": 165, "uff": 165, "140641996429568": 165, "\u00e4ndern": [165, 177, 1131], "erzeugt": [165, 175], "operanden": 165, "unver\u00e4ndert": 165, "new_l": [165, 220, 988], "140641996429632": 165, "hurra": [165, 182, 245], "killerfeatur": 165, "abcabc": [165, 204], "sequentiel": [165, 175, 214, 219, 1112], "suche": 165, "Suche": [165, 177, 188, 196, 214], "umst\u00e4ndlich": [165, 175], "andrea": [165, 166, 224, 648, 655], "pfeifer": 165, "gefundener_us": 165, "glauben": 165, "klammern": 165, "begrenz": 165, "interpretiert": 165, "overriden": 165, "ausdruck": 165, "evaluierungsreihenfolg": 165, "9223372036854775808": 165, "einstellig": 165, "schreibt": [165, 846, 1131], "datenmengen": 165, "abzulegen": 165, "sucht": 165, "solchen": [165, 175], "vorstellungsvermoegen": 165, "milliarden": 165, "sebastian": 165, "hugo": [165, 207], "machma": 165, "behandeln": 165, "nichtvorhandensein": 165, "ausnahm": 165, "regel": 165, "mim": 165, "victor": 165, "festzustellen": 165, "evaluiert": 165, "aufgerufen": 165, "operand": [165, 182, 201, 204, 230, 346, 347, 348, 354, 545, 546, 548, 549, 644, 677, 975, 989], "bereit": [165, 176, 1107, 1112, 1123], "gesamtergebni": 165, "jaja": [165, 220], "rechten": 165, "sparen": 165, "potschert": [165, 177, 180, 183, 207, 214, 227], "berechnung": [165, 214], "summ": [165, 188, 214, 220, 224, 227, 252, 277], "einzig": [165, 455, 469, 1126, 1129], "iteriert": [165, 175], "bildet": [165, 220], "primitiveren": 165, "intelligenteren": 165, "0x7fe9c43c3c90": 165, "letzt": [165, 180, 225], "schleif": [165, 176, 177, 181, 1123], "jede": [165, 302, 307, 1107, 1130, 1131], "selb": [165, 175], "k\u00fcrzer": 165, "vergleicht": 165, "objektidentit\u00e4ten": 165, "objektinhalt": 165, "modifiziert": 165, "kopieren": [165, 302, 307, 1112], "vermeintlich": 165, "modifiktionen": 165, "sch\u00fctzen": 165, "l3": [165, 182, 214, 220, 230, 242, 252, 262, 272, 449], "kopi": [165, 214], "klar": [165, 175, 1108], "geschachtelt": [165, 176, 177, 1123], "gleicher": 165, "referenziert": [165, 175], "erachtet": 165, "ersparst": 165, "kopien": 165, "ran": [165, 237, 417, 434, 483, 484, 485, 486, 547, 686, 949, 1100], "mehreren": [165, 181, 1130], "parametern": [165, 188], "beliebigen": [165, 846], "definieren": 165, "vergleichbar": 165, "unterst\u00fctzen": 165, "ihn": [165, 224], "\u00e4pfel": 165, "birnen": 165, "verglichen": 165, "hingegen": [165, 175, 1126], "php": [165, 195, 211, 689], "falschem": 165, "uebergeben": 165, "vergleich": [165, 188, 196, 225, 235], "aepfeln": 165, "140641996137808": 165, "add_to_list": 165, "__defaults__": [165, 214, 224, 245, 266, 998], "meine_list": [165, 175], "defaultwert": 165, "benutzt": [165, 1117], "allerhand": 165, "seiteneffekten": 165, "aufpassen": 165, "ewig": 165, "existierend": 165, "unf\u00e4ll": 165, "wechselwirkungen": 165, "eventuellen": 165, "globalen": [165, 175], "156": [165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "erzwingt": 165, "158": [165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 249, 262, 266, 272], "160": [165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 242, 245, 256, 262, 266, 272, 416, 711], "gesucht": 165, "genauer": 165, "n\u00e4chst\u00e4u\u00dferen": 165, "162": [165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "nirgend": 165, "163": [165, 175, 182, 198, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "gibtsnetglob": 165, "gibtsnet": 165, "164": [165, 175, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "nameerror": [165, 180, 214, 220, 245, 266, 272, 955, 997], "aufgabenstellung": 165, "kandidat": 165, "ersten": [165, 167, 180, 272, 294, 1109, 1129, 1131], "unsportlich": 165, "zweiten": [165, 167, 272], "unnachhaltig": 165, "dritten": [165, 272], "gelegenheit": 165, "gab": [165, 167], "erz\u00e4hlen": [165, 1110], "165": [165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 1013], "seq": [165, 183, 245, 748, 920, 958], "fromkei": [165, 211, 216, 228], "166": [165, 175, 182, 204, 207, 212, 214, 220, 224, 227, 242, 245, 262, 266, 272], "167": [165, 175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "xxx": [165, 182, 204, 212, 214, 220, 230, 252, 296, 298, 378, 454], "kksvjhbsk": 165, "sgkysdudsvvc": 165, "dict_kei": [165, 233, 262, 1004], "diesmal": 165, "169": [165, 175, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 262, 266, 272], "170": [165, 182, 191, 198, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "irgendein": [165, 197], "171": [165, 182, 184, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272, 299], "sonst": [165, 175, 212, 214, 227], "kategori": 165, "number_str": 165, "173": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 849], "ihm": [165, 167, 176], "174": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 262, 266, 272, 840], "176": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 266, 272], "177": [165, 182, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "178": [165, 182, 191, 204, 207, 212, 214, 220, 224, 227, 233, 242, 245, 262, 266, 272], "179": [165, 172, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "180": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 411, 742], "181": [165, 182, 204, 207, 212, 214, 220, 224, 227, 242, 245, 252, 262, 266, 272, 411], "heisst": [165, 177, 181, 182, 1111, 1117], "sequenz": 165, "kopiert": 165, "unterschi": [165, 182, 188, 212], "vermutlich": [165, 1129], "sobald": [165, 167], "183": [165, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "\u00fcbergeben": 165, "184": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272], "it1": 165, "it2": 165, "multipli": [165, 192, 205, 224, 266, 634, 1086], "n2": [165, 224], "combined_iter": 165, "186": [165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "schlecht": 165, "simplen": 165, "transformationen": 165, "generieren": 165, "quadratzahlen": [165, 214], "187": [165, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272], "quadrat": 165, "naeherung": 165, "performant": 165, "gen_squar": 165, "189": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 262, 266, 272], "syntaktisch": [165, 188], "191": [165, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 233, 242, 245, 262, 266, 272], "genexpr": [165, 191], "0x7fe9c43f2900": 165, "193": [165, 182, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "194": [165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 266, 272], "195": [165, 182, 204, 207, 212, 214, 217, 220, 224, 227, 233, 245, 266, 272], "indent": [165, 180, 198, 205, 211, 220, 221, 357, 978, 981, 991, 1084], "196": [165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 242, 245, 252, 262, 266, 272], "userlist": 165, "nochwa": [165, 214, 252], "dropdown": 165, "dropdownlist": 165, "fehleranf\u00e4llig": 165, "198": [165, 182, 191, 204, 207, 212, 214, 217, 220, 224, 227, 233, 245, 252, 262, 266, 272], "202": [165, 182, 191, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 266, 272, 411, 434], "203": [165, 182, 191, 193, 204, 207, 212, 214, 217, 220, 224, 227, 242, 245, 266, 272], "205": [165, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "206": [165, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 266, 272], "207": [165, 191, 204, 207, 212, 214, 220, 224, 227, 230, 245, 266, 272], "208": [165, 204, 207, 212, 214, 220, 224, 227, 230, 245, 266, 272], "209": [165, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 266, 272], "user_a": 165, "user_b": 165, "n\u00e4herung": 165, "nackten": [165, 1110], "210": [165, 191, 204, 207, 212, 214, 220, 224, 227, 245, 252, 266, 272], "hantiert": [165, 1111], "anderem": [165, 1117, 1124], "211": [165, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "reviewten": 165, "funktionsaufruf": [165, 227], "sonder": 165, "stackoverflowprogrammierung": 165, "entgegenwirken": 165, "ausholen": 165, "212": [165, 191, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 266, 272], "veloc": [165, 191, 298, 998], "length_m": [165, 191, 298, 998], "time_": [165, 191, 298, 998], "213": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 266, 272], "spiel": 165, "214": [165, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 266, 272], "liegen": 165, "positionel": 165, "215": [165, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 266, 272], "param": [165, 175, 188, 205, 233, 266, 640, 689, 690, 863, 919], "216": [165, 191, 204, 207, 212, 214, 220, 224, 227, 242, 245, 252, 266, 272], "217": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272], "218": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "219": [165, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272], "entpacken": 165, "positionellen": 165, "221": [165, 191, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272], "kwarg": [165, 191, 218, 220, 224, 245, 266, 953, 957, 978, 1064], "explizi": 165, "rauskletzeln": 165, "222": [165, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 262, 266, 272, 418], "223": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 266, 272, 1072], "celebrate_another_birthdai": 165, "224": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 266, 272], "227": [165, 204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 262, 266, 272], "228": [165, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 266, 272], "zeiterfassung": 166, "__pycache__": [166, 192, 205, 1086], "supp": 166, "cpython": [166, 191, 201, 207, 217, 220], "pyc": 166, "dienstag": 167, "anleitung": 167, "offen": [167, 320, 1107], "vorwissen": [167, 1112], "konkreten": [167, 320], "aufgabenstellungen": 167, "dienstgeb": 167, "mitgebracht": 167, "quickstart": [167, 1118], "vorgetragen": 167, "wenngleich": [167, 320, 1117, 1127, 1129, 1130], "un\u00fcblichen": 167, "reihenfolg": [167, 1108], "verbrachten": 167, "firmenprojekt": 167, "entspringenden": 167, "festgehalten": 167, "empfehlungen": 167, "weitergehen": 167, "k\u00f6nnte": [167, 1131], "idiomat": [167, 168, 171, 189, 192, 199, 215, 218, 241, 265, 1056], "lieblingsphras": 167, "bringt": [167, 1110, 1129], "forgiv": [167, 168, 265, 1056], "eafp": [167, 168, 265, 1056], "begriff": [167, 181], "viertelstund": 167, "regex": [167, 180, 205, 207, 232, 233, 242, 265, 272, 1000, 1056], "unumg\u00e4nglich": [167, 1125], "textuel": 167, "analysieren": 167, "hero": [167, 168, 189, 192, 215, 241, 265, 1056], "unterhaltsamen": 167, "keynot": [167, 168, 189, 192, 215, 218, 241, 265, 1056], "konferenz": 167, "pydata": [167, 168, 189, 192, 215, 241, 265, 1056], "chicago": [167, 168, 189, 192, 215, 241, 265, 1056], "witzig": 167, "kommt": [167, 182, 192, 195, 221, 1120, 1129, 1131], "selten": 167, "l\u00e4nge": 167, "ganzen": [167, 176, 1123], "abend": 167, "totalschaden": 167, "\u00fcbertragen": 167, "jedem": 167, "angemeldet": 167, "experienc": [168, 257, 259, 320, 984, 1118], "machinelearn": 168, "fuzzi": [168, 207], "improvis": 168, "shall": 168, "jango": 168, "rush": 168, "strong": [168, 218, 347, 1063, 1068], "claus": [168, 171, 201, 207, 217, 222, 244, 649, 958, 991, 994], "whet": [168, 251], "appetit": [168, 251], "get_temperatur": [168, 220, 428, 431, 432, 434, 439, 441, 451, 452, 457, 459, 460, 462, 465, 466, 470, 473, 478, 479, 480, 481, 485, 486, 487, 498, 516, 637, 685, 686, 687, 688, 968, 1044], "__dict__": [168, 188, 191, 192, 204, 205, 214, 217, 220, 224, 233, 245, 262, 266, 969, 975, 1086], "con": [168, 843, 949], "fiction": 168, "get_temperature_celsiu": 168, "competitor": 168, "eana": 168, "get_temperature_fahrenheit": 168, "eanaadapt": 168, "unserthermomet": 168, "revisit": [168, 210, 218, 241, 259, 562], "shift": [168, 209, 387, 399, 531, 580, 863, 975], "visitor": 168, "gang": [168, 1116], "idiom": [168, 528, 665], "classic": [168, 386, 437, 528, 750, 1116], "travers": [168, 400, 673, 685, 955, 960, 996], "convolut": [168, 1064], "__call__": [168, 214, 224, 245, 266, 272, 954], "__str__": [168, 191, 192, 205, 214, 217, 220, 224, 242, 245, 266, 313, 955, 1086], "__repr__": [168, 214, 217, 220, 224, 242, 245, 266], "poor": [168, 210, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711, 748, 855, 885, 930], "deleg": [168, 537, 667, 710, 711, 1113], "deck": [168, 193, 505], "sensordata": 168, "sensordata_test": 168, "historydata": 168, "slowli": [168, 522, 627, 740, 855], "csvreport": 168, "csv2sqlite3": 168, "frontend": [168, 538, 932, 950, 1089], "flaskerl": 168, "reiter": [168, 189, 208, 210, 215, 218, 310, 539, 1056], "phrase": [168, 171, 189, 212, 214, 215, 218, 220, 245, 785, 786, 973, 1056], "impress": [168, 385], "brought": [168, 399, 964], "cloth": 168, "extraordinari": 168, "mondai": [169, 171, 173, 174, 199, 248, 254, 257, 259], "preliminari": [169, 171, 172, 173, 174], "homogen": [169, 320], "versu": [169, 171, 173], "immut": [169, 171, 173, 175, 176, 183, 190, 192, 203, 204, 205, 207, 213, 219, 222, 228, 234, 243, 251, 253, 254, 267, 297, 369, 979, 986, 987, 988, 992, 1086, 1123], "datastructur": [169, 193, 211, 992], "exercise4": 169, "uh2ebfw8oym": [169, 173], "f26namfjggw": 169, "5qqq3yzbkp8": 169, "ugharkscop9uthgcoaec": 169, "pairwis": [170, 204, 544], "vale": 170, "bewar": [170, 348, 862, 930, 1061, 1063], "cheaper": [170, 399, 546, 548, 549, 627], "memorywis": 170, "johann": 170, "syntact": [170, 191, 356, 499, 539, 627, 679], "sugar": [170, 627, 679], "allow": [170, 171, 191, 220, 342, 409, 614, 687, 709, 740, 763, 1018, 1093, 1113], "retval": [170, 395, 585, 901], "dlc": 170, "msg1": 170, "readabl": [170, 214, 224, 258, 335, 366, 370, 390, 391, 392, 399, 409, 411, 470, 584, 605, 620, 628, 631, 666, 677, 679, 685, 690, 691, 793, 803, 809, 814, 818, 840, 865, 932, 958, 977, 998, 1006, 1008, 1027], "0x7f41f5ff26a0": 170, "msglist": 170, "0x7f41f5ff4160": 170, "0x7f41f5ff41c0": 170, "291130": 170, "now_timestamp": 170, "1603884859": 170, "3412576": 170, "fromtimestamp": 170, "341258": 170, "372": [170, 207, 214, 252], "45259": 170, "microsecond": [170, 390, 795], "programmverweis": 171, "xy": [171, 214, 217, 252, 547, 996], "zab": 171, "eventcodefil": 171, "definedlisaev": 171, "event_id": 171, "bla": 171, "blubb": 171, "verbessert": 171, "stringformatierung": 171, "ctype": 171, "headerfil": [171, 846], "lst": [171, 207, 800, 1108], "callbackfunc": 171, "datetim": [171, 192, 198, 199, 200, 205, 253, 256, 1013], "observ": [171, 240, 258, 287, 426, 433, 447, 450, 461, 475, 527, 711, 961, 962, 1071, 1116], "longish": 171, "resurrect": [171, 412, 818], "outputsequ": 171, "resist": 171, "uncondition": [171, 761, 955], "suitabl": [171, 220, 266, 731, 855, 904, 968, 977], "analysi": [171, 399, 1058, 1061, 1077], "cp1252": [171, 1050, 1051, 1053], "csvlog": 171, "csv_reader": 171, "recv": [171, 172, 858], "tuesdai": [172, 254, 269], "246": [172, 204, 207, 212, 214, 217, 220, 227, 245, 262, 266, 272, 1072], "corpor": [172, 245], "commandin": [172, 174], "comress": [172, 174], "gzip": [172, 174, 238, 247, 268, 269, 711, 758, 781, 783, 784, 788, 854, 942, 943, 1119], "diagnos": [172, 174, 303, 304, 1117, 1124], "netstat": [172, 174, 247, 268, 269, 1075, 1117, 1124], "netcat": [172, 174, 247, 268, 269], "subshel": [172, 174, 184], "telnetd": 172, "insecur": [172, 871], "proto": 172, "foreign": [172, 248, 370], "34490": 172, "56062": 172, "sshd": [172, 204, 220, 227, 230, 245, 252, 262, 266, 790, 794, 796, 849, 865, 875], "systemctl": [172, 946, 1075], "freedesktop": 172, "systemd1": 172, "quickli": [172, 259, 274, 305, 369, 429, 863, 1115], "unprivileg": 172, "putti": [172, 184, 299], "puttygen": 172, "id_rsa": [172, 871], "authorized_kei": [172, 871], "trivia": 172, "hoorai": [172, 217, 230, 252, 991], "idiot": 172, "blinker": 172, "briana": 172, "mac": [172, 189, 205, 818, 982, 1056, 1096], "wakeup": [173, 210, 313, 317, 699, 711, 754, 854, 863, 882, 895, 905, 915, 917], "patrick": 173, "1996": [173, 207], "wagna": 173, "gernot": 173, "1982": [173, 207], "birthplac": 173, "txt2json": 173, "equip": [174, 248, 310, 855, 1117, 1124], "wobei": 175, "deppert": [175, 188, 297], "sidestep": 175, "builtin_function_or_method": [175, 245, 272], "sozusagen": 175, "genauso": [175, 1107], "aufrufen": [175, 846], "zaehler": 175, "initialwert": 175, "zaehlen": 175, "naechsten": 175, "schleifendurchlauf": 175, "locker": [175, 756], "mein_integ": 175, "1024": [175, 207, 789, 795, 818, 880], "sch\u00fctzt": 175, "passen": [175, 242], "gehandhabt": 175, "1267650600228229401496703205376": [175, 201, 204, 212, 224, 230, 252], "hoch": 175, "rechnen": [175, 302, 307], "tut": [175, 297, 1110], "ausschliesslich": [175, 1119], "ganzzahldivis": 175, "ganzzahligen": 175, "resultat": 175, "gleichen": [175, 1117, 1130], "vorrang": 175, "ghi": [175, 214], "viert": 175, "nwelt": 175, "nwie": 175, "linefe": [175, 184, 205, 212, 331, 332, 1000, 1006, 1036, 1084], "bedeutung": [175, 1112, 1119], "unangetastet": 175, "glump": 175, "nebenlaeufigkeitsdemo": 175, "ebenlaeufigkeitsdemo": 175, "l\u00f6sung": [175, 188, 197, 320, 857], "formatierungsm\u00f6glichkeit": 175, "pfx_var1": 175, "pfx_var2": 175, "ausgab": [175, 1110], "notwendig": [175, 1109, 1125, 1126], "abzubrechen": 175, "ignorieren": [175, 176, 182, 1123], "gefunden": [175, 245, 846], "value1": [175, 1016], "501": [175, 207, 1016], "value2": [175, 1016], "799": [175, 204, 207, 1013, 1016], "value3": [175, 1016], "sprachen": [175, 176, 1110, 1123], "neg": [175, 220, 224, 348, 390, 395, 607, 736, 849, 1100], "indiz": 175, "erscheinen": 175, "komisch": 175, "bequem": 175, "mapping_t": 175, "f\u00fcnf": [175, 1117], "sieben": [175, 188, 214, 585], "neun": 175, "explicit": [175, 194, 201, 205, 214, 222, 224, 345, 354, 382, 395, 399, 412, 454, 455, 468, 469, 505, 531, 533, 534, 558, 584, 627, 628, 637, 644, 649, 657, 664, 669, 684, 687, 729, 884, 898, 930, 950, 951, 981, 984, 987, 1067, 1080], "implicit": [175, 201, 214, 224, 335, 341, 345, 510, 626, 628, 644, 818, 887, 973, 987], "primzahlen": 175, "checken": 175, "primzahl": [175, 176, 1123], "checkenden": 175, "zahl": [175, 182, 188, 213, 214, 217, 227, 297], "probier": 175, "gach": [175, 214], "teiler": 175, "teiler_kandidaten": 175, "prim": 175, "gleichema\u00dfen": 175, "vollst\u00e4ndigkeit": 175, "halber": 175, "startend": [175, 214], "schrittweit": 175, "0x7f24f2ac0e50": 175, "ablegen": 175, "0x7f24f2ac0e70": 175, "arschlangsam": 175, "num_comparison": 175, "datenstruktur": [175, 196], "suchen": [175, 196, 845, 1112, 1119], "einf\u00fcgen": [175, 1117], "optimiert": [175, 188], "perfekt": 175, "einitreten": 175, "himmi": 175, "list_reverseiter": [175, 204, 227, 252], "0x7f24ec31d190": 175, "bricht": 175, "beinhart": 175, "liefert": [175, 1119], "lieber": 175, "zweit": [175, 188, 214, 245, 297, 1117], "po": [175, 214, 220, 224, 245, 250, 262, 266, 411, 487, 580, 607], "wirklichkeit": 175, "ordin\u00e4r": 175, "alternativen": 175, "fruit": 175, "gemma": 175, "divisor_candid": 175, "161": [175, 182, 204, 207, 212, 214, 217, 220, 224, 227, 230, 242, 245, 262, 266, 272], "wegen": 175, "dogma": 175, "zugewiesen": 175, "meine_vari": 175, "eine_vari": [175, 252, 262], "angelegt": 175, "streng": 175, "obigem": 175, "dazusagen": 175, "noch_eine_globale_vari": 175, "increment_diese_vari": 175, "offiziel": [176, 178, 186, 189, 192, 193, 195, 211, 223], "leitfaden": 176, "kommentar": [176, 177, 188, 252, 297, 1123], "platziert": [176, 196], "hackereien": 176, "gleicherma\u00dfen": 176, "sogenannten": 176, "semantik": [176, 177, 1123], "sprach": [176, 177, 1110, 1111, 1112, 1123, 1124, 1131], "standarddatentypen": [176, 177, 1123], "literal": [176, 177, 235, 1123], "python2": [176, 214, 1123], "endg\u00fcltig": [176, 1123], "rausl\u00f6schen": [176, 1123], "konstanten": [176, 177, 1123], "typen": [176, 182, 1119, 1123, 1129], "operatoren": [176, 177, 846, 1112, 1123], "angeschnitten": [176, 1123], "vertiefung": [176, 192, 1123], "nocheinm": [176, 320, 1123], "ausdr\u00fcck": [176, 177, 235, 1123], "operatorrangfolgen": [176, 177, 1123], "grundlegenden": [176, 303, 1119, 1123], "sprachelementen": [176, 1123], "rede": [176, 1123], "syntaxdiagramm": [176, 1123], "gespritzt": [176, 1123], "gesamt": [176, 1123], "sperrig": [176, 1123], "n\u00fctzt": [176, 1123], "menschlich": [176, 1123], "abzubilden": [176, 1123], "tabel": [176, 1123], "anweisungen": [176, 177, 1123], "gro\u00dfen": [176, 1123], "fisch": [176, 1123], "instruktiv": [176, 1123], "bedingungen": [176, 177, 1109, 1123], "verzweigungen": [176, 177, 1123], "bedingt": [176, 177, 1110, 1123], "anweisung": [176, 177, 1123], "formulierungen": [176, 1123], "mehrfach": [176, 177, 1123], "fallauswahl": [176, 177, 1123], "benutzereingaben": [176, 1123], "\u00fcberpr\u00fcfen": [176, 1123], "schleifenkonstrukt": [176, 1123], "weitgehend": [176, 1123], "unserem": [176, 1123], "vehikel": [176, 1123], "hilfreich": [176, 1119, 1123], "klarstellung": [176, 1123], "fu\u00dfgesteuert": [176, 177, 1123], "z\u00e4hlergesteuert": [176, 177, 1123], "auslassen": [176, 1123], "kopfgesteuert": [176, 177, 1123], "gewinnt": [176, 1123], "konsol": [176, 1123], "anzeigen": [176, 1119, 1123], "voraussetzung": [176, 1123], "ausblick": [176, 1123], "schnell\u00fcbersicht": [176, 177, 1123], "sprunganweisungen": [176, 177, 1123], "endlosschleifen": [176, 177, 1123], "naja": [176, 1123], "reinschauen": [176, 1123], "mager": [176, 1123], "ersatz": [176, 1123], "ausgelassen": [176, 1123], "eindimensional": [176, 177, 1123], "gefolgt": [176, 214, 1123], "zeichenketten": [176, 177, 1123], "tupel": [176, 177, 180, 1123], "besonder": [176, 177, 1123], "stapel": [176, 177, 1123], "schlangen": [176, 177, 1123], "tempo": [176, 1123], "schauma": [176, 182, 1123], "fallt": [176, 1123], "gscheit": [176, 183, 1123], "gemeinsam": [176, 1107, 1109, 1123, 1126], "dr\u00fcber": [176, 1123], "vielzahl": [176, 1123, 1127, 1130], "l\u00f6sungsm\u00f6glichkeiten": [176, 1123], "eingegangen": [176, 1107, 1123, 1127], "pythonischst": [176, 1123], "bestritten": [176, 1123], "unterprogramm": [176, 177, 1123], "parameter\u00fcbergab": [176, 177, 1123], "r\u00fcckgabewert": [176, 177, 1123], "inner": [176, 177, 197, 411, 954, 1123], "standardbibliotheken": [176, 177, 1123], "funktionalit\u00e4ten": [176, 177, 1123], "berechnet": [176, 212, 220, 1123], "satz": 176, "gepr\u00e4gt": 176, "konferenzen": 176, "definitiv": 176, "sehenswert": 176, "anf\u00e4nger": [176, 1126], "hochinteress": 176, "sprachelement": 177, "elementar": 177, "beliebig": [177, 212, 1124], "gro\u00df": [177, 1129], "vergleichsoperatoren": 177, "strichrechnung": 177, "modulo": [177, 188, 201, 207, 212, 220, 297, 346, 975, 987], "un\u00e4rer": 177, "negat": [177, 201, 224, 847, 975, 987, 1005], "konvertierungen": [177, 1110], "pr\u00e4zendenzregeln": 177, "vertauschen": [177, 188, 297], "kontrollstrukturen": [177, 213, 1110], "verzweigung": 177, "schleifen": [177, 235, 1109], "versuch": [177, 189], "hybrid": [177, 601], "supergscheit": 177, "prozeduren": 177, "funktionen": [177, 181, 235, 303, 1109, 1110, 1112, 1120], "funktionspoint": 177, "funktionsobjekt": 177, "primzahlenbeispiel": 177, "laufzeitfehl": 177, "lokal": [177, 188, 234, 235, 1130], "zuweisen": 177, "fehlerfal": 177, "anschliessend": 178, "interaktiv": 178, "uebungen": 178, "idealerweis": [178, 252], "ueblichen": 178, "negoti": 179, "deiniti": [179, 736, 1118], "unload": [179, 738, 752, 754, 1118], "synchronizt": 179, "spinlock": [179, 711, 735, 750, 756, 760, 762, 766, 767, 773, 776, 777, 779, 854, 918, 1118], "rcu": 179, "halv": 179, "softirq": 179, "tasklet": [179, 756], "irss": 179, "kmalloc": [179, 711, 720, 725, 728, 729, 730, 735, 739, 748, 749, 753, 755, 762, 767, 770, 773, 776, 779, 854], "dma": [179, 711, 735, 753, 755, 797, 854, 879, 880, 881, 1118], "coher": [179, 729], "20201125": [180, 182], "unbekannten": 180, "lookup_t": [180, 183, 297], "12345": [180, 212, 224, 252, 1094], "noch_eine_list": 180, "gesamte_list": 180, "vorl\u00e4ufig": 180, "letz": 180, "indented_text": 180, "nebenbei": [180, 182, 297], "eine_zum_sterben_verurteilte_vari": 180, "ein_set": 180, "sequenzen": 180, "grottenlangsam": 180, "subscript": [180, 214, 218, 375, 562, 583, 587, 1080], "multiple_return_valu": 180, "xyz": [180, 182, 188, 207, 214, 245], "mein_formatierter_str": 180, "my_rang": [180, 220, 266, 272], "retlist": 180, "zeichenkett": 180, "funktionieren": [180, 1112, 1130], "my_list": [180, 191, 233], "airms_eth": 180, "simplizistisch": 180, "bl\u00f6d": 180, "phase": [180, 453, 467, 926, 960], "i_oder_v": 180, "iv": 180, "rms_eth": 180, "vorcompilieren": 180, "acirms_eth": 180, "my_regex": 180, "zeilennumm": 180, "dazuhaben": 180, "meine_zu_sendenden_daten": 180, "345": [180, 201, 207, 220, 252], "234": [180, 204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 262, 266, 272, 297], "meine_zu_sendenden_daten_in_string_form": 180, "ueblicherweis": 180, "ueber": 180, "verschickt": 180, "empfangen": [180, 195], "geschrieben": [180, 1130], "empfaeng": 180, "empfangenen": 180, "natuerlich": 180, "zurueckkonvertieren": 180, "meine_empfangenen_daten_python_form": 180, "gegangen": [180, 233], "wurscht": [180, 220, 846], "returnwerten": 181, "containerdatentypen": 181, "untypisiert": 181, "zeilen": [182, 224, 1119], "neiner": 182, "nund": [182, 201], "nb": 182, "stoppt": 182, "newlin": [182, 184, 197, 220, 245, 262, 293, 324, 331, 344, 984, 1000], "ndrin": 182, "drin": [182, 183, 188, 224, 252, 262, 297, 302], "zuviel": [182, 1112], "mischt": 182, "unsupport": [182, 204, 230, 975], "140546731085392": 182, "0x7fd395fb0e50": 182, "0x7fd3900395b0": 182, "new_t": [182, 988], "0x7fd390052800": 182, "667": [182, 204, 207, 227, 233, 522], "2923750584022716461": 182, "529344067295497451": 182, "unhash": [182, 242, 252, 266], "fuenf": [182, 204, 214, 242, 252, 266, 297], "verschluckt": 182, "6000000": 182, "elementen": [182, 196], "nonetyp": [182, 192, 206, 207, 262, 272], "_io": [182, 201, 204, 207, 217, 220, 252, 266, 294, 760], "textiowrapp": [182, 201, 204, 207, 217, 220, 252, 266, 294, 953], "oi": 182, "456": [182, 183, 207, 214, 252, 344], "hansi": [182, 220, 224, 227], "linspac": 182, "11111111": 182, "22222222": 182, "33333333": 182, "44444444": 182, "55555556": 182, "66666667": 182, "77777778": 182, "88888889": 182, "sin": 182, "8961922": 182, "79522006": 182, "19056796": 182, "96431712": 182, "66510151": 182, "37415123": 182, "99709789": 182, "51060568": 182, "54402111": 182, "plot": [182, 201, 230, 233, 952, 1010, 1062, 1063], "line2d": [182, 230, 233], "0x7fd35cd3ef40": 182, "splev": 182, "splrep": 182, "spline": 182, "represent": [182, 201, 220, 673, 768, 862, 863], "spl": 182, "evalu": [182, 201, 206, 212, 222, 327, 347, 352, 354, 362, 369, 370, 448, 449, 462, 463, 634, 644, 801, 818, 955, 989, 991, 998, 1100], "x2": [182, 224], "y2": 182, "0x7fd341a486d0": 182, "speicher": [183, 1110, 1117, 1124], "sch\u00fctze": 183, "gemischten": 183, "operationen": [183, 1129], "interpol": [183, 224, 1061], "lag": 183, "gib": [183, 262], "depp": [183, 212], "ret_l": 183, "uniq_l": 183, "read_excel": [183, 1061], "invit": [184, 601], "effici": [184, 229, 359, 398, 400, 402, 563, 567, 577, 580, 682, 802, 849, 851, 960, 1063, 1077, 1080, 1118], "expans": [184, 846, 847, 1109], "ecdsa": [184, 299], "fingerprint": [184, 299, 866, 917], "sha256": [184, 299, 866], "in22o4vcd400x0bb4flcb5": [184, 299], "vqnrvkvoirgfqq6mapo": [184, 299], "perman": [184, 299], "individu": [184, 299, 351, 409], "sat": [184, 299], "straight": [184, 649, 1081], "startung": 184, "standpoint": 184, "suboptim": [184, 233], "pwned": 184, "hidden": [184, 440, 635, 731, 932], "clumsi": [184, 210, 211, 251, 254, 425, 429, 529, 537, 545, 558, 585, 627, 690, 952, 953, 969, 970, 1080, 1113], "clumsier": 184, "dumpbin": 184, "hmoe": 184, "frcoll": 184, "bunch": [184, 691, 785, 944, 968], "oom": [184, 204, 220, 227, 230, 245, 252, 262, 266, 959], "killer": [184, 204, 220, 227, 230, 245, 252, 262, 266, 993], "amoc": 184, "snapshot": [184, 669, 702, 796, 944], "tinkernut": 184, "raspberi": 184, "awesom": [184, 1093], "tunnel": [184, 250, 865, 873, 884], "centric": [184, 1118], "virtualbox": [184, 797], "cygwin": [184, 237, 239, 257, 797], "assort": 184, "nano": 184, "univers": [184, 259, 486, 884, 981, 1118], "scripe": 184, "voellig": 188, "wohl": [188, 272, 1110, 1131], "selbsterklaerend": 188, "printet": 188, "builtin": [188, 194, 201, 207, 208, 217, 220, 224, 245, 266, 818, 956], "accur": [188, 220, 224, 245, 266, 404], "__weakref__": [188, 204, 214, 217, 220, 224, 233, 245, 266], "weak": [188, 220, 224, 245, 266, 688, 1063], "_abc": [188, 201, 207, 217, 220], "_1": [188, 690, 691], "a123": 188, "vernichten": 188, "laufzeit": 188, "140032702361168": 188, "refcount": [188, 686, 688, 953, 1113], "dezim": 188, "oktal": 188, "0o755": [188, 224, 297], "493": [188, 207, 224], "0b11": [188, 224, 227], "sql": [188, 199, 211, 1068, 1071], "0b11111111": 188, "ordnung": 188, "uhrzeit": 188, "vormittag": 188, "6666666666666666": [188, 224], "nda": [188, 242], "python_dir": 188, "jan": [188, 217, 220, 293, 294, 311, 344, 722, 814, 840, 898, 932, 946, 983], "lowercas": [188, 220, 266, 818, 865, 1001, 1018, 1023], "140032636418048": 188, "ein_iterierbares_d": 188, "extraw\u00fcrschtl": 188, "sex": [188, 201, 223, 224, 1018], "diver": 188, "translation_t": [188, 224, 227, 230], "bag": [188, 236, 237, 239, 283, 412, 422, 708, 710, 711, 926, 988], "green": [188, 224, 451, 486, 487, 547, 855], "blue": [188, 196, 204, 224, 1013], "mengenoperationen": 188, "set1": 188, "set2": 188, "symm_diff": 188, "lisa": 188, "eugeni": [188, 191], "okan": 188, "mcguir": 188, "sinner": 188, "vornam": [188, 196, 197], "nachnam": [188, 196, 197], "persnr": 188, "personalnumm": 188, "doch": [188, 262, 272, 320, 1129], "5000": [188, 201, 207, 972], "4000": [188, 207], "3000": [188, 201, 207, 227, 266], "15000": [188, 207], "uppercas": [188, 220, 266, 818, 1001, 1018], "verfuegbar": 188, "restlichen": 188, "gehaelt": 188, "konstant": [188, 196, 219], "unexpect": [188, 389], "pcap": [189, 209, 215, 1055], "certifi": 189, "math": [189, 192, 202, 204, 205, 207, 215, 224, 229, 232, 265, 271, 529, 531, 981, 1056, 1086], "statist": [189, 202, 215, 224, 229, 232, 265, 271, 403, 920, 1040, 1056, 1061, 1093], "undo": [189, 818, 1056], "brad": [189, 1056], "traversi": [189, 1056], "evaluierung": 190, "eval": [190, 218, 219, 228, 246, 260, 261, 266, 273, 279, 977], "openfil": 191, "hanld": 191, "soemth": [191, 772], "zf": 191, "namelist": 191, "zipdemo": 191, "extracted_nam": 191, "isinst": [191, 192, 205, 207, 220, 233, 245, 975, 1081, 1086], "superclass": [191, 192, 205, 220, 1086], "subclass": [191, 192, 205, 220, 224, 955, 972, 1086], "class1": 191, "class2": 191, "salari": 191, "selina": 191, "orgl": 191, "8010": [191, 207, 411], "birth": [191, 217, 230, 529, 709, 1045, 1046, 1047, 1048, 1051, 1052, 1053], "1622102062": 191, "4778333": 191, "019427776336669922": 191, "009679079055786133": 191, "daniel": [191, 194, 293, 294, 311], "ortner": 191, "num_employe": 191, "__first": 191, "__last": 191, "__address": 191, "_person__first": 191, "_person__last": 191, "_person__address": 191, "_first": 191, "_last": 191, "_address": 191, "do_debug": 191, "val": [191, 220, 690, 863], "ueberhaupt": 191, "l_float": 191, "0x7fd9881b04a0": 191, "functool": [191, 258], "wrapper": [191, 220, 230, 235, 272, 432, 630, 655, 878, 926, 954, 975, 1058], "komplexen": 191, "testfil": 191, "nzeil": [191, 220], "seek": [191, 266, 294], "nth_fibo": 191, "accomod": 191, "0x7fd9801cec10": 191, "0x7fd9801b8d60": 191, "0x7fd9801b4900": 191, "0x7fd98014cd40": 191, "gen": [191, 266], "sequenceno": 191, "kv_pair": 191, "permissionerror": [191, 207, 227, 245, 262, 955], "deni": [191, 207, 227, 262, 454, 468, 801, 837, 865, 873, 885, 890, 891, 955, 1088], "eacc": 191, "filenotfounderror": [191, 207, 245, 955], "64bit": 191, "utc": 191, "python_implement": [191, 192, 205, 1086], "python_version_tupl": [191, 192, 205, 1086], "python39": 191, "dynload": 191, "isfil": [191, 287, 411], "isdir": [191, 411], "my_path": 191, "hopefulli": 191, "the_except": 191, "__class__": [191, 214, 217, 220, 224, 233, 242, 245, 266], "__bases__": [191, 192, 205, 222, 1086], "distrust": 191, "guido": [191, 1083], "incompet": 191, "precondit": [191, 787], "abdefg": 191, "beg": [191, 370, 956], "bdefg": 191, "stringifi": 191, "0x7ffa9c2ac3a0": 191, "formatstr": 191, "ding": [191, 221, 925], "formatierter_str": 191, "oserror": [192, 220, 245, 955], "errno": [192, 205, 207, 227, 262, 395, 736, 885, 900, 929, 930, 947, 955, 1086, 1088], "assertionerror": [192, 217, 233, 245, 955, 968, 1093, 1094], "jjjj": [192, 315, 316, 408], "line_count": 192, "aud": 192, "qualifii": [192, 205, 1086], "trunc": [192, 205, 1086], "hypot": [192, 205, 1086], "seed": [192, 205, 224, 481, 1086], "ascii": [192, 205, 220, 227, 230, 245, 266, 272, 331, 334, 337, 343, 986, 987, 1000, 1006, 1067, 1086], "codepoint": [192, 205, 1086], "escap": [192, 205, 220, 242, 324, 1067, 1086], "ord": [192, 205, 224, 245, 995, 1086], "chr": [192, 205, 245, 1086], "isxxx": [192, 205, 1086], "rfind": [192, 205, 220, 266, 272, 1002, 1086], "grammar": [192, 205, 1086], "compon": [192, 205, 402, 842, 917, 1086], "instrospect": [192, 205, 1086], "hasattr": [192, 205, 220, 233, 245, 969, 975, 1086], "__module__": [192, 204, 205, 214, 217, 220, 224, 233, 245, 266, 1086], "bytearrai": [192, 205, 220, 245, 1086], "histogram": [192, 193, 210, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 515, 516, 524, 629, 667, 708, 710, 711], "defaultdict": [192, 218, 219, 243], "make_histogram": [192, 516, 525], "fileobj": 192, "stringio": [192, 220], "8859": [192, 210, 211, 227, 230, 250, 272, 411], "pycon": [192, 218, 241, 265, 1056], "2017": [192, 218, 241, 537, 635, 686, 1056], "metaprogram": [192, 219, 241, 644, 968, 1056, 1114], "contract": [192, 194, 241, 1056], "evolut": [192, 241, 818, 1056], "unauthor": [192, 241, 1056], "biographi": [192, 241, 1056], "lesson": [192, 241, 299, 305, 410, 673, 948, 1056], "evolv": [192, 241, 670, 1056], "assembli": [192, 241, 265, 932, 934, 1056, 1115], "revolv": [192, 218, 1056, 1062], "mro": [192, 218, 222, 1056], "cpa": 193, "fahr": [193, 325, 327], "tomorrow": [193, 208, 309, 310], "correctli": [193, 288, 387, 862, 885, 1008, 1067], "consecut": [193, 350, 679, 851], "becam": 193, "44ff": 193, "gig": 193, "upcom": 193, "msi": 193, "wswitch": [193, 391, 628, 727], "wall": [193, 207, 208, 348, 398, 414, 702, 726, 727, 1102], "77ff": 193, "skip": [193, 220, 294, 412, 414, 733, 863, 933, 934, 955, 1095], "89ff": 193, "alongsid": [193, 752], "num_us": 193, "199ff": 193, "204ff": 193, "208ff": 193, "220ff": 193, "222ff": 193, "db_get_user_at_index": 193, "298ff": 193, "strcpy": [193, 210, 337, 383, 519, 534, 537, 638, 672, 858, 916], "strlen": [193, 337, 362, 390, 534, 537, 638, 672, 896, 899, 929], "bahavior": 193, "dest": [193, 337], "strtol": 193, "stringif": [193, 1110], "db_error_str": 193, "sexi": [193, 908], "caleb": 193, "discret": [194, 224, 397, 401, 406, 407, 629, 667, 708, 710, 711], "bleed": 194, "rect": [194, 378, 505], "sphere": [194, 505], "preprocessor": [194, 210, 344, 371, 377, 381, 384, 388, 393, 397, 401, 406, 407, 626, 629, 667, 708, 710, 711, 932, 1100, 1114], "julia": 194, "yesterdai": [194, 210, 218, 258], "distanc": [194, 531, 539, 540, 560, 677, 690], "has_lastnam": 194, "botton": 194, "mingw": [194, 237, 239, 257, 309, 322, 797], "resembl": 194, "tortur": 194, "functor": [194, 236, 237, 239, 283, 571, 667, 668, 710, 711], "rudimentarili": [194, 985, 1059], "gotten": 194, "recourc": 194, "outright": [194, 250, 385, 960, 991], "geniu": [194, 250, 562, 960, 991], "cycl": [194, 229, 409, 411, 655, 686, 700, 710, 711, 854, 855, 863, 895, 909, 915], "livehackingli": 194, "zuordnung": [195, 211, 223], "bissl": 195, "commandlineargument": [195, 1109], "stoff": 195, "summenbeispiel": 195, "showcas": 195, "datenbank": 195, "formulieren": 195, "verbindung": [195, 1107, 1117, 1124, 1130], "schicken": [195, 1107], "schickman": 195, "muessen": 195, "verwandlen": 195, "fractal": [195, 211], "schatzi": 196, "zeitkomplexit\u00e4t": 196, "foreach": 196, "assozi": [196, 1112], "color_transl": 196, "gelb": 196, "yellow": 196, "hashtabl": [196, 1081], "englisch": [196, 1107], "sack": 196, "my_color": 196, "her_color": 196, "pink": 196, "gr\u00fcn": 196, "beig": 196, "vereiningungsmeng": 196, "schnittmeng": 196, "symmetrisch": 196, "differenzmeng": 196, "sei": 196, "gewesen": 196, "waer": [196, 272], "1037190666": [196, 212, 214, 220, 224, 227, 230, 233, 429, 436, 453, 454, 455, 467, 468, 469, 588, 969], "6666010185": 196, "schwarzbauer": 196, "json_string_fuer_den_brows": 196, "response_dict": 196, "svnr": [196, 204, 207, 214, 220, 224, 227, 230, 232, 233, 272, 430, 436, 458, 464, 969, 1076], "pprint": [196, 198, 205, 207, 242, 956, 1067], "formatieren": 196, "endlich": 196, "transfer_string_in_php_am_serv": 196, "u00f6rg": 196, "transfer_string_in_js_am_brows": 196, "response_dict_am_brows": 196, "verwandeln": [196, 1126], "schlussendlich": 196, "geeignet": [196, 1108], "platzieren": 196, "meine_t": 196, "sozialversicherungsnumm": 196, "simmer": 197, "mein_str": 197, "sq": [197, 204, 207, 214, 224, 245, 266], "docu": 197, "nmehrzeilig": 197, "nvon": 197, "mehrzeilig": 197, "deppertem": 197, "irrelevant": 197, "quargel": [197, 198], "190666": 197, "inkorrekt": 197, "geburtsdatum": 197, "endswith": [197, 212, 214, 220, 230, 245, 249, 252, 266, 272, 1002], "sss": 197, "isalpha": [197, 201, 212, 214, 220, 224, 245, 266, 272, 1002], "isidentifi": [197, 201, 214, 220, 230, 245, 266, 272, 1002], "islow": [197, 220, 230, 245, 266, 1002], "arg1": 197, "arg2": 197, "arg3": 197, "abcblah": 197, "blahabcbcabcc": 197, "lah": 197, "rstrip": [197, 201, 205, 212, 216, 217, 220, 230, 245, 262, 266, 272, 293, 302], "lstrip": [197, 212, 216, 220, 245, 266, 272, 302], "wieviel": [197, 1117, 1124], "995237": 197, "datestr": 197, "dt": [197, 758, 862], "strptime": [197, 198, 199, 205], "uuid": 197, "msg_aussi": 197, "sea": [197, 212, 245, 298, 648], "oida": [197, 214, 217, 266, 414], "msgid": 197, "uuid4": 197, "timestamp": [197, 207, 227, 256, 260, 261, 279, 411, 691, 719, 820, 840, 874, 925], "345654325678": 197, "json_aussi": 197, "6563515ef0824d42b459389cefd09127": 197, "json_eini": 197, "sender": [197, 930], "msg_eini": 197, "sauberestextfil": 198, "12345678": 198, "2270": [198, 207], "20333": 198, "360": [198, 207], "91011121": 198, "30333": 198, "36756788": 198, "1112": [198, 207], "1244": [198, 207], "31333": 198, "45011121": 198, "44444": 198, "340": [198, 207, 214, 220, 252, 266], "sauber": 198, "read_sauberes_text_fil": 198, "item1": 198, "item13": 198, "werk": 198, "lort": 198, "charg": [198, 433, 440, 453, 454, 455, 467, 468, 469], "sonderbestandsnumm": 198, "materialkurztext": 198, "lagerplatz": 198, "verfueg_bestand": 198, "bme": 198, "we_datum": 198, "verf\u00fcg": 198, "bestand": 198, "datum": [198, 1063], "sap": [199, 250, 319, 1079], "api2": 199, "opc": [199, 208], "rrdtool": 199, "rrd": 199, "subprocess": [199, 215, 220, 229, 231, 241, 265, 287, 302, 307, 1056], "commmon": [201, 370], "140576769461632": 201, "simplicit": 201, "inputfil": [201, 411], "450": [201, 207, 214, 249, 252], "paragraph": [201, 424], "highli": [201, 486], "pathnam": [201, 207, 217, 220, 717, 884, 888, 1000], "displayhook": [201, 207, 217, 220, 295], "excepthook": [201, 207, 217, 220, 295], "uncaught": [201, 207, 217, 220, 505], "systemexit": [201, 207, 217, 220, 242, 245, 295, 955], "behav": [201, 207, 210, 217, 220, 484, 505, 631, 686, 687, 706, 774, 800, 920], "last_typ": [201, 207, 217, 220, 295], "last_valu": [201, 207, 217, 220, 295, 655, 658, 661, 662, 663], "last_traceback": [201, 207, 217, 220, 295], "builtin_module_nam": [201, 207, 217, 220, 295], "pertain": [201, 207, 217, 220], "exec_prefix": [201, 207, 217, 220, 295], "float_info": [201, 207, 217, 220, 295], "float_repr_styl": [201, 207, 217, 220, 295], "hash_info": [201, 207, 217, 220, 295], "hexvers": [201, 207, 217, 220, 295], "int_info": [201, 207, 217, 220, 295], "maxsiz": [201, 207, 217, 220, 295], "largest": [201, 207, 217, 220, 387], "maxunicod": [201, 207, 217, 220, 295], "thread_info": [201, 207, 217, 220, 295], "version_info": [201, 207, 217, 220, 295], "__stdin__": [201, 207, 217, 220, 295], "__stdout__": [201, 207, 217, 220, 295], "__stderr__": [201, 207, 217, 220, 295], "__displayhook__": [201, 207, 217, 220, 295], "__excepthook__": [201, 207, 217, 220, 295], "screen": [201, 207, 217, 220, 794, 800, 818], "exc_info": [201, 207, 217, 220, 295], "getdlopenflag": [201, 207, 217, 220, 295], "dlopen": [201, 207, 217, 220, 1127], "getprofil": [201, 207, 217, 220, 295], "profil": [201, 207, 217, 220, 320, 398, 404, 407, 711, 758, 790, 1111, 1114], "getrefcount": [201, 207, 217, 220, 227, 295], "getrecursionlimit": [201, 207, 217, 220, 295], "getsizeof": [201, 207, 217, 220, 242, 245, 295], "gettrac": [201, 207, 217, 220, 295], "setdlopenflag": [201, 207, 217, 220, 295], "setprofil": [201, 207, 217, 220, 295], "setrecursionlimit": [201, 207, 217, 220, 295], "settrac": [201, 207, 217, 220, 295], "__breakpointhook__": [201, 207, 217, 220, 295], "breakpointhook": [201, 207, 217, 220, 295], "breakpoint": [201, 207, 217, 220, 245], "exctyp": [201, 207, 217, 220], "__unraisablehook__": [201, 207, 217, 220, 295], "unraisablehook": [201, 207, 217, 220, 295], "unrais": [201, 207, 217, 220], "exc_typ": [201, 207, 217, 220, 953], "exc_valu": [201, 207, 217, 220, 953], "exc_traceback": [201, 207, 217, 220, 953], "err_msg": [201, 207, 217, 220], "addaudithook": [201, 207, 217, 220, 295], "audit": [201, 207, 217, 220, 295], "call_trac": [201, 207, 217, 220, 295], "afterward": [201, 207, 217, 220, 349, 399, 536, 686, 687, 688, 701, 754, 926, 1094], "older": [201, 207, 217, 220, 783, 926], "get_asyncgen_hook": [201, 207, 217, 220, 295], "firstit": [201, 207, 217, 220], "get_coroutine_origin_tracking_depth": [201, 207, 217, 220, 295], "coroutin": [201, 207, 217, 220, 283, 657, 658, 660, 661, 662, 663, 667, 710, 711, 1056], "getallocatedblock": [201, 207, 217, 220, 295], "getdefaultencod": [201, 207, 217, 220, 266, 295], "getfilesystemencodeerror": [201, 207, 217, 220, 295], "getfilesystemencod": [201, 207, 217, 220, 295], "getswitchinterv": [201, 207, 217, 220, 295], "setswitchinterv": [201, 207, 217, 220, 295], "is_fin": [201, 207, 217, 220, 295], "set_asyncgen_hook": [201, 207, 217, 220, 295], "set_coroutine_origin_tracking_depth": [201, 207, 217, 220, 295], "cr_origin": [201, 207, 217, 220], "rtld_global": [201, 207, 217, 220], "rtld_xxx": [201, 207, 217, 220], "rtld_lazi": [201, 207, 217, 220], "frequenc": [201, 207, 217, 220, 224, 260, 261, 279, 288, 313, 317, 711, 854, 855, 863, 895, 915, 917], "uninterrupt": [201, 207, 217, 220, 750], "workload": [201, 207, 217, 220], "typic": [201, 207, 217, 220, 248, 258, 274, 370, 410, 414, 431, 455, 484, 611, 729, 778, 803, 933, 978, 988, 1113, 1115], "005": [201, 207, 217, 220], "abiflag": [201, 207, 217, 220, 295], "api_vers": [201, 207, 217, 220, 295], "1013": [201, 207, 217, 220], "ipyk": 201, "base_exec_prefix": [201, 207, 217, 220, 295], "base_prefix": [201, 207, 217, 220, 295], "_ast": [201, 207, 217, 220], "_codec": [201, 207, 217, 220], "_collect": [201, 207, 217, 220], "_f": [201, 207, 217, 220], "byteord": [201, 207, 217, 220, 242, 295, 856], "foundati": [201, 207, 217, 220], "emati": [201, 207, 217, 220], "ipykernel": [201, 207, 217, 220, 245], "zmqshelldisplayhook": [201, 207, 217, 220], "dont_write_bytecod": [201, 207, 217, 220, 295], "opt": [201, 207, 217, 220, 376], "ation": [201, 207, 217, 220], "7976931348623157e": [201, 207, 217, 220], "308": [201, 207, 214, 217, 220, 262, 272], "max_": [201, 207, 217, 220], "epsilo": [201, 207, 217, 220], "2305843009213693": [201, 207, 217, 220], "iphash2": [201, 207, 217, 220], "50922736": 201, "cache_tag": [201, 207, 217, 220], "xv": [201, 207, 217, 220], "bits_per_digit": [201, 207, 217, 220], "sizeof_digit": [201, 207, 217, 220], "syntaxerror": [201, 212, 217, 224, 245, 955], "eol": [201, 224], "9223372036854775807": [201, 207, 217, 220], "1114111": [201, 207, 217, 220], "meta_path": [201, 207, 217, 220, 295], "_frozen_importlib": [201, 207, 217, 220, 245], "builtinimport": [201, 207, 217, 220, 245], "_fro": [201, 207, 217, 220], "homepa": 201, "path_hook": [201, 207, 217, 220, 295], "zipimport": [201, 207, 217, 220], "filefind": [201, 207, 217, 220], "path_importer_cach": [201, 207, 217, 220, 295], "jfa": [201, 207, 217, 220], "platlibdir": [201, 207, 217, 220, 295], "ps1": [201, 207, 217, 220, 295, 1095], "ps2": [201, 207, 217, 220, 295], "ps3": [201, 207, 217, 220, 295], "pycache_prefix": [201, 207, 217, 220, 295], "outstream": [201, 207, 217, 220], "versio": [201, 207, 217, 220], "202103": 201, "releaselev": [201, 207, 217, 220], "warnopt": [201, 207, 217, 220, 295], "isdigit": [201, 212, 220, 224, 245, 252, 266, 272, 1002], "pp": [201, 252, 375, 562], "list_of_str": 201, "tensorflow": 202, "kesselfal": 202, "rettenbachklamm": 202, "hochtor": 202, "hochschwab": 202, "_a": [204, 220, 245], "_123": 204, "140575811317328": 204, "140575811316208": 204, "0xffffffff": [204, 205, 348], "4294967296": [204, 212], "0x48": [204, 862], "330": [204, 207, 220, 245, 252, 266], "332": [204, 207, 220, 252, 266], "333": [204, 207, 220, 252, 266, 298], "334": [204, 207, 220, 252], "dstr": 204, "777": [204, 207], "aliv": [204, 368, 908, 951], "bcd": 204, "dusan": 204, "alex": [204, 218, 973], "mist": [204, 252], "span": [204, 230, 233, 235, 242, 266, 325, 344, 368, 733], "141592653589793": [204, 207], "roll": [204, 223, 244, 260, 261, 991, 1110], "dice": [204, 223, 244, 260, 261, 991], "win": [204, 220, 230, 849, 916, 991], "rnd": [204, 227], "convention": 204, "wise": [204, 248, 393, 537, 609, 640, 709, 711, 726, 736, 756, 854, 895, 955], "resultset": [204, 207, 1071], "sbin": [204, 220, 227, 230, 245, 252, 262, 266, 790, 794, 796, 843, 849, 880, 890], "nologin": [204, 220, 227, 230, 245, 252, 262, 266, 843, 849, 880, 890], "adm": [204, 220, 227, 230, 245, 252, 262, 266, 844, 847, 849], "lp": [204, 220, 227, 230, 245, 252, 262, 266, 849], "spool": [204, 220, 227, 230, 245, 252, 262, 266, 849], "lpd": [204, 220, 227, 230, 245, 252, 262, 266, 849], "ftp": [204, 220, 227, 230, 245, 252, 262, 266, 845, 946], "65534": [204, 220, 227, 230, 245, 252, 262, 266], "apach": [204, 220, 227, 230, 245, 252, 262, 266], "httpd": [204, 220, 227, 230, 245, 252, 262, 266], "coredump": [204, 220, 227, 230, 245, 252, 262, 266, 849, 929], "997": [204, 207, 220, 227, 230, 245, 252, 262, 266], "dumper": [204, 220, 227, 230, 245, 252, 262, 266, 849], "998": [204, 207, 220, 227, 230, 245, 252, 262, 266], "996": [204, 207, 220, 227, 230, 245, 252, 262, 266], "timesync": [204, 220, 227, 230, 245, 252, 262, 266, 849], "995": [204, 207, 220, 227, 230, 245, 252, 262, 266], "tss": [204, 220, 227, 230, 245, 252, 262, 266], "tpm": [204, 220, 227, 230, 245, 252, 262, 266], "dbu": [204, 220, 227, 230, 245, 252, 262, 266, 796], "polkitd": [204, 220, 227, 230, 245, 252, 262, 266, 796], "994": [204, 207, 220, 227, 230, 245, 252, 262, 266], "avahi": [204, 220, 227, 230, 245, 252, 262, 266, 796], "mdn": [204, 220, 227, 230, 245, 252, 262, 266], "unbound": [204, 220, 227, 230, 245, 252, 262, 266, 987], "992": [204, 207, 220, 227, 230, 245, 252, 262, 266], "dnsmasq": [204, 220, 227, 230, 245, 252, 262, 266, 796], "991": [204, 207, 220, 227, 230, 245, 252, 262, 266], "dhcp": [204, 220, 227, 230, 245, 252, 262, 266], "nm": [204, 220, 227, 230, 245, 252, 262, 266, 405, 538, 758, 944, 950], "openconnect": [204, 220, 227, 230, 245, 252, 262, 266], "993": [204, 207, 220, 227, 230, 245, 252, 262, 266], "989": [204, 207, 220, 227, 230, 245, 252, 262, 266], "networkmanag": [204, 220, 227, 230, 245, 252, 262, 266, 405, 796], "usbmuxd": [204, 220, 227, 230, 245, 252, 262, 266], "gluster": [204, 220, 227, 230, 245, 252, 262, 266], "988": [204, 207, 220, 227, 230, 245, 252, 262, 266], "glusterf": [204, 220, 227, 230, 245, 252, 262, 266], "rtkit": [204, 220, 227, 230, 245, 252, 262, 266], "realtimekit": [204, 220, 227, 230, 245, 252, 262, 266], "pipewir": [204, 220, 227, 230, 245, 252, 262, 266], "987": [204, 207, 220, 227, 230, 245, 252, 262, 266], "geoclu": [204, 220, 227, 230, 245, 252, 262, 266], "990": [204, 207, 220, 227, 230, 245, 252, 262, 266], "chroni": [204, 220, 227, 230, 245, 252, 262, 266], "984": [204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "saslauth": [204, 220, 227, 230, 245, 252, 262, 266], "saslauthd": [204, 220, 227, 230, 245, 252, 262, 266], "radvd": [204, 220, 227, 230], "rpc": [204, 220, 227, 230, 245, 252, 262, 266], "rpcbind": [204, 220, 227, 230, 245, 252, 262, 266], "openvpn": [204, 220, 227, 230, 245, 252, 262, 266], "982": [204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "981": [204, 207, 220, 227, 230], "spawn": [204, 220, 227, 230, 245, 252, 262, 266], "colord": [204, 220, 227, 230, 245, 252, 262, 266], "985": [204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "980": [204, 207, 220, 227, 230, 627], "rpcuser": [204, 220, 227, 230, 245, 252, 262, 266], "abrt": [204, 220, 227, 230, 245, 252, 262, 266, 796, 849], "flatpak": [204, 220, 227, 230, 245, 252, 262, 266, 269, 849], "979": [204, 207, 220, 227, 230], "helper": [204, 220, 224, 227, 230, 245, 252, 262, 266, 343, 537, 601, 649, 690, 752, 849, 1084, 1088], "983": [204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "978": [204, 207, 220, 227, 230, 245, 252, 262, 266, 849], "vboxadd": [204, 220, 227, 230, 245, 252, 262, 266, 849], "tcpdump": [204, 220, 227, 230, 245, 252, 262, 266, 849], "mosquitto": [204, 208, 220, 227, 230, 245, 252, 262, 266, 1050, 1075], "974": [204, 207, 220, 227, 230], "broker": [204, 208, 220, 227, 230, 245, 252, 262, 266, 796, 1050], "doit": [204, 434], "mappingproxi": [204, 220, 233], "229": [204, 207, 212, 214, 220, 224, 227, 245, 252, 262, 266, 272], "230": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272], "231": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 266, 272, 453, 454, 455, 467, 468, 469], "232": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 266, 272], "233": [204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 262, 266, 272], "inputlist": [204, 958], "ret": [204, 207, 212, 411, 649, 922, 958, 1003], "235": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272], "236": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 266, 272, 396], "237": [204, 207, 212, 214, 220, 224, 227, 230, 245, 262, 266, 272], "238": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272], "239": [204, 207, 212, 214, 220, 224, 227, 245, 252, 262, 266, 272], "240": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 262, 266, 272], "242": [204, 207, 212, 214, 217, 220, 227, 230, 245, 262, 266, 272], "243": [204, 207, 212, 214, 220, 227, 230, 245, 262, 266, 272], "244": [204, 207, 212, 214, 217, 220, 227, 230, 245, 266, 272], "245": [204, 207, 212, 214, 227, 245, 262, 266, 272], "247": [204, 207, 212, 214, 220, 224, 227, 245, 262, 266, 272], "248": [204, 207, 212, 214, 217, 224, 227, 245, 252, 262, 266, 272], "249": [204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 266, 272], "250": [204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 256, 262, 266, 272, 847], "251": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272], "252": [204, 207, 212, 214, 217, 224, 227, 245, 252, 262, 266, 272, 1072], "253": [204, 207, 212, 214, 217, 220, 227, 230, 245, 252, 266, 272], "256": [204, 207, 212, 214, 220, 227, 230, 245, 252, 262, 266, 272, 334, 542, 1058, 1072], "257": [204, 207, 212, 214, 217, 220, 224, 227, 230, 245, 252, 262, 266, 272], "258": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272], "0x7fda5444e6a0": 204, "259": [204, 207, 212, 214, 217, 220, 227, 245, 252, 262, 266, 272], "260": [204, 207, 212, 214, 217, 220, 227, 245, 252, 262, 266, 272], "261": [204, 207, 212, 214, 220, 224, 230, 245, 252, 262, 266, 272], "262": [204, 207, 212, 214, 220, 230, 245, 252, 262, 266, 272], "263": [204, 207, 212, 214, 220, 224, 227, 230, 245, 252, 262, 266, 272], "264": [204, 207, 212, 214, 217, 220, 227, 230, 245, 252, 266, 272], "265": [204, 207, 212, 214, 220, 227, 245, 252, 266, 272], "266": [204, 207, 212, 214, 217, 220, 224, 230, 245, 266, 272], "267": [204, 207, 212, 214, 217, 220, 227, 230, 245, 252, 266, 272], "268": [204, 207, 212, 214, 220, 227, 230, 245, 252, 266, 272], "269": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272, 934], "270": [204, 207, 212, 214, 220, 224, 227, 245, 252, 262, 266, 272], "other_map": 204, "272": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272], "273": [204, 207, 212, 214, 220, 224, 245, 252, 266, 272, 477, 495, 496, 497, 498, 500, 501, 968], "274": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 262, 266, 272], "140575811316304": 204, "275": [204, 207, 212, 214, 220, 224, 227, 245, 252, 262, 266, 272], "276": [204, 207, 212, 214, 217, 227, 245, 252, 262, 266, 272], "277": [204, 207, 212, 214, 217, 220, 224, 227, 245, 262, 266, 272], "278": [204, 207, 212, 214, 220, 227, 245, 252, 266, 272], "279": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 266, 272], "280": [204, 207, 212, 214, 217, 220, 224, 245, 252, 266, 272, 933, 934], "140575692459008": 204, "282": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 266, 272], "283": [204, 207, 212, 214, 217, 220, 224, 227, 245, 266, 272], "284": [204, 207, 212, 214, 220, 224, 227, 245, 249, 272], "elementwis": 204, "285": [204, 207, 212, 214, 217, 220, 245, 252, 266, 272], "286": [204, 207, 212, 214, 217, 220, 224, 245, 266, 272], "287": [204, 207, 212, 214, 217, 220, 224, 227, 245, 252, 272], "140575692438848": 204, "288": [204, 207, 212, 214, 220, 224, 227, 245, 252, 266, 272], "140575692448960": 204, "289": [204, 207, 212, 214, 220, 245, 252, 266, 272], "290": [204, 207, 212, 214, 220, 245, 252, 266, 272], "292": [204, 207, 212, 220, 224, 245, 252, 262, 266], "293": [204, 207, 212, 214, 220, 245, 252, 262, 266, 272], "295": [204, 207, 212, 214, 220, 224, 245, 252, 262, 266], "296": [204, 207, 212, 214, 220, 245, 252, 262, 266, 272], "298": [204, 207, 212, 220, 224, 245, 252, 262, 266, 272], "deep": [204, 216, 644, 649, 920], "301": [204, 207, 212, 217, 220, 224, 245, 252, 262, 266, 272], "302": [204, 207, 214, 220, 224, 245, 252, 266, 272, 1013], "deepcopi": [204, 214, 227, 252, 272, 996], "303": [204, 207, 214, 217, 220, 252, 266, 272, 934], "304": [204, 207, 214, 217, 220, 224], "305": [204, 207, 217, 220, 245, 262, 266, 272], "314": [204, 207, 214, 217, 220, 245, 252, 262, 266, 272], "315": [204, 207, 220, 245, 266, 272], "rdr": [204, 205, 411, 434, 1067], "delimit": [204, 205, 220, 249, 250, 266, 558, 844, 984, 1067], "fund_nam": [204, 205, 1013], "fund_isin": [204, 205, 1013], "fund_tick": [204, 205, 1013], "as_of_d": [204, 205, 1013], "fund_in_univers": [204, 205, 1013], "fund_of_fund": [204, 205, 1013], "fund_holdings_count": [204, 205, 1013], "fund_holding_funds_count": [204, 205, 1013], "american": [204, 210, 610, 624, 711, 1013, 1072], "fund": [204, 1013], "balanc": [204, 208, 378, 1013], "us0240711020": [204, 1013], "abalx": [204, 1013], "20210103": [204, 1013], "084": [204, 1013], "dodg": [204, 1013], "cox": [204, 1013], "us2562011047": [204, 1013], "dodbx": [204, 1013], "410": [204, 207, 252, 266, 1013], "us2562191062": [204, 1013], "dodgx": [204, 1013], "franklin": [204, 1013], "incom": [204, 220, 1013, 1075], "us3534963000": [204, 1013], "fkinx": [204, 1013], "america": [204, 1013], "us3998741066": [204, 1013], "agthx": [204, 1013], "price": [204, 224, 404, 427, 1013], "us7414791092": [204, 1013], "prgfx": [204, 1013], "fidel": [204, 1013], "puritan": [204, 1013], "us3163451079": [204, 1013], "fpurx": [204, 1013], "contrafund": [204, 1013], "us3160711095": [204, 1013], "fcntx": [204, 1013], "363": [204, 207, 252, 266, 1013], "us77954m1053": [204, 1013], "prwcx": [204, 1013], "westburi": [204, 1013], "us6804141090": [204, 1013], "owlsx": [204, 1013], "us1401931035": [204, 1013], "caibx": [204, 1013], "582": [204, 207, 1013], "harbor": [204, 1013], "institut": [204, 205, 440, 455, 1013, 1086], "us4115115044": [204, 1013], "hacax": [204, 1013], "us77954q1067": [204, 1013], "trbcx": [204, 1013], "dreyfu": [204, 1013], "treasuri": [204, 1013], "cash": [204, 1013], "inst": [204, 1013], "us2619411083": [204, 1013], "dirxx": [204, 1013], "blackrock": [204, 1013], "us09251t5092": [204, 1013], "malox": [204, 1013], "us3163453059": [204, 1013], "flpsx": [204, 1013], "liquid": [204, 1013], "us09248u5517": [204, 1013], "tttxx": [204, 1013], "dfa": [204, 1013], "portfolio": [204, 224, 1013], "us2332038841": [204, 1013], "dfgbx": [204, 1013], "feder": [204, 1013], "herm": [204, 1013], "us60934n6821": [204, 1013], "utixx": [204, 1013], "oakmark": [204, 1013], "investor": [204, 224, 1013], "us4138382027": [204, 1013], "oakix": [204, 1013], "asset": [204, 1013], "us00767h4939": [204, 1013], "787": [204, 207, 1013], "fpa": [204, 1013], "crescent": [204, 1013], "us30254t7596": [204, 1013], "fpacx": [204, 1013], "us3534968058": [204, 1013], "fcisx": [204, 1013], "us5529836943": [204, 1013], "meiix": [204, 1013], "goldman": [204, 1013], "sach": [204, 1013, 1131], "instrument": [204, 402, 404, 862, 1013], "us38142b5003": [204, 1013], "ftixx": [204, 1013], "schwab": [204, 1013], "us8085098551": [204, 1013], "swppx": [204, 1013], "508": [204, 207, 252, 1013], "templeton": [204, 1013], "bond": [204, 1013], "advisor": [204, 1013], "us8802084009": [204, 1013], "tgbax": [204, 1013], "us32008f6060": [204, 1013], "sgiix": [204, 1013], "ishar": [204, 1013], "etf": [204, 1013], "us4642872000": [204, 1013], "ivv": [204, 1013], "507": [204, 207, 1013], "vanguard": [204, 1013], "admir": [204, 1013], "us9229087104": [204, 1013], "vfiax": [204, 1013], "510": [204, 207, 1013], "us9229087286": [204, 1013], "vtsax": [204, 1013], "370": [204, 207, 252, 266, 1013], "spdr": [204, 1013], "midcap": [204, 1013], "us78467y1073": [204, 1013], "mdy": [204, 1013], "dow": [204, 1013], "jone": [204, 303, 304, 1013], "industri": [204, 758, 1013], "us78467x1090": [204, 1013], "health": [204, 1013], "us81369y2090": [204, 1013], "xlv": [204, 1013], "discretionari": [204, 1013], "us81369y4070": [204, 1013], "xly": [204, 1013], "energi": [204, 1013], "us81369y5069": [204, 1013], "xle": [204, 1013], "financi": [204, 1013], "us81369y6059": [204, 1013], "xlf": [204, 1013], "us81369y8030": [204, 1013], "xlk": [204, 1013], "invesco": [204, 1013], "qqq": [204, 1013], "us46090e1038": [204, 1013], "us2562061034": [204, 1013], "dodfx": [204, 1013], "msci": [204, 1013], "eaf": [204, 1013], "us4642874659": [204, 1013], "efa": [204, 1013], "897": [204, 207, 1013], "jpmorgan": [204, 1013], "sec": [204, 425, 916, 1013, 1088], "mny": [204, 1013], "mkt": [204, 1013], "us4812a28358": [204, 1013], "jtsxx": [204, 1013], "eql": [204, 1013], "wght": [204, 1013], "us46137v3574": [204, 1013], "us4812a03757": [204, 1013], "cjtxx": [204, 1013], "us00143w8753": [204, 1013], "odvyx": [204, 1013], "dividend": [204, 1013], "us78464a7634": [204, 1013], "sdy": [204, 1013], "equiti": [204, 1013], "us2332033719": [204, 1013], "dfiex": [204, 1013], "888": [204, 207, 1013], "edgewood": [204, 1013], "us0075w07594": [204, 1013], "egfix": [204, 1013], "prudenti": [204, 1013], "us00767h7585": [204, 1013], "r6": [204, 1013], "us55273h3536": [204, 1013], "meikx": [204, 1013], "327": [204, 207, 220, 245, 252, 262], "328": [204, 207, 214, 220, 252], "geschieht": [205, 320, 845], "wunder": 205, "groesser": 205, "jave": 205, "shorthand": [205, 335, 837, 969], "lin": 205, "lout": 205, "faster": [205, 224, 387, 399, 920, 926], "outputlist": 205, "getus": [205, 1034], "userdatabas": [205, 1034], "userid": [205, 217], "groupid": 205, "loginshel": 205, "userrecord": 205, "dens": [205, 214, 224], "pratic": 205, "_fix_float_numb": 205, "fieldnam": [205, 1067], "_fix_bool": 205, "elif": [205, 212, 333, 370, 411, 975, 990, 991], "_fix_dat": 205, "read_stock": [205, 1013], "csvfile": [205, 968], "converted_record": 205, "csvname": [205, 250, 411], "dbname": [205, 1070], "stmt": 205, "predefin": [205, 890, 925, 930, 1086, 1106], "circuit": [206, 212, 222, 863, 989, 1117, 1124], "windows_path": [207, 212], "festplatt": [207, 1127], "eue": [207, 297], "lehrer": 207, "50923504": 207, "202107": 207, "140106795875920": 207, "140106669190640": 207, "669": [207, 224], "140106669191024": 207, "0j": 207, "copied_l": [207, 214], "140106669249856": 207, "copied_t": 207, "tuple_containing_one_el": 207, "tran": 207, "satan": [207, 217], "queen": [207, 227, 1045, 1047, 1051, 1053, 1067], "10000000000": [207, 262, 297], "prod": 207, "resultset_to_local_db": 207, "my_local_db": 207, "basenam": 207, "normalized_path": 207, "normpath": [207, 214, 963], "291": [207, 212, 220, 245, 262, 272, 403], "294": [207, 212, 220, 245, 262, 266, 272], "297": [207, 212, 214, 220, 224, 266], "299": [207, 212, 217, 220, 224, 245, 252, 262, 266, 272], "306": [207, 217, 224, 245, 262, 266, 272], "307": [207, 214, 220, 245, 262, 266, 272], "309": [207, 214, 217, 220, 252, 262, 266, 272], "310": [207, 214, 217, 220, 266, 272, 348], "311": [207, 214, 245, 266, 272], "312": [207, 214, 220, 245, 252, 262, 272], "313": [207, 214, 220, 252, 266, 272], "316": [207, 214, 217, 220, 245, 266], "317": [207, 214, 217, 245, 252, 262, 266], "318": [207, 217, 220, 252, 266], "319": [207, 214, 217, 220, 245, 262, 266], "321": [207, 217, 220, 252, 262, 266, 272], "322": [207, 217, 220, 252, 272], "323": [207, 214, 217, 220, 245, 266, 272], "324": [207, 217, 220, 245, 262, 266, 272, 486], "325": [207, 214, 220, 252, 262, 272], "326": [207, 214, 220, 245, 262, 272], "329": [207, 220, 245, 252], "331": [207, 214, 220, 245, 266], "335": [207, 214, 220, 252, 266], "336": [207, 214, 220, 266, 418], "337": [207, 220, 252, 266], "338": [207, 214, 252, 266], "339": [207, 214, 220, 266], "341": [207, 214, 220, 252, 266], "342": [207, 214, 220, 252, 272], "343": [207, 220, 252, 266], "346": [207, 220, 266, 584, 585, 586, 587], "347": [207, 252, 266], "348": [207, 220], "349": [207, 220, 266, 398], "351": [207, 214, 220, 266], "352": [207, 214, 220, 252, 266], "353": [207, 214, 220, 252, 266], "354": [207, 220, 266, 432], "355": [207, 252, 266], "356": [207, 227, 266], "357": [207, 252, 266], "359": [207, 266], "361": [207, 266], "362": [207, 252, 266], "364": [207, 266], "365": 207, "366": [207, 252, 266], "367": [207, 266], "368": [207, 266], "369": [207, 252, 266], "371": [207, 252], "373": [207, 214, 252], "374": [207, 214, 266], "375": [207, 214, 224, 252, 266, 398], "376": [207, 252, 266], "377": [207, 214, 252, 266], "379": [207, 252, 266], "380": [207, 252, 266], "381": [207, 214, 252, 266], "382": [207, 252, 266], "383": [207, 214, 252, 256], "384": [207, 252, 266], "385": [207, 252, 266], "386": [207, 252, 266], "387": 207, "388": [207, 252, 266], "389": 207, "390": [207, 266], "391": [207, 252], "392": [207, 252], "393": [207, 214, 252, 266], "394": [207, 214, 252, 266], "395": [207, 214, 252, 266], "396": [207, 214, 252, 803], "397": [207, 214, 266], "398": [207, 214, 266], "399": [207, 214, 266], "401": [207, 214, 252, 266], "402": [207, 252], "403": [207, 214, 266], "405": [207, 266], "406": [207, 214, 252, 266], "407": [207, 252, 266], "408": [207, 214, 252, 266], "409": [207, 214, 252, 266], "411": [207, 214, 252, 266], "412": [207, 266], "413": [207, 214, 252, 266], "414": [207, 214, 252, 266], "415": [207, 266], "416": [207, 214, 252], "417": [207, 214, 252, 266], "418": [207, 214, 252], "419": [207, 214, 252, 266], "420": [207, 214, 252, 266], "421": [207, 214, 252, 266], "422": [207, 214], "423": [207, 252, 266], "424": [207, 214, 252, 266], "425": [207, 252], "426": 207, "427": [207, 214, 252], "428": [207, 214, 252], "429": [207, 252], "430": [207, 214, 252], "431": [207, 252], "432": [207, 214, 252], "433": [207, 252], "434": [207, 252], "435": 207, "436": [207, 252], "437": [207, 214, 252], "438": [207, 214], "439": [207, 252], "440": [207, 214, 252], "441": [207, 214, 252], "442": [207, 214, 252], "443": [207, 214], "444": [207, 214], "445": [207, 214], "446": [207, 252], "447": [207, 214, 252], "448": [207, 252], "449": [207, 214], "451": [207, 214], "452": [207, 214, 252], "453": [207, 214], "454": [207, 214, 252], "455": [207, 214], "457": 207, "458": [207, 252], "459": 207, "460": [207, 252], "461": [207, 252], "462": [207, 252], "463": 207, "464": [207, 252], "465": [207, 252, 256], "466": [207, 252], "467": [207, 252], "468": [207, 252], "469": [207, 252, 687], "470": [207, 252], "471": [207, 252], "472": [207, 252], "473": 207, "474": [207, 252], "475": [207, 252], "476": [207, 252], "478": 207, "479": [207, 252], "480": [207, 252], "481": [207, 252], "482": [207, 252], "483": [207, 252], "484": 207, "485": 207, "486": [207, 252], "487": [207, 252], "488": [207, 252], "489": 207, "490": [207, 840], "491": 207, "492": 207, "494": [207, 252], "495": 207, "496": 207, "497": [207, 252], "498": [207, 252], "499": 207, "502": [207, 252], "503": 207, "504": [207, 252], "505": [207, 220, 252], "506": [207, 252], "509": 207, "511": 207, "514": 207, "515": [207, 252, 686], "516": [207, 252], "518": [207, 252], "519": 207, "520": [207, 252], "521": [207, 252], "522": 207, "523": 207, "524": [207, 252], "525": [207, 252], "526": 207, "527": 207, "528": 207, "529": 207, "530": 207, "531": [207, 252], "532": 207, "533": 207, "534": 207, "535": 207, "536": [207, 840], "538": 207, "539": 207, "540": 207, "541": 207, "542": 207, "543": 207, "544": 207, "545": 207, "546": 207, "547": 207, "548": [207, 256], "549": 207, "550": 207, "551": 207, "552": 207, "553": 207, "554": [207, 842], "555": 207, "556": 207, "557": 207, "558": 207, "559": 207, "560": 207, "561": 207, "562": 207, "563": 207, "564": 207, "565": 207, "566": 207, "567": 207, "568": 207, "569": 207, "570": 207, "571": 207, "572": 207, "573": 207, "574": 207, "575": 207, "576": 207, "577": 207, "578": 207, "579": 207, "580": 207, "581": 207, "583": 207, "584": 207, "585": 207, "586": 207, "587": 207, "588": 207, "589": 207, "590": 207, "591": 207, "592": 207, "593": 207, "594": 207, "595": 207, "596": [207, 946], "597": 207, "598": 207, "599": 207, "601": 207, "602": 207, "603": 207, "604": 207, "605": 207, "606": 207, "607": 207, "608": 207, "609": 207, "610": [207, 840], "611": 207, "612": [207, 803], "613": 207, "614": 207, "615": 207, "616": 207, "617": 207, "618": 207, "619": 207, "620": 207, "621": 207, "622": 207, "623": 207, "624": 207, "625": [207, 224], "626": 207, "627": 207, "628": 207, "629": 207, "630": 207, "631": 207, "632": 207, "633": 207, "634": 207, "635": 207, "636": 207, "637": 207, "638": 207, "639": 207, "640": [207, 537], "641": 207, "642": 207, "643": 207, "644": [207, 983], "645": 207, "646": 207, "647": 207, "648": 207, "649": 207, "650": 207, "651": 207, "652": 207, "653": 207, "654": 207, "655": 207, "656": 207, "657": 207, "658": 207, "659": 207, "660": 207, "661": 207, "662": 207, "663": 207, "665": 207, "668": [207, 987], "670": 207, "671": 207, "672": 207, "673": 207, "674": 207, "675": 207, "676": 207, "677": 207, "678": 207, "679": 207, "680": 207, "681": 207, "682": [207, 840], "683": 207, "684": 207, "685": 207, "687": 207, "688": 207, "689": 207, "690": 207, "691": 207, "692": 207, "693": 207, "694": 207, "695": 207, "696": 207, "697": 207, "698": [207, 840, 880], "699": 207, "701": 207, "702": 207, "703": [207, 260, 261, 279], "704": 207, "705": 207, "706": 207, "707": 207, "708": [207, 220], "709": 207, "710": [207, 537], "711": 207, "712": 207, "713": 207, "715": [207, 611], "716": 207, "717": 207, "718": 207, "719": 207, "720": 207, "721": 207, "722": 207, "723": 207, "724": 207, "725": 207, "726": 207, "727": 207, "728": 207, "729": 207, "730": [207, 249], "731": 207, "732": 207, "733": 207, "734": 207, "735": 207, "736": 207, "737": 207, "738": 207, "739": 207, "740": 207, "741": 207, "742": 207, "743": 207, "744": 207, "745": 207, "746": [207, 934], "747": 207, "748": 207, "749": 207, "750": 207, "751": 207, "752": 207, "753": 207, "754": 207, "756": 207, "757": 207, "758": 207, "759": 207, "760": 207, "761": 207, "762": 207, "763": 207, "764": 207, "765": 207, "766": 207, "767": 207, "768": 207, "769": 207, "770": 207, "772": 207, "773": 207, "774": 207, "775": 207, "776": 207, "778": 207, "779": 207, "780": 207, "781": 207, "782": [207, 256], "783": 207, "784": 207, "785": 207, "786": 207, "788": 207, "789": [207, 214], "790": 207, "791": [207, 686], "792": 207, "793": 207, "794": 207, "795": 207, "796": 207, "797": 207, "798": 207, "801": [207, 249], "802": 207, "803": 207, "804": 207, "805": 207, "806": 207, "807": 207, "808": 207, "809": 207, "810": 207, "811": 207, "812": 207, "813": 207, "814": 207, "815": [207, 224], "816": [207, 230], "817": 207, "818": 207, "819": 207, "820": 207, "822": 207, "823": 207, "824": 207, "826": 207, "827": 207, "828": [207, 256], "829": 207, "830": 207, "831": 207, "832": 207, "833": 207, "834": 207, "835": 207, "836": 207, "837": 207, "838": 207, "839": 207, "840": 207, "841": 207, "842": 207, "843": 207, "844": 207, "845": 207, "846": 207, "847": 207, "848": 207, "849": 207, "850": 207, "851": 207, "852": 207, "853": 207, "854": 207, "855": 207, "856": 207, "857": 207, "858": 207, "859": 207, "860": 207, "861": 207, "862": 207, "863": 207, "864": 207, "865": 207, "866": 207, "867": 207, "868": 207, "870": 207, "871": 207, "872": 207, "873": 207, "874": [207, 434], "875": 207, "876": 207, "877": 207, "878": 207, "879": [207, 398], "880": 207, "881": 207, "882": 207, "883": 207, "884": 207, "885": 207, "886": 207, "887": 207, "889": 207, "890": 207, "891": 207, "892": 207, "893": 207, "894": 207, "895": 207, "896": 207, "898": 207, "899": 207, "901": 207, "902": [207, 840], "903": 207, "904": 207, "905": 207, "906": 207, "907": 207, "908": 207, "909": 207, "911": 207, "912": 207, "913": 207, "914": 207, "915": 207, "916": 207, "917": [207, 256], "918": 207, "919": 207, "920": 207, "921": 207, "922": 207, "923": 207, "924": 207, "925": 207, "926": 207, "927": 207, "928": 207, "929": 207, "930": 207, "931": 207, "932": 207, "933": 207, "934": 207, "935": 207, "936": 207, "937": 207, "938": 207, "939": 207, "940": 207, "941": 207, "942": 207, "943": 207, "944": 207, "945": 207, "946": 207, "947": 207, "948": 207, "949": 207, "950": 207, "951": 207, "952": 207, "953": 207, "954": 207, "955": 207, "956": 207, "957": 207, "958": 207, "959": 207, "960": 207, "961": 207, "962": 207, "963": 207, "964": 207, "965": [207, 1080, 1081], "966": [207, 1080, 1081], "967": [207, 1080, 1081], "968": [207, 1080, 1081], "969": [207, 1080, 1081], "970": 207, "971": 207, "972": 207, "973": 207, "975": 207, "976": [207, 245, 252, 262, 266], "977": [207, 245, 252, 262, 266, 849], "timeaxi": 207, "myrang": 207, "1002": [207, 584, 585, 586, 587, 803], "1004": 207, "1006": 207, "1008": 207, "1010": 207, "1012": 207, "1014": 207, "1016": 207, "1018": 207, "1020": [207, 785, 786, 793], "1022": 207, "1028": 207, "1030": 207, "1032": 207, "1034": 207, "1036": 207, "1038": 207, "1040": 207, "1042": [207, 920], "1046": 207, "1048": 207, "1050": 207, "1052": 207, "1054": 207, "1056": 207, "1058": 207, "1060": 207, "1062": 207, "1064": 207, "1066": 207, "1068": [207, 256], "1070": [207, 256], "1072": [207, 256], "1074": 207, "1076": 207, "1078": 207, "1080": 207, "1082": 207, "1084": 207, "1086": 207, "1088": 207, "1090": 207, "1092": 207, "1094": 207, "1096": 207, "1098": 207, "1102": 207, "1104": 207, "1106": 207, "1108": 207, "1110": 207, "1114": 207, "1116": 207, "1118": 207, "1120": 207, "1122": 207, "1124": 207, "1126": 207, "1128": 207, "1130": 207, "1132": 207, "1134": 207, "1136": 207, "1138": 207, "1140": 207, "1142": 207, "1144": 207, "1146": 207, "1148": 207, "1150": 207, "1152": [207, 1081], "1154": [207, 1081], "1156": 207, "1158": 207, "1160": 207, "1162": 207, "1164": 207, "1166": 207, "1168": 207, "1170": 207, "1172": 207, "1174": 207, "1176": 207, "1178": 207, "1180": 207, "1182": 207, "1184": 207, "1186": 207, "1188": 207, "1190": 207, "1192": 207, "1194": 207, "1196": 207, "1198": 207, "1202": [207, 1081], "1204": [207, 1081], "1206": 207, "1208": 207, "1210": 207, "1212": 207, "1214": 207, "1216": 207, "1218": 207, "1220": 207, "1222": 207, "1224": 207, "1226": 207, "1228": 207, "1230": 207, "1232": 207, "1236": 207, "1238": 207, "1240": 207, "1242": 207, "1246": 207, "1248": 207, "1250": 207, "1252": 207, "1254": [207, 453, 454, 455, 467, 468, 469], "1256": 207, "1258": 207, "1260": [207, 418], "1262": 207, "1264": 207, "1266": 207, "1268": 207, "1270": 207, "1272": 207, "1274": 207, "1276": 207, "1278": 207, "1280": 207, "1282": 207, "1284": 207, "1286": 207, "1288": 207, "1290": 207, "1292": 207, "1294": 207, "1296": 207, "1298": 207, "1300": 207, "1302": 207, "1304": 207, "1306": 207, "1308": 207, "1310": 207, "1312": 207, "1314": 207, "1316": 207, "1318": 207, "1320": 207, "1322": 207, "1324": 207, "1326": 207, "1328": 207, "1330": 207, "1332": 207, "1334": 207, "1336": 207, "1338": 207, "1340": 207, "1342": 207, "1344": 207, "1346": 207, "1348": 207, "1350": 207, "1352": [207, 890], "1354": 207, "1356": 207, "1358": 207, "1360": 207, "1362": 207, "1364": 207, "1366": 207, "1368": 207, "1370": 207, "1372": 207, "1374": 207, "1378": 207, "1380": 207, "1382": 207, "1384": 207, "1386": 207, "1388": 207, "1390": 207, "1392": [207, 434], "1394": 207, "1396": 207, "1398": 207, "1400": 207, "1402": 207, "1406": 207, "1408": 207, "1410": 207, "1412": 207, "1414": 207, "1416": [207, 1001], "1418": 207, "1420": 207, "1422": 207, "1424": 207, "1426": 207, "1428": 207, "1430": 207, "1432": 207, "1434": 207, "1436": 207, "1438": 207, "1440": 207, "1442": 207, "1444": 207, "1446": 207, "1448": 207, "1450": [207, 1080], "1452": [207, 1080], "1454": [207, 1080], "1456": 207, "1458": 207, "1460": 207, "1462": 207, "1464": 207, "1466": 207, "1468": 207, "1470": 207, "1472": 207, "1474": 207, "1476": 207, "1478": 207, "1480": 207, "1482": 207, "1484": 207, "1486": 207, "1488": 207, "1490": 207, "1492": 207, "1494": 207, "1496": 207, "1498": 207, "1502": 207, "1504": 207, "1506": 207, "1508": 207, "1510": 207, "1512": 207, "1514": 207, "1516": 207, "1518": [207, 1080], "1520": [207, 1080], "1522": [207, 1080], "1524": 207, "1526": 207, "1528": 207, "1530": 207, "1532": 207, "1534": 207, "1536": [207, 932], "1538": 207, "1540": 207, "1542": 207, "1544": 207, "1546": 207, "1548": 207, "1550": 207, "1552": 207, "1554": 207, "1556": 207, "1558": [207, 801], "1560": 207, "1562": 207, "1564": 207, "1566": 207, "1568": 207, "1570": 207, "1572": 207, "1574": 207, "1576": 207, "1578": 207, "1580": 207, "1582": 207, "1584": 207, "1586": 207, "1588": 207, "1590": 207, "1592": 207, "1594": 207, "1596": 207, "1598": 207, "1600": 207, "1602": 207, "1604": [207, 926], "1606": 207, "1608": 207, "1610": 207, "1612": 207, "1614": 207, "1616": 207, "1618": 207, "1620": 207, "1622": 207, "1624": 207, "1626": 207, "1628": 207, "1630": 207, "1632": 207, "1634": [207, 453, 454], "1636": 207, "1638": 207, "1640": 207, "1642": 207, "1644": 207, "1646": 207, "1648": 207, "1650": 207, "1652": 207, "1654": 207, "1656": 207, "1658": 207, "1660": 207, "1662": 207, "1664": 207, "1666": 207, "1668": 207, "1672": 207, "1674": 207, "1676": 207, "1678": 207, "1680": 207, "1682": 207, "1684": 207, "1686": 207, "1688": [207, 933, 934], "1690": 207, "1692": 207, "1694": 207, "1696": 207, "1698": 207, "1700": 207, "1702": 207, "1704": 207, "1706": [207, 944], "1708": 207, "1710": 207, "1712": 207, "1714": 207, "1716": 207, "1718": 207, "1722": 207, "1724": 207, "1726": 207, "1728": 207, "1730": 207, "1732": 207, "1734": 207, "1736": 207, "1738": 207, "1740": 207, "1742": 207, "1744": 207, "1746": 207, "1748": 207, "1750": 207, "1752": 207, "1754": 207, "1756": 207, "1758": 207, "1760": 207, "1762": 207, "1764": [207, 266], "1766": 207, "1768": 207, "1770": 207, "1772": 207, "1774": 207, "1776": 207, "1778": 207, "1780": 207, "1782": 207, "1784": 207, "1786": 207, "1788": 207, "1790": 207, "1792": 207, "1794": 207, "1796": 207, "1798": 207, "1800": [207, 932], "1802": 207, "1804": 207, "1806": 207, "1808": 207, "1810": 207, "1812": 207, "1814": 207, "1816": 207, "1818": 207, "1820": 207, "1822": 207, "1824": 207, "1826": 207, "1828": 207, "1830": 207, "1832": 207, "1834": 207, "1836": 207, "1838": 207, "1840": 207, "1842": 207, "1844": 207, "1846": 207, "1848": 207, "1850": 207, "1852": 207, "1854": 207, "1856": 207, "1858": 207, "1860": 207, "1862": 207, "1864": 207, "1866": 207, "1868": 207, "1870": 207, "1872": 207, "1874": 207, "1876": 207, "1878": 207, "1880": 207, "1882": 207, "1884": 207, "1886": 207, "1888": 207, "1890": 207, "1892": 207, "1894": 207, "1896": 207, "1898": 207, "1900": [207, 217, 1045, 1047, 1051, 1053], "1902": 207, "1904": 207, "1906": 207, "1908": 207, "1910": 207, "1912": 207, "1914": 207, "1916": 207, "1918": 207, "1920": 207, "1922": 207, "1924": 207, "1926": 207, "1928": 207, "1930": 207, "1932": 207, "1934": 207, "1938": 207, "1940": 207, "1942": 207, "1944": 207, "1946": 207, "1948": 207, "1950": 207, "1952": 207, "1954": [207, 1011], "1956": [207, 981], "1958": 207, "1962": 207, "1964": 207, "1968": [207, 363], "1970": [207, 702], "1972": 207, "1974": 207, "1976": 207, "1978": [207, 323], "1980": [207, 528, 932], "1984": 207, "1986": [207, 1045, 1047, 1051, 1053], "1988": [207, 323, 437], "1990": [207, 528], "1992": 207, "1994": 207, "2004": 207, "2024": 207, "2026": 207, "2028": 207, "2030": 207, "2032": 207, "2034": 207, "2036": 207, "2038": 207, "2040": 207, "2042": 207, "2044": 207, "2046": 207, "2050": 207, "2052": 207, "2054": 207, "2056": 207, "2058": 207, "2060": 207, "2062": 207, "2064": 207, "2066": 207, "2068": 207, "2070": 207, "2072": 207, "2074": 207, "2076": 207, "2078": 207, "2080": 207, "2082": 207, "2084": 207, "2086": 207, "2088": 207, "2090": 207, "2092": 207, "2094": 207, "2096": 207, "2098": 207, "2100": 207, "2102": 207, "2104": 207, "2106": 207, "2108": 207, "2110": 207, "2112": 207, "2114": 207, "2116": 207, "2118": 207, "2120": 207, "2122": 207, "2124": 207, "2126": 207, "2128": 207, "2130": 207, "2132": 207, "2134": 207, "2136": 207, "2138": 207, "2140": 207, "2142": 207, "2144": 207, "2146": 207, "2148": 207, "2150": 207, "2152": 207, "2154": 207, "2156": 207, "2158": 207, "2160": 207, "2162": 207, "2164": 207, "2166": 207, "2168": 207, "2170": 207, "2172": 207, "2174": 207, "2176": 207, "2178": 207, "2180": 207, "2182": 207, "2184": 207, "2186": 207, "2188": 207, "2190": 207, "2192": 207, "2194": 207, "2196": 207, "2198": 207, "2200": 207, "2202": 207, "2204": 207, "2206": 207, "2208": 207, "2210": 207, "2214": 207, "2216": 207, "2218": 207, "2220": 207, "2222": 207, "2224": 207, "2226": 207, "2228": 207, "2230": 207, "2232": 207, "2234": 207, "2236": 207, "2238": 207, "2240": 207, "2242": 207, "2244": 207, "2246": 207, "2248": 207, "2250": 207, "2252": 207, "2254": 207, "2256": 207, "2258": 207, "2260": 207, "2262": 207, "2264": 207, "2266": 207, "2268": 207, "2272": 207, "2274": 207, "2276": 207, "2278": 207, "2280": 207, "2282": 207, "2284": 207, "2286": 207, "2288": 207, "2290": 207, "2292": 207, "2294": 207, "2296": 207, "2298": 207, "2300": 207, "2302": 207, "2304": 207, "2306": 207, "2308": 207, "2310": 207, "2312": 207, "2314": 207, "2316": 207, "2318": 207, "2320": 207, "2322": 207, "2324": 207, "2326": 207, "2328": 207, "2330": 207, "2332": [207, 840], "2334": 207, "2336": 207, "2338": 207, "2340": 207, "2342": 207, "2344": 207, "2346": 207, "2348": 207, "2350": 207, "2352": 207, "2354": 207, "2356": 207, "2358": 207, "2360": 207, "2362": 207, "2364": 207, "2366": 207, "2368": 207, "2370": 207, "2372": 207, "2374": 207, "2376": 207, "2378": 207, "2380": 207, "2382": 207, "2384": 207, "2386": 207, "2388": 207, "2390": 207, "2392": 207, "2394": 207, "2396": 207, "2398": 207, "2400": 207, "2402": 207, "2404": 207, "2406": 207, "2408": 207, "2410": 207, "2412": 207, "2414": 207, "2416": 207, "2418": 207, "2420": 207, "2422": 207, "2424": 207, "2426": 207, "2428": 207, "2430": 207, "2432": 207, "2434": 207, "2436": 207, "2438": 207, "2440": 207, "2442": 207, "2444": 207, "2446": 207, "2448": 207, "2450": 207, "2452": 207, "2454": 207, "2456": 207, "2458": 207, "2460": [207, 677], "2462": 207, "2464": 207, "2466": 207, "2468": 207, "2470": 207, "2472": 207, "2474": 207, "2476": 207, "2478": 207, "2480": 207, "2482": 207, "2484": 207, "2486": 207, "2488": 207, "2490": 207, "2492": 207, "2494": 207, "2496": 207, "2498": 207, "2500": 207, "2502": 207, "2504": 207, "2506": 207, "2508": 207, "2510": 207, "2512": 207, "2514": 207, "2516": 207, "2518": 207, "2520": 207, "2522": 207, "2524": 207, "2526": 207, "2528": 207, "2530": 207, "2532": 207, "2534": 207, "2536": 207, "2538": 207, "2540": 207, "2542": 207, "2544": 207, "2546": 207, "2548": 207, "2550": 207, "2552": 207, "2554": 207, "2556": 207, "2558": 207, "2560": 207, "2562": 207, "2564": 207, "2566": 207, "2568": 207, "2570": 207, "2572": 207, "2574": 207, "2576": 207, "2578": 207, "2580": 207, "2582": 207, "2584": 207, "2586": 207, "2588": 207, "2590": 207, "2592": 207, "2594": 207, "2596": 207, "2598": 207, "2600": 207, "2602": 207, "2604": 207, "2606": 207, "2608": 207, "2610": 207, "2612": 207, "2614": 207, "2616": 207, "2618": 207, "2620": 207, "2622": 207, "2624": 207, "2626": 207, "2628": 207, "2630": 207, "2632": 207, "2634": 207, "2636": 207, "2638": 207, "2640": [207, 266], "2642": 207, "2644": 207, "2646": 207, "2648": 207, "2650": 207, "2652": 207, "2654": 207, "2656": 207, "2658": 207, "2660": 207, "2662": 207, "2664": 207, "2666": 207, "2668": 207, "2670": 207, "2672": 207, "2674": 207, "2676": 207, "2678": 207, "2680": 207, "2682": 207, "2684": 207, "2686": 207, "2688": 207, "2690": 207, "2692": 207, "2694": 207, "2696": 207, "2698": 207, "2700": 207, "2702": 207, "2704": 207, "2706": 207, "2708": 207, "2710": 207, "2712": 207, "2714": 207, "2716": 207, "2718": 207, "2720": 207, "2722": 207, "2724": 207, "2726": 207, "2728": 207, "2730": [207, 262], "2732": 207, "2734": 207, "2736": 207, "2738": 207, "2740": 207, "2742": 207, "2744": 207, "2746": [207, 840, 866, 890], "2748": [207, 227, 245, 252], "2750": 207, "2752": 207, "2754": 207, "2756": 207, "2758": 207, "2760": 207, "2762": 207, "2764": 207, "2766": 207, "2768": 207, "2770": 207, "2772": 207, "2774": 207, "2776": 207, "2778": 207, "2780": 207, "2782": 207, "2784": 207, "2786": 207, "2788": 207, "2790": 207, "2792": 207, "2794": 207, "2796": 207, "2798": 207, "2800": [207, 250, 411], "2802": [207, 411], "2804": 207, "2806": 207, "2808": 207, "2810": 207, "2812": 207, "2814": 207, "2816": 207, "2818": 207, "2820": 207, "2822": 207, "2824": 207, "2826": 207, "2828": [207, 405], "2830": 207, "2832": 207, "2834": 207, "2836": 207, "2838": 207, "2840": 207, "2842": 207, "2844": 207, "2846": 207, "2848": 207, "2850": 207, "2852": 207, "2854": 207, "2856": 207, "2858": 207, "2860": 207, "2862": 207, "2864": 207, "2866": 207, "2868": 207, "2870": 207, "2872": 207, "2874": 207, "2876": 207, "2878": 207, "2880": 207, "2882": 207, "2884": 207, "2886": 207, "2888": 207, "2890": 207, "2892": 207, "2894": 207, "2896": 207, "2898": 207, "2900": 207, "2902": 207, "2904": 207, "2906": 207, "2910": 207, "2912": 207, "2914": 207, "2916": 207, "2918": 207, "2920": 207, "2922": 207, "2924": 207, "2926": 207, "2928": 207, "2930": 207, "2932": 207, "2934": 207, "2936": 207, "2938": 207, "2940": 207, "2942": 207, "2944": 207, "2946": 207, "2948": 207, "2950": 207, "2952": 207, "2954": 207, "2956": 207, "2958": 207, "2960": 207, "2962": 207, "2964": 207, "2966": 207, "2968": 207, "2970": 207, "2972": 207, "2974": 207, "2976": 207, "2978": 207, "2980": 207, "2982": 207, "2984": 207, "2986": 207, "2988": 207, "2990": 207, "2992": 207, "2994": 207, "2996": 207, "2998": 207, "3002": 207, "3004": 207, "3006": 207, "3008": 207, "3010": 207, "3012": 207, "3014": 207, "3016": 207, "3018": 207, "3020": 207, "3022": 207, "3024": 207, "3026": 207, "3028": 207, "3030": 207, "3032": 207, "3034": 207, "3036": 207, "3038": 207, "3040": 207, "3042": 207, "3044": 207, "3046": 207, "3048": 207, "3050": 207, "3052": 207, "3054": 207, "3056": 207, "3058": 207, "3060": 207, "3062": 207, "3064": 207, "3066": 207, "3068": 207, "3070": 207, "3072": 207, "3074": 207, "3076": 207, "3078": 207, "3080": 207, "3082": 207, "3084": 207, "3086": 207, "3088": 207, "3090": 207, "3092": 207, "3094": 207, "3096": 207, "3098": 207, "3100": 207, "3102": 207, "3104": 207, "3106": 207, "3108": 207, "3110": [207, 256], "3112": 207, "3114": 207, "3116": 207, "3118": 207, "3120": 207, "3122": 207, "3124": 207, "3126": 207, "3128": 207, "3130": 207, "3132": 207, "3134": 207, "3136": 207, "3138": 207, "3140": 207, "3142": 207, "3144": 207, "3146": 207, "3148": 207, "3150": 207, "3152": 207, "3154": 207, "3156": 207, "3158": 207, "3160": 207, "3162": 207, "3164": 207, "3166": 207, "3168": 207, "3170": 207, "3172": 207, "3174": 207, "3176": 207, "3178": 207, "3180": 207, "3182": 207, "3184": 207, "3186": 207, "3188": 207, "3190": 207, "3192": 207, "3194": 207, "3196": 207, "3198": 207, "3200": 207, "3202": 207, "3204": 207, "3206": 207, "3208": 207, "3210": 207, "3212": 207, "3214": 207, "3216": 207, "3218": 207, "3220": 207, "3222": 207, "3224": 207, "3226": 207, "3228": 207, "3230": 207, "3232": 207, "3234": 207, "3236": 207, "3238": 207, "3240": 207, "3242": 207, "3244": 207, "3246": 207, "3248": 207, "3250": 207, "3252": 207, "3254": 207, "3256": 207, "3258": 207, "3260": 207, "3262": 207, "3264": 207, "3266": 207, "3268": 207, "3270": 207, "3272": 207, "3274": 207, "3276": 207, "3278": 207, "3280": 207, "3282": 207, "3284": 207, "3286": 207, "3288": 207, "3290": 207, "3292": 207, "3294": 207, "3296": 207, "3298": 207, "3300": 207, "3302": 207, "3304": 207, "3306": 207, "3308": 207, "3310": 207, "3312": 207, "3314": 207, "3316": 207, "3318": 207, "3320": 207, "3322": 207, "3324": 207, "3326": 207, "3328": 207, "3330": 207, "3332": 207, "3334": 207, "3336": 207, "3338": 207, "3340": 207, "3342": 207, "3344": 207, "3346": 207, "3348": 207, "3350": 207, "3352": 207, "3354": 207, "3356": 207, "3358": 207, "3360": 207, "3362": 207, "3364": 207, "3366": 207, "3368": 207, "3370": 207, "3372": 207, "3374": 207, "3376": 207, "3378": 207, "3380": 207, "3382": 207, "3384": 207, "3386": 207, "3388": 207, "3390": 207, "3392": 207, "3394": 207, "3396": 207, "3398": 207, "3400": 207, "3402": 207, "3404": 207, "3406": 207, "3408": 207, "3410": 207, "3412": 207, "3414": 207, "3416": 207, "3418": 207, "3420": 207, "3422": 207, "3424": 207, "3426": 207, "3428": 207, "3430": 207, "3432": 207, "3434": 207, "3436": 207, "3438": 207, "3440": 207, "3442": 207, "3444": 207, "3446": 207, "3448": 207, "3450": 207, "3452": 207, "3454": 207, "3456": 207, "3458": 207, "3460": 207, "3462": 207, "3464": 207, "3466": 207, "3468": 207, "3470": 207, "3472": 207, "3474": 207, "3476": 207, "3478": 207, "3480": 207, "3482": 207, "3484": 207, "3486": 207, "3488": 207, "3490": 207, "3492": 207, "3494": 207, "3496": 207, "3498": 207, "3500": 207, "3502": 207, "3504": 207, "3506": 207, "3508": 207, "3510": 207, "3512": 207, "3514": 207, "3516": 207, "3518": 207, "3520": 207, "3522": 207, "3524": 207, "3526": 207, "3528": 207, "3530": 207, "3532": 207, "3534": 207, "3536": 207, "3538": 207, "3540": 207, "3542": 207, "3544": 207, "3546": 207, "3548": 207, "3550": 207, "3552": 207, "3554": 207, "3556": 207, "3558": 207, "3560": 207, "3562": 207, "3564": 207, "3566": 207, "3568": 207, "3570": 207, "3572": 207, "3574": 207, "3576": 207, "3578": 207, "3580": 207, "3582": 207, "3584": 207, "3586": 207, "3588": 207, "3590": 207, "3592": 207, "3594": 207, "3596": 207, "3598": 207, "3602": 207, "3604": 207, "3606": 207, "3608": 207, "3610": 207, "3612": 207, "3614": 207, "3616": 207, "3618": 207, "3620": [207, 1081], "3622": [207, 1081], "3624": [207, 1081], "3626": 207, "3628": 207, "3630": 207, "3632": 207, "3634": 207, "3636": 207, "3638": 207, "3640": 207, "3642": 207, "3644": 207, "3646": 207, "3648": 207, "3650": 207, "3652": 207, "3654": 207, "3656": 207, "3658": 207, "3660": 207, "3662": 207, "3664": 207, "3666": 207, "3668": 207, "3670": 207, "3672": 207, "3674": 207, "3676": 207, "3678": 207, "3680": 207, "3682": 207, "3684": 207, "3686": 207, "3688": 207, "3690": 207, "3692": 207, "3694": 207, "3696": 207, "3698": 207, "3700": 207, "3702": 207, "3704": 207, "3706": 207, "3708": 207, "3710": 207, "3712": 207, "3714": 207, "3716": 207, "3718": 207, "3720": 207, "3722": [207, 887], "3724": 207, "3726": 207, "3728": 207, "3730": 207, "3732": 207, "3734": 207, "3736": 207, "3738": 207, "3740": 207, "3742": 207, "3744": 207, "3746": 207, "3748": 207, "3750": 207, "3752": 207, "3754": 207, "3756": 207, "3758": 207, "3760": 207, "3762": 207, "3764": 207, "3766": 207, "3768": 207, "3770": [207, 256], "3772": 207, "3774": 207, "3776": 207, "3778": 207, "3780": 207, "3782": 207, "3784": 207, "3786": 207, "3788": 207, "3790": 207, "3792": 207, "3794": 207, "3796": 207, "3798": 207, "3800": 207, "3802": 207, "3804": 207, "3806": 207, "3808": 207, "3810": 207, "3812": 207, "3814": 207, "3816": 207, "3818": 207, "3820": 207, "3822": 207, "3824": 207, "3826": 207, "3828": 207, "3830": 207, "3832": 207, "3834": 207, "3836": 207, "3838": 207, "3840": 207, "3842": 207, "3844": 207, "3846": 207, "3848": 207, "3850": 207, "3852": 207, "3854": 207, "3856": 207, "3858": 207, "3860": 207, "3862": 207, "3864": 207, "3866": 207, "3868": 207, "3870": 207, "3872": 207, "3874": [207, 1081], "3876": [207, 1081], "3878": [207, 1081], "3880": 207, "3882": 207, "3884": 207, "3886": 207, "3888": 207, "3890": 207, "3892": 207, "3894": 207, "3896": 207, "3898": 207, "3900": 207, "3902": 207, "3904": 207, "3906": 207, "3908": 207, "3910": 207, "3912": 207, "3914": 207, "3916": 207, "3918": 207, "3920": 207, "3922": 207, "3924": 207, "3926": 207, "3928": 207, "3930": 207, "3932": 207, "3934": 207, "3936": 207, "3938": 207, "3940": 207, "3942": 207, "3946": 207, "3948": 207, "3950": 207, "3952": 207, "3954": 207, "3956": 207, "3958": 207, "3960": 207, "3962": 207, "3964": 207, "3966": 207, "3968": 207, "3970": 207, "3972": 207, "3974": 207, "3976": 207, "3978": 207, "3980": 207, "3982": 207, "3984": 207, "3986": 207, "3988": 207, "3990": 207, "3992": 207, "3994": 207, "3996": 207, "3998": 207, "4002": 207, "4004": 207, "4006": 207, "4008": 207, "4010": 207, "4012": 207, "4014": 207, "4016": 207, "4018": 207, "4020": 207, "4022": 207, "4024": 207, "4026": 207, "4028": 207, "4030": 207, "4032": 207, "4034": 207, "4036": 207, "4038": 207, "4040": 207, "4042": 207, "4044": 207, "4046": 207, "4048": 207, "4050": 207, "4052": 207, "4054": 207, "4056": 207, "4058": 207, "4060": 207, "4062": 207, "4064": 207, "4066": 207, "4068": 207, "4070": 207, "4072": 207, "4074": 207, "4076": 207, "4078": 207, "4080": 207, "4082": 207, "4084": 207, "4086": 207, "4088": 207, "4090": 207, "4092": 207, "4094": 207, "4098": 207, "4100": 207, "4102": 207, "4104": 207, "4106": 207, "4108": 207, "4110": 207, "4112": 207, "4114": 207, "4116": 207, "4118": 207, "4120": 207, "4122": 207, "4124": 207, "4126": 207, "4128": 207, "4130": 207, "4132": 207, "4134": 207, "4136": 207, "4138": 207, "4140": 207, "4142": 207, "4144": 207, "4146": 207, "4148": 207, "4150": 207, "4152": 207, "4154": 207, "4156": 207, "4158": 207, "4160": 207, "4162": 207, "4164": 207, "4166": 207, "4168": 207, "4170": 207, "4172": 207, "4174": 207, "4176": 207, "4178": 207, "4180": 207, "4182": 207, "4184": 207, "4186": 207, "4188": 207, "4190": 207, "4192": 207, "4194": 207, "4196": 207, "4198": 207, "4200": 207, "4202": 207, "4204": 207, "4206": 207, "4208": 207, "4210": 207, "4212": 207, "4214": 207, "4216": 207, "4218": 207, "4220": 207, "4222": 207, "4224": 207, "4226": 207, "4228": 207, "4230": 207, "4232": 207, "4234": 207, "4236": 207, "4238": 207, "4240": 207, "4242": 207, "4244": 207, "4246": 207, "4248": 207, "4250": 207, "4252": 207, "4254": 207, "4256": 207, "4258": 207, "4260": 207, "4262": 207, "4264": 207, "4266": 207, "4268": 207, "4270": 207, "4272": 207, "4274": 207, "4276": 207, "4278": 207, "4280": 207, "4282": 207, "4284": 207, "4286": 207, "4288": 207, "4290": 207, "4292": 207, "4294": 207, "4296": 207, "4298": 207, "4300": 207, "4302": 207, "4304": 207, "4306": 207, "4308": 207, "4310": 207, "4312": 207, "4314": 207, "4316": 207, "4318": 207, "4320": 207, "4322": 207, "4324": 207, "4326": 207, "4328": 207, "4330": 207, "4332": 207, "4334": 207, "4336": 207, "4338": 207, "4340": 207, "4342": 207, "4344": 207, "4346": 207, "4348": 207, "4350": 207, "4352": 207, "4354": 207, "4356": 207, "4358": 207, "4360": 207, "4362": 207, "4364": 207, "4366": 207, "4368": 207, "4370": 207, "4372": 207, "4374": 207, "4376": 207, "4378": 207, "4380": 207, "4382": 207, "4384": 207, "4386": 207, "4388": 207, "4390": 207, "4392": 207, "4394": 207, "4396": 207, "4398": 207, "4400": 207, "4402": 207, "4404": 207, "4406": 207, "4408": 207, "4410": 207, "4412": 207, "4414": 207, "4416": 207, "4418": 207, "4420": 207, "4422": 207, "4424": 207, "4426": 207, "4428": 207, "4430": 207, "4432": 207, "4434": 207, "4436": 207, "4438": 207, "4440": 207, "4442": 207, "4444": 207, "4446": 207, "4448": 207, "4450": 207, "4452": 207, "4454": 207, "4456": 207, "4458": 207, "4460": 207, "4462": 207, "4464": 207, "4466": 207, "4468": 207, "4470": 207, "4472": 207, "4474": 207, "4476": 207, "4478": 207, "4480": 207, "4482": 207, "4484": 207, "4486": 207, "4488": 207, "4490": 207, "4492": 207, "4494": 207, "4496": 207, "4498": 207, "4502": 207, "4504": 207, "4506": 207, "4508": 207, "4510": 207, "4512": 207, "4514": 207, "4516": 207, "4518": 207, "4520": 207, "4522": 207, "4524": 207, "4526": 207, "4528": 207, "4530": 207, "4532": 207, "4534": 207, "4536": 207, "4538": 207, "4540": 207, "4542": 207, "4544": 207, "4546": 207, "4548": 207, "4550": 207, "4552": 207, "4554": 207, "4556": 207, "4558": 207, "4560": 207, "4562": 207, "4564": 207, "4566": 207, "4568": 207, "4570": 207, "4572": 207, "4574": 207, "4578": 207, "4580": 207, "4582": 207, "4584": 207, "4586": 207, "4588": 207, "4590": 207, "4592": 207, "4594": 207, "4596": 207, "4598": 207, "4600": 207, "4602": 207, "4604": 207, "4606": 207, "4608": 207, "4610": 207, "4612": 207, "4614": 207, "4616": 207, "4618": 207, "4620": 207, "4622": 207, "4624": 207, "4626": 207, "4628": [207, 220], "4630": [207, 405], "4632": 207, "4634": 207, "4636": 207, "4638": 207, "4640": 207, "4642": 207, "4644": 207, "4646": 207, "4648": 207, "4650": 207, "4652": 207, "4654": 207, "4656": 207, "4658": 207, "4662": 207, "4664": 207, "4666": 207, "4668": 207, "4670": 207, "4672": 207, "4674": 207, "4676": 207, "4680": 207, "4682": 207, "4684": 207, "4686": 207, "4688": 207, "4690": 207, "4692": 207, "4694": 207, "4696": 207, "4698": 207, "4700": 207, "4702": 207, "4704": 207, "4706": 207, "4708": 207, "4710": 207, "4712": 207, "4714": 207, "4716": 207, "4718": 207, "4720": 207, "4722": 207, "4724": 207, "4726": 207, "4728": 207, "4730": 207, "4732": 207, "4734": 207, "4736": 207, "4738": 207, "4740": 207, "4742": 207, "4744": 207, "4746": 207, "4748": 207, "4750": 207, "4752": 207, "4754": 207, "4756": 207, "4758": 207, "4760": 207, "4762": 207, "4764": 207, "4766": 207, "4768": 207, "4770": 207, "4772": 207, "4774": 207, "4776": 207, "4778": 207, "4780": 207, "4782": 207, "4784": 207, "4786": 207, "4788": 207, "4790": 207, "4792": 207, "4794": 207, "4796": 207, "4798": 207, "4802": 207, "4804": 207, "4806": 207, "4808": 207, "4810": 207, "4812": 207, "4814": 207, "4816": 207, "4818": 207, "4820": 207, "4822": 207, "4824": 207, "4826": 207, "4828": 207, "4830": 207, "4832": 207, "4834": 207, "4836": 207, "4838": 207, "4840": 207, "4842": 207, "4844": 207, "4846": 207, "4848": 207, "4850": 207, "4852": 207, "4854": 207, "4856": 207, "4858": 207, "4860": 207, "4862": 207, "4864": 207, "4866": [207, 217], "4868": 207, "4870": 207, "4872": 207, "4874": 207, "4876": 207, "4878": 207, "4880": 207, "4882": [207, 803], "4884": 207, "4886": 207, "4888": 207, "4890": 207, "4892": 207, "4894": 207, "4896": 207, "4898": 207, "4900": 207, "4902": 207, "4904": 207, "4906": 207, "4908": 207, "4910": 207, "4912": 207, "4914": 207, "4916": 207, "4918": 207, "4920": 207, "4922": 207, "4924": 207, "4926": [207, 220], "4928": 207, "4930": 207, "4932": 207, "4934": 207, "4936": 207, "4938": 207, "4940": 207, "4942": 207, "4944": 207, "4946": 207, "4948": 207, "4950": [207, 224], "4952": 207, "4954": 207, "4956": 207, "4958": 207, "4960": 207, "4962": 207, "4964": 207, "4966": 207, "4968": 207, "4970": 207, "4972": 207, "4974": 207, "4976": 207, "4978": 207, "4980": 207, "4982": 207, "4984": 207, "4986": 207, "4988": 207, "4990": 207, "4992": 207, "4994": 207, "4996": 207, "4998": 207, "5002": 207, "5004": 207, "5006": 207, "5008": 207, "5010": 207, "5012": 207, "5014": 207, "5016": 207, "5018": 207, "5020": 207, "5022": 207, "5024": 207, "5026": 207, "5028": 207, "5030": 207, "5032": 207, "5034": 207, "5036": 207, "5038": 207, "5040": 207, "5042": 207, "5044": 207, "5046": 207, "5048": 207, "5052": 207, "5054": 207, "5056": 207, "5058": 207, "5060": 207, "5062": 207, "5064": 207, "5066": 207, "5068": 207, "5070": 207, "5072": 207, "5074": 207, "5076": 207, "5078": 207, "5080": [207, 840], "5082": 207, "5084": 207, "5086": 207, "5088": 207, "5090": 207, "5092": 207, "5094": 207, "5096": 207, "5098": 207, "5100": 207, "5102": 207, "5104": 207, "5106": 207, "5108": 207, "5110": 207, "5112": 207, "5114": 207, "5116": 207, "5118": 207, "5120": 207, "5122": 207, "5124": 207, "5126": 207, "5128": 207, "5130": 207, "5132": 207, "5134": 207, "5136": 207, "5138": 207, "5140": 207, "5142": 207, "5144": 207, "5146": 207, "5148": 207, "5150": 207, "5152": 207, "5154": 207, "5156": 207, "5158": 207, "5160": 207, "5162": 207, "5164": 207, "5166": 207, "5168": 207, "5170": 207, "5172": 207, "5174": 207, "5176": 207, "5178": 207, "5180": 207, "5182": 207, "5184": 207, "5186": 207, "5188": 207, "5190": 207, "5192": 207, "5194": 207, "5196": 207, "5198": 207, "5200": 207, "5202": 207, "5204": 207, "5206": 207, "5208": 207, "5210": 207, "5212": 207, "5214": 207, "5216": 207, "5218": 207, "5220": 207, "5222": 207, "5224": 207, "5226": 207, "5228": 207, "5230": 207, "5232": 207, "5234": 207, "5236": 207, "5238": 207, "5240": 207, "5242": 207, "5244": 207, "5246": 207, "5248": 207, "5250": 207, "5252": 207, "5254": 207, "5256": 207, "5258": 207, "5260": 207, "5262": 207, "5264": 207, "5266": 207, "5268": 207, "5270": 207, "5272": 207, "5274": 207, "5276": 207, "5278": 207, "5280": 207, "5282": 207, "5284": 207, "5286": 207, "5288": 207, "5290": 207, "5292": 207, "5294": 207, "5296": 207, "5298": 207, "5300": 207, "5302": 207, "5304": 207, "5306": 207, "5308": 207, "5310": 207, "5312": 207, "5314": 207, "5316": 207, "5318": 207, "5320": 207, "5322": 207, "5324": 207, "5326": 207, "5328": 207, "5330": 207, "5332": 207, "5334": 207, "5336": 207, "5338": 207, "5340": 207, "5342": 207, "5344": 207, "5346": 207, "5348": 207, "5350": 207, "5352": 207, "5354": 207, "5356": 207, "5358": 207, "5360": 207, "5362": [207, 250, 411], "5364": 207, "5366": 207, "5368": 207, "5370": 207, "5372": 207, "5374": 207, "5376": 207, "5378": 207, "5380": 207, "5382": 207, "5384": 207, "5386": 207, "5388": 207, "5390": 207, "5392": 207, "5394": 207, "5396": 207, "5398": 207, "5400": 207, "5402": 207, "5404": 207, "5406": 207, "5408": 207, "5410": [207, 405], "5412": 207, "5414": 207, "5416": 207, "5418": 207, "5420": 207, "5422": 207, "5424": 207, "5426": 207, "5428": 207, "5430": 207, "5432": 207, "5434": 207, "5436": 207, "5438": 207, "5440": 207, "5442": 207, "5444": 207, "5446": 207, "5448": 207, "5450": 207, "5452": 207, "5454": 207, "5456": 207, "5458": 207, "5460": 207, "5462": 207, "5464": 207, "5466": 207, "5468": 207, "5470": 207, "5472": 207, "5474": 207, "5476": 207, "5478": 207, "5480": 207, "5482": 207, "5484": 207, "5486": 207, "5488": 207, "5490": 207, "5492": 207, "5494": 207, "5496": 207, "5498": 207, "5500": 207, "5502": 207, "5504": 207, "5506": 207, "5508": 207, "5510": 207, "5512": 207, "5514": 207, "5516": 207, "5518": 207, "5520": 207, "5522": 207, "5524": 207, "5526": 207, "5528": 207, "5530": 207, "5532": 207, "5534": 207, "5536": 207, "5538": 207, "5540": 207, "5542": 207, "5544": 207, "5546": 207, "5548": 207, "5550": 207, "5552": 207, "5554": 207, "5556": 207, "5558": 207, "5560": 207, "5562": 207, "5564": 207, "5566": 207, "5568": 207, "5570": 207, "5572": 207, "5574": 207, "5576": 207, "5578": 207, "5580": 207, "5582": 207, "5584": 207, "5586": 207, "5588": 207, "5590": 207, "5592": 207, "5594": 207, "5596": 207, "5598": 207, "5600": 207, "5602": 207, "5604": 207, "5606": 207, "5608": 207, "5610": 207, "5612": 207, "5614": 207, "5616": 207, "5618": 207, "5620": 207, "5622": 207, "5624": 207, "5626": 207, "5628": 207, "5630": 207, "5632": 207, "5634": 207, "5636": 207, "5638": 207, "5640": 207, "5642": 207, "5644": 207, "5646": 207, "5648": 207, "5650": 207, "5652": 207, "5654": 207, "5656": 207, "5658": 207, "5660": 207, "5662": 207, "5664": 207, "5666": 207, "5668": 207, "5670": 207, "5672": 207, "5674": 207, "5676": 207, "5678": [207, 873], "5680": 207, "5682": 207, "5684": 207, "5686": 207, "5688": 207, "5690": 207, "5692": 207, "5694": 207, "5696": 207, "5698": 207, "5700": 207, "5702": 207, "5704": 207, "5706": 207, "5708": 207, "5710": 207, "5712": 207, "5714": 207, "5716": 207, "5718": 207, "5720": 207, "5722": 207, "5724": 207, "5726": 207, "5728": 207, "5730": 207, "5732": 207, "5734": 207, "5736": 207, "5738": 207, "5740": 207, "5742": 207, "5744": 207, "5746": 207, "5748": 207, "5750": 207, "5752": 207, "5754": 207, "5756": 207, "5758": 207, "5760": 207, "5762": 207, "5764": 207, "5766": 207, "5768": 207, "5770": 207, "5772": 207, "5774": 207, "5776": 207, "5778": 207, "5780": 207, "5782": 207, "5784": 207, "5786": 207, "5788": 207, "5790": 207, "5792": 207, "5794": 207, "5796": 207, "5798": 207, "5800": 207, "5802": 207, "5804": 207, "5806": 207, "5808": 207, "5810": 207, "5812": 207, "5814": 207, "5816": 207, "5818": 207, "5820": 207, "5822": 207, "5824": 207, "5826": 207, "5828": 207, "5830": 207, "5832": [207, 217], "5834": 207, "5836": 207, "5838": 207, "5840": 207, "5842": 207, "5844": 207, "5846": 207, "5848": 207, "5850": 207, "5852": 207, "5854": 207, "5856": 207, "5858": 207, "5860": 207, "5862": 207, "5864": 207, "5866": 207, "5868": 207, "5870": 207, "5872": 207, "5874": 207, "5876": 207, "5878": 207, "5880": 207, "5882": 207, "5884": 207, "5886": 207, "5888": 207, "5890": 207, "5892": 207, "5894": 207, "5896": 207, "5898": 207, "5900": 207, "5902": 207, "5904": 207, "5906": 207, "5908": 207, "5910": 207, "5912": 207, "5914": 207, "5916": 207, "5918": 207, "5920": 207, "5922": 207, "5924": 207, "5926": 207, "5928": 207, "5930": 207, "5932": 207, "5934": 207, "5936": 207, "5938": 207, "5940": 207, "5942": 207, "5944": 207, "5946": 207, "5948": 207, "5950": 207, "5952": 207, "5954": 207, "5956": 207, "5958": 207, "5960": 207, "5962": 207, "5964": 207, "5966": 207, "5968": 207, "5970": 207, "5972": 207, "5974": 207, "5976": 207, "5978": 207, "5980": 207, "5982": 207, "5984": 207, "5986": 207, "5988": 207, "5990": 207, "5992": 207, "5994": 207, "5996": 207, "5998": 207, "6000": [207, 972], "6002": 207, "6004": 207, "6006": 207, "6008": 207, "6010": 207, "6012": 207, "6014": 207, "6016": 207, "6018": 207, "6020": 207, "6022": 207, "6024": 207, "6026": 207, "6028": 207, "6030": 207, "6032": 207, "6034": 207, "6036": 207, "6038": 207, "6040": 207, "6042": 207, "6044": 207, "6046": 207, "6048": 207, "6050": 207, "6052": 207, "6054": 207, "6056": 207, "6058": 207, "6060": 207, "6062": 207, "6064": 207, "6066": 207, "6068": 207, "6070": 207, "6072": 207, "6074": 207, "6076": 207, "6078": 207, "6080": 207, "6082": 207, "6084": 207, "6086": 207, "6088": 207, "6090": 207, "6092": 207, "6094": 207, "6096": 207, "6098": 207, "6100": 207, "6102": 207, "6104": 207, "6106": 207, "6108": 207, "6110": 207, "6112": 207, "6114": 207, "6116": 207, "6118": 207, "6120": 207, "6122": 207, "6124": 207, "6126": 207, "6128": 207, "6130": 207, "6132": 207, "6134": 207, "6136": 207, "6138": 207, "6140": 207, "6142": 207, "6144": 207, "6146": 207, "6148": 207, "6150": 207, "6152": 207, "6154": 207, "6156": 207, "6158": 207, "6160": 207, "6162": 207, "6164": 207, "6166": 207, "6168": 207, "6170": 207, "6172": 207, "6174": 207, "6176": 207, "6178": 207, "6180": 207, "6182": 207, "6184": 207, "6186": 207, "6188": 207, "6190": 207, "6192": 207, "6194": 207, "6196": 207, "6198": 207, "6200": 207, "6202": 207, "6204": 207, "6206": 207, "6208": 207, "6210": 207, "6212": 207, "6214": 207, "6216": 207, "6218": 207, "6220": 207, "6222": 207, "6224": 207, "6226": 207, "6228": 207, "6230": 207, "6232": 207, "6234": 207, "6236": 207, "6238": 207, "6240": 207, "6242": 207, "6244": 207, "6246": 207, "6248": 207, "6250": 207, "6252": 207, "6254": 207, "6256": 207, "6258": 207, "6260": 207, "6262": 207, "6264": 207, "6266": 207, "6268": 207, "6270": 207, "6272": 207, "6274": 207, "6276": 207, "6278": 207, "6280": 207, "6282": 207, "6284": 207, "6286": 207, "6288": 207, "6290": 207, "6292": 207, "6294": 207, "6296": 207, "6298": 207, "6300": 207, "6302": 207, "6304": 207, "6306": 207, "6308": 207, "6310": 207, "6312": 207, "6314": 207, "6316": 207, "6318": 207, "6320": 207, "6322": 207, "6324": 207, "6326": 207, "6328": 207, "6330": 207, "6332": 207, "6334": 207, "6336": 207, "6338": 207, "6340": 207, "6342": 207, "6344": 207, "6346": 207, "6348": 207, "6350": 207, "6352": 207, "6354": 207, "6356": 207, "6358": 207, "6360": 207, "6362": 207, "6364": 207, "6366": 207, "6368": 207, "6370": 207, "6372": 207, "6374": 207, "6376": 207, "6378": 207, "6380": 207, "6382": 207, "6384": 207, "6386": 207, "6388": 207, "6390": 207, "6392": 207, "6394": 207, "6396": 207, "6398": 207, "6400": 207, "6402": 207, "6404": 207, "6406": 207, "6408": 207, "6410": 207, "6412": 207, "6414": 207, "6416": 207, "6418": 207, "6420": 207, "6422": 207, "6424": 207, "6426": 207, "6428": 207, "6430": 207, "6432": 207, "6434": 207, "6436": 207, "6438": 207, "6440": 207, "6442": 207, "6444": 207, "6446": 207, "6448": 207, "6450": 207, "6452": 207, "6454": 207, "6456": 207, "6458": 207, "6460": 207, "6462": 207, "6464": 207, "6466": 207, "6468": 207, "6470": 207, "6472": 207, "6474": 207, "6476": 207, "6478": 207, "6480": 207, "6482": 207, "6484": 207, "6486": 207, "6488": 207, "6490": 207, "6492": 207, "6494": 207, "6496": 207, "6498": 207, "6500": 207, "6502": 207, "6504": 207, "6506": 207, "6508": 207, "6510": 207, "6512": 207, "6514": 207, "6516": 207, "6518": 207, "6520": 207, "6522": 207, "6524": 207, "6526": 207, "6528": 207, "6530": 207, "6532": 207, "6534": 207, "6536": 207, "6538": 207, "6540": 207, "6542": 207, "6544": 207, "6546": 207, "6548": 207, "6550": 207, "6552": 207, "6554": 207, "6556": 207, "6558": 207, "6560": 207, "6562": 207, "6564": 207, "6566": 207, "6568": 207, "6570": 207, "6572": 207, "6574": 207, "6576": 207, "6578": 207, "6580": 207, "6582": 207, "6584": 207, "6586": 207, "6588": 207, "6590": 207, "6592": 207, "6594": 207, "6596": 207, "6598": 207, "6600": 207, "6602": 207, "6604": 207, "6606": 207, "6608": 207, "6610": 207, "6612": 207, "6614": 207, "6616": 207, "6618": 207, "6620": 207, "6622": 207, "6624": 207, "6626": 207, "6628": 207, "6630": 207, "6632": 207, "6634": 207, "6636": 207, "6638": 207, "6640": 207, "6642": 207, "6644": 207, "6646": 207, "6648": 207, "6650": 207, "6652": 207, "6654": 207, "6656": 207, "6658": 207, "6660": 207, "6662": 207, "6664": 207, "6666": 207, "6668": 207, "6670": 207, "6672": 207, "6674": 207, "6676": 207, "6678": 207, "6680": 207, "6682": 207, "6684": 207, "6686": 207, "6688": 207, "6690": 207, "6692": 207, "6694": 207, "6696": 207, "6698": 207, "6700": 207, "6702": 207, "6704": 207, "6706": 207, "6708": 207, "6710": 207, "6714": 207, "6716": [207, 230], "6718": 207, "6720": 207, "6722": 207, "6724": 207, "6726": 207, "6728": 207, "6730": 207, "6732": 207, "6734": 207, "6736": 207, "6738": 207, "6740": 207, "6742": 207, "6744": 207, "6746": 207, "6748": 207, "6750": 207, "6752": 207, "6754": 207, "6756": 207, "6758": 207, "6760": 207, "6762": 207, "6764": 207, "6766": 207, "6768": 207, "6770": 207, "6772": 207, "6774": 207, "6776": 207, "6778": 207, "6780": 207, "6782": 207, "6784": 207, "6786": 207, "6788": 207, "6790": 207, "6792": 207, "6794": 207, "6796": 207, "6798": 207, "6800": 207, "6802": 207, "6804": 207, "6806": 207, "6808": 207, "6810": 207, "6812": 207, "6814": 207, "6816": 207, "6818": 207, "6820": 207, "6822": 207, "6824": 207, "6826": 207, "6828": 207, "6830": 207, "6832": 207, "6834": 207, "6836": 207, "6838": 207, "6840": 207, "6842": 207, "6844": 207, "6846": 207, "6848": 207, "6850": 207, "6852": 207, "6854": 207, "6856": 207, "6858": [207, 256], "6860": 207, "6862": 207, "6864": 207, "6866": 207, "6868": 207, "6870": 207, "6872": 207, "6874": 207, "6876": 207, "6878": 207, "6880": 207, "6882": 207, "6884": 207, "6886": 207, "6888": 207, "6890": 207, "6892": 207, "6894": 207, "6896": 207, "6898": 207, "6900": 207, "6902": 207, "6904": 207, "6906": 207, "6908": 207, "6910": 207, "6912": 207, "6914": 207, "6916": 207, "6918": 207, "6920": 207, "6922": 207, "6924": 207, "6926": 207, "6928": 207, "6930": 207, "6932": 207, "6934": 207, "6936": 207, "6938": 207, "6940": 207, "6942": 207, "6944": 207, "6946": 207, "6948": 207, "6950": 207, "6952": 207, "6954": 207, "6956": 207, "6958": 207, "6960": 207, "6962": 207, "6964": 207, "6966": 207, "6968": 207, "6970": 207, "6972": 207, "6974": 207, "6976": 207, "6978": 207, "6980": 207, "6982": 207, "6984": 207, "6986": 207, "6988": 207, "6990": 207, "6992": 207, "6994": 207, "6996": 207, "6998": 207, "7000": 207, "7002": 207, "7004": 207, "7006": 207, "7008": 207, "7010": 207, "7012": 207, "7014": 207, "7016": 207, "7018": 207, "7020": 207, "7022": 207, "7024": 207, "7026": 207, "7028": 207, "7030": 207, "7032": 207, "7034": 207, "7036": 207, "7038": 207, "7040": 207, "7042": 207, "7044": 207, "7046": 207, "7048": 207, "7050": 207, "7052": 207, "7054": 207, "7056": 207, "7058": 207, "7060": 207, "7062": 207, "7064": 207, "7066": 207, "7068": 207, "7070": 207, "7072": 207, "7074": 207, "7076": 207, "7078": 207, "7080": 207, "7082": 207, "7084": 207, "7086": 207, "7088": 207, "7090": 207, "7092": 207, "7094": 207, "7096": 207, "7098": 207, "7100": 207, "7102": 207, "7104": 207, "7106": 207, "7108": 207, "7110": 207, "7112": 207, "7114": 207, "7116": 207, "7118": 207, "7120": 207, "7122": 207, "7124": 207, "7126": 207, "7128": 207, "7130": 207, "7132": 207, "7134": 207, "7136": 207, "7138": 207, "7140": 207, "7142": 207, "7144": 207, "7146": 207, "7148": 207, "7150": 207, "7152": 207, "7154": 207, "7156": 207, "7158": 207, "7160": 207, "7162": 207, "7164": 207, "7166": 207, "7168": 207, "7170": 207, "7172": 207, "7174": 207, "7176": 207, "7178": 207, "7180": 207, "7182": 207, "7184": 207, "7186": 207, "7188": 207, "7190": 207, "7192": 207, "7194": 207, "7196": 207, "7198": 207, "7200": 207, "7202": 207, "7204": 207, "7206": 207, "7208": 207, "7210": 207, "7212": 207, "7214": 207, "7216": 207, "7218": 207, "7220": 207, "7222": 207, "7224": 207, "7226": 207, "7228": 207, "7230": 207, "7232": 207, "7234": 207, "7236": 207, "7238": 207, "7240": 207, "7242": 207, "7244": 207, "7246": 207, "7248": 207, "7250": 207, "7252": 207, "7254": 207, "7256": 207, "7258": 207, "7260": 207, "7262": 207, "7264": 207, "7266": 207, "7268": 207, "7270": 207, "7272": 207, "7274": 207, "7276": 207, "7278": 207, "7280": 207, "7282": 207, "7284": 207, "7286": 207, "7288": 207, "7290": 207, "7292": 207, "7294": 207, "7296": 207, "7298": 207, "7300": 207, "7302": 207, "7304": 207, "7306": 207, "7308": 207, "7310": 207, "7312": 207, "7314": 207, "7316": 207, "7318": 207, "7320": 207, "7322": 207, "7324": 207, "7326": 207, "7328": 207, "7330": 207, "7332": 207, "7334": 207, "7336": 207, "7338": 207, "7340": 207, "7342": 207, "7344": 207, "7346": 207, "7348": 207, "7350": 207, "7352": 207, "7354": 207, "7356": 207, "7358": 207, "7360": 207, "7362": 207, "7364": 207, "7366": 207, "7368": 207, "7370": 207, "7372": 207, "7374": 207, "7376": 207, "7378": 207, "7380": 207, "7382": 207, "7384": 207, "7386": 207, "7388": 207, "7392": 207, "7394": 207, "7396": 207, "7398": 207, "7400": 207, "7402": 207, "7404": 207, "7406": 207, "7408": 207, "7410": 207, "7412": 207, "7414": 207, "7416": 207, "7418": 207, "7420": 207, "7422": 207, "7424": 207, "7426": 207, "7428": 207, "7430": 207, "7432": 207, "7434": 207, "7436": 207, "7438": 207, "7440": 207, "7442": 207, "7444": 207, "7446": 207, "7448": 207, "7450": 207, "7452": 207, "7454": 207, "7456": 207, "7458": 207, "7460": 207, "7462": 207, "7464": 207, "7466": 207, "7468": 207, "7470": 207, "7472": 207, "7474": 207, "7476": 207, "7478": 207, "7480": 207, "7482": 207, "7484": 207, "7486": 207, "7488": 207, "7490": 207, "7492": 207, "7494": 207, "7496": 207, "7498": 207, "7500": 207, "7502": 207, "7504": 207, "7506": 207, "7508": 207, "7510": 207, "7512": 207, "7514": 207, "7516": 207, "7518": 207, "7520": 207, "7522": 207, "7524": 207, "7526": 207, "7528": 207, "7530": 207, "7532": 207, "7534": 207, "7536": 207, "7538": 207, "7540": 207, "7542": 207, "7544": 207, "7546": 207, "7548": 207, "7550": 207, "7552": 207, "7554": 207, "7556": 207, "7558": 207, "7560": 207, "7562": 207, "7564": 207, "7566": 207, "7568": 207, "7570": 207, "7572": 207, "7574": 207, "7576": 207, "7578": 207, "7580": 207, "7582": 207, "7584": 207, "7586": 207, "7588": 207, "7590": 207, "7592": 207, "7594": 207, "7596": 207, "7598": 207, "7600": 207, "7602": 207, "7604": 207, "7606": 207, "7608": 207, "7610": 207, "7612": 207, "7614": 207, "7616": 207, "7618": 207, "7620": 207, "7622": 207, "7624": 207, "7626": 207, "7628": 207, "7630": 207, "7632": 207, "7634": 207, "7636": 207, "7638": 207, "7640": 207, "7642": 207, "7644": 207, "7646": 207, "7648": 207, "7650": 207, "7652": 207, "7654": 207, "7656": 207, "7658": 207, "7660": 207, "7662": 207, "7664": 207, "7666": 207, "7668": 207, "7670": 207, "7672": 207, "7674": 207, "7676": 207, "7678": 207, "7680": 207, "7682": 207, "7684": 207, "7686": 207, "7688": 207, "7690": 207, "7692": 207, "7694": 207, "7696": 207, "7698": 207, "7700": 207, "7702": 207, "7704": 207, "7706": 207, "7708": 207, "7710": 207, "7712": 207, "7714": 207, "7716": 207, "7718": 207, "7720": 207, "7722": 207, "7724": 207, "7726": 207, "7728": 207, "7730": 207, "7732": 207, "7734": 207, "7736": 207, "7738": 207, "7740": 207, "7742": 207, "7744": 207, "7746": 207, "7748": 207, "7750": 207, "7752": 207, "7754": 207, "7756": 207, "7758": 207, "7760": 207, "7762": 207, "7764": 207, "7766": 207, "7768": 207, "7770": 207, "7772": 207, "7774": 207, "7776": 207, "7778": 207, "7780": 207, "7782": 207, "7784": 207, "7786": 207, "7788": 207, "7790": 207, "7792": 207, "7794": 207, "7796": 207, "7798": 207, "7800": 207, "7802": 207, "7804": 207, "7806": 207, "7808": 207, "7810": 207, "7812": 207, "7814": 207, "7816": 207, "7818": 207, "7820": 207, "7822": 207, "7824": 207, "7826": 207, "7828": 207, "7830": 207, "7832": 207, "7834": 207, "7836": 207, "7838": 207, "7842": 207, "7844": 207, "7846": 207, "7848": 207, "7850": 207, "7852": 207, "7854": 207, "7856": 207, "7858": 207, "7860": 207, "7862": 207, "7864": 207, "7866": 207, "7868": 207, "7870": 207, "7872": 207, "7874": 207, "7878": 207, "7880": 207, "7882": 207, "7884": 207, "7886": 207, "7888": 207, "7890": 207, "7892": 207, "7894": 207, "7896": 207, "7898": 207, "7900": 207, "7902": 207, "7904": 207, "7906": 207, "7908": 207, "7910": 207, "7912": 207, "7914": 207, "7916": 207, "7918": 207, "7920": 207, "7922": 207, "7924": 207, "7926": 207, "7928": 207, "7930": 207, "7932": 207, "7934": 207, "7936": 207, "7938": 207, "7940": 207, "7942": 207, "7944": 207, "7946": 207, "7948": 207, "7950": 207, "7952": 207, "7954": 207, "7956": 207, "7958": 207, "7960": 207, "7962": 207, "7964": 207, "7966": 207, "7968": 207, "7970": 207, "7972": 207, "7974": 207, "7976": 207, "7978": 207, "7980": 207, "7982": 207, "7984": 207, "7986": 207, "7988": 207, "7990": 207, "7992": 207, "7994": 207, "7996": 207, "7998": 207, "8002": 207, "8004": 207, "8006": 207, "8008": 207, "8012": 207, "8014": 207, "8016": 207, "8018": 207, "8022": 207, "8024": 207, "8026": 207, "8028": 207, "8030": 207, "8032": 207, "8034": 207, "8036": 207, "8038": 207, "8040": 207, "8042": 207, "8044": 207, "8046": 207, "8048": 207, "8050": 207, "8052": 207, "8054": 207, "8056": 207, "8058": 207, "8060": 207, "8062": 207, "8064": 207, "8066": 207, "8068": 207, "8070": 207, "8072": 207, "8074": 207, "8076": 207, "8078": 207, "8080": 207, "8082": 207, "8084": 207, "8086": 207, "8088": 207, "8090": 207, "8092": 207, "8094": 207, "8096": 207, "8098": 207, "8100": 207, "8102": [207, 933, 934], "8104": 207, "8106": 207, "8108": 207, "8110": 207, "8112": 207, "8114": 207, "8116": 207, "8118": 207, "8120": 207, "8122": 207, "8124": 207, "8126": 207, "8128": 207, "8130": 207, "8132": 207, "8134": 207, "8136": 207, "8138": 207, "8140": 207, "8142": 207, "8144": 207, "8146": 207, "8148": 207, "8150": 207, "8152": 207, "8154": 207, "8156": 207, "8158": 207, "8160": 207, "8162": 207, "8164": 207, "8166": 207, "8168": 207, "8170": 207, "8172": 207, "8174": 207, "8176": 207, "8178": 207, "8180": 207, "8182": 207, "8184": 207, "8186": 207, "8188": 207, "8190": 207, "8194": 207, "8196": 207, "8198": 207, "8200": 207, "8202": 207, "8204": 207, "8206": 207, "8208": 207, "8210": 207, "8212": 207, "8214": 207, "8216": 207, "8218": 207, "8220": 207, "8222": 207, "8224": 207, "8226": 207, "8228": 207, "8230": 207, "8232": 207, "8234": 207, "8238": 207, "8240": 207, "8242": 207, "8244": 207, "8246": 207, "8248": 207, "8250": 207, "8252": 207, "8254": 207, "8256": 207, "8258": 207, "8260": [207, 758], "8262": 207, "8264": 207, "8266": 207, "8268": 207, "8270": 207, "8272": 207, "8274": 207, "8276": 207, "8278": 207, "8280": 207, "8282": 207, "8284": 207, "8286": 207, "8288": 207, "8290": 207, "8292": 207, "8294": 207, "8296": 207, "8298": 207, "8300": 207, "8302": 207, "8304": 207, "8306": 207, "8308": 207, "8310": 207, "8312": 207, "8314": 207, "8316": 207, "8318": 207, "8320": 207, "8322": 207, "8324": 207, "8326": 207, "8328": 207, "8330": 207, "8332": 207, "8334": 207, "8336": 207, "8338": 207, "8340": 207, "8342": 207, "8344": 207, "8346": 207, "8348": 207, "8350": 207, "8352": 207, "8354": 207, "8356": 207, "8358": 207, "8360": 207, "8362": 207, "8364": 207, "8366": 207, "8368": 207, "8370": 207, "8372": 207, "8374": 207, "8376": 207, "8378": 207, "8380": 207, "8382": 207, "8384": 207, "8386": 207, "8388": 207, "8390": 207, "8392": 207, "8394": 207, "8396": 207, "8398": 207, "8400": 207, "8402": 207, "8404": 207, "8406": 207, "8408": 207, "8410": 207, "8412": 207, "8414": 207, "8416": 207, "8418": 207, "8420": 207, "8422": 207, "8424": 207, "8426": 207, "8428": 207, "8430": 207, "8432": 207, "8434": 207, "8436": 207, "8438": 207, "8440": 207, "8442": 207, "8444": 207, "8446": 207, "8448": 207, "8450": 207, "8452": 207, "8454": 207, "8456": 207, "8458": 207, "8460": 207, "8464": 207, "8466": 207, "8468": 207, "8470": 207, "8472": 207, "8474": 207, "8476": 207, "8478": 207, "8480": 207, "8482": 207, "8484": 207, "8486": 207, "8488": 207, "8490": 207, "8492": 207, "8494": 207, "8496": 207, "8498": 207, "8500": 207, "8502": 207, "8504": 207, "8506": 207, "8508": 207, "8510": 207, "8512": 207, "8514": 207, "8516": 207, "8518": 207, "8520": 207, "8522": 207, "8524": 207, "8526": 207, "8528": 207, "8530": 207, "8532": 207, "8534": 207, "8536": 207, "8538": 207, "8540": 207, "8542": 207, "8544": 207, "8546": 207, "8548": 207, "8550": 207, "8552": 207, "8554": 207, "8556": 207, "8558": 207, "8560": 207, "8562": 207, "8564": 207, "8566": 207, "8568": 207, "8570": 207, "8572": 207, "8574": 207, "8576": 207, "8578": 207, "8580": 207, "8582": 207, "8584": 207, "8586": 207, "8588": 207, "8590": 207, "8592": 207, "8594": 207, "8596": 207, "8598": 207, "8600": 207, "8602": 207, "8604": 207, "8606": 207, "8608": 207, "8610": 207, "8612": 207, "8614": 207, "8616": 207, "8618": 207, "8620": 207, "8622": 207, "8624": 207, "8626": 207, "8628": 207, "8630": 207, "8632": 207, "8634": 207, "8636": 207, "8638": 207, "8640": 207, "8642": 207, "8644": 207, "8646": 207, "8648": 207, "8650": 207, "8652": 207, "8654": 207, "8656": 207, "8658": 207, "8660": 207, "8662": 207, "8664": 207, "8666": 207, "8668": 207, "8670": 207, "8672": 207, "8674": 207, "8676": 207, "8678": 207, "8680": 207, "8682": 207, "8684": 207, "8686": 207, "8688": 207, "8690": 207, "8692": 207, "8694": 207, "8696": 207, "8698": 207, "8700": 207, "8702": 207, "8704": 207, "8706": 207, "8708": 207, "8710": 207, "8712": 207, "8714": 207, "8716": 207, "8718": 207, "8720": 207, "8722": 207, "8724": 207, "8726": 207, "8728": 207, "8730": 207, "8732": 207, "8734": 207, "8736": 207, "8738": 207, "8740": 207, "8742": 207, "8744": 207, "8746": 207, "8748": 207, "8750": 207, "8752": 207, "8754": 207, "8756": 207, "8758": 207, "8760": 207, "8762": 207, "8764": 207, "8766": 207, "8768": 207, "8770": 207, "8772": 207, "8774": 207, "8776": 207, "8778": 207, "8780": 207, "8782": 207, "8784": 207, "8786": 207, "8788": 207, "8790": 207, "8792": 207, "8794": 207, "8796": 207, "8798": 207, "8800": 207, "8802": 207, "8804": 207, "8806": 207, "8808": 207, "8810": 207, "8812": 207, "8814": 207, "8816": 207, "8818": 207, "8820": 207, "8822": 207, "8824": 207, "8826": 207, "8828": 207, "8830": 207, "8832": 207, "8834": 207, "8836": 207, "8838": 207, "8840": 207, "8842": 207, "8844": 207, "8846": 207, "8848": 207, "8850": 207, "8852": 207, "8854": 207, "8856": 207, "8858": 207, "8860": 207, "8862": 207, "8864": 207, "8866": 207, "8868": 207, "8870": 207, "8872": 207, "8874": 207, "8876": 207, "8878": 207, "8880": 207, "8882": 207, "8884": 207, "8886": 207, "8888": 207, "8890": 207, "8892": 207, "8894": 207, "8896": 207, "8898": 207, "8900": 207, "8902": 207, "8904": 207, "8906": 207, "8908": 207, "8910": 207, "8912": 207, "8914": 207, "8916": 207, "8918": 207, "8920": 207, "8922": 207, "8924": 207, "8926": 207, "8928": 207, "8930": 207, "8932": 207, "8934": 207, "8936": 207, "8938": 207, "8940": 207, "8942": 207, "8944": 207, "8946": 207, "8948": 207, "8950": 207, "8952": 207, "8954": 207, "8956": 207, "8958": 207, "8960": 207, "8962": 207, "8964": 207, "8966": 207, "8968": 207, "8970": 207, "8972": 207, "8974": 207, "8976": 207, "8978": 207, "8980": 207, "8982": 207, "8984": 207, "8986": 207, "8988": 207, "8990": 207, "8992": 207, "8994": 207, "8996": 207, "8998": 207, "9002": 207, "9004": 207, "9006": 207, "9008": 207, "9010": 207, "9012": 207, "9014": 207, "9016": 207, "9018": 207, "9020": 207, "9022": 207, "9024": 207, "9026": 207, "9028": 207, "9030": 207, "9032": 207, "9034": 207, "9036": 207, "9038": 207, "9040": 207, "9042": 207, "9044": 207, "9046": 207, "9048": 207, "9050": 207, "9052": 207, "9054": 207, "9056": 207, "9058": 207, "9060": 207, "9062": 207, "9064": 207, "9066": 207, "9068": 207, "9070": 207, "9072": 207, "9074": 207, "9076": 207, "9078": 207, "9080": 207, "9082": 207, "9084": 207, "9086": 207, "9088": 207, "9090": 207, "9092": 207, "9094": 207, "9096": 207, "9098": 207, "9100": 207, "9102": 207, "9104": 207, "9106": 207, "9108": 207, "9110": 207, "9112": 207, "9114": 207, "9116": 207, "9118": 207, "9120": 207, "9122": 207, "9124": 207, "9126": 207, "9128": 207, "9130": 207, "9132": 207, "9134": 207, "9136": 207, "9138": 207, "9140": 207, "9142": 207, "9144": 207, "9146": 207, "9148": 207, "9150": 207, "9152": 207, "9154": 207, "9156": 207, "9158": 207, "9160": 207, "9162": 207, "9164": 207, "9166": 207, "9168": 207, "9170": 207, "9172": 207, "9174": 207, "9176": 207, "9178": 207, "9180": 207, "9182": 207, "9184": 207, "9186": 207, "9188": 207, "9190": 207, "9192": 207, "9194": 207, "9196": 207, "9198": 207, "9200": 207, "9202": 207, "9204": 207, "9206": 207, "9208": 207, "9210": 207, "9212": 207, "9214": 207, "9216": 207, "9218": 207, "9220": 207, "9222": 207, "9224": 207, "9226": 207, "9228": 207, "9230": 207, "9232": 207, "9234": 207, "9236": 207, "9238": 207, "9240": 207, "9242": 207, "9244": 207, "9246": 207, "9248": 207, "9250": 207, "9252": 207, "9254": 207, "9256": 207, "9258": 207, "9260": 207, "9262": 207, "9264": 207, "9266": 207, "9268": 207, "9270": 207, "9272": 207, "9274": 207, "9276": 207, "9278": 207, "9280": 207, "9282": 207, "9284": 207, "9286": 207, "9288": 207, "9290": 207, "9292": 207, "9294": 207, "9296": 207, "9298": 207, "9300": 207, "9302": 207, "9304": 207, "9306": 207, "9308": 207, "9310": 207, "9312": 207, "9314": 207, "9316": 207, "9318": 207, "9320": 207, "9322": 207, "9324": 207, "9326": 207, "9328": 207, "9330": 207, "9332": 207, "9334": 207, "9336": 207, "9338": 207, "9340": 207, "9342": 207, "9344": 207, "9346": 207, "9348": 207, "9350": 207, "9352": 207, "9354": 207, "9356": 207, "9358": 207, "9360": 207, "9362": 207, "9364": 207, "9366": 207, "9368": 207, "9370": 207, "9372": 207, "9374": 207, "9376": 207, "9378": 207, "9380": 207, "9382": 207, "9384": 207, "9386": 207, "9388": 207, "9390": 207, "9392": 207, "9394": [207, 818], "9396": 207, "9398": 207, "9400": 207, "9402": 207, "9404": 207, "9406": 207, "9408": 207, "9410": 207, "9412": 207, "9414": 207, "9416": 207, "9418": 207, "9420": 207, "9422": 207, "9424": 207, "9426": 207, "9428": 207, "9430": 207, "9432": 207, "9434": 207, "9436": 207, "9438": 207, "9440": 207, "9442": 207, "9444": 207, "9446": 207, "9448": 207, "9450": 207, "9452": 207, "9454": 207, "9456": 207, "9458": 207, "9460": 207, "9462": 207, "9464": 207, "9466": 207, "9468": 207, "9470": 207, "9472": 207, "9474": 207, "9476": 207, "9478": 207, "9480": 207, "9482": 207, "9484": 207, "9486": 207, "9488": 207, "9490": 207, "9492": 207, "9494": 207, "9496": 207, "9498": 207, "9500": 207, "9502": 207, "9504": 207, "9506": 207, "9508": 207, "9510": 207, "9512": 207, "9514": 207, "9516": 207, "9518": 207, "9520": 207, "9522": 207, "9524": 207, "9526": 207, "9528": 207, "9530": 207, "9532": 207, "9534": 207, "9536": 207, "9538": 207, "9540": 207, "9542": 207, "9544": 207, "9546": 207, "9548": 207, "9550": 207, "9552": 207, "9554": 207, "9556": 207, "9558": 207, "9560": 207, "9562": 207, "9564": 207, "9566": 207, "9568": 207, "9570": 207, "9572": 207, "9574": 207, "9576": 207, "9578": 207, "9580": 207, "9582": 207, "9584": 207, "9586": 207, "9588": 207, "9590": 207, "9592": 207, "9594": 207, "9596": 207, "9598": 207, "9600": 207, "9602": 207, "9604": 207, "9606": 207, "9608": 207, "9610": 207, "9612": 207, "9614": 207, "9616": 207, "9618": 207, "9620": 207, "9622": 207, "9624": 207, "9626": 207, "9628": 207, "9630": 207, "9632": 207, "9634": 207, "9636": 207, "9638": 207, "9640": 207, "9642": 207, "9644": 207, "9646": 207, "9648": 207, "9650": 207, "9652": 207, "9654": 207, "9656": 207, "9658": 207, "9660": 207, "9662": 207, "9664": 207, "9666": 207, "9668": 207, "9670": 207, "9672": 207, "9674": 207, "9676": 207, "9678": 207, "9680": 207, "9682": 207, "9684": 207, "9686": 207, "9688": 207, "9690": 207, "9692": 207, "9694": 207, "9696": 207, "9698": 207, "9700": 207, "9702": 207, "9704": 207, "9706": 207, "9708": 207, "9710": 207, "9712": 207, "9714": 207, "9716": 207, "9718": 207, "9720": 207, "9722": 207, "9724": 207, "9726": 207, "9728": 207, "9730": 207, "9732": 207, "9734": 207, "9736": 207, "9738": 207, "9740": 207, "9742": 207, "9744": 207, "9746": 207, "9748": 207, "9750": 207, "9752": 207, "9754": 207, "9756": 207, "9758": 207, "9760": 207, "9762": 207, "9764": 207, "9766": 207, "9768": [207, 217], "9770": 207, "9772": 207, "9774": 207, "9776": 207, "9778": 207, "9780": 207, "9782": 207, "9784": 207, "9786": 207, "9788": 207, "9790": 207, "9792": 207, "9794": 207, "9796": 207, "9798": 207, "9800": 207, "9802": 207, "9804": 207, "9806": 207, "9808": 207, "9810": 207, "9812": 207, "9814": 207, "9816": 207, "9818": 207, "9820": 207, "9822": 207, "9824": 207, "9826": 207, "9828": 207, "9830": 207, "9832": 207, "9834": 207, "9836": 207, "9838": 207, "9840": 207, "9842": 207, "9844": 207, "9846": 207, "9848": 207, "9850": 207, "9852": 207, "9854": 207, "9856": 207, "9858": 207, "9860": 207, "9862": 207, "9864": 207, "9866": 207, "9868": 207, "9870": 207, "9872": 207, "9874": 207, "9876": 207, "9878": 207, "9880": 207, "9882": 207, "9884": 207, "9886": 207, "9888": 207, "9890": 207, "9892": 207, "9894": 207, "9896": 207, "9898": 207, "9900": 207, "9902": 207, "9904": 207, "9906": 207, "9908": 207, "9910": 207, "9912": 207, "9914": 207, "9916": 207, "9918": 207, "9920": 207, "9922": 207, "9924": 207, "9926": 207, "9928": 207, "9930": 207, "9932": 207, "9934": 207, "9936": 207, "9938": 207, "9940": 207, "9942": 207, "9944": 207, "9946": 207, "9948": 207, "9950": 207, "9952": 207, "9954": 207, "9956": 207, "9958": 207, "9960": 207, "9962": 207, "9964": 207, "9966": 207, "9968": 207, "9970": 207, "9972": 207, "9974": 207, "9976": 207, "9978": 207, "9980": 207, "9982": 207, "9984": 207, "9986": 207, "9988": 207, "9990": 207, "9992": 207, "9994": 207, "9996": 207, "9998": 207, "10002": 207, "10004": 207, "10006": 207, "10008": 207, "10010": 207, "10012": 207, "10014": 207, "10016": 207, "10018": 207, "10020": 207, "10022": 207, "10024": 207, "10026": 207, "10028": 207, "10030": 207, "10032": 207, "10034": 207, "10036": 207, "10038": 207, "10040": 207, "10042": 207, "10044": 207, "10046": 207, "10048": 207, "10050": 207, "10052": 207, "10054": 207, "10056": 207, "10058": 207, "10060": 207, "10062": 207, "10064": 207, "10066": 207, "10068": 207, "10070": 207, "10072": 207, "10074": 207, "10076": 207, "10078": 207, "10080": 207, "10082": 207, "10084": 207, "10086": 207, "10088": 207, "10090": 207, "10092": 207, "10094": 207, "10096": 207, "10098": 207, "10100": 207, "10102": 207, "10104": 207, "10106": 207, "10108": 207, "10110": 207, "10112": 207, "10114": 207, "10116": 207, "10118": 207, "10120": 207, "10122": 207, "10124": 207, "10126": 207, "10128": 207, "10130": 207, "10132": 207, "10134": 207, "10136": 207, "10138": 207, "10140": 207, "10142": 207, "10144": 207, "10146": 207, "10148": 207, "10150": 207, "10152": 207, "10154": 207, "10156": 207, "10158": 207, "10160": 207, "10162": 207, "10164": 207, "10166": 207, "10168": 207, "10170": 207, "10172": 207, "10174": 207, "10176": 207, "10178": 207, "10180": 207, "10182": 207, "10184": 207, "10186": 207, "10188": 207, "10190": 207, "10192": 207, "10194": 207, "10196": 207, "10198": 207, "10200": 207, "10202": 207, "10204": 207, "10206": 207, "10208": 207, "10210": 207, "10212": 207, "10214": 207, "10216": 207, "10218": 207, "10220": 207, "10222": 207, "10224": 207, "10226": [207, 256], "10228": 207, "10230": 207, "10232": 207, "10234": 207, "10236": 207, "10238": 207, "10240": 207, "10242": 207, "10244": 207, "10246": 207, "10248": 207, "10250": 207, "10252": 207, "10254": 207, "10256": 207, "10258": 207, "10260": 207, "10262": 207, "10264": 207, "10266": 207, "10268": 207, "10270": 207, "10272": 207, "10274": 207, "10276": 207, "10278": 207, "10280": 207, "10282": 207, "10284": 207, "10286": 207, "10288": 207, "10290": 207, "10292": 207, "10294": 207, "10296": 207, "10298": 207, "10300": 207, "10302": 207, "10304": 207, "10306": 207, "10308": 207, "10310": 207, "10312": 207, "10314": 207, "10316": 207, "10318": 207, "10320": 207, "10322": 207, "10324": 207, "10326": 207, "10328": 207, "10330": 207, "10332": 207, "10334": 207, "10336": 207, "10338": 207, "10340": 207, "10342": 207, "10344": 207, "10346": 207, "10348": 207, "10350": 207, "10352": 207, "10354": 207, "10356": 207, "10358": 207, "10360": 207, "10362": 207, "10364": 207, "10366": 207, "10368": 207, "10370": 207, "10372": 207, "10374": 207, "10376": 207, "10378": 207, "10380": 207, "10382": 207, "10384": 207, "10386": 207, "10388": 207, "10390": 207, "10392": 207, "10394": 207, "10396": 207, "10398": 207, "10400": 207, "10402": 207, "10404": 207, "10406": 207, "10408": 207, "10410": 207, "10412": 207, "10414": 207, "10416": 207, "10418": 207, "10420": 207, "10422": 207, "10424": 207, "10426": 207, "10428": 207, "10430": 207, "10432": 207, "10434": 207, "10436": 207, "10438": 207, "10440": 207, "10442": 207, "10444": 207, "10446": 207, "10448": 207, "10450": 207, "10452": 207, "10454": 207, "10456": 207, "10458": 207, "10460": 207, "10462": 207, "10464": 207, "10466": 207, "10468": 207, "10470": 207, "10472": 207, "10474": 207, "10476": 207, "10478": 207, "10480": 207, "10482": 207, "10484": 207, "10486": 207, "10488": 207, "10490": 207, "10492": 207, "10494": 207, "10496": 207, "10498": 207, "10500": 207, "10502": 207, "10504": 207, "10506": 207, "10508": 207, "10510": 207, "10512": 207, "10514": 207, "10516": 207, "10518": 207, "10520": 207, "10522": 207, "10524": 207, "10526": 207, "10528": 207, "10530": 207, "10532": 207, "10534": 207, "10536": 207, "10538": 207, "10540": 207, "10542": 207, "10544": 207, "10546": 207, "10548": 207, "10550": 207, "10552": [207, 944], "10554": 207, "10556": 207, "10558": 207, "10560": 207, "10562": 207, "10564": 207, "10566": 207, "10568": 207, "10570": 207, "10572": 207, "10574": 207, "10576": 207, "10578": 207, "10580": 207, "10582": 207, "10584": 207, "10586": 207, "10588": 207, "10590": 207, "10592": 207, "10594": 207, "10596": 207, "10598": 207, "10600": 207, "10602": 207, "10604": 207, "10606": 207, "10608": 207, "10610": 207, "10612": 207, "10614": 207, "10616": 207, "10618": 207, "10620": 207, "10622": 207, "10624": 207, "10626": 207, "10628": 207, "10630": 207, "10632": 207, "10634": 207, "10636": 207, "10638": 207, "10640": 207, "10642": 207, "10644": 207, "10646": 207, "10648": 207, "10650": 207, "10652": 207, "10654": 207, "10656": 207, "10658": 207, "10660": 207, "10662": 207, "10664": 207, "10666": 207, "10668": 207, "10670": 207, "10672": 207, "10674": 207, "10676": 207, "10678": 207, "10680": 207, "10682": 207, "10684": 207, "10686": 207, "10688": 207, "10690": 207, "10692": 207, "10694": 207, "10696": 207, "10698": 207, "10700": 207, "10702": 207, "10704": 207, "10706": 207, "10708": 207, "10710": 207, "10712": 207, "10714": 207, "10716": 207, "10718": 207, "10720": 207, "10722": 207, "10724": 207, "10726": 207, "10728": 207, "10730": 207, "10732": 207, "10734": 207, "10736": 207, "10738": 207, "10740": 207, "10742": 207, "10744": 207, "10746": 207, "10748": 207, "10750": 207, "10752": 207, "10754": 207, "10756": 207, "10758": 207, "10760": 207, "10762": 207, "10764": 207, "10766": 207, "10768": 207, "10770": 207, "10772": 207, "10774": 207, "10776": 207, "10778": 207, "10780": 207, "10782": 207, "10784": 207, "10786": 207, "10788": 207, "10790": 207, "10792": 207, "10794": 207, "10796": 207, "10798": 207, "10800": 207, "10802": 207, "10804": 207, "10806": 207, "10808": 207, "10810": 207, "10812": 207, "10814": 207, "10816": 207, "10818": 207, "10820": 207, "10822": 207, "10824": 207, "10826": 207, "10828": 207, "10830": 207, "10832": 207, "10834": 207, "10836": 207, "10838": 207, "10840": 207, "10842": 207, "10844": 207, "10846": 207, "10848": 207, "10850": 207, "10852": 207, "10854": 207, "10856": 207, "10858": 207, "10860": 207, "10862": 207, "10864": 207, "10866": 207, "10868": 207, "10870": 207, "10872": 207, "10874": 207, "10876": 207, "10878": 207, "10880": 207, "10882": 207, "10884": 207, "10886": 207, "10888": 207, "10890": 207, "10892": 207, "10894": 207, "10896": 207, "10898": 207, "10900": 207, "10902": 207, "10904": 207, "10906": 207, "10908": 207, "10910": 207, "10912": 207, "10914": 207, "10916": 207, "10918": 207, "10920": 207, "10922": 207, "10924": 207, "10926": 207, "10928": 207, "10930": 207, "10932": 207, "10934": 207, "10936": 207, "10938": 207, "10940": 207, "10942": 207, "10944": 207, "10946": 207, "10948": 207, "10950": 207, "10952": 207, "10954": 207, "10956": 207, "10958": 207, "10960": 207, "10962": 207, "10964": 207, "10966": 207, "10968": 207, "10970": 207, "10972": 207, "10974": 207, "10976": 207, "10978": 207, "10980": 207, "10982": 207, "10984": 207, "10986": 207, "10988": 207, "10990": 207, "10992": 207, "10994": 207, "10996": 207, "10998": 207, "11000": 207, "11002": 207, "11004": 207, "11006": 207, "11008": 207, "11010": 207, "11012": 207, "11014": 207, "11016": 207, "11018": 207, "11020": 207, "11022": 207, "11024": 207, "11026": 207, "11028": 207, "11030": 207, "11032": 207, "11034": 207, "11036": 207, "11038": 207, "11040": 207, "11042": 207, "11044": 207, "11046": 207, "11048": 207, "11050": 207, "11052": 207, "11054": 207, "11056": 207, "11058": 207, "11060": 207, "11062": 207, "11064": 207, "11066": 207, "11068": 207, "11070": 207, "11072": 207, "11074": 207, "11076": 207, "11078": 207, "11080": 207, "11082": 207, "11084": 207, "11086": 207, "11088": 207, "11090": 207, "11092": 207, "11094": 207, "11096": 207, "11098": 207, "11100": 207, "11102": 207, "11104": 207, "11106": 207, "11108": 207, "11110": 207, "11112": 207, "11114": 207, "11116": 207, "11118": 207, "11120": 207, "11122": 207, "11124": 207, "11126": 207, "11128": 207, "11130": 207, "11132": 207, "11134": 207, "11136": 207, "11138": 207, "11140": 207, "11142": 207, "11144": 207, "11146": 207, "11148": 207, "11150": 207, "11152": 207, "11154": 207, "11156": 207, "11158": 207, "11160": 207, "11162": 207, "11164": 207, "11166": 207, "11168": 207, "11170": 207, "11172": 207, "11174": 207, "11176": 207, "11178": 207, "11180": 207, "11182": 207, "11184": 207, "11186": 207, "11188": 207, "11190": 207, "11192": 207, "11194": 207, "11196": 207, "11198": 207, "11200": 207, "11202": 207, "11204": 207, "11206": 207, "11208": 207, "11210": 207, "11212": 207, "11214": 207, "11216": 207, "11218": 207, "11220": 207, "11222": 207, "11224": 207, "11226": 207, "11228": 207, "11230": 207, "11232": 207, "11234": 207, "11236": 207, "11238": 207, "11240": 207, "11242": 207, "11244": 207, "11246": 207, "11248": 207, "11250": 207, "11252": 207, "11254": 207, "11256": 207, "11258": 207, "11260": 207, "11262": 207, "11264": 207, "11266": 207, "11268": 207, "11270": 207, "11272": 207, "11274": 207, "11276": 207, "11278": 207, "11280": 207, "11282": 207, "11284": 207, "11286": 207, "11288": 207, "11290": 207, "11292": 207, "11294": 207, "11296": 207, "11298": 207, "11300": 207, "11302": 207, "11304": 207, "11306": 207, "11308": 207, "11310": 207, "11312": 207, "11314": 207, "11316": 207, "11318": 207, "11320": 207, "11322": 207, "11324": 207, "11326": 207, "11328": 207, "11330": 207, "11332": 207, "11334": 207, "11336": 207, "11340": 207, "11342": 207, "11344": 207, "11346": 207, "11348": [207, 256], "11350": 207, "11352": 207, "11354": 207, "11356": 207, "11358": 207, "11360": 207, "11362": 207, "11364": 207, "11366": 207, "11368": 207, "11370": 207, "11372": 207, "11374": 207, "11376": 207, "11378": 207, "11380": 207, "11382": 207, "11384": 207, "11386": 207, "11388": 207, "11390": 207, "11392": 207, "11394": 207, "11396": 207, "11398": 207, "11400": 207, "11402": 207, "11404": 207, "11406": 207, "11408": 207, "11410": 207, "11412": 207, "11414": 207, "11416": 207, "11418": 207, "11420": 207, "11422": 207, "11424": 207, "11426": 207, "11428": 207, "11430": 207, "11432": 207, "11434": 207, "11436": 207, "11438": 207, "11440": 207, "11442": 207, "11444": 207, "11446": 207, "11448": 207, "11450": 207, "11452": 207, "11454": 207, "11456": 207, "11458": 207, "11460": 207, "11462": 207, "11464": 207, "11466": 207, "11468": 207, "11470": 207, "11472": 207, "11474": 207, "11476": 207, "11478": 207, "11480": 207, "11482": 207, "11484": 207, "11486": 207, "11488": 207, "11490": 207, "11492": 207, "11494": 207, "11496": 207, "11498": 207, "11500": 207, "11502": 207, "11504": 207, "11506": 207, "11508": 207, "11510": 207, "11512": 207, "11514": 207, "11516": 207, "11518": 207, "11520": 207, "11522": 207, "11524": 207, "11526": 207, "11528": 207, "11530": 207, "11532": 207, "11534": 207, "11536": 207, "11538": 207, "11540": 207, "11542": 207, "11544": 207, "11546": 207, "11548": 207, "11550": 207, "11552": 207, "11554": 207, "11556": 207, "11558": 207, "11560": 207, "11562": 207, "11564": 207, "11566": 207, "11568": 207, "11570": 207, "11572": 207, "11574": 207, "11576": 207, "11578": 207, "11580": 207, "11582": 207, "11584": 207, "11586": 207, "11588": 207, "11590": 207, "11592": 207, "11594": 207, "11596": 207, "11598": 207, "11600": 207, "11602": 207, "11604": 207, "11606": 207, "11608": 207, "11610": 207, "11612": 207, "11614": 207, "11616": 207, "11618": 207, "11620": 207, "11622": 207, "11624": 207, "11626": 207, "11628": 207, "11630": 207, "11634": 207, "11636": 207, "11638": 207, "11640": 207, "11642": 207, "11644": 207, "11646": 207, "11648": 207, "11650": 207, "11652": 207, "11654": 207, "11656": 207, "11658": 207, "11660": 207, "11662": 207, "11664": 207, "11666": 207, "11668": 207, "11670": 207, "11672": 207, "11674": 207, "11676": 207, "11678": 207, "11680": 207, "11682": 207, "11684": 207, "11686": 207, "11688": 207, "11690": 207, "11692": 207, "11694": 207, "11696": 207, "11698": 207, "11700": 207, "11702": 207, "11704": 207, "11706": 207, "11708": 207, "11710": 207, "11712": 207, "11714": 207, "11716": 207, "11718": 207, "11720": 207, "11722": 207, "11724": 207, "11726": 207, "11728": 207, "11730": 207, "11732": 207, "11734": 207, "11736": 207, "11738": 207, "11740": 207, "11742": 207, "11744": 207, "11746": 207, "11748": 207, "11750": 207, "11752": 207, "11754": 207, "11756": 207, "11758": 207, "11760": 207, "11762": 207, "11764": 207, "11766": 207, "11768": 207, "11770": 207, "11772": 207, "11774": 207, "11776": 207, "11778": 207, "11780": 207, "11782": 207, "11784": 207, "11786": 207, "11788": 207, "11790": 207, "11792": 207, "11794": 207, "11796": 207, "11798": 207, "11800": 207, "11802": 207, "11804": 207, "11806": 207, "11808": 207, "11810": 207, "11812": 207, "11814": 207, "11816": 207, "11818": 207, "11820": 207, "11822": 207, "11824": 207, "11826": 207, "11828": 207, "11830": 207, "11832": 207, "11834": 207, "11836": 207, "11838": 207, "11840": 207, "11842": 207, "11844": 207, "11846": 207, "11848": 207, "11850": 207, "11852": 207, "11854": 207, "11856": 207, "11858": 207, "11860": 207, "11862": 207, "11864": 207, "11866": 207, "11868": 207, "11870": 207, "11872": 207, "11874": 207, "11876": 207, "11878": 207, "11880": 207, "11882": 207, "11884": 207, "11886": 207, "11888": 207, "11890": 207, "11892": 207, "11894": 207, "11896": 207, "11898": 207, "11900": 207, "11902": 207, "11904": 207, "11906": 207, "11908": 207, "11910": 207, "11912": 207, "11914": 207, "11916": 207, "11918": 207, "11920": 207, "11922": 207, "11924": 207, "11926": 207, "11928": 207, "11930": 207, "11932": 207, "11934": 207, "11936": 207, "11938": 207, "11940": 207, "11942": 207, "11944": 207, "11946": 207, "11948": 207, "11950": 207, "11952": 207, "11954": 207, "11956": 207, "11958": 207, "11960": 207, "11962": 207, "11964": 207, "11966": 207, "11968": 207, "11970": 207, "11972": 207, "11974": 207, "11976": 207, "11978": 207, "11980": 207, "11982": 207, "11984": 207, "11986": 207, "11988": 207, "11990": 207, "11992": 207, "11994": 207, "11996": 207, "11998": 207, "12000": 207, "12002": 207, "12004": 207, "12006": 207, "12008": 207, "12010": 207, "12012": 207, "12014": 207, "12016": 207, "12018": 207, "12020": 207, "12022": 207, "12024": 207, "12026": 207, "12028": 207, "12030": 207, "12032": 207, "12034": 207, "12036": 207, "12038": 207, "12040": 207, "12042": 207, "12044": 207, "12046": 207, "12048": 207, "12050": 207, "12052": 207, "12054": 207, "12056": 207, "12058": 207, "12060": 207, "12062": 207, "12064": 207, "12066": 207, "12068": 207, "12070": 207, "12072": 207, "12074": 207, "12076": 207, "12078": 207, "12080": 207, "12082": 207, "12084": 207, "12086": 207, "12088": 207, "12090": 207, "12092": 207, "12094": 207, "12096": 207, "12098": 207, "12100": 207, "12102": 207, "12104": 207, "12106": 207, "12108": 207, "12110": 207, "12112": 207, "12114": 207, "12116": 207, "12118": 207, "12120": 207, "12122": 207, "12124": 207, "12126": 207, "12128": 207, "12130": 207, "12132": 207, "12134": 207, "12136": 207, "12138": 207, "12140": 207, "12142": 207, "12144": 207, "12146": 207, "12148": 207, "12150": 207, "12152": 207, "12154": 207, "12158": 207, "12160": 207, "12162": 207, "12164": 207, "12166": 207, "12168": 207, "12170": 207, "12172": 207, "12174": 207, "12176": 207, "12178": 207, "12180": 207, "12182": 207, "12184": 207, "12186": 207, "12188": 207, "12190": 207, "12192": 207, "12194": 207, "12196": 207, "12198": 207, "12200": 207, "12202": 207, "12204": 207, "12206": 207, "12208": 207, "12210": 207, "12212": 207, "12214": 207, "12216": 207, "12218": 207, "12220": 207, "12222": 207, "12224": 207, "12226": 207, "12228": 207, "12230": 207, "12232": 207, "12234": 207, "12236": 207, "12238": 207, "12240": 207, "12242": 207, "12244": 207, "12246": 207, "12248": 207, "12250": 207, "12252": 207, "12254": 207, "12256": 207, "12258": 207, "12260": 207, "12262": 207, "12264": 207, "12266": 207, "12268": 207, "12270": 207, "12272": 207, "12274": 207, "12276": 207, "12278": 207, "12280": 207, "12282": 207, "12284": 207, "12286": 207, "12288": 207, "12290": 207, "12292": 207, "12294": 207, "12296": 207, "12298": 207, "12300": 207, "12302": 207, "12304": 207, "12306": 207, "12308": 207, "12310": 207, "12312": 207, "12314": 207, "12316": 207, "12318": 207, "12320": 207, "12322": 207, "12324": 207, "12326": 207, "12328": 207, "12330": 207, "12332": 207, "12334": 207, "12336": 207, "12338": 207, "12340": 207, "12342": 207, "12344": 207, "12346": 207, "12348": 207, "12350": 207, "12352": 207, "12354": 207, "12356": 207, "12358": 207, "12360": 207, "12362": 207, "12364": 207, "12366": 207, "12368": 207, "12370": 207, "12372": 207, "12374": 207, "12376": 207, "12378": 207, "12380": 207, "12382": 207, "12384": 207, "12386": 207, "12388": 207, "12390": 207, "12392": 207, "12394": 207, "12396": 207, "12398": 207, "12400": 207, "12402": 207, "12404": 207, "12406": 207, "12408": 207, "12410": 207, "12412": 207, "12414": 207, "12416": 207, "12418": 207, "12420": 207, "12422": 207, "12424": 207, "12426": 207, "12428": 207, "12430": 207, "12432": 207, "12434": 207, "12436": 207, "12438": 207, "12440": 207, "12442": 207, "12444": 207, "12446": 207, "12448": 207, "12450": 207, "12452": 207, "12454": 207, "12456": 207, "12458": 207, "12460": 207, "12462": 207, "12464": 207, "12466": 207, "12468": 207, "12470": 207, "12472": 207, "12474": 207, "12476": 207, "12478": 207, "12480": 207, "12482": 207, "12484": 207, "12486": 207, "12488": 207, "12490": 207, "12492": 207, "12494": 207, "12496": 207, "12498": 207, "12500": 207, "12502": 207, "12504": 207, "12506": 207, "12508": 207, "12510": 207, "12512": 207, "12514": 207, "12516": 207, "12518": 207, "12520": 207, "12522": 207, "12524": 207, "12526": 207, "12528": 207, "12530": 207, "12532": 207, "12534": 207, "12536": 207, "12538": 207, "12540": 207, "12542": 207, "12544": 207, "12546": 207, "12548": 207, "12550": 207, "12552": 207, "12554": 207, "12556": 207, "12558": 207, "12560": 207, "12562": 207, "12564": 207, "12566": 207, "12568": 207, "12570": 207, "12572": 207, "12574": 207, "12576": 207, "12578": 207, "12580": 207, "12582": 207, "12584": 207, "12586": 207, "12588": 207, "12590": 207, "12592": 207, "12594": 207, "12596": 207, "12598": 207, "12600": 207, "12602": 207, "12604": 207, "12606": 207, "12608": 207, "12610": 207, "12612": 207, "12614": 207, "12616": 207, "12618": 207, "12620": 207, "12622": 207, "12624": 207, "12626": 207, "12628": 207, "12630": 207, "12632": 207, "12634": 207, "12636": 207, "12638": 207, "12640": 207, "12642": 207, "12644": 207, "12646": 207, "12648": 207, "12650": 207, "12652": 207, "12654": 207, "12656": 207, "12658": 207, "12660": 207, "12662": 207, "12664": 207, "12666": 207, "12668": 207, "12670": 207, "12672": 207, "12674": 207, "12676": 207, "12678": 207, "12680": 207, "12682": 207, "12684": 207, "12686": 207, "12688": 207, "12690": 207, "12692": 207, "12694": 207, "12696": 207, "12698": 207, "12700": 207, "12702": 207, "12704": 207, "12706": 207, "12708": 207, "12710": 207, "12712": 207, "12714": 207, "12716": 207, "12718": 207, "12720": 207, "12722": 207, "12724": 207, "12726": 207, "12728": 207, "12730": 207, "12732": 207, "12734": 207, "12736": 207, "12738": 207, "12740": 207, "12742": 207, "12744": 207, "12746": 207, "12748": 207, "12750": 207, "12752": 207, "12754": 207, "12756": 207, "12758": 207, "12760": 207, "12762": 207, "12764": 207, "12766": 207, "12768": 207, "12770": 207, "12772": 207, "12774": 207, "12776": 207, "12778": 207, "12780": 207, "12782": 207, "12784": 207, "12786": 207, "12788": 207, "12790": 207, "12792": 207, "12794": 207, "12796": 207, "12798": 207, "12800": 207, "12802": 207, "12804": 207, "12806": 207, "12808": 207, "12810": 207, "12812": 207, "12814": 207, "12816": 207, "12818": 207, "12820": 207, "12822": 207, "12824": 207, "12826": 207, "12828": 207, "12830": 207, "12832": 207, "12834": 207, "12836": 207, "12838": 207, "12840": 207, "12842": 207, "12844": 207, "12846": 207, "12848": 207, "12850": 207, "12852": 207, "12854": 207, "12856": 207, "12858": 207, "12860": 207, "12862": 207, "12864": 207, "12866": 207, "12868": 207, "12870": 207, "12872": 207, "12874": 207, "12876": 207, "12878": 207, "12880": 207, "12882": 207, "12884": 207, "12886": 207, "12888": 207, "12890": 207, "12892": 207, "12894": 207, "12896": 207, "12898": 207, "12900": 207, "12902": 207, "12904": 207, "12906": 207, "12908": 207, "12910": 207, "12912": 207, "12914": 207, "12916": 207, "12918": 207, "12920": 207, "12922": 207, "12924": 207, "12926": 207, "12928": 207, "12930": 207, "12932": 207, "12934": 207, "12936": 207, "12938": 207, "12940": 207, "12942": 207, "12944": 207, "12946": 207, "12948": 207, "12950": 207, "12952": 207, "12954": 207, "12956": 207, "12958": 207, "12960": 207, "12962": 207, "12964": 207, "12966": 207, "12968": 207, "12970": 207, "12972": 207, "12974": 207, "12976": 207, "12978": 207, "12980": 207, "12982": 207, "12984": 207, "12986": 207, "12988": 207, "12990": 207, "12992": 207, "12994": 207, "12996": 207, "12998": 207, "13000": 207, "13002": 207, "13004": 207, "13006": 207, "13008": 207, "13010": 207, "13012": 207, "13014": 207, "13016": 207, "13018": 207, "13020": 207, "13022": 207, "13024": 207, "13026": 207, "13028": 207, "13030": 207, "13032": 207, "13034": 207, "13036": 207, "13038": 207, "13040": 207, "13042": 207, "13044": 207, "13046": 207, "13048": 207, "13050": 207, "13052": 207, "13054": 207, "13056": 207, "13058": 207, "13060": 207, "13062": 207, "13064": 207, "13066": 207, "13068": 207, "13070": 207, "13072": 207, "13074": 207, "13076": 207, "13078": 207, "13080": 207, "13082": 207, "13084": 207, "13086": 207, "13088": 207, "13090": 207, "13092": 207, "13094": 207, "13096": 207, "13098": 207, "13100": 207, "13102": 207, "13104": 207, "13106": 207, "13108": 207, "13110": 207, "13112": 207, "13114": 207, "13116": 207, "13118": 207, "13120": 207, "13122": 207, "13124": 207, "13126": 207, "13128": 207, "13130": 207, "13132": 207, "13134": 207, "13136": 207, "13138": 207, "13140": 207, "13142": 207, "13144": 207, "13146": 207, "13148": 207, "13150": 207, "13152": 207, "13154": 207, "13156": 207, "13158": 207, "13160": 207, "13162": 207, "13164": 207, "13166": 207, "13168": 207, "13170": 207, "13172": 207, "13174": 207, "13176": 207, "13178": 207, "13180": 207, "13182": 207, "13184": 207, "13186": 207, "13188": 207, "13190": 207, "13192": 207, "13194": 207, "13196": 207, "13198": 207, "13200": 207, "13202": 207, "13204": 207, "13206": 207, "13208": 207, "13210": 207, "13212": 207, "13214": 207, "13216": 207, "13218": 207, "13220": 207, "13222": 207, "13224": 207, "13226": 207, "13228": 207, "13230": 207, "13232": 207, "13234": 207, "13236": 207, "13238": 207, "13240": 207, "13242": 207, "13244": 207, "13246": 207, "13248": 207, "13250": 207, "13252": 207, "13254": 207, "13256": 207, "13258": 207, "13260": 207, "13262": 207, "13264": 207, "13266": 207, "13268": 207, "13270": 207, "13272": 207, "13274": 207, "13276": 207, "13278": 207, "13280": 207, "13282": 207, "13284": 207, "13286": 207, "13288": 207, "13290": 207, "13292": 207, "13294": 207, "13296": 207, "13298": 207, "13300": 207, "13302": 207, "13304": 207, "13306": 207, "13308": 207, "13310": 207, "13312": 207, "13314": 207, "13316": 207, "13318": 207, "13320": 207, "13322": 207, "13324": 207, "13326": 207, "13328": 207, "13330": 207, "13332": 207, "13334": 207, "13336": 207, "13338": 207, "13340": 207, "13342": 207, "13344": 207, "13346": 207, "13348": 207, "13350": 207, "13352": 207, "13354": 207, "13356": 207, "13358": 207, "13360": 207, "13362": 207, "13364": 207, "13366": 207, "13368": 207, "13370": 207, "13372": 207, "13374": 207, "13376": 207, "13378": 207, "13380": 207, "13382": 207, "13384": 207, "13386": 207, "13388": 207, "13390": 207, "13392": 207, "13394": 207, "13396": 207, "13398": 207, "13400": 207, "13402": 207, "13404": 207, "13406": 207, "13408": 207, "13410": 207, "13412": 207, "13414": 207, "13416": 207, "13418": 207, "13420": 207, "13422": 207, "13424": 207, "13426": 207, "13428": 207, "13430": 207, "13432": 207, "13434": 207, "13436": 207, "13438": 207, "13440": 207, "13442": 207, "13444": 207, "13446": 207, "13448": 207, "13450": 207, "13452": 207, "13454": 207, "13456": 207, "13458": 207, "13460": 207, "13462": 207, "13464": 207, "13466": 207, "13468": 207, "13470": 207, "13472": 207, "13474": 207, "13476": 207, "13478": 207, "13480": 207, "13482": 207, "13484": 207, "13486": 207, "13488": 207, "13490": 207, "13492": 207, "13494": 207, "13496": 207, "13498": 207, "13502": 207, "13504": 207, "13506": 207, "13508": 207, "13510": 207, "13512": 207, "13514": 207, "13516": 207, "13518": 207, "13520": 207, "13522": 207, "13524": 207, "13526": 207, "13528": 207, "13530": 207, "13532": 207, "13534": 207, "13536": 207, "13538": 207, "13540": 207, "13542": 207, "13544": 207, "13546": 207, "13548": 207, "13550": 207, "13552": 207, "13554": 207, "13556": 207, "13558": 207, "13560": 207, "13562": 207, "13564": 207, "13566": 207, "13568": 207, "13570": 207, "13572": 207, "13574": 207, "13576": 207, "13578": 207, "13580": 207, "13582": 207, "13584": 207, "13586": 207, "13588": 207, "13590": 207, "13592": 207, "13594": 207, "13596": 207, "13598": 207, "13600": 207, "13602": 207, "13604": 207, "13606": 207, "13608": 207, "13610": 207, "13612": 207, "13614": 207, "13616": 207, "13618": 207, "13620": 207, "13622": 207, "13624": 207, "13626": 207, "13628": 207, "13630": 207, "13632": 207, "13634": 207, "13636": 207, "13638": 207, "13640": 207, "13642": 207, "13644": 207, "13646": 207, "13648": 207, "13650": 207, "13652": 207, "13654": 207, "13656": 207, "13658": 207, "13660": 207, "13662": 207, "13664": 207, "13666": 207, "13668": 207, "13670": 207, "13672": 207, "13674": 207, "13676": 207, "13678": 207, "13680": 207, "13682": 207, "13684": 207, "13686": 207, "13688": 207, "13690": 207, "13692": 207, "13694": 207, "13696": 207, "13698": 207, "13700": 207, "13702": 207, "13704": 207, "13706": 207, "13708": 207, "13710": 207, "13712": 207, "13714": 207, "13716": 207, "13718": 207, "13720": 207, "13722": 207, "13724": 207, "13726": 207, "13728": 207, "13730": 207, "13732": 207, "13734": 207, "13736": 207, "13738": 207, "13740": 207, "13742": 207, "13744": 207, "13746": 207, "13748": 207, "13750": 207, "13752": 207, "13754": 207, "13756": 207, "13758": 207, "13760": 207, "13762": 207, "13764": 207, "13766": 207, "13768": 207, "13770": 207, "13772": 207, "13774": 207, "13776": 207, "13778": 207, "13780": 207, "13782": 207, "13784": 207, "13786": 207, "13788": 207, "13790": 207, "13792": 207, "13794": 207, "13796": 207, "13798": 207, "13800": 207, "13802": 207, "13804": 207, "13806": 207, "13808": 207, "13810": 207, "13812": 207, "13814": 207, "13816": 207, "13818": 207, "13820": 207, "13822": 207, "13824": 207, "13826": 207, "13828": 207, "13830": 207, "13832": 207, "13834": 207, "13836": 207, "13838": 207, "13840": 207, "13842": 207, "13844": 207, "13846": 207, "13848": 207, "13850": 207, "13852": 207, "13854": 207, "13856": 207, "13858": 207, "13860": 207, "13862": 207, "13864": 207, "13866": 207, "13868": 207, "13870": 207, "13872": 207, "13874": 207, "13876": 207, "13878": 207, "13880": 207, "13882": 207, "13884": 207, "13886": 207, "13888": 207, "13890": 207, "13892": 207, "13894": 207, "13896": 207, "13898": 207, "13900": 207, "13902": 207, "13904": 207, "13906": 207, "13908": 207, "13910": 207, "13912": 207, "13914": 207, "13916": 207, "13918": 207, "13920": 207, "13922": 207, "13924": 207, "13926": 207, "13928": 207, "13930": 207, "13932": 207, "13934": 207, "13936": 207, "13938": 207, "13940": 207, "13942": 207, "13944": 207, "13946": 207, "13948": 207, "13950": 207, "13952": 207, "13954": 207, "13956": 207, "13958": 207, "13960": [207, 901], "13962": 207, "13964": 207, "13966": 207, "13968": 207, "13970": 207, "13972": 207, "13974": 207, "13976": 207, "13978": 207, "13980": 207, "13982": 207, "13984": 207, "13986": 207, "13988": 207, "13990": 207, "13992": 207, "13994": 207, "13996": 207, "13998": 207, "14000": 207, "14002": 207, "14004": 207, "14006": 207, "14008": 207, "14010": 207, "14012": 207, "14014": 207, "14016": 207, "14018": 207, "14020": 207, "14022": 207, "14024": 207, "14026": 207, "14028": 207, "14030": 207, "14032": 207, "14034": 207, "14036": 207, "14038": 207, "14040": 207, "14042": 207, "14044": 207, "14046": 207, "14048": 207, "14050": 207, "14052": 207, "14054": 207, "14056": 207, "14058": 207, "14060": 207, "14062": 207, "14064": 207, "14066": 207, "14068": 207, "14070": 207, "14072": 207, "14074": 207, "14076": 207, "14078": 207, "14080": 207, "14082": 207, "14084": 207, "14086": 207, "14088": 207, "14090": 207, "14092": 207, "14094": 207, "14096": 207, "14098": 207, "14100": 207, "14102": 207, "14104": 207, "14106": 207, "14108": 207, "14110": 207, "14112": 207, "14114": 207, "14116": 207, "14118": 207, "14120": 207, "14122": 207, "14124": 207, "14126": 207, "14128": 207, "14130": 207, "14132": 207, "14134": 207, "14136": 207, "14138": 207, "14140": 207, "14142": 207, "14144": 207, "14146": 207, "14148": 207, "14150": 207, "14152": 207, "14154": 207, "14156": 207, "14158": 207, "14160": 207, "14162": 207, "14164": 207, "14166": 207, "14168": 207, "14170": 207, "14172": 207, "14174": 207, "14176": 207, "14178": 207, "14180": 207, "14182": 207, "14184": 207, "14186": 207, "14188": 207, "14190": 207, "14192": 207, "14194": 207, "14196": 207, "14198": 207, "14200": 207, "14202": 207, "14204": 207, "14206": 207, "14208": 207, "14210": 207, "14212": 207, "14214": 207, "14216": 207, "14218": 207, "14220": 207, "14222": 207, "14224": 207, "14226": 207, "14228": 207, "14230": 207, "14232": 207, "14234": 207, "14236": 207, "14238": 207, "14240": 207, "14242": 207, "14244": 207, "14246": 207, "14248": 207, "14250": 207, "14252": 207, "14254": 207, "14256": 207, "14258": 207, "14260": 207, "14262": 207, "14264": 207, "14266": 207, "14268": 207, "14270": 207, "14272": 207, "14274": 207, "14276": 207, "14278": 207, "14280": 207, "14282": 207, "14284": 207, "14286": 207, "14288": 207, "14290": 207, "14292": 207, "14294": 207, "14296": 207, "14298": 207, "14300": 207, "14302": 207, "14304": 207, "14306": 207, "14308": 207, "14310": 207, "14312": 207, "14314": 207, "14316": 207, "14318": 207, "14320": 207, "14322": 207, "14324": 207, "14326": 207, "14328": 207, "14330": 207, "14332": 207, "14334": 207, "14336": 207, "14338": 207, "14340": 207, "14342": 207, "14344": 207, "14346": 207, "14348": 207, "14350": 207, "14352": 207, "14354": 207, "14356": 207, "14358": 207, "14360": 207, "14362": 207, "14364": 207, "14366": 207, "14368": 207, "14370": 207, "14372": 207, "14374": 207, "14376": 207, "14378": 207, "14380": 207, "14382": 207, "14384": 207, "14388": 207, "14390": 207, "14392": 207, "14394": 207, "14396": 207, "14398": 207, "14400": 207, "14402": 207, "14404": 207, "14406": 207, "14408": 207, "14410": 207, "14412": 207, "14414": 207, "14416": 207, "14418": 207, "14420": 207, "14422": 207, "14424": 207, "14426": 207, "14428": 207, "14430": 207, "14432": 207, "14434": 207, "14436": 207, "14438": 207, "14440": 207, "14442": 207, "14444": 207, "14446": 207, "14448": 207, "14450": 207, "14452": 207, "14454": 207, "14456": 207, "14458": 207, "14460": 207, "14462": 207, "14464": 207, "14466": 207, "14468": 207, "14470": 207, "14472": 207, "14474": 207, "14476": 207, "14478": 207, "14480": 207, "14482": 207, "14484": 207, "14486": 207, "14488": 207, "14490": 207, "14492": 207, "14494": 207, "14496": 207, "14498": 207, "14500": 207, "14502": 207, "14504": 207, "14506": 207, "14508": 207, "14510": 207, "14512": 207, "14514": 207, "14516": 207, "14518": 207, "14520": 207, "14522": 207, "14524": 207, "14526": 207, "14528": 207, "14530": 207, "14532": 207, "14534": 207, "14536": 207, "14538": 207, "14540": 207, "14542": 207, "14544": 207, "14546": 207, "14548": 207, "14550": 207, "14552": 207, "14554": 207, "14556": 207, "14558": 207, "14560": 207, "14562": 207, "14564": 207, "14566": 207, "14568": 207, "14570": 207, "14572": 207, "14574": 207, "14576": 207, "14578": 207, "14580": 207, "14582": 207, "14584": 207, "14586": 207, "14588": 207, "14590": 207, "14592": 207, "14594": 207, "14596": 207, "14598": 207, "14600": 207, "14602": 207, "14604": 207, "14606": 207, "14608": 207, "14610": 207, "14612": 207, "14614": 207, "14616": 207, "14618": 207, "14620": 207, "14622": 207, "14624": 207, "14626": 207, "14628": 207, "14630": 207, "14632": 207, "14634": 207, "14636": 207, "14638": 207, "14640": 207, "14642": 207, "14644": 207, "14646": 207, "14648": 207, "14650": 207, "14652": 207, "14654": 207, "14656": 207, "14658": 207, "14660": 207, "14662": 207, "14664": 207, "14666": 207, "14668": 207, "14670": 207, "14672": 207, "14674": 207, "14676": 207, "14678": 207, "14680": 207, "14682": 207, "14684": 207, "14686": 207, "14688": 207, "14690": 207, "14692": 207, "14694": 207, "14696": 207, "14698": 207, "14700": 207, "14702": 207, "14704": 207, "14706": 207, "14708": 207, "14710": 207, "14712": 207, "14714": 207, "14716": 207, "14718": 207, "14720": 207, "14722": 207, "14724": 207, "14726": 207, "14728": 207, "14730": 207, "14732": 207, "14734": 207, "14736": 207, "14738": 207, "14740": 207, "14742": 207, "14744": 207, "14746": 207, "14748": 207, "14750": 207, "14752": 207, "14754": 207, "14756": 207, "14758": 207, "14760": 207, "14762": 207, "14764": 207, "14766": 207, "14768": 207, "14770": 207, "14772": 207, "14774": 207, "14776": 207, "14778": 207, "14780": 207, "14782": 207, "14784": 207, "14786": 207, "14788": 207, "14790": 207, "14792": 207, "14794": 207, "14796": 207, "14798": 207, "14800": 207, "14802": 207, "14804": 207, "14806": 207, "14808": 207, "14810": 207, "14812": 207, "14814": 207, "14816": 207, "14818": 207, "14820": 207, "14822": 207, "14824": 207, "14826": 207, "14828": 207, "14830": 207, "14832": 207, "14834": 207, "14836": 207, "14838": 207, "14840": 207, "14842": 207, "14844": 207, "14846": 207, "14848": 207, "14850": 207, "14852": 207, "14854": 207, "14856": 207, "14858": 207, "14860": 207, "14862": 207, "14864": 207, "14866": 207, "14868": 207, "14870": 207, "14872": 207, "14874": 207, "14876": 207, "14878": 207, "14880": 207, "14882": [207, 528], "14884": 207, "14886": 207, "14888": 207, "14890": 207, "14892": 207, "14894": 207, "14896": 207, "14898": 207, "14900": 207, "14902": 207, "14904": 207, "14906": 207, "14908": 207, "14910": 207, "14912": 207, "14914": 207, "14916": 207, "14918": 207, "14920": 207, "14922": 207, "14924": 207, "14926": 207, "14928": 207, "14930": 207, "14932": 207, "14934": 207, "14936": 207, "14938": 207, "14940": 207, "14942": 207, "14944": 207, "14946": 207, "14948": 207, "14950": 207, "14952": 207, "14954": 207, "14956": 207, "14958": 207, "14960": 207, "14962": 207, "14964": 207, "14966": 207, "14968": 207, "14970": 207, "14972": 207, "14974": 207, "14976": 207, "14978": 207, "14980": 207, "14982": 207, "14984": 207, "14986": 207, "14988": 207, "14990": [207, 256], "14992": 207, "14994": 207, "14996": 207, "14998": 207, "15002": 207, "15004": 207, "15006": 207, "15008": 207, "15010": 207, "15012": 207, "15014": 207, "15016": 207, "15018": 207, "15020": 207, "15022": 207, "15024": 207, "15026": 207, "15028": 207, "15030": 207, "15032": 207, "15034": 207, "15036": 207, "15038": 207, "15040": 207, "15042": 207, "15044": 207, "15046": 207, "15048": 207, "15050": 207, "15052": 207, "15054": 207, "15056": 207, "15058": 207, "15060": 207, "15062": 207, "15064": 207, "15066": 207, "15068": 207, "15070": 207, "15072": 207, "15074": 207, "15076": 207, "15078": 207, "15080": 207, "15082": 207, "15084": 207, "15086": 207, "15088": 207, "15090": 207, "15092": 207, "15094": 207, "15096": 207, "15098": 207, "15100": 207, "15102": 207, "15104": 207, "15106": 207, "15108": 207, "15110": 207, "15112": 207, "15114": 207, "15116": 207, "15118": 207, "15120": 207, "15122": 207, "15124": 207, "15126": 207, "15128": 207, "15130": 207, "15132": 207, "15134": 207, "15136": 207, "15138": 207, "15140": 207, "15142": 207, "15144": 207, "15146": 207, "15148": 207, "15150": 207, "15152": 207, "15154": 207, "15156": 207, "15158": 207, "15160": 207, "15162": 207, "15164": 207, "15166": 207, "15168": 207, "15170": 207, "15172": 207, "15174": 207, "15176": 207, "15178": 207, "15180": 207, "15182": 207, "15184": 207, "15186": 207, "15188": 207, "15190": 207, "15192": 207, "15194": 207, "15196": 207, "15198": 207, "15200": 207, "15202": 207, "15204": 207, "15206": 207, "15208": 207, "15210": 207, "15212": 207, "15214": 207, "15216": 207, "15218": 207, "15220": 207, "15222": 207, "15224": 207, "15226": 207, "15228": 207, "15230": 207, "15232": 207, "15234": 207, "15236": 207, "15238": 207, "15240": 207, "15242": 207, "15244": [207, 946], "15246": 207, "15248": 207, "15250": 207, "15252": 207, "15254": 207, "15256": 207, "15258": 207, "15260": 207, "15262": 207, "15264": 207, "15266": 207, "15268": 207, "15270": 207, "15272": 207, "15274": 207, "15276": 207, "15278": 207, "15280": 207, "15282": 207, "15284": 207, "15286": 207, "15288": 207, "15290": 207, "15292": 207, "15294": 207, "15296": 207, "15298": 207, "15300": 207, "15302": 207, "15304": 207, "15306": 207, "15308": 207, "15310": 207, "15312": 207, "15314": 207, "15316": 207, "15318": 207, "15320": 207, "15322": 207, "15324": 207, "15326": 207, "15328": 207, "15330": 207, "15332": 207, "15334": 207, "15336": 207, "15338": 207, "15340": 207, "15342": 207, "15344": 207, "15346": 207, "15348": 207, "15350": 207, "15352": 207, "15354": 207, "15356": 207, "15358": 207, "15360": 207, "15362": 207, "15364": 207, "15366": 207, "15368": 207, "15370": 207, "15372": 207, "15374": 207, "15376": 207, "15378": 207, "15380": 207, "15382": 207, "15384": 207, "15386": 207, "15388": 207, "15390": 207, "15392": 207, "15394": 207, "15396": 207, "15398": 207, "15400": 207, "15402": 207, "15404": 207, "15406": 207, "15408": 207, "15410": 207, "15412": 207, "15414": 207, "15416": 207, "15418": 207, "15420": 207, "15422": 207, "15424": 207, "15426": 207, "15428": 207, "15430": 207, "15432": 207, "15434": 207, "15436": 207, "15438": 207, "15440": 207, "15442": 207, "15444": 207, "15446": 207, "15448": 207, "15450": 207, "15452": 207, "15454": 207, "15456": 207, "15458": 207, "15460": 207, "15462": 207, "15464": 207, "15466": 207, "15468": 207, "15470": 207, "15472": 207, "15474": 207, "15476": 207, "15478": 207, "15480": 207, "15482": 207, "15484": 207, "15486": 207, "15488": 207, "15490": 207, "15492": 207, "15494": 207, "15496": 207, "15498": 207, "15500": 207, "15502": 207, "15504": 207, "15506": 207, "15508": 207, "15510": 207, "15512": 207, "15514": 207, "15516": 207, "15518": 207, "15520": 207, "15522": 207, "15524": 207, "15526": 207, "15528": 207, "15530": 207, "15532": 207, "15534": 207, "15536": 207, "15538": 207, "15540": 207, "15542": 207, "15544": 207, "15546": 207, "15548": 207, "15550": 207, "15552": 207, "15554": 207, "15556": 207, "15558": 207, "15560": 207, "15562": 207, "15564": 207, "15566": 207, "15568": 207, "15570": 207, "15572": 207, "15574": 207, "15576": 207, "15578": 207, "15580": 207, "15582": 207, "15584": 207, "15586": 207, "15588": 207, "15590": 207, "15592": 207, "15594": 207, "15596": 207, "15598": 207, "15600": 207, "15602": 207, "15604": 207, "15606": 207, "15608": 207, "15610": 207, "15612": 207, "15614": 207, "15616": 207, "15618": 207, "15620": 207, "15622": 207, "15624": 207, "15626": 207, "15628": 207, "15630": 207, "15632": 207, "15634": 207, "15636": 207, "15638": 207, "15640": 207, "15642": 207, "15644": 207, "15646": 207, "15648": 207, "15650": 207, "15652": 207, "15654": 207, "15656": 207, "15658": 207, "15660": 207, "15662": 207, "15664": 207, "15666": 207, "15668": 207, "15670": 207, "15672": 207, "15674": 207, "15676": 207, "15678": 207, "15680": 207, "15682": 207, "15684": 207, "15686": 207, "15688": 207, "15690": 207, "15692": 207, "15694": 207, "15696": 207, "15698": 207, "15700": 207, "15702": 207, "15704": 207, "15706": 207, "15708": 207, "15710": 207, "15712": 207, "15714": 207, "15716": 207, "15718": 207, "15720": 207, "15722": 207, "15724": 207, "15726": 207, "15728": 207, "15730": 207, "15732": 207, "15734": 207, "15736": 207, "15738": 207, "15740": 207, "15742": 207, "15744": 207, "15746": 207, "15748": 207, "15750": 207, "15752": 207, "15754": 207, "15756": 207, "15758": 207, "15760": 207, "15762": 207, "15764": 207, "15766": 207, "15768": 207, "15770": 207, "15772": 207, "15774": 207, "15776": 207, "15778": 207, "15780": 207, "15782": 207, "15784": 207, "15786": 207, "15788": 207, "15790": 207, "15792": 207, "15794": 207, "15796": 207, "15798": 207, "15800": 207, "15802": 207, "15804": 207, "15806": 207, "15808": 207, "15810": 207, "15812": 207, "15814": 207, "15816": 207, "15818": 207, "15820": 207, "15822": 207, "15824": 207, "15826": 207, "15828": 207, "15830": 207, "15832": 207, "15834": 207, "15836": 207, "15838": 207, "15840": 207, "15842": 207, "15844": 207, "15846": 207, "15848": 207, "15850": 207, "15852": 207, "15854": 207, "15856": 207, "15858": 207, "15860": 207, "15862": 207, "15864": 207, "15866": 207, "15868": 207, "15870": 207, "15872": 207, "15874": 207, "15876": 207, "15878": 207, "15880": 207, "15882": 207, "15884": 207, "15886": 207, "15888": 207, "15890": 207, "15892": 207, "15894": 207, "15896": 207, "15898": 207, "15900": 207, "15902": 207, "15904": 207, "15906": 207, "15908": 207, "15910": 207, "15912": 207, "15914": 207, "15916": 207, "15918": 207, "15920": 207, "15922": 207, "15924": 207, "15926": 207, "15928": 207, "15930": 207, "15932": 207, "15934": 207, "15936": 207, "15938": 207, "15940": 207, "15942": 207, "15944": 207, "15946": 207, "15948": 207, "15950": 207, "15952": 207, "15954": 207, "15956": 207, "15958": 207, "15960": 207, "15962": 207, "15964": 207, "15966": 207, "15968": 207, "15970": 207, "15972": 207, "15974": 207, "15976": 207, "15978": 207, "15980": 207, "15982": 207, "15984": 207, "15986": 207, "15988": 207, "15990": 207, "15992": 207, "15994": 207, "15996": 207, "15998": 207, "16000": 207, "16002": 207, "16004": 207, "16006": 207, "16008": 207, "16010": 207, "16012": 207, "16014": 207, "16016": 207, "16018": 207, "16020": 207, "16022": 207, "16024": 207, "16026": 207, "16028": 207, "16030": 207, "16032": 207, "16034": 207, "16036": 207, "16038": 207, "16040": 207, "16042": 207, "16044": 207, "16046": 207, "16048": 207, "16050": 207, "16052": 207, "16054": 207, "16056": 207, "16058": 207, "16060": 207, "16062": 207, "16064": 207, "16066": 207, "16068": 207, "16070": 207, "16072": 207, "16074": 207, "16076": 207, "16078": 207, "16080": 207, "16082": 207, "16084": 207, "16086": 207, "16088": 207, "16090": 207, "16092": 207, "16094": 207, "16096": 207, "16098": 207, "16100": 207, "16102": 207, "16104": 207, "16106": 207, "16108": 207, "16110": 207, "16112": 207, "16114": 207, "16116": 207, "16118": 207, "16120": 207, "16122": 207, "16124": 207, "16126": 207, "16128": 207, "16130": 207, "16132": 207, "16134": 207, "16136": 207, "16138": 207, "16140": 207, "16142": 207, "16144": 207, "16146": 207, "16148": 207, "16150": 207, "16152": 207, "16154": 207, "16156": 207, "16158": 207, "16160": 207, "16162": 207, "16164": 207, "16166": 207, "16168": 207, "16170": 207, "16172": 207, "16174": 207, "16176": 207, "16178": 207, "16180": 207, "16182": 207, "16184": 207, "16186": 207, "16188": 207, "16190": 207, "16192": 207, "16194": 207, "16196": 207, "16198": 207, "16200": 207, "16202": 207, "16204": 207, "16206": 207, "16208": 207, "16210": 207, "16212": 207, "16214": 207, "16216": 207, "16218": 207, "16220": 207, "16222": 207, "16224": 207, "16226": 207, "16228": 207, "16230": 207, "16232": 207, "16234": 207, "16236": 207, "16238": 207, "16240": 207, "16242": 207, "16244": 207, "16246": 207, "16248": 207, "16250": 207, "16252": 207, "16254": 207, "16256": 207, "16258": 207, "16260": 207, "16262": 207, "16264": 207, "16266": 207, "16268": 207, "16270": 207, "16272": 207, "16274": 207, "16276": 207, "16278": 207, "16280": 207, "16282": 207, "16284": 207, "16286": 207, "16288": 207, "16290": 207, "16292": 207, "16294": 207, "16296": 207, "16298": 207, "16300": 207, "16302": 207, "16304": 207, "16306": 207, "16308": 207, "16310": 207, "16312": 207, "16314": 207, "16316": 207, "16318": 207, "16320": 207, "16322": 207, "16324": 207, "16326": 207, "16328": 207, "16330": 207, "16332": 207, "16334": 207, "16336": 207, "16338": 207, "16340": 207, "16342": 207, "16344": 207, "16346": 207, "16348": 207, "16350": 207, "16352": 207, "16354": 207, "16356": 207, "16358": 207, "16360": 207, "16362": 207, "16364": 207, "16366": 207, "16368": 207, "16370": 207, "16372": 207, "16374": 207, "16376": 207, "16378": 207, "16380": 207, "16382": 207, "16386": 207, "16388": 207, "16390": 207, "16392": 207, "16394": 207, "16396": 207, "16398": 207, "16400": 207, "16402": 207, "16404": 207, "16406": 207, "16408": 207, "16410": 207, "16412": 207, "16414": 207, "16416": 207, "16418": 207, "16420": 207, "16422": 207, "16424": 207, "16426": 207, "16428": 207, "16430": 207, "16432": 207, "16434": 207, "16436": 207, "16438": 207, "16440": 207, "16442": 207, "16444": 207, "16446": 207, "16448": 207, "16450": 207, "16452": 207, "16454": 207, "16456": 207, "16458": 207, "16460": 207, "16462": 207, "16464": 207, "16466": 207, "16468": 207, "16470": 207, "16472": 207, "16474": 207, "16476": 207, "16478": 207, "16480": 207, "16482": 207, "16484": 207, "16486": 207, "16488": 207, "16490": 207, "16492": 207, "16494": 207, "16496": 207, "16498": 207, "16500": 207, "16502": 207, "16504": 207, "16506": 207, "16508": 207, "16510": 207, "16512": 207, "16514": 207, "16516": 207, "16518": 207, "16520": 207, "16522": 207, "16524": 207, "16526": 207, "16528": 207, "16530": 207, "16532": 207, "16534": 207, "16536": 207, "16538": 207, "16540": 207, "16542": 207, "16544": 207, "16546": 207, "16548": 207, "16550": 207, "16552": 207, "16554": 207, "16556": 207, "16558": 207, "16560": 207, "16562": 207, "16564": 207, "16566": 207, "16568": 207, "16570": 207, "16572": 207, "16574": 207, "16576": 207, "16578": 207, "16580": 207, "16582": 207, "16584": 207, "16586": 207, "16588": 207, "16590": 207, "16592": 207, "16594": 207, "16596": 207, "16598": 207, "16600": 207, "16602": 207, "16604": 207, "16606": 207, "16608": 207, "16610": 207, "16612": 207, "16614": 207, "16616": 207, "16618": 207, "16620": 207, "16622": 207, "16624": 207, "16626": 207, "16628": 207, "16630": 207, "16632": 207, "16634": 207, "16636": 207, "16638": 207, "16640": 207, "16642": 207, "16644": 207, "16646": 207, "16648": 207, "16650": 207, "16652": 207, "16654": 207, "16656": 207, "16658": 207, "16660": 207, "16662": 207, "16664": 207, "16666": 207, "16668": 207, "16670": 207, "16672": 207, "16674": 207, "16676": 207, "16678": 207, "16680": 207, "16682": 207, "16684": 207, "16686": 207, "16688": 207, "16690": 207, "16692": 207, "16694": 207, "16696": 207, "16698": 207, "16700": 207, "16702": 207, "16704": 207, "16706": 207, "16708": 207, "16710": 207, "16712": 207, "16714": 207, "16716": 207, "16718": 207, "16720": 207, "16722": 207, "16724": 207, "16726": 207, "16728": 207, "16730": 207, "16732": 207, "16734": 207, "16736": 207, "16738": 207, "16740": 207, "16742": 207, "16744": 207, "16746": 207, "16748": 207, "16750": 207, "16752": 207, "16754": 207, "16756": 207, "16758": 207, "16760": 207, "16762": 207, "16764": 207, "16766": 207, "16768": 207, "16770": 207, "16772": 207, "16774": 207, "16776": 207, "16778": 207, "16780": 207, "16782": 207, "16784": 207, "16786": 207, "16788": 207, "16790": 207, "16792": 207, "16794": 207, "16796": 207, "16798": 207, "16800": 207, "16802": 207, "16804": 207, "16806": 207, "16808": 207, "16810": 207, "16812": 207, "16814": 207, "16816": 207, "16818": 207, "16820": 207, "16822": 207, "16824": 207, "16826": 207, "16828": 207, "16830": 207, "16832": 207, "16834": 207, "16836": 207, "16838": 207, "16840": 207, "16842": 207, "16844": 207, "16846": 207, "16848": 207, "16850": 207, "16852": 207, "16854": 207, "16856": 207, "16858": 207, "16860": 207, "16862": 207, "16864": 207, "16866": 207, "16868": 207, "16870": 207, "16872": 207, "16874": 207, "16876": 207, "16878": 207, "16880": 207, "16882": 207, "16884": 207, "16886": 207, "16888": 207, "16890": 207, "16892": 207, "16894": 207, "16896": 207, "16898": 207, "16900": 207, "16902": 207, "16904": 207, "16906": 207, "16908": 207, "16910": 207, "16912": 207, "16914": 207, "16916": 207, "16918": 207, "16920": 207, "16922": 207, "16924": 207, "16926": 207, "16928": 207, "16930": 207, "16932": 207, "16934": 207, "16936": 207, "16938": 207, "16940": 207, "16942": 207, "16944": 207, "16946": 207, "16948": 207, "16950": 207, "16952": 207, "16954": 207, "16956": 207, "16958": 207, "16960": 207, "16962": 207, "16964": 207, "16966": 207, "16968": 207, "16970": 207, "16972": 207, "16974": 207, "16976": 207, "16978": 207, "16980": 207, "16982": 207, "16984": 207, "16986": 207, "16988": 207, "16990": 207, "16992": 207, "16994": 207, "16996": 207, "16998": 207, "17000": 207, "17002": 207, "17004": 207, "17006": 207, "17008": 207, "17010": 207, "17012": 207, "17014": 207, "17016": 207, "17018": 207, "17020": 207, "17022": 207, "17024": 207, "17026": 207, "17028": 207, "17030": 207, "17032": 207, "17034": 207, "17036": 207, "17038": 207, "17040": 207, "17042": 207, "17044": 207, "17046": 207, "17048": 207, "17050": 207, "17052": 207, "17054": 207, "17056": 207, "17058": 207, "17060": 207, "17062": 207, "17064": 207, "17066": 207, "17068": 207, "17070": 207, "17072": 207, "17074": 207, "17076": 207, "17078": 207, "17080": 207, "17082": 207, "17084": 207, "17086": 207, "17088": 207, "17090": 207, "17092": 207, "17094": 207, "17096": 207, "17098": 207, "17100": 207, "17102": 207, "17104": 207, "17106": 207, "17108": 207, "17110": 207, "17112": 207, "17114": 207, "17116": 207, "17118": 207, "17120": 207, "17122": 207, "17124": 207, "17126": [207, 256], "17128": 207, "17130": 207, "17132": 207, "17134": 207, "17136": 207, "17138": 207, "17140": 207, "17142": 207, "17144": 207, "17146": 207, "17148": 207, "17150": 207, "17152": 207, "17154": 207, "17156": 207, "17158": 207, "17160": 207, "17162": 207, "17164": 207, "17166": 207, "17168": 207, "17170": 207, "17172": 207, "17174": 207, "17176": 207, "17178": 207, "17180": 207, "17182": 207, "17184": 207, "17186": 207, "17188": 207, "17190": 207, "17192": 207, "17194": 207, "17196": 207, "17198": 207, "17200": 207, "17202": 207, "17204": 207, "17206": 207, "17208": 207, "17210": 207, "17212": 207, "17214": 207, "17216": 207, "17218": 207, "17220": 207, "17222": 207, "17224": 207, "17226": 207, "17228": 207, "17230": 207, "17232": 207, "17234": 207, "17236": 207, "17238": 207, "17240": 207, "17242": 207, "17244": 207, "17246": 207, "17248": 207, "17250": 207, "17252": 207, "17254": 207, "17256": 207, "17258": 207, "17260": 207, "17262": 207, "17264": 207, "17266": 207, "17268": 207, "17270": 207, "17272": 207, "17274": 207, "17276": 207, "17278": 207, "17280": 207, "17282": 207, "17284": 207, "17286": 207, "17288": 207, "17290": 207, "17292": 207, "17294": 207, "17296": 207, "17298": 207, "17300": 207, "17302": 207, "17304": 207, "17306": 207, "17308": 207, "17310": 207, "17312": 207, "17314": 207, "17316": 207, "17318": 207, "17320": 207, "17322": 207, "17324": 207, "17326": 207, "17328": 207, "17330": 207, "17332": 207, "17334": 207, "17336": 207, "17338": 207, "17340": 207, "17342": 207, "17344": 207, "17346": 207, "17348": 207, "17350": 207, "17352": 207, "17354": 207, "17356": 207, "17358": 207, "17360": 207, "17362": 207, "17364": 207, "17366": 207, "17368": 207, "17370": 207, "17372": 207, "17374": 207, "17376": 207, "17378": 207, "17380": 207, "17382": 207, "17384": 207, "17386": 207, "17388": 207, "17390": 207, "17392": 207, "17394": 207, "17396": 207, "17398": 207, "17400": 207, "17402": 207, "17404": 207, "17406": 207, "17408": 207, "17410": 207, "17412": 207, "17414": 207, "17416": 207, "17418": 207, "17420": 207, "17422": 207, "17424": 207, "17426": 207, "17428": 207, "17430": 207, "17432": 207, "17434": 207, "17436": 207, "17438": 207, "17440": 207, "17442": 207, "17444": 207, "17446": 207, "17448": 207, "17450": 207, "17452": 207, "17454": 207, "17456": 207, "17458": 207, "17460": 207, "17462": 207, "17464": 207, "17466": 207, "17468": 207, "17470": 207, "17472": 207, "17474": 207, "17476": 207, "17478": 207, "17480": 207, "17482": 207, "17484": 207, "17486": 207, "17488": 207, "17490": 207, "17492": 207, "17494": 207, "17496": 207, "17498": 207, "17500": 207, "17502": 207, "17504": 207, "17506": 207, "17508": 207, "17510": 207, "17512": 207, "17514": 207, "17516": 207, "17518": 207, "17520": 207, "17522": 207, "17524": 207, "17526": 207, "17528": 207, "17530": 207, "17532": 207, "17534": 207, "17536": 207, "17538": 207, "17540": 207, "17542": 207, "17544": 207, "17546": 207, "17548": 207, "17550": 207, "17552": 207, "17554": 207, "17556": 207, "17558": 207, "17560": 207, "17562": 207, "17564": 207, "17566": 207, "17568": 207, "17570": 207, "17572": 207, "17574": 207, "17576": 207, "17578": 207, "17580": 207, "17582": 207, "17584": 207, "17586": 207, "17588": 207, "17590": 207, "17592": 207, "17594": 207, "17596": 207, "17598": 207, "17600": 207, "17602": 207, "17604": 207, "17606": 207, "17608": 207, "17610": 207, "17612": 207, "17614": 207, "17616": 207, "17618": 207, "17620": 207, "17622": 207, "17624": 207, "17626": 207, "17628": 207, "17630": 207, "17632": 207, "17634": 207, "17636": 207, "17638": 207, "17640": 207, "17642": 207, "17644": 207, "17646": 207, "17648": 207, "17650": 207, "17652": 207, "17654": 207, "17656": 207, "17658": 207, "17660": 207, "17662": 207, "17664": 207, "17666": 207, "17668": 207, "17670": 207, "17672": 207, "17674": 207, "17676": 207, "17678": 207, "17680": 207, "17682": 207, "17684": 207, "17686": 207, "17688": 207, "17690": 207, "17692": 207, "17694": 207, "17696": 207, "17698": 207, "17700": 207, "17702": 207, "17704": 207, "17706": 207, "17708": 207, "17710": 207, "17712": 207, "17714": 207, "17716": 207, "17718": 207, "17720": 207, "17722": 207, "17724": 207, "17726": 207, "17728": 207, "17730": 207, "17732": 207, "17734": 207, "17736": 207, "17738": 207, "17740": 207, "17742": 207, "17744": 207, "17746": 207, "17748": 207, "17750": 207, "17752": 207, "17754": 207, "17756": 207, "17758": 207, "17760": 207, "17762": 207, "17764": 207, "17766": 207, "17768": 207, "17770": 207, "17772": 207, "17774": 207, "17776": 207, "17778": 207, "17780": 207, "17782": 207, "17784": 207, "17786": 207, "17788": 207, "17790": 207, "17792": 207, "17794": 207, "17796": 207, "17798": 207, "17800": 207, "17802": 207, "17804": 207, "17806": 207, "17808": 207, "17810": 207, "17812": 207, "17814": 207, "17816": 207, "17818": 207, "17820": 207, "17822": 207, "17824": 207, "17826": 207, "17828": 207, "17830": 207, "17832": 207, "17834": 207, "17836": 207, "17838": 207, "17840": 207, "17842": 207, "17844": 207, "17846": 207, "17848": 207, "17850": 207, "17852": 207, "17854": 207, "17856": 207, "17858": 207, "17860": 207, "17862": 207, "17864": 207, "17866": 207, "17868": 207, "17870": 207, "17872": 207, "17874": 207, "17876": 207, "17878": 207, "17880": 207, "17882": 207, "17884": 207, "17886": 207, "17888": 207, "17890": 207, "17892": 207, "17894": 207, "17896": 207, "17898": 207, "17900": 207, "17902": 207, "17904": 207, "17906": 207, "17908": 207, "17910": 207, "17912": 207, "17914": 207, "17916": 207, "17918": 207, "17920": 207, "17922": 207, "17924": 207, "17926": 207, "17928": 207, "17930": 207, "17932": 207, "17934": 207, "17936": 207, "17938": 207, "17940": 207, "17942": 207, "17944": 207, "17946": 207, "17948": 207, "17950": 207, "17952": 207, "17954": 207, "17956": 207, "17958": 207, "17960": 207, "17962": 207, "17964": 207, "17966": 207, "17968": 207, "17970": 207, "17972": 207, "17974": 207, "17976": 207, "17978": 207, "17980": 207, "17982": 207, "17984": 207, "17986": 207, "17988": 207, "17990": 207, "17992": 207, "17994": 207, "17996": 207, "17998": 207, "18000": [207, 864], "18002": 207, "18004": 207, "18006": 207, "18008": 207, "18010": 207, "18012": 207, "18014": 207, "18016": 207, "18018": 207, "18020": 207, "18022": 207, "18024": 207, "18026": 207, "18028": 207, "18030": 207, "18032": 207, "18034": 207, "18036": 207, "18038": 207, "18040": 207, "18042": 207, "18044": 207, "18046": 207, "18048": 207, "18050": 207, "18052": 207, "18054": 207, "18056": 207, "18058": 207, "18060": 207, "18062": 207, "18064": 207, "18066": 207, "18068": 207, "18070": 207, "18072": 207, "18074": 207, "18076": 207, "18078": 207, "18080": 207, "18082": 207, "18084": 207, "18086": 207, "18088": 207, "18090": 207, "18092": 207, "18094": 207, "18096": 207, "18098": 207, "18100": 207, "18102": 207, "18104": 207, "18106": 207, "18108": 207, "18110": 207, "18112": 207, "18114": 207, "18116": 207, "18118": 207, "18120": 207, "18122": 207, "18124": 207, "18126": 207, "18128": 207, "18130": 207, "18132": 207, "18134": 207, "18136": 207, "18138": 207, "18140": 207, "18142": 207, "18144": 207, "18146": 207, "18148": 207, "18150": 207, "18152": 207, "18154": 207, "18156": 207, "18158": 207, "18160": 207, "18162": 207, "18164": 207, "18166": 207, "18168": 207, "18170": 207, "18172": 207, "18174": 207, "18176": 207, "18178": 207, "18180": 207, "18182": 207, "18184": 207, "18186": 207, "18188": 207, "18190": 207, "18192": 207, "18194": 207, "18196": 207, "18198": 207, "18200": 207, "18202": 207, "18204": 207, "18206": 207, "18208": 207, "18210": 207, "18212": 207, "18214": 207, "18216": 207, "18218": 207, "18220": 207, "18222": 207, "18224": 207, "18226": 207, "18228": 207, "18230": 207, "18232": 207, "18234": 207, "18236": 207, "18238": 207, "18240": 207, "18242": 207, "18244": 207, "18246": 207, "18248": 207, "18250": 207, "18252": 207, "18254": 207, "18256": 207, "18258": 207, "18260": 207, "18262": 207, "18264": 207, "18266": 207, "18268": 207, "18270": 207, "18272": 207, "18274": 207, "18276": 207, "18278": 207, "18280": 207, "18282": 207, "18284": 207, "18286": 207, "18288": 207, "18290": 207, "18292": 207, "18294": 207, "18296": 207, "18298": 207, "18300": 207, "18302": 207, "18304": 207, "18306": 207, "18308": 207, "18310": 207, "18312": 207, "18314": 207, "18316": 207, "18318": 207, "18320": 207, "18322": 207, "18324": 207, "18326": 207, "18328": 207, "18330": 207, "18332": 207, "18334": 207, "18336": 207, "18338": 207, "18340": 207, "18342": 207, "18344": 207, "18346": 207, "18348": 207, "18350": 207, "18352": 207, "18354": 207, "18356": 207, "18358": 207, "18360": 207, "18362": 207, "18364": 207, "18366": 207, "18368": 207, "18370": 207, "18372": 207, "18374": 207, "18376": 207, "18378": 207, "18380": 207, "18382": 207, "18384": [207, 932], "18386": 207, "18388": 207, "18390": 207, "18392": 207, "18394": 207, "18396": 207, "18398": 207, "18400": 207, "18402": 207, "18404": 207, "18406": 207, "18408": 207, "18410": 207, "18412": 207, "18414": 207, "18416": 207, "18418": 207, "18420": 207, "18422": 207, "18424": 207, "18426": 207, "18428": 207, "18430": 207, "18432": 207, "18434": 207, "18436": 207, "18438": 207, "18440": 207, "18442": 207, "18444": 207, "18446": 207, "18448": 207, "18450": 207, "18452": 207, "18454": 207, "18456": 207, "18458": 207, "18460": 207, "18462": 207, "18464": 207, "18466": 207, "18468": 207, "18470": 207, "18472": 207, "18474": 207, "18476": 207, "18478": 207, "18480": 207, "18482": 207, "18484": 207, "18486": 207, "18488": 207, "18490": 207, "18492": 207, "18494": 207, "18496": 207, "18498": 207, "18500": 207, "18502": 207, "18504": 207, "18506": 207, "18508": 207, "18510": 207, "18512": 207, "18514": 207, "18516": 207, "18518": 207, "18520": 207, "18522": 207, "18524": 207, "18526": 207, "18528": 207, "18530": 207, "18532": 207, "18534": 207, "18536": 207, "18538": 207, "18540": 207, "18542": 207, "18544": 207, "18546": 207, "18548": 207, "18550": 207, "18552": 207, "18554": 207, "18556": 207, "18558": 207, "18560": 207, "18562": 207, "18564": 207, "18566": 207, "18568": 207, "18570": 207, "18572": 207, "18574": 207, "18576": 207, "18578": 207, "18580": 207, "18582": 207, "18584": 207, "18586": 207, "18588": 207, "18590": 207, "18592": 207, "18594": 207, "18596": 207, "18598": 207, "18600": 207, "18602": 207, "18604": 207, "18606": 207, "18608": 207, "18610": 207, "18612": 207, "18614": 207, "18616": 207, "18618": 207, "18620": 207, "18622": 207, "18624": 207, "18626": 207, "18628": 207, "18630": 207, "18632": 207, "18634": 207, "18636": 207, "18638": 207, "18640": 207, "18642": 207, "18644": 207, "18646": 207, "18648": 207, "18650": 207, "18652": 207, "18654": 207, "18656": 207, "18658": 207, "18660": 207, "18662": 207, "18664": 207, "18666": 207, "18668": 207, "18670": 207, "18672": 207, "18674": 207, "18676": 207, "18678": 207, "18680": 207, "18682": 207, "18684": 207, "18686": 207, "18688": 207, "18690": 207, "18692": 207, "18694": 207, "18696": 207, "18698": 207, "18700": 207, "18702": 207, "18704": 207, "18706": 207, "18708": 207, "18710": 207, "18712": 207, "18714": 207, "18716": 207, "18718": 207, "18720": 207, "18722": 207, "18724": 207, "18726": 207, "18728": 207, "18730": 207, "18732": 207, "18734": 207, "18736": 207, "18738": 207, "18740": 207, "18742": 207, "18744": 207, "18746": 207, "18748": 207, "18750": 207, "18752": 207, "18754": 207, "18756": 207, "18758": 207, "18760": 207, "18762": 207, "18764": 207, "18766": 207, "18768": 207, "18770": 207, "18772": 207, "18774": 207, "18776": 207, "18778": 207, "18780": 207, "18782": 207, "18784": 207, "18786": 207, "18788": 207, "18790": 207, "18792": 207, "18794": 207, "18796": 207, "18798": 207, "18800": 207, "18802": 207, "18804": 207, "18806": 207, "18808": 207, "18810": 207, "18812": 207, "18814": 207, "18816": 207, "18818": 207, "18820": 207, "18822": 207, "18824": 207, "18826": 207, "18828": 207, "18830": 207, "18832": 207, "18834": 207, "18836": 207, "18838": 207, "18840": 207, "18842": 207, "18844": 207, "18846": 207, "18848": 207, "18850": 207, "18852": 207, "18854": 207, "18856": 207, "18858": 207, "18860": 207, "18862": 207, "18864": 207, "18866": 207, "18868": 207, "18870": 207, "18872": 207, "18874": 207, "18876": 207, "18878": 207, "18880": 207, "18882": 207, "18884": 207, "18886": 207, "18888": 207, "18890": 207, "18892": 207, "18894": 207, "18896": 207, "18898": 207, "18900": 207, "18902": 207, "18904": 207, "18906": 207, "18908": 207, "18910": 207, "18912": 207, "18914": 207, "18916": 207, "18918": 207, "18920": 207, "18922": 207, "18924": 207, "18926": 207, "18928": 207, "18930": 207, "18932": 207, "18934": 207, "18936": 207, "18938": 207, "18940": 207, "18942": 207, "18944": 207, "18946": 207, "18948": 207, "18950": 207, "18952": 207, "18954": 207, "18956": 207, "18958": 207, "18960": 207, "18962": 207, "18964": 207, "18966": 207, "18968": 207, "18970": 207, "18972": 207, "18974": 207, "18976": 207, "18978": 207, "18980": 207, "18982": 207, "18984": 207, "18986": 207, "18988": 207, "18990": 207, "18992": 207, "18994": 207, "18996": 207, "18998": 207, "19000": 207, "19002": 207, "19004": 207, "19006": 207, "19008": 207, "19010": 207, "19012": 207, "19014": 207, "19016": 207, "19018": 207, "19020": 207, "19022": 207, "19024": 207, "19026": 207, "19028": 207, "19030": 207, "19032": 207, "19034": 207, "19036": 207, "19038": 207, "19040": 207, "19042": 207, "19044": 207, "19046": 207, "19048": 207, "19050": 207, "19052": 207, "19054": 207, "19056": 207, "19058": 207, "19060": 207, "19062": 207, "19064": 207, "19066": 207, "19068": 207, "19070": 207, "19072": 207, "19074": 207, "19076": 207, "19078": 207, "19080": 207, "19082": 207, "19084": 207, "19086": 207, "19088": 207, "19090": 207, "19092": 207, "19094": 207, "19096": 207, "19098": 207, "19100": 207, "19102": 207, "19104": 207, "19106": 207, "19108": 207, "19110": 207, "19112": 207, "19114": 207, "19116": 207, "19118": 207, "19120": 207, "19122": 207, "19124": 207, "19126": 207, "19128": 207, "19130": 207, "19132": 207, "19134": 207, "19136": 207, "19138": 207, "19140": 207, "19142": 207, "19144": 207, "19146": 207, "19148": 207, "19150": 207, "19152": 207, "19154": 207, "19156": 207, "19158": 207, "19160": 207, "19162": 207, "19164": 207, "19166": 207, "19168": 207, "19170": 207, "19172": 207, "19174": 207, "19176": 207, "19178": 207, "19180": 207, "19182": 207, "19184": 207, "19186": 207, "19188": 207, "19190": 207, "19192": 207, "19194": 207, "19196": 207, "19198": 207, "19200": 207, "19202": 207, "19204": 207, "19206": 207, "19208": 207, "19210": 207, "19212": 207, "19214": 207, "19216": 207, "19218": 207, "19220": 207, "19222": 207, "19224": 207, "19226": 207, "19228": 207, "19230": 207, "19232": 207, "19234": 207, "19236": 207, "19238": 207, "19240": 207, "19242": 207, "19244": 207, "19246": 207, "19248": 207, "19250": 207, "19252": 207, "19254": 207, "19256": 207, "19258": 207, "19260": 207, "19262": 207, "19264": 207, "19266": 207, "19268": 207, "19270": 207, "19272": 207, "19274": 207, "19276": 207, "19278": 207, "19280": 207, "19282": 207, "19284": 207, "19286": 207, "19288": 207, "19290": 207, "19292": 207, "19294": 207, "19296": 207, "19298": 207, "19300": 207, "19302": 207, "19304": 207, "19306": 207, "19308": 207, "19310": 207, "19312": 207, "19314": 207, "19316": 207, "19318": 207, "19320": 207, "19322": 207, "19324": 207, "19326": 207, "19328": 207, "19330": 207, "19332": 207, "19334": 207, "19336": 207, "19338": 207, "19340": 207, "19342": 207, "19344": 207, "19346": 207, "19348": 207, "19350": 207, "19352": 207, "19354": 207, "19356": 207, "19358": 207, "19360": 207, "19362": 207, "19364": 207, "19366": 207, "19368": 207, "19370": 207, "19372": 207, "19374": 207, "19376": 207, "19378": 207, "19380": 207, "19382": 207, "19384": 207, "19386": 207, "19388": 207, "19390": 207, "19392": 207, "19394": 207, "19396": 207, "19398": 207, "19400": 207, "19402": 207, "19404": 207, "19406": 207, "19408": 207, "19410": 207, "19412": 207, "19414": 207, "19416": 207, "19418": 207, "19420": 207, "19422": 207, "19424": 207, "19426": 207, "19428": 207, "19430": 207, "19432": 207, "19434": 207, "19436": 207, "19438": 207, "19440": 207, "19442": 207, "19444": 207, "19446": 207, "19448": 207, "19450": 207, "19452": 207, "19454": 207, "19456": 207, "19458": 207, "19460": 207, "19462": 207, "19464": 207, "19466": 207, "19468": 207, "19470": 207, "19472": 207, "19474": 207, "19476": 207, "19478": 207, "19480": 207, "19482": 207, "19484": 207, "19486": 207, "19488": 207, "19490": 207, "19492": 207, "19494": 207, "19496": 207, "19498": 207, "19500": 207, "19502": 207, "19504": 207, "19506": 207, "19508": 207, "19510": 207, "19512": 207, "19514": 207, "19516": 207, "19518": 207, "19520": 207, "19522": 207, "19524": 207, "19526": 207, "19528": 207, "19530": 207, "19532": 207, "19534": 207, "19536": 207, "19538": 207, "19540": 207, "19542": 207, "19544": 207, "19546": 207, "19548": 207, "19550": 207, "19552": 207, "19554": 207, "19556": 207, "19558": 207, "19560": 207, "19562": 207, "19564": 207, "19566": 207, "19568": 207, "19570": 207, "19572": 207, "19574": 207, "19576": 207, "19578": 207, "19580": 207, "19582": 207, "19584": 207, "19586": 207, "19588": 207, "19590": 207, "19592": 207, "19594": 207, "19596": 207, "19598": 207, "19600": 207, "19602": 207, "19604": 207, "19606": 207, "19608": 207, "19610": 207, "19612": 207, "19614": 207, "19616": 207, "19618": 207, "19620": 207, "19622": 207, "19624": 207, "19626": 207, "19628": 207, "19630": 207, "19632": 207, "19634": 207, "19636": 207, "19638": 207, "19640": 207, "19642": 207, "19644": 207, "19646": 207, "19648": 207, "19650": 207, "19652": 207, "19654": 207, "19656": 207, "19658": 207, "19660": 207, "19662": 207, "19664": 207, "19666": 207, "19668": 207, "19670": 207, "19672": 207, "19674": 207, "19676": 207, "19678": 207, "19680": 207, "19682": 207, "19684": 207, "19686": 207, "19688": 207, "19690": 207, "19692": 207, "19694": 207, "19696": 207, "19698": 207, "19700": 207, "19702": 207, "19704": 207, "19706": 207, "19708": 207, "19710": 207, "19712": 207, "19714": 207, "19716": 207, "19718": 207, "19720": 207, "19722": 207, "19724": 207, "19726": 207, "19728": 207, "19730": 207, "19732": 207, "19734": 207, "19736": 207, "19738": 207, "19740": 207, "19742": 207, "19744": 207, "19746": 207, "19748": 207, "19750": 207, "19752": 207, "19754": 207, "19756": 207, "19758": 207, "19760": 207, "19762": 207, "19764": 207, "19766": 207, "19768": 207, "19770": 207, "19772": 207, "19774": 207, "19776": 207, "19778": 207, "19780": 207, "19782": 207, "19784": 207, "19786": 207, "19788": 207, "19790": 207, "19792": 207, "19794": 207, "19796": 207, "19798": 207, "19800": 207, "19802": 207, "19804": 207, "19806": 207, "19808": 207, "19810": 207, "19812": 207, "19814": 207, "19816": 207, "19818": 207, "19820": 207, "19822": 207, "19824": 207, "19826": 207, "19828": 207, "19830": 207, "19832": 207, "19834": 207, "19836": 207, "19838": 207, "19840": 207, "19842": 207, "19844": 207, "19846": 207, "19848": 207, "19850": 207, "19852": 207, "19854": 207, "19856": 207, "19858": 207, "19860": 207, "19862": 207, "19864": 207, "19866": 207, "19868": 207, "19870": 207, "19872": 207, "19874": 207, "19876": 207, "19878": 207, "19880": 207, "19882": 207, "19884": 207, "19886": 207, "19888": 207, "19890": 207, "19892": 207, "19894": 207, "19896": 207, "19898": 207, "19900": 207, "19902": 207, "19904": 207, "19906": 207, "19908": 207, "19910": 207, "19912": 207, "19914": 207, "19916": 207, "19918": 207, "19920": 207, "19922": 207, "19924": 207, "19926": 207, "19928": 207, "19930": 207, "19932": 207, "19934": 207, "19936": 207, "19938": 207, "19940": 207, "19942": 207, "19944": 207, "19946": 207, "19948": 207, "19950": 207, "19952": 207, "19954": 207, "19956": 207, "19958": 207, "19960": 207, "19962": 207, "19964": 207, "19966": 207, "19968": 207, "19970": 207, "19972": 207, "19974": 207, "19976": 207, "19978": 207, "19980": 207, "19982": 207, "19984": 207, "19986": 207, "19988": 207, "19990": 207, "19992": 207, "19994": 207, "19996": 207, "19998": 207, "l_to_send": 207, "json_to_send": 207, "json_receiv": 207, "l_receiv": 207, "sine": [207, 248, 265], "140106668681968": 207, "wallclock_axi": 207, "1638538131": 207, "1975703": 207, "2978473": 207, "3981225": 207, "498449": 207, "5987027": 207, "698947": 207, "7996597": 207, "899947": 207, "1638538132": 207, "0001943": 207, "1010473": 207, "0b10110": 207, "0x16": [207, 748], "0b1011": [207, 242], "bit_3": 207, "0b00001": 207, "0b1": [207, 224], "0b1000": [207, 224], "0b11110": 207, "bitwis": [207, 354, 387, 884, 888, 975], "num1": [207, 224], "0b110101101": 207, "num2": [207, 224], "0b101110100": 207, "0b100100100": 207, "0b111111101": 207, "0b1010": 207, "0b10100": [207, 224], "1fuzzi2fuzzi3fuzzi4": 207, "0b11011001": 207, "abcdef": [207, 214, 220, 224], "cde": 207, "lexic": [207, 414, 709], "indexerror": [207, 224, 227, 245, 302, 955, 1008, 1080], "auer": 207, "aue": 207, "zerodivisionerror": [207, 220, 245, 955], "lst1": 207, "lst2": 207, "toc": 208, "treeset": 208, "searchabl": [208, 211], "iot": [208, 248], "diesel": 208, "vibrat": 208, "lighter": 208, "sensorrandom": 208, "sensorsin": 208, "sensorconst": 208, "decoupl": [208, 427, 916], "wild": [208, 210, 215, 250], "yesterai": 208, "deseri": [208, 220], "decod": [208, 220, 227, 230, 266, 272, 1006, 1052], "swallow": [208, 789, 955], "walkthrough": [208, 210, 215, 1128], "1h": 208, "exchangeformat": 208, "test_mqtt_format": 208, "parser": [208, 220, 274, 313, 641, 1008, 1115], "mosquitto_sub": [208, 1075], "writer": [208, 717, 802], "deserializeerror": 208, "dangl": [208, 357, 528, 542], "fahrenheit": [210, 325, 327, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 428, 629, 667, 708, 710, 711], "nonconst": [210, 540], "getchar": [210, 331, 333, 338, 347], "dry": 210, "verif": [210, 1061], "umlaut": [210, 211, 287, 987, 1072], "\u00f6": [210, 230, 1072], "canari": 210, "asid": [210, 365, 366, 378, 640, 917], "brainfuck": 210, "nok": [210, 677, 911], "singli": [210, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "typedef": [210, 381, 384, 388, 397, 401, 406, 407, 627, 629, 667, 675, 691, 708, 710, 711, 778, 926], "commonplac": [210, 1118], "boundari": [210, 220, 266, 387, 701, 856], "neighborhood": 210, "norm": [210, 1072], "signed": [210, 341, 390], "unsigned": 210, "excurs": [210, 431, 1055], "pointerarith": 210, "lower_bound": [210, 257, 283, 567, 572, 591, 595, 624, 711], "for_each": [210, 257, 572, 591, 595, 624, 675, 711], "diagram": [210, 431, 449, 451, 771, 855, 862, 864], "search_by_lastnam": [210, 620, 621, 622], "const_iter": [210, 522, 566, 569, 570, 571, 573, 588, 627, 642, 675, 676], "calloper": [210, 505], "exc": [210, 505], "ostream": [210, 505, 531, 691, 1100], "paint": [210, 610, 624, 711], "reverse_copi": [210, 257, 505, 572, 591, 595, 624, 711], "cin": [210, 574, 592, 594, 610, 624, 711], "accumul": [210, 505], "raci": [210, 505], "wsl2": [210, 237, 239, 257, 259, 309], "libsqlite3": [210, 415], "libboost": 210, "libgtk": 210, "prosaic": 210, "roman": 210, "mad": [210, 389], "wxwidget": 210, "lieb": [211, 272], "gr\u00fc\u00dfe": [211, 272], "utf8": 211, "distil": [211, 271, 288, 953, 1025], "4j": 212, "unlimitxdeadbeef": [212, 214, 220, 266, 272, 297, 486], "3735928559": [212, 214, 220, 224, 266, 272, 297], "0b10010011": 212, "ippi": 212, "0b0101": 212, "0101": 212, "teifl": 212, "fun1": 212, "fun2": 212, "ipykernel_165524": 212, "729327466": 212, "nsecond": [212, 1000], "rline": 212, "carriag": [212, 344, 1000], "neuer": 212, "ordner": 212, "euer": 212, "regex_str": [212, 230], "calim": 212, "yaaai": 212, "needl": [212, 994, 1002], "haystack": [212, 994, 1002], "finit": [212, 261, 359, 847], "haystack_s": 212, "0x7fe07c0cdf90": 212, "list_iter": [212, 230], "0x7fe07c0cd7f0": 212, "unicode_code_point": 212, "l_new": 212, "ijk": 212, "mengenlehr": 212, "s1": [212, 220, 224, 227, 230, 245, 252, 262, 272, 431, 448, 478, 537, 631, 637, 685, 1005], "s2": [212, 220, 224, 227, 230, 245, 252, 262, 272, 431, 448, 478, 537, 631, 637, 685, 1005], "gunnar": 212, "liam": 212, "maximumum": 212, "variable2": 212, "maximum2": 212, "mrmr": 212, "einser": 212, "square_numb": [212, 1003], "squares_gener": 212, "other_d": [212, 245], "nove": 212, "isspac": [212, 214, 217, 220, 245, 266, 1002], "buchhaltung": [212, 818, 840, 841], "startswith": [212, 220, 249, 250, 252, 266, 411, 1002, 1078], "buch": [212, 1110], "oooo": 212, "isupp": [212, 220, 230, 266, 1002], "zz": 212, "traurig": 212, "substr": [212, 214, 220, 230, 245, 252, 266, 1100], "gid": [212, 220, 709, 785, 786, 793, 795, 803, 875, 890, 1034], "count_byt": 212, "nbyte": 212, "2691": [212, 709, 814], "miscellanea": [213, 878], "brace": [213, 220, 266, 331, 354, 357, 369, 429, 522, 531, 563, 565, 570, 583, 584, 627, 667, 676, 708, 710, 711, 984, 987], "hour_of_dai": 213, "ein_str": 214, "ein_anderer_str": 214, "fghjgfgh": 214, "dfghgfgh": 214, "do_someth": [214, 233, 297, 360, 362, 370, 385, 399, 684, 984], "komplett": 214, "returnwert": [214, 1110], "sinnloser": 214, "weis": [214, 1131], "vorgenommen": 214, "obacht": 214, "140672599989840": 214, "140672464974720": 214, "hoechst": [214, 252], "rechnern": 214, "100000": [214, 230, 640, 863, 1061], "": [214, 230], "exponenti": [214, 987, 1001], "__annotations__": [214, 224, 245, 266, 956], "__closure__": [214, 224, 245, 266], "__code__": [214, 224, 245, 266], "__delattr__": [214, 217, 220, 224, 242, 245, 266], "__dir__": [214, 217, 224, 242, 245, 266], "__format__": [214, 217, 220, 224, 242, 245, 266], "__ge__": [214, 217, 220, 224, 242, 245, 266, 975], "__get__": [214, 224, 245, 266], "__getattribute__": [214, 217, 220, 224, 242, 245, 266], "__globals__": [214, 224, 245, 266], "__gt__": [214, 217, 220, 224, 242, 245, 266], "__hash__": [214, 217, 220, 224, 242, 245, 266], "__init_subclass__": [214, 217, 224, 242, 245, 266], "__kwdefaults__": [214, 224, 245, 266], "__ne__": [214, 217, 220, 224, 242, 245, 266, 975], "__new__": [214, 217, 220, 224, 242, 245, 266], "__qualname__": [214, 224, 245, 266], "__reduce__": [214, 217, 220, 224, 242, 245, 266], "__reduce_ex__": [214, 217, 224, 242, 245, 266], "__setattr__": [214, 217, 220, 224, 242, 245, 266], "__sizeof__": [214, 217, 220, 224, 242, 245, 266], "__subclasshook__": [214, 217, 224, 242, 245, 266], "karteikart": 214, "my_formatted_person": 214, "123425041997": 214, "caros_str": 214, "joergs_str": 214, "0x7ff0dc48b490": 214, "next_po": 214, "tim": [214, 224, 293, 294], "ugli": [214, 224, 238, 247, 248, 261, 268, 269, 326, 331, 505, 711, 783, 788, 813, 814, 854, 953, 954], "flat": [214, 224, 378, 404, 405, 925, 926], "puriti": [214, 224], "silenc": [214, 224, 370, 801], "ambigu": [214, 224, 357, 392, 393, 394, 541, 641, 818], "refus": [214, 224, 233, 421, 731, 784, 855, 871, 930], "temptat": [214, 224], "dutch": [214, 224], "honk": [214, 224], "wahr": 214, "falsch": [214, 227, 1117], "kriegt": 214, "nachkommastellen": 214, "moeglichkeit": 214, "f_str": 214, "punkt_po": 214, "nachkomma_str": 214, "praezedenz": 214, "wandel": 214, "vorn": 214, "anhaengen": 214, "wuenschen": 214, "wuerd": 214, "appendleft": 214, "extendleft": 214, "relem": 214, "popleft": 214, "sorted_l": 214, "sorted_t": 214, "sorted_": 214, "subtext": 214, "ssissippi": 214, "140672464726576": 214, "copied_text": 214, "140672464784832": 214, "140672464784064": 214, "140672599989872": 214, "140672464751872": 214, "140672464768512": 214, "140672464594880": 214, "jkl": 214, "suesser": [214, 220, 227, 230, 233, 249], "sechser_gewuerfelt": 214, "n_tri": [214, 217, 252, 991], "versag": [214, 252], "eva": [214, 266, 994], "xrang": [214, 995], "0x7ff0dc48bed0": 214, "hann": 214, "gruess": 214, "gott": [214, 245, 320], "fill_in_us": 214, "scho": 214, "my_db": 214, "uniq_dict": 214, "konfigurierbaren": 214, "startwert": 214, "ausgibt": 214, "sqnum": 214, "0x7ff014b01820": 214, "xslx": 214, "yz": 214, "lret": 214, "ochwa": 214, "followup": [215, 276, 472, 1045], "unbalanc": 215, "geospati": 215, "gdal": 215, "sweigart": [215, 229, 271, 1056], "datenypen": 216, "libarari": 216, "chainmap": 216, "dequ": [216, 699], "suchalgorithmen": 216, "51139385": 217, "77397a312b47": 217, "50924272": [217, 220], "20210728": [217, 220, 982], "eine_komplizierte_funkt": 217, "endeffekt": 217, "zusammenzuzaehlen": 217, "tarnt": 217, "vergeblich": 217, "komplexitaet": 217, "zahl_als_str": 217, "bledsinn": 217, "try_no": 217, "blahblahblah": 217, "cxyxyyyyxi": 217, "table_str": 217, "table_dict": 217, "139769175732912": 217, "139769175738624": 217, "satan_str": 217, "satan_int": 217, "result_of_print": 217, "result_of_evald_print": 217, "code_str": [217, 227], "compiled_cod": 217, "woswasi": [217, 224], "0x7f1e91eb42f0": 217, "philipp": [217, 224, 227, 245, 252, 266, 429, 504, 576, 588, 620, 622, 1045, 1047, 1051, 1053, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "lastnma": 217, "0x7f1e8c0fe2e0": 217, "__abs__": [217, 224, 242], "__and__": [217, 224, 975], "__bool__": [217, 224, 242], "__ceil__": [217, 224, 242], "__divmod__": [217, 224, 242], "__float__": [217, 224, 242, 266], "__floor__": [217, 224, 242], "__floordiv__": [217, 224, 242, 975], "__getnewargs__": [217, 220, 224, 242, 266], "__index__": [217, 224], "__int__": [217, 224, 242, 266], "__invert__": [217, 224], "__lshift__": [217, 224, 975], "__mod__": [217, 220, 224, 242, 266, 975], "__mul__": [217, 220, 224, 242, 266, 975], "__neg__": [217, 224, 242], "__or__": [217, 224, 975], "__pos__": [217, 224, 242], "__pow__": [217, 224, 242, 975], "__rand__": [217, 224], "__rdivmod__": [217, 224, 242], "__rfloordiv__": [217, 224, 242], "__rlshift__": [217, 224], "__rmod__": [217, 220, 224, 242, 266], "__rmul__": [217, 220, 224, 242, 266], "__ror__": [217, 224], "__round__": [217, 224, 242], "__rpow__": [217, 224, 242], "__rrshift__": [217, 224, 975], "__rshift__": [217, 224, 975], "__rsub__": [217, 224, 242, 975], "__rtruediv__": [217, 224, 242], "__rxor__": [217, 224], "__sub__": [217, 224, 242, 975], "__truediv__": [217, 224, 242, 975], "__trunc__": [217, 224, 242], "__xor__": [217, 224, 975], "as_integer_ratio": [217, 224, 242], "bit_length": [217, 224], "conjug": [217, 224, 242], "denomin": [217, 224], "from_byt": [217, 224], "to_byt": [217, 224], "0x7f1e8c0b3130": 217, "int_list": 217, "0x7f1e8c0fe340": 217, "0x7f1e8c0fe760": 217, "u1": 217, "u2": 217, "type_of_us": 217, "scrambl": 217, "hansj\u00f6rg": [217, 411], "gr\u00f6jsnah": 217, "class_str": 217, "1997": [217, 227, 981, 1045, 1047, 1051, 1053], "0x7f1e8c1c2e50": 217, "joleckmi": 217, "predecessor": [218, 226, 232, 276], "cmdline": 218, "excess": [218, 360], "provocantli": 218, "udemi": [218, 222], "pybai": [218, 1056], "suchzeit": 219, "everywher": [219, 234, 390, 405, 421, 631, 770, 908, 994], "d_as_str": 220, "received_d": 220, "1939": 220, "145415": 220, "bytes_or_buff": [220, 266], "expos": [220, 266, 519, 605, 789, 855, 863, 864, 898], "strict": [220, 240, 266, 426, 440, 447, 461, 475, 527, 711, 1005, 1089], "__contains__": [220, 266], "format_spec": [220, 245, 266], "getattr": [220, 224, 245, 266, 969], "__getitem__": [220, 266, 1080, 1081], "__iter__": [220, 266, 960], "__len__": [220, 266], "casefold": [220, 266], "caseless": [220, 266], "fillchar": [220, 266], "pad": [220, 266, 1001], "occurr": [220, 266, 334], "codec": [220, 227, 230, 266, 272, 1072], "scheme": [220, 266, 543, 951, 955], "unicodeencodeerror": [220, 227, 230, 245, 266, 272, 955, 1072], "xmlcharrefreplac": [220, 266], "register_error": [220, 266], "suffix": [220, 266], "expandtab": [220, 245, 266], "tabsiz": [220, 266], "lowest": [220, 266, 354, 360, 918, 919, 1006], "format_map": [220, 266], "isalnum": [220, 266, 1002], "alphabet": [220, 266, 334, 389, 411, 802, 1072], "isascii": [220, 266], "007f": [220, 266], "isdecim": [220, 266], "iskeyword": [220, 230, 266], "isnumer": [220, 266], "isprint": [220, 266, 334, 362], "printabl": [220, 266, 334, 955], "istitl": [220, 266], "uncas": [220, 266], "pq": [220, 266], "ljust": [220, 266], "removeprefix": [220, 266], "removesuffix": [220, 266], "rindex": [220, 266, 1002], "rpartit": [220, 266], "discard": [220, 266, 393, 539, 540, 677, 800, 801], "splitlin": [220, 266], "keepend": [220, 266], "swapcas": [220, 266], "titlecas": [220, 266], "lookuperror": [220, 245, 266, 955], "untouch": [220, 266, 758], "zfill": [220, 266], "maketran": [220, 266], "usabl": [220, 266, 353, 432, 483, 638, 865], "numerischen": 220, "ecma": 220, "3rd": [220, 717], "interchang": [220, 609, 691, 1072], "marshal": 220, "pickl": [220, 224], "simplejson": 220, "foo": [220, 252, 262, 266, 499, 640, 673, 691, 955, 996], "baz": 220, "u1234": 220, "sort_kei": 220, "getvalu": 220, "compact": [220, 360], "mydict": 220, "obj": [220, 245, 467, 726, 727, 736, 969, 977, 1080, 1081], "x08ar": 220, "as_complex": 220, "dct": 220, "__complex__": 220, "object_hook": 220, "2j": 220, "parse_float": 220, "encode_complex": 220, "serializ": 220, "1j": 220, "jsonencod": 220, "iterencod": 220, "scanner": 220, "jsondecodeerror": 220, "jsondecod": 220, "msg": [220, 233, 345, 430, 434, 922, 924, 925, 929, 951, 954, 955], "unformat": 220, "lineno": [220, 227], "colno": 220, "delattr": [220, 224, 245], "setattr": [220, 224, 245, 969], "__setstate__": [220, 224], "with_traceback": [220, 224], "tb": [220, 224], "__traceback__": [220, 224], "__cause__": [220, 224], "__context__": [220, 224], "__suppress_context__": [220, 224], "parse_int": 220, "parse_const": 220, "object_pairs_hook": 220, "nan": [220, 252, 1061, 1076], "num_str": 220, "_w": 220, "0x7f99fff1bb70": 220, "raw_decod": 220, "extran": 220, "skipkei": 220, "ensure_ascii": 220, "check_circular": 220, "allow_nan": 220, "recogn": [220, 555, 864, 1116], "sensibl": 220, "circular": 220, "recursionerror": [220, 245, 955], "compliant": [220, 968], "item_separ": 220, "key_separ": 220, "_one_shot": 220, "chunk": [220, 302, 390, 752, 890, 1058, 1072], "bigobject": 220, "mysocket": 220, "fp": 220, "inf": 220, "complianc": 220, "ippolito": 220, "redivi": 220, "140299267714496": 220, "140299267930496": 220, "schweissparameter_aussi": 220, "strom_ma": 220, "200004": 220, "spannung_v": 220, "aufs_kabel": 220, "maschine_112": 220, "kabel": [220, 224], "vom_kabel": 220, "schweissparameter_eini": 220, "strom_a": 220, "hal": 220, "2c445fb3": 220, "6ca4": 220, "b9d9": 220, "7cfbbff55326": 220, "doesnt_exist": 220, "_a666": 220, "140299402960464": 220, "0b10000000000000000000000000000000000000000000000000000000000000000": [220, 224, 245, 262], "140299327492352": 220, "func_fals": 220, "func_tru": 220, "sex_opt": 220, "140298898107648": 220, "t_mit_einem_el": 220, "supi": 220, "squares_map": 220, "squares_set": 220, "numtri": 220, "even_numb": 220, "mississppi": 220, "xxxx": 220, "nbin": [220, 227, 252, 266], "ndaemon": [220, 227, 252, 266], "nadm": [220, 227, 252, 266], "nlp": [220, 227, 252, 266], "nsync": [220, 227, 252, 266], "nshutdown": [220, 227, 252, 266], "nhalt": [220, 227, 252, 266], "nmail": [220, 227, 252, 266], "noper": [220, 227, 252, 266], "ngame": [220, 227, 252, 266], "nftp": [220, 227, 252, 266], "nnobodi": [220, 227, 252, 266], "napach": [220, 227, 252, 266], "nsystemd": [220, 227, 252, 266], "ntss": [220, 227, 252, 266], "ndbu": [220, 227, 252, 266], "npolkitd": [220, 227, 252, 266], "navahi": [220, 227, 252, 266], "nunbound": [220, 227, 252, 266], "ndnsmasq": [220, 227, 252, 266], "nnm": [220, 227, 252, 266], "nusbmuxd": [220, 227, 252, 266], "ngluster": [220, 227, 252, 266], "nrtkit": [220, 227, 252, 266], "npipewir": [220, 227, 252, 266], "ngeoclu": [220, 227, 252, 266], "nchroni": [220, 227, 252, 266], "nsaslauth": [220, 227, 252, 266], "nradvd": [220, 227], "nrpc": [220, 227, 252, 266], "nqemu": [220, 227, 252, 266], "nopenvpn": [220, 227, 252, 266], "ncolord": [220, 227, 252, 266, 880], "nrpcuser": [220, 227, 252, 266], "nabrt": [220, 227, 252, 266], "nflatpak": [220, 227, 252, 266], "ngdm": [220, 227, 252, 266], "ngnome": [220, 227, 252, 266], "nvboxadd": [220, 227, 252, 266], "nsshd": [220, 227, 252, 266], "ntcpdump": [220, 227, 252, 266], "njfasch": [220, 227, 252, 266], "nmosquitto": [220, 227, 252, 266], "nsomeon": [220, 227], "1001": [220, 227, 230, 584, 585, 586, 587, 803, 815, 846, 875], "move_to_end": 220, "thermometera": 220, "thermometerb": 220, "get_average_temperatur": 220, "th_list": 220, "avg": [112, 220, 392, 431, 448, 459, 478, 485], "ipykernel_9164": 220, "859664274": 220, "2942790015": 220, "0x7fac83797be0": 220, "basisklass": 220, "level2_1": 220, "l21": 220, "level2_2": 220, "level3": 220, "jedi": 220, "blueey": 220, "droid": 220, "r2d2": 220, "derivednoctor": 220, "dnoctor": 220, "derivedctorcallingsup": 220, "derivedctorcallingbasector": 220, "__firstnam": 220, "__lastnam": 220, "_user__firstnam": 220, "_user__lastnam": 220, "lightsab": 220, "padawan": 220, "arithmeticerror": [220, 245, 955], "waaah": 220, "abgebrannt": 220, "puh": 220, "intakt": 220, "is_even": [220, 224, 644, 645, 646, 647], "0x7fac81f52df0": 220, "0x7fac81cb5700": 220, "progamm": 220, "tumpfback": 220, "och": 220, "umpfback": 220, "rt": [220, 711, 735, 739, 749, 760, 762, 767, 770, 773, 776, 779, 854], "wholefil": 220, "notepad": 221, "betreiben": [221, 1117, 1124, 1125], "unterschiedlichen": 221, "sinnvol": 221, "umgebungen": 221, "unausweichlich": 221, "installationsverzeichni": 221, "verzeichniss": [221, 1119], "ausf\u00fchren": 221, "hernimmt": 221, "erfahrung": [221, 1109], "wei\u00df": 221, "rennt": 221, "ordereddict": 222, "__mro__": 222, "successor": [223, 354], "repeatedli": [223, 584, 1071], "kantenlaeng": 224, "ipykernel_101004": 224, "2437887948": 224, "0x10": [224, 227, 418], "0b1111111111111111111111111111111111111111111111111111111111111111": [224, 245, 262, 266], "1267650600228229401496703205381": 224, "735611673": 224, "ndigit": [224, 245, 333], "0b101": 224, "0b100": [224, 227], "register_statu": 224, "0b1001000": 224, "0b00001000": 224, "strom": 224, "liegt_strom_an": 224, "0b00111110": 224, "ever": [224, 409, 418, 449, 797, 863, 986, 1113], "deadbeef": [224, 486, 857], "gross": 224, "doktor": 224, "jawui": 224, "akademik": 224, "ndef": 224, "tdef": [224, 245], "geh": 224, "hochkomplex": 224, "verendet": 224, "euler": 224, "sche": 224, "dokumentiern": 224, "koennt": 224, "varianc": 224, "fmean": 224, "geometric_mean": 224, "harmonic_mean": 224, "harmon": 224, "median": 224, "median_low": 224, "median_high": 224, "median_group": 224, "50th": 224, "percentil": 224, "multimod": 224, "quantil": 224, "centr": 224, "nearest": [224, 452, 1063], "doctest": 224, "ellipsi": [224, 245], "8333333333": 224, "8333": 224, "spread": 224, "pvarianc": 224, "pstdev": 224, "stdev": [224, 918, 920], "38961843444": 224, "recalcul": 224, "statisticserror": 224, "normaldist": 224, "x1": 224, "unchang": [224, 628, 949], "jointli": 224, "rescal": 224, "cdf": 224, "cumul": [224, 403], "inv_cdf": 224, "invers": [224, 317, 409, 427, 434, 722, 917, 918, 1129], "coeffici": 224, "ovl": 224, "agreement": 224, "densiti": 224, "8035050657330205": 224, "dx": 224, "quartil": 224, "decil": 224, "zscore": 224, "score": 224, "from_sampl": 224, "readonli": 224, "dataset": [224, 1059, 1061, 1077, 1079, 1081, 1083], "subcontrari": 224, "reciproc": 224, "quantiti": [224, 256, 1063], "earn": 224, "5625": 224, "midpoint": 224, "estim": 224, "nomin": 224, "taught": [224, 979, 1118], "aabbbbbbbbcc": 224, "aabbbbccddddeeffffgg": 224, "986893273527251": 224, "0th": 224, "100th": 224, "xbar": 224, "0810874155219827": 224, "3720238095238095": 224, "01875": 224, "gesamter_gruss": 224, "excelsheet": 224, "hinters": 224, "gabali": 224, "helen": 224, "fischer": 224, "sssklndkfgv": 224, "fosvh": 224, "worl": [224, 227, 993], "lowr": 224, "dlrow": [224, 993], "olleh": [224, 993], "even_numbers_fun": 224, "even_numbers_gen": 224, "evennum": 224, "even_filt": 224, "tausend": 224, "1234250497": [224, 227, 230, 233, 429, 436, 588], "1234250597": 224, "users_json_str": 224, "liest": 224, "kontrah": 224, "verwandelt": 224, "gelesenes_ding_wieder_als_dict": 224, "schatz": 224, "erich": 224, "koxi": 224, "hatkeinenwert": 224, "fn": [224, 394, 411, 709, 1083], "ul": [224, 348], "ln": [224, 394], "1st": [225, 1102], "einschub": 225, "filterketten": 225, "datensatz": 225, "letzten": 225, "recapitul": 226, "naeherungsverfahren": 227, "addieren": 227, "140606563548752": 227, "wirklich": [227, 1108], "0o10": 227, "teilbar": 227, "00001": 227, "abd": [227, 554], "i1": [227, 262], "140606428182128": 227, "140606428182896": 227, "2345010101": 227, "elizabeth": [227, 1045, 1047, 1051, 1053, 1067], "1901": 227, "evi": 227, "maxim": [227, 409, 864], "wuerfeln": 227, "freuen": 227, "sechser": 227, "faellt": 227, "jammern": 227, "versuch_numm": 227, "versuchen": 227, "jammert": 227, "hlo": [227, 993], "output_list": [227, 1038], "nullt": 227, "34567654567": 227, "gsd": 227, "another_t": 227, "symmetisch": 227, "netzwerkkommunik": 227, "request_to_send": 227, "request_str_to_send": 227, "1651046407": 227, "3633313": 227, "cabl": [227, 789], "request_str_from_c": 227, "request_from_c": 227, "1651046335": 227, "8477345": 227, "139909434561408": 227, "139909544402512": 227, "139909544402544": 227, "139909543772528": 227, "139909433666288": 227, "roo": [227, 266, 849], "xf6": [227, 230, 272, 987, 1072], "joerg_latin": 227, "xf6rg": [227, 230, 272, 1072], "j\u0456rg": [227, 230, 272, 1072], "cyclic": 229, "140616191009600": 230, "140616191012720": 230, "140116274372176": 230, "0x7f6f5cc2de50": 230, "0x7f6f5cc2df30": 230, "18446744073709551617": 230, "multi_dict": 230, "ipykernel_189565": 230, "1743780635": 230, "140115753096128": 230, "ntri": 230, "bytes_joerg": 230, "bytes_joerg_iso_latin_1": 230, "bytes_joerg_utf_32": 230, "xff": [230, 272], "xfe": [230, 272], "x00": [230, 272, 862], "x00j": [230, 272], "x00r": [230, 272], "x00g": [230, 272], "bytes_joerg_utf_16": 230, "xfej": 230, "bytes_joerg_utf_8": 230, "xc3": [230, 266, 272, 987, 1072], "xb6rg": [230, 266, 272, 1072], "iso_latin_1": 230, "russian": 230, "bytes_received_by_russian": 230, "2435": 230, "010d": 230, "0000000666": 230, "ssi": 230, "garbag": [230, 404, 411, 427, 686, 698, 864, 891, 953, 1065], "ipykernel_4000": 230, "3227798639": 230, "ahja": 230, "24000": 230, "24500": 230, "25000": 230, "25500": 230, "26000": 230, "26500": 230, "__del__": 230, "whe": 230, "13397": 230, "116985": 230, "120725": 230, "118110": 230, "0x7fe3a392aa30": 230, "test_person_bas": 232, "pluggi": [232, 250, 1044, 1093], "rootdir": [232, 250, 758, 1044, 1093], "test_persondb_bas": 232, "test_pytest_demo": 232, "xfail": [232, 1093], "test_persondb": 232, "test_duplicate_svnr": 232, "test_update_sunnycas": 232, "test_update_notexist": 232, "test_update_exact_dupl": 232, "former": [232, 996], "persondb": 232, "sqlite": [232, 415, 1012, 1068], "ics_demand": 232, "maco": [232, 302, 307], "woe": 232, "homebrew": 232, "brew": 232, "flaviocop": 232, "str_mit_666": 233, "140240419976192": 233, "140240419593568": 233, "aclass": 233, "almostempti": 233, "beenther": 233, "kuckucksei": 233, "chirp": 233, "some_bullshit": 233, "bad_thing_happen": 233, "do_some_bullshit": 233, "boah": 233, "python_cod": 233, "a_global_vari": 233, "globale_vari": 233, "140240513015376": 233, "140240513014256": 233, "140240419270768": 233, "140240419271792": 233, "storesanintegerandmodifiesit": 233, "the_int": 233, "my_int": 233, "saiami": 233, "storesalistandmodifiesit": 233, "the_list": 233, "append_someth": 233, "salami": 233, "compute_squar": 233, "satanicerror": 233, "jess": 233, "invalidsvnr": 233, "rex_lin": 233, "json_str": [233, 1052], "python_l": 233, "0x7f8c0551f490": 233, "behandlung": 235, "kurzer": 235, "reicht": [235, 1108], "unwichtig": 235, "weggelassen": 235, "\u00fc": [235, 1072], "jeden": 235, "teilnehmer\u00fcbung": 235, "kernsprach": 235, "rvalu": [235, 257, 283, 530, 635, 667, 677, 683, 686, 687, 688, 689, 692, 700, 708, 710, 711, 1112, 1113, 1114], "constexpr": [235, 236, 237, 257, 259, 667, 677, 701, 710, 711, 1113], "uniform": [235, 236, 237, 239, 283, 409, 429, 531, 563, 583, 584, 627, 667, 676, 708, 710, 711, 968, 1113], "initialisierung": [235, 1129], "infer": 235, "speichermodel": 235, "atomar": [235, 1111, 1129], "standardbibliothek": 235, "regu\u00e4r": 235, "trait": [235, 283], "zufallszahlen": 235, "zeitbibliothek": 235, "sprachsyntax": 235, "deduct": [235, 642, 644], "erweiterungen": 235, "ge\u00e4ndert": 235, "definitionen": 235, "bibliothek": 235, "zusatzvari": 235, "constinit": 235, "modularisierung": [235, 303, 1110], "versionierung": 235, "routinen": 235, "synchronisierung": 235, "werkzeug": [235, 1110, 1117, 1119, 1124, 1127], "kalend": [235, 1107], "zeitzonen": 235, "zus\u00e4tz": 235, "chrono": [235, 236, 237, 239, 248, 283, 434, 627, 688, 699, 700, 704, 710, 711], "initializer_list": [236, 237, 239, 283, 430, 431, 458, 459, 627, 629, 667, 710, 711], "handwrit": [236, 237, 239, 283, 667, 683, 710, 711], "weak_ptr": [236, 237, 239, 283, 683, 708, 710, 711], "boilerpl": [236, 237, 239, 275, 283, 416, 667, 668, 669, 687, 710, 711, 934, 1109], "condition_vari": [236, 237, 239, 248, 283, 700, 710, 711, 1113], "emplace_back": [236, 237, 563], "cref": [236, 237], "interoper": [237, 239, 257, 259], "wazoo": [237, 239, 257, 259], "anviron": [237, 239], "submodul": [237, 239, 484, 547], "chdir": [237, 239], "gtest_main": [237, 434, 483, 485, 486, 506, 509, 521, 547, 685, 686, 1099, 1104], "dummy_suit": 237, "sticki": [238, 247, 248, 268, 269, 302, 307, 711, 788, 813, 854], "insod": 239, "lvalu": [239, 635, 636, 639, 667, 677, 683, 687, 692, 700, 708, 710, 711], "afterword": [239, 636, 667, 710, 711], "ain": [239, 409, 983], "singleton": [240, 426, 427, 433, 447, 461, 475, 527, 711, 1116], "inflex": [240, 329, 426, 440, 447, 453, 454, 461, 475, 527, 711], "flexibl": [240, 420, 426, 440, 447, 461, 475, 527, 573, 711, 901, 916, 932, 933, 934, 949, 950, 1001, 1108], "proxi": [240, 258, 260, 261, 279, 308, 426, 433, 435, 436, 447, 461, 475, 527, 711, 1088, 1116], "serverthread": [240, 451, 465], "heat": [240, 426, 433, 477, 486, 711, 864, 1060, 1061], "my_si": [242, 963], "function_returns_two_valu": 242, "140134238766608": 242, "sizeof": [242, 333, 343, 354, 375, 382, 383, 387, 390, 510, 522, 534, 562, 628, 690, 858, 876, 880, 881, 882, 888, 889, 890, 891, 916, 922, 925, 929, 995], "__getformat__": 242, "__setformat__": 242, "fromhex": 242, "0b0010": 242, "0b1001": 242, "key_list": 242, "key_tupl": 242, "evil_list": 242, "evil_list_2": 242, "neinem": 242, "nviel": 242, "doze_path": [242, 245], "compiled_regex": 242, "l_json": 242, "l_json_sent": 242, "received_data": 242, "0x7f73869f06c0": 242, "create_avg_item": 242, "sensor1": [242, 434], "ninetynin": 242, "koppel": 244, "netzwerk": [244, 303, 1117, 1127, 1130], "condens": [244, 410], "nprint": 245, "noption": 245, "nfile": 245, "nsep": 245, "nend": 245, "nflush": 245, "forcibli": 245, "didact": [245, 320, 323, 546, 548, 549, 1116], "fullnam": [245, 252, 972, 976], "nerst": 245, "nzweit": [245, 297], "andere_list": 245, "neue_list": 245, "140323934455312": 245, "140323934455344": 245, "140323934455376": 245, "140323852147712": 245, "140323933649904": 245, "140323833601584": 245, "frozenset": [245, 262], "__builtins__": [245, 266, 956], "gr\u00fc\u00df": 245, "nocheinprogramm": 245, "ocheinprogramm": 245, "dfghgfdfghj": 245, "jhghgh": 245, "matchstr": 245, "compiled_match": 245, "tprint": 245, "num_ss": 245, "isi": [245, 488, 504, 1076], "strippeditem": 245, "yet_another_d": 245, "s3": [245, 252, 448], "s4": 245, "isdisjoint": [245, 252, 1005], "nnoteworthi": 245, "nil": 245, "__package__": [245, 295, 956], "__loader__": [245, 295, 956], "__spec__": [245, 295, 956], "modulespec": 245, "loader": [245, 399, 417, 422, 932, 949, 1127], "__build_class__": 245, "__import__": 245, "dont_inherit": 245, "_feature_vers": 245, "divmod": 245, "raw_input": 245, "ipkernel": 245, "ipythonkernel": 245, "0x7f9fb16abcd0": 245, "class_or_tupl": 245, "aiter": 245, "async_iter": 245, "anext": 245, "oct": [245, 840, 862, 864, 955], "pow": [245, 539, 540, 690], "exp": [245, 463], "notimpl": [245, 975], "memoryview": 245, "__debug__": 245, "stopasynciter": [245, 955], "generatorexit": [245, 955], "keyboardinterrupt": [245, 261, 955], "importerror": [245, 955], "environmenterror": [245, 1088], "ioerror": [245, 1094], "eoferror": [245, 955], "notimplementederror": [245, 955], "unboundlocalerror": [245, 955], "indentationerror": [245, 955], "taberror": [245, 955], "unicodeerror": [245, 955], "unicodedecodeerror": [245, 955], "unicodetranslateerror": [245, 955], "floatingpointerror": [245, 955], "overflowerror": [245, 955], "systemerror": [245, 955], "referenceerror": [245, 955], "memoryerror": [245, 955], "buffererror": [245, 955], "userwarn": [245, 955], "encodingwarn": [245, 955], "deprecationwarn": [245, 955], "pendingdeprecationwarn": [245, 955], "syntaxwarn": [245, 955], "runtimewarn": [245, 955], "futurewarn": [245, 955, 1076], "importwarn": [245, 955], "unicodewarn": [245, 955], "byteswarn": [245, 955], "resourcewarn": [245, 955], "connectionerror": [245, 955], "blockingioerror": [245, 955], "brokenpipeerror": [245, 955], "childprocesserror": [245, 955], "connectionabortederror": [245, 955], "connectionrefusederror": [245, 955], "connectionreseterror": [245, 955], "fileexistserror": [245, 955], "isadirectoryerror": [245, 955], "notadirectoryerror": [245, 955], "interruptederror": [245, 955], "processlookuperror": [245, 955], "timeouterror": [245, 955], "closefd": 245, "beopen": 245, "1995": [245, 437, 1045, 1047, 1051, 1053], "nation": [245, 862], "1991": [245, 981], "sticht": 245, "centrum": 245, "amsterdam": [245, 981], "credit": [245, 729, 982], "cwi": 245, "cnri": 245, "zope": 245, "cast": [245, 354, 510, 598, 605, 717], "execfil": 245, "_pydev_imp": 245, "_pydev_execfil": 245, "glob": [245, 386, 846, 903, 951, 966, 1100], "runfil": 245, "_pydev_bundl": 245, "pydev_umd": 245, "wdir": 245, "__ipython__": 245, "exclud": [245, 405, 532], "transient": 245, "display_id": 245, "get_ipython": 245, "interactiveshel": 245, "zmqshell": 245, "zmqinteractiveshel": 245, "0x7f9fb1516200": 245, "config_fil": 245, "srcdir": 245, "dstdir": 245, "dst": [245, 349, 399, 488, 529, 548, 557, 558, 564, 1006], "untrust": 248, "lan": 248, "programmat": [248, 455, 855, 863, 911, 931, 1084], "stty": 248, "termio": 248, "ioctl_tti": 248, "setseri": 248, "tty": [248, 789, 844, 916, 922, 946], "tty_io": 248, "bidirection": 248, "nake": 248, "tiocgseri": 248, "tiocsseri": 248, "async_low_lat": 248, "cfmakeraw": 248, "ttyusb0": [248, 789], "low_lat": 248, "serial_struct": 248, "bidir": 248, "advantec": 248, "nonetheless": [248, 251, 254, 644, 1100], "mycat": 248, "mimick": [248, 685], "pwm": [248, 257, 711, 758, 854, 855, 861, 898, 1117, 1124], "pca9685": [248, 711, 854, 855, 861], "make_realtim": 248, "interfaceri": 248, "cif": 248, "samba": 248, "automationadmin": 248, "gsc": 248, "pd": [249, 250, 252, 256, 411, 1059, 1061, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "read_csv": [249, 250, 256, 411, 1059, 1061], "txn": 249, "iso8859": 249, "time_book": [249, 250, 411], "time_valuta": [249, 250, 411], "at66666666666666": 249, "bezahlung": [249, 250, 252, 411], "kart": [249, 250, 252, 411], "eur": [249, 250, 411], "95111243": [249, 411], "abbuchung": [249, 411], "onlinebank": [249, 411], "gutschrift": 249, "000000144919": 249, "339099446722187": 249, "000": [249, 411, 817, 855], "card_pay": 249, "filt": 249, "9325008697": 249, "339099446790254": 249, "og": [249, 399], "237811001182": 249, "auszahlung": 249, "200075787001": 249, "tzb": 249, "anl": 249, "347159strom": 249, "200004871820": 249, "200004876265": 249, "200004848862": 249, "200004871863": 249, "dauerauftrag": 249, "qsnng6xau": 249, "00121672661": 249, "120016487112": [249, 411], "bx": 249, "000009219": 249, "entgelt": 249, "nichtdurchf\u00fchrung": 249, "032300005522384": 249, "saldo": 249, "messtechnik": 249, "602674240071": 249, "0004325259000023": 249, "oeamtc": 249, "mitgliedschaft": 249, "re_liv": 249, "billa": [249, 252, 411], "rew": 249, "dankt": [249, 250, 252, 411], "pipe_stag": 250, "max_colwidth": 250, "max_column": 250, "max_row": 250, "039": 250, "consolut": 250, "insuffici": [250, 641], "categor": [250, 410, 1063], "fuction": 250, "filt_uncat": 250, "uncat_row": 250, "unspecif": [250, 313, 736], "useless": [250, 635, 693, 802, 849, 905, 977], "food": [250, 256], "luxuri": 250, "categorize_card_pay": 250, "jet": 250, "uncertainti": 250, "categorize_v1": 250, "categorize_v2": 250, "secondari": 250, "test_categori": [250, 411], "test_bas": [250, 1044], "000009258": 250, "k002": [250, 411], "impos": [251, 254], "hurt": [251, 254, 348], "strength": [251, 254, 375, 979], "overengin": [251, 254, 348, 409, 410, 1108, 1116], "140480285361680": 252, "0xffffffffffffffff": [252, 272], "0x10000000000000000": [252, 272], "140479638276224": 252, "140480203220736": 252, "140480210406176": 252, "7940943354778932823": 252, "0x7fc4189e7c90": 252, "28800": 252, "237988": 252, "produce_dai": 252, "374557": 252, "l_mal_2": 252, "140480285361712": 252, "140479638477760": 252, "140479638427520": 252, "l4": 252, "l5": 252, "140480202528192": 252, "140479638428736": 252, "140480203212992": 252, "l6": 252, "140479598069936": 252, "is_old": 252, "ipykernel_370861": 252, "4290492544": 252, "abc123": 252, "0x7fc4189e5030": 252, "yyi": 252, "lichtenberg": [252, 429, 588, 620, 622, 1045, 1047, 1051, 1053, 1076, 1077, 1078, 1080, 1081, 1082, 1083], "persons2": [252, 1076, 1077], "set_index": [252, 1081], "sort_valu": 252, "inplac": [252, 256, 871, 1077], "flt": [252, 1078], "isin": [252, 1078], "reset_index": 252, "dropna": 252, "value_count": [252, 256], "int64": [252, 256, 1083], "conversiosn": 253, "9am": 254, "woven": [254, 258], "pipelin": [254, 320, 783, 798, 801, 802, 851, 865, 944], "accountid": 256, "accountdescript": 256, "accountparentid": 256, "storeid": 256, "storedescript": 256, "locationid": 256, "locationdescript": 256, "productid": 256, "productdescript": 256, "sales_managerid": 256, "dateyear": 256, "datequart": 256, "datemonth": 256, "datedai": 256, "categoryvers": 256, "categorycategori": 256, "categorytyp": 256, "valueunit": 256, "original_sales_pric": 256, "sale": 256, "st43": 256, "franchescini": 256, "ct14": 256, "salem": 256, "pd23": 256, "ipa": 256, "sm1": 256, "20144": 256, "201412": 256, "1779": 256, "763910": 256, "usd": 256, "st35": 256, "pd2": 256, "pepsi": 256, "sm4": 256, "201410": 256, "957113": 256, "st98": 256, "walter": 256, "pd24": 256, "amber": 256, "20142": 256, "201406": 256, "449395": 256, "st188": 256, "arrowhead": 256, "ct1": 256, "pd19": 256, "sm8": 256, "20164": 256, "201611": 256, "078689": 256, "st107": 256, "spire": 256, "ct5": 256, "san": 256, "jose": 256, "pd15": 256, "juic": 256, "sm5": 256, "20154": 256, "201512": 256, "303679": 256, "quantity_sold": 256, "sold": 256, "st4": 256, "gstore": 256, "ct13": 256, "portland": 256, "pd26": 256, "wine": 256, "000000": [256, 1061], "1069": 256, "st49": 256, "bai": 256, "depot": 256, "ct4": 256, "sacramento": 256, "pd27": 256, "20151": 256, "201501": 256, "592904": 256, "discount": 256, "st36": 256, "pricelow": 256, "arena": 256, "ct10": 256, "reno": 256, "pd22": 256, "sm3": 256, "20162": 256, "201605": 256, "4351": 256, "045830": 256, "1071": 256, "st7": 256, "street": [256, 824], "pd16": 256, "7905": 256, "590606": 256, "pd12": 256, "lemonad": 256, "20153": 256, "201507": 256, "1073": 256, "modified_model": 256, "sales_managerdescript": 256, "janet": 256, "buri": 256, "nanci": 256, "miller": 256, "setp": 256, "nan_field": 256, "bitfield": 256, "bitfi": 256, "nan_column": 256, "gabriel": [256, 673], "walton": 256, "carl": 256, "jjjjj": 256, "ref_t": 256, "datetime64": 256, "damn": 256, "ref_2015_12_04": 256, "flt_before_2015_12_04": 256, "rows_before_2015_12_04": 256, "st119": 256, "ct2": 256, "francisco": 256, "pd11": 256, "orang": [256, 998], "pulp": 256, "sm7": 256, "kiran": 256, "raj": 256, "201503": 256, "226847": 256, "13627": 256, "793342": 256, "3427": 256, "896898": 256, "15569": 256, "353983": 256, "float64": [256, 1061], "1957": 256, "740301": 256, "572676": 256, "686587": 256, "289381": 256, "flt_product_pd2": 256, "flt_2015": 256, "flt_only_sold": 256, "flt_combin": 256, "st139": 256, "farlo": 256, "ct15": 256, "eugen": 256, "sm11": 256, "jame": 256, "frank": 256, "201511": 256, "st178": 256, "rai": 256, "ct8": 256, "beverli": 256, "hill": 256, "201508": 256, "facet": [257, 259, 583], "rich": [257, 259, 1077, 1087], "toolset": [257, 259, 601], "conceptu": [257, 259, 400, 729, 736, 874], "undergon": [257, 259], "revolut": [257, 259], "odr": [257, 673], "explor": [257, 863], "rodata": [257, 949], "unspecifi": [257, 354, 441, 513, 929, 930], "bookkeep": [258, 410], "fewer": 258, "love": [258, 1051], "closer": 258, "augment": [258, 758, 1073], "test_blah": 258, "monkeypatch": [258, 260, 261, 276, 279], "contextlib": [258, 1064, 1065, 1066], "chatgpt": 259, "ludwig": 259, "registri": [259, 494], "memleak": 259, "jason": [260, 261, 279], "brownle": [260, 261, 279], "contriv": [260, 261, 279, 432, 956, 991], "subthread": [260, 261], "introductori": [260, 261, 279, 711, 854, 895, 1062, 1063, 1113], "sink": [112, 260, 261, 276, 279], "mindset": [260, 261, 279, 758], "develp": 260, "logger": [112, 261, 691], "datalogg": 261, "10am": 261, "reopen": 261, "drei_millionen_int": 262, "3_000_000": 262, "odd_numb": [262, 960], "odd_numbers_func": 262, "ret_num": 262, "0x7f32ccc4c610": 262, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [262, 297], "139855258515840": 262, "139856078033344": 262, "139856078226432": 262, "139856160540176": 262, "i3": 262, "i4": 262, "nope": [262, 911], "0101010101010": 262, "bash_logout": [262, 840], "bash_profil": [262, 840], "thunderbird": [262, 820, 840], "gnupg": [262, 840], "hst": 262, "gitconfig": [262, 840], "pki": [262, 840], "mplayer": 262, "daham": 262, "20230403": 262, "222915": 262, "bash_histori": [262, 840], "python_histori": [262, 840], "lesshst": [262, 840], "139855258795072": 262, "139855260513728": 262, "139856085569920": 262, "doppelt": 262, "gemoppelt": 262, "trag": 262, "exakt": 262, "paarweis": 262, "read_lines_of_fil": 262, "0x7f32c7d8d390": 262, "nohead": [265, 1050, 1051, 1053], "userdb_csv": [265, 1051, 1052, 1053], "interleav": 265, "dosometh": 266, "0x7fe7fbf80df0": 266, "140634424624656": 266, "140634424623536": 266, "0o644": 266, "0b01110101": 266, "setting_blah": 266, "setting_foo": 266, "config_context": 266, "140634341074320": 266, "140634424624688": 266, "140634341076688": 266, "140634341077776": 266, "140634343012864": 266, "140634341099856": 266, "ipykernel_61373": 266, "1125713270": 266, "1234567876543234567654321234565432123456": 266, "140634281233520": 266, "140634341798400": 266, "140634341995008": 266, "140634341576640": 266, "140634341773312": 266, "140634281802304": 266, "global_vari": 266, "bar2": 266, "bar3": 266, "bar4": 266, "bar5": 266, "bar6": 266, "0x7fe7f869b7d0": 266, "0x7fe7f869b920": 266, "0x7fe7f869bbc0": 266, "punctuat": 266, "abcabcabcabcabc": 266, "rex": 266, "cba": [266, 592], "another_d": 266, "rb": 266, "30000": 266, "coreutil": 269, "autopoint": 269, "rpm": [269, 422], "fcntl": [269, 862, 880, 884, 888, 889, 890, 891, 896, 899, 922, 925, 929], "luciano": [271, 303, 304, 1056], "ramalho": [271, 303, 304, 1056], "140640823526928": 272, "0x7fe97e53c610": 272, "140640823526960": 272, "140640741310912": 272, "140640741034048": 272, "140640741341184": 272, "wasjetzt": 272, "140640722624768": 272, "140640722715136": 272, "l1_copi": 272, "my_funky_gener": 272, "meine_dumme_sequenz": 272, "0x7fe9785083a0": 272, "0x7fe98c21bce0": 272, "greeter": [272, 413, 414, 415, 419, 420, 948], "0x7fe9796976d0": 272, "140640740502720": 272, "140640722823952": 272, "140640741119552": 272, "l_copi": 272, "140640741312256": 272, "140640722734080": 272, "140640722760768": 272, "140640722739712": 272, "140640741402496": 272, "owher": 272, "0000042": [272, 1001], "bled": 272, "xfc": [272, 987, 1072], "xdfe": [272, 1072], "gr\u045c\u043fe": [272, 1072], "\u795d\u597d": 272, "big5": [272, 1072], "xaf": 272, "xac": 272, "xa6n": 272, "unterschrift": 272, "illeg": [272, 391, 1072], "multibyt": [272, 337, 1072], "xe7": [272, 1072], "xa5": [272, 1072], "x9d": [272, 1072], "xe5": [272, 1072], "xbd": [272, 1072], "incorpor": [274, 1115], "tradition": [274, 677, 857, 978, 1115], "lexer": [274, 1115], "aris": [274, 440, 1115], "compili": [274, 1115], "rant": [275, 416, 711, 1082], "blacklist": [275, 415, 416, 421, 424, 711], "acquaint": 276, "data_to_send": 277, "data_receiv": 277, "user_receiv": [277, 1052], "140048588115008": 277, "140048588341376": 277, "broader": 283, "nodiscard": 283, "fallthrough": [283, 929], "noexcept": [283, 430, 464, 635, 638, 640, 655, 657, 658, 660, 661, 662, 663, 677, 687, 701], "string_view": 283, "commmandlin": 287, "omg": [287, 369, 717, 1094], "checker": [288, 293, 302], "horribl": 288, "gpio25": [288, 859], "embarass": 288, "winscp": 288, "cluster_ece19": [288, 289, 290, 291, 292, 293, 302, 711], "ece19": [288, 289, 290, 291, 293, 301, 302, 308, 309, 313, 711], "ece19_file_read": [288, 289, 290, 291, 292, 293, 302, 711], "ece19_blinklicht": [288, 289, 290, 291, 292, 302, 711], "ece19_blinklicht_oo": [289, 290, 291, 292, 302, 711], "ece19_blinklicht_unittest": [291, 292, 302, 711], "ece19_blinklicht_abc": [291, 292, 302, 711], "blinklicht": [292, 302, 307, 711], "1910420003": [293, 294], "corinna": [293, 294], "baumgartn": [293, 294, 311], "1910420002": [293, 294], "anzhelika": [293, 294, 302], "chernykh": [293, 294, 302, 311], "1910420005": [293, 294], "simon": [293, 294], "1910420006": [293, 294], "matthia": [293, 294, 311], "kappel": [293, 294, 311], "1810420009": [293, 294], "kolter": [293, 294], "1920420033": [293, 294], "kornberg": [293, 294, 311, 314], "1910420007": [293, 294], "lui": [293, 294, 311], "kraker": [293, 294, 311, 314], "1810420010": [293, 294], "leonid": [293, 294], "kudriaschov": [293, 294], "1910420008": [293, 294], "michael": [293, 294, 303, 304], "1910420010": [293, 294], "sonja": [293, 294, 311], "luka": [293, 294, 311, 314], "1910420013": [293, 294], "behnaz": [293, 294], "mehrabadi": [293, 294, 311], "1910420014": [293, 294], "moser": [293, 294, 311], "1910420015": [293, 294], "moritz": [293, 294], "nagelschmi": [293, 294, 311], "1910420018": [293, 294], "bianca": [293, 294], "reimer": [293, 294], "1910420020": [293, 294], "schmid": [293, 294, 311], "1910420021": [293, 294], "sch\u00fcttler": [293, 294], "1910420022": [293, 294], "schweiger": [293, 294, 311], "1910420024": [293, 294], "sinabel": [293, 294], "1910420025": [293, 294], "slovik": [293, 294, 311], "1910420026": [293, 294], "s\u00f6l": [293, 294, 311], "1910420027": [293, 294], "stangl": [293, 294, 311], "1910420028": [293, 294], "felix": [293, 294, 311], "themessl": [293, 294, 311], "1920420035": [293, 294], "astrid": [293, 294], "vogel": [293, 294, 311], "1810420029": [293, 294], "florian": [293, 294, 311], "zwittnigg": [293, 294], "matricul": [293, 956], "studentdb": 293, "greatli": [293, 395, 1113], "matnr": 293, "rid": [293, 393, 434, 760, 777], "zuweisung": 294, "n1910420002": 294, "n1910420005": 294, "n1910420006": 294, "n1810420009": 294, "n1920420033": 294, "n1910420007": 294, "n1810420010": 294, "n1910420008": 294, "n1910420010": 294, "n1910420013": 294, "n1910420014": 294, "n1910420015": 294, "n1910420018": 294, "n1910420020": 294, "n1910420021": 294, "n1910420022": 294, "n1910420024": 294, "n1910420025": 294, "n1910420026": 294, "n1910420027": 294, "n1910420028": 294, "n1920420035": 294, "n1810420029": 294, "n666": 294, "5g": 294, "n19": 294, "10420013": 294, "n181": 294, "0420029": 294, "20210324": 295, "orig_si": 295, "__interactivehook__": 295, "_base_execut": 295, "_clear_type_cach": 295, "_current_fram": 295, "_debugmallocstat": 295, "_framework": 295, "_getfram": 295, "_git": 295, "_home": 295, "_xoption": 295, "flo": 296, "ted": 296, "rainer": 296, "rg": 296, "some_numb": [297, 984], "auszuspucken": 297, "eine_neue_vari": 297, "klassisch": 297, "140705292246608": 297, "register_cont": 297, "0b11010001110101000": 297, "107432": 297, "erzwungen": 297, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 297, "groesst": 297, "darstellbar": 297, "dos_path": 297, "ein_string_der_aussieht_wie_ein_integ": 297, "ein_integ": 297, "ver\u00e4ndernd": 297, "say_hello": [298, 973], "333333333333336": 298, "disclos": [299, 871], "formalit\u00e4ten": 301, "summer": [301, 302, 308], "daili": [301, 801], "organiz": 302, "shortcut": [302, 379, 818, 850, 987, 1119], "baustein": [302, 307], "navigieren": [302, 307], "sitzen": [302, 307], "nat\u00fcrlich": [302, 307, 320, 1107], "verstehen": [302, 307, 320, 1120], "pr\u00fcfung": [302, 307], "trocken": [302, 307], "pfade": [302, 307, 1108, 1119], "symbolisch": [302, 307, 845], "verschieben": [302, 307], "textfil": [302, 307], "113ff": [302, 307], "ansatzweis": [302, 307], "durchgegangen": [302, 307], "133ff": [302, 307], "durchgemacht": [302, 307], "wirkungsweis": [302, 307], "verstanden": [302, 307, 1110], "verkn\u00fcpfen": [302, 307], "aufw\u00e4rmen": 302, "fremden": 302, "fragerund": 302, "tire": [302, 307], "transact": [302, 307], "wertebereich": 302, "vpn": [302, 865], "gitlab": 302, "sidenot": 302, "stackoverflow": [302, 307, 385], "swoop": [302, 428], "hashbang": 302, "student1": 302, "student2": 302, "student3": 302, "undescript": 302, "contribut": [302, 932], "crlf": 302, "bang": [302, 422], "trial": [302, 935, 944, 1063], "relationship": [302, 441, 474, 516, 598, 691, 901, 934, 948, 964, 968, 1062], "systemkonzept": [303, 320, 1126], "adressr\u00e4um": [303, 320, 1117], "ger\u00e4t": 303, "destruktoren": [303, 1112], "containertempl": 303, "ausz\u00fcg": 303, "labor\u00fcbungen": 303, "absolventinnen": 303, "absolventen": 303, "entwicklungsplatform": 303, "zielplattform": [303, 1112], "dortigen": 303, "betriebssystemkonzept": [303, 1117, 1124], "verinnerlichen": 303, "eckpfeil": [303, 1112], "ansteuern": 303, "merkmal": 303, "nichttrivial": 303, "kerrisk": [303, 304], "handbook": [303, 304], "corbet": [303, 304, 1108], "allessandro": [303, 304], "rubini": [303, 304], "greg": [303, 304], "kroah": [303, 304], "hartman": [303, 304], "richard": [303, 304, 932], "steven": [303, 304, 399], "stephen": [303, 304], "rago": [303, 304], "brian": [303, 304, 323, 1110], "cookbook": [303, 304, 1100], "lutz": [303, 304], "integriert": 303, "\u00fcbungsanteil": 303, "informatik": 303, "einzelpr\u00fcfung": 303, "schriftlich": 303, "vorlesung": 303, "graduat": 304, "copver": 304, "warm": 305, "briefli": [306, 855], "filethermomet": 306, "ue": 308, "arduino": [308, 310, 855, 863, 1075], "homedirectori": [308, 846], "vbox": 308, "subnet": 308, "announc": [309, 420, 421, 598, 862, 863], "mgmt": 309, "64ff": 309, "readdir": [309, 709], "ow": [309, 453, 454, 455, 467, 468, 469], "readlink": 309, "tracker": [310, 311], "thermometers_docu": 310, "toctre": 310, "execconfig": 310, "wacom": [310, 372, 373], "schuettler": 311, "acquir": [311, 701, 763, 905, 910, 919], "zwittnig": 311, "simu": 311, "kudriaschow": 311, "hysteres": 311, "impl": 311, "marku": 311, "stepper": 311, "motor": [311, 711, 854, 861], "wasserfal": 311, "influxdb": 311, "grafana": 311, "nachmittag": 311, "multitask": [312, 317, 700, 710, 711, 854, 895, 909, 915, 917, 918, 920, 1124], "latenc": [313, 317, 701, 711, 756, 854, 895, 915, 917], "gotcha": [313, 317, 602, 711, 854, 875, 895, 915, 917, 925], "type_from_ini": 313, "ece19error": 313, "configfil": [313, 956], "prettier": [313, 544], "support_address": 313, "invalidtypeerror": 313, "newcom": [315, 316], "individualtrain": 319, "baden": 319, "w\u00fcrttemberg": 319, "beginnend": 319, "kursnotizen": 319, "qualivis": 319, "logbuch": 320, "kursteilnehmern": 320, "zustandegekommen": 320, "zukommen": 320, "potentiellen": 320, "zuk\u00fcnftigen": 320, "eindruck": [320, 1107], "zukommt": 320, "publizieren": 320, "einverst\u00e4ndni": 320, "richtlinien": 320, "thalheim": 320, "mixtur": [320, 563], "gr\u00e4felf": 320, "wel": 320, "regensburg": 320, "pr\u00e4sent": 320, "inhous": [320, 1058, 1107], "linuxcampu": 320, "sch\u00f6nen": 320, "teilnehmern": [320, 1131], "aktiv": 320, "mitgestaltet": 320, "kursabschluss": 320, "dran": 320, "provok": 320, "kam": 320, "anmeldung": 320, "zustand": 320, "freiheiten": 320, "gestanden": 320, "zusatzaufgab": 320, "gef\u00fchrt": [320, 1107], "einschr\u00e4nkungen": [320, 1125], "eintagesworkshop": 320, "leuten": 320, "kenn": 320, "einhergehend": 320, "l\u00f6sungen": [320, 1107, 1108], "darauffolgend": 320, "vertiefen": 320, "ausgew\u00e4hlten": 320, "bereichen": 320, "dbapi2": [320, 1071], "objektorientierung": 320, "r\u00e4umen": 320, "zweit\u00e4gig": 320, "gemisch": 320, "kursen": 320, "ziemlich": 320, "eingemacht": 320, "bestellt": 320, "neugier": 320, "leichtfertig": 320, "tief": 320, "hinabgestiegen": 320, "feiner": 320, "internen": 320, "forschungsprojekt": 320, "gebracht": 320, "diesen": [320, 1127], "zusammenschnitt": 320, "workshopcharakt": [320, 1131], "angegraut": 320, "bewusst": [320, 1129], "verwendung": 320, "wunderbar": 320, "automatisieren": 320, "zurerst": 320, "shellbenutzung": 320, "betriebssystemen": [320, 1119, 1124, 1126], "angeordnet": 320, "ge\u00fcbt": 320, "herk\u00f6mmlichen": [320, 1112], "auffrischung": 320, "eingerostet": 320, "neuigkeiten": 320, "align": [320, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711, 856, 858, 925, 1001, 1111, 1114], "querbeet": 320, "aufbauend": 320, "zuvor": 320, "grundkur": 320, "wichtigsten": 320, "neuerungen": [320, 1112], "tobak": 320, "lieblingsschulungen": 320, "basiswissen": 320, "hoeri": 320, "bastelwoch": 320, "betrachtung": 320, "realtimef\u00e4higkeit": 320, "xenomai": [320, 1108], "fad": 320, "auszugsweis": 320, "richtig": [320, 1127], "n\u00e4chten": 320, "schulungstagen": 320, "kurzweil": 320, "beschert": 320, "einf\u00fchrungscharakt": 320, "kernelprogrammierung": 320, "auftrag": 320, "hardwarenah": [320, 1117, 1124], "ausgew\u00e4ht": 320, "kernelstruktur": 320, "crosscompil": 320, "heut": [320, 1112, 1127], "newer": [321, 712, 875, 948, 1116], "msys2": 322, "5595": 322, "17619": 322, "pacman": 322, "mingw64": 322, "w64": 322, "x64": 322, "medium": [322, 412, 689, 930, 1130], "swlh": 322, "2b2e66352456": 322, "kernighan": [323, 1110, 1111], "denni": [323, 363, 562, 1110], "ritchi": [323, 363, 562, 1110, 1111], "ansi": 323, "iec": [323, 528], "9899": 323, "c11": 323, "pdp": [323, 337], "ken": 323, "thompson": 323, "tabul": [324, 332], "celsiu": [325, 326, 428, 439, 470, 862, 864], "brutal": [325, 344, 348, 369, 627, 644, 918], "ordinari": [325, 545, 599, 649, 742, 750, 821, 898, 978, 985], "everytim": [327, 345, 862], "ascend": [328, 1081], "unread": [329, 347, 404, 690, 933, 934, 954, 998], "putchar": 331, "caution": [331, 537, 784, 858], "obscur": [331, 339, 484, 605, 775, 884, 926], "alright": [331, 357], "inequ": [331, 545], "word1": [332, 504], "word2": [332, 504], "word3": [332, 504], "word4": 332, "word5": 332, "unixen": [332, 709, 926, 1095, 1108], "nonsens": [333, 351, 370, 530, 534, 537, 627, 686, 821, 916, 953, 1062, 1105], "illustr": [333, 956], "countchar": 333, "nwhite": 333, "nother": 333, "stat": [333, 709, 880, 888, 889, 890, 891, 916, 922, 925, 929, 1093], "nonprint": [334, 362], "decis": [334, 409, 489, 536, 552, 686, 855, 918, 958, 1063, 1116], "conveni": [334, 418, 784, 864, 929, 949, 1061], "xxxxxxxxxxxxxxxxxxxxxxxxx": 334, "xxxxxxxxxxxxxxxxxx": 334, "subroutin": [335, 403], "outer": [335, 362], "wimplicit": [335, 726], "hygien": 335, "dear": 335, "assembl": [337, 932], "contradict": [337, 632], "640k": 337, "a_str": 337, "strncpy": 337, "maxlen": [337, 338], "strcat": 337, "strncat": 337, "strcmp": [337, 638, 639], "strncmp": 337, "another_str": 337, "nonsensi": 338, "read_lin": 338, "longest": 338, "confin": [339, 956], "cluster_c": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 667, 683, 692, 700, 708, 710, 711], "cluster_c_introduct": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 667, 683, 692, 700, 708, 710, 711], "c_introduction_cpp_symbolic_const": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_fahrenheit_for": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_introduct": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_instal": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 636, 667, 683, 692, 700, 708, 710, 711], "c_introduction_exercise_power_declar": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_funct": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_wc": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_character_io": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_histogram": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_arrai": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_for_loop": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_fahrenheit_float": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_variables_and_arithmetic_express": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_hello_world": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_fahrenheit_cpp": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_character_arrai": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_external_variables_and_scop": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_introduction_exercise_string_read_lin": [340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "z0": 342, "abbrevi": [343, 644, 647, 649, 653], "char_bit": 343, "x86": [343, 422, 932, 949], "stdint": [343, 862, 882, 925], "int8_t": 343, "uint8_t": [343, 441, 456, 628, 862], "int16_t": 343, "uint16_t": 343, "int32_t": 343, "uint32_t": 343, "int64_t": 343, "uint64_t": [343, 380, 486, 656, 657, 691, 882, 925], "052": 344, "0x2a": 344, "0b010010": 344, "42l": 344, "456f": 344, "456l": 344, "x61": 344, "alert": [344, 387, 393, 687, 987, 995, 1004, 1006], "backspac": [344, 818, 1000], "formfe": 344, "ooo": 344, "octal": [344, 987, 1000, 1001], "xhh": 344, "some_funct": 345, "some_vari": 345, "1415926535897932": 345, "some_nonsensical_numb": 345, "legal": [347, 391, 537, 635, 888, 930], "truth": [347, 885, 911], "eleg": [347, 690], "blank": 347, "num_lf": 347, "narrow": [348, 1063], "4294967295u": 348, "wsign": [348, 390], "wconvers": 348, "4294967296u": 348, "unscrupul": 348, "0x100000000": 348, "weaker": 348, "stronger": [348, 968, 1078], "1l": 348, "1u": 348, "losslessli": 348, "1ul": 348, "wtype": [348, 390], "wextra": [348, 390], "pedant": 348, "anti": [348, 763, 900], "sloppi": 348, "advic": [348, 987], "immens": [348, 930], "hazard": 348, "messi": [348, 419], "subtl": [349, 369, 392, 484, 981], "copy_and_omit": 349, "0x4b": 351, "01001011": 351, "0x0c": 351, "00001100": 351, "0x08": 351, "00001000": 351, "0x4f": 351, "01001111": 351, "0x47": 351, "01000111": 351, "0x03": 351, "00000011": 351, "0x80": 351, "00110000": 351, "001": 351, "0x4c": [351, 748], "01001100": 351, "0xb3": 351, "10110011": 351, "arr": [352, 631], "unari": [354, 987], "strongest": [354, 987], "intuit": [354, 402], "danger": [354, 372, 530, 758, 908, 929, 996, 1113], "decrement": [355, 364, 371, 375, 377, 381, 384, 388, 397, 401, 406, 407, 580, 629, 667, 686, 708, 710, 711, 717], "cluster_c_types_operators_express": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_introduct": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_relational_logical_oper": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_arithmetic_oper": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_assignment_operators_and_express": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_bit_oper": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_declar": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_const": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_type_convers": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_variable_nam": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_increment_decrement_oper": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_datatypes_s": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_exercise_string_reduc": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_conditional_express": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_types_operators_expressions_precedence_and_order_of_evalu": [355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "doabl": 360, "cond": [360, 905], "expr": [360, 370, 818], "precedenceof": 360, "innermost": [362, 599, 604], "concern": [362, 363, 411, 717, 794, 864, 955, 1115], "edsger": 363, "dijkstra": 363, "plea": 363, "manifold": 363, "judici": [363, 399, 1115], "do_complicated_stuff": 363, "cleanup_mess": 363, "cluster_c_program_flow": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_switch": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_else_if": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_goto_and_label": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_break_and_continu": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_loops_do_whil": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_loops_while_and_for": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_if_els": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_flow_statements_and_block": [364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "vice": 365, "versa": 365, "g_lobal": [366, 367, 369], "print_g": [366, 367], "linkag": 367, "percept": [367, 794], "disciplin": [367, 389, 399, 409, 1062], "convent": [367, 411, 774, 818, 840, 878, 955, 970], "ifndef": [367, 369, 370, 412, 419, 513, 531, 537, 539, 540, 638, 639, 685, 932, 948, 950], "g_h": 367, "programx": 368, "cautious": 369, "c99": [369, 1111], "slow": [369, 400, 404, 580, 864, 875], "have_c_h": 369, "clash": [369, 392], "include_onc": 369, "newbi": [369, 631], "hurdl": 369, "ifdef": [370, 427, 580], "defined": 370, "unequ": 370, "tempt": 370, "horror": 370, "do_much": 370, "do_thi": [370, 691], "do_that": [370, 691], "do_less": 370, "__pragma": 370, "4127": 370, "warn_if": 370, "statem": 370, "function_help": 370, "function_quit": 370, "function_": 370, "inject_viru": 370, "doomed_process": 370, "win32": [370, 1129], "foreign_mem": 370, "virtualallocex": 370, "mem_commit": 370, "page_execut": 370, "page_readwrit": 370, "infect": 370, "__file__": [370, 956, 1093], "__line__": 370, "smell": [370, 424], "pest": 370, "cluster_c_functions_and_program_structur": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_c_preprocessor": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_static_vari": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_c_preprocessor_advanc": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_header_fil": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_external_vari": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_functions_and_program_structure_bas": [371, 377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "dereferenc": [372, 640, 675, 679], "35129": 372, "calle": [373, 403, 405, 542], "tablet": 373, "excang": 374, "pa1": 375, "pa2": 375, "necessarili": [112, 375, 405, 562, 709, 744, 758, 795, 875, 973, 1095, 1102], "cluster_c_pointers_and_arrai": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_pointers_and_arrays_pointers_and_function_argu": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_pointers_and_arrays_pointers_and_address": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_pointers_and_arrays_command_line_argu": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_pointers_and_arrays_pointers_and_arrai": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_pointers_and_arrays_exercise_swap": [377, 381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "scalar": [378, 393, 1004], "fantasi": [378, 855, 857], "p1": [378, 483, 529, 531, 537, 543, 545, 547, 548, 632], "p2": [378, 483, 529, 531, 537, 543, 545, 548, 632], "laid": 378, "makepoint": 379, "addpoint": [379, 395], "addtopoint": 379, "pid_t": [380, 901, 919, 930], "cluster_c_structur": [381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_structures_bas": [381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_structures_structures_and_funct": [381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_structures_typedef": [381, 384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "dealloc": [382, 520, 672, 719, 746, 752], "ptr": [382, 505, 637, 685, 686, 687, 688], "do_something_with": [382, 630, 676], "list_init": 383, "list_destroi": 383, "list_insert": 383, "list_remov": 383, "list_count": 383, "list_print": 383, "keylen": 383, "cluster_c_memori": [384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_memory_malloc": [384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_memory_exercise_linked_list": [384, 388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "corollari": [385, 387, 693, 964], "reorder": [385, 701, 742], "use_count": [385, 386, 686, 688, 706], "use_resourc": [385, 386], "do_something_with_shared_resourc": [385, 386], "conceiv": [385, 981], "completion_flag": 385, "out_word": 385, "in_word": 385, "unforese": 385, "volatil": [386, 388, 397, 401, 406, 407, 629, 667, 695, 708, 710, 711, 768, 930, 1111, 1114], "instr": [386, 404, 903, 966], "pthread_mutex_t": [386, 699, 750, 903, 905], "use_count_mutex": 386, "pthread_mutex_initi": [386, 903], "pthread_mutex_lock": [386, 699, 903, 905], "pthread_mutex_unlock": [386, 699, 903, 905], "expens": [386, 393, 529, 542, 545, 635, 640, 676, 677, 686, 763, 900, 1113], "fetch_and_add": [386, 903], "__sync_fetch_and_add": [386, 696, 903, 904], "sheer": [386, 532], "neglig": 387, "penalti": 387, "memcpi": 387, "freeli": 387, "rearrang": [387, 579], "anim": 387, "pragma": [387, 428, 430, 434, 439, 451, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 486, 544, 658, 709], "textit": 387, "bogu": [387, 399, 540, 638, 639, 665, 864, 930], "__pad0": 387, "__pad1": 387, "bloat": [387, 975], "misalign": 387, "intrins": [388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "cluster_c_advanced_language_featur": [388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_advanced_language_features_atom": [388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_advanced_language_features_volatil": [388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "c_advanced_language_features_align": [388, 397, 401, 406, 407, 629, 667, 708, 710, 711], "matur": 389, "odditi": 389, "rectifi": 389, "fortran": 389, "lazy": [389, 670], "meant": [389, 929], "shortcom": [389, 454, 615, 620, 623], "holidai": 389, "handcraft": [389, 437, 991], "clariti": [390, 394, 887], "baud": 391, "idl": 391, "writing_request": 391, "reading_respons": 391, "wait_retri": 391, "protocol_engin": [391, 395], "deduc": [391, 627, 630, 655], "obligatori": 391, "anyhow": 391, "forgot": 391, "unambigu": [391, 627], "protocol_error": 391, "eat": [391, 399], "unintend": 393, "wwrite": 393, "max_bucket": 393, "unus": [393, 428, 483, 485, 529, 533, 544, 583, 584, 637, 736, 795, 911, 925], "pj": 393, "pointe": 393, "ppi": 393, "height": [394, 437, 546], "beman": 394, "daw": 394, "obfusc": 395, "ssize_t": [395, 487, 717, 876, 880, 881, 882, 884, 888, 889, 890, 891, 894, 896, 899, 922, 925, 926, 929], "send_fram": 395, "eng": 395, "send_sum": 395, "v_int32": 395, "spectacular": 395, "adequ": 395, "unix_error": 395, "app_error": 395, "unix_error_cr": 395, "unix_error_ok": 395, "uerr": 395, "app_error_cr": 395, "app_os_error": 395, "impact": [395, 399], "enhanc": [395, 791], "beyond": [396, 884], "consider": [396, 818], "slowdown": 396, "0x400552": 396, "0x51bb072": 396, "0x4c28c6d": 396, "vg_replace_malloc": [396, 537], "0x400545": 396, "loss": [396, 866], "rec": [396, 1046, 1048], "uncov": 396, "readabilti": [397, 401, 406, 407, 629, 667, 708, 710, 711], "explict": [397, 401, 406, 407, 711], "cluster_c_program_san": [397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_sanity_introduct": [397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_sanity_integral_typ": [397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_sanity_stat": [397, 401, 406, 407, 711], "c_program_sanity_discrete_valu": [397, 401, 406, 407, 629, 667, 708, 710, 711], "c_program_sanity_struct_initi": [397, 401, 406, 407, 711], "c_program_sanity_const": [397, 401, 406, 407, 711], "c_program_sanity_valgrind": [397, 401, 406, 407, 711], "c_program_sanity_explicit_type_safeti": [397, 401, 406, 407, 711], "hotspot": [398, 402], "checksum": [398, 866, 914], "externel": 398, "sha1sum": [398, 914, 917, 920], "8g": 398, "0m38": 398, "0m3": 398, "0m0": 398, "perceiv": 398, "daze": 398, "mp3": 398, "018": 398, "mult": 399, "rumour": 399, "uncondit": 399, "slower": [399, 795], "finlin": 399, "o3": [399, 414], "heurist": 399, "o1": 399, "magnitud": [399, 400], "overus": [399, 441, 969, 1113], "spill": 399, "fira": 399, "rtfm": [399, 1002, 1100], "compromis": [399, 409, 437], "transit": [399, 424], "fmove": 399, "outweigh": 399, "thrash": [399, 917, 1111], "understood": [399, 409, 486, 691, 758, 1115], "misnom": [399, 1006], "o0": [399, 414, 1102], "unagress": 399, "chew": [399, 701], "agress": 399, "muchnik": 399, "levin": 399, "nearbi": 400, "bounc": [400, 777], "4x3": 400, "rectangular": 400, "cluster_c_perform": [401, 406, 407, 711], "c_performance_computebound": [401, 406, 407, 711], "c_performance_introduct": [401, 406, 407, 711], "c_performance_memori": [401, 406, 407, 711], "bust": 402, "haul": 402, "cheater": 402, "fallibl": 402, "supplement": 402, "gprof": [402, 404, 405, 406, 407, 711, 1111], "callgrind": [402, 405, 406, 407, 711, 1111], "oprofil": [402, 406, 407, 711, 1111], "gmon": 403, "spot": 403, "38000000": 403, "find_dupl": [403, 405], "percentag": 403, "criterion": [403, 570], "37000000": 403, "luck": [403, 862, 953, 955], "gprof2dot": 403, "tjpeg": 403, "predict": [404, 405, 1059, 1061, 1062], "sluggishli": 404, "16761": 404, "callgrind_annot": 404, "atstart": 404, "callgrind_control": 404, "nmi": 405, "ophelp": 405, "operf": 405, "oprofile_data": 405, "opreport": 405, "opannot": 405, "oparch": 405, "opgprof": 405, "Their": 405, "2085": 405, "2505": 405, "maskabl": 405, "callgraph": 405, "pxe": 405, "vmlinux": [405, 733], "debuginfo": 405, "userland": [405, 717], "routin": [405, 411, 516, 709, 750, 756, 761, 882, 918, 950, 1050, 1052], "analyz": 405, "jcf": [405, 758, 784], "jxf": [405, 758, 784], "gdf": 405, "op2calltre": 405, "oprof": 405, "applet": 405, "viewabl": [405, 418], "kcachegrind": 405, "cluster_c_profil": [406, 407, 711], "c_profiling_gprof": [406, 407, 711], "c_profiling_introduct": [406, 407, 711], "c_profiling_oprofil": [406, 407, 711], "c_profiling_callgrind": [406, 407, 711], "worker": [409, 635], "consensu": [409, 432], "consent": [409, 976], "male": [409, 1018], "prcess": 409, "obei": [409, 411], "liskov": 409, "segreg": 409, "antipattern": [409, 437], "gonna": 409, "indecis": [409, 1116], "road": 409, "manufactur": [409, 864], "pcb": [409, 862], "bom": 409, "requiremenet": 409, "yyyi": 410, "testabl": [410, 1094], "yagni": 410, "fraunhof": 410, "make_categori": 411, "outputfil": 411, "to_datetim": 411, "make_float": 411, "orpheum": 411, "goingout": 411, "hervi": 411, "sport": 411, "card": [411, 758, 787, 822, 824, 829, 830], "to_csv": 411, "read_from_csv": 411, "write_to_csv": 411, "clean_data": 411, "csvname_or_list_thereof": 411, "concat": [411, 1076], "workaround": [411, 628, 631, 731, 1093], "burden": [411, 544, 958, 1094], "read_from_dir": 411, "re_yyyy_mm": 411, "inputdir": 411, "libreoffic": 411, "monolith": [411, 932], "factor": [411, 726, 727, 758], "test_data_clean": 411, "test_make_float": 411, "1999": 411, "test_date_convers": 411, "at666666666666666666": 411, "000009173": 411, "bawaatwwxxx": 411, "at211420020010848041": 411, "ausgleich": 411, "firmenkonto": 411, "test_input": 411, "read_from_csv_singl": 411, "read_from_csv_multipl": 411, "deliber": 411, "test_read_csv_singl": 411, "000009284": 411, "2371": 411, "000009283": 411, "at613400000005077508": 411, "world4you": 411, "writelin": [411, 1006, 1051, 1053], "test_read_csv_multipl": 411, "lines_2023_02": 411, "lines_2023_01": 411, "000009229": 411, "4111": 411, "bp": 411, "tankstel": 411, "000009228": 411, "at081400086210003454": 411, "\u00f6sterreichisch": 411, "gesundheitskass": 411, "_write_csv": 411, "read_from_csv_dir": 411, "test_read_csv_dir": 411, "testutil": 411, "write_csv": 411, "test_category_csv": 411, "000009168": 411, "000009169": 411, "2801": 411, "strassenbahn": 411, "eas": [411, 1071], "finer": 411, "refact": 411, "str_categori": 411, "cardunknown": 411, "flughafen": 411, "wien": 411, "test_more_of_it": 411, "000009153": 411, "parken": 411, "fl": 411, "inputread": 411, "recursivecsvinputread": 411, "singlecsvinputread": 411, "compositeinputread": 411, "input_abc": 411, "abstractmethod": [411, 968], "multiplecsvinputread": 411, "test_input_abc": 411, "cmake_minimum_requir": [412, 934, 1102], "identif": [412, 862, 933, 934], "abi": [412, 422, 736, 738, 878, 933, 934], "hello_nam": [412, 418], "hello_name_h": 412, "democonfig": [413, 415, 419, 420, 421], "libhello": [413, 414, 415, 417, 420, 423], "configure_fil": 413, "demo_version_major": 413, "demo_version_minor": 413, "cmake_current_binary_dir": 413, "demo_major": 413, "demo_minor": 413, "include_directori": [413, 424], "overkil": 413, "cmake_cxx_standard": [414, 1102], "dndebug": 414, "cmake_": 414, "_compiler_id": 414, "IF": [414, 419, 420, 421], "g3": [414, 1102], "strequal": 414, "cmake_c_compiler_id": 414, "cmake_c_flag": [414, 1102], "cmake_cxx_compiler_id": 414, "cmake_cxx_flag": [414, 1102], "howdi": [414, 538, 669, 671, 672, 798, 802, 888, 889, 891, 973], "bullshithowdi": 414, "fatal_error": 414, "send_error": 414, "attract": [414, 631], "findsqlite3": 415, "sqlite3_include_dir": 415, "sqlite3_librari": 415, "typo": [415, 969, 970], "sqlite3_vers": 415, "sqlite3_found": 415, "olden": 415, "0x00007f76ae011000": 415, "libz": 415, "0x00007f76adef7000": 415, "cluster_cmak": [416, 711], "cmake_optional_code_approach_2": [416, 711], "cmake_optional_code_approach_1": [416, 711], "cmake_structur": [416, 711], "cmake_instal": [416, 711, 933, 934], "cmake_librari": [416, 711], "cmake_bas": [416, 711], "cmake_targets_properti": [416, 711], "cmake_optional_code_problem": [416, 711], "cmake_configure_fil": [416, 711], "cmake_cxx_and_r": [416, 711], "cmake_test": [416, 711], "cmake_external_depend": [416, 711], "cmake_shared_libraries_preview": [416, 711], "cmake_install_prefix": 417, "set_properti": [417, 422], "dbuild_shared_lib": [417, 422], "ON": [417, 420, 421, 422, 476, 477, 482, 916], "readelf": [417, 932, 944, 949], "0x0000000000000001": [417, 949], "0x000000000000001d": 417, "0x00007f773aefe000": 417, "ldconfig": [417, 1108], "sonam": [417, 422], "add_librari": [418, 420, 422, 424, 470, 515, 524, 933, 934], "0x29": 418, "collect2": [418, 604, 949], "acycl": [418, 934, 948], "dag": 418, "jul": [418, 422], "tpng": [418, 934], "descend": [419, 420, 421, 423, 470, 819, 926], "use_blacklist": [419, 420], "macro_use_blacklist": [419, 421], "demo_use_blacklist": [419, 420], "namegreet": 419, "_blacklist": 419, "implic": [419, 742, 814, 875], "sayhello": 419, "is_forbidden": 419, "_name": [419, 460, 463, 467, 468, 469], "goodby": [419, 930], "use_backlist": 419, "condition": 419, "duse_blacklist": [420, 421], "target_compile_opt": [420, 424], "target_include_directori": [420, 421, 423, 424], "manyfold": 421, "target_compile_definit": [421, 424], "lightli": 421, "symlink": [422, 709, 862, 1095, 1119], "build_shared_lib": 422, "qf": 422, "libboost_regex": 422, "lrwxrwxrwx": [422, 840, 862, 863, 864, 898, 932], "rwxr": [422, 803, 805, 806, 815, 932, 944, 983], "289264": 422, "temporarili": [422, 919, 932], "project_vers": 422, "makefile2": 423, "compile_definit": 424, "dname": 424, "compile_opt": 424, "widest": 424, "asymmetr": 424, "enable_test": 425, "toplavel": 425, "set_tests_properti": [425, 1099, 1102], "pass_regular_express": 425, "ctest": 425, "cdash": 425, "kitwar": 425, "socialdb": [426, 429, 433, 458, 464], "i2csensor_vendor1": [427, 456], "0x37": 427, "suddenli": [427, 758, 798, 1067], "vener": [427, 448, 530, 545, 673], "damag": [427, 1081], "slip": 427, "cascad": 427, "i2csensor": [427, 441, 456], "create_i2c_sensor": 427, "i2csensorfactori": 427, "speak": [427, 845, 863, 960, 985], "vendor1": [427, 456], "abstract_factory_suit": 427, "instantiate_vendor1": 427, "i2csensorfactory_vendor1": 427, "i2c_factory_vendor1": 427, "i2c_sensor": 427, "assert_tru": [427, 482, 483, 488, 493, 495, 500, 529, 531, 546, 547, 548, 549, 632, 686, 687, 709, 1100], "dynamic_cast": [427, 454, 468], "a_sensor": [427, 637], "vendor2": [427, 456], "instantiate_vendor2": 427, "i2csensorfactory_vendor2": [427, 456], "i2c_factory_vendor2": 427, "i2csensor_vendor2": [427, 456], "pu": 427, "tinto": 427, "fahrenheitsensor": [428, 457], "get_temperature_f": [428, 457], "formula": 428, "adapter_suit": 428, "constantfahrenheitsensor": 428, "assert_float_eq": [428, 431, 432, 434, 451, 452, 478, 479, 480, 481, 483, 486, 487, 498, 529, 531, 548, 634, 637], "fahrenheitsensor_adapt": [428, 457], "adapter__is_a__sensor": 428, "adapter__knows__an_a_sensor": 428, "variablefahrenheitsensor": 428, "initial_valu": 428, "_valu": [428, 463], "change_temperatur": [428, 478, 486, 487], "adapter__definitely_knows__a_sensor__hel": 428, "multitud": 429, "socialdbcommand": [429, 458], "command_suit": 429, "2345110695": [429, 588], "socialdbinsertcommand": [429, 458], "3456060486": [429, 588], "insert_by_bas": 429, "socialdbfindcommand": [429, 458], "socialdbdropcommand": [429, 458], "notfound": [429, 430, 458, 620, 621, 622], "assert_throw": [429, 436, 709], "notinsert": [429, 430, 458], "bulkinsert": 429, "bulk_insert": 429, "socialdbbulkinsertcommand": [429, 458], "bic": 429, "std_initializer_list": 429, "bulk_insert__std_initializer_list": 429, "_msg": 430, "c_str": [430, 465, 487, 633, 638, 639, 929], "_db": 430, "hypthet": 431, "composite_suit": 431, "constantsensor": [431, 434, 439, 451, 452, 460, 472, 479, 485, 495, 496, 497, 498, 500, 501, 637, 685, 686, 687, 688, 968, 1044], "cs1": 431, "cs2": 431, "averagingsensor": [112, 431, 459], "recompil": [432, 949], "decorator_suit": 432, "average_with_base_sensor": 432, "decoratedsensor": [432, 460], "propon": 432, "diagnost": 432, "decorated_sensor_const_added_function": 432, "decorated_sensor_random_added_function": 432, "decorated_sensor_const__is_a__sensor": 432, "decorated_sensor_random__is_a__sensor": 432, "assert_g": [432, 481, 498], "assert_l": [432, 481, 498], "average_with_decorated_sensor": 432, "mtqueue": [433, 451], "devis": 433, "notifi": [433, 699, 879, 926, 1075], "cluster_cxx_design_pattern": [433, 447, 475, 527, 711], "cluster_cxx03": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 590, 591, 592, 594, 595, 597, 600, 606, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cluster_cxx03_inheritance_oo": [433, 447, 475, 485, 527, 600, 624, 711], "cluster_cxx03_data_encapsul": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cluster_linux": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 715, 718, 720, 723, 725, 728, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 762, 764, 767, 769, 773, 776, 779, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 860, 861, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 897, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cluster_linux_toolchain": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cluster_linux_bas": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cluster_linux_basics_intro": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cluster_linux_basics_shel": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cluster_cxx": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 711], "cluster_cxx_exercis": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 711], "cluster_cxx_exercises_design_pattern": [433, 447, 475, 527, 711], "cxx_design_patterns_adapt": [433, 447, 475, 527, 711], "cxx_design_patterns_sensor_hierarchi": [433, 447, 475, 527, 711], "cxx_design_patterns_uml": [433, 447, 475, 527, 711], "cxx03_inheritance_oo_interfac": [433, 447, 475, 485, 527, 600, 624, 711], "cxx_design_patterns_decor": [433, 447, 475, 527, 711], "cxx_design_patterns_observ": [433, 447, 475, 527, 711], "cxx_design_patterns_singleton": [433, 447, 475, 527, 711], "cxx_design_patterns_interpret": [433, 447, 475, 527, 711], "cxx_design_patterns_heating_screenplai": [433, 711], "cxx_design_patterns_composit": [433, 447, 475, 527, 711], "cxx_design_patterns_proxi": [433, 447, 475, 527, 711], "cxx_exercises_design_patterns_proxy_round": [433, 447, 475, 527, 711], "cxx_design_patterns_oo_principl": [433, 711], "cxx_design_patterns_abstract_factori": [433, 447, 475, 527, 711], "cxx_design_patterns_command": [433, 447, 475, 527, 711], "cxx03_introduct": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_inheritance_oo_polymorph": [433, 447, 475, 485, 527, 600, 624, 711], "cxx03_inheritance_oo_virtual_method": [433, 447, 475, 485, 527, 600, 624, 711], "cxx03_inheritance_oo_virtual_destructor": [433, 447, 475, 485, 527, 600, 624, 711], "cxx03_inheritance_oo_bas": [433, 447, 475, 485, 527, 600, 624, 711], "cxx03_data_encapsulation_classes_object": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_inheritance_oo_destructor": [433, 447, 475, 485, 527, 600, 624, 711], "cxx03_data_encapsulation_ctor_dtor": [433, 447, 475, 485, 527, 535, 600, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_data_encapsulation_c": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 492, 494, 527, 535, 550, 553, 556, 572, 578, 582, 591, 594, 595, 600, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_data_encapsulation_ctor_default": [433, 447, 475, 485, 527, 535, 600, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_data_encapsulation_ctor_custom": [433, 447, 475, 478, 481, 485, 527, 535, 600, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "linux_toolchain_separate_compil": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 711, 854, 934, 937, 938, 939, 940, 942], "linux_toolchain_bas": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_basics_shell_file_dir_create_rm": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 785, 786, 787, 788, 791, 792, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 838, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_toolchain_cmake_loc": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 711, 854, 934, 942], "linux_toolchain_static_librari": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 711, 854, 934, 937, 939, 940, 942], "linux_basics_intro_process": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 785, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_basics_intro_overview": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 866, 867, 868, 869, 870, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_basics_shell_path": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 785, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_basics_shell_commandlin": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 781, 785, 786, 787, 788, 791, 792, 799, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 848, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "linux_basics_shell_cwd": [433, 447, 475, 476, 477, 478, 479, 480, 481, 482, 485, 527, 700, 710, 711, 785, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917, 934, 936, 937, 938, 939, 940, 941, 942, 943], "cxx_exercises_sensor_interfac": [433, 447, 475, 485, 527, 711], "sensorread": 434, "chrono_liter": [434, 627, 699, 701, 702], "demologg": 434, "cerr": [434, 473, 552, 621, 691, 701, 862, 896, 899], "demovaluestor": 434, "_store": 434, "namedsensor": 434, "_sensor": [434, 441, 459, 460, 462, 465, 466, 687], "_logger": 434, "_value_stor": 434, "sensora": 434, "sensorb": 434, "sensorc": 434, "200000": [434, 863, 1061], "this_thread": [434, 627, 688, 699, 701], "sleep_for": [434, 627, 688, 699, 701], "12597": 434, "valuestor": 434, "2895": 434, "158243": 434, "cassert": [434, 576, 617, 620, 622, 628, 701], "boss": 434, "v3": 434, "abort": [434, 453, 454, 537, 665, 876], "meantim": [434, 879], "mocklogg": 434, "lines_log": 434, "mockvaluestor": 434, "sensorreader_suit": 434, "sensor2": 434, "141320": 434, "memcheck": [434, 537, 686], "detector": [434, 537, 686], "myobserv": 436, "socialdb_observ": [436, 464], "newcitizenobserv": [436, 464], "new_citizen": 436, "_new_citizen_svnr": 436, "new_citizen_ad": [436, 464], "observer_suit": 436, "register_on": 436, "register_new_citizen_notif": [436, 464], "register_mani": 436, "observer1": 436, "observer2": 436, "register_dupl": 436, "observeralreadyregist": [436, 464], "unregister_new_citizen_notif": [436, 464], "unregister_not_regist": 436, "observernotregist": [436, 464], "addict": [437, 797, 818, 1085, 1094], "bertrand": 437, "barbara": 437, "liskow": 437, "polish": 437, "be_sick": 440, "insur": [440, 453, 454, 455, 467, 468, 469], "teardown": [440, 487, 953, 1094, 1104, 1106], "purest": 441, "lightest": 441, "pidcontrol": 441, "_switch": 441, "cluster_cxx_exercises_design_patterns_solut": [447, 475, 527, 711], "cxx_exercises_design_patterns_interpreter_bas": [447, 475, 527, 711], "cxx_exercises_design_patterns_interpreter_and_adapt": [447, 475, 527, 711], "cxx_exercises_design_patterns_abstract_factori": [447, 475, 527, 711], "cxx_exercises_design_patterns_proxy_remot": [447, 475, 527, 711], "cxx_exercises_design_patterns_adapt": [447, 475, 527, 711], "cxx_exercises_design_patterns_singleton_flexible_strict": [447, 475, 527, 711], "cxx_exercises_design_patterns_singleton_inflex": [447, 475, 527, 711], "cxx_exercises_design_patterns_singleton_flex": [447, 475, 527, 711], "cxx_exercises_design_patterns_observ": [447, 475, 527, 711], "cxx_exercises_design_patterns_command": [447, 475, 527, 711], "cxx_exercises_design_patterns_composit": [447, 475, 527, 711], "cxx_exercises_design_patterns_decor": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_proxy_remot": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_abstract_factori": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_command": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_observ": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_singleton_inflex": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_adapt": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_interpreter_bas": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_singleton_flex": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_composit": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_proxy_round": [447, 475, 527, 711], "cxx_exercises_design_patterns_solutions_decor": [447, 475, 527, 711], "cla": 448, "sensorvalu": [448, 462], "roundingsensor": [448, 452, 466], "r1": [448, 549, 640], "r2": [448, 549, 640], "r3": 448, "sensorvalueexpress": [448, 462], "e1_e2": 448, "e1_e2_e3": 448, "num_measur": 448, "v_avg": 448, "v_ass": 448, "combinatin": 449, "interpreter_suit": 449, "e_lh": 449, "e_rh": 449, "e_add": 449, "e_sub": 449, "mul": 449, "e_mul": 449, "e_div": 449, "arithemet": 449, "arith": [449, 521, 522, 558, 559, 560, 561, 566], "combined_arith": 449, "l7": 449, "a_7_plus_3": 449, "s_3_minus_1": 449, "variable_not_set": 449, "analogi": [449, 473, 864, 926, 966], "assignment_valu": 449, "variable_assign": 449, "ass": 449, "variable_used_as_express": 449, "ass_v1": 449, "ass_v2": 449, "reachabl": [451, 686, 862, 864], "remoteadapt": [451, 465], "packet": [451, 752, 858, 881, 914], "response_promis": 451, "_adapt": 451, "_queue": [451, 699], "_thread": 451, "fulfil": [451, 486], "proxy_remote_suit": 451, "_c": 451, "remotesensoradapt": [451, 465], "remotesensor": [451, 465], "remote_sensor__is_a__sensor": 451, "somth": 451, "simplist": 451, "fullfil": 452, "proxy_round_suit": 452, "round_down": 452, "round_up": 452, "rouding_sensor__is_a__sensor": 452, "advis": [453, 1052], "hypothet": [453, 485, 486, 536, 855], "fee": 453, "socialinsur": [453, 454, 455, 469], "oegk": [453, 454], "startup": [453, 454, 455, 467, 790, 926, 932, 964], "set_inst": [453, 454, 467], "make_uniqu": [453, 467, 707], "debt": [453, 454, 455, 467, 468, 469], "runtime_error": [453, 454, 465, 467, 468, 469, 487, 701], "ala": [454, 545, 814, 880, 920, 1088], "socinsur": [454, 468], "inisur": 454, "reimplement": [454, 623], "compiabl": [454, 468], "iface_inst": [454, 468], "svs_instanc": [454, 468], "oegk_inst": [454, 468], "another_inst": [454, 455, 468, 469], "1485": [454, 455], "unset": [454, 905], "sozialversicherung": [455, 469], "unrealist": 455, "adapte": 457, "_adapte": 457, "_svnr": 458, "_firstnam": [458, 588, 976], "_lastnam": [458, 588, 976], "_result": 458, "_command": 458, "get_if": 458, "decoratedconstantsensor": 460, "sstream": [460, 465, 547, 549], "iomanip": 460, "ostringstream": [460, 465, 546, 547, 548, 549], "decoratedrandomsensor": 460, "_variabl": 463, "_lh": 463, "_rh": 463, "_context": 463, "_var": 463, "_exp": 463, "stdexcept": [463, 465, 467, 468, 469, 487, 709], "_new_citizen_observ": 464, "num_eras": 464, "_server": 465, "cstdio": 465, "num_item": 465, "sscanf": 465, "cmath": [466, 531, 539, 540, 548, 634, 650, 651, 652, 653, 690], "_instanc": [467, 468, 469], "nullptr": [467, 468, 486, 497, 501, 627, 637, 638, 685, 686, 687, 699, 701, 706, 707, 899, 1113], "_databas": [467, 468, 469], "0l": [467, 468], "cstdlib": [468, 487], "ssocinsur": 468, "toi": [470, 627, 930], "02131d959eaa": [470, 486, 487, 892], "millidegre": 470, "parameteriz": [471, 1058], "loop_and_measur": 471, "niter": 471, "w1sensor": [471, 472, 473, 474, 486], "counterpart": 472, "stod": 473, "uniform_real_distribut": [473, 481, 685], "default_random_engin": [473, 481, 685], "random_devic": [473, 481, 685], "_distribut": [473, 685], "_engin": [473, 685, 1081], "_x": [473, 531, 532, 534, 536, 538, 539, 540, 541, 543, 545, 555, 570, 634, 649, 651, 652, 653], "_y": [473, 531, 532, 534, 536, 538, 539, 540, 541, 543, 545, 555, 570, 634, 649, 651, 652, 653], "spit": [473, 1067], "cluster_cxx03_stl": [475, 492, 494, 527, 572, 578, 582, 590, 591, 592, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cluster_cxx03_stl_algorithm": [475, 492, 527, 572, 591, 594, 595, 624, 711], "cluster_cxx03_stl_associative_contain": [475, 492, 494, 527, 582, 591, 595, 624, 711], "cluster_cxx03_functions_and_method": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 609, 610, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cluster_cxx03_except": [475, 492, 494, 527, 553, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cluster_cxx03_templ": [475, 492, 494, 527, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cluster_cxx_exercises_stl": [475, 492, 494, 527, 711], "cluster_cxx_exercises_stl_sensor_repositori": [475, 492, 494, 527, 711], "cluster_cxx_exercises_fh_sensor_first_tri": [475, 527, 711], "cluster_linux_basics_permiss": [475, 527, 700, 710, 711, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 854, 883, 885, 893, 895, 909, 912, 915, 917], "cluster_linux_sysprog": [475, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 897, 909, 912, 915, 917], "cluster_linux_sysprog_bas": [475, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917], "cluster_linux_sysprog_fileio": [475, 527, 700, 710, 711, 788, 791, 792, 854, 883, 885, 893, 895, 909, 912, 915, 917], "cxx03_data_encapsulation_initializer_list": [475, 478, 481, 527, 535, 624, 711], "cxx03_stl_basic": [475, 492, 494, 527, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_templates_class_templ": [475, 492, 494, 527, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_stl_vector_copy_etc": [475, 492, 527, 591, 595, 624, 711], "cxx03_stl_algorithm_copi": [475, 492, 527, 572, 591, 595, 624, 711], "cxx03_stl_algorithm_find": [475, 492, 527, 572, 591, 595, 624, 711], "cxx03_stl_associative_containers_bas": [475, 492, 494, 527, 582, 591, 595, 624, 711], "cxx03_stl_associative_containers_map": [475, 492, 494, 527, 582, 591, 595, 624, 711], "cxx03_functions_and_methods_refer": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 615, 616, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_functions_and_methods_thi": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 615, 616, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_functions_and_methods_const": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 615, 616, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_functions_and_methods_method": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_functions_and_methods_overload": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 609, 610, 612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_functions_and_methods_stat": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_functions_and_methods_oper": [475, 492, 494, 527, 550, 553, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_exceptions_bas": [475, 492, 494, 527, 553, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_exceptions_try_catch": [475, 492, 494, 527, 553, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx03_templates_function_templ": [475, 492, 494, 527, 556, 572, 578, 582, 591, 594, 595, 612, 619, 620, 621, 622, 623, 624, 711], "cxx_exercises_sensor_w1_factori": [475, 527, 711], "cxx_exercises_sensor_w1": [475, 527, 711], "cxx_exercises_oo_shap": [475, 527, 711], "cxx_exercises_sensor_avg_nopoli": [475, 478, 527, 711], "cxx_exercises_sensor_mock_nopoli": [475, 476, 477, 478, 480, 527, 711], "cxx_exercises_sensor_const_nopoli": [475, 479, 481, 527, 711], "cxx_exercises_switch_mock_nopoli": [475, 476, 477, 482, 527, 711], "cxx_exercises_hysteresis_nopoli": [475, 477, 527, 711], "cxx_exercises_display_led_stripe_nopoli": [475, 476, 527, 711], "cxx_exercises_sensor_random_nopoli": [475, 481, 527, 711], "linux_sysprog_fileio_exercise_w1_sensor": [475, 527, 711, 854, 893, 895, 912], "cxx_exercises_stl_algo": [475, 492, 527, 711], "cxx_exercises_stl_filter_gener": [475, 492, 527, 711], "cxx_exercises_stl_uniq": [475, 492, 527, 711], "cxx_exercises_stl_vector": [475, 492, 527, 711], "cxx_exercises_stl_map": [475, 492, 494, 527, 711], "cxx_exercises_stl_filter_odd": [475, 492, 527, 711], "cxx_exercises_stl_filter_greater_10": [475, 492, 527, 711], "cxx_exercises_stl_sensor_repository_lookup_sunni": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_insert_sunni": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_remove_not_found": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_remove_sunni": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_memory_leak": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_size_const": [475, 492, 494, 527, 711], "cxx_exercises_stl_sensor_repository_lookup_not_found": [475, 492, 494, 527, 711], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [475, 527, 711], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [475, 527, 711], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [475, 527, 711], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [475, 527, 711], "linux_basics_permissions_bas": [475, 527, 700, 710, 711, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 854, 883, 885, 893, 895, 909, 912, 915, 917], "linux_basics_shell_l": [475, 527, 700, 710, 711, 785, 786, 787, 788, 791, 792, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 822, 825, 826, 829, 830, 832, 833, 834, 835, 836, 838, 854, 883, 885, 893, 895, 909, 912, 915, 917], "linux_sysprog_basics_groupnod": [475, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917], "linux_sysprog_basics_errorhandl": [475, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917], "linux_sysprog_basics_syscal": [475, 527, 700, 710, 711, 788, 791, 792, 854, 877, 883, 885, 893, 895, 909, 912, 915, 917], "linux_sysprog_fileio_bas": [475, 527, 700, 710, 711, 788, 791, 792, 854, 883, 885, 893, 895, 909, 912, 915, 917], "mockswitch_nopoli": [476, 477, 482], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 476, "display_led_stripe_nopoly_suit": 476, "somewhere_in_the_middl": 476, "sw0": 476, "sw1": 476, "sw2": 476, "sw3": 476, "sw4": 476, "sw5": 476, "sw6": 476, "sw7": 476, "display_led_stripe_nopoly_suite__below_rang": 476, "below_rang": 476, "display_led_stripe_nopoly_suite__above_rang": 476, "above_rang": 476, "display_led_stripe_nopoly_suite__mov": 476, "movement": [476, 855], "set_temperatur": [476, 477, 478, 480], "display_led_stripe_nopoly_suite__vari": 476, "variation_2_switch": 476, "variation_interval_not_from_0": 476, "thermostat": 477, "threshold": 477, "nop_when_within_rang": 477, "hysteresis_suit": 477, "hyst": 477, "falls_below_rang": 477, "rises_above_rang": 477, "rises_above_range_when_on": 477, "sensor_avg_nopoly_suit": 478, "sensor_const_nopoly_suit": 479, "subsequ": 480, "sensor_mock_nopoly_suit": 480, "sensor_random_suit": [481, 485, 486], "uniformli": 481, "rd": 481, "obtain": [481, 698, 1006], "rng": 481, "tailor": 481, "switch_mock_suit": 482, "initial_st": [482, 1105], "set_on_off": 482, "initial_failur": 483, "failit": 483, "point_suit": [483, 547], "ctor_and_gett": 483, "coordin": [483, 529, 531, 538, 539, 649, 880], "ctor_and_getters_const": 483, "default_ctor": [483, 546, 547, 548, 549], "equal_method": 483, "p3": 483, "p4": [483, 818], "assert_fals": [483, 488, 493, 495, 500, 529, 546, 547, 548, 549, 709], "equal_method_const": 483, "operator_equ": 483, "operator_equals_const": 483, "move_method": 483, "operator_plus_equ": 483, "add_method": 483, "new_p": 483, "add_method_const": 483, "operator_plu": [483, 546, 547, 548], "operator_plus_const": 483, "radiu": 483, "circle_suit": 483, "ctor_and_getters_using_operator_equ": 483, "14159": 483, "53981634": 483, "area_const": 483, "square_suit": 483, "bottom_left": [483, 549], "side_length": 483, "shape_suit": 483, "circle_is_a_shap": 483, "square_is_a_shap": 483, "area_is_shape_functionality__circl": 483, "area_is_shape_functionality__squar": 483, "human": [484, 486, 691, 818, 840, 932, 977, 1063], "ineffici": [484, 607, 775, 894], "epath": 484, "bag_copy_suit": [484, 705], "find_by_int_ok": [484, 705, 706, 707], "find_by_int_nok": [484, 705, 706, 707], "remove_by_int_ok": [484, 705, 706, 707], "bag_unique_suit": [484, 707], "bag_shared_suit": [484, 706], "insert_const_ref": [484, 706], "insert_mov": [484, 706], "unrel": [485, 516, 525, 691, 916, 926, 955, 972, 1073], "tyo": 485, "sensor_const_suit": [485, 486], "is_a_sensor": [485, 486], "5731": 485, "aptli": 486, "23062": 486, "w1sensorfactori": 486, "find_by_address": 486, "sensor_w1_factory_suit": 486, "fstream": [486, 709], "tmpdir_fixtur": 486, "device_dir": 486, "create_directori": 486, "ofstream": [486, 709], "42459": 486, "temp_milli": [486, 487], "w1_fs_root": 486, "sensor_factori": 486, "0x02131d959eaa": 486, "assert_n": [486, 522, 545, 546, 681, 706, 707], "horizon": 486, "0x012345678901": 486, "w1_sensor_suit": [486, 487], "test_read_sensor": [486, 487], "36700": 486, "basedir": 486, "0x2131d959eaa": 486, "dcmake_toolchain_fil": [487, 933, 947], "20687": 487, "write_temperatur": 487, "thaht": 487, "filename_pattern": 487, "xxxxxx": 487, "mkstemp": 487, "unlink": [487, 924, 926], "to_str": [487, 607], "off_t": [487, 884, 894, 899, 925], "lseek": [487, 894, 899, 925], "seek_set": [487, 884, 899, 925], "nwritten": [487, 888, 889, 890, 891, 896, 899, 925, 929], "algo": [488, 521, 522, 557, 558], "copy_into_vector": 488, "stl_exercises_suit": [488, 489, 490, 491, 493, 495, 496, 497, 498, 500, 501, 502, 503, 504], "required_cont": 488, "find_in_vector": 488, "my_vec": [488, 504], "wladimir": 488, "sort_in_plac": 488, "required_output": [488, 489, 490, 491, 503], "orig_input": [488, 489, 490, 491, 503], "alement": 489, "is_odd": 489, "filter_greater_10": 490, "filter_odd": 491, "map_insert": 493, "my_map": [493, 583, 584, 585, 586, 587], "map_insert_simpl": 493, "insert_check_dupl": 493, "map_insert_check_dupl": 493, "insert_remove_by_kei": 493, "map_insert_remove_by_kei": 493, "map_remove_by_kei": 493, "map_find": 493, "sensorrepositori": [494, 495, 496, 497, 498, 499, 500, 501, 502], "decript": 494, "sensor_repository_insert_dupl": 495, "add_sensor": [495, 496, 497, 498, 500, 501], "ofen": [495, 496, 497, 498, 500, 501], "weltraum": [495, 496, 497, 498, 500, 501], "mond": [495, 500], "sucess": 495, "sensor_repository_insert": 496, "sensor_repository_lookup_neg": 497, "get_sensor": [497, 498, 501], "sensor_repository_lookup_posit": 498, "complaint": 499, "ish": 499, "sensor_repository_remove_nonexist": 500, "remove_sensor": [500, 501], "sensor_repository_remov": 501, "sensor_repository_size_const": 502, "vector_append": 504, "vector_join": 504, "joined_cont": 504, "userdb_map": 505, "userdb_vector": 505, "dan": 505, "sak": 505, "cppcon": [505, 632, 634, 635, 648, 655, 673, 684], "transcrib": 505, "mallocfre": 510, "arrayofinteg": 510, "memoryleak": 510, "arrayboundswrit": 510, "newdelet": 510, "singleinteg": 510, "deletemismatch": 510, "thing1": [512, 513], "thing2": [512, 513], "global_str": 513, "__have_thing_h__": 513, "_content": 513, "denstruct": 513, "destruct": [513, 534, 604, 635, 685, 800], "essenc": [513, 1100], "collaps": 516, "thoroughli": [516, 862], "_mem": [519, 665], "determinist": [519, 684, 698, 953, 1004, 1065], "maybeown": 519, "pointerarithmet": 522, "bugp": 522, "105ff": 522, "num_el": 522, "another_arrai": 522, "yet_another_arrai": 522, "108ff": 522, "basics_cxx03": 522, "basics_cxx11": 522, "cbegin": [522, 575, 594, 631, 642], "my_copi": 522, "naivecopi": 522, "cend": [522, 575, 594, 631], "algocopi": 522, "backinsert": 522, "back_insert_iter": [522, 563], "nah": [522, 1102], "insertfind": 522, "make_pair": [522, 585, 588, 676], "erasebyposit": 522, "erasebykei": 522, "domin": 528, "bjarn": 528, "stroustrup": 528, "1985": 528, "2003": [528, 1113], "unif": 528, "point_c_suit": [529, 531], "struct_initi": 529, "point_init_default": 529, "c_default_constructor_init": 529, "point_create_default": 529, "c_default_constructor_cr": 529, "point_creat": [529, 531], "c_constructor": [529, 531], "eq": [529, 545, 547, 549], "point_equ": 529, "point_not_equ": 529, "eq_n": 529, "point_mov": [529, 531, 539, 541], "point_add": 529, "point_sub": 529, "add_sub": 529, "point_dist": 529, "point_ab": [529, 531], "hyp": [529, 531, 539], "unwant": [529, 580, 676, 736, 955, 976, 1000], "cpp_copy_suit": 530, "generated_copy_ctor": 530, "copy1": [530, 686], "copy2": [530, 686], "copy3": 530, "copyabl": 530, "manual_copy_suit": 530, "copy_ctor": [530, 685], "assignment_oper": 530, "earlier": 531, "point_h": [531, 539, 540], "point_cpp_suit": 531, "constructor_coordin": 531, "inaccessibil": 531, "move_op_pluseq": 531, "whenev": [532, 539, 549, 635], "sth": 533, "dirty_stack": 533, "use_uniniti": 533, "onward": [533, 537, 544], "nw": 534, "memberwis": 534, "_c_str": [534, 537, 638], "cxx03_data_encapsulation_object_copi": [535, 624, 636, 667, 683, 692, 700, 708, 710, 711], "cxx03_data_encapsulation_copy_bas": [535, 624, 711], "string_h": [537, 638], "cstring": [537, 638, 639, 672], "tcach": [537, 665], "221601": 537, "julian": [537, 686], "seward": [537, 686], "libvex": [537, 686], "rerun": [537, 686], "realloc": [537, 580], "0x484465b": 537, "1103": 537, "0x401210": 537, "0x401194": 537, "0x4dc8c80": 537, "0x401188": 537, "0x484222f": 537, "0x4011c5": 537, "0x40116f": 537, "freed": [537, 717, 887, 953], "destroi": [537, 599, 621, 640, 657, 672, 687, 698, 748], "221807": 537, "twostr": 537, "twotwostr": 537, "s21": 537, "s22": 537, "segfault": [537, 772, 930], "paraamet": 538, "__pretty_function__": 538, "0000000000401176": 538, "_z1fi": 538, "00000000004011a0": 538, "_z1fpc": 538, "demangl": 538, "anywher": [539, 951], "fab": [539, 540], "distance_origin": [539, 540, 690], "prohibit": 539, "hid": 539, "standardes": 539, "d_orig": 540, "fpermiss": [540, 677], "arrog": 540, "goodi": [540, 856], "pascal": 542, "uninitil": 542, "pass_by_copi": 542, "references_suit": 542, "voila": [542, 862, 920, 933, 934, 944, 975], "tediou": [542, 881, 934, 1008], "pass_by_point": 542, "pass_by_refer": 542, "pass_by_const_point": 542, "const_point": 542, "pass_by_const_refer": 542, "const_refer": 542, "pass_by_copy_expens": 542, "copy_expens": 542, "pass_by_const_reference_cheap": 542, "const_reference_cheap": 542, "addend": [543, 670, 690], "straightforwardli": [543, 1013], "add_point": 543, "static_suit": 543, "global_funct": 543, "static_method": 543, "bss": 544, "definition1": 544, "definition2": 544, "forbid": 544, "trickeri": 544, "points_equ": 545, "oddli": 545, "operators_suit": 545, "equals_glob": 545, "difficulti": 545, "equals_object": 545, "vector_addition_glob": 545, "vector_addition_object": 545, "point_plus_equ": 545, "combo": [546, 548], "cuboid_suit": 546, "front_bottom_left": 546, "point_whl_ctor": 546, "operator_eq_n": [546, 547, 548, 549], "operator_pluseq": [546, 547, 548], "operator_minuseq": [546, 548], "operator_minu": [546, 548], "operator_ostream": [546, 547, 548, 549], "buf": [546, 547, 548, 549, 876, 884, 894], "entirei": [546, 548, 549], "starting_point": 547, "implementation_in_cpp_fil": 547, "rectangle_suit": [547, 549], "pluseq": 547, "operator_unary_minu": [547, 548], "minus_p": [547, 548], "point3d_suit": 548, "coordinates_ctor": 548, "071067812": 548, "69041576": 548, "top_right": 549, "top_left": 549, "bottom_right": 549, "rational": [549, 583], "operator_plus_equal_vec": 549, "plus_vec": 549, "cxx03_functions_and_methods_exercise_class_point3d": [550, 624, 711], "cxx03_functions_and_methods_exercise_class_point": [550, 624, 711], "cxx03_functions_and_methods_exercise_class_cuboid": [550, 624, 711], "cxx03_functions_and_methods_exercise_class_rectangl": [550, 624, 711], "cxx03_functions_and_methods_static_member_vari": [550, 624, 711], "dothat": [551, 552], "dothi": [551, 552], "dothos": [551, 552], "dammit": [551, 552, 631], "thisexcept": 552, "thatexcept": 552, "thrown": [552, 929], "myexcept": 552, "error_detect": 552, "granular": [552, 729, 916], "typenam": [554, 555, 637, 644, 645, 646, 647, 649, 651, 652, 653, 658, 679, 685, 689, 699, 701], "a_begin": [558, 560], "a_end": [558, 560], "src_begin": [558, 562], "src_end": [558, 562], "dst_begin": [558, 562], "decai": 559, "zeroth": 559, "unflex": 563, "shrink_to_fit": 563, "prealloc": [563, 564], "gool": [565, 632], "cplusplu": [567, 568, 569, 570, 571, 573, 574, 575, 576, 579, 588], "int_arrai": [567, 569, 573, 576], "binarili": 567, "is_el": 567, "original_begin": 568, "original_end": 568, "copy_run": 568, "original_run": 568, "int_array_c": 569, "match_666": 570, "match_42": 570, "x_equals_666": 570, "x_equals_4": 570, "x_equal": 570, "_criterion": 570, "yesno": [570, 785, 786], "output_stern": 571, "output_bindestrich": 571, "output_with_prefix": 571, "_prefix": 571, "cxx03_stl_algorithm_find_if": [572, 591, 595, 624, 711], "cxx03_stl_algorithm_revers": [572, 591, 594, 595, 624, 711], "cxx03_stl_algorithm_lower_bound": [572, 591, 595, 624, 711], "cxx03_stl_algorithm_binary_search": [572, 591, 595, 624, 711], "cxx03_stl_algorithm_sort": [572, 591, 595, 624, 711], "cxx03_stl_algorithm_for_each": [572, 591, 595, 624, 711], "cxx03_stl_algorithm_reverse_copi": [572, 591, 594, 595, 624, 711], "reversed_": [575, 594], "less_revers": 576, "greater_than": 576, "cluster_cxx03_stl_sequential_contain": [578, 591, 595, 624, 711], "cxx03_stl_sequential_containers_bas": [578, 591, 595, 624, 711], "cxx03_stl_sequential_containers_list": [578, 591, 595, 624, 711], "cxx03_stl_sequential_containers_vector": [578, 591, 595, 624, 711], "liek": 580, "logarithm": 580, "mein_int_arrai": 580, "insert_po": 580, "new_elems_as_vector": 580, "elems_to_insert": 580, "cxx03_stl_associative_containers_multimap": [582, 591, 595, 624, 711], "realiz": [583, 1004], "parameter": [583, 689, 694, 940, 954], "keytyp": [583, 627], "valuetyp": [583, 627], "some_map": 583, "key_typ": [583, 584], "mapped_typ": [583, 584], "value_typ": [583, 584], "emplac": 583, "collis": 583, "zweiundvierzig": 583, "out_of_rang": [583, 587], "mymap": [584, 585, 586, 587], "sechshundersechsundsechzig": 584, "kv": 584, "pre11": [584, 585], "einundfuenfzig": [584, 585, 586, 587], "vierundfuenfzig": [584, 585, 586, 587], "dreihundertsechsundvierzig": [584, 585, 586, 587], "tausendein": [584, 585, 586, 587], "tausendzwei": [584, 585, 586, 587], "retval_7": 585, "retval_2": 585, "n_remov": 586, "found_value_1001": 587, "found_value_666": 587, "found_valu": 587, "joerg_svnr": 588, "caro_svnr": 588, "johanna_svnr": 588, "philipp_svnr": 588, "datenzwilling_von_joerg": 588, "faschingzwil": 588, "meine_map": 588, "datenzwil": 588, "equal_rang": 588, "found_rang": 588, "svnr_notexist": 588, "1234567": 588, "memory_resourc": 589, "cluster_cxx03_stl_alloc": [590, 591, 595, 624, 711], "cxx03_stl_allocator_bas": [590, 591, 595, 624, 711], "cluster_cxx03_stl_exercis": [591, 592, 594, 595, 624, 711], "cluster_cxx03_stl_exercises_reverse_str": [591, 592, 594, 595, 624, 711], "cxx03_stl_exercises_reverse_string_exercis": [591, 592, 594, 595, 624, 711], "cxx03_stl_exercises_reverse_string_solut": [591, 594, 595, 624, 711], "auto_ptr": [596, 635, 1113], "cluster_cxx03_dynamic_memori": [597, 624, 711], "cxx03_dynamic_memory_todo": [597, 624, 711], "inher": [598, 599, 602, 604, 605, 918, 1006], "novirtu": [598, 599, 605], "mantra": [599, 783], "spoiler": [599, 964], "cxx03_inheritance_oo_private_protect": [600, 624, 711], "derived1": 602, "derived2": 602, "countless": 602, "derived3": 602, "unimpl": [602, 968], "polymorp": 604, "strictli": [604, 862, 863, 964], "indirect": [605, 691, 795, 949], "cluster_cxx03_standard_library_miscellanea": [606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 711], "cxx03_standard_library_miscellanea_str": [606, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 711], "string_suit": 607, "another_hello": 607, "greeting1": 607, "greeting2": 607, "convert_to_signed_integ": 607, "stol": 607, "stoll": 607, "numstr": 607, "stoi": [607, 896, 899], "convert_to_unsigned_integ": 607, "stoull": 607, "stoui": 607, "stoul": 607, "convert_from_someth": 607, "basic_str": [607, 689], "i_str": 607, "ui_str": 607, "d_str": 607, "666000": 607, "sprintf": [607, 896, 899, 929, 930], "print_char": 608, "cluster_cxx03_exercises_misc": [608, 609, 610, 611, 624, 711], "cxx03_exercises_misc_american_flag": [608, 610, 624, 711], "cxx03_exercises_misc_fh_moodle_quiz": [609, 610, 624, 711], "cxx03_exercises_misc_sum_integers_from_stdin": [610, 611, 624, 711], "ctrl": [611, 930, 982], "cluster_cxx03_exercises_userdb": [612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_user_simple_method": [612, 613, 615, 616, 617, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_user_const_memb": [612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_user_access_method": [612, 613, 615, 616, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_userdb_search_find_if": [612, 620, 621, 624, 711], "cxx03_exercises_userdb_userdb_search": [612, 620, 621, 622, 624, 711], "cxx03_exercises_userdb_userdb_insert": [612, 619, 620, 621, 622, 624, 711], "cxx03_exercises_userdb_userdb_vector_bas": [612, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_userdb_search_notfound_except": [612, 621, 624, 711], "cxx03_exercises_userdb_user_const": [612, 615, 616, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_user_default_ctor": [612, 619, 620, 621, 622, 623, 624, 711], "cxx03_exercises_userdb_user_ctor": [612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 711], "architecton": 614, "celebr": 617, "trittsich": [617, 618], "age_by_n_year": 617, "user_init": 618, "userdb_insert": 619, "doesnotexist": [620, 622], "isvalid": [620, 621, 622], "unnatur": 621, "_user": [621, 760], "thereaft": 621, "wrinkl": 621, "usernotfound": 621, "unreach": [621, 873], "userdb_search_by_lastnam": 622, "undetect": 622, "userdb_init": 623, "cluster_cxx11": [625, 629, 636, 643, 654, 667, 668, 678, 683, 692, 700, 708, 710, 711], "cluster_cxx11_introduct": [625, 629, 667, 708, 710, 711], "cxx11_introduction_histori": [625, 629, 667, 708, 710, 711], "cxx11_introduction_overview_livehack": [625, 710, 711], "ugliest": 626, "todo_list": 627, "tdl": 627, "desc": 627, "key_value_pair": 627, "up_1_to_10": 627, "down_1000_to_980": 627, "090": 627, "todo_item": 627, "make_shar": [627, 688, 706], "todolist": 627, "nocopi": 627, "add_item": 627, "_list": 627, "evangelist": 627, "cstdint": [628, 657], "wchar_t": 628, "cluster_cxx11_new_language_featur": [629, 636, 643, 654, 667, 668, 678, 683, 692, 700, 708, 710, 711], "cluster_cxx11_new_language_features_brace_initi": [629, 667, 708, 710, 711], "cxx11_new_language_features_strongly_typed_enum": [629, 667, 708, 710, 711], "cxx11_new_language_features_auto": [629, 667, 708, 710, 711], "cxx11_new_language_features_brace_initialization_implementor_view": [629, 667, 710, 711], "cxx11_new_language_features_brace_initialization_mess": [629, 667, 710, 711], "cxx11_new_language_features_brace_initialization_intro": [629, 667, 708, 710, 711], "pointcloud": [630, 632], "_point": 630, "data_": [631, 633], "memoriz": 631, "brace_initialization_suit": 632, "explicit_ctor_cal": 632, "initlist_ctor_cal": 632, "explicit_ctor": 632, "initlist_ctor": 632, "disabigu": 632, "nightmar": [632, 635, 949], "size_": 633, "constexpr_suit": 634, "basic_const_is_constexpr": 634, "constexpr_function_request": 634, "constexpr_function_not_request": 634, "constexpr_recursive_funct": 634, "6765": 634, "constexpr_ctor": 634, "schurr": 634, "olsen": [635, 684], "nicolai": [635, 677, 680], "josutti": [635, 677, 680], "smartptr": [636, 667, 685, 686, 710, 711], "cluster_cxx11_smart_point": [636, 667, 683, 692, 700, 708, 710, 711], "cluster_cxx11_new_language_features_move_pf": [636, 667, 683, 692, 700, 708, 710, 711], "cxx11_perfect_forward": [636, 667, 710, 711], "cxx11_new_language_features_move_pf_overview": [636, 667, 683, 692, 700, 708, 710, 711], "cxx11_smart_pointers_unique_ptr": [636, 667, 683, 692, 700, 708, 710, 711], "cxx11_smart_pointers_introduct": [636, 667, 683, 692, 700, 708, 710, 711], "cxx11_new_language_features_miscellan": [636, 667, 683, 692, 700, 708, 710, 711], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [636, 667, 710, 711], "cxx11_new_language_features_move_pf_livehack_string_mov": [636, 667, 710, 711], "cxx11_new_language_features_move_pf_afterword": [636, 667, 710, 711], "_p": [637, 685, 951], "handwritten_suit": [637, 685], "explicit_mov": [637, 685], "assert_double_eq": [637, 685, 686], "create_constant_sensor": [637, 687], "prove": [637, 797], "return_by_copi": 637, "another_sensor": 637, "assigne": 637, "dubiou": 637, "bugfre": 638, "string_move_suit": 638, "make_a_string_from": 638, "ret_": 638, "move_return": 638, "move_assign": 638, "assig": 638, "person_h": 639, "person_suit": 639, "contructor": 639, "outliv": [640, 951], "rvr": 640, "ado": [642, 901, 1068], "mytyp": 642, "spellabl": 642, "0x7ffcd604846c": 642, "0x7ffcd6048468": 642, "iref": 642, "0x7ffffefe2b54": 642, "0x7ffffefe2b50": 642, "0x7ffc59ebd7bc": 642, "ciref": 642, "0x7ffc23e46284": 642, "0x7ffe4a148064": 642, "0x7ffc528e013c": 642, "cluster_cxx11_new_language_features_concept": [643, 667, 710, 711], "cxx11_new_language_features_concepts_link": [643, 667, 710, 711], "cxx11_new_language_features_concepts_intro": [643, 667, 710, 711], "cxx11_new_language_features_concepts_writing_concept": [643, 667, 710, 711], "conceptless": 644, "4ul": [644, 645], "4l": [644, 645], "satisfact": 644, "is_integral_v": 644, "_tp": [644, 677, 687], "hendrik": 648, "niemey": 648, "hypotenus": [649, 650, 651, 652, 653], "sumsq": [649, 650, 651, 652, 653], "point2d": [649, 651, 652, 653], "dozen": 649, "ruin": 649, "5l": 649, "same_a": 649, "commone_reference_with": 649, "common_reference_with": [649, 653], "has_siz": [652, 653], "index_returns_doubl": 653, "cluster_cxx11_new_language_features_coroutin": [654, 667, 710, 711], "cxx11_new_language_features_coroutines_intro": [654, 667, 710, 711], "stackless": 655, "asio": 655, "co_return": [655, 659, 660, 661, 662, 663], "hello_inst": [655, 659, 660, 661, 662, 663], "promise_typ": [655, 657, 658, 660, 661, 662, 663], "get_return_object": [655, 657, 658, 660, 661, 662, 663], "suspend_alwai": [655, 657, 658, 660, 661, 662, 663], "initial_suspend": [655, 657, 658, 660, 661, 662, 663], "final_suspend": [655, 657, 658, 660, 661, 662, 663], "return_void": [655, 658, 660, 661, 662, 663], "unhandled_except": [655, 657, 658, 660, 661, 662, 663], "suspend_nev": [655, 657, 658, 662], "coroutine_handl": [655, 657, 658, 661, 662, 663], "from_promis": [655, 657, 658, 661, 662, 663], "_coro": [655, 657], "yield_valu": [655, 657, 658, 661, 662, 663], "sentinel": [655, 658, 662, 663, 677], "_promis": [655, 658, 661, 662, 663], "glue": 655, "deciph": 655, "diagrammat": 655, "wei": 655, "co_yield": [656, 657, 658, 659, 661, 662, 663], "_elem": 657, "ed": [658, 661, 662, 663, 847, 884], "lackingdefaultconstructor": 664, "ldc": 664, "hasdefaultconstructor": 664, "hmpf": 664, "hdc": 664, "ownsmemori": 665, "om_copi": 665, "incontin": 666, "leaf": [666, 837], "method1": 666, "method2": 666, "cluster_cxx11_new_language_features_rang": [667, 678, 710, 711], "cluster_cxx11_new_language_features_lambda": [667, 668, 710, 711], "cxx11_new_language_features_structured_bind": [667, 710, 711], "cxx11_new_language_features_constexpr": [667, 710, 711], "cxx11_new_language_features_default": [667, 710, 711], "cxx11_new_language_features_delegating_ctor": [667, 710, 711], "cxx11_new_language_features_range_based_for": [667, 708, 710, 711], "cxx11_new_language_features_fin": [667, 710, 711], "cxx11_new_language_features_livehack_smartptr_mov": [667, 710, 711], "cxx11_smart_pointers_introduction_livehack": [667, 683, 710, 711], "cxx11_new_language_features_overrid": [667, 710, 711], "cxx11_new_language_features_delet": [667, 710, 711], "cxx11_new_language_features_modul": [667, 710, 711], "cxx11_new_language_features_range_based_for_map": [667, 710, 711], "cxx11_new_language_features_ranges_intro": [667, 678, 710, 711], "cxx11_new_language_features_ranges_link": [667, 678, 710, 711], "cxx11_new_language_features_ranges_good_bad": [667, 678, 710, 711], "cxx11_new_language_features_lambda_lambda_is_functor": [667, 668, 710, 711], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [667, 668, 710, 711], "cxx11_new_language_features_lambda_lambda_captur": [667, 668, 710, 711], "cxx11_new_language_features_lambda_lambda": [667, 668, 710, 711], "elsewher": [669, 758, 958], "lamda": 669, "print_messag": [669, 671, 672], "create_print_funct": [669, 671, 672], "constantli": [670, 775, 917], "mere": 670, "catur": 670, "akin": 670, "lambda_capture_suit": 670, "explicit_by_copi": 670, "lambda_capure_suit": 670, "explicit_by_refer": 670, "dubio": 670, "explicit_mix": 670, "initialized_captur": 670, "all_by_refer": 670, "all_by_copi": 670, "all_by_copy_except": 670, "this_captur": 670, "_i": [670, 690], "add_to_yourself_and_guarantee_programmers_job_secur": 670, "print_message_func": [671, 672], "_messag": [671, 672], "piti": 672, "mpp": 673, "precompil": [673, 758, 932], "speedup": 673, "rei": 673, "bori": 673, "kolpackov": 673, "abandon": 673, "inde": 675, "range_based_for_suit": 676, "map_pre_11": 676, "map_bas": 676, "map_basic_const_auto_refer": 676, "ific": [676, 681], "map_unpack_copi": 676, "map_unpack_refer": 676, "map_unpack_const_refer": 676, "min_el": 677, "forward_rang": [677, 679], "drop_view": 677, "filter_view": 677, "ref_view": 677, "ranges_util": 677, "view_interfac": 677, "_deriv": 677, "sized_sentinel_for": 677, "decltyp": 677, "__cust": 677, "declval": 677, "__cust_access": 677, "__begin": 677, "_s_size": 677, "_m_deriv": 677, "forward_iter": 677, "coll": 677, "2nd": [677, 1102], "__cxx11": [677, 689], "_vp": 677, "__simple_view": 677, "random_access_rang": [677, 679], "sized_rang": 677, "pretend": 677, "comitte": [677, 680], "lazili": 679, "first_two_drop": 679, "first_two_dropped_next_two_taken": 679, "oldstyl": 679, "inspir": 679, "refin": 679, "input_rang": 679, "bidirectional_rang": 679, "backward": [679, 733, 818, 850, 855, 981, 1089], "contiguous_rang": 679, "tristan": 680, "brindl": 680, "cppnorth": 680, "l0bhzp6hmdm": 680, "nico": 680, "accu": 680, "rust": [680, 932], "parrai": 681, "decompos": 681, "structured_binding_suit": 681, "struct_copi": 681, "struct_refer": 681, "struct_const_refer": 681, "tuple_copi": 681, "make_tupl": 681, "affect": 681, "tuple_refer": 681, "tuple_const_refer": 681, "array_copi": 681, "array_refer": 681, "array_const_refer": 681, "suspici": 681, "designwis": 682, "uptr": 682, "cxx11_smart_pointers_closing_word": [683, 692, 700, 710, 711], "cxx11_smart_pointers_shared_ptr": [683, 692, 700, 708, 710, 711], "cxx11_smart_pointers_weak_ptr": [683, 708, 710, 711], "myclass": [684, 686], "unwind": 684, "yoky6hzlkx": 684, "steal": [685, 918], "cxx11_unique_ptr_sensors_h": 685, "_temp": 685, "basic_const": 685, "raw_": 685, "raw_s_ref": 685, "copy_ctor_bad": 685, "assignment_operator_bad": 685, "gtest_filt": [685, 686, 1100], "reveal": [685, 951], "vtabl": 685, "autoptr": 685, "copy_ctor_good_autoptr_styl": 685, "unexpectedli": 685, "assignment_operator_good_autoptr_styl": 685, "destiat": 685, "excus": 686, "shared_ptr_suit": 686, "rs1": [686, 687], "rs2": [686, 687], "rand1": [686, 687, 688], "rand2": [686, 687, 688], "cann": 686, "basic_make_shar": 686, "set_refer": 686, "_ref": 686, "cyclic_refer": 686, "303549": 686, "unique_ptr_suit": 687, "threw": 687, "ownership_error": 687, "cxx11": 687, "unique_ptr_suite_ownership_error_test": 687, "testbodi": 687, "_dp": 687, "default_delet": 687, "verbose_ctor": 687, "make_unique_auto": 687, "tranfer": 687, "create_random_sensor": 687, "implicit_ownership_transf": 687, "holdsasensor": 687, "taking_ownership_in_own_cod": 687, "sompil": 687, "raw1": 687, "tie": 688, "unti": 688, "weak_ptr_suit": 688, "borrowed_sensor": 688, "another_refer": 688, "sensor_ref": 688, "measurement_thread": 688, "rvref": 689, "lo_funct": 689, "adventur": 689, "grimm": 689, "jaud": 689, "factset": 689, "570f242261f8": 689, "suffer": [690, 863], "origin_dist": 690, "criteria": [690, 802, 1089], "predic": 690, "void_funct": 690, "bind_suit": 690, "plain_void_funct": 690, "one_parameter_funct": 690, "plain_one_parameter_funct": 690, "minus_hardcod": 690, "_1_minus_2": 690, "minus_swap_paramet": 690, "second_minus_first": 690, "_2": [690, 691], "minus_hardcode_first_paramet": 690, "_42_minus_param": 690, "funcfunc": 690, "tradeoff": [690, 763], "oneimplement": 691, "anotherimplement": 691, "do_much_work": 691, "c_using_on": 691, "c_using_anoth": 691, "explanatori": 691, "trampolin": 691, "rtti": 691, "pod": 691, "metaphys": 691, "ostreamlogg": 691, "databaselogg": 691, "logfunc_t": 691, "funcptrlogg": 691, "somebusinessclasswithneedforlog": 691, "successfulli": [691, 778, 793, 1088, 1095], "do_stupid_log": 691, "ostream_logg": 691, "database_logg": 691, "funcptr_logg": 691, "busy_logging_to_ostream": 691, "busy_logging_to_databas": 691, "busy_logging_to_funcptr": 691, "foo_func": 691, "explos": 691, "cluster_cxx11_functions_funct": [692, 700, 710, 711], "cxx11_functions_functions_funct": [692, 700, 710, 711], "cxx11_functions_functions_bind": [692, 700, 710, 711], "msdn": 693, "devil": 693, "singlethread": 693, "god": 693, "paralleliz": 694, "cancel": [694, 908], "interlockedincr": 696, "mutual": [697, 966], "try_lock": 697, "try_lock_for": 697, "unavail": 697, "try_lock_until": 697, "time_point": [697, 702], "do_something_errorpron": 698, "do_more_of_it": 698, "wake": [699, 740, 750, 881, 905, 914, 920], "waiter": [699, 750, 775, 905], "stop_wait": 699, "wait_for": [699, 701], "wait_until": [699, 701], "notify_on": 699, "notify_al": 699, "broadcast": [699, 856, 863, 905, 930, 1130], "thunder": 699, "herd": 699, "condvar": 699, "threadsafequeu": 699, "maxelem": 699, "_maxelem": 699, "dur": [699, 701], "scoped_lock": [699, 701], "_lock": [699, 701], "pop_front": 699, "2m": [699, 701, 855], "1m": [699, 783, 855], "consumer1": 699, "consumer2": 699, "pthread_cond_init": [699, 905], "_not_empti": 699, "_not_ful": 699, "pthread_cond_wait": [699, 905], "pthread_cond_sign": [699, 905], "pthread_cond_t": [699, 905], "unique_lock": 699, "cluster_cxx11_multithread": [700, 710, 711], "cluster_linux_sysprog_blocking_io": [700, 710, 711, 788, 791, 792, 854, 883, 895, 909, 915, 917], "cluster_linux_sysprog_posix_thread": [700, 710, 711, 854, 895, 909, 915], "cluster_linux_sysprog_schedul": [700, 710, 711, 854, 895, 909, 915, 917], "cxx11_multithreading_thread": [700, 710, 711], "cxx11_multithreading_introduct": [700, 710, 711], "linux_sysprog_posix_threads_lifecycl": [700, 710, 711, 854, 895, 909, 915], "cxx11_multithreading_mutex": [700, 710, 711], "cxx11_multithreading_race_condit": [700, 710, 711], "linux_sysprog_posix_threads_mutex": [700, 710, 711, 854, 895, 909, 915], "cxx11_multithreading_scoped_lock": [700, 710, 711], "cxx11_multithreading_chrono": [700, 710, 711], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [700, 710, 711, 854, 895, 909, 915], "cxx11_multithreading_atom": [700, 710, 711], "cxx11_multithreading_condition_vari": [700, 710, 711], "cxx11_multithreading_promise_futur": [700, 710, 711], "linux_sysprog_posix_threads_condition_vari": [700, 710, 711, 854, 895, 909], "linux_sysprog_blocking_io_blocking_io": [700, 710, 711, 788, 791, 792, 854, 883, 895, 909, 915, 917], "linux_sysprog_posix_threads_bas": [700, 710, 711, 854, 895, 909, 915], "linux_sysprog_posix_threads_exercise_mutex": [700, 710, 711, 854, 895, 909], "linux_sysprog_scheduling_bas": [700, 710, 711, 854, 895, 909, 915, 917], "get_futur": 701, "set_except": 701, "exception_ptr": 701, "shared_futur": 701, "uncoordin": 701, "ten_million_years_": 701, "answer_poll_interval_m": 701, "answer_valid": 701, "chew_answ": 701, "timespec": [701, 905, 916, 926], "reaction": [701, 873, 955], "answer_computation_tim": 701, "answer_poll_interv": 701, "ten_million_year": 701, "lockguard": 701, "_answer_valid": 701, "_answer": 701, "_data": [701, 946], "binary_semaphor": 701, "__cplusplu": 701, "202001l": 701, "_notifi": 701, "answer_promis": 701, "answer_futur": 701, "make_exception_ptr": 701, "epoch": [702, 925], "time_t": 702, "notion": 702, "system_clock": 702, "monoton": [702, 766, 768], "ntp": 702, "steady_clock": 702, "timepoint": 702, "steadili": 702, "high_resolution_clock": 702, "brand": 702, "spent_milli": 702, "duration_cast": 702, "bagcopi": 705, "find_by_int": [705, 706, 707], "remove_by_int": [705, 706, 707], "nremov": [705, 706, 707], "bagshar": 706, "item2": [706, 707], "weakref": 706, "sharedref": 706, "baguniqu": 707, "constbag": 707, "cluster_cxx11_exercis": [708, 710, 711], "cxx11_exercises_bag_shar": [708, 710, 711], "cxx11_exercises_bag_uniqu": [708, 710, 711], "cxx11_exercises_bag_copi": [708, 710, 711], "withing": 709, "filesystem_suit": 709, "cd_to_tmpdir_fixtur": 709, "path_compose_compar": 709, "path_compose_compare_2": 709, "is_absolut": 709, "is_rel": 709, "path_abs_rel": 709, "abspath": 709, "relpath": 709, "parent_path": 709, "remove_filenam": 709, "replace_filenam": 709, "replace_extens": 709, "path_component_access": 709, "filename_part": 709, "dir_part": 709, "path_iter": 709, "current_directori": 709, "cwd_chdir": 709, "current_path": 709, "create_directory_error": 709, "filesystem_error": 709, "create_directory_singl": 709, "is_regular_fil": 709, "create_directory_multipl": 709, "is_directori": 709, "is_block_fil": 709, "is_character_fil": 709, "is_empti": 709, "is_fifo": 709, "is_oth": 709, "is_socket": 709, "is_symlink": 709, "greatest": 709, "nov": [709, 748, 814, 840, 862, 946, 982, 1011], "inod": [709, 717, 724], "919153": 709, "0644": [709, 803, 817], "system_u": 709, "object_r": 709, "passwd_file_t": 709, "s0": 709, "111282886": 709, "0100": 709, "737858445": 709, "743858359": 709, "file_s": 709, "hard_link_count": 709, "last_write_tim": 709, "ext4": [709, 758], "btrf": 709, "ntf": 709, "directory_iter": 709, "subdir1": 709, "subdir2": 709, "file1": [709, 727, 843], "file2": [709, 727, 843], "dirit": 709, "recursive_directory_iter": 709, "cxx11_filesystem": [710, 711], "cluster_linux_ssh": [711, 854, 866, 867, 868, 869, 870, 942, 943], "cluster_linux_ssh_exercis": [711, 854, 866, 867, 868, 869, 870], "cluster_linux_basics_archiving_compress": [711, 781, 788, 854, 942, 943], "cluster_linux_basics_shell_exercis": [711, 785, 786, 787, 788, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 838, 854], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [711, 785, 786, 787, 788, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 838, 854], "cluster_linux_basics_shell_exercises_l": [711, 788, 832, 833, 834, 835, 836, 838, 854], "cluster_linux_basics_permissions_exercis": [711, 788, 804, 807, 808, 809, 810, 811, 812, 813, 854], "cluster_linux_basics_exercis": [711, 785, 786, 787, 788, 854], "cluster_linux_basics_text_tool": [711, 788, 848, 854], "cluster_linux_basics_io_redir_pip": [711, 788, 799, 854], "cluster_linux_toolchain_cross": [711, 854, 936, 937, 939, 941, 942, 943], "cluster_linux_toolchain_raspi": [711, 854, 937, 939, 942, 943], "cluster_linux_toolchain_exercis": [711, 854, 937, 938, 939, 940, 941, 942], "cluster_linux_hardwar": [711, 854, 860, 861], "cluster_linux_hardware_can": [711, 854, 860, 861], "cluster_linux_kernel": [711, 715, 718, 720, 723, 725, 728, 730, 732, 734, 735, 737, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 762, 764, 767, 769, 773, 776, 779, 854], "cluster_linux_sysprog_intro_hw": [711, 854, 895, 897], "cluster_linux_sysprog_process": [711, 854, 895], "cluster_unittest": [711, 1098], "linux_ssh_key_pair": [711, 854, 866, 867, 868, 869, 870], "linux_ssh_bas": [711, 854, 866, 867, 868, 869, 870, 942, 943], "linux_basics_intro_login": [711, 788, 792, 804, 807, 808, 809, 810, 811, 812, 813, 854, 866, 867, 868, 869, 870, 942, 943], "linux_ssh_scp": [711, 854, 866, 867, 868, 870, 942, 943], "linux_ssh_sshf": [711, 854, 870], "linux_ssh_portforward": [711, 854, 870], "linux_ssh_link": [711, 854, 870], "linux_ssh_exercises_copy_tre": [711, 854, 867, 868, 870], "linux_ssh_exercises_copy_fil": [711, 854, 866, 867, 868, 870], "linux_ssh_exercises_pubkei": [711, 854, 866, 867, 868, 869, 870], "linux_basics_intro_process_tre": [711, 788, 792, 804, 807, 808, 809, 810, 811, 812, 813, 854, 866, 867, 868, 869, 870, 895, 942, 943], "linux_basics_intro_environ": [711, 788, 792, 838, 854, 895, 942, 943], "linux_basics_intro_wsl": [711, 788, 792, 854], "linux_basics_intro_demo_everything_is_a_fil": [711, 788, 791, 792, 854], "linux_sysprog_blocking_io_blocking_io_fil": [711, 788, 791, 792, 854, 883, 895], "linux_basics_intro_fh_moodle_quiz": [711, 788, 791, 792, 854], "linux_basics_archiving_compression_tar": [711, 781, 788, 854, 942, 943], "linux_basics_archiving_compression_gzip": [711, 781, 788, 854, 942, 943], "linux_basics_archiving_compression_exercis": [711, 781, 788, 854], "linux_basics_archiving_compression_overview": [711, 781, 788, 854, 942, 943], "linux_basics_shell_cp": [711, 785, 786, 787, 788, 822, 823, 825, 826, 829, 830, 832, 838, 854], "linux_basics_shell_link": [711, 788, 838, 854], "linux_basics_shell_configfil": [711, 788, 838, 854], "linux_basics_shell_fh_moodle_quiz": [711, 788, 831, 838, 854], "linux_basics_shell_mv": [711, 788, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [711, 785, 786, 787, 788, 822, 823, 824, 825, 826, 827, 829, 830, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [711, 785, 786, 787, 788, 822, 823, 824, 825, 826, 829, 830, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [711, 788, 822, 826, 829, 830, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [711, 788, 822, 823, 826, 829, 830, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [711, 788, 822, 825, 826, 829, 830, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [711, 788, 822, 826, 829, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [711, 788, 826, 829, 832, 838, 854], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [711, 788, 826, 828, 832, 838, 854], "linux_basics_shell_exercises_ls_home_permiss": [711, 788, 832, 835, 836, 838, 854], "linux_basics_shell_exercises_ls_etc_passwd_s": [711, 788, 832, 834, 835, 838, 854], "linux_basics_shell_exercises_ls_dev_typ": [711, 788, 832, 833, 835, 838, 854], "linux_basics_permissions_fh_moodle_quiz": [711, 788, 805, 813, 854], "linux_basics_permissions_sticki": [711, 788, 813, 854], "linux_basics_permissions_fh_moodle_quiz_nocheat": [711, 788, 806, 813, 854], "linux_basics_permissions_setuid": [711, 788, 813, 854], "linux_basics_permissions_umask": [711, 788, 813, 854], "linux_basics_permissions_setuid_livedemo": [711, 788, 813, 854], "linux_basics_permissions_exercises_credenti": [711, 788, 804, 807, 808, 809, 810, 811, 812, 813, 854], "linux_basics_permissions_exercises_public_directori": [711, 788, 807, 810, 811, 813, 854], "linux_basics_permissions_exercises_public_directory_quest": [711, 788, 807, 811, 813, 854], "linux_basics_permissions_exercises_private_directory_quest": [711, 788, 807, 809, 813, 854], "linux_basics_permissions_exercises_private_directori": [711, 788, 807, 808, 809, 813, 854], "linux_basics_permissions_exercises_shared_fil": [711, 788, 807, 812, 813, 854], "linux_basics_exercises_fh_ss2022_exam_01_g2": [711, 786, 787, 788, 854], "linux_basics_exercises_fh_ss2022_exam_01_g1": [711, 785, 787, 788, 854], "linux_basics_text_tools_head_tail": [711, 788, 848, 854], "linux_basics_text_tools_cat": [711, 788, 848, 854], "linux_basics_text_tools_overview": [711, 788, 848, 854], "linux_basics_text_tools_find": [711, 788, 848, 854], "linux_basics_text_tools_grep": [711, 788, 848, 854], "linux_basics_text_tools_less": [711, 788, 848, 854], "linux_basics_text_tools_exercis": [711, 788, 848, 854], "linux_basics_text_tools_cut": [711, 788, 848, 854], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [711, 788, 799, 854], "linux_basics_io_redir_pipes_io_redir": [711, 788, 799, 854], "linux_basics_io_redir_pipes_pip": [711, 788, 799, 854], "linux_basics_io_redir_pipes_exercis": [711, 788, 799, 854], "linux_toolchain_shared_librari": [711, 854, 942], "linux_toolchain_cmake_cross": [711, 854, 942], "linux_toolchain_cross_bas": [711, 854, 936, 937, 939, 941, 942, 943], "linux_toolchain_raspi_linaro_pi": [711, 854, 942, 943], "defunct": [711, 854, 942, 943], "linux_toolchain_raspi_detail": [711, 854, 942, 943], "linux_toolchain_raspi_docker_fedora_wsl": [711, 854, 942, 943], "linux_toolchain_raspi_toolchain_setup": [711, 854, 937, 939, 942, 943], "linux_toolchain_exercises_native_build": [711, 854, 939, 940, 942], "linux_toolchain_exercises_fh_moodle_quiz": [711, 854, 938, 939, 942], "linux_toolchain_exercises_raspberry_toolchain": [711, 854, 939, 941, 942], "linux_toolchain_exercises_cross_build": [711, 854, 937, 939, 942], "linux_hardware_brushless_motor": [711, 854, 861], "brushless": [711, 854, 861], "linux_hardware_pwm": [711, 854, 861], "linux_hardware_i2c": [711, 854, 861], "linux_hardware_w1": [711, 854, 861], "linux_hardware_can_hardwar": [711, 854, 860, 861], "linux_hardware_can_intro": [711, 854, 860, 861], "linux_hardware_can_program": [711, 854, 860, 861], "linux_hardware_can_interfac": [711, 854, 860, 861], "linux_kernel_raspi_kernel_build": [711, 735, 739, 759, 762, 767, 773, 776, 779, 854], "linux_kernel_fedora_module_build": [711, 715, 718, 720, 723, 725, 728, 734, 735, 737, 739, 743, 749, 755, 762, 767, 773, 776, 779, 854], "linux_kernel_fedora_kernel_build": [711, 715, 718, 720, 723, 725, 728, 732, 734, 735, 737, 739, 743, 749, 755, 762, 767, 773, 776, 779, 854], "linux_kernel_spinlock_cod": [711, 735, 762, 767, 773, 776, 779, 854], "linux_kernel_interrupt_cod": [711, 735, 739, 762, 767, 773, 776, 779, 854], "linux_kernel_spinlock": [711, 735, 762, 764, 767, 773, 776, 779, 854], "linux_kernel_interrupt": [711, 735, 739, 741, 753, 755, 762, 767, 773, 776, 779, 854], "linux_kernel_mutex_cod": [711, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_process_vs_atom": [711, 720, 725, 728, 730, 735, 739, 741, 745, 749, 751, 753, 755, 757, 762, 764, 767, 769, 773, 776, 779, 854], "linux_kernel_cdev_first_function": [711, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_cdev_file_oper": [711, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_kmalloc": [711, 720, 725, 728, 730, 735, 739, 749, 753, 755, 762, 767, 773, 776, 779, 854], "linux_kernel_list": [711, 720, 725, 728, 735, 739, 747, 749, 762, 767, 773, 776, 779, 854], "doubli": [711, 720, 724, 725, 728, 735, 739, 748, 749, 760, 762, 767, 773, 776, 779, 854], "linux_kernel_stub_sysprog_dup": [711, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "dup": [711, 717, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 801, 854, 887, 926], "stub": [711, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854, 945], "linux_kernel_cdev_auto": [711, 715, 718, 720, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_multiple_devic": [711, 725, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_cdev_refactor": [711, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_timer_cod": [711, 735, 767, 773, 776, 779, 854], "linux_kernel_tim": [711, 735, 767, 769, 773, 776, 779, 854], "linux_kernel_usermem": [711, 735, 773, 776, 854], "linux_kernel_workqueu": [711, 735, 773, 776, 779, 854], "linux_kernel_mutex": [711, 735, 739, 749, 751, 762, 767, 773, 776, 779, 854], "linux_kernel_waitqueu": [711, 735, 776, 854], "linux_kernel_iomemori": [711, 735, 743, 755, 854], "linux_kernel_modules_hello_world": [711, 715, 718, 720, 723, 725, 728, 735, 737, 739, 743, 749, 755, 762, 767, 773, 776, 779, 854], "linux_kernel_dma": [711, 730, 735, 753, 755, 854], "linux_kernel_netdev": [711, 735, 753, 854], "linux_kernel_cdev_manu": [711, 715, 718, 720, 723, 725, 728, 735, 739, 749, 762, 767, 773, 776, 779, 854], "linux_kernel_pci": [711, 735, 755, 854], "linux_sysprog_sign": [711, 854, 895], "linux_sysprog_ev": [711, 854, 895], "linux_sysprog_ipc": [711, 854, 895], "linux_sysprog_scheduling_exam_quest": [711, 854, 895, 915, 917], "linux_sysprog_scheduling_realtim": [711, 854, 895, 915, 917], "linux_sysprog_scheduling_wakeup_lat": [711, 854, 895, 915, 917], "linux_sysprog_scheduling_processes_and_thread": [711, 854, 895, 915, 917], "linux_sysprog_scheduling_realtime_api": [711, 854, 895, 915], "linux_sysprog_blocking_io_blocking_io_network": [711, 854, 883, 895], "linux_sysprog_blocking_io_blocking_io_tim": [711, 854, 883, 895], "linux_sysprog_posix_threads_last_warn": [711, 854, 895, 909], "linux_sysprog_posix_threads_miscellan": [711, 854, 895, 909], "linux_sysprog_posix_threads_exercise_condition_vari": [711, 854, 895, 909], "linux_sysprog_posix_threads_mutex_trylock": [711, 854, 895, 909], "trylock": [711, 854, 895, 903, 909], "islock": [711, 854, 895, 903, 909], "linux_sysprog_intro_hw_get": [711, 854, 895, 897], "linux_sysprog_intro_hw_sysfs_gpio": [711, 854, 895, 897], "linux_sysprog_intro_hw_watch": [711, 854, 895, 897], "linux_sysprog_process_commandlin": [711, 854, 895], "linux_sysprog_process_tre": [711, 854, 895], "linux_sysprog_fileio_example_o_creat": [711, 854, 893, 895, 912], "linux_sysprog_fileio_example_o_wronli": [711, 854, 893, 895, 912], "linux_sysprog_fileio_example_o_rdonli": [711, 854, 893, 895, 912], "o_rdonli": [711, 716, 854, 880, 884, 885, 888, 891, 892, 893, 895, 896, 899, 912, 922, 925, 929], "linux_sysprog_fileio_example_o_excl": [711, 854, 893, 895, 912], "o_excl": [711, 854, 884, 885, 893, 895, 912, 925], "linux_sysprog_fileio_basics_exercise_copi": [711, 854, 885, 893, 895, 912], "linux_sysprog_fileio_fileio_group": [711, 854, 893, 895, 912], "linux_sysprog_fileio_basics_exercise_hol": [711, 854, 893, 895, 912], "linux_sysprog_fileio_dupl": [711, 854, 893, 895, 912], "linux_sysprog_fileio_misc": [711, 854, 893, 895, 912], "unittest_gtest_cmak": [711, 1098], "interconnect": 712, "device_cr": [713, 714, 717], "cdev_init": [713, 721, 722], "cdev_add": [713, 721, 722], "unhappi": 713, "device_destroi": 713, "my_class": 713, "my_driv": [713, 716, 726, 727, 738, 748, 754, 760, 766, 777], "mknod": [713, 721, 722], "character devic": [714, 717, 722, 1118], "relatim": 714, "register_chrdev_region": [714, 721, 722], "alloc_chrdev_region": [714, 722], "htmldoc": 714, "chrdev": 714, "dev_t": [714, 722], "baseminor": 714, "highlight": 714, "bug_on": 714, "module_licens": [714, 736], "openat": [716, 880], "at_fdcwd": [716, 880], "0x7f3d11330000": 716, "einval": [716, 721, 736, 774], "enotti": 716, "file_oper": [717, 721, 722, 760], "citizenship": 717, "__user": [717, 772], "loff_t": 717, "unlocked_ioctl": 717, "my_op": 717, "this_modul": 717, "my_open": 717, "my_read": 717, "my_writ": 717, "my_ioctl": [717, 748], "mode_t": [717, 884, 888, 926], "filp": [717, 760, 774], "vf": 717, "swiss": [717, 884, 1113], "armi": [717, 884, 1113], "my_ioctl_request": [717, 719], "my_request_such": 717, "my_request_such_and_such": 717, "laden": [717, 1127], "endod": 717, "_iow": 717, "_ior": 717, "_ioc": 717, "_ioc_non": 717, "_ioc_read": 717, "_ioc_typecheck": 717, "_ioc_writ": 717, "_iowr": 717, "my_ev": [719, 726, 727, 766, 771], "my_event_typ": 719, "my_event_ioctl": 719, "jiffi": [719, 760, 766], "my_event_list": [719, 726, 727, 748], "list_head": [719, 746, 748, 771], "num_ev": 719, "my_event_list_init": 719, "my_event_list_destroi": 719, "my_event_list_add": [719, 748, 761, 766, 777], "my_ioctl_add_ev": 719, "printk": [719, 736, 738, 777], "unregister_chrdev_region": [721, 722], "caveat": [721, 760, 863], "register_chrdev": 721, "unregister_chrdev": 721, "kern_err": 721, "cdev_del": [721, 722], "my_driver_henkel": 721, "kmem": 722, "opaqu": 722, "majmin": 722, "mkdev": 722, "drivernam": 722, "my_fop": 722, "my_cdev": 722, "devicefil": 722, "ndevic": 724, "module_param": 724, "my_devic": [724, 726, 727, 738, 754, 766], "private_data": [724, 754, 760], "kbuild": [726, 727], "torn": [726, 1105], "ccflag": [726, 727], "container_of": [727, 778], "file3": 727, "distinct": [727, 794, 878, 1005], "my_device_init": 727, "my_device_destroi": [727, 766], "everyt": 729, "vmalloc": 729, "ioremap": [729, 742], "iommu": 729, "pysic": 729, "dma_addr_t": 729, "alloc_pag": 729, "gfp_mask": 729, "get_free_pag": 729, "__get_free_pag": 729, "2order": 729, "__get_dma_pag": 729, "zone": 729, "__free_pag": 729, "free_pag": 729, "addr": [729, 742, 754, 858, 863, 881, 925, 1093], "dma_handl": 729, "cpu_addr": [729, 754], "dma_alloc_coher": 729, "gfp": [729, 744, 770], "dma_free_coher": 729, "pci_dev": [729, 754], "gfp_kernel": [729, 744, 761], "gfp_atom": [729, 744], "dma_bidirect": 729, "dma_to_devic": 729, "dma_from_devic": 729, "dma_map_singl": 729, "dma_mapping_error": 729, "fuck": 729, "dma_unmap_singl": 729, "dma_map_pag": 729, "dma_unmap_pag": 729, "dma_address": 729, "sglist": 729, "sg_run": 729, "dma_map_sg": 729, "for_each_sg": 729, "hw_address": 729, "sg_dma_address": 729, "hw_len": 729, "sg_dma_len": 729, "dma_unmap_sg": 729, "nent": 729, "unmap": [729, 754], "recreat": [729, 830, 948], "dma_sync_single_for_cpu": 729, "dma_sync_sg_for_cpu": 729, "mel": [729, 744], "gorman": [729, 744], "incredibli": 729, "transcript": [731, 758, 1055], "building_a_custom_kernel": 731, "fc33": [731, 736], "extravers": [731, 759], "cleanli": 731, "uncommit": 731, "j6": 731, "fedpkg": 731, "pesign": 731, "grubbi": 731, "33rd": 731, "f33": 731, "builddep": 731, "libexec": [731, 944], "symver": [733, 736], "modpost": [733, 736], "module_src": 733, "kernel_build": 733, "install_mod_path": [733, 758], "modules_instal": [733, 758, 862], "fedora_kernel_build": 735, "fedora_module_build": 735, "modules_hello_world": 735, "cdev_manu": 735, "process_vs_atom": 735, "stub_sysprog_dup": 735, "cdev_auto": 735, "cdev_file_oper": 735, "cdev_first_function": 735, "cdev_refactor": 735, "multiple_devic": 735, "mutex_cod": 735, "raspi_kernel_build": 735, "interrupt_cod": 735, "spinlock_cod": 735, "timer_cod": 735, "iomemori": 735, "usermem": 735, "waitqueu": [735, 1118], "netdev": 735, "ldd3": [735, 746], "reilli": [735, 847], "probe": [736, 862, 863, 864], "hello_init": 736, "kern_debug": 736, "hello_exit": 736, "module_init": 736, "module_exit": 736, "exot": 736, "currect": [736, 831], "lsmod": [736, 862, 863, 864], "insmod": 736, "modprob": [736, 758, 759, 857, 862, 863, 864], "rmmod": [736, 766], "dep": 736, "softdep": 736, "rebuilt": 736, "depmod": [736, 754], "cross_compil": [738, 758, 759], "libssl": [738, 862], "gpio_request": 738, "gpio_fre": 738, "gpio_direction_input": 738, "gpio_direction_output": 738, "gpio_to_irq": 738, "my_device_activate_gpio": 738, "_destroi": 738, "3f200000": 738, "pinctrl": 738, "bcm2835": [738, 859], "request_irq": [738, 740, 754], "free_irq": [738, 740, 754], "priorit": [740, 756, 856, 914, 926], "preempt_rt": [740, 750, 1108], "mainlin": [740, 758, 918, 1108], "irqreturn_t": [740, 754], "irq_handl": [740, 754], "irq": [740, 754, 756, 760, 916], "opqu": 740, "irq_non": 740, "irq_wake_thread": 740, "irq_handler_t": 740, "irqf_shar": [740, 754], "irqf_trigger_ris": 740, "irqf_trigger_fal": 740, "irqf_trigger_high": 740, "irqf_trigger_low": 740, "iomem": 742, "ioport": 742, "request_mem_region": 742, "0x20200000": 742, "release_mem_region": 742, "asm": [742, 947], "iounmap": 742, "ioread8": 742, "ioread16": 742, "ioread32": 742, "iowrite8": 742, "u8": 742, "iowrite16": 742, "u16": 742, "iowrite32": 742, "u32": 742, "kmalloc kfre": 744, "dynamic memori": 744, "slab": 744, "gfp_t": [744, 761, 777], "kzalloc": 744, "kfree": 744, "scarc": 744, "discourag": 744, "stolen": [746, 855], "some_list": 746, "init_list_head": 746, "some_data": 746, "list_add": 746, "list_add_tail": 746, "new_payload": 746, "existing_payload": 746, "prepend": [746, 758, 790, 993], "list_for_each": 746, "list_entri": 746, "cursor": [746, 818, 1068], "run_payload": 746, "list_empti": 746, "list_first_entri": 746, "list_del": [746, 748], "a_payload": 746, "inject": [748, 761, 766, 1071], "opfer": 748, "corrupt": 748, "ffff91285ae68f00": 748, "ffff9128406cec00": 748, "list_debug": 748, "0x70": [748, 863], "0xb0": 748, "0xdd": 748, "ksys_ioctl": 748, "0x82": 748, "0xc0": 748, "__x64_sys_ioctl": 748, "do_syscall_64": 748, "0x4d": 748, "entry_syscall_64_after_hwfram": 748, "0x44": 748, "0xa9": 748, "unprotect": [748, 760, 976], "nevent": [748, 771], "my_device_list": 748, "preemptibl": [750, 918], "preemption": [750, 756, 763, 863, 914, 917, 918], "holder": [750, 974], "mutex_init": 750, "mutex_destroi": 750, "mutex_lock": 750, "mutex_lock_interrupt": 750, "eintr": [750, 876, 929, 930], "mutex_lock_interruptible_nest": 750, "mutex_trylock": 750, "eagain": [750, 760, 774], "mutex_unlock": 750, "torvald": [750, 758], "trickl": 750, "rtmutex": 750, "rt_mutex": 750, "net_devic": 752, "alloc_netdev": 752, "sizeof_priv": 752, "netdev_priv": 752, "funcion": 752, "ethernet": 752, "etherdevic": 752, "alloc_etherdev": 752, "free_netdev": 752, "register_netdev": 752, "unregister_netdev": 752, "devinc": 752, "hard_start_xmit": 752, "sk_buff": 752, "skb": 752, "transmiss": [752, 881, 1052], "tx_timeout": 752, "quota": [752, 784], "stead": 752, "do_ioctl": 752, "ifreq": [752, 858], "ifr": [752, 858], "netif_start_queu": 752, "netif_stop_queu": 752, "netif_wake_queu": 752, "udevd": 754, "pci_device_id": 754, "my_id": 754, "pci_devic": 754, "0xdead": 754, "0xbeef": 754, "0xbeee": 754, "module_device_t": 754, "my_prob": 754, "my_remov": 754, "my_suspend": 754, "pm_message_t": 754, "my_resum": 754, "my_shutdown": 754, "pci_driv": 754, "id_tabl": 754, "my_init": 754, "pci_register_driv": 754, "my_exit": [754, 963], "pci_unregister_driv": 754, "subsystem_vendor": 754, "subsystem_devic": 754, "u64": [754, 768], "dma_mask": 754, "device_count_resourc": 754, "pci_enable_devic": 754, "pdev": 754, "wizardri": 754, "pci_request_region": 754, "pci_set_mast": 754, "pci_clear_mast": 754, "pci_set_dma_mask": 754, "pci_set_drvdata": 754, "ioread": 754, "iowrit": 754, "pci_resource_len": 754, "bar_no": 754, "__iomem": 754, "pci_iomap": 754, "pci_iounmap": 754, "pci_alloc_consist": 754, "os_devic": 754, "_o": 754, "dma_addr": 754, "pci_free_consist": 754, "_size": 754, "_cpu_addr": 754, "t_os_dma_addr__get_n": 754, "_dma_addr": 754, "_os_devic": 754, "dma_bit_mask": 754, "pci_set_consistent_dma_mask": 754, "config_debug_atomic_sleep": [756, 761], "cross compil": 758, "educ": 758, "raspberrypi": [758, 759, 862, 934, 941], "borrow": 758, "pi2": 758, "1gb": 758, "canon": [758, 875], "workstat": 758, "boil": 758, "hf": 758, "armv6j": 758, "hardfloat": 758, "gnueabi": 758, "objcopi": 758, "raspberry_pi": 758, "local_overlai": 758, "ebuild": 758, "binutil": [758, 759], "repo_nam": 758, "9999": 758, "sourcedir": 758, "builddir": 758, "buildparam": 758, "kconfig": 758, "zconf": 758, "raspbian": 758, "bootdir": 758, "bootf": 758, "rootf": 758, "kernel7": 758, "Then": [758, 873, 1075], "assimil": 758, "bcmrpi_defconfig": 758, "bcm2709_defconfig": 758, "config_localvers": 758, "config_ikconfig": 758, "eveytim": 758, "config_can_mcp251x": 758, "config_sensors_lm73": 758, "zimag": [758, 759, 862], "dtb": [758, 759, 862], "j3": 758, "mkknlimg": 758, "te": 758, "superus": 758, "jtf": 758, "bcm2709": 758, "smi": 758, "ft5406": 758, "can1": [758, 857], "v7": [758, 759], "ipv4": [758, 1130], "xfrm4_mode_beet": 758, "inet_lro": 758, "esp4": 758, "xfrm4_mode_transport": 758, "udp_tunnel": 758, "sdb": 758, "57344": 758, "sdb1": 758, "4162560": 758, "sdb2": 758, "enjoi": 758, "ec2aa3d2": 758, "eee7": 758, "454e": 758, "d145df5ddcba": 758, "agnost": 758, "urg": 758, "rasperri": [759, 862, 864, 1117, 1124], "patchlevel": 759, "sublevel": 759, "_morph": [760, 770], "my_driver_hello": 760, "my_driver_cdev_manu": 760, "my_driver_cdev_dynamic_major": 760, "my_driver_cdev_file_oper": 760, "my_driver_cdev_first_function": 760, "my_driver_cdev_refactor": 760, "my_driver_multiple_devic": 760, "my_driver_mutex": 760, "my_driver_interrupt": 760, "my_driver_spinlock_atom": 760, "my_driver_time_tim": 760, "my_driver_workqueu": 760, "my_driver_usermem": 760, "copy_": 760, "my_driver_waitqueu": 760, "nonblock": [760, 774, 926, 1130], "spinlock_t": [761, 763], "isr": [761, 918, 1118], "spin_unlock": [761, 763], "reenabl": 761, "uniprocessor": 763, "multiprocessor": 763, "spin_lock_init": 763, "spin_lock": 763, "spin_trylock": 763, "irqflag": 763, "spin_lock_irqsav": 763, "spin_unlock_irqrestor": 763, "pend": [766, 795, 918, 931], "my_inject_deferred_ev": 766, "my_device_add_deferred_ev": 766, "del_timer_sync": [766, 768], "paranoia": 766, "symmetri": 766, "my_device_add_ev": 766, "my_inject_ev": 766, "tick": 768, "config_hz": 768, "friendli": [768, 1006, 1078, 1082], "hz": 768, "hrtimer": 768, "jiffies_to_msec": 768, "jiffies_to_usec": 768, "jiffies_to_nsec": 768, "msecs_to_jiffi": 768, "usecs_to_jiffi": 768, "timespec64_to_jiffi": 768, "timespec64": 768, "jiffies_to_timespec64": 768, "timer_list": 768, "my_tim": 768, "timerfunc": 768, "timer_setup": 768, "add_tim": 768, "del_tim": 768, "0520": 770, "0521": 770, "0525": 770, "0532": 770, "0710": 770, "preempt": [770, 914, 918], "caption": 770, "backlink": 770, "my_event_nod": 771, "my_get_one_ev": [771, 774], "my_device_get_one_ev": 771, "my_event_get_one_ev": 771, "efault": [771, 772], "uaccess": 772, "copy_to_us": 772, "copy_from_us": 772, "enosi": 774, "timerfd": [774, 882, 922], "f_flag": 774, "wait_queue_head_t": 775, "wq": [775, 777, 778], "init_waitqueue_head": 775, "sched": 775, "wait_ev": 775, "wait_event_interrupt": 775, "wait_event_timeout": 775, "timeout_jiffi": 775, "wait_event_interruptible_timeout": 775, "wake_up": 775, "wake_up_interrupt": 775, "task_interrupt": 775, "create_workqueu": [777, 778], "destroy_workqueu": [777, 778], "eo": 777, "rtprio": 777, "work_struct": [777, 778], "init_work": [777, 778], "chrt": [777, 918], "postpon": 778, "workqueue_struct": 778, "work_func_t": 778, "queue_work": 778, "packen": 780, "gunzip": 782, "zgrep": 782, "zcat": 782, "zless": 782, "intact": [782, 1031, 1035], "viro": 783, "cpio": 783, "cleaner": 783, "archivformat": 783, "lzma": 783, "430mb": 783, "95mb": 783, "74mb": 783, "5m": [783, 855], "64mb": 783, "togeht": 784, "ceph": 784, "gfs2": 784, "zcf": 784, "decompress": [784, 944], "zxf": 784, "ztf": 784, "dirt": 784, "livingroom": 784, "grumbl": 784, "reat": 784, "tract": 784, "ell": [784, 818], "vv": 784, "supplementari": [785, 786, 793, 795], "1021": [785, 786, 793], "somefil": [785, 786, 824], "chgrp": [785, 786, 803, 810, 812], "fellow": [785, 786], "picki": [785, 786, 968], "ttyusb1": 789, "stick": [789, 793], "2006854": 789, "sdc": 789, "2006823": 789, "deserv": [789, 847, 908, 934], "trash": [789, 818], "burn": [789, 864], "1mib": 789, "1mibf": 789, "0m": [789, 840, 916], "mkf": 789, "entropi": 789, "my_vari": 790, "1034184": 790, "1035812": 790, "ancestor": [790, 796, 874], "decriptor": [791, 890], "getti": 793, "kerbero": [793, 795], "gnome3": 793, "agetti": 793, "cleartext": [793, 814], "shadow": [793, 814, 890, 997, 1034], "brute": [793, 871, 934], "crack": 793, "attack": [793, 871, 949, 1071, 1116], "hierarch": 794, "peripher": [794, 1117, 1124], "grand": 794, "ten_integ": 795, "unfair": [795, 918], "dialout": [795, 890], "seg": 795, "kbyte": 795, "62715": 795, "819200": 795, "pstree": 796, "modemmanag": 796, "journ": 796, "abrtd": 796, "auditd": 796, "bluetoothd": 796, "cupsd": 796, "lau": 796, "firewalld": 796, "fwupd": 796, "constrain": 796, "tini": [796, 932], "enemi": 797, "guidanc": 797, "outlook": 797, "dicdat": 797, "acknowledg": [797, 855], "seamless": [797, 1084], "vmware": 797, "exampk": 797, "altruism": 797, "mkfifo": [798, 802], "stdin_fileno": [800, 884, 894, 930, 1006], "stdout_fileno": [800, 880, 881, 884, 890, 916, 925, 929, 930, 1006], "stderr_fileno": [800, 884, 1006], "religi": 800, "fed": 800, "filefor": 800, "sudoer": 801, "weekli": 801, "compet": [802, 863], "award": [802, 849], "plumber": 802, "sniff": 802, "fifo": [802, 884, 1129], "rendezv": 802, "unnam": 802, "chown": [803, 815, 946], "useradd": [803, 946], "groupadd": 803, "usermod": 803, "groupmod": 803, "teammember42": 803, "manfromthestreet": 803, "jun": [803, 934], "triplet": 803, "1003": 803, "110100100": 803, "110000000": 803, "0600": 803, "111101101": 803, "0755": 803, "bitmask": [803, 814, 930], "1317": 814, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 814, "0g2rqr9cnydnqq5unt": 814, "wpu8jyzeuxktapl0": 814, "burnout": 814, "retyp": 814, "rwsr": [814, 815], "32712": 814, "rwxrwxrwx": 814, "4755": [814, 815], "uid_t": 815, "getuid": 815, "geteuid": 815, "rwxrwxr": [815, 880, 932, 933, 934], "24456": 815, "drwxrwxrwt": 816, "0022": 817, "strain": 818, "injuri": 818, "diseas": 818, "outout": 818, "20k": 818, "olevel": 818, "debugopt": 818, "expr1": 818, "expr2": 818, "daystart": 818, "regextyp": 818, "synopsi": 818, "findu": 818, "til": 818, "findutil": 818, "pression": 818, "print0": 818, "keystrok": 818, "noob": [818, 979], "pos1": 818, "misconfigur": 818, "esc": 818, "freak": 818, "cvsserver": 818, "gitview": 818, "oesterreich": 818, "clearanc": 818, "e7d76d19": 818, "dd3d": 818, "4d52": 818, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 818, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 818, "gif": [818, 1072], "einkommensteuerbescheid1": 818, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 818, "einkommensteuervorauszahlungsbescheid1": 818, "immobilienbewertung": 818, "etw": 818, "confirm": 818, "ova": 818, "umsatzsteuerbescheid1": [818, 840, 841], "h0020211105124337": 818, "vk9vst311192021_0022021": 818, "img_": 820, "jpg": 820, "bilder": 820, "121751": 821, "op": [821, 1007], "garbage1": [822, 823, 825, 829, 830], "garbage2": [822, 823, 825, 829, 830], "diretori": 824, "sweetheart": [824, 830, 837, 911], "citi": 824, "mqueue": [833, 925], "leavel": 837, "hintingx": 840, "1048576": 840, "drwx": [840, 842], "36817": 840, "umsatzsteuerbescheid": 841, "finanzamt": 841, "abgab": 841, "neighbor": [842, 1063], "enat": 843, "dereferenzieren": 845, "50k": [845, 846], "rekursiv": 846, "eintr\u00e4g": 846, "unterhalb": 846, "gefiltert": 846, "un\u00fcblich": 846, "gebr\u00e4uchlich": 846, "geh\u00f6ren": 846, "mmin": 846, "h\u00f6chsten": 846, "gefundenem": 846, "eintrag": 846, "heissen": 846, "beginnen": 846, "versteht": 846, "vergessen": 846, "j\u00fcnger": 846, "verkn\u00fcpft": 846, "metacharact": [846, 865], "gr\u00f6\u00dfer": 846, "lobal": 847, "egular": 847, "xpression": 847, "rint": 847, "sed": [847, 1117, 1124], "tream": 847, "itor": 847, "verb": 847, "insensit": [847, 1083], "entor": 847, "perlr": 847, "perlretut": 847, "perlrequick": 847, "jeffrei": 847, "friedl": 847, "philosopi": 851, "toether": 851, "hc": 851, "325324": 851, "xarg": 851, "bitbak": 853, "behan": 853, "webster": 853, "drone": 855, "electronic speed control": 855, "vehicl": 855, "rack": 855, "recognit": [855, 1063], "flight": 855, "wire": [855, 865, 944], "fritz": [855, 863], "brigh": 855, "heinrich": 855, "pwmchip0": [855, 863], "pwm0": [855, 863], "duty_cycl": [855, 863], "polar": 855, "uevent": [855, 862, 863, 864, 898], "puls": [855, 1117, 1124], "cheapest": 855, "quicrun": 855, "16bl30": 855, "brake": 855, "voltag": [855, 862], "11v": 855, "conclud": [855, 863], "lipo": 855, "madli": 855, "transmitt": 855, "throttl": 855, "neutral": [855, 1068], "chop": 855, "kindli": [855, 1072], "mechatron": 855, "50hz": 855, "duti": [855, 863], "nanosecond": [855, 863, 882], "20000000": [855, 966], "oscil": 855, "10bl60": 855, "000n": 855, "1500000": [855, 920], "2000000": 855, "1550000": 855, "1600000": 855, "acceler": 855, "1650000": 855, "1700000": 855, "1750000": 855, "1800000": 855, "1850000": 855, "1900000": 855, "1950000": 855, "logist": [855, 1063], "hobbi": 855, "can bu": [856, 857, 858, 859], "sinowatz": [856, 956], "donat": 856, "volkswagen": 856, "traffic": 856, "octet": 856, "arbitr": 856, "can_fram": [856, 858], "canid_t": [856, 858], "can_id": [856, 858], "eff": [856, 858], "rtr": [856, 858], "__u8": [856, 858], "can_dlc": [856, 858], "__attribute__": [856, 858], "can0": [857, 858], "noarp": 857, "qdisc": 857, "qlen": 857, "bitrat": 857, "relic": 857, "cansend": 857, "candump": 857, "canplay": 857, "cangen": 857, "snif": 857, "loopback": 857, "pf_can": 858, "sockaddr_can": 858, "sock_raw": 858, "can_raw": 858, "ifr_nam": 858, "siocgifindex": 858, "can_famili": 858, "af_can": 858, "can_ifindex": 858, "ifr_ifindex": 858, "sockaddr": [858, 881], "can_socket": 858, "packt": 858, "frame_layout": 858, "ib3x8": 858, "frame_s": 858, "calcsiz": 858, "recvfrom": 858, "sendto": 858, "lnxpp": 859, "can2udp": 859, "openwrt": 859, "asymmetrisch": 859, "mosi": 859, "miso": 859, "sclk": 859, "broadcom": 859, "ce0": 859, "3v": [859, 862], "5v": [859, 862], "transceiv": 859, "inter intergrated circuit": 862, "lm-sensor": 862, "handwork": [862, 864], "texa": 862, "maker": 862, "dtparam": [862, 863, 864], "i2c_arm": [862, 863, 864], "gpio2": 862, "gpio3": 862, "i2c_bcm2835": [862, 863, 864], "fe804000": [862, 864, 898], "i2c_dev": [862, 863], "sot": 862, "7v": 862, "rail": 862, "capacitor": 862, "idc": 862, "gnd": [862, 864], "vdd": 862, "smbdat": 862, "smbclk": 862, "unconnect": 862, "0x49": 862, "0x4a": 862, "jumper": 862, "3v3": [862, 864], "scl": [862, 864], "probl": 862, "i2c_slav": 862, "0x0703": 862, "o_rdwr": [862, 884, 891, 925], "msb_lsb": 862, "msb": 862, "lsb": [862, 933], "65535": 862, "dev_fd": 862, "perror": [862, 876, 880, 881, 882, 888, 889, 890, 891, 896, 899, 916, 922, 925, 929], "libncurs": 862, "bcm2711_defconfig": 862, "prebuilt": 862, "v7l": 862, "semiconductor": 862, "j4": 862, "kernel7l": 862, "new_devic": [862, 864], "0048": 862, "modalia": 862, "preinstal": 862, "hwmon0": 862, "thermal": 862, "thermal_zone0": 862, "hwmon1": [862, 864], "hwmon2": 862, "temp1_input": [862, 864], "temp1_max": 862, "temp1_max_alarm": 862, "temp1_min": 862, "temp1_min_alarm": 862, "update_interv": 862, "milli": [862, 864], "22000": 862, "randomli": [862, 864], "nomenclatur": 862, "pulse width modul": 863, "resistor": 863, "bright": 863, "potentiomet": 863, "ssop": 863, "ground": [863, 864], "0b1000000": 863, "buse": [863, 864], "i2cdetect": [863, 864], "charactr": 863, "pca": 863, "simultan": [863, 929], "peculiar": 863, "pca9685a": 863, "nxp": 863, "dtoverlai": [863, 864], "pwm_pca9685": 863, "regmap_i2c": 863, "3f804000": 863, "0040": [863, 898], "butt": [863, 944], "npwm": 863, "unexport": [863, 898], "intercept": [863, 955], "dim": 863, "300000": [863, 1061], "fade": 863, "800000": [863, 1061], "600000": [863, 1061], "50000": 863, "apolog": 863, "kenel": 863, "devlop": 863, "pleasur": 863, "cornerston": 864, "unstabl": 864, "parasit": 864, "bitbang": 864, "gpiopin": 864, "profession": 864, "addon": 864, "pinout": 864, "01144fe43baa": 864, "w1_bus_master8": 864, "w1_bus_master1": 864, "breadboard": [864, 1117, 1124], "amaz": 864, "400000000000": 864, "800000000000": 864, "behalf": [864, 878, 932], "ad0": 864, "ad1": 864, "ad2": 864, "vcc": 864, "0x18": 864, "0b0011000": 864, "shortli": [864, 955], "execstart": 864, "36864": 864, "w1_bus_master2": 864, "w1_bus_master3": 864, "w1_bus_master4": 864, "w1_bus_master5": 864, "w1_bus_master6": 864, "w1_bus_master7": 864, "busno": 864, "abtract": 864, "prepackag": 864, "afford": 864, "alarm": [864, 928, 931], "conv_tim": 864, "w1_slave_driv": 864, "eeprom": 864, "ext_pow": 864, "w1_slave": 864, "22750": 864, "crc": 864, "rpi_volt": 864, "isa": 864, "in0": 864, "cpu_therm": 864, "temp1": 864, "w1_slave_temp": 864, "reliabl": 864, "radiou": 864, "disappear": 864, "0c4000000000": 864, "0x28": 864, "dalla": [864, 892], "02131d9920aa": 864, "5d": 864, "011432f138f9": 864, "misbehavior": 864, "instabl": 864, "pump": 864, "nuclear": 864, "plant": 864, "ssh-keygen": [865, 871], "password authent": [865, 871], "key based authent": [865, 871], "remote login": [865, 871], "unencrypt": 865, "rlogin": 865, "telnet": 865, "nsa": 865, "primarili": [865, 958, 1080], "sftp": 865, "portno": 865, "unabl": 865, "propaget": 865, "sha256sum": 866, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 866, "mitm": 871, "uncomfort": 871, "keygen": 871, "safeguard": 871, "unrespons": 872, "port forward": 873, "portforward": 873, "secure copi": [873, 874], "hmmm": 873, "whateer": 873, "mydocu": 874, "recus": 874, "mobil": 874, "bandwidth": 874, "mediat": 874, "realist": 874, "descriptiotn": 874, "file system": 875, "network file system": 875, "smb": 875, "crawl": 875, "debianish": 875, "mountpoint": 875, "grant": 875, "idmap": 875, "errnum": 876, "strerror_r": 876, "buflen": 876, "cleanest": 876, "_r": 876, "reentrant": 876, "syscal": 878, "getaddrinfo": 878, "ri": 880, "nbytes_read": [880, 881, 882], "24608": 880, "1024root": 880, "nager": 880, "698nager": 880, "gatewai": 881, "peer": [881, 884], "netinet": 881, "af_inet": 881, "sock_stream": 881, "sockaddr_in": 881, "sin_famili": 881, "sin_port": 881, "inet_aton": 881, "sin_addr": 881, "ipproto_ip": 881, "sa_famili": 881, "inet_addr": 881, "10hallo": 881, "16thi": 881, "ong": 881, "14ong": 881, "timerfd_settim": 882, "itimerspec": [882, 916], "nasti": [883, 916], "ingenu": 884, "smae": 884, "o_append": 884, "o_cloexec": 884, "sigpip": [884, 930], "whenc": 884, "seek_cur": 884, "seek_end": 884, "occupi": [884, 886, 887], "status": 885, "srcfile": 885, "dstfile": 885, "1073741825": 886, "0k": 886, "texttt": 887, "dup2": 887, "oldfd": 887, "newfd": 887, "o_": 887, "bytes_to_writ": [888, 889, 891], "wxr": 888, "o_tmpfil": 888, "speci": 888, "pli": 888, "nread": [890, 896, 899, 922, 925, 929], "thats": [890, 891], "litter": 891, "misspel": 891, "24625": 892, "24562": 892, "pread": 894, "pwrite": 894, "readv": 894, "writev": 894, "uio": 894, "iovec": 894, "iov": 894, "iovcnt": 894, "preadv": 894, "pwritev": 894, "ftruncat": [894, 925, 926], "filedescriptor": 894, "gpio26": [896, 898, 899], "subtre": 898, "fe200000": 898, "gpiochip488": 898, "gpiochip504": 898, "active_low": 898, "fd_set": [899, 922], "exc_fd": 899, "fd_zero": [899, 922], "nreadi": 899, "fd_isset": [899, 922], "eek": 899, "intens": 900, "ppid": 900, "tid": 900, "tsd": 900, "spezif": 900, "_reentrant": 900, "lpthread": [900, 916, 935], "start_routin": 901, "pthread_exit": 901, "pthread_cancel": 901, "pthread_attr_setdetachst": 901, "detachst": 901, "pthread_create_detach": 901, "pthread_detach": 901, "pthread_self": 901, "pthread_equ": 901, "30650": 901, "13961": 901, "correl": 901, "gettid": 901, "pthread_mutexattr_t": [903, 919], "pthread_mutex_destroi": 903, "pthread_mutex_trylock": 903, "global_mutex": 903, "pthread_mutexattr_settyp": 903, "pthread_mutex_norm": 903, "pthread_mutex_errorcheck": 903, "pthread_mutex_recurs": 903, "pthread_mutex_default": 903, "pthread_cond_destroi": 905, "pthread_cond_broadcast": 905, "parlanc": 905, "set_autoreset_ev": 905, "ev": 905, "is_set": 905, "wait_autoreset_ev": 905, "acquiriert": 905, "autoreset": 905, "spuriou": 905, "woken": 905, "pthread_condattr_t": 905, "pthread_cond_initi": 905, "pthread_cond_timedwait": 905, "abstim": 905, "use_glob": 907, "pthread_once_t": 907, "global_onc": 907, "pthread_once_init": 907, "init_glob": 907, "pthread_onc": 907, "once_control": 907, "init_routin": 907, "pthread_key_cr": 907, "__thread": 907, "pthread_atfork": 908, "legales": 908, "lock_rac": 910, "succeed": [910, 1100], "foreground": [911, 964], "huh": 911, "paradox": 911, "setenv": 913, "putenv": 913, "unsetenv": 913, "clearenv": 913, "customvar": 913, "timesl": 914, "starv": 914, "throughput": 914, "sha1": [914, 917, 933], "voluntarili": [914, 917], "lrt": 916, "app_statu": 916, "tick_count": 916, "update_statu": 916, "sigact": [916, 929, 930], "sa_handl": [916, 929, 930], "sigrtmin": 916, "sigev": [916, 926], "sev": 916, "sigev_notifi": 916, "sigev_sign": 916, "sigev_signo": 916, "timer_t": 916, "tspec": 916, "nsec": 916, "timer_settim": 916, "diverg": 916, "show_statu": 916, "freerto": [916, 919], "syncron": 916, "update_status_func": 916, "initial_t": 916, "interval_t": 916, "show_status_func": 916, "update_task": 916, "show_task": 916, "231765": 916, "225819": 916, "5635": 916, "lwp": 916, "231766": 916, "231767": 916, "tracer": 916, "restart_syscal": 916, "clock_nanosleep": 916, "clock_realtim": 916, "500000000": 916, "033": 916, "7m": 916, "flash_func": 916, "is_revers": 916, "flash_task": 916, "flasher": 916, "indepen": 916, "toggl": 916, "fore": [916, 966], "particularli": 917, "suscept": 917, "renic": 918, "din": 918, "44300": 918, "echtzeitbetrieb": 918, "betrieb": 918, "rechensystem": 918, "verarbeitung": 918, "anfallend": 918, "st\u00e4ndig": 918, "derart": 918, "betriebsbereit": 918, "da\u00df": 918, "verarbeitungsergebniss": 918, "innerhalb": [918, 1130], "vorgegebenen": 918, "zeitspann": 918, "000014": 918, "013914m": 918, "91410827636698u": 918, "000002": [918, 920], "002382m": 918, "3820173632900326u": 918, "intrus": 918, "controversi": 918, "sched_oth": 919, "relinquish": 919, "sched_param": 919, "sched_getschedul": 919, "sched_prior": 919, "pthread_setschedparam": 919, "pthread_getschedparam": 919, "predefini": 919, "pthread_attr_setschedpolici": 919, "spoken": 919, "pthread_mutexattr_setprotocol": 919, "pthread_prio_inherit": 919, "pthread_prio_protect": 919, "risen": 919, "pthread_mutexattr_setprioceil": 919, "000105": 920, "105247m": 920, "24749755859354u": 920, "000015": 920, "014643m": 920, "64260525619006u": 920, "10m": 920, "105u": 920, "000067": 920, "067263m": 920, "2626495361326u": 920, "000003": 920, "002883m": 920, "8827592917392217u": 920, "ondemand": 920, "governor": 920, "cpufreq": 920, "scaling_governor": 920, "cpuinfo_cur_freq": 920, "067036m": 920, "03615188598611u": 920, "000001": 920, "001257m": 920, "2571678380193383u": 920, "000065": 920, "065188m": 920, "188407897949u": 920, "002376m": 920, "3758434034066656u": 920, "001042": 920, "042438m": 920, "4375534057617u": 920, "000017": 920, "017123m": 920, "123423079175748u": 920, "000143": 920, "142646m": 920, "6458358764593u": 920, "000005": 920, "004995m": 920, "994855006705264u": 920, "_syse": 922, "exit_failur": 922, "consume_fd": 922, "random_fd": 922, "tty_fd": 922, "nfd": 922, "ttys4": 922, "in_fd": 922, "eof_detect": 922, "shm": [924, 925, 926], "099": 924, "sem": [924, 925, 926], "shared memori": 925, "message queu": 925, "mman": 925, "fstat": 925, "st_size": 925, "map_fail": 925, "shm_open": [925, 926], "tmpf": [925, 926], "resiz": 925, "4095": 925, "weigh": 925, "map_shar": 925, "counter_loc": 925, "sem_t": [925, 926], "sem_open": 925, "sem_fail": 925, "sem_wait": 925, "sem_post": 925, "mq_attr": [925, 926], "mq_maxmsg": [925, 926], "mq_msgsize": [925, 926], "mqd_t": [925, 926], "mq_open": 925, "mq_send": 925, "mq_receiv": 925, "shm_unlink": 926, "overtak": 926, "mq_overview": 926, "oflag": 926, "mq_flag": 926, "mqde": 926, "msg_ptr": 926, "msg_len": 926, "msg_prio": 926, "sevp": 926, "disturb": [926, 929], "elegantli": 926, "qsize": 926, "signo": 926, "notify_pid": 926, "goiven": 926, "sem_overview": 926, "sem_trywait": 926, "sem_timedwait": 926, "abs_timeout": 926, "shm_close": 926, "shm_overview": 926, "035": [928, 929], "051": [928, 929], "segv": [929, 930], "mortem": [929, 1055], "core_pattern": 929, "termination_handl": 929, "sigint": [929, 930], "sig_atomic_t": [929, 930], "term_act": 929, "alarm_handl": 929, "alarm_act": 929, "sigset_t": [929, 931], "termination_sign": 929, "sigemptyset": [929, 930], "sigaddset": [929, 930], "sigquit": 929, "sigprocmask": [929, 930], "sig_block": 929, "impolit": 929, "sig": [929, 930], "consume_pip": 929, "pipenam": 929, "puzzl": 929, "pthread_sigmask": [929, 930], "sigtstp": 930, "sigalrm": [930, 931], "sigchld": 930, "abnorm": 930, "sigabrt": 930, "sigsegv": 930, "sigbu": 930, "sigil": 930, "sigfp": 930, "unblock": 930, "oldset": 930, "sigpend": 930, "sigfillset": 930, "signum": 930, "sigdelset": 930, "sigismemb": 930, "sigsetop": 930, "recept": 930, "sa_mask": 930, "sa_flag": 930, "oldact": 930, "sig_ign": 930, "sig_dfl": 930, "sighandler_t": 930, "_exit": 930, "barebon": 931, "louder": 931, "stallman": 932, "risc": 932, "llvm": 932, "24360": 932, "hello_h": [932, 948, 950], "24416": 932, "linkabl": [932, 1071, 1127], "0000000000401040": 932, "_start": 932, "0000000000401000": 932, "_init": 932, "00000000004011b8": 932, "_fini": 932, "crt": 932, "crt1": 932, "crti": 932, "crtn": 932, "0000000000404000": 932, "_global_offset_table_": 932, "reloc": 932, "1762320": 932, "0000000000401126": 932, "1224008": 932, "greetdemo": 933, "cmake_system_nam": 933, "toolchain_base_dir": [933, 947], "cmake_c_compil": 933, "cmake_cxx_compil": 933, "find_xxx": 933, "cmake_find_root_path_mode_program": 933, "cmake_find_root_path_mode_librari": 933, "cmake_find_root_path_mode_includ": 933, "toolchian": 933, "cmake_toolchain_fil": 933, "libgreet": [933, 934, 940, 949, 950], "13921": [933, 934], "cmakecach": [933, 934], "26192": [933, 934], "27920": [933, 934], "8503": [933, 934], "eabi5": 933, "armhf": 933, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 933, "debug_info": 933, "armv7l": 935, "challeng": 935, "metadistribut": 935, "miniumum": 935, "realiti": 935, "rasberri": 937, "clickabout": 942, "workabl": 944, "tarbal": 944, "lastest": 944, "x86_64_arm": 944, "precompos": 944, "uncompress": 944, "73812": 944, "1107168": 944, "1481768": 944, "1968456": 944, "1091864": 944, "1030432": 944, "1221816": 944, "lynxbe": 946, "y3p9kn7mjei": 946, "cli": 946, "containerd": 946, "dockerhub": 946, "hub": 946, "sh_18_04": 946, "78683068": 946, "1292296": 946, "70mb": 947, "73018472": 947, "auxvec": 947, "bitsperlong": 947, "bpf_perf_ev": 947, "rapidli": 948, "phoni": [948, 949, 950], "origaniz": 949, "relink": 949, "0x2e20": 949, "vdso": 949, "0x00007fffe9fa7000": 949, "0x00007f75ca289000": 949, "0x00007f75ca46d000": 949, "r_x86_64_32": 949, "fpic": 949, "whom": 950, "hello_flex": 950, "hello_flexible_h": 950, "cq": 950, "lisp": 951, "create_f": 951, "print_it": 951, "sytax": 952, "432x288": 952, "shutil": 953, "tarfil": 953, "temporarydirectori": 953, "tmpd": 953, "tarnam": 953, "expandvar": 953, "contrain": 953, "__enter__": [953, 1064, 1066], "__exit__": [953, 1064, 1066], "openforread": 953, "ipykernel_20288": 953, "2037535577": 953, "myprint": 953, "my_arg": 953, "orig_print": [953, 1064], "exc_val": 953, "exc_tb": 953, "myarg": 953, "total_ord": 954, "ipykernel_20306": 954, "2840657929": 954, "a_vari": 955, "fallback": [955, 975], "baseexceptiongroup": 955, "exceptiongroup": 955, "subtyp": 955, "maybe_fail": 955, "ipykernel_20326": 955, "104829323": 955, "lone": 955, "4008457068": 955, "mysubsystemerror": 955, "reallybaderror": 955, "someothererror": 955, "definitelybad": 955, "evenwors": 955, "collapsingtheworld": 955, "errorcod": 955, "__cached__": 956, "_frozen_importlib_extern": 956, "sourcefileload": 956, "0x7fae8b51d510": 956, "blindli": 956, "ansibl": 956, "matno": 956, "conffil": 956, "confcod": 956, "confdict": 956, "2637": 956, "object ori": [957, 1116], "keyword argu": 957, "starstararg": [957, 978], "for loop": 957, "iterator protocol": 957, "operator overload": 957, "drawn": 958, "cnt": 958, "inputrang": 958, "disgust": 958, "gentli": 958, "smarter": 958, "nolimit": 959, "fibo_numb": 959, "jerki": 959, "max_numb": 959, "satisfactori": 959, "python_1010_generators_yield": 959, "glossari": 960, "ipykernel_20348": 960, "4235178104": 960, "breadth": 960, "coverag": 962, "subnamespac": 963, "mysupermodul": 963, "mysuperfunct": 963, "subpackage1": 963, "module1": 963, "module2": 963, "subpackage2": 963, "disambigu": 963, "increment_background": [964, 966], "background_integ": 964, "foreground_integ": 964, "runn": 964, "backgroundincrement": 964, "uncool": 964, "14784035": 966, "quack": 968, "mockup": 968, "33115990230981": 968, "275754924327615": 968, "650940611024595": 968, "858153280455255": 968, "85526822256971": 968, "__next__": 968, "brokensensor": 968, "gettemperatur": 968, "ipykernel_20367": 968, "2792400554": 968, "71536506": 968, "152158437": 968, "1134347102": 968, "refect": 969, "ipykernel_20385": 969, "1242235954": 969, "4119786358": 969, "emp": 972, "add_employe": 972, "mgr": 972, "isold": [972, 973, 1076], "haubentauch": [972, 973, 976, 1076], "parentcl": 972, "funnili": 972, "make_child": 973, "parent1": 973, "parent2": 973, "vvv": 973, "father": 973, "vvvvvv": 973, "tabular": 974, "someclass": 974, "persons_from_csv": 974, "person_dict": 974, "operators object oriented program": 975, "behaivor": 975, "number2": 975, "int2": 975, "ipykernel_20475": 975, "3709071117": 975, "151628379": 975, "whistl": [975, 978], "symmetr": [975, 1005], "commut": 975, "452733317": 975, "summar": 975, "ipykernel_20493": 976, "2144392361": 976, "attrnam": 976, "meier": 976, "3124626440": 976, "1226798660": 976, "expicitli": 977, "0x7f728527c9a0": 977, "my_print": 978, "toolkit": 979, "marker": 981, "eighti": 981, "monti": 981, "incompat": [981, 987, 995, 1006], "benevol": 981, "bdfl": [981, 1068], "overse": 981, "januari": 981, "dropbox": 981, "awk": 983, "knob": 984, "sensit": 986, "throughout": 986, "0o01234": 987, "14159265359": [987, 1001], "3e12": 987, "afterthought": 987, "\u00e4\u00f6\u00fc": 987, "xa4": 987, "xb6": 987, "xbc": 987, "xe4": 987, "compel": 987, "codebas": 987, "ancient": 987, "sequencish": 991, "sixtim": 991, "seen_sixey": 991, "blahblahblahblahblah": 992, "aah": 993, "a_list": 993, "a_tupl": 993, "hlow": 993, "hlowrd": 993, "straw": [994, 1002], "heritag": 995, "140184043800080": 996, "140184043800112": 996, "140184043800336": 996, "140183733307776": 996, "140183733517776": 996, "ipykernel_20569": 997, "723444260": 997, "globvar": 997, "nonloc": 997, "parameterizab": 998, "ipykernel_20587": 998, "3939188879": 998, "3571579993": 998, "program_exit": 998, "exitstatu": 998, "spam": [1000, 1063], "dec": 1000, "x58": 1000, "07d": 1001, "0x": 1001, "5x": 1001, "0x2f": 1001, "4x": 1001, "0x002f": 1001, "5o": 1001, "0o31": 1001, "04d": 1001, "0042": 1001, "05d": 1001, "00042": 1001, "thistl": 1002, "thorn": 1002, "ipykernel_20641": 1002, "677815794": 1002, "annoy": 1002, "sqn": 1003, "defval": 1004, "iterkei": 1004, "keyiter": 1004, "0x7ff2e8753418": 1004, "unord": 1005, "tunabl": 1006, "shoudn": 1006, "0x7fca2c785b70": 1007, "tof": 1007, "outputfilenam": 1008, "argumentpars": 1008, "add_argu": 1008, "parse_arg": 1008, "ou": 1008, "ylabel": [1010, 1061], "xmin": 1010, "xmax": 1010, "ymin": 1010, "ymax": 1010, "twine": 1011, "lotsa": [1011, 1088], "long_descript": 1011, "long_description_content_typ": 1011, "froniu": 1011, "rene": 1011, "allerstorf": 1011, "beta": 1011, "osi": 1011, "approv": 1011, "package_dir": 1011, "python_requir": 1011, "install_requir": 1011, "paho": [1011, 1075], "pyproject": 1011, "toml": 1011, "backend": 1011, "build_meta": 1011, "yadda": 1011, "sdist": 1011, "python_course_2022_11_07": 1011, "12549": 1011, "BE": 1011, "mydb": 1012, "hardli": 1013, "femal": 1018, "miracl": [1021, 1038], "previouslin": 1025, "ifi": 1038, "uniqifi": 1039, "sensor_const": 1044, "test_sensor_const": 1044, "ii": [1045, 1047, 1051, 1053, 1067], "user_record": [1046, 1048], "read_csv_head": [1046, 1053], "read_csv_nohead": [1048, 1052, 1053], "csvfilenam": 1050, "test_noheader_person": 1051, "read_noheader_person": 1051, "test_must_not_use_global_variables_as_return_object": 1051, "filename1": 1051, "noheader1": 1051, "filename2": 1051, "noheader2": 1051, "users1": 1051, "users2": 1051, "test_header_person": 1051, "read_header_person": 1051, "test_user_json_person": 1051, "userdb_json": [1051, 1052], "test_person_to_json": 1051, "joerg_sent": 1051, "to_json_person": 1051, "joerg_receiv": 1051, "from_json_person": 1051, "envis": [1052, 1114], "user_json": 1052, "to_json": 1052, "test_user_json": 1052, "test_user_to_json": 1052, "user_s": 1052, "json_user_s": 1052, "from_json": 1052, "test_nohead": 1053, "test_head": 1053, "lectur": [1055, 1128], "unsupervis": [1058, 1063], "conveyor": 1058, "belt": 1058, "linear_regress": [1059, 1062], "model_select": [1059, 1061], "train_test_split": [1059, 1061], "linear_model": [1059, 1061], "linearregress": [1059, 1061], "history_data": [1059, 1060, 1061, 1062], "inputfeatur": [1059, 1061], "outputfeatur": [1059, 1061], "input_train": [1059, 1061], "input_test": [1059, 1061], "output_train": [1059, 1061], "output_test": [1059, 1061], "test_siz": [1059, 1061], "output_predict": [1059, 1061], "visualcross": 1060, "york": [1060, 1061], "wind": [1060, 1061], "chill": [1060, 1061], "precipit": [1060, 1061], "snow": [1060, 1061], "gust": [1060, 1061], "humid": [1060, 1061], "rain": 1060, "cloudi": 1060, "995833": 1061, "688889": 1061, "287500": 1061, "327273": 1061, "012222": 1061, "690278": 1061, "470769": 1061, "369444": 1061, "513421": 1061, "946106": 1061, "574023": 1061, "313256": 1061, "994536": 1061, "070695": 1061, "025980": 1061, "302423": 1061, "214825": 1061, "665492": 1061, "900000": 1061, "700000": 1061, "090000": 1061, "050000": 1061, "377500": 1061, "750000": 1061, "950000": 1061, "650000": 1061, "330000": 1061, "325000": 1061, "850000": 1061, "425000": 1061, "825000": 1061, "715000": 1061, "470000": 1061, "970000": 1061, "multidimension": 1061, "xlabel": 1061, "coef_": 1061, "80189231": 1061, "intercept_": 1061, "95355086": 1061, "609608": 1061, "571879": 1061, "736988": 1061, "170933": 1061, "798254": 1061, "189739": 1061, "180394": 1061, "449230": 1061, "661530": 1061, "057745": 1061, "850176": 1061, "284120": 1061, "685067": 1061, "weather": [1062, 1063], "ndarrai": [1062, 1081], "splice": [1062, 1063], "cute": 1062, "paper": 1062, "aspir": [1062, 1093], "dilig": 1063, "bite": 1063, "forecast": 1063, "agi": 1063, "asi": 1063, "forest": 1063, "predictor": 1063, "accuraci": 1063, "classif": 1063, "unlabel": 1063, "reinforc": 1063, "reward": 1063, "bay": 1063, "esoter": 1064, "contextmanag": 1064, "prefix_print": 1064, "pfarg": 1064, "sepp": 1067, "tupleunpack": 1067, "spell": 1067, "redundantli": 1067, "quotechar": 1067, "spreadsheet": 1067, "odbc": 1068, "mysql": 1068, "informix": 1068, "berkeleydb": 1068, "mongodb": 1068, "rollback": 1068, "initd": 1070, "psycopg": 1070, "libpq": 1070, "conninfo": 1070, "psycopg2": 1070, "localhost": [1070, 1075], "schwammerldb": 1070, "android": 1071, "schwammerln": 1071, "giftig": 1071, "geniessbar": 1071, "dbm": 1071, "steinpilz": 1071, "roehren": 1071, "speisetaeubl": 1071, "lamellen": 1071, "speitaeubl": 1071, "eierschwammerl": 1071, "teufelsroehrl": 1071, "overcod": 1072, "512119": 1072, "european": 1072, "steroid": 1072, "htmlhelp": 1072, "charset": 1072, "latin1": 1072, "chines": 1072, "enc": 1072, "0xfc": 1072, "0xdf": 1072, "0xf6": 1072, "\u00df": 1072, "cyril": 1072, "received_enc": 1072, "lg_enc": 1072, "bye_enc": 1072, "artificial intellig": 1073, "postgr": 1073, "mssql": 1073, "data sci": 1073, "ecosystem": 1073, "antp": 1075, "1883": 1075, "53767": 1075, "tcp6": 1075, "mosquitto_pub": 1075, "easiest": 1075, "message_receiv": 1075, "userdata": 1075, "on_messag": 1075, "loop_forev": 1075, "mosqitto_pub": 1075, "styrian": 1075, "esp": 1075, "666608091972": 1076, "ignore_index": 1076, "new_person": 1076, "saskia": 1076, "456710042003": 1076, "irrevers": 1077, "ipykernel_21021": 1080, "3315724720": 1080, "maybe_cal": [1080, 1081], "apply_if_cal": [1080, 1081], "_getitem_axi": [1080, 1081], "_is_scalar_access": [1080, 1081], "1519": 1080, "_validate_integ": 1080, "1521": 1080, "_ix": 1080, "len_axi": 1080, "_get_axi": 1080, "1451": 1080, "1453": 1080, "rangeindex": 1081, "get_loc": 1081, "toler": 1081, "3621": 1081, "casted_kei": 1081, "_lib": 1081, "pyx": 1081, "indexengin": 1081, "hashtable_class_help": 1081, "pxi": 1081, "pyobjecthasht": 1081, "get_item": 1081, "ipykernel_21046": 1081, "1471010945": 1081, "thru": 1081, "1201": 1081, "_validate_kei": 1081, "_get_label": 1081, "1203": 1081, "_get_slice_axi": 1081, "slice_obj": 1081, "1151": 1081, "5667": 1081, "1153": 1081, "1155": 1081, "_handle_lowerdim_multi_index_axis0": 1081, "tup": 1081, "drop_level": 1081, "new_index": 1081, "3875": 1081, "3877": 1081, "3623": 1081, "3625": 1081, "listlik": 1081, "_check_indexing_error": 1081, "sort_index": 1081, "multiindex": 1081, "contrari": 1082, "lower_email": 1083, "rentner": 1083, "is_palindrom": 1083, "facto": [1084, 1109], "subel": 1084, "attrib": 1084, "getroot": 1084, "examtop": 1086, "package manag": 1087, "project manag": [1087, 1115], "unit test": 1087, "virtual environ": 1087, "affin": 1087, "witch": 1088, "gnore": 1088, "ackup": 1088, "bort": 1088, "cert": 1088, "pem": 1088, "pythonhost": 1088, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1088, "cp38": 1088, "manylinux2010_x86_64": 1088, "ext": 1088, "argcomplet": 1088, "asn1crypto": 1088, "ensurepip": [1089, 1095], "test_project": 1093, "test_soup": 1093, "test_task": 1093, "stringent": 1093, "discoveri": 1093, "syndrom": [1093, 1094, 1100], "test_person_point": 1093, "deselect": 1093, "tweak": 1093, "test_": 1093, "test_simpl": 1093, "test_trivi": 1093, "test_trivial_but_fail": 1093, "___________________________": 1093, "____________________________": 1093, "test_stat": 1093, "implementation_point": 1093, "implementor1": 1093, "implementor2": 1093, "documentation_point": 1093, "integration_point": 1093, "implementation_perc": 1093, "documentation_perc": 1093, "integration_perc": 1093, "total_perc": 1093, "total_point": 1093, "gathered_point": 1093, "test_another_task_aspect": 1093, "pathlib": 1093, "test_ini_file_pars": 1093, "my_test_fil": 1093, "mytestcas": 1094, "runtest": 1094, "assertequ": 1094, "texttestrunn": 1094, "__db": 1094, "create_databas": 1094, "fill_test_data": 1094, "remove_databas": 1094, "testfeature1": 1094, "testfeature2": 1094, "testsuit": 1094, "addtest": 1094, "testload": 1094, "loadtestsfromtestcas": 1094, "testsometh": 1094, "failif": 1094, "failunless": 1094, "failunlessequ": 1094, "failifequ": 1094, "failunlessalmostequ": 1094, "failunlessrais": 1094, "env_dir": 1095, "my_venv": 1095, "csh": 1095, "easy_instal": 1095, "pip3": 1095, "powershel": 1095, "joblib": 1095, "threadpoolctl": 1095, "deactiv": 1095, "my_recreated_venv": 1095, "persuad": 1095, "will_fail": [1099, 1102], "initgoogletest": [1100, 1105], "run_all_test": [1100, 1105], "lgtest": [1100, 1102], "onesuit": 1100, "test1": 1100, "test2": 1100, "anothersuit": 1100, "postive_pattern": 1100, "negative_pattern": 1100, "gtest_list_test": 1100, "faildemo": 1100, "failisfat": 1100, "assertdemo": 1100, "assertisfat": 1100, "expect_": 1100, "expectdemo": 1100, "expectisnonfat": 1100, "expect_tru": 1100, "expect_eq": 1100, "0x58": 1100, "0x55": 1100, "assert_": 1101, "repoqueri": 1102, "dpkg": 1102, "listfil": 1102, "joergfaschingbau": 1102, "cmake_compiler_is_gnucc": 1102, "predef": [1104, 1105], "predefinedtestenviron": 1105, "paranoidtest": 1105, "untechn": 1105, "thefixtur": 1105, "testthatmodifiesst": 1105, "complexfixtur": 1105, "first_n": 1105, "sometest": 1105, "egal": 1107, "welcher": 1107, "schulungstyp": 1107, "problemlo": 1107, "verifiziert": 1107, "formlos": 1107, "anliegen": 1107, "werd": 1107, "umgehend": 1107, "setzen": 1107, "besprechen": 1107, "gestaltung": 1107, "schl\u00fcssigkeit": 1107, "chronologisch": 1107, "gehaltenen": 1107, "querzulesen": 1107, "roter": 1107, "faden": 1107, "ablaufen": 1107, "gegenstand": 1107, "\u00e4nderungen": 1107, "kursgeschehen": 1107, "passieren": 1107, "detailliert": 1107, "kosten": 1107, "terminen": 1107, "inhouseschulungen": 1107, "absprach": 1107, "buchenden": 1107, "terminisiert": 1107, "zustandekommt": 1107, "zeitlich": 1107, "\u00f6rtlich": 1107, "flexibel": [1107, 1108], "zul\u00e4sst": 1107, "besond": 1107, "onlineschulungen": 1107, "erwiesen": 1107, "dedizierten": 1107, "implementieren": [1107, 1112], "instruktionen": [1107, 1111], "datenschutzrichtlinien": 1107, "genug": 1107, "durchweg": 1107, "wahlweis": 1107, "offenen": 1107, "anmelden": 1107, "inhouseschulung": 1107, "exklusiv": 1107, "\u00fcblicherweis": 1107, "firmenstandort": 1107, "basteln": [1107, 1124], "schwierig": 1107, "z\u00fcgig": 1108, "uhr": 1108, "punktlandung": 1108, "mbr": 1108, "bootet": 1108, "nachs\u00e4tz": 1108, "wahllos": 1108, "reinen": [1108, 1124], "gebastelt": 1108, "leichtfertigerweis": 1108, "richtigerweis": 1108, "multilib": 1108, "ausgestattet": [1108, 1117, 1124, 1131], "l\u00e4uft": 1108, "seltsamerweis": 1108, "dar\u00fcber": 1108, "zeitersparnisgr\u00fcnden": 1108, "hinweggeholfen": 1108, "vorcompilierten": 1108, "statisch": [1108, 1126], "gelinkten": 1108, "christof": 1108, "sourcen": 1108, "crosszucompilieren": 1108, "gescheitert": 1108, "ungl\u00fccklichen": 1108, "umstand": 1108, "schulungsrechn": 1108, "neu": 1108, "aufzusetzen": 1108, "kompil": 1108, "verschwunden": 1108, "buildscript": 1108, "konnt": 1108, "kreativen": 1108, "wiederhergestellt": 1108, "v\u00f6llig": 1108, "sinnfrei": 1108, "distributionen": 1108, "compilieren": [1108, 1110], "architekturen": 1108, "versucht": [1108, 1109, 1111], "richtigen": 1108, "leben": [1108, 1124], "anzuwenden": 1108, "leut": 1108, "anzusehen": 1108, "wort": [1108, 1110], "gefallen": 1108, "hart": 1108, "garantien": 1108, "durchau": 1108, "gerechtfertigt": 1108, "gesch\u00fctz": 1108, "auffahren": 1108, "enthaltenen": 1108, "n\u00fctzen": 1108, "stichwort": [1108, 1117, 1124], "guter": 1108, "mittelweg": 1108, "diffundieren": 1108, "aufruft": 1108, "startet": 1108, "ausgekl\u00fcgelt": 1108, "funktionsweis": 1108, "jeher": 1108, "kennt": [1108, 1130], "gewaltig": 1108, "geschichtsbelastet": 1108, "tr\u00e4gt": 1108, "intelligent": [1108, 1117, 1124], "trotz": 1108, "behauptungen": 1108, "gar": 1108, "lieblingsseit": 1108, "linuxthemen": 1108, "zentrisch": 1108, "bourne shel": [1109, 1119], "\u00fcbel": 1109, "sprechen": [1109, 1117, 1124], "vollst\u00e4ndig": 1109, "shellprogrammierung": 1109, "ruf": 1109, "schmutzigen": 1109, "stattdessen": 1109, "hauch": 1109, "pervers": 1109, "\u00e4sthetik": 1109, "verpassen": 1109, "geschicht": 1109, "kram": 1109, "environmentvariablen": 1109, "kontrollkonstrukt": [1109, 1110], "hauptteil": 1109, "stringmanipul": 1109, "obskur": 1109, "konstrukt": [1109, 1119], "auskommt": 1109, "umgang": [1109, 1119], "vorausgesetzt": [1109, 1111, 1112, 1120, 1126, 1127, 1129, 1130], "bibel": 1110, "hinzuf\u00fcgen": 1110, "erfind": 1110, "tickt": 1110, "wozu": 1110, "grenzen": 1110, "vorlag": 1110, "didaktik": 1110, "erg\u00e4nzt": 1110, "kontext": 1110, "heutigen": 1110, "dienen": 1110, "sprachkern": 1110, "unterrichten": 1110, "standardlibrari": 1110, "zugunsten": 1110, "bequemeren": 1110, "verzichten": 1110, "sprachdesign": 1110, "geachtet": 1110, "isoliert": 1110, "abseit": [1110, 1112, 1130], "mitbringt": 1110, "h\u00e4lt": 1110, "eignet": 1110, "hervorragend": [1110, 1117, 1125, 1130], "systemprogrammierung": 1110, "weglassen": 1110, "programmiert": [1110, 1112], "dementsprechend": [1110, 1130], "sinngem\u00e4ss": 1110, "aufgeteilt": 1110, "manipulieren": [1110, 1119], "maschineninstruktionen": 1110, "ausgef\u00fchrt": [1110, 1111], "geschwindigkeitsvorteil": 1110, "interpretierten": 1110, "nachteil": 1110, "verst\u00e4ndni": [1110, 1119, 1129], "speicherverwaltung": [1110, 1112, 1127], "integral": 1110, "zusammengesetzt": 1110, "speicherlayout": 1110, "wenigst": 1110, "worin": 1110, "programmstrukturierung": 1110, "deklar": 1110, "beliebtest": 1110, "unmeng": 1110, "flexibilit\u00e4t": [1110, 1127], "einbringen": 1110, "unbeliebtest": 1110, "fehlerm\u00f6glichkeiten": 1110, "verkettet": 1110, "fehlerszenarien": [1110, 1130], "absturz": 1110, "dahinsiechen": 1110, "debugginghilfen": 1110, "typumwandlungen": 1110, "hauptkritikpunkt": 1110, "sorglos": 1110, "integertypen": 1110, "breit": [1110, 1117], "regelwerk": 1110, "historisch": 1110, "aufarbeitung": 1110, "historischem": 1110, "ballast": 1110, "compileroptionen": 1110, "pr\u00e4prozessor": [1110, 1111], "leid": 1110, "grundz\u00fcgen": 1110, "gezeigt": [1110, 1119, 1124], "compilierung": 1110, "heutzutag": 1110, "wegzudenken": [1110, 1117], "grund": [1110, 1117], "damal": [1110, 1112], "programmen": [1110, 1111, 1126], "separat": 1110, "verbinden": 1110, "spielt": 1110, "archivieren": 1110, "linken": 1110, "programmgesundheit": 1110, "bedeutungen": 1110, "optimierungsm\u00f6glichkeiten": 1110, "memoryfehlern": 1110, "verwalten": 1110, "formatiert": 1110, "_und_": 1110, "komfort": 1110, "m\u00e4chtige": [1110, 1127], "jedoch": [1110, 1117, 1124, 1130], "weit": 1110, "fehlerimmunit\u00e4t": 1110, "allein": 1110, "verdienen": 1110, "erw\u00e4hnung": 1110, "stringbearbeitung": 1110, "heutig": 1110, "eigenwillig": 1110, "f\u00fclle": 1110, "erleichtern": 1110, "lauern": [1110, 1129], "gefahren": [1110, 1129, 1130], "sprachumfang": 1111, "angeht": 1111, "compiliert": 1111, "maschinencod": 1111, "pointern": 1111, "sofort": 1111, "beipflichten": 1111, "einmal": [1111, 1126, 1127, 1131], "beinharten": 1111, "typenkonvertierungen": 1111, "aufgesessen": 1111, "beleuchtet": [1111, 1129], "beschrittenen": 1111, "dunklen": 1111, "ecken": 1111, "widmet": 1111, "intensiv": 1111, "fehlersuch": 1111, "erkl\u00e4rungen": 1111, "sprachdefinit": 1111, "greifbar": 1111, "verdacht": 1111, "manch": 1111, "typkonversionen": 1111, "l\u00fccken": 1111, "typensystem": [1111, 1112], "techniken": [1111, 1117], "typensicherheit": 1111, "dunkl": 1111, "unn\u00f6tig": 1111, "programmhygien": 1111, "wege": 1111, "sauberen": 1111, "weisen": 1111, "optimierungstechniken": 1111, "anwenden": 1111, "optimierung": 1111, "erschweren": 1111, "lesbarkeit": 1111, "memoryzugriff": 1111, "ur": 1111, "beziehungsweis": 1111, "hardwareunterst\u00fctzung": 1111, "Ins": 1111, "kenntniss": [1111, 1112, 1120, 1126, 1127, 1129, 1130], "urspr\u00fcnglich": 1112, "erfunden": 1112, "leichter": 1112, "handhabbar": 1112, "neuen": 1112, "erm\u00f6glichen": [1112, 1127], "ressourcenverwaltung": 1112, "kontrolliert": 1112, "mainstream": 1112, "einzug": 1112, "hie\u00df": 1112, "treffend": 1112, "seitdem": 1112, "vereinzelt": 1112, "soviel": 1112, "dampflokomot": 1112, "stellt": [1112, 1130], "vielfalt": 1112, "sprachkonstrukt": 1112, "genial": 1112, "gewagt": 1112, "behaupten": 1112, "anbelangt": 1112, "sprachmittel": 1112, "wichtigst": 1112, "n\u00e4mlich": 1112, "reichlich": [1112, 1117, 1124], "umstieg": 1112, "erw\u00e4gen": 1112, "embeddedbetriebssystem": 1112, "einsetzen": 1112, "vielerort": 1112, "m\u00f6glich": [1112, 1117], "datenkapselung": 1112, "objekten": 1112, "fallstrick": 1112, "korrektheit": 1112, "100ste": 1112, "strukturiert": 1112, "fehlerbehandlung": 1112, "generisch": 1112, "mechanismen": [1112, 1127, 1129, 1131], "mehrfachvererbung": 1112, "teilweis": 1112, "kapiteln": 1112, "unterschied": 1112, "erl\u00e4utert": [1112, 1117], "c++ 11": 1113, "enjoy": 1113, "overrrid": 1113, "coolest": 1113, "optinion": 1113, "oneshot": 1113, "communict": 1113, "unlearn": 1113, "inventor": 1114, "weren": 1115, "intricaci": 1115, "interdepend": 1115, "rudimentari": 1115, "graviti": 1116, "vocabulari": 1116, "confront": 1116, "reusab": 1116, "nicknam": 1116, "zentrum": [1117, 1124], "vollwertig": 1117, "selben": 1117, "betriessystemkonzept": 1117, "jahrzehnten": 1117, "bew\u00e4hrt": 1117, "automot": 1117, "sektor": 1117, "vertreten": 1117, "altbew\u00e4hrten": 1117, "konsequ": [1117, 1127], "ausbaut": 1117, "hardwareschnittstellen": 1117, "echtzeitf\u00e4higkeit": 1117, "dahint": 1117, "rundet": 1117, "hardwarebastelworkshop": 1117, "embeddedprogrammier": [1117, 1124], "l\u00e4nger": [1117, 1124], "normalen": [1117, 1124], "dateisystem": [1117, 1124], "versagt": [1117, 1124], "teuer": [1117, 1124], "erkauft": [1117, 1124], "elektronik": [1117, 1124], "testen": [1117, 1124, 1131], "hostsoftwar": [1117, 1124], "architekten": [1117, 1124], "plattformzusammensetzung": [1117, 1124], "entscheiden": [1117, 1124, 1131], "rechtfertigen": [1117, 1124], "logik": [1117, 1124], "steck": [1117, 1124], "beantworten": [1117, 1124, 1131], "eingeladen": [1117, 1124], "l\u00f6tmateri": [1117, 1124], "mitzubringen": [1117, 1124], "bastelei": 1117, "erfolgt": 1117, "vorhandenen": [1117, 1124, 1131], "minicomputern": 1117, "prototypen": 1117, "desktopbetriebssystem": [1117, 1124], "verh\u00e4ltniss": [1117, 1124], "512mb": [1117, 1124], "m\u00fchsam": [1117, 1124], "produktivsystem": [1117, 1124], "ohnehin": [1117, 1124], "unangebracht": [1117, 1124], "anf\u00e4ng": [1117, 1124], "filesystemen": [1117, 1124], "durchzuf\u00fchren": 1117, "filedeskriptoren": [1117, 1119], "standbein": 1117, "getrennt": 1117, "abl\u00e4uf": 1117, "adressraum": 1117, "sorgfalt": 1117, "bloss": 1117, "gef\u00e4chert": 1117, "gewissen": 1117, "szenarien": 1117, "steuerungen": 1117, "gef\u00e4hrlich": 1117, "umfangreich": 1117, "hauptthema": 1117, "dennoch": 1117, "n\u00fctzlich": 1117, "haub": 1117, "schalten": [1117, 1124], "ausg\u00e4ngen": [1117, 1124], "abfragen": [1117, 1124], "eing\u00e4ngen": [1117, 1124], "sowohl": [1117, 1124], "dumm": [1117, 1124], "ereignisgesteuert": [1117, 1124], "mikrocontrollern": [1117, 1124], "aufgaben": [1117, 1124], "temperaturmessung": [1117, 1124], "expandierung": [1117, 1124], "ausgelagert": [1117, 1124, 1127], "dediziert": [1117, 1124], "angesteuert": [1117, 1124], "gegeben": [1117, 1124, 1126, 1127], "driverframework": 1117, "netzwerkstack": [1117, 1124], "einpasst": [1117, 1124], "schnittstellen": [1117, 1127], "implementationssprachen": 1117, "hardwareerfahrung": [1117, 1124], "linux kernel": 1118, "kernel driv": [1118, 1128], "wait queu": 1118, "block devic": 1118, "interrupt handl": 1118, "dose": 1118, "curios": 1118, "userpac": 1118, "massiv": 1118, "vital": 1118, "einblick": 1119, "gingen": 1119, "vieler": 1119, "demosess": 1119, "vertrackt": 1119, "entmystifiziert": 1119, "gef\u00fcrchteten": 1119, "erlernt": 1119, "inbetriebsetz": 1119, "hardwareingenieur": 1119, "angehend": 1119, "administratoren": 1119, "editieren": 1119, "bl\u00e4ttern": 1119, "textdateien": 1119, "schnittstel": 1119, "kombinationen": 1119, "kombin": 1119, "abschweifen": 1119, "programmierkenntniss": 1119, "zwingend": [1119, 1126], "make gnu": 1120, "gnu mak": 1120, "build manag": 1120, "seiner": [1120, 1127, 1131], "m\u00e4chtigen": 1120, "daran": 1120, "wendet": 1120, "interessiert": 1120, "gr\u00f6\u00dfere": 1120, "gebaut": 1120, "komplizierten": 1120, "griff": 1120, "regeln": 1120, "selbstdefiniert": 1120, "gewiss": [1120, 1125, 1127], "fertigkeit": 1120, "hemmenhofen": 1124, "gleichnamigen": 1124, "gerufen": 1124, "produktivem": 1124, "n\u00e4herzubringen": 1124, "spielekonsumenten": 1124, "kinder": 1124, "enden": 1124, "erstem": 1124, "breiteren": 1124, "drauf": 1124, "vorhandensein": 1124, "basisinfrastruktur": 1124, "vielem": 1124, "hervorragenden": 1124, "gestandenen": 1124, "obwohl": [1124, 1127], "sprachunabh\u00e4ngig": 1124, "brauchen": 1124, "computerspielen": 1124, "spielerischen": 1124, "f\u00fchren": 1124, "w\u00e4hlt": 1124, "lm": 1124, "netzwerkprotokol": [1124, 1130], "behaupt": 1125, "allen": 1125, "gro\u00dfkopferten": 1125, "kommerziellen": 1125, "systemen": 1125, "perforc": 1125, "etabliert": 1125, "erh\u00e4ltlich": 1125, "nachfolg": 1125, "abgel\u00f6st": 1125, "prim\u00e4r": 1125, "publikum": 1125, "sekund\u00e4r": 1125, "versionieren": 1125, "arbeitsweis": 1125, "bereinigung": 1125, "strategien": 1125, "programmierern": 1125, "vertrautheit": 1125, "vorteil": [1125, 1126], "umsteig": 1126, "\u00e4rgerni": 1126, "schl\u00e4gt": 1126, "ausgekl\u00fcgeltst": 1126, "systemcal": [1126, 1127, 1130], "sogenannt": 1126, "inspizieren": 1126, "grundprinzip": [1126, 1130], "sammlung": [1126, 1127], "ausf\u00fchrbar": 1126, "bedient": 1126, "bestehen": 1126, "handhabung": 1126, "gew\u00f6hnungsbed\u00fcrftig": 1126, "filedescriptoren": 1126, "lowlevel": 1126, "tiefen": 1127, "steigen": 1127, "alltagsprogrammier": 1127, "normalerweis": 1127, "verborgen": 1127, "hochperformant": 1127, "anwendungen": 1127, "modernen": [1127, 1129], "bertriebssystemen": 1127, "sogenanntem": 1127, "virtuellen": 1127, "speicherbereich": 1127, "instanzen": 1127, "desselben": 1127, "hauptspeich": 1127, "speicherzugriff": 1127, "schutzmechanismen": 1127, "miteinand": 1127, "kommunizieren": [1127, 1130], "semaphoren": 1127, "steinalt": 1127, "\u00fcberlebt": 1127, "keinesweg": 1127, "fehlerfrei": 1127, "benutzen": 1127, "verpasst": 1127, "beruht": 1127, "ladbar": 1127, "ressourcenschonung": 1127, "wasserdichten": 1127, "upgradepfad": 1127, "grundkenntni": [1127, 1129, 1130], "memory manag": 1128, "tcp-ip": 1128, "unverst\u00e4ndlich": 1129, "ungeachtet": 1129, "effizient": 1129, "propagiert": 1129, "soliden": 1129, "unbedacht": 1129, "handeln": 1129, "lebenszyklu": 1129, "gestartet": 1129, "versuchung": 1129, "gewalt": 1129, "terminieren": 1129, "konsequenzen": 1129, "joinabl": 1129, "detach": 1129, "eigenschaften": 1129, "racecondit": 1129, "vermeidung": 1129, "\u00fcberal": 1129, "vermutet": 1129, "integeroperationen": 1129, "kommunikationsmechanismen": 1129, "werkzeugkasten": 1129, "kommunikationskan\u00e4l": 1129, "niemal": 1129, "reihen": 1129, "traditionellen": 1129, "aufgenommen": 1129, "codebasi": 1129, "verzweigt": 1129, "ansehnlich": 1129, "realtimef\u00e4higkeiten": 1129, "priorit\u00e4ten": 1129, "f\u00fcgt": 1130, "benutzend": 1130, "programmierparadigma": 1130, "dar": 1130, "beschr\u00e4nkt": 1130, "streamverbindungen": 1130, "verbindungsaufnahm": 1130, "datagramm": 1130, "verbindungslos": 1130, "adressfamilien": 1130, "auffassung": 1130, "adress": 1130, "endpoint": 1130, "nummern": 1130, "adressen": 1130, "verbindungen": 1130, "hilfsfunktionen": 1130, "adresskonvertierung": 1130, "ipv6": 1130, "\u00e4quivalent": 1130, "ungleich": 1130, "ressourcenschonend": 1130, "pfadnamen": 1130, "bedienbar": 1130, "mittlerweis": 1130, "eingepasst": 1130, "angenehm": 1130, "umzugehen": 1130, "widmen": 1130, "verbundenen": 1130, "auszusetzen": 1130, "reagiert": 1130, "gelesen": 1130, "eventgetrieben": 1130, "knopfdruck": 1131, "abnimmt": 1131, "zahlreichen": 1131, "abgeklopft": 1131, "angst": 1131, "kaputtmachen": 1131, "konstruktiv": 1131, "einfachheit": 1131, "klarzumachen": 1131, "umzusetzen": 1131, "anstatt": 1131, "auszustatten": 1131, "gedanken": 1131, "erkannt": 1131, "entscheidung": 1131, "verbockt": 1131, "softwareentwickl": 1131, "jedwed": 1131, "stabilen": 1131, "abliefern": 1131, "entscheidungstr\u00e4g": 1131, "vorgesetzt": 1131, "schl\u00fcssige": 1131, "kan\u00e4l": 1131, "etablieren": 1131, "unittestframework": 1131, "tragen": 1131, "schwerf\u00e4llig": 1131, "halben": 1131, "\u00fcbrige": 1131, "zurechtzufinden": 1131, "vortragend": 1131, "aufgrund": 1131, "herkunft": 1131, "aufwarten": 1131, "beibringen": 1131, "\u00fcppigen": 1131, "verbergen": 1131, "pr\u00e4ferierten": 1131, "vortragenden": 1131}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 818], "googl": 0, "map": [0, 6, 180, 185, 188, 191, 194, 210, 220, 297, 493, 494, 522, 583, 584, 675, 676, 729, 875], "streetview": 0, "curriculum": [1, 71, 72], "vita": 1, "\u00fcber": [2, 165, 175, 180, 188, 196], "mich": [2, 182], "projekt": [3, 22], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 129], "cours": [5, 10, 11, 57, 58, 60, 61, 76, 125, 127, 148, 184, 193, 237, 239, 247, 276, 304, 410, 1055, 1115, 1118], "materi": [5, 23, 27, 29, 155, 157, 172, 193, 301, 316, 317, 321, 410, 1054, 1055, 1079], "einleitung": [6, 185], "datatyp": [6, 175, 180, 182, 185, 188, 197, 201, 204, 207, 212, 214, 220, 224, 227, 229, 230, 242, 244, 245, 251, 252, 254, 262, 264, 265, 266, 270, 271, 272, 279, 297, 325, 375, 378, 958, 987, 988, 992], "number": [6, 185, 188, 191, 212, 224, 227, 297, 655, 714, 721, 722, 885, 959, 975, 978, 987, 995, 996, 1017, 1020, 1030, 1031, 1076, 1080, 1081, 1105], "integ": [6, 165, 175, 180, 185, 188, 212, 214, 224, 227, 233, 245, 252, 272, 297, 343, 390, 395, 611, 966, 987, 996], "string": [6, 151, 152, 158, 165, 175, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 229, 230, 233, 242, 245, 249, 252, 266, 272, 294, 296, 297, 324, 337, 338, 344, 350, 414, 592, 593, 594, 607, 638, 639, 987, 1000, 1001, 1002, 1037, 1083, 1086], "compound": [6, 175, 185, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 262, 266, 272, 378, 988], "list": [6, 10, 22, 151, 152, 165, 175, 182, 185, 188, 191, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 383, 414, 481, 505, 522, 536, 579, 627, 640, 677, 719, 746, 747, 748, 770, 840, 952, 955, 958, 959, 968, 988, 996, 1003, 1032, 1033, 1086, 1088], "arrai": [6, 153, 175, 185, 324, 333, 337, 375, 377, 387, 400, 510, 562, 564, 572, 616, 631, 642, 681], "javascript": [6, 185, 224], "std": [6, 105, 185, 194, 210, 236, 237, 239, 283, 429, 488, 493, 494, 504, 522, 545, 546, 547, 548, 549, 557, 563, 564, 565, 566, 576, 583, 584, 594, 607, 620, 623, 627, 630, 632, 639, 675, 676, 677, 681, 683, 686, 687, 688, 690, 691, 696, 697, 698, 699, 701, 702, 703, 706, 709], "vector": [6, 105, 185, 488, 504, 522, 529, 545, 563, 564, 565, 566, 580, 623, 632, 677, 911], "c": [6, 65, 66, 67, 68, 69, 95, 105, 106, 108, 109, 111, 112, 129, 143, 158, 159, 175, 185, 193, 194, 210, 235, 236, 237, 239, 240, 248, 257, 259, 283, 284, 285, 305, 311, 320, 329, 369, 370, 407, 414, 419, 426, 433, 475, 481, 492, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 531, 537, 538, 542, 543, 544, 556, 562, 564, 609, 624, 626, 627, 628, 631, 632, 664, 665, 669, 676, 677, 685, 694, 699, 710, 858, 878, 896, 899, 1001, 1110, 1111, 1112, 1113, 1114, 1116], "java": [6, 185], "dictionari": [6, 151, 165, 175, 180, 182, 185, 188, 196, 197, 201, 204, 207, 212, 214, 217, 220, 224, 227, 230, 233, 242, 245, 252, 262, 266, 272, 297, 952, 956, 969, 988, 1004, 1024, 1051], "kei": [6, 142, 185, 233, 297, 586, 587, 818, 869, 871], "valu": [6, 61, 170, 185, 256, 257, 297, 335, 391, 548, 896, 918, 989], "set": [6, 36, 61, 170, 175, 180, 185, 188, 196, 197, 201, 204, 207, 212, 214, 220, 224, 227, 230, 242, 245, 252, 262, 266, 272, 814, 815, 930, 952, 988, 1005, 1043, 1071, 1081], "mathematisch": [6, 185], "mengen": [6, 175, 185], "while": [6, 152, 165, 175, 185, 204, 212, 214, 217, 220, 227, 230, 252, 360, 361, 756, 761, 762, 991, 1017, 1041], "function": [6, 41, 139, 152, 170, 175, 185, 188, 191, 194, 197, 201, 204, 212, 214, 220, 224, 229, 230, 233, 236, 237, 239, 241, 245, 252, 258, 266, 276, 277, 279, 283, 302, 335, 337, 342, 369, 371, 373, 374, 379, 411, 412, 471, 505, 529, 538, 543, 545, 550, 554, 570, 627, 634, 637, 638, 639, 640, 649, 679, 691, 692, 719, 720, 782, 876, 878, 916, 951, 953, 954, 956, 958, 959, 978, 995, 997, 998, 999, 1007, 1029, 1031, 1035, 1038, 1046, 1048, 1083], "python": [7, 10, 57, 58, 60, 61, 88, 93, 125, 152, 155, 164, 165, 167, 168, 169, 171, 173, 175, 178, 180, 183, 189, 190, 192, 195, 197, 199, 202, 203, 204, 205, 206, 208, 209, 211, 214, 215, 218, 221, 223, 226, 228, 229, 230, 231, 232, 234, 236, 237, 239, 241, 242, 243, 244, 245, 246, 251, 253, 254, 258, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 286, 302, 305, 307, 320, 627, 655, 669, 676, 858, 860, 957, 960, 964, 979, 980, 981, 983, 985, 987, 995, 1006, 1009, 1054, 1055, 1056, 1072, 1073, 1075, 1085, 1087, 1088, 1089, 1090, 1121, 1122], "basic": [7, 61, 68, 88, 131, 143, 152, 164, 169, 171, 172, 173, 174, 178, 179, 183, 184, 193, 202, 205, 208, 215, 221, 226, 229, 232, 238, 244, 247, 251, 254, 261, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 279, 297, 320, 365, 369, 372, 378, 405, 412, 428, 429, 483, 486, 551, 556, 559, 562, 563, 565, 569, 572, 583, 589, 598, 634, 642, 676, 681, 685, 686, 687, 688, 709, 721, 722, 723, 784, 787, 788, 791, 801, 840, 851, 856, 865, 877, 884, 892, 900, 932, 954, 955, 1008, 1010, 1044, 1063, 1077, 1078, 1099, 1100, 1101, 1119, 1122], "2021": [7, 10, 110, 176, 178, 181, 183, 184, 186, 189, 192, 193, 194, 195, 199, 202, 204, 205, 207, 208, 210, 294, 295, 302, 305, 306, 307, 308, 309, 310, 311, 320], "xx": 7, "yy": 7, "train": [7, 23, 24, 25, 26, 27, 125, 129, 139, 148, 153, 168, 169, 171, 172, 173, 174, 176, 178, 179, 183, 186, 189, 192, 193, 194, 195, 199, 202, 211, 215, 218, 221, 223, 226, 229, 232, 241, 244, 251, 254, 321, 1055, 1061], "inform": [7, 37, 117, 127, 139, 164, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 183, 186, 189, 192, 193, 194, 195, 199, 202, 211, 215, 218, 221, 223, 226, 229, 232, 241, 244, 251, 254, 293, 302, 405, 689, 985, 1055], "\u00fcberblick": [7, 176, 186, 195, 211, 223, 1112], "log": [7, 103, 116, 133, 168, 169, 172, 173, 181, 183, 184, 186, 189, 193, 195, 199, 202, 211, 223, 232, 302, 315, 316, 785, 786, 793], "tag": [7, 159, 178, 182, 186, 189, 195, 211, 223, 224], "1": [7, 18, 22, 35, 71, 76, 95, 105, 111, 134, 137, 149, 157, 159, 164, 168, 169, 171, 172, 173, 175, 176, 178, 183, 184, 186, 189, 193, 194, 195, 199, 202, 205, 208, 211, 215, 223, 248, 251, 254, 257, 258, 259, 260, 261, 265, 269, 271, 276, 279, 301, 303, 304, 311, 318, 320, 323, 324, 325, 327, 331, 335, 344, 346, 347, 348, 349, 353, 354, 357, 360, 366, 367, 368, 369, 370, 373, 375, 379, 383, 385, 387, 390, 391, 392, 393, 395, 396, 398, 399, 405, 419, 429, 432, 434, 470, 532, 534, 541, 552, 555, 562, 564, 645, 650, 691, 696, 702, 705, 706, 717, 722, 729, 740, 750, 818, 857, 858, 864, 873, 887, 900, 901, 903, 905, 907, 908, 919, 926, 930, 933, 934, 950, 958, 963, 984, 986, 987, 993, 996, 1001, 1002, 1004, 1005, 1006, 1007, 1072, 1083, 1084, 1086, 1108], "2": [7, 18, 22, 35, 72, 76, 95, 105, 111, 134, 137, 159, 164, 165, 168, 169, 171, 172, 173, 175, 178, 182, 183, 184, 186, 189, 193, 194, 195, 199, 202, 204, 205, 208, 211, 215, 223, 248, 251, 254, 257, 258, 259, 260, 261, 265, 269, 276, 279, 316, 318, 320, 323, 324, 325, 327, 331, 335, 344, 346, 347, 348, 349, 353, 354, 357, 360, 366, 367, 369, 370, 373, 375, 379, 383, 385, 387, 390, 391, 392, 393, 395, 396, 398, 399, 405, 420, 429, 432, 434, 470, 519, 532, 534, 541, 552, 555, 562, 564, 646, 651, 691, 696, 702, 705, 706, 722, 729, 750, 818, 857, 858, 864, 873, 887, 900, 901, 903, 905, 907, 908, 919, 926, 930, 933, 934, 946, 950, 958, 963, 984, 986, 987, 993, 995, 996, 1002, 1004, 1005, 1006, 1007, 1068, 1070, 1071, 1072, 1083, 1084, 1086], "live": [7, 40, 42, 43, 151, 154, 176, 186, 189, 199, 248, 527, 567, 568, 570, 571, 574, 575, 576, 588, 627, 638, 671, 672, 699, 701, 789, 815, 879, 897], "hack": [7, 40, 42, 43, 151, 154, 176, 186, 189, 199, 248, 251, 255, 258, 261, 527, 567, 568, 570, 571, 574, 575, 576, 588, 627, 638, 671, 672, 699, 701, 816, 897], "jupyt": [7, 8, 38, 176, 177, 181, 182, 183, 186, 187, 189, 190, 199, 200, 202, 203, 205, 206, 209, 211, 213, 216, 219, 222, 225, 228, 230, 231, 234, 243, 246, 249, 253, 262, 263, 267, 273, 278, 281, 282, 297, 1061, 1062], "notebook": [7, 8, 38, 171, 176, 177, 181, 182, 183, 186, 187, 189, 190, 192, 199, 200, 202, 203, 205, 206, 207, 209, 211, 213, 216, 219, 222, 225, 228, 230, 231, 234, 243, 246, 249, 253, 262, 263, 267, 273, 278, 281, 282, 297, 302, 1059, 1061, 1062], "link": [7, 22, 37, 116, 135, 153, 164, 167, 169, 171, 173, 176, 178, 183, 184, 186, 195, 199, 202, 205, 211, 218, 229, 232, 265, 271, 307, 309, 383, 385, 634, 648, 655, 673, 680, 684, 735, 746, 747, 797, 818, 839, 857, 864, 872, 948, 949, 980, 1010, 1011, 1056, 1075, 1077, 1078, 1080, 1081, 1082, 1083, 1091, 1096], "programmierung": [8, 10, 151, 176, 177, 186, 187, 195, 211, 213, 223, 225, 320], "grundlagen": [8, 10, 164, 175, 176, 177, 186, 187, 189, 190, 195, 199, 203, 206, 209, 211, 213, 223, 225, 228, 231, 234, 243, 246, 267, 320], "detail": [9, 76, 184, 188, 220, 227, 259, 297, 319, 395, 473, 563, 986], "content": [10, 23, 35, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 156, 160, 161, 191, 304, 408, 510, 513, 519, 522, 528, 610, 687, 787, 807, 820, 826, 832, 835, 852, 860, 861, 868, 877, 893, 895, 897, 912, 922, 925, 939, 959, 1014, 1015, 1019, 1028, 1042, 1049, 1100, 1102, 1105, 1113, 1116, 1118], "anhand": [10, 175, 195, 211, 223, 320, 1119], "von": [10, 22, 146, 151, 155, 158, 165, 175, 182, 195, 196, 211, 223, 297, 320, 1119], "12": [10, 22, 43, 155, 174, 175, 179, 186, 194, 207, 208, 210, 241, 302, 307, 311, 313, 320, 1086], "und": [10, 22, 145, 149, 165, 175, 176, 180, 182, 186, 188, 191, 195, 211, 214, 220, 223, 227, 233, 303, 320, 345, 354, 1112, 1123], "13": [10, 22, 39, 43, 142, 164, 175, 176, 186, 239, 248, 251, 252, 254, 320], "4": [10, 22, 105, 134, 159, 168, 171, 175, 183, 184, 186, 189, 193, 194, 211, 223, 248, 311, 320, 325, 383, 387, 393, 429, 432, 534, 652, 958, 1086], "templat": [11, 193, 210, 259, 283, 492, 505, 506, 507, 508, 524, 525, 526, 554, 555, 556, 562, 595, 641, 644, 649, 651, 679], "descript": [11, 57, 60, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 440, 527, 535, 550, 553, 556, 592, 597, 606, 608, 611, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 625, 667, 668, 692, 700, 704, 708, 710, 852, 860, 861, 915], "sidebar": [11, 35], "metadata": [11, 236, 237, 239, 840], "about": [12, 105, 129, 148, 207, 212, 224, 242, 245, 251, 255, 272, 422, 632, 669, 847, 948, 1000, 1003, 1004, 1005], "thi": [12, 30, 35, 116, 134, 139, 140, 142, 143, 153, 162, 541, 555, 670, 777, 856, 879, 932, 949, 956, 958], "site": [12, 27, 30, 116, 136, 138, 162], "licens": 12, "gplv3": 12, "github": [12, 136, 138, 168, 169, 181, 189, 302, 470, 484, 1056], "sphinx": [12, 38, 64, 138], "instal": [12, 59, 135, 139, 143, 147, 160, 161, 164, 189, 193, 194, 274, 302, 307, 322, 417, 733, 875, 930, 941, 946, 947, 980, 1010, 1011, 1043, 1056, 1075, 1093, 1095, 1100, 1102, 1115], "instruct": [12, 386, 696, 903, 933, 950], "pip": [12, 265], "venv": [12, 265], "work": [12, 16, 63, 95, 111, 115, 120, 134, 168, 199, 237, 239, 256, 257, 258, 259, 309, 403, 404, 405, 484, 555, 709, 777, 778, 814, 817, 821, 946], "progress": [12, 16, 115], "more": [12, 134, 152, 165, 204, 207, 212, 220, 224, 227, 229, 241, 242, 244, 245, 248, 250, 251, 254, 260, 261, 264, 265, 270, 271, 272, 279, 302, 325, 331, 354, 370, 372, 386, 396, 412, 422, 424, 534, 544, 547, 554, 567, 573, 627, 669, 670, 674, 691, 766, 795, 796, 797, 801, 802, 847, 874, 916, 953, 955, 957, 1000, 1003, 1004, 1005, 1055, 1067, 1093, 1105], "opentrain": [13, 22], "draft": [14, 852, 1009], "topic": [14, 20, 71, 72, 96, 97, 99, 100, 101, 102, 128, 164, 168, 171, 192, 193, 194, 205, 210, 229, 232, 248, 251, 254, 257, 258, 279, 283, 284, 292, 306, 310, 311, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 433, 476, 477, 478, 479, 480, 481, 482, 485, 527, 535, 550, 553, 556, 572, 578, 582, 590, 595, 597, 600, 606, 624, 625, 629, 636, 643, 654, 667, 668, 678, 683, 692, 700, 704, 708, 710, 711, 712, 735, 855, 870, 888, 890, 909, 915, 936, 942, 943, 958, 963, 971, 1009, 1058, 1062, 1069, 1073, 1075, 1079, 1092, 1098], "miscellan": [15, 114, 125, 129, 148, 152, 172, 201, 212, 214, 220, 230, 236, 237, 241, 245, 248, 257, 260, 261, 266, 271, 272, 279, 283, 505, 527, 606, 610, 641, 704, 894, 905, 907, 1002, 1073, 1086], "s5": [16, 17, 129], "integr": [16, 631, 647], "web": [16, 91, 92, 130], "slide": [16, 17, 29, 43, 152, 305, 317, 926, 930], "implement": [16, 220, 288, 294, 434, 441, 451, 456, 466, 467, 468, 469, 473, 481, 486, 487, 531, 532, 537, 543, 545, 603, 627, 638, 716, 719, 738, 774, 953, 959, 975, 1034], "note": [16, 35, 59, 114, 147, 288, 427, 803], "todo": [16, 129, 158, 161, 172, 178, 289, 290, 291, 308, 410, 505, 506, 509, 512, 515, 518, 521, 524, 715, 719, 727, 759, 921, 924, 928, 1074, 1099, 1104], "test": [17, 35, 40, 41, 42, 43, 48, 69, 143, 164, 194, 218, 229, 232, 241, 250, 251, 254, 255, 256, 260, 261, 274, 276, 279, 310, 316, 320, 411, 425, 434, 454, 470, 484, 486, 487, 547, 719, 738, 771, 863, 892, 944, 947, 1011, 1044, 1051, 1052, 1053, 1061, 1093, 1094, 1098, 1100, 1102, 1105, 1115, 1131], "level": [18, 399], "head": [18, 35, 746, 849, 1067], "imag": [18, 153, 172, 946], "screencast": [19, 126], "written": [20, 111, 530, 533], "new": [20, 128, 194, 210, 236, 237, 239, 283, 320, 473, 510, 626, 627, 667, 703, 738, 771, 1076], "write": [20, 40, 48, 56, 131, 473, 510, 537, 649, 664, 687, 716, 884, 891, 976, 1006, 1012, 1084], "netide": [21, 22], "f\u00f6rderantrag": [21, 22], "daten": [22, 188, 196], "antragsteller_in": 22, "allgemein": 22, "projektnam": 22, "untertitel": 22, "3": [22, 95, 105, 111, 134, 159, 168, 169, 171, 172, 173, 174, 175, 178, 183, 184, 189, 193, 194, 195, 197, 199, 204, 205, 208, 211, 215, 223, 230, 248, 251, 254, 257, 259, 260, 261, 265, 269, 271, 279, 320, 325, 375, 379, 383, 387, 393, 395, 396, 398, 399, 429, 432, 434, 470, 534, 647, 706, 887, 903, 907, 908, 958, 987, 995, 1001, 1006, 1086], "allgemeinverst\u00e4ndlich": 22, "kurzbeschreibung": 22, "de": [22, 320, 784], "anschlussf\u00f6rderung": 22, "die": [22, 51, 140, 158, 196, 1120], "besonder": [22, 175], "bedeutung": 22, "ihr": 22, "f\u00fcr": [22, 159, 165, 175, 320, 1111], "da": [22, 155, 165, 182, 191, 224], "internet": 22, "internetnutzung": 22, "IN": 22, "\u00f6sterreich": 22, "zielgrupp": 22, "projektziel": 22, "5": [22, 134, 152, 159, 164, 165, 167, 175, 193, 194, 196, 248, 311, 320, 383, 393, 429, 432, 653, 785, 786, 1086], "l\u00f6sung": [22, 165], "beschreibung": 22, "der": [22, 175, 180, 196, 303, 320, 1108], "probleml\u00f6sung": 22, "wesentlich": 22, "element": [22, 175, 212, 230, 232, 488, 490, 491, 495, 583, 585, 586, 992], "ein": [22, 165, 196, 1119, 1124], "nachhaltigen": 22, "impact": 22, "nach": [22, 232], "projektend": 22, "6": [22, 175, 176, 196, 197, 230, 320, 383, 393, 429, 432, 1001, 1123], "umfeldanalys": 22, "wa": [22, 164, 180, 616], "ist": [22, 165], "stand": 22, "technik": 22, "method": [22, 188, 191, 201, 212, 214, 217, 220, 230, 245, 257, 266, 272, 294, 296, 304, 483, 519, 531, 538, 539, 540, 543, 545, 547, 550, 602, 605, 613, 617, 685, 686, 687, 688, 689, 717, 752, 754, 768, 973, 975, 1001, 1002, 1003, 1094], "wissen": 22, "welch": 22, "ander": [22, 151, 303], "l\u00f6sungen": 22, "vorhaben": 22, "zu": [22, 158, 175], "den": [22, 140, 180, 196], "genannten": 22, "problemen": 22, "gibt": [22, 175], "e": [22, 402, 686], "schon": 22, "7": [22, 168, 175, 176, 196, 320, 383, 393, 1123], "alleinstellungsmerkm": 22, "8": [22, 175, 176, 195, 196, 320, 383, 393, 864, 1072, 1123], "projektergebniss": 22, "erforderlich": 22, "lizenzen": 22, "dritter": 22, "9": [22, 168, 169, 175, 176, 196, 320, 383, 393, 958, 1108, 1123], "erfolgreich": 22, "projektabschluss": 22, "sonstigen": 22, "aktivit\u00e4ten": 22, "im": [22, 175, 201, 214, 227, 230, 245, 252, 266, 272, 320, 996], "projektbereich": 22, "angaben": 22, "zur": [22, 146, 165, 175], "fachlichen": 22, "eignung": 22, "mitarbeiterinnen": 22, "projektkernteam": 22, "erfahrung": 22, "vorgesehenen": 22, "projektleiterin": 22, "zum": [22, 151, 196], "maxim": 22, "min\u00fctigen": 22, "video": [22, 23, 183, 241, 271, 635], "risiken": 22, "erfolgskriterien": 22, "am": [22, 165, 224, 320], "angestrebt": 22, "jahr": 22, "10": [22, 43, 97, 98, 118, 149, 152, 157, 168, 171, 175, 210, 211, 238, 239, 240, 241, 242, 256, 279, 282, 302, 306, 307, 308, 312, 320, 383, 490, 785, 786], "umsetzung": 22, "einj\u00e4hrig": 22, "wichtig": 22, "partner_innen": 22, "arbeitsschwerpunkt": 22, "ressourcen": 22, "nutzer_innen": 22, "kommunikationskan\u00e4l": 22, "11": [22, 43, 150, 155, 173, 174, 175, 204, 205, 210, 235, 239, 241, 244, 245, 309, 310, 320, 383, 505, 628, 631, 664, 665, 676, 685, 710], "projekttermin": 22, "termin": [22, 789, 901, 964], "projektstart": 22, "kosten": 22, "finanzierung": 22, "projektkosten": 22, "personalkosten": 22, "sonstig": 22, "gesamtkosten": 22, "wir": [22, 180, 196], "beantragen": 22, "folgend": 22, "f\u00f6rderung": 22, "restlichen": 22, "werden": [22, 175], "finanziert": 22, "durch": [22, 165], "sonderprei": 22, "14": [22, 43, 155, 164, 175, 176, 179, 193, 235, 320, 1086], "erg\u00e4nzend": 22, "transparenz": 22, "mehrfachantr\u00e4g": 22, "nutzung": 22, "whataventur": 22, "plattform": 22, "eingereicht": 22, "teil": 22, "einer": [22, 155, 164, 175, 320], "schulischen": 22, "verpflichtung": 22, "z": 22, "b": 22, "htl": 22, "diplomarbeit": 22, "wie": [22, 182, 188], "haben": [22, 165], "sie": [22, 165], "erfahren": 22, "mehrfachnennungen": 22, "m\u00f6glich": 22, "16": [22, 194, 218, 232, 244, 245, 320, 958, 1108], "datenschutz": 22, "screenplai": [23, 61, 287, 411, 507, 510, 513, 516, 519, 522, 525, 557, 558, 559, 560, 561, 564, 565, 566, 584, 585, 586, 587, 713, 716, 721, 726, 731, 733, 771, 774, 777, 922, 925, 929, 997, 1088, 1095, 1100, 1102, 1105], "The": [23, 37, 41, 43, 59, 98, 130, 143, 175, 191, 194, 197, 204, 221, 230, 233, 248, 256, 258, 260, 266, 269, 276, 279, 283, 323, 331, 332, 369, 370, 385, 392, 393, 402, 403, 407, 408, 417, 485, 486, 538, 562, 583, 584, 606, 626, 627, 635, 640, 642, 644, 669, 687, 690, 701, 754, 784, 793, 794, 801, 818, 821, 832, 835, 838, 840, 849, 851, 855, 871, 873, 875, 876, 878, 884, 892, 896, 911, 913, 920, 932, 934, 935, 944, 945, 953, 954, 956, 960, 964, 972, 975, 979, 981, 983, 990, 995, 1001, 1043, 1065, 1067, 1074, 1083, 1094, 1115], "problem": [23, 367, 389, 412, 413, 421, 427, 428, 429, 432, 438, 485, 486, 628, 640, 644, 664, 665, 674, 690, 714, 748, 795, 814, 873, 875, 879, 934, 949, 950, 954, 968, 1063, 1065, 1089, 1096], "And": [23, 40, 59, 61, 143, 239, 242, 245, 248, 251, 256, 257, 258, 259, 260, 261, 266, 269, 271, 274, 276, 279, 283, 343, 387, 411, 412, 414, 417, 418, 423, 424, 425, 431, 434, 440, 448, 449, 454, 462, 468, 483, 530, 531, 537, 542, 558, 562, 563, 564, 566, 584, 599, 600, 604, 607, 632, 638, 640, 642, 655, 672, 675, 676, 677, 679, 680, 685, 697, 699, 701, 706, 722, 780, 784, 785, 786, 790, 793, 799, 801, 837, 849, 851, 856, 860, 866, 867, 878, 891, 913, 941, 942, 944, 946, 947, 948, 949, 951, 956, 960, 961, 964, 968, 969, 970, 975, 976, 977, 978, 1042, 1043, 1044, 1052, 1067, 1072, 1077, 1078, 1080, 1081, 1082, 1093, 1115], "me": [23, 136, 890], "open": [23, 120, 145, 261, 437, 716, 717, 881, 884, 887, 889, 926, 953, 1006], "sourc": [23, 38, 135, 145, 161, 412, 430, 714, 717, 719, 722, 724, 727, 731, 736, 738, 748, 750, 758, 761, 766, 885, 934, 1011, 1072], "walk": [23, 248, 302], "through": [23, 248, 302], "us": [24, 25, 26, 27, 28, 29, 30, 36, 40, 133, 137, 139, 143, 153, 154, 160, 162, 172, 191, 193, 194, 207, 210, 328, 330, 333, 348, 363, 385, 395, 403, 404, 413, 415, 429, 432, 449, 470, 570, 594, 615, 623, 635, 639, 640, 676, 690, 701, 850, 862, 863, 864, 900, 916, 933, 934, 944, 945, 951, 953, 956, 959, 969, 978, 1088, 1094, 1095], "case": [24, 25, 26, 27, 28, 29, 193, 359, 363, 434, 496, 498, 501, 675, 676, 885, 889, 890, 891, 943, 951, 978, 1094, 1100], "custom": [24, 120, 123, 136, 292, 531, 532, 546, 552, 576, 630, 1081, 1083, 1100], "subtract": [24, 529], "known": [24, 131], "calcul": [25, 191, 352, 431, 976], "minimum": [25, 736], "durat": 25, "trainer": [26, 147], "editor": [26, 184], "end": [26, 641], "user": [26, 40, 44, 194, 196, 320, 533, 612, 617, 618, 619, 620, 621, 622, 722, 790, 791, 793, 794, 795, 803, 804, 815, 875, 955, 1045, 1047, 1049, 1050, 1052, 1088], "audienc": [26, 1115], "from": [27, 28, 36, 38, 40, 41, 43, 55, 98, 118, 124, 143, 153, 161, 162, 170, 210, 220, 248, 251, 256, 265, 320, 338, 360, 366, 408, 411, 554, 557, 598, 607, 611, 637, 638, 677, 726, 731, 772, 777, 862, 874, 892, 916, 925, 932, 974, 1011, 1051, 1055, 1056, 1061, 1063, 1108], "other": [27, 36, 50, 191, 260, 272, 304, 635, 736, 758, 803, 963], "menu": 28, "choos": 28, "show": 29, "plain": [29, 570, 598, 599, 627], "text": [29, 269, 369, 845, 848, 851, 1006, 1084], "file": [29, 40, 46, 153, 155, 191, 201, 204, 220, 227, 229, 230, 244, 248, 252, 262, 264, 265, 266, 269, 270, 271, 293, 294, 309, 367, 411, 413, 419, 434, 513, 544, 716, 717, 718, 726, 758, 785, 786, 789, 807, 812, 813, 819, 820, 823, 824, 825, 833, 837, 840, 841, 845, 848, 850, 866, 874, 875, 879, 880, 884, 885, 886, 887, 888, 889, 890, 891, 893, 894, 898, 922, 926, 932, 933, 947, 953, 982, 1006, 1011, 1012, 1013, 1034, 1036, 1045, 1047, 1067, 1100], "emoji": 30, "code": [30, 39, 41, 43, 105, 162, 163, 165, 166, 189, 205, 258, 260, 261, 274, 320, 389, 399, 409, 410, 411, 413, 419, 420, 421, 426, 430, 506, 509, 512, 515, 518, 521, 524, 554, 639, 687, 719, 720, 724, 725, 726, 727, 728, 738, 739, 748, 749, 760, 761, 762, 766, 767, 890, 921, 924, 928, 948, 949, 950, 1051, 1052, 1053, 1056, 1059, 1062, 1072, 1085, 1095, 1099, 1104, 1115], "sphinxemoji": 30, "setup": [30, 61, 76, 107, 135, 139, 161, 168, 169, 171, 172, 173, 194, 244, 250, 251, 254, 257, 259, 261, 264, 265, 269, 270, 271, 425, 483, 485, 855, 863, 871, 882, 946, 947, 980, 1043, 1044, 1095, 1105], "most": [30, 36, 61, 642, 1088], "here": [30, 133, 434, 874], "In": [30, 43, 63, 137, 139, 140, 142, 172, 175, 236, 237, 239, 258, 260, 283, 320, 411, 413, 419, 420, 481, 486, 488, 529, 533, 544, 545, 546, 547, 548, 549, 574, 631, 635, 639, 669, 670, 676, 689, 736, 785, 786, 793, 849, 899, 932, 934, 948, 955, 996, 1113], "all": [30, 36, 51, 61, 188, 191, 210, 256, 320, 601, 627, 635, 670, 690, 777, 795, 932, 948, 966, 1054], "recip": 31, "isoamsa": 32, "txt": [32, 33, 34, 36], "ad": [32, 33, 34, 136, 948, 1076, 1083], "mathemat": [32, 33, 34], "symbol": [32, 33, 34, 329, 344, 405, 839, 932], "arrow": 32, "isoamsr": 33, "relat": [33, 148, 251, 254, 347], "isonum": 34, "binari": [34, 449, 1006], "oper": [34, 152, 165, 175, 188, 204, 207, 210, 217, 220, 224, 227, 241, 256, 276, 297, 331, 346, 347, 348, 351, 352, 354, 355, 360, 372, 483, 505, 530, 531, 537, 545, 585, 685, 693, 699, 716, 717, 718, 800, 879, 916, 975, 985, 987, 989, 1005, 1078, 1086], "layout": [35, 220, 378], "page": [35, 92, 136, 138, 729, 818, 850, 878], "admonit": 35, "i": [35, 43, 133, 134, 151, 191, 201, 207, 212, 217, 220, 227, 229, 230, 262, 266, 269, 271, 294, 306, 331, 357, 404, 410, 428, 483, 502, 529, 536, 598, 604, 605, 640, 642, 665, 669, 674, 677, 686, 690, 694, 698, 731, 742, 763, 778, 789, 793, 794, 799, 800, 801, 814, 824, 837, 864, 874, 875, 876, 879, 880, 881, 882, 883, 884, 887, 889, 891, 893, 894, 911, 914, 932, 949, 951, 956, 1006, 1063, 1080, 1086, 1105], "an": [35, 136, 207, 260, 275, 279, 298, 302, 320, 416, 421, 531, 640, 655, 719, 837, 863, 874, 879, 916, 949, 960, 969, 996, 998, 1095, 1113], "tip": 35, "hint": [35, 451, 481], "import": [35, 143, 151, 191, 201, 210, 302, 536, 930, 955, 963, 1074], "attent": [35, 998], "caution": [35, 605], "error": [35, 41, 143, 207, 260, 261, 279, 370, 395, 429, 551, 561, 562, 646, 649, 800, 864, 876, 885, 889, 890, 891, 968, 1024], "danger": [35, 337, 698, 815], "blech": 35, "titl": 35, "blah": 35, "kursdaten": [35, 1109, 1110, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "local": [35, 37, 95, 111, 114, 152, 175, 368, 400, 417, 438, 871, 874, 907, 934, 997, 1095], "bleh": 35, "To": [35, 37, 40, 42, 51, 129, 227, 256, 433, 434, 449, 470, 596, 607, 627, 631, 640, 642, 644, 655, 669, 677, 685, 687, 689, 690, 701, 729, 770, 772, 785, 786, 866, 867, 874, 934, 944, 946, 951, 953, 954, 974, 975, 1052, 1076, 1077, 1083], "do": [35, 40, 129, 191, 233, 361, 398, 417, 428, 627, 748, 770, 785, 786, 801, 932], "mmlalia": 36, "mathml": 36, "alias": 36, "entiti": [36, 901], "restructuredtext": 37, "cheat": [37, 302], "sheet": [37, 302], "further": [37, 117, 156, 192, 193, 215, 293, 302, 399, 635, 689, 985], "document": [37, 138, 188, 204, 297, 567, 568, 569, 570, 571, 573, 574, 575, 576, 579, 580, 583, 588, 722, 738, 740, 744, 746, 768, 772, 775, 785, 786, 789, 793, 800, 801, 802, 803, 818, 819, 820, 821, 837, 840, 841, 874, 876, 878, 880, 881, 882, 884, 887, 888, 889, 890, 891, 894, 932, 933, 984, 1008, 1018, 1084, 1093, 1100], "extern": [37, 274, 288, 366, 415, 544, 733, 734, 863, 949, 1019, 1115], "section": 37, "refer": [37, 129, 132, 175, 201, 204, 207, 214, 227, 230, 236, 237, 239, 242, 245, 249, 252, 257, 260, 266, 272, 335, 373, 400, 542, 636, 639, 640, 642, 669, 670, 672, 681, 686, 688, 689, 706, 707, 765, 996], "That": [37, 233, 236, 237, 239, 256, 283, 374, 432, 529, 536, 627, 630, 640, 669, 687, 688, 758, 793, 864, 874, 879, 880, 883, 951, 978, 1102], "we": [37, 40, 43, 51, 409, 411, 748, 777, 944, 1100], "anoth": [37, 220, 409, 916, 948], "contain": [37, 210, 230, 256, 259, 505, 521, 522, 523, 562, 563, 577, 578, 581, 582, 583, 627, 631, 679, 746, 946], "abov": 37, "footnot": 37, "sphinxish": 38, "run": [38, 118, 137, 425, 484, 547, 766, 855, 880, 881, 882, 946, 947, 983, 1059, 1062, 1093], "seminar": 39, "clean": [39, 41, 43, 198, 258, 260, 261, 320, 410, 411], "2022": [39, 96, 97, 98, 99, 100, 101, 102, 210, 211, 212, 215, 218, 221, 223, 226, 229, 232, 235, 238, 239, 240, 241, 242, 244, 245, 312, 313, 314, 320], "04": [39, 102, 137, 210, 221, 223, 226, 259, 260, 261, 262, 263, 280, 302, 320, 946], "agenda": [39, 168, 169, 171, 172, 173, 174, 179, 183, 184, 221, 226, 238, 247, 251, 254, 260, 264, 268, 270, 274, 276, 279, 283, 315, 316, 1115], "timelin": 39, "befor": [40, 61, 120, 153, 276, 685, 1100], "formal": [40, 331], "unit": [40, 41, 43, 69, 164, 194, 232, 241, 251, 254, 310, 470, 486, 547, 1044, 1098], "initi": [40, 201, 236, 237, 239, 283, 333, 345, 394, 481, 512, 513, 514, 529, 536, 547, 584, 607, 627, 629, 630, 631, 632, 676, 698, 752, 763, 775, 905, 907], "structur": [40, 41, 125, 129, 152, 215, 236, 237, 239, 241, 263, 274, 282, 283, 363, 371, 378, 381, 387, 423, 470, 505, 676, 681, 701, 726, 754, 950, 963, 1093, 1100, 1115], "snippet": [40, 42, 48], "userdb": [40, 44, 47, 48, 53, 56, 193, 505, 619, 623], "bin": 40, "binaryfil": 40, "cpp": [40, 419, 470, 473, 645, 646, 647, 650, 651, 652, 653, 656, 657, 659, 660, 661, 662, 663], "extend": [40, 188, 547, 972], "read": [40, 47, 48, 56, 191, 198, 293, 294, 304, 338, 399, 411, 434, 635, 677, 716, 774, 880, 884, 890, 892, 1006, 1012, 1013, 1045, 1046, 1047, 1048, 1061, 1084], "iter": [40, 154, 165, 170, 175, 180, 182, 188, 191, 196, 197, 201, 204, 207, 212, 214, 217, 220, 229, 230, 241, 242, 244, 245, 251, 254, 258, 262, 264, 265, 266, 270, 271, 294, 562, 563, 586, 627, 655, 662, 675, 676, 677, 709, 746, 958, 960, 961, 962, 974, 994, 995, 1004], "bug": [40, 45, 51, 348, 513, 677], "faschingbau": [40, 136], "As": [40, 432, 449, 640, 679, 864, 898, 932, 969, 1102], "last": [40, 348, 369, 370, 399, 552, 555, 691, 908, 930, 1100], "name": [40, 41, 201, 204, 220, 342, 380, 538, 627, 758, 802, 820, 926, 997, 1008], "wrap": [40, 164, 395, 627, 954], "up": [40, 134, 164, 198, 241, 259, 260, 279, 307, 395, 627, 969], "what": [40, 43, 47, 51, 139, 142, 207, 217, 357, 398, 409, 533, 602, 621, 627, 639, 640, 669, 690, 727, 748, 758, 774, 778, 793, 801, 819, 858, 871, 874, 875, 879, 880, 883, 887, 919, 932, 944, 948, 956, 960, 964, 1007, 1080, 1083], "have": [40, 43, 409, 748, 944, 949], "messag": [41, 132, 133, 408, 414, 906, 925, 926, 1075, 1100], "book": [41, 43, 179, 229, 271, 323, 408, 1056], "survei": [41, 409], "comment": [41, 188, 212, 227, 252, 297, 984, 1025], "format": [41, 48, 191, 197, 212, 272, 1001, 1053], "object": [41, 112, 165, 170, 207, 214, 220, 224, 232, 233, 241, 244, 245, 257, 258, 260, 261, 264, 265, 270, 276, 277, 279, 290, 409, 427, 432, 512, 513, 514, 529, 531, 534, 537, 539, 543, 545, 600, 602, 616, 631, 634, 637, 640, 686, 926, 949, 950, 955, 963, 969, 971, 973, 1007, 1077, 1081, 1086], "data": [41, 152, 154, 180, 189, 215, 229, 232, 241, 265, 279, 343, 387, 390, 411, 535, 539, 562, 681, 793, 907, 974, 1042, 1056, 1061, 1063], "handl": [41, 207, 210, 220, 232, 251, 254, 259, 260, 261, 279, 313, 421, 429, 551, 876, 955, 1008], "boundari": [41, 1072], "class": [41, 165, 191, 210, 214, 217, 220, 233, 241, 257, 262, 276, 414, 432, 439, 440, 457, 458, 470, 473, 487, 506, 507, 508, 531, 538, 539, 544, 546, 547, 548, 549, 555, 570, 598, 599, 618, 627, 628, 630, 638, 639, 671, 685, 714, 954, 968, 969, 972, 973, 974, 975], "switch": [42, 359, 391, 482], "googletest": [42, 160, 484, 1098], "git": [42, 75, 114, 135, 143, 147, 189, 193, 194, 248, 302, 307, 320, 731, 1056], "submodul": 42, "establish": [42, 43, 947], "demo": [42, 250, 251, 258, 415, 434, 671, 686, 789, 815, 879, 914, 918], "straightforward": [42, 165], "main": [42, 376, 467, 468, 469, 948], "convers": [42, 188, 204, 212, 214, 220, 224, 227, 245, 256, 262, 266, 272, 297, 348, 375, 599, 607, 987, 1001], "fix": [42, 135, 143, 236, 237, 239, 256, 283, 294, 537, 655, 701, 748, 749, 761, 762], "shortcom": 42, "softwar": [43, 161, 258, 409, 410, 864, 937, 940, 1117], "A": [43, 61, 132, 143, 210, 236, 237, 239, 251, 255, 256, 257, 258, 260, 265, 283, 320, 326, 335, 365, 392, 410, 411, 414, 428, 448, 462, 470, 473, 483, 488, 503, 529, 544, 545, 554, 563, 593, 604, 605, 618, 627, 632, 640, 669, 672, 685, 688, 690, 785, 786, 789, 803, 814, 837, 841, 874, 876, 880, 881, 882, 885, 888, 889, 890, 891, 898, 911, 916, 919, 932, 945, 946, 949, 950, 951, 959, 978, 981, 1043, 1072, 1077, 1080, 1083, 1084, 1093], "craft": [43, 258, 410], "09": [43, 137, 192, 202, 210, 276, 277, 278, 320], "00": 43, "15": [43, 175, 181, 218, 251, 254, 264, 265, 266, 302, 309, 314, 320, 785, 786], "introductori": [43, 248, 655, 897], "word": [43, 227, 369, 370, 399, 402, 552, 555, 682, 691, 818, 1023, 1040], "engin": [43, 229, 864], "disciplin": 43, "coffe": 43, "break": [43, 175, 212, 362, 991, 994], "project": [43, 107, 136, 152, 193, 194, 208, 232, 237, 239, 241, 257, 259, 260, 261, 274, 276, 279, 308, 309, 310, 314, 316, 409, 411, 470, 475, 484, 485, 547, 1043, 1087, 1093, 1115, 1118], "enter": [43, 61, 204, 562, 605, 640, 666, 675, 689, 761, 850, 918, 948, 956, 968, 969, 1067, 1072, 1077], "framework": 43, "lunch": 43, "cornerston": 43, "45": 43, "keep": [43, 137, 820], "small": 43, "23": [43, 173, 199, 215, 221, 239, 247, 257, 268, 269, 279, 320], "59": 43, "extrem": 43, "program": [43, 48, 61, 91, 112, 148, 164, 170, 191, 194, 210, 220, 232, 233, 241, 244, 248, 258, 260, 261, 264, 265, 266, 270, 276, 279, 309, 320, 324, 325, 327, 363, 364, 365, 371, 397, 402, 407, 409, 414, 434, 467, 468, 469, 473, 529, 690, 719, 771, 803, 814, 815, 856, 858, 877, 892, 895, 896, 899, 911, 921, 929, 932, 964, 971, 980, 981, 983, 985, 1032, 1044, 1055, 1085, 1086, 1114, 1126, 1127, 1128, 1129, 1130], "session": 43, "find": [44, 117, 135, 153, 429, 488, 569, 587, 705, 846, 1102], "crash": [44, 135], "If": [44, 47, 533, 627, 642, 774, 888, 889, 955, 1083], "Not": [44, 61, 63, 143, 224, 233, 495, 497, 500, 569, 605, 621, 627, 649, 664, 665, 677, 686, 748, 774, 814, 885, 888, 889, 890, 891, 911, 932, 949, 959, 1077, 1100], "found": [44, 497, 500, 569, 621, 1102], "state": [44, 133, 193, 655, 761, 763], "exist": [46, 63, 129, 495, 885, 888, 889, 891, 972, 1083], "ar": [46, 132, 133, 212, 214, 227, 277, 395, 411, 533, 539, 627, 655, 916, 926, 954, 963, 975, 1082, 1102], "overwritten": 46, "done": [47, 433, 596, 690], "twice": 47, "altern": [48, 636], "output": [48, 153, 165, 293, 425, 608, 800, 958, 1061, 1100], "csv": [48, 204, 221, 229, 232, 241, 244, 264, 265, 266, 270, 271, 411, 1012, 1013, 1014, 1045, 1046, 1047, 1048, 1053, 1067], "frontend": 48, "featur": [49, 51, 61, 244, 260, 261, 262, 264, 265, 270, 279, 388, 411, 667, 957, 972, 991, 1061, 1063], "search": [50, 567, 569, 570, 573, 583, 587, 607, 620, 621, 622, 847, 949, 1002, 1088], "By": [50, 160, 224, 256, 335, 542, 586, 617, 620, 622, 644, 655, 666, 669, 670, 672, 677, 681, 689, 705, 706, 707, 955, 988, 1080, 1081, 1082, 1093], "index": [50, 175, 193, 212, 224, 272, 400, 653, 858, 993, 1081, 1088, 1089, 1090], "backlog": 51, "need": [51, 294, 434, 649, 651, 916, 1067], "chang": [51, 803, 814, 821], "Or": [51, 411, 419, 420, 434, 638, 677, 878, 969, 1077], "Will": 51, "refactor": [51, 54, 411, 487, 726, 727, 728, 766, 1046, 1048, 1053], "after": [51, 168, 199, 361, 777, 793, 972], "backingstor": [52, 53, 55], "ha": [52, 53, 652], "too": [52, 53, 405, 420, 627, 671, 694], "mani": [52, 53, 220, 399, 421, 677, 840, 920], "respons": [52, 53, 196, 437], "interfac": [52, 67, 84, 172, 220, 259, 289, 420, 424, 434, 437, 441, 449, 460, 467, 468, 483, 485, 515, 516, 517, 524, 525, 526, 601, 717, 789, 857, 858, 861, 863, 968, 1068], "load": [55, 153, 386, 422, 736, 737, 862, 904, 966], "constructor": [55, 170, 220, 236, 237, 239, 245, 283, 483, 513, 519, 530, 531, 532, 533, 534, 536, 537, 546, 547, 548, 549, 616, 631, 632, 633, 638, 640, 664, 684, 685, 970], "bool": 56, "realli": [56, 627, 689], "submiss": [57, 60, 107], "pointless": [57, 58, 60, 61, 975], "blink": [57, 58, 60, 61, 302], "With": [57, 58, 60, 61, 95, 111, 162, 193, 240, 256, 258, 260, 279, 320, 404, 412, 433, 448, 462, 484, 555, 637, 690, 784, 785, 786, 847, 850, 855, 860, 886, 949, 997, 1080, 1082, 1094, 1095, 1098], "asyncio": [57, 58, 60, 61], "libgpiod": [57, 58, 59, 60, 61], "raspberri": [57, 58, 60, 61, 143, 172, 288, 320, 738, 759, 855, 859, 862, 937, 941, 943, 945, 1124], "pi": [57, 58, 59, 60, 61, 143, 172, 320, 738, 758, 759, 855, 862, 944, 945, 1124], "biographi": [57, 60], "abstract": [57, 60, 241, 276, 427, 442, 456, 794, 880, 881, 882, 968], "fedora": [59, 135, 142, 731, 732, 733, 734, 946], "prepar": [59, 135, 153, 168, 169, 171, 172, 173, 174, 184, 193, 208, 218, 237, 239, 247, 470, 547, 758], "tarbal": [59, 143], "On": [59, 61, 193, 227, 229, 251, 255, 256, 260, 279, 322, 484, 486, 531, 562, 563, 567, 573, 676, 701, 801, 880, 881, 882, 887, 892, 896, 919, 946, 1011], "build": [59, 66, 133, 135, 143, 160, 161, 194, 212, 412, 414, 422, 470, 484, 546, 547, 548, 549, 726, 731, 732, 733, 734, 736, 758, 759, 862, 880, 881, 882, 892, 933, 934, 937, 940, 944, 945, 946, 948, 949, 950, 1004, 1102, 1120], "present": 61, "start": [61, 210, 236, 237, 239, 320, 434, 637, 649, 949, 1075, 1100], "point": [61, 224, 227, 483, 529, 531, 539, 545, 547, 548, 549, 555, 637, 649, 701, 785, 786, 944, 987], "greet": [61, 1018], "multipl": [61, 170, 370, 411, 412, 724, 725, 726, 820, 874, 932, 953, 955, 992, 1077, 1080, 1094], "background": [61, 137, 139, 528, 626], "thread": [61, 132, 134, 143, 260, 261, 311, 505, 627, 693, 694, 699, 900, 901, 902, 907, 909, 916, 919, 964], "charact": [61, 324, 331, 334, 337, 344, 713, 714, 715, 716, 717, 718, 721, 722, 723, 1040], "devic": [61, 79, 95, 111, 713, 714, 715, 716, 717, 718, 721, 722, 723, 724, 725, 726, 748, 752, 753, 754, 789, 862, 864, 922], "base": [61, 143, 212, 220, 236, 237, 239, 241, 276, 283, 432, 598, 599, 627, 640, 655, 675, 676, 950, 955, 968], "gpio": [61, 84, 150, 172, 288, 289, 290, 291, 302, 738, 739, 862, 864, 896, 897, 898], "entir": [61, 256, 731, 733, 818, 874], "matrix": 61, "off": [61, 193], "bring": [61, 114, 307, 601], "togeth": [61, 417, 601, 820], "modular": [61, 210, 365], "plai": [61, 655], "bit": [61, 265, 351, 803, 814, 816, 981, 983], "row": [61, 256, 1076, 1080, 1081, 1082], "coroutin": [61, 239, 654, 655], "enough": [61, 529, 605], "sequenc": [61, 201, 204, 212, 244, 251, 254, 264, 265, 270, 271, 344, 503, 567, 573, 959, 992, 1000], "loop": [61, 152, 154, 165, 175, 180, 212, 214, 224, 227, 230, 236, 237, 239, 258, 260, 279, 283, 327, 360, 361, 399, 471, 675, 899, 960, 991, 994], "forev": 61, "strip": [61, 197, 214, 220, 294], "down": [61, 420], "factori": [61, 427, 442, 456, 486], "turn": [61, 959], "Into": [61, 254, 276, 279, 338, 434, 471, 488, 564, 618, 627, 671, 1046, 1048, 1053], "anti": [61, 699, 701], "clumsi": [61, 701], "decor": [61, 191, 241, 251, 254, 258, 260, 261, 276, 279, 432, 446, 460, 954], "wrapper": 61, "final": [61, 220, 236, 237, 239, 283, 666, 793, 797, 955], "playground": 61, "cycl": [61, 901], "fast": [61, 170], "forward": [61, 239, 336, 400, 689, 873], "ani": [61, 256, 428, 483, 911], "cancel": 61, "goodby": 61, "hochk\u00f6nig": 62, "k\u00f6nigsjodl": 62, "klettersteig": 62, "tour": [62, 627], "werfen": 62, "ostpreussenh\u00fctt": 62, "matrashau": 62, "blog": [63, 129], "articl": [63, 139, 140, 142, 143], "yet": [63, 220], "revisit": [63, 327, 395, 638], "post": [63, 144, 153, 925], "pending_xref": 64, "cmake": [66, 160, 161, 193, 248, 274, 275, 320, 412, 414, 416, 420, 470, 484, 892, 933, 934, 947, 1102, 1103, 1115], "oo": [68, 106, 165, 191, 194, 210, 217, 220, 229, 232, 236, 237, 239, 241, 251, 254, 257, 259, 276, 283, 311, 437, 474, 483, 505, 964], "graph": [70, 71, 72, 168, 403, 405, 610, 711, 759, 1014, 1015, 1019, 1028, 1042, 1049], "embed": [71, 72, 76, 94, 95, 105, 106, 110, 111, 113, 150, 159, 248, 257, 259, 285, 301, 303, 304, 316, 318, 320, 1116, 1117], "comput": [71, 72, 76, 94, 105, 106, 110, 113, 299, 301, 303, 304, 316, 318, 398, 399, 483, 785, 786, 794], "current": [71, 72, 432, 709, 821], "depend": [71, 72, 161, 274, 276, 288, 289, 290, 291, 293, 415, 416, 418, 419, 423, 433, 437, 447, 470, 475, 492, 494, 505, 513, 572, 578, 582, 590, 592, 595, 600, 608, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 629, 636, 643, 654, 678, 683, 735, 736, 785, 786, 787, 791, 805, 806, 807, 826, 831, 832, 835, 868, 870, 877, 883, 885, 893, 895, 897, 909, 912, 934, 936, 938, 939, 942, 943, 949, 964, 966, 1012, 1013, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1058, 1062, 1069, 1072, 1075, 1079, 1092, 1098, 1115], "ex": [73, 74, 80, 81, 82, 83, 89, 90], "race": [73, 74, 86, 695, 748, 749, 756, 902, 903, 966], "condit": [73, 74, 86, 353, 361, 370, 695, 699, 748, 749, 756, 902, 903, 905, 906, 966], "avoid": [74, 86], "goal": [74, 80, 81, 82, 83, 85, 86, 87, 89, 117, 119, 120, 122, 153, 257, 259, 1113, 1116], "outcom": [74, 80, 81, 82, 83, 171, 304], "introduct": [75, 78, 152, 236, 237, 239, 251, 254, 258, 259, 269, 274, 275, 283, 305, 320, 323, 340, 398, 402, 416, 433, 441, 528, 625, 631, 675, 684, 693, 708, 738, 758, 792, 955, 1093, 1113, 1115, 1126], "2019": [76, 152, 155, 320], "overview": [76, 148, 248, 260, 261, 283, 317, 321, 637, 644, 655, 679, 685, 699, 701, 709, 729, 783, 794, 820, 851, 862, 863, 864, 865, 900, 932, 954, 1058, 1062], "knowledg": [76, 1115], "transfer": [76, 687], "linux": [77, 78, 79, 95, 108, 109, 111, 132, 137, 145, 147, 148, 150, 157, 172, 174, 179, 184, 238, 247, 248, 268, 269, 305, 307, 320, 322, 735, 787, 788, 791, 797, 854, 856, 860, 861, 862, 864, 877, 895, 918, 1108, 1118, 1119, 1126, 1127, 1128, 1129, 1130], "unix": [78, 108, 109, 156, 307, 323, 385, 395, 431, 983], "hardwar": [79, 82, 83, 120, 123, 248, 385, 859, 861, 862, 864, 897, 1117], "manag": [79, 128, 134, 182, 212, 232, 241, 251, 254, 257, 258, 260, 276, 279, 309, 310, 314, 409, 537, 597, 685, 768, 769, 934, 953, 972, 1064, 1065, 1066, 1087, 1117], "averag": [80, 81, 89, 431, 459], "sensor": [80, 81, 83, 89, 90, 92, 259, 427, 428, 432, 434, 439, 457, 459, 460, 466, 470, 472, 473, 474, 485, 486, 487, 494, 685, 862, 864, 892, 1042, 1044], "parallel": 81, "led": [82, 302], "temperatur": [82, 83, 90, 470, 473, 862, 864, 892], "displai": [82, 89], "sysf": [84, 172, 288, 302, 863, 897, 898], "gpiod": 84, "multithread": [85, 150, 210, 236, 237, 239, 248, 279, 283, 310, 317, 699, 700, 929, 964, 965, 967, 1129], "semaphor": [86, 132, 701, 925, 926], "mutex": [86, 132, 386, 697, 701, 748, 749, 750, 751, 763, 764, 903, 904, 919, 966], "commun": [87, 229, 451, 699, 905, 926], "wait": [87, 123, 699, 701, 774, 775, 776, 905, 925], "someth": [87, 165, 529, 627, 701, 774, 775, 776, 994], "simpl": [91, 170, 425, 529, 539, 554, 605, 617, 761, 763, 789, 803, 932, 949, 974, 1004, 1084, 1093], "2020": [94, 137, 157, 159, 164, 165, 167, 168, 169, 171, 173, 174, 179, 320], "ss2022": [95, 103, 785, 786], "block": [95, 111, 356, 552, 879, 880, 881, 882, 883, 930, 1086], "remot": [95, 111, 114, 438, 451, 465, 785, 786, 866, 867, 871, 874, 875], "cross": [95, 106, 111, 143, 248, 738, 758, 933, 935, 936, 937, 942, 944, 945, 947, 1108], "develop": [95, 106, 111, 164, 179, 193, 196, 218, 229, 232, 248, 251, 253, 254, 257, 258, 259, 260, 261, 279, 285, 305, 320, 735, 935, 936, 942, 1116, 1117, 1118, 1131], "03": [96, 97, 98, 99, 100, 101, 181, 184, 189, 208, 210, 218, 221, 238, 251, 252, 254, 257, 258, 274, 302, 320, 624, 627, 628], "08": [96, 199, 202, 210, 223, 320], "homework": [96, 97, 98, 99, 102], "until": 98, "21": [98, 99, 221, 295, 302, 320], "exercis": [98, 107, 125, 147, 152, 153, 165, 168, 169, 173, 181, 182, 184, 193, 194, 204, 210, 227, 232, 236, 237, 239, 241, 244, 248, 252, 257, 259, 260, 264, 265, 270, 271, 272, 276, 279, 283, 292, 294, 302, 308, 326, 328, 330, 332, 334, 336, 338, 350, 374, 383, 427, 428, 429, 431, 432, 433, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 503, 504, 505, 535, 546, 547, 548, 549, 550, 591, 592, 593, 600, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 689, 705, 706, 707, 780, 787, 798, 804, 807, 808, 810, 812, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 845, 866, 867, 868, 869, 885, 886, 892, 926, 930, 937, 939, 940, 941, 942, 971, 1012, 1013, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053], "creat": [98, 114, 126, 131, 135, 138, 160, 161, 484, 627, 694, 778, 784, 785, 786, 803, 808, 810, 812, 820, 824, 826, 837, 869, 886, 888, 889, 891, 925, 926, 944, 946, 951, 1043, 1061, 1063], "copi": [98, 165, 214, 249, 350, 488, 522, 530, 537, 542, 557, 563, 564, 568, 575, 627, 638, 640, 665, 670, 672, 676, 681, 685, 686, 705, 772, 820, 822, 823, 826, 866, 867, 874, 885, 996, 1077], "move": [98, 236, 237, 239, 257, 283, 483, 529, 545, 636, 637, 638, 639, 640, 685, 687, 706, 738, 818, 825, 826, 841], "remov": [98, 230, 420, 500, 501, 583, 586, 705, 826, 829, 837, 926], "l": [98, 835, 840], "command": [98, 429, 444, 458, 736, 803, 814, 818, 835, 840, 855, 946], "22": [100, 171, 178, 183, 270, 271, 272, 320, 1086], "24": [100, 112, 178, 210, 240, 260, 261, 262, 263, 280, 282, 320], "ku": 100, "28": [101, 152, 169, 210, 258, 308, 320], "01": [102, 107, 202, 208, 210, 211, 212, 241, 247, 302, 312, 313, 320, 785, 786], "ws2022": [104, 105, 106], "plan": [104, 221, 305], "evolut": 104, "fh": [105, 106, 113, 470, 471, 472, 473, 474, 546, 547, 548, 549, 609, 791, 805, 806, 831, 938], "joanneum": [105, 106, 113], "2023": [105, 106, 107, 108, 109, 239, 247, 248, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 282, 285, 320], "question": [105, 106, 120, 191, 317, 411, 425, 470, 609, 791, 805, 806, 809, 811, 831, 917, 938, 967, 1086], "inherit": [105, 151, 191, 220, 241, 276, 441, 515, 516, 517, 598, 599, 600, 603, 627, 887, 964, 972], "memori": [105, 134, 156, 182, 375, 378, 382, 384, 386, 393, 400, 499, 509, 510, 511, 537, 596, 597, 729, 742, 743, 744, 745, 771, 772, 773, 791, 795, 925, 926, 1117, 1127], "leak": [105, 499, 510, 537, 687], "ye": [106, 1072], "No": [106, 133, 172, 449, 627, 644, 690, 955, 1083, 1100], "lab": 107, "exam": [107, 108, 109, 111, 192, 205, 207, 218, 302, 317, 483, 785, 786, 787, 917, 967, 1086], "17": [107, 204, 205, 207, 211, 212, 218, 235, 242, 248, 264, 265, 266, 320, 544], "ss2023": [108, 109, 111], "06": [108, 109, 192, 193, 210, 239, 270, 271, 272, 302, 320], "30": [108, 109, 150, 159, 169, 174, 221, 320], "handout": 108, "concept": [108, 109, 239, 269, 283, 643, 644, 647, 648, 649, 652, 653, 679, 792, 1063], "toolchain": [108, 109, 143, 194, 274, 758, 932, 933, 938, 939, 941, 942, 943, 944, 945, 946, 947, 1115], "solv": [109, 904, 1063, 1089, 1096], "finish": [111, 119, 128, 194, 777], "ws2023": 112, "orient": [112, 170, 220, 233, 241, 244, 245, 258, 260, 261, 264, 265, 270, 276, 279, 290, 409, 529, 600, 971, 1086], "graz": [113, 155, 157, 164, 202, 320], "branch": [114, 357], "upstream": 114, "track": [114, 948], "submit": [114, 777, 778], "appli": [114, 135, 1083], "patch": [114, 135], "packag": [116, 119, 137, 143, 160, 241, 258, 276, 279, 295, 758, 937, 940, 963, 1011, 1086, 1087, 1088, 1089, 1090, 1091, 1095], "pypi": [116, 189, 229, 1011, 1056, 1089, 1091], "audio": [117, 121], "chip": [117, 863], "bringup": [117, 120, 864], "get": [118, 131, 161, 212, 701, 746, 771, 896], "debian": [118, 119], "kernel": [118, 119, 120, 124, 133, 135, 179, 320, 405, 722, 731, 732, 733, 734, 735, 736, 750, 752, 758, 759, 791, 794, 859, 862, 1118], "config": [118, 758], "within": 118, "qemu": 118, "extract": [118, 124, 191, 471, 1046, 1048, 1053, 1061], "boot": [118, 131, 142, 320, 794], "etc": [119, 180, 188, 191, 220, 230, 233, 266, 834, 862, 890, 984, 1034], "yocto": [120, 124, 853], "everyth": [120, 148, 207, 417, 789, 800, 879], "like": [120, 283, 529, 911], "i2": 121, "kontron": 121, "smarc": 121, "modul": [121, 165, 189, 191, 229, 230, 242, 258, 265, 279, 295, 302, 405, 420, 484, 673, 726, 731, 733, 734, 736, 737, 752, 758, 863, 963, 1053, 1056, 1067, 1086, 1094, 1102], "dirti": 122, "upgrad": 122, "path": [122, 143, 191, 201, 207, 214, 423, 709, 790, 842, 944, 949, 1043, 1102], "step": [122, 429, 432, 434, 470, 562, 655, 705, 706, 933, 934, 948, 968, 993], "intel": 124, "bsp": 124, "improv": 125, "beginn": [125, 189, 201, 224, 229, 241, 265, 1055, 1056], "split": [125, 151, 214, 220, 294, 1002, 1061], "openshot": 126, "seo": [127, 128], "sitemap": 127, "meta": [127, 128], "stack": [128, 134, 175, 196, 382, 640], "hang": 128, "dbu": [128, 434], "perturb": 128, "encod": [128, 227, 229, 230, 241, 251, 271, 272, 302, 1072], "context": [128, 151, 212, 251, 254, 258, 756, 757, 777, 953, 956, 1064, 1065, 1066], "slideshow": [128, 714, 717, 719, 722, 724, 727, 729, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 761, 763, 766, 768, 772, 775, 778, 926, 930, 998, 1065, 1089, 1096], "abc": [128, 968], "stuff": [128, 302, 395, 794, 828], "extens": 129, "rest": [129, 191, 884], "style": [129, 358, 409, 529, 631, 685, 703, 1001], "convert": [129, 152, 256, 974, 1052], "rst": 129, "exampl": [129, 214, 220, 224, 298, 331, 335, 370, 372, 392, 395, 431, 470, 555, 580, 631, 632, 650, 651, 652, 653, 679, 688, 782, 800, 802, 803, 851, 875, 879, 884, 887, 905, 930, 953, 968, 988, 998, 1001, 1002, 1003, 1004, 1025, 1070, 1078, 1083, 1093, 1094], "add": [129, 250, 421, 425, 483, 719, 766, 777, 929, 972, 1076], "miss": [129, 241, 631, 888], "past": [129, 370], "learn": [130, 251, 304, 1057, 1063], "beagleboard": 131, "how": [131, 134, 142, 164, 194, 212, 339, 378, 403, 404, 405, 539, 677, 687, 801, 814, 817, 960, 1063], "repair": 131, "nand": 131, "also": [131, 376, 789, 794, 795, 800, 801, 880, 881, 882, 884, 911, 914, 918, 920, 999, 1063], "40w": 131, "x": [131, 194, 519], "loader": 131, "u": [131, 875], "bootabl": 131, "mmc": 131, "sd": [131, 172], "card": [131, 172, 250, 786], "port": [132, 873], "There": [132, 212, 409, 537, 693, 774, 864, 874, 879, 890, 891], "": [132, 147, 172, 351, 375, 409, 529, 621, 627, 630, 690, 722, 727, 746, 758, 774, 803, 819, 871, 919, 932, 960, 964, 1007], "alwai": [132, 212, 232, 665, 889], "better": [132, 326, 411, 768, 978, 1072], "wai": [132, 191, 212, 220, 399, 920, 964, 983], "process": [132, 134, 153, 248, 269, 756, 757, 790, 791, 795, 796, 911, 912, 913, 916, 920], "signal": [132, 156, 385, 699, 905, 928, 929, 930, 931], "aren": 132, "t": [132, 189, 677, 1056], "queue": [132, 175, 699, 775, 906, 925, 926], "timer": [132, 766, 768, 769, 882, 916], "poll": [132, 699, 701], "event": [132, 719, 738, 748, 766, 767, 771, 899, 905, 921, 923], "dispatch": 132, "interrupt": [132, 738, 739, 740, 741, 754, 763, 899, 916], "realtim": [132, 134, 313, 317, 320, 750, 918, 919, 1108, 1117], "save": [133, 687], "solid": [133, 409], "disk": [133, 172, 789], "life": [133, 688, 901], "gentoo": [133, 758], "rant": [133, 153, 414, 934], "swap": [133, 227, 374, 690, 801, 1021], "tmpf": 133, "instanc": [133, 191, 217, 220], "syslog": 133, "var": 133, "mountpoint": 133, "logrot": 133, "o": [133, 191, 201, 207, 214, 215, 220, 227, 229, 230, 262, 266, 269, 271, 294, 331, 742, 799, 800, 801, 824, 837, 879, 880, 881, 882, 883, 884, 893, 894, 914, 1006, 1086], "schedul": [133, 269, 312, 313, 317, 791, 795, 901, 914, 915, 917, 918, 919], "ram": 133, "thing": [133, 194, 215, 236, 237, 239, 283], "left": [133, 351, 542], "why": [134, 135, 143, 212, 409, 437, 529, 532, 536, 537, 684, 690, 731, 777, 802, 856, 863, 871, 875, 900, 953, 998], "p": 134, "suck": [134, 738], "count": [134, 686, 765, 801, 1040], "consumpt": 134, "conclus": [134, 763, 855, 863], "pthread": 134, "experi": 134, "100": 134, "default": [134, 165, 212, 214, 236, 237, 239, 283, 298, 483, 531, 533, 534, 546, 547, 548, 549, 616, 664, 685, 817, 930, 998, 1081], "eat": 134, "limit": [134, 959], "than": [134, 490, 975], "my": [134, 137, 233, 324, 325, 411, 726, 797, 814], "system": [134, 207, 248, 269, 309, 320, 341, 405, 602, 693, 807, 813, 875, 877, 878, 879, 884, 895, 913, 916, 919, 985, 1088, 1108, 1126, 1127, 1128, 1129, 1130], "could": [134, 688], "take": [134, 376, 687, 978], "doe": [134, 555, 801, 814, 817, 885, 888, 889], "differ": [134, 165, 375, 560, 562, 820, 874], "It": [135, 164, 256, 306, 375, 601, 814, 875, 888, 889, 932], "rpm": [135, 137, 162, 731], "prerequisit": [135, 143, 161, 260, 279, 304, 733, 1011], "rpmbuild": 135, "directori": [135, 160, 161, 309, 411, 412, 484, 709, 785, 786, 803, 808, 809, 810, 811, 820, 821, 822, 829, 836, 837, 840, 841, 846, 874, 885, 933, 934, 953, 1093], "download": [135, 181, 183, 302, 307, 321, 487, 944, 947, 1107], "For": [135, 137, 143, 221, 224, 248, 251, 253, 254, 257, 259, 285, 320, 332, 457, 531, 542, 627, 655, 676, 701, 793, 879, 944, 945, 946, 956, 974, 1043, 1116], "domain": [136, 156, 254, 702], "configur": [136, 138, 143, 413, 819, 857, 862, 864, 899], "subdomain": 136, "www": 136, "apex": 136, "microsoft": 137, "team": 137, "screen": [137, 850], "share": [137, 417, 422, 682, 686, 689, 706, 785, 786, 812, 925, 926, 948, 949, 1127], "x11": 137, "reviv": 137, "meh": 137, "updat": 137, "annoy": 137, "re": [137, 955], "regist": [137, 399], "itself": 137, "autostart": 137, "browser": [137, 196], "recommend": [137, 168, 304, 1094, 1115], "deploi": 138, "gener": [138, 142, 152, 161, 165, 170, 197, 204, 207, 212, 214, 220, 239, 241, 245, 251, 254, 258, 260, 261, 265, 272, 274, 279, 360, 489, 530, 533, 537, 655, 656, 658, 659, 664, 711, 864, 871, 898, 933, 934, 958, 959, 960, 961, 962, 987, 1026, 1039, 1115], "public": [138, 191, 424, 531, 785, 786, 810, 811, 871], "repo": [138, 160], "jfasch": [138, 815], "home": [138, 790, 820, 836, 875], "time": [138, 147, 151, 256, 415, 702, 766, 767, 795, 907, 1018], "deploy": [138, 274, 417, 758, 1115], "bigbluebutton": 139, "onlin": [139, 148, 1107], "tl": 139, "dr": 139, "host": [139, 184, 758, 946], "check": [139, 425, 449, 803, 864, 905, 941, 1002, 1022], "els": [139, 207, 214, 220, 230, 260, 279, 333, 357, 358, 359, 536, 551, 841, 858, 871, 955, 991, 994], "traunstein": 140, "via": [140, 141, 299, 864], "zierlersteig": 140, "kaltenbachwildni": 140, "anstieg": 140, "auf": [140, 181], "zierlerberg": 140, "rinn": 140, "abstieg": 140, "grintovec": 141, "plan\u0161arsko": 141, "jezero": 141, "\u010de\u0161ka": 141, "ko\u010da": 141, "anreis": 141, "hinauf": 141, "runter": 141, "zusammenfassung": 141, "brick": 142, "1399": 142, "dell": 142, "xp": 142, "happen": 142, "virtualbox": 142, "secur": [142, 172, 248, 269, 299, 870, 874], "enrol": 142, "machin": [142, 172, 193, 251, 299, 866, 867, 892, 1057, 1063], "owner": [142, 803], "mok": 142, "pair": [142, 627, 869, 871], "stage": 142, "reboot": 142, "diagnost": [142, 862], "crosstool": [143, 945, 946], "ng": [143, 945, 946], "prebuilt": [143, 1083], "clone": [143, 147, 160, 484], "repositori": [143, 147, 316, 484, 494], "releas": [143, 414, 740, 750, 966], "glibc": 143, "version": [143, 411, 414, 417, 627, 655, 888], "gcc": [143, 386, 399, 932], "simplest": [143, 655, 660, 698, 952, 975, 1094, 1100], "stdio": 143, "h": [143, 658, 850], "iostream": 143, "distribut": [143, 1011], "afterword": [143, 635], "schulung": [145, 165], "entwicklung": 145, "beratung": 145, "richtlinien": 146, "ver\u00f6ffentlichung": 146, "kursmateri": 146, "window": [147, 184, 201, 257, 259, 322, 797], "workflow": [147, 194], "conflict": [147, 904, 966], "individu": 148, "languag": [148, 164, 194, 210, 236, 237, 239, 244, 264, 265, 270, 320, 388, 407, 667, 911, 957, 979, 981], "qualivis": [149, 320], "z\u00fcrich": [149, 320], "2013": [149, 320, 1108], "fragen": [149, 182], "antworten": 149, "kursnotizen": 150, "2015": [150, 320], "userspac": [150, 717, 719, 771, 772, 773, 862, 863, 899], "can": [150, 171, 194, 229, 376, 428, 432, 483, 542, 627, 687, 856, 857, 858, 860], "bu": [150, 171, 434, 857, 860, 864], "driver": [150, 179, 250, 320, 735, 736, 754, 862, 1118], "beispiel": [150, 165, 224, 846], "heizungssteuerung": 150, "k\u00f6nnen": [151, 175, 188], "viel": 151, "mutabl": [151, 154, 165, 175, 182, 188, 201, 204, 212, 214, 217, 220, 227, 230, 233, 245, 252, 262, 266, 272, 996, 998], "immut": [151, 154, 165, 182, 188, 201, 212, 217, 220, 227, 233, 242, 249, 252, 266, 540, 996], "kann": [151, 196], "man": [151, 196, 818], "nicht": [151, 165, 175], "oft": 151, "genug": 151, "wiederholen": 151, "hart": 151, "indizieren": 151, "weich": 151, "nettfragen": 151, "shortcut": [151, 974, 1004], "objektorientiert": 151, "date": [151, 197, 256, 307], "delta": 151, "datetim": [151, 170, 191, 197, 252], "bissl": 151, "potschert": [151, 175], "schreiben": [151, 175], "scho": 151, "formen": 151, "represent": [151, 977], "__str__": [151, 972, 977], "subprocess": [151, 230], "enumer": [151, 175, 180, 182, 188, 191, 212, 220, 227, 245, 262], "zip": [151, 191], "comprehens": [151, 175, 197, 204, 207, 212, 214, 220, 224, 245, 251, 252, 254, 952, 958, 1003, 1086], "exec": [151, 217, 233, 241, 245, 272, 956], "eval": [151, 152, 188, 217, 227, 245, 272], "umgebend": 151, "eigen": 151, "json": [151, 173, 180, 196, 197, 207, 224, 227, 233, 241, 242, 277, 1052], "individualtrain": [152, 167, 320], "tage": [152, 320], "beginnend": [152, 320], "inhalt": [152, 155, 929, 1110], "51": 152, "58": 152, "94": [152, 165], "121": 152, "famou": [152, 402], "overload": [152, 210, 220, 241, 276, 505, 531, 538, 545, 685, 975, 977], "getter": [152, 483, 539], "setter": 152, "listcomprehens": 152, "express": [152, 165, 180, 197, 204, 230, 233, 245, 353, 355, 431, 449, 463, 634, 847, 958, 1016, 1078], "global": [152, 165, 175, 233, 339, 345, 366, 368, 382, 419, 512, 513, 514, 543, 544, 545, 876, 951, 997], "scope": [152, 175, 698, 701, 951, 997], "variabl": [152, 175, 188, 191, 201, 204, 212, 220, 227, 230, 242, 262, 266, 297, 325, 339, 342, 345, 366, 368, 374, 393, 449, 513, 540, 544, 670, 699, 790, 876, 905, 906, 913, 986, 997, 1021], "closur": [152, 175, 241, 258, 260, 261, 276, 279, 669, 951, 953, 1086], "between": [152, 548, 1061], "walkthrough": 153, "reduc": [153, 350], "eight": 153, "color": 153, "pil": 153, "numpi": [153, 155, 182, 189, 229, 232, 251, 254, 265, 271, 320, 1056, 1061], "cluster": 153, "excurs": [153, 229, 669], "matplotlib": [153, 182, 201, 233, 271, 1010, 1061], "now": [153, 165], "come": [153, 189, 417, 611, 932, 1056], "let": 153, "kmean": 153, "result": [153, 403, 1071], "properti": [153, 191, 220, 423, 424, 976], "center": 153, "restor": 153, "alpha": 153, "back": [153, 580, 1052], "rgba": 153, "random": [154, 191, 224, 229, 460, 473, 481, 1079], "type": [154, 180, 204, 207, 217, 220, 227, 236, 237, 239, 241, 242, 256, 258, 276, 283, 298, 341, 343, 344, 348, 355, 380, 390, 395, 414, 424, 533, 562, 583, 584, 627, 628, 631, 642, 644, 681, 729, 738, 833, 840, 903, 953, 955, 968, 975, 998, 1063], "except": [154, 191, 207, 210, 217, 220, 232, 233, 241, 251, 254, 258, 259, 276, 313, 505, 552, 553, 621, 670, 677, 701, 955, 1064, 1086], "demonstr": 154, "dict": [154, 204, 212, 214, 220, 227, 974], "access": [154, 193, 333, 386, 387, 531, 539, 547, 613, 709, 742, 771, 772, 773, 969, 976, 1003, 1004], "indic": [154, 182], "slice": [154, 165, 180, 191, 214, 220, 224, 245, 266, 272, 795, 993, 1080, 1082], "protocol": [154, 165, 180, 201, 204, 207, 212, 214, 217, 220, 230, 245, 258, 262, 266, 655, 855, 919, 960, 962], "standardthemen": 155, "hauptthema": 155, "numerik": 155, "lesen": [155, 175], "mat": 155, "l\u00f6sen": 155, "uni": 155, "\u00fcbung": [155, 158, 175], "propos": 156, "posix": [156, 699, 900, 909, 922, 924, 925, 926, 927], "ipc": [156, 157, 320, 922, 924, 925, 926, 927, 1127], "virtual": [156, 229, 250, 515, 516, 517, 602, 604, 605, 729, 791, 795, 857, 925, 1043, 1095, 1096, 1097, 1127], "socket": [156, 858, 881], "applic": [156, 916], "your": [156, 249, 250, 390, 649, 804], "compani": 156, "thought": 156, "handgestrickt": 158, "um": 158, "fallen": 158, "lustvol": 158, "erleiden": 158, "programmier": 159, "baden": [159, 320], "w\u00fcrttemberg": [159, 320], "kursinform": 159, "kursaufbau": 159, "kursverlauf": [159, 167], "hand": 160, "our": [160, 864], "privat": [160, 191, 220, 424, 531, 603, 665, 785, 786, 808, 809], "makefil": [161, 484, 726, 736, 933, 934, 948], "argh": 162, "visual": [162, 189, 205, 403, 418, 1056, 1085, 1095], "studio": [162, 189, 205, 1056, 1085, 1095], "flatpak": 162, "issu": [162, 951], "m": 162, "bei": [164, 175, 320], "firma": [164, 320], "environ": [164, 229, 237, 239, 248, 250, 257, 258, 259, 309, 790, 913, 980, 1043, 1095, 1096, 1097, 1105], "driven": [164, 193, 218, 229, 232, 260, 261, 279, 320, 921, 1131], "dai": [164, 168, 169, 171, 172, 173, 183, 184, 193, 194, 199, 202, 204, 205, 208, 215, 248, 251, 254, 257, 258, 259, 260, 261, 265, 269, 271, 276, 279, 676, 1018, 1113], "advanc": [164, 168, 171, 180, 183, 192, 208, 218, 221, 232, 241, 244, 254, 260, 261, 262, 263, 264, 265, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 320, 388, 1055, 1056, 1121], "18": [165, 167, 193, 212, 232, 244, 245, 259, 275, 302, 320, 946, 1086], "19": [165, 167, 171, 205, 221, 301, 302, 316, 318, 320], "sy": [165, 191, 789, 985], "multilin": [165, 197, 201, 297, 1000], "docstr": [165, 212, 224, 227, 230, 252, 297], "datentypen": [165, 175, 182, 195, 211, 223], "ausflug": [165, 214], "variablen": [165, 175, 182, 195, 211, 214, 223, 233], "deren": 165, "unterbau": 165, "zuweisung": 165, "mit": [165, 175, 180, 193, 320, 846, 1108, 1124], "hilf": 165, "tupl": [165, 170, 175, 180, 182, 188, 191, 201, 204, 207, 212, 214, 220, 224, 227, 230, 236, 237, 239, 242, 245, 252, 262, 266, 283, 296, 297, 627, 676, 681, 988, 996, 1067], "unpack": [165, 170, 175, 180, 182, 191, 207, 212, 224, 230, 236, 237, 239, 242, 252, 283, 296, 297, 627, 676, 944, 1067], "unendlich": 165, "breit": 165, "divis": [165, 175], "floor": [165, 175], "konvertierung": 165, "konstruktoren": [165, 182], "welchen": 165, "typ": [165, 175], "typen": 165, "besser": 165, "laufzeitverhalten": [165, 175], "geeigneter": 165, "datenstrukturen": [165, 175, 176, 196, 214, 1123], "boolean": [165, 175, 201, 204, 212, 214, 220, 224, 227, 347, 431, 989, 1016, 1078], "short": [165, 204, 220, 347, 441, 738], "circuit": [165, 204, 220, 347], "evalu": [165, 204, 220], "warum": [165, 175], "sind": [165, 175], "mehr": [165, 180], "rang": [165, 170, 175, 182, 191, 197, 201, 204, 212, 214, 217, 224, 227, 230, 236, 237, 239, 242, 252, 266, 272, 283, 561, 562, 627, 655, 675, 676, 677, 678, 679, 680, 958, 995, 1010], "foli": 165, "161": 165, "shallow": [165, 214, 996], "deep": [165, 214, 996], "dem": [165, 1124], "deepcopi": 165, "funktionen": [165, 175, 176, 180, 1123], "first": [165, 194, 324, 474, 690, 719, 720, 754, 1095], "gotcha": [165, 736, 766, 920], "paramet": [165, 212, 214, 258, 298, 337, 373, 376, 379, 393, 411, 415, 640, 644, 679, 690, 758, 888, 933, 998, 1071], "90": 165, "ff": 165, "lokal": [165, 175, 233], "92": 165, "uniq": [165, 1038, 1039], "punkt": [165, 175], "zusammengefasst": 165, "hier": 165, "sch\u00f6nere": 165, "al": [165, 175, 224], "comprens": 165, "125": 165, "lesbarkeit": 165, "perform": [165, 188, 401, 677], "review": [165, 194], "pprint": 165, "praktisch": 165, "debug": [165, 414, 756, 954], "datentransform": 165, "127ff": 165, "complet": [165, 505, 818], "collect": [165, 214, 217, 242, 932, 974, 1077, 1091], "namedtupl": [165, 974], "parameter\u00fcbergab": [165, 175], "variabel": 165, "lang": 165, "argumentlisten": 165, "erst": 165, "klass": 165, "weiterf\u00fchrend": [167, 189], "workspac": [168, 169, 171, 173], "core": [168, 205, 248, 933], "special": [168, 842], "tutori": [168, 171, 183, 189, 199, 229, 232, 265, 1056, 1064], "parti": [168, 199], "v": [170, 175, 182, 188, 191, 212, 217, 220, 224, 227, 233, 249, 252, 262, 266, 277, 296, 297, 335, 344, 356, 359, 363, 365, 414, 417, 524, 525, 526, 540, 686, 694, 736, 756, 757, 763, 764, 878, 914, 984, 987, 995, 1006, 1088], "return": [170, 233, 379, 637, 638, 640, 655], "addit": [171, 529, 545, 607, 972], "brought": 171, "thoma": 171, "cloud": [172, 299], "particip": 172, "desk": 172, "interlud": [172, 738], "bloodi": 172, "wild": [172, 221, 276, 279], "watchdog": 172, "support": [172, 184, 630, 754], "25": [173, 183, 192, 199, 210, 215, 226, 268, 269, 276, 277, 278, 279, 320], "grundlegend": [175, 176, 1123], "sprachelement": [175, 176, 1123], "syntax": [175, 182, 188, 220, 230, 252, 266, 297, 670, 679, 984], "semantik": 175, "einr\u00fcckung": 175, "ihren": 175, "\u00e4ndern": 175, "kommentar": 175, "sprach": 175, "standarddatentypen": 175, "elementar": [175, 176, 1123], "beliebig": 175, "gro\u00df": 175, "vergleichsoperatoren": 175, "pr\u00e4zedenz": 175, "vor": 175, "strichrechnung": 175, "modulo": 175, "un\u00e4rer": 175, "negat": [175, 1078], "erzwingen": 175, "auch": 175, "zeichenketten": 175, "raw": [175, 182, 197, 201, 214, 220, 242, 272, 969, 1000, 1051], "f": [175, 197, 212, 230, 272, 1001], "konvertierungen": 175, "pr\u00e4zendenzregeln": 175, "literal": 175, "primit": [175, 693, 958], "konstanten": 175, "operatoren": 175, "ausdr\u00fcck": 175, "operatorrangfolgen": 175, "\u00fcbungen": [175, 1107], "zwei": 175, "vertauschen": 175, "kontrollstrukturen": [175, 176, 195, 211, 212, 223, 1123], "anweisungen": 175, "folgen": 175, "bedingungen": 175, "verzweigungen": 175, "bedingt": 175, "anweisung": 175, "verzweigung": [175, 176, 1123], "geschachtelt": 175, "mehrfach": 175, "fallauswahl": 175, "schleifen": [175, 176, 1123], "z\u00e4hlergesteuert": 175, "kopfgesteuert": 175, "schleif": [175, 180], "fu\u00dfgesteuert": 175, "jf": 175, "continu": [175, 210, 212, 251, 259, 261, 362, 991, 994], "sequenti": [175, 180, 212, 224, 569, 570, 577, 578, 958, 992], "schnell\u00fcbersicht": 175, "sprunganweisungen": 175, "endlosschleifen": 175, "ben\u00f6tigt": 175, "Suche": 175, "eindimensional": 175, "record": [175, 1050, 1052], "tupel": 175, "listen": [175, 180, 214, 297], "sort": [175, 227, 488, 567, 572, 573, 576, 1081], "revers": [175, 574, 575, 592, 593, 594, 975], "stapel": 175, "schlangen": 175, "versuch": 175, "zur\u00fcck": 175, "hybrid": 175, "supergscheit": 175, "methoden": [175, 176, 1123], "prozeduren": [175, 176, 1123], "funktionspoint": 175, "so": [175, 188, 191, 201, 233, 257, 409, 529, 627, 640, 642, 669, 1080], "heisst": [175, 180], "funktionsobjekt": 175, "primzahlenbeispiel": 175, "funktion": 175, "laufzeitfehl": 175, "existiert": 175, "zuweisen": 175, "fehlerfal": 175, "peter": 175, "unterprogramm": 175, "wert": 175, "referenzen": 175, "r\u00fcckgabewert": 175, "oder": [175, 303, 1108], "inner": [175, 951], "standardbibliotheken": 175, "built": [175, 258, 533, 631, 736, 955], "funktionalit\u00e4ten": 175, "struktur": 176, "herdt": [176, 1123], "kapitel": [176, 1123], "recap": [180, 193, 194, 208, 241, 261, 276, 522, 684, 932, 958], "ganz": [180, 212], "kurz": 180, "mehreren": 180, "returnwerten": 180, "bzw": [180, 303], "containerdatentypen": 180, "untypisiert": 180, "l\u00f6schen": 180, "begriff": 180, "zufal": 180, "regular": [180, 193, 194, 230, 233, 245, 847], "hallo": 182, "speicher": 182, "sch\u00fctze": 182, "ich": 182, "davor": 182, "aber": 182, "gemischten": 182, "wiederholung": [182, 217], "objektidentit\u00e4t": 182, "statement": [182, 191, 356, 370, 951, 953, 966, 984, 990, 1065, 1066, 1071, 1074], "operationen": 182, "verloren": 182, "interpol": 182, "mittel": [182, 188], "scipi": 182, "shell": [184, 248, 269, 299, 320, 790, 801, 803, 819, 831, 832, 838, 870, 887, 896, 911, 1109], "script": [184, 269, 320, 865, 896, 963, 982, 1109], "29": [184, 258, 302, 310, 320], "ssh": [184, 248, 269, 299, 307, 865, 868, 869, 870, 871, 872, 873, 874, 875], "assign": [188, 214, 220, 227, 297, 352, 449, 530, 536, 537, 637, 638, 640, 685, 951, 986, 993, 997, 1076], "fun": [188, 227, 241, 986], "arithmet": [188, 193, 212, 224, 297, 325, 346, 375, 449, 463, 522, 545, 558, 559, 563, 566, 975, 987], "complex": [188, 227, 297, 1105], "nur": 188, "sum": [188, 611], "weiter": 188, "dynamisch": 188, "evaluierung": 188, "05": [189, 192, 223, 229, 232, 235, 238, 264, 265, 266, 268, 269, 294, 295, 302, 320], "scienc": [189, 215, 229, 232, 265, 279, 1056], "don": [189, 677, 1056], "batteri": [189, 297, 1002, 1056], "confer": [189, 265, 1056], "talk": [189, 265, 856, 862, 863, 1056], "zipfil": 191, "One": [191, 230, 256, 294, 351, 370, 409, 411, 544, 677, 690, 771, 856, 874, 907, 932, 948], "member": [191, 220, 531, 536, 537, 539, 544, 613, 614, 631], "attribut": [191, 217, 233, 283, 795, 898, 969, 976, 1084], "protect": [191, 603, 677, 748], "posit": [191, 529, 949, 978, 1008], "keyword": [191, 212, 236, 237, 239, 283, 298, 392, 393, 951, 978, 998], "argument": [191, 212, 220, 241, 276, 298, 376, 885, 911, 954, 978, 985, 998, 1008], "mix": [191, 204, 272, 670, 1032, 1033], "yield": [191, 207, 212, 230, 258, 272, 958, 961], "filter": [191, 220, 249, 250, 256, 489, 490, 491, 677, 1078], "nonetyp": [191, 204], "none": [191, 212], "recurs": [191, 378, 537, 634, 709, 820], "fibonacci": [191, 655, 657, 959, 1026], "sever": 191, "same": [191, 513, 538, 544, 669, 997, 1094], "oserror": 191, "errno": [191, 876], "platform": [191, 862], "assert": [191, 233], "assertionerror": 191, "27": [192, 210, 226, 276, 277, 278, 320], "predefin": [192, 370, 1105], "stream": [192, 729, 800, 1006], "pcap": [192, 205, 207, 218, 1086], "syllabu": [192, 205, 1086], "programmieren": [193, 320], "tool": [193, 266, 269, 304, 783, 848, 851, 862, 1120], "massacr": 193, "group": [193, 194, 208, 241, 248, 260, 261, 276, 279, 308, 340, 355, 364, 371, 377, 381, 384, 388, 397, 401, 406, 407, 527, 535, 550, 553, 556, 597, 606, 625, 667, 668, 692, 700, 704, 708, 710, 795, 803, 812, 852, 860, 861, 915], "kick": 193, "encapsul": [193, 395, 535, 701], "flow": [193, 223, 229, 244, 251, 254, 264, 265, 270, 271, 364], "pointer": [193, 194, 210, 236, 237, 239, 257, 259, 283, 372, 373, 375, 377, 393, 505, 522, 537, 541, 542, 558, 559, 560, 562, 563, 566, 586, 627, 642, 682, 683, 684, 685, 687], "standard": [193, 205, 210, 214, 229, 257, 259, 265, 343, 390, 414, 492, 552, 562, 595, 606, 608, 635, 800, 884, 1006, 1056, 1102], "librari": [193, 205, 210, 229, 257, 259, 265, 337, 412, 417, 418, 422, 492, 552, 562, 595, 606, 635, 878, 949, 950, 1056, 1127], "stl": [193, 505, 521, 522, 523, 554, 562, 563, 591], "07": [194, 210, 241, 274, 275, 302, 306, 320], "kid": 194, "recapitul": 194, "some": [194, 212, 217, 256, 259, 269, 670, 701], "jump": [194, 375], "complic": [194, 454, 948], "Be": [194, 428, 432, 433, 537, 542, 596, 688, 693], "toolbox": 194, "databas": [194, 612, 736, 1012, 1014, 1049, 1068, 1069, 1071], "gtest": [194, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "smart": [194, 210, 236, 237, 239, 259, 283, 505, 682, 683, 684, 685], "polymorph": [194, 476, 477, 478, 479, 480, 481, 482, 485, 602, 691], "datenbank": 196, "showcas": 196, "full": 196, "kommt": 196, "db": 196, "aufgab": 196, "formulieren": 196, "damit": 196, "dies": 196, "http": 196, "verbindung": 196, "client": [196, 465, 1075], "schicken": 196, "jetzt": 196, "schickman": 196, "weg": 196, "vom": [196, 320], "server": [196, 1075], "php": 196, "j": 196, "empfangen": 196, "nun": 196, "muessen": 196, "verwandlen": 196, "liter": [197, 297, 449, 701, 702], "quot": [197, 201, 227, 1067], "friend": [197, 697], "sinc": [197, 230, 236, 237, 239, 283, 544, 1001], "pars": [197, 985, 1008, 1034], "sap": [198, 251, 253, 254, 255, 256, 286, 320], "export": 198, "requir": [198, 229, 276, 304, 415, 427, 448, 451, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 649, 885, 892, 1012, 1013, 1034, 1043, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053], "solut": [198, 367, 389, 412, 421, 427, 428, 429, 432, 433, 438, 447, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 537, 564, 594, 631, 633, 640, 664, 665, 674, 795, 814, 873, 875, 879, 948, 950, 966, 1065, 1096], "terminologi": [201, 269, 792, 930, 1063], "31": [202, 210, 218, 320], "numer": 202, "ai": 202, "mountain": 202, "over": [204, 212, 214, 709, 864, 994, 995], "io": [204, 220, 248, 252, 398, 742, 743, 798, 898], "common": [204, 399, 411, 577, 959, 968], "wtf": [204, 882, 930], "creativ": [207, 784, 972], "shift": [207, 351, 545], "sampl": [207, 690, 760, 815, 1013, 1034, 1055, 1086, 1093, 1118], "hmmm": 208, "02": [210, 215, 229, 248, 314, 320, 797], "undefin": [210, 997], "behavior": [210, 679], "again": [210, 258, 269, 539, 626, 838, 975, 1109], "26": [210, 240, 247, 260, 261, 262, 263, 280, 282, 302, 320], "repeat": [210, 830], "quickli": 210, "algorithm": [210, 227, 251, 259, 283, 375, 488, 505, 522, 557, 558, 562, 563, 572, 576, 1061, 1063], "functor": [210, 505, 570, 669, 671, 672, 690], "unifi": 210, "model": [210, 1061, 1063], "uml": [210, 441], "todai": [210, 951], "associ": [210, 354, 441, 581, 582], "dynam": [210, 241, 260, 261, 262, 279, 283, 382, 509, 510, 511, 563, 596, 597, 714, 744, 745, 949, 969, 978], "alloc": [210, 399, 519, 564, 589, 590, 597, 729, 752, 894, 958], "week": 210, "zahl": 212, "miscellanea": 212, "brace": [212, 236, 237, 239, 283, 629, 630, 631, 632, 1078], "singl": [212, 412, 437, 874, 932, 1100], "hour_of_dai": 212, "membership": [212, 992], "best": 212, "intro": [214, 248, 302, 521, 522, 523, 898, 952], "doc": 214, "ident": [214, 277], "datenypen": 214, "libarari": 214, "chainmap": 214, "dequ": 214, "suchalgorithmen": 214, "pitfal": [214, 257, 260, 298, 533, 602, 627, 655, 672], "fromkei": [214, 227], "join": [214, 220, 1002, 1029], "lstrip": [214, 294], "rstrip": [214, 294], "sequentiel": 217, "konstant": 217, "suchzeit": 217, "metaprogram": 217, "everywher": [217, 233, 537, 956], "defaultdict": [217, 242], "hello": [220, 230, 324, 659, 736, 737, 982], "world": [220, 324, 331, 736, 737, 982], "blahblah": [220, 224, 227, 230, 562, 981], "mqtt": [220, 1050, 1075], "commandlin": [220, 248, 288, 293, 376, 404, 411, 818, 873, 896, 930, 985, 1008], "lifetim": [220, 339, 368, 672, 686, 694, 1068], "preview": [220, 422], "explicit": [220, 333, 529, 541, 632, 670, 672, 685, 698, 966], "max": 220, "iteratoren": 220, "generatoren": 220, "ordereddict": 220, "duck": [220, 236, 237, 239, 276, 283, 968], "resolut": 220, "order": [220, 513, 955, 975], "mro": 220, "super": 220, "__bases__": 220, "__mro__": 220, "self": [220, 537, 970], "call": [220, 369, 373, 399, 403, 405, 505, 761, 878, 884, 913, 919, 978], "mangl": [220, 538], "udemi": 220, "claus": [220, 260, 279, 955], "lambda": [220, 236, 237, 239, 266, 283, 627, 668, 669, 670, 671, 690, 1086], "oppos": 220, "20": [221, 235, 239, 257, 259, 270, 271, 272, 283, 294, 302, 320, 946], "part": [221, 1102], "discuss": [223, 260, 261, 308, 333, 335, 699, 761, 766, 774], "chart": 223, "interact": [224, 272, 982, 1033], "1st": 224, "explan": 224, "preced": [224, 227, 354, 987], "float": [224, 227, 987], "einschub": 224, "vergleich": 224, "filterketten": 224, "zen": 224, "datensatz": 224, "notat": 224, "letzt": 224, "letzten": 224, "infinit": [227, 959], "long": [227, 627], "comparison": [227, 529, 576, 709, 783, 975, 987], "digit": [227, 302, 1023], "english": [227, 304, 1023], "determin": [227, 804, 1020, 1030, 1031], "maximum": [227, 1020, 1030, 1031], "two": [227, 374, 467, 468, 529, 548, 632, 926, 1020, 1021, 1030, 1031], "out": [227, 260, 261, 434, 532, 561, 562, 920, 934, 951, 993], "duplic": [227, 412, 554, 887], "control": [229, 244, 251, 254, 264, 265, 270, 271, 434, 655, 855, 863], "nest": [230, 365, 378], "onli": [230, 256, 375, 642, 690, 731, 1025], "itertool": 230, "chain": [230, 761], "destructor": [230, 513, 519, 534, 599, 604, 684], "prient": 232, "next": [232, 398, 663, 1100], "standesregist": 232, "sqlite3": [232, 415, 1012, 1071], "xml": [232, 1084], "tree": [232, 731, 758, 796, 822, 829, 867, 874, 913], "projektabschlusstag": 232, "id": [233, 261, 795, 815, 875, 901, 913, 1108], "person": [233, 440, 639], "anyth": 233, "defin": [233, 421, 533, 670, 955], "own": [233, 411, 639, 649, 795], "lookup": [233, 497, 498], "vorbesprechung": 235, "legend": 235, "neuerungen": 235, "seit": 235, "2011": [235, 236, 237, 239, 320], "ausblick": 235, "thank": [236, 237, 239, 283], "you": [236, 237, 239, 283, 642], "readablil": [236, 237, 239, 283], "writabl": [236, 237, 239, 283, 885], "err": [236, 237, 239, 283, 586, 676], "bind": [236, 237, 239, 283, 676, 681, 689, 690, 1071], "auto": [236, 237, 239, 283, 627, 642, 675, 676, 905, 1094], "without": [236, 237, 239, 283, 543, 564, 638, 894], "simpli": [236, 237, 239, 283, 875], "deserv": [236, 237, 239, 283], "ag": [236, 237, 239, 283, 617], "overrid": [236, 237, 239, 283, 674], "delet": [236, 237, 239, 283, 510, 579, 665, 818], "strongli": [236, 237, 239, 283, 628], "enum": [236, 237, 239, 283, 391, 628, 726], "deleg": [236, 237, 239, 283, 633], "nullptr": [236, 237, 239, 283, 641], "rvalu": [236, 237, 239, 636, 639, 640], "skeleton": [237, 239, 257, 259, 547, 785, 786], "perfect": [239, 349, 391, 689], "view": [239, 630, 677, 679, 680, 722, 784], "design": [240, 258, 260, 261, 276, 320, 337, 394, 409, 433, 437, 447, 600, 1116], "architectur": [240, 320, 409, 627, 666, 758], "pattern": [240, 258, 260, 261, 320, 433, 447, 959, 1116], "mondai": 240, "tuesdai": 240, "wednesdai": 240, "front": [241, 260, 279, 969], "seri": [241, 244, 264, 265, 270, 271, 505, 1042, 1049, 1077], "piec": 241, "go": [241, 887, 1067], "kickoff": [241, 260, 261, 276], "livehack": [241, 250, 411, 434, 636, 721, 997, 1064, 1088, 1095], "Such": [242, 607, 640], "noob": 244, "wsl": [248, 257, 259, 797, 946], "quick": 248, "permiss": [248, 269, 803, 805, 806, 807, 813, 817, 836, 867], "uart": [248, 789], "susi": 248, "untold": [248, 251, 257, 258, 261], "whet": [249, 250], "appetit": [249, 250], "panda": [249, 251, 252, 254, 256, 258, 271, 1061, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083], "regex": 249, "pipelin": 250, "categori": 250, "payment": 250, "select": [250, 256, 258, 855, 862, 922, 1077, 1078, 1080, 1082, 1100], "uncategor": 250, "dataset": [251, 255, 256, 1060, 1062], "origin": [251, 254, 554, 671, 672, 768, 1067], "automat": [251, 254, 274, 345, 368, 664, 1115], "cleanup": [251, 254, 766, 777], "conversiosn": 252, "outlook": [254, 283], "specif": [254, 907, 1044], "usecas": 256, "drop": [256, 429, 677], "column": [256, 1077, 1078, 1080, 1081, 1082, 1083], "nan": 256, "datafram": [256, 1061, 1077, 1081], "isna": 256, "to_datetim": 256, "dated": 256, "workabl": 256, "usag": [256, 261, 378, 382, 405, 421, 425, 470, 485, 531, 568, 569, 575, 602, 630, 634, 642, 686, 687, 688, 717, 761, 801, 840, 857, 864, 888, 932, 1010], "modifi": [256, 386, 393, 470, 904, 966, 996, 1083], "increas": 256, "price": 256, "Of": [256, 265, 276, 412, 483, 529, 561, 562, 602, 640, 672, 677, 687, 689, 699, 705, 706, 707, 785, 786, 793, 885, 896, 920, 934, 955, 958, 978, 1077, 1083], "particular": 256, "store": [256, 386, 434, 904, 966], "readabl": [256, 389, 701, 890], "combin": [256, 352, 448, 449, 462], "prefer": [257, 259], "ubuntu": [257, 259, 946], "under": [257, 259, 820, 880, 953], "unsupport": 257, "heavi": [257, 259, 794], "weight": [257, 259], "resourc": [257, 304, 537, 597, 685, 698, 754], "r": [257, 837, 874], "littl": [257, 360, 411, 981], "concurr": 257, "far": [257, 694, 1063], "fact": [258, 740, 802, 969, 972], "fixtur": [258, 486, 709, 1093, 1094, 1104, 1105, 1106], "omin": [258, 954], "warm": 259, "resolv": 259, "cont": 259, "d": [259, 434], "insid": [260, 261, 539, 544, 639, 640], "construct": [260, 279, 974, 991], "emphasi": [260, 279], "recoveri": [260, 261, 279], "broader": 260, "sens": 260, "morn": [261, 265, 269, 271], "pytest": [261, 1092, 1093], "awaken": 265, "bash": [269, 320, 838, 1109], "bourn": [269, 838, 1109], "inspect": [269, 845, 848], "wakeup": [269, 271, 918, 920], "redirect": [269, 798, 799, 800, 801, 824, 837, 887], "pipe": [269, 679, 784, 798, 799, 801, 802, 849, 851], "archiv": [269, 780, 781, 783, 784, 946, 947, 950], "compress": [269, 780, 781, 783, 784], "network": [269, 451, 752, 753, 856, 881, 1130], "least": [269, 1100], "day2": 271, "interpret": [272, 403, 435, 448, 449, 462, 463, 1033], "len": 272, "abl": 272, "callabl": [272, 690], "summer": [276, 305], "sandbox": 276, "equal": [277, 483, 529, 545, 546, 547, 548, 549, 569, 975], "multiprocess": 279, "idea": 279, "constexpr": [283, 634], "constinit": 283, "constev": 283, "semant": [283, 636, 637, 638, 639, 640, 926], "erasur": 283, "toolcas": [283, 645, 646, 647], "versu": [283, 949], "static": [283, 368, 392, 483, 543, 544, 948, 949, 950, 973], "begin": [285, 323, 677], "checker": 287, "blinklicht": [288, 289, 290, 291], "electron": [288, 855], "aspect": 288, "circuitri": 288, "header": [288, 367, 413, 419, 544, 862, 1045], "pinout": [288, 862], "unittest": [291, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1131], "ece19": 292, "g2": [294, 786], "big": [294, 320, 746], "swoop": 294, "size": [294, 343, 502, 652, 834], "chunk": 294, "line": [294, 338, 370, 532, 801, 818, 984, 1025, 1036, 1040], "str": [294, 977], "byte": 296, "btw": 297, "wertebereich": 297, "sidenot": [298, 998], "pure": [298, 602, 604, 998], "beauti": [298, 405, 789, 864, 998], "login": [299, 793, 865], "formalit\u00e4ten": 300, "ec": [301, 316, 318, 785, 786], "daili": 302, "org": 302, "pass": [302, 542], "fail": [302, 889, 1093, 1100, 1102], "reiter": 302, "argpars": [302, 985, 1008], "onc": 302, "deutsch": [303, 320], "lehrinhalt": 303, "lernergebniss": 303, "lv": 303, "empfohlen": [303, 1109, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "verpflichtend": 303, "fachliteratur": 303, "lernressourcen": 303, "instrument": 303, "art": 303, "vermittlung": 303, "voraussetzungen": 303, "begleitbedingungen": 303, "pr\u00fcfungsmethod": 303, "beurteilungskriterien": 303, "mode": [304, 414, 803, 855, 888, 982, 1006], "deliveri": [304, 929, 930], "co": 304, "requisit": 304, "assess": 304, "criteria": [304, 914], "whose": 306, "fault": 306, "newcom": 307, "task": [308, 916], "jjjj": 310, "futur": [311, 701], "sidewai": [311, 544, 690, 701, 954, 959], "bisher": 320, "gehalten": 320, "entwickl": 320, "fortgeschritten": [320, 1111], "wiener": 320, "neustadt": 320, "einf\u00fchrung": [320, 1110, 1112, 1119], "ober\u00f6sterreich": 320, "pictur": [320, 746], "obersteiermark": 320, "korn": 320, "salzburg": 320, "ausgew\u00e4hlt": 320, "themen": 320, "2018": 320, "raum": 320, "n\u00fcrnberg": 320, "oberb\u00fcren": 320, "schweiz": 320, "2017": 320, "m\u00fcnchen": [320, 1108], "lowlevel": 320, "refresh": 320, "programmiererstandpunkt": 320, "2016": 320, "wien": 320, "workshop": 320, "bodenseo": 320, "hemmenhofen": 320, "bodense": 320, "systemnah": 320, "2014": 320, "mathia": 320, "kettner": 320, "siemen": 320, "braunschweig": 320, "intermedi": [320, 460, 951, 968], "scratch": [320, 1108], "lpd": 320, "hannov": 320, "unter": 320, "k\u00f6ln": 320, "projektverwaltung": 320, "subvers": [320, 1125], "lka": 320, "niedersachsen": 320, "konfigur": 320, "gnu": [320, 403, 932, 1120], "make": [320, 417, 484, 626, 665, 742, 785, 786, 933, 934, 1120], "2012": 320, "hamburg": 320, "fehlerdiagnos": 320, "polizei": 320, "stia": 320, "admont": 320, "bi": 320, "2010": 320, "softwareentwicklung": 320, "darmstadt": 320, "ulm": 320, "bundeswehr": 320, "wildflecken": 320, "cool": [323, 1001], "gui": 323, "Their": [323, 343], "hobbi": 323, "histori": [323, 528, 626, 722, 926, 951, 981, 1060], "second": [325, 327], "fahrenheit": [326, 328, 330, 457], "tabl": [326, 328, 330, 483, 975], "simplif": 327, "constant": [329, 344, 369, 399, 460], "preprocessor": [329, 369, 370], "macro": [330, 369, 370, 419, 717, 738], "outsid": 331, "cat": [331, 843], "poor": [331, 332], "wc": 332, "definit": [333, 335, 337, 345, 363, 365, 366, 369, 421, 544, 627, 717, 918, 995], "memset": 333, "histogram": 334, "nonsens": 335, "signatur": 335, "declar": [335, 336, 365, 366, 367, 544], "mistak": 337, "stdin": [338, 851, 865], "variant": [343, 432, 438, 627, 703, 926], "qualifi": 343, "width": [343, 375, 549, 562, 863, 993], "escap": [344, 1000], "logic": 347, "implicit": [348, 687], "sign": 348, "truncat": [348, 894], "propag": 348, "unsign": 348, "compil": [348, 365, 370, 386, 387, 412, 413, 414, 530, 533, 537, 666, 687, 738, 758, 932, 935, 944, 948], "warn": [348, 354, 370, 908, 930], "forc": 348, "cast": 348, "increment": [349, 562, 655, 966], "decrement": [349, 562], "confus": [349, 987, 1078], "manipul": [351, 687, 894, 930], "bitwis": [351, 1078], "AND": 351, "OR": 351, "xor": 351, "right": [351, 1037], "invert": [351, 1077], "complement": 351, "summari": [354, 529, 690, 758, 784, 949, 969, 1080, 1082], "true": [357, 432, 542, 1081], "fals": 357, "truth": 357, "option": [357, 404, 419, 420, 421, 784, 818, 820, 840, 847, 862, 874, 1067], "matter": 358, "distinct": 359, "purpos": [360, 898], "closer": 360, "comma": 360, "infam": 360, "idiom": 360, "bodi": 361, "goto": 363, "label": [363, 1082], "monolith": [365, 412, 434, 487], "separ": [365, 366, 412, 434, 699, 842, 948], "visibl": [368, 392], "includ": [369, 423, 1002], "replac": [369, 472], "inlin": [369, 399, 532, 544], "guard": 369, "rule": [370, 409, 530, 533, 544, 632, 640, 677, 796], "span": 370, "stringif": [370, 977], "token": 370, "address": [372, 729, 772, 795, 862, 916, 1078], "arbitrari": [375, 562, 954, 978], "see": [376, 789, 794, 795, 800, 801, 880, 881, 882, 884, 911, 914, 918, 920, 999, 1063], "struct": [378, 379, 394, 529, 618, 681], "typedef": 380, "alia": 380, "singli": 383, "volatil": [385, 819], "lie": 385, "valid": 385, "handler": [385, 929, 930], "intrins": 386, "atom": [386, 696, 701, 756, 757, 761, 762, 777, 903], "builtin": 386, "align": 387, "unalign": 387, "pad": 387, "saniti": [389, 397, 411], "readabilti": 389, "shoot": 389, "offens": 389, "unobvi": 389, "ambigu": [389, 395, 632], "smell": 389, "know": 390, "size_t": 390, "discret": 391, "tradit": [391, 409, 978], "approach": [391, 419, 420, 421], "wishlist": 391, "close": [391, 437, 682, 926], "somewhat": 392, "contriv": 392, "hoorai": 392, "correct": [393, 540, 674], "const": [393, 502, 519, 539, 540, 542, 614, 615, 627, 642, 676, 681], "non": [393, 476, 477, 478, 479, 480, 481, 482, 519, 539, 1100], "good": [394, 419, 420, 529, 544, 562, 631, 640, 649, 650, 677, 679], "old": [394, 544, 562, 627, 640, 649, 650, 679], "c99": 394, "explict": 395, "safeti": [395, 411, 1064], "scheme": 395, "artifici": [395, 1057], "valgrind": [396, 510], "action": [396, 930], "optim": [398, 399, 400], "bound": [398, 399, 510, 914], "unnecessari": 399, "peephol": 399, "subexpress": 399, "elimin": [399, 687, 1025], "strength": 399, "reduct": 399, "fold": 399, "invari": 399, "unrol": 399, "tail": [399, 849], "cpu": [399, 795, 914, 920], "cach": [400, 421, 677], "multidimension": 400, "thrash": 400, "profil": [402, 403, 405, 406], "donald": 402, "knuth": 402, "toni": 402, "hoar": 402, "larri": 402, "wall": 402, "practic": 402, "brian": 402, "w": 402, "kernighan": 402, "rob": 402, "pike": 402, "gprof": 403, "flat": 403, "callgrind": 404, "analysi": 404, "per": [404, 726, 766, 1105], "kcachegrind": 404, "oprofil": 405, "much": [405, 420, 671, 953], "wide": 405, "offlin": 405, "graphic": 405, "accomplish": 409, "disclaim": [409, 797], "principl": [409, 437], "yagni": 409, "uncl": 410, "bob": 410, "typic": [411, 796, 900, 916], "bookkeep": 411, "effort": 411, "spaghetti": 411, "request": [411, 717, 719, 738, 740, 898], "concaten": [411, 1076], "input": [411, 800, 958, 1061], "yyyi": 411, "mm": 411, "where": [411, 417, 794, 932], "testabl": 411, "explicitli": [411, 670, 687], "categor": 411, "net": 411, "place": [411, 488, 533, 574, 785, 786, 996], "overengin": [411, 544], "boilerpl": [412, 671, 754], "execut": [412, 418, 803, 949, 955, 963, 983, 1032, 1100, 1102], "consist": [412, 729], "paus": 414, "diagram": 414, "cmake_build_typ": 414, "k": [414, 1058], "printf": [414, 531], "popular": [414, 790], "find_packag": 415, "prefix": [417, 954], "target": [417, 418, 420, 423, 424, 486, 892, 933, 1115], "runpath": 417, "abi": 417, "blacklist": [419, 420], "flag": [419, 608, 744, 884, 1001], "libhello": 419, "bad": [419, 420, 677, 727], "push": 420, "target_compile_definit": 420, "backlist": 420, "availablil": 420, "use_blacklist": 421, "normal": 422, "subdirectori": 423, "reorgan": 423, "i2c": [427, 862, 864], "subhierarchi": 427, "instanti": [427, 434, 583, 644, 724], "adapt": [428, 434, 443, 448, 450, 457, 462, 690], "must": [428, 891], "adapte": 428, "asensor": 428, "real": [428, 536, 627, 688, 815], "measur": [428, 471, 702, 918, 920], "motiv": [429, 432, 448, 449, 545, 628, 631, 633, 642, 644, 669, 675, 778, 960, 970, 976], "insert": [429, 495, 496, 579, 580, 583, 584, 585, 619, 689, 705, 706, 746], "bulk": 429, "6a": 429, "initializer_list": [429, 630, 632], "socialdb": 430, "composit": [431, 441, 445, 459, 709], "filesystem": [431, 709, 926], "thermomet": [431, 451, 452, 465, 466, 485], "aggreg": [432, 441, 631], "conret": 432, "realiz": 432, "situat": [432, 875], "constantsensor": 432, "decoratedconstantsensor": 432, "randomsensor": [432, 473], "decoratedrandomsensor": 432, "verifi": [432, 830, 864, 866, 1061], "still": [432, 627, 953, 958], "hold": [432, 974], "studi": [434, 675, 676, 943], "heat": 434, "pull": 434, "logger": 434, "dbuslogg": 434, "dbusvaluestor": 434, "either": 434, "stop": [434, 685], "help": [434, 818, 850, 1088, 1095], "observ": [436, 464, 960], "which": [437, 891, 932], "liskov": 437, "substitut": [437, 542], "segreg": 437, "invers": [437, 919], "proxi": [438, 448, 451, 452, 462, 465, 466], "foundat": 439, "hierarchi": [439, 552, 796, 955], "hypothet": [439, 975], "singleton": [440, 453, 454, 455, 467, 468, 469], "connector": 441, "uniniti": [449, 542], "round": [452, 466], "flexibl": [453, 454, 467, 468], "strict": [454, 468], "inflex": [455, 469], "i2csensorfactori": 456, "concret": [456, 467, 468], "i2csensorfactory_vendor1": 456, "stub": [465, 765], "socialinsur": [467, 468], "oegk": [467, 468], "sv": [467, 468], "introduc": [470, 531, 677], "relationship": [470, 604, 605, 1061], "onewir": [470, 486, 487, 864, 892], "firstnam": 470, "lastnam": [470, 620, 622], "w1sensor": [470, 487], "answer": [470, 669], "try": [474, 552, 685, 955], "ledstripedisplay_nopoli": 476, "cover": [476, 477, 478, 479, 480, 481, 482, 485], "hysteresis_nopoli": 477, "averagingsensor_nopoli": 478, "constantsensor_nopoli": 479, "mocksensor_nopoli": 480, "randomsensor_nopoli": 481, "mock": 482, "shape": [483, 818], "procedur": 483, "circl": 483, "area": [483, 549], "squar": 483, "massag": 484, "sub": 484, "notfound": 486, "find_is_const": 486, "isol": [486, 1068, 1105], "realiti": 486, "pc": 486, "greater": 490, "odd": 491, "overwrit": 495, "sunni": [496, 498, 501, 885, 889, 890, 891], "uniquifi": 503, "transcript": 505, "malloc": 510, "free": 510, "mismatch": [510, 875], "across": 513, "ownership": [518, 519, 520, 687, 803], "raii": [518, 519, 520, 698], "dealloc": 519, "naiv": [522, 543, 594, 774, 929, 959, 1077], "ol": [529, 676], "look": [529, 880, 881, 882], "distanc": [529, 548], "length": 529, "manual": [530, 533, 537, 690, 818, 878, 896, 899, 960], "specifi": [531, 885], "otherwis": 531, "lifecycl": 534, "dragon": [537, 693], "memberwis": 537, "straighforward": 537, "correctli": 537, "underli": [538, 628], "mechan": 538, "just": 538, "pollut": 540, "hidden": [541, 840], "cannot": 542, "easili": 542, "odr": 544, "litt": 544, "defnit": 544, "ostream": [545, 546, 547, 548, 549], "cout": 545, "cuboid": 546, "upon": [546, 548, 549], "point3d": [546, 548], "surfac": 546, "volum": [546, 946], "unari": [547, 548], "rectangl": [548, 549], "coordin": [548, 549], "absolut": [548, 709, 842, 1055], "height": 549, "catch": [552, 955], "throw": 552, "spirit": [562, 686, 687, 688], "pre": [564, 631], "destin": [564, 885], "back_insert_iter": 564, "binary_search": 567, "intellig": [567, 573, 962, 1057], "find_if": [570, 620], "customiz": 570, "for_each": 571, "lower_bound": 573, "reverse_copi": [575, 594], "characterist": [577, 580], "modif": [580, 948], "fill": [583, 1071], "definin": 584, "subscript": 585, "eras": 586, "multimap": 588, "deriv": [598, 599], "larger": [602, 950, 958], "want": [602, 627, 638, 642, 665, 726, 731, 889, 972], "substr": [607, 1002], "paint": 608, "american": 608, "onto": 608, "moodl": [609, 791, 805, 806, 831, 938], "quiz": [609, 791, 805, 806, 831, 938], "cin": 611, "n": 617, "year": 617, "transform": [618, 690, 706, 958], "wrong": [621, 701, 885], "great": [626, 916], "around": [627, 655], "school": 627, "item": [627, 689, 705, 706, 707, 953, 959], "inevit": 627, "union": [627, 703], "consider": [627, 916], "uniform": 629, "implementor": 630, "direct": [630, 729], "inconsist": 631, "heap": 631, "refus": 631, "narrow": 631, "mess": [632, 1072], "realist": [632, 956, 1093], "int": [632, 911], "nicolai": 632, "josutti": 632, "complain": 632, "said": 635, "guidelin": 635, "well": 635, "smartptr": 637, "lvalu": [640, 689], "wish": [640, 968], "theori": 640, "Ones": 640, "sai": [642, 820], "decai": 642, "chosen": 644, "rescu": [644, 669, 691, 934, 954, 975, 1083], "syntact": [644, 954], "variat": [644, 676, 681, 758], "conceptless": [645, 646], "fulfil": 649, "has_siz": 649, "index_returns_doubl": 649, "func": 650, "ret": 653, "doubl": 653, "foreword": 655, "prototyp": 655, "examp": 655, "explain": 655, "drive": [655, 855], "anatomi": [655, 736], "resum": 655, "suspens": 655, "caller": 655, "co_yield": 655, "mimick": 655, "fibo": 656, "suspend": [661, 662, 663], "decis": [666, 914], "cleanli": 666, "captur": [669, 670, 672], "care": 669, "handwritten": [671, 672], "proggi": 671, "morph": 671, "possibl": 672, "temporari": [672, 953, 1093], "made": 672, "veri": [674, 1084], "hard": [674, 839], "aris": 674, "gool": 676, "prevent": [676, 687], "accident": [676, 706], "dangl": 677, "easi": [677, 694], "constraint": 677, "dogmat": 677, "sigh": 677, "storag": [679, 907], "abbrevi": 679, "avail": [679, 717], "compat": 681, "unique_ptr": [683, 686, 687], "shared_ptr": [683, 686, 706], "handwrit": 685, "ctor": 685, "auto_ptr": 685, "mayb": 685, "uniqu": [686, 707], "But": [686, 889], "juggl": 686, "make_shar": 686, "cyclic": 686, "chanc": 687, "leakag": 687, "keystrok": 687, "make_uniqu": 687, "acknowledg": 687, "prove": 687, "weak_ptr": [688, 706], "borrow": 688, "invalid": 688, "univers": 689, "dual": 689, "bag": [689, 705, 706, 707], "null": 690, "pointlessli": 690, "hardcod": [690, 722], "placehold": 690, "classic": 691, "upsid": 691, "technic": 691, "downsid": 691, "joinabl": 694, "detach": [694, 901], "cornercas": 694, "recursive_mutex": 697, "timed_mutex": 697, "recursive_timed_mutex": 697, "lock": [698, 701, 750, 763], "unlock": [698, 763], "consid": 698, "acquisit": [698, 1042], "lock_guard": 698, "condition_vari": 699, "safe": [699, 930], "predic": [699, 905], "concern": 699, "promis": 701, "chrono": [701, 702], "utterli": 701, "becom": [701, 950], "readi": 701, "minim": 701, "pro": 701, "clock": 702, "sleep": [702, 756, 761, 762], "rel": [709, 842, 963], "compon": 709, "creation": [709, 790, 901, 902], "create_directori": 709, "entri": 709, "classif": 709, "is_xxx": 709, "directory_entri": 709, "modern": [713, 714, 715, 1113], "hook": 716, "necessari": 716, "ioctl": [716, 717, 719, 738, 771, 884], "vtabl": 717, "kernelspac": 717, "_io": [717, 738], "major": [721, 722], "minor": [721, 722], "space": [722, 772, 791, 794, 795, 916], "hair": 726, "pretti": 726, "wswitch": 726, "dma": [729, 730, 754], "physic": 729, "scatterlist": 729, "sync": 729, "when": 731, "explod": 731, "loadabl": 736, "init": [736, 754, 796, 1108], "exit": [736, 865, 901, 911], "unload": 736, "raspi": [738, 739, 875], "legaci": [738, 1028], "api": [738, 768, 900, 919], "my_activate_gpio": 738, "servic": [740, 796, 1075], "routin": [740, 754], "reserv": 742, "kmalloc": [744, 745, 761], "doubli": [746, 747], "node": [746, 887], "empti": [746, 837, 969, 1025], "consequ": 748, "rt": [750, 751], "mutual": [750, 763], "exclus": [750, 763], "registr": 752, "layer": 752, "util": [752, 857], "pci": [754, 755], "foremost": 754, "probe": 754, "bar": 754, "rasperri": 758, "crossdev": 758, "artifact": [758, 1058], "bootload": 758, "jjj": 759, "mainten": 760, "spinlock": [761, 763, 764], "spin_lock": 761, "irq": 761, "spin_lock_irqsav": 761, "spin_unlock_irqrestor": 761, "ah": [761, 1072], "bulletproof": 763, "dup": 765, "fork": 765, "timestamp": 766, "defer": [766, 777], "jiffi": 768, "wheel": [768, 1011], "get_one_ev": 771, "copy_to_us": 771, "noth": 774, "o_nonblock": 774, "wake": 775, "workqueu": [777, 778, 779], "did": 777, "destroi": [778, 1095], "gzip": 782, "tar": 784, "etiquett": 784, "Being": 784, "g1": 785, "lot": [785, 786], "precondit": [785, 786], "credenti": [785, 804], "backup": [785, 786, 820], "busi": 786, "ok": [789, 911], "serial": 789, "pseudo": 789, "partit": 789, "proc": 789, "authent": [793, 871], "prompt": 793, "verif": [793, 1044], "success": 793, "imperson": 793, "uid": [795, 814, 815], "parent": [796, 913], "child": 796, "subsystem": 797, "0": [797, 911, 1068, 1108], "stdout": [801, 851, 865, 887], "stderr": 801, "trick": [801, 1000], "teacher": 803, "constel": 803, "root": [803, 815], "octal": 803, "tune": [803, 918, 1067], "setuid": [814, 815], "passwd": [814, 834, 890, 1034], "sudo": 814, "password": [814, 1022], "chmod": [814, 983], "toi": 814, "effect": [815, 930, 969], "ugli": 816, "sticki": 816, "umask": 817, "edit": 818, "tabul": 818, "filenam": 818, "bashrc": [819, 820], "cp": 820, "similar": 820, "its": [820, 1067], "pwd": 821, "cd": 821, "mkdir": [827, 837], "funni": 828, "dev": 833, "touch": 837, "rm": 837, "rmdir": 837, "renam": 841, "mv": 841, "somewher": 841, "cut": [844, 993], "durchsuchen": 846, "optionen": 846, "verkn\u00fcpfungen": 846, "grep": 847, "less": [850, 951, 975], "brushless": 855, "motor": 855, "speed": 855, "esc": 855, "fwd": 855, "rev": 855, "calibr": 855, "datagram": 856, "exchang": 856, "packet": 856, "vcan": 857, "frame": [858, 1076], "mcp2515": 859, "schemat": 859, "solder": 859, "spi": 859, "lm73": 862, "slave": [862, 864], "master": [862, 864], "enabl": [862, 864], "bcm2835": 862, "datasheet": 862, "connect": [862, 881, 1071], "i2cdetect": 862, "detect": 862, "hwmon": [862, 864], "monitor": [862, 864], "pwm": 863, "pca9685": 863, "puls": 863, "wire": [863, 864], "ds18b20": 864, "alter": 864, "w1": 864, "attach": 864, "pin": [864, 898], "ds2482": 864, "800": 864, "channel": 864, "announc": 864, "hotplug": 864, "lm": 864, "caveat": [864, 1068], "topologi": 864, "symptom": 864, "statu": [865, 901, 911], "adjust": [867, 944], "wear": 871, "admin": 871, "hat": 871, "scp": 874, "sshf": 875, "mount": 875, "logdata": 875, "unmount": 875, "fusermount": 875, "umount": 875, "helper": [876, 1078], "simplic": [880, 881, 882], "watch": 880, "strace": 880, "supervis": 880, "descriptor": [884, 887, 894], "filedescriptor": 884, "offset": [884, 894], "lseek": 884, "hole": 886, "o_creat": 888, "bogu": 888, "o_excl": 889, "alreadi": 889, "o_rdonli": 890, "even": [890, 891, 1017], "o_wronli": 891, "writeabl": 891, "implicitli": 891, "scatter": 894, "gather": 894, "retriev": 896, "wise": 897, "legal": 900, "pthread_join": 901, "synchron": [903, 929], "win32": 905, "reset": 905, "trylock": 910, "islock": 910, "argc": 911, "char": 911, "argv": [911, 985], "procf": 913, "pid": 913, "ppid": 913, "getpid": 913, "getppid": 913, "multitask": 914, "fair": [914, 918], "runnabl": [914, 920], "bare": 916, "metal": 916, "hm": 916, "awai": [916, 1051], "stabil": 916, "latenc": [918, 920], "nice": 918, "inexact": 918, "immedi": 918, "preempt_rt": 918, "polici": 919, "prioriti": 919, "runn": 919, "frequenc": 920, "scale": 920, "mysteri": 920, "remain": 920, "sysprog": [921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931], "mmap": 925, "segment": 925, "produc": [925, 959], "consum": 925, "mq_open": 926, "send": [926, 930], "receiv": 926, "mq_send": 926, "mq_receiv": 926, "mq_close": 926, "mq_unlink": 926, "notif": 926, "mq_notifi": 926, "mqueue": 926, "sem_open": 926, "sem_wait": 926, "sem_post": 926, "sem_clos": 926, "sem_unlink": 926, "barebon": 929, "alarm": 929, "louder": 929, "innoc": 929, "sigalrm": 929, "programmat": 930, "mask": 930, "pend": 930, "sigset_t": 930, "async": 930, "seem": 932, "nm": 932, "agnost": 933, "goodi": 934, "nativ": [935, 940], "sysroot": [935, 944], "linaro": 944, "defunct": 944, "patienc": 944, "against": [944, 949, 975], "docker": 946, "autoconf": 946, "71": 946, "zoom": 948, "rememb": 948, "reloc": 949, "independ": 949, "pic": 949, "runtim": 949, "def": 951, "reach": 951, "theoret": 951, "nonloc": 951, "hood": 953, "monkeypatch": 953, "print": [953, 978], "contextlib": 953, "contextmanag": 953, "involv": 953, "prefixprint": 953, "sugar": 954, "arg": 954, "kwarg": 954, "functool": [954, 975], "rais": 955, "regardless": 955, "coverag": 958, "infin": 959, "form": 963, "daemon": 964, "mother": 966, "acquir": 966, "late": 968, "abtract": 968, "Its": 969, "interrelationship": 971, "salari": 972, "introspect": 972, "isinst": 972, "issubclass": 972, "classmethod": 973, "staticmethod": 973, "_make": 974, "_asdict": 974, "dunder": 975, "compar": 975, "incompat": 975, "lotsa": 975, "magic": 975, "__gt__": 975, "term": 975, "__lt__": 975, "total_ord": 975, "them": 975, "readonli": 976, "repr": 977, "__repr__": 977, "suppli": 978, "ultim": 978, "fundament": 979, "guido": 981, "van": 981, "rossum": 981, "hash": 983, "bang": 983, "she": 983, "doze": 983, "registri": 983, "indent": 984, "cosmet": 985, "rudimentari": 985, "python2": 987, "unicod": 987, "esoter": 991, "delimit": 1000, "interv": 1008, "axi": 1010, "setuptool": 1011, "manifest": 1011, "publish": [1011, 1050, 1075], "usernam": 1022, "prime": [1027, 1035, 1041], "strategi": 1034, "revert": 1036, "justifi": 1037, "activ": 1043, "dictread": [1045, 1046, 1067], "cp1252": [1045, 1047], "reader": [1047, 1048, 1067], "nohead": 1047, "both": 1053, "interrel": 1054, "product": 1055, "david": 1056, "beazlei": 1056, "raymond": 1056, "hetting": 1056, "mean": 1058, "linear": [1059, 1061, 1062], "regress": [1059, 1061, 1062], "weather": 1060, "ndarrai": 1061, "plot": 1061, "splice": 1061, "mankind": 1063, "god": 1063, "unsafeti": 1064, "incomplet": [1066, 1074], "insan": 1067, "scsv": 1067, "dbapi": [1068, 1070, 1071], "transact": 1068, "postgresql": 1070, "postgr": 1070, "cursor": 1071, "queri": 1071, "ascii": 1072, "iso": 1072, "latin": 1072, "8859": 1072, "lieb": 1072, "gr\u00fc\u00dfe": 1072, "j\u00f6rg": 1072, "\u795d\u597d": 1072, "utf": 1072, "decod": 1072, "broker": 1075, "subscrib": 1075, "payload": 1075, "append": 1076, "deprec": 1076, "bitmap": 1078, "neat": 1078, "iloc": [1080, 1081], "Then": 1080, "inplac": 1081, "loc": [1081, 1082], "hiccup": 1082, "inclus": 1082, "lowercas": 1083, "email": 1083, "normalized_email": 1083, "ing": 1083, "elementtre": 1084, "etre": 1084, "sax": 1084, "dom": 1084, "34": 1086, "invoc": 1088, "subcommand": 1088, "upload": 1091, "pythonpath": 1093, "mark": 1093, "expect": [1093, 1102], "recogn": 1094, "meat": 1094, "freez": 1095, "recreat": 1095, "fatal": 1100, "failur": 1100, "assert_": 1100, "suit": 1100, "teardown": 1105, "organisatorisch": 1107, "buchung": 1107, "kursablauf": 1107, "schulungen": 1107, "kursgestaltung": 1107, "unterlagen": 1107, "grub": 1108, "97": 1108, "bauen": 1108, "prozess": 1108, "verschieden": 1108, "zielpublikum": [1109, 1111, 1112, 1117, 1119, 1124, 1125, 1131], "kursinhalt": [1109, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "vorkenntniss": [1109, 1111, 1112, 1117, 1119, 1120, 1124, 1125, 1126, 1127, 1129, 1130, 1131], "three": 1113, "prior": 1115, "beispielen": 1119, "mutter": 1120, "aller": 1120, "woch": 1124, "svn": 1125}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [129, "skills"]], "Course Material": [[5, "course-material"], [410, "course-material"], [1055, "course-material"]], "Einleitung": [[6, "Einleitung"], [185, "Einleitung"]], "Datatypes": [[6, "Datatypes"], [182, "Datatypes"], [185, "Datatypes"], [188, "Datatypes"], [201, "Datatypes"], [204, "Datatypes"], [212, "Datatypes"], [214, "Datatypes"], [220, "Datatypes"], [224, "Datatypes"], [227, "Datatypes"], [230, "Datatypes"], [244, "datatypes"], [251, "datatypes"], [254, "datatypes"], [262, "Datatypes"], [264, "datatypes"], [265, "datatypes"], [266, "Datatypes"], [270, "datatypes"], [271, "datatypes"], [297, "Datatypes"], [987, "datatypes"]], "Numbers": [[6, "Numbers"], [185, "Numbers"], [188, "Numbers"], [212, "Numbers"], [297, "Numbers"], [987, "numbers"]], "Integer Numbers": [[6, "Integer-Numbers"], [185, "Integer-Numbers"], [987, "integer-numbers"]], "Strings": [[6, "Strings"], [182, "Strings"], [185, "Strings"], [188, "Strings"], [197, "Strings"], [201, "Strings"], [201, "id3"], [204, "Strings"], [212, "Strings"], [224, "Strings"], [242, "Strings"], [245, "Strings"], [245, "id1"], [245, "id3"], [252, "Strings"], [297, "Strings"]], "Compound Datatypes": [[6, "Compound-Datatypes"], [185, "Compound-Datatypes"], [197, "Compound-Datatypes"], [201, "Compound-Datatypes"], [204, "Compound-Datatypes"], [207, "Compound-Datatypes"], [212, "Compound-Datatypes"], [214, "Compound-Datatypes"], [220, "Compound-Datatypes"], [224, "Compound-Datatypes"], [227, "Compound-Datatypes"], [230, "Compound-Datatypes"], [242, "Compound-Datatypes"], [266, "Compound-Datatypes"], [272, "Compound-Datatypes"], [988, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[6, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [185, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[6, "Dictionary-(Key/Value-Map-in-Javascript)"], [185, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[6, "Set:-mathematische-Mengen"], [185, "Set:-mathematische-Mengen"]], "while": [[6, "while"], [185, "while"], [204, "while"], [220, "while"], [252, "while"]], "Functions": [[6, "Functions"], [41, "functions"], [185, "Functions"], [188, "Functions"], [201, "Functions"], [212, "Functions"], [214, "Functions"], [220, "Functions"], [224, "Functions"], [229, "functions"], [245, "Functions"], [252, "Functions"], [266, "Functions"], [279, "functions"], [335, "functions"], [335, "id1"], [999, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[7, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[7, null], [168, null], [169, null], [171, null], [172, null], [173, null], [174, null], [176, null], [178, null], [179, null], [183, null], [186, null], [189, null], [192, null], [193, null], [194, null], [195, null], [199, null], [202, null], [211, null], [215, null], [218, null], [221, null], [223, null], [226, null], [229, null], [232, null], [241, null], [244, null], [251, null], [254, null]], "\u00dcberblick": [[7, "uberblick"], [176, "uberblick"], [186, "uberblick"], [195, "uberblick"], [211, "uberblick"], [223, "uberblick"]], "Log": [[7, "log"], [116, "log"], [168, "log"], [169, "log"], [172, "log"], [173, "log"], [181, "log"], [183, "log"], [184, "log"], [186, "log"], [189, "log"], [193, "log"], [195, "log"], [199, "log"], [202, "log"], [211, "log"], [223, "log"], [232, "log"]], "Tag 1": [[7, "tag-1"], [159, "tag-1"], [178, "tag-1"], [186, "tag-1"], [189, "tag-1"], [195, "tag-1"], [211, "tag-1"], [223, "tag-1"]], "Tag 2": [[7, "tag-2"], [159, "tag-2"], [178, "tag-2"], [186, "tag-2"], [189, "tag-2"], [195, "tag-2"], [211, "tag-2"], [223, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[7, "live-hacking-jupyter-notebook"], [176, "live-hacking-jupyter-notebook"], [186, "live-hacking-jupyter-notebook"], [189, "live-hacking-jupyter-notebook"], [199, "live-hacking-jupyter-notebook"]], "Links": [[7, "links"], [37, "links"], [116, "links"], [153, "Links"], [164, "links"], [169, "links"], [171, "links"], [173, "links"], [176, "links"], [183, "links"], [184, "links"], [186, "links"], [195, "links"], [199, "links"], [202, "links"], [205, "links"], [211, "links"], [218, "links"], [229, "links"], [232, "links"], [265, "links"], [271, "links"], [307, "links"], [385, "links"], [634, "links"], [655, "links"], [673, "links"], [684, "links"], [735, "links"], [797, "links"], [818, "links"], [857, null], [864, "links"], [980, null], [1010, null], [1011, "links"], [1075, "links"], [1077, "links"], [1078, "links"], [1080, "links"], [1081, "links"], [1082, "links"], [1083, "links"], [1096, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[8, "programmierung-grundlagen-jupyter-notebook"], [177, "programmierung-grundlagen-jupyter-notebook"], [187, "programmierung-grundlagen-jupyter-notebook"], [213, "programmierung-grundlagen-jupyter-notebook"], [225, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[9, "details"], [76, "details"], [319, "details"]], "Course List": [[10, "course-list"]], "Contents": [[10, null], [23, null], [127, null], [129, null], [131, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [147, null], [156, null], [160, "contents"], [161, null], [408, "contents"], [510, null], [513, null], [519, null], [522, null], [610, "id1"], [787, "id1"], [807, "id1"], [826, "id1"], [832, "id1"], [835, "id1"], [852, "id1"], [860, "id1"], [861, "id1"], [868, "id1"], [877, "id1"], [893, "id1"], [895, "id1"], [897, "id1"], [912, "id1"], [922, null], [925, null], [939, "id1"], [959, null], [1014, "id1"], [1015, "id1"], [1019, "id1"], [1028, "id1"], [1042, "id1"], [1049, "id1"], [1100, null], [1102, null], [1105, null], [1113, "contents"], [1116, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[10, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [320, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[11, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[11, "sidebar-course-metadata"]], "About This Site": [[12, "about-this-site"]], "License: GPLv3": [[12, "license-gplv3"]], "Github": [[12, "github"], [302, "github"]], "Sphinx": [[12, "sphinx"], [64, "sphinx"]], "Installation Instructions": [[12, "installation-instructions"]], "pip and venv": [[12, null]], "Work in Progress": [[12, "work-in-progress"], [115, "work-in-progress"]], "More": [[12, "more"]], "OpenTraining": [[13, "opentraining"]], "Draft Topics": [[14, "draft-topics"]], "Miscellaneous": [[15, "miscellaneous"], [114, "miscellaneous"], [125, "miscellaneous"], [152, "miscellaneous"], [172, "miscellaneous"], [236, "miscellaneous"], [237, "miscellaneous"], [257, "miscellaneous"], [271, "miscellaneous"], [279, "miscellaneous"], [283, "miscellaneous"], [505, "miscellaneous"], [505, "id1"], [641, "miscellaneous"], [704, "miscellaneous"], [894, "miscellaneous"], [907, "miscellaneous"]], "S5 Integration": [[16, "s5-integration"]], "Work in Progress: S5 Web Slides": [[16, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[16, "implementation-notes"], [288, "implementation-notes"]], "Todo": [[16, "id1"], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [129, null], [158, "id1"], [161, "id2"], [161, "id3"], [410, "todo"], [506, "id1"], [509, "id1"], [512, "id1"], [515, "id1"], [518, "id1"], [521, "id1"], [524, "id1"], [715, "id1"], [719, "id1"], [727, "id2"], [921, "id1"], [924, "id1"], [928, "id1"], [1099, "id1"], [1104, "id1"]], "S5 Slide Tests": [[17, "s5-slide-tests"]], "Level 1 Heading": [[18, "level-1-heading"]], "Level 2 Heading": [[18, "level-2-heading"]], "Level 2 Heading, Image": [[18, "level-2-heading-image"]], "Screencasts": [[19, "screencasts"]], "Topics to be Written": [[20, "topics-to-be-written"]], "New Topics to Write": [[20, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[21, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[22, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[22, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[22, "allgemeines"]], "2.1 Projektname": [[22, "projektname"]], "2.2 Projekt-Untertitel": [[22, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[22, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[22, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[22, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[22, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[22, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[22, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[22, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[22, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[22, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[22, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[22, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[22, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[22, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[22, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[22, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[22, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[22, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[22, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[22, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[22, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[22, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[22, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[22, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[22, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[22, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[22, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[22, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[22, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[22, "termine-projektstart-projektende"]], "Projektstart": [[22, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[22, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[22, "projektkosten"]], "Personalkosten": [[22, "personalkosten"]], "Sonstige Kosten": [[22, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[22, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[22, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[22, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[22, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[22, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[22, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[22, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[22, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[22, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[22, "datenschutz"]], "Video Screenplay": [[23, "video-screenplay"]], "The Problem And Me": [[23, "the-problem-and-me"]], "Open Source Training Material": [[23, "open-source-training-material"]], "Walk-Through": [[23, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[24, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[25, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[26, "use-cases"]], "Trainer": [[26, "trainer"]], "Editor": [[26, "editor"]], "End User (Training Audience)": [[26, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[27, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[28, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[29, "use-case-slide-show-material-as-plain-text-files"]], "Emoji Codes (sphinxemoji)": [[30, "emoji-codes-sphinxemoji"]], "Setup": [[30, "setup"], [244, "setup"], [251, "setup"], [254, "setup"], [264, "setup"], [265, "setup"], [269, "setup"], [270, "setup"], [271, "setup"], [855, "setup"], [980, "setup"], [1095, "setup"]], "Most Used Here In This Site": [[30, "most-used-here-in-this-site"]], "All Codes": [[30, "all-codes"]], "Recipes": [[31, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[32, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[33, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[34, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[35, "layout-test-page"]], "Admonitions": [[35, "admonitions"]], "Admonition": [[35, "admonition"]], "This is an .. admonition::": [[35, null]], "Tip": [[35, "tip"]], "Note": [[35, "note"]], "Hint": [[35, "hint"]], "Important": [[35, "important"]], "Attention": [[35, "attention"]], "Caution": [[35, "caution"]], "Error": [[35, "error"]], "Danger": [[35, "danger"]], "Sidebar": [[35, "sidebar"]], "Blech Sidebar Title Blah": [[35, null]], "Sidebar \u201cKursdaten\u201d": [[35, "sidebar-kursdaten"]], "Kursdaten": [[35, null], [1109, null], [1110, null], [1111, null], [1112, null], [1117, null], [1119, null], [1120, null], [1124, null], [1125, null], [1126, null], [1127, null], [1129, null], [1130, null], [1131, null]], "Local Content": [[35, "local-content"]], "Local Heading 1": [[35, "local-heading-1"], [35, "id3"]], "Local Heading 1.1": [[35, "local-heading-1-1"], [35, "id4"]], "Local Heading 1.2": [[35, "local-heading-1-2"], [35, "id5"]], "Local Heading 2": [[35, "local-heading-2"], [35, "id6"]], "Sidebar with Local Content": [[35, "sidebar-with-local-content"]], "Bleh Content Blah": [[35, null]], "To Do": [[35, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[36, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[36, "id1"]], "All": [[36, "id2"]], "reStructuredText Cheat Sheet": [[37, "restructuredtext-cheat-sheet"]], "Further Information": [[37, "further-information"], [117, "further-information"], [192, "further-information"], [193, "further-information"], [215, "further-information"], [293, "further-information"], [302, "further-information"], [689, "further-information"]], "Local Documents": [[37, "local-documents"]], "External Links": [[37, "external-links"]], "Section References": [[37, "section-references"]], "Section That We Refer To": [[37, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[37, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[37, "footnotes"]], "Sphinxish": [[38, "sphinxish"]], "Jupyter Notebooks": [[38, "jupyter-notebooks"]], "Running Sphinx From Source": [[38, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[39, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[39, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[40, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[40, "initial-structure"]], "Snippets": [[40, null], [40, null], [40, null], [40, null], [40, null], [40, null], [42, null], [42, null], [48, null], [48, null]], "User": [[40, "user"]], "UserDB": [[40, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[40, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[40, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[40, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[40, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[40, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[41, "clean-code-messages-from-the-book"]], "Survey": [[41, null], [409, null]], "Names": [[41, "names"]], "Comments": [[41, "comments"]], "Formatting": [[41, "formatting"]], "Objects and Data Structures": [[41, "objects-and-data-structures"]], "Error Handling": [[41, "error-handling"], [876, "error-handling"]], "Boundaries": [[41, "boundaries"]], "Unit Tests": [[41, "unit-tests"], [486, "unit-tests"]], "Classes": [[41, "classes"], [191, "Classes"], [276, "classes"]], "Live Hacking: Switch To googletest": [[42, "live-hacking-switch-to-googletest"]], "Git Submodule": [[42, "git-submodule"]], "Establish Tests: Demo": [[42, "establish-tests-demo"]], "Straightforward main() Conversion": [[42, "straightforward-main-conversion"]], "Fix Shortcomings": [[42, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[43, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[43, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[43, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[43, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[43, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[43, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[43, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[43, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[43, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[43, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[43, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[44, "userdb-find-crashes-if-user-not-found"]], "State": [[44, "state"]], "Bugs": [[45, "bugs"], [51, "bugs"]], "Existing Files Are Overwritten": [[46, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[47, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[48, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[48, "write-csv-test"]], "Write CSV: Frontend Program": [[48, "write-csv-frontend-program"], [48, "id1"]], "Read CSV: Test": [[48, "read-csv-test"]], "Features": [[49, "features"]], "Search By Other Indexes": [[50, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[51, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[51, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[52, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[53, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[53, "backingstore"]], "Refactoring": [[54, "refactoring"], [487, "refactoring"], [766, "refactoring"]], "Load From BackingStore in Constructor": [[55, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[56, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[57, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [60, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[57, "biography"], [60, "biography"]], "Abstract": [[57, "abstract"], [60, "abstract"]], "Description": [[57, "description"], [60, "description"], [440, "description"], [592, "description"], [608, "description"], [611, "description"], [613, "description"], [614, "description"], [615, "description"], [616, "description"], [617, "description"], [618, "description"], [619, "description"], [620, "description"], [622, "description"], [623, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[58, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[59, "installation-notes"]], "libgpiod": [[59, "libgpiod"]], "Fedora: Prepare Tarballs": [[59, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[59, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[62, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[62, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[62, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[63, "blog"], [129, "blog"]], "Articles": [[63, "articles"]], "In the Works": [[63, "in-the-works"]], "Not Yet in the Works": [[63, "not-yet-in-the-works"]], "Revisit Existing Posts": [[63, "revisit-existing-posts"]], "pending_xref": [[64, "pending-xref"]], "C++": [[65, "c"], [108, "c"], [109, "c"], [129, "c"]], "C++: Building with CMake": [[66, "c-building-with-cmake"]], "C++: Interfaces": [[67, "c-interfaces"]], "C++: OO Basics": [[68, "c-oo-basics"]], "C++: Unit Testing": [[69, "c-unit-testing"]], "Graph": [[70, "graph"], [168, "graph"], [610, "graph"], [759, "graph"], [1014, "graph"], [1015, "graph"], [1019, "graph"], [1028, "graph"], [1042, "graph"], [1049, "graph"]], "Embedded Computing 1": [[71, "embedded-computing-1"], [76, "embedded-computing-1"]], "Current Curriculum": [[71, "current-curriculum"], [72, "current-curriculum"]], "Topics": [[71, "topics"], [72, "topics"], [96, "topics"], [97, "topics"], [99, "topics"], [100, "topics"], [101, "topics"], [102, "topics"], [128, "topics"], [164, "topics"], [164, "id2"], [192, "topics"], [229, "topics"], [232, null], [306, "topics"], [310, "topics"], [340, "topics"], [355, "topics"], [364, "topics"], [371, "topics"], [377, "topics"], [381, "topics"], [384, "topics"], [388, "topics"], [397, "topics"], [401, "topics"], [406, "topics"], [407, "topics"], [527, "topics"], [535, "topics"], [550, "topics"], [553, "topics"], [556, "topics"], [572, "topics"], [578, "topics"], [582, "topics"], [590, "topics"], [595, "topics"], [597, "topics"], [600, "topics"], [606, "topics"], [624, "topics"], [625, "topics"], [629, "topics"], [636, "topics"], [643, "topics"], [654, "topics"], [667, "topics"], [668, "topics"], [678, "topics"], [683, "topics"], [692, "topics"], [700, "topics"], [704, "topics"], [708, "topics"], [710, "topics"], [712, "topics"], [870, "topics"], [888, null], [890, null], [890, null], [909, "topics"], [915, "topics"], [936, "topics"], [942, "topics"], [943, "topics"], [963, null], [971, "topics"], [1069, "topics"], [1079, "topics"], [1092, "topics"], [1098, "topics"]], "Dependency Graph": [[71, "dependency-graph"], [72, "dependency-graph"]], "Embedded Computing 2": [[72, "embedded-computing-2"], [76, "embedded-computing-2"]], "EX: Race Conditions": [[73, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[74, "ex-avoiding-race-condition"]], "Goals": [[74, "goals"], [80, "goals"], [81, "goals"], [82, "goals"], [83, "goals"], [85, "goals"], [86, "goals"], [87, "goals"], [89, "goals"]], "Outcome": [[74, "outcome"], [80, "outcome"], [81, "outcome"], [82, "outcome"], [83, "outcome"], [171, "outcome"]], "Git Introduction": [[75, "git-introduction"]], "Embedded Computing 2019": [[76, "embedded-computing-2019"]], "Overview": [[76, "overview"], [637, "overview"], [685, "overview"], [699, "overview"], [701, "overview"], [709, "overview"], [783, "overview"], [794, "overview"], [851, "overview"], [862, "overview"], [863, "overview"], [864, "overview"], [864, "id1"], [865, "overview"], [900, "overview"]], "Knowledge Transferred": [[76, "knowledge-transferred"]], "Course Setup": [[76, "course-setup"]], "Linux": [[77, "linux"], [147, "linux"], [854, "linux"]], "Introduction to Linux and Unix": [[78, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[79, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[80, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[81, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[82, "ex-led-temperature-display"]], "Hardware": [[82, "hardware"], [83, "hardware"]], "EX: Temperature Sensors": [[83, "ex-temperature-sensors"], [90, "ex-temperature-sensors"]], "GPIO": [[84, "gpio"]], "sysfs Interface": [[84, "sysfs-interface"]], "gpiod Interface": [[84, "gpiod-interface"]], "Multithreading": [[85, "multithreading"], [150, "multithreading"], [210, "multithreading"], [236, "multithreading"], [237, "multithreading"], [239, "multithreading"], [279, "multithreading"], [283, "multithreading"], [310, "multithreading"], [317, "multithreading"], [700, "multithreading"], [929, "multithreading"], [965, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[86, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[87, "communication-waiting-for-something"]], "Python Basics": [[88, "python-basics"]], "EX: Averaging Sensor, Display": [[89, "ex-averaging-sensor-display"]], "Simple Web Programming": [[91, "simple-web-programming"]], "Sensors Web Pages": [[92, "sensors-web-pages"]], "Python": [[93, "python"], [302, "python"], [307, "python"]], "Embedded Computing 2020": [[94, "embedded-computing-2020"]], "SS2022": [[95, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[95, "block-1-linux-and-working-with-remote-embedded-devices"], [111, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[95, "block-2-c-on-linux-local-and-cross-development"], [111, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[95, "block-3-c"], [111, "block-3-c"]], "2022-03-08": [[96, "id1"]], "Homework": [[96, "homework"], [97, "homework"], [99, "homework"], [102, "homework"]], "2022-03-10": [[97, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[98, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[98, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[98, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[99, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[100, "ku"]], "2022-03-28": [[101, "id1"]], "2022-04-01": [[102, "id1"]], "SS2022: Logs": [[103, "ss2022-logs"]], "WS2022": [[104, "ws2022"]], "Plan: Evolution": [[104, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[105, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[105, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[105, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[105, "question-3-memory-leak"]], "Question 4: std::vector": [[105, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[106, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[106, "cross-development"], [248, "cross-development"], [935, "cross-development"], [936, "cross-development"]], "C++, OO": [[106, "c-oo"]], "Lab Exam 2023-01-17": [[107, "lab-exam-2023-01-17"]], "Project Setup": [[107, "project-setup"], [485, "project-setup"], [1043, "project-setup"]], "Exercises": [[107, "exercises"], [147, "exercises"], [152, "exercises"], [184, "exercises"], [194, "exercises"], [194, "id1"], [194, "id3"], [252, "Exercises"], [257, "exercises"], [276, "exercises"], [276, "id1"], [438, "exercises"], [440, "exercises"], [447, "exercises"], [475, "exercises"], [492, "exercises"], [494, "exercises"], [535, "exercises"], [550, "exercises"], [600, "exercises"], [624, "exercises"], [942, "exercises"], [971, "exercises"], [1015, "exercises"]], "Exam Submission": [[107, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[108, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[108, "unix-linux-concepts"], [109, "unix-linux-concepts"]], "Toolchain": [[108, "toolchain"], [109, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[109, "ss2023-exam-2023-06-30-solved"]], "Embedded Computing 2021": [[110, "embedded-computing-2021"]], "SS2023": [[111, "ss2023"]], "Finish: Written Exam": [[111, "finish-written-exam"]], "Embedded Computing (FH Joanneum Graz)": [[113, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[114, "git-notes"]], "Bring Local Branch Upstream": [[114, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[114, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[114, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[116, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[117, "audio-chip-bringup"]], "Goal": [[117, "goal"], [119, "goal"], [120, "goal"], [122, "goal"], [257, "goal"], [259, "goal"], [1113, "goal"], [1116, "goal"]], "Findings": [[117, "findings"]], "Get Debian 10 Kernel Config": [[118, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[118, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[118, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[119, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[120, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[120, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[121, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[122, "dirty-upgrade-path"]], "Steps": [[122, "steps"]], "Wait for Customer Hardware": [[123, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[124, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[125, "python-training-improvements"]], "Beginner Course": [[125, "beginner-course"]], "Exercise Structure": [[125, "exercise-structure"]], "Split Exercises": [[125, "split-exercises"]], "Creating Screencasts": [[126, "creating-screencasts"]], "OpenShot": [[126, "openshot"]], "SEO": [[127, "seo"]], "Sitemap": [[127, "sitemap"]], "Meta Information": [[127, "meta-information"]], "Courses": [[127, "courses"]], "Stacks (Hanging)": [[128, "stacks-hanging"]], "DBus (New Topic)": [[128, "dbus-new-topic"]], "Perturb Encoding": [[128, "perturb-encoding"]], "Context Managers (Slideshow)": [[128, "trainings-material-soup-python-misc-context-manager-slides"], [1065, "context-managers-slideshow"]], "ABC (new Topic)": [[128, "abc-new-topic"]], "Finish Meta/SEO and Stuff": [[128, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[129, "miscellaneous-to-do"]], "Extensions": [[129, "extensions"]], "reST Todos": [[129, "rest-todos"]], "Styling": [[129, "styling"]], "Convert to RST/S5": [[129, "convert-to-rst-s5"]], "Examples": [[129, "examples"], [431, "examples"], [631, "examples"], [679, "examples"], [782, "examples"], [884, null]], "Convert Existing Content": [[129, "convert-existing-content"]], "Add Missing": [[129, "add-missing"]], "Structure": [[129, "structure"], [470, "structure"]], "References, Past Trainings": [[129, "references-past-trainings"]], "About": [[129, "about"]], "Learning The Web": [[130, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[131, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[131, "basics"], [202, "basics"], [229, "basics"], [244, "basics"], [264, "basics"], [265, "basics"], [265, "id1"], [270, "basics"], [271, "basics"], [271, "id1"], [297, "Basics"], [365, "basics"], [551, "basics"], [563, "basics"], [583, "basics"], [681, "basics"], [784, "basics"], [900, "basics"], [1008, "basics"]], "Getting X-Loader and U-Boot": [[131, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[131, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[131, "repairing-the-nand"]], "Writing X-Loader to NAND": [[131, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[131, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[132, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[132, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[132, "signals-aren-t-messages"]], "References": [[132, null], [132, null], [132, null], [204, "References"], [207, "References"], [542, "references"]], "Message Queues aren\u2019t Message Queues": [[132, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[132, "semaphores-and-mutexes"]], "Timers": [[132, "timers"]], "Polling": [[132, "polling"]], "Event Dispatching": [[132, "event-dispatching"]], "Interrupts": [[132, "interrupts"], [741, "interrupts"]], "Realtime": [[132, "realtime"], [918, "realtime"], [1108, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[133, "saving-solid-state-disk-life-gentoo"]], "Rant": [[133, "rant"], [153, "Rant"], [934, null]], "No Swap": [[133, "no-swap"]], "tmpfs instances here and there": [[133, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[133, "syslog-var-log-messages"]], "Mountpoint for messages": [[133, "mountpoint-for-messages"]], "Logrotate": [[133, "logrotate"]], "Kernel I/O Scheduler": [[133, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[133, "use-ram-for-the-kernel-build"]], "Things that are left": [[133, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[134, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[134, "process-stack-management"]], "Conclusion": [[134, "conclusion"], [134, "id1"], [855, "conclusion"], [863, "conclusion"]], "Thread (pthread) Stack Management": [[134, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[134, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[134, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[134, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[134, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[134, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[134, "how-does-this-work"]], "Realtime is different": [[134, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[135, "patching-and-building-the-fedora-kernel"]], "Why?": [[135, "why"], [871, "why"], [953, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[135, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[135, null], [135, null]], "Prepare the RPM Build": [[135, "prepare-the-rpm-build"]], "Install Prerequisites": [[135, "install-prerequisites"]], "Setup rpmbuild Directory": [[135, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[135, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[135, "apply-the-patch"]], "Build the Kernel RPMs": [[135, "build-the-kernel-rpms"]], "Install Kernel": [[135, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[136, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[136, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[136, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[137, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[137, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[137, "rpm-package-meh"]], "Updated on 2020-04-09": [[137, null]], "Annoyance #1: Keeps Running in Background": [[137, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[137, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[137, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[138, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[138, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[138, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[138, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[139, "using-bigbluebutton-for-online-training"]], "In this Article": [[139, null], [140, null], [142, null]], "TL;DR": [[139, "tl-dr"]], "Background Information": [[139, "background-information"]], "Hosting Setup": [[139, "hosting-setup"]], "BigBlueButton Installation": [[139, "bigbluebutton-installation"]], "Functionality Check": [[139, "functionality-check"]], "What Else?": [[139, "what-else"], [858, "what-else"], [871, "what-else"]], "Traunstein via Zierlersteig": [[140, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[140, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[140, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[140, "die-rinne"]], "Abstieg": [[140, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[141, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[141, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[141, "ceska-koca"]], "Hinauf": [[141, "hinauf"]], "Runter": [[141, "runter"]], "Zusammenfassung": [[141, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[142, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[142, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[142, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[142, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[142, "generate-key-pair"]], "Stage Key for Enrollment": [[142, "stage-key-for-enrollment"]], "Reboot, Brick": [[142, "reboot-brick"]], "Diagnostics": [[142, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[143, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [945, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[143, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[143, "installing-crosstool-ng"]], "Prerequisites": [[143, "prerequisites"], [1011, "prerequisites"]], "Installing From Cloned Git Repository": [[143, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[143, "installing-from-release-tarball"]], "PATH, And Basic Test": [[143, "path-and-basic-test"]], "Configure Toolchain Build": [[143, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[143, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[143, "important-glibc-version"]], "The Error": [[143, "the-error"], [143, "id4"]], "The Fix": [[143, "the-fix"], [143, "id5"]], "Important: GCC Version": [[143, "important-gcc-version"]], "Toolchain Build/Install": [[143, "toolchain-build-install"]], "Test": [[143, "test"], [738, "test"]], "Simplest: C, <stdio.h>": [[143, "simplest-c-stdio-h"]], "C++, <iostream>": [[143, "c-iostream"]], "C++, <thread>": [[143, "c-thread"]], "Packaging/Distributing The Toolchain": [[143, "packaging-distributing-the-toolchain"]], "Afterword": [[143, "afterword"]], "Posts": [[144, "posts"]], "Linux und Open Source": [[145, "linux-und-open-source"]], "Schulung": [[145, "schulung"]], "Entwicklung": [[145, "entwicklung"]], "Beratung": [[145, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[146, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[147, "installing-git"]], "Windows": [[147, "windows"]], "Workflow": [[147, "workflow"]], "Cloning the Repository": [[147, "cloning-the-repository"]], "Exercise Time": [[147, "exercise-time"]], "Conflicts": [[147, "conflicts"]], "Trainer\u2019s Notes": [[147, "trainer-s-notes"]], "Courses: Overview": [[148, "courses-overview"]], "Online Trainings": [[148, null]], "Individual Trainings": [[148, null]], "Everything About Linux": [[148, "everything-about-linux"]], "Programming Languages": [[148, "programming-languages"]], "Miscellaneous but Related": [[148, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[149, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[149, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[150, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[150, "gpios-in-userspace"]], "CAN Bus": [[150, "can-bus"], [171, "can-bus"]], "Driver Beispiele": [[150, "driver-beispiele"]], "Heizungssteuerung": [[150, "heizungssteuerung"]], "Live Hacking": [[151, "Live-Hacking"], [567, "live-hacking"], [568, "live-hacking"], [570, "live-hacking"], [571, "live-hacking"], [574, "live-hacking"], [575, "live-hacking"], [576, "live-hacking"], [588, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[151, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[151, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[151, "Dictionaries"], [180, "Dictionaries"], [252, "Dictionaries"], [266, "Dictionaries"], [297, "Dictionaries"], [1004, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[151, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[151, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[151, "Shortcuts"]], "Objektorientierte Programmierung": [[151, "Objektorientierte-Programmierung"]], "Inheritance": [[151, "Inheritance"], [191, "Inheritance"], [972, "inheritance"]], "Date and Time and Time Deltas - datetime": [[151, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[151, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[151, "String-Representations:-__str__()"]], "subprocess": [[151, "subprocess"], [230, "subprocess"]], "enumerate(), zip()": [[151, "enumerate(),-zip()"]], "List Comprehension": [[151, "List-Comprehension"], [175, "List-Comprehension"], [214, "List-Comprehension"], [958, "list-comprehension"], [1003, "list-comprehension"]], "exec(), eval()": [[151, "exec(),-eval()"]], "Umgebender Context": [[151, "Umgebender-Context"]], "Eigener Context": [[151, "Eigener-Context"]], "json": [[151, "json"], [227, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[152, "python-individualtraining-5-tage-beginnend-28-10-2019"], [320, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[152, null], [155, null], [929, null], [1110, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[152, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[152, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[152, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[152, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[152, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[152, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[152, "operator-overloading"], [210, "operator-overloading"], [220, "Operator-Overloading"], [241, "operator-overloading"], [276, "operator-overloading"], [505, "operator-overloading"], [531, "operator-overloading"], [545, "operator-overloading"], [975, "operator-overloading"]], "Getters and Setters": [[152, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[152, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[152, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[152, "closures-between-local-and-global"]], "Project": [[152, "project"]], "Goals of this Training": [[153, "Goals-of-this-Training"]], "Exercise": [[153, "Exercise"], [194, "exercise"], [236, "exercise"], [236, "id1"], [237, "exercise"], [239, "exercise"], [248, "exercise"], [257, "exercise"], [283, "exercise"], [302, "exercise"], [308, "exercise"], [427, "exercise"], [428, "exercise"], [429, "exercise"], [431, "exercise"], [432, "exercise"], [435, "exercise"], [436, "exercise"], [621, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[153, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[153, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[153, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[153, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[153, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[153, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[153, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[153, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[153, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[153, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[154, "Random-Live-Hacking"]], "Data Types": [[154, "Data-Types"]], "Mutable, Immutable": [[154, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[154, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[154, "Indices-and-Slicing"]], "for loops": [[154, "for-loops"]], "Iterator protocol": [[154, "Iterator-protocol"], [217, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[155, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[155, null], [157, null], [301, null]], "Standardthemen": [[155, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[155, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[155, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[155, "losen-einer-uni-ubung"]], "Proposal": [[156, "proposal"]], "Signals": [[156, "signals"]], "Posix IPC (and Virtual Memory)": [[156, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[156, "unix-domain-sockets"]], "Application in your Company": [[156, "application-in-your-company"]], "Further Thoughts": [[156, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[157, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[158, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[159, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[159, null]], "Kursaufbau": [[159, "kursaufbau"]], "Kursverlauf": [[159, "kursverlauf"], [167, "kursverlauf"]], "Tag 3": [[159, "tag-3"], [178, "tag-3"], [189, "tag-3"], [211, "tag-3"], [223, "tag-3"]], "Tag 4": [[159, "tag-4"], [189, "tag-4"], [211, "tag-4"], [223, "tag-4"]], "Tag 5": [[159, "tag-5"]], "Installing googletest By Hand": [[160, "installing-googletest-by-hand"]], "Clone googletest Repo": [[160, "clone-googletest-repo"]], "Create Build Directory": [[160, "create-build-directory"], [161, "create-build-directory"], [484, "create-build-directory"]], "CMake, Build and Install": [[160, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[160, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[161, "software-setup-build"]], "Getting the Source": [[161, "getting-the-source"]], "Install Prerequisites and Dependencies": [[161, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[161, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[162, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[162, "flatpak"]], "Issues": [[162, "issues"]], "RPM From M$": [[162, "rpm-from-m"]], "Code": [[163, "code"], [166, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[164, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[164, null], [167, null]], "Environment": [[164, "environment"], [790, "environment"]], "Unit Testing and Test Driven Development": [[164, "unit-testing-and-test-driven-development"]], "Python Installation": [[164, "python-installation"], [980, "python-installation"]], "Programming Environment": [[164, "programming-environment"], [248, "programming-environment"], [980, "programming-environment"]], "Day 1: Language Basics": [[164, "day-1-language-basics"]], "Day 2: Advanced Topics": [[164, "day-2-advanced-topics"]], "Wrap-Up": [[164, "wrap-up"]], "How Was It?": [[164, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[165, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[165, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[165, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[165, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[165, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[165, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[165, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[165, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[165, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[165, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[165, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[165, "list-und-Mutability"]], "Tuple und Immutability": [[165, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[165, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[165, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[165, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[165, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[165, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[165, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[165, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[165, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[165, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[165, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[165, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[165, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[165, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[165, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[165, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[165, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[165, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[165, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[165, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[165, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[165, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[165, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[165, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[167, "python-individualtraining-18-5-2020-19-5-2020"], [320, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[167, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[168, "python-advanced-7-9-2020-10-9-2020"], [320, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[168, "preparation"], [169, "preparation"], [171, "preparation"], [172, "preparation"], [173, "preparation"], [174, "preparation"], [547, "preparation"]], "Workspace Setup": [[168, "workspace-setup"], [169, "workspace-setup"], [171, "workspace-setup"], [173, "workspace-setup"]], "Github for Exercises": [[168, "github-for-exercises"], [169, "github-for-exercises"]], "Agenda": [[168, "agenda"], [169, "agenda"], [171, "agenda"], [172, "agenda"], [173, "agenda"], [174, "agenda"], [179, "agenda"], [183, "agenda"], [184, "agenda"], [221, "agenda"], [226, "agenda"], [238, "agenda"], [247, "agenda"], [268, "agenda"], [276, "agenda"], [1115, "agenda"]], "Advanced Core Python Topics": [[168, "advanced-core-python-topics"]], "Special Topics": [[168, "special-topics"]], "Day 1": [[168, "day-1"], [169, "day-1"], [171, "day-1"], [172, "day-1"], [173, "day-1"], [183, "day-1"], [184, "day-1"], [193, "day-1"], [194, "day-1"], [199, "day-1"], [202, "day-1"], [205, "day-1"], [208, "day-1"], [215, "day-1"], [257, "day-1"], [258, "day-1"], [259, "day-1"], [265, "day-1"], [269, "day-1"], [271, "day-1"], [276, "day-1"]], "Day 2": [[168, "day-2"], [169, "day-2"], [171, "day-2"], [172, "day-2"], [173, "day-2"], [183, "day-2"], [184, "day-2"], [193, "day-2"], [194, "day-2"], [199, "day-2"], [202, "day-2"], [204, "Day-2"], [205, "day-2"], [208, "day-2"], [215, "day-2"], [248, "day-2"], [257, "day-2"], [259, "day-2"], [265, "day-2"], [269, "day-2"], [276, "day-2"]], "Day 3": [[168, "day-3"], [169, "day-3"], [171, "day-3"], [172, "day-3"], [173, "day-3"], [183, "day-3"], [184, "day-3"], [193, "day-3"], [194, "day-3"], [199, "day-3"], [204, "Day-3"], [205, "day-3"], [208, "day-3"], [215, "day-3"], [248, "day-3"], [251, "day-3"], [257, "day-3"], [259, "day-3"], [265, "day-3"], [269, "day-3"], [271, "day-3"]], "Day 4": [[168, "day-4"], [171, "day-4"], [183, "day-4"], [184, "day-4"], [193, "day-4"], [194, "day-4"], [248, "day-4"]], "Recommended Tutorials": [[168, "recommended-tutorials"]], "After Work Party": [[168, "after-work-party"], [199, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[169, "python-basics-28-9-2020-30-9-2020"], [320, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[170, "Iterables"]], "set constructor": [[170, "set-constructor"]], "Fast vs.\u00a0Simple": [[170, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[170, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[170, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[170, "Object-Oriented-Programming"], [220, "Object-Oriented-Programming"], [233, "Object-Oriented-Programming"], [244, "object-oriented-programming"], [258, "object-oriented-programming"], [260, "object-oriented-programming"], [261, "object-oriented-programming"], [264, "object-oriented-programming"], [265, "object-oriented-programming"], [270, "object-oriented-programming"], [276, "object-oriented-programming"], [279, "object-oriented-programming"], [409, "object-oriented-programming"], [971, "object-oriented-programming"]], "datetime": [[170, "datetime"], [197, "datetime"], [252, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[171, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[171, "additional-topics-brought-in-by-thomas"]], "Notebook": [[171, "notebook"], [192, "notebook"], [207, "Notebook"], [302, "notebook"]], "Tutorials": [[171, "tutorials"], [199, "tutorials"]], "Linux on Raspberry Pi": [[172, "linux-on-raspberry-pi"]], "Cloud Machine": [[172, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[172, "raspberry-on-participant-s-desks"]], "Basic security": [[172, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[172, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[172, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[172, "in-the-wild-watchdog"]], "TODO": [[172, "todo"], [289, "todo"], [290, "todo"], [291, "todo"], [1074, "todo"]], "Support Material": [[172, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[173, "python-basics-23-11-2020-25-11-2020"], [320, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[173, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[174, "linux-basics-30-11-2020-3-12-2020"], [320, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[175, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[175, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[175, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[175, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[175, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[175, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[175, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[175, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[175, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[175, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[175, "Floor-Division"]], "Modulo Operator: %": [[175, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[175, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[175, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[175, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[175, "Raw-Strings"], [197, "Raw-Strings"], [214, "Raw-Strings"], [220, "Raw-Strings"], [242, "Raw-Strings"], [272, "Raw-Strings"], [1000, "raw-strings"]], "f-Strings": [[175, "f-Strings"]], "Konvertierungen": [[175, "Konvertierungen"]], "Boolean": [[175, "Boolean"], [201, "Boolean"], [204, "Boolean"], [212, "Boolean"], [214, "Boolean"], [224, "Boolean"], [227, "Boolean"], [989, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[175, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[175, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[175, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[175, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[175, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[175, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[175, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[175, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[175, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[175, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[175, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[175, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[175, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[175, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[175, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[175, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[175, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[175, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[175, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[175, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[175, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[175, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[175, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[175, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[175, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[175, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[175, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[175, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[175, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[175, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[175, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[175, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[175, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[175, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[175, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[175, "Liste"]], "Set": [[175, "Set"], [196, "Set"], [197, "Set"], [201, "Set"], [201, "id1"], [204, "Set"], [207, "Set"], [207, "id1"], [214, "Set"], [227, "Set"], [230, "Set"], [242, "Set"], [245, "Set"], [245, "id5"], [252, "Set"], [262, "Set"], [266, "Set"]], "8.2 Arrays": [[175, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[175, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[175, "8.4-Records"]], "8.5 Zeichenketten": [[175, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[175, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[175, "sorted,-reversed"]], "8.7 Dictionaries": [[175, "8.7-Dictionaries"]], "(jf) Records in Python": [[175, "(jf)-Records-in-Python"]], "8.8 Mengen": [[175, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[175, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[175, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[175, "\u00dcbung-1"]], "Versuch 1: in und index()": [[175, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[175, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[175, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[175, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[175, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[175, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[175, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[175, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[175, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[175, "Lokale-Variable"]], "Globale Variable (lesen)": [[175, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[175, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[175, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[175, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[175, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[175, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[175, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[175, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[175, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[175, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[175, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[176, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[176, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[176, "herdt-kapitel-6-grundlegende-sprachelemente"], [1123, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[176, "herdt-kapitel-7-kontrollstrukturen"], [1123, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[176, "verzweigung"], [1123, "verzweigung"]], "Schleifen": [[176, "schleifen"], [1123, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[176, "herdt-kapitel-8-elementare-datenstrukturen"], [1123, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[176, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1123, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[178, "python-basics-22-2-2021-24-2-2021"], [320, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[178, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[179, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[179, "books"], [229, "books"], [271, "books"], [1056, "books"]], "Python Advanced": [[180, "Python-Advanced"]], "Data Types Recap": [[180, "Data-Types-Recap"]], "Sequential Datatypes": [[180, "Sequential-Datatypes"], [212, "Sequential-Datatypes"], [224, "Sequential-Datatypes"], [992, "sequential-datatypes"], [992, "id1"]], "Slicing etc.": [[180, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[180, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[180, "Sets"], [180, "id1"], [188, "Sets"], [1005, "sets"]], "for Schleife, ganz kurz": [[180, "for-Schleife,-ganz-kurz"]], "Tuple": [[180, "Tuple"], [204, "Tuple"], [207, "Tuple"], [214, "Tuple"], [227, "Tuple"], [230, "Tuple"], [242, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[180, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[180, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[180, "Listen"], [214, "Listen"], [297, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[180, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[180, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[180, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[180, "Iterable:-Der-Begriff"]], "Zufall": [[180, "Zufall"]], "Regular Expressions": [[180, "Regular-Expressions"], [233, "Regular-Expressions"], [245, "Regular-Expressions"], [847, "regular-expressions"]], "enumerate()": [[180, "enumerate()"], [188, "enumerate()"], [191, "enumerate()"], [227, "enumerate()"], [245, "enumerate()"], [262, "enumerate()"]], "JSON": [[180, "JSON"], [197, "JSON"], [207, "JSON"], [233, "JSON"], [242, "JSON"], [277, "JSON"]], "2021-03-15": [[181, "id1"]], "Exercises (auf Github)": [[181, "exercises-auf-github"]], "Jupyter Notebook": [[181, "jupyter-notebook"], [183, "jupyter-notebook"], [200, "jupyter-notebook"], [202, "jupyter-notebook"], [205, "jupyter-notebook"], [211, "jupyter-notebook"], [216, "jupyter-notebook"], [219, "jupyter-notebook"], [222, "jupyter-notebook"], [297, "Jupyter-Notebook"], [1062, "jupyter-notebook"]], "Download": [[181, null], [183, null]], "Hallo Jupyter Notebook": [[182, "Hallo-Jupyter-Notebook"]], "Syntax": [[182, "Syntax"], [252, "Syntax"], [297, "Syntax"], [297, "id1"]], "Raw strings": [[182, "Raw-strings"]], "Variablen": [[182, "Variablen"], [214, "Variablen"]], "Tuple Unpacking": [[182, "Tuple-Unpacking"], [224, "Tuple-Unpacking"], [242, "Tuple-Unpacking"], [252, "Tuple-Unpacking"], [296, "Tuple-Unpacking"], [297, "Tuple-Unpacking"], [297, "id2"]], "Speicher, Memory Management": [[182, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[182, "Mutable-vs.\u00a0Immutable"], [233, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[182, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[182, "Aber!!!!"]], "Dictionary": [[182, "Dictionary"], [188, "Dictionary"], [196, "Dictionary"], [197, "Dictionary"], [201, "Dictionary"], [201, "id2"], [204, "Dictionary"], [207, "Dictionary"], [207, "id2"], [214, "Dictionary"], [227, "Dictionary"], [230, "Dictionary"], [242, "Dictionary"], [245, "Dictionary"], [245, "id4"], [252, "Dictionary"], [262, "Dictionary"], [266, "Dictionary"], [272, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[182, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[182, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[182, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[182, "for-und-range()"]], "Objektidentit\u00e4t": [[182, "Objektidentit\u00e4t"]], "Das with Statement": [[182, "Das-with-Statement"], [191, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[182, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[182, "String-Operationen"]], "enumerate(), und verlorene Indices": [[182, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[182, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[182, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[183, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[183, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[184, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[184, null]], "Course Preparation": [[184, "course-preparation"], [237, "course-preparation"], [239, "course-preparation"], [247, "course-preparation"]], "SSH": [[184, "ssh"], [307, "ssh"]], "Linux and/or Shell on Windows Host": [[184, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[184, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[186, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[188, "Syntax-etc."], [220, "Syntax-etc."], [266, "Syntax-etc."], [984, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[188, "Comments-vs.\u00a0Documentation"]], "Variables": [[188, "Variables"], [201, "Variables"], [204, "Variables"], [220, "Variables"], [230, "Variables"], [262, "Variables"], [266, "Variables"], [297, "Variables"], [986, "variables"]], "Assignment Fun": [[188, "Assignment-Fun"], [227, "Assignment-Fun"], [986, "assignment-fun"]], "Assignment Details": [[188, "Assignment-Details"], [220, "Assignment-Details"], [227, "Assignment-Details"], [297, "Assignment-Details"], [986, "assignment-details"]], "Operators": [[188, "Operators"], [224, "Operators"]], "Integer Arithmetic": [[188, "Integer-Arithmetic"]], "String Methods": [[188, "String-Methods"], [296, "String-Methods"]], "Datatype Conversions": [[188, "Datatype-Conversions"], [212, "Datatype-Conversions"], [214, "Datatype-Conversions"], [220, "Datatype-Conversions"], [224, "Datatype-Conversions"], [227, "Datatype-Conversions"], [245, "Datatype-Conversions"], [262, "Datatype-Conversions"], [266, "Datatype-Conversions"], [272, "Datatype-Conversions"], [297, "Datatype-Conversions"], [987, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[188, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[188, "Complex-Datatypes"], [297, "Complex-Datatypes"]], "List (mutable)": [[188, "List-(mutable)"], [201, "List-(mutable)"]], "extend()? Iterable?": [[188, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[188, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[188, "in-Operator"], [227, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[188, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[188, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[188, "sum()"]], "map()": [[188, "map()"], [191, "map()"]], "list() function": [[188, "list()-function"]], "Performance: in Operator, und list und set": [[188, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[188, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[189, "python-grundlagen-2021-05-03-2021-05-05"], [320, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[189, "weiterfuhrende-information"]], "Visual Studio Code": [[189, "visual-studio-code"], [205, "visual-studio-code"], [1056, "visual-studio-code"]], "Python Beginner Tutorials": [[189, "python-beginner-tutorials"], [229, "python-beginner-tutorials"], [1056, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[189, "numpy-and-data-science-tutorials"], [229, "numpy-and-data-science-tutorials"], [232, "numpy-and-data-science-tutorials"], [265, "numpy-and-data-science-tutorials"], [1056, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[189, "pypi-installing-modules-that-don-t-come-as-batteries"], [1056, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[189, "git-and-github"], [1056, "git-and-github"]], "Conference Talks": [[189, "conference-talks"], [265, "conference-talks"], [1056, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[190, "python-grundlagen-jupyter-notebook"], [203, "python-grundlagen-jupyter-notebook"], [206, "python-grundlagen-jupyter-notebook"], [209, "python-grundlagen-jupyter-notebook"], [228, "python-grundlagen-jupyter-notebook"], [231, "python-grundlagen-jupyter-notebook"], [234, "python-grundlagen-jupyter-notebook"], [243, "python-grundlagen-jupyter-notebook"], [246, "python-grundlagen-jupyter-notebook"], [267, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[191, "import-zipfile"]], "Read Contents \u2026": [[191, "Read-Contents-\u2026"]], "Extract One Member": [[191, "Extract-One-Member"]], "All in One, Using with": [[191, "All-in-One,-Using-with"]], "Functionality: Methods": [[191, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[191, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[191, "Instance-Attributes"]], "Class Attributes": [[191, "Class-Attributes"]], "Public, Protected, Private": [[191, "Public,-Protected,-Private"]], "Properties": [[191, "Properties"], [220, "Properties"], [424, "properties"], [976, "properties"]], "Functions, Positional and Keyword Arguments": [[191, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[191, "Positional-Arguments"]], "Keyword Arguments": [[191, "Keyword-Arguments"], [212, "Keyword-Arguments"], [298, "Keyword-Arguments"], [998, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[191, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[191, "The-range()-Function"], [197, "The-range()-Function"], [204, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[191, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[191, "Iterable"], [207, "Iterable"]], "list(), and iterable?": [[191, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[191, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[191, "Decorators,-etc."]], "NoneType and None": [[191, "NoneType-and-None"]], "File I/O": [[191, "File-I/O"], [220, "File-I/O"], [227, "File-I/O"], [230, "File-I/O"], [262, "File-I/O"], [266, "File-I/O"], [294, "File-I/O"], [893, "file-i-o"], [1006, "file-i-o"]], "Iteration, yield, Recursion": [[191, "Iteration,-yield,-Recursion"]], "Recursion": [[191, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[191, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[191, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[191, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[191, "zip()"]], "filter(), and several other methods to do the same": [[191, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[191, "OSError,-errno"]], "The platform Module, sys.path": [[191, "The-platform-Module,-sys.path"]], "os.path": [[191, "os.path"], [207, "os.path"], [214, "os.path"]], "Exceptions und so (assert())": [[191, "Exceptions-und-so-(assert())"]], "AssertionError": [[191, "AssertionError"]], "Random Questions": [[191, "Random-Questions"]], "Slicing": [[191, "Slicing"], [214, "Slicing"], [220, "Slicing"], [245, "Slicing"], [266, "Slicing"], [1080, "slicing"]], "OO": [[191, "OO"], [259, "oo"], [311, "oo"], [505, "oo"]], "String Formatting": [[191, "String-Formatting"], [197, "String-Formatting"], [1001, "string-formatting"]], "import datetime": [[191, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[192, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[192, "predefined-streams"]], "PCAP Exam Syllabus": [[192, "pcap-exam-syllabus"], [205, "pcap-exam-syllabus"]], "2021-06-09": [[192, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[193, "programmieren-mit-c-2021-06-14-2021-06-18"], [320, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[193, "preparation-tools"]], "State machine": [[193, "state-machine"]], "Regular Course Topics": [[193, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[193, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[193, "regular-course-material"], [193, "id1"]], "Group Project Kick-Off :-)": [[193, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[193, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[193, "group-project-use-case-driven-course-flow"]], "Day 5": [[193, "day-5"], [194, "day-5"], [248, "day-5"]], "Pointer Recap": [[193, "pointer-recap"]], "On With Group Project": [[193, "on-with-group-project"]], "C++ Basics": [[193, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[193, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[194, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[194, "setup-for-the-new-kids"]], "Recapitulate some C": [[194, "recapitulate-some-c"]], "Group project review": [[194, "group-project-review"]], "Jump into C++": [[194, "jump-into-c"]], "Regular Topics": [[194, "regular-topics"], [194, "id2"], [194, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[194, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[194, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[194, "finish-first-user-database-functionality"]], "Unit Testing": [[194, "unit-testing"], [251, "unit-testing"], [254, "unit-testing"], [310, "unit-testing"]], "GTest Installation": [[194, "gtest-installation"]], "Git Workflows": [[194, "git-workflows"]], "Day X": [[194, "day-x"]], "Smart Pointers, Recap": [[194, "smart-pointers-recap"]], "std::map": [[194, "std-map"], [583, "std-map"]], "OO, and Polymorphism": [[194, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[195, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [320, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[195, "variablen-und-datentypen"], [211, "variablen-und-datentypen"], [223, "variablen-und-datentypen"]], "Kontrollstrukturen": [[195, "kontrollstrukturen"], [211, "kontrollstrukturen"], [212, "Kontrollstrukturen"], [223, "kontrollstrukturen"]], "Datenstrukturen": [[196, "Datenstrukturen"]], "List": [[196, "List"], [197, "List"], [204, "List"], [207, "List"], [227, "List"], [230, "List"], [242, "List"], [245, "List"], [272, "List"], [1088, "list"]], "Iteration": [[196, "Iteration"], [196, "id1"], [197, "Iteration"], [197, "id1"], [207, "Iteration"], [230, "Iteration"], [242, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[196, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[196, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[196, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[196, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[196, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[196, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[197, "Iterable?"]], "List Comprehension, Generator Expression": [[197, "List-Comprehension,-Generator-Expression"]], "Literals": [[197, "Literals"], [449, "literals"]], "Quoting?": [[197, "Quoting?"], [201, "Quoting?"]], "Multiline Strings": [[197, "Multiline-Strings"], [201, "Multiline-Strings"], [1000, "multiline-strings"]], "Functionality": [[197, "Functionality"], [782, "functionality"]], "strip() and friends": [[197, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[197, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[197, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[198, "read-a-cleaned-up-sap-export"]], "Requirement": [[198, "requirement"], [448, "requirement"], [470, "requirement"], [471, "requirement"], [472, "requirement"], [476, "requirement"], [478, "requirement"], [479, "requirement"], [480, "requirement"], [481, "requirement"], [885, "requirement"], [892, "requirement"], [1012, "requirement"], [1013, "requirement"], [1034, "requirement"], [1045, "requirement"], [1046, "requirement"], [1047, "requirement"], [1048, "requirement"], [1050, "requirement"], [1051, "requirement"], [1052, "requirement"], [1053, "requirement"], [477, "requirement"]], "Solution": [[198, "solution"], [427, "solution"], [429, "solution"], [432, "solution"], [1096, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[199, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[201, "Initial-Terminology"]], "Sequence": [[201, "Sequence"]], "Tuple (immutable)": [[201, "Tuple-(immutable)"]], "References, (Im)mutability": [[201, "References,-(Im)mutability"], [214, "References,-(Im)mutability"], [227, "References,-(Im)mutability"], [230, "References,-(Im)mutability"], [245, "References,-(Im)mutability"], [252, "References,-(Im)mutability"], [266, "References,-(Im)mutability"], [272, "References,-(Im)mutability"], [272, "id1"], [996, "references-im-mutability"]], "Iteration, for, and range()": [[201, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[201, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[201, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[201, "List-and-Tuple"]], "matplotlib": [[201, "matplotlib"], [233, "matplotlib"]], "File I/O, and Strings": [[201, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[201, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[201, "Miscellaneous-String-Methods"], [212, "Miscellaneous-String-Methods"], [214, "Miscellaneous-String-Methods"], [220, "Miscellaneous-String-Methods"], [230, "Miscellaneous-String-Methods"], [245, "Miscellaneous-String-Methods"], [266, "Miscellaneous-String-Methods"], [272, "Miscellaneous-String-Methods"], [1002, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[202, "python-basics-2021-08-31-2021-09-01"], [320, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[202, "numerics-and-ai"]], "Mountains near Graz": [[202, "mountains-near-graz"]], "2021-11-17": [[204, "2021-11-17"]], "Enter Tuples": [[204, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[204, "Datatype-Conversions,-Type-Names"]], "NoneType": [[204, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[204, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[204, "Exercise:-Mixed-List"]], "Python Documentation": [[204, "Python-Documentation"]], "for": [[204, "for"], [266, "for"], [297, "for"]], "Iteration over Compound Datatypes": [[204, "Iteration-over-Compound-Datatypes"], [214, "Iteration-over-Compound-Datatypes"]], "File IO": [[204, "File-IO"], [220, "File-IO"], [248, "file-io"], [252, "File-IO"]], "Generators, Iterator Protocol, for": [[204, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[204, "Common-Sequence-Operation"]], "Comprehensions": [[204, "Comprehensions"], [207, "Comprehensions"], [220, "Comprehensions"], [252, "Comprehensions"]], "List, Iterable? WTF?": [[204, "List,-Iterable?-WTF?"]], "Dict and iterable": [[204, "Dict-and-iterable"]], "More on Lists": [[204, "More-on-Lists"], [212, "More-on-Lists"], [227, "More-on-Lists"]], "More on Dictionaries": [[204, "More-on-Dictionaries"], [212, "More-on-Dictionaries"]], "References, Mutability": [[204, "References,-Mutability"]], "CSV": [[204, "CSV"], [221, "csv"], [229, "csv"], [266, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[205, "python-basics-2021-11-17-2021-11-19"], [320, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[205, "python-core-topics"]], "Python Standard Library": [[205, "python-standard-library"]], "More About Strings": [[207, "More-About-Strings"], [224, "More-About-Strings"], [272, "More-About-Strings"], [1000, "more-about-strings"]], "List, Tuple": [[207, "List,-Tuple"], [262, "List,-Tuple"], [266, "List,-Tuple"]], "Tuple Unpacking: What Else": [[207, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[207, "Iterator-Protocol"], [214, "Iterator-Protocol"], [245, "Iterator-Protocol"], [262, "Iterator-Protocol"], [266, "Iterator-Protocol"]], "yield": [[207, "yield"], [230, "yield"]], "Everything is an Object of a Type": [[207, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[207, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[207, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[207, "2021-12-17"]], "Shift Operators": [[207, "Shift-Operators"]], "PCAP Sample Exam": [[207, "PCAP-Sample-Exam"]], "System Errors": [[207, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[208, "python-advanced-2021-12-01-2021-12-03"], [320, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[208, "basics-recap"], [261, "basics-recap"]], "Group Project Preparation": [[208, "group-project-preparation"]], "Hmmm?": [[208, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[210, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [320, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[210, "id1"]], "2021-12-07": [[210, "id2"]], "2021-12-08": [[210, "id3"]], "2021-12-09": [[210, "id4"]], "2022-01-24": [[210, "id5"]], "Undefined Behavior": [[210, "undefined-behavior"]], "Modularization": [[210, "modularization"], [365, "modularization"]], "2022-01-25": [[210, "id6"]], "C++ and OO (Classes)": [[210, "c-and-oo-classes"]], "Modularization (again)": [[210, "modularization-again"]], "2022-01-26": [[210, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[210, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[210, "classes-continued"]], "2022-01-27": [[210, "id8"]], "2022-01-28": [[210, "id9"]], "Standard Template Library: Container Templates": [[210, "standard-template-library-container-templates"]], "2022-01-31": [[210, "id10"]], "2022-02-01": [[210, "id11"]], "Algorithms": [[210, "algorithms"], [572, "algorithms"]], "Functors": [[210, "functors"]], "Unified Modeling Language (UML)": [[210, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[210, "exercise-using-all-from-today"]], "2022-02-02": [[210, "id12"]], "Associative Container: std::map": [[210, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[210, "exceptions-and-exception-handling"]], "2022-02-03": [[210, "id13"]], "2022-02-04": [[210, "id14"]], "C++11: A New Language": [[210, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[210, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[210, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[211, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [320, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[212, "2022-01-17"]], "Variables and Datatypes": [[212, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[212, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[212, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[212, "Integer-Numbers:-Arithmetic"], [224, "Integer-Numbers:-Arithmetic"], [987, "integer-numbers-arithmetic"]], "Some Methods": [[212, "Some-Methods"]], "String Formatting: f-Strings": [[212, "String-Formatting:-f-Strings"]], "More about Strings": [[212, "More-about-Strings"]], "if": [[212, "if"], [252, "if"]], "2022-01-18": [[212, "2022-01-18"]], "Miscellanea": [[212, "Miscellanea"]], "Braces: Single Element Tuples?": [[212, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[212, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[212, "while-Loops"], [214, "while-Loops"], [227, "while-Loops"], [991, "while-loops"], [991, "id1"]], "break and continue": [[212, "break-and-continue"], [362, "break-and-continue"], [362, "id1"], [991, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[212, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[212, "Sequence-Membership"], [992, "sequence-membership"]], "list (mutable)": [[212, "list-(mutable)"]], "tuple (immutable)": [[212, "tuple-(immutable)"]], "dict (mutable)": [[212, "dict-(mutable)"]], "set (mutable)": [[212, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[212, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[212, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[212, "Default-Parameters"], [214, "Default-Parameters"], [298, "Default-Parameters"], [998, "default-parameters"]], "List Comprehensions": [[212, "List-Comprehensions"], [224, "List-Comprehensions"]], "Iteration over Dictionaries": [[212, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[212, "Building-Dictionaries"], [1004, "building-dictionaries"]], "More on Sets": [[212, "More-on-Sets"]], "with: Context Managers": [[212, "with:-Context-Managers"]], "Strings Intro": [[214, "Strings-Intro"]], "Doc Strings": [[214, "Doc-Strings"]], "Object Identity": [[214, "Object-Identity"]], "Integers": [[214, "Integers"], [224, "Integers"], [227, "Integers"], [245, "Integers"], [252, "Integers"], [272, "Integers"]], "Variablen? Datenypen?": [[214, "Variablen?-Datenypen?"]], "Objects, Classes": [[214, "Objects,-Classes"]], "Python Standard Libarary Examples": [[214, "Python-Standard-Libarary-Examples"]], "collections": [[214, "collections"]], "ChainMap": [[214, "ChainMap"]], "deque": [[214, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[214, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[214, "Slice-Assignment"], [993, "slice-assignment"]], "Lists are mutable": [[214, "Lists-are-mutable"]], "Shallow copy and deep copy": [[214, "Shallow-copy-and-deep-copy"]], "else": [[214, "else"], [220, "else"]], "for Loops, range()": [[214, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[214, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[214, "dict.fromkeys()"], [227, "dict.fromkeys()"]], "Generators": [[214, "Generators"], [220, "Generators"], [260, "generators"], [261, "generators"], [265, "generators"], [279, "generators"]], "join, split": [[214, "join,-split"]], "strip, lstrip, rstrip": [[214, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[215, "python-basics-2022-02-23-2022-02-25"], [320, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[215, "data-structures"]], "OS Things": [[215, "os-things"]], "Data Science": [[215, "data-science"]], "Wiederholung": [[217, "Wiederholung"]], "Mutable/Immutable": [[217, "Mutable/Immutable"]], "Attribute": [[217, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[217, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[217, "Exceptions"], [233, "Exceptions"], [258, "exceptions"], [505, "exceptions"], [552, "exceptions"], [553, "exceptions"]], "for vs.\u00a0while, range()": [[217, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[217, "String-Methods-(some)"]], "eval()": [[217, "eval()"], [227, "eval()"]], "exec()": [[217, "exec()"], [233, "exec()"]], "Dictionary Iteration": [[217, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[217, "Classes,-Attributes,-OO"]], "Types and Instances": [[217, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[217, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[217, "OO-Everywhere"]], "Dictionary Operations": [[217, "Dictionary-Operations"]], "collections.defaultdict": [[217, "collections.defaultdict"], [242, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[218, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[218, "id1"]], "2022-03-16": [[218, "id2"]], "Test Driven Development": [[218, "test-driven-development"], [260, "test-driven-development"], [279, "test-driven-development"]], "2022-03-17": [[218, "id3"]], "2022-03-31": [[218, "id4"]], "PCAP exam preparation": [[218, "pcap-exam-preparation"]], "Hello World": [[220, "Hello-World"], [324, "hello-world"], [982, "hello-world"]], "Blahblah": [[220, "Blahblah"], [562, "blahblah"], [981, "blahblah"]], "Object Oriented?": [[220, "Object-Oriented?"]], "MQTT": [[220, "MQTT"], [1075, "mqtt"]], "Commandline Arguments": [[220, "Commandline-Arguments"], [376, "commandline-arguments"], [376, "id1"]], "Object Lifetime": [[220, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[220, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[220, "More-String-Methods"], [220, "id1"]], "Dictionary Preview": [[220, "Dictionary-Preview"]], "list: Mutable": [[220, "list:-Mutable"]], "list(): explicit constructor": [[220, "list():-explicit-constructor"]], "tuple: Immutable": [[220, "tuple:-Immutable"]], "dict: Mutable": [[220, "dict:-Mutable"]], "set: Mutable": [[220, "set:-Mutable"]], "List comprehension": [[220, "List-comprehension"]], "DIctionary Comprehension": [[220, "DIctionary-Comprehension"]], "Set Comprehension": [[220, "Set-Comprehension"], [952, "set-comprehension"]], "max": [[220, "max"]], "for, enumerate()": [[220, "for,-enumerate()"]], "Iteratoren, Generatoren": [[220, "Iteratoren,-Generatoren"]], "Generatoren": [[220, "Generatoren"]], "split und join": [[220, "split-und-join"]], "strip()": [[220, "strip()"]], "dict vs.\u00a0OrderedDict": [[220, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[220, "Duck-Typing"], [968, "duck-typing"]], "Interfaces": [[220, "Interfaces"], [601, "interfaces"], [601, "id1"]], "Implementation Inheritance": [[220, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[220, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[220, "__bases__"]], "__mro__": [[220, "__mro__"]], "Object Layout (self)": [[220, "Object-Layout-(self)"]], "More from OO": [[220, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[220, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[220, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[220, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[220, "Exception-Handling"], [251, "exception-handling"], [254, "exception-handling"], [259, "exception-handling"], [313, "exception-handling"], [955, "exception-handling"]], "Order of except Clauses": [[220, "Order-of-except-Clauses"]], "finally": [[220, "finally"]], "lambda": [[220, "lambda"]], "map(), filter()": [[220, "map(),-filter()"]], "Generators, Iteration Protocol": [[220, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[220, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[221, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [320, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[221, "basics"]], "2022-03-30: Basics": [[221, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[221, "advanced"]], "Plan For The Wild Part": [[221, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[223, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [320, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[223, "discussion-flow-charts"]], "BlahBlah": [[224, "BlahBlah"], [227, "BlahBlah"], [230, "BlahBlah"]], "Interactive": [[224, "Interactive"]], "For Beginners": [[224, "For-Beginners"]], "Not For Beginners?": [[224, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[224, "Strings,-1st-Explanation"]], "Operator Precedence": [[224, "Operator-Precedence"], [227, "Operator-Precedence"], [987, "operator-precedence"]], "Floating Point Numbers": [[224, "Floating-Point-Numbers"], [987, "floating-point-numbers"]], "Docstrings": [[224, "Docstrings"], [230, "Docstrings"], [297, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[224, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[224, "Random-Numbers"]], "Indexing and Slicing": [[224, "Indexing-and-Slicing"], [272, "Indexing-and-Slicing"], [993, "indexing-and-slicing"]], "for Loops": [[224, "for-Loops"], [327, "for-loops"], [994, "for-loops"]], "range()": [[224, "range()"], [252, "range()"]], "Filterketten": [[224, "Filterketten"]], "Zen": [[224, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[224, "Compound-Datatypes-By-Example:-List,-Tuple"], [988, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[224, "Compound-Datatypes-By-Example:-Dictionary"], [988, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[224, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[224, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[224, "Compound-Datatypes-By-Example:-Set"], [988, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[224, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[226, "python-basics-2022-04-25-2022-04-27"], [320, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[227, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[227, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[227, "Variables-and-Types"]], "Swap": [[227, "Swap"]], "Integers are Infinitely long": [[227, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[227, "Floating-Point-Comparison"]], "Mutability/Immutability": [[227, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[227, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[227, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1020, "exercise-determine-maximum-of-two-numbers"], [1030, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[227, "Ranges"], [678, "ranges"]], "Exercise: Sort out Duplicates": [[227, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[227, "Algorithmic-Complexity"]], "More On Dictionaries": [[227, "More-On-Dictionaries"]], "More On Sets": [[227, "More-On-Sets"]], "eval(), json": [[227, "eval(),-json"]], "Encoding": [[227, "Encoding"], [251, "encoding"], [272, "Encoding"], [302, "encoding"], [1072, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[229, "python-2022-05-02-2022-05-05"], [320, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[229, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[229, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[229, "excursion-can-communication-oo-modules"]], "Modules": [[229, "modules"], [242, "Modules"], [302, "modules"], [673, "modules"], [963, "modules"]], "CSV, Functions": [[229, "csv-functions"]], "PyPI, Virtual Environments": [[229, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[229, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[229, "more-on-datatypes"]], "Random Topics": [[229, "random-topics"]], "Standard Library": [[229, "standard-library"]], "Hello Jupyter Notebook": [[230, "Hello-Jupyter-Notebook"]], "Syntax etc": [[230, "Syntax-etc"]], "Mutability": [[230, "Mutability"], [262, "Mutability"]], "Removing Elements": [[230, "Removing-Elements"], [583, "removing-elements"]], "Nested Lists?": [[230, "Nested-Lists?"]], "while loops, and else": [[230, "while-loops,-and-else"]], "for loops (and else)": [[230, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[230, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[230, "Encoding,-and-String"]], "Regular Expression": [[230, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[230, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[230, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[230, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[230, "itertools.chain()"]], "Destructor?": [[230, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[230, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[232, "python-advanced-2022-05-16-2022-05-18"], [320, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[232, "project-management"], [309, "project-management"], [310, "project-management"], [314, "project-management"]], "Unit Testing, Test Driven Development": [[232, "unit-testing-test-driven-development"]], "Object Priented Programming": [[232, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[232, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[232, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[232, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[232, "xml-element-tree"]], "Projektabschlusstag": [[232, "projektabschlusstag"]], "Basic Python": [[232, "basic-python"], [1122, "basic-python"]], "Assert": [[233, "Assert"]], "The id() function": [[233, "The-id()-function"]], "class Person": [[233, "class-Person"]], "Functions That Do Not Return Anything": [[233, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[233, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[233, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[233, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[233, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[233, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[235, "vorbesprechung-2022-05-11"]], "Legende": [[235, "legende"]], "Neuerungen in C++ seit 2011": [[235, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[235, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[235, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[235, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[236, "c-a-new-language-starting-in-2011"], [237, "c-a-new-language-starting-in-2011"]], "Metadata": [[236, "metadata"], [237, "metadata"], [239, "metadata"], [840, "metadata"]], "Introduction": [[236, "introduction"], [237, "introduction"], [239, "introduction"], [258, "introduction"], [259, "introduction"], [283, "introduction"], [323, "introduction"], [340, "introduction"], [402, "introduction"], [433, "introduction"], [528, "introduction"], [625, "introduction"], [684, "introduction"], [708, "introduction"], [758, "introduction"], [955, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[236, "pythonicity-thank-you-readablility-and-writability"], [237, "pythonicity-thank-you-readablility-and-writability"], [239, "pythonicity-thank-you-readablility-and-writability"], [283, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[236, "range-based-for-loops"], [237, "range-based-for-loops"], [239, "range-based-for-loops"], [283, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[236, "tuple-unpacking-err-structured-binding"], [237, "tuple-unpacking-err-structured-binding"], [239, "tuple-unpacking-err-structured-binding"], [283, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[236, "duck-typing-err-auto-without-a-duck"], [237, "duck-typing-err-auto-without-a-duck"], [239, "duck-typing-err-auto-without-a-duck"], [283, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[236, "things-that-simply-deserved-fixing-since-ages"], [237, "things-that-simply-deserved-fixing-since-ages"], [239, "things-that-simply-deserved-fixing-since-ages"], [283, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[236, "brace-initialization"], [237, "brace-initialization"], [239, "brace-initialization"], [283, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[236, "new-oo-keywords-override-final-default-delete"], [237, "new-oo-keywords-override-final-default-delete"], [239, "new-oo-keywords-override-final-default-delete"], [283, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[236, "strongly-typed-enum"], [237, "strongly-typed-enum"], [239, "strongly-typed-enum"], [283, "strongly-typed-enum"], [628, "strongly-typed-enum"]], "Delegating Constructor": [[236, "delegating-constructor"], [237, "delegating-constructor"], [239, "delegating-constructor"], [283, "delegating-constructor"], [633, "delegating-constructor"]], "nullptr": [[236, "nullptr"], [237, "nullptr"], [239, "nullptr"], [283, "nullptr"], [641, "nullptr"]], "Smart Pointers": [[236, "smart-pointers"], [237, "smart-pointers"], [239, "smart-pointers"], [259, "smart-pointers"], [505, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[236, "moving-rvalue-references"], [237, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[236, "functions-std-bind-std-function-lambdas"], [237, "functions-std-bind-std-function-lambdas"], [239, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[237, "work-environment"], [239, "work-environment"], [257, "work-environment"], [258, "work-environment"], [259, "work-environment"], [309, "work-environment"]], "Skeleton Project": [[237, "skeleton-project"], [239, "skeleton-project"], [547, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[238, "linux-basics-2022-10-03-2022-10-05"], [320, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[239, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [320, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[239, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[239, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[239, "coroutines-and-c-23-generators"]], "Ranges And Views": [[239, "ranges-and-views"]], "Concepts": [[239, "concepts"], [283, "concepts"], [643, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[240, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [320, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[240, "monday"]], "Tuesday": [[240, "tuesday"]], "Wednesday": [[240, "wednesday"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[241, "python-2022-11-07-2022-11-10-2022-12-01"], [320, "python-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[241, "up-front-project-management"], [260, "up-front-project-management"], [279, "up-front-project-management"]], "Object Oriented Programming: Classes": [[241, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[241, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[241, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[241, "exercise-series-csv-json"]], "Iteration, Generators": [[241, "iteration-generators"]], "Going Dynamic: type(), exec()": [[241, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[241, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[241, "group-project-kickoff"], [261, "group-project-kickoff"]], "Data Structures Recap": [[241, "data-structures-recap"]], "Miscellaneous Livehacking": [[241, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[241, "function-arguments-closures-decorators"], [276, "function-arguments-closures-decorators"]], "Exceptions, with": [[241, "exceptions-with"], [276, "exceptions-with"]], "Package Management": [[241, "package-management"]], "Videos": [[241, "videos"]], "Beginner": [[241, "beginner"], [265, "beginner"]], "Advanced": [[241, "advanced"], [265, "advanced"]], "Fun": [[241, "fun"]], "Python (2022-10-17)": [[242, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[242, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[242, "Variables,-Types"]], "Immutable? References?": [[242, "Immutable?-References?"]], "And range()?": [[242, "And-range()?"]], "More About Dictionaries": [[242, "More-About-Dictionaries"], [242, "id1"], [245, "More-About-Dictionaries"], [272, "More-About-Dictionaries"], [1004, "more-about-dictionaries"]], "More About Lists": [[242, "More-About-Lists"], [245, "More-About-Lists"], [272, "More-About-Lists"], [1003, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[244, "python-2022-11-16-2022-11-18"], [245, "Python-(2022-11-16---2022-11-18)"], [320, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[244, "control-flow-sequences-iteration"], [251, "control-flow-sequences-iteration"], [254, "control-flow-sequences-iteration"], [264, "control-flow-sequences-iteration"], [265, "control-flow-sequences-iteration"], [270, "control-flow-sequences-iteration"], [271, "control-flow-sequences-iteration"], [271, "id2"]], "More Datatypes": [[244, "more-datatypes"], [251, "more-datatypes"], [254, "more-datatypes"], [264, "more-datatypes"], [265, "more-datatypes"], [265, "id2"], [270, "more-datatypes"], [271, "more-datatypes"], [325, "more-datatypes"]], "Exercise Series: CSV Files": [[244, "exercise-series-csv-files"], [264, "exercise-series-csv-files"], [265, "exercise-series-csv-files"], [270, "exercise-series-csv-files"], [271, "exercise-series-csv-files"]], "Advanced Language Features": [[244, "advanced-language-features"], [264, "advanced-language-features"], [265, "advanced-language-features"], [270, "advanced-language-features"], [388, "advanced-language-features"]], "Noob Exercises": [[244, "noob-exercises"]], "Object Oriented": [[245, "Object-Oriented"]], "Lists and Tuples": [[245, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[245, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[245, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[245, "And-Lists?-Mutable!"]], "Tuples?": [[245, "Tuples?"]], "set": [[245, "set"]], "More About Sets": [[245, "More-About-Sets"], [272, "More-About-Sets"], [1005, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[245, "Comprehensions-(List,-Dictionary,-Set)"], [952, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[245, "Generator-Expressions"]], "eval and exec": [[245, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[247, "linux-basics-2023-01-23-2023-01-26"], [320, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[248, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [320, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[248, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[248, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[248, "day-1-overview"]], "Introductory Live Hacking": [[248, "introductory-live-hacking"]], "The Shell": [[248, "the-shell"]], "Processes Quick Walk-Through": [[248, "processes-quick-walk-through"]], "Permissions": [[248, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[248, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[248, "uart"]], "SUSI": [[248, "susi"]], "Secure Shell (SSH)": [[248, "secure-shell-ssh"]], "Miscellaneous Hardware": [[248, "miscellaneous-hardware"]], "Group Exercise": [[248, "group-exercise"]], "Untold": [[248, "untold"], [258, "untold"], [261, "untold"]], "More From The Commandline": [[248, "more-from-the-commandline"]], "Multithreading (And C++)": [[248, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[249, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[249, "Filter-in-Pandas"]], "Copy vs Reference": [[249, "Copy-vs-Reference"]], "Immutable": [[249, "Immutable"]], "String": [[249, "String"]], "Regex": [[249, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[250, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[250, "pipeline-driver"]], "Virtual Environment Setup": [[250, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[250, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[250, "filter-select-uncategorized"]], "More Categories": [[250, "more-categories"]], "Testing": [[250, "testing"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[251, "python-for-sap-developers-2023-03-13-2023-03-15"], [320, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[251, "day-1-basics"]], "Demo": [[251, "demo"]], "Day 2 (Basics, Continued)": [[251, "day-2-basics-continued"]], "Pandas": [[251, "pandas"], [252, "Pandas"], [254, "pandas"], [258, "pandas"], [1079, "pandas"]], "Hacking About On A SAP Test Dataset": [[251, "hacking-about-on-a-sap-test-dataset"], [255, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[251, "untold-from-original-agenda"]], "OO Introduction": [[251, "oo-introduction"], [254, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[251, "context-managers-automatic-cleanup"], [254, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[251, "iteration-generators-comprehensions"], [254, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[251, "decorators-and-related-topics"], [254, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[251, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[252, "2023-03-13"]], "Comment vs Docstring": [[252, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[252, "Mutable?-Immutable?"]], "Lists": [[252, "Lists"], [252, "id2"], [266, "Lists"]], "Tuples": [[252, "Tuples"]], "DataType Conversiosn": [[252, "DataType-Conversiosn"]], "String, File IO Exercise": [[252, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[253, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[254, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[254, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[254, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[254, "day-3-domain-specifics"]], "NumPy": [[254, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[256, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[256, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[256, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[256, "DataFrame.all()-(and-any())"]], "Column Selection": [[256, "Column-Selection"]], "Dropping Columns": [[256, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[256, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[256, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[256, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[256, "Conversion"]], "Usage: A Filter": [[256, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[256, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[256, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[257, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[257, "preferred-ubuntu-under-windows-wsl"], [259, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[257, "unsupported-environments"]], "Skeleton Project Setup": [[257, "skeleton-project-setup"], [259, "skeleton-project-setup"]], "Classes, Objects, Methods": [[257, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[257, "heavy-weight-oo-muscle"], [259, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[257, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[257, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[257, "a-little-concurrency"]], "Untold So Far": [[257, "untold-so-far"]], "C++ Standard Library": [[257, "c-standard-library"]], "Miscellaneous Topics": [[257, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[258, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[258, "clean-code"], [260, "clean-code"], [261, "clean-code"]], "Demo Hacking": [[258, "demo-hacking"]], "Python Development: Select Topics": [[258, "python-development-select-topics"]], "Built-In Types: Facts": [[258, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[258, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[258, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[258, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[258, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[258, "decorators-the-ominous"]], "Modules And Packages": [[258, "modules-and-packages"], [279, "modules-and-packages"]], "Design Patterns": [[258, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[259, "c-for-embedded-developers-2023-04-18-2023-04-20"], [320, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[259, "some-details"]], "Standard Template Library": [[259, "standard-template-library"], [595, "standard-template-library"]], "Warm-Up": [[259, "warm-up"]], "Sensor Exercise, Resolved": [[259, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[259, "oo-cont-d"]], "Smart Pointers (Continued)": [[259, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[259, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[259, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[260, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[260, "day-1-python-inside-out"], [261, "day-1-python-inside-out"]], "Exercise Prerequisites": [[260, "exercise-prerequisites"], [279, "exercise-prerequisites"]], "References And Other Pitfalls": [[260, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[260, "looping-constructs-with-an-emphasis-on-the-else-clause"], [279, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[260, "closures-decorators-and-more"], [261, "closures-decorators-and-more"], [279, "closures-decorators-and-more"]], "Dynamic Features": [[260, "dynamic-features"], [261, "dynamic-features"], [262, "Dynamic-Features"], [279, "dynamic-features"]], "Error Handling And Recovery": [[260, "error-handling-and-recovery"], [261, "error-handling-and-recovery"], [279, "error-handling-and-recovery"]], "Miscellaneous Threading": [[260, "miscellaneous-threading"], [261, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[260, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[260, "group-project-discussion"]], "Design Patterns Overview": [[260, "design-patterns-overview"], [261, "design-patterns-overview"]], "Day 3: Group Project": [[260, "day-3-group-project"], [261, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[261, "python-advanced-2023-04-24-2023-04-26"], [280, "python-advanced-2023-04-24-2023-04-26"], [320, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[261, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[261, "morning-opening"]], "Object Oriented Programming (Continued)": [[261, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[261, "project-setup-ide-usage"]], "Continue Hacking": [[261, "continue-hacking"]], "Test Driven Development, pytest": [[261, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[262, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[262, "is-vs.\u00a0=="]], "Compound DataTypes": [[262, "Compound-DataTypes"]], "class": [[262, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[263, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[264, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[265, "python-basics-2023-05-15-2023-05-17"], [266, "Python-Basics-(2023-05-15---2023-05-17)"], [320, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[265, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[265, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[265, "modules-from-standard-library"], [1056, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[266, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[266, "The-range-Function"], [995, "the-range-function"]], "Lambda, And Functional Programming Tools": [[266, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[268, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[269, "linux-basics-2023-05-23-2023-05-25"], [320, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[269, "introduction-concepts-and-terminology"], [792, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[269, "the-shell-bash-bourne-again-shell"], [269, "id1"], [838, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[269, "tools-inspecting-text-files"], [848, "tools-inspecting-text-files"]], "File System Permissions": [[269, "file-system-permissions"], [269, "id2"], [813, "file-system-permissions"]], "Morning Wakeup": [[269, "morning-wakeup"], [271, "morning-wakeup"]], "I/O Redirection And Pipes": [[269, "i-o-redirection-and-pipes"], [799, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[269, "archiving-and-compression"], [781, "archiving-and-compression"], [783, "archiving-and-compression"]], "Networking": [[269, "networking"]], "Processes And Scheduling": [[269, "processes-and-scheduling"]], "SSH: Secure Shell": [[269, "ssh-secure-shell"], [870, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[269, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[270, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[271, "python-basics-2023-06-20-2023-06-22"], [272, "Python-Basics-(2023-06-20---2023-06-22)"], [320, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[271, "day2"]], "File I/O, And Encoding": [[271, "file-i-o-and-encoding"]], "Python Videos": [[271, "python-videos"]], "NumPy, Pandas, Matplotlib": [[271, "numpy-pandas-matplotlib"]], "DataTypes": [[272, "DataTypes"]], "(Im)mutable?": [[272, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[272, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[272, "len(),-range(),-for"]], "Generators, yield": [[272, "Generators,-yield"]], "Other -ables: Callable": [[272, "Other--ables:-Callable"]], "exec() (and eval())": [[272, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[272, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[273, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[274, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[274, "toolchain-introduction"], [1115, "toolchain-introduction"]], "Project Structure, Dependencies": [[274, "project-structure-dependencies"], [1115, "project-structure-dependencies"]], "External Dependencies": [[274, "external-dependencies"], [415, "external-dependencies"], [1115, "external-dependencies"]], "Code Generators": [[274, "code-generators"], [1115, "code-generators"]], "Automatic Testing": [[274, "automatic-testing"], [1115, "automatic-testing"]], "Installation And Deployment": [[274, "installation-and-deployment"], [1115, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[275, "cmake-an-introduction-2023-07-18"], [320, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[276, "python-advanced-2023-09-25-2023-09-27"], [277, "Python-Advanced-(2023-09-25---2023-09-27)"], [320, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[276, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[276, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[276, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[276, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[276, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[277, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[277, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[278, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Agenda: Python Advanced (2023-10-23 - 2023-10-25)": [[279, "agenda-python-advanced-2023-10-23-2023-10-25"]], "Day 1: Basic Python": [[279, "day-1-basic-python"]], "Datatypes, Datatypes": [[279, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[279, "day-2-advanced-python-features"]], "Multiprocessing": [[279, "multiprocessing"]], "Day 3: Into The Wild": [[279, "day-3-into-the-wild"]], "Data Science Topics": [[279, "data-science-topics"]], "Group Project: An Idea": [[279, "group-project-an-idea"]], "Jupyter Notebook: Python Advanced": [[281, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[282, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: C++: Advanced Topics": [[283, "agenda-c-advanced-topics"]], "constexpr, constinit, consteval": [[283, "constexpr-constinit-consteval"]], "Smart Pointers, And Move Semantics": [[283, "smart-pointers-and-move-semantics"]], "Types, Functions, Type Erasure, Toolcase": [[283, "types-functions-type-erasure-toolcase"]], "Functions (std::function<>, Lambdas)": [[283, "functions-std-function-lambdas"]], "Type Erasure": [[283, "type-erasure"]], "C++ Toolcase": [[283, "c-toolcase"]], "Dynamic Versus Static Typing: Templates": [[283, "dynamic-versus-static-typing-templates"]], "Outlook In >=20": [[283, "outlook-in-20"]], "Attributes And The Like": [[283, "attributes-and-the-like"]], "<algorithm> Overview": [[283, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[283, "miscellaneous-miscellaneous"]], "C++: Advanced Topics": [[284, "c-advanced-topics"]], "C++ For Embedded Developers (Beginning of 2023)": [[285, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[286, "python-sap"]], "Screenplay Checker": [[287, "screenplay-checker"]], "GPIO: Blinklicht": [[288, "gpio-blinklicht"]], "Commandline": [[288, "commandline"], [293, "commandline"], [818, "commandline"]], "sysfs GPIO": [[288, "sysfs-gpio"]], "Electronic Aspect": [[288, "electronic-aspect"]], "External Circuitry": [[288, "external-circuitry"]], "Raspberry Header Pinout": [[288, "raspberry-header-pinout"]], "Dependencies": [[288, "dependencies"], [289, "dependencies"], [290, "dependencies"], [291, "dependencies"], [293, "dependencies"], [416, "dependencies"], [433, "dependencies"], [447, "dependencies"], [475, "dependencies"], [492, "dependencies"], [494, "dependencies"], [505, "dependencies"], [572, "dependencies"], [578, "dependencies"], [582, "dependencies"], [590, "dependencies"], [592, "dependencies"], [595, "dependencies"], [600, "dependencies"], [608, "dependencies"], [609, "dependencies"], [611, "dependencies"], [613, "dependencies"], [614, "dependencies"], [615, "dependencies"], [616, "dependencies"], [617, "dependencies"], [618, "dependencies"], [619, "dependencies"], [620, "dependencies"], [621, "dependencies"], [622, "dependencies"], [623, "dependencies"], [629, "dependencies"], [636, "dependencies"], [643, "dependencies"], [654, "dependencies"], [678, "dependencies"], [683, "dependencies"], [785, "dependencies"], [786, "dependencies"], [787, "dependencies"], [791, "dependencies"], [805, "dependencies"], [806, "dependencies"], [807, "dependencies"], [826, "dependencies"], [831, "dependencies"], [832, "dependencies"], [835, "dependencies"], [868, "dependencies"], [870, "dependencies"], [877, "dependencies"], [883, "dependencies"], [885, "dependencies"], [893, "dependencies"], [895, "dependencies"], [897, "dependencies"], [909, "dependencies"], [912, "dependencies"], [936, "dependencies"], [938, "dependencies"], [939, "dependencies"], [942, "dependencies"], [943, "dependencies"], [964, "dependencies"], [966, "dependencies"], [1012, "dependencies"], [1013, "dependencies"], [1016, "dependencies"], [1017, "dependencies"], [1018, "dependencies"], [1020, "dependencies"], [1021, "dependencies"], [1022, "dependencies"], [1023, "dependencies"], [1024, "dependencies"], [1025, "dependencies"], [1029, "dependencies"], [1030, "dependencies"], [1031, "dependencies"], [1032, "dependencies"], [1033, "dependencies"], [1035, "dependencies"], [1036, "dependencies"], [1037, "dependencies"], [1038, "dependencies"], [1039, "dependencies"], [1040, "dependencies"], [1041, "dependencies"], [1043, "dependencies"], [1044, "dependencies"], [1045, "dependencies"], [1046, "dependencies"], [1047, "dependencies"], [1048, "dependencies"], [1050, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1053, "dependencies"], [1069, "dependencies"], [1072, "dependencies"], [1075, "dependencies"], [1079, "dependencies"], [1092, "dependencies"], [1098, "dependencies"]], "GPIO: Blinklicht Interface": [[289, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[290, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[291, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[292, "ece19-exercises-and-custom-topics"]], "Reading a File": [[293, "reading-a-file"], [880, "reading-a-file"]], "Output": [[293, "output"]], "2021-05-20 (G2)": [[294, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[294, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[294, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[294, "Reading-File-Line-by-Line"]], "Iterating a File": [[294, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[294, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[294, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[294, "str.split()"]], "2021-05-21": [[295, "2021-05-21"], [302, "id11"]], "Modules and Packages": [[295, "Modules-and-Packages"], [963, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[296, "Strings-vs.\u00a0Bytes"]], "Batteries": [[297, "Batteries"]], "Key Value Map": [[297, "Key-Value-Map"]], "Comments vs Documentation": [[297, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[297, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[297, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[297, "Arithmetic-Operators"], [346, "arithmetic-operators"], [975, "arithmetic-operators"]], "Wertebereich von Integers": [[297, "Wertebereich-von-Integers"]], "An Example": [[298, "An-Example"], [998, "an-example"]], "Sidenote: Pure Beauty": [[298, "Sidenote:-Pure-Beauty"], [998, "sidenote-pure-beauty"]], "Parameters and Types": [[298, "Parameters-and-Types"], [998, "parameters-and-types"]], "Pitfalls": [[298, "Pitfalls"]], "Cloud Computer, SSH Login": [[299, "cloud-computer-ssh-login"]], "Machine, Logins": [[299, "machine-logins"]], "Login via Secure Shell (SSH)": [[299, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[300, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[301, "embedded-computing-1-ece-19"]], "Daily Log": [[302, "daily-log"]], "2021-03-04": [[302, "id1"]], "2021-03-05": [[302, "id2"]], "Cheat Sheets": [[302, null]], "2021-03-18": [[302, "id3"]], "2021-03-26": [[302, "id4"]], "2021-04-15": [[302, "id5"]], "2021-04-21": [[302, "id6"]], "Git Intro": [[302, "git-intro"]], "Download and Installation": [[302, null], [307, null]], "2021-04-29": [[302, "id7"]], "2021-05-10": [[302, "id8"]], "Org Stuff": [[302, "org-stuff"]], "Python: Functions": [[302, "python-functions"]], "2021-05-12": [[302, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[302, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[302, "id10"]], "Reiterating on Exercise": [[302, "reiterating-on-exercise"]], "import argparse": [[302, "import-argparse"]], "Exercise digit (Once More)": [[302, "exercise-digit-once-more"]], "2021-06-01": [[302, "id12"]], "sysfs GPIO: Blinking an LED": [[302, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[302, "id13"]], "Embedded Computing 1 (Deutsch)": [[303, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[303, "lehrinhalte"]], "Lernergebnisse der LV": [[303, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[303, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[303, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[303, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[303, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[304, "embedded-computing-1-english"]], "Course Content": [[304, "course-content"]], "Learning Outcome": [[304, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[304, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[304, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[304, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[304, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[305, "plan-for-summer-2021"]], "Linux Introduction": [[305, "linux-introduction"]], "Slides": [[305, null], [305, null], [305, null]], "C/C++ Development": [[305, "c-c-development"]], "Python Development": [[305, "python-development"]], "2021-10-07": [[306, "id1"]], "Whose Fault It Is": [[306, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[307, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[307, "linux-unix"]], "Git": [[307, "git"]], "2021-10-28": [[308, "id1"]], "Group Project": [[308, "group-project"]], "Discussion of Tasks": [[308, "discussion-of-tasks"]], "TODOs": [[308, "todos"]], "2021-11-15": [[309, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[309, "systems-programming-files-directories-links"]], "2021-11-29": [[310, "id1"]], "jjjj": [[310, "jjjj"]], "2021-12-1{4,5}": [[311, "id1"]], "Future Topics": [[311, "future-topics"]], "Threading": [[311, "threading"]], "C++ Sideways": [[311, "c-sideways"]], "2022-01-10": [[312, "id1"]], "Scheduling": [[312, "scheduling"], [914, "scheduling"], [915, "scheduling"]], "2022-01-12": [[313, "id1"]], "Scheduling and Realtime": [[313, "scheduling-and-realtime"], [317, "scheduling-and-realtime"]], "2022-02-15": [[314, "id1"]], "Agenda/Log": [[315, "agenda-log"], [316, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[316, "embedded-computing-2-ece-19"]], "Project Repository": [[316, "project-repository"]], "Test Material": [[316, "test-material"]], "Exam Material Overview": [[317, "exam-material-overview"]], "Questions": [[317, "questions"], [317, "id1"], [609, "questions"], [791, "questions"], [805, "questions"], [806, "questions"], [831, "questions"], [938, "questions"]], "Slide Material": [[317, "slide-material"], [317, "id2"]], "Embedded Computing 1+2, ECE 19": [[318, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[320, "bisher-gehaltene"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[320, "python-advanced-2023-10-24-2023-10-26"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[320, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[320, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[320, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[320, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[320, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[320, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[320, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[320, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[320, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[320, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[320, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[320, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[320, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[320, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[320, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[320, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[320, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[320, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[320, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[320, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[320, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[320, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[320, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[320, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[320, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[320, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[320, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[320, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[320, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[320, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[320, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[320, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[320, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[320, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[320, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[320, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[320, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[320, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[320, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[320, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[320, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[320, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[320, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[320, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[320, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[320, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[320, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[320, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[320, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[320, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[320, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[320, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[320, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[320, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[320, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[320, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[320, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[320, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[320, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[320, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[320, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[320, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[320, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[320, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[320, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[320, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[320, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[320, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[320, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[320, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[320, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[320, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[320, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[320, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[320, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[320, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[320, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[320, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[320, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[320, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[321, "training-material-overview-and-download"]], "Installation": [[322, "installation"], [875, "installation"], [1010, "installation"], [1075, "installation"], [1100, "installation"]], "On Windows": [[322, "on-windows"]], "On Linux": [[322, "on-linux"]], "The Book (1)": [[323, "the-book-1"]], "The Book (2)": [[323, "the-book-2"]], "The Beginning": [[323, "the-beginning"]], "Cool Guys and Their Hobby": [[323, "cool-guys-and-their-hobby"]], "History of UNIX": [[323, "history-of-unix"]], "My First Program (1)": [[324, "my-first-program-1"]], "My First Program (2)": [[324, "my-first-program-2"]], "Character Arrays - Strings": [[324, "character-arrays-strings"]], "Variables and Arithmetic": [[325, "variables-and-arithmetic"]], "My Second Program (1)": [[325, "my-second-program-1"]], "My Second Program (2)": [[325, "my-second-program-2"]], "My Second Program (3)": [[325, "my-second-program-3"]], "My Second Program (4)": [[325, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[326, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[327, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[327, "for-loop-simplification-2"]], "Second Program, revisited": [[327, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[328, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[329, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[329, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[330, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[331, "character-i-o"]], "The Outside World": [[331, "the-outside-world"]], "cat for the Poor (1)": [[331, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[331, "cat-for-the-poor-2"]], "More Examples \u2026": [[331, "more-examples"]], "More Examples - if": [[331, "more-examples-if"]], "if, Formally": [[331, "if-formally"]], "Operators, Formally": [[331, "operators-formally"]], "Exercise: wc For The Poor": [[332, "exercise-wc-for-the-poor"]], "Arrays": [[333, "arrays"]], "Array Definition, Explicit Initialization": [[333, "array-definition-explicit-initialization"]], "Array Access": [[333, "array-access"]], "Discussion: Initialization": [[333, "discussion-initialization"]], "Discussion: if, else": [[333, "discussion-if-else"]], "Array Initializer": [[333, "array-initializer"]], "Discussion: Initializer": [[333, "discussion-initializer"]], "Initialization using memset()": [[333, "initialization-using-memset"]], "Discussion: memset()": [[333, "discussion-memset"]], "Exercise: Character Histogram": [[334, "exercise-character-histogram"]], "A Nonsensical Example": [[335, "a-nonsensical-example"]], "Function Signature": [[335, "function-signature"]], "Discussion": [[335, "discussion"]], "Definition vs. Declaration (1)": [[335, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[335, "definition-vs-declaration-2"]], "By Value / By Reference": [[335, "by-value-by-reference"]], "Exercise: Forward Declaration": [[336, "exercise-forward-declaration"]], "Character Arrays": [[337, "character-arrays"]], "Strings: Mistake by Design?": [[337, "strings-mistake-by-design"]], "Strings: Definition": [[337, "strings-definition"]], "Strings: Library Functions": [[337, "strings-library-functions"]], "Strings as Parameters": [[337, "strings-as-parameters"]], "Strings: Dangers": [[337, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[338, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[339, "lifetime-of-variables"]], "Lifetime": [[339, "lifetime"]], "Global Variables": [[339, "global-variables"], [513, "global-variables"]], "Global Variables: How?": [[339, "global-variables-how"]], "Group Description": [[340, "group-description"], [355, "group-description"], [364, "group-description"], [371, "group-description"], [377, "group-description"], [381, "group-description"], [384, "group-description"], [388, "group-description"], [397, "group-description"], [401, "group-description"], [406, "group-description"], [407, "group-description"], [527, "group-description"], [535, "group-description"], [550, "group-description"], [553, "group-description"], [556, "group-description"], [597, "group-description"], [606, "group-description"], [625, "group-description"], [667, "group-description"], [668, "group-description"], [692, "group-description"], [700, "group-description"], [704, "group-description"], [708, "group-description"], [710, "group-description"], [852, "group-description"], [860, "group-description"], [861, "group-description"], [915, "group-description"]], "Type System": [[341, "type-system"]], "Variable Names": [[342, "variable-names"]], "Variable- and Function Names": [[342, "variable-and-function-names"]], "Data Types, Sizes": [[343, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[343, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[343, "integer-variants-qualifiers"]], "Widths": [[343, "widths"]], "Constants": [[344, "constants"]], "Constants and Types": [[344, "constants-and-types"]], "Character Constants: Escape Sequences": [[344, "character-constants-escape-sequences"]], "String Constants": [[344, "string-constants"]], "Character vs. String Constants": [[344, "character-vs-string-constants"]], "Symbolic Constants (1)": [[344, "symbolic-constants-1"]], "Symbolic Constants (2)": [[344, "symbolic-constants-2"]], "Variable Definitions": [[345, "variable-definitions"]], "Definitions und Initialization": [[345, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[345, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[345, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[346, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[346, "arithmetic-operators-2"]], "Relational and Logical Operators": [[347, "relational-and-logical-operators"]], "Relational Operators (1)": [[347, "relational-operators-1"]], "Relational Operators (2)": [[347, "relational-operators-2"]], "Logical (Boolean) Operators": [[347, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[347, "boolean-operators-short-circuit"]], "Type Conversions": [[348, "type-conversions"]], "Implicit Type Conversions": [[348, "implicit-type-conversions"]], "Sign Bugs": [[348, "sign-bugs"]], "Truncation": [[348, "truncation"]], "Sign Propagation": [[348, "sign-propagation"]], "Conversion Using Operators": [[348, "conversion-using-operators"]], "Conversion and unsigned (1)": [[348, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[348, "conversion-and-unsigned-2"]], "Compiler Warnings": [[348, "compiler-warnings"]], "Last Warning": [[348, "last-warning"], [908, "last-warning"]], "Forced Conversion - Cast": [[348, "forced-conversion-cast"]], "Increment, Decrement": [[349, "increment-decrement"]], "Confusion: ++, --": [[349, "confusion"]], "Confused to perfection (1)": [[349, "confused-to-perfection-1"]], "Confused to perfection (2)": [[349, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[350, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[351, "bit-operators"]], "Bit Manipulation": [[351, "bit-manipulation"]], "Bitwise AND and OR": [[351, "bitwise-and-and-or"]], "Bitwise XOR": [[351, "bitwise-xor"]], "Shift Left": [[351, "shift-left"]], "Shift Right": [[351, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[351, "inverting-one-s-complement"]], "Assignment with Calculation": [[352, "assignment-with-calculation"]], "Combined Operators": [[352, "combined-operators"]], "?: - Conditional Expression": [[353, "conditional-expression"]], "?: - Conditional Expression (1)": [[353, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[353, "conditional-expression-2"]], "Precedence, Associativity": [[354, "precedence-associativity"]], "Summary: Operators": [[354, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[354, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[354, "operators-precedence-und-associativity-2"]], "More Warnings": [[354, "more-warnings"]], "Types, Operators, Expressions": [[355, "types-operators-expressions"]], "Statements and Blocks": [[356, "statements-and-blocks"]], "Statement vs. Block": [[356, "statement-vs-block"]], "if - else": [[357, "if-else"]], "Branches": [[357, "branches"]], "True or False? What is Truth?": [[357, "true-or-false-what-is-truth"]], "else is optional (1)": [[357, "else-is-optional-1"]], "else is optional (2)": [[357, "else-is-optional-2"]], "else - if": [[358, "else-if"]], "Style Matters": [[358, "style-matters"]], "switch": [[359, "switch"], [359, "id1"]], "Case Distinctions": [[359, "case-distinctions"]], "if - else if vs. switch": [[359, "if-else-if-vs-switch"]], "Loops: while and for": [[360, "loops-while-and-for"]], "while: general purpose loop": [[360, "while-general-purpose-loop"]], "From while to for (1)": [[360, "from-while-to-for-1"]], "From while to for (2)": [[360, "from-while-to-for-2"]], "for, a Little Closer": [[360, "for-a-little-closer"]], "Comma Operator": [[360, "comma-operator"]], "for: Infamous Idioms": [[360, "for-infamous-idioms"]], "Loops: do - while": [[361, "loops-do-while"]], "do - while: Condition After Body": [[361, "do-while-condition-after-body"]], "goto and Labels": [[363, "goto-and-labels"]], "Structured Programming vs. goto": [[363, "structured-programming-vs-goto"]], "goto: Definition": [[363, "goto-definition"]], "goto: Use Cases": [[363, "goto-use-cases"]], "Program Flow": [[364, "program-flow"]], "Nesting": [[365, "nesting"]], "Declaration vs. Definition": [[365, "declaration-vs-definition"]], "A Monolithic Program": [[365, "a-monolithic-program"]], "Separate Compilation": [[365, "separate-compilation"]], "Extern/Global Variables": [[366, "extern-global-variables"]], "Variables: Declaration and Definition": [[366, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[366, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[366, "variables-separating-declaration-from-definition-2"]], "Header Files": [[367, "header-files"]], "Declarations: Problems (1)": [[367, "declarations-problems-1"]], "Declarations: Problems (2)": [[367, "declarations-problems-2"]], "Declarations: Solutions": [[367, "declarations-solutions"]], "Static Variables": [[368, "static-variables"]], "Lifetime and Visibility (1)": [[368, "lifetime-and-visibility-1"]], "Automatic Variables": [[368, "automatic-variables"]], "Local static Variable": [[368, "local-static-variable"]], "Global static Variable": [[368, "global-static-variable"]], "Global Variable": [[368, "global-variable"], [997, "global-variable"]], "C Preprocessor: Basics": [[369, "c-preprocessor-basics"]], "#include": [[369, "include"]], "Macros: Text Replacement": [[369, "macros-text-replacement"]], "Macros: Constant Definition": [[369, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[369, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[369, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[369, "include-guards-1"]], "Include Guards (2)": [[369, "include-guards-2"]], "The C Preprocessor: Last Words": [[369, "the-c-preprocessor-last-words"], [370, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[370, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[370, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[370, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[370, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[370, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[370, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[370, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[370, "stringification-1"]], "Stringification (2)": [[370, "stringification-2"]], "Token Pasting (1)": [[370, "token-pasting-1"]], "Token Pasting (2)": [[370, "token-pasting-2"]], "Warnings and Errors": [[370, "warnings-and-errors"]], "Predefined Macros (1)": [[370, "predefined-macros-1"]], "Functions and Program Structure": [[371, "functions-and-program-structure"]], "Pointers and Addresses": [[372, "pointers-and-addresses"]], "Pointers: Basics": [[372, "pointers-basics"]], "Pointer: Operators": [[372, "pointer-operators"]], "More Examples": [[372, "more-examples"]], "Pointers as Function Parameters": [[373, "pointers-as-function-parameters"]], "Call by Reference (1)": [[373, "call-by-reference-1"]], "Call by Reference (2)": [[373, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[374, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[375, "pointers-and-arrays"], [377, "pointers-and-arrays"]], "It\u2019s Only Memory": [[375, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[375, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[375, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[375, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[375, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[375, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[375, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[375, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[375, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[375, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[376, null], [789, null], [794, null], [794, null], [795, null], [795, null], [795, null], [800, null], [801, null], [884, null], [911, null], [914, null], [918, null], [920, null], [999, null]], "main() Can Take Parameters": [[376, "main-can-take-parameters"]], "struct: Basics": [[378, "struct-basics"]], "struct: Compound Datatypes": [[378, "struct-compound-datatypes"]], "struct: How?": [[378, "struct-how"]], "Usage": [[378, "usage"], [568, "usage"], [575, "usage"]], "Nested Structures": [[378, "nested-structures"]], "Memory Layout": [[378, "memory-layout"]], "Recursive Structures?": [[378, "recursive-structures"]], "struct: Functions": [[379, "struct-functions"]], "Parameters and Return (1)": [[379, "parameters-and-return-1"]], "Parameters and Return (2)": [[379, "parameters-and-return-2"]], "Parameters and Return (3)": [[379, "parameters-and-return-3"]], "typedef: Type Alias": [[380, "typedef-type-alias"]], "Alias for Type Names": [[380, "alias-for-type-names"]], "Structures": [[381, "structures"]], "Dynamic Memory": [[382, "dynamic-memory"], [382, "id1"]], "Stack and Global Memory": [[382, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[382, "dynamic-memory-usage"]], "Singly Linked List": [[383, "singly-linked-list"]], "Exercises (1)": [[383, "exercises-1"]], "Exercises (2)": [[383, "exercises-2"]], "Exercises (3)": [[383, "exercises-3"]], "Exercises (4)": [[383, "exercises-4"]], "Exercises (5)": [[383, "exercises-5"]], "Exercises (6)": [[383, "exercises-6"]], "Exercises (7)": [[383, "exercises-7"]], "Exercises (8)": [[383, "exercises-8"]], "Exercises (9)": [[383, "exercises-9"]], "Exercises (10)": [[383, "exercises-10"]], "Exercises (11)": [[383, "exercises-11"]], "Memory": [[384, "memory"]], "Volatile": [[385, "volatile"]], "volatile: The Lie (1)": [[385, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[385, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[385, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[385, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[386, "compiler-intrinsics"]], "Atomic Memory Access": [[386, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[386, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[386, "load-modify-store-mutex"]], "Atomic Instructions": [[386, "atomic-instructions"], [903, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[386, "more-gcc-builtins"]], "Alignment": [[387, "alignment"]], "Data Alignment": [[387, "data-alignment"]], "Data Alignment, Compilers": [[387, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[387, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[387, "unaligned-data-access-2"]], "Padding (1)": [[387, "padding-1"]], "Padding (2)": [[387, "padding-2"]], "Padding (3)": [[387, "padding-3"]], "Padding (4)": [[387, "padding-4"]], "Structure Alignment (1)": [[387, "structure-alignment-1"]], "Structure Alignment (2)": [[387, "structure-alignment-2"]], "And Arrays? (1)": [[387, "and-arrays-1"]], "And Arrays? (2)": [[387, "and-arrays-2"]], "And Arrays? (3)": [[387, "and-arrays-3"]], "Sanity and Readabilty": [[389, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[389, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[389, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[389, "shooting-offenses"]], "Ambiguity": [[389, "ambiguity"]], "Readability": [[389, "readability"]], "Code Smells": [[389, "code-smells"]], "Know Your Integers": [[390, "know-your-integers"]], "Standard Data Types: size_t (1)": [[390, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[390, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[391, "discrete-values-enum"], [391, "id1"]], "Discrete Values": [[391, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[391, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[391, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[391, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[391, "discrete-values-enum-and-switch"], [391, "id2"]], "Discrete Values - Close to Perfection": [[391, "discrete-values-close-to-perfection"]], "Visibility - static": [[392, "visibility-static"]], "Visibility": [[392, "visibility"]], "A Somewhat Contrived Example (1)": [[392, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[392, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[392, "the-static-keyword-hooray"]], "Correctness - const": [[393, "correctness-const"]], "Non-Modifiable Memory (1)": [[393, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[393, "non-modifiable-memory-2"]], "The const Keyword (1)": [[393, "the-const-keyword-1"]], "The const Keyword (2)": [[393, "the-const-keyword-2"]], "const Variables": [[393, "const-variables"]], "const Parameters (1)": [[393, "const-parameters-1"]], "const Parameters (2)": [[393, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[393, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[393, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[393, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[393, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[393, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[393, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[393, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[393, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[393, "pointers-pointers-pointers-9"]], "Struct Initialization": [[394, "struct-initialization"]], "Good Old Struct Initialization": [[394, "good-old-struct-initialization"]], "C99 Designated Initializer": [[394, "c99-designated-initializer"]], "Explict Type Safety": [[395, "explict-type-safety"]], "Integer Types Are Ambiguous": [[395, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[395, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[395, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[395, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[395, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[395, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[395, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[395, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[395, "wrap-up-artificial-type-safety"]], "valgrind": [[396, "valgrind"]], "Valgrind": [[396, "id1"]], "Valgrind in Action (1)": [[396, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[396, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[396, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[396, "valgrind-more"]], "Program Sanity": [[397, "program-sanity"]], "Optimization": [[398, "optimization"]], "Optimization - Introduction": [[398, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[398, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[398, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[398, "compute-bound-or-io-bound-3"]], "What to do Next?": [[398, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[399, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[399, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[399, "unnecessary-optimizations"]], "Inlining (1)": [[399, "inlining-1"]], "Inlining (2)": [[399, "inlining-2"]], "Inlining (3)": [[399, "inlining-3"]], "Register Allocation (1)": [[399, "register-allocation-1"]], "Register Allocation (2)": [[399, "register-allocation-2"]], "Peephole Optimization": [[399, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[399, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[399, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[399, "peephole-optimization-constant-folding"]], "Loop Invariants": [[399, "loop-invariants"]], "Loop Unrolling": [[399, "loop-unrolling"]], "Tail Call Optimization": [[399, "tail-call-optimization"]], "CPU Optimization, Last Words": [[399, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[399, "gcc-optimization-levels"]], "Further Reading": [[399, "further-reading"]], "Optimizations: Memory Optimizations": [[400, "optimizations-memory-optimizations"]], "Memory: Caches": [[400, "memory-caches"]], "Locality of reference": [[400, "locality-of-reference"]], "Multidimensional Arrays": [[400, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[400, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[400, "multidimensional-arrays-forward-indexing"]], "Performance": [[401, "performance"]], "Profiling - Famous Words": [[402, "profiling-famous-words"]], "Donald E. Knuth": [[402, null]], "Tony Hoare": [[402, null]], "Larry Wall": [[402, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[402, null]], "Profiling - Introduction": [[402, "profiling-introduction"]], "GNU Profiler - gprof": [[403, "gnu-profiler-gprof"]], "gprof - How it Works": [[403, "gprof-how-it-works"]], "Using gprof": [[403, "using-gprof"]], "gprof: Flat Profile": [[403, "gprof-flat-profile"]], "gprof: Call Graph": [[403, "gprof-call-graph"]], "gprof: Interpreting The Results": [[403, "gprof-interpreting-the-results"]], "gprof: Visualization": [[403, "gprof-visualization"]], "callgrind": [[404, "callgrind"]], "callgrind - How it Works": [[404, "callgrind-how-it-works"]], "callgrind - How it is Used": [[404, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[404, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[404, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[404, "callgrind-useful-options"]], "oprofile": [[405, "oprofile"]], "oprofile - How it Works": [[405, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[405, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[405, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[405, "oprofile-too-much-information"]], "oprofile - Call Graph": [[405, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[405, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[405, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[405, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[405, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[405, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[405, "oprofile-graphical-beauty"]], "Profiling": [[406, "profiling"]], "The C Programming Language": [[407, "the-c-programming-language"]], "Messages From The Book": [[408, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[409, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[409, "rules-why-rules"]], "Coding Style": [[409, "coding-style"]], "Disclaimer": [[409, null]], "Design Principles: SOLID": [[409, "design-principles-solid"]], "Another One: YAGNI": [[409, "another-one-yagni"]], "Architecture": [[409, "architecture"]], "Project Management: Traditional": [[409, "project-management-traditional"]], "Project Management: Software": [[409, "project-management-software"]], "So What?": [[409, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[410, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[410, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[411, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[411, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[411, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[411, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[411, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[411, "where-are-we-questions"]], "Testability: Input Cleaning": [[411, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[411, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[411, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[411, "testability-reading-input-from-directory"]], "Testability: Categorization": [[411, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[411, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[411, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[412, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[412, "single-monolithic-executable"]], "Building With CMake": [[412, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[412, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[412, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[412, "problem-duplicate-compilation"]], "Problem: More Functionality": [[412, "problem-more-functionality"]], "Solution: Libraries": [[412, "solution-libraries"], [950, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[413, "configured-header-files"]], "Problem": [[413, "problem"], [421, "problem"], [427, "problem"], [428, "problem"], [429, "problem"], [432, "problem"], [438, "problem"], [486, "problem"], [748, "problem"], [879, "problem"], [1065, "problem"]], "Configured Files": [[413, "configured-files"]], "Use In Compiled Code": [[413, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[414, "c-debug-release-cmake-programming-rants"]], "Pause": [[414, "pause"]], "Class Diagram": [[414, "class-diagram"]], "C++ Standard Version": [[414, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[414, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[414, "compiler-type"]], "Strings And Lists": [[414, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[414, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[414, "message-popular-modes"]], "FIND_PACKAGE()": [[415, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[415, "find-package-required"]], "SQLite3 Parameters": [[415, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[415, "using-sqlite3-parameters"]], "Demo Time": [[415, "demo-time"]], "CMake: An Introduction": [[416, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[417, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[417, "prefix-where-everything-comes-together"]], "Installing Targets": [[417, "installing-targets"]], "Doing The Installation (make install)": [[417, "doing-the-installation-make-install"]], "And Shared Libraries?": [[417, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[417, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[417, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[418, "libraries-and-dependencies"]], "Libraries And Executables": [[418, "libraries-and-executables"]], "Targets And Dependencies": [[418, "targets-and-dependencies"]], "Visualizing Dependencies": [[418, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[419, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[419, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[419, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[419, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[419, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[419, "good-or-bad"], [420, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[420, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[420, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[420, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[420, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[421, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[421, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[421, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[421, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[422, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[422, "normal-libraries"]], "Building Shared Libraries": [[422, "building-shared-libraries"]], "More About Loading": [[422, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[423, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[423, "reorganization"]], "Dependencies, And Target Properties": [[423, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[424, "targets-properties-and-more"]], "Target Types": [[424, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[424, "properties-private-public-interface"]], "Running Tests": [[425, "running-tests"], [1093, "running-tests"]], "Setup And Usage": [[425, "setup-and-usage"]], "Add Simple Test": [[425, "add-simple-test"]], "Checking Test Output": [[425, "checking-test-output"]], "Questionability": [[425, "questionability"]], "C++ Code": [[426, "c-code"]], "Abstract Factory": [[427, "abstract-factory"]], "I2C Sensor Subhierarchy": [[427, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[427, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[427, "solution-factory-objects"]], "Requirements": [[427, "requirements"], [451, "requirements"], [482, "requirements"]], "Notes": [[427, "notes"]], "Adapter": [[428, "adapter"]], "Solution: Adaptation": [[428, "solution-adaptation"]], "Basic Adaptation": [[428, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[428, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[428, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[428, "adapter-is-doing-real-measurements"]], "Command": [[429, "command"]], "Motivation": [[429, "motivation"], [432, "motivation"], [448, "motivation"], [449, "motivation"], [545, "motivation"], [642, "motivation"], [644, "motivation"], [669, "motivation"], [675, "motivation"], [970, "motivation"], [976, "motivation"]], "Step 1: Basic insert()": [[429, "step-1-basic-insert"]], "Step 2: Basic find()": [[429, "step-2-basic-find"]], "Step 3: drop()": [[429, "step-3-drop"]], "Step 4: Handle find() Errors": [[429, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[429, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[429, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[429, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[430, "socialdb-source-code"]], "Composite": [[431, "composite"]], "Unix Filesystem": [[431, "unix-filesystem"]], "Boolean Expressions": [[431, "boolean-expressions"]], "Thermometers, And Average Calculation": [[431, "thermometers-and-average-calculation"]], "Decorator": [[432, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[432, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[432, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[432, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[432, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[432, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[432, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[432, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[432, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[433, "design-patterns-with-c"]], "Topics/Exercises": [[433, "topics-exercises"]], "Solutions": [[433, "solutions"], [447, "solutions"], [461, "solutions"]], "To Be Done": [[433, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[434, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[434, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[434, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[434, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[434, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[434, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[434, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[434, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[434, "stop-here-need-help"]], "Tests": [[434, "tests"], [454, "tests"]], "Interpreter": [[435, "interpreter"]], "Observer": [[436, "observer"]], "OO Design Principles": [[437, "oo-design-principles"]], "Principles: Why? Which?": [[437, "principles-why-which"]], "Single Responsibility": [[437, "single-responsibility"]], "Open/Closed": [[437, "open-closed"]], "Liskov Substitution": [[437, "liskov-substitution"]], "Interface Segregation": [[437, "interface-segregation"]], "Dependency Inversion": [[437, "dependency-inversion"]], "Proxy": [[438, "proxy"]], "Solution: Proxy": [[438, "solution-proxy"]], "Local Variant": [[438, "local-variant"]], "Remote Variant": [[438, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[439, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[439, "hypothetical"]], "Class Hierarchy": [[439, "class-hierarchy"]], "Singleton": [[440, "singleton"]], "And class Person?": [[440, "and-class-person"]], "UML Short Introduction": [[441, "uml-short-introduction"]], "Interface": [[441, "interface"]], "Interface Implementation, Inheritance": [[441, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[441, "connectors-association-aggregation-composition"]], "Association": [[441, "association"]], "Aggregation": [[441, "aggregation"]], "Composition": [[441, "composition"]], "Exercise: Abstract Factory": [[442, "exercise-abstract-factory"]], "Exercise: Adapter": [[443, "exercise-adapter"], [450, "exercise-adapter"]], "Exercise: Command": [[444, "exercise-command"]], "Exercise: Composite": [[445, "exercise-composite"]], "Exercise: Decorator": [[446, "exercise-decorator"]], "Exercises: Design Patterns": [[447, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[448, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[449, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[449, "expression-interface"]], "Arithmetic (Binary) Expressions": [[449, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[449, "check-combined-arithmetic-expressions"]], "And Variables?": [[449, "and-variables"]], "No Uninitialized Variables!!": [[449, "no-uninitialized-variables"]], "Assigning To Variables": [[449, "assigning-to-variables"]], "Using Variables As Expressions": [[449, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[451, "exercise-proxy-remote-thermometer"]], "Network Communication": [[451, "network-communication"]], "Implementation Hints": [[451, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[452, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[453, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[454, "exercise-singleton-flexible-and-strict"]], "Complications": [[454, "complications"]], "Exercise: Singleton (Inflexible)": [[455, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[456, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[456, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[456, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[456, "i2csensorfactory-vendor1"], [456, "id1"]], "Solution: Adapter": [[457, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[457, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[458, "solution-command"]], "Command Classes": [[458, "command-classes"]], "Solution: Composite": [[459, "solution-composite"]], "Averaging (Composite) Sensor": [[459, "averaging-composite-sensor"]], "Solution: Decorator": [[460, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[460, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[460, "decorated-constant-sensor"]], "Decorated Random Sensor": [[460, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[462, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[463, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[464, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[465, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[465, "client-proxy-thermometer"]], "Remote Stub": [[465, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[466, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[466, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[467, "solution-singleton-flexible"]], "Main Program": [[467, "main-program"], [468, "main-program"], [469, "main-program"]], "SocialInsurance Interface": [[467, "socialinsurance-interface"], [468, "socialinsurance-interface"]], "Two Concrete Implementations": [[467, "two-concrete-implementations"], [468, "two-concrete-implementations"]], "OEGK": [[467, "oegk"], [468, "oegk"]], "SVS": [[467, "svs"], [468, "svs"]], "Solution: Singleton (Flexible And Strict)": [[468, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[469, "solution-singleton-inflexible"]], "Singleton Implementation": [[469, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[470, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[470, "github-project"]], "CMake Build": [[470, "cmake-build"], [892, "cmake-build"]], "Dependencies/Usage Relationships": [[470, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[470, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[470, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[470, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[470, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[471, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[472, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[473, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[473, "new-sensor-class-randomsensor"]], "Implementation Details": [[473, "implementation-details"]], "New Program: random-temperature.cpp": [[473, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[474, "fh-sensor-oo-first-try"]], "C++ Exercises": [[475, "c-exercises"]], "Exercise Projects": [[475, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[476, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[476, "topics-covered"], [478, "topics-covered"], [479, "topics-covered"], [480, "topics-covered"], [481, "topics-covered"], [482, "topics-covered"], [485, "topics-covered"], [477, "topics-covered"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[478, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[479, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[480, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[481, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[481, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[481, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[482, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[483, "oo-basics-interfaces-shapes"]], "Exercise Table": [[483, "exercise-table"]], "Setup, Exam Procedure": [[483, "setup-exam-procedure"]], "Point": [[483, "point"]], "Point: Constructor and Getter Methods": [[483, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[483, "point-default-constructor"]], "Point: Static Method: equal()": [[483, "point-static-method-equal"]], "Point: operator==()": [[483, "point-operator"]], "Point: Method: move()": [[483, "point-method-move"]], "Point: operator+=()": [[483, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[483, "point-static-method-add"]], "Point: operator+()": [[483, "point-suite-operator-plus"]], "Circle": [[483, "circle"]], "Circle: Constructor": [[483, "circle-constructor"]], "Circle: operator==()": [[483, "circle-operator"]], "Circle: Method: area()": [[483, "circle-method-area"]], "Square": [[483, "square"]], "Square: Constructor": [[483, "square-constructor"]], "Square: operator==()": [[483, "square-operator"]], "Square: Method: area()": [[483, "square-method-area"]], "Interface: Shape": [[483, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[483, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[483, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[484, "working-on-exercise-projects"]], "Clone Github Repository": [[484, "clone-github-repository"]], "Massage googletest Sub-Module": [[484, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[484, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[484, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[484, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[485, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[485, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[485, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[486, "exercise-onewire-sensor-factory"]], "Implementation": [[486, "implementation"]], "Fixture": [[486, "fixture"], [709, "fixture"]], "basic": [[486, "basic"]], "notfound": [[486, "notfound"]], "find_is_const": [[486, "find-is-const"]], "Testing In Isolation": [[486, "testing-in-isolation"]], "Testing In Reality": [[486, "testing-in-reality"]], "On The PC": [[486, "on-the-pc"]], "On The Target": [[486, "on-the-target"]], "Exercise: OneWire Sensor Class": [[487, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[487, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[487, "test-monolithic-implementation"]], "class W1Sensor": [[487, "class-w1sensor"]], "Exercise: Algorithms": [[488, "exercise-algorithms"]], "Copy Into std::vector": [[488, "copy-into-std-vector"]], "Find Element In std::vector": [[488, "find-element-in-std-vector"]], "Sort In-Place": [[488, "sort-in-place"]], "Sort Into A Copy": [[488, "sort-into-a-copy"]], "Exercise: Generic Filter": [[489, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[490, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[491, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[492, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[493, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[494, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[495, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[496, "insert-sunny-case"]], "Lookup - Not Found": [[497, "lookup-not-found"]], "Lookup - Sunny Case": [[498, "lookup-sunny-case"]], "Memory Leaks?": [[499, "memory-leaks"]], "Remove - Not Found": [[500, "remove-not-found"]], "Remove - Sunny Case": [[501, "remove-sunny-case"]], ".size() Is const": [[502, "size-is-const"]], "Exercise: Uniquify A Sequence": [[503, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[504, "exercise-std-vector"]], "C++: TODO List": [[505, "c-todo-list"]], "Structural": [[505, "structural"]], "STL, Containers and Algorithms": [[505, "stl-containers-and-algorithms"]], "Templates/Overloading": [[505, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[505, "functors-overloading-the-function-call-operator"]], "Threads": [[505, "threads"]], "C++ >= 11": [[505, "c-11"]], "UserDB Exercise": [[505, "userdb-exercise"]], "Complete Transcription of C++11": [[505, "complete-transcription-of-c-11"]], "Exercise series": [[505, "exercise-series"]], "Code: C++: Class Templates": [[506, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[507, "screenplay-c-class-templates"]], "C++: Class Templates": [[508, "c-class-templates"]], "Code: C++: Dynamic Memory": [[509, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[510, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[510, "c-malloc-free"]], "valgrind: Memory Leak": [[510, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[510, "valgrind-array-bounds-write"]], "C++: new, delete": [[510, "c-new-delete"]], "C++: new, delete on Arrays": [[510, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[510, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[511, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[512, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[513, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[513, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[513, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[513, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[514, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[515, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[516, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[517, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[518, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[519, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[519, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[519, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[519, "ownership-2-x-non-const"]], "Ownership: const Method": [[519, "ownership-const-method"]], "Ownership: 2 x const": [[519, "ownership-2-x-const"]], "C++: Ownership/RAII": [[520, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[521, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[522, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[522, "pointer-arithmetics-recap"]], "Container: std::vector": [[522, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[522, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[522, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[522, "container-std-list"]], "Container: std::map": [[522, "container-std-map"]], "C++: STL Containers (Intro)": [[523, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[524, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[525, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[526, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[527, "c-miscellaneous-live-hacking"]], "Background": [[528, "background"]], "History": [[528, "history"], [951, "history"]], "Content": [[528, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[529, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[529, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[529, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[529, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[529, "comparison-functions-in-equality"]], "Moving Points": [[529, "moving-points"]], "Vector Addition and Subtraction": [[529, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[529, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[529, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[529, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[530, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[530, "compiler-generated-copy-constructor"]], "Rule": [[530, null], [533, null], [632, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[530, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[531, "classes-and-objects"]], "Introducing C++: class point": [[531, "introducing-c-class-point"]], "Access Specifiers: public And private": [[531, "access-specifiers-public-and-private"]], "Default Constructor": [[531, "default-constructor"], [533, "default-constructor"], [546, "default-constructor"], [547, "default-constructor"], [548, "default-constructor"], [549, "default-constructor"]], "Custom Constructor: Usage": [[531, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[531, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[531, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[531, "methods-operations-on-an-object"]], "And printf()?!": [[531, "and-printf"]], "Custom Constructor": [[532, "custom-constructor"], [546, "custom-constructor"]], "Constructors: why? (1)": [[532, "constructors-why-1"]], "Constructors: why? (2)": [[532, "constructors-why-2"]], "Constructors: Implementation - Inline": [[532, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[532, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[533, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[533, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[533, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[533, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[534, "more-constructors-destructors"]], "Default Constructor (1)": [[534, "default-constructor-1"]], "Default Constructor (2)": [[534, "default-constructor-2"]], "Object Lifecycle - Destructor": [[534, "object-lifecycle-destructor"]], "Destructors (1)": [[534, "destructors-1"]], "Destructors (2)": [[534, "destructors-2"]], "Destructors (3)": [[534, "destructors-3"]], "Destructors (4)": [[534, "destructors-4"]], "Data Encapsulation": [[535, "data-encapsulation"]], "Constructors: Member Initialization": [[536, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[536, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[536, "real-initialization-initializer-list"]], "Why Is That Important?": [[536, "why-is-that-important"]], "Why Else Is That Important?": [[536, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[537, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[537, "copy-in-c"]], "Copy Constructor": [[537, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[537, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[537, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[537, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[537, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[537, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[537, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[537, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[537, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[537, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[538, "overloading"]], "Functions in C": [[538, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[538, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[538, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[538, "overloading-class-methods-just-the-same"]], "Methods": [[539, "methods"], [686, "methods"], [687, "methods"], [688, "methods"], [973, "methods"]], "Objects - Data and Methods": [[539, "objects-data-and-methods"]], "class point Again": [[539, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[539, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[539, "how-are-members-accessed-inside-methods"]], "const Methods": [[539, "const-methods"], [540, "const-methods"]], "Non const Methods": [[539, "non-const-methods"]], "const": [[540, "const"]], "const: Immutable Variable": [[540, "const-immutable-variable"]], "const Correctness vs. Pollution": [[540, "const-correctness-vs-pollution"]], "this": [[541, "this"]], "Hidden Pointer: this (1)": [[541, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[541, "hidden-pointer-this-2"]], "Explicit this Pointer": [[541, "explicit-this-pointer"]], "Pass By Copy/Reference": [[542, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[542, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[542, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[542, "copy-reference-c-pointers"]], "C++: True References": [[542, "c-true-references"]], "And const? Pointers?": [[542, "and-const-pointers"]], "const References": [[542, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[542, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[543, "static-methods"]], "Methods without Object": [[543, "methods-without-object"]], "Naive Implementation: Global Function": [[543, "naive-implementation-global-function"]], "C++: static Method": [[543, "c-static-method"]], "static Member Variables": [[544, "static-member-variables"]], "Good Old C: extern Global Variables": [[544, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[544, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[544, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[544, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[544, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[544, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[545, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[545, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[545, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[545, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[545, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[545, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[545, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[545, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[546, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[546, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[546, "in-equality"], [547, "in-equality"], [548, "in-equality"], [549, "in-equality"]], "+=": [[546, "id2"], [547, "id1"], [548, "id2"], [549, "id2"]], "-=": [[546, "id4"], [548, "id4"]], "+": [[546, "id6"], [547, "id2"], [548, "id6"], [549, "id3"]], "-": [[546, "id8"], [548, "id8"]], "<< (std::ostream)": [[546, "std-ostream"], [547, "std-ostream"], [548, "std-ostream"], [549, "std-ostream"]], "Surface": [[546, "surface"]], "Volume": [[546, "volume"]], "Exercise (FH): class point": [[547, "exercise-fh-class-point"]], "Initial Build": [[547, "initial-build"]], "Initial Test Run": [[547, "initial-test-run"]], "Extending class point: More Unit Tests": [[547, "extending-class-point-more-unit-tests"]], "Access Methods": [[547, "access-methods"]], "Unary -": [[547, "unary"], [548, "unary"]], "Exercise (FH): class point3d": [[548, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[548, "building-class-rectangle-upon-class-point"], [549, "building-class-rectangle-upon-class-point"]], "Coordinates": [[548, "coordinates"], [549, "coordinates"]], "Absolute Value": [[548, "absolute-value"]], "Distance Between Two Points": [[548, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[549, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[549, "width-height-area"]], "Functions and Methods": [[550, "functions-and-methods"]], "Error Handling: if - else if - else": [[551, "error-handling-if-else-if-else"]], "try - catch": [[552, "try-catch"]], "try - Block": [[552, "try-block"]], "catch - Block": [[552, "catch-block"]], "Standard Library: Exception-Hierarchy": [[552, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[552, "custom-exceptions-1"]], "Custom Exceptions (2)": [[552, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[552, "throwing-exceptions-throw"]], "Last Words": [[552, "last-words"], [555, "last-words"]], "Function Templates": [[554, "function-templates"]], "Origin: Duplicated Code": [[554, "origin-duplicated-code"]], "A simple Function-Template": [[554, "a-simple-function-template"]], "More Templates from the STL": [[554, "more-templates-from-the-stl"]], "Class Templates": [[555, "class-templates"]], "Does This Work With Classes?": [[555, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[555, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[555, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[556, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[557, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[558, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[559, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[560, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[561, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[562, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[562, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[562, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[562, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[562, "pointer-difference"]], "Step Width? (1)": [[562, "step-width-1"]], "Step Width? (2)": [[562, "step-width-2"]], "And Arbitrary Data Types?": [[562, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[562, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[562, "stl-algorithms"]], "STL Containers": [[562, "stl-containers"]], "std::vector (And std::copy())": [[563, "std-vector-and-std-copy"]], "Dynamicity Details": [[563, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[563, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[563, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[564, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[564, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[564, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[564, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[564, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[565, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[566, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[567, null], [568, null], [569, null], [570, null], [571, null], [573, null], [574, null], [575, null], [576, null], [579, null], [580, null], [583, null], [588, null], [722, null], [722, null], [738, null], [740, "documentation"], [740, null], [744, "documentation"], [746, null], [746, null], [746, null], [772, "documentation"], [775, "documentation"], [785, null], [786, null], [789, null], [793, null], [793, null], [800, null], [801, null], [802, null], [802, null], [802, null], [803, null], [818, null], [818, null], [818, null], [819, null], [820, null], [821, null], [837, null], [837, null], [837, null], [840, null], [841, null], [874, null], [876, null], [878, null], [880, null], [881, null], [882, null], [884, null], [884, null], [884, null], [884, null], [884, null], [884, null], [887, null], [888, null], [889, null], [890, null], [890, null], [891, null], [894, null], [894, null], [894, null], [894, null], [932, null], [932, null], [933, null], [1008, null], [1018, null], [1100, "documentation"]], "binary_search<>: On Sorted Sequence": [[567, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[567, "more-intelligent-search"], [573, "more-intelligent-search"]], "copy<>": [[568, "copy"]], "find<>: Sequential Search, by Equality": [[569, "find-sequential-search-by-equality"]], "Basic Usage": [[569, "basic-usage"], [688, "basic-usage"], [840, "basic-usage"], [1010, "basic-usage"]], "Not Found?": [[569, "not-found"]], "find_if<>: Sequential Search, Customizable": [[570, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[570, "if-using-a-plain-function"]], "if, Using a Functor Class": [[570, "if-using-a-functor-class"]], "for_each<>": [[571, "for-each"]], "Basic Algorithms": [[572, "basic-algorithms"]], "Sorted Arrays": [[572, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[573, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[574, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[575, "reverse-copy-copying-and-reversing"]], "sort<>": [[576, "sort"]], "Algorithm: std::sort": [[576, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[576, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[577, "sequential-containers"], [578, "sequential-containers"]], "Common Characteristics": [[577, "common-characteristics"]], "list<>": [[579, "list"]], "Insertion and Deletion": [[579, "insertion-and-deletion"]], "vector<>": [[580, "vector"]], "Characteristics": [[580, "characteristics"]], "Modification at the Back": [[580, "modification-at-the-back"]], "Insertion": [[580, "insertion"]], "Example": [[580, "example"], [1025, "example"]], "Associative Containers": [[581, "associative-containers"], [582, "associative-containers"]], "Type Instantiation": [[583, "type-instantiation"]], "Filling The Container": [[583, "filling-the-container"]], "Inserting Elements": [[583, "inserting-elements"]], "Searching": [[583, "searching"], [607, "searching"]], "Screenplay: std::map Initialization And Inserting": [[584, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[584, "definining-the-type"]], "Initialization": [[584, "initialization"], [607, "initialization"]], "Screenplay: Inserting Elements": [[585, "screenplay-inserting-elements"]], "Subscript Operator": [[585, "subscript-operator"]], "insert()": [[585, "insert"]], "Screenplay: Removing (Erasing) Elements": [[586, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[586, "by-pointer-err-iterator"]], "By Key": [[586, "by-key"]], "Screenplay: Searching": [[587, "screenplay-searching"]], "find(key)": [[587, "find-key"]], "[key]": [[587, "key"]], "at(key)": [[587, "at-key"]], "multimap<>": [[588, "multimap"]], "Allocator Basics": [[589, "allocator-basics"]], "Allocators": [[590, "allocators"]], "STL: Exercises": [[591, "stl-exercises"]], "Exercise: Reverse a String": [[592, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[593, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[594, "solution-reverse-a-string"]], "Naive": [[594, "naive"]], "Using std::reverse<>": [[594, "using-std-reverse"]], "Using std::reverse_copy<>": [[594, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[596, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[597, "dynamic-memory-allocation-resource-management"]], "Plain (Base) Class": [[599, "plain-base-class"], [598, "plain-base-class"]], "Destructors And Inheritance": [[599, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[599, "derived-class-and-destructor"]], "And Base Class Conversion?": [[599, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[600, "inheritance-and-object-oriented-design"]], "Inheritance: private, protected (Implementation Inheritance)": [[603, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[604, "virtual-destructors"]], "Is-A Relationships And Destructors": [[604, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[604, "pure-virtual-destructor"]], "The Standard Library: Miscellaneous Topics": [[606, "the-standard-library-miscellaneous-topics"]], "std::string": [[607, "std-string"]], "Addition, And Such": [[607, "addition-and-such"]], "Conversion From String": [[607, "conversion-from-string"]], "Conversion To String": [[607, "conversion-to-string"]], "Substrings": [[607, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[608, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[609, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[610, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[611, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[612, "exercises-user-database"]], "Exercise: Access Methods for Members": [[613, "exercise-access-methods-for-members"]], "Exercise: const Members": [[614, "exercise-const-members"]], "Exercise: Use const": [[615, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[616, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[617, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[618, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[619, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[620, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[621, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[621, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[622, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[623, "exercise-use-std-vector-in-userdb"]], "C++ 03": [[624, "c-03"]], "History, Background": [[626, "history-background"]], "Make C++ Great Again": [[626, "make-c-great-again"]], "The \u201cNew\u201d C++": [[626, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[627, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[627, "c-03-to-do-list-version"]], "Real Container Initialization": [[627, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[627, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[627, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[627, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[627, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[627, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[627, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[627, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[627, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[627, "inevitable-threads"]], "Unions? std::variant!": [[627, "unions-std-variant"]], "Wrapping All That Into A Class": [[627, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[627, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[627, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[628, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[628, "c-03-enum-types-problems"]], "C++11 enum class": [[628, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[628, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[629, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[630, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[630, "std-initializer-list"]], "Direct Usage": [[630, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[630, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[631, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[631, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[631, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[631, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[631, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[631, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[631, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[631, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[631, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[631, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[632, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[632, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[632, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[632, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[632, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[632, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[633, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[633, "delegating-constructor-solution"]], "constexpr": [[634, "constexpr"]], "Basic Usage: Expressions": [[634, "basic-usage-expressions"]], "constexpr Functions": [[634, "constexpr-functions"]], "Recursive constexpr": [[634, "recursive-constexpr"]], "constexpr Objects": [[634, "constexpr-objects"]], "Afterword, Further Reading": [[635, "afterword-further-reading"]], "Uses In The Standard Library": [[635, "uses-in-the-standard-library"]], "Other Uses": [[635, "other-uses"]], "All Said \u27f6 Guidelines": [[635, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[635, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[636, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[636, "alternative-livehacking"]], "Starting Point": [[637, "starting-point"], [61, "starting-point"]], "SmartPtr With Move Semantics": [[637, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[637, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[637, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[638, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[638, "copy-semantics-revisited"]], "class String, Without Copy": [[638, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[638, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[638, "move-constructor-move"]], "Implementing Move Constructor": [[638, "implementing-move-constructor"]], "And Move Assignment?": [[638, "and-move-assignment"]], "Implementing Move Assignment": [[638, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[639, "using-move-semantics-in-own-code"]], "Using String: class Person": [[639, "using-string-class-person"]], "What?": [[639, "what"], [801, "what"]], "Using Rvalue References Inside Function: std::move": [[639, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Such": [[640, "lvalues-rvalues-and-such"]], "Return Object Problem: Reference To Stack-Based Object": [[640, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[640, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[640, "move-semantics-wish-list"]], "Theory: Lvalues": [[640, "theory-lvalues"]], "Theory: Rvalues": [[640, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[640, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[640, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[640, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[640, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[640, "enter-move-constructor-and-move-assignment"]], "Rules": [[640, null]], "Templates end with \u201c>>\u201d": [[641, "templates-end-with"]], "auto": [[642, "auto"]], "Most Basic Usage": [[642, "most-basic-usage"]], "auto Is Only The Basic Type": [[642, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[642, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[642, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[642, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[642, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[644, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[644, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[644, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[644, "concepts-to-the-rescue"]], "Syntactic Variations": [[644, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[645, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[646, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[647, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[648, "concepts-links"]], "Writing Your Own Concepts": [[649, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[649, "starting-point-good-old-function"]], "Need Template": [[649, "need-template"]], "Error: Requirement Not Fulfilled": [[649, "error-requirement-not-fulfilled"]], "Concept: has_size": [[649, "concept-has-size"]], "Concept: index_returns_double": [[649, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[650, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[651, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[652, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[653, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[654, "coroutines"]], "Coroutines: An Overview": [[655, "coroutines-an-overview"]], "Foreword": [[655, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[655, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[655, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[655, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[655, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[655, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[655, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[655, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[655, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[655, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[655, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[655, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[656, "fibo-generator-cpp"]], "fibonacci.cpp": [[657, "fibonacci-cpp"]], "generator.h": [[658, "generator-h"]], "generator-hello.cpp": [[659, "generator-hello-cpp"]], "simplest.cpp": [[660, "simplest-cpp"]], "suspend.cpp": [[661, "suspend-cpp"]], "suspend-iter.cpp": [[662, "suspend-iter-cpp"]], "suspend-next.cpp": [[663, "suspend-next-cpp"]], "= default": [[664, "default"]], "Problem: Default Constructor Not Automatically Generated": [[664, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[664, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[664, "c-11-solution-default"]], "= delete": [[665, "delete"]], "Problem: Copy Is Not Always Wanted": [[665, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[665, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[665, "c-11-solution-delete-copy"]], "final": [[666, "final"]], "Architectural Decisions": [[666, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[666, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[667, "new-language-features"]], "Lambda": [[668, "lambda"], [669, "lambda"]], "Lambda To The Rescue": [[669, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[669, "excursion-python-closures"]], "Same In C++: Capturing": [[669, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[669, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[669, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[669, "more-about-capturing"]], "Lambda: More Capturing": [[670, "lambda-more-capturing"]], "More Capture Syntax": [[670, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[670, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[670, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[670, "mixed-explicit-capture"]], "Define Variables In Capture": [[670, "define-variables-in-capture"]], "Capturing All By Reference": [[670, "capturing-all-by-reference"]], "Capturing All By Copy": [[670, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[670, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[670, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[671, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[671, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[671, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[672, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[672, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[672, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[672, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[672, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[674, "override"]], "Correct Overriding \u2026": [[674, "correct-overriding"]], "\u2026 Is Very Hard": [[674, "is-very-hard"]], "More Problems Arise": [[674, "more-problems-arise"]], "Solution: override": [[674, "solution-override"]], "Range Based for Loops: Introduction": [[675, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[675, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[675, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[675, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[676, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[676, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[676, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[676, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[676, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[676, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[677, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[677, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[677, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[677, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[677, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[677, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[677, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[677, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[677, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[679, "ranges-overview"]], "Ranges?": [[679, "ranges"]], "Containers And Views (Storage Behavior)": [[679, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[679, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[679, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[679, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[679, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[679, "available-ranges-concepts"]], "Ranges And Views: Links": [[680, "ranges-and-views-links"]], "Structured Binding": [[681, "structured-binding"]], "Variations, Compatible Data Types": [[681, "variations-compatible-data-types"]], "struct: By Copy": [[681, "struct-by-copy"]], "struct: Reference": [[681, "struct-reference"]], "struct: By const Reference": [[681, "struct-by-const-reference"]], "std::tuple: By Copy": [[681, "std-tuple-by-copy"]], "std::tuple: By Reference": [[681, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[681, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[681, "arrays-by-copy"]], "Arrays: By Reference": [[681, "arrays-by-reference"]], "Arrays: By const Reference": [[681, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[682, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[682, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[683, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[684, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[684, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[685, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[685, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[685, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[685, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[685, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[685, "explicit-move-method-maybe"]], "Stop!!!": [[685, "stop"]], "std::shared_ptr": [[686, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[686, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[686, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[686, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[686, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[686, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[686, "demo-basic-usage"]], "Demo: std::make_shared": [[686, "demo-std-make-shared"]], "Demo: Cyclic References": [[686, "demo-cyclic-references"]], "std::unique_ptr": [[687, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[687, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[687, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[687, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[687, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[687, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[687, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[687, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[687, "manipulating-pointer-content"]], "std::weak_ptr": [[688, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[688, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[688, "a-real-life-example"]], "Perfect Forwarding": [[689, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[689, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[689, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[689, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[689, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[690, "std-bind"]], "Why? What\u2019s The Problem?": [[690, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[690, "sample-program-all-done-manually"]], "Sideway: std::transform": [[690, "sideway-std-transform"]], "Sample Program: Using std::transform": [[690, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[690, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[690, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[690, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[690, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[690, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[690, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[690, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[690, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[690, "summary"], [758, "summary"], [758, "id1"], [1080, "summary"], [1082, "summary"]], "std::function": [[691, "std-function"]], "Classic Polymorphism": [[691, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[691, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[691, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[691, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[691, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[691, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[691, "std-function-last-words"]], "Functions, Functions": [[692, "functions-functions"]], "Threads Introduction": [[693, "threads-introduction"]], "Operating System Primitives": [[693, "operating-system-primitives"]], "There Be Dragons": [[693, "there-be-dragons"]], "Threads in C++": [[694, "threads-in-c"]], "Creating Threads is Far Too Easy": [[694, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[694, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[694, "cornercases-in-thread-lifetime"]], "Race Conditions": [[695, "race-conditions"], [756, "race-conditions"]], "std::atomic": [[696, "std-atomic"]], "Atomic Instructions (1)": [[696, "atomic-instructions-1"]], "Atomic Instructions (2)": [[696, "atomic-instructions-2"]], "std::mutex And Friends": [[697, "std-mutex-and-friends"]], "std::mutex": [[697, "std-mutex"]], "std::recursive_mutex": [[697, "std-recursive-mutex"]], "std::timed_mutex": [[697, "std-timed-mutex"]], "std::recursive_timed_mutex": [[697, "std-recursive-timed-mutex"]], "Scoped Locking": [[698, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[698, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[698, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[698, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[699, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[699, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[699, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[699, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[699, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[699, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[701, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[701, "overview-std-promise"]], "Overview: std::future": [[701, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[701, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[701, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[701, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[701, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[701, "pro-readability-encapsulate"]], "Atomics On Structures?": [[701, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[701, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[701, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[701, "and-exceptions"]], "std::chrono": [[702, "std-chrono"], [702, "id1"]], "Clock Domains": [[702, "clock-domains"]], "Measuring Time (1)": [[702, "measuring-time-1"]], "Measuring Time (2)": [[702, "measuring-time-2"]], "Sleeping, and Literals": [[702, "sleeping-and-literals"]], "New-Style Union: std::variant": [[703, "new-style-union-std-variant"]], "Exercise: Bag Of Items, By Copy": [[705, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[705, "step-1-insert-find"]], "Step 2: Remove": [[705, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[706, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[706, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[706, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[706, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[707, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[709, "std-filesystem"]], "Paths: Composition, Comparison": [[709, "paths-composition-comparison"]], "Absolute and Relative Paths": [[709, "absolute-and-relative-paths"], [842, "absolute-and-relative-paths"]], "Path Component Access": [[709, "path-component-access"]], "Iterating Over Path Components": [[709, "iterating-over-path-components"]], "Current Working Directory": [[709, "current-working-directory"], [821, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[709, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[709, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[709, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[709, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[709, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[709, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[709, "recursive-directory-iteration"]], "C++ 11": [[710, "c-11"]], "Generated Topic Graph": [[711, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[713, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[714, "modern-character-devices-slideshow"]], "Source": [[714, null], [717, null], [719, null], [722, null], [724, null], [727, null], [736, null], [738, null], [748, null], [750, null], [761, null], [766, null]], "Character Devices: Problems": [[714, "character-devices-problems"]], "Dynamic Device Numbers": [[714, "dynamic-device-numbers"]], "Device Classes": [[714, "device-classes"]], "Devices": [[714, "devices"]], "Modern Character Devices": [[715, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[716, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[716, "hooks-necessary"]], "Implement open(), read(), write()": [[716, "implement-open-read-write"]], "ioctl()": [[716, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[717, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[717, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[717, "available-methods"]], "open(): Userspace": [[717, "open-userspace"]], "open(): Kernelspace": [[717, "open-kernelspace"]], "ioctl(): Userspace": [[717, "ioctl-userspace"]], "ioctl(): Kernelspace": [[717, "ioctl-kernelspace"]], "ioctl(): Requests": [[717, "ioctl-requests"]], "_IO*() Macros": [[717, "io-macros"]], "_IO*() Macros: Usage": [[717, "io-macros-usage"]], "File Operations on Character Devices": [[718, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[719, "coding-first-functionality-slideshow"]], "Implement Event List": [[719, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[719, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[719, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[720, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[721, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[721, "major-and-minor-numbers"]], "Character Device": [[721, "character-device"]], "Character Device Basics (Slideshow)": [[722, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[722, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[722, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[722, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[722, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[722, "character-device-1"]], "Character Device (2)": [[722, "character-device-2"]], "And User Space?": [[722, "and-user-space"]], "Character Device Basics": [[723, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[724, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[724, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[725, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[726, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[726, "build-module-from-multiple-files"]], "Per-Device Structure": [[726, "per-device-structure"]], "Want My Hair Pretty": [[726, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[726, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[727, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[727, "what-s-bad"]], "Coding: Refactoring": [[728, "coding-refactoring"]], "DMA (Slideshow)": [[729, "dma-slideshow"]], "Address Types": [[729, "address-types"]], "Physical Memory Allocation": [[729, "physical-memory-allocation"]], "DMA Mappings: Overview": [[729, "dma-mappings-overview"]], "Consistent DMA Mappings": [[729, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[729, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[729, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[729, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[729, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[729, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[729, "streaming-mappings-syncing"]], "DMA": [[730, "dma"]], "Building a Fedora Kernel (Screenplay)": [[731, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[731, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[731, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[731, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[732, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[733, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[733, "prerequisite-build-entire-kernel"]], "Build Modules": [[733, "build-modules"]], "Install Modules": [[733, "install-modules"]], "Fedora: Building External Kernel Modules": [[734, "fedora-building-external-kernel-modules"]], "Linux Kernel Driver Development": [[735, "linux-kernel-driver-development"], [1118, "linux-kernel-driver-development"]], "Topics and Dependencies": [[735, "topics-and-dependencies"]], "Module Loading, Hello World (Slideshow)": [[736, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[736, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[736, "built-in-vs-loadable-module"]], "Minimum Module Source": [[736, "minimum-module-source"]], "Gotchas: init() and exit()": [[736, "gotchas-init-and-exit"]], "Module Build": [[736, "module-build"]], "Minimum Makefile, Building": [[736, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[736, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[736, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[737, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[738, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[738, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[738, "cross-compilation"]], "Cross Compilation Sucks": [[738, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[738, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[738, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[738, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[738, "interlude-io-macros"]], "Request GPIO": [[738, "request-gpio"]], "Request Interrupt": [[738, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[739, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[740, "interrupts-slideshow"]], "Interrupt Facts": [[740, "interrupt-facts"]], "Interrupt Service Routine": [[740, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[740, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[742, "io-memory-slideshow"]], "I/O Memory": [[742, "i-o-memory"]], "I/O Memory: Reservation": [[742, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[742, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[742, "accessing-i-o-memory"]], "IO Memory": [[743, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[744, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[744, "dynamic-memory-kmalloc"], [745, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[744, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[746, "doubly-linked-lists-slideshow"]], "Big Picture": [[746, "big-picture"]], "List Head": [[746, "list-head"]], "Insert a Node": [[746, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[746, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[746, "emptying-a-list"]], "Doubly Linked Lists": [[747, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[748, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[748, "what-do-we-have"]], "Consequences of Not Protecting": [[748, "consequences-of-not-protecting"]], "Protect Event List": [[748, "protect-event-list"]], "Protect Device List": [[748, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[749, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[750, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[750, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[750, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[750, "mutex-locking-1"]], "Mutex: Locking (2)": [[750, "mutex-locking-2"]], "Mutex: Releasing": [[750, "mutex-releasing"]], "Realtime Mutex": [[750, "realtime-mutex"]], "Mutex (and RT Mutex)": [[751, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[752, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[752, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[752, "module-initialization-device-registration"]], "Device Methods": [[752, "device-methods"]], "Kernel Networking Layer Utilities": [[752, "kernel-networking-layer-utilities"]], "Network Devices": [[753, "network-devices"]], "PCI (Slideshow)": [[754, "pci-slideshow"]], "First and Foremost": [[754, "first-and-foremost"]], "PCI Driver Methods": [[754, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[754, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[754, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[754, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[754, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[754, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[754, "dma-support-routines"]], "PCI": [[755, "pci"]], "Process vs.Atomic Context (Slideshow)": [[756, "process-vs-atomic-context-slideshow"]], "Process Context": [[756, "process-context"]], "Atomic Context": [[756, "atomic-context"]], "Atomic vs. Process Context": [[756, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[756, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[757, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[758, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[758, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[758, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[758, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[758, "other-toolchains"]], "Kernel Source": [[758, "kernel-source"]], "Kernel Compilation": [[758, "kernel-compilation"]], "Parameters for the Build": [[758, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[758, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[758, "building-the-kernel-artifacts"]], "Packaging": [[758, "packaging"], [1011, "packaging"]], "Bootloader Artifacts": [[758, "bootloader-artifacts"]], "Module Tree": [[758, "module-tree"]], "Deployment": [[758, "deployment"]], "Variation": [[758, "variation"]], "Raspberry Pi: Building the Kernel": [[759, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[759, "todo-jjj"]], "Sample Code Maintenance": [[760, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[761, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[761, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[761, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[761, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[761, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[762, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[763, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[763, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[763, "spinlock-initialization"]], "Simple Lock/Unlock": [[763, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[763, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[763, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[764, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[765, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[766, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[766, "per-event-timestamp"]], "Discussion: Deferred Events": [[766, "discussion-deferred-events"]], "Add Timer": [[766, "add-timer"]], "Gotcha: Cleanup Running Timer": [[766, "gotcha-cleanup-running-timer"]], "More Gotchas": [[766, "more-gotchas"]], "Coding: Timed Event": [[767, "coding-timed-event"]], "Timer Management (Slideshow)": [[768, "timer-management-slideshow"]], "Original Timer API": [[768, "original-timer-api"]], "jiffies": [[768, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[768, "timer-wheel-methods"]], "Better Documentation": [[768, "better-documentation"]], "Timer Management": [[769, "timer-management"]], "To Do List": [[770, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[771, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[771, "new-ioctl-get-one-event"]], "Getting One Event": [[771, "getting-one-event"]], "copy_to_user()": [[771, "copy-to-user"]], "Userspace Test Program": [[771, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[772, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[772, "address-spaces"]], "Copying To and From Userspace": [[772, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[773, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[774, "waiting-for-something-screenplay"]], "read() Not Implemented": [[774, "read-not-implemented"]], "Implementing read() Naively": [[774, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[774, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[774, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[775, "waiting-for-something-slideshow"]], "Waiting for Something": [[775, "waiting-for-something"], [776, "waiting-for-something"]], "Wait Queues: Initializing": [[775, "wait-queues-initializing"]], "Wait Queue: Waiting": [[775, "wait-queue-waiting"]], "Wait Queue: Waking": [[775, "wait-queue-waking"]], "Workqueue (Screenplay)": [[777, "workqueue-screenplay"]], "Add Workqueue": [[777, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[777, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[777, "cleanup-why-we-did-this-after-all"]], "Finish": [[777, "finish"]], "Workqueue (Slideshow)": [[778, "workqueue-slideshow"]], "Workqueue: Motivation": [[778, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[778, "creating-destroying-a-workqueue"]], "What is Work?": [[778, "what-is-work"]], "Submitting Work": [[778, "submitting-work"]], "Workqueue": [[779, "workqueue"]], "Exercises: Archiving And Compression": [[780, "exercises-archiving-and-compression"]], "gzip": [[782, "gzip"]], "Compression Tools: Comparison": [[783, "compression-tools-comparison"]], "tar": [[784, "tar"]], "Creating And Viewing Archives": [[784, "creating-and-viewing-archives"]], "(De)Compression": [[784, "de-compression"]], "Etiquette": [[784, "etiquette"]], "Option Summary": [[784, "option-summary"]], "Being Creative With The Pipe": [[784, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[785, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[785, "precondition-logged-in-to-remote-exam-computer"], [786, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[785, "create-exam-skeleton-5-points"], [786, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[785, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[785, "public-place-10-points"], [786, "public-place-10-points"]], "Private Place (10 Points)": [[785, "private-place-10-points"], [786, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[785, "shared-file-in-public-place-10-points"], [786, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[785, "make-a-backup-of-exam-01-15-points"], [786, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[786, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[786, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[787, "exercises-exams-linux-basics"]], "Linux Basics": [[788, "linux-basics"]], "Everything Is A File (Live Demo)": [[789, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[789, "simple-is-beautiful"]], "Ok: a File is a File": [[789, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[789, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[789, "pseudo-terminals"]], "Disks and Partitions": [[789, "disks-and-partitions"]], "/proc and /sys": [[789, "proc-and-sys"]], "Pseudo Devices": [[789, "pseudo-devices"]], "Environment (Variables)": [[790, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[790, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[790, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[790, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[791, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[791, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[791, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[793, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[793, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[793, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[793, "and-after-successful-authentication"]], "Impersonation": [[793, "impersonation"]], "Logged In, Finally": [[793, "logged-in-finally"]], "User Space, Kernel Space?": [[794, "user-space-kernel-space"]], "User Space: Abstractions": [[794, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[794, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[794, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[795, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[795, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[795, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[795, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[795, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[795, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[795, "process-attributes-groups"]], "Processes: More Attributes": [[795, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[796, "process-hierarchy-parent-child-process"]], "More Process Rules": [[796, "more-process-rules"]], "Typical Process Tree": [[796, "typical-process-tree"]], "Services, init": [[796, "services-init"]], "Windows Subsystem for Linux (WSL)": [[797, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[797, null]], "More Links": [[797, "more-links"]], "My $0.02": [[797, "my-0-02"]], "WSL, Finally": [[797, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[798, "exercises-io-redirection-pipes"]], "I/O Redirection": [[800, "i-o-redirection"]], "Standard I/O Streams": [[800, "standard-i-o-streams"]], "I/O Redirection Operators": [[800, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[800, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[800, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[800, "example-standard-error-redirection"]], "Example: Everything Redirection": [[800, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[801, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[801, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[801, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[801, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[801, "more-tricks"]], "Pipes": [[802, "pipes"]], "Why Pipes?": [[802, "why-pipes"]], "Pipe Facts": [[802, "pipe-facts"]], "Pipe Examples": [[802, "pipe-examples"]], "More Pipe Examples": [[802, "more-pipe-examples"]], "Named Pipes": [[802, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[803, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[803, "owner-and-permissions"]], "A Simple Example": [[803, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[803, null]], "Permission Check: User": [[803, "permission-check-user"]], "Permission Check: Group": [[803, "permission-check-group"]], "Permission Check: Others": [[803, "permission-check-others"]], "Programs: Execute Permissions": [[803, "programs-execute-permissions"]], "Directory Permissions": [[803, "directory-permissions"]], "Permission Bits, octal": [[803, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[803, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[803, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[804, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[805, "fh-moodle-quiz-permissions"], [806, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[807, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[808, "exercise-create-private-directory"]], "Question: Private Directory": [[809, "question-private-directory"]], "Exercise: Create Public Directory": [[810, "exercise-create-public-directory"]], "Question: Public Directory": [[811, "question-public-directory"]], "Exercise: Create Group-Shared File": [[812, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[814, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[814, "problem-change-my-password"]], "Solution: Set-UID Bit": [[814, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[814, "set-uid-how-does-it-work"]], "Command: chmod": [[814, "command-chmod"]], "Set-UID Is Not A Toy!": [[814, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[815, "setuid-live-demo"]], "Real and Effective User ID": [[815, "real-and-effective-user-id"]], "Sample Program": [[815, "sample-program"]], "Set-UID jfasch?": [[815, "set-uid-jfasch"]], "Set-UID root? Danger!": [[815, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[816, "ugly-hack-sticky-bit"]], "Sticky Bit": [[816, "sticky-bit"]], "Default Permissions: umask": [[817, "default-permissions-umask"]], "Default Permissions - umask": [[817, "id1"]], "umask: How Does it Work?": [[817, "umask-how-does-it-work"]], "Shape (1)": [[818, "shape-1"]], "Shape (2)": [[818, "shape-2"]], "Options": [[818, "options"], [847, "options"]], "Help and Manual": [[818, "help-and-manual"]], "Man Pages: Navigation": [[818, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[818, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[818, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[818, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[818, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[818, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[819, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[819, "what-s-volatile"]], "Copying: cp": [[820, "copying-cp"]], "Option Overview": [[820, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[820, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[820, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[820, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[820, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[820, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[821, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[821, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[822, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[823, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[824, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[825, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[826, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[827, "exercise-mkdir"]], "Exercise: Funny Stuff": [[828, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[829, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[830, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[831, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[832, "the-shell-exercises"]], "Exercise: File Types in /dev": [[833, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[834, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[835, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[836, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[837, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[837, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[837, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[837, "creating-an-empty-file-touch"]], "Removing A File: rm": [[837, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[837, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[839, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[840, "directory-listings-the-ls-command"]], "Many Options": [[840, "many-options"]], "Hidden Files": [[840, "hidden-files"]], "File Types": [[840, "file-types"]], "Moving and Renaming: mv": [[841, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[841, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[841, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[841, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[842, "path-separator"]], "Relative Paths": [[842, "relative-paths"]], "Absolute Paths": [[842, "absolute-paths"]], "Special Paths": [[842, "special-paths"]], "cat": [[843, "cat"], [843, "id1"]], "cut": [[844, "cut"], [844, "id1"]], "Exercises: Inspecting Text Files": [[845, "exercises-inspecting-text-files"]], "find": [[846, "find"]], "Directories durchsuchen mit find": [[846, "directories-durchsuchen-mit-find"]], "find: Optionen": [[846, "find-optionen"]], "find: Beispiele": [[846, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[846, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[846, "find-verknupfungen-beispiele"]], "grep": [[847, "grep"]], "Searching With grep": [[847, "searching-with-grep"]], "More About Regular Expressions": [[847, "more-about-regular-expressions"]], "head And tail": [[849, "head-and-tail"]], "head": [[849, "head"]], "tail": [[849, "tail"]], "head And tail In The Pipe": [[849, "head-and-tail-in-the-pipe"]], "less": [[850, "less"]], "Paging Files Using less": [[850, "paging-files-using-less"]], "Help Screen (Enter With h)": [[850, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[851, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[851, "stdin-stdout-examples"]], "Pipe: Examples": [[851, "pipe-examples"]], "Basics Text Tools": [[851, "basics-text-tools"]], "Drafts": [[852, "drafts"]], "Yocto": [[853, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[855, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[855, null]], "Electronic Speed Controller (ESC)": [[855, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[855, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[855, "the-command-protocol-and-calibration"]], "Driving the Motor": [[855, "driving-the-motor"]], "CAN/Linux Basics": [[856, "can-linux-basics"]], "Why This Talk?": [[856, "why-this-talk"]], "Network Programming: Datagram Exchange": [[856, "network-programming-datagram-exchange"]], "And CAN?": [[856, "and-can"]], "One CAN Network Packet \u2026": [[856, "one-can-network-packet"]], "CAN Interfaces": [[857, "can-interfaces"]], "CAN-Interface: Configuration": [[857, "can-interface-configuration"]], "CAN Utils": [[857, "can-utils"]], "CAN Utils: Usage (1)": [[857, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[857, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[857, "vcan-virtual-can-bus"]], "Programming": [[858, "programming"]], "CAN Programming": [[858, "can-programming"]], "CAN in C - Socket, Interface Index": [[858, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[858, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[858, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[858, "can-in-c-frames-2"]], "CAN in Python - Frames": [[858, "can-in-python-frames"]], "Hardware, Kernel": [[859, "hardware-kernel"]], "MCP2515: Schematic": [[859, "mcp2515-schematic"]], "MCP2515: Soldering": [[859, "mcp2515-soldering"]], "MCP2515: SPI": [[859, "mcp2515-spi"]], "MCP2515: Raspberry": [[859, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[860, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[861, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[862, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[862, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[862, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[862, null]], "Enable Userspace I2C": [[862, "enable-userspace-i2c"]], "Slave Device: LM73": [[862, "slave-device-lm73"]], "Datasheet etc.": [[862, null]], "Optional: Address Selection": [[862, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[862, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[862, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[862, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[862, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[862, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[862, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[862, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[863, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[863, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[863, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[863, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[863, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[864, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[864, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[864, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[864, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[864, null]], "Wiring: Attach DS2482-800 via I2C": [[864, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[864, "configure-software"]], "Enable I2C, and Check": [[864, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[864, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[864, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[864, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[864, "over-engineering-beauty"]], "Hardware Bringup": [[864, "hardware-bringup"]], "Device Usage": [[864, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[864, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[864, "using-the-device"]], "As a Generic OneWire Device": [[864, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[864, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[864, "lm-sensors"]], "OneWire Caveats": [[864, "onewire-caveats"]], "Bus Topology": [[864, "bus-topology"]], "Error Symptoms": [[864, "error-symptoms"]], "SSH: Basics": [[865, "ssh-basics"]], "Login": [[865, "login"]], "Exit Status, stdin, stdout: Scripting": [[865, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[866, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[867, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[868, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[869, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[871, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[871, "local-setup-key-generation"]], "Key Pair?": [[871, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[871, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[872, "ssh-links"]], "SSH: Port Forwarding": [[873, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[873, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[873, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[873, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[873, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[873, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[874, "ssh-secure-copy-scp"]], "What Is That?": [[874, "what-is-that"]], "Copy Single File From Local To Remote": [[874, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[874, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[874, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[874, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[874, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[874, "more-options"]], "SSH File System (sshfs)": [[875, "ssh-file-system-sshfs"]], "What Is It?": [[875, "what-is-it"]], "Why Is It?": [[875, "why-is-it"]], "Example Situation: The Raspi": [[875, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[875, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[875, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[875, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[875, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[876, "the-errno-variable"]], "errno Is A Global Variable": [[876, "errno-is-a-global-variable"]], "Helper Functions": [[876, "helper-functions"]], "Linux Systems Programming: Basics": [[877, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[878, "system-calls-vs-library-functions"]], "System Calls": [[878, "system-calls"]], "System Calls And The C-Library": [[878, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[878, "library-function-or-system-call"]], "Manual Pages": [[878, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[879, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[879, null]], "Solution: This Is What An Operating System Is There For": [[879, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[880, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[880, null], [881, null], [882, null], [1063, "see-also"]], "Abstractions": [[880, "abstractions"], [881, "abstractions"], [882, "abstractions"]], "Simplicity": [[880, "simplicity"], [881, "simplicity"], [882, "simplicity"]], "Build, Run, Look": [[880, "build-run-look"], [881, "build-run-look"], [882, "build-run-look"]], "Watch: Run Under strace Supervision": [[880, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[881, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[881, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[882, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[882, "setup-a-timer"]], "Blocking I/O: What Is That?": [[883, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[884, "file-i-o-basics"]], "File Descriptors": [[884, "file-descriptors"]], "Standard Filedescriptors": [[884, "standard-filedescriptors"]], "File I/O: System Calls": [[884, "file-i-o-system-calls"]], "open()": [[884, "open"]], "open() Flags": [[884, "open-flags"]], "read()": [[884, "read"]], "write()": [[884, "write"]], "File Offset: lseek()": [[884, "file-offset-lseek"]], "The Rest: ioctl()": [[884, "the-rest-ioctl"]], "Exercise: Copy A File": [[885, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[885, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[885, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[885, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[885, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[885, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[886, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[887, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[887, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[887, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[887, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[887, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[887, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[887, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[888, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[888, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[888, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[888, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[889, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[889, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[889, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[889, "error-file-exists"]], "O_RDONLY: Reading a File": [[890, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[890, "me-and-etc-passwd"]], "Code: Reading A File": [[890, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[890, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[890, "error-file-not-readable"]], "Error: File Not Even There": [[890, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[891, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[891, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[891, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[891, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[891, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[892, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[892, "onewire-basics"]], "Program": [[892, "program"], [1044, "program"]], "Test On The Target Machine": [[892, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[894, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[894, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[894, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[894, "truncating-files"]], "File Descriptors - Allocation": [[894, "file-descriptors-allocation"]], "Linux Systems Programming": [[895, "linux-systems-programming"], [1128, "linux-systems-programming"]], "Get Value Of GPIO": [[896, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[896, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[896, "shell-script"]], "C Program": [[896, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[897, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[898, "intro-sysfs-gpio"]], "sysfs?": [[898, "sysfs"]], "General Purpose IO (GPIO)": [[898, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[898, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[898, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[899, "interrupts-in-userspace"]], "Manual Configuration": [[899, "manual-configuration"]], "C Program: Configuration, Event Loop": [[899, "c-program-configuration-event-loop"]], "Why Threads?": [[900, "why-threads"]], "Typical Uses": [[900, "typical-uses"]], "Legal (1)": [[900, "legal-1"]], "Legal (2)": [[900, "legal-2"]], "POSIX Thread API": [[900, "posix-thread-api"]], "Thread Life Cycle": [[901, "thread-life-cycle"], [901, "id1"]], "Thread Creation": [[901, "thread-creation"]], "Thread Termination (1)": [[901, "thread-termination-1"]], "Thread Termination (2)": [[901, "thread-termination-2"]], "Exit Status, pthread_join()": [[901, "exit-status-pthread-join"]], "Detached Threads": [[901, "detached-threads"]], "Thread ID": [[901, "thread-id"]], "Scheduled Entities (1)": [[901, "scheduled-entities-1"]], "Scheduled Entities (2)": [[901, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[902, "thread-creation-race-condition"]], "Synchronization": [[903, "synchronization"]], "Race Conditions (1)": [[903, "race-conditions-1"]], "Race Conditions (2)": [[903, "race-conditions-2"]], "Mutex (1)": [[903, "mutex-1"]], "Mutex (2)": [[903, "mutex-2"]], "Mutex (3)": [[903, "mutex-3"]], "Mutex Types": [[903, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[904, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[905, "communication-condition-variable"]], "Condition Variable (1)": [[905, "condition-variable-1"]], "Condition Variable (2)": [[905, "condition-variable-2"]], "Condition Variable: wait()": [[905, "condition-variable-wait"]], "Condition Variable: signal()": [[905, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[905, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[905, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[905, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[905, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[905, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[906, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[907, "one-time-initialization-1"]], "One-Time Initialization (2)": [[907, "one-time-initialization-2"]], "One-Time Initialization (3)": [[907, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[907, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[908, "last-warning-1"]], "Last Warning (2)": [[908, "last-warning-2"]], "Last Warning (3)": [[908, "last-warning-3"]], "POSIX Threads": [[909, "posix-threads"]], "Trylock/islocked": [[910, "trylock-islocked"]], "Process: Arguments, Exit Status": [[911, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[911, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[911, "the-shell-a-programming-language"]], "Exit Status": [[911, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[911, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[911, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[911, "argument-vector-int-argc-char-argv"]], "Processes": [[912, "processes"]], "The Process Tree (And Environment, And procfs)": [[913, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[913, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[913, "system-calls-getpid-getppid"]], "Environment Variables": [[913, "environment-variables"]], "Scheduling (and Multitasking)": [[914, "scheduling-and-multitasking"]], "Fairness Criteria": [[914, "fairness-criteria"]], "CPU bound vs. I/O bound": [[914, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[914, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[914, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[916, "tasks-processes-threads"]], "Tasks": [[916, "tasks"]], "A Typical Bare Metal Application": [[916, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[916, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[916, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[916, "id1"]], "Threads Are Great: More Functionality": [[916, "threads-are-great-more-functionality"]], "Are Threads Great?": [[916, "are-threads-great"]], "Stability Considerations": [[916, "stability-considerations"]], "Processes, Address Spaces": [[916, "processes-address-spaces"]], "Stabilizing": [[916, "stabilizing"]], "Scheduling: Exam Questions": [[917, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[918, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[918, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[918, "enter-realtime-definition"]], "Realtime on Linux": [[918, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[918, "demo-measuring-wakeup-latency"]], "Immediately?": [[918, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[918, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[919, "realtime-api"]], "Scheduling Policies": [[919, "scheduling-policies"]], "Scheduling Priorities": [[919, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[919, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[919, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[919, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[919, "scheduling-threads-2"]], "Priority Inversion": [[919, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[919, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[920, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[920, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[920, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[920, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[920, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[921, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[922, "screenplay-sysprog-posix-ipc"], [925, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[922, "select-on-device-files"]], "Sysprog: Events": [[923, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[924, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[925, "virtual-memory-mmap"]], "POSIX Shared Memory": [[925, "posix-shared-memory"]], "Create Shared Memory Segment": [[925, "create-shared-memory-segment"]], "Produce into Shared Memory": [[925, "produce-into-shared-memory"]], "Consume from Shared Memory": [[925, "consume-from-shared-memory"]], "POSIX Semaphores": [[925, "posix-semaphores"]], "Create Semaphore": [[925, "create-semaphore"]], "Wait": [[925, "wait"]], "Post": [[925, "post"]], "POSIX Message Queues": [[925, "posix-message-queues"]], "Create": [[925, "create"]], "Produce": [[925, "produce"]], "Consume": [[925, "consume"]], "Slides: Sysprog: POSIX IPC": [[926, "slides-sysprog-posix-ipc"]], "Slideshow": [[926, null], [930, null]], "History: Two IPC Variants": [[926, "history-two-ipc-variants"]], "Object Names": [[926, "object-names"]], "File Semantics": [[926, "file-semantics"]], "Message Queues": [[926, "message-queues"]], "Open/Create: mq_open()": [[926, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[926, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[926, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[926, "notification-mq-notify"]], "Message Queues are Files": [[926, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[926, "message-queue-filesystem-mqueue"]], "Semaphores": [[926, "semaphores"]], "Open/Create: sem_open()": [[926, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[926, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[926, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[926, "semaphores-are-files"]], "Shared Memory (1)": [[926, "shared-memory-1"]], "Shared Memory (2)": [[926, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[926, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[927, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[928, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[929, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[929, "barebones-naive-program"]], "Signal Handler": [[929, "signal-handler"]], "Alarm": [[929, "alarm"]], "Alarm (Louder)": [[929, "alarm-louder"]], "Synchronous Delivery": [[929, "synchronous-delivery"]], "Innocent Multithreaded Program": [[929, "innocent-multithreaded-program"]], "Add SIGALRM": [[929, "add-sigalrm"]], "Slides: Sysprog: Signals": [[930, "slides-sysprog-signals"]], "Example Signals": [[930, "example-signals"]], "Terminology": [[930, "terminology"]], "Default Actions": [[930, "default-actions"]], "Important Signals": [[930, "important-signals"]], "Sending, Commandline": [[930, "sending-commandline"]], "Sending Signals, Programmatically": [[930, "sending-signals-programmatically"]], "Warning!": [[930, "warning"]], "Blocking Signals: Signal Mask": [[930, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[930, "signal-mask-manipulation"]], "Pending Signals": [[930, "pending-signals"]], "Signal Set: sigset_t": [[930, "signal-set-sigset-t"]], "Signal Handlers": [[930, "signal-handlers"]], "Installing a Signal Handler (1)": [[930, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[930, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[930, "effects-of-signal-delivery"]], "Last Warning!": [[930, "last-warning"]], "WTF Async Signal Safe?": [[930, "wtf-async-signal-safe"]], "Exercise: Signals": [[930, "exercise-signals"]], "Sysprog: Signals": [[931, "sysprog-signals"]], "Toolchain: Basics": [[932, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[932, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[932, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[932, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[932, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[932, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[932, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[932, "recap-toolchain"]], "CMake: Cross Build": [[933, "cmake-cross-build"]], "Cross Build: Parameters": [[933, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[933, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[933, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[933, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[933, "step-2-build-using-make"], [934, "step-2-build-using-make"]], "CMake: Local Build": [[934, "cmake-local-build"]], "make: Problems": [[934, "make-problems"]], "CMake To The Rescue": [[934, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[934, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[934, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[934, "goodie-dependency-management"]], "Native Compilation": [[935, "native-compilation"]], "Cross?": [[935, "cross"]], "The sysroot": [[935, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[937, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[938, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[939, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[940, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[941, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[942, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[943, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[944, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[944, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[944, "create-a-sysroot"]], "Patience!": [[944, null]], "Test Cross Build": [[944, "test-cross-build"]], "What We Have": [[944, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[944, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[944, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[946, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[946, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[946, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[946, "create-docker-volume"]], "Container Work": [[946, "container-work"]], "Command To Run Container On Volumes": [[946, "command-to-run-container-on-volumes"]], "Setup container": [[946, "setup-container"]], "Install autoconf 2.71": [[946, "install-autoconf-2-71"]], "Install crosstool-ng": [[946, "install-crosstool-ng"]], "Build Toolchain": [[946, "build-toolchain"]], "crosstool-ng Toolchain Build": [[946, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[946, "create-toolchain-archive"]], "Install Toolchain On Host": [[946, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[947, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[947, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[947, "establish-cmake-toolchain-file"]], "Test Run": [[947, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[948, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[948, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[948, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[948, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[948, "complication-modification-tracking"]], "Enter Makefiles": [[948, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[949, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[949, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[949, "and-dynamic-libraries"]], "Relocations": [[949, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[949, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[949, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[949, "and-build-dependencies"]], "And Runtime Dependencies?": [[949, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[949, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[949, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[949, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[950, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[950, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[950, "code-bases-become-larger-2"]], "Problem: Structure": [[950, "problem-structure"]], "Build Instructions: Building A Library": [[950, "build-instructions-building-a-library"]], "Closures": [[951, "closures"]], "Today": [[951, "today"]], "def is a Statement": [[951, "def-is-a-statement"]], "Functions That Create Functions": [[951, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[951, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[951, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[951, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[951, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[951, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[952, "intro"]], "Simplest: List Comprehension": [[952, "simplest-list-comprehension"]], "Dictionary Comprehension": [[952, "dictionary-comprehension"]], "Context Managers: The with Statement": [[953, "context-managers-the-with-statement"]], "Example: Open File": [[953, "example-open-file"]], "Example: Temporary Directory": [[953, "example-temporary-directory"]], "Example: Multiple with Items": [[953, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[953, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[953, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[953, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[953, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[954, "decorators"]], "The Ominous \u201c@\u201d": [[954, "the-ominous"]], "Decorators Overview": [[954, "decorators-overview"]], "Decorator Basics": [[954, "decorator-basics"]], "Decorators are Syntactic Sugar": [[954, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[954, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[954, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[954, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[954, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[955, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[955, "catching-exceptions-by-type"]], "Exception Objects": [[955, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[955, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[955, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[955, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[955, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[955, "built-in-exception-hierarchy"]], "Raising Exceptions": [[955, "raising-exceptions"]], "Re-Raising Exceptions": [[955, "re-raising-exceptions"]], "User-Defined Exceptions": [[955, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[955, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[955, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[955, "finally-executed-regardless-of-exception"]], "The exec() Function": [[956, "the-exec-function"]], "Dictionaries Everywhere: Context": [[956, "dictionaries-everywhere-context"]], "Enter exec()": [[956, "enter-exec"]], "exec(), and Context": [[956, "exec-and-context"]], "And What Is This Used For, Realistically?": [[956, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[957, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[958, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[958, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[958, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[958, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[958, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[958, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[958, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[958, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[959, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[959, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[959, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[959, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[959, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[959, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[960, "the-iterator-protocol"], [960, "id1"]], "Iteration in Python": [[960, "iteration-in-python"]], "What\u2019s an Iterator?": [[960, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[960, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[960, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[960, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[960, "generators-motivation"]], "Generators: How?": [[960, "generators-how"]], "Observations": [[960, "observations"]], "Iteration, Generators, And yield": [[961, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[962, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[963, "modules-are-objects"]], "Other Forms (1)": [[963, "other-forms-1"]], "Other Forms (2)": [[963, "other-forms-2"]], "Packages": [[963, "packages"]], "Executing Modules as Scripts": [[963, "executing-modules-as-scripts"]], "Package Structure": [[963, "package-structure"]], "Relative Imports (1)": [[963, "relative-imports-1"]], "Relative Imports (2)": [[963, "relative-imports-2"]], "Multithreading (Python)": [[964, "multithreading-python"]], "What\u2019s a Thread?": [[964, "what-s-a-thread"]], "Threads: The Pythonic Way": [[964, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[964, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[964, "and-program-termination"]], "Daemon Threads": [[964, "daemon-threads"]], "Race Conditions, and Mutexes": [[966, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[966, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[966, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[966, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[966, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[967, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[968, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[968, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[968, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[968, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[968, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[968, "abtract-base-class"]], "Classes And Dictionaries": [[969, "classes-and-dictionaries"]], "Facts Up-Front": [[969, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[969, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[969, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[969, "attributes"], [1084, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[969, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[969, "dynamic-attribute-access"]], "Constructor": [[970, "constructor"]], "And self?": [[970, "and-self"]], "Interrelationships": [[971, "interrelationships"]], "Extending Existing Classes": [[972, "extending-existing-classes"]], "Additional Feature: Salary": [[972, "additional-feature-salary"]], "Want Manager": [[972, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[972, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[972, "isinstance"]], "issubclass()": [[972, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[972, "add-str-creatively-after-the-fact"]], "Object Methods": [[973, "object-methods"]], "Class Methods (@classmethod)": [[973, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[973, "static-methods-staticmethod"]], "collections.namedtuple": [[974, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[974, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[974, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[974, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[975, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[975, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[975, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[975, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[975, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[975, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[975, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[975, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[975, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[975, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[976, "readonly-attributes"]], "And Write Access?": [[976, "and-write-access"]], "Calculated Attributes": [[976, "calculated-attributes"]], "str() And repr()": [[977, "str-and-repr"]], "Stringification And Representation": [[977, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[977, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[978, "positional-and-keyword-arguments"]], "Traditional Function Call": [[978, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[978, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[978, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[978, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[978, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[978, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[978, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[979, "python-the-language-fundamentals"]], "The Python Programming Language": [[981, "the-python-programming-language"]], "A Little Bit of History": [[981, "a-little-bit-of-history"]], "Guido Van Rossum": [[981, "guido-van-rossum"]], "Hello World: Interactive Mode": [[982, "hello-world-interactive-mode"]], "Hello World: Script Files": [[982, "hello-world-script-files"]], "Running Python Programs": [[983, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[983, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[983, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[983, "the-unix-way-running"]], "The Doze Way: Registry": [[983, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[984, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[984, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[984, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[984, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[985, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[985, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[985, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[985, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[985, null]], "Variables (1)": [[986, "variables-1"]], "Variables (2)": [[986, "variables-2"]], "Integer Numbers: Comparison": [[987, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[987, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[987, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[987, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[987, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[987, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[987, "strings-python-2-unicode-2"]], "Strings: Python 3": [[987, "strings-python-3"]], "Python 3, Generally": [[987, "python-3-generally"]], "Boolean Values": [[989, "boolean-values"]], "Boolean Operators": [[989, "boolean-operators"]], "The if Statement": [[990, "the-if-statement"], [990, "id1"]], "Looping Constructs": [[991, "looping-constructs"]], "Esoteric Feature: while/else": [[991, "esoteric-feature-while-else"]], "Sequence Elements": [[992, "sequence-elements"]], "Sequence Multiplication": [[992, "sequence-multiplication"]], "Indexing (1)": [[993, "indexing-1"]], "Indexing (2)": [[993, "indexing-2"]], "Slicing: Cutting Out": [[993, "slicing-cutting-out"]], "Slicing: Step Width": [[993, "slicing-step-width"]], "Iteration over \u2026 Something": [[994, "iteration-over-something"]], "break, continue, else": [[994, "break-continue-else"]], "Iteration over Numbers: range()": [[995, "iteration-over-numbers-range"]], "range(): Definition": [[995, "range-definition"]], "range(): Python 2 vs. Python 3": [[995, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[996, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[996, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[996, "immutability-tuples"]], "Mutability: Lists (1)": [[996, "mutability-lists-1"]], "Mutability: Lists (2)": [[996, "mutability-lists-2"]], "Shallow Copy": [[996, "shallow-copy"]], "Deep Copy": [[996, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[997, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[997, "undefined-variable"]], "Local Variable": [[997, "local-variable"]], "Local and Global Variable With Same Name": [[997, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[997, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[998, "functions-slideshow"]], "Why Functions?": [[998, "why-functions"]], "Mutable Default Parameters: Attention!": [[998, "mutable-default-parameters-attention"]], "String Delimiters": [[1000, "string-delimiters"]], "Escape Sequences": [[1000, "escape-sequences"]], "More String Tricks": [[1000, "more-string-tricks"]], "C-Style Formatting (1)": [[1001, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1001, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1001, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1001, "c-style-formatting-examples"]], "The format Method": [[1001, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1001, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1002, "batteries-included-checks"]], "Batteries Included: Search": [[1002, "batteries-included-search"]], "Substring Search: Examples": [[1002, "substring-search-examples"]], "Split and Join (1)": [[1002, "split-and-join-1"]], "Split and Join (2)": [[1002, "split-and-join-2"]], "List Access": [[1003, "list-access"]], "List Methods: Examples": [[1003, "list-methods-examples"]], "Dictionary Access": [[1004, "dictionary-access"]], "Examples: Simple Access": [[1004, "examples-simple-access"]], "Examples: Shortcuts": [[1004, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1004, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1004, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1005, "operations-on-sets-1"]], "Operations on Sets (2)": [[1005, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1006, "python-2-vs-python-3"]], "Opening Files": [[1006, "opening-files"]], "Reading Files": [[1006, "reading-files"]], "Reading Files: Pythonic": [[1006, "reading-files-pythonic"]], "Writing Files (1)": [[1006, "writing-files-1"]], "Writing Files (2)": [[1006, "writing-files-2"]], "File Modes": [[1006, "file-modes"]], "Text vs. Binary Mode": [[1006, "text-vs-binary-mode"]], "Standard Streams": [[1006, "standard-streams"]], "Function Objects": [[1007, "function-objects"]], "What\u2019s a Function?": [[1007, "what-s-a-function"]], "Function Objects?": [[1007, "id1"]], "Function Objects! (1)": [[1007, "function-objects-1"]], "Function Objects! (2)": [[1007, "function-objects-2"]], "Commandline Parsing with argparse": [[1008, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1008, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1008, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1009, "python-draft-topics"]], "Matplotlib": [[1010, "matplotlib"]], "Axis Ranges": [[1010, "axis-ranges"]], "Package Installation (setuptools)": [[1011, "package-installation-setuptools"]], "Files": [[1011, "files"]], "Test \u201cInstallation\u201d": [[1011, "test-installation"]], "Source Distribution": [[1011, "source-distribution"]], "Manifest": [[1011, "manifest"]], "Installing From Wheel File": [[1011, "installing-from-wheel-file"]], "Publishing On PyPI": [[1011, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1012, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1013, "exercise-read-csv-file"]], "Sample CSV File": [[1013, "sample-csv-file"]], "CSV and Databases": [[1014, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1016, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1017, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1018, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1019, "exercises-external"]], "Exercise: Swap Two Variables": [[1021, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1022, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1023, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1024, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1025, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1026, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1027, "exercise-primeness-for"]], "Exercises (Legacy)": [[1028, "exercises-legacy"]], "Exercise: Functions: join()": [[1029, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1031, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1032, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1033, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1034, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1034, null]], "Implementation Strategy": [[1034, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1035, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1036, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1037, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1038, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1039, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1040, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1041, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1042, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1043, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1043, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1043, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1044, "exercise-basic-sensor"]], "Specification, And Setup": [[1044, "specification-and-setup"]], "Verification": [[1044, "verification"]], "Unit Test": [[1044, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1045, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1045, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1046, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1047, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1047, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1048, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1049, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1050, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1051, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1051, "test-code"], [1052, "test-code"], [1053, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1052, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1053, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1054, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1055, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1055, "sample-trainings"]], "More Information": [[1055, "more-information"]], "Python Links": [[1056, "python-links"]], "Advanced Python": [[1056, "advanced-python"], [1121, "advanced-python"]], "David Beazley": [[1056, "david-beazley"]], "Raymond Hettinger": [[1056, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1057, "machine-learning-artificial-intelligence"]], "K-Means": [[1058, "k-means"]], "Topic Overview": [[1058, "topic-overview"], [1062, "topic-overview"]], "Artifacts": [[1058, "artifacts"]], "Topic Dependencies": [[1058, "topic-dependencies"], [1062, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1059, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1060, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1061, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1061, "pandas.DataFrame"]], "Reading Data": [[1061, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1061, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1061, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1061, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1061, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1061, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1061, "Verify-the-Model"]], "Linear Regression": [[1062, "linear-regression"]], "Running Code": [[1062, "running-code"]], "Dataset": [[1062, "dataset"]], "Machine Learning: Concepts and Terminology": [[1063, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1063, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1063, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1063, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1063, "types-of-machine-learning"]], "Problems Solved": [[1063, "problems-solved"], [1089, "problems-solved"], [1096, "problems-solved"]], "Context Managers (Livehacking Tutorial)": [[1064, "context-managers-livehacking-tutorial"]], "Exception Unsafety": [[1064, "exception-unsafety"]], "Exception Safety": [[1064, "exception-safety"]], "Solution: The with Statement": [[1065, "solution-the-with-statement"]], "Context Managers (the with Statement) (incomplete)": [[1066, "context-managers-the-with-statement-incomplete"]], "CSV Files": [[1067, "csv-files"]], "CSV in its Origins": [[1067, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1067, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1067, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1067, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1067, "more-tuning-needed-quoting"]], "Tuning Options": [[1067, "tuning-options"]], "And Headings?": [[1067, "and-headings"]], "Enter csv.DictReader": [[1067, "enter-csv-dictreader"]], "DBAPI 2": [[1068, "dbapi-2"]], "Database Interfaces": [[1068, "database-interfaces"]], "DBAPI 2.0": [[1068, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1068, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1068, "caveat-isolation"]], "Databases": [[1069, "databases"]], "DBAPI 2: PostgreSQL": [[1070, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1070, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1071, "dbapi-2-sqlite3"]], "SQLite3": [[1071, "sqlite3"]], "SQLite3 Connection": [[1071, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1071, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1071, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1071, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1071, "sqlite3-bind-parameters"]], "ASCII": [[1072, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1072, "iso-latin-1-iso-8859-1"]], "And Python?": [[1072, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1072, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1072, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1072, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1072, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1072, "and-jorg-2"]], "Enter UTF-8": [[1072, "enter-utf-8"]], "Boundary Code": [[1072, "boundary-code"]], "Ah Yes: decode()": [[1072, "ah-yes-decode"]], "And Source Encoding?": [[1072, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1073, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1074, "the-import-statement-incomplete"]], "Server/Broker": [[1075, "server-broker"]], "Client": [[1075, "client"]], "Starting the Service": [[1075, "starting-the-service"]], "Publishing a Message in Python": [[1075, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1075, "subscribing-a-topic-in-python"]], "Message Payload?": [[1075, "message-payload"]], "Pandas: Adding Rows": [[1076, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1076, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1076, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1076, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1077, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1077, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1077, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1077, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1077, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1077, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1077, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1078, "pandas-filters"]], "Basic Filter Example": [[1078, "basic-filter-example"]], "Filter? Bitmap!": [[1078, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1078, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1078, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1078, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1078, "negation"]], "Neat Helpers": [[1078, "neat-helpers"]], "Random Material": [[1079, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1080, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1080, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1080, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1080, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1080, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1081, "pandas-indexes"]], "Default Index: Row Number": [[1081, "default-index-row-number"]], "Setting Custom Index": [[1081, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1081, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1081, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1081, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1081, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1082, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1082, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1082, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1082, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1082, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1083, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1083, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1083, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1083, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1083, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1083, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1084, "xml-elementtree-etree"]], "SAX and DOM": [[1084, "sax-and-dom"]], "ElementTree": [[1084, "elementtree"]], "A Very Simple Document": [[1084, "a-very-simple-document"]], "Text (1)": [[1084, "text-1"]], "Text (2)": [[1084, "text-2"]], "Writing XML Documents": [[1084, "writing-xml-documents"]], "Reading XML Documents": [[1084, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1085, "visual-studio-code-for-python-programming"]], "PCAP Exam": [[1086, "pcap-exam"]], "Syllabus": [[1086, "syllabus"]], "Exam block #1: Modules and Packages (12%)": [[1086, "exam-block-1-modules-and-packages-12"]], "Exam block #2: Exceptions (14%)": [[1086, "exam-block-2-exceptions-14"]], "Exam block #3: Strings (18%)": [[1086, "exam-block-3-strings-18"]], "Exam block #4: Object-Oriented Programming (34%)": [[1086, "exam-block-4-object-oriented-programming-34"]], "Exam block #5: Miscellaneous (List Comprehensions, Lambdas, Closures, and I/O Operations) (22%)": [[1086, "exam-block-5-miscellaneous-list-comprehensions-lambdas-closures-and-i-o-operations-22"]], "Sample Questions": [[1086, "sample-questions"]], "Python: Project/Package Management": [[1087, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1088, "python-package-index-livehacking-screenplay"]], "Invocation": [[1088, "invocation"]], "Help": [[1088, "help"]], "Most Used Subcommands": [[1088, "most-used-subcommands"]], "Subcommand Help": [[1088, "subcommand-help"]], "System vs. User": [[1088, "system-vs-user"]], "Search": [[1088, "search"]], "Python Package Index (Slideshow)": [[1089, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1089, "python-package-index-pypi"]], "Python Package Index": [[1090, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1091, "packaging-pypi-upload-link-collection"]], "PyTest": [[1092, "pytest"]], "pytest Introduction, By Example": [[1093, "pytest-introduction-by-example"]], "Sample Project Structure": [[1093, "sample-project-structure"]], "pytest: Installation, Documentation": [[1093, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1093, "and-pythonpath"]], "A Simple Test": [[1093, "a-simple-test"]], "Failing Tests": [[1093, "failing-tests"]], "A More Realistic Example": [[1093, "a-more-realistic-example"]], "Fixtures": [[1093, "fixtures"]], "Temporary Test Directory": [[1093, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1093, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1094, "the-unittest-module"]], "Simplest Example": [[1094, "simplest-example"]], "Using a Fixture": [[1094, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1094, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1094, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1094, "the-meat-of-a-test"]], "Recommendations": [[1094, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1095, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1095, "first-help"]], "Local Package Installation": [[1095, "local-package-installation"]], "Freezing an Environment": [[1095, "freezing-an-environment"]], "Destroying an Environment": [[1095, "destroying-an-environment"]], "Recreating an Environment": [[1095, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1095, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1096, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1096, "virtual-environments-links"]], "Virtual Environments": [[1097, "virtual-environments"]], "Unit Testing With googletest": [[1098, "unit-testing-with-googletest"]], "Code: Unittest: GTest Basics": [[1099, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1100, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1100, "before-we-start"]], "Simplest Test: No Test": [[1100, "simplest-test-no-test"]], "Next Simplest: Single File": [[1100, "next-simplest-single-file"]], "Executing Tests Selectively": [[1100, "executing-tests-selectively"]], "Fatal Failure": [[1100, "fatal-failure"]], "FAIL()": [[1100, "fail"]], "ASSERT_*()": [[1100, "assert"]], "Non-Fatal Failure": [[1100, "non-fatal-failure"]], "Custom Message Output": [[1100, "custom-message-output"]], "Last Not Least: Structure": [[1100, "last-not-least-structure"]], "Test Cases and Suites": [[1100, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1101, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1102, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1102, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1102, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1102, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1102, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1103, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1104, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1105, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1105, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1105, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1105, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1106, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1107, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1107, null]], "Buchung": [[1107, "buchung"]], "Kursgestaltung": [[1107, "kursgestaltung"]], "\u00dcbungen": [[1107, "ubungen"]], "Unterlagen & Download": [[1107, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1108, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1108, "grub-0-97"]], "Cross Systeme Bauen": [[1108, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1108, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1108, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1109, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1109, "zielpublikum"], [1111, "zielpublikum"], [1112, "zielpublikum"], [1117, "zielpublikum"], [1119, "zielpublikum"], [1124, "zielpublikum"], [1125, "zielpublikum"], [1131, "zielpublikum"]], "Kursinhalt": [[1109, "kursinhalt"], [1111, "kursinhalt"], [1112, "kursinhalt"], [1117, "kursinhalt"], [1119, "kursinhalt"], [1120, "kursinhalt"], [1124, "kursinhalt"], [1125, "kursinhalt"], [1126, "kursinhalt"], [1127, "kursinhalt"], [1129, "kursinhalt"], [1130, "kursinhalt"], [1131, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1109, "empfohlene-vorkenntnisse"], [1111, "empfohlene-vorkenntnisse"], [1112, "empfohlene-vorkenntnisse"], [1117, "empfohlene-vorkenntnisse"], [1119, "empfohlene-vorkenntnisse"], [1120, "empfohlene-vorkenntnisse"], [1124, "empfohlene-vorkenntnisse"], [1125, "empfohlene-vorkenntnisse"], [1126, "empfohlene-vorkenntnisse"], [1127, "empfohlene-vorkenntnisse"], [1129, "empfohlene-vorkenntnisse"], [1130, "empfohlene-vorkenntnisse"], [1131, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1110, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1111, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1112, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1113, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1114, "c-and-c-programming"]], "CMake": [[1115, "cmake"]], "The Course": [[1115, null]], "Target Audience": [[1115, "target-audience"]], "Recommended Prior Knowledge": [[1115, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1116, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1117, "embedded-software-development-hardware-realtime-and-memory-management"]], "Course Contents": [[1118, "course-contents"]], "Sample Project": [[1118, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1119, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1120, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1123, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1124, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1125, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1126, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1127, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1129, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1130, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1131, "unittesting-and-test-driven-development"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[477, "exercise-hysteresis-nopoly-non-polymorphic"]], "Inheritance Basics": [[598, "inheritance-basics"]], "Inheriting (Deriving) From Base": [[598, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[598, "derived-is-a-base"]], "Bringing It All Together": [[601, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[602, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[602, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[602, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[602, "pure-virtual-method"]], "Virtual Methods": [[605, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[605, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[605, "enter-virtual"]], "Caution: virtual": [[605, "caution-virtual"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[61, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[61, "setup-before-presentation"]], "Greeting": [[61, "greeting"]], "Multiple Background Threads": [[61, "multiple-background-threads"]], "Enter asyncio": [[61, "enter-asyncio"]], "Character Device Based GPIO": [[61, "character-device-based-gpio"]], "GPIO Device": [[61, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[61, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[61, "entire-matrix-on-off"]], "Bringing All Together": [[61, "bringing-all-together"]], "Modularize": [[61, "modularize"]], "Play A Bit: Blink Entire Rows": [[61, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[61, "coroutines"]], "Not Enough: sequence()": [[61, "not-enough-sequence"]], "Looping: forever()": [[61, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[61, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[61, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[61, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[61, "program-finally"]], "Playground: cycle()": [[61, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[61, "fast-forward-any-and-cancellation"]], "Playground: on()": [[61, "playground-on"]], "Goodbye": [[61, "goodbye"]], "WS2023/24": [[112, "ws2023-24"]], "Object Oriented Programming (C++)": [[112, "object-oriented-programming-c"]]}, "indexentries": {}})