Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda", "trainings/log/detail/2023-XX-XX-C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/pcap-exam", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/pcap-exam.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "An IoT Boiling Pot (The Beginning)", "Data Logger", "Data Logger: CSV Sink", "Data Logger: MQTT Sink", "WS2023/24: Project", "Temperature Display: LED Via A PWM Controller", "Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "Interfaces", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++ 03", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Such", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Structured Binding", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "C++ 11", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "PCAP Exam", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 157, 160, 228, 431, 1065, 1067, 1071, 1073], "j\u00f6rg": [0, 23, 161, 195, 203, 207, 222, 225, 228, 238, 241, 256, 277, 283, 295, 313, 314, 316, 318, 383, 457, 973, 976, 1014, 1038, 1065, 1066, 1067, 1068, 1071, 1072, 1073], "faschingbau": [0, 12, 23, 37, 50, 59, 62, 125, 142, 149, 150, 158, 176, 179, 180, 182, 183, 184, 185, 195, 202, 207, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 256, 263, 273, 277, 283, 288, 295, 313, 314, 316, 319, 322, 327, 383, 414, 431, 436, 449, 456, 457, 490, 506, 562, 608, 637, 638, 639, 640, 641, 642, 659, 805, 806, 813, 815, 820, 834, 850, 863, 869, 894, 931, 973, 976, 977, 989, 990, 992, 993, 994, 996, 997, 999, 1005, 1027, 1031, 1054, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1075, 1084, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1104, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "offic": [0, 32, 148, 164], "co": [0, 12, 32, 37, 125, 139, 150, 179, 180, 182, 183, 184, 185, 246, 263, 267, 322, 327, 429, 436, 655, 977, 999, 1075, 1090, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1104, 1122, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "43": [0, 7, 146, 153, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 316, 317, 406, 419, 431, 590, 660, 710, 726, 860, 869, 882, 884, 923, 986], "0": [0, 5, 7, 21, 23, 32, 61, 63, 107, 110, 111, 112, 122, 127, 129, 139, 142, 144, 145, 146, 148, 154, 158, 162, 163, 164, 165, 166, 176, 179, 181, 183, 186, 191, 193, 194, 195, 196, 199, 202, 203, 204, 207, 208, 212, 215, 216, 218, 221, 223, 225, 228, 231, 234, 235, 238, 241, 243, 244, 246, 248, 253, 256, 259, 260, 261, 263, 267, 271, 272, 273, 277, 283, 293, 295, 308, 314, 315, 316, 317, 318, 319, 322, 344, 345, 347, 349, 351, 353, 354, 355, 357, 364, 365, 367, 368, 369, 377, 380, 382, 383, 389, 390, 392, 395, 410, 411, 412, 413, 415, 416, 419, 420, 423, 425, 429, 431, 432, 435, 439, 440, 442, 445, 448, 449, 454, 456, 459, 461, 468, 469, 471, 473, 474, 475, 476, 478, 479, 480, 483, 484, 487, 488, 489, 493, 496, 497, 501, 503, 504, 505, 506, 507, 515, 521, 522, 530, 533, 539, 542, 549, 550, 551, 553, 554, 557, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 572, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 612, 614, 618, 619, 621, 622, 624, 625, 627, 629, 631, 636, 637, 638, 639, 640, 641, 642, 643, 647, 651, 652, 655, 658, 659, 660, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 689, 691, 692, 694, 696, 697, 699, 701, 705, 706, 708, 709, 710, 711, 716, 719, 721, 725, 729, 733, 736, 737, 741, 744, 756, 758, 768, 791, 792, 794, 809, 813, 815, 820, 823, 834, 835, 838, 860, 862, 863, 864, 869, 875, 878, 882, 883, 884, 893, 895, 898, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 914, 916, 918, 919, 925, 933, 934, 936, 938, 939, 940, 942, 945, 946, 949, 950, 952, 953, 955, 964, 967, 968, 970, 972, 974, 975, 978, 980, 984, 986, 988, 1001, 1004, 1005, 1006, 1007, 1011, 1013, 1015, 1018, 1020, 1021, 1022, 1026, 1028, 1030, 1031, 1033, 1036, 1037, 1038, 1043, 1045, 1054, 1064, 1071, 1073, 1079, 1080, 1081, 1088, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1105, 1110, 1112, 1117, 1122], "664": [0, 218, 823], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 97, 101, 102, 108, 114, 138, 140, 142, 154, 162, 171, 176, 181, 183, 184, 186, 191, 193, 195, 198, 199, 200, 202, 207, 208, 210, 212, 213, 215, 216, 218, 223, 225, 226, 228, 231, 235, 238, 240, 241, 245, 249, 252, 253, 256, 258, 259, 263, 273, 276, 277, 279, 280, 282, 283, 295, 316, 319, 322, 327, 355, 403, 603, 605, 608, 647, 696, 731, 805, 806, 813, 870, 874, 886, 887, 888, 890, 895, 976, 980, 989, 1007, 1008, 1024, 1033, 1043, 1044, 1066, 1068, 1076, 1084, 1097, 1098, 1105, 1130, 1136], "prankergass": [0, 202, 223, 850], "33": [0, 7, 140, 153, 165, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 316, 317, 318, 431, 452, 809, 850, 952, 1080, 1081], "8020": [0, 202, 218, 223, 261, 431, 805, 806, 844, 850], "graz": [0, 1, 3, 23, 59, 62, 126, 184, 202, 261, 294, 297, 339, 431, 805, 806, 844, 850, 1075], "uid": [0, 223, 228, 231, 322, 327, 729, 805, 806, 813, 823, 895, 910, 966, 1054], "vat": [0, 187, 1140], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 62, 63, 66, 70, 78, 97, 115, 116, 117, 118, 120, 122, 123, 143, 144, 145, 154, 159, 163, 176, 179, 180, 182, 183, 184, 195, 200, 202, 203, 204, 205, 210, 212, 213, 216, 219, 221, 223, 229, 231, 240, 243, 250, 252, 259, 269, 276, 282, 294, 303, 308, 311, 313, 322, 324, 326, 328, 333, 349, 352, 353, 358, 370, 372, 394, 405, 409, 415, 416, 419, 429, 431, 454, 457, 469, 471, 474, 485, 494, 495, 506, 507, 509, 514, 525, 531, 536, 542, 547, 549, 550, 553, 563, 565, 612, 619, 628, 631, 633, 647, 652, 663, 675, 687, 696, 702, 711, 725, 729, 730, 731, 737, 739, 749, 751, 758, 762, 778, 794, 805, 806, 809, 815, 820, 821, 823, 824, 825, 826, 832, 834, 836, 839, 857, 869, 871, 874, 878, 882, 883, 884, 891, 898, 900, 901, 902, 905, 907, 908, 909, 910, 912, 913, 914, 915, 916, 918, 919, 922, 926, 932, 936, 945, 946, 949, 950, 954, 957, 960, 978, 989, 994, 995, 999, 1022, 1023, 1028, 1033, 1034, 1035, 1037, 1040, 1041, 1042, 1043, 1045, 1046, 1049, 1050, 1052, 1054, 1056, 1057, 1058, 1060, 1061, 1065, 1067, 1070, 1074, 1076, 1089, 1100, 1103, 1110, 1111, 1112, 1130, 1131, 1143], "review": [0, 144, 167, 178, 272, 346], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 61, 62, 85, 106, 112, 114, 127, 129, 139, 147, 148, 149, 150, 154, 158, 160, 162, 170, 171, 172, 173, 179, 180, 183, 184, 192, 197, 203, 205, 206, 212, 218, 219, 221, 228, 229, 231, 235, 243, 248, 250, 259, 262, 268, 269, 270, 272, 276, 282, 286, 287, 290, 294, 296, 298, 302, 321, 322, 327, 342, 490, 504, 525, 567, 627, 700, 704, 709, 734, 749, 751, 755, 778, 779, 877, 879, 882, 918, 964, 966, 1021, 1031, 1087, 1089, 1103, 1105, 1106], "g": [0, 32, 48, 63, 97, 114, 123, 146, 150, 154, 158, 163, 164, 166, 176, 191, 195, 204, 208, 212, 215, 218, 223, 225, 228, 231, 235, 253, 259, 267, 283, 344, 364, 368, 371, 374, 379, 385, 386, 387, 389, 392, 407, 411, 419, 423, 424, 431, 432, 434, 437, 443, 444, 457, 461, 469, 490, 503, 506, 549, 553, 554, 583, 603, 621, 622, 651, 655, 658, 660, 669, 689, 710, 718, 722, 729, 737, 756, 778, 797, 816, 823, 838, 860, 867, 870, 877, 895, 904, 914, 934, 936, 938, 949, 950, 952, 953, 954, 955, 966, 971, 973, 975, 983, 995, 997, 998, 1016, 1017, 1021, 1022, 1085, 1089, 1100, 1112, 1117, 1133], "page": [0, 33, 39, 61, 72, 74, 78, 106, 114, 123, 138, 139, 140, 142, 143, 145, 146, 150, 155, 175, 180, 183, 204, 229, 259, 285, 301, 329, 353, 354, 357, 402, 413, 453, 490, 731, 737, 756, 762, 764, 776, 802, 805, 806, 822, 871, 875, 884, 895, 905, 908, 936, 1083], "r": [0, 7, 13, 31, 32, 38, 43, 61, 146, 148, 149, 153, 154, 162, 164, 165, 166, 175, 176, 179, 181, 182, 186, 191, 193, 196, 199, 202, 204, 208, 209, 212, 215, 218, 221, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 260, 261, 263, 273, 277, 283, 295, 314, 317, 322, 331, 343, 364, 389, 419, 431, 438, 452, 471, 472, 501, 505, 569, 596, 699, 707, 729, 742, 751, 756, 774, 778, 779, 809, 815, 820, 823, 834, 837, 838, 840, 860, 867, 875, 882, 883, 884, 886, 887, 895, 906, 909, 910, 918, 952, 953, 954, 964, 966, 967, 974, 995, 1000, 1003, 1009, 1020, 1026, 1031, 1063, 1089, 1112, 1148], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 62, 65, 107, 125, 143, 144, 145, 146, 148, 149, 150, 151, 152, 162, 175, 187, 196, 232, 236, 263, 560, 697, 778, 817, 866, 871, 884, 893, 895, 910, 1020, 1124, 1125, 1127, 1140, 1143, 1147], "19": [1, 7, 23, 114, 153, 155, 164, 165, 166, 175, 181, 184, 186, 191, 193, 195, 196, 199, 202, 207, 208, 212, 215, 218, 219, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 295, 315, 316, 317, 319, 327, 330, 339, 407, 431, 438, 707, 838, 860, 884, 955, 964, 996, 1002, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1075, 1080, 1081, 1085, 1093, 1105, 1110, 1112], "6": [1, 7, 32, 61, 63, 109, 112, 144, 146, 154, 158, 160, 163, 164, 165, 166, 176, 181, 183, 188, 191, 193, 194, 196, 199, 202, 203, 204, 206, 209, 211, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 242, 244, 253, 256, 260, 263, 267, 273, 277, 283, 291, 295, 314, 315, 317, 318, 322, 346, 347, 369, 406, 412, 423, 468, 469, 508, 509, 510, 511, 523, 542, 549, 551, 554, 557, 558, 561, 563, 566, 567, 568, 569, 587, 588, 589, 590, 596, 627, 628, 664, 710, 729, 834, 857, 860, 864, 869, 875, 882, 883, 884, 898, 906, 919, 952, 964, 966, 969, 975, 978, 984, 1007, 1008, 1011, 1013, 1015, 1031, 1037, 1054, 1061, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1080, 1081, 1085, 1089, 1103, 1105, 1110, 1111, 1112, 1117, 1141], "1966": [1, 23, 184, 218, 228, 238, 241, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1085], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 151, 152, 160, 161, 162, 166, 176, 187, 197, 199, 206, 222, 225, 231, 232, 234, 246, 283, 317, 322, 323, 340, 1125, 1127, 1128, 1129, 1134, 1140, 1143], "technisch": [1, 23, 340, 1142], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 62, 69, 73, 74, 78, 82, 83, 85, 92, 107, 108, 110, 111, 114, 118, 119, 120, 121, 122, 123, 131, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 173, 175, 176, 179, 181, 182, 183, 186, 194, 195, 199, 200, 202, 203, 204, 205, 207, 210, 212, 215, 216, 219, 220, 221, 223, 226, 228, 229, 231, 235, 241, 243, 244, 248, 250, 252, 259, 262, 265, 267, 268, 269, 270, 272, 276, 277, 287, 290, 294, 303, 308, 309, 333, 339, 341, 345, 347, 351, 354, 355, 368, 377, 385, 389, 392, 395, 396, 407, 410, 411, 412, 413, 415, 418, 425, 429, 431, 435, 438, 444, 447, 448, 449, 452, 453, 457, 458, 459, 468, 469, 471, 472, 473, 474, 490, 492, 496, 501, 503, 505, 506, 509, 510, 511, 523, 525, 549, 550, 552, 554, 557, 558, 559, 563, 565, 566, 567, 568, 569, 582, 587, 600, 603, 606, 607, 612, 618, 621, 622, 629, 634, 638, 640, 641, 642, 643, 647, 648, 651, 655, 659, 668, 674, 687, 689, 697, 699, 706, 707, 709, 710, 711, 717, 729, 730, 731, 732, 737, 742, 744, 747, 749, 756, 778, 786, 791, 804, 805, 806, 810, 811, 815, 823, 832, 837, 838, 841, 844, 863, 865, 875, 882, 884, 886, 887, 892, 895, 900, 901, 902, 903, 905, 909, 910, 911, 912, 916, 918, 919, 925, 931, 933, 934, 937, 938, 939, 940, 946, 950, 952, 953, 958, 962, 967, 968, 971, 972, 975, 981, 982, 983, 987, 992, 993, 995, 997, 998, 999, 1003, 1004, 1005, 1007, 1011, 1017, 1026, 1027, 1028, 1031, 1033, 1046, 1052, 1053, 1054, 1070, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1088, 1089, 1092, 1097, 1098, 1102, 1105, 1110, 1111, 1113, 1122, 1124, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1143, 1144, 1148], "der": [1, 3, 5, 7, 8, 11, 64, 139, 151, 152, 153, 157, 160, 161, 162, 163, 166, 168, 170, 176, 178, 187, 188, 189, 192, 193, 196, 197, 199, 202, 206, 222, 223, 225, 231, 234, 235, 238, 246, 295, 314, 322, 327, 1124, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 151, 152, 176, 186, 283, 1125, 1144], "1998": [1, 3, 23, 154, 162, 218, 548], "vorlesungen": 1, "programmieren": [1, 5, 162, 166, 323, 339, 1129, 1134, 1137, 1141, 1143, 1147, 1148], "basi": [1, 3, 5, 7, 24, 78, 167, 175, 196, 205, 219, 231, 265, 317, 392, 1133, 1144, 1145], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 63, 65, 72, 73, 74, 78, 85, 87, 106, 109, 118, 123, 128, 138, 139, 142, 143, 144, 145, 146, 149, 156, 159, 161, 163, 171, 172, 176, 181, 182, 188, 191, 193, 198, 199, 202, 203, 212, 215, 216, 218, 222, 223, 225, 228, 231, 235, 238, 243, 244, 253, 256, 263, 269, 273, 277, 283, 286, 294, 295, 302, 308, 317, 321, 323, 324, 329, 335, 336, 339, 341, 342, 343, 344, 345, 347, 351, 353, 355, 356, 357, 360, 363, 365, 367, 368, 369, 371, 375, 379, 380, 383, 384, 385, 386, 387, 391, 393, 395, 396, 397, 401, 402, 404, 405, 407, 408, 409, 411, 412, 413, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 432, 435, 436, 437, 438, 441, 442, 443, 448, 449, 451, 452, 457, 461, 467, 469, 472, 478, 490, 493, 496, 497, 498, 499, 500, 502, 503, 505, 506, 508, 514, 548, 550, 552, 553, 554, 555, 559, 560, 561, 565, 566, 568, 570, 573, 578, 583, 585, 586, 590, 592, 596, 598, 600, 602, 603, 604, 605, 608, 610, 611, 612, 614, 615, 617, 618, 619, 620, 621, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 649, 655, 656, 660, 661, 662, 663, 664, 668, 674, 675, 686, 687, 688, 690, 691, 692, 693, 694, 695, 698, 699, 700, 701, 703, 704, 706, 707, 709, 710, 711, 712, 713, 715, 720, 721, 728, 729, 731, 732, 734, 737, 741, 742, 746, 747, 751, 753, 756, 758, 768, 778, 780, 781, 786, 794, 797, 802, 804, 810, 815, 817, 820, 835, 838, 860, 866, 869, 875, 876, 882, 883, 884, 896, 900, 901, 902, 907, 908, 909, 910, 911, 920, 923, 928, 936, 939, 941, 942, 945, 948, 949, 950, 952, 953, 954, 960, 962, 964, 968, 969, 970, 971, 973, 974, 998, 1006, 1007, 1015, 1016, 1020, 1026, 1033, 1087, 1088, 1092, 1111, 1112, 1119, 1122, 1132, 1134, 1135, 1137, 1143, 1144, 1145, 1146, 1147, 1148], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 136, 151, 152, 157, 161, 162, 166, 168, 170, 178, 182, 188, 192, 194, 196, 201, 203, 207, 212, 223, 227, 228, 233, 235, 239, 245, 246, 263, 273, 283, 317, 318, 322, 327, 339, 341, 377, 385, 818, 865, 866, 885, 1124, 1125, 1126, 1127, 1128, 1132, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "\u00fcbertragungsprotokol": [1, 156], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 212, 218, 228, 231, 256], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 72, 73, 74, 78, 106, 114, 156, 179, 192, 194, 203, 222, 229, 230, 233, 259, 263, 269, 271, 272, 276, 326, 335, 336, 431, 453, 495, 547, 548, 555, 618, 619, 622, 624, 625, 647, 711, 731, 770, 780, 977, 991, 1130, 1133], "design": [1, 3, 20, 23, 53, 57, 74, 78, 80, 82, 85, 106, 139, 140, 143, 156, 159, 179, 205, 206, 222, 268, 270, 330, 339, 341, 368, 398, 418, 419, 422, 430, 439, 446, 447, 448, 449, 451, 452, 454, 456, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 495, 503, 505, 547, 548, 554, 556, 572, 644, 693, 706, 710, 711, 713, 729, 731, 732, 883, 952, 1071, 1111, 1129, 1132], "analys": [1, 3, 156, 1127], "ration": [1, 3, 38, 149], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 64, 151, 152, 157, 161, 163, 166, 187, 188, 199, 206, 222, 234, 246, 260, 322, 327, 339, 341, 840, 1124, 1125, 1127, 1134, 1140, 1141, 1143, 1146], "java": [1, 9, 186, 187, 198, 210, 219, 608, 621, 706, 711, 718, 988, 1001, 1007, 1016, 1140, 1148], "releasemanag": [1, 3, 23, 156, 1142], "cv": [1, 3, 23, 32, 139, 213, 1142], "subvers": [1, 3, 159, 341, 860], "systemnah": [1, 3, 5, 23, 138, 156, 942, 945, 949, 1143], "programmierung": [1, 3, 4, 5, 6, 8, 23, 136, 156, 210, 237, 246, 339, 1125, 1126, 1127, 1129, 1134, 1141, 1143, 1146], "unter": [1, 3, 23, 64, 152, 160, 161, 178, 186, 323, 866, 1125, 1126, 1129, 1134, 1137, 1141, 1144, 1146, 1147], "unix": [1, 72, 73, 74, 78, 97, 140, 143, 172, 195, 259, 308, 322, 323, 324, 335, 336, 340, 357, 411, 457, 631, 722, 729, 731, 735, 737, 770, 803, 804, 805, 820, 822, 834, 862, 865, 871, 875, 878, 883, 895, 920, 936, 946, 1002, 1026, 1054, 1125, 1126, 1128, 1132, 1134, 1136, 1137, 1141, 1143, 1144, 1145, 1147], "window": [1, 3, 32, 97, 98, 103, 104, 114, 131, 143, 148, 150, 160, 162, 175, 183, 200, 214, 216, 218, 229, 232, 243, 248, 250, 252, 258, 259, 271, 287, 293, 308, 319, 322, 325, 327, 340, 352, 419, 713, 716, 731, 808, 812, 838, 874, 904, 920, 925, 1000, 1002, 1003, 1026, 1076, 1112], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 151, 152, 157, 161, 166, 170, 176, 178, 187, 188, 191, 193, 231, 246, 314, 339, 938, 1124, 1125, 1140, 1142], "2006": [1, 3, 23, 218], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 151, 152, 157, 162, 170, 176, 178, 187, 188, 193, 200, 317, 339, 866, 938, 1124, 1125, 1129, 1140, 1141, 1146], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 151, 161, 232, 1127], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 187, 1140], "forschung": 1, "entwicklung": [1, 3, 4, 323, 1136, 1142], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 139, 155, 218, 1001], "enterpris": 1, "architect": [1, 439, 1104], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 149, 1142], "massgeblich": 1, "portierung": [1, 3, 4, 156], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 64, 125, 151, 152, 160, 161, 170, 178, 182, 183, 185, 187, 188, 191, 194, 196, 197, 199, 208, 225, 232, 237, 244, 253, 260, 295, 322, 323, 327, 339, 341, 803, 865, 866, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147], "enea": [1, 3, 143], "os": [1, 3, 143], "nach": [1, 3, 4, 5, 151, 152, 156, 157, 162, 166, 170, 186, 187, 193, 231, 232, 238, 340, 800, 1124, 1140], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 61, 62, 63, 65, 72, 73, 74, 78, 84, 85, 86, 87, 98, 103, 104, 106, 123, 128, 135, 138, 139, 140, 142, 144, 145, 146, 150, 153, 154, 155, 160, 167, 170, 175, 182, 204, 205, 212, 218, 221, 228, 231, 232, 235, 240, 243, 248, 250, 252, 261, 268, 270, 271, 287, 293, 308, 319, 321, 322, 323, 324, 328, 329, 335, 336, 339, 341, 383, 405, 413, 422, 425, 442, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 533, 547, 714, 720, 729, 730, 731, 732, 734, 735, 737, 738, 740, 742, 743, 745, 747, 748, 749, 750, 751, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 782, 783, 784, 787, 788, 789, 792, 793, 795, 796, 798, 799, 801, 803, 804, 805, 806, 812, 814, 816, 819, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 866, 868, 871, 875, 877, 878, 879, 883, 885, 886, 887, 888, 889, 890, 891, 893, 894, 895, 898, 900, 901, 902, 903, 904, 905, 910, 912, 913, 916, 917, 918, 919, 921, 929, 932, 935, 937, 942, 945, 946, 949, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 970, 1000, 1002, 1064, 1089, 1110, 1113, 1126, 1127, 1128, 1129, 1132, 1134, 1137, 1141], "beteiligt": [1, 23], "seit": [1, 5, 23, 170, 176, 186, 191, 1125, 1134], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 97, 106, 109, 110, 111, 114, 123, 126, 148, 195, 319, 321, 322, 327, 328, 330, 495, 506, 527, 547, 555, 570, 630, 644, 731, 808, 812, 827, 833, 852, 858, 874, 959, 962, 1119], "joanneum": [1, 126, 148, 1119], "kapfenberg": 1, "2011": [1, 3, 5, 139, 140, 155, 268, 270, 339, 343, 548, 647], "2015": [1, 23, 203, 229, 267, 339, 654, 1076], "lehrveranstaltung": [1, 323], "im": [1, 3, 5, 8, 29, 32, 38, 90, 151, 152, 161, 162, 166, 170, 175, 176, 178, 179, 182, 184, 187, 188, 191, 193, 197, 199, 200, 206, 207, 210, 213, 214, 216, 219, 222, 226, 227, 228, 234, 235, 237, 239, 240, 242, 255, 257, 262, 264, 265, 269, 271, 272, 275, 276, 278, 281, 282, 284, 293, 294, 296, 297, 308, 309, 310, 311, 312, 313, 322, 327, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1081, 1089, 1090, 1112, 1125, 1128, 1134, 1136, 1140, 1141, 1143, 1144, 1147, 1148], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 46, 47, 51, 53, 55, 56, 68, 73, 74, 78, 85, 97, 104, 114, 122, 142, 150, 153, 154, 159, 170, 176, 182, 186, 195, 212, 218, 219, 228, 229, 231, 256, 268, 270, 271, 272, 285, 301, 319, 340, 341, 407, 439, 447, 448, 457, 459, 625, 711, 731, 732, 762, 809, 822, 874, 875, 882, 883, 898, 950, 959, 962, 1031, 1078, 1132, 1133, 1135, 1148], "avl": [1, 23, 140], "2018": [1, 23, 146, 218, 652], "2019": [1, 40, 124, 139, 181, 203, 252, 276, 294, 297, 339, 525, 652, 693, 860, 1075, 1076, 1078], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 72, 73, 74, 78, 84, 87, 97, 104, 108, 114, 127, 133, 139, 143, 148, 149, 155, 159, 170, 173, 183, 204, 221, 224, 248, 250, 252, 259, 268, 270, 273, 280, 285, 286, 301, 302, 325, 328, 329, 340, 341, 344, 385, 398, 413, 425, 437, 438, 439, 441, 443, 453, 467, 473, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 525, 530, 533, 547, 638, 675, 695, 705, 719, 731, 735, 738, 740, 743, 745, 747, 748, 755, 757, 758, 759, 763, 769, 774, 775, 780, 782, 787, 793, 796, 799, 835, 874, 883, 884, 908, 909, 910, 911, 925, 944, 948, 952, 955, 959, 962, 963, 967, 1014, 1025, 1031, 1105, 1110, 1116, 1120, 1125, 1130, 1132], "manag": [1, 5, 14, 23, 29, 63, 68, 72, 73, 74, 78, 94, 97, 108, 142, 144, 153, 158, 159, 167, 170, 172, 175, 179, 182, 183, 189, 190, 194, 199, 200, 203, 205, 215, 221, 224, 229, 231, 232, 238, 241, 256, 263, 270, 272, 273, 276, 277, 280, 325, 326, 328, 335, 336, 340, 341, 402, 419, 430, 448, 461, 519, 525, 550, 555, 644, 655, 656, 658, 687, 692, 703, 704, 706, 707, 708, 712, 720, 728, 730, 731, 749, 755, 762, 764, 787, 793, 796, 799, 809, 813, 814, 869, 874, 883, 891, 903, 936, 937, 950, 966, 977, 986, 1005, 1029, 1033, 1074, 1075, 1076, 1077, 1078, 1082, 1090, 1092, 1105, 1107, 1109, 1110, 1114, 1119, 1130, 1132, 1135, 1142], "schittstel": 1, "zum": [1, 3, 5, 151, 152, 161, 166, 170, 176, 186, 199, 206, 223, 283, 340, 1125, 1127, 1128, 1129, 1141, 1144, 1146], "weiser": 1, "alter": [1, 178, 179, 229, 252, 340, 551, 559, 865, 1076], "mann": 1, "2020": [1, 23, 114, 123, 124, 139, 140, 146, 150, 151, 155, 158, 162, 181, 183, 218, 339, 506, 507, 655, 668, 805, 806, 885, 894, 912, 1001, 1075, 1080, 1119, 1141], "embed": [1, 3, 4, 5, 23, 72, 87, 104, 126, 138, 139, 140, 143, 145, 156, 159, 183, 185, 208, 251, 320, 325, 327, 339, 341, 713, 731, 766, 778, 816, 838, 884, 895, 936, 952, 979, 1020, 1126, 1127, 1128, 1132, 1136, 1137, 1141, 1145], "comput": [1, 23, 28, 29, 32, 72, 84, 87, 101, 120, 126, 146, 185, 235, 244, 268, 270, 294, 295, 307, 320, 322, 325, 327, 339, 348, 421, 426, 427, 452, 549, 559, 562, 568, 601, 697, 710, 722, 731, 800, 807, 875, 883, 885, 886, 893, 920, 934, 937, 1001, 1089, 1105, 1135], "electron": [1, 148, 340, 883], "engin": [1, 146, 219, 221, 287, 290, 340, 411, 415, 419, 429, 460, 493, 501, 883, 999, 1148], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 85, 139, 936, 999], "projekt": [2, 140, 161, 1137, 1141], "stand": [3, 153, 202, 325, 778, 884, 968, 1084], "j\u00e4nner": [3, 23], "2014": [3, 140, 161, 182, 218, 252, 267, 276, 880, 1076], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 59, 62, 64, 139, 152, 157, 160, 161, 162, 163, 166, 170, 176, 178, 186, 187, 189, 191, 193, 196, 197, 199, 202, 206, 215, 222, 225, 228, 231, 234, 235, 238, 263, 291, 317, 322, 323, 327, 340, 341, 475, 489, 865, 866, 938, 1076, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "pci": [3, 190, 731, 755, 756, 817, 874, 882, 918, 1135], "hardwar": [3, 5, 65, 69, 72, 73, 74, 78, 80, 120, 122, 128, 132, 142, 143, 146, 156, 159, 218, 219, 231, 268, 271, 272, 293, 297, 308, 323, 324, 325, 340, 341, 357, 368, 371, 407, 425, 429, 499, 500, 501, 502, 506, 722, 731, 758, 778, 809, 814, 815, 874, 875, 876, 877, 880, 883, 899, 901, 902, 915, 918, 950, 1124, 1133, 1135, 1141], "ein": [3, 5, 7, 8, 37, 151, 152, 157, 160, 161, 162, 163, 166, 168, 170, 178, 182, 183, 185, 186, 187, 189, 191, 193, 194, 196, 197, 199, 200, 202, 206, 208, 212, 215, 216, 222, 223, 225, 228, 231, 232, 234, 235, 238, 246, 253, 256, 263, 273, 277, 283, 291, 295, 314, 317, 322, 327, 340, 341, 385, 513, 804, 865, 866, 938, 1006, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1137, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 139, 151, 153, 157, 160, 161, 166, 170, 176, 178, 186, 187, 196, 197, 206, 222, 231, 234, 238, 322, 339, 416, 709, 800, 802, 866, 879, 1075, 1101, 1124, 1125, 1126, 1127, 1129, 1134, 1136, 1140, 1141, 1143, 1144, 1146, 1147, 1148], "untenstehenden": 3, "zeit": [3, 5, 152, 187, 1125, 1127, 1147], "dato": 3, "ort": 3, "raum": [3, 166], "anbindung": 3, "verschieden": [3, 23, 176, 340, 1126, 1127, 1128, 1134, 1141, 1146], "hardwareinterfac": 3, "i2c": [3, 4, 65, 78, 81, 85, 128, 131, 143, 144, 170, 183, 259, 325, 328, 333, 340, 446, 476, 535, 536, 544, 731, 778, 874, 881, 883, 918, 1134, 1141], "spi": [3, 4, 78, 143, 161, 170, 340, 535, 536, 544, 876, 877, 878, 883, 918, 1134, 1141], "can": [3, 12, 17, 29, 57, 58, 68, 75, 80, 83, 108, 110, 111, 114, 115, 118, 137, 140, 142, 143, 144, 145, 147, 148, 149, 150, 154, 158, 159, 160, 163, 165, 167, 171, 172, 173, 175, 179, 180, 181, 195, 202, 204, 212, 215, 218, 219, 221, 228, 231, 235, 238, 241, 259, 262, 265, 267, 268, 270, 273, 277, 283, 285, 301, 303, 308, 314, 316, 319, 322, 327, 333, 340, 345, 347, 351, 355, 359, 365, 368, 379, 383, 389, 390, 393, 400, 405, 407, 411, 412, 413, 414, 415, 418, 419, 423, 424, 425, 429, 431, 432, 434, 440, 442, 443, 449, 454, 457, 458, 461, 468, 469, 473, 474, 475, 487, 491, 500, 507, 533, 539, 549, 551, 556, 558, 559, 564, 565, 572, 583, 587, 603, 604, 609, 618, 622, 625, 629, 634, 639, 641, 642, 643, 652, 654, 657, 658, 659, 660, 664, 669, 693, 696, 697, 699, 705, 706, 709, 710, 711, 714, 717, 719, 727, 729, 731, 737, 749, 764, 768, 772, 776, 778, 783, 786, 792, 804, 805, 806, 809, 810, 811, 813, 815, 816, 817, 818, 820, 821, 823, 828, 830, 832, 834, 836, 838, 839, 874, 875, 881, 882, 883, 884, 887, 889, 891, 893, 894, 895, 902, 904, 908, 912, 921, 923, 934, 937, 938, 946, 950, 954, 964, 969, 971, 973, 974, 975, 976, 978, 979, 980, 983, 986, 987, 988, 995, 996, 998, 999, 1004, 1007, 1008, 1011, 1016, 1018, 1024, 1026, 1028, 1031, 1033, 1040, 1050, 1061, 1071, 1072, 1073, 1075, 1081, 1083, 1088, 1089, 1095, 1097, 1102, 1105, 1110, 1130, 1132, 1134, 1141, 1145, 1147], "custom": [3, 27, 29, 32, 39, 97, 128, 132, 136, 139, 143, 146, 148, 149, 155, 159, 172, 180, 182, 184, 212, 218, 221, 228, 231, 232, 259, 261, 268, 270, 295, 308, 309, 310, 311, 313, 321, 322, 340, 429, 434, 453, 467, 495, 498, 501, 503, 505, 525, 547, 549, 555, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 675, 677, 687, 692, 703, 712, 720, 728, 730, 731, 751, 778, 894, 925, 950, 1075, 1118], "firmwar": [3, 131, 143, 144, 146, 153, 162, 875, 882, 918], "kunden": [3, 5, 23, 157, 261, 340, 1124], "dezemb": [3, 23], "2012": [3, 23, 139, 155, 218], "backport": 3, "integr": [3, 16, 23, 38, 43, 112, 123, 140, 148, 150, 158, 170, 175, 195, 285, 294, 301, 324, 329, 330, 331, 419, 445, 448, 452, 664, 751, 760, 817, 838, 875, 877, 883, 884, 1101, 1110, 1113, 1132, 1134, 1141], "touchcontrol": 3, "driver": [3, 5, 78, 85, 128, 131, 143, 146, 148, 156, 159, 160, 259, 323, 324, 339, 341, 425, 731, 732, 734, 735, 737, 738, 739, 740, 741, 742, 743, 745, 747, 748, 749, 750, 752, 753, 754, 757, 758, 759, 761, 762, 763, 765, 767, 769, 771, 772, 773, 775, 777, 778, 779, 782, 784, 787, 789, 793, 796, 799, 809, 814, 817, 874, 883, 884, 904, 918, 1125, 1145, 1147], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 65, 108, 110, 111, 115, 122, 131, 143, 147, 149, 154, 158, 202, 212, 218, 225, 228, 231, 235, 241, 268, 277, 355, 362, 364, 368, 377, 434, 438, 471, 556, 609, 707, 717, 721, 729, 760, 762, 770, 778, 811, 820, 825, 826, 838, 883, 884, 906, 908, 909, 910, 912, 967, 968, 976, 1018, 1101, 1112], "2013": [3, 23, 139, 339], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 61, 65, 72, 74, 78, 85, 91, 92, 126, 127, 138, 139, 140, 156, 158, 159, 162, 164, 172, 187, 188, 192, 195, 196, 197, 199, 202, 204, 211, 212, 218, 227, 228, 231, 235, 238, 259, 261, 270, 308, 309, 310, 311, 312, 313, 317, 318, 321, 323, 324, 329, 330, 331, 335, 336, 337, 339, 341, 353, 505, 646, 664, 683, 695, 701, 718, 731, 732, 838, 860, 874, 876, 881, 882, 923, 971, 972, 973, 974, 976, 978, 979, 981, 982, 983, 985, 986, 987, 988, 991, 995, 996, 1002, 1006, 1010, 1011, 1017, 1019, 1021, 1022, 1024, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1077, 1078, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1108, 1109, 1110, 1112, 1113, 1114, 1130, 1134, 1140, 1141, 1148], "programm": [3, 59, 62, 161, 162, 166, 175, 186, 191, 195, 199, 231, 256, 268, 269, 270, 297, 317, 323, 340, 389, 402, 409, 415, 419, 549, 551, 552, 621, 655, 689, 692, 814, 820, 871, 883, 904, 938, 999, 1000, 1004, 1026, 1083, 1090, 1104, 1127, 1130, 1135, 1143, 1144, 1146, 1148], "zur": [3, 151, 166, 170, 178, 188, 199, 317, 322, 327, 340, 938, 1125, 1127, 1128, 1129, 1141, 1146, 1147, 1148], "IT": [3, 259, 261, 340, 553], "wie": [3, 5, 151, 152, 160, 161, 162, 166, 170, 176, 178, 186, 191, 194, 201, 225, 317, 340, 1124, 1125, 1127, 1128, 1129, 1134, 1137, 1141, 1142, 1144, 1146, 1147], "beispiel": [3, 5, 23, 162, 186, 187, 209, 215, 236, 340, 1127, 1128, 1129, 1140, 1141, 1143, 1144, 1146, 1148], "e": [3, 5, 7, 32, 37, 38, 42, 48, 63, 97, 114, 123, 146, 148, 149, 150, 151, 152, 154, 157, 158, 160, 161, 162, 164, 165, 166, 170, 176, 178, 186, 187, 191, 193, 195, 196, 199, 202, 203, 204, 207, 208, 212, 215, 216, 218, 221, 223, 225, 228, 231, 232, 235, 238, 241, 244, 253, 256, 259, 260, 263, 265, 267, 273, 277, 283, 295, 315, 316, 317, 318, 322, 327, 340, 344, 361, 364, 368, 371, 374, 379, 389, 392, 407, 411, 415, 418, 419, 431, 432, 434, 437, 443, 444, 448, 457, 461, 469, 474, 478, 490, 503, 506, 507, 542, 549, 553, 554, 564, 572, 583, 603, 621, 622, 636, 641, 648, 651, 655, 658, 669, 675, 689, 710, 719, 721, 722, 729, 737, 756, 797, 804, 805, 806, 815, 816, 820, 821, 822, 823, 838, 860, 867, 882, 883, 884, 895, 904, 914, 916, 934, 937, 938, 949, 950, 952, 954, 955, 966, 971, 975, 983, 995, 997, 998, 1016, 1021, 1022, 1045, 1085, 1089, 1094, 1097, 1100, 1103, 1104, 1110, 1112, 1124, 1125, 1127, 1129, 1133, 1134, 1140, 1141, 1143, 1144, 1146, 1148], "bill": [3, 263], "email": [3, 32, 42, 125, 144, 150, 154, 159, 183, 199, 263, 333, 891, 1089, 1093, 1094, 1095, 1097, 1098, 1099], "kommunik": [3, 23, 1141, 1144, 1146, 1147, 1148], "extrakt": 3, "attach": [3, 164, 212, 218, 228, 231, 452, 760, 883, 936, 1083], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 60, 90, 97, 98, 104, 114, 119, 122, 127, 139, 140, 143, 144, 148, 170, 173, 179, 180, 182, 184, 195, 210, 212, 213, 216, 218, 221, 226, 228, 231, 232, 240, 243, 252, 255, 262, 265, 268, 269, 270, 275, 276, 280, 281, 282, 286, 287, 297, 302, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 435, 436, 442, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 519, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 687, 703, 712, 720, 728, 730, 731, 751, 758, 774, 778, 779, 817, 874, 877, 882, 884, 949, 951, 954, 957, 959, 962, 983, 999, 1003, 1029, 1074, 1087, 1094, 1105, 1106, 1113, 1118, 1120], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 73, 78, 80, 97, 101, 102, 108, 110, 111, 114, 139, 140, 143, 144, 149, 150, 154, 156, 158, 159, 160, 161, 167, 170, 172, 173, 183, 195, 200, 203, 210, 212, 215, 216, 220, 221, 226, 228, 229, 231, 238, 241, 247, 248, 249, 256, 258, 263, 268, 273, 276, 277, 279, 319, 322, 323, 324, 325, 326, 327, 333, 335, 336, 339, 341, 375, 384, 391, 395, 397, 401, 404, 408, 415, 416, 417, 421, 422, 426, 427, 429, 434, 437, 439, 452, 453, 460, 473, 495, 506, 547, 582, 625, 649, 687, 720, 721, 722, 728, 729, 730, 731, 734, 737, 749, 751, 770, 776, 778, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 821, 822, 824, 825, 826, 828, 829, 830, 831, 832, 835, 838, 864, 865, 869, 874, 878, 883, 884, 885, 890, 896, 900, 901, 902, 903, 905, 908, 910, 913, 914, 916, 917, 918, 919, 929, 932, 935, 937, 938, 940, 946, 949, 950, 952, 953, 954, 975, 976, 987, 1003, 1031, 1076, 1103, 1112, 1126, 1133, 1135, 1136], "auf": [3, 5, 8, 23, 64, 139, 144, 152, 157, 160, 161, 162, 166, 170, 176, 178, 186, 187, 191, 197, 199, 206, 207, 222, 225, 232, 234, 246, 317, 322, 323, 327, 340, 866, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1140, 1144, 1147, 1148], "gentoo": [3, 139, 142, 155, 425, 1125], "updat": [3, 44, 142, 144, 158, 162, 190, 215, 223, 238, 248, 250, 256, 263, 268, 270, 277, 283, 295, 322, 329, 504, 506, 567, 788, 936, 966, 967, 968, 969, 970, 1024, 1026, 1100, 1113, 1119, 1142], "betriebssystem": [3, 1134, 1136, 1141, 1143], "usb": [3, 4, 63, 142, 143, 144, 146, 340, 418, 756, 809, 1134], "touchscreen": 3, "cheat": [3, 33, 65, 183, 195, 422, 675, 838], "detect": [3, 32, 106, 163, 175, 387, 390, 424, 432, 530, 557, 660, 685, 706, 772, 883, 884, 910, 919, 942, 953, 954, 1055], "m\u00fcnzeinwurf": 3, "via": [3, 17, 63, 85, 119, 143, 146, 150, 155, 164, 179, 180, 202, 208, 229, 231, 259, 262, 265, 268, 277, 294, 321, 328, 340, 449, 454, 474, 559, 583, 694, 708, 731, 758, 778, 781, 809, 814, 820, 835, 871, 882, 893, 894, 901, 908, 918, 939, 946, 964, 1030, 1130], "gpio": [3, 4, 59, 62, 65, 72, 73, 74, 78, 84, 114, 115, 119, 123, 140, 259, 268, 312, 325, 327, 331, 731, 755, 780, 782, 787, 793, 796, 799, 874, 879, 883, 915, 919, 1134, 1141], "interrupt": [3, 63, 86, 110, 111, 161, 190, 259, 425, 731, 749, 755, 770, 772, 773, 775, 776, 780, 781, 782, 786, 787, 790, 793, 796, 797, 799, 809, 811, 814, 817, 874, 879, 896, 898, 899, 900, 901, 902, 903, 915, 917, 918, 934, 937, 938, 940, 949, 950, 1134, 1135, 1141], "m\u00e4rz": 3, "firma": [3, 157, 166, 261, 339, 1124, 1134, 1141], "spielo": 3, "intern": [3, 57, 84, 115, 116, 117, 122, 176, 181, 204, 212, 215, 216, 218, 228, 231, 262, 265, 294, 315, 329, 358, 388, 403, 418, 434, 443, 448, 562, 603, 650, 693, 725, 756, 764, 790, 882, 883, 884, 925, 976, 980, 1024, 1033, 1089, 1094], "datenkonvertierung": 3, "einem": [3, 5, 23, 151, 161, 162, 166, 170, 176, 178, 186, 187, 191, 193, 199, 225, 231, 238, 253, 322, 323, 327, 340, 1125, 1127, 1129, 1134, 1143, 1147, 1148], "konvertierung": [3, 23, 1127], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 90, 116, 117, 118, 125, 146, 162, 163, 165, 166, 173, 180, 182, 184, 187, 191, 200, 203, 210, 211, 213, 219, 224, 225, 229, 231, 232, 237, 240, 241, 252, 255, 256, 261, 275, 276, 277, 281, 282, 284, 290, 293, 294, 297, 345, 346, 351, 387, 431, 731, 732, 778, 809, 815, 838, 898, 952, 991, 999, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1069, 1070, 1071, 1072, 1074, 1076, 1081, 1092, 1105, 1140, 1144], "zweck": [3, 176, 1141], "extern": [3, 13, 21, 23, 29, 63, 85, 142, 146, 150, 172, 175, 182, 204, 205, 210, 221, 226, 231, 240, 261, 276, 286, 294, 302, 322, 327, 355, 359, 385, 387, 389, 391, 397, 401, 404, 408, 412, 417, 421, 426, 427, 436, 437, 533, 649, 687, 693, 728, 730, 731, 735, 738, 740, 743, 745, 748, 751, 755, 756, 757, 759, 763, 769, 775, 778, 782, 787, 788, 793, 796, 799, 874, 884, 934, 1000, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1074, 1076, 1117, 1119, 1127, 1134, 1141], "datenquellen": 3, "export": [3, 40, 61, 120, 122, 143, 154, 179, 204, 205, 208, 210, 308, 693, 734, 810, 839, 875, 883, 916, 918, 919, 964, 966, 969, 1067, 1084], "daten": [3, 176, 178, 191, 201, 206, 291, 938, 1147], "soap": [3, 32], "ip": [3, 125, 147, 150, 160, 167, 195, 319, 322, 328, 333, 530, 542, 877, 895, 901, 937, 1105, 1134, 1141, 1145, 1147], "kamera": 3, "einen": [3, 5, 23, 151, 152, 162, 166, 170, 176, 178, 186, 199, 235, 340, 608, 865, 1124, 1125, 1126, 1127, 1129, 1136, 1144, 1146, 1147, 1148], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 62, 63, 69, 82, 84, 85, 97, 110, 111, 112, 114, 119, 121, 123, 128, 143, 145, 148, 163, 171, 179, 181, 199, 204, 205, 212, 218, 222, 225, 226, 228, 229, 233, 235, 250, 256, 265, 268, 269, 270, 271, 272, 277, 293, 297, 309, 310, 315, 322, 333, 356, 358, 390, 400, 402, 403, 419, 429, 434, 441, 444, 445, 447, 448, 449, 451, 452, 453, 456, 457, 459, 468, 469, 473, 474, 475, 490, 494, 496, 497, 498, 499, 500, 502, 503, 504, 508, 509, 510, 511, 513, 515, 520, 523, 524, 548, 550, 554, 558, 566, 567, 568, 569, 574, 603, 609, 618, 620, 621, 622, 629, 637, 638, 639, 640, 641, 642, 643, 644, 650, 655, 656, 657, 659, 669, 684, 685, 686, 687, 693, 694, 696, 705, 709, 711, 713, 719, 725, 726, 729, 730, 731, 737, 744, 747, 764, 792, 809, 811, 815, 817, 875, 882, 884, 895, 898, 904, 920, 925, 946, 970, 974, 975, 980, 981, 982, 988, 992, 1016, 1051, 1055, 1064, 1071, 1076, 1085, 1088, 1092, 1130, 1135], "gige": 3, "vision": [3, 261, 340], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 183], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1124], "applik": [3, 160], "august": [3, 23], "logistik": 3, "autom": [3, 182, 195, 226, 240, 282, 340, 875, 886, 893, 966, 968, 976, 1076], "beteiligten": 3, "protokol": [3, 4, 1134, 1141, 1146], "server": [3, 125, 147, 150, 156, 162, 183, 195, 206, 215, 231, 238, 241, 252, 256, 263, 273, 277, 425, 471, 485, 804, 878, 891, 893, 901, 946, 1088, 1105, 1122, 1141], "zu": [3, 6, 8, 151, 152, 157, 160, 161, 166, 170, 176, 187, 188, 191, 193, 197, 206, 207, 222, 223, 232, 234, 238, 246, 253, 322, 327, 340, 800, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1137, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "sp": [3, 657], "tcp": [3, 143, 150, 167, 183, 288, 876, 901, 1092, 1134, 1141, 1145, 1147], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 185, 875, 1083], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1134, 1136], "beratend": 3, "versionskontrol": [3, 23, 156, 1142], "architektur": [3, 23, 156, 340], "2008": [3, 154, 218, 1001], "ylog": [3, 23], "gmbh": [3, 23, 431], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 191], "mit": [3, 4, 5, 7, 8, 23, 139, 151, 152, 160, 161, 162, 166, 168, 170, 178, 182, 183, 187, 188, 189, 192, 193, 196, 197, 199, 206, 207, 208, 209, 222, 231, 232, 234, 235, 238, 246, 277, 318, 322, 323, 327, 339, 341, 865, 1031, 1124, 1126, 1127, 1128, 1129, 1134, 1136, 1140, 1142, 1143, 1144, 1146, 1147, 1148], "iar": 3, "arm": [3, 142, 154, 195, 363, 758, 778, 779, 882, 895, 949, 952, 953, 964], "workbench": 3, "segger": [3, 143], "embo": [3, 143], "vba": 3, "excel": [3, 78, 144, 182, 208, 1067, 1081], "verteilung": 3, "microsoft": [3, 11, 149, 150, 153, 155, 159, 170, 178, 248, 250, 259, 268, 270, 340, 342, 390, 406, 817, 1067, 1124], "net": [3, 23, 39, 43, 114, 123, 129, 160, 161, 186, 238, 244, 430, 506, 507, 772, 778, 805, 806, 866, 901, 1089], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 162, 1143, 1144], "script": [3, 38, 61, 133, 136, 139, 142, 144, 149, 150, 159, 174, 182, 183, 185, 210, 212, 218, 228, 231, 258, 259, 279, 313, 322, 339, 341, 423, 431, 442, 693, 778, 820, 823, 838, 966, 977, 1003, 1004, 1028, 1031, 1112, 1125, 1136], "shell": [3, 4, 32, 97, 99, 101, 104, 114, 159, 163, 182, 183, 185, 223, 231, 249, 258, 279, 307, 308, 321, 322, 323, 324, 327, 339, 341, 343, 425, 431, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 729, 730, 731, 778, 801, 805, 806, 807, 808, 811, 812, 813, 815, 816, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 853, 854, 855, 856, 866, 867, 868, 871, 874, 875, 885, 886, 887, 888, 889, 897, 903, 904, 905, 913, 915, 918, 919, 929, 932, 935, 937, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 966, 1002, 1003, 1005, 1026, 1028, 1054, 1117, 1125, 1132, 1134, 1136, 1137, 1141, 1142, 1143, 1145], "oststeiermark": 3, "erweiterung": [3, 340], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 65, 72, 73, 74, 78, 87, 97, 106, 114, 140, 149, 154, 159, 170, 173, 205, 221, 248, 250, 268, 270, 325, 339, 341, 342, 433, 435, 437, 438, 441, 442, 443, 444, 445, 453, 467, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 547, 567, 731, 732, 874, 962, 1115, 1137], "www": [3, 20, 23, 59, 62, 85, 139, 149, 158, 160, 180, 183, 184, 229, 256, 342, 709, 734, 749, 755, 779, 918, 1087, 1089, 1103], "org": [3, 4, 23, 61, 129, 135, 139, 142, 146, 150, 154, 160, 162, 173, 183, 186, 203, 212, 218, 219, 228, 231, 235, 256, 269, 296, 326, 342, 734, 749, 751, 755, 778, 779, 918, 964, 966, 1000, 1021, 1031, 1070, 1087, 1105, 1106], "confix": [3, 140], "2009": [3, 1076], "schulungen": [3, 6, 23, 139, 140, 157], "dem": [3, 5, 8, 23, 151, 152, 160, 161, 162, 166, 170, 183, 187, 197, 206, 209, 222, 223, 232, 234, 246, 277, 322, 327, 340, 341, 938, 1124, 1125, 1126, 1128, 1129, 1134, 1136, 1143, 1144, 1146], "umkrei": 3, "softwareentwicklung": [3, 4, 156], "nicht": [3, 5, 7, 23, 37, 151, 152, 157, 160, 166, 170, 187, 188, 191, 196, 199, 218, 223, 225, 231, 238, 244, 263, 273, 317, 322, 340, 866, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1140, 1141, 1142, 1143, 1146, 1147, 1148], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 61, 63, 65, 68, 73, 74, 78, 81, 82, 84, 86, 90, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 114, 115, 117, 122, 125, 132, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 156, 158, 159, 160, 162, 163, 165, 166, 171, 175, 176, 179, 180, 182, 183, 184, 185, 187, 193, 194, 195, 200, 202, 203, 204, 205, 207, 209, 210, 212, 216, 218, 219, 225, 226, 228, 229, 232, 233, 235, 238, 240, 243, 247, 248, 250, 252, 253, 255, 258, 261, 265, 268, 269, 270, 271, 272, 275, 277, 279, 280, 281, 282, 287, 290, 293, 295, 297, 298, 303, 307, 308, 309, 310, 311, 312, 313, 315, 319, 321, 322, 324, 325, 326, 327, 329, 330, 343, 344, 350, 352, 353, 357, 360, 363, 366, 367, 368, 371, 375, 382, 384, 385, 390, 391, 397, 398, 401, 404, 405, 407, 408, 409, 411, 413, 417, 418, 419, 421, 425, 426, 427, 429, 430, 432, 433, 437, 440, 441, 442, 443, 445, 447, 448, 449, 454, 458, 468, 472, 474, 490, 491, 492, 493, 495, 498, 501, 503, 504, 505, 506, 507, 525, 533, 536, 542, 547, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 564, 565, 567, 568, 578, 582, 583, 600, 612, 619, 622, 624, 630, 633, 640, 644, 647, 648, 649, 651, 655, 660, 664, 669, 675, 681, 686, 687, 699, 701, 705, 706, 707, 708, 711, 713, 719, 721, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 747, 749, 753, 758, 760, 766, 770, 778, 779, 780, 781, 786, 788, 790, 798, 803, 804, 805, 806, 809, 810, 813, 814, 815, 817, 820, 821, 822, 828, 830, 835, 837, 838, 839, 840, 841, 843, 844, 857, 862, 870, 871, 874, 875, 877, 878, 879, 880, 883, 884, 887, 891, 895, 898, 899, 900, 901, 902, 905, 908, 910, 911, 913, 915, 918, 921, 926, 931, 932, 937, 938, 940, 949, 950, 955, 964, 966, 968, 970, 975, 976, 977, 980, 983, 984, 985, 986, 987, 988, 991, 995, 998, 999, 1000, 1003, 1004, 1007, 1010, 1019, 1022, 1023, 1025, 1026, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1082, 1084, 1086, 1088, 1089, 1090, 1091, 1092, 1096, 1097, 1098, 1101, 1103, 1104, 1105, 1107, 1109, 1110, 1112, 1114, 1117, 1119, 1122, 1133, 1140], "scratch": [3, 42, 175, 882, 1083], "mathia": [3, 1125], "kettner": [3, 139], "novemb": [3, 23], "bodenseo": [3, 1141], "singen": 3, "bodense": [3, 1141], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1143], "driverentwicklung": [3, 156], "powerpc": 3, "vanilla": [3, 146], "kernel": [3, 4, 5, 43, 61, 65, 78, 110, 111, 125, 128, 132, 133, 138, 139, 140, 142, 143, 145, 153, 154, 155, 156, 159, 161, 176, 183, 215, 228, 231, 238, 241, 256, 259, 263, 273, 277, 308, 328, 339, 341, 383, 405, 418, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 743, 745, 747, 748, 749, 750, 757, 758, 759, 761, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 782, 784, 787, 789, 790, 791, 792, 793, 796, 798, 799, 803, 809, 813, 815, 816, 817, 822, 866, 871, 874, 878, 880, 881, 883, 884, 895, 898, 901, 902, 904, 907, 918, 920, 921, 934, 936, 937, 940, 945, 949, 950, 952, 1125, 1134, 1145], "abteilungsleitung": 3, "ag": [3, 32, 148, 150, 162, 176, 218, 221, 263, 316, 414, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 731, 803, 952, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101], "realtim": [4, 5, 78, 80, 156, 159, 160, 259, 323, 324, 335, 336, 341, 719, 721, 731, 776, 780, 783, 786, 797, 874, 878, 883, 884, 915, 934, 935, 937, 946, 1144, 1145, 1146], "hardwareintegr": [4, 156], "netzwerkprogrammierung": [4, 1134, 1147], "multithread": [4, 29, 59, 62, 72, 73, 74, 75, 78, 138, 139, 143, 145, 156, 175, 179, 210, 219, 229, 246, 268, 270, 331, 335, 336, 340, 341, 406, 416, 647, 675, 713, 730, 731, 923, 928, 937, 950, 951, 977, 986, 1074, 1076, 1130, 1134, 1145], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 63, 97, 103, 104, 106, 110, 111, 114, 123, 131, 142, 143, 144, 145, 147, 149, 152, 154, 156, 158, 167, 171, 176, 181, 188, 191, 195, 196, 204, 212, 218, 221, 225, 228, 229, 231, 232, 235, 243, 259, 268, 270, 277, 286, 302, 307, 317, 322, 339, 363, 377, 430, 432, 435, 436, 442, 447, 452, 453, 454, 467, 468, 469, 471, 473, 474, 490, 493, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 507, 512, 514, 547, 551, 554, 555, 558, 562, 563, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 625, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 656, 660, 664, 669, 687, 694, 697, 703, 707, 712, 714, 720, 728, 730, 731, 739, 744, 751, 776, 778, 790, 807, 810, 811, 820, 822, 824, 828, 830, 832, 834, 849, 850, 874, 876, 882, 884, 887, 891, 894, 901, 909, 912, 915, 917, 925, 931, 936, 938, 946, 953, 957, 958, 959, 960, 962, 976, 983, 984, 1000, 1003, 1021, 1023, 1033, 1034, 1044, 1053, 1059, 1064, 1072, 1076, 1085, 1088, 1092, 1100, 1101, 1112, 1113, 1127, 1131, 1134, 1141, 1143], "userspac": [4, 81, 85, 86, 120, 123, 128, 143, 144, 215, 231, 238, 241, 256, 259, 263, 273, 277, 340, 418, 425, 731, 736, 747, 755, 756, 764, 770, 776, 780, 786, 790, 794, 796, 814, 816, 874, 877, 881, 884, 895, 915, 917, 918, 936, 940, 946, 1134, 1135], "host": [4, 108, 142, 149, 154, 319, 333, 758, 779, 876, 882, 953, 955, 964, 1087, 1092, 1105], "devic": [4, 33, 69, 72, 73, 74, 78, 84, 89, 115, 123, 128, 142, 143, 148, 161, 182, 190, 272, 323, 324, 325, 490, 506, 507, 717, 719, 721, 729, 731, 740, 747, 748, 749, 755, 756, 759, 760, 762, 769, 778, 780, 782, 787, 793, 794, 796, 797, 799, 811, 814, 817, 820, 860, 874, 883, 895, 898, 904, 912, 918, 937, 940, 941, 943, 946, 962, 987, 1125, 1134, 1135, 1136, 1141], "libusb": [4, 143], "gadgetf": [4, 143], "modbu": [4, 160], "verschiedenen": [4, 23, 170, 187, 1127, 1128, 1140, 1146], "rto": [4, 143], "yocto": [4, 128, 132, 133, 154, 731, 778, 872, 955, 1125], "programmiersprachen": [4, 8, 187, 197, 206, 222, 234, 1129, 1146], "incl": [4, 23, 140, 1136], "buildsystem": 4, "autoconf": [4, 61, 154], "automak": [4, 149, 154, 966, 1137], "meson": [4, 149, 154, 944, 948, 966], "ninja": [4, 32, 154, 432, 954, 966], "make": [4, 13, 17, 43, 44, 45, 61, 63, 65, 68, 70, 78, 80, 109, 128, 133, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 159, 163, 164, 167, 171, 172, 175, 179, 180, 181, 185, 194, 195, 202, 204, 205, 216, 219, 231, 235, 248, 250, 272, 277, 280, 285, 294, 301, 322, 325, 341, 374, 386, 390, 398, 405, 407, 409, 419, 425, 429, 432, 433, 434, 438, 440, 441, 443, 445, 447, 448, 449, 452, 468, 469, 474, 475, 492, 505, 507, 519, 525, 530, 536, 554, 565, 567, 569, 572, 584, 619, 621, 634, 647, 655, 660, 664, 701, 706, 707, 711, 721, 725, 726, 739, 746, 747, 751, 753, 756, 758, 778, 779, 795, 807, 817, 821, 823, 844, 857, 876, 877, 882, 883, 884, 905, 908, 910, 931, 934, 936, 938, 940, 945, 949, 952, 964, 966, 967, 968, 969, 973, 977, 980, 983, 995, 1026, 1033, 1046, 1054, 1081, 1094, 1132, 1133, 1143], "perl": [4, 154, 689, 867, 1003], "leider": [4, 151, 218, 231, 238, 253, 1125, 1127], "objektorientiert": [4, 340, 1129], "ooa": 4, "ood": 4, "unit": [4, 72, 73, 74, 78, 82, 84, 97, 106, 114, 115, 118, 145, 163, 178, 179, 182, 183, 194, 203, 221, 235, 260, 261, 268, 272, 285, 301, 331, 335, 336, 412, 431, 432, 445, 471, 494, 500, 504, 533, 564, 693, 721, 722, 731, 732, 884, 936, 1018, 1026, 1076, 1088, 1111, 1132, 1133], "test": [4, 16, 17, 33, 40, 72, 73, 74, 78, 82, 84, 97, 114, 119, 121, 123, 139, 143, 145, 146, 148, 149, 150, 156, 159, 162, 163, 169, 170, 171, 174, 178, 179, 182, 194, 200, 203, 216, 218, 219, 221, 231, 248, 250, 270, 277, 286, 302, 331, 333, 335, 341, 342, 354, 416, 429, 430, 436, 440, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 460, 469, 471, 472, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 526, 530, 542, 544, 549, 550, 551, 562, 563, 565, 566, 568, 569, 627, 638, 639, 640, 641, 642, 643, 652, 654, 657, 658, 659, 690, 696, 701, 705, 706, 707, 708, 710, 725, 726, 727, 729, 731, 732, 736, 768, 778, 781, 783, 786, 794, 838, 876, 877, 882, 905, 960, 968, 999, 1008, 1018, 1022, 1025, 1045, 1070, 1076, 1082, 1083, 1088, 1096, 1103, 1116, 1118, 1120, 1123, 1133], "driven": [4, 45, 71, 78, 82, 143, 156, 159, 170, 179, 194, 221, 259, 261, 287, 290, 341, 429, 456, 566, 568, 569, 936, 942, 943, 1101, 1110, 1133], "develop": [4, 5, 21, 45, 71, 73, 78, 80, 82, 103, 104, 112, 119, 144, 146, 148, 149, 150, 154, 156, 159, 167, 170, 178, 179, 182, 187, 194, 200, 205, 206, 213, 215, 216, 221, 226, 251, 256, 261, 286, 287, 290, 302, 321, 323, 324, 333, 339, 341, 407, 419, 425, 429, 434, 442, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 547, 566, 568, 569, 622, 646, 720, 730, 731, 732, 735, 738, 740, 741, 743, 745, 748, 750, 751, 752, 754, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 778, 779, 782, 784, 787, 789, 793, 796, 799, 808, 811, 812, 814, 817, 874, 876, 877, 897, 903, 905, 913, 915, 929, 932, 935, 937, 953, 954, 957, 958, 959, 960, 961, 963, 969, 1001, 1031, 1033, 1076, 1110, 1111, 1132, 1145], "gui": [4, 115, 122, 142, 148, 154, 158, 221, 329, 330, 817, 920, 1143], "gtk": [4, 139], "qt": 4, "fast": [5, 43, 112, 150, 158, 182, 204, 219, 221, 235, 244, 294, 419, 525, 697, 711, 1024, 1106, 1142], "40": [5, 7, 23, 106, 139, 146, 153, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 353, 431, 452, 454, 468, 538, 539, 560, 706, 707, 708, 860, 879, 882, 883, 884, 964, 978, 979, 988, 1003], "jahren": 5, "wesentlichen": [5, 23, 178, 1126], "programmier": [5, 37, 339, 340, 1128, 1129, 1134, 1136, 1137, 1142, 1143], "bin": [5, 13, 23, 50, 63, 112, 114, 115, 116, 118, 120, 122, 139, 142, 144, 154, 163, 166, 176, 193, 203, 212, 215, 218, 223, 228, 231, 235, 238, 241, 253, 256, 261, 263, 273, 277, 322, 330, 432, 433, 434, 435, 437, 438, 439, 440, 443, 445, 490, 505, 506, 756, 778, 810, 813, 815, 820, 823, 834, 838, 839, 863, 864, 869, 882, 884, 900, 907, 910, 916, 930, 931, 940, 952, 953, 954, 964, 966, 969, 973, 979, 1003, 1030, 1031, 1054, 1063, 1064, 1079, 1092, 1105, 1110, 1112, 1124], "ich": [5, 23, 64, 151, 152, 160, 161, 162, 166, 176, 186, 194, 225, 277, 322, 340, 1087, 1124, 1125, 1134, 1141, 1142, 1148], "heut": [5, 340, 1129, 1144], "feinen": 5, "situat": [5, 112, 131, 143, 145, 154, 175, 202, 503, 504, 507, 519, 581, 658, 772, 778, 829, 831, 875, 891, 910, 938, 955, 964, 967, 968, 1016, 1125, 1130], "repertoir": [5, 8, 28, 158, 187, 197, 453], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 157, 160, 170, 176, 188, 201, 322, 323, 327, 340, 866, 1124, 1126, 1127, 1137, 1147, 1148], "da": [5, 7, 8, 64, 151, 152, 157, 160, 161, 162, 163, 170, 178, 182, 186, 187, 191, 194, 196, 197, 199, 203, 206, 207, 208, 212, 215, 222, 223, 225, 228, 231, 232, 234, 236, 244, 246, 253, 263, 273, 277, 295, 303, 314, 317, 322, 327, 340, 866, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1140, 1141, 1142, 1143, 1144, 1147, 1148], "sich": [5, 23, 37, 151, 152, 157, 160, 161, 162, 166, 176, 178, 186, 207, 225, 228, 238, 323, 1124, 1125, 1127, 1128, 1129, 1134, 1137, 1141, 1142, 1143, 1146, 1147, 1148], "jahrelangen": 5, "erfahrung": [5, 232, 1126], "entwickelt": [5, 170, 1134, 1141, 1143], "hat": [5, 8, 23, 37, 146, 151, 152, 160, 161, 162, 163, 166, 170, 176, 178, 186, 187, 191, 193, 197, 208, 228, 283, 295, 315, 322, 340, 1002, 1124, 1127, 1129, 1134, 1141, 1142, 1143, 1146, 1147, 1148], "al": [5, 8, 23, 32, 97, 151, 152, 157, 160, 161, 162, 166, 168, 170, 178, 187, 188, 195, 197, 199, 207, 225, 226, 228, 236, 240, 282, 323, 340, 557, 706, 803, 839, 860, 865, 866, 898, 1076, 1124, 1127, 1129, 1134, 1140, 1141, 1142, 1143, 1146], "einzelunternehm": [5, 23], "werd": [5, 1124], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 152, 166, 178, 340], "um": [5, 23, 32, 151, 152, 160, 162, 166, 170, 176, 186, 187, 225, 238, 253, 340, 1124, 1126, 1127, 1128, 1129, 1134, 1140, 1144], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 170], "oder": [5, 23, 139, 160, 166, 170, 176, 187, 188, 193, 207, 216, 225, 232, 838, 866, 1101, 1124, 1127, 1128, 1134, 1137, 1140, 1141, 1142, 1144, 1147, 1148], "damit": [5, 23, 151, 176, 206, 232, 322, 327, 340, 1125, 1143, 1147], "arbeiten": [5, 23, 176, 187, 1140], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 62, 72, 73, 74, 76, 78, 84, 85, 90, 97, 101, 110, 111, 114, 115, 116, 118, 120, 122, 136, 138, 139, 140, 142, 143, 144, 145, 148, 150, 153, 154, 156, 158, 161, 163, 164, 166, 167, 171, 178, 179, 180, 182, 183, 184, 189, 194, 195, 200, 203, 204, 210, 212, 213, 216, 219, 222, 226, 229, 232, 233, 234, 240, 245, 249, 258, 261, 262, 265, 268, 270, 278, 279, 280, 282, 286, 298, 302, 307, 308, 309, 310, 311, 312, 313, 319, 321, 322, 323, 324, 325, 326, 327, 328, 333, 335, 336, 339, 341, 346, 348, 349, 352, 354, 355, 357, 358, 359, 360, 363, 365, 368, 370, 375, 388, 397, 401, 402, 404, 406, 408, 409, 416, 418, 421, 423, 424, 425, 426, 430, 431, 432, 436, 437, 441, 442, 445, 447, 453, 457, 467, 468, 469, 473, 474, 475, 490, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 512, 514, 536, 542, 547, 548, 554, 555, 570, 573, 576, 592, 598, 602, 611, 612, 614, 615, 620, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 687, 689, 692, 697, 702, 703, 707, 712, 714, 720, 728, 730, 731, 732, 736, 747, 749, 758, 778, 792, 794, 795, 808, 810, 811, 812, 813, 814, 815, 818, 820, 821, 822, 833, 838, 841, 867, 871, 874, 875, 877, 880, 881, 882, 883, 891, 895, 898, 900, 901, 902, 903, 904, 905, 908, 909, 910, 911, 913, 917, 918, 922, 926, 929, 932, 935, 936, 937, 938, 942, 943, 945, 950, 951, 953, 960, 964, 966, 969, 970, 971, 976, 977, 979, 985, 986, 987, 988, 999, 1002, 1006, 1007, 1010, 1011, 1014, 1018, 1019, 1021, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1088, 1089, 1090, 1092, 1096, 1104, 1105, 1107, 1109, 1110, 1114, 1117, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1135, 1136, 1137], "gem\u00e4\u00df": [5, 23, 152], "herkunft": [5, 1148], "mein": [5, 23, 151, 152, 157, 161, 162, 176, 186, 187, 206, 340, 877, 945, 1125, 1140], "muttersprach": [5, 23], "ist": [5, 7, 8, 151, 152, 157, 160, 161, 162, 166, 170, 178, 186, 187, 191, 193, 196, 197, 199, 202, 206, 208, 212, 215, 216, 221, 222, 223, 225, 228, 231, 234, 238, 244, 253, 263, 277, 295, 314, 317, 318, 322, 327, 340, 385, 938, 1094, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1137, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "umfasst": [5, 152], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 65, 97, 106, 136, 139, 140, 143, 157, 158, 175, 178, 179, 180, 182, 184, 185, 187, 189, 190, 194, 197, 200, 203, 205, 206, 209, 210, 213, 216, 219, 221, 222, 234, 237, 240, 243, 247, 248, 250, 252, 255, 262, 265, 271, 272, 276, 282, 286, 287, 290, 293, 294, 297, 298, 302, 322, 330, 340, 432, 434, 435, 436, 437, 438, 440, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 456, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 503, 505, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 547, 627, 707, 732, 880, 891, 916, 919, 976, 977, 979, 999, 1000, 1028, 1078, 1090, 1091, 1104, 1115, 1119, 1127, 1129, 1132, 1134, 1135, 1141], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 151, 152, 161, 162, 166, 170, 178, 187, 188, 193, 196, 199, 215, 232, 322, 327, 340, 865, 866, 938, 1124, 1127, 1128, 1129, 1134, 1136, 1137, 1140, 1141, 1143, 1144, 1147, 1148], "letzter": 5, "betreffend": 5, "neuen": [5, 1129], "standard": [5, 34, 35, 36, 38, 106, 114, 135, 150, 171, 175, 180, 182, 184, 205, 212, 218, 227, 228, 231, 235, 246, 259, 261, 285, 301, 313, 322, 323, 324, 325, 327, 343, 344, 345, 351, 352, 357, 358, 362, 407, 495, 514, 533, 547, 548, 592, 598, 602, 609, 610, 611, 612, 614, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 664, 669, 695, 697, 699, 700, 729, 731, 818, 821, 822, 838, 871, 885, 901, 907, 910, 923, 926, 950, 980, 999, 1000, 1016, 1089, 1101, 1106, 1120, 1126, 1127, 1129, 1130, 1131, 1132, 1136], "absolut": [5, 8, 29, 65, 90, 99, 114, 141, 145, 150, 156, 159, 166, 176, 179, 180, 182, 184, 195, 200, 204, 212, 218, 219, 226, 228, 229, 231, 232, 235, 240, 243, 249, 252, 255, 258, 259, 262, 265, 271, 272, 276, 279, 280, 282, 287, 290, 293, 294, 297, 298, 308, 309, 310, 311, 312, 313, 319, 321, 322, 325, 340, 425, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 717, 720, 730, 731, 732, 776, 788, 804, 805, 806, 807, 808, 811, 812, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 874, 894, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1086, 1089, 1090, 1092, 1096, 1099, 1101, 1104, 1107, 1109, 1114], "beginn": [5, 8, 29, 32, 78, 90, 140, 141, 151, 156, 159, 170, 176, 179, 180, 182, 184, 195, 210, 213, 214, 216, 219, 226, 229, 232, 236, 243, 255, 262, 265, 271, 272, 282, 287, 290, 293, 294, 297, 298, 308, 309, 310, 311, 312, 313, 321, 322, 325, 367, 675, 731, 732, 977, 984, 985, 986, 987, 991, 999, 1001, 1007, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1086, 1089, 1090, 1092, 1096, 1104, 1107, 1109, 1114], "advanc": [5, 8, 29, 78, 90, 140, 150, 156, 159, 164, 167, 170, 180, 184, 192, 195, 200, 210, 215, 216, 226, 240, 262, 282, 308, 309, 310, 311, 312, 313, 321, 322, 323, 324, 325, 339, 417, 419, 421, 426, 427, 579, 649, 687, 722, 728, 730, 731, 732, 919, 976, 977, 979, 984, 985, 986, 987, 991, 999, 1001, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1081, 1082, 1083, 1086, 1089, 1090, 1092, 1096, 1103, 1104, 1107, 1109, 1114, 1117, 1131], "product": [5, 8, 29, 38, 43, 78, 85, 90, 145, 156, 159, 179, 180, 182, 184, 200, 219, 226, 229, 232, 240, 243, 252, 255, 262, 265, 267, 271, 272, 276, 282, 287, 290, 293, 294, 297, 298, 308, 309, 310, 311, 312, 313, 321, 322, 325, 425, 429, 445, 731, 732, 875, 884, 955, 969, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1086, 1089, 1090, 1092, 1096, 1104, 1107, 1109, 1114], "gro\u00dfe": [5, 37, 176, 1143], "thema": [5, 23, 161, 178, 232, 246, 322, 327, 1124], "einfach": [5, 162, 176, 187, 191, 273, 1128, 1129, 1134, 1140, 1142, 1144, 1146, 1148], "doch": [5, 199, 273, 283, 340, 1146], "m\u00e4chtig": 5, "vermutlich": [5, 176, 1146], "grund": [5, 1127, 1134], "warum": [5, 7, 23, 187, 188, 196, 238, 1134, 1140, 1141, 1146, 1148], "gern": [5, 176, 1124, 1134, 1141], "nachgefragt": 5, "werden": [5, 8, 37, 151, 152, 157, 160, 161, 162, 170, 176, 178, 187, 188, 191, 197, 206, 207, 222, 234, 246, 866, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1140, 1141, 1143, 1144, 1146, 1147, 1148], "deren": [5, 23, 160, 182, 1129, 1142, 1146, 1147], "kernkompetenz": 5, "liegt": [5, 23, 151, 162, 166, 235, 1128, 1144], "sondern": [5, 162, 176, 187, 1125, 1134, 1137, 1140, 1147], "eher": [5, 151, 187, 1126, 1140], "beiwerk": 5, "ihrem": [5, 23, 1124], "eigentlichen": 5, "job": [5, 154, 175, 185, 244, 412, 875, 900, 901, 902, 971, 989, 1001, 1005, 1081, 1110], "schreiben": [5, 166, 188, 322, 323, 327, 1127, 1144, 1146], "physik": [5, 166], "z": [5, 38, 109, 162, 163, 166, 176, 186, 218, 219, 231, 234, 256, 283, 352, 362, 373, 374, 435, 568, 631, 701, 804, 865, 950, 1002, 1125, 1134, 1136, 1141], "b": [5, 7, 21, 31, 32, 38, 63, 73, 74, 107, 125, 146, 158, 162, 163, 164, 166, 176, 181, 186, 191, 193, 196, 199, 202, 209, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 288, 295, 314, 316, 317, 318, 354, 362, 364, 373, 389, 403, 406, 419, 549, 551, 559, 560, 566, 567, 568, 569, 574, 618, 619, 624, 625, 654, 660, 694, 701, 711, 729, 778, 809, 821, 838, 860, 865, 866, 882, 883, 884, 923, 939, 968, 974, 983, 986, 998, 1006, 1007, 1013, 1016, 1018, 1020, 1021, 1026, 1089, 1092, 1105, 1125, 1134, 1136, 1141], "guter": [5, 1125], "ersatz": [5, 187, 1140], "matlab": [5, 164, 166, 219, 340, 1075, 1078], "tester": [5, 140, 1110, 1136], "basic": [5, 10, 28, 29, 31, 72, 73, 74, 77, 78, 83, 97, 101, 103, 106, 110, 111, 114, 117, 122, 123, 139, 140, 143, 145, 150, 153, 158, 159, 164, 167, 170, 179, 192, 205, 210, 221, 229, 231, 234, 235, 259, 261, 268, 269, 270, 278, 286, 296, 302, 303, 321, 322, 323, 324, 325, 327, 329, 333, 339, 341, 391, 397, 401, 404, 408, 417, 419, 421, 423, 424, 426, 427, 434, 436, 437, 444, 451, 453, 454, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 541, 542, 547, 573, 581, 586, 598, 602, 610, 611, 614, 615, 619, 620, 632, 639, 640, 641, 642, 643, 644, 649, 652, 653, 655, 658, 660, 687, 704, 720, 726, 728, 730, 731, 735, 738, 740, 745, 748, 755, 759, 769, 778, 780, 782, 787, 793, 796, 798, 799, 801, 805, 806, 812, 814, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 880, 881, 886, 887, 888, 889, 890, 900, 901, 902, 903, 905, 910, 913, 915, 923, 929, 932, 935, 937, 945, 948, 949, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 969, 1007, 1035, 1062, 1063, 1074, 1075, 1084, 1090, 1096, 1097, 1099, 1115, 1119, 1131, 1132, 1145], "einf\u00fchrung": [5, 166, 170, 183, 185, 341, 999, 1126, 1131, 1132, 1134, 1143, 1145], "anhand": [5, 6, 161, 170, 183, 185, 187, 188, 237, 339, 341, 1126, 1132, 1140, 1145], "beispielen": [5, 8, 157, 183, 185, 187, 197, 206, 222, 234, 340, 341, 1132, 1145], "memori": [5, 42, 43, 49, 55, 73, 78, 80, 97, 109, 110, 111, 138, 142, 143, 144, 146, 148, 155, 159, 163, 164, 165, 168, 170, 175, 181, 182, 190, 194, 195, 199, 212, 218, 221, 228, 231, 246, 268, 270, 272, 277, 294, 297, 340, 341, 343, 357, 363, 385, 386, 392, 405, 407, 408, 410, 416, 417, 419, 421, 425, 426, 427, 454, 469, 471, 473, 474, 475, 477, 479, 480, 487, 488, 495, 512, 514, 515, 539, 547, 548, 553, 554, 564, 582, 583, 584, 600, 619, 629, 644, 647, 649, 658, 685, 687, 692, 699, 704, 706, 707, 708, 728, 730, 731, 740, 745, 748, 750, 755, 759, 769, 773, 774, 775, 778, 780, 782, 783, 787, 790, 796, 799, 809, 814, 816, 822, 874, 891, 900, 920, 922, 923, 936, 937, 969, 973, 986, 987, 1000, 1007, 1088, 1127, 1128, 1131, 1135, 1136, 1145], "weiter": [5, 23, 37, 151, 152, 176, 178, 187, 201, 225, 243, 273, 866, 1124, 1134, 1140, 1141, 1143, 1144, 1148], "standbein": [5, 1134], "mehreren": [5, 176, 192, 1147], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 80, 90, 99, 114, 136, 139, 161, 163, 183, 185, 195, 197, 200, 204, 210, 221, 222, 226, 232, 233, 234, 237, 240, 255, 262, 265, 271, 275, 276, 281, 282, 293, 322, 323, 324, 325, 326, 340, 397, 401, 404, 408, 417, 421, 426, 427, 430, 432, 442, 453, 467, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 649, 687, 720, 728, 730, 731, 747, 778, 801, 805, 806, 807, 808, 811, 812, 818, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 839, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 875, 883, 897, 903, 905, 913, 915, 929, 931, 932, 935, 937, 951, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 970, 999, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1126, 1134, 1136, 1137, 1141, 1142, 1143], "konzept": [5, 23, 340, 1134, 1136, 1143], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 151], "mehr": [5, 11, 23, 151, 160, 162, 186, 192, 212, 340, 1124, 1125, 1127, 1129, 1134, 1141, 1142, 1143, 1148], "kernentwickl": 5, "themen": [5, 23, 157, 168, 170, 1134], "applikationsentwicklung": 5, "direkt": [5, 23, 170, 1127, 1143], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 64, 151, 152, 160, 162, 170, 176, 186, 187, 191, 196, 197, 206, 207, 222, 228, 234, 244, 317, 340, 866], "nur": [5, 23, 151, 157, 161, 162, 166, 176, 178, 186, 187, 191, 193, 201, 223, 317, 340, 1126, 1127, 1134, 1137, 1140, 1141, 1142, 1144, 1146, 1147, 1148], "mutig": 5, "pool": [5, 83, 204, 798, 937, 939], "absprach": [5, 1124], "individuel": [5, 23, 178, 1124], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 170, 176, 340, 1125, 1146], "recht": [5, 7, 64, 117, 151, 152, 162, 170, 176, 187, 196, 1140, 1141], "dynamisch": [5, 170, 201, 1127, 1129, 1144], "teilnehm": [5, 157, 166, 170, 178, 340, 1134, 1141], "haben": [5, 151, 152, 161, 166, 170, 178, 186, 187, 199, 340, 608, 1125, 1126, 1127, 1128, 1129, 1134, 1140, 1142, 1143, 1144, 1147], "oft": [5, 23, 151, 176, 178, 1128], "bed\u00fcrfniss": [5, 23, 178], "vorab": [5, 157, 170, 206], "bekannt": [5, 23, 176, 1129], "waren": [5, 161, 166, 1125, 1129], "wodurch": [5, 23], "auch": [5, 23, 151, 152, 157, 162, 166, 176, 188, 191, 193, 199, 202, 207, 228, 232, 238, 263, 317, 318, 340, 1124, 1125, 1126, 1127, 1128, 1134, 1137, 1141, 1146, 1148], "mal": [5, 152, 166, 176, 187, 238, 340, 1125, 1129, 1140], "agenda": [5, 23, 27, 167, 272, 276, 280, 282, 286, 294, 298, 302, 304], "abgewichen": 5, "wird": [5, 7, 23, 151, 152, 157, 160, 161, 162, 170, 176, 186, 187, 193, 196, 225, 322, 327, 340, 1124, 1125, 1128, 1129, 1134, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "verh\u00e4ltni": 5, "vortrag": [5, 161, 1124], "\u00fcbungen": [5, 8, 157, 170, 178, 187, 188, 197, 206, 222, 234, 340, 1127, 1134, 1136, 1140, 1143], "ca": [5, 23, 32, 151, 153, 1105], "50": [5, 7, 106, 109, 153, 164, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 318, 323, 324, 414, 416, 432, 503, 538, 539, 860, 882, 883, 884, 978, 1001, 1021, 1033, 1080, 1081, 1093, 1110], "kleiner": [5, 7, 196, 865], "den": [5, 152, 160, 161, 162, 166, 170, 176, 178, 186, 187, 192, 199, 206, 235, 283, 322, 323, 327, 340, 800, 1125, 1126, 1127, 1128, 1129, 1134, 1137, 1140, 1141, 1147, 1148], "teilnehmern": [5, 340, 1148], "pc": [5, 78, 108, 139, 195, 259, 308, 325, 328, 507, 876, 877, 883, 1125], "erledigt": 5, "speziel": [5, 157, 186, 187, 246, 1137, 1140, 1143, 1147], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1124], "denen": [5, 23, 151, 1134], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 62, 65, 78, 85, 90, 108, 114, 115, 120, 125, 143, 144, 145, 146, 147, 148, 149, 150, 154, 158, 159, 160, 163, 164, 175, 176, 179, 180, 182, 183, 184, 187, 188, 192, 193, 194, 198, 200, 201, 204, 206, 210, 211, 213, 214, 216, 217, 219, 220, 222, 224, 226, 227, 228, 233, 234, 236, 237, 239, 240, 242, 248, 250, 252, 254, 255, 257, 259, 261, 262, 264, 265, 268, 269, 270, 272, 274, 275, 276, 278, 281, 282, 284, 287, 290, 293, 294, 296, 297, 322, 327, 329, 340, 342, 357, 363, 380, 385, 386, 395, 398, 410, 411, 419, 425, 433, 434, 435, 437, 439, 441, 442, 444, 449, 452, 454, 469, 474, 483, 484, 488, 497, 498, 503, 504, 505, 506, 523, 551, 552, 566, 567, 568, 569, 582, 651, 660, 675, 705, 706, 721, 729, 731, 749, 762, 764, 774, 778, 783, 788, 810, 817, 823, 839, 875, 877, 882, 884, 891, 896, 898, 904, 912, 916, 920, 925, 933, 934, 937, 938, 949, 951, 952, 953, 964, 967, 973, 976, 977, 980, 989, 990, 996, 999, 1000, 1003, 1007, 1012, 1031, 1053, 1064, 1071, 1072, 1074, 1076, 1078, 1081, 1082, 1083, 1085, 1089, 1104, 1105, 1117, 1119, 1122, 1133, 1140], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 65, 97, 106, 109, 114, 125, 127, 139, 140, 150, 154, 155, 157, 158, 161, 163, 170, 171, 172, 182, 184, 189, 190, 194, 195, 197, 204, 205, 206, 210, 212, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 240, 243, 247, 248, 250, 251, 252, 255, 259, 262, 268, 269, 270, 272, 276, 280, 282, 286, 287, 290, 294, 298, 302, 303, 321, 326, 327, 328, 329, 336, 341, 342, 494, 525, 567, 734, 737, 739, 742, 744, 747, 756, 758, 768, 770, 778, 779, 780, 781, 786, 790, 877, 882, 884, 952, 953, 954, 956, 962, 966, 968, 969, 970], "endprodukt": 5, "bleibt": [5, 23, 1144], "homepag": [5, 13, 147, 149, 157, 160, 161, 175, 202, 210, 212, 247, 248, 250, 416, 964, 1110], "erhalten": 5, "hier": [5, 8, 17, 23, 64, 151, 152, 157, 160, 161, 163, 166, 170, 178, 182, 186, 187, 193, 197, 203, 206, 207, 216, 222, 225, 234, 235, 277, 295, 340, 1124, 1127, 1134, 1140, 1141, 1143, 1144, 1146], "mix": [5, 29, 182, 189, 200, 203, 210, 213, 216, 217, 221, 223, 226, 255, 262, 275, 276, 281, 282, 284, 368, 407, 410, 411, 413, 415, 558, 731, 1004, 1007, 1023, 1026, 1035, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1075, 1089, 1094, 1100, 1145], "j\u00fcngeren": 5, "2023": [5, 60, 96, 106, 114, 260, 261, 264, 267, 278, 284, 295, 339, 430, 431, 700], "10": [5, 7, 31, 63, 97, 102, 105, 106, 109, 114, 132, 139, 145, 146, 151, 153, 154, 164, 165, 176, 181, 183, 187, 188, 191, 193, 196, 199, 200, 202, 207, 208, 209, 210, 212, 213, 215, 216, 218, 223, 225, 228, 231, 235, 238, 240, 241, 243, 244, 254, 256, 261, 263, 270, 271, 272, 273, 276, 277, 282, 283, 288, 292, 295, 308, 315, 316, 317, 318, 321, 335, 336, 339, 351, 353, 355, 357, 365, 383, 390, 407, 409, 423, 433, 443, 473, 493, 495, 496, 498, 501, 504, 509, 512, 532, 533, 538, 539, 541, 542, 547, 557, 560, 562, 569, 636, 637, 643, 647, 654, 658, 659, 685, 697, 706, 707, 708, 709, 719, 731, 768, 778, 786, 807, 809, 815, 834, 838, 840, 860, 862, 866, 869, 877, 882, 883, 884, 901, 910, 918, 945, 948, 952, 953, 954, 966, 967, 975, 976, 978, 979, 1007, 1008, 1015, 1037, 1038, 1058, 1064, 1075, 1076, 1080, 1081, 1097, 1098, 1105, 1110, 1122, 1140], "09": [5, 97, 112, 139, 146, 155, 179, 195, 260, 295, 319, 339, 431, 434, 860, 883, 884, 908, 1003, 1080], "11": [5, 7, 40, 63, 106, 114, 139, 140, 155, 164, 165, 170, 171, 175, 176, 181, 182, 183, 187, 188, 191, 193, 196, 199, 202, 205, 207, 208, 209, 212, 217, 218, 219, 223, 225, 228, 231, 235, 238, 241, 244, 247, 248, 253, 257, 260, 263, 267, 273, 277, 283, 291, 294, 295, 303, 314, 315, 316, 317, 318, 325, 328, 335, 336, 339, 341, 343, 357, 423, 425, 439, 451, 504, 532, 541, 542, 548, 550, 551, 553, 557, 559, 560, 566, 568, 578, 583, 585, 590, 603, 604, 605, 608, 621, 645, 649, 652, 655, 656, 661, 662, 663, 664, 674, 686, 687, 688, 689, 690, 691, 692, 694, 697, 698, 701, 703, 706, 707, 709, 710, 712, 719, 720, 721, 728, 729, 731, 732, 803, 816, 860, 869, 923, 928, 952, 953, 954, 1002, 1008, 1013, 1031, 1065, 1067, 1071, 1073, 1075, 1078, 1080, 1081, 1092, 1110, 1122, 1129, 1130, 1131, 1140], "introduct": [5, 29, 72, 73, 74, 78, 97, 98, 99, 106, 114, 123, 156, 159, 204, 205, 219, 221, 229, 232, 240, 243, 249, 251, 252, 258, 259, 261, 268, 271, 272, 276, 279, 287, 290, 293, 294, 297, 321, 326, 330, 339, 341, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 649, 656, 668, 675, 687, 703, 712, 720, 730, 731, 732, 780, 801, 805, 806, 807, 808, 811, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 873, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 918, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 999, 1072, 1073, 1074, 1083, 1104, 1109, 1131, 1145], "07": [5, 97, 106, 114, 139, 153, 155, 166, 179, 208, 209, 243, 248, 260, 261, 267, 283, 321, 335, 336, 339, 437, 805, 806, 882, 1003, 1031, 1075, 1080], "18": [5, 7, 63, 146, 153, 154, 158, 164, 165, 181, 186, 191, 193, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 224, 225, 231, 235, 238, 241, 244, 253, 257, 259, 260, 263, 267, 273, 277, 283, 288, 295, 315, 317, 318, 321, 339, 557, 622, 686, 694, 706, 731, 742, 751, 778, 815, 821, 823, 857, 860, 874, 884, 908, 910, 944, 955, 962, 963, 964, 967, 996, 1031, 1038, 1080, 1081], "For": [5, 40, 112, 114, 141, 142, 143, 147, 150, 153, 155, 156, 158, 159, 164, 167, 172, 173, 175, 179, 195, 200, 203, 210, 213, 216, 221, 231, 234, 236, 240, 248, 250, 251, 252, 276, 282, 287, 333, 339, 341, 353, 354, 360, 375, 384, 391, 397, 401, 404, 406, 408, 417, 421, 426, 427, 444, 469, 525, 550, 557, 561, 574, 583, 603, 649, 687, 694, 697, 701, 706, 711, 728, 730, 731, 749, 764, 778, 805, 806, 815, 838, 874, 875, 883, 884, 885, 894, 898, 925, 946, 953, 954, 955, 962, 963, 967, 1000, 1001, 1011, 1018, 1026, 1049, 1054, 1076, 1079, 1081, 1083], "04": [5, 97, 105, 114, 126, 139, 150, 153, 155, 170, 171, 195, 243, 259, 260, 263, 267, 295, 319, 321, 339, 432, 731, 874, 955, 962, 963, 967, 1080, 1110], "20": [5, 7, 8, 23, 63, 115, 122, 139, 146, 148, 153, 162, 163, 164, 165, 176, 181, 186, 187, 191, 193, 196, 197, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 260, 263, 267, 269, 273, 277, 284, 287, 288, 290, 295, 317, 318, 321, 339, 345, 347, 349, 365, 389, 429, 469, 497, 498, 503, 532, 533, 538, 539, 541, 542, 557, 654, 657, 658, 659, 668, 675, 697, 699, 700, 705, 706, 707, 708, 797, 803, 823, 838, 860, 875, 882, 883, 884, 938, 955, 964, 978, 979, 1003, 1022, 1030, 1031, 1057, 1080, 1081, 1110, 1112, 1119], "clean": [5, 46, 47, 51, 53, 55, 56, 63, 126, 158, 210, 229, 339, 407, 418, 419, 422, 428, 549, 647, 731, 732, 952, 954, 964, 973, 1026, 1075], "code": [5, 21, 23, 28, 29, 33, 40, 42, 46, 47, 51, 53, 55, 56, 63, 65, 70, 73, 80, 85, 103, 104, 108, 114, 122, 126, 128, 136, 140, 142, 143, 144, 145, 146, 149, 150, 157, 158, 161, 163, 166, 167, 168, 170, 171, 172, 175, 178, 179, 180, 182, 184, 189, 194, 195, 199, 203, 204, 205, 210, 212, 213, 215, 218, 221, 226, 228, 229, 231, 232, 240, 250, 252, 255, 259, 261, 262, 265, 268, 270, 273, 275, 276, 277, 281, 282, 283, 286, 287, 290, 293, 294, 302, 307, 308, 317, 322, 327, 339, 342, 349, 351, 355, 359, 365, 379, 385, 390, 406, 407, 411, 413, 415, 421, 422, 424, 425, 426, 427, 428, 432, 434, 435, 436, 438, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 456, 457, 459, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 528, 530, 531, 533, 534, 536, 537, 539, 540, 542, 543, 545, 546, 547, 548, 549, 550, 551, 553, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 575, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 612, 618, 619, 621, 622, 624, 625, 627, 633, 636, 640, 641, 647, 648, 652, 654, 656, 657, 658, 660, 662, 664, 675, 684, 685, 686, 687, 689, 690, 691, 692, 694, 696, 701, 705, 706, 708, 709, 710, 711, 719, 721, 725, 726, 727, 729, 730, 731, 732, 737, 742, 755, 756, 770, 776, 778, 783, 790, 793, 794, 796, 799, 817, 844, 874, 875, 883, 884, 899, 900, 916, 919, 923, 927, 936, 940, 942, 943, 945, 947, 949, 951, 952, 953, 954, 955, 956, 957, 959, 960, 962, 964, 975, 976, 978, 979, 980, 984, 986, 995, 997, 1000, 1001, 1003, 1004, 1010, 1011, 1012, 1018, 1022, 1023, 1024, 1031, 1051, 1055, 1074, 1078, 1090, 1092, 1101, 1104, 1110, 1111, 1113, 1117, 1118, 1119, 1122, 1123, 1130, 1135, 1143, 1144, 1148], "With": [5, 29, 123, 126, 131, 144, 150, 170, 231, 240, 259, 261, 262, 265, 270, 277, 285, 287, 290, 294, 301, 339, 380, 409, 425, 435, 445, 446, 455, 467, 481, 495, 547, 656, 687, 730, 731, 732, 778, 807, 808, 874, 881, 882, 913, 915, 932, 950, 953, 964, 995, 999, 1074, 1090, 1094, 1096, 1098, 1106, 1130, 1132, 1133, 1135], "03": [5, 97, 105, 114, 139, 140, 148, 153, 155, 162, 170, 205, 226, 228, 231, 260, 261, 264, 267, 273, 286, 318, 321, 325, 339, 341, 423, 430, 431, 432, 453, 467, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 542, 547, 548, 550, 551, 553, 555, 557, 558, 560, 562, 565, 570, 573, 576, 592, 598, 602, 610, 611, 612, 614, 615, 617, 620, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 656, 687, 703, 712, 720, 728, 730, 731, 732, 840, 964, 1080, 1103, 1119, 1129], "28": [5, 7, 23, 97, 105, 115, 139, 146, 153, 154, 164, 165, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 316, 317, 318, 335, 336, 339, 431, 443, 490, 506, 507, 530, 539, 622, 669, 768, 820, 860, 884, 912, 953, 954, 966, 1033, 1080, 1122], "29": [5, 7, 97, 106, 153, 154, 164, 165, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 314, 317, 321, 335, 336, 339, 431, 709, 742, 882, 884, 952, 955, 964, 1080], "sap": [5, 210, 261, 339, 1096], "13": [5, 6, 7, 63, 106, 126, 136, 146, 148, 155, 162, 164, 165, 176, 181, 184, 188, 191, 193, 196, 199, 202, 207, 209, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 261, 264, 267, 273, 277, 283, 288, 295, 317, 318, 339, 423, 430, 435, 438, 549, 664, 706, 742, 820, 860, 883, 908, 918, 938, 966, 973, 975, 1016, 1027, 1080, 1081, 1105, 1140], "15": [5, 7, 61, 63, 106, 112, 114, 139, 142, 150, 153, 162, 164, 165, 173, 176, 179, 181, 187, 188, 191, 193, 195, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 226, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 278, 283, 287, 288, 290, 295, 315, 317, 318, 319, 321, 328, 335, 336, 339, 431, 497, 498, 515, 516, 517, 518, 520, 521, 624, 684, 707, 729, 807, 821, 875, 909, 918, 988, 1079, 1080, 1081, 1101, 1105, 1140], "02": [5, 97, 106, 114, 139, 146, 153, 155, 162, 166, 192, 202, 229, 243, 260, 261, 267, 335, 336, 339, 423, 431, 432, 884, 952, 953, 954, 964, 966, 1080], "17": [5, 7, 63, 96, 106, 114, 148, 154, 158, 162, 164, 165, 176, 181, 183, 186, 191, 193, 196, 199, 202, 207, 208, 212, 217, 219, 220, 224, 225, 226, 228, 231, 235, 238, 244, 247, 248, 254, 256, 260, 263, 267, 273, 278, 283, 287, 288, 290, 295, 314, 317, 318, 339, 557, 605, 646, 655, 664, 685, 697, 707, 729, 742, 778, 809, 860, 884, 900, 906, 936, 940, 967, 996, 1038, 1080, 1081, 1089, 1101], "tour": [5, 151, 210, 247, 248, 250, 270, 303, 339, 340, 493, 645, 730, 731, 1075, 1130, 1131], "forc": [5, 31, 35, 142, 144, 148, 171, 231, 339, 340, 414, 429, 457, 553, 813, 891, 920, 954, 1075, 1130], "2022": [5, 97, 105, 106, 126, 155, 218, 224, 228, 231, 247, 248, 254, 257, 335, 336, 339, 431, 442, 504, 675, 700, 704, 729, 838, 840, 954, 964, 1031, 1075, 1103], "12": [5, 6, 7, 8, 40, 63, 106, 112, 114, 125, 139, 148, 153, 154, 155, 164, 165, 169, 176, 181, 187, 188, 191, 193, 196, 199, 202, 203, 207, 208, 209, 212, 215, 216, 220, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 259, 260, 261, 263, 267, 273, 277, 283, 288, 291, 294, 295, 297, 316, 317, 321, 335, 336, 339, 407, 431, 432, 440, 525, 658, 664, 697, 729, 809, 820, 823, 838, 860, 862, 869, 882, 884, 886, 910, 918, 936, 952, 964, 966, 967, 973, 979, 1007, 1018, 1075, 1078, 1080, 1081, 1105, 1116, 1140], "01": [5, 63, 96, 97, 105, 106, 114, 139, 140, 148, 153, 155, 162, 166, 184, 195, 202, 209, 218, 224, 231, 243, 260, 261, 263, 267, 319, 321, 335, 336, 339, 418, 431, 432, 445, 532, 533, 722, 807, 834, 884, 938, 940, 967, 1064, 1075, 1080, 1110], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 46, 47, 51, 53, 55, 56, 61, 65, 69, 73, 74, 78, 82, 84, 85, 97, 98, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 122, 130, 142, 145, 146, 147, 148, 150, 155, 158, 159, 160, 163, 164, 165, 179, 181, 182, 183, 191, 195, 202, 204, 206, 212, 215, 218, 222, 228, 229, 231, 235, 243, 249, 251, 255, 258, 259, 270, 272, 277, 279, 280, 283, 290, 293, 294, 297, 308, 314, 319, 323, 324, 339, 344, 347, 348, 360, 361, 362, 375, 380, 384, 390, 391, 393, 396, 397, 401, 404, 405, 406, 407, 408, 411, 413, 414, 415, 417, 419, 421, 426, 427, 429, 435, 442, 445, 446, 447, 451, 452, 455, 457, 467, 469, 481, 494, 495, 504, 506, 512, 547, 552, 553, 558, 560, 561, 562, 611, 612, 614, 615, 618, 629, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 649, 651, 664, 675, 685, 687, 690, 697, 703, 709, 713, 722, 727, 728, 729, 730, 731, 732, 739, 753, 755, 772, 795, 807, 808, 811, 812, 817, 820, 821, 825, 826, 831, 835, 841, 871, 874, 881, 882, 884, 899, 903, 904, 907, 913, 915, 920, 921, 922, 923, 932, 937, 938, 949, 950, 953, 955, 960, 962, 963, 964, 967, 968, 975, 976, 980, 981, 982, 983, 984, 986, 987, 988, 989, 1006, 1007, 1014, 1016, 1021, 1027, 1031, 1032, 1033, 1038, 1061, 1064, 1067, 1078, 1082, 1084, 1085, 1088, 1092, 1095, 1096, 1102, 1105, 1111, 1112, 1122, 1130, 1131, 1132, 1133, 1135, 1145], "new": [5, 16, 32, 42, 44, 49, 50, 55, 63, 65, 78, 107, 112, 117, 123, 140, 143, 145, 146, 147, 148, 149, 150, 153, 158, 170, 175, 195, 212, 216, 218, 228, 231, 235, 243, 253, 270, 276, 277, 294, 308, 333, 339, 368, 398, 402, 403, 411, 415, 429, 432, 452, 454, 472, 476, 488, 490, 494, 503, 505, 506, 515, 516, 517, 518, 520, 521, 525, 531, 539, 548, 549, 554, 557, 603, 605, 616, 618, 619, 624, 641, 645, 649, 651, 652, 656, 657, 658, 660, 663, 674, 685, 688, 692, 694, 696, 698, 699, 703, 704, 705, 706, 707, 708, 712, 713, 720, 722, 724, 728, 730, 731, 735, 772, 778, 786, 810, 834, 857, 875, 878, 882, 884, 907, 908, 909, 918, 920, 921, 927, 939, 970, 989, 1004, 1007, 1016, 1055, 1080, 1081, 1098, 1105, 1110, 1129, 1130, 1131, 1133], "languag": [5, 12, 29, 43, 59, 62, 78, 90, 114, 123, 139, 164, 166, 178, 179, 180, 182, 184, 187, 189, 194, 195, 197, 200, 202, 203, 204, 206, 222, 226, 229, 232, 234, 237, 262, 265, 268, 269, 270, 297, 308, 309, 310, 311, 312, 313, 322, 325, 339, 341, 343, 345, 357, 360, 371, 375, 384, 389, 391, 397, 401, 402, 404, 417, 421, 426, 429, 434, 436, 453, 467, 468, 469, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 512, 514, 547, 548, 555, 560, 562, 570, 573, 575, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 651, 656, 663, 664, 674, 688, 693, 695, 698, 703, 707, 710, 711, 712, 720, 728, 730, 731, 732, 810, 867, 875, 876, 952, 954, 971, 980, 984, 985, 986, 987, 988, 991, 996, 1000, 1004, 1006, 1007, 1010, 1019, 1027, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1082, 1086, 1089, 1090, 1092, 1096, 1101, 1104, 1107, 1109, 1114, 1119, 1127, 1130, 1131, 1132, 1133, 1135], "start": [5, 8, 42, 110, 111, 116, 117, 137, 139, 142, 143, 144, 145, 148, 153, 154, 158, 162, 167, 172, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 197, 200, 204, 205, 210, 216, 225, 231, 232, 241, 243, 256, 259, 261, 263, 265, 268, 270, 272, 277, 280, 295, 297, 308, 325, 339, 342, 349, 352, 353, 362, 365, 379, 402, 423, 424, 437, 445, 449, 452, 459, 525, 536, 542, 608, 619, 624, 627, 647, 699, 722, 729, 739, 778, 791, 805, 806, 810, 811, 814, 816, 817, 838, 839, 851, 860, 862, 875, 901, 902, 911, 914, 921, 922, 926, 930, 931, 934, 936, 939, 945, 949, 952, 966, 971, 978, 983, 984, 986, 987, 995, 1005, 1006, 1012, 1022, 1038, 1045, 1046, 1064, 1083, 1085, 1093, 1094, 1098, 1101, 1110, 1118, 1130, 1133], "schluss": [5, 7, 151, 176, 196], "noch": [5, 7, 151, 152, 162, 166, 170, 176, 186, 187, 191, 193, 196, 199, 202, 212, 225, 231, 232, 235, 256, 263, 340, 1129, 1140, 1147], "talk": [5, 42, 45, 50, 84, 114, 115, 122, 143, 147, 158, 163, 167, 175, 179, 182, 187, 219, 221, 222, 324, 429, 430, 692, 701, 778, 797, 875, 880, 884, 891, 1122], "heurigen": 5, "grazer": [5, 60, 161, 182, 880], "linuxtagen": [5, 161], "pointless": [5, 126, 256, 270, 277, 294, 411, 558], "blink": [5, 61, 126, 270, 273, 294, 308, 311, 875, 916, 919], "asyncio": [5, 126, 175, 179, 229, 270, 294, 675, 1076], "libgpiod": [5, 122, 125, 126, 140, 270, 294, 308, 310], "raspberri": [5, 78, 97, 104, 106, 118, 125, 126, 138, 155, 159, 185, 259, 270, 294, 325, 327, 328, 339, 341, 507, 731, 755, 759, 778, 782, 787, 793, 796, 799, 874, 881, 883, 884, 895, 940, 953, 955, 959, 962, 964, 966, 977, 999, 1003, 1090, 1092, 1104, 1125, 1134], "pi": [5, 38, 78, 106, 114, 123, 126, 155, 159, 185, 215, 218, 259, 270, 294, 328, 339, 341, 365, 392, 395, 413, 503, 506, 507, 562, 582, 662, 731, 755, 759, 782, 787, 793, 796, 799, 874, 881, 883, 884, 895, 940, 953, 955, 962, 963, 966, 1007], "cours": [5, 8, 13, 40, 104, 123, 125, 126, 139, 140, 141, 142, 143, 145, 158, 171, 172, 182, 190, 194, 200, 205, 210, 221, 229, 232, 249, 251, 259, 268, 270, 271, 285, 286, 294, 297, 301, 302, 322, 340, 341, 343, 392, 393, 409, 436, 447, 453, 459, 504, 729, 753, 778, 790, 805, 806, 867, 876, 905, 912, 954, 976, 977, 999, 1031, 1063, 1072, 1076, 1089, 1090, 1104, 1130, 1133, 1145], "sollt": [5, 23, 151, 152, 157, 160, 199, 1127, 1146], "interess": [5, 23, 232, 1125, 1136], "anderen": [5, 23, 176, 186, 191, 193, 340, 1124, 1125, 1127, 1129, 1148], "themenkomplex": 5, "bestehen": [5, 1143], "biet": 5, "folgend": [5, 157, 176, 187, 232, 1140], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 57, 59, 61, 62, 65, 70, 80, 88, 110, 111, 115, 116, 123, 130, 136, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 157, 158, 159, 163, 164, 165, 170, 172, 175, 176, 178, 179, 181, 186, 191, 195, 201, 203, 204, 212, 215, 218, 219, 223, 228, 229, 231, 248, 250, 253, 256, 259, 261, 268, 270, 277, 294, 307, 309, 310, 317, 333, 345, 349, 359, 363, 364, 367, 368, 369, 380, 388, 389, 395, 405, 407, 409, 411, 412, 415, 418, 419, 422, 424, 429, 431, 432, 433, 434, 435, 438, 439, 443, 444, 447, 448, 452, 454, 457, 459, 460, 468, 469, 474, 475, 496, 498, 506, 507, 525, 553, 554, 557, 559, 564, 582, 583, 600, 605, 618, 619, 633, 641, 643, 658, 660, 662, 675, 685, 689, 694, 695, 697, 707, 708, 711, 714, 716, 719, 737, 739, 746, 749, 751, 756, 764, 768, 770, 774, 776, 778, 786, 792, 795, 804, 805, 806, 810, 811, 813, 814, 816, 818, 820, 821, 822, 823, 838, 839, 850, 857, 860, 862, 864, 865, 866, 867, 869, 875, 876, 877, 878, 882, 883, 884, 894, 895, 899, 901, 904, 910, 912, 921, 928, 934, 937, 938, 939, 950, 954, 960, 964, 969, 970, 974, 975, 976, 987, 995, 1000, 1001, 1005, 1007, 1020, 1021, 1024, 1025, 1026, 1031, 1037, 1038, 1054, 1055, 1071, 1075, 1076, 1085, 1089, 1098, 1105, 1110, 1112, 1117, 1124, 1125, 1127, 1129, 1133, 1134, 1141, 1142, 1145, 1148], "onlin": [5, 11, 23, 148, 155, 157, 158, 170, 175, 178, 340], "gehalten": [5, 8, 139, 166, 178, 187, 197, 206, 222, 234, 1124, 1129, 1140], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 138, 151, 152, 166, 175, 178, 340, 341, 734, 737, 742, 747, 756, 764, 942, 945, 949, 977, 979, 999, 1075, 1090, 1104, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1145], "980": [5, 215, 218, 231, 238, 241, 647], "reisekosten": [5, 23], "auto": [5, 117, 140, 152, 160, 164, 170, 246, 449, 454, 478, 479, 483, 484, 487, 488, 489, 542, 550, 559, 560, 583, 605, 606, 608, 649, 650, 657, 664, 667, 669, 672, 675, 676, 677, 679, 680, 681, 682, 683, 687, 689, 690, 691, 692, 697, 699, 701, 706, 707, 708, 710, 721, 725, 726, 727, 728, 729, 730, 731, 778, 949, 1130, 1141, 1146], "42": [5, 7, 21, 42, 61, 117, 118, 160, 162, 163, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 318, 364, 390, 392, 393, 395, 398, 406, 411, 413, 419, 433, 443, 448, 452, 469, 471, 500, 501, 505, 506, 507, 508, 509, 510, 511, 523, 530, 542, 549, 557, 558, 562, 564, 590, 593, 596, 603, 627, 631, 651, 652, 660, 662, 690, 697, 710, 711, 721, 725, 726, 727, 741, 823, 860, 869, 877, 923, 931, 945, 952, 953, 954, 974, 975, 976, 983, 986, 1004, 1006, 1007, 1016, 1017, 1018, 1021, 1040, 1122], "per": [5, 50, 78, 149, 176, 294, 313, 333, 363, 402, 407, 496, 768, 774, 788, 792, 797, 798, 810, 814, 834, 860, 927, 936, 953, 1123, 1148], "kilomet": [5, 145, 689, 838], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 151], "sampl": [6, 114, 118, 143, 154, 200, 203, 204, 216, 220, 226, 232, 235, 252, 268, 294, 308, 425, 493, 719, 925, 945, 1028], "log": [6, 96, 117, 140, 148, 149, 158, 165, 170, 173, 182, 202, 212, 218, 228, 231, 259, 261, 273, 290, 321, 434, 435, 454, 711, 741, 778, 807, 814, 816, 838, 875, 877, 885, 889, 891, 894, 895, 1075, 1078, 1105, 1119], "record": [6, 29, 40, 53, 138, 139, 147, 149, 150, 176, 187, 188, 194, 204, 209, 216, 232, 252, 267, 287, 290, 313, 325, 424, 425, 731, 877, 971, 976, 991, 1033, 1035, 1054, 1065, 1066, 1067, 1068, 1069, 1071, 1074, 1084, 1140], "grundlagen": [6, 8, 23, 136, 237, 276, 339, 1127, 1129, 1136, 1137, 1140, 1141, 1143, 1144, 1147], "4": [6, 7, 8, 32, 61, 63, 106, 109, 112, 135, 140, 142, 146, 148, 154, 162, 163, 164, 165, 166, 169, 176, 181, 183, 187, 188, 191, 193, 196, 199, 202, 203, 207, 208, 209, 210, 212, 213, 215, 216, 218, 223, 225, 226, 228, 231, 235, 238, 240, 241, 244, 252, 253, 256, 260, 261, 263, 267, 273, 276, 277, 282, 283, 288, 295, 315, 316, 317, 319, 322, 335, 336, 339, 353, 369, 389, 392, 395, 412, 416, 419, 420, 430, 431, 433, 451, 454, 493, 497, 498, 499, 500, 501, 503, 505, 506, 508, 524, 526, 542, 549, 551, 559, 560, 563, 565, 566, 567, 568, 569, 581, 582, 590, 600, 650, 652, 654, 669, 670, 671, 673, 675, 684, 686, 690, 697, 699, 710, 729, 778, 779, 816, 864, 867, 869, 877, 882, 883, 884, 906, 919, 936, 940, 972, 974, 975, 982, 984, 988, 995, 998, 1007, 1008, 1013, 1016, 1017, 1018, 1022, 1023, 1027, 1028, 1030, 1031, 1033, 1037, 1050, 1054, 1065, 1067, 1071, 1073, 1076, 1080, 1081, 1083, 1089, 1093, 1094, 1095, 1097, 1098, 1100, 1105, 1110, 1125, 1140], "2021": [6, 10, 23, 124, 136, 153, 155, 191, 193, 202, 208, 209, 212, 217, 220, 243, 319, 321, 335, 336, 339, 525, 668, 693, 834, 838, 860, 861, 938, 952, 966, 1002], "templat": [6, 65, 74, 106, 170, 205, 246, 268, 273, 324, 325, 433, 495, 514, 547, 548, 592, 598, 602, 603, 610, 611, 612, 614, 632, 639, 640, 641, 642, 643, 644, 651, 657, 662, 665, 666, 667, 668, 672, 673, 675, 678, 705, 709, 711, 719, 721, 729, 731, 923, 1129, 1131], "descript": [6, 8, 31, 39, 106, 112, 127, 145, 146, 158, 159, 175, 179, 180, 182, 183, 184, 185, 190, 205, 210, 212, 216, 218, 221, 228, 231, 235, 247, 248, 251, 285, 286, 301, 302, 341, 434, 444, 452, 462, 463, 464, 465, 466, 470, 480, 504, 699, 706, 707, 708, 717, 719, 721, 729, 778, 790, 802, 804, 813, 838, 840, 860, 867, 870, 871, 884, 896, 904, 954, 966, 1017, 1031, 1054, 1112, 1133], "sidebar": [6, 17, 65, 140, 790], "metadata": [6, 28, 39, 139, 158, 256, 810, 813, 883, 886, 912, 974, 1135], "angebot": [6, 157], "hous": [6, 32, 143], "meiner": [6, 23, 232, 340, 1125], "person": [6, 23, 150, 180, 199, 202, 241, 243, 245, 252, 256, 263, 294, 295, 329, 414, 449, 450, 453, 478, 562, 621, 891, 989, 990, 992, 993, 994, 996, 997, 1071, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1110, 1111], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 188, 196], "wichtig": [7, 196, 246, 322, 327, 1148], "1": [7, 32, 39, 42, 50, 61, 63, 72, 74, 87, 106, 109, 110, 111, 112, 122, 125, 135, 136, 139, 144, 146, 149, 150, 152, 153, 154, 158, 159, 161, 162, 163, 164, 165, 166, 171, 172, 173, 176, 178, 181, 188, 191, 192, 193, 196, 199, 202, 203, 207, 208, 209, 212, 215, 218, 221, 223, 225, 228, 231, 235, 238, 241, 243, 244, 248, 253, 256, 260, 261, 263, 267, 273, 277, 283, 286, 288, 291, 295, 302, 307, 308, 314, 315, 316, 317, 318, 319, 320, 322, 325, 327, 335, 336, 339, 353, 354, 376, 383, 392, 396, 398, 406, 423, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 448, 468, 469, 475, 485, 493, 494, 497, 501, 503, 505, 506, 507, 509, 513, 515, 516, 517, 518, 519, 520, 521, 526, 529, 532, 535, 538, 541, 542, 544, 549, 550, 551, 557, 559, 563, 565, 566, 567, 568, 569, 574, 579, 581, 587, 588, 589, 590, 591, 596, 600, 612, 614, 622, 624, 627, 631, 641, 647, 648, 650, 651, 652, 654, 657, 658, 660, 662, 664, 666, 667, 669, 671, 672, 673, 675, 676, 677, 684, 690, 692, 695, 696, 697, 699, 701, 702, 705, 706, 708, 709, 710, 719, 727, 729, 731, 736, 741, 747, 751, 756, 778, 795, 804, 805, 806, 809, 810, 811, 813, 814, 815, 816, 817, 820, 821, 822, 823, 824, 828, 830, 832, 834, 835, 839, 840, 841, 857, 860, 861, 862, 863, 864, 866, 867, 869, 870, 871, 873, 875, 882, 883, 885, 886, 894, 895, 896, 898, 900, 901, 902, 904, 905, 906, 908, 909, 910, 911, 916, 918, 919, 931, 933, 934, 936, 938, 940, 941, 942, 945, 948, 949, 951, 952, 955, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 979, 980, 982, 984, 986, 988, 989, 995, 996, 998, 1000, 1001, 1002, 1003, 1005, 1008, 1009, 1010, 1011, 1012, 1015, 1017, 1018, 1023, 1028, 1030, 1031, 1033, 1038, 1041, 1044, 1054, 1058, 1061, 1064, 1065, 1067, 1071, 1072, 1073, 1079, 1080, 1081, 1082, 1088, 1093, 1094, 1095, 1097, 1098, 1099, 1104, 1105, 1110, 1111, 1112, 1117, 1121, 1124, 1130, 1132, 1133, 1137, 1140, 1142, 1147], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 68, 69, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 122, 123, 128, 130, 131, 136, 137, 139, 140, 142, 143, 146, 147, 148, 149, 150, 153, 154, 158, 159, 160, 163, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 191, 193, 194, 195, 196, 199, 200, 203, 204, 205, 207, 208, 210, 213, 214, 215, 216, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 233, 234, 235, 237, 239, 242, 243, 244, 248, 249, 250, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 281, 283, 285, 287, 288, 290, 291, 293, 294, 295, 297, 301, 303, 307, 308, 309, 310, 311, 312, 313, 317, 318, 319, 322, 325, 327, 328, 330, 333, 335, 336, 340, 341, 343, 344, 345, 346, 347, 353, 354, 355, 357, 359, 360, 361, 363, 364, 367, 368, 369, 371, 372, 374, 375, 376, 379, 380, 381, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 447, 449, 451, 452, 453, 454, 457, 460, 461, 468, 469, 471, 472, 473, 474, 475, 488, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 512, 514, 519, 523, 525, 530, 533, 536, 539, 542, 547, 548, 550, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 572, 574, 577, 578, 582, 583, 584, 585, 586, 587, 588, 590, 591, 596, 600, 603, 604, 605, 607, 609, 612, 614, 619, 621, 622, 627, 628, 629, 631, 633, 634, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 649, 651, 652, 654, 655, 657, 658, 659, 661, 664, 669, 670, 671, 672, 673, 675, 686, 687, 690, 691, 695, 696, 699, 700, 701, 705, 707, 708, 709, 711, 713, 717, 719, 720, 721, 722, 725, 728, 729, 730, 731, 732, 733, 734, 737, 739, 742, 744, 746, 747, 749, 753, 756, 760, 764, 766, 768, 770, 772, 774, 776, 778, 779, 780, 785, 786, 788, 790, 791, 792, 794, 795, 803, 804, 805, 806, 807, 808, 810, 811, 812, 815, 816, 817, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 838, 839, 840, 841, 842, 843, 845, 846, 849, 850, 852, 853, 854, 858, 860, 862, 865, 867, 870, 871, 874, 875, 876, 877, 878, 880, 881, 882, 883, 885, 886, 887, 888, 889, 890, 891, 893, 898, 905, 908, 910, 912, 915, 916, 918, 919, 920, 921, 922, 923, 925, 926, 928, 929, 932, 935, 936, 937, 938, 939, 940, 945, 946, 949, 950, 953, 954, 955, 956, 960, 962, 963, 964, 965, 966, 967, 968, 970, 972, 973, 974, 975, 977, 978, 979, 980, 983, 984, 986, 987, 988, 989, 990, 992, 993, 995, 996, 997, 998, 999, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1030, 1031, 1033, 1034, 1035, 1036, 1038, 1045, 1048, 1051, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1115, 1117, 1119, 1123, 1125, 1127, 1130, 1132, 1133, 1134, 1135, 1143, 1144, 1145, 1147], "41": [7, 148, 153, 164, 165, 176, 186, 191, 193, 196, 199, 202, 204, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 316, 317, 454, 710, 768, 860, 883, 988, 1031, 1033, 1080, 1112], "print": [7, 63, 139, 162, 163, 165, 166, 176, 179, 181, 182, 186, 191, 193, 194, 195, 196, 199, 202, 203, 207, 208, 209, 212, 215, 216, 218, 223, 225, 228, 231, 234, 235, 238, 241, 244, 253, 256, 260, 261, 263, 273, 277, 283, 288, 294, 295, 314, 315, 316, 317, 318, 348, 352, 354, 423, 434, 578, 605, 628, 675, 689, 697, 699, 815, 816, 822, 838, 840, 841, 882, 930, 940, 971, 974, 975, 976, 978, 979, 980, 984, 986, 988, 989, 992, 994, 997, 1002, 1003, 1004, 1005, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1026, 1027, 1041, 1043, 1053, 1054, 1055, 1057, 1058, 1064, 1079, 1084, 1088, 1092, 1101], "ja": [7, 23, 152, 176, 193, 196, 199, 212, 215, 244], "basta": [7, 143, 196, 1007], "2": [7, 29, 32, 42, 50, 61, 63, 72, 104, 106, 112, 115, 123, 136, 139, 144, 146, 152, 153, 154, 160, 162, 163, 164, 165, 166, 177, 181, 187, 188, 191, 192, 196, 199, 202, 203, 207, 208, 209, 212, 217, 218, 223, 225, 228, 229, 231, 235, 238, 241, 243, 244, 253, 256, 260, 261, 263, 267, 273, 277, 283, 286, 288, 291, 295, 302, 308, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 331, 339, 352, 353, 365, 371, 372, 392, 396, 423, 429, 430, 431, 432, 435, 436, 437, 441, 442, 443, 444, 445, 447, 469, 493, 494, 497, 503, 505, 506, 509, 513, 515, 516, 517, 518, 520, 521, 525, 540, 542, 549, 550, 551, 557, 559, 560, 563, 565, 566, 567, 568, 569, 574, 579, 583, 587, 588, 589, 590, 591, 596, 600, 604, 605, 606, 607, 612, 622, 627, 647, 650, 651, 652, 654, 657, 660, 662, 664, 665, 667, 669, 672, 673, 675, 685, 686, 689, 690, 695, 696, 697, 699, 701, 702, 705, 706, 707, 708, 709, 710, 719, 721, 729, 731, 737, 778, 805, 806, 813, 816, 817, 820, 821, 822, 834, 857, 860, 863, 864, 869, 871, 873, 875, 879, 882, 883, 895, 898, 900, 901, 902, 904, 905, 908, 909, 910, 911, 912, 914, 916, 918, 919, 931, 933, 936, 938, 940, 951, 952, 967, 969, 971, 972, 974, 975, 977, 980, 982, 984, 988, 992, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1005, 1008, 1009, 1010, 1012, 1017, 1018, 1023, 1028, 1030, 1032, 1033, 1034, 1035, 1037, 1041, 1044, 1054, 1058, 1061, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1076, 1079, 1080, 1081, 1086, 1093, 1094, 1095, 1097, 1098, 1099, 1104, 1105, 1110, 1111, 1112, 1116, 1117, 1124, 1132, 1133, 1140, 1143, 1144, 1146, 1147, 1148], "1234": [7, 32, 196, 199, 209, 218, 223, 225, 277, 317, 893, 901, 950, 1007], "3": [7, 32, 61, 63, 106, 109, 110, 111, 125, 139, 148, 153, 154, 158, 160, 162, 163, 164, 165, 166, 173, 175, 176, 181, 187, 188, 191, 192, 193, 196, 199, 202, 203, 207, 209, 211, 212, 217, 218, 221, 223, 225, 228, 231, 235, 238, 240, 242, 243, 244, 246, 253, 256, 260, 261, 263, 267, 273, 277, 283, 288, 290, 291, 296, 315, 316, 317, 318, 322, 323, 324, 327, 339, 353, 365, 366, 367, 380, 389, 390, 411, 412, 420, 423, 425, 430, 431, 432, 435, 440, 451, 468, 469, 493, 494, 498, 501, 503, 504, 505, 506, 508, 509, 510, 511, 515, 516, 517, 518, 520, 521, 523, 525, 542, 549, 551, 557, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 574, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 596, 612, 622, 627, 629, 650, 651, 652, 654, 662, 664, 665, 669, 670, 671, 672, 673, 675, 690, 695, 697, 699, 701, 706, 707, 709, 710, 729, 736, 742, 778, 816, 821, 835, 838, 860, 862, 864, 869, 871, 877, 879, 882, 883, 884, 886, 895, 896, 898, 900, 901, 902, 905, 909, 910, 911, 919, 920, 921, 925, 931, 933, 936, 939, 940, 941, 944, 946, 949, 950, 952, 953, 954, 972, 974, 975, 977, 980, 982, 984, 988, 995, 998, 999, 1000, 1001, 1002, 1005, 1006, 1008, 1010, 1012, 1013, 1016, 1017, 1018, 1023, 1024, 1025, 1027, 1030, 1031, 1033, 1050, 1054, 1058, 1064, 1065, 1067, 1071, 1073, 1076, 1079, 1080, 1081, 1084, 1087, 1093, 1094, 1095, 1097, 1098, 1100, 1105, 1110, 1111, 1112, 1119, 1124, 1126, 1128, 1130, 1133, 1136, 1140], "decim": [7, 196, 231, 235, 277, 308, 345, 431, 1007, 1021], "5": [7, 32, 61, 63, 117, 118, 120, 135, 139, 146, 148, 154, 164, 165, 166, 171, 174, 177, 181, 187, 188, 191, 193, 194, 196, 199, 200, 202, 203, 206, 208, 209, 210, 212, 213, 215, 216, 218, 223, 225, 226, 228, 231, 235, 238, 240, 241, 243, 244, 248, 252, 253, 256, 260, 263, 267, 273, 276, 277, 282, 283, 288, 291, 295, 308, 314, 316, 317, 322, 327, 335, 336, 339, 345, 347, 352, 369, 371, 380, 407, 412, 416, 425, 430, 434, 437, 448, 451, 454, 469, 477, 493, 496, 498, 503, 504, 506, 507, 508, 509, 510, 511, 523, 524, 529, 542, 549, 550, 551, 557, 561, 562, 565, 566, 568, 569, 590, 600, 627, 647, 651, 654, 655, 657, 658, 664, 666, 667, 669, 684, 685, 697, 699, 706, 707, 708, 710, 729, 751, 756, 779, 807, 809, 860, 864, 869, 875, 882, 883, 884, 900, 902, 910, 919, 936, 952, 964, 972, 974, 975, 978, 984, 988, 995, 1001, 1006, 1007, 1008, 1012, 1013, 1015, 1018, 1021, 1023, 1027, 1028, 1031, 1054, 1058, 1065, 1067, 1071, 1073, 1076, 1080, 1081, 1084, 1089, 1100, 1105, 1110, 1112, 1117, 1121, 1127, 1129, 1134, 1135, 1140, 1141], "hexadecim": [7, 196, 235, 364, 883, 1007, 1020, 1021], "16": [7, 63, 139, 148, 150, 151, 153, 162, 164, 165, 170, 171, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 257, 260, 263, 267, 273, 277, 283, 288, 295, 314, 315, 316, 317, 318, 322, 327, 328, 339, 363, 407, 414, 425, 432, 569, 627, 706, 756, 768, 860, 877, 882, 884, 895, 900, 901, 909, 918, 952, 954, 966, 967, 972, 979, 982, 1007, 1033, 1080, 1081, 1112], "7": [7, 32, 42, 63, 140, 143, 146, 148, 153, 160, 163, 164, 165, 166, 176, 181, 188, 191, 193, 194, 196, 199, 200, 202, 206, 208, 209, 210, 212, 213, 215, 218, 223, 225, 228, 231, 235, 238, 240, 241, 243, 244, 252, 253, 256, 260, 261, 263, 267, 273, 277, 282, 283, 288, 291, 295, 307, 316, 317, 322, 327, 328, 339, 353, 357, 371, 398, 407, 431, 432, 435, 440, 448, 468, 469, 493, 496, 501, 505, 506, 508, 509, 510, 511, 523, 530, 538, 542, 549, 557, 558, 562, 564, 565, 566, 568, 589, 593, 596, 605, 622, 631, 651, 659, 684, 685, 686, 690, 697, 725, 726, 727, 809, 810, 821, 822, 838, 860, 869, 882, 883, 884, 901, 909, 933, 936, 945, 946, 949, 950, 953, 954, 975, 978, 984, 988, 1001, 1006, 1007, 1008, 1011, 1013, 1015, 1016, 1031, 1043, 1061, 1064, 1076, 1080, 1081, 1084, 1089, 1100, 1110], "0x1234": [7, 196, 1007], "4660": [7, 196, 218, 1007], "8": [7, 32, 63, 109, 139, 145, 146, 150, 154, 162, 163, 164, 165, 166, 170, 175, 176, 179, 181, 188, 191, 193, 194, 196, 199, 200, 202, 203, 208, 209, 210, 212, 213, 215, 216, 218, 222, 223, 225, 228, 231, 235, 238, 240, 241, 244, 252, 253, 256, 259, 260, 263, 267, 273, 277, 280, 282, 283, 288, 291, 294, 295, 314, 315, 316, 317, 322, 339, 363, 407, 419, 425, 431, 435, 437, 440, 468, 500, 535, 542, 549, 554, 557, 562, 566, 568, 569, 658, 706, 729, 751, 774, 778, 809, 815, 823, 860, 862, 869, 875, 876, 877, 878, 882, 883, 952, 969, 975, 978, 984, 1007, 1008, 1013, 1021, 1026, 1030, 1031, 1037, 1073, 1076, 1080, 1081, 1087, 1103, 1105, 1112], "bin\u00e4r": [7, 23, 196, 199], "9": [7, 8, 32, 61, 63, 112, 139, 144, 148, 151, 158, 162, 163, 164, 165, 166, 174, 176, 178, 181, 182, 183, 184, 185, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 208, 209, 210, 212, 215, 216, 218, 223, 225, 228, 231, 232, 235, 238, 241, 243, 244, 253, 256, 259, 260, 263, 267, 268, 270, 273, 277, 283, 288, 295, 314, 315, 317, 318, 322, 327, 339, 345, 347, 353, 362, 365, 423, 431, 448, 468, 477, 496, 542, 544, 560, 569, 659, 669, 697, 756, 834, 857, 860, 882, 883, 884, 900, 936, 972, 982, 1001, 1002, 1008, 1013, 1015, 1023, 1027, 1031, 1038, 1043, 1080, 1081, 1089, 1103, 1105, 1110], "0b100110": [7, 196, 225, 1007], "38": [7, 23, 139, 146, 153, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 318, 452, 468, 493, 560, 706, 860, 955, 964, 988, 1080, 1081], "arithmet": [7, 108, 163, 196, 201, 221, 224, 236, 251, 268, 322, 346, 360, 367, 368, 374, 375, 384, 390, 391, 397, 401, 404, 406, 407, 408, 417, 421, 426, 427, 446, 455, 467, 468, 481, 495, 543, 547, 577, 581, 582, 585, 590, 647, 649, 687, 696, 697, 728, 730, 731], "man": [7, 32, 37, 114, 123, 143, 145, 151, 152, 160, 166, 170, 176, 178, 186, 187, 193, 196, 199, 204, 206, 208, 219, 225, 232, 235, 259, 280, 322, 327, 329, 340, 437, 530, 539, 551, 713, 729, 737, 756, 804, 805, 806, 809, 810, 813, 820, 821, 822, 823, 824, 828, 830, 832, 835, 839, 840, 841, 857, 860, 861, 863, 864, 866, 867, 869, 870, 884, 891, 894, 895, 896, 898, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 914, 920, 921, 923, 925, 927, 928, 931, 933, 939, 946, 949, 950, 952, 968, 969, 1125, 1126, 1127, 1129, 1137, 1140, 1142, 1143, 1144, 1146, 1147, 1148], "behaviour": [7, 196, 204, 764, 910, 1026], "erzwingen": [7, 176, 188, 196], "floor": [7, 38, 188, 196, 199, 203, 215, 216, 218, 223, 225, 231, 235, 317, 995, 1007, 1103], "divis": [7, 36, 38, 188, 196, 199, 215, 218, 223, 225, 231, 317, 345, 366, 468, 469, 483, 995, 1007, 1061], "modul": [7, 12, 21, 23, 29, 65, 126, 133, 139, 146, 148, 153, 165, 171, 173, 175, 178, 179, 180, 181, 182, 189, 190, 196, 199, 203, 205, 210, 212, 213, 216, 218, 219, 222, 223, 225, 226, 228, 229, 231, 232, 234, 235, 237, 238, 242, 243, 246, 252, 254, 255, 256, 261, 263, 271, 272, 275, 277, 281, 282, 285, 286, 287, 290, 295, 297, 301, 302, 307, 308, 317, 323, 324, 325, 327, 333, 340, 385, 429, 431, 435, 436, 442, 444, 445, 457, 646, 687, 730, 731, 734, 735, 737, 738, 740, 742, 743, 744, 745, 747, 748, 755, 758, 759, 763, 769, 774, 775, 779, 780, 782, 787, 790, 793, 796, 799, 874, 875, 882, 884, 973, 974, 975, 976, 977, 980, 988, 989, 991, 995, 996, 1000, 1001, 1004, 1005, 1016, 1017, 1018, 1022, 1024, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1078, 1082, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1097, 1098, 1104, 1105, 1107, 1109, 1110, 1113, 1114, 1120, 1132, 1134, 1135, 1141, 1145, 1148], "restklassen": [7, 196], "rest": [7, 17, 40, 150, 152, 162, 186, 196, 199, 203, 205, 223, 231, 263, 277, 295, 317, 343, 353, 378, 432, 580, 581, 642, 699, 766, 817, 878, 908, 936, 995, 998, 1022, 1051, 1055, 1084, 1099, 1132, 1148], "14": [7, 63, 136, 140, 153, 164, 165, 176, 181, 188, 191, 193, 195, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 243, 244, 247, 253, 256, 260, 263, 267, 273, 277, 283, 294, 295, 297, 314, 315, 317, 318, 319, 339, 431, 442, 443, 445, 454, 548, 622, 646, 658, 697, 699, 707, 709, 820, 823, 835, 860, 862, 882, 883, 884, 886, 901, 910, 940, 952, 953, 954, 973, 1075, 1080, 1081, 1129, 1140], "oper": [7, 29, 33, 34, 35, 38, 73, 78, 80, 97, 108, 120, 122, 142, 143, 145, 149, 161, 162, 164, 167, 170, 175, 179, 180, 181, 182, 184, 188, 193, 196, 201, 202, 203, 204, 205, 210, 212, 216, 217, 220, 223, 225, 226, 230, 233, 236, 239, 241, 244, 246, 256, 263, 268, 269, 270, 271, 272, 273, 276, 277, 293, 297, 308, 322, 327, 345, 353, 363, 369, 384, 389, 390, 391, 395, 397, 398, 401, 404, 406, 408, 410, 413, 417, 419, 421, 426, 427, 449, 450, 469, 489, 495, 507, 512, 514, 542, 547, 548, 549, 554, 555, 559, 562, 566, 567, 568, 569, 570, 573, 574, 576, 582, 590, 591, 592, 598, 602, 603, 606, 611, 614, 615, 627, 632, 639, 640, 641, 642, 643, 644, 647, 649, 655, 657, 658, 660, 664, 669, 671, 672, 673, 675, 678, 682, 685, 687, 689, 690, 691, 692, 697, 699, 706, 707, 710, 717, 721, 728, 729, 730, 731, 740, 745, 748, 749, 755, 759, 769, 778, 780, 782, 787, 793, 794, 796, 799, 805, 806, 809, 838, 844, 869, 870, 874, 882, 883, 884, 895, 900, 901, 902, 903, 904, 905, 916, 919, 923, 925, 945, 949, 953, 966, 969, 977, 980, 987, 988, 991, 1008, 1012, 1016, 1021, 1022, 1027, 1041, 1074, 1076, 1085, 1094, 1117, 1122, 1129, 1135], "preced": [7, 35, 38, 196, 218, 223, 231, 236, 239, 345, 351, 366, 367, 375, 380, 384, 389, 391, 395, 397, 399, 401, 404, 408, 417, 421, 426, 427, 578, 582, 649, 687, 728, 730, 731, 838, 887], "implizit": [7, 176, 196, 273, 1127, 1144], "klammerung": [7, 196, 866], "durch": [7, 151, 152, 160, 166, 170, 178, 186, 196, 228, 238, 322, 327, 340, 866, 1124, 1125, 1127], "pr\u00e4zedenz": [7, 176, 188, 196], "6666666666666665": [7, 196], "frage": [7, 152, 162, 166, 193, 196, 199, 205, 225, 340, 1134, 1141, 1148], "6665": [7, 196], "6667": [7, 196], "ieee": [7, 196], "floatingpoint": [7, 196, 366, 367, 490, 778, 1053], "representaion": [7, 196], "true": [7, 35, 38, 50, 58, 63, 110, 111, 144, 146, 148, 153, 162, 163, 164, 165, 175, 176, 181, 186, 191, 193, 194, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 223, 225, 228, 229, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 295, 308, 314, 317, 351, 367, 368, 380, 392, 395, 435, 493, 557, 565, 590, 618, 629, 631, 652, 675, 676, 677, 678, 680, 681, 682, 683, 708, 717, 719, 721, 766, 768, 798, 811, 838, 851, 919, 925, 930, 931, 934, 936, 937, 945, 946, 949, 958, 973, 979, 980, 984, 986, 987, 988, 989, 992, 995, 1008, 1009, 1011, 1012, 1013, 1016, 1022, 1025, 1026, 1089, 1093, 1095, 1100, 1116, 1117, 1119], "zahlen": [7, 186, 187, 196, 1127, 1140], "vergleichen": [7, 176, 196], "21": [7, 97, 99, 102, 105, 106, 114, 150, 153, 164, 165, 176, 181, 184, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 295, 317, 321, 339, 431, 768, 820, 860, 883, 884, 895, 966, 1080, 1081], "ab": [7, 23, 32, 151, 153, 176, 186, 187, 196, 231, 235, 238, 253, 256, 277, 549, 551, 559, 568, 654, 710, 1081, 1134, 1140], "0001": [7, 146, 164, 196], "aber": [7, 23, 37, 152, 160, 162, 166, 176, 186, 187, 191, 194, 196, 225, 228, 231, 283, 340, 866, 1125, 1127, 1129, 1136, 1143, 1147, 1148], "unendlich": [7, 8, 187, 196, 197], "lang": [7, 148, 151, 152, 161, 196, 313, 314, 331, 340, 434, 1126, 1142, 1147], "22": [7, 63, 97, 105, 106, 114, 145, 148, 153, 155, 164, 165, 176, 181, 183, 186, 191, 192, 193, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 284, 287, 288, 290, 295, 314, 316, 317, 318, 339, 823, 860, 884, 885, 893, 894, 909, 953, 954, 1038, 1075, 1080, 1081, 1141], "1000000": [7, 145, 176, 196, 273, 317, 423, 875, 883], "23": [7, 63, 114, 146, 153, 154, 155, 161, 164, 165, 166, 176, 181, 183, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 229, 231, 234, 235, 238, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 295, 339, 395, 431, 434, 675, 823, 860, 882, 883, 964, 1033, 1038, 1080, 1081, 1112, 1119], "32": [7, 153, 154, 160, 162, 165, 176, 181, 186, 191, 193, 196, 199, 202, 205, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 317, 345, 347, 363, 368, 407, 448, 454, 477, 493, 506, 774, 803, 809, 834, 860, 876, 878, 953, 954, 964, 1031], "4294967295": [7, 196, 215, 223, 231], "24": [7, 63, 97, 105, 113, 115, 116, 117, 118, 120, 122, 146, 153, 161, 164, 165, 166, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 277, 283, 288, 295, 314, 315, 317, 318, 339, 442, 640, 642, 664, 706, 707, 731, 778, 805, 806, 860, 882, 969, 1080, 1081], "64": [7, 145, 148, 153, 176, 181, 186, 191, 193, 196, 199, 202, 204, 205, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 351, 363, 368, 392, 407, 413, 416, 442, 774, 916, 919, 942, 949, 952, 969, 1033, 1080, 1125], "18446744073709551615": [7, 176, 186, 196, 199, 212, 215, 223, 225, 231, 235, 238, 241, 263, 295, 317], "overflow": [7, 42, 44, 50, 145, 186, 196, 212, 215, 216, 218, 221, 222, 228, 231, 238, 241, 256, 263, 273, 277, 368, 370, 406, 415, 815], "wenn": [7, 23, 151, 152, 157, 162, 170, 176, 178, 186, 187, 193, 196, 232, 238, 273, 865, 1124, 1126, 1127, 1134, 1136, 1137, 1140, 1143, 1148], "verwendet": [7, 23, 166, 170, 176, 196, 238, 1125, 1127, 1137, 1141, 1143, 1148], "wert": [7, 23, 187, 188, 193, 196, 228, 231, 235, 238, 244, 273, 277, 283, 1140, 1148], "w\u00e4re": [7, 160, 186, 196, 232, 1129, 1136], "dort": [7, 64, 152, 160, 162, 170, 186, 187, 196, 340, 1140, 1146, 1148], "25": [7, 63, 97, 153, 154, 164, 165, 166, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 229, 231, 234, 235, 238, 241, 243, 244, 253, 256, 260, 263, 267, 273, 277, 283, 290, 295, 308, 317, 318, 339, 541, 542, 664, 701, 758, 860, 884, 952, 978, 1021, 1065, 1067, 1071, 1073, 1080, 1081, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "18446744073709551616": [7, 176, 186, 196, 199, 212, 215, 223, 225, 235, 238, 256, 263, 273, 277, 283, 295, 317], "26": [7, 146, 148, 153, 154, 155, 164, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 248, 253, 256, 260, 263, 267, 277, 283, 288, 295, 317, 321, 339, 541, 542, 669, 685, 838, 860, 884, 916, 918, 919, 952, 954, 1080, 1081, 1105, 1141], "1000": [7, 23, 176, 186, 196, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295, 314, 317, 506, 507, 525, 600, 647, 721, 788, 813, 815, 820, 834, 835, 862, 863, 867, 869, 895, 902, 910, 931, 936, 940, 966, 973, 1022, 1054], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 176, 186, 196, 199, 212, 235, 238, 256, 283], "27": [7, 63, 97, 114, 153, 155, 164, 165, 176, 186, 191, 193, 195, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 234, 235, 238, 241, 243, 244, 253, 256, 260, 263, 267, 273, 277, 283, 290, 295, 314, 316, 317, 319, 339, 431, 505, 530, 697, 860, 882, 884, 952, 1080, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "10000": [7, 45, 196, 215, 218, 231, 263, 976, 992], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 196, 215, 231, 263], "hallo": [7, 176, 186, 191, 194, 196, 199, 207, 215, 218, 225, 228, 231, 235, 238, 244, 256, 260, 263, 283, 295, 317, 365, 557, 729, 809, 857, 885, 898, 901, 907], "39": [7, 140, 153, 162, 164, 165, 176, 181, 186, 191, 193, 195, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 291, 295, 314, 315, 316, 317, 318, 319, 468, 622, 669, 823, 952, 1080, 1081], "30": [7, 23, 63, 97, 106, 109, 114, 139, 140, 145, 153, 155, 165, 175, 176, 181, 186, 191, 193, 195, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 267, 273, 277, 280, 283, 295, 314, 316, 317, 319, 339, 352, 366, 431, 493, 497, 532, 533, 538, 539, 541, 542, 658, 659, 706, 707, 708, 834, 860, 866, 882, 883, 884, 940, 966, 978, 979, 1031, 1080, 1084, 1092, 1110, 1119], "eingebettet": [7, 196], "34": [7, 153, 154, 162, 165, 176, 181, 186, 191, 193, 195, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 260, 261, 263, 267, 273, 277, 283, 288, 291, 295, 316, 317, 318, 319, 454, 468, 472, 473, 474, 475, 487, 488, 489, 587, 588, 589, 590, 591, 596, 628, 835, 838, 860, 988, 1007, 1080, 1081], "31": [7, 106, 114, 146, 148, 153, 165, 176, 181, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 226, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 316, 317, 339, 403, 431, 438, 684, 860, 918, 950, 967, 1001, 1033, 1080, 1103], "eingenbettet": [7, 196], "mississippi": [7, 196, 199, 208, 212, 215, 223, 225, 231, 235, 241, 244, 256, 263, 277, 283, 295, 627], "count": [7, 29, 63, 87, 89, 112, 143, 155, 158, 196, 199, 200, 203, 208, 212, 215, 218, 223, 225, 228, 231, 235, 241, 244, 256, 262, 263, 277, 283, 295, 351, 352, 353, 354, 367, 423, 479, 505, 533, 647, 697, 722, 731, 734, 737, 738, 739, 740, 742, 745, 748, 749, 755, 759, 769, 782, 787, 793, 796, 799, 809, 818, 838, 860, 871, 874, 904, 907, 914, 925, 946, 1022, 1035, 1045, 1048, 1056, 1059, 1074, 1081, 1089, 1130], "ss": [7, 32, 196, 199, 208, 212, 215, 223, 225, 231, 235, 241, 244, 256, 263, 277, 283, 295, 627], "35": [7, 139, 153, 165, 176, 183, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 314, 316, 317, 318, 468, 497, 640, 642, 658, 1080], "find": [7, 17, 42, 44, 47, 48, 53, 65, 114, 142, 143, 144, 145, 149, 154, 159, 171, 172, 173, 183, 185, 196, 199, 203, 205, 208, 212, 216, 218, 221, 223, 225, 228, 231, 235, 238, 241, 244, 249, 256, 258, 261, 263, 268, 270, 277, 279, 280, 283, 285, 295, 297, 301, 303, 307, 316, 322, 327, 410, 416, 423, 435, 443, 450, 457, 478, 483, 484, 487, 488, 489, 490, 495, 512, 513, 542, 547, 550, 564, 566, 568, 569, 590, 592, 603, 606, 608, 611, 615, 627, 640, 642, 644, 647, 690, 694, 727, 731, 744, 783, 804, 805, 806, 808, 813, 817, 818, 820, 821, 822, 824, 838, 865, 868, 871, 874, 883, 884, 895, 923, 952, 955, 969, 999, 1003, 1014, 1022, 1082, 1103, 1120, 1132, 1134, 1135, 1136, 1141], "36": [7, 139, 144, 148, 153, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 260, 263, 267, 273, 277, 283, 295, 314, 317, 322, 327, 435, 448, 454, 472, 496, 499, 500, 501, 505, 506, 507, 657, 706, 707, 708, 729, 860, 882, 988, 1064], "37": [7, 117, 118, 153, 164, 165, 176, 177, 181, 186, 191, 193, 196, 199, 202, 204, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 316, 317, 318, 472, 988, 1080, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "capit": [7, 38, 196, 199, 208, 215, 225, 231, 256, 277, 316, 838, 1033], "zeil": [7, 162, 176, 186, 193, 196, 199, 202, 208, 212, 231, 235, 253, 256, 295, 317], "nnoch": [7, 193, 196, 212], "some": [7, 17, 21, 106, 130, 142, 143, 144, 145, 147, 150, 153, 154, 158, 164, 167, 172, 175, 179, 182, 184, 195, 196, 202, 204, 212, 218, 219, 224, 230, 231, 235, 247, 248, 250, 256, 259, 262, 263, 265, 269, 271, 272, 279, 297, 303, 340, 364, 398, 409, 425, 448, 454, 525, 550, 552, 572, 590, 603, 606, 660, 669, 697, 705, 707, 717, 720, 730, 731, 737, 742, 751, 766, 774, 778, 795, 797, 815, 820, 875, 883, 884, 905, 908, 934, 936, 938, 946, 975, 977, 1004, 1020, 1026, 1072, 1090, 1110, 1132, 1133], "name": [7, 23, 39, 40, 57, 65, 110, 111, 112, 114, 116, 119, 123, 125, 135, 139, 142, 143, 145, 146, 147, 150, 157, 158, 163, 165, 167, 172, 175, 176, 179, 182, 184, 186, 191, 196, 199, 202, 203, 214, 216, 217, 218, 221, 223, 225, 228, 233, 235, 238, 253, 256, 260, 261, 263, 267, 277, 307, 313, 316, 317, 318, 333, 355, 369, 375, 383, 384, 390, 391, 397, 401, 404, 408, 409, 412, 414, 417, 421, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 454, 469, 473, 474, 475, 480, 483, 487, 488, 489, 504, 506, 509, 514, 519, 551, 561, 563, 565, 629, 642, 648, 649, 659, 660, 669, 687, 689, 693, 699, 707, 728, 729, 730, 731, 734, 742, 746, 756, 760, 772, 774, 798, 804, 805, 806, 809, 817, 818, 820, 823, 824, 838, 844, 860, 866, 871, 878, 882, 883, 884, 886, 887, 894, 895, 898, 900, 904, 912, 945, 949, 952, 953, 954, 964, 966, 967, 969, 970, 971, 974, 976, 983, 988, 990, 993, 997, 998, 1000, 1001, 1005, 1006, 1014, 1016, 1018, 1020, 1021, 1022, 1027, 1031, 1033, 1038, 1054, 1055, 1065, 1071, 1073, 1081, 1084, 1087, 1088, 1089, 1094, 1095, 1097, 1098, 1099, 1100, 1103, 1110, 1117, 1119, 1129, 1133, 1135, 1136], "directori": [7, 17, 44, 61, 97, 99, 100, 102, 109, 114, 120, 122, 139, 142, 143, 144, 145, 154, 158, 169, 174, 177, 183, 195, 196, 202, 203, 204, 205, 212, 215, 216, 218, 228, 231, 243, 248, 249, 250, 258, 259, 271, 272, 276, 279, 280, 285, 293, 297, 301, 307, 308, 322, 327, 333, 335, 336, 389, 423, 425, 430, 433, 437, 439, 441, 443, 444, 446, 449, 451, 453, 467, 468, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 526, 529, 532, 535, 538, 541, 544, 547, 638, 720, 730, 731, 756, 778, 780, 800, 804, 807, 808, 809, 811, 812, 813, 815, 817, 818, 820, 821, 822, 824, 825, 826, 827, 832, 833, 835, 837, 838, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 854, 855, 858, 862, 867, 874, 882, 883, 884, 886, 891, 895, 897, 900, 903, 910, 911, 912, 913, 915, 918, 920, 929, 932, 935, 937, 941, 944, 948, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 975, 983, 1003, 1054, 1063, 1064, 1103, 1112, 1116, 1121, 1132, 1136, 1145], "multilin": [7, 186, 196, 211, 214, 218, 223, 231, 235, 295, 322, 390, 976, 1004], "jetzt": [7, 151, 162, 166, 176, 186, 193, 196, 206, 235, 291], "l": [7, 32, 38, 61, 63, 99, 114, 146, 150, 154, 162, 163, 165, 166, 171, 176, 181, 186, 191, 193, 194, 195, 196, 199, 202, 207, 208, 212, 215, 218, 221, 223, 225, 228, 231, 235, 238, 241, 244, 249, 253, 256, 258, 259, 263, 273, 277, 279, 280, 283, 295, 314, 316, 317, 322, 327, 395, 396, 403, 407, 419, 424, 425, 431, 438, 441, 442, 457, 469, 495, 542, 547, 566, 596, 647, 720, 729, 730, 731, 742, 756, 778, 779, 805, 806, 807, 808, 809, 811, 812, 815, 817, 820, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 852, 853, 854, 856, 857, 858, 862, 867, 871, 874, 875, 877, 882, 883, 884, 885, 886, 893, 895, 900, 901, 903, 905, 906, 908, 909, 910, 913, 915, 918, 921, 929, 932, 935, 936, 937, 946, 950, 952, 953, 954, 955, 964, 966, 967, 972, 974, 995, 1003, 1005, 1008, 1009, 1013, 1015, 1023, 1031, 1058, 1119, 1136], "44": [7, 139, 146, 153, 165, 176, 186, 191, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 884, 975, 1105], "45": [7, 29, 51, 53, 55, 56, 72, 73, 74, 87, 90, 115, 117, 118, 119, 122, 132, 135, 148, 151, 153, 165, 175, 176, 179, 181, 186, 191, 193, 196, 199, 200, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 308, 309, 310, 311, 312, 313, 316, 317, 322, 327, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 436, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 587, 588, 589, 590, 591, 592, 596, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 663, 687, 688, 698, 703, 712, 720, 728, 729, 730, 731, 735, 738, 740, 743, 745, 748, 750, 754, 755, 757, 759, 761, 763, 769, 771, 773, 775, 782, 784, 787, 789, 793, 796, 799, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 881, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 917, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1080, 1082, 1086, 1089, 1090, 1092, 1096, 1104, 1107, 1109, 1114, 1115], "46": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 860, 884, 900, 1080, 1081], "47": [7, 146, 148, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 318, 697, 871, 936, 964, 1021, 1080], "try": [7, 27, 114, 116, 120, 139, 142, 143, 145, 150, 162, 165, 175, 176, 179, 183, 186, 191, 193, 196, 199, 202, 205, 208, 210, 212, 215, 218, 221, 223, 225, 228, 231, 235, 238, 240, 241, 243, 244, 247, 248, 250, 252, 253, 256, 259, 260, 263, 270, 271, 272, 273, 276, 277, 283, 294, 295, 303, 308, 315, 316, 317, 318, 322, 326, 327, 337, 415, 419, 445, 449, 473, 478, 487, 495, 503, 512, 514, 547, 555, 573, 576, 592, 598, 602, 607, 611, 614, 615, 632, 634, 636, 639, 640, 641, 642, 643, 644, 675, 683, 687, 697, 703, 707, 721, 725, 727, 730, 731, 783, 786, 883, 904, 949, 973, 980, 1033, 1076, 1082, 1093, 1094, 1098, 1112], "except": [7, 21, 29, 43, 46, 61, 63, 74, 110, 111, 144, 148, 154, 162, 163, 170, 175, 176, 179, 180, 182, 184, 186, 191, 193, 196, 199, 203, 204, 205, 208, 210, 212, 215, 216, 219, 220, 223, 225, 229, 230, 233, 235, 238, 240, 241, 245, 253, 256, 260, 263, 271, 272, 273, 276, 277, 283, 293, 294, 295, 297, 307, 309, 315, 316, 317, 318, 322, 327, 335, 336, 355, 407, 410, 444, 449, 450, 457, 484, 495, 512, 514, 547, 576, 592, 598, 602, 611, 614, 615, 619, 632, 639, 640, 642, 643, 644, 648, 651, 675, 683, 704, 706, 707, 718, 731, 746, 778, 811, 816, 882, 936, 950, 973, 977, 980, 983, 986, 989, 999, 1001, 1004, 1022, 1024, 1074, 1076, 1093, 1098, 1112, 1122, 1129], "index": [7, 13, 23, 29, 39, 51, 53, 90, 110, 111, 139, 140, 149, 162, 164, 169, 174, 176, 177, 179, 180, 182, 184, 188, 189, 191, 194, 196, 199, 200, 202, 203, 205, 208, 210, 213, 215, 216, 218, 219, 221, 222, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 240, 241, 243, 252, 253, 255, 256, 261, 262, 263, 265, 267, 269, 271, 272, 275, 276, 277, 281, 282, 284, 287, 290, 293, 294, 295, 297, 322, 329, 353, 369, 395, 423, 431, 526, 529, 532, 535, 538, 541, 542, 544, 582, 583, 585, 590, 629, 669, 697, 709, 731, 774, 941, 944, 948, 999, 1000, 1012, 1015, 1022, 1028, 1029, 1030, 1031, 1033, 1035, 1048, 1054, 1059, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1090, 1092, 1094, 1096, 1097, 1099, 1103, 1104, 1114, 1116, 1121], "out": [7, 31, 44, 45, 50, 55, 63, 65, 75, 85, 106, 112, 114, 116, 122, 129, 135, 136, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 158, 163, 164, 171, 172, 175, 179, 182, 183, 191, 196, 199, 204, 212, 218, 219, 221, 228, 231, 235, 239, 268, 294, 295, 308, 322, 328, 333, 344, 365, 383, 389, 390, 398, 409, 416, 423, 424, 425, 429, 431, 432, 437, 442, 445, 447, 449, 474, 475, 490, 493, 503, 519, 525, 542, 549, 551, 565, 580, 622, 625, 660, 675, 694, 697, 710, 721, 727, 746, 747, 756, 778, 786, 791, 805, 806, 809, 813, 817, 820, 824, 834, 865, 871, 875, 882, 883, 884, 901, 902, 918, 936, 939, 949, 950, 952, 964, 969, 976, 980, 1020, 1021, 1028, 1054, 1057, 1084, 1089, 1091, 1097, 1099, 1100, 1105, 1111, 1130], "rang": [7, 29, 42, 63, 90, 108, 114, 115, 150, 163, 164, 165, 170, 179, 182, 184, 187, 188, 191, 194, 196, 199, 200, 203, 210, 211, 213, 214, 216, 217, 218, 221, 222, 224, 226, 227, 230, 231, 236, 237, 239, 240, 242, 244, 246, 254, 255, 256, 262, 264, 265, 272, 273, 275, 276, 278, 281, 282, 284, 293, 295, 297, 314, 368, 395, 411, 413, 459, 493, 496, 497, 501, 525, 541, 542, 578, 580, 583, 586, 687, 725, 728, 730, 731, 742, 875, 882, 931, 937, 940, 972, 975, 977, 982, 984, 986, 988, 998, 999, 1007, 1011, 1028, 1032, 1033, 1034, 1035, 1045, 1047, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1086, 1089, 1097, 1099, 1129, 1130, 1140], "48": [7, 146, 153, 162, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 318, 882], "append": [7, 162, 163, 164, 165, 166, 176, 181, 183, 186, 191, 193, 194, 195, 196, 199, 202, 207, 208, 209, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 318, 431, 434, 524, 542, 584, 600, 612, 639, 739, 751, 766, 778, 805, 806, 820, 823, 844, 857, 882, 891, 904, 940, 972, 978, 979, 992, 1008, 1013, 1016, 1018, 1023, 1026, 1027, 1053, 1101, 1105], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 62, 63, 66, 80, 84, 85, 106, 110, 111, 112, 114, 115, 120, 122, 123, 125, 131, 133, 137, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 158, 163, 164, 165, 167, 172, 175, 176, 179, 181, 183, 186, 191, 193, 194, 195, 196, 199, 202, 204, 205, 212, 215, 218, 223, 225, 226, 228, 229, 231, 234, 235, 238, 241, 243, 253, 256, 259, 262, 263, 265, 267, 269, 273, 277, 282, 283, 285, 294, 301, 307, 308, 313, 314, 319, 322, 328, 340, 345, 352, 363, 368, 370, 378, 383, 385, 386, 390, 393, 395, 400, 403, 411, 412, 413, 415, 419, 423, 425, 431, 432, 434, 435, 437, 439, 443, 444, 447, 448, 449, 454, 456, 457, 459, 460, 468, 473, 475, 493, 496, 498, 499, 503, 504, 506, 525, 536, 542, 553, 554, 562, 563, 565, 566, 567, 568, 569, 580, 581, 589, 600, 603, 607, 622, 629, 646, 647, 650, 651, 652, 655, 664, 675, 694, 696, 697, 705, 707, 708, 709, 710, 711, 717, 719, 721, 729, 739, 746, 753, 756, 766, 772, 778, 786, 794, 798, 803, 804, 805, 811, 820, 822, 823, 838, 857, 871, 875, 877, 878, 879, 882, 883, 884, 885, 887, 891, 894, 895, 901, 902, 904, 905, 908, 911, 912, 914, 920, 921, 922, 923, 925, 928, 931, 934, 936, 937, 938, 945, 949, 952, 955, 958, 964, 967, 968, 970, 971, 973, 975, 976, 978, 984, 986, 987, 989, 1000, 1001, 1004, 1005, 1006, 1008, 1012, 1013, 1015, 1017, 1018, 1022, 1024, 1026, 1027, 1034, 1044, 1047, 1054, 1055, 1080, 1081, 1082, 1083, 1085, 1089, 1090, 1092, 1094, 1100, 1101, 1102, 1106, 1110, 1112, 1117, 1119, 1132, 1135], "49": [7, 153, 162, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 318, 690, 823, 964, 978], "extend": [7, 144, 145, 176, 193, 194, 196, 201, 207, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 269, 273, 277, 283, 317, 452, 459, 468, 493, 566, 568, 569, 621, 739, 810, 1008, 1013, 1023, 1081, 1093], "slice": [7, 29, 90, 164, 166, 175, 179, 180, 182, 184, 189, 192, 193, 196, 203, 215, 216, 218, 219, 222, 226, 227, 233, 234, 236, 237, 238, 240, 252, 255, 257, 262, 265, 272, 275, 276, 278, 281, 282, 284, 293, 294, 297, 731, 776, 937, 999, 1012, 1016, 1035, 1048, 1059, 1074, 1090, 1094, 1096, 1098, 1103], "inclus": [7, 182, 196, 223, 235, 389, 582, 1037, 1097], "exclus": [7, 170, 196, 218, 235, 272, 371, 582, 717, 904, 937, 986, 1022, 1026, 1037, 1097], "51": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 604, 605, 606, 607, 860, 862, 1080], "l\u00f6schen": [7, 186, 192, 196, 322], "52": [7, 153, 162, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 318, 884, 1080], "del": [7, 38, 162, 165, 166, 176, 191, 193, 196, 199, 207, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 315, 317, 983, 1008, 1024], "53": [7, 146, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 329, 473, 474, 700, 758, 860, 882, 952, 964, 1080, 1081], "iter": [7, 24, 29, 63, 116, 117, 163, 166, 170, 175, 179, 180, 182, 184, 187, 188, 192, 194, 196, 200, 201, 203, 204, 206, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 226, 227, 230, 233, 235, 237, 238, 242, 254, 257, 263, 271, 272, 274, 278, 283, 293, 296, 297, 307, 322, 328, 380, 382, 395, 431, 456, 506, 525, 542, 584, 585, 586, 590, 593, 600, 603, 605, 607, 612, 662, 669, 678, 699, 725, 731, 901, 973, 977, 979, 988, 1001, 1011, 1025, 1026, 1032, 1033, 1034, 1035, 1048, 1059, 1071, 1074, 1076, 1086, 1088, 1101, 1103, 1140], "mittel": [7, 11, 23, 166, 176, 178, 194, 196, 201, 340, 1124, 1127, 1136, 1144], "54": [7, 153, 162, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 316, 317, 329, 604, 605, 606, 607, 707, 768, 860, 882, 964, 1080], "element": [7, 8, 35, 38, 106, 109, 110, 111, 114, 163, 165, 166, 176, 181, 182, 187, 188, 191, 193, 194, 196, 197, 199, 202, 206, 207, 208, 212, 215, 216, 218, 222, 224, 225, 231, 234, 235, 238, 242, 263, 267, 270, 273, 282, 295, 316, 317, 353, 380, 395, 403, 407, 410, 495, 509, 512, 514, 523, 542, 547, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 593, 597, 600, 604, 607, 629, 647, 650, 652, 669, 683, 697, 699, 731, 739, 946, 978, 980, 997, 1008, 1013, 1014, 1023, 1025, 1058, 1084, 1101, 1110, 1133, 1140], "55": [7, 153, 162, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 316, 317, 318, 329, 406, 431, 637, 638, 639, 640, 642, 952, 1033], "def": [7, 63, 162, 163, 166, 176, 181, 182, 186, 191, 193, 194, 196, 199, 202, 203, 208, 209, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 261, 263, 273, 277, 283, 288, 291, 295, 317, 318, 431, 689, 930, 973, 974, 975, 978, 979, 980, 983, 984, 986, 988, 990, 992, 993, 994, 995, 996, 997, 998, 1004, 1007, 1017, 1018, 1023, 1027, 1058, 1064, 1071, 1072, 1073, 1092, 1097, 1098, 1100, 1110, 1111], "is_integ": [7, 196, 253], "elem": [7, 162, 166, 176, 181, 186, 191, 193, 196, 208, 215, 218, 223, 228, 253, 256, 263, 273, 277, 283, 509, 606, 608, 655, 675, 677, 679, 682, 696, 697, 699, 719, 980, 1023, 1027], "type": [7, 29, 50, 78, 83, 100, 110, 111, 123, 135, 136, 139, 142, 143, 146, 148, 150, 158, 162, 163, 166, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 195, 196, 199, 202, 203, 204, 207, 208, 212, 217, 220, 221, 223, 225, 229, 230, 233, 235, 239, 241, 243, 244, 246, 254, 256, 259, 260, 263, 271, 272, 273, 276, 277, 283, 288, 292, 293, 294, 296, 297, 314, 315, 316, 317, 322, 324, 325, 333, 355, 366, 367, 374, 379, 384, 385, 389, 391, 395, 397, 398, 401, 404, 405, 406, 407, 408, 411, 413, 414, 416, 417, 421, 426, 427, 431, 447, 449, 458, 461, 469, 475, 505, 509, 530, 539, 549, 551, 557, 558, 562, 564, 565, 575, 583, 612, 618, 622, 625, 627, 629, 631, 637, 649, 650, 655, 660, 661, 669, 675, 686, 687, 689, 694, 695, 696, 697, 706, 707, 709, 710, 711, 716, 726, 727, 728, 729, 730, 731, 734, 737, 739, 744, 747, 766, 778, 804, 808, 820, 823, 835, 838, 841, 852, 854, 855, 858, 866, 874, 875, 877, 882, 886, 891, 900, 901, 904, 907, 908, 909, 910, 911, 921, 933, 942, 945, 949, 950, 952, 969, 971, 974, 977, 980, 984, 989, 990, 991, 998, 1002, 1004, 1006, 1007, 1008, 1012, 1014, 1015, 1016, 1021, 1022, 1024, 1026, 1028, 1041, 1052, 1053, 1071, 1074, 1076, 1081, 1085, 1089, 1094, 1095, 1097, 1105, 1110, 1112, 1130, 1131], "int": [7, 21, 46, 107, 110, 111, 120, 145, 154, 163, 165, 176, 182, 186, 191, 193, 194, 196, 199, 203, 204, 209, 212, 215, 216, 218, 221, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 262, 263, 265, 273, 277, 283, 291, 295, 315, 317, 318, 344, 345, 347, 349, 351, 353, 354, 355, 357, 358, 359, 363, 364, 365, 367, 368, 369, 373, 383, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 398, 399, 400, 403, 405, 406, 410, 411, 412, 413, 414, 415, 419, 420, 454, 461, 468, 469, 473, 474, 475, 476, 479, 482, 483, 485, 487, 488, 489, 491, 493, 501, 503, 505, 507, 508, 509, 510, 511, 513, 523, 525, 530, 533, 539, 542, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 572, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 600, 603, 604, 605, 606, 607, 608, 612, 614, 618, 619, 622, 624, 625, 627, 628, 629, 631, 636, 637, 638, 639, 640, 641, 642, 643, 647, 648, 650, 651, 654, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 694, 695, 696, 697, 699, 701, 708, 709, 710, 711, 714, 716, 719, 721, 734, 737, 742, 744, 749, 756, 758, 760, 762, 766, 770, 772, 774, 783, 788, 795, 815, 835, 878, 882, 896, 898, 900, 901, 902, 904, 907, 908, 909, 910, 911, 914, 916, 919, 921, 923, 925, 927, 933, 936, 939, 940, 942, 945, 946, 949, 950, 952, 964, 968, 970, 995, 1006, 1007, 1015, 1016, 1018, 1021, 1027, 1028, 1043, 1066, 1068, 1071, 1072, 1098, 1117, 1122], "return": [7, 21, 27, 63, 107, 139, 142, 144, 145, 146, 150, 154, 162, 163, 166, 176, 180, 182, 184, 186, 191, 193, 194, 196, 199, 202, 203, 204, 208, 209, 212, 215, 216, 218, 221, 223, 225, 228, 231, 235, 238, 241, 245, 246, 253, 256, 261, 263, 267, 273, 277, 288, 291, 294, 295, 317, 318, 344, 345, 347, 351, 353, 355, 364, 373, 383, 389, 395, 396, 398, 405, 406, 409, 410, 412, 413, 415, 419, 431, 438, 447, 448, 449, 450, 454, 456, 459, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 493, 500, 501, 505, 506, 509, 525, 533, 539, 542, 549, 550, 551, 553, 554, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 572, 574, 575, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 603, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 631, 635, 636, 637, 638, 639, 640, 641, 642, 643, 647, 652, 654, 655, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 690, 691, 692, 693, 694, 697, 699, 704, 705, 707, 708, 709, 710, 711, 717, 719, 721, 725, 726, 727, 729, 734, 741, 749, 756, 760, 768, 770, 792, 794, 798, 815, 835, 882, 896, 898, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 916, 919, 920, 921, 931, 933, 936, 942, 945, 946, 949, 950, 952, 964, 968, 969, 970, 971, 973, 974, 975, 976, 978, 979, 980, 988, 992, 993, 995, 996, 997, 1018, 1020, 1022, 1023, 1024, 1027, 1033, 1049, 1051, 1055, 1058, 1059, 1066, 1068, 1071, 1095, 1097, 1098, 1100, 1110, 1117, 1122], "els": [7, 21, 43, 50, 63, 110, 111, 115, 122, 143, 145, 146, 149, 158, 163, 166, 176, 179, 182, 186, 194, 196, 199, 202, 203, 204, 208, 212, 215, 216, 219, 220, 221, 223, 227, 228, 233, 235, 238, 242, 244, 253, 255, 256, 261, 263, 273, 277, 283, 295, 307, 318, 329, 351, 357, 368, 373, 384, 390, 391, 397, 401, 404, 408, 409, 417, 421, 426, 427, 431, 439, 440, 454, 478, 485, 488, 542, 565, 589, 590, 600, 607, 621, 641, 649, 654, 687, 708, 710, 717, 721, 728, 730, 731, 760, 770, 794, 805, 806, 811, 830, 832, 835, 841, 862, 883, 896, 899, 904, 930, 931, 933, 936, 938, 976, 983, 995, 996, 999, 1010, 1018, 1024, 1098, 1103, 1129], "fals": [7, 46, 110, 111, 123, 146, 148, 162, 163, 176, 181, 186, 191, 193, 194, 196, 199, 202, 208, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 267, 273, 277, 283, 288, 295, 316, 331, 347, 351, 368, 405, 431, 565, 590, 622, 629, 652, 664, 717, 721, 798, 811, 838, 930, 931, 936, 938, 958, 973, 988, 992, 995, 1008, 1009, 1011, 1012, 1016, 1094, 1095, 1098, 1100, 1117], "56": [7, 139, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 316, 317, 329, 368, 472, 560, 857, 882, 884, 1080, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "x": [7, 23, 32, 42, 61, 63, 148, 154, 162, 163, 164, 166, 176, 186, 191, 193, 195, 196, 199, 202, 212, 215, 218, 219, 223, 225, 231, 235, 238, 241, 243, 244, 253, 256, 260, 263, 272, 273, 277, 318, 322, 364, 367, 368, 374, 389, 390, 392, 395, 398, 399, 403, 405, 413, 415, 419, 442, 493, 503, 540, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 563, 565, 567, 568, 575, 582, 590, 650, 651, 652, 654, 669, 671, 672, 673, 690, 701, 710, 804, 805, 806, 809, 813, 815, 820, 823, 825, 826, 834, 835, 860, 863, 867, 869, 875, 882, 883, 884, 900, 910, 916, 918, 919, 927, 931, 952, 953, 954, 955, 960, 964, 966, 967, 972, 973, 1001, 1003, 1009, 1017, 1018, 1020, 1021, 1022, 1025, 1026, 1030, 1054, 1081, 1098, 1110, 1111, 1117], "filter": [7, 29, 106, 109, 114, 160, 163, 196, 203, 216, 233, 256, 262, 265, 269, 270, 277, 294, 296, 495, 512, 547, 705, 706, 731, 803, 822, 871, 1074, 1090, 1096, 1099, 1103, 1117], "57": [7, 139, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 318, 438, 443, 860, 882, 895, 953, 954, 1080], "zero": [7, 32, 38, 139, 145, 161, 163, 164, 166, 176, 186, 194, 196, 199, 212, 218, 223, 225, 228, 231, 235, 238, 253, 277, 322, 344, 353, 371, 696, 706, 710, 737, 749, 764, 809, 838, 853, 860, 884, 904, 925, 931, 934, 937, 940, 945, 946, 1012], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 69, 85, 106, 123, 131, 133, 136, 137, 142, 143, 144, 145, 158, 163, 164, 165, 171, 175, 176, 181, 186, 187, 189, 191, 193, 194, 196, 199, 200, 202, 204, 205, 206, 210, 212, 213, 216, 218, 221, 222, 223, 225, 226, 231, 232, 234, 235, 237, 239, 240, 241, 253, 255, 256, 259, 261, 262, 263, 271, 273, 275, 276, 277, 281, 282, 283, 287, 290, 308, 314, 322, 328, 331, 340, 341, 352, 359, 389, 395, 397, 398, 401, 403, 404, 407, 408, 410, 412, 415, 417, 421, 426, 427, 429, 430, 431, 432, 441, 444, 457, 459, 469, 473, 474, 493, 503, 505, 525, 533, 536, 542, 558, 563, 565, 582, 605, 647, 648, 649, 650, 651, 687, 693, 696, 697, 699, 706, 709, 711, 728, 730, 731, 776, 778, 781, 843, 845, 865, 875, 877, 882, 883, 884, 901, 904, 905, 912, 922, 923, 931, 936, 945, 950, 960, 970, 978, 984, 987, 990, 995, 998, 999, 1005, 1008, 1011, 1022, 1024, 1026, 1032, 1035, 1037, 1038, 1039, 1042, 1044, 1045, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1071, 1074, 1075, 1081, 1083, 1089, 1097, 1111, 1117, 1130, 1140, 1145], "58": [7, 146, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 329, 431, 884, 953, 954, 964, 1080, 1081], "59": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 329, 954, 955, 964, 1080], "three": [7, 12, 32, 36, 38, 43, 63, 110, 111, 123, 144, 156, 163, 164, 175, 176, 179, 180, 186, 191, 193, 194, 196, 202, 210, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 261, 262, 263, 265, 271, 272, 273, 277, 282, 283, 295, 322, 340, 409, 584, 629, 811, 820, 823, 838, 875, 882, 884, 904, 936, 945, 980, 990, 1008, 1012, 1022, 1024, 1026, 1038, 1044, 1075, 1076, 1131, 1145], "60": [7, 63, 106, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 243, 244, 253, 256, 260, 263, 273, 277, 283, 295, 316, 317, 473, 474, 475, 487, 488, 489, 496, 820, 882, 883, 884, 978, 1080, 1081], "61": [7, 63, 153, 164, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 322, 327, 1080, 1081], "62": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 820, 1033, 1080], "63": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 322, 327, 1033, 1080], "k": [7, 29, 145, 164, 166, 176, 179, 191, 193, 196, 199, 203, 204, 215, 218, 223, 225, 228, 231, 238, 241, 253, 256, 262, 263, 273, 283, 293, 295, 297, 323, 324, 343, 471, 604, 647, 709, 731, 838, 885, 920, 1074, 1077, 1083, 1090, 1110], "v": [7, 20, 23, 31, 32, 88, 112, 118, 125, 139, 143, 150, 164, 167, 170, 176, 180, 182, 184, 188, 190, 191, 194, 195, 196, 201, 203, 204, 205, 206, 212, 215, 216, 218, 219, 221, 222, 224, 230, 233, 234, 236, 239, 241, 245, 252, 253, 256, 259, 264, 272, 274, 278, 282, 283, 289, 295, 308, 322, 419, 443, 448, 469, 495, 529, 547, 604, 624, 647, 651, 655, 660, 661, 662, 669, 670, 671, 672, 673, 678, 681, 682, 683, 689, 695, 696, 697, 720, 727, 730, 731, 740, 745, 748, 750, 755, 759, 761, 765, 769, 770, 771, 773, 775, 778, 780, 782, 786, 787, 789, 793, 796, 799, 804, 808, 811, 812, 815, 838, 840, 867, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 945, 946, 952, 995, 1018, 1103, 1112, 1113, 1125, 1127, 1144, 1146], "65": [7, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 637, 940, 1080, 1081], "item": [7, 143, 163, 165, 176, 181, 186, 191, 193, 196, 199, 202, 203, 207, 208, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 243, 247, 248, 250, 253, 256, 261, 263, 273, 277, 283, 295, 303, 316, 407, 411, 413, 432, 696, 728, 730, 731, 945, 946, 980, 981, 982, 988, 1014, 1021, 1024, 1026, 1064, 1103, 1110], "66": [7, 146, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 627, 1033, 1080, 1081], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 61, 62, 63, 65, 66, 78, 89, 104, 108, 109, 112, 114, 116, 122, 123, 129, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 160, 163, 164, 165, 167, 169, 170, 172, 173, 175, 176, 179, 181, 182, 186, 187, 191, 193, 194, 195, 196, 197, 199, 202, 204, 205, 208, 209, 212, 215, 216, 218, 219, 221, 222, 223, 225, 228, 229, 231, 235, 238, 241, 244, 247, 248, 250, 253, 256, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 277, 280, 283, 285, 287, 290, 293, 294, 295, 297, 301, 303, 307, 308, 316, 317, 319, 322, 325, 326, 340, 342, 355, 357, 363, 368, 389, 390, 393, 402, 407, 409, 411, 412, 413, 414, 415, 419, 430, 431, 432, 434, 435, 437, 439, 440, 443, 444, 447, 448, 449, 451, 452, 453, 454, 457, 458, 469, 471, 472, 474, 475, 479, 490, 492, 503, 504, 505, 506, 509, 515, 517, 518, 526, 529, 532, 533, 535, 538, 541, 544, 551, 553, 554, 557, 558, 561, 562, 564, 565, 574, 584, 594, 595, 605, 612, 614, 619, 621, 624, 625, 627, 631, 634, 638, 648, 649, 651, 653, 655, 658, 659, 660, 661, 664, 668, 669, 675, 684, 687, 689, 692, 696, 697, 699, 701, 705, 706, 707, 709, 711, 719, 721, 722, 727, 729, 730, 731, 737, 746, 749, 751, 756, 762, 764, 774, 783, 786, 798, 803, 804, 805, 806, 809, 810, 813, 815, 816, 820, 821, 822, 824, 828, 830, 832, 834, 835, 836, 838, 840, 841, 857, 860, 861, 863, 864, 866, 867, 869, 870, 871, 875, 878, 882, 883, 884, 885, 886, 893, 894, 895, 896, 898, 899, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 912, 914, 916, 918, 919, 921, 922, 923, 927, 928, 931, 933, 936, 937, 938, 940, 941, 942, 944, 946, 948, 949, 950, 955, 964, 966, 967, 968, 969, 970, 971, 973, 974, 975, 978, 979, 981, 982, 983, 987, 988, 995, 999, 1000, 1001, 1004, 1008, 1009, 1015, 1018, 1021, 1022, 1025, 1026, 1033, 1038, 1045, 1056, 1063, 1064, 1065, 1067, 1075, 1082, 1084, 1085, 1088, 1089, 1092, 1099, 1100, 1101, 1102, 1104, 1105, 1110, 1111, 1116, 1119, 1121, 1122, 1125, 1130, 1132, 1135, 1148], "rot": [7, 196, 207], "gruen": [7, 196], "blau": [7, 196, 207], "67": [7, 153, 164, 176, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 431, 496, 940, 1021, 1033, 1080, 1081], "69": [7, 61, 148, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 1080, 1081, 1100], "schwarz": [7, 196, 207], "70": [7, 61, 145, 153, 176, 181, 183, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 431, 496, 882, 883, 884, 978, 1080, 1081, 1110], "add": [7, 23, 42, 44, 49, 65, 112, 116, 123, 125, 127, 138, 139, 143, 144, 145, 149, 150, 154, 158, 163, 172, 175, 176, 179, 182, 191, 193, 194, 196, 199, 202, 204, 208, 212, 215, 216, 218, 223, 228, 231, 235, 238, 241, 247, 248, 253, 256, 259, 263, 267, 273, 277, 283, 288, 290, 295, 322, 328, 370, 371, 410, 411, 419, 432, 433, 439, 442, 449, 451, 452, 468, 469, 473, 478, 479, 490, 498, 505, 507, 525, 539, 549, 562, 563, 565, 567, 636, 637, 638, 647, 655, 675, 686, 697, 705, 719, 721, 744, 746, 747, 751, 758, 766, 768, 778, 791, 794, 804, 877, 882, 883, 884, 912, 936, 938, 940, 946, 951, 964, 966, 973, 974, 996, 1000, 1008, 1026, 1031, 1098, 1110, 1111, 1117], "71": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 953, 954, 1080, 1081], "72": [7, 153, 176, 181, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 314, 317, 322, 327, 557, 869, 964, 1033, 1080, 1081], "remov": [7, 57, 99, 109, 114, 117, 123, 149, 150, 163, 165, 176, 191, 196, 202, 208, 216, 218, 223, 225, 231, 235, 238, 242, 243, 249, 256, 258, 259, 273, 277, 279, 280, 283, 294, 295, 434, 435, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 512, 513, 514, 519, 523, 542, 547, 577, 583, 600, 633, 655, 708, 719, 720, 721, 726, 729, 730, 731, 739, 756, 766, 774, 797, 804, 805, 806, 807, 808, 811, 812, 825, 826, 828, 830, 831, 832, 833, 835, 836, 842, 843, 844, 845, 847, 848, 850, 852, 858, 874, 885, 895, 897, 903, 905, 908, 913, 915, 918, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 964, 968, 978, 998, 1008, 1023, 1024, 1025, 1058], "73": [7, 153, 164, 176, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 1080], "74": [7, 146, 148, 153, 176, 186, 191, 193, 196, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 860, 869, 1033, 1080, 1081], "75": [7, 153, 176, 186, 191, 193, 196, 199, 202, 204, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 431, 1080, 1081], "sum": [7, 38, 63, 176, 196, 200, 201, 215, 216, 218, 221, 223, 231, 234, 235, 238, 241, 256, 263, 380, 395, 410, 412, 413, 415, 479, 505, 525, 549, 563, 565, 578, 582, 630, 644, 731, 937, 995, 1011, 1094], "100": [7, 32, 112, 142, 143, 148, 158, 162, 163, 176, 186, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 234, 235, 238, 241, 243, 244, 253, 256, 259, 260, 261, 263, 267, 273, 277, 283, 294, 295, 317, 318, 322, 327, 380, 386, 387, 429, 432, 445, 454, 487, 488, 496, 515, 577, 578, 579, 580, 581, 583, 584, 585, 586, 600, 647, 664, 685, 749, 788, 834, 837, 860, 877, 916, 938, 940, 944, 945, 953, 954, 979, 1011, 1015, 1033, 1064, 1110], "5050": [7, 176, 196, 218, 231, 238, 263], "bestimmen": [7, 196], "maximum": [7, 29, 136, 176, 186, 187, 189, 191, 194, 196, 199, 200, 206, 210, 212, 213, 215, 216, 218, 222, 223, 225, 226, 228, 231, 232, 234, 235, 237, 239, 240, 255, 256, 262, 263, 275, 276, 277, 281, 282, 318, 370, 643, 721, 731, 739, 815, 875, 940, 946, 1018, 1035, 1037, 1038, 1039, 1042, 1045, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1075, 1079, 1080, 1081, 1082, 1105, 1140], "zwei": [7, 64, 152, 162, 170, 176, 188, 191, 193, 196, 199, 212, 215, 223, 228, 231, 235, 241, 263, 283, 291, 295, 317, 513, 604, 605, 606, 607, 865, 1127, 1144], "inlin": [7, 123, 164, 170, 182, 196, 212, 241, 244, 246, 268, 295, 390, 412, 415, 536, 551, 565, 604, 641, 693, 711, 972, 1051], "ohn": [7, 23, 160, 162, 170, 196, 199, 800, 866, 1126, 1146, 1147, 1148], "funktion": [7, 23, 166, 170, 176, 187, 188, 189, 193, 196, 199, 202, 223, 225, 228, 231, 263, 295, 317, 1140], "666": [7, 42, 50, 107, 117, 118, 162, 163, 176, 186, 191, 193, 196, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 313, 314, 315, 317, 318, 353, 433, 452, 507, 508, 509, 510, 511, 515, 516, 517, 518, 520, 521, 523, 530, 542, 549, 553, 562, 564, 587, 588, 589, 590, 591, 593, 596, 604, 607, 627, 631, 660, 662, 669, 671, 672, 673, 677, 697, 701, 704, 706, 711, 714, 725, 726, 727, 736, 737, 971, 975, 1017, 1018, 1021, 1122], "var1": [7, 186, 196, 1041], "var2": [7, 186, 196, 1041], "6712": [7, 196, 218], "isn": [7, 142, 158, 196, 262, 265, 330, 344, 395, 582, 586, 625, 648, 675, 695, 882, 1020, 1117], "fehler": [7, 170, 176, 196, 322, 327], "link": [7, 13, 17, 27, 32, 44, 65, 103, 104, 114, 117, 136, 139, 140, 142, 143, 149, 150, 151, 152, 153, 154, 160, 162, 170, 176, 183, 196, 219, 221, 249, 250, 258, 259, 267, 272, 279, 280, 285, 301, 322, 335, 336, 385, 398, 404, 408, 412, 417, 421, 426, 427, 432, 435, 437, 438, 443, 453, 467, 490, 495, 496, 497, 498, 499, 500, 501, 502, 505, 525, 532, 533, 547, 562, 649, 655, 663, 687, 697, 698, 728, 729, 730, 731, 739, 740, 744, 745, 748, 756, 759, 768, 769, 778, 780, 782, 787, 793, 796, 799, 808, 858, 860, 865, 874, 883, 890, 920, 923, 925, 952, 953, 954, 955, 957, 958, 959, 960, 962, 964, 970, 1075, 1104, 1114, 1117, 1124, 1125, 1132], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 179, 180, 182, 183, 184, 185, 187, 189, 190, 197, 200, 203, 204, 205, 206, 210, 213, 216, 219, 221, 222, 226, 229, 232, 234, 237, 243, 247, 248, 249, 250, 251, 258, 259, 261, 268, 269, 270, 271, 272, 279, 280, 285, 286, 287, 290, 293, 294, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 313, 322, 329, 330, 331, 332, 333, 334, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 468, 469, 476, 477, 478, 479, 480, 482, 483, 484, 490, 491, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 582, 583, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 612, 614, 616, 618, 619, 621, 622, 623, 624, 625, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 668, 669, 674, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 721, 722, 729, 733, 734, 736, 737, 739, 741, 742, 744, 746, 747, 749, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 780, 781, 783, 785, 786, 788, 791, 792, 794, 795, 797, 798, 800, 802, 803, 804, 809, 810, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 834, 835, 836, 837, 838, 839, 840, 841, 857, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869, 870, 871, 876, 877, 878, 879, 882, 885, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 907, 908, 909, 910, 911, 914, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 936, 938, 939, 940, 952, 953, 954, 955, 960, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 983, 984, 986, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1084, 1085, 1087, 1088, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1106, 1110, 1111, 1112, 1113, 1140], "mittwoch": [8, 187, 189, 197], "00": [8, 112, 145, 146, 148, 153, 158, 166, 170, 178, 179, 180, 182, 183, 184, 185, 187, 189, 191, 193, 195, 197, 200, 204, 210, 212, 218, 228, 231, 232, 259, 260, 267, 268, 270, 315, 423, 431, 445, 700, 722, 729, 805, 806, 860, 882, 883, 884, 936, 955, 964, 1002, 1110], "tectrain": [8, 11, 166, 178, 187, 189, 197, 200, 203, 204, 205, 206, 210, 222, 234, 340], "html": [8, 17, 18, 23, 39, 40, 140, 149, 162, 170, 187, 197, 200, 203, 207, 210, 213, 216, 219, 235, 266, 317, 627, 734, 749, 755, 838, 860, 946, 950, 1021, 1087], "download": [8, 17, 63, 65, 106, 131, 142, 148, 150, 154, 158, 163, 166, 175, 182, 187, 195, 197, 200, 203, 204, 205, 210, 213, 216, 226, 229, 232, 234, 237, 240, 243, 252, 255, 262, 266, 273, 290, 313, 342, 432, 435, 496, 497, 498, 499, 500, 501, 502, 505, 506, 551, 636, 638, 642, 643, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 697, 699, 838, 840, 860, 862, 875, 882, 883, 884, 894, 960, 966, 1000, 1033, 1045, 1054, 1064, 1065, 1067, 1078, 1080, 1082, 1105], "repositori": [8, 23, 77, 97, 109, 112, 125, 130, 139, 146, 149, 157, 161, 170, 172, 179, 180, 190, 195, 197, 200, 204, 205, 206, 210, 213, 216, 221, 222, 226, 229, 232, 234, 237, 243, 251, 259, 269, 270, 272, 276, 282, 286, 287, 290, 294, 298, 302, 307, 321, 322, 327, 495, 512, 547, 731, 778, 1119, 1124], "kurssprach": [8, 187, 197, 206, 222, 234], "kurs": [8, 23, 140, 157, 178, 189, 197, 206, 222, 234, 1124, 1125, 1126, 1134, 1141, 1148], "viel": [8, 23, 161, 166, 170, 176, 187, 197, 206, 212, 222, 223, 234, 253, 1127, 1128, 1134, 1142, 1143], "spezifisch": [8, 187, 197, 206, 222, 234, 1125, 1144, 1147], "unterrichtet": [8, 187, 197, 206, 222, 234], "themenreihenfolg": [8, 187, 197, 206, 222, 234], "herdt": [8, 136, 197, 206, 222, 234], "skriptum": [8, 187, 197, 206, 222, 234, 1140], "\u00fcbernommen": [8, 187, 197, 206, 222, 234], "etwa": [8, 23, 151, 152, 161, 166, 176, 178, 187, 197, 199, 206, 222, 234, 340, 1125, 1127, 1134, 1140, 1141, 1143, 1148], "allgemein": [8, 187, 197, 206, 222, 234, 1140], "allgemeinen": [8, 187, 191, 197, 206, 222, 234, 1143], "dadurch": [8, 187, 197, 206, 222, 234, 340, 1127, 1147], "verwirrend": [8, 187, 197, 206, 222, 234, 1140], "weswegen": [8, 187, 197, 206, 222, 234], "vielen": [8, 23, 161, 186, 197, 206, 222, 234, 340, 1134, 1136], "f\u00e4llen": [8, 23, 187, 197, 206, 222, 234], "ausnahmen": [8, 187, 197, 206, 222, 234], "gemacht": [8, 23, 151, 157, 187, 197, 206, 222, 234, 1140, 1148], "kursstruktur": [8, 197], "sieh": [8, 23, 160, 161, 162, 166, 170, 176, 187, 189, 192, 197, 206, 222, 234, 340, 1125, 1126, 1140], "jjj": [8, 140, 184, 189, 197, 219, 267, 272, 331, 733, 734, 735, 739, 747], "hello": [8, 29, 63, 90, 136, 154, 176, 182, 186, 187, 189, 193, 197, 199, 200, 204, 206, 208, 210, 212, 213, 216, 218, 221, 222, 223, 225, 226, 232, 233, 234, 235, 237, 238, 240, 242, 255, 256, 262, 265, 273, 275, 276, 281, 282, 295, 308, 309, 310, 311, 312, 313, 317, 318, 322, 357, 360, 364, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 554, 557, 627, 649, 655, 658, 675, 680, 681, 682, 683, 687, 728, 730, 731, 735, 738, 740, 743, 745, 748, 755, 759, 763, 769, 775, 780, 782, 787, 790, 793, 796, 799, 805, 806, 809, 810, 842, 844, 849, 850, 857, 874, 885, 907, 931, 952, 953, 954, 964, 966, 968, 969, 970, 977, 984, 985, 986, 987, 991, 999, 1003, 1004, 1010, 1013, 1015, 1019, 1020, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1100, 1104, 1126, 1140], "py": [8, 17, 21, 32, 40, 63, 65, 127, 139, 158, 162, 163, 166, 174, 175, 176, 179, 180, 182, 184, 194, 197, 203, 209, 212, 216, 218, 219, 222, 223, 226, 228, 229, 231, 232, 234, 235, 241, 243, 255, 261, 262, 263, 271, 272, 276, 277, 282, 293, 294, 307, 322, 431, 689, 882, 938, 940, 973, 974, 975, 976, 978, 979, 980, 983, 984, 986, 988, 989, 995, 996, 1002, 1003, 1005, 1011, 1017, 1018, 1022, 1028, 1030, 1031, 1032, 1033, 1037, 1038, 1040, 1041, 1043, 1045, 1050, 1054, 1056, 1058, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1078, 1079, 1084, 1092, 1097, 1098, 1103, 1110, 1111], "swap": [8, 29, 145, 181, 187, 197, 199, 206, 218, 221, 222, 234, 239, 240, 249, 258, 259, 279, 280, 397, 401, 404, 408, 417, 421, 426, 427, 525, 649, 687, 728, 730, 731, 764, 808, 819, 820, 874, 1006, 1035, 1037, 1038, 1039, 1040, 1042, 1074, 1140, 1144], "exercis": [8, 29, 78, 93, 97, 102, 104, 106, 114, 115, 121, 122, 123, 140, 162, 170, 175, 182, 183, 187, 189, 194, 197, 200, 206, 210, 213, 216, 217, 219, 222, 226, 229, 232, 234, 237, 239, 240, 249, 251, 258, 262, 264, 265, 279, 280, 284, 307, 308, 309, 310, 311, 313, 321, 324, 327, 335, 336, 353, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 446, 454, 494, 515, 516, 517, 518, 520, 521, 522, 527, 547, 614, 615, 629, 649, 687, 715, 728, 730, 731, 732, 739, 801, 805, 806, 808, 812, 819, 829, 831, 833, 858, 868, 874, 890, 913, 915, 924, 932, 951, 958, 999, 1000, 1034, 1063, 1074, 1075, 1110, 1130, 1133, 1135, 1140, 1145], "greet": [8, 29, 176, 187, 197, 200, 206, 212, 213, 222, 223, 225, 231, 232, 234, 237, 240, 255, 256, 318, 441, 731, 953, 954, 960, 970, 1035, 1037, 1039, 1042, 1074, 1140], "depend": [8, 13, 28, 29, 63, 78, 114, 123, 136, 139, 140, 143, 144, 150, 154, 173, 175, 187, 197, 200, 205, 206, 212, 213, 218, 219, 222, 228, 231, 232, 234, 237, 240, 255, 272, 280, 286, 302, 322, 337, 345, 361, 363, 371, 374, 390, 407, 419, 425, 429, 433, 437, 440, 444, 447, 454, 460, 494, 506, 532, 534, 542, 622, 648, 696, 719, 729, 731, 737, 790, 801, 808, 812, 819, 822, 833, 858, 868, 875, 883, 901, 953, 964, 968, 970, 977, 999, 1000, 1002, 1035, 1039, 1048, 1074, 1104, 1105, 1135, 1137, 1140], "time": [8, 29, 36, 38, 43, 53, 63, 73, 76, 85, 89, 98, 110, 111, 112, 114, 115, 123, 133, 142, 143, 144, 145, 147, 148, 150, 163, 164, 167, 175, 179, 181, 182, 183, 187, 193, 195, 197, 200, 202, 204, 205, 206, 212, 213, 215, 218, 219, 222, 223, 231, 232, 234, 237, 238, 240, 241, 255, 256, 259, 262, 263, 265, 268, 269, 271, 272, 273, 277, 280, 290, 293, 294, 297, 308, 329, 340, 357, 365, 379, 385, 388, 411, 413, 418, 419, 422, 423, 424, 425, 429, 434, 445, 447, 448, 451, 457, 506, 536, 549, 556, 558, 599, 600, 654, 661, 675, 689, 697, 699, 710, 717, 721, 729, 731, 749, 751, 755, 756, 758, 770, 776, 778, 780, 793, 796, 799, 803, 809, 810, 811, 817, 818, 822, 838, 869, 874, 875, 882, 883, 884, 894, 904, 910, 911, 912, 916, 919, 920, 922, 925, 928, 934, 936, 937, 938, 939, 940, 945, 967, 968, 974, 978, 984, 987, 988, 999, 1000, 1001, 1004, 1011, 1014, 1017, 1018, 1035, 1037, 1039, 1042, 1074, 1080, 1089, 1094, 1105, 1135, 1140, 1146], "dai": [8, 12, 29, 144, 145, 147, 153, 156, 162, 163, 167, 181, 187, 197, 200, 206, 208, 217, 222, 231, 232, 234, 237, 240, 255, 263, 267, 290, 328, 330, 331, 340, 430, 435, 436, 447, 468, 731, 795, 834, 899, 936, 977, 999, 1006, 1015, 1035, 1037, 1039, 1042, 1074, 1075, 1082, 1104, 1131, 1132, 1133, 1135, 1140, 1145], "hen": [8, 197], "vehikelkauf": [8, 197], "datentypen": [8, 166, 170, 187, 188, 194, 197, 228, 246, 323, 1127, 1140, 1147], "\u00fcbersicht": [8, 187, 197, 200, 210, 213, 216], "git": [8, 13, 23, 61, 65, 72, 73, 74, 78, 114, 115, 122, 126, 130, 135, 147, 149, 157, 170, 171, 172, 175, 192, 194, 195, 197, 219, 221, 232, 243, 248, 250, 268, 269, 270, 328, 329, 335, 336, 432, 493, 504, 567, 731, 753, 778, 779, 838, 877, 882, 966, 967, 1031, 1119, 1124], "scm": [8, 61, 146, 170, 197, 751], "com": [8, 13, 20, 23, 37, 42, 44, 50, 85, 106, 112, 114, 125, 127, 139, 148, 149, 150, 154, 158, 170, 171, 172, 173, 179, 180, 183, 184, 192, 197, 199, 205, 219, 221, 229, 231, 243, 248, 250, 256, 259, 262, 263, 268, 269, 270, 272, 276, 282, 286, 287, 290, 294, 298, 302, 321, 322, 327, 333, 342, 490, 504, 525, 567, 587, 588, 589, 590, 591, 593, 594, 595, 596, 599, 608, 627, 709, 778, 779, 838, 877, 882, 885, 893, 894, 966, 1031, 1089, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1103], "pep": [8, 139, 187, 197, 269, 271, 272, 293, 294], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 62, 63, 65, 78, 84, 90, 99, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 122, 123, 126, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 158, 159, 160, 163, 164, 166, 167, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 194, 195, 197, 200, 203, 206, 210, 211, 212, 213, 216, 217, 218, 221, 222, 225, 226, 228, 229, 231, 234, 235, 237, 240, 242, 245, 247, 248, 249, 250, 252, 255, 258, 261, 262, 265, 268, 270, 272, 275, 276, 278, 279, 281, 282, 308, 309, 310, 311, 312, 313, 319, 322, 323, 324, 325, 327, 328, 339, 340, 341, 344, 346, 354, 360, 368, 370, 372, 373, 374, 375, 380, 384, 388, 391, 397, 401, 404, 407, 408, 411, 417, 419, 421, 426, 430, 432, 434, 447, 448, 449, 452, 453, 458, 467, 468, 469, 471, 473, 475, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 509, 512, 514, 547, 548, 550, 554, 555, 557, 566, 567, 568, 569, 570, 573, 576, 584, 592, 598, 602, 611, 614, 615, 620, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 652, 656, 658, 668, 687, 697, 699, 703, 712, 719, 720, 725, 728, 729, 730, 731, 732, 739, 741, 751, 753, 756, 772, 778, 780, 783, 801, 803, 805, 806, 807, 808, 811, 812, 815, 816, 819, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 837, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 853, 854, 856, 868, 874, 878, 882, 883, 884, 897, 899, 903, 905, 908, 909, 910, 911, 913, 915, 918, 922, 923, 925, 926, 929, 932, 935, 936, 937, 946, 949, 950, 953, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 969, 970, 971, 975, 977, 978, 981, 982, 985, 986, 987, 989, 990, 991, 998, 1000, 1002, 1004, 1005, 1012, 1016, 1019, 1023, 1024, 1026, 1027, 1028, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1096, 1098, 1104, 1107, 1110, 1112, 1114, 1117, 1127, 1130, 1131, 1133, 1140], "zen": [8, 146, 187, 197, 225, 236, 269, 664], "corei": [8, 164, 175, 178, 179, 182, 184, 187, 189, 195, 197, 200, 203, 210, 213, 216, 226, 229, 240, 243, 252, 276, 282, 322, 327, 1076, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1113], "schaefer": [8, 184, 187, 189, 195, 197], "youtub": [8, 20, 150, 164, 175, 178, 180, 182, 184, 187, 189, 197, 204, 271, 272, 293, 297, 308], "channel": [8, 120, 148, 164, 187, 197, 875, 883, 945], "trainer": [8, 12, 23, 24, 59, 62, 150, 169, 170, 175, 187, 197, 248, 250, 268, 434, 436, 504, 551, 699, 883, 977, 984, 999, 1000, 1075, 1090, 1102, 1104, 1110, 1130, 1135], "hacker": [8, 187, 197, 1135], "schier": [8, 187, 197], "anzahl": [8, 187, 197], "sehr": [8, 23, 37, 151, 152, 166, 170, 176, 178, 186, 187, 191, 197, 228, 340, 1125, 1127, 1134, 1137, 1140, 1141, 1143, 1148], "guten": [8, 166, 176, 178, 187, 197, 231, 235, 340, 1129], "tutori": [8, 150, 164, 175, 178, 183, 187, 195, 197, 203, 204, 206, 213, 216, 226, 229, 252, 282, 294, 308, 322, 327, 838, 884, 1028, 1030, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1113], "stil": [8, 187, 197], "besser": [8, 23, 151, 162, 186, 187, 197, 207, 1140], "ander": [8, 166, 176, 187, 197, 207, 215, 228, 317, 322, 327, 331, 340, 804, 1125, 1126, 1129, 1134, 1137, 1142, 1146, 1147], "auswahl": [8, 187, 197], "einleitung": [9, 198], "datatyp": [9, 29, 90, 136, 175, 179, 182, 187, 188, 189, 192, 194, 198, 200, 201, 206, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 226, 227, 232, 233, 234, 236, 237, 239, 242, 252, 254, 257, 264, 272, 274, 278, 284, 294, 296, 308, 309, 310, 311, 312, 313, 322, 327, 361, 368, 553, 582, 650, 731, 945, 977, 982, 984, 985, 986, 987, 991, 999, 1010, 1019, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104, 1140], "number": [9, 24, 27, 29, 36, 53, 57, 59, 62, 63, 68, 78, 80, 82, 84, 85, 110, 111, 112, 115, 116, 122, 133, 136, 142, 144, 145, 148, 150, 153, 154, 158, 161, 163, 166, 172, 175, 179, 182, 185, 186, 187, 189, 194, 195, 198, 200, 201, 203, 206, 210, 212, 213, 215, 216, 218, 219, 222, 224, 225, 226, 228, 231, 232, 234, 236, 237, 239, 240, 241, 243, 248, 250, 252, 255, 256, 262, 263, 268, 269, 270, 271, 272, 273, 275, 276, 277, 281, 282, 285, 293, 294, 297, 301, 308, 313, 322, 329, 340, 345, 347, 349, 351, 353, 354, 355, 361, 365, 367, 368, 379, 390, 406, 410, 415, 419, 423, 429, 431, 441, 459, 460, 468, 493, 501, 503, 506, 508, 519, 525, 552, 572, 580, 583, 590, 606, 631, 640, 643, 652, 664, 690, 697, 699, 729, 731, 737, 739, 746, 749, 758, 760, 772, 774, 780, 788, 792, 803, 811, 818, 844, 863, 865, 867, 869, 871, 883, 894, 895, 898, 902, 903, 904, 909, 910, 911, 912, 931, 936, 937, 945, 946, 950, 952, 955, 975, 976, 978, 980, 981, 982, 992, 1004, 1005, 1006, 1011, 1012, 1022, 1023, 1024, 1026, 1027, 1035, 1038, 1039, 1042, 1045, 1046, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1070, 1074, 1075, 1076, 1079, 1084, 1102, 1103, 1105, 1110, 1123, 1132, 1135, 1140], "integ": [9, 38, 75, 76, 88, 161, 163, 165, 180, 181, 182, 184, 188, 192, 198, 201, 205, 212, 215, 216, 218, 221, 224, 227, 228, 229, 231, 236, 239, 245, 257, 264, 277, 284, 296, 322, 345, 346, 351, 361, 364, 366, 367, 368, 379, 390, 392, 394, 395, 406, 407, 411, 417, 421, 426, 427, 468, 469, 472, 490, 525, 553, 579, 582, 630, 644, 648, 649, 651, 687, 690, 716, 728, 730, 731, 737, 912, 922, 923, 924, 931, 971, 984, 987, 1015, 1021, 1027, 1053, 1097, 1099, 1127, 1131, 1146], "string": [9, 29, 42, 50, 58, 90, 97, 106, 116, 117, 140, 145, 170, 180, 181, 182, 184, 187, 188, 191, 194, 198, 200, 201, 203, 204, 206, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 226, 227, 230, 232, 233, 234, 236, 237, 239, 242, 245, 247, 248, 250, 252, 254, 255, 257, 261, 262, 264, 265, 267, 275, 276, 278, 281, 282, 284, 293, 294, 296, 297, 307, 308, 309, 310, 311, 312, 313, 318, 322, 327, 333, 346, 349, 353, 360, 369, 375, 384, 390, 391, 397, 401, 404, 408, 413, 417, 421, 426, 427, 431, 439, 450, 454, 456, 471, 473, 474, 475, 478, 480, 483, 484, 485, 487, 488, 489, 490, 506, 507, 508, 513, 524, 525, 533, 539, 542, 548, 550, 553, 554, 557, 572, 574, 591, 594, 595, 596, 600, 603, 604, 605, 606, 607, 608, 611, 615, 626, 628, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 653, 655, 656, 660, 675, 679, 681, 682, 683, 684, 687, 689, 691, 692, 696, 706, 707, 708, 709, 711, 728, 729, 730, 731, 810, 901, 912, 916, 919, 923, 931, 936, 945, 949, 976, 977, 980, 988, 997, 999, 1004, 1012, 1026, 1033, 1034, 1035, 1040, 1045, 1048, 1049, 1050, 1053, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1087, 1088, 1089, 1090, 1092, 1095, 1127, 1140], "compound": [9, 29, 90, 136, 179, 182, 187, 188, 189, 198, 200, 206, 210, 211, 213, 214, 216, 217, 219, 220, 222, 224, 226, 227, 232, 233, 234, 236, 237, 239, 240, 242, 254, 255, 262, 265, 272, 274, 275, 276, 278, 281, 282, 284, 293, 294, 296, 297, 308, 309, 310, 311, 312, 313, 322, 345, 376, 395, 731, 977, 984, 985, 986, 987, 991, 999, 1032, 1033, 1034, 1035, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104, 1140], "list": [9, 27, 29, 37, 63, 90, 99, 114, 127, 136, 139, 140, 143, 150, 154, 165, 170, 172, 175, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 194, 195, 198, 200, 201, 203, 206, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 233, 234, 236, 237, 239, 240, 242, 244, 248, 249, 252, 254, 255, 257, 258, 259, 262, 264, 265, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 282, 284, 293, 294, 296, 297, 307, 314, 317, 319, 322, 326, 327, 328, 340, 398, 404, 408, 409, 417, 421, 423, 425, 426, 427, 431, 432, 435, 444, 451, 453, 454, 493, 495, 503, 506, 539, 541, 543, 547, 551, 552, 557, 582, 598, 611, 615, 634, 644, 649, 652, 687, 695, 701, 706, 719, 720, 728, 729, 730, 731, 732, 740, 744, 745, 748, 755, 756, 759, 769, 780, 782, 786, 787, 793, 796, 799, 804, 805, 806, 807, 808, 811, 812, 818, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 845, 846, 849, 850, 852, 853, 854, 855, 856, 858, 866, 874, 883, 903, 905, 907, 913, 915, 923, 925, 929, 932, 935, 937, 952, 954, 969, 973, 976, 977, 980, 981, 982, 995, 997, 999, 1000, 1006, 1007, 1012, 1013, 1014, 1015, 1018, 1024, 1026, 1027, 1028, 1033, 1035, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1066, 1068, 1071, 1073, 1074, 1075, 1076, 1081, 1084, 1094, 1097, 1101, 1112, 1117, 1124, 1127, 1140, 1141], "arrai": [9, 97, 108, 114, 166, 187, 188, 193, 198, 200, 204, 205, 207, 213, 221, 226, 231, 240, 243, 247, 248, 268, 276, 282, 345, 354, 360, 364, 375, 384, 391, 401, 404, 408, 410, 412, 413, 416, 417, 421, 426, 427, 505, 508, 531, 539, 542, 580, 581, 583, 585, 587, 590, 591, 596, 600, 612, 632, 639, 640, 641, 642, 643, 644, 647, 649, 687, 695, 710, 728, 730, 731, 749, 810, 815, 931, 1008, 1012, 1024, 1076, 1079, 1081, 1105, 1140], "javascript": [9, 23, 141, 176, 186, 198, 207, 231, 236, 971, 1017], "std": [9, 42, 50, 58, 106, 108, 109, 110, 111, 114, 116, 117, 123, 154, 170, 171, 198, 246, 259, 268, 270, 433, 434, 439, 447, 450, 452, 454, 456, 461, 468, 471, 473, 474, 475, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 501, 503, 505, 506, 507, 509, 510, 511, 512, 523, 525, 533, 543, 547, 550, 551, 553, 558, 559, 560, 564, 572, 574, 578, 579, 580, 581, 582, 587, 588, 589, 590, 591, 593, 594, 595, 599, 600, 602, 605, 606, 607, 608, 611, 612, 615, 616, 618, 619, 622, 624, 625, 626, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 649, 651, 654, 655, 656, 657, 658, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 689, 691, 692, 694, 699, 702, 705, 709, 712, 714, 720, 724, 725, 727, 728, 730, 731, 882, 916, 919, 923, 931, 933, 945, 949, 1081, 1117, 1122, 1130], "vector": [9, 13, 106, 108, 110, 111, 114, 116, 117, 170, 198, 204, 221, 247, 248, 261, 267, 268, 270, 452, 454, 478, 479, 495, 496, 503, 509, 510, 511, 512, 523, 541, 543, 547, 551, 553, 558, 563, 587, 589, 590, 591, 593, 596, 598, 611, 615, 629, 631, 632, 639, 640, 641, 642, 644, 650, 651, 655, 660, 661, 662, 669, 670, 671, 672, 673, 675, 695, 696, 699, 725, 727, 731, 949, 1005, 1083, 1100, 1122], "dictionari": [9, 29, 63, 90, 165, 175, 180, 181, 182, 184, 187, 188, 189, 192, 194, 198, 200, 201, 206, 210, 211, 213, 214, 216, 217, 219, 220, 222, 224, 226, 227, 230, 233, 234, 236, 237, 239, 240, 242, 245, 252, 254, 255, 257, 262, 264, 265, 269, 271, 272, 274, 275, 276, 278, 281, 282, 284, 287, 290, 293, 294, 296, 297, 322, 327, 330, 696, 731, 977, 980, 984, 985, 986, 987, 990, 991, 995, 999, 1033, 1035, 1043, 1048, 1053, 1054, 1059, 1062, 1063, 1064, 1066, 1068, 1069, 1074, 1076, 1084, 1094, 1101, 1104, 1140], "valu": [9, 58, 84, 108, 114, 115, 116, 117, 122, 123, 143, 145, 147, 158, 160, 162, 163, 164, 176, 180, 182, 184, 186, 191, 193, 198, 199, 200, 202, 203, 204, 205, 207, 208, 210, 212, 213, 215, 216, 218, 219, 221, 223, 225, 226, 228, 231, 235, 238, 240, 241, 252, 253, 256, 259, 261, 263, 273, 276, 277, 282, 283, 295, 308, 316, 322, 344, 349, 351, 353, 354, 364, 367, 368, 369, 377, 379, 380, 388, 390, 392, 393, 398, 409, 413, 415, 417, 421, 426, 427, 431, 434, 439, 441, 444, 449, 452, 454, 468, 469, 471, 474, 478, 480, 483, 485, 486, 488, 499, 500, 501, 503, 506, 513, 525, 542, 551, 552, 553, 556, 562, 565, 603, 605, 607, 608, 649, 651, 652, 658, 660, 669, 675, 678, 681, 682, 683, 687, 696, 707, 721, 725, 728, 730, 731, 734, 737, 756, 758, 760, 762, 778, 788, 810, 823, 874, 883, 904, 912, 914, 915, 917, 918, 919, 922, 925, 931, 934, 945, 946, 949, 950, 969, 971, 973, 976, 980, 984, 986, 988, 995, 1006, 1007, 1008, 1016, 1018, 1021, 1023, 1024, 1028, 1033, 1036, 1041, 1043, 1046, 1053, 1055, 1076, 1079, 1081, 1084, 1087, 1088, 1094, 1095, 1098, 1099, 1100, 1103, 1117], "map": [9, 32, 34, 42, 59, 62, 106, 108, 109, 116, 117, 123, 145, 152, 170, 176, 190, 192, 194, 198, 200, 201, 203, 204, 207, 215, 216, 218, 233, 247, 248, 250, 256, 268, 270, 277, 296, 303, 322, 425, 450, 454, 483, 487, 488, 489, 495, 506, 512, 541, 543, 547, 602, 605, 606, 607, 608, 611, 615, 644, 647, 651, 655, 661, 687, 706, 707, 708, 710, 730, 731, 762, 774, 936, 945, 946, 994, 998, 1007, 1008, 1027, 1083, 1103, 1134, 1144], "mathematisch": [9, 198, 256], "mengen": [9, 187, 188, 198, 1140], "while": [9, 13, 29, 53, 54, 63, 90, 136, 147, 149, 150, 158, 164, 175, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 193, 194, 195, 198, 199, 200, 202, 203, 206, 207, 208, 210, 212, 213, 216, 217, 218, 221, 222, 224, 226, 227, 229, 230, 232, 233, 234, 235, 237, 239, 240, 242, 252, 255, 256, 262, 264, 265, 269, 271, 275, 276, 277, 281, 282, 283, 293, 294, 295, 297, 308, 309, 310, 311, 312, 313, 314, 322, 325, 327, 345, 347, 351, 353, 355, 362, 367, 369, 383, 384, 390, 391, 395, 397, 401, 404, 405, 408, 410, 412, 417, 419, 421, 426, 427, 437, 449, 454, 468, 475, 493, 542, 578, 582, 583, 586, 588, 590, 593, 608, 631, 637, 647, 649, 660, 675, 676, 677, 683, 687, 708, 719, 721, 725, 728, 730, 731, 755, 758, 766, 768, 778, 780, 786, 787, 793, 796, 799, 811, 815, 822, 874, 875, 882, 883, 895, 900, 901, 902, 903, 910, 919, 925, 930, 931, 934, 936, 942, 945, 949, 964, 969, 977, 978, 979, 980, 984, 987, 999, 1000, 1004, 1009, 1014, 1026, 1032, 1033, 1034, 1035, 1039, 1045, 1047, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1082, 1083, 1086, 1090, 1104, 1127, 1131, 1133, 1135, 1140], "function": [9, 21, 29, 38, 50, 59, 62, 63, 78, 80, 82, 90, 97, 110, 111, 114, 115, 123, 136, 140, 143, 145, 154, 162, 175, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 191, 194, 195, 198, 200, 201, 203, 204, 206, 210, 211, 213, 214, 216, 217, 218, 219, 221, 222, 224, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 242, 245, 246, 253, 255, 257, 259, 261, 262, 264, 265, 268, 270, 271, 272, 273, 275, 276, 278, 281, 282, 283, 289, 296, 307, 317, 318, 324, 325, 327, 340, 344, 345, 351, 354, 358, 359, 360, 365, 370, 374, 375, 383, 384, 385, 386, 388, 390, 395, 397, 398, 401, 402, 403, 404, 406, 408, 409, 410, 412, 417, 419, 421, 423, 426, 427, 430, 438, 444, 452, 457, 469, 490, 494, 495, 506, 509, 510, 511, 512, 514, 523, 536, 542, 547, 551, 554, 557, 559, 560, 561, 562, 568, 573, 576, 578, 592, 598, 602, 611, 614, 615, 622, 625, 628, 629, 630, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 651, 652, 655, 656, 664, 667, 673, 675, 684, 685, 686, 687, 689, 691, 692, 697, 703, 707, 709, 710, 720, 728, 729, 730, 731, 742, 745, 748, 749, 755, 759, 762, 766, 769, 772, 778, 780, 782, 787, 793, 794, 796, 797, 798, 799, 808, 811, 812, 874, 882, 895, 897, 903, 904, 905, 912, 913, 915, 920, 921, 922, 928, 929, 931, 932, 935, 937, 950, 952, 960, 970, 977, 980, 981, 982, 983, 991, 999, 1001, 1004, 1005, 1009, 1011, 1032, 1033, 1034, 1035, 1038, 1041, 1042, 1045, 1046, 1047, 1048, 1053, 1056, 1057, 1059, 1060, 1061, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1086, 1092, 1103, 1106, 1110, 1122, 1130, 1131, 1132, 1140], "xx": [10, 212, 243, 277, 283], "yy": 10, "kur": [11, 23, 161, 163, 166, 178, 340, 1125, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1143, 1144, 1146], "fand": [11, 178, 340], "team": [11, 112, 123, 150, 155, 158, 159, 170, 178, 179, 180, 195, 204, 229, 271, 340, 817, 823, 830, 832, 978, 1075, 1124, 1132], "statt": [11, 23, 178, 340, 1141, 1142, 1148], "wurd": [11, 152, 166, 170, 176, 178, 187, 322, 327, 340, 1129, 1140, 1141, 1147], "\u00fcber": [11, 23, 151, 152, 157, 161, 162, 166, 170, 178, 187, 188, 192, 201, 206, 232, 323, 340, 1124, 1134, 1140, 1141, 1146, 1147], "meinen": [11, 23, 178, 206, 222, 234, 340], "partner": [11, 23, 178, 340, 1124], "durat": [12, 27, 148, 158, 402, 436, 506, 717, 721, 722, 977, 999, 1075, 1104, 1132, 1133, 1135, 1145], "each": [12, 40, 63, 76, 106, 110, 111, 117, 143, 144, 145, 158, 164, 182, 183, 195, 212, 215, 218, 228, 231, 235, 268, 270, 277, 307, 313, 319, 322, 327, 395, 420, 423, 425, 449, 457, 490, 504, 505, 561, 647, 722, 729, 766, 774, 778, 805, 811, 832, 836, 838, 882, 883, 884, 922, 926, 934, 968, 980, 983, 988, 994, 1054, 1075, 1081, 1083, 1084, 1085, 1100, 1105, 1135, 1145], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 63, 65, 68, 75, 80, 83, 84, 90, 97, 112, 114, 123, 131, 136, 137, 139, 143, 144, 145, 147, 150, 158, 167, 171, 172, 175, 179, 180, 181, 182, 183, 184, 187, 194, 195, 200, 203, 204, 205, 206, 210, 212, 213, 216, 219, 220, 221, 222, 224, 226, 228, 229, 231, 232, 234, 236, 237, 240, 249, 252, 254, 255, 257, 258, 259, 265, 269, 270, 275, 276, 279, 281, 282, 284, 293, 294, 297, 303, 308, 309, 310, 311, 312, 313, 322, 324, 327, 333, 363, 368, 377, 379, 407, 410, 411, 413, 419, 423, 425, 429, 443, 449, 542, 551, 552, 575, 582, 648, 657, 661, 662, 692, 696, 701, 710, 711, 729, 731, 747, 749, 778, 788, 797, 805, 806, 824, 841, 875, 882, 883, 884, 895, 899, 905, 920, 937, 945, 971, 977, 978, 980, 987, 988, 995, 999, 1007, 1018, 1026, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1083, 1089, 1090, 1091, 1092, 1096, 1105, 1110, 1119, 1132, 1133, 1140, 1145], "book": [12, 29, 32, 139, 143, 148, 158, 159, 170, 179, 204, 226, 262, 271, 272, 340, 430, 436, 838, 977, 999, 1075, 1090, 1104, 1131, 1133, 1135, 1145], "separ": [12, 38, 78, 103, 104, 114, 143, 170, 172, 182, 202, 215, 221, 231, 235, 238, 241, 256, 259, 262, 263, 265, 273, 277, 285, 301, 352, 390, 411, 431, 434, 441, 453, 457, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 525, 542, 547, 572, 693, 721, 729, 731, 746, 747, 780, 814, 818, 823, 869, 871, 874, 884, 920, 936, 952, 954, 957, 958, 959, 960, 962, 970, 975, 1032, 1049, 1054, 1075, 1084, 1117, 1127, 1132, 1145], "requir": [12, 13, 27, 37, 39, 42, 61, 89, 108, 112, 114, 119, 135, 139, 143, 144, 145, 148, 150, 154, 163, 171, 173, 175, 179, 183, 191, 202, 205, 216, 219, 221, 223, 228, 229, 243, 259, 268, 270, 271, 294, 333, 344, 377, 407, 409, 432, 441, 444, 452, 472, 474, 494, 503, 506, 525, 574, 587, 603, 640, 651, 657, 658, 664, 667, 672, 673, 697, 704, 875, 883, 884, 895, 900, 936, 938, 945, 964, 969, 977, 990, 999, 1000, 1018, 1027, 1028, 1031, 1084, 1090, 1104, 1105, 1110, 1112, 1113, 1119, 1131, 1133, 1135, 1145, 1148], "particip": [12, 148, 150, 172, 175, 259, 290, 490, 877, 1000, 1014, 1034, 1075, 1145], "should": [12, 37, 43, 45, 55, 57, 77, 80, 112, 115, 122, 123, 139, 144, 145, 148, 150, 154, 158, 165, 171, 175, 179, 204, 205, 219, 225, 231, 235, 259, 294, 297, 308, 313, 328, 329, 343, 368, 390, 405, 415, 419, 429, 434, 441, 447, 452, 457, 458, 460, 461, 469, 506, 550, 557, 559, 655, 658, 660, 664, 675, 719, 737, 756, 768, 770, 774, 778, 803, 822, 838, 845, 850, 882, 883, 884, 891, 910, 926, 937, 975, 984, 988, 996, 1007, 1041, 1045, 1054, 1082, 1092, 1105, 1110, 1111, 1145], "fluent": [12, 282, 323, 324, 1076, 1145], "target": [12, 17, 40, 63, 108, 144, 146, 154, 195, 204, 286, 302, 324, 413, 416, 432, 435, 436, 442, 445, 458, 562, 731, 751, 753, 758, 778, 840, 905, 930, 954, 955, 964, 966, 973, 977, 984, 986, 999, 1083, 1090, 1104, 1112, 1135], "audienc": [12, 143, 145, 175, 180, 297, 977, 999, 1031, 1090, 1104, 1130, 1135], "english": [12, 29, 106, 136, 163, 182, 189, 200, 210, 213, 222, 226, 232, 234, 237, 239, 240, 255, 262, 267, 275, 276, 281, 282, 294, 320, 321, 322, 327, 436, 731, 977, 999, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074, 1075, 1089, 1090, 1104], "german": [12, 14, 436, 977, 999, 1075, 1089, 1090, 1092, 1104], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 63, 65, 77, 78, 85, 89, 99, 106, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 128, 129, 131, 136, 139, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 160, 163, 164, 165, 173, 175, 179, 180, 189, 194, 195, 199, 202, 204, 205, 210, 212, 215, 216, 218, 219, 221, 222, 228, 231, 235, 240, 243, 252, 256, 259, 261, 265, 267, 268, 269, 270, 272, 276, 277, 285, 286, 294, 301, 302, 305, 308, 313, 322, 325, 326, 328, 333, 336, 341, 344, 353, 354, 355, 357, 363, 380, 393, 399, 402, 412, 418, 431, 432, 437, 441, 442, 443, 444, 448, 449, 452, 453, 454, 462, 463, 464, 465, 466, 470, 473, 474, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 513, 514, 523, 524, 525, 533, 539, 542, 547, 549, 550, 551, 552, 557, 559, 560, 565, 566, 568, 583, 587, 600, 614, 618, 619, 621, 622, 634, 638, 640, 641, 643, 647, 650, 655, 657, 658, 659, 660, 662, 669, 675, 689, 690, 692, 695, 696, 697, 699, 701, 705, 706, 707, 708, 709, 710, 719, 721, 726, 729, 732, 734, 737, 739, 741, 742, 744, 746, 747, 749, 751, 753, 756, 758, 764, 766, 768, 770, 772, 774, 778, 781, 785, 786, 792, 794, 804, 805, 806, 810, 813, 816, 817, 834, 838, 839, 841, 842, 844, 847, 849, 865, 875, 882, 883, 884, 905, 908, 910, 911, 912, 916, 919, 921, 923, 926, 933, 945, 949, 952, 953, 954, 955, 960, 962, 965, 966, 967, 968, 969, 970, 973, 974, 975, 976, 977, 980, 988, 989, 992, 993, 995, 998, 1000, 1002, 1005, 1013, 1016, 1017, 1018, 1028, 1031, 1034, 1043, 1047, 1050, 1061, 1072, 1073, 1079, 1081, 1084, 1089, 1090, 1092, 1094, 1097, 1098, 1099, 1104, 1107, 1110, 1115, 1117, 1122, 1132, 1133, 1135, 1145], "also": [12, 13, 23, 27, 31, 57, 63, 65, 112, 115, 117, 118, 120, 121, 122, 139, 144, 145, 147, 148, 150, 151, 153, 154, 155, 162, 164, 165, 166, 167, 170, 172, 173, 175, 176, 179, 185, 187, 205, 212, 218, 228, 229, 231, 235, 241, 247, 248, 250, 259, 261, 268, 269, 270, 276, 277, 286, 294, 302, 308, 340, 431, 432, 437, 442, 449, 458, 468, 471, 473, 474, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 513, 514, 524, 549, 550, 551, 552, 557, 559, 565, 583, 600, 603, 618, 619, 621, 647, 655, 658, 659, 660, 662, 675, 686, 689, 692, 695, 696, 697, 699, 701, 705, 707, 710, 711, 719, 721, 729, 768, 778, 783, 804, 816, 822, 823, 838, 842, 844, 847, 849, 869, 875, 885, 894, 895, 908, 912, 916, 923, 933, 954, 955, 962, 967, 969, 971, 973, 974, 975, 977, 980, 988, 992, 998, 1000, 1004, 1007, 1017, 1018, 1021, 1031, 1043, 1047, 1050, 1061, 1081, 1082, 1090, 1094, 1097, 1098, 1099, 1104, 1107, 1110, 1132, 1134, 1140, 1141, 1145], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 106, 126, 138, 139, 144, 148, 155, 156, 158, 166, 167, 170, 171, 172, 175, 178, 202, 212, 218, 228, 231, 261, 268, 270, 273, 285, 301, 330, 340, 432, 434, 435, 436, 437, 438, 440, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 456, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 503, 505, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 547, 627, 707, 732, 734, 737, 742, 747, 753, 756, 764, 885, 891, 893, 894, 895, 916, 919, 942, 945, 949, 976, 977, 979, 999, 1000, 1028, 1031, 1034, 1078, 1079, 1082, 1083, 1090, 1104, 1115, 1119, 1124, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148], "sourc": [13, 23, 28, 30, 39, 61, 65, 68, 73, 86, 110, 111, 114, 123, 142, 143, 144, 145, 148, 149, 150, 154, 158, 160, 161, 163, 164, 171, 184, 189, 194, 212, 218, 226, 228, 231, 235, 240, 248, 250, 252, 255, 256, 259, 280, 287, 385, 386, 389, 424, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 453, 504, 507, 508, 622, 655, 658, 664, 669, 675, 705, 746, 776, 779, 790, 822, 838, 839, 871, 912, 952, 953, 955, 956, 958, 962, 964, 966, 967, 968, 969, 970, 1007, 1063, 1072, 1112, 1119, 1125, 1135, 1142], "under": [13, 21, 35, 55, 122, 142, 143, 145, 150, 171, 182, 184, 294, 340, 454, 469, 506, 814, 815, 882, 883, 884, 885, 886, 887, 894, 895, 937, 952, 976, 983, 990, 1024, 1110], "why": [13, 24, 28, 45, 50, 65, 66, 69, 114, 123, 139, 143, 144, 149, 155, 175, 179, 180, 182, 184, 195, 204, 224, 262, 265, 271, 272, 293, 303, 322, 325, 326, 329, 343, 355, 361, 368, 371, 389, 400, 405, 406, 411, 415, 418, 425, 430, 468, 491, 550, 565, 583, 596, 622, 625, 641, 647, 648, 664, 695, 711, 714, 727, 746, 758, 774, 778, 809, 815, 818, 875, 928, 931, 949, 964, 966, 974, 975, 978, 1024, 1026, 1076, 1081, 1091, 1099], "appli": [13, 76, 83, 140, 145, 184, 202, 261, 267, 294, 372, 407, 413, 431, 562, 662, 697, 751, 778, 818, 821, 838, 882, 883, 908, 969, 1095], "websit": [13, 23, 144, 158, 1106, 1119], "contain": [13, 17, 29, 35, 38, 61, 106, 107, 108, 110, 111, 112, 114, 139, 140, 146, 149, 154, 158, 163, 165, 170, 171, 173, 175, 176, 179, 182, 184, 202, 204, 205, 212, 218, 228, 229, 231, 235, 242, 243, 246, 247, 248, 261, 268, 277, 294, 307, 308, 317, 324, 325, 331, 333, 370, 389, 403, 423, 425, 431, 433, 434, 438, 452, 468, 490, 493, 495, 504, 505, 506, 512, 513, 514, 547, 548, 550, 558, 567, 584, 587, 600, 611, 615, 629, 638, 643, 644, 650, 655, 695, 707, 710, 725, 726, 727, 729, 731, 734, 739, 747, 749, 751, 772, 774, 778, 798, 805, 806, 809, 818, 820, 843, 844, 845, 850, 857, 882, 883, 884, 891, 912, 920, 921, 936, 946, 952, 955, 960, 964, 969, 976, 978, 983, 1000, 1022, 1025, 1031, 1033, 1045, 1054, 1058, 1073, 1076, 1078, 1082, 1084, 1087, 1089, 1094, 1105, 1106, 1110, 1116, 1117, 1129, 1130], "give": [13, 27, 40, 53, 59, 62, 110, 111, 116, 136, 140, 142, 143, 145, 150, 153, 164, 167, 171, 172, 179, 184, 195, 203, 235, 240, 252, 268, 270, 341, 355, 356, 371, 387, 390, 398, 423, 429, 431, 434, 449, 501, 503, 519, 536, 572, 587, 633, 641, 664, 693, 778, 804, 811, 829, 831, 883, 884, 903, 904, 916, 919, 938, 940, 945, 946, 952, 955, 964, 973, 976, 999, 1016, 1028, 1076, 1080, 1081, 1105, 1110, 1112, 1130, 1133, 1135], "structur": [13, 29, 65, 78, 89, 108, 123, 143, 158, 180, 194, 221, 222, 229, 231, 232, 234, 237, 240, 243, 246, 255, 262, 265, 272, 276, 282, 286, 287, 290, 294, 298, 302, 322, 326, 328, 330, 345, 355, 363, 368, 397, 399, 403, 404, 408, 417, 420, 421, 426, 427, 431, 432, 436, 444, 451, 469, 494, 504, 523, 572, 605, 638, 647, 649, 687, 728, 730, 731, 766, 768, 772, 776, 778, 798, 834, 865, 901, 907, 923, 928, 946, 1016, 1018, 1058, 1064, 1101, 1104, 1111, 1118, 1130], "much": [13, 27, 35, 38, 63, 80, 116, 121, 142, 143, 144, 145, 150, 153, 158, 167, 173, 175, 179, 180, 181, 183, 205, 216, 218, 219, 221, 223, 229, 243, 244, 247, 248, 250, 262, 265, 271, 272, 293, 294, 297, 303, 325, 357, 368, 379, 415, 419, 429, 444, 469, 548, 558, 564, 583, 604, 624, 647, 648, 657, 658, 662, 675, 687, 688, 689, 693, 695, 697, 707, 711, 730, 731, 734, 749, 756, 764, 766, 772, 774, 778, 817, 818, 867, 875, 878, 881, 883, 895, 937, 946, 949, 950, 952, 954, 964, 971, 974, 975, 988, 989, 994, 995, 998, 1007, 1024, 1076, 1082, 1083, 1110, 1112, 1130], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 62, 63, 65, 77, 78, 114, 115, 116, 117, 118, 121, 123, 136, 142, 143, 144, 145, 147, 148, 150, 153, 154, 158, 163, 166, 167, 171, 172, 173, 175, 179, 181, 184, 194, 195, 202, 204, 205, 212, 218, 219, 221, 222, 228, 231, 244, 246, 248, 250, 256, 259, 261, 262, 265, 268, 270, 294, 297, 308, 313, 325, 333, 354, 357, 361, 383, 385, 390, 395, 407, 411, 419, 422, 429, 435, 439, 441, 444, 447, 448, 449, 469, 493, 503, 504, 505, 506, 507, 519, 525, 533, 536, 542, 551, 554, 557, 561, 562, 563, 565, 586, 603, 612, 619, 621, 624, 627, 628, 637, 638, 646, 647, 650, 651, 657, 658, 675, 693, 695, 696, 706, 707, 710, 711, 717, 727, 729, 732, 734, 736, 739, 747, 749, 751, 756, 762, 768, 770, 772, 774, 778, 783, 791, 794, 798, 806, 809, 810, 814, 815, 817, 820, 838, 840, 843, 845, 850, 867, 875, 876, 878, 882, 883, 884, 885, 894, 895, 899, 903, 905, 908, 912, 918, 920, 921, 939, 946, 950, 952, 954, 955, 968, 971, 973, 975, 978, 980, 988, 993, 998, 1000, 1002, 1004, 1006, 1008, 1012, 1016, 1018, 1021, 1022, 1025, 1028, 1030, 1033, 1041, 1044, 1054, 1055, 1058, 1064, 1065, 1066, 1067, 1068, 1070, 1075, 1078, 1081, 1083, 1084, 1092, 1094, 1095, 1100, 1110, 1111, 1112, 1117, 1119, 1130, 1135], "topic": [13, 16, 27, 28, 29, 59, 62, 69, 78, 90, 97, 106, 114, 136, 140, 145, 149, 150, 163, 167, 180, 183, 184, 185, 187, 195, 200, 210, 213, 219, 229, 231, 232, 247, 248, 252, 270, 272, 276, 308, 309, 310, 311, 313, 321, 322, 327, 328, 333, 335, 336, 339, 340, 341, 525, 566, 568, 627, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 729, 778, 780, 790, 801, 808, 810, 812, 819, 824, 828, 830, 832, 833, 858, 868, 881, 883, 886, 887, 889, 905, 955, 964, 965, 969, 977, 982, 999, 1000, 1004, 1031, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1083, 1089, 1104, 1107, 1110, 1114, 1132, 1133, 1140], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 62, 63, 78, 80, 82, 110, 111, 112, 125, 131, 143, 144, 145, 146, 147, 150, 154, 158, 167, 171, 175, 179, 180, 182, 183, 184, 195, 203, 212, 218, 219, 228, 231, 235, 256, 277, 284, 285, 294, 297, 301, 308, 325, 329, 333, 353, 359, 368, 377, 395, 398, 409, 425, 429, 432, 434, 440, 441, 444, 445, 446, 452, 533, 548, 550, 551, 557, 559, 560, 563, 564, 565, 575, 603, 625, 648, 657, 658, 689, 693, 705, 707, 709, 711, 722, 729, 731, 749, 768, 770, 804, 811, 814, 815, 831, 836, 838, 840, 860, 877, 882, 883, 884, 887, 891, 894, 903, 904, 910, 911, 923, 928, 931, 937, 946, 950, 952, 954, 964, 971, 973, 975, 984, 987, 988, 989, 992, 995, 998, 1002, 1004, 1005, 1006, 1007, 1013, 1014, 1018, 1020, 1022, 1024, 1025, 1038, 1054, 1081, 1085, 1088, 1090, 1092, 1110, 1122, 1130, 1132, 1133, 1135, 1145], "exampl": [13, 17, 24, 29, 39, 40, 65, 78, 87, 112, 114, 115, 123, 136, 137, 139, 142, 143, 144, 145, 150, 153, 154, 158, 162, 163, 164, 167, 171, 175, 179, 181, 183, 194, 202, 204, 208, 212, 215, 218, 219, 221, 227, 228, 229, 232, 233, 234, 236, 240, 243, 252, 259, 261, 262, 265, 269, 271, 272, 276, 277, 285, 287, 290, 293, 294, 297, 301, 310, 313, 322, 330, 333, 346, 352, 353, 354, 362, 368, 420, 432, 443, 444, 445, 452, 456, 458, 468, 469, 471, 473, 493, 494, 506, 525, 561, 563, 565, 574, 583, 590, 628, 637, 655, 664, 669, 684, 685, 689, 690, 694, 697, 701, 707, 711, 729, 731, 737, 749, 756, 778, 805, 806, 810, 815, 835, 838, 848, 860, 867, 875, 882, 883, 884, 885, 894, 898, 905, 908, 909, 910, 911, 912, 920, 927, 946, 949, 951, 952, 953, 954, 955, 956, 962, 968, 969, 970, 971, 974, 975, 976, 980, 987, 994, 997, 999, 1000, 1001, 1003, 1011, 1016, 1025, 1031, 1033, 1049, 1054, 1072, 1073, 1074, 1082, 1083, 1089, 1091, 1097, 1098, 1104, 1109, 1117, 1119, 1132, 1133], "here": [13, 14, 63, 68, 73, 74, 77, 78, 80, 81, 85, 106, 112, 129, 131, 140, 142, 143, 145, 146, 148, 149, 150, 153, 154, 158, 163, 165, 171, 172, 173, 175, 179, 181, 184, 194, 195, 199, 202, 203, 204, 205, 210, 213, 221, 222, 226, 229, 231, 235, 248, 250, 252, 256, 259, 261, 265, 268, 270, 277, 280, 295, 305, 308, 313, 319, 322, 325, 326, 328, 341, 344, 409, 411, 418, 425, 441, 447, 449, 469, 474, 485, 488, 491, 493, 504, 506, 508, 523, 525, 533, 547, 550, 551, 554, 560, 566, 568, 572, 584, 612, 618, 638, 640, 641, 647, 658, 664, 669, 675, 685, 689, 694, 697, 699, 705, 707, 710, 719, 732, 746, 751, 753, 756, 768, 774, 778, 804, 838, 875, 877, 882, 883, 884, 891, 895, 902, 908, 912, 918, 923, 936, 945, 949, 950, 961, 964, 968, 970, 973, 974, 975, 976, 988, 991, 995, 1000, 1003, 1004, 1011, 1017, 1027, 1028, 1034, 1055, 1058, 1075, 1081, 1082, 1083, 1084, 1089, 1103, 1110, 1112, 1115, 1119, 1133, 1135], "discuss": [13, 42, 50, 114, 123, 175, 179, 180, 182, 184, 219, 229, 265, 269, 270, 293, 322, 326, 329, 330, 333, 335, 336, 340, 442, 530, 533, 536, 539, 542, 545, 715, 721, 758, 791, 838, 945, 949, 978, 1117, 1119, 1122, 1133], "over": [13, 33, 34, 35, 38, 42, 61, 65, 89, 97, 116, 117, 123, 136, 139, 140, 142, 143, 145, 147, 148, 153, 163, 167, 175, 179, 181, 182, 183, 194, 199, 202, 204, 205, 212, 217, 218, 219, 221, 224, 227, 255, 259, 262, 265, 271, 272, 288, 293, 297, 307, 322, 325, 368, 379, 380, 395, 409, 429, 439, 447, 457, 471, 548, 554, 582, 600, 612, 640, 647, 695, 696, 714, 725, 778, 875, 879, 883, 885, 891, 912, 926, 934, 937, 952, 964, 966, 971, 974, 1011, 1024, 1028], "lwn": [13, 39, 160, 758, 770, 788, 1125], "attribut": [13, 140, 143, 145, 160, 179, 193, 199, 203, 212, 215, 218, 223, 225, 230, 231, 235, 238, 241, 245, 246, 253, 256, 260, 263, 273, 277, 283, 295, 315, 317, 326, 333, 407, 423, 425, 437, 452, 719, 729, 810, 816, 837, 841, 908, 920, 921, 938, 939, 946, 950, 974, 975, 988, 990, 1001, 1027, 1081, 1146], "sharealik": 13, "cc": [13, 23, 32, 125, 161, 169, 170, 171, 248, 432, 454, 503, 505, 506, 526, 529, 532, 533, 535, 536, 538, 539, 541, 542, 544, 567, 705, 706, 711, 756, 944, 945, 948, 949, 954, 1116, 1117, 1119, 1121, 1122], "BY": [13, 23, 35, 675], "sa": [13, 23, 32, 936], "don": [13, 24, 58, 61, 78, 84, 114, 131, 136, 142, 143, 144, 145, 148, 149, 150, 158, 173, 175, 179, 183, 194, 195, 205, 212, 216, 218, 219, 221, 228, 231, 283, 295, 330, 354, 395, 407, 410, 411, 413, 419, 425, 429, 431, 448, 505, 533, 539, 548, 549, 564, 565, 572, 582, 618, 625, 655, 658, 660, 675, 689, 690, 702, 711, 716, 721, 746, 751, 770, 778, 783, 813, 838, 840, 845, 851, 862, 875, 878, 882, 883, 887, 895, 899, 900, 901, 902, 921, 922, 923, 928, 949, 950, 955, 976, 984, 986, 1000, 1003, 1007, 1031, 1085, 1091, 1098, 1105, 1116, 1122], "t": [13, 24, 43, 50, 58, 61, 63, 65, 78, 84, 114, 131, 136, 140, 142, 144, 145, 148, 149, 150, 153, 154, 158, 160, 162, 173, 175, 176, 179, 182, 183, 186, 191, 193, 194, 195, 199, 205, 208, 212, 215, 216, 218, 219, 221, 223, 225, 228, 229, 231, 235, 238, 241, 244, 250, 253, 256, 261, 262, 263, 265, 267, 273, 277, 283, 295, 308, 314, 316, 317, 319, 330, 342, 344, 345, 347, 353, 354, 364, 379, 385, 387, 390, 395, 405, 407, 409, 410, 411, 413, 419, 425, 429, 431, 434, 448, 501, 503, 505, 525, 533, 539, 548, 549, 551, 558, 564, 565, 572, 574, 575, 582, 586, 618, 625, 647, 648, 650, 655, 657, 658, 660, 664, 665, 666, 667, 675, 678, 689, 690, 695, 701, 702, 705, 706, 707, 709, 711, 714, 716, 719, 721, 737, 746, 751, 758, 770, 772, 778, 783, 795, 798, 804, 805, 806, 813, 815, 838, 839, 840, 844, 845, 851, 857, 860, 862, 875, 878, 882, 883, 884, 887, 891, 895, 899, 900, 901, 902, 909, 921, 922, 923, 928, 938, 945, 946, 949, 950, 952, 953, 955, 964, 967, 970, 976, 977, 984, 986, 988, 996, 1000, 1003, 1006, 1007, 1008, 1014, 1020, 1024, 1026, 1027, 1028, 1031, 1033, 1080, 1085, 1089, 1091, 1098, 1105, 1116, 1117, 1122, 1132], "want": [13, 17, 27, 29, 30, 45, 50, 61, 63, 78, 84, 115, 117, 122, 125, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 163, 166, 171, 175, 179, 182, 183, 194, 195, 202, 205, 212, 219, 223, 225, 259, 261, 262, 265, 287, 308, 319, 333, 355, 367, 383, 411, 423, 425, 429, 433, 434, 449, 452, 473, 492, 501, 506, 525, 536, 549, 554, 557, 565, 590, 625, 641, 655, 660, 675, 696, 701, 707, 709, 710, 711, 729, 734, 753, 778, 783, 813, 815, 817, 820, 835, 838, 839, 857, 875, 878, 882, 883, 884, 895, 899, 900, 901, 902, 907, 921, 936, 938, 939, 940, 949, 952, 954, 964, 966, 968, 971, 972, 973, 974, 975, 976, 977, 979, 983, 990, 995, 999, 1006, 1015, 1018, 1028, 1032, 1034, 1070, 1075, 1085, 1089, 1090, 1092, 1094, 1098, 1110, 1112, 1113, 1117, 1130, 1135], "anybodi": [13, 65, 143, 148, 175, 194, 195, 412, 910, 921, 1122], "monei": [13, 144, 147, 150, 218, 817, 1033], "my": [13, 17, 24, 28, 32, 39, 59, 62, 63, 65, 97, 112, 125, 131, 142, 143, 144, 146, 147, 149, 150, 153, 154, 158, 171, 175, 179, 182, 195, 202, 229, 243, 245, 259, 269, 319, 322, 327, 340, 419, 430, 452, 506, 542, 560, 571, 625, 707, 729, 762, 774, 778, 780, 806, 813, 828, 830, 835, 841, 862, 875, 882, 884, 886, 887, 894, 895, 900, 901, 902, 911, 946, 988, 1007, 1030, 1070, 1092, 1110, 1130], "without": [13, 142, 143, 144, 145, 153, 154, 179, 223, 287, 355, 379, 386, 412, 415, 419, 424, 429, 440, 452, 457, 469, 536, 542, 548, 554, 618, 625, 648, 675, 693, 713, 714, 721, 749, 762, 778, 817, 818, 860, 884, 886, 895, 921, 940, 945, 946, 950, 973, 974, 977, 978, 980, 987, 989, 991, 993, 995, 1002, 1007, 1024, 1110, 1112, 1130, 1135], "modif": [13, 55, 106, 123, 158, 221, 355, 357, 363, 368, 399, 429, 452, 457, 504, 562, 722, 729, 751, 778, 823, 839, 860, 987, 1007, 1024, 1085, 1122], "back": [13, 29, 32, 63, 66, 112, 144, 145, 148, 154, 179, 181, 183, 208, 216, 221, 232, 234, 252, 267, 287, 290, 405, 420, 471, 496, 525, 545, 565, 579, 584, 622, 655, 669, 704, 711, 731, 746, 751, 760, 778, 780, 809, 841, 875, 882, 895, 936, 946, 952, 971, 978, 991, 995, 1007, 1035, 1069, 1070, 1071, 1074, 1100], "m": [13, 23, 32, 38, 61, 127, 129, 144, 145, 146, 148, 150, 153, 158, 171, 176, 181, 186, 195, 199, 208, 209, 210, 212, 216, 231, 235, 241, 243, 248, 260, 295, 318, 322, 323, 324, 329, 343, 431, 454, 500, 503, 504, 505, 506, 542, 567, 675, 697, 706, 746, 747, 753, 756, 788, 815, 817, 838, 882, 895, 940, 993, 1030, 1031, 1038, 1063, 1064, 1081, 1091, 1105, 1110, 1112, 1117], "lawyer": 13, "understand": [13, 114, 142, 143, 145, 149, 150, 153, 154, 158, 167, 175, 179, 204, 231, 262, 265, 268, 270, 271, 272, 287, 290, 293, 297, 324, 333, 361, 409, 418, 425, 457, 493, 634, 655, 664, 685, 696, 778, 817, 823, 875, 995, 1033, 1076, 1081, 1082, 1099, 1130, 1131, 1132], "permit": [13, 145, 150, 195, 259, 319, 530, 551, 558, 882, 893, 937, 1001, 1101], "exactli": [13, 78, 143, 145, 167, 173, 202, 272, 313, 347, 387, 493, 504, 582, 658, 695, 778, 884, 909, 910, 950, 968, 1084, 1104], "gnu": [13, 154, 159, 195, 204, 319, 325, 341, 426, 427, 432, 434, 557, 706, 731, 758, 779, 838, 953, 954, 964, 966, 968, 1128, 1132], "free": [13, 32, 149, 154, 170, 195, 319, 402, 416, 454, 531, 551, 557, 559, 619, 638, 639, 641, 642, 658, 685, 704, 705, 706, 742, 749, 780, 900, 901, 902, 914, 937, 950, 952, 1082, 1092, 1101, 1127], "document": [13, 24, 40, 42, 65, 78, 86, 114, 116, 140, 143, 145, 147, 154, 155, 161, 164, 171, 183, 195, 201, 202, 210, 212, 217, 218, 219, 221, 228, 231, 235, 248, 250, 252, 261, 268, 270, 273, 294, 296, 306, 308, 313, 322, 329, 330, 405, 406, 409, 416, 432, 433, 434, 435, 437, 440, 441, 442, 443, 444, 445, 457, 504, 523, 564, 568, 582, 583, 627, 638, 640, 650, 655, 662, 664, 669, 685, 686, 692, 694, 697, 699, 706, 707, 708, 710, 717, 718, 719, 721, 725, 729, 749, 751, 774, 778, 779, 786, 790, 804, 810, 817, 824, 828, 830, 832, 862, 863, 864, 866, 867, 869, 870, 878, 882, 883, 884, 918, 925, 933, 966, 968, 969, 973, 975, 976, 980, 984, 986, 988, 994, 1011, 1021, 1022, 1072, 1084, 1087, 1094, 1095, 1098, 1100, 1108, 1111, 1118, 1119, 1138, 1139], "ago": [13, 145, 149, 205, 803], "wa": [13, 37, 53, 65, 78, 112, 117, 120, 123, 139, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 158, 160, 162, 163, 164, 166, 170, 171, 176, 178, 179, 182, 186, 192, 193, 199, 202, 205, 208, 209, 219, 221, 223, 225, 232, 235, 244, 256, 263, 269, 272, 277, 295, 303, 322, 327, 340, 343, 390, 415, 435, 539, 547, 548, 557, 558, 603, 632, 639, 640, 641, 642, 643, 644, 651, 655, 658, 713, 729, 731, 753, 760, 768, 774, 813, 835, 865, 867, 875, 884, 911, 931, 950, 975, 1007, 1081, 1095, 1098, 1105, 1110, 1112, 1115, 1125, 1127, 1128, 1129, 1130, 1142, 1148], "debian": [13, 78, 131, 132, 133, 150, 154, 158, 160, 172, 183, 195, 280, 319, 340, 519, 731, 778, 877, 954, 966, 1112, 1117], "resolut": [13, 229, 233, 235, 412, 660, 722, 756, 788, 884], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 61, 62, 63, 65, 68, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 88, 89, 97, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 135, 136, 138, 139, 140, 142, 143, 145, 146, 149, 153, 155, 158, 160, 163, 167, 169, 170, 172, 175, 179, 181, 182, 194, 195, 200, 203, 210, 212, 213, 215, 216, 219, 220, 222, 226, 228, 229, 231, 235, 238, 240, 241, 243, 248, 250, 252, 256, 259, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 276, 277, 282, 285, 290, 293, 294, 297, 301, 303, 307, 308, 313, 319, 322, 325, 327, 328, 331, 340, 351, 354, 355, 358, 359, 360, 363, 365, 374, 375, 377, 379, 380, 384, 385, 386, 389, 390, 391, 393, 397, 398, 401, 404, 408, 412, 413, 417, 419, 420, 421, 425, 426, 427, 429, 431, 432, 434, 439, 440, 441, 442, 445, 447, 448, 450, 451, 454, 457, 458, 459, 461, 468, 471, 472, 473, 491, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 519, 523, 524, 525, 526, 529, 532, 535, 538, 541, 544, 549, 551, 552, 556, 557, 560, 562, 564, 565, 566, 568, 569, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 591, 594, 595, 596, 600, 603, 604, 605, 606, 607, 608, 612, 618, 621, 622, 624, 625, 628, 629, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 644, 646, 647, 649, 650, 651, 652, 654, 656, 658, 662, 664, 669, 675, 677, 684, 685, 687, 689, 690, 692, 694, 697, 702, 706, 707, 708, 709, 711, 713, 717, 719, 722, 725, 728, 729, 730, 731, 736, 737, 739, 741, 744, 746, 747, 749, 751, 753, 756, 758, 762, 764, 766, 770, 772, 774, 778, 779, 781, 783, 791, 792, 794, 797, 798, 804, 805, 806, 809, 813, 814, 817, 818, 820, 822, 824, 830, 835, 838, 840, 843, 844, 845, 847, 857, 863, 865, 869, 874, 875, 878, 879, 881, 885, 886, 887, 894, 895, 898, 904, 905, 908, 909, 910, 912, 916, 918, 919, 921, 923, 924, 925, 927, 928, 931, 933, 934, 937, 938, 941, 944, 945, 946, 948, 949, 950, 952, 955, 962, 963, 966, 967, 968, 969, 970, 974, 977, 978, 980, 981, 982, 983, 984, 987, 988, 993, 995, 997, 999, 1000, 1001, 1003, 1007, 1009, 1011, 1015, 1016, 1017, 1018, 1021, 1024, 1026, 1028, 1031, 1033, 1036, 1037, 1038, 1041, 1042, 1043, 1047, 1049, 1052, 1053, 1054, 1055, 1059, 1061, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1110, 1113, 1116, 1117, 1119, 1121, 1122, 1130, 1132, 1133, 1135], "gfdl": 13, "becaus": [13, 17, 38, 61, 66, 80, 112, 137, 142, 143, 145, 154, 158, 167, 175, 179, 181, 195, 205, 212, 218, 228, 231, 347, 368, 407, 416, 419, 422, 429, 431, 440, 449, 452, 469, 503, 506, 549, 550, 557, 560, 600, 622, 641, 697, 705, 708, 747, 758, 776, 778, 817, 857, 875, 882, 883, 884, 893, 904, 905, 908, 911, 925, 931, 946, 949, 950, 973, 976, 1002, 1032, 1089, 1105, 1112, 1117, 1130], "too": [13, 27, 53, 56, 63, 80, 143, 145, 150, 159, 172, 175, 191, 202, 204, 221, 231, 235, 238, 247, 248, 250, 261, 263, 271, 272, 277, 293, 295, 303, 364, 409, 419, 429, 443, 449, 548, 562, 669, 671, 675, 687, 688, 689, 695, 701, 707, 729, 730, 731, 776, 778, 783, 810, 875, 884, 885, 891, 908, 921, 938, 954, 973, 974, 975, 978, 1024, 1028, 1106, 1130], "restrict": [13, 144, 173, 183, 407, 412, 441, 491, 572, 776, 805, 806, 894, 1089], "articl": [13, 158, 160, 758, 770, 788, 882, 884, 964], "describ": [13, 65, 107, 114, 140, 142, 143, 144, 145, 148, 150, 153, 154, 169, 195, 231, 235, 243, 269, 277, 280, 319, 452, 461, 507, 526, 529, 532, 535, 538, 541, 544, 697, 711, 778, 788, 811, 838, 884, 889, 941, 944, 948, 953, 961, 967, 968, 997, 1081, 1116, 1119, 1121], "pretti": [13, 144, 145, 167, 181, 185, 204, 221, 231, 419, 434, 582, 639, 714, 971, 1101], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 65, 123, 143, 144, 145, 147, 149, 150, 153, 154, 158, 163, 164, 165, 167, 175, 176, 181, 184, 195, 203, 207, 212, 218, 221, 228, 229, 231, 234, 235, 253, 262, 265, 271, 272, 277, 293, 294, 295, 309, 310, 319, 326, 351, 355, 366, 367, 368, 385, 386, 390, 395, 398, 407, 409, 413, 415, 419, 420, 423, 424, 434, 452, 456, 459, 460, 471, 490, 491, 499, 503, 523, 525, 532, 534, 548, 551, 557, 560, 563, 582, 585, 591, 600, 603, 604, 605, 629, 640, 648, 653, 660, 662, 664, 667, 669, 693, 694, 697, 709, 710, 711, 717, 746, 747, 751, 756, 758, 760, 768, 770, 776, 778, 794, 810, 816, 822, 838, 839, 841, 865, 875, 882, 883, 884, 885, 894, 895, 901, 907, 921, 922, 923, 936, 940, 946, 950, 952, 968, 974, 975, 978, 983, 984, 987, 989, 993, 995, 1011, 1013, 1016, 1021, 1023, 1024, 1025, 1058, 1066, 1068, 1082, 1084, 1085, 1088, 1089, 1092, 1094, 1097, 1098, 1099, 1110, 1112, 1117], "issu": [13, 143, 146, 153, 154, 205, 270, 271, 272, 293, 342, 355, 413, 914, 940, 949, 966, 984], "how": [13, 23, 24, 37, 42, 45, 50, 65, 70, 71, 75, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 104, 112, 114, 116, 123, 129, 131, 139, 140, 143, 146, 148, 149, 150, 154, 155, 158, 163, 165, 167, 171, 172, 178, 179, 180, 181, 182, 183, 184, 195, 200, 202, 203, 204, 210, 212, 213, 215, 216, 218, 219, 221, 224, 226, 229, 240, 243, 247, 248, 252, 259, 262, 265, 267, 268, 269, 270, 271, 272, 276, 282, 285, 287, 293, 294, 297, 301, 308, 324, 325, 329, 340, 355, 361, 386, 393, 395, 396, 407, 409, 411, 413, 418, 422, 429, 431, 433, 440, 454, 460, 490, 493, 501, 504, 525, 542, 549, 557, 558, 561, 572, 582, 621, 625, 631, 641, 647, 669, 706, 709, 710, 711, 721, 725, 726, 732, 739, 741, 742, 756, 768, 778, 783, 794, 805, 806, 811, 818, 838, 857, 865, 871, 875, 882, 883, 884, 892, 900, 901, 902, 905, 908, 911, 912, 918, 931, 934, 937, 938, 940, 945, 949, 950, 962, 964, 966, 968, 981, 982, 999, 1000, 1003, 1017, 1020, 1034, 1072, 1073, 1076, 1081, 1082, 1095, 1097, 1098, 1101, 1110, 1113, 1119, 1122, 1132, 1133, 1135], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 62, 63, 78, 83, 85, 89, 91, 97, 114, 115, 118, 122, 123, 126, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 158, 159, 160, 162, 163, 164, 167, 171, 172, 175, 179, 180, 183, 193, 194, 195, 203, 205, 212, 215, 219, 221, 223, 225, 226, 229, 231, 234, 235, 241, 243, 245, 248, 250, 259, 262, 265, 294, 295, 308, 310, 317, 319, 322, 324, 358, 377, 379, 380, 382, 383, 384, 389, 390, 391, 397, 398, 401, 404, 407, 408, 415, 417, 421, 426, 427, 429, 431, 433, 449, 454, 457, 460, 468, 469, 490, 492, 504, 525, 533, 539, 542, 548, 550, 562, 566, 568, 569, 572, 609, 622, 625, 639, 640, 641, 649, 655, 660, 664, 686, 687, 693, 697, 699, 705, 706, 707, 709, 710, 711, 727, 728, 730, 731, 751, 755, 766, 770, 774, 776, 778, 803, 807, 808, 811, 815, 818, 822, 823, 832, 834, 839, 843, 845, 874, 875, 878, 882, 883, 884, 886, 887, 893, 895, 899, 900, 901, 902, 903, 904, 910, 921, 922, 924, 928, 934, 936, 937, 940, 942, 945, 950, 968, 969, 971, 973, 975, 976, 977, 980, 989, 999, 1000, 1001, 1004, 1007, 1011, 1017, 1018, 1031, 1033, 1052, 1076, 1082, 1083, 1090, 1091, 1098, 1101, 1110, 1117, 1119, 1135], "choos": [13, 27, 142, 143, 154, 167, 175, 542, 778, 875, 882, 884, 967, 1000, 1007, 1020, 1082, 1089, 1112], "altogeth": [13, 153, 202, 271, 272, 293, 658, 786, 978], "have": [13, 27, 28, 30, 37, 43, 50, 65, 69, 80, 82, 84, 102, 110, 111, 114, 115, 116, 120, 121, 123, 125, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 163, 164, 165, 167, 171, 172, 173, 175, 179, 182, 183, 194, 195, 200, 202, 203, 204, 205, 212, 215, 216, 218, 219, 226, 231, 235, 238, 248, 250, 252, 259, 261, 262, 265, 268, 269, 271, 272, 276, 277, 297, 308, 313, 322, 325, 327, 354, 355, 359, 368, 387, 389, 409, 411, 414, 415, 419, 423, 425, 430, 432, 435, 439, 440, 444, 447, 448, 449, 453, 456, 457, 469, 490, 493, 503, 506, 515, 542, 548, 552, 556, 558, 560, 565, 566, 568, 569, 600, 606, 622, 629, 634, 640, 641, 642, 646, 647, 651, 659, 662, 664, 675, 684, 689, 693, 694, 696, 699, 702, 706, 707, 710, 711, 726, 742, 746, 747, 749, 751, 756, 758, 770, 778, 781, 786, 794, 803, 811, 815, 817, 820, 821, 823, 830, 845, 865, 875, 882, 883, 884, 885, 887, 891, 893, 895, 899, 900, 902, 907, 912, 914, 920, 928, 945, 949, 950, 953, 954, 962, 966, 967, 970, 971, 973, 976, 984, 988, 989, 993, 1003, 1006, 1007, 1011, 1018, 1025, 1036, 1040, 1050, 1055, 1071, 1076, 1081, 1083, 1084, 1085, 1089, 1092, 1094, 1098, 1101, 1105, 1110, 1112, 1117, 1119, 1132, 1133], "idea": [13, 14, 142, 143, 203, 216, 225, 235, 268, 270, 271, 272, 287, 290, 297, 413, 637, 659, 697, 705, 778, 875, 910, 920, 940, 964, 975, 999, 1007, 1103, 1135], "choosealicens": 13, "appear": [13, 112, 123, 143, 144, 145, 146, 147, 148, 149, 150, 153, 163, 167, 171, 173, 175, 176, 195, 204, 231, 271, 272, 293, 344, 387, 390, 434, 435, 452, 523, 564, 707, 774, 778, 786, 802, 882, 883, 884, 895, 953, 975, 1047, 1048, 1058, 1067, 1093, 1098], "help": [13, 29, 142, 143, 145, 146, 154, 158, 176, 195, 199, 204, 212, 218, 223, 225, 228, 231, 235, 238, 241, 243, 256, 263, 268, 272, 277, 295, 313, 317, 322, 340, 390, 411, 413, 415, 416, 425, 434, 551, 554, 560, 647, 660, 695, 705, 707, 749, 817, 877, 882, 967, 999, 1002, 1028, 1031, 1101, 1110, 1117, 1132], "happen": [13, 27, 110, 111, 112, 115, 122, 142, 143, 145, 158, 175, 179, 183, 202, 221, 285, 301, 327, 395, 407, 411, 415, 429, 434, 554, 571, 643, 675, 689, 692, 714, 741, 774, 778, 795, 810, 811, 815, 884, 908, 910, 920, 925, 949, 987, 988, 1027, 1041, 1044, 1058, 1075, 1081, 1110, 1119, 1132], "clone": [13, 61, 77, 109, 114, 125, 135, 145, 146, 149, 170, 172, 175, 192, 204, 205, 221, 248, 250, 280, 287, 290, 322, 327, 490, 493, 567, 751, 778, 779, 882, 966, 967], "jfasch": [13, 40, 43, 61, 106, 112, 114, 123, 125, 139, 140, 146, 147, 148, 153, 154, 158, 162, 171, 172, 173, 176, 179, 192, 202, 212, 215, 218, 219, 221, 223, 228, 231, 238, 241, 243, 248, 250, 256, 259, 261, 262, 263, 268, 269, 270, 272, 273, 276, 277, 282, 286, 287, 290, 294, 298, 302, 321, 322, 327, 330, 432, 434, 435, 437, 438, 440, 441, 443, 445, 454, 490, 504, 505, 506, 507, 525, 567, 627, 705, 706, 707, 751, 753, 778, 804, 805, 806, 809, 810, 813, 815, 820, 823, 834, 839, 840, 841, 857, 860, 862, 863, 867, 869, 871, 882, 885, 893, 894, 895, 900, 906, 908, 909, 910, 931, 936, 952, 953, 954, 955, 964, 966, 967, 968, 969, 970, 973, 975, 976, 979, 1003, 1022, 1028, 1031, 1054, 1097, 1098, 1110, 1112], "home": [13, 32, 40, 42, 43, 50, 61, 65, 100, 112, 125, 139, 140, 144, 146, 147, 148, 150, 154, 158, 171, 172, 173, 176, 195, 202, 212, 215, 216, 218, 223, 228, 231, 238, 241, 243, 248, 250, 256, 259, 261, 263, 273, 277, 330, 425, 432, 434, 435, 437, 438, 440, 441, 443, 445, 454, 504, 505, 506, 507, 567, 627, 660, 705, 706, 707, 731, 753, 778, 804, 805, 806, 808, 813, 815, 817, 818, 820, 823, 828, 830, 832, 834, 835, 838, 839, 841, 842, 843, 844, 845, 849, 852, 855, 858, 860, 862, 863, 869, 874, 885, 886, 891, 893, 894, 931, 933, 949, 952, 953, 954, 964, 966, 967, 968, 969, 970, 973, 976, 979, 1028, 1054, 1063, 1097, 1098, 1110, 1112], "built": [13, 28, 114, 142, 143, 145, 146, 149, 154, 171, 176, 178, 179, 187, 188, 200, 203, 212, 218, 223, 226, 228, 229, 231, 235, 243, 252, 256, 259, 261, 276, 285, 294, 301, 357, 361, 385, 406, 432, 440, 443, 444, 468, 490, 603, 660, 716, 721, 747, 751, 753, 778, 882, 884, 895, 953, 954, 955, 960, 968, 973, 976, 980, 996, 1011, 1027, 1076, 1082, 1083, 1100, 1110, 1112, 1113, 1128, 1132, 1140], "wonder": [13, 746, 764, 791, 978], "gener": [13, 23, 24, 29, 39, 65, 68, 69, 78, 80, 81, 109, 110, 111, 136, 140, 143, 147, 150, 155, 162, 165, 175, 179, 180, 182, 183, 184, 185, 194, 202, 210, 211, 212, 216, 217, 219, 220, 221, 222, 224, 226, 227, 228, 232, 233, 234, 235, 240, 241, 255, 257, 261, 270, 275, 277, 281, 282, 284, 296, 325, 328, 345, 355, 357, 363, 368, 379, 389, 407, 413, 416, 418, 419, 422, 432, 433, 434, 438, 493, 495, 501, 504, 512, 547, 554, 558, 574, 582, 583, 586, 637, 655, 658, 685, 699, 705, 711, 719, 758, 760, 762, 781, 811, 822, 838, 875, 877, 882, 895, 920, 949, 950, 952, 955, 966, 967, 973, 974, 975, 977, 995, 1001, 1003, 1004, 1005, 1011, 1015, 1032, 1033, 1034, 1035, 1048, 1074, 1076, 1083, 1085, 1086, 1088, 1089, 1098, 1105, 1110, 1133, 1134, 1141], "content": [13, 27, 39, 49, 50, 57, 63, 112, 175, 182, 183, 184, 195, 203, 221, 223, 231, 253, 259, 314, 389, 392, 394, 507, 550, 600, 608, 696, 780, 783, 804, 805, 806, 820, 823, 825, 826, 860, 863, 871, 883, 887, 910, 952, 1007, 1026, 1032, 1045, 1075, 1095, 1112, 1145], "which": [13, 14, 17, 28, 57, 68, 78, 80, 83, 89, 110, 111, 115, 122, 128, 135, 136, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 154, 158, 163, 165, 171, 172, 173, 175, 179, 181, 183, 195, 202, 204, 212, 216, 218, 219, 231, 234, 235, 243, 244, 261, 262, 265, 267, 272, 277, 290, 294, 303, 340, 358, 363, 364, 370, 374, 395, 407, 419, 429, 430, 431, 432, 434, 437, 439, 440, 447, 449, 460, 490, 491, 492, 493, 496, 498, 499, 500, 501, 502, 504, 519, 530, 536, 549, 556, 558, 562, 564, 572, 619, 629, 633, 634, 640, 641, 643, 652, 658, 659, 697, 701, 702, 710, 711, 727, 729, 731, 747, 756, 778, 780, 798, 804, 811, 815, 817, 820, 821, 822, 823, 829, 831, 834, 838, 851, 862, 865, 874, 875, 878, 882, 883, 884, 895, 904, 905, 908, 910, 912, 913, 915, 920, 925, 932, 934, 936, 937, 945, 950, 953, 958, 966, 970, 973, 975, 977, 987, 988, 992, 1000, 1004, 1007, 1016, 1047, 1066, 1068, 1071, 1073, 1089, 1091, 1092, 1094, 1097, 1112, 1117, 1130], "differ": [13, 35, 38, 59, 62, 69, 76, 81, 85, 88, 130, 142, 143, 148, 150, 154, 164, 171, 175, 179, 191, 215, 216, 259, 261, 267, 268, 270, 277, 295, 303, 308, 343, 355, 363, 368, 369, 385, 386, 389, 407, 413, 415, 419, 429, 431, 448, 449, 493, 504, 506, 525, 532, 533, 542, 551, 552, 556, 562, 564, 565, 574, 578, 583, 622, 625, 629, 651, 664, 667, 694, 709, 722, 729, 751, 756, 770, 776, 778, 798, 803, 809, 813, 814, 816, 835, 860, 875, 878, 882, 884, 891, 902, 910, 912, 925, 934, 936, 937, 957, 962, 967, 969, 970, 975, 988, 995, 1003, 1016, 1020, 1025, 1026, 1027, 1085, 1094, 1112, 1113, 1133, 1135], "so": [13, 17, 23, 32, 37, 39, 49, 55, 66, 112, 115, 117, 130, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 162, 163, 164, 165, 166, 167, 171, 172, 173, 175, 176, 187, 188, 193, 201, 203, 204, 205, 214, 215, 216, 245, 259, 267, 269, 273, 285, 297, 301, 308, 317, 322, 325, 340, 354, 358, 359, 367, 369, 385, 395, 396, 398, 407, 411, 413, 415, 416, 420, 430, 432, 435, 437, 442, 443, 447, 469, 471, 490, 506, 519, 558, 565, 569, 582, 605, 612, 621, 628, 637, 686, 696, 701, 704, 705, 707, 722, 737, 739, 742, 747, 751, 753, 756, 778, 791, 803, 817, 818, 820, 822, 828, 830, 832, 838, 842, 849, 875, 881, 882, 883, 884, 887, 889, 891, 899, 902, 905, 910, 912, 920, 938, 940, 949, 952, 953, 954, 955, 966, 968, 969, 978, 979, 983, 995, 1000, 1002, 1007, 1024, 1026, 1028, 1030, 1040, 1044, 1050, 1054, 1081, 1084, 1092, 1099, 1102, 1110, 1112, 1116, 1117, 1119, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1134, 1140, 1143, 1148], "ye": [13, 32, 50, 61, 145, 146, 149, 154, 195, 319, 605, 714, 805, 806, 823, 825, 826, 884, 895, 952, 1020, 1053], "realli": [13, 21, 43, 50, 53, 55, 56, 65, 123, 144, 145, 146, 148, 150, 164, 175, 179, 182, 448, 664, 701, 711, 731, 770, 883, 884, 895, 918, 1076, 1083, 1089], "great": [13, 78, 148, 150, 205, 225, 235, 429, 548, 563, 719, 778, 883, 1130, 1135], "static": [13, 23, 65, 97, 103, 104, 110, 111, 114, 143, 145, 147, 149, 150, 160, 170, 204, 205, 212, 218, 221, 228, 231, 235, 259, 268, 270, 277, 322, 328, 391, 397, 401, 404, 406, 408, 415, 417, 419, 421, 426, 427, 432, 437, 438, 442, 444, 453, 467, 475, 487, 488, 489, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 533, 542, 547, 551, 554, 565, 570, 573, 576, 592, 596, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 649, 658, 687, 689, 691, 692, 696, 707, 710, 716, 721, 728, 730, 731, 737, 756, 774, 778, 780, 874, 920, 923, 925, 927, 936, 942, 949, 953, 954, 955, 957, 958, 959, 960, 962, 1087, 1122, 1125, 1127, 1128, 1129], "It": [13, 21, 39, 43, 45, 55, 59, 62, 78, 117, 120, 122, 131, 142, 143, 144, 145, 148, 149, 150, 153, 154, 163, 165, 167, 171, 172, 176, 181, 182, 195, 204, 205, 212, 218, 221, 228, 231, 235, 243, 248, 250, 259, 262, 265, 268, 294, 335, 336, 352, 363, 367, 385, 390, 413, 415, 429, 447, 452, 457, 460, 469, 471, 493, 496, 497, 504, 505, 551, 631, 643, 660, 661, 697, 707, 731, 742, 778, 805, 806, 817, 820, 835, 874, 875, 883, 884, 905, 910, 912, 913, 915, 928, 932, 937, 953, 954, 964, 969, 974, 976, 987, 995, 999, 1000, 1033, 1049, 1054, 1058, 1061, 1067, 1082, 1088, 1100, 1110, 1111, 1130, 1132, 1133, 1135], "let": [13, 17, 42, 59, 62, 63, 115, 123, 143, 144, 145, 148, 149, 150, 153, 158, 165, 166, 167, 172, 173, 205, 219, 223, 225, 231, 235, 262, 265, 267, 269, 272, 287, 290, 411, 419, 429, 431, 433, 440, 443, 447, 449, 451, 456, 469, 475, 492, 503, 504, 506, 509, 525, 539, 549, 550, 562, 566, 568, 569, 619, 625, 631, 637, 647, 664, 692, 696, 701, 705, 747, 751, 770, 778, 786, 813, 822, 835, 840, 875, 882, 883, 895, 908, 910, 911, 925, 934, 936, 952, 954, 964, 967, 968, 974, 976, 980, 1017, 1024, 1026, 1033, 1041, 1063, 1071, 1076, 1083, 1084, 1089, 1092, 1110, 1130], "me": [13, 23, 32, 37, 59, 62, 114, 137, 142, 143, 144, 145, 148, 149, 150, 153, 154, 158, 171, 172, 173, 175, 179, 202, 204, 205, 229, 280, 322, 411, 413, 414, 429, 432, 536, 560, 625, 660, 701, 707, 751, 813, 840, 875, 883, 884, 895, 899, 952, 955, 964, 980, 983, 1024, 1076, 1080, 1111], "focu": [13, 146, 150, 153, 167, 175, 179, 262, 265, 418, 422, 454, 646, 675, 875, 883, 885, 1000, 1083, 1104, 1133], "myself": [13, 139, 140, 150, 171, 179, 194, 210, 751, 813, 835, 840, 857], "ey": [13, 32, 37, 228, 231, 241, 263, 1011], "toward": [13, 175, 328, 411, 471, 600], "consist": [13, 27, 175, 190, 231, 297, 313, 330, 344, 347, 385, 387, 425, 496, 504, 549, 838, 912, 946, 1000, 1001, 1004, 1045, 1054, 1078, 1099], "won": [13, 153, 154, 231, 261, 308, 342, 409, 434, 503, 505, 551, 701, 707, 746, 758, 883, 895, 902, 955, 977, 1026], "break": [13, 36, 38, 136, 166, 175, 176, 181, 188, 194, 195, 203, 215, 218, 224, 225, 228, 231, 234, 235, 238, 241, 256, 263, 277, 314, 379, 383, 384, 391, 397, 401, 404, 408, 411, 415, 417, 419, 421, 426, 427, 429, 590, 621, 631, 633, 640, 649, 675, 683, 687, 708, 721, 728, 730, 731, 768, 900, 901, 910, 936, 942, 949, 980, 988, 1026, 1089], "move": [13, 54, 63, 99, 114, 127, 131, 140, 144, 154, 172, 180, 183, 194, 205, 221, 246, 249, 258, 259, 270, 279, 280, 306, 307, 322, 325, 429, 430, 443, 487, 496, 525, 550, 551, 558, 559, 560, 561, 563, 609, 655, 675, 687, 699, 703, 706, 708, 709, 712, 719, 720, 721, 727, 728, 730, 731, 747, 780, 802, 805, 806, 807, 808, 841, 842, 843, 844, 847, 848, 849, 850, 852, 858, 874, 875, 899, 900, 937, 970, 1007, 1106, 1129, 1130, 1131, 1138, 1139], "around": [13, 24, 37, 59, 62, 98, 114, 116, 118, 143, 144, 145, 150, 154, 164, 175, 179, 203, 229, 240, 247, 248, 250, 270, 303, 368, 443, 457, 459, 468, 493, 549, 645, 648, 650, 700, 702, 730, 731, 778, 783, 910, 925, 946, 949, 970, 976, 992, 996, 998, 1020, 1072, 1076, 1078, 1082, 1083, 1094, 1095, 1098], "last": [13, 59, 62, 112, 114, 139, 143, 144, 145, 160, 165, 175, 176, 182, 194, 195, 202, 210, 212, 215, 218, 219, 228, 231, 241, 256, 261, 263, 277, 313, 319, 326, 328, 395, 413, 577, 579, 580, 581, 582, 586, 589, 678, 681, 682, 683, 729, 731, 778, 838, 841, 844, 860, 869, 871, 874, 902, 907, 915, 924, 929, 931, 936, 951, 962, 973, 974, 975, 976, 980, 984, 988, 989, 995, 996, 1001, 1009, 1017, 1018, 1022, 1024, 1027, 1028, 1038, 1065, 1071, 1073, 1084, 1089, 1097, 1098, 1111, 1118, 1148], "least": [13, 24, 37, 59, 62, 65, 81, 145, 153, 167, 171, 173, 175, 182, 183, 202, 204, 205, 219, 221, 231, 235, 261, 265, 267, 277, 279, 343, 361, 367, 368, 381, 407, 410, 411, 419, 435, 447, 519, 604, 647, 697, 699, 706, 711, 714, 741, 774, 776, 810, 875, 877, 885, 923, 946, 950, 971, 980, 984, 1000, 1001, 1011, 1034, 1082, 1118], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 63, 78, 110, 111, 112, 115, 118, 120, 122, 130, 140, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154, 158, 163, 165, 167, 171, 172, 175, 179, 181, 182, 183, 193, 195, 199, 200, 202, 203, 205, 212, 215, 218, 221, 223, 225, 226, 228, 231, 235, 238, 241, 244, 252, 253, 256, 259, 260, 261, 262, 263, 265, 267, 268, 270, 273, 276, 277, 283, 285, 294, 295, 301, 306, 308, 315, 317, 319, 328, 342, 351, 354, 364, 367, 368, 377, 380, 388, 389, 396, 402, 403, 406, 410, 412, 413, 419, 425, 429, 431, 434, 440, 442, 443, 444, 445, 447, 448, 449, 452, 457, 458, 461, 469, 474, 488, 490, 500, 523, 533, 548, 550, 551, 552, 553, 556, 557, 558, 561, 562, 565, 572, 582, 603, 604, 621, 622, 625, 634, 635, 640, 641, 643, 652, 654, 657, 660, 669, 670, 671, 675, 684, 685, 686, 689, 697, 705, 707, 710, 711, 713, 719, 729, 731, 732, 742, 747, 772, 774, 776, 778, 788, 791, 792, 794, 798, 805, 809, 810, 811, 813, 815, 816, 817, 823, 834, 836, 841, 867, 875, 881, 882, 883, 884, 893, 895, 898, 904, 910, 920, 922, 923, 925, 933, 934, 936, 937, 938, 939, 946, 950, 952, 966, 968, 969, 971, 973, 974, 975, 978, 980, 983, 988, 989, 990, 998, 1000, 1003, 1006, 1007, 1011, 1016, 1017, 1021, 1038, 1058, 1073, 1075, 1076, 1082, 1083, 1084, 1085, 1089, 1097, 1098, 1100, 1102, 1110, 1112, 1117, 1119, 1130, 1132, 1133, 1135, 1138, 1139], "extens": [13, 14, 23, 28, 32, 37, 40, 138, 153, 175, 202, 204, 212, 218, 228, 231, 308, 389, 429, 457, 548, 686, 729, 732, 803, 815, 952, 983, 1000, 1003, 1105, 1110], "interfac": [13, 53, 56, 72, 73, 74, 78, 80, 82, 85, 106, 115, 116, 117, 118, 119, 120, 122, 123, 139, 140, 143, 160, 162, 163, 170, 179, 205, 219, 221, 229, 233, 251, 252, 259, 268, 286, 302, 303, 311, 312, 322, 323, 324, 328, 331, 340, 341, 429, 435, 436, 441, 446, 447, 448, 449, 452, 453, 459, 467, 471, 473, 474, 495, 499, 501, 525, 547, 572, 620, 622, 644, 686, 693, 694, 710, 711, 731, 874, 875, 880, 882, 884, 918, 952, 974, 1088, 1129, 1134, 1135, 1141, 1144, 1147], "lot": [13, 65, 69, 92, 97, 140, 142, 143, 145, 150, 154, 172, 175, 179, 195, 272, 325, 361, 410, 415, 419, 425, 439, 542, 619, 731, 762, 772, 778, 807, 808, 817, 838, 874, 883, 900, 952, 967, 995, 1000, 1022, 1078, 1131], "littl": [13, 27, 44, 145, 147, 150, 153, 154, 163, 175, 203, 212, 218, 219, 221, 228, 231, 253, 259, 270, 340, 390, 418, 419, 430, 559, 562, 565, 621, 627, 707, 710, 734, 875, 877, 883, 931, 953, 1023, 1092], "maintain": [13, 28, 30, 54, 70, 80, 140, 142, 143, 150, 172, 181, 202, 204, 212, 216, 218, 228, 231, 240, 322, 336, 415, 429, 597, 647, 658, 756, 778, 786, 788, 790, 921, 952, 953, 954, 956, 962, 967, 968, 969, 970, 1018, 1081, 1132], "packag": [13, 21, 23, 29, 32, 61, 97, 104, 114, 126, 132, 133, 139, 144, 158, 173, 175, 176, 179, 180, 182, 189, 194, 200, 202, 203, 204, 210, 212, 216, 218, 219, 222, 226, 228, 229, 231, 232, 234, 237, 240, 243, 261, 271, 272, 276, 280, 285, 290, 294, 297, 301, 322, 323, 324, 325, 329, 340, 341, 432, 434, 437, 438, 731, 751, 874, 882, 883, 954, 959, 962, 977, 1000, 1007, 1029, 1030, 1032, 1033, 1034, 1035, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1082, 1086, 1090, 1091, 1092, 1097, 1098, 1109, 1110, 1111, 1113, 1114, 1119, 1132], "virtual": [13, 29, 69, 80, 106, 107, 123, 139, 145, 148, 150, 170, 175, 179, 190, 194, 210, 226, 229, 232, 243, 248, 250, 252, 259, 268, 269, 270, 271, 272, 276, 287, 290, 293, 294, 297, 329, 340, 341, 444, 448, 450, 453, 454, 459, 461, 467, 471, 476, 478, 479, 480, 483, 484, 485, 486, 487, 488, 495, 505, 545, 547, 572, 619, 620, 621, 644, 686, 694, 705, 707, 711, 731, 737, 809, 814, 817, 876, 882, 884, 893, 902, 918, 936, 946, 1000, 1003, 1029, 1030, 1031, 1074, 1076, 1077, 1078, 1082, 1090, 1092, 1104, 1107, 1110, 1129, 1136, 1145], "environ": [13, 21, 29, 65, 75, 78, 97, 104, 114, 131, 139, 143, 154, 158, 179, 185, 194, 195, 200, 210, 213, 216, 226, 229, 232, 243, 249, 252, 258, 271, 272, 276, 279, 280, 287, 290, 293, 294, 297, 323, 324, 335, 336, 454, 474, 488, 503, 504, 505, 506, 567, 705, 706, 731, 808, 812, 816, 817, 838, 839, 858, 874, 875, 915, 932, 937, 953, 962, 963, 964, 969, 971, 983, 1003, 1005, 1029, 1030, 1031, 1074, 1076, 1077, 1078, 1082, 1083, 1090, 1092, 1104, 1105, 1107, 1110, 1111, 1117, 1121, 1123], "repo": [13, 112, 125, 154, 158, 170, 173, 184, 308, 313, 322, 326, 327, 515, 516, 517, 518, 520, 521, 522, 751, 778, 780, 966, 1119], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 61, 62, 63, 77, 99, 101, 102, 109, 114, 126, 129, 136, 139, 143, 144, 145, 147, 150, 153, 154, 158, 160, 162, 163, 164, 179, 180, 181, 182, 183, 184, 195, 200, 208, 213, 218, 219, 221, 226, 228, 231, 235, 240, 243, 248, 249, 250, 258, 259, 267, 270, 271, 272, 276, 277, 279, 280, 282, 287, 290, 294, 297, 322, 327, 346, 423, 425, 431, 432, 445, 447, 449, 452, 453, 454, 467, 468, 469, 473, 475, 476, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 547, 549, 552, 563, 603, 605, 621, 636, 639, 641, 650, 652, 675, 689, 692, 701, 707, 708, 720, 721, 726, 727, 729, 730, 731, 734, 737, 741, 742, 747, 749, 751, 753, 756, 762, 774, 778, 807, 808, 809, 810, 811, 812, 818, 820, 821, 825, 826, 827, 829, 831, 833, 836, 842, 843, 845, 847, 848, 849, 850, 852, 858, 874, 882, 883, 884, 886, 887, 888, 890, 891, 893, 895, 897, 903, 904, 905, 912, 913, 914, 915, 920, 921, 922, 928, 929, 932, 935, 936, 937, 944, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 967, 968, 973, 974, 976, 978, 980, 984, 988, 989, 990, 992, 1006, 1007, 1016, 1017, 1018, 1027, 1030, 1031, 1032, 1044, 1052, 1053, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1076, 1078, 1079, 1080, 1082, 1085, 1088, 1092, 1101, 1110, 1112, 1113, 1132], "popul": [13, 145, 149, 235, 268, 734], "yourself": [13, 143, 150, 154, 165, 221, 374, 550, 567, 572, 783, 840, 923, 946, 999, 1135], "root": [13, 38, 63, 80, 114, 125, 142, 148, 150, 153, 154, 165, 170, 171, 172, 179, 183, 193, 215, 221, 231, 235, 238, 241, 256, 259, 263, 273, 277, 307, 308, 313, 342, 409, 418, 422, 425, 434, 442, 448, 506, 568, 624, 729, 742, 778, 779, 780, 809, 813, 815, 834, 838, 850, 851, 857, 860, 862, 863, 864, 866, 867, 869, 875, 882, 883, 884, 886, 887, 891, 900, 905, 910, 918, 938, 952, 955, 964, 966, 975, 1054, 1063, 1064, 1101, 1110], "activ": [13, 148, 158, 160, 183, 243, 647, 758, 760, 764, 772, 813, 815, 870, 1030, 1110, 1112], "txt": [13, 33, 42, 44, 112, 114, 123, 138, 145, 161, 162, 166, 169, 170, 171, 172, 173, 202, 204, 209, 212, 221, 222, 231, 243, 253, 287, 290, 313, 314, 354, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 490, 503, 504, 505, 506, 507, 526, 529, 532, 533, 535, 538, 541, 544, 638, 729, 749, 804, 805, 806, 818, 822, 832, 842, 843, 844, 845, 849, 850, 857, 878, 882, 883, 884, 918, 941, 944, 948, 953, 954, 964, 975, 1022, 1045, 1063, 1112, 1113, 1116, 1119, 1121], "fedorish": [13, 751, 895, 1092], "your": [13, 43, 65, 102, 109, 114, 122, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 158, 159, 172, 175, 178, 179, 183, 195, 203, 204, 221, 229, 235, 248, 250, 252, 259, 262, 265, 303, 308, 319, 328, 330, 374, 409, 417, 419, 421, 426, 427, 429, 438, 448, 452, 473, 490, 493, 504, 506, 507, 564, 638, 639, 641, 642, 649, 655, 663, 687, 728, 730, 731, 753, 770, 778, 783, 804, 805, 806, 808, 815, 817, 818, 827, 828, 829, 830, 831, 832, 833, 839, 842, 843, 844, 845, 847, 856, 874, 875, 882, 884, 886, 887, 891, 895, 910, 912, 964, 967, 978, 989, 995, 1000, 1004, 1045, 1059, 1063, 1064, 1076, 1081, 1092, 1102, 1105, 1110, 1111, 1112, 1119, 1135], "mileag": [13, 248, 250, 1092, 1110], "might": [13, 27, 59, 61, 62, 112, 117, 122, 142, 143, 144, 146, 148, 150, 153, 154, 158, 171, 173, 175, 183, 204, 212, 218, 223, 228, 231, 262, 265, 268, 294, 308, 333, 405, 419, 429, 434, 443, 444, 449, 452, 473, 506, 556, 565, 684, 694, 707, 708, 709, 729, 753, 764, 768, 774, 778, 820, 875, 882, 883, 884, 895, 900, 909, 931, 938, 949, 964, 967, 975, 984, 987, 1000, 1078, 1092, 1110, 1113, 1117], "vari": [13, 212, 218, 228, 231, 235, 248, 250, 271, 272, 293, 297, 345, 419, 603, 722, 778, 884, 969, 1088, 1092, 1110, 1130], "dnf": [13, 61, 118, 139, 146, 154, 158, 172, 342, 435, 442, 519, 751, 779, 877, 895, 954, 966, 1092, 1117, 1119], "pandoc": 13, "graphviz": [13, 438, 954], "dia": [13, 215, 273, 860, 1033], "gtest": [13, 44, 65, 114, 170, 171, 172, 173, 342, 447, 448, 449, 451, 452, 454, 456, 469, 471, 472, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 542, 549, 550, 551, 562, 563, 565, 566, 567, 568, 569, 627, 652, 654, 657, 658, 659, 690, 696, 701, 705, 706, 707, 708, 710, 725, 726, 727, 729, 731, 1115], "devel": [13, 118, 139, 154, 172, 435, 437, 442, 751, 1117, 1119], "markdown": [13, 23, 317, 1031], "handl": [13, 21, 29, 46, 74, 123, 137, 143, 163, 175, 179, 180, 182, 184, 190, 203, 205, 210, 212, 216, 219, 220, 228, 233, 240, 252, 259, 269, 276, 277, 287, 290, 322, 327, 329, 335, 336, 343, 383, 390, 395, 411, 415, 435, 495, 525, 547, 562, 572, 605, 609, 631, 640, 641, 642, 675, 677, 704, 707, 719, 720, 730, 731, 737, 741, 760, 772, 808, 811, 812, 874, 882, 897, 899, 900, 901, 902, 903, 904, 905, 907, 910, 912, 913, 915, 923, 929, 932, 935, 937, 940, 946, 949, 977, 995, 1000, 1001, 1016, 1026, 1074, 1076, 1103, 1129, 1135, 1144], "jupyt": [13, 158, 163, 164, 166, 175, 176, 178, 186, 226, 228, 229, 231, 232, 261, 262, 265, 266, 272, 276, 282, 287, 290, 294, 298, 322, 327, 860, 1000, 1078, 1079, 1083, 1140], "notebook": [13, 32, 158, 162, 163, 164, 166, 175, 178, 186, 219, 226, 229, 231, 232, 234, 237, 240, 243, 252, 255, 261, 262, 265, 266, 272, 276, 282, 287, 290, 294, 298, 307, 327, 1000, 1078, 1083, 1140], "those": [13, 24, 78, 112, 136, 143, 144, 150, 153, 158, 173, 175, 179, 184, 202, 204, 205, 212, 216, 221, 222, 223, 225, 231, 235, 267, 268, 269, 270, 272, 287, 307, 319, 322, 328, 333, 354, 409, 419, 429, 431, 433, 434, 435, 448, 449, 452, 453, 519, 562, 584, 625, 628, 635, 650, 685, 701, 709, 711, 729, 744, 747, 778, 805, 806, 822, 823, 875, 882, 883, 884, 949, 968, 969, 970, 971, 975, 976, 977, 983, 988, 999, 1040, 1050, 1071, 1081, 1089, 1090, 1095, 1097, 1110, 1132, 1133, 1135], "funki": [13, 17, 145], "graph": [13, 29, 78, 87, 213, 226, 240, 243, 276, 282, 322, 329, 424, 438, 444, 954, 968, 969, 1076, 1082], "histor": [13, 24, 78, 145, 167, 355, 368, 413, 646, 737, 816, 895, 950, 1067, 1122], "baggag": [13, 355, 368, 646, 950, 1067], "convert": [13, 17, 29, 42, 136, 164, 194, 202, 208, 212, 215, 218, 221, 225, 228, 231, 232, 235, 252, 277, 287, 290, 307, 368, 390, 415, 425, 433, 438, 448, 503, 618, 625, 659, 660, 731, 732, 912, 952, 991, 1033, 1035, 1040, 1047, 1050, 1069, 1070, 1071, 1074, 1089], "draw": [13, 140, 183, 294, 330, 365, 501, 699, 735, 739, 747, 768, 791], "svg": [13, 140], "ani": [13, 39, 45, 49, 123, 127, 136, 139, 142, 143, 144, 145, 148, 150, 154, 158, 163, 167, 178, 181, 183, 195, 202, 204, 212, 218, 228, 231, 235, 246, 247, 248, 256, 272, 277, 294, 303, 308, 329, 330, 363, 407, 415, 429, 452, 457, 499, 500, 501, 502, 506, 507, 519, 536, 554, 557, 583, 621, 629, 634, 647, 650, 652, 669, 675, 693, 694, 697, 706, 707, 708, 710, 711, 719, 729, 736, 737, 749, 751, 770, 778, 788, 795, 805, 806, 815, 818, 825, 826, 829, 830, 831, 838, 850, 860, 875, 882, 883, 884, 887, 910, 921, 925, 945, 971, 973, 974, 975, 976, 980, 987, 988, 995, 998, 1007, 1012, 1014, 1025, 1026, 1031, 1055, 1057, 1072, 1083, 1099, 1104, 1105, 1117, 1130, 1135], "That": [13, 84, 98, 99, 112, 114, 115, 116, 142, 143, 144, 145, 148, 153, 154, 158, 167, 175, 179, 182, 221, 245, 249, 251, 265, 268, 270, 333, 397, 398, 401, 404, 408, 417, 421, 426, 427, 435, 448, 449, 459, 471, 473, 475, 491, 493, 506, 553, 557, 639, 649, 687, 713, 719, 720, 728, 730, 731, 805, 806, 808, 809, 811, 812, 814, 815, 824, 827, 828, 829, 830, 831, 832, 833, 838, 874, 875, 883, 886, 887, 888, 889, 890, 893, 911, 915, 929, 935, 937, 962, 963, 974, 1000, 1007, 1066, 1068, 1073, 1102, 1110, 1120, 1130], "sloppili": [13, 908], "track": [13, 112, 146, 150, 158, 182, 202, 212, 218, 228, 231, 706, 751, 778, 779, 783, 815, 987], "opentrain": [13, 22, 28, 127, 140, 180, 187, 205, 330, 341, 1110, 1140], "recip": [13, 39, 135, 139, 143, 144, 323, 324, 409, 574], "sphinx": [14, 17, 23, 39, 65, 139, 140, 155, 328, 732, 1110], "togeth": [14, 24, 43, 50, 104, 106, 110, 111, 116, 123, 133, 150, 153, 154, 158, 163, 173, 175, 179, 183, 195, 204, 221, 248, 250, 267, 268, 270, 285, 294, 297, 301, 330, 340, 386, 419, 420, 496, 506, 525, 547, 565, 566, 568, 569, 719, 721, 742, 755, 778, 805, 806, 864, 865, 883, 884, 914, 928, 952, 958, 962, 964, 967, 971, 1049, 1082, 1102, 1105, 1113, 1115, 1117, 1130, 1132], "form": [14, 29, 145, 150, 163, 167, 191, 212, 218, 219, 228, 231, 268, 270, 341, 406, 422, 461, 469, 471, 510, 511, 523, 621, 732, 778, 783, 786, 810, 860, 884, 1011, 1030, 1033, 1066, 1068, 1071, 1072, 1078, 1084, 1105, 1110, 1130], "short": [14, 32, 35, 43, 106, 123, 143, 150, 158, 171, 175, 179, 182, 183, 184, 194, 195, 212, 216, 217, 218, 223, 226, 228, 229, 233, 251, 267, 268, 269, 270, 271, 272, 345, 361, 363, 368, 372, 373, 398, 407, 453, 467, 495, 507, 547, 552, 556, 731, 774, 780, 783, 817, 838, 863, 882, 884, 895, 902, 912, 934, 939, 972, 986, 1009, 1012, 1028, 1100, 1110, 1112, 1130], "video": [14, 22, 137, 146, 148, 150, 161, 175, 178, 179, 182, 187, 200, 203, 204, 226, 270, 273, 276, 430, 697, 875, 883, 1076, 1083, 1092], "explain": [14, 63, 65, 97, 123, 137, 142, 148, 154, 167, 175, 179, 181, 205, 216, 221, 223, 225, 226, 234, 235, 272, 307, 337, 340, 409, 419, 539, 818, 838, 841, 875, 884, 940, 1023, 1076, 1110, 1135], "case": [14, 24, 43, 97, 104, 106, 109, 112, 117, 142, 143, 144, 147, 150, 153, 154, 158, 164, 167, 179, 181, 183, 185, 205, 218, 219, 225, 231, 235, 238, 247, 248, 250, 251, 259, 262, 265, 277, 294, 297, 303, 330, 352, 359, 378, 380, 411, 413, 431, 434, 437, 446, 453, 457, 460, 495, 503, 504, 506, 512, 514, 533, 547, 554, 564, 603, 609, 629, 641, 647, 664, 675, 687, 694, 697, 705, 719, 729, 730, 731, 751, 778, 791, 794, 806, 810, 813, 820, 834, 850, 867, 874, 875, 884, 894, 895, 901, 912, 931, 936, 950, 957, 959, 962, 964, 966, 968, 975, 976, 1006, 1007, 1018, 1022, 1045, 1084, 1100, 1110, 1118, 1133], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 90, 126, 187, 200, 203, 210, 213, 214, 216, 222, 224, 226, 227, 232, 233, 234, 237, 240, 242, 250, 255, 257, 261, 262, 265, 275, 276, 278, 281, 284, 308, 309, 310, 311, 312, 313, 322, 330, 341, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731, 732, 874, 904, 905, 910, 913, 915, 929, 932, 977, 999, 1029, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1082, 1083, 1089, 1092, 1096, 1104, 1107, 1114, 1129, 1130, 1131, 1140], "s5": [16, 23, 139, 946, 950, 1144], "slide": [16, 23, 24, 27, 37, 139, 140, 143, 161, 168, 170, 175, 179, 183, 184, 185, 194, 195, 204, 205, 221, 247, 248, 259, 333, 336, 341, 542, 790, 947, 951, 1048, 1089, 1126, 1127, 1128, 1136, 1137, 1143, 1144, 1146, 1147, 1148], "work": [16, 24, 27, 40, 42, 43, 44, 57, 61, 71, 78, 80, 98, 99, 104, 106, 109, 115, 122, 123, 125, 128, 129, 139, 140, 142, 143, 144, 146, 148, 149, 150, 153, 154, 158, 167, 171, 172, 173, 182, 183, 185, 195, 200, 202, 204, 212, 213, 216, 218, 219, 221, 226, 228, 231, 235, 240, 249, 252, 258, 259, 261, 262, 265, 272, 273, 276, 277, 279, 280, 282, 308, 322, 327, 328, 330, 335, 336, 341, 342, 386, 387, 407, 409, 419, 429, 431, 432, 434, 435, 437, 438, 440, 441, 443, 445, 448, 449, 452, 453, 454, 467, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 542, 547, 567, 596, 603, 636, 638, 640, 648, 650, 652, 695, 701, 705, 706, 707, 711, 713, 720, 727, 730, 731, 732, 741, 746, 756, 758, 762, 776, 778, 783, 786, 800, 804, 805, 806, 807, 808, 811, 812, 813, 815, 817, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 860, 862, 871, 874, 875, 883, 887, 891, 895, 897, 902, 903, 905, 908, 911, 913, 915, 920, 929, 932, 934, 935, 937, 950, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 969, 975, 976, 979, 998, 1001, 1002, 1003, 1022, 1028, 1030, 1031, 1053, 1063, 1064, 1076, 1083, 1092, 1094, 1095, 1097, 1098, 1100, 1110, 1119, 1130, 1135, 1136, 1142], "progress": [16, 139, 341, 732, 840, 1119], "web": [16, 23, 72, 74, 78, 126, 140, 150, 179, 182, 203, 206, 252, 276, 731, 1076, 1083, 1089, 1092], "note": [16, 32, 36, 40, 44, 60, 63, 112, 114, 120, 122, 126, 128, 142, 143, 145, 150, 163, 164, 175, 194, 202, 204, 215, 216, 218, 243, 272, 277, 294, 297, 313, 314, 431, 435, 437, 441, 471, 519, 542, 551, 552, 558, 563, 622, 664, 684, 685, 686, 697, 699, 705, 706, 707, 709, 737, 778, 795, 805, 806, 865, 883, 901, 912, 964, 1017, 1020, 1022, 1026, 1081, 1092, 1094, 1097, 1117], "screencast": [16, 23, 126, 1076], "written": [16, 42, 43, 78, 106, 115, 118, 142, 143, 148, 158, 181, 231, 324, 386, 389, 405, 413, 415, 419, 432, 469, 559, 625, 638, 658, 732, 817, 904, 911, 946, 953, 954, 962, 994, 1001, 1031, 1132], "draft": [16, 29, 175, 731, 874, 1028, 1074, 1075, 1090], "convers": [17, 182, 194, 201, 204, 205, 212, 217, 218, 221, 224, 227, 228, 233, 236, 239, 257, 268, 270, 274, 278, 284, 296, 322, 346, 361, 375, 384, 391, 397, 401, 404, 408, 415, 417, 421, 426, 427, 431, 468, 530, 618, 622, 646, 648, 649, 651, 687, 728, 730, 731, 781, 1026, 1043, 1047, 1050, 1061], "old": [17, 29, 117, 140, 143, 145, 148, 173, 183, 215, 216, 231, 263, 273, 277, 341, 364, 403, 424, 429, 452, 525, 578, 585, 590, 605, 637, 643, 646, 651, 652, 693, 711, 722, 735, 741, 751, 770, 875, 883, 939, 1015, 1021, 1033, 1054, 1100, 1131], "latex": [17, 23, 24, 525], "beamer": [17, 23, 24], "To": [17, 29, 45, 61, 78, 102, 112, 117, 126, 142, 143, 145, 147, 158, 167, 171, 175, 190, 202, 212, 218, 228, 231, 232, 235, 239, 247, 248, 250, 252, 272, 287, 290, 294, 303, 355, 358, 413, 425, 449, 494, 507, 603, 617, 628, 644, 646, 687, 703, 726, 730, 731, 751, 755, 766, 778, 807, 813, 874, 875, 882, 883, 888, 890, 903, 912, 968, 977, 991, 1035, 1041, 1064, 1069, 1070, 1071, 1074, 1082, 1089], "put": [17, 58, 69, 80, 136, 142, 143, 144, 171, 179, 294, 297, 303, 431, 435, 439, 440, 503, 547, 633, 657, 693, 719, 747, 755, 768, 770, 795, 875, 883, 912, 937, 952, 967, 970, 975, 1033, 1115], "more": [17, 21, 27, 29, 43, 45, 59, 62, 65, 69, 78, 82, 90, 97, 101, 106, 114, 116, 118, 123, 136, 140, 143, 144, 147, 148, 150, 153, 154, 156, 158, 164, 165, 167, 172, 175, 179, 180, 181, 182, 183, 184, 185, 187, 189, 194, 195, 200, 202, 203, 204, 205, 206, 210, 213, 216, 217, 219, 220, 221, 222, 224, 225, 226, 229, 232, 233, 234, 236, 237, 239, 243, 247, 248, 249, 250, 254, 257, 258, 268, 269, 270, 277, 279, 280, 284, 286, 294, 302, 303, 308, 309, 310, 311, 312, 313, 325, 327, 333, 340, 341, 352, 357, 361, 364, 368, 378, 379, 380, 389, 391, 397, 398, 401, 404, 408, 409, 414, 415, 417, 419, 421, 423, 424, 425, 426, 427, 431, 434, 436, 437, 440, 453, 460, 467, 469, 473, 474, 485, 490, 495, 503, 505, 525, 542, 547, 551, 555, 604, 618, 619, 620, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 649, 656, 657, 668, 675, 684, 687, 688, 696, 697, 699, 701, 703, 704, 706, 707, 710, 712, 720, 721, 728, 729, 730, 731, 734, 737, 749, 751, 756, 762, 764, 766, 770, 772, 774, 778, 804, 809, 814, 838, 841, 871, 875, 877, 881, 882, 883, 884, 895, 901, 904, 907, 910, 921, 923, 934, 938, 940, 946, 950, 952, 953, 954, 962, 964, 968, 969, 970, 976, 978, 980, 984, 985, 986, 987, 991, 994, 995, 999, 1000, 1002, 1006, 1007, 1018, 1029, 1032, 1033, 1034, 1035, 1045, 1047, 1048, 1054, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1081, 1082, 1083, 1085, 1086, 1089, 1090, 1092, 1095, 1099, 1104, 1105, 1107, 1109, 1111, 1112, 1114, 1119, 1123, 1130, 1132, 1133, 1140], "precis": [17, 175, 179, 235, 252, 276, 345, 363, 627, 722, 778, 1021, 1076], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 732], "turn": [17, 75, 110, 111, 143, 145, 148, 153, 154, 175, 179, 195, 204, 221, 267, 322, 419, 434, 435, 471, 496, 497, 654, 669, 834, 875, 882, 883, 884, 952, 954, 958, 968, 976, 981, 982, 992, 994, 1102], "rst2s5": 17, "tool": [17, 32, 61, 68, 114, 150, 154, 159, 175, 183, 185, 195, 205, 231, 249, 258, 273, 278, 279, 296, 322, 325, 327, 340, 341, 342, 387, 422, 424, 425, 429, 621, 675, 693, 731, 802, 808, 809, 822, 874, 884, 895, 898, 953, 954, 962, 966, 1000, 1001, 1004, 1031, 1095, 1104, 1128, 1130, 1132, 1134, 1141], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 61, 62, 63, 65, 69, 77, 78, 84, 85, 89, 90, 97, 104, 106, 109, 110, 111, 112, 114, 119, 123, 126, 133, 137, 140, 142, 143, 144, 146, 147, 148, 149, 158, 160, 162, 163, 165, 167, 169, 170, 171, 172, 175, 179, 180, 181, 182, 183, 184, 185, 195, 202, 204, 205, 212, 215, 216, 218, 221, 223, 225, 226, 228, 231, 234, 235, 241, 244, 248, 250, 252, 259, 267, 268, 270, 272, 277, 287, 290, 294, 295, 297, 306, 308, 313, 322, 325, 328, 340, 341, 343, 347, 354, 355, 368, 377, 378, 402, 406, 407, 409, 410, 411, 413, 418, 419, 429, 433, 434, 439, 440, 441, 445, 451, 459, 460, 471, 473, 475, 493, 495, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 519, 520, 523, 524, 525, 526, 529, 532, 533, 535, 536, 538, 539, 541, 542, 544, 547, 549, 550, 551, 553, 554, 557, 559, 560, 562, 565, 570, 573, 576, 578, 580, 581, 584, 592, 596, 598, 602, 604, 609, 611, 612, 614, 615, 619, 622, 625, 629, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 647, 656, 657, 658, 669, 675, 677, 678, 681, 682, 683, 684, 685, 686, 687, 692, 695, 697, 699, 700, 703, 705, 707, 709, 710, 711, 712, 719, 720, 721, 722, 728, 729, 730, 731, 732, 737, 742, 747, 751, 753, 760, 774, 778, 783, 790, 798, 805, 806, 809, 810, 817, 820, 822, 823, 832, 834, 835, 838, 843, 845, 875, 880, 881, 882, 883, 884, 887, 894, 895, 901, 908, 909, 910, 911, 912, 916, 919, 928, 931, 940, 941, 944, 945, 948, 950, 953, 954, 956, 962, 964, 965, 966, 967, 968, 970, 971, 972, 973, 974, 977, 980, 982, 984, 986, 988, 995, 998, 999, 1000, 1002, 1004, 1011, 1014, 1016, 1017, 1018, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1048, 1063, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1090, 1091, 1092, 1093, 1094, 1098, 1101, 1104, 1105, 1110, 1112, 1115, 1116, 1117, 1119, 1121, 1122, 1130, 1132, 1133, 1135, 1138, 1139, 1145], "sens": [17, 78, 145, 147, 164, 167, 172, 175, 194, 444, 452, 469, 554, 565, 572, 619, 647, 660, 739, 778, 817, 884, 908, 931, 938, 945, 995, 1025, 1081, 1133], "entir": [17, 24, 30, 80, 110, 111, 136, 140, 143, 144, 145, 148, 154, 158, 167, 172, 179, 182, 200, 203, 204, 212, 226, 229, 232, 235, 247, 248, 250, 252, 262, 269, 272, 276, 282, 287, 290, 294, 298, 359, 388, 392, 399, 402, 407, 415, 423, 431, 449, 655, 686, 706, 778, 805, 806, 811, 835, 840, 849, 857, 875, 882, 884, 887, 893, 910, 921, 954, 983, 987, 1001, 1006, 1007, 1024, 1026, 1045, 1076, 1110, 1113, 1116, 1133], "site": [17, 23, 27, 39, 61, 65, 126, 139, 140, 143, 155, 158, 170, 171, 172, 176, 202, 212, 218, 228, 231, 294, 564, 710, 817, 1080, 1097, 1098, 1105, 1112, 1119], "massag": [17, 32, 133, 154, 172, 248, 250, 732, 882, 954], "itself": [17, 27, 116, 118, 123, 143, 145, 171, 175, 181, 212, 218, 228, 231, 277, 311, 357, 389, 425, 434, 440, 468, 469, 491, 506, 552, 559, 618, 695, 710, 719, 722, 753, 756, 778, 798, 804, 805, 806, 820, 838, 867, 937, 950, 964, 992, 995, 1000, 1021, 1061, 1102, 1119], "upon": [17, 27, 69, 97, 145, 146, 175, 179, 183, 190, 229, 261, 268, 287, 290, 411, 429, 457, 509, 525, 564, 582, 705, 722, 751, 884, 950, 1038, 1102, 1110, 1130], "you": [17, 21, 43, 58, 59, 62, 109, 112, 114, 115, 116, 117, 118, 120, 122, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 159, 163, 164, 165, 167, 171, 172, 175, 179, 181, 182, 183, 195, 200, 202, 203, 204, 205, 212, 215, 218, 219, 221, 225, 226, 228, 229, 231, 235, 243, 252, 259, 262, 265, 268, 270, 272, 276, 308, 313, 319, 322, 325, 327, 330, 353, 354, 367, 383, 409, 413, 429, 471, 490, 491, 492, 493, 497, 500, 503, 504, 506, 539, 550, 551, 557, 562, 565, 566, 568, 569, 583, 604, 612, 619, 625, 633, 634, 638, 655, 661, 689, 699, 710, 726, 727, 729, 751, 753, 770, 778, 783, 804, 805, 806, 809, 810, 813, 817, 818, 824, 828, 830, 832, 838, 839, 840, 842, 843, 844, 845, 849, 850, 875, 878, 882, 883, 884, 885, 886, 887, 889, 891, 894, 895, 899, 901, 905, 910, 912, 920, 921, 922, 923, 924, 928, 952, 953, 954, 955, 957, 960, 964, 967, 968, 971, 976, 977, 986, 988, 999, 1000, 1004, 1007, 1020, 1026, 1033, 1042, 1044, 1059, 1063, 1064, 1073, 1076, 1082, 1089, 1092, 1098, 1110, 1111, 1112, 1119, 1122, 1130, 1135], "view": [17, 63, 148, 149, 153, 164, 166, 179, 181, 247, 248, 252, 259, 303, 340, 357, 359, 422, 649, 687, 696, 698, 730, 731, 805, 806, 815, 822, 875, 884, 886, 1007, 1075, 1130, 1133, 1135], "state": [17, 45, 114, 116, 139, 150, 155, 175, 183, 205, 212, 215, 218, 228, 229, 231, 362, 379, 411, 429, 496, 497, 501, 502, 549, 655, 689, 719, 736, 774, 795, 809, 867, 877, 921, 925, 936, 937, 974, 980], "rather": [17, 65, 85, 122, 123, 143, 145, 146, 147, 148, 149, 150, 153, 154, 158, 167, 171, 175, 179, 195, 204, 222, 223, 297, 308, 333, 345, 387, 419, 420, 429, 447, 498, 499, 500, 501, 502, 507, 542, 549, 551, 565, 572, 583, 603, 628, 634, 648, 669, 719, 721, 751, 778, 783, 815, 817, 863, 875, 882, 883, 884, 886, 893, 898, 921, 922, 949, 953, 968, 993, 1000, 1003, 1011, 1051, 1052, 1055, 1066, 1068, 1083, 1090, 1112, 1117, 1130, 1132], "huge": [17, 149, 154, 164, 460, 696, 756, 774, 999, 1001, 1106], "tabl": [17, 39, 63, 65, 123, 136, 140, 142, 175, 181, 182, 199, 207, 212, 218, 219, 221, 222, 225, 226, 228, 231, 238, 243, 277, 341, 345, 360, 374, 375, 379, 380, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 627, 649, 687, 696, 728, 730, 731, 817, 1024, 1033, 1065, 1067, 1088, 1089], "isnot": 17, "big": [17, 104, 140, 143, 144, 150, 175, 179, 199, 205, 219, 226, 229, 272, 322, 368, 413, 425, 504, 554, 584, 647, 711, 898, 1076, 1088, 1145], "fat": [17, 140, 142, 146, 150, 219, 641, 711, 809, 1088], "sai": [17, 24, 65, 66, 106, 123, 131, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 158, 163, 164, 175, 179, 216, 221, 243, 262, 265, 269, 271, 272, 293, 294, 308, 322, 413, 419, 425, 435, 445, 449, 458, 469, 475, 490, 492, 504, 533, 542, 551, 561, 609, 622, 634, 643, 647, 675, 679, 681, 682, 683, 685, 690, 697, 700, 701, 706, 737, 751, 778, 817, 820, 822, 857, 875, 882, 884, 895, 899, 910, 912, 922, 934, 945, 949, 955, 964, 967, 968, 974, 978, 1000, 1016, 1028, 1033, 1063, 1084, 1119, 1133], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 68, 78, 80, 85, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 120, 122, 127, 130, 135, 136, 139, 140, 142, 143, 144, 145, 148, 149, 154, 158, 162, 165, 167, 169, 170, 171, 172, 174, 175, 177, 179, 180, 182, 183, 184, 185, 190, 192, 193, 194, 195, 200, 203, 204, 205, 208, 209, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 225, 226, 228, 229, 232, 233, 234, 235, 237, 239, 242, 243, 247, 248, 249, 252, 256, 258, 261, 262, 264, 265, 271, 272, 274, 278, 279, 283, 285, 286, 293, 294, 297, 301, 302, 307, 308, 309, 310, 311, 312, 319, 322, 323, 324, 325, 326, 327, 333, 335, 336, 340, 351, 354, 355, 385, 386, 388, 389, 390, 391, 397, 401, 404, 408, 412, 417, 421, 423, 425, 426, 427, 430, 432, 434, 436, 437, 438, 443, 444, 447, 453, 467, 490, 491, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 526, 529, 532, 534, 535, 538, 541, 544, 547, 552, 554, 566, 567, 568, 569, 575, 627, 631, 638, 641, 649, 664, 687, 693, 697, 707, 720, 728, 729, 730, 731, 734, 739, 740, 744, 745, 747, 748, 755, 756, 759, 769, 774, 780, 782, 785, 787, 793, 794, 796, 799, 802, 803, 804, 807, 808, 810, 811, 812, 814, 815, 817, 818, 820, 821, 822, 823, 824, 825, 826, 828, 829, 830, 831, 834, 836, 837, 838, 842, 846, 847, 848, 849, 850, 852, 855, 858, 863, 866, 871, 874, 875, 878, 882, 883, 884, 885, 887, 888, 890, 891, 897, 898, 901, 902, 903, 912, 915, 916, 919, 920, 926, 929, 932, 935, 937, 941, 943, 944, 945, 948, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 969, 970, 975, 976, 977, 980, 983, 988, 991, 994, 999, 1003, 1005, 1007, 1018, 1024, 1027, 1028, 1034, 1035, 1045, 1048, 1059, 1060, 1063, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1089, 1090, 1101, 1105, 1110, 1111, 1112, 1113, 1116, 1118, 1121, 1127, 1132, 1134, 1135, 1136, 1143, 1144, 1145, 1147], "rst": [17, 23, 32, 34, 35, 36, 38, 114, 127, 139, 162, 169, 174, 177, 183, 231, 241, 330, 526, 529, 532, 535, 538, 541, 544, 941, 944, 948, 1116, 1121], "render": [17, 40, 148], "dure": [17, 27, 45, 46, 104, 106, 133, 142, 143, 144, 145, 149, 150, 154, 158, 163, 175, 179, 231, 325, 388, 392, 393, 407, 419, 424, 468, 475, 501, 504, 585, 603, 660, 699, 774, 778, 783, 810, 816, 882, 884, 893, 954, 968, 969, 988, 1001, 1003, 1018, 1102, 1110], "regular": [17, 143, 167, 178, 192, 208, 215, 216, 223, 242, 243, 245, 247, 248, 257, 276, 277, 347, 413, 431, 562, 564, 696, 729, 766, 778, 823, 857, 860, 862, 871, 884, 895, 945, 946, 988, 1018, 1020, 1076], "process": [17, 28, 61, 63, 65, 73, 78, 80, 97, 99, 110, 111, 114, 148, 153, 160, 167, 173, 175, 182, 183, 185, 219, 249, 258, 271, 272, 279, 293, 324, 325, 332, 337, 390, 396, 425, 434, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 714, 720, 729, 730, 731, 740, 745, 748, 750, 755, 759, 761, 764, 765, 768, 769, 770, 771, 773, 775, 778, 782, 783, 784, 787, 789, 792, 793, 795, 796, 798, 799, 805, 806, 807, 808, 809, 812, 813, 814, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 839, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 874, 883, 886, 887, 888, 889, 890, 893, 897, 898, 899, 903, 904, 905, 907, 908, 910, 912, 913, 915, 920, 921, 922, 929, 934, 935, 937, 938, 939, 946, 949, 950, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 970, 979, 987, 1000, 1001, 1055, 1122, 1135, 1144, 1145], "mean": [17, 29, 73, 74, 110, 111, 114, 143, 145, 148, 150, 164, 166, 167, 179, 199, 202, 203, 216, 218, 231, 235, 262, 277, 285, 293, 297, 301, 307, 308, 345, 366, 367, 368, 390, 409, 414, 419, 473, 551, 559, 562, 563, 629, 675, 697, 701, 709, 710, 731, 737, 753, 813, 820, 823, 825, 826, 834, 875, 882, 883, 884, 911, 918, 934, 938, 940, 968, 971, 980, 995, 1003, 1006, 1020, 1021, 1026, 1054, 1074, 1077, 1081, 1083, 1084, 1090, 1095, 1103, 1117, 1132, 1135], "specif": [17, 63, 112, 146, 212, 218, 219, 228, 231, 277, 283, 294, 308, 342, 390, 407, 419, 449, 496, 499, 501, 504, 650, 693, 707, 729, 737, 751, 774, 778, 804, 814, 875, 882, 884, 898, 904, 920, 921, 946, 952, 964, 975, 983, 984, 1085, 1101, 1110, 1145, 1146], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 63, 69, 70, 73, 74, 85, 92, 97, 106, 107, 108, 110, 111, 114, 115, 116, 117, 118, 120, 122, 123, 150, 161, 162, 163, 165, 170, 179, 180, 181, 182, 184, 186, 187, 199, 203, 205, 212, 215, 216, 218, 219, 223, 227, 229, 230, 233, 235, 238, 241, 243, 245, 247, 248, 250, 255, 256, 260, 262, 263, 265, 269, 270, 271, 272, 274, 275, 276, 277, 281, 283, 293, 294, 295, 297, 303, 308, 310, 316, 317, 324, 325, 326, 333, 359, 405, 429, 431, 439, 447, 448, 449, 450, 451, 453, 454, 456, 457, 461, 467, 468, 469, 471, 472, 474, 475, 476, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 512, 514, 519, 525, 533, 536, 539, 545, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 560, 561, 563, 565, 570, 572, 573, 576, 582, 591, 592, 598, 602, 608, 611, 614, 615, 620, 621, 622, 624, 625, 629, 630, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 651, 652, 653, 654, 655, 656, 657, 660, 664, 669, 671, 672, 673, 675, 677, 678, 681, 682, 683, 684, 685, 686, 687, 689, 690, 692, 694, 701, 703, 706, 707, 710, 711, 712, 719, 720, 721, 725, 726, 727, 728, 730, 731, 733, 875, 882, 883, 884, 916, 918, 919, 973, 975, 977, 983, 984, 985, 986, 987, 990, 991, 996, 997, 998, 999, 1001, 1004, 1006, 1007, 1015, 1035, 1062, 1063, 1064, 1069, 1071, 1074, 1089, 1103, 1104, 1110, 1111, 1122, 1130, 1140], "handout": [17, 114], "warn": [17, 32, 40, 123, 139, 154, 195, 205, 256, 268, 319, 330, 355, 379, 410, 411, 413, 434, 448, 503, 505, 549, 553, 604, 648, 660, 731, 747, 753, 756, 815, 874, 904, 915, 929, 951, 975, 1026, 1105], "produc": [17, 108, 163, 165, 204, 218, 407, 419, 424, 675, 681, 683, 719, 721, 895, 925, 926, 944, 952, 955, 968, 981, 982, 1015, 1018, 1020, 1084], "error": [17, 21, 27, 29, 46, 65, 88, 97, 115, 117, 123, 139, 142, 143, 144, 145, 148, 149, 158, 162, 165, 173, 176, 179, 182, 189, 200, 204, 210, 212, 215, 219, 220, 221, 225, 228, 231, 235, 238, 240, 243, 252, 253, 256, 259, 262, 265, 276, 277, 290, 295, 307, 322, 327, 329, 333, 352, 355, 357, 364, 368, 382, 383, 389, 395, 396, 398, 411, 412, 413, 416, 433, 434, 435, 437, 438, 439, 440, 443, 450, 454, 473, 474, 475, 487, 495, 506, 525, 542, 547, 549, 551, 552, 556, 557, 558, 559, 560, 562, 564, 572, 575, 580, 622, 624, 625, 634, 641, 648, 651, 655, 657, 658, 659, 660, 664, 684, 685, 686, 694, 697, 699, 701, 706, 707, 709, 720, 721, 730, 731, 734, 741, 756, 766, 770, 774, 778, 794, 808, 811, 812, 818, 821, 874, 875, 883, 885, 897, 899, 900, 901, 902, 903, 904, 912, 913, 915, 923, 929, 931, 932, 935, 936, 937, 945, 949, 950, 954, 955, 964, 969, 975, 1005, 1006, 1017, 1018, 1022, 1026, 1028, 1035, 1048, 1074, 1076, 1083, 1105, 1110, 1112, 1117, 1130], "output": [17, 23, 33, 40, 51, 53, 55, 56, 61, 63, 85, 86, 107, 119, 122, 123, 139, 145, 147, 148, 149, 162, 165, 171, 183, 184, 195, 204, 212, 218, 221, 222, 228, 231, 259, 307, 322, 327, 345, 346, 351, 352, 353, 354, 358, 390, 424, 425, 431, 432, 433, 473, 475, 490, 505, 508, 509, 510, 511, 523, 525, 533, 536, 562, 612, 630, 631, 644, 692, 697, 705, 731, 736, 791, 802, 809, 818, 821, 822, 823, 834, 838, 860, 864, 865, 870, 871, 875, 885, 896, 904, 907, 910, 918, 921, 922, 926, 946, 949, 950, 952, 982, 1021, 1026, 1027, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1050, 1056, 1058, 1060, 1065, 1066, 1067, 1068, 1079, 1082, 1083, 1088, 1092, 1101, 1105, 1118, 1125, 1141], "must": [17, 39, 43, 44, 110, 111, 114, 117, 146, 150, 165, 171, 175, 176, 178, 179, 182, 186, 187, 200, 202, 204, 212, 218, 219, 226, 228, 229, 231, 252, 277, 294, 345, 362, 365, 379, 387, 405, 407, 422, 429, 431, 435, 441, 452, 457, 458, 471, 474, 475, 488, 489, 503, 506, 509, 510, 511, 523, 533, 559, 560, 562, 564, 574, 575, 609, 622, 629, 636, 643, 651, 652, 654, 655, 675, 699, 701, 713, 717, 731, 756, 762, 770, 776, 783, 805, 806, 822, 832, 840, 874, 885, 891, 894, 904, 905, 908, 913, 915, 923, 932, 934, 936, 946, 952, 955, 970, 975, 976, 993, 998, 1004, 1017, 1018, 1020, 1021, 1023, 1026, 1055, 1076, 1111, 1122], "role": [17, 39, 65, 146, 150, 425, 506, 875], "somewher": [17, 164, 183, 195, 202, 235, 247, 248, 307, 319, 390, 407, 409, 429, 454, 475, 542, 675, 921, 978, 1003, 1089], "top": [17, 28, 32, 34, 35, 38, 39, 50, 142, 143, 145, 146, 158, 164, 166, 167, 183, 185, 212, 218, 221, 228, 231, 432, 781, 790, 875, 895, 934, 936, 975, 983, 1005, 1051, 1055, 1130, 1134, 1136, 1141], "insid": [17, 35, 39, 42, 50, 114, 123, 142, 143, 171, 173, 195, 212, 218, 228, 231, 248, 268, 270, 285, 294, 301, 307, 322, 351, 355, 365, 383, 386, 388, 389, 407, 412, 431, 493, 504, 509, 557, 563, 565, 721, 729, 739, 749, 817, 847, 857, 882, 884, 907, 921, 940, 966, 971, 974, 983, 1020, 1026, 1094, 1097, 1101, 1113, 1132, 1135], "ideal": [17, 154, 170, 212, 218, 228, 231, 248, 250, 418, 434, 445, 452, 500, 621, 675, 737, 756, 774, 778, 871, 891, 955, 995, 997], "slideshow": [17, 23, 222, 234, 261, 271, 282, 290, 293, 297, 735, 738, 740, 743, 745, 748, 750, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 782, 784, 787, 789, 793, 796, 799, 1019, 1107, 1114], "manual": [17, 61, 63, 115, 120, 122, 140, 150, 158, 181, 182, 212, 213, 218, 221, 228, 231, 261, 263, 353, 354, 357, 364, 402, 407, 431, 548, 590, 640, 647, 658, 684, 696, 697, 733, 734, 737, 778, 805, 806, 875, 882, 883, 905, 908, 921, 923, 925, 966, 968, 973, 981, 982, 986, 990, 1031], "theme": [17, 65, 314, 1007, 1026], "url": [17, 140, 147, 149, 158, 170, 504, 974, 1031], "_static": 17, "ui": [17, 32, 150, 368, 627], "default": [17, 23, 58, 61, 97, 110, 111, 112, 114, 118, 143, 144, 149, 150, 154, 160, 171, 180, 182, 184, 191, 193, 204, 212, 215, 218, 221, 224, 227, 228, 231, 235, 238, 241, 246, 249, 256, 258, 259, 263, 267, 268, 270, 273, 277, 279, 280, 315, 322, 368, 379, 411, 419, 425, 431, 432, 434, 437, 441, 444, 450, 453, 467, 469, 478, 479, 495, 505, 547, 549, 550, 555, 556, 559, 560, 584, 603, 604, 620, 625, 627, 629, 632, 633, 634, 635, 637, 639, 640, 641, 642, 643, 644, 647, 648, 655, 656, 685, 687, 703, 712, 717, 719, 720, 721, 728, 730, 731, 774, 802, 805, 806, 808, 820, 833, 838, 857, 869, 870, 874, 875, 877, 882, 883, 885, 891, 894, 908, 912, 918, 921, 923, 925, 937, 949, 951, 953, 955, 966, 995, 997, 1003, 1022, 1024, 1026, 1031, 1067, 1084, 1094, 1097, 1099, 1105, 1110, 1112, 1130], "given": [17, 39, 59, 62, 69, 81, 102, 106, 107, 110, 111, 128, 143, 145, 148, 150, 154, 164, 212, 218, 228, 231, 235, 259, 267, 268, 270, 277, 308, 355, 370, 413, 472, 501, 504, 506, 525, 549, 618, 629, 654, 729, 739, 749, 760, 778, 815, 820, 829, 831, 838, 860, 882, 962, 974, 1061, 1070, 1076, 1078, 1084, 1095, 1098, 1133, 1145], "path": [17, 21, 97, 99, 114, 117, 131, 132, 139, 148, 171, 175, 183, 186, 203, 214, 215, 216, 220, 223, 227, 228, 231, 249, 258, 259, 279, 280, 283, 285, 286, 301, 302, 307, 308, 313, 315, 322, 327, 389, 425, 431, 433, 436, 437, 439, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 547, 572, 704, 720, 730, 731, 742, 756, 768, 778, 804, 805, 806, 807, 808, 811, 812, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 839, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 874, 894, 897, 903, 904, 905, 913, 914, 915, 929, 931, 932, 933, 935, 937, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 973, 983, 1000, 1003, 1064, 1103, 1105, 1110, 1112, 1120, 1132], "commit": [17, 46, 77, 112, 125, 146, 149, 157, 158, 200, 204, 205, 216, 219, 229, 330, 751, 1076, 1085, 1088, 1110, 1142], "place": [17, 55, 114, 131, 140, 144, 145, 147, 148, 149, 150, 158, 163, 172, 176, 199, 215, 221, 231, 267, 268, 345, 361, 383, 390, 407, 430, 439, 443, 447, 471, 473, 487, 506, 519, 564, 578, 580, 581, 592, 603, 611, 614, 615, 625, 644, 710, 713, 721, 726, 729, 731, 756, 778, 807, 828, 829, 830, 831, 882, 883, 891, 937, 967, 969, 978, 1008, 1017, 1021, 1023, 1041, 1098, 1112], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 78, 99, 114, 143, 150, 179, 195, 216, 249, 258, 259, 279, 280, 340, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 664, 669, 720, 730, 731, 778, 805, 806, 807, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 874, 882, 894, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 1080, 1081, 1088, 1101], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 78, 112, 120, 122, 133, 140, 142, 143, 144, 146, 148, 150, 153, 158, 162, 163, 194, 200, 205, 210, 212, 216, 218, 228, 231, 243, 248, 250, 259, 268, 294, 307, 325, 329, 335, 336, 403, 410, 419, 420, 425, 429, 433, 434, 454, 503, 504, 505, 506, 519, 542, 566, 567, 568, 569, 572, 619, 624, 689, 692, 705, 706, 719, 737, 741, 746, 747, 749, 760, 762, 770, 774, 778, 779, 817, 838, 839, 857, 870, 875, 877, 882, 883, 884, 891, 901, 934, 940, 945, 950, 952, 955, 964, 973, 976, 987, 991, 997, 1020, 1033, 1037, 1054, 1059, 1071, 1076, 1081, 1084, 1092, 1105, 1111, 1117, 1122, 1133], "uri": 17, "well": [17, 42, 65, 143, 145, 148, 149, 150, 154, 167, 171, 179, 202, 204, 231, 267, 269, 277, 285, 294, 301, 308, 368, 390, 419, 429, 457, 497, 503, 506, 507, 530, 550, 554, 565, 579, 647, 654, 661, 684, 697, 707, 711, 803, 822, 838, 871, 878, 883, 884, 895, 908, 910, 928, 952, 954, 967, 975, 976, 979, 983, 986, 990, 993, 996, 1007, 1011, 1021, 1079, 1081, 1089, 1106, 1132], "blah": [19, 23, 39, 62, 65, 125, 143, 146, 165, 176, 183, 186, 191, 199, 202, 208, 212, 218, 219, 221, 223, 228, 231, 238, 241, 253, 260, 263, 273, 277, 295, 314, 315, 322, 330, 333, 413, 660, 729, 734, 742, 901, 902, 945, 946, 971, 1006, 1012, 1031, 1092], "watch": [20, 32, 144, 145, 146, 164, 171, 175, 179, 180, 184, 270, 272, 276, 430, 697, 875, 883, 919, 979, 1000, 1102], "w5g8k7a2gbg": 20, "bore": [20, 204, 226, 240, 256, 282, 838, 946, 950, 1007, 1076], "good": [20, 27, 29, 43, 97, 114, 140, 142, 143, 144, 145, 150, 158, 167, 175, 179, 182, 200, 203, 204, 212, 216, 221, 222, 223, 225, 226, 229, 235, 250, 252, 262, 265, 268, 270, 276, 277, 303, 341, 364, 368, 409, 413, 415, 423, 424, 429, 452, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 530, 547, 551, 555, 556, 570, 573, 576, 592, 598, 602, 605, 611, 614, 615, 620, 624, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 658, 687, 698, 703, 709, 712, 718, 720, 722, 728, 730, 731, 735, 737, 770, 778, 783, 803, 817, 821, 871, 875, 883, 884, 908, 910, 927, 936, 939, 940, 946, 949, 975, 988, 1006, 1007, 1018, 1021, 1023, 1026, 1038, 1048, 1075, 1076, 1083, 1102, 1132], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 256], "staticmethod": [21, 256], "member": [21, 35, 38, 43, 57, 63, 110, 111, 114, 123, 158, 164, 165, 166, 176, 181, 203, 221, 233, 246, 261, 268, 277, 326, 398, 407, 414, 451, 493, 495, 498, 501, 525, 539, 547, 549, 550, 552, 553, 554, 555, 561, 565, 566, 568, 570, 603, 604, 608, 629, 632, 635, 636, 637, 639, 640, 641, 642, 643, 644, 647, 655, 659, 660, 669, 675, 685, 701, 707, 727, 731, 739, 744, 746, 766, 774, 778, 791, 797, 804, 805, 806, 821, 822, 823, 824, 825, 826, 832, 867, 871, 882, 910, 964, 1025, 1101, 1122], "final": [21, 38, 42, 61, 78, 106, 139, 165, 175, 179, 182, 202, 204, 212, 218, 219, 228, 233, 246, 252, 276, 431, 504, 506, 571, 572, 621, 647, 658, 687, 730, 731, 741, 772, 778, 805, 806, 871, 883, 884, 952, 969, 973, 986, 1038, 1054, 1076, 1130], "exec": [21, 29, 150, 175, 184, 215, 229, 230, 238, 245, 257, 261, 263, 271, 272, 273, 277, 284, 293, 297, 731, 866, 871, 904, 907, 928, 952, 977, 1074, 1143], "dict": [21, 162, 175, 176, 180, 191, 193, 194, 199, 202, 216, 217, 218, 219, 222, 224, 227, 228, 229, 233, 239, 253, 256, 263, 273, 277, 283, 288, 295, 314, 317, 322, 647, 973, 976, 988, 989, 998, 1024], "There": [21, 45, 55, 57, 65, 68, 81, 97, 140, 142, 144, 145, 146, 147, 150, 154, 155, 171, 172, 176, 178, 179, 182, 186, 187, 200, 205, 221, 224, 225, 226, 229, 235, 262, 265, 268, 269, 270, 271, 272, 293, 294, 308, 343, 353, 359, 368, 383, 386, 407, 409, 416, 419, 430, 431, 435, 444, 449, 474, 475, 525, 533, 550, 555, 600, 625, 643, 644, 656, 658, 664, 687, 692, 703, 707, 711, 712, 720, 728, 730, 731, 751, 778, 783, 809, 838, 875, 882, 883, 928, 938, 949, 950, 1001, 1007, 1018, 1076, 1085, 1111, 1117], "half": [21, 36, 143, 144, 145, 205, 415, 434, 776, 817, 883, 936, 973], "heart": [21, 32, 38, 133, 434, 817, 1082], "split": [21, 140, 163, 166, 199, 203, 208, 209, 212, 215, 216, 218, 223, 227, 233, 241, 244, 256, 261, 263, 277, 283, 313, 322, 407, 431, 453, 525, 973, 1082, 1103], "pimp": 21, "elabor": [21, 154, 219, 229, 409, 432, 883], "namespac": [21, 175, 212, 218, 225, 228, 231, 235, 246, 256, 454, 456, 471, 507, 508, 509, 510, 511, 513, 523, 524, 542, 564, 572, 577, 578, 579, 580, 581, 587, 588, 590, 591, 594, 595, 596, 600, 614, 631, 637, 638, 647, 662, 684, 694, 697, 719, 721, 722, 882, 916, 919, 931, 933, 983], "__init__": [21, 63, 139, 162, 163, 174, 176, 179, 181, 199, 202, 203, 215, 216, 218, 225, 228, 231, 235, 241, 244, 253, 256, 263, 273, 277, 295, 431, 973, 974, 975, 983, 988, 989, 990, 992, 993, 994, 995, 996, 997, 1103, 1110], "__all__": [21, 231, 235], "etc": [21, 23, 29, 63, 90, 100, 114, 132, 136, 140, 144, 148, 157, 160, 161, 165, 172, 179, 182, 186, 187, 189, 192, 193, 200, 201, 203, 204, 206, 210, 213, 215, 216, 218, 222, 223, 226, 232, 233, 234, 235, 237, 238, 240, 242, 245, 255, 256, 259, 262, 263, 265, 273, 275, 276, 278, 281, 282, 308, 309, 310, 311, 312, 313, 322, 327, 330, 340, 363, 368, 424, 434, 442, 456, 539, 627, 689, 695, 722, 729, 731, 737, 751, 778, 790, 800, 808, 810, 813, 815, 818, 820, 821, 822, 823, 834, 838, 841, 852, 855, 857, 858, 860, 862, 863, 864, 865, 866, 867, 869, 871, 874, 884, 885, 886, 894, 895, 898, 899, 900, 905, 911, 920, 931, 945, 946, 950, 952, 973, 975, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1022, 1026, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1101, 1104, 1125, 1126, 1134, 1136, 1140, 1141, 1144, 1146], "user": [21, 23, 29, 31, 47, 53, 63, 65, 84, 101, 102, 110, 111, 114, 117, 127, 129, 139, 140, 142, 143, 144, 145, 147, 148, 150, 158, 165, 171, 174, 175, 176, 179, 183, 190, 199, 202, 204, 206, 215, 221, 223, 228, 229, 231, 232, 234, 235, 238, 241, 243, 252, 253, 256, 259, 262, 263, 265, 273, 277, 280, 287, 288, 290, 294, 303, 307, 319, 322, 331, 387, 418, 429, 431, 432, 434, 439, 447, 457, 474, 475, 495, 509, 525, 547, 550, 551, 557, 564, 608, 612, 631, 633, 634, 635, 636, 643, 644, 660, 664, 696, 707, 720, 730, 731, 737, 739, 749, 751, 776, 778, 791, 792, 805, 806, 808, 812, 816, 817, 818, 822, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 862, 866, 869, 874, 875, 876, 885, 891, 898, 903, 904, 905, 908, 910, 913, 915, 920, 929, 932, 933, 935, 937, 938, 949, 952, 966, 968, 969, 970, 973, 990, 991, 1028, 1035, 1037, 1038, 1042, 1054, 1055, 1061, 1066, 1068, 1071, 1073, 1074, 1087, 1092, 1095, 1099, 1102, 1112, 1119, 1130], "import": [21, 29, 63, 65, 131, 139, 145, 150, 153, 163, 164, 165, 166, 175, 176, 179, 181, 182, 187, 191, 193, 194, 195, 203, 207, 208, 209, 214, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 247, 248, 253, 256, 260, 261, 262, 263, 265, 267, 273, 277, 283, 288, 291, 295, 315, 317, 345, 361, 431, 434, 435, 572, 589, 655, 693, 707, 710, 731, 760, 778, 820, 838, 875, 878, 882, 891, 903, 930, 940, 951, 972, 973, 974, 976, 984, 986, 988, 994, 995, 998, 1004, 1005, 1006, 1007, 1008, 1009, 1011, 1016, 1020, 1028, 1029, 1030, 1031, 1064, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1084, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1107, 1110, 1111, 1114, 1117, 1135, 1140], "pythonpath": [21, 40, 61, 175, 261, 983, 1031], "goto": [21, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731, 949], "orgi": [21, 439, 651], "perspect": [21, 38, 150, 172], "alwai": [21, 43, 65, 80, 112, 139, 140, 145, 155, 172, 179, 202, 224, 235, 261, 262, 265, 314, 322, 327, 345, 363, 389, 390, 402, 414, 415, 419, 420, 422, 423, 439, 440, 459, 469, 499, 548, 554, 564, 583, 586, 642, 647, 651, 662, 686, 695, 699, 702, 706, 711, 737, 756, 774, 778, 783, 804, 838, 839, 882, 883, 884, 898, 904, 910, 938, 949, 954, 964, 969, 975, 1003, 1007, 1021, 1076, 1081, 1082, 1083, 1110, 1111, 1130], "valgrind": [21, 97, 170, 204, 340, 417, 421, 422, 424, 426, 427, 454, 519, 529, 531, 539, 542, 557, 692, 705, 706, 731, 1127, 1128], "supervis": [21, 1083], "hack": [21, 53, 59, 62, 97, 123, 137, 140, 158, 166, 170, 175, 179, 180, 204, 205, 219, 221, 229, 240, 247, 248, 249, 250, 258, 270, 271, 279, 280, 287, 290, 294, 303, 322, 326, 330, 331, 333, 340, 341, 389, 432, 453, 454, 467, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 567, 582, 583, 603, 645, 656, 687, 688, 689, 693, 705, 720, 729, 730, 731, 732, 808, 833, 834, 874, 915, 962, 1000, 1096, 1102, 1110, 1129, 1130, 1144], "someth": [21, 43, 55, 66, 72, 73, 74, 78, 83, 84, 87, 116, 136, 142, 143, 145, 146, 148, 150, 154, 158, 164, 171, 175, 183, 191, 193, 194, 195, 205, 215, 219, 226, 241, 244, 268, 270, 287, 290, 303, 317, 380, 381, 395, 449, 471, 504, 506, 542, 553, 557, 562, 565, 572, 596, 640, 641, 642, 652, 655, 669, 699, 707, 709, 710, 725, 726, 727, 731, 739, 751, 755, 766, 774, 778, 780, 783, 798, 850, 874, 875, 878, 882, 883, 884, 899, 900, 908, 910, 911, 923, 934, 936, 937, 949, 964, 971, 973, 974, 976, 980, 997, 1004, 1006, 1011, 1021, 1027, 1058, 1083, 1135], "malloc": [21, 170, 402, 403, 416, 531, 764, 898, 950, 952, 1127], "seomth": 21, "cleanup": [21, 143, 162, 333, 548, 624, 660, 704, 950, 973, 1111], "obviou": [21, 57, 150, 158, 164, 225, 235, 262, 265, 319, 390, 409, 431, 506, 548, 655, 664, 705, 711, 904, 946, 971, 1007, 1018, 1133], "lead": [21, 110, 111, 123, 143, 145, 149, 150, 167, 204, 231, 235, 259, 277, 297, 349, 357, 367, 439, 629, 641, 778, 804, 817, 883, 936, 945, 946, 964, 991, 1017, 1028, 1038, 1089, 1104], "sever": [21, 87, 114, 143, 203, 204, 387, 456, 461, 635, 646, 776, 834, 875, 975, 1001, 1012], "duplic": [21, 42, 49, 97, 115, 122, 163, 176, 221, 229, 239, 261, 307, 349, 351, 412, 413, 456, 515, 523, 536, 557, 564, 575, 653, 710, 731, 785, 821, 874, 910, 913, 915, 932, 1058, 1110, 1112], "when": [21, 28, 30, 43, 63, 65, 75, 80, 110, 111, 118, 120, 123, 130, 131, 140, 142, 143, 144, 145, 148, 150, 158, 160, 172, 175, 181, 204, 205, 212, 216, 218, 219, 221, 228, 229, 231, 234, 235, 248, 250, 259, 267, 268, 270, 277, 285, 301, 308, 313, 322, 333, 340, 347, 355, 357, 363, 368, 379, 386, 390, 405, 410, 411, 412, 413, 414, 419, 429, 431, 434, 437, 441, 444, 445, 448, 449, 453, 473, 475, 506, 507, 551, 553, 554, 557, 565, 587, 603, 618, 619, 622, 624, 629, 631, 636, 640, 642, 647, 650, 652, 654, 655, 658, 675, 689, 694, 697, 702, 706, 707, 710, 714, 717, 719, 721, 729, 746, 749, 756, 760, 772, 774, 776, 778, 792, 811, 813, 817, 820, 822, 834, 838, 860, 871, 883, 884, 891, 895, 899, 900, 904, 907, 908, 926, 928, 934, 937, 938, 940, 945, 949, 950, 952, 954, 969, 973, 974, 975, 980, 984, 987, 993, 995, 1000, 1003, 1006, 1007, 1009, 1011, 1016, 1017, 1018, 1028, 1067, 1084, 1089, 1094, 1105, 1110, 1112, 1119, 1130, 1132, 1133], "void": [21, 42, 44, 55, 58, 107, 116, 120, 122, 145, 146, 154, 186, 204, 216, 322, 344, 345, 347, 351, 353, 355, 359, 365, 369, 383, 385, 386, 387, 388, 390, 393, 395, 396, 399, 402, 403, 405, 406, 412, 413, 416, 432, 439, 448, 449, 450, 454, 456, 460, 469, 478, 479, 483, 484, 487, 488, 489, 491, 503, 505, 506, 507, 530, 542, 549, 551, 552, 553, 554, 557, 558, 559, 560, 561, 562, 564, 565, 572, 578, 582, 591, 604, 618, 621, 622, 625, 627, 628, 637, 639, 647, 648, 653, 657, 660, 661, 675, 677, 678, 680, 681, 682, 683, 685, 686, 689, 690, 691, 692, 693, 694, 696, 697, 699, 704, 705, 706, 707, 709, 711, 714, 716, 719, 721, 739, 742, 749, 756, 758, 760, 762, 764, 772, 774, 783, 788, 792, 798, 815, 835, 896, 900, 901, 902, 904, 914, 921, 923, 925, 927, 931, 936, 942, 945, 946, 949, 950, 952, 964, 968, 970, 1122], "f": [21, 31, 38, 43, 63, 109, 114, 129, 144, 145, 146, 154, 166, 176, 181, 182, 187, 188, 191, 193, 199, 200, 202, 203, 209, 211, 212, 215, 216, 218, 222, 224, 225, 228, 231, 235, 238, 240, 242, 244, 252, 253, 256, 260, 263, 268, 273, 277, 282, 284, 291, 295, 314, 316, 318, 333, 359, 364, 374, 376, 385, 388, 393, 412, 413, 415, 419, 423, 431, 448, 554, 558, 574, 648, 654, 660, 661, 690, 711, 714, 737, 742, 804, 815, 822, 838, 857, 864, 866, 867, 882, 883, 884, 885, 907, 938, 940, 945, 960, 964, 967, 971, 973, 974, 975, 976, 988, 990, 992, 993, 996, 997, 998, 1017, 1018, 1026, 1033, 1038, 1071, 1073, 1076, 1084, 1110, 1140], "alloc": [21, 118, 145, 146, 163, 165, 204, 212, 215, 218, 228, 231, 253, 357, 386, 402, 407, 410, 413, 416, 454, 538, 540, 554, 556, 557, 564, 583, 588, 595, 600, 611, 615, 619, 644, 655, 658, 692, 697, 706, 707, 711, 731, 734, 737, 739, 764, 766, 780, 783, 815, 821, 900, 901, 902, 922, 982, 1033], "variabl": [21, 29, 87, 89, 90, 97, 104, 110, 111, 139, 144, 145, 154, 158, 162, 164, 165, 171, 175, 176, 179, 180, 181, 182, 184, 187, 188, 189, 194, 195, 200, 201, 203, 204, 206, 210, 213, 214, 216, 217, 218, 221, 222, 224, 226, 232, 233, 234, 235, 237, 239, 240, 242, 246, 249, 254, 255, 256, 258, 259, 262, 265, 268, 272, 274, 275, 276, 278, 279, 280, 281, 282, 288, 293, 294, 295, 297, 308, 309, 310, 311, 312, 313, 322, 324, 325, 344, 346, 347, 355, 360, 368, 375, 379, 380, 383, 384, 385, 389, 391, 392, 395, 397, 401, 402, 404, 405, 407, 408, 409, 415, 416, 417, 419, 421, 426, 427, 433, 435, 439, 441, 460, 468, 474, 483, 488, 493, 534, 539, 554, 562, 563, 570, 582, 622, 629, 644, 649, 655, 658, 660, 687, 689, 701, 720, 727, 728, 729, 730, 731, 747, 766, 778, 808, 809, 812, 815, 839, 858, 874, 915, 920, 923, 927, 928, 929, 934, 952, 962, 963, 964, 969, 971, 973, 976, 977, 983, 984, 985, 986, 987, 991, 999, 1003, 1005, 1010, 1014, 1016, 1018, 1019, 1022, 1027, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1083, 1086, 1089, 1090, 1096, 1098, 1103, 1104, 1105, 1131, 1133, 1140, 1146], "filenam": [21, 42, 50, 55, 58, 142, 162, 166, 191, 209, 212, 215, 216, 218, 223, 228, 231, 241, 256, 259, 272, 273, 277, 314, 431, 490, 493, 507, 729, 778, 804, 805, 867, 905, 908, 909, 910, 911, 912, 916, 919, 945, 973, 983, 1028, 1033, 1045, 1054, 1056, 1060, 1066, 1068], "getenv": [21, 488, 933], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 73, 74, 83, 85, 114, 142, 143, 144, 145, 146, 148, 150, 153, 154, 158, 171, 175, 179, 180, 182, 184, 190, 200, 203, 210, 213, 216, 218, 219, 221, 223, 229, 231, 232, 237, 238, 240, 243, 250, 251, 252, 255, 259, 261, 263, 269, 273, 275, 276, 277, 280, 281, 282, 307, 308, 309, 310, 311, 312, 322, 326, 328, 333, 352, 353, 360, 368, 375, 384, 391, 397, 401, 404, 405, 407, 408, 409, 411, 413, 416, 417, 421, 425, 426, 427, 430, 446, 453, 474, 490, 495, 506, 507, 530, 536, 547, 550, 551, 553, 556, 559, 562, 608, 612, 631, 634, 646, 649, 656, 664, 687, 701, 709, 725, 728, 729, 730, 731, 737, 751, 762, 778, 780, 804, 805, 806, 809, 815, 820, 821, 822, 823, 825, 826, 829, 838, 839, 871, 874, 878, 882, 883, 884, 891, 896, 898, 899, 901, 902, 905, 908, 911, 913, 914, 915, 916, 918, 919, 926, 928, 932, 936, 942, 945, 946, 949, 950, 969, 975, 976, 991, 994, 996, 1004, 1012, 1034, 1035, 1045, 1054, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1082, 1084, 1092, 1099, 1103, 1143], "onli": [21, 29, 42, 43, 89, 108, 110, 111, 114, 115, 116, 118, 123, 133, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 158, 163, 164, 171, 175, 179, 181, 182, 200, 202, 205, 212, 215, 218, 221, 222, 223, 225, 228, 229, 231, 232, 234, 235, 240, 242, 243, 244, 255, 256, 259, 261, 262, 268, 272, 275, 277, 281, 282, 285, 294, 301, 313, 316, 330, 337, 347, 353, 355, 356, 357, 359, 364, 365, 367, 372, 379, 380, 383, 385, 387, 388, 389, 390, 406, 407, 411, 412, 413, 414, 415, 424, 429, 431, 432, 434, 435, 438, 443, 444, 448, 449, 450, 452, 460, 468, 469, 471, 473, 474, 475, 487, 488, 503, 504, 507, 510, 511, 525, 536, 549, 550, 551, 552, 554, 556, 558, 559, 562, 564, 565, 571, 585, 587, 603, 604, 608, 618, 619, 621, 625, 629, 633, 634, 641, 643, 647, 654, 658, 660, 664, 669, 675, 685, 689, 692, 696, 697, 701, 702, 706, 707, 713, 715, 717, 719, 721, 731, 734, 736, 739, 742, 747, 758, 764, 774, 778, 783, 786, 791, 795, 803, 804, 805, 806, 813, 816, 820, 822, 823, 828, 834, 838, 839, 860, 867, 875, 876, 877, 882, 883, 884, 885, 895, 900, 901, 904, 906, 907, 908, 912, 914, 918, 920, 923, 928, 931, 934, 936, 937, 938, 939, 945, 946, 949, 950, 952, 953, 964, 968, 969, 973, 974, 975, 978, 984, 988, 990, 993, 995, 996, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1016, 1021, 1022, 1026, 1028, 1031, 1035, 1040, 1048, 1050, 1051, 1054, 1055, 1059, 1061, 1074, 1076, 1081, 1082, 1083, 1085, 1088, 1097, 1101, 1102, 1110, 1116, 1117, 1119, 1122, 1130, 1132, 1135, 1147], "bullshit": [21, 65, 187, 199, 235, 434, 697, 1140], "everyon": [21, 65, 143, 148, 158, 179, 429, 634, 685, 825, 826, 836, 938], "get": [21, 55, 63, 97, 110, 111, 131, 132, 139, 140, 143, 145, 146, 153, 154, 162, 175, 176, 179, 181, 186, 193, 194, 195, 202, 204, 205, 212, 215, 218, 219, 221, 224, 225, 228, 231, 238, 244, 248, 250, 253, 256, 259, 263, 273, 277, 283, 295, 317, 322, 325, 327, 342, 368, 413, 422, 445, 449, 454, 469, 478, 483, 560, 567, 639, 647, 657, 675, 681, 701, 702, 705, 706, 707, 708, 710, 729, 731, 739, 744, 751, 778, 780, 794, 797, 811, 813, 817, 818, 838, 874, 884, 891, 894, 900, 901, 902, 915, 917, 922, 939, 946, 950, 967, 973, 986, 989, 995, 999, 1007, 1024, 1094, 1101, 1112, 1117, 1122, 1135], "point": [21, 34, 36, 38, 40, 61, 89, 97, 106, 109, 112, 114, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 158, 163, 164, 165, 166, 170, 175, 179, 180, 181, 182, 184, 202, 204, 205, 212, 215, 218, 221, 228, 231, 236, 239, 261, 270, 277, 294, 295, 297, 308, 328, 329, 330, 333, 344, 345, 346, 351, 357, 359, 361, 363, 367, 389, 392, 395, 398, 399, 402, 403, 413, 415, 444, 449, 452, 459, 460, 468, 491, 493, 505, 525, 526, 527, 550, 552, 554, 556, 557, 558, 560, 561, 563, 566, 570, 581, 582, 590, 605, 606, 619, 624, 625, 644, 647, 650, 652, 654, 658, 664, 675, 697, 701, 706, 710, 722, 731, 774, 778, 807, 815, 817, 821, 822, 838, 875, 876, 884, 894, 898, 901, 904, 937, 950, 953, 966, 970, 971, 972, 974, 978, 986, 1012, 1016, 1018, 1021, 1083, 1085, 1087, 1089, 1110, 1112, 1119, 1122, 1127, 1131], "unobvi": [21, 778], "best": [21, 30, 39, 48, 57, 143, 144, 145, 154, 167, 224, 355, 387, 409, 416, 419, 420, 429, 508, 552, 557, 621, 686, 699, 719, 766, 768, 770, 774, 776, 815, 838, 860, 876, 883, 884, 920, 934, 938, 966, 980, 986, 1023, 1028, 1030, 1087, 1097], "resourc": [21, 80, 97, 110, 111, 143, 145, 148, 160, 170, 205, 221, 262, 265, 270, 325, 333, 461, 525, 539, 550, 554, 555, 619, 644, 655, 656, 658, 687, 692, 703, 704, 706, 707, 712, 719, 720, 728, 730, 731, 762, 764, 772, 811, 815, 816, 883, 900, 901, 902, 920, 934, 937, 973, 1026], "leaki": 21, "erron": [21, 416, 1038], "worst": [21, 143, 387, 884, 936, 949, 1130, 1133], "extract": [21, 29, 55, 97, 132, 136, 203, 229, 232, 237, 240, 252, 255, 275, 276, 281, 282, 371, 390, 494, 495, 525, 536, 547, 729, 731, 778, 791, 804, 966, 991, 1013, 1035, 1069, 1070, 1071, 1072, 1074, 1082], "common": [21, 24, 135, 143, 200, 216, 217, 229, 235, 240, 390, 399, 430, 505, 583, 710, 729, 803, 875, 876, 884, 908, 945, 975, 980, 981, 982, 998, 1007, 1008, 1012, 1018, 1022, 1025, 1076, 1084, 1085, 1110, 1133], "hm": [21, 32, 63, 183, 193, 212, 215, 218, 225, 314, 768, 794, 795, 902, 995, 1080, 1112, 1117, 1119], "end": [21, 23, 32, 37, 42, 106, 137, 142, 145, 146, 148, 150, 153, 175, 176, 181, 182, 187, 191, 195, 215, 216, 218, 219, 221, 231, 235, 238, 241, 255, 256, 277, 283, 290, 295, 313, 314, 351, 354, 358, 379, 395, 407, 411, 412, 413, 415, 418, 419, 422, 452, 474, 475, 483, 484, 487, 488, 489, 539, 542, 554, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 593, 594, 596, 600, 603, 607, 608, 614, 631, 647, 675, 678, 682, 689, 695, 696, 697, 699, 704, 705, 718, 719, 770, 776, 778, 794, 821, 822, 823, 838, 866, 870, 871, 882, 884, 900, 901, 902, 904, 910, 926, 945, 978, 998, 1002, 1004, 1011, 1014, 1018, 1022, 1026, 1097, 1099, 1101, 1105, 1140, 1143], "sketch": [21, 116, 123, 140, 146, 175, 182, 183, 195, 204, 205, 272, 294, 326, 330, 392, 393, 403, 415, 647, 735, 747, 945], "clearest": 21, "ach": 21, "bad": [21, 43, 117, 139, 142, 145, 152, 167, 175, 200, 206, 222, 223, 225, 234, 235, 250, 271, 272, 293, 303, 368, 411, 415, 429, 571, 637, 687, 698, 705, 730, 731, 746, 758, 783, 786, 895, 896, 921, 923, 927, 928, 949, 968, 973, 975, 988, 989, 1000, 1007, 1018, 1048, 1076, 1130], "earliest": 21, "noth": [21, 43, 63, 116, 133, 142, 143, 145, 148, 153, 158, 172, 183, 202, 215, 241, 294, 343, 382, 389, 413, 431, 438, 542, 621, 655, 662, 675, 689, 692, 746, 756, 774, 776, 810, 860, 875, 883, 884, 899, 901, 923, 945, 950, 976, 983, 995, 1016, 1018, 1024, 1110, 1117, 1119], "jump": [21, 45, 104, 142, 379, 383, 542, 689, 692, 699, 817, 870, 949, 1084], "outest": 21, "level": [21, 78, 143, 144, 154, 212, 218, 228, 231, 252, 285, 301, 333, 357, 383, 389, 429, 432, 434, 435, 441, 449, 457, 668, 669, 729, 760, 762, 774, 781, 790, 814, 875, 882, 891, 895, 954, 962, 975, 983, 995, 1016, 1026, 1051, 1055, 1085, 1088, 1098, 1105, 1132], "cleanup_stage1": 21, "screenplai": [22, 60, 136, 145, 166, 170, 222, 234, 243, 261, 269, 271, 282, 290, 293, 294, 297, 322, 430, 446, 454, 525, 528, 531, 534, 537, 540, 543, 546, 582, 583, 603, 735, 738, 743, 748, 752, 754, 790, 793, 796, 799, 943, 947, 951, 1019, 1107, 1114, 1118, 1120, 1123], "dies": [23, 151, 152, 157, 160, 161, 162, 170, 176, 186, 187, 191, 199, 206, 223, 225, 231, 232, 235, 322, 327, 340, 1125, 1127, 1128, 1129, 1134, 1140, 1141, 1143, 1147, 1148], "einreichungsunterlagen": 23, "diesem": [23, 152, 186, 1127, 1144], "formular": 23, "projekten": [23, 1141, 1142], "mehrer": [23, 1134], "projektpartn": 23, "muss": [23, 166, 176, 186, 191, 232, 322, 327, 1125, 1127, 1134, 1141], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 151], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 157, 187], "soll": [23, 152, 178, 207, 246, 1124], "punkt": [23, 152, 162, 178, 188, 232], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 152, 161, 175, 178, 186, 191, 235, 246, 371, 379, 497, 669, 675, 760, 918, 919, 936, 1078, 1098], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 204], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 63, 68, 114, 123, 142, 143, 146, 150, 158, 160, 164, 166, 180, 182, 184, 193, 202, 203, 205, 209, 212, 215, 216, 218, 223, 226, 231, 238, 241, 243, 256, 259, 261, 263, 268, 270, 273, 277, 314, 329, 368, 429, 431, 437, 744, 772, 780, 805, 806, 814, 815, 817, 820, 822, 863, 882, 891, 899, 900, 905, 908, 910, 911, 914, 916, 919, 920, 942, 945, 949, 952, 969, 975, 976, 1045, 1071, 1073, 1084, 1103, 1110, 1125, 1142, 1143], "wer": [23, 151], "unser": [23, 179, 187, 1125], "motiv": [23, 28, 97, 817, 836, 934, 981, 982], "300": [23, 162, 164, 176, 212, 215, 218, 223, 225, 231, 235, 238, 256, 277, 283, 314, 345, 347, 349, 365, 389, 577, 578, 579, 580, 581, 583, 584, 585, 586, 600, 751], "zeichen": [23, 225], "lebe": 23, "einerseit": [23, 157], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1142], "andererseit": [23, 157], "haupts\u00e4chlich": [23, 187, 1140], "unternehmen": 23, "halt": [23, 110, 111, 186, 215, 231, 238, 241, 256, 263, 273, 277, 811, 869, 884], "bringen": [23, 1125], "schulungsunterlagen": [23, 1124], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 80, 107, 114, 116, 131, 143, 150, 159, 162, 164, 166, 167, 173, 175, 176, 179, 180, 182, 184, 195, 199, 204, 221, 223, 229, 243, 248, 250, 261, 265, 268, 269, 271, 272, 280, 285, 286, 294, 297, 301, 302, 308, 329, 340, 368, 379, 389, 390, 393, 407, 413, 415, 431, 436, 460, 475, 519, 525, 560, 574, 587, 619, 622, 646, 719, 731, 778, 817, 877, 938, 962, 964, 968, 973, 978, 980, 983, 984, 995, 1007, 1021, 1071, 1076, 1078, 1082, 1101, 1110, 1111, 1125, 1132, 1133], "darstellt": 23, "wen": 23, "nutzen": [23, 1143], "400": [23, 140, 145, 162, 176, 186, 215, 218, 260, 277, 295, 431, 600, 1033, 1036], "stellen": [23, 157], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1124], "bereiten": [23, 186], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 895, 998], "gel\u00f6st": [23, 176], "500": [23, 186, 193, 212, 215, 218, 260, 600, 875, 902, 1033, 1036], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1127, 1137, 1146], "aufeinand": [23, 865], "explizit": [23, 160, 170, 176, 186, 246, 273, 1127, 1128, 1144], "abh\u00e4ngigkeitsbeziehungen": [23, 1137], "fehlen": 23, "extrem": [23, 143, 202, 223, 231, 238, 241, 263, 322, 327, 390, 429, 582, 651, 699, 778, 805, 806, 1088, 1125, 1137], "verringert": 23, "zusammenarbeit": [23, 1124], "trainern": 23, "fehlend": [23, 162], "aggregierbarkeit": 23, "bzw": [23, 151, 160, 166, 170, 192, 340, 1134, 1141, 1143], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 176, 945, 1094], "librari": [23, 63, 71, 74, 78, 85, 97, 103, 104, 106, 108, 110, 111, 114, 143, 145, 154, 162, 164, 166, 171, 172, 173, 180, 182, 184, 203, 205, 212, 218, 228, 231, 235, 247, 248, 259, 261, 285, 286, 301, 302, 323, 324, 325, 340, 341, 344, 345, 354, 362, 385, 402, 412, 419, 425, 435, 436, 441, 443, 444, 453, 467, 490, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 507, 514, 533, 547, 548, 592, 598, 602, 610, 611, 612, 614, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 664, 669, 695, 720, 729, 730, 731, 756, 808, 811, 812, 874, 895, 896, 897, 902, 903, 905, 912, 913, 915, 920, 923, 929, 932, 935, 937, 949, 952, 953, 954, 955, 957, 958, 959, 960, 962, 964, 999, 1001, 1016, 1018, 1021, 1088, 1106, 1119, 1127, 1129, 1131, 1132, 1143, 1145], "anfangen": 23, "geben": [23, 1128, 1129], "trainingsunterlagen": 23, "ging": [23, 151, 340], "funktioniert": [23, 176, 225], "projektergebni": 23, "basiert": [23, 246, 1125, 1128, 1137, 1144], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 170, 1124, 1134], "eigentlich": [23, 162, 176, 1125, 1128], "kern": 23, "begleitet": [23, 178], "meinem": [23, 152, 161, 187, 866, 1140], "eigenen": [23, 1134, 1141], "quasi": [23, 166, 170], "spin": [23, 719, 781, 815], "off": [23, 115, 118, 142, 144, 145, 148, 153, 164, 175, 195, 238, 368, 371, 410, 418, 419, 434, 440, 441, 496, 497, 502, 542, 622, 675, 710, 772, 783, 809, 834, 862, 875, 882, 884, 910, 919, 928, 938, 945, 1004, 1022, 1056, 1081, 1135], "anwendbar": [23, 1147], "klarer": 23, "bezug": [23, 232], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 151, 170, 176, 186, 187, 1124, 1140], "gehen": 23, "folgenden": [23, 170, 340, 866], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1126, 1134, 1141, 1144], "klaren": 23, "mehrwert": 23, "technologi": [23, 215, 936, 952, 1033], "infrastruktur": [23, 1125, 1134, 1141], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 178], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 78, 160, 170, 179, 205, 221, 445, 504, 882, 884, 1102, 1110, 1111, 1146, 1148], "jeglich": [23, 1134], "art": [23, 32, 45, 964, 1133], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 187, 1140], "erm\u00f6glicht": [23, 178, 340], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 157, 1124], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 151, 162, 166, 176, 225, 317, 340, 1125, 1128, 1129, 1134, 1148], "commun": [23, 63, 72, 73, 74, 78, 81, 83, 87, 112, 128, 131, 143, 158, 167, 175, 190, 259, 294, 319, 328, 329, 405, 449, 720, 721, 730, 731, 737, 778, 790, 811, 874, 875, 882, 883, 884, 899, 904, 915, 920, 929, 936, 939, 945, 950, 984, 1072, 1075, 1092, 1130, 1133, 1135, 1144, 1145], "trainerinnen": 23, "kann": [23, 37, 151, 152, 160, 166, 170, 176, 186, 199, 206, 246, 322, 327, 340, 1124, 1125, 1127, 1129, 1134, 1141, 1142, 1143, 1146, 1148], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 160, 162, 176, 317, 866, 1127, 1144, 1146, 1147], "die_der": 23, "adressat_in": 23, "je": [23, 32, 152, 186], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 151, 170, 186, 238, 317, 340, 1124, 1125, 1126, 1134, 1136, 1137, 1143, 1144], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 166, 1134, 1141], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 162, 176, 178, 199, 238, 295, 340, 1125, 1127, 1129], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 187, 232, 1140], "zielgruppen": 23, "beziehung": [23, 170], "zueinand": 23, "stehen": [23, 176, 1146], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 151, 162, 170, 176, 186, 191, 193, 212, 215, 223, 225, 228, 231, 238, 241, 256, 263, 273, 277, 283, 295, 317], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 223, 322, 327, 1134, 1141], "jeweiligen": [23, 1124], "sein": [23, 152, 160, 161, 178, 186, 187, 199, 225, 263, 1125, 1127, 1140, 1141, 1143, 1146, 1147, 1148], "dann": [23, 152, 162, 170, 176, 187, 225, 231, 232, 238, 273, 340, 1125, 1137, 1140, 1148], "einzelnen": 23, "aussieht": [23, 1126], "erst": [23, 170, 186, 199, 225, 232, 238, 256, 295, 317, 1125, 1127], "bestandteil": [23, 1146], "n": [23, 35, 38, 40, 50, 63, 111, 145, 154, 162, 163, 164, 170, 176, 186, 191, 193, 194, 202, 204, 207, 208, 209, 212, 215, 216, 218, 221, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 267, 273, 277, 295, 313, 314, 315, 317, 322, 344, 345, 347, 351, 353, 355, 357, 359, 364, 367, 377, 379, 385, 386, 390, 395, 403, 407, 412, 431, 432, 439, 506, 539, 558, 564, 582, 628, 629, 632, 633, 635, 636, 639, 640, 641, 642, 643, 644, 652, 654, 669, 731, 756, 792, 811, 815, 825, 835, 838, 851, 867, 869, 870, 884, 896, 898, 899, 900, 901, 902, 908, 909, 911, 936, 942, 946, 949, 952, 958, 964, 968, 970, 995, 996, 998, 1013, 1015, 1020, 1021, 1026, 1027, 1071, 1073, 1110, 1122], "l\u00f6sen": 23, "wollen": [23, 37, 191, 340, 1129, 1134, 1137, 1141, 1143], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 61, 112, 135, 146, 149, 158, 262, 265, 383, 424, 425, 751, 778, 780, 790, 882, 884, 1011, 1142, 1148], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 102, 107, 114, 145, 157, 158, 170, 172, 179, 180, 183, 203, 216, 221, 233, 252, 268, 270, 290, 321, 322, 327, 439, 443, 448, 450, 454, 456, 461, 471, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 493, 533, 539, 548, 552, 554, 556, 557, 559, 560, 561, 563, 565, 575, 590, 591, 608, 618, 620, 621, 633, 644, 647, 650, 651, 653, 654, 657, 658, 669, 671, 672, 673, 675, 677, 678, 681, 682, 683, 684, 690, 691, 692, 705, 706, 707, 710, 711, 719, 721, 731, 772, 807, 808, 813, 827, 833, 874, 891, 996, 1103, 1105, 1122, 1144], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 208], "land": [23, 437], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 62, 114, 125, 145, 148, 153, 163, 173, 176, 179, 181, 187, 204, 215, 219, 223, 225, 228, 231, 253, 260, 277, 297, 367, 398, 423, 707, 747, 753, 788, 815, 823, 834, 835, 837, 838, 862, 875, 882, 884, 903, 940, 949, 952, 962, 970, 1007, 1009, 1033, 1084, 1088, 1092, 1105, 1110, 1117, 1133, 1140], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 143, 734, 762], "grupp": [23, 191, 331, 866], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 207, 320, 321, 1124], "fl\u00fcchtling": 23, "posit": [23, 29, 63, 112, 150, 176, 179, 180, 182, 184, 186, 191, 199, 203, 212, 219, 223, 228, 229, 231, 238, 241, 252, 255, 262, 265, 267, 269, 271, 272, 275, 277, 281, 283, 287, 290, 293, 294, 297, 308, 353, 390, 403, 542, 583, 590, 599, 600, 731, 838, 875, 883, 899, 900, 904, 945, 973, 974, 977, 1018, 1019, 1021, 1022, 1023, 1074, 1089, 1097, 1112, 1117], "zielgruppentyp": 23, "350": [23, 215, 218, 263, 277, 1033], "bereitet": 23, "vor": [23, 151, 152, 166, 176, 188, 223, 1137, 1146], "lt": [23, 32, 35, 36, 145, 150, 162, 165, 170, 171, 176, 181, 186, 191, 193, 199, 202, 207, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 316, 317, 318, 495, 512, 514, 547, 592, 598, 602, 611, 614, 615, 644, 731], "zielvorgaben": 23, "basierend": [23, 162, 1124, 1129], "existierendem": 23, "f\u00fchrt": [23, 152, 1144], "jederzeit": [23, 157, 166, 340], "\u00fcberblick": [23, 166, 170, 232, 246, 340, 341, 1124, 1132, 1134, 1140, 1141, 1144, 1146], "behaltend": 23, "behandelten": 23, "fragen": [23, 178, 194, 322, 327, 340, 1124, 1134, 1141], "antworten": [23, 178], "info": [23, 153, 260, 261, 419, 423, 424, 425, 431, 432, 434, 557, 706, 753, 883, 923, 953, 954, 1110], "bed\u00fcrfni": [23, 151], "schulungsagenden": 23, "erstellen": [23, 340, 1129, 1134], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 64, 151, 160, 161, 162, 176, 186, 187, 206, 231, 235, 1134, 1140, 1141, 1148], "erwartet": [23, 152, 176], "w\u00e4hrend": [23, 1124], "einzugehen": [23, 178, 1147], "geplanten": [23, 1124], "verlassen": [23, 800], "birgt": 23, "chao": [23, 836, 1007], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 151], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 154, 247, 248, 250, 303, 645, 649, 675, 687, 714, 728, 730, 731, 753, 816, 883, 921, 930, 936, 984], "inklus": [23, 163, 176, 186, 199, 1124, 1129, 1134], "betroffen": 23, "eu": [23, 32], "20000": [23, 142, 218], "erkennung": 23, "abstand": 23, "erfordert": [23, 1134], "vgl": [23, 176, 1144, 1147], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 166, 176, 186, 800, 1124, 1125, 1134, 1137, 1143, 1148], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 303], "besten": [23, 166, 232, 1127], "einsatz": [23, 1125], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1127], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 63, 158, 175, 308, 863, 1000, 1004, 1083, 1102], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1125, 1143], "neue": [23, 176, 186, 218, 246, 295, 317, 340, 1144], "verliert": [23, 1148], "aufbaubeziehungen": 23, "verlangt": [23, 1124], "grundlag": 23, "folienmateri": 23, "meist": [23, 1143], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 162, 1124], "unm\u00f6glich": 23, "macht": [23, 160, 162, 166, 170, 176, 182, 186, 228, 232, 317, 1127, 1134, 1141, 1148], "artefakttypen": 23, "livehack": [23, 24, 60, 114, 136, 162, 168, 170, 179, 180, 187, 206, 219, 221, 222, 234, 243, 248, 250, 251, 259, 262, 269, 271, 276, 282, 287, 290, 293, 294, 297, 322, 340, 430, 446, 453, 525, 729, 731, 743, 780, 1019, 1107, 1114, 1140], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 117, 151, 176, 187, 193, 1140], "zielt": 23, "darauf": [23, 151, 162, 1124, 1127], "transpar": [23, 29, 37, 762, 764, 814, 1089], "wiederzuverwenden": 23, "sodass": [23, 37, 170, 1143, 1148], "aufgebrochen": 23, "schwer": [23, 166, 176, 340, 1134, 1141, 1146], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 151, 152, 162, 166, 178, 191, 206, 246, 340, 1125, 1127, 1128, 1129, 1141], "dorthin": 23, "m\u00fcssen": [23, 176, 322, 327, 1134, 1141], "unterst\u00fctzt": [23, 1148], "kursf\u00fchrung": [23, 340], "fragt": [23, 152], "unklarheiten": 23, "weist": [23, 151], "etwaig": 23, "verwandt": [23, 1127], "hin": [23, 340], "plausibl": [23, 145], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 187], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 176, 178, 1128, 1129, 1143, 1148], "keinen": [23, 151, 295, 1127], "einfluss": 23, "wahl": [23, 1148], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 160, 1125, 1134], "vorau": 23, "beziehungen": 23, "passt": [23, 186, 187, 1140], "ganz": [23, 151, 152, 161, 162, 166, 176, 178, 192, 193, 207, 224, 225, 340, 1128, 1129, 1143], "gut": [23, 151, 152, 176, 187, 340, 658, 1124, 1140], "y": [23, 111, 125, 154, 163, 164, 166, 193, 202, 208, 209, 215, 216, 218, 219, 231, 241, 244, 253, 256, 263, 273, 277, 283, 368, 374, 392, 395, 398, 399, 403, 415, 419, 431, 493, 503, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 563, 565, 567, 568, 575, 582, 590, 629, 650, 651, 652, 654, 669, 671, 672, 673, 690, 701, 710, 746, 747, 778, 779, 811, 825, 838, 840, 851, 857, 882, 883, 884, 958, 966, 972, 1030, 1033, 1081], "algorithmen": [23, 246, 1129], "automatisch": [23, 1144, 1148], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1129], "text": [23, 27, 39, 40, 60, 139, 153, 164, 175, 178, 183, 184, 191, 203, 204, 209, 216, 223, 225, 243, 246, 249, 256, 258, 277, 279, 364, 438, 731, 808, 870, 874, 901, 952, 1000, 1007, 1013, 1022, 1031, 1054, 1088, 1095, 1100, 1102, 1103, 1137], "restrukturierung": 23, "o": [23, 29, 32, 38, 63, 78, 85, 90, 97, 98, 100, 107, 110, 111, 114, 122, 125, 136, 143, 145, 146, 153, 154, 162, 166, 170, 180, 182, 183, 184, 186, 191, 193, 194, 200, 203, 204, 208, 210, 213, 214, 215, 216, 219, 220, 221, 222, 227, 228, 232, 233, 234, 235, 237, 239, 242, 244, 246, 249, 253, 255, 258, 259, 260, 262, 263, 265, 268, 269, 272, 274, 275, 276, 278, 279, 281, 283, 293, 295, 297, 307, 308, 309, 310, 311, 312, 313, 322, 327, 329, 340, 342, 344, 360, 375, 384, 390, 391, 395, 397, 401, 404, 407, 408, 417, 419, 421, 423, 424, 426, 427, 431, 432, 438, 443, 457, 484, 495, 506, 547, 565, 649, 687, 713, 719, 720, 721, 728, 729, 730, 731, 746, 747, 755, 756, 778, 785, 804, 805, 806, 807, 808, 809, 811, 812, 814, 815, 823, 835, 838, 842, 843, 845, 846, 849, 850, 852, 858, 866, 867, 871, 874, 875, 882, 883, 895, 905, 908, 909, 910, 911, 912, 915, 920, 921, 929, 932, 935, 936, 937, 946, 952, 953, 954, 958, 960, 964, 968, 969, 970, 973, 975, 977, 978, 979, 983, 999, 1002, 1005, 1007, 1013, 1021, 1028, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1089, 1090, 1105, 1110, 1117, 1127, 1134, 1147], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1124], "korrekt": [23, 1127], "vorbereitet": [23, 340], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 157, 1147], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1127, 1144], "aktuel": 23, "inhalt": [23, 176, 178, 208, 323, 800, 1124, 1148], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 164, 166, 1078], "kein": [23, 161, 162, 166, 176, 186, 193, 208, 244, 263, 317, 340, 1142], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 200], "erkl\u00e4ren": [23, 1127], "gew\u00fcnscht": [23, 176], "erreicht": [23, 151, 152, 1141], "hatt": [23, 151, 152, 166, 176, 178], "button": [23, 114, 142, 150, 229, 875], "gew\u00e4hlt": [23, 151, 152], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1143], "bearbeiten": 23, "daher": [23, 1148], "konvertiert": 23, "unten": [23, 117, 152, 166, 176, 1125], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 147], "angab": 23, "quellen": 23, "literatur": [23, 204, 562], "lightweight": [23, 133, 158, 175, 179, 195, 229, 231, 243, 650, 708, 711, 1076, 1088, 1130], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 62, 65, 68, 106, 114, 115, 116, 117, 118, 120, 122, 125, 133, 139, 143, 144, 148, 149, 150, 155, 162, 164, 166, 172, 175, 179, 182, 189, 194, 203, 222, 226, 229, 232, 259, 262, 269, 276, 326, 327, 333, 335, 340, 341, 411, 418, 422, 430, 432, 433, 434, 437, 438, 440, 442, 445, 446, 447, 453, 493, 494, 503, 506, 566, 568, 569, 713, 731, 778, 817, 873, 875, 877, 882, 883, 894, 912, 952, 953, 954, 967, 968, 1029, 1035, 1062, 1064, 1074, 1075, 1077, 1078, 1082, 1090, 1092, 1107, 1109, 1113, 1114, 1119], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 63, 91, 122, 143, 147, 149, 164, 166, 180, 182, 183, 184, 185, 192, 194, 195, 203, 204, 217, 233, 249, 256, 258, 264, 279, 280, 294, 310, 322, 325, 327, 329, 344, 548, 729, 731, 755, 774, 775, 790, 808, 811, 819, 874, 883, 884, 937, 945, 966, 973, 1026, 1126, 1134, 1136, 1141, 1143, 1147], "generatoren": [23, 166, 233, 340], "staticgen": 23, "learn": [23, 29, 65, 68, 70, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 126, 143, 145, 163, 164, 166, 175, 179, 183, 204, 213, 293, 297, 308, 323, 325, 429, 693, 731, 820, 875, 883, 937, 999, 1000, 1074, 1078, 1082, 1090, 1112], "moodl": [23, 106, 109, 110, 111, 114, 150, 326, 328, 329, 630, 644, 731, 808, 812, 827, 833, 852, 858, 874, 959, 962], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 166], "hinblick": [23, 1136], "ihnen": [23, 152, 865, 1124, 1134, 1141], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1127], "schw\u00e4chen": [23, 1129], "konkurrierenden": 23, "relevant": [23, 166, 340, 1147], "anbiet": 23, "ziel": [23, 1125, 1141], "allumfassend": 23, "eh": [23, 32, 176, 186, 191, 199, 225, 231, 235, 238, 283], "vielmehr": 23, "bietet": [23, 157, 160, 1143], "beim": [23, 151, 152, 162, 166, 176, 1127], "verfassen": 23, "kernthema": 23, "zwischen": [23, 160, 176, 186, 193, 199, 340, 1127, 1128, 1129, 1141, 1148], "benutz": [23, 1144], "vorgaben": 23, "existiert": [23, 176, 188], "wald": 23, "dass": [23, 151, 152, 160, 162, 166, 170, 176, 187, 191, 193, 207, 322, 327, 340, 1124, 1127, 1128, 1129, 1134, 1140, 1141, 1144, 1148], "beisteuert": 23, "eben": [23, 157, 160, 186], "\u00fcbergreifend": 23, "definiert": [23, 162, 176, 1124, 1127], "ansatz": 23, "mir": [23, 151, 152, 166, 176, 187, 191, 223, 322, 327, 340, 1127, 1140], "verfolgt": [23, 1141], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 139, 206, 222, 234, 340], "licht": 23, "lesen": [23, 160, 161, 162, 176, 188, 322, 327], "einig": [23, 152, 163, 178, 340, 1127, 1134], "plugin": [23, 145, 457, 694, 966], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 97, 101, 106, 109, 110, 111, 114, 125, 143, 145, 158, 179, 195, 205, 221, 237, 239, 247, 248, 250, 253, 259, 265, 268, 303, 322, 407, 413, 422, 425, 457, 495, 503, 592, 611, 615, 644, 647, 687, 695, 714, 730, 731, 756, 779, 783, 808, 811, 812, 874, 876, 882, 884, 891, 895, 896, 899, 903, 910, 913, 915, 932, 940, 950, 955, 962, 963, 967, 1005, 1092, 1096, 1112, 1130], "zentral": [23, 139], "ergebni": [23, 228], "niemand": 23, "doc": [23, 37, 39, 65, 115, 122, 147, 149, 162, 163, 165, 195, 203, 210, 212, 218, 227, 228, 231, 235, 238, 253, 296, 307, 319, 322, 327, 330, 331, 342, 542, 734, 749, 755, 758, 838, 860, 918, 1021, 1087], "show": [23, 24, 27, 29, 43, 58, 63, 114, 120, 123, 142, 143, 145, 146, 150, 171, 179, 182, 183, 195, 204, 212, 218, 221, 228, 229, 231, 259, 271, 272, 285, 293, 301, 307, 308, 326, 328, 329, 330, 333, 392, 432, 434, 443, 474, 490, 496, 542, 631, 741, 760, 762, 794, 805, 806, 838, 860, 863, 865, 867, 875, 877, 882, 883, 884, 903, 934, 936, 940, 945, 949, 962, 964, 972, 1011, 1028, 1030, 1081, 1082, 1105, 1112, 1119, 1132], "revealj": 23, "option": [23, 31, 78, 137, 143, 144, 145, 149, 153, 158, 162, 167, 183, 195, 219, 231, 235, 243, 246, 247, 248, 256, 261, 265, 277, 285, 286, 294, 297, 301, 302, 303, 322, 342, 351, 352, 368, 379, 380, 419, 432, 435, 436, 444, 445, 451, 478, 506, 731, 747, 798, 802, 805, 806, 814, 866, 884, 885, 887, 895, 908, 912, 946, 954, 1010, 1028, 1031, 1105, 1112, 1119, 1127, 1132, 1145], "webslid": 23, "tv": [23, 32, 150], "sicht": [23, 161, 232, 1127], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1127], "600": [23, 212, 218, 600], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 161, 176, 273, 340, 1125, 1129, 1142], "versagen": 23, "implementierung": 23, "solcher": [23, 160, 176], "featur": [23, 29, 42, 46, 55, 56, 78, 80, 112, 114, 123, 148, 150, 160, 171, 176, 179, 180, 182, 184, 189, 194, 203, 212, 218, 221, 228, 229, 231, 232, 234, 235, 274, 303, 324, 340, 341, 417, 421, 426, 427, 429, 430, 432, 621, 646, 649, 656, 663, 674, 688, 698, 699, 703, 707, 712, 720, 727, 728, 730, 731, 770, 778, 875, 883, 884, 904, 936, 946, 953, 954, 970, 984, 985, 986, 987, 991, 994, 1001, 1013, 1014, 1029, 1032, 1033, 1034, 1035, 1048, 1059, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1082, 1086, 1090, 1092, 1094, 1104, 1107, 1109, 1110, 1114, 1125, 1127, 1128, 1130, 1134, 1141], "indem": [23, 186, 323, 1134], "foku": [23, 340], "schulbetrieb": 23, "legen": [23, 865], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1137], "fett": [23, 176, 193], "datenbanken": [23, 199, 340], "webserv": [23, 883], "hintergrund": [23, 186], "redaktionel": 23, "arbeit": [23, 166, 1125], "offlin": 23, "laptop": [23, 144, 146, 153, 894], "zug": 23, "erledigen": [23, 1125], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1124], "sinn": [23, 170, 1127], "prinzip": [23, 1144, 1146, 1148], "kostenlo": 23, "genutzt": [23, 160], "weiterentwickelt": [23, 1129, 1134], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 161, 176, 187, 208, 223, 235, 295, 317, 1142], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 176], "sourcecod": [23, 160], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 62, 142, 143, 145, 146, 175, 178, 182, 187, 200, 215, 226, 229, 231, 238, 241, 256, 260, 263, 273, 277, 345, 357, 402, 446, 447, 454, 459, 473, 474, 505, 557, 562, 655, 685, 705, 749, 753, 778, 815, 853, 869, 934, 937, 938, 949, 950, 966, 1033, 1076, 1081, 1094, 1095, 1097, 1098, 1110, 1145], "reih": [23, 157, 170, 178], "direct": [23, 37, 39, 63, 114, 122, 140, 143, 204, 262, 265, 308, 379, 390, 425, 438, 565, 711, 737, 814, 871, 898, 900, 916, 918, 919, 954, 968, 995, 1081, 1089, 1098, 1132, 1135], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 557, 706, 734], "pypi": [23, 126, 139, 175, 179, 194, 210, 226, 252, 1104, 1105, 1110], "installierbar": 23, "paket": [23, 160, 1125], "generiert": [23, 176], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 938, 1137], "obigen": 23, "bisherigen": [23, 1129], "aktuellen": [23, 186], "bereich": [23, 166, 340], "umfeld": 23, "projektantrag": 23, "bisher": [23, 139, 1124], "softwarebasi": 23, "grundlegend": [23, 188, 1129, 1134, 1141, 1143, 1146], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 61, 142, 166, 175, 210, 219, 229, 294, 321, 322, 326, 330, 336, 429, 545, 655, 713, 778, 1110, 1117], "kurz": [23, 151, 152, 176, 178, 187, 192, 207, 232, 1126, 1140, 1143], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1137], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 152, 1146], "projektinhalt": 23, "verdeutlichen": [23, 1125], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 161], "walkner": 23, "1983": [23, 548], "hallein": 23, "master": [23, 61, 125, 146, 149, 158, 323, 324, 774, 778, 867, 879], "scienc": [23, 28, 78, 150, 164, 175, 179, 184, 213, 282, 296, 324, 548, 601, 1001, 1080, 1081, 1082, 1083], "salzburg": 23, "consult": [23, 59, 62, 140, 143, 156, 194, 212, 218, 228, 231, 235, 328, 454], "isamberth": 23, "adnet": 23, "2000": [23, 199, 202, 218, 223, 235, 256, 431, 457, 938], "2002": [23, 218, 557, 706], "divers": [23, 167, 1126], "2005": [23, 548], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 178, 179, 200, 203, 218, 226, 252, 259, 267, 276, 1076], "programmiererfahrung": [23, 1134, 1141, 1148], "bash": [23, 99, 114, 140, 150, 159, 183, 193, 195, 215, 223, 231, 238, 241, 249, 256, 258, 259, 263, 270, 273, 277, 279, 322, 323, 324, 327, 329, 341, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 697, 700, 720, 729, 730, 731, 801, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 839, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 863, 868, 869, 874, 897, 900, 903, 905, 907, 910, 913, 915, 916, 929, 931, 932, 935, 937, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 966, 973, 1054, 1125, 1136], "davon": [23, 151, 162, 1127, 1146], "teamleit": 23, "m\u00f6chten": [23, 1148], "ggf": 23, "kennenlernen": 23, "knackig": [23, 139], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 866], "millionen": 23, "ihren": [23, 176, 188], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 170, 340, 1124, 1137], "un": [23, 170, 178, 340, 756, 862, 995, 1125], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 152, 186, 187, 340, 1127, 1140], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 162, 166], "mindesten": [23, 162], "vier": [23, 162, 176, 186, 191, 193, 208, 212, 215, 223, 225, 228, 235, 241, 253, 256, 260, 263, 273, 283, 295, 317, 1134, 1147], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 700, 704], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 152], "wenig": [23, 161, 176, 246, 340, 1125], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 176], "erfolg": [23, 1127], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 157, 170, 866], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 176, 187, 1140, 1148], "bekundet": 23, "medien": [23, 1147], "berichtet": 23, "migrat": [23, 170], "zehn": [23, 186], "migrieren": 23, "verwenden": [23, 157, 170, 176, 182, 186, 191, 1147], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 151, 166, 176, 340, 1146], "eingesetzt": [23, 1125, 1142], "basisarbeit": 23, "workflow": [23, 112, 170, 204, 219, 751, 946, 1142], "datenstrukturen": [23, 188, 206, 227, 1129], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1026], "know": [23, 42, 59, 62, 65, 69, 80, 84, 123, 140, 142, 143, 144, 145, 148, 149, 150, 158, 163, 164, 167, 171, 172, 175, 179, 183, 194, 195, 202, 205, 262, 265, 269, 294, 324, 355, 357, 363, 368, 385, 395, 407, 409, 411, 413, 417, 418, 419, 421, 425, 426, 427, 429, 438, 444, 448, 449, 461, 498, 506, 533, 549, 551, 557, 559, 563, 582, 619, 622, 625, 646, 647, 649, 658, 660, 662, 685, 687, 696, 705, 707, 711, 721, 728, 730, 731, 733, 749, 756, 778, 817, 838, 875, 878, 882, 884, 895, 900, 902, 911, 921, 949, 970, 978, 983, 984, 995, 1000, 1003, 1006, 1007, 1026, 1033, 1071, 1075, 1110, 1135], "welchem": [23, 162], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 187, 188, 1140], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1126, 1129, 1141, 1143], "200": [23, 139, 140, 162, 164, 176, 193, 195, 202, 209, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 260, 267, 277, 283, 295, 314, 319, 577, 578, 579, 580, 581, 583, 584, 585, 586, 600, 654, 756, 936, 1050], "stunden": 23, "webprogrammierung": 23, "css": [23, 140, 141], "150": [23, 162, 176, 186, 193, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 647], "kreativarbeit": 23, "erreichen": [23, 1141, 1144], "pers\u00f6nlich": [23, 340], "freund": 23, "ebenfal": [23, 1142], "t\u00e4tig": 23, "mich": [23, 151, 166, 186, 194, 340, 1124], "ermutigt": 23, "\u00fcberhaupt": [23, 1134, 1141, 1148], "starten": [23, 1146], "repr\u00e4sent": 23, "post": [23, 66, 93, 139, 143, 145, 147, 148, 149, 150, 153, 204, 219, 268, 355, 369, 453, 549, 875, 944, 946, 949, 1075], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 187, 1127], "projektbeginn": 23, "abschluss": [23, 152, 322], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 150, 815, 882, 891, 898, 937], "sachbearbeiter_in": 23, "social": [23, 45, 449, 456, 460, 473, 474, 475, 478, 484, 487, 488, 489], "media": [23, 78, 160, 778, 883], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 218], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 166], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 218], "frontendprogrammierung": 23, "4500": [23, 218], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 314], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 152, 260], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 322], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 218], "beantragt": 23, "differenz": [23, 238], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 179, 866, 969], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 193, 199, 207, 263], "bleiben": [23, 152, 176, 186, 1134, 1141, 1144], "reich": [23, 176], "nein": [23, 187, 193, 199, 244, 253, 1140], "neben": [23, 166], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 63, 66, 110, 111, 117, 122, 139, 142, 143, 144, 145, 146, 148, 153, 160, 163, 165, 173, 179, 181, 202, 210, 212, 218, 223, 226, 228, 233, 235, 240, 241, 244, 259, 261, 263, 276, 277, 285, 294, 301, 322, 327, 329, 340, 344, 351, 355, 356, 359, 370, 386, 388, 392, 398, 399, 402, 412, 415, 416, 424, 432, 435, 447, 454, 458, 473, 474, 475, 491, 495, 500, 503, 504, 506, 507, 519, 533, 547, 551, 554, 557, 559, 563, 572, 618, 619, 622, 624, 625, 629, 631, 636, 643, 651, 652, 660, 664, 675, 678, 681, 682, 683, 684, 694, 697, 705, 710, 711, 719, 720, 721, 730, 731, 732, 746, 756, 758, 760, 764, 766, 768, 770, 772, 774, 776, 778, 783, 786, 792, 797, 798, 804, 808, 811, 812, 813, 814, 816, 818, 821, 822, 835, 838, 874, 878, 886, 896, 897, 900, 901, 902, 903, 905, 907, 913, 914, 915, 920, 921, 928, 929, 931, 932, 935, 936, 937, 946, 949, 950, 952, 954, 971, 973, 974, 975, 980, 986, 988, 989, 990, 992, 993, 995, 996, 997, 1017, 1018, 1022, 1024, 1027, 1028, 1033, 1051, 1055, 1076, 1081, 1089, 1092, 1097, 1098, 1111, 1112, 1113, 1132, 1136, 1144, 1145, 1147], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 151, 152, 161, 166, 182, 340], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 147, 148, 153, 506, 817, 838, 884, 1080], "group": [23, 29, 101, 102, 114, 115, 122, 136, 158, 163, 175, 180, 182, 191, 194, 195, 202, 208, 215, 223, 232, 235, 241, 244, 256, 270, 277, 280, 283, 322, 335, 336, 340, 351, 376, 419, 420, 495, 525, 731, 778, 805, 806, 808, 811, 812, 813, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 860, 864, 865, 866, 867, 871, 874, 882, 894, 895, 903, 904, 905, 910, 913, 915, 929, 932, 937, 950, 973, 1054, 1110], "wirtschaftkamm": 23, "nehmen": [23, 152, 1126], "larg": [24, 30, 38, 78, 145, 148, 150, 175, 194, 195, 204, 215, 221, 262, 265, 398, 407, 409, 413, 419, 420, 459, 684, 693, 729, 772, 778, 952, 976, 978, 980, 1000, 1007, 1033, 1054, 1090, 1094, 1098, 1117], "amount": [24, 106, 110, 111, 143, 144, 145, 148, 154, 175, 182, 210, 260, 261, 419, 431, 562, 684, 685, 809, 811, 895, 912, 1000], "pdf": [24, 37, 168, 170, 175, 179, 182, 183, 185, 235, 249, 258, 259, 279, 280, 321, 322, 325, 327, 330, 341, 838, 860, 861, 884, 916, 954, 1048, 1126, 1127, 1128, 1136, 1137, 1143, 1144, 1146, 1147, 1148], "Not": [24, 43, 47, 53, 80, 109, 119, 145, 146, 147, 150, 153, 175, 178, 179, 219, 221, 222, 223, 236, 245, 272, 276, 359, 368, 390, 402, 405, 407, 413, 429, 432, 495, 512, 514, 547, 554, 556, 558, 563, 564, 632, 644, 664, 675, 679, 681, 682, 683, 701, 708, 711, 717, 722, 729, 731, 741, 749, 756, 760, 762, 876, 914, 934, 936, 938, 940, 950, 973, 975, 980, 981, 982, 983, 993, 995, 1007, 1016, 1021, 1076, 1080, 1085, 1099, 1101, 1118, 1130], "satisfi": [24, 32, 179, 448, 564, 652, 664, 697], "colleagu": [24, 28, 154, 195, 409, 621, 978, 995, 1007], "aren": [24, 140, 225, 235, 660, 839, 928, 938], "either": [24, 39, 42, 43, 143, 145, 153, 154, 259, 262, 265, 407, 474, 647, 655, 658, 719, 805, 806, 835, 838, 870, 884, 975, 1042, 1092, 1130], "nobodi": [24, 43, 143, 145, 164, 175, 215, 231, 238, 241, 256, 263, 273, 277, 410, 412, 549, 590, 662, 733, 805, 806, 815, 830, 832, 838, 839, 891, 899, 1028, 1082, 1113, 1119], "doe": [24, 38, 45, 48, 49, 61, 69, 78, 83, 84, 110, 111, 112, 114, 123, 139, 142, 143, 144, 147, 148, 149, 150, 153, 154, 158, 163, 171, 175, 179, 181, 193, 202, 205, 218, 235, 238, 244, 262, 263, 265, 268, 270, 272, 294, 322, 333, 349, 355, 363, 367, 368, 369, 370, 377, 386, 387, 396, 399, 402, 403, 405, 407, 409, 411, 413, 418, 419, 420, 423, 424, 425, 429, 431, 432, 433, 437, 443, 444, 447, 449, 452, 457, 461, 469, 471, 473, 499, 500, 501, 502, 503, 506, 507, 530, 539, 542, 549, 550, 551, 554, 557, 559, 560, 562, 565, 588, 595, 603, 609, 618, 621, 622, 628, 629, 636, 647, 652, 653, 655, 662, 664, 684, 686, 694, 695, 697, 701, 705, 706, 707, 710, 711, 713, 717, 718, 727, 729, 741, 742, 746, 747, 749, 756, 770, 778, 783, 794, 804, 813, 817, 818, 820, 823, 871, 875, 882, 883, 884, 895, 900, 901, 903, 907, 910, 921, 925, 928, 934, 936, 937, 946, 950, 952, 953, 954, 955, 960, 964, 968, 969, 971, 973, 974, 975, 976, 978, 980, 989, 993, 995, 996, 1000, 1003, 1006, 1024, 1025, 1026, 1045, 1053, 1055, 1082, 1084, 1085, 1087, 1094, 1095, 1098, 1099, 1100, 1102, 1105, 1110, 1130, 1132], "even": [24, 29, 59, 62, 78, 112, 131, 143, 144, 145, 150, 154, 164, 165, 175, 179, 182, 183, 187, 189, 194, 200, 202, 203, 205, 206, 215, 219, 222, 223, 226, 229, 232, 234, 235, 237, 240, 241, 252, 262, 265, 276, 277, 295, 386, 395, 409, 415, 419, 447, 452, 548, 556, 559, 605, 652, 694, 697, 704, 713, 729, 731, 770, 778, 815, 834, 875, 883, 900, 901, 934, 936, 937, 953, 972, 984, 995, 1021, 1024, 1035, 1038, 1039, 1074, 1076, 1097, 1105, 1112, 1132, 1140], "tech": [24, 45, 142], "although": [24, 29, 78, 120, 122, 143, 145, 149, 154, 165, 175, 181, 205, 225, 235, 340, 503, 647, 648, 689, 711, 817, 820, 891, 971, 976, 1033, 1082], "gain": [24, 150, 262, 265, 419, 778, 817], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 142, 145, 191, 212, 218, 219, 228, 231, 238, 263, 277, 295, 297, 396, 434, 449, 492, 557, 622, 675, 684, 697, 751, 762, 875, 883, 884, 923, 940, 949, 995, 1005, 1018, 1048, 1058, 1081, 1116, 1117, 1120], "context": [24, 29, 59, 62, 110, 111, 143, 164, 167, 179, 182, 184, 186, 193, 224, 228, 229, 231, 235, 238, 244, 252, 256, 261, 271, 272, 273, 276, 283, 287, 290, 293, 294, 297, 340, 406, 468, 469, 483, 551, 557, 685, 706, 729, 731, 740, 745, 748, 750, 755, 758, 759, 760, 761, 764, 765, 769, 770, 771, 773, 774, 775, 782, 783, 784, 786, 787, 788, 789, 792, 793, 796, 798, 799, 811, 815, 874, 875, 898, 938, 949, 950, 977, 986, 1074, 1085], "defin": [24, 53, 118, 120, 121, 123, 136, 146, 163, 165, 180, 182, 184, 186, 191, 199, 202, 203, 205, 212, 216, 218, 221, 225, 228, 231, 235, 243, 245, 256, 267, 277, 294, 295, 303, 317, 328, 349, 354, 359, 364, 365, 368, 385, 386, 387, 388, 389, 390, 403, 411, 412, 413, 415, 419, 432, 433, 438, 439, 440, 457, 461, 469, 490, 491, 503, 525, 533, 550, 551, 552, 554, 556, 557, 559, 560, 563, 564, 565, 572, 575, 596, 600, 621, 628, 647, 648, 657, 658, 659, 660, 661, 664, 684, 689, 693, 702, 705, 710, 711, 737, 739, 751, 815, 835, 875, 876, 884, 895, 902, 920, 942, 952, 954, 968, 970, 974, 976, 978, 990, 995, 1007, 1017, 1072, 1085, 1089, 1103, 1122, 1130, 1132, 1135], "solv": [24, 45, 80, 89, 114, 140, 143, 144, 173, 175, 179, 180, 182, 184, 195, 200, 213, 221, 226, 229, 240, 243, 265, 269, 276, 280, 282, 285, 297, 301, 308, 389, 431, 440, 646, 720, 730, 731, 778, 817, 874, 915, 929, 962, 964, 966, 995, 1071, 1076, 1082, 1132, 1133], "provid": [24, 27, 37, 58, 65, 68, 143, 145, 146, 147, 149, 150, 153, 154, 158, 171, 212, 218, 219, 228, 231, 235, 269, 285, 301, 405, 434, 439, 440, 449, 460, 468, 621, 684, 711, 778, 814, 817, 857, 883, 884, 891, 905, 937, 946, 978, 987, 1005, 1018, 1081, 1104, 1112, 1132], "depth": [24, 175, 179, 200, 212, 218, 228, 229, 231, 409, 709, 980, 1076, 1080, 1081], "repres": [24, 143, 145, 167, 212, 218, 228, 231, 235, 256, 267, 308, 418, 452, 469, 471, 558, 729, 749, 774, 811, 814, 882, 884, 912, 1007, 1033, 1071, 1075, 1094, 1101, 1135], "own": [24, 28, 40, 43, 65, 110, 111, 143, 144, 146, 147, 153, 158, 171, 175, 221, 245, 250, 259, 269, 294, 303, 409, 415, 430, 444, 452, 469, 474, 538, 539, 548, 638, 639, 641, 642, 656, 660, 663, 675, 685, 687, 699, 707, 722, 729, 730, 731, 778, 811, 813, 814, 823, 825, 826, 834, 835, 857, 867, 882, 883, 895, 902, 920, 925, 936, 937, 949, 968, 975, 992, 997, 998, 1000, 1083, 1117, 1132, 1133, 1135], "yield": [24, 29, 162, 163, 176, 179, 180, 182, 191, 203, 210, 216, 220, 222, 224, 225, 231, 235, 240, 242, 252, 255, 256, 263, 271, 272, 273, 276, 277, 282, 284, 295, 390, 459, 468, 675, 678, 681, 682, 683, 731, 973, 977, 979, 980, 982, 1001, 1011, 1032, 1033, 1034, 1035, 1048, 1059, 1074, 1086], "multipl": [24, 35, 36, 59, 62, 76, 106, 110, 111, 143, 144, 146, 160, 175, 179, 182, 202, 203, 204, 216, 218, 235, 270, 294, 345, 347, 351, 352, 355, 364, 366, 369, 378, 385, 389, 407, 412, 425, 430, 437, 469, 483, 496, 551, 564, 622, 629, 642, 669, 675, 697, 699, 706, 714, 717, 721, 722, 729, 731, 747, 749, 755, 759, 760, 768, 769, 770, 778, 780, 782, 783, 786, 787, 793, 796, 799, 811, 814, 815, 818, 820, 825, 826, 871, 874, 883, 904, 920, 925, 945, 958, 995, 1006, 1007, 1020, 1021, 1026, 1076, 1101, 1103], "artifact": [24, 149, 153, 167, 172, 285, 301, 425, 739, 952, 953, 954, 964, 1119, 1132], "complet": [24, 42, 63, 78, 114, 139, 142, 143, 164, 175, 183, 191, 200, 213, 216, 219, 226, 240, 241, 243, 270, 276, 282, 287, 294, 303, 307, 308, 389, 406, 419, 432, 444, 496, 505, 550, 551, 625, 694, 709, 729, 772, 778, 805, 806, 816, 878, 884, 899, 936, 973, 977, 999, 1000, 1076, 1081, 1082, 1084, 1090, 1092, 1104, 1105, 1122, 1130], "prepar": [27, 112, 114, 121, 139, 142, 175, 232, 322, 340, 453, 494, 525, 587, 624, 945, 969, 1072, 1081, 1111], "base": [27, 29, 30, 42, 45, 53, 78, 80, 97, 107, 114, 135, 143, 145, 146, 158, 165, 170, 175, 176, 179, 182, 183, 186, 190, 193, 195, 205, 219, 221, 224, 228, 229, 233, 238, 240, 246, 253, 256, 261, 263, 267, 268, 269, 270, 271, 272, 277, 282, 293, 294, 295, 297, 318, 322, 326, 333, 355, 363, 390, 407, 425, 430, 431, 449, 453, 458, 459, 461, 468, 493, 505, 509, 525, 536, 578, 580, 581, 582, 583, 585, 586, 590, 622, 624, 625, 627, 669, 686, 687, 694, 699, 706, 710, 722, 725, 728, 730, 731, 751, 758, 762, 774, 778, 780, 829, 831, 871, 875, 934, 946, 950, 952, 953, 966, 967, 969, 977, 984, 986, 991, 992, 1032, 1038, 1054, 1074, 1083, 1084, 1098, 1129, 1130, 1133], "exist": [27, 38, 46, 47, 53, 55, 56, 109, 110, 111, 123, 136, 139, 149, 154, 183, 195, 202, 268, 272, 307, 319, 322, 325, 407, 429, 431, 447, 452, 472, 475, 495, 506, 512, 514, 547, 557, 605, 640, 642, 651, 705, 729, 731, 778, 805, 806, 811, 813, 820, 829, 831, 840, 844, 845, 857, 874, 882, 884, 895, 900, 904, 910, 913, 915, 932, 939, 946, 964, 968, 969, 974, 975, 984, 989, 1024, 1026, 1044, 1085, 1093, 1094, 1105, 1110, 1112], "navig": [27, 1101], "through": [27, 34, 38, 61, 73, 78, 104, 140, 142, 143, 145, 150, 154, 158, 171, 175, 179, 181, 184, 195, 203, 204, 205, 210, 216, 229, 269, 271, 272, 287, 290, 293, 329, 333, 340, 359, 379, 398, 418, 422, 435, 444, 475, 497, 500, 566, 568, 569, 618, 619, 622, 625, 647, 662, 664, 689, 697, 701, 707, 711, 749, 776, 809, 817, 865, 875, 883, 884, 893, 946, 949, 950, 975, 980, 983, 998, 1000, 1003, 1038, 1083, 1103, 1130, 1131, 1135], "deviat": [27, 150, 163, 171, 180, 204, 235, 340, 778], "after": [27, 43, 139, 140, 143, 144, 145, 150, 153, 163, 172, 175, 182, 195, 202, 212, 218, 228, 231, 234, 235, 241, 256, 261, 268, 270, 277, 308, 347, 355, 356, 389, 409, 416, 435, 437, 473, 474, 497, 504, 556, 559, 572, 607, 655, 657, 658, 660, 669, 675, 722, 729, 756, 760, 766, 818, 821, 838, 839, 871, 882, 922, 940, 945, 946, 949, 952, 971, 973, 975, 1000, 1001, 1005, 1041, 1054, 1072, 1080, 1089, 1101, 1111, 1112, 1117], "writeup": [27, 154, 964], "what": [27, 28, 43, 44, 47, 48, 55, 56, 57, 58, 59, 62, 65, 69, 78, 83, 86, 87, 97, 98, 99, 104, 107, 114, 116, 117, 123, 140, 142, 143, 144, 145, 146, 147, 148, 149, 154, 158, 162, 163, 164, 165, 166, 167, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 194, 202, 204, 205, 219, 220, 221, 230, 235, 243, 249, 259, 262, 265, 269, 271, 272, 285, 290, 293, 301, 303, 307, 308, 314, 322, 325, 327, 329, 330, 333, 344, 352, 357, 367, 368, 370, 383, 392, 395, 402, 405, 407, 409, 410, 413, 414, 415, 419, 423, 425, 430, 431, 434, 439, 441, 448, 450, 452, 473, 474, 484, 490, 492, 501, 504, 525, 526, 529, 532, 535, 538, 541, 542, 544, 554, 557, 559, 560, 561, 562, 563, 565, 572, 575, 582, 618, 625, 634, 652, 655, 658, 664, 669, 675, 685, 696, 697, 705, 706, 707, 711, 714, 718, 720, 721, 727, 729, 730, 731, 739, 742, 746, 749, 751, 756, 774, 781, 786, 791, 804, 805, 806, 808, 809, 811, 812, 814, 815, 817, 818, 820, 822, 823, 824, 827, 828, 829, 830, 831, 832, 833, 838, 853, 854, 856, 874, 875, 882, 883, 884, 886, 887, 888, 889, 890, 901, 902, 908, 909, 910, 911, 913, 915, 920, 921, 922, 923, 924, 929, 932, 935, 937, 938, 940, 941, 944, 945, 946, 948, 950, 953, 962, 963, 967, 969, 970, 971, 973, 975, 977, 978, 981, 982, 986, 987, 995, 999, 1000, 1018, 1024, 1028, 1033, 1036, 1044, 1071, 1075, 1083, 1085, 1092, 1101, 1110, 1112, 1116, 1117, 1119, 1121, 1132, 1135], "collect": [27, 29, 139, 142, 144, 187, 194, 203, 209, 210, 227, 229, 230, 231, 243, 252, 254, 261, 269, 271, 272, 276, 287, 290, 293, 294, 297, 307, 418, 425, 536, 582, 697, 706, 718, 731, 778, 809, 881, 962, 973, 977, 983, 991, 1025, 1031, 1035, 1064, 1069, 1071, 1074, 1075, 1090, 1104, 1105, 1110, 1112, 1140], "question": [27, 29, 32, 35, 36, 38, 102, 114, 145, 150, 158, 163, 175, 179, 181, 203, 204, 205, 215, 216, 218, 219, 221, 241, 322, 329, 336, 364, 393, 399, 411, 430, 433, 437, 441, 494, 558, 618, 625, 713, 717, 731, 756, 770, 786, 805, 806, 808, 827, 833, 857, 874, 882, 884, 895, 899, 915, 934, 935, 968, 976, 977, 980, 985, 1074, 1076], "ask": [27, 143, 148, 150, 158, 175, 178, 179, 244, 276, 322, 329, 429, 448, 449, 471, 490, 542, 554, 565, 686, 708, 834, 889, 891, 995, 1076], "answer": [27, 45, 147, 150, 163, 175, 179, 181, 182, 205, 216, 223, 295, 329, 433, 437, 494, 618, 625, 627, 697, 702, 721, 742, 786, 805, 806, 811, 823, 825, 826, 829, 831, 882, 884, 891, 895, 934, 937, 968, 975, 976, 980, 987, 1004, 1007, 1076], "cover": [27, 78, 81, 115, 136, 150, 167, 175, 179, 183, 185, 203, 204, 216, 229, 268, 270, 429, 448, 882, 884, 966, 975, 977, 1000, 1048, 1071, 1076, 1080, 1081, 1103, 1104, 1110, 1133, 1135], "been": [27, 59, 62, 112, 142, 143, 144, 145, 147, 148, 149, 154, 158, 163, 164, 175, 183, 212, 218, 228, 231, 262, 265, 267, 277, 294, 319, 328, 388, 402, 403, 432, 443, 452, 469, 525, 684, 732, 774, 792, 798, 803, 813, 817, 821, 841, 875, 882, 884, 895, 904, 914, 925, 950, 953, 954, 971, 978, 1016, 1112, 1130, 1132, 1133], "further": [27, 140, 142, 149, 153, 169, 218, 250, 265, 294, 330, 395, 406, 444, 506, 526, 529, 532, 535, 538, 541, 544, 656, 687, 730, 731, 749, 772, 778, 860, 885, 921, 941, 944, 948, 983, 1116, 1121, 1135], "inform": [27, 28, 29, 106, 142, 145, 146, 148, 153, 162, 163, 164, 166, 171, 191, 212, 218, 228, 231, 256, 271, 272, 293, 297, 406, 416, 423, 424, 434, 443, 711, 729, 737, 749, 813, 838, 871, 875, 882, 884, 886, 918, 974, 1002, 1076, 1084, 1089, 1105, 1112], "internet": [27, 65, 78, 142, 144, 147, 148, 150, 171, 183, 191, 219, 232, 271, 272, 287, 293, 297, 319, 431, 875, 876, 878, 936, 976, 1133, 1147], "subtract": [27, 212, 235, 267, 366, 469, 483, 697, 837, 937, 987, 995, 1007], "known": [27, 139, 144, 155, 195, 212, 218, 228, 231, 248, 250, 268, 285, 301, 319, 365, 367, 379, 386, 413, 419, 584, 749, 838, 967, 1083, 1132, 1133], "calcul": [27, 82, 85, 145, 179, 203, 212, 235, 365, 367, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 468, 498, 503, 505, 649, 654, 687, 714, 728, 730, 731, 920, 937, 978, 980, 1051, 1083, 1088, 1110], "minimum": [27, 63, 235, 669, 778, 973, 1079, 1080, 1081, 1082], "come": [27, 43, 78, 110, 111, 112, 117, 120, 122, 139, 140, 142, 143, 144, 145, 148, 149, 150, 153, 154, 165, 171, 172, 175, 195, 221, 248, 250, 261, 268, 269, 294, 313, 319, 343, 345, 346, 362, 389, 425, 432, 469, 503, 585, 622, 625, 630, 644, 696, 699, 701, 711, 721, 731, 746, 778, 809, 811, 815, 821, 834, 838, 875, 882, 883, 884, 910, 936, 964, 975, 976, 980, 998, 999, 1000, 1001, 1007, 1018, 1026, 1028, 1033, 1038, 1056, 1067, 1084, 1087, 1092, 1106, 1133], "she": [27, 202, 622, 655, 813, 815, 1020, 1028], "who": [27, 29, 45, 123, 140, 143, 147, 150, 154, 173, 175, 221, 231, 256, 287, 340, 415, 419, 429, 434, 457, 474, 506, 627, 697, 707, 751, 778, 786, 805, 806, 813, 817, 823, 834, 875, 883, 884, 899, 910, 952, 969, 971, 977, 999, 1075, 1090, 1102, 1110, 1130, 1133, 1135], "repetit": [27, 256, 838, 1130], "prone": [27, 364, 552, 562, 582, 655, 699, 766, 954, 1022, 1117, 1130], "possibl": [27, 59, 61, 62, 106, 112, 114, 123, 125, 130, 133, 142, 143, 150, 153, 158, 165, 175, 179, 195, 205, 212, 218, 221, 223, 228, 229, 231, 248, 250, 259, 268, 271, 272, 277, 294, 354, 365, 368, 385, 398, 405, 411, 415, 419, 420, 423, 429, 435, 444, 447, 449, 452, 457, 461, 469, 471, 506, 539, 549, 551, 552, 557, 564, 565, 583, 600, 641, 647, 648, 655, 669, 673, 686, 697, 705, 706, 707, 711, 756, 783, 813, 822, 847, 876, 877, 882, 883, 893, 896, 925, 973, 974, 975, 983, 988, 996, 998, 1007, 1016, 1021, 1023, 1024, 1026, 1075, 1076, 1085, 1097], "abl": [27, 28, 30, 43, 142, 143, 145, 146, 148, 150, 158, 175, 195, 202, 284, 409, 415, 441, 448, 452, 506, 654, 664, 805, 806, 823, 829, 831, 832, 875, 883, 884, 910, 946, 977, 1088, 1135], "fix": [27, 46, 63, 65, 76, 107, 139, 143, 156, 158, 179, 200, 205, 215, 216, 221, 240, 243, 270, 271, 272, 293, 322, 347, 370, 413, 429, 431, 437, 474, 507, 519, 530, 542, 548, 567, 583, 633, 640, 661, 731, 746, 751, 755, 758, 759, 779, 780, 786, 787, 793, 796, 799, 822, 874, 878, 898, 908, 939, 949, 969, 971, 974, 1001, 1033, 1076], "inconsist": [27, 549, 1099], "easi": [27, 68, 116, 131, 143, 145, 146, 147, 148, 149, 150, 154, 163, 164, 167, 179, 225, 235, 368, 383, 409, 425, 647, 664, 706, 758, 760, 764, 776, 783, 817, 882, 883, 884, 911, 928, 946, 955, 969, 995, 999, 1007, 1016, 1018, 1082, 1110, 1111, 1135], "plain": [27, 118, 145, 205, 333, 525, 561, 564, 643, 696, 711, 781, 883, 974, 987], "happi": [27, 65, 148, 175, 413, 557, 1081], "clear": [27, 43, 143, 145, 150, 162, 195, 205, 234, 295, 323, 324, 390, 415, 419, 434, 444, 450, 456, 563, 618, 651, 669, 706, 778, 786, 814, 817, 838, 898, 972, 987, 1007, 1009, 1080, 1081, 1112], "front": [27, 78, 140, 150, 175, 231, 277, 419, 600, 719, 1133], "later": [27, 80, 115, 122, 142, 143, 146, 153, 164, 175, 297, 345, 349, 355, 357, 359, 415, 419, 425, 432, 551, 552, 554, 566, 568, 569, 603, 658, 689, 692, 737, 739, 741, 746, 762, 764, 774, 781, 820, 882, 904, 920, 921, 923, 934, 938, 988, 996, 1006, 1009, 1011, 1089, 1095], "menu": [27, 139, 183, 778, 1125], "mine": [28, 142, 143, 146, 154, 171, 175, 179, 340, 539, 778], "hi": [28, 45, 158, 163, 175, 179, 182, 200, 226, 229, 412, 501, 988, 1076], "data": [28, 29, 49, 70, 73, 78, 89, 108, 110, 111, 119, 123, 143, 144, 145, 146, 150, 153, 162, 164, 166, 175, 179, 180, 184, 192, 194, 199, 209, 212, 213, 218, 219, 221, 228, 231, 235, 241, 256, 260, 261, 262, 263, 265, 268, 270, 271, 272, 277, 282, 285, 287, 290, 296, 301, 324, 325, 340, 354, 368, 375, 384, 391, 397, 398, 401, 403, 404, 408, 413, 417, 418, 420, 421, 426, 427, 430, 437, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 512, 514, 523, 547, 548, 550, 554, 557, 570, 573, 575, 576, 587, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 649, 653, 656, 687, 699, 703, 711, 712, 720, 721, 728, 729, 730, 731, 733, 736, 737, 768, 772, 776, 783, 791, 809, 815, 820, 822, 830, 876, 878, 882, 883, 884, 885, 895, 899, 901, 909, 914, 920, 923, 926, 928, 940, 964, 973, 975, 980, 984, 987, 1000, 1001, 1012, 1014, 1015, 1016, 1024, 1035, 1063, 1064, 1074, 1078, 1079, 1080, 1082, 1084, 1085, 1089, 1090, 1094, 1095, 1098, 1100, 1101, 1105, 1110, 1131, 1132, 1146], "convinc": [28, 368], "him": [28, 175, 179, 182, 200, 203, 226, 252, 276, 696, 925, 1076], "wai": [28, 43, 50, 59, 62, 63, 65, 80, 81, 133, 139, 140, 142, 145, 150, 154, 155, 158, 164, 167, 171, 176, 178, 179, 181, 182, 183, 186, 187, 195, 200, 203, 215, 216, 221, 224, 225, 226, 228, 229, 233, 235, 243, 247, 248, 261, 262, 265, 269, 271, 272, 293, 294, 310, 314, 364, 368, 372, 373, 383, 389, 405, 406, 407, 415, 431, 432, 439, 449, 451, 452, 456, 472, 474, 493, 503, 507, 519, 525, 533, 549, 550, 557, 562, 565, 603, 605, 631, 637, 648, 664, 685, 695, 707, 711, 734, 747, 756, 770, 772, 778, 805, 806, 814, 820, 822, 825, 826, 875, 883, 884, 895, 902, 910, 936, 939, 949, 950, 954, 960, 964, 975, 987, 992, 998, 1001, 1002, 1005, 1016, 1020, 1021, 1023, 1026, 1028, 1033, 1061, 1076, 1094, 1102, 1110, 1117, 1135], "go": [28, 40, 42, 59, 61, 62, 63, 65, 80, 97, 122, 140, 143, 146, 147, 149, 150, 172, 175, 182, 186, 195, 204, 205, 221, 262, 265, 267, 297, 325, 429, 431, 449, 490, 651, 689, 701, 707, 719, 731, 739, 742, 746, 778, 780, 809, 821, 838, 840, 874, 875, 882, 883, 910, 913, 915, 920, 928, 932, 952, 955, 969, 1000, 1034], "relev": [28, 145, 218, 243, 355, 444, 506, 711, 778, 791, 882, 883, 975, 1075, 1091, 1105], "part": [28, 43, 80, 92, 106, 114, 119, 136, 143, 144, 145, 146, 148, 150, 153, 164, 167, 175, 182, 183, 184, 205, 231, 243, 262, 265, 277, 324, 331, 345, 368, 402, 429, 452, 457, 471, 492, 506, 549, 647, 719, 729, 749, 756, 778, 798, 805, 806, 838, 873, 875, 882, 883, 884, 885, 900, 952, 999, 1000, 1013, 1018, 1020, 1066, 1068, 1082, 1083, 1094, 1095, 1097, 1098, 1099, 1100, 1120], "natur": [28, 38, 75, 143, 145, 150, 175, 229, 235, 277, 340, 345, 363, 407, 448, 449, 601, 603, 647, 707, 883, 1011], "straighforward": 28, "approach": [28, 35, 38, 142, 143, 182, 286, 302, 347, 431, 435, 436, 444, 705, 731, 817, 883, 936, 938, 1093], "would": [28, 57, 104, 107, 123, 142, 144, 145, 147, 148, 154, 163, 165, 172, 175, 179, 181, 194, 205, 218, 231, 235, 270, 272, 379, 398, 405, 407, 418, 419, 433, 434, 437, 444, 447, 505, 519, 523, 557, 561, 563, 565, 612, 619, 628, 652, 658, 697, 707, 719, 727, 778, 781, 805, 806, 829, 831, 834, 860, 883, 884, 894, 895, 911, 920, 928, 949, 968, 969, 973, 975, 976, 996, 1007, 1011, 1015, 1018, 1024, 1028, 1033, 1054, 1081, 1084, 1094, 1101], "copi": [28, 36, 42, 50, 70, 97, 99, 101, 102, 114, 118, 122, 133, 135, 139, 143, 144, 145, 146, 149, 154, 158, 164, 170, 173, 183, 190, 193, 205, 215, 221, 227, 231, 235, 238, 241, 247, 248, 249, 250, 253, 258, 259, 263, 267, 268, 270, 277, 279, 280, 283, 295, 303, 325, 355, 357, 369, 375, 384, 389, 391, 393, 397, 398, 401, 404, 408, 417, 421, 426, 427, 442, 474, 475, 488, 489, 490, 495, 512, 524, 525, 527, 536, 541, 543, 545, 547, 548, 549, 555, 565, 566, 568, 569, 578, 582, 592, 600, 609, 611, 614, 615, 627, 629, 635, 638, 641, 644, 649, 650, 651, 655, 656, 657, 675, 687, 689, 699, 703, 707, 708, 712, 720, 727, 728, 729, 730, 731, 753, 758, 778, 779, 794, 804, 805, 806, 807, 808, 809, 818, 838, 844, 845, 847, 848, 849, 850, 852, 858, 874, 885, 888, 890, 895, 907, 912, 913, 914, 915, 922, 923, 928, 932, 945, 962, 963, 964, 966, 968, 969, 973, 974, 1008, 1023, 1026, 1089, 1093, 1098, 1112, 1117, 1119, 1130, 1142], "dumb": [28, 45, 163, 194, 307, 749, 923, 925], "reason": [28, 61, 123, 130, 145, 158, 164, 175, 204, 223, 319, 402, 409, 411, 413, 419, 422, 435, 447, 566, 568, 569, 603, 647, 690, 709, 746, 762, 774, 778, 829, 831, 928, 936, 937, 950, 964, 969, 1007, 1016, 1018, 1081], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 78, 80, 81, 89, 106, 108, 109, 110, 111, 112, 116, 120, 127, 130, 136, 137, 140, 142, 145, 146, 147, 149, 150, 153, 154, 158, 159, 160, 163, 164, 165, 167, 171, 173, 175, 179, 180, 181, 182, 183, 184, 195, 202, 203, 204, 205, 212, 215, 216, 218, 219, 221, 222, 224, 226, 227, 228, 229, 231, 235, 239, 243, 248, 250, 252, 259, 261, 262, 265, 267, 268, 269, 270, 272, 277, 280, 285, 289, 294, 295, 301, 307, 308, 309, 313, 319, 322, 324, 325, 327, 328, 344, 346, 347, 349, 352, 354, 355, 357, 359, 362, 363, 366, 367, 368, 374, 377, 380, 385, 386, 389, 393, 395, 396, 398, 399, 400, 405, 406, 407, 409, 410, 413, 416, 419, 422, 429, 430, 432, 434, 437, 438, 443, 444, 447, 448, 449, 459, 469, 471, 474, 493, 496, 503, 504, 505, 506, 507, 510, 514, 519, 523, 533, 539, 542, 549, 550, 551, 552, 554, 557, 558, 561, 562, 563, 565, 572, 575, 582, 583, 584, 587, 597, 603, 604, 609, 612, 619, 621, 622, 624, 625, 629, 635, 636, 637, 638, 642, 648, 650, 651, 652, 655, 658, 659, 660, 664, 669, 686, 689, 690, 695, 696, 697, 699, 701, 705, 706, 707, 708, 710, 711, 713, 716, 718, 722, 729, 731, 733, 734, 737, 747, 749, 751, 756, 762, 764, 766, 770, 772, 774, 776, 778, 783, 797, 804, 805, 806, 809, 811, 813, 814, 816, 817, 818, 820, 821, 823, 824, 829, 831, 838, 839, 841, 851, 856, 860, 862, 865, 875, 876, 882, 883, 884, 885, 891, 893, 895, 898, 900, 901, 904, 905, 912, 918, 920, 921, 923, 925, 926, 928, 931, 937, 938, 939, 940, 945, 949, 950, 952, 953, 954, 955, 958, 960, 964, 966, 967, 969, 970, 971, 973, 975, 976, 978, 980, 984, 987, 988, 989, 990, 994, 996, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1009, 1012, 1016, 1024, 1026, 1027, 1028, 1030, 1038, 1043, 1071, 1075, 1076, 1081, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1092, 1094, 1095, 1098, 1100, 1101, 1104, 1110, 1112, 1113, 1116, 1117, 1120, 1132, 1133, 1135], "need": [28, 43, 45, 61, 63, 104, 115, 116, 118, 123, 143, 144, 145, 148, 150, 154, 158, 159, 164, 175, 182, 183, 185, 195, 205, 219, 221, 243, 287, 310, 322, 352, 354, 357, 377, 385, 386, 405, 411, 412, 418, 422, 424, 425, 429, 432, 434, 437, 439, 442, 444, 448, 449, 471, 501, 503, 504, 505, 506, 536, 542, 548, 549, 564, 584, 604, 618, 625, 629, 658, 664, 693, 707, 710, 716, 721, 737, 751, 753, 766, 770, 774, 778, 817, 821, 834, 839, 875, 876, 877, 878, 882, 883, 884, 891, 895, 901, 902, 905, 908, 919, 923, 934, 955, 964, 968, 969, 970, 974, 979, 992, 1000, 1001, 1003, 1006, 1015, 1020, 1031, 1032, 1081, 1082, 1089, 1104, 1112, 1133], "mechan": [28, 32, 89, 130, 143, 144, 167, 175, 179, 190, 205, 259, 447, 625, 925, 946, 984, 1076, 1105, 1130, 1135, 1145], "where": [28, 53, 89, 109, 112, 114, 128, 129, 139, 142, 143, 144, 145, 146, 148, 150, 153, 158, 163, 164, 171, 172, 175, 176, 179, 202, 203, 204, 205, 212, 215, 218, 219, 221, 228, 231, 235, 243, 252, 259, 277, 285, 294, 301, 322, 327, 328, 363, 367, 377, 385, 386, 388, 389, 390, 403, 407, 418, 420, 430, 440, 453, 460, 491, 493, 504, 519, 525, 542, 561, 622, 625, 629, 647, 705, 706, 710, 772, 776, 778, 790, 820, 821, 835, 838, 841, 862, 867, 875, 882, 883, 884, 891, 896, 902, 904, 907, 910, 911, 927, 937, 938, 945, 949, 950, 953, 964, 968, 969, 976, 978, 980, 983, 1005, 1007, 1017, 1058, 1076, 1083, 1088, 1110, 1132, 1135], "could": [28, 50, 57, 110, 111, 114, 116, 120, 122, 139, 140, 143, 144, 148, 150, 154, 164, 173, 175, 181, 195, 204, 205, 215, 225, 231, 259, 269, 271, 272, 290, 293, 340, 368, 412, 433, 435, 448, 449, 473, 506, 557, 565, 629, 641, 647, 660, 661, 669, 684, 694, 709, 732, 749, 778, 791, 817, 835, 883, 884, 891, 902, 908, 945, 1007, 1058, 1072, 1088, 1098, 1105, 1117, 1130], "exchang": [28, 78, 172, 215, 429, 457, 473, 503, 657, 658, 749, 822, 940, 1033, 1041], "meta": [28, 39, 135, 150, 778, 790, 838], "retriev": [28, 154, 675, 778, 980, 1028], "check": [28, 29, 38, 88, 97, 104, 112, 128, 142, 143, 145, 146, 147, 148, 149, 154, 158, 163, 175, 179, 183, 187, 212, 218, 221, 228, 231, 235, 259, 272, 307, 330, 333, 355, 370, 379, 381, 382, 387, 395, 402, 406, 414, 416, 432, 496, 497, 519, 530, 542, 549, 557, 564, 565, 582, 603, 641, 657, 658, 669, 706, 729, 731, 751, 753, 758, 778, 794, 795, 797, 874, 875, 882, 883, 905, 910, 916, 919, 923, 953, 954, 959, 962, 964, 971, 1000, 1005, 1018, 1028, 1031, 1035, 1037, 1039, 1055, 1061, 1074, 1105, 1110, 1119, 1130, 1140], "everyth": [28, 42, 43, 98, 114, 136, 143, 149, 150, 167, 175, 179, 183, 194, 202, 220, 221, 249, 258, 259, 262, 265, 279, 280, 294, 297, 333, 340, 357, 377, 380, 405, 419, 425, 429, 490, 548, 549, 551, 558, 562, 567, 572, 622, 664, 693, 697, 713, 720, 729, 730, 731, 747, 756, 776, 780, 783, 808, 811, 812, 814, 815, 839, 860, 874, 875, 876, 882, 883, 884, 901, 903, 904, 915, 928, 929, 935, 937, 940, 950, 972, 978, 983, 987, 1083, 1098, 1143, 1144, 1145, 1147], "clearli": [28, 43, 158, 175, 407, 654, 675, 702, 778, 797, 911, 976, 1007, 1028, 1132], "intersphinx": [28, 140], "spinx": 28, "possibli": [29, 77, 85, 143, 175, 431, 565, 641, 655, 664, 669, 684, 696, 706, 718, 719, 823, 860, 883, 931, 966, 1092], "arrang": [29, 84, 110, 111, 147, 290, 506, 711, 811, 871], "subgroup": [29, 35, 38, 525], "refer": [29, 66, 90, 97, 110, 111, 114, 117, 142, 148, 149, 163, 165, 170, 179, 182, 184, 187, 188, 199, 200, 202, 204, 205, 210, 213, 214, 216, 217, 219, 220, 221, 226, 227, 228, 231, 235, 237, 239, 240, 242, 246, 254, 255, 257, 262, 264, 265, 269, 270, 272, 275, 276, 278, 281, 282, 284, 285, 293, 294, 296, 297, 301, 303, 308, 309, 310, 311, 312, 313, 322, 386, 392, 399, 438, 495, 503, 512, 514, 525, 547, 548, 549, 550, 565, 566, 568, 569, 570, 573, 576, 592, 598, 602, 611, 614, 615, 616, 624, 629, 632, 635, 636, 639, 640, 641, 642, 643, 644, 655, 675, 687, 688, 696, 699, 703, 707, 712, 720, 728, 729, 730, 731, 737, 738, 740, 742, 745, 748, 755, 759, 769, 778, 782, 787, 790, 793, 796, 799, 821, 851, 860, 874, 875, 882, 883, 907, 946, 952, 968, 971, 976, 977, 999, 1026, 1027, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090, 1110, 1112, 1130, 1131, 1132, 1140], "veri": [29, 35, 37, 38, 142, 143, 145, 164, 175, 179, 182, 184, 195, 200, 203, 226, 229, 252, 276, 333, 340, 361, 368, 378, 379, 399, 415, 416, 418, 424, 431, 434, 449, 536, 547, 560, 575, 593, 621, 650, 651, 689, 692, 695, 706, 709, 778, 783, 788, 816, 817, 876, 881, 883, 884, 901, 902, 918, 923, 938, 952, 980, 988, 1004, 1007, 1011, 1012, 1018, 1022, 1026, 1031, 1076, 1083, 1084, 1106, 1115, 1122, 1130], "unawar": [29, 158, 175, 182], "simpli": [29, 61, 116, 137, 143, 146, 148, 150, 154, 158, 167, 231, 232, 271, 272, 293, 294, 368, 410, 452, 490, 557, 566, 568, 569, 618, 628, 639, 675, 696, 697, 702, 707, 721, 756, 810, 823, 882, 904, 908, 952, 968, 976], "interest": [29, 112, 144, 145, 158, 164, 175, 183, 322, 434, 449, 975, 977, 1095], "catalog": [29, 1133], "chapter": [29, 42, 123, 195, 204, 212, 218, 228, 231, 232, 525, 838], "subchapt": 29, "cluster_python": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1086, 1089, 1090, 1092, 1096, 1104, 1107, 1109, 1114], "cluster_python_swdev": [29, 731, 1029, 1074, 1077, 1078, 1082, 1090, 1092, 1104, 1107, 1109, 1114], "cluster_python_swdev_pytest": [29, 731, 1074, 1104, 1109], "pytest": [29, 219, 229, 232, 240, 243, 252, 261, 269, 271, 276, 287, 290, 293, 294, 297, 330, 431, 731, 1064, 1072, 1073, 1074, 1104], "cluster_python_exercis": [29, 200, 322, 731, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "cluster_python_exercises_userdb": [29, 731, 1035, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "databas": [29, 42, 43, 55, 78, 140, 162, 163, 182, 204, 210, 215, 216, 219, 221, 222, 225, 229, 243, 271, 272, 293, 313, 449, 450, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 731, 834, 865, 886, 994, 1033, 1035, 1054, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1090, 1094, 1106, 1122], "seri": [29, 100, 144, 215, 219, 260, 261, 262, 263, 265, 267, 269, 294, 409, 430, 459, 731, 887, 1001, 1033, 1035, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1081, 1090, 1095, 1096, 1097, 1099, 1100, 1145], "cluster_python_exercises_sensor": [29, 731, 1035, 1062, 1063, 1064, 1074], "sensor": [29, 69, 72, 73, 74, 78, 81, 84, 97, 106, 109, 114, 115, 116, 117, 118, 121, 123, 170, 179, 183, 219, 240, 251, 259, 268, 271, 272, 287, 290, 293, 297, 322, 326, 328, 446, 451, 453, 461, 467, 468, 471, 472, 476, 482, 485, 491, 495, 496, 497, 498, 499, 500, 501, 512, 515, 516, 517, 518, 519, 520, 521, 522, 547, 555, 620, 657, 706, 707, 708, 731, 778, 874, 881, 913, 915, 932, 988, 1035, 1063, 1074, 1141], "And": [29, 97, 99, 102, 103, 104, 106, 114, 143, 144, 145, 147, 150, 173, 179, 182, 202, 205, 210, 212, 221, 223, 232, 240, 247, 248, 249, 251, 252, 254, 255, 257, 258, 261, 265, 275, 276, 278, 279, 281, 286, 295, 302, 430, 436, 442, 446, 453, 455, 467, 481, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 512, 524, 525, 547, 555, 577, 585, 590, 600, 603, 611, 615, 644, 656, 687, 688, 689, 698, 703, 710, 712, 720, 728, 729, 730, 731, 801, 807, 808, 811, 812, 816, 820, 828, 830, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 858, 868, 874, 881, 888, 890, 897, 903, 905, 910, 913, 915, 919, 929, 932, 935, 937, 940, 952, 954, 956, 957, 958, 959, 960, 963, 975, 977, 982, 985, 986, 987, 991, 992, 1016, 1032, 1033, 1034, 1035, 1048, 1059, 1069, 1070, 1071, 1074, 1086, 1090, 1096, 1104, 1130], "acquisit": [29, 116, 143, 170, 271, 272, 287, 290, 293, 294, 297, 539, 731, 1031, 1035, 1063, 1064, 1074], "cluster_python_exercises_legaci": [29, 200, 322, 731, 1035, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074], "legaci": [29, 200, 322, 452, 731, 1035, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074, 1125], "cluster_python_exercises_herdt": [29, 731, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1074], "cluster_python_exercises_csv": [29, 731, 1032, 1033, 1034, 1035, 1074], "csv": [29, 44, 51, 53, 54, 55, 56, 78, 106, 116, 119, 179, 182, 191, 194, 200, 204, 205, 208, 210, 212, 213, 216, 217, 219, 223, 226, 229, 231, 237, 238, 241, 256, 260, 261, 263, 266, 267, 271, 272, 278, 283, 287, 290, 293, 295, 430, 731, 820, 823, 838, 860, 988, 991, 994, 1028, 1035, 1069, 1070, 1071, 1072, 1074, 1076, 1079, 1080, 1081, 1082, 1090], "cluster_python_advanc": [29, 731, 977, 984, 985, 986, 987, 991, 1029, 1032, 1033, 1034, 1035, 1048, 1059, 1062, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1086, 1090, 1092, 1104, 1107, 1109, 1114], "cluster_python_advanced_oo": [29, 731, 977, 984, 985, 986, 987, 991, 1035, 1062, 1063, 1064, 1069, 1071, 1074, 1104], "object": [29, 63, 70, 73, 74, 78, 90, 97, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 117, 123, 136, 158, 160, 163, 165, 170, 175, 182, 191, 193, 194, 199, 202, 203, 205, 208, 210, 212, 215, 216, 219, 220, 221, 222, 223, 227, 228, 229, 233, 234, 236, 238, 241, 245, 253, 257, 259, 260, 262, 263, 265, 267, 270, 273, 277, 283, 289, 295, 309, 311, 312, 315, 317, 322, 323, 324, 325, 359, 385, 412, 430, 432, 437, 438, 442, 443, 444, 449, 451, 453, 458, 467, 469, 475, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 512, 514, 519, 525, 539, 547, 548, 550, 552, 555, 556, 558, 560, 561, 566, 568, 569, 570, 572, 573, 576, 592, 598, 602, 603, 604, 611, 614, 615, 618, 619, 624, 625, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 647, 655, 656, 658, 659, 669, 675, 687, 689, 691, 692, 696, 697, 702, 703, 705, 707, 708, 711, 712, 718, 720, 721, 725, 726, 728, 729, 730, 731, 821, 874, 952, 953, 954, 957, 958, 959, 960, 962, 968, 971, 973, 974, 976, 977, 980, 984, 985, 986, 987, 988, 990, 992, 994, 995, 997, 999, 1000, 1001, 1007, 1016, 1018, 1024, 1025, 1035, 1062, 1063, 1064, 1069, 1071, 1074, 1081, 1095, 1097, 1099, 1100, 1101, 1104, 1110, 1130, 1131, 1133, 1135], "orient": [29, 70, 73, 74, 78, 97, 114, 123, 163, 182, 194, 203, 205, 210, 216, 219, 222, 233, 234, 243, 245, 257, 262, 265, 268, 270, 309, 311, 312, 322, 323, 324, 357, 430, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 512, 514, 547, 548, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 711, 712, 720, 728, 730, 731, 977, 984, 985, 986, 987, 1001, 1035, 1062, 1063, 1064, 1069, 1071, 1074, 1104, 1110, 1131, 1133], "cluster_python_advanced_multithread": [29, 731, 977, 984, 985, 986, 987, 1074], "cluster_python_bas": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "fundament": [29, 59, 62, 73, 90, 166, 175, 178, 180, 182, 184, 187, 189, 194, 197, 200, 203, 206, 216, 222, 226, 234, 237, 308, 309, 310, 311, 312, 313, 322, 340, 341, 429, 459, 731, 756, 977, 984, 985, 986, 987, 991, 1010, 1019, 1024, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1086, 1089, 1090, 1096, 1104, 1105], "cluster_python_misc": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1029, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1083, 1089, 1090, 1092, 1096, 1104, 1107, 1114], "cluster_python_misc_ai": [29, 731, 1074, 1077, 1078, 1082, 1083, 1090], "machin": [29, 102, 110, 111, 114, 135, 145, 150, 164, 179, 195, 202, 203, 212, 213, 216, 218, 228, 231, 285, 293, 297, 301, 321, 325, 345, 361, 363, 371, 379, 407, 411, 425, 506, 507, 731, 778, 805, 806, 811, 814, 817, 867, 874, 888, 889, 890, 891, 893, 894, 895, 937, 952, 955, 962, 976, 1074, 1078, 1082, 1090, 1103, 1132], "artifici": [29, 179, 204, 262, 293, 297, 407, 641, 731, 895, 968, 1074, 1078, 1082, 1083, 1090], "intellig": [29, 143, 179, 219, 255, 262, 265, 275, 281, 293, 297, 328, 731, 749, 973, 977, 1074, 1078, 1082, 1083, 1090], "cluster_python_misc_panda": [29, 731, 1074, 1090, 1096], "panda": [29, 164, 175, 194, 200, 213, 226, 240, 243, 261, 264, 276, 293, 295, 297, 340, 431, 731, 1000, 1074, 1076, 1079, 1082, 1090], "cluster_python_db": [29, 731, 1032, 1034, 1035, 1074, 1086], "cluster_python_draft": [29, 731, 1029, 1074], "python_python_5550_xml_etre": [29, 731, 1074], "xml": [29, 116, 139, 140, 290, 731, 1074, 1090], "elementtre": [29, 243, 731, 1074, 1090], "etre": [29, 243, 731, 1074, 1090], "python_advanced_modul": [29, 731, 977, 1029, 1032, 1033, 1034, 1035, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1086, 1090, 1092, 1104, 1107, 1109, 1114], "gt": [29, 32, 35, 36, 53, 55, 56, 72, 73, 74, 87, 90, 115, 117, 118, 119, 122, 132, 162, 165, 176, 181, 186, 193, 199, 200, 202, 207, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 308, 309, 310, 311, 312, 313, 316, 317, 322, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 436, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 663, 687, 688, 698, 703, 712, 720, 728, 730, 731, 735, 738, 740, 743, 745, 748, 750, 754, 755, 757, 759, 761, 763, 769, 771, 773, 775, 782, 784, 787, 789, 793, 796, 799, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 881, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 917, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1086, 1089, 1090, 1092, 1096, 1104, 1107, 1109, 1114, 1115], "python_basics_python_0220_for": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1032, 1033, 1034, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1090], "loop": [29, 32, 34, 38, 42, 59, 62, 89, 90, 97, 110, 111, 114, 116, 123, 131, 136, 143, 158, 167, 179, 182, 184, 187, 188, 189, 192, 200, 202, 203, 204, 206, 210, 213, 216, 221, 222, 224, 226, 227, 232, 234, 236, 237, 239, 240, 242, 252, 255, 262, 265, 272, 275, 276, 281, 282, 290, 294, 308, 309, 310, 311, 312, 313, 314, 322, 327, 345, 348, 351, 360, 363, 375, 382, 383, 384, 391, 397, 401, 404, 405, 408, 409, 417, 421, 426, 427, 494, 495, 536, 547, 578, 583, 640, 647, 649, 675, 687, 710, 721, 728, 730, 731, 766, 776, 781, 795, 809, 811, 815, 822, 878, 900, 901, 902, 910, 936, 940, 946, 949, 950, 977, 978, 981, 982, 987, 999, 1032, 1033, 1034, 1035, 1037, 1039, 1045, 1047, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1086, 1090, 1092, 1129, 1130, 1131, 1140], "python_basics_python_0450_dictionari": [29, 90, 731, 977, 999, 1035, 1048, 1059, 1074], "python_swdev_unittest": [29, 731, 1074, 1104], "unittest": [29, 65, 114, 139, 140, 156, 159, 170, 172, 175, 178, 179, 189, 192, 203, 205, 210, 252, 261, 272, 312, 322, 330, 331, 340, 341, 729, 731, 1018, 1074, 1076, 1104, 1115], "python_advanced_oo_inherit": [29, 731, 977, 984, 985, 986, 987, 991, 1074, 1104], "inherit": [29, 65, 69, 73, 106, 123, 160, 170, 179, 203, 216, 229, 233, 235, 268, 269, 270, 271, 272, 276, 293, 294, 297, 331, 453, 467, 495, 503, 505, 545, 547, 548, 572, 621, 624, 644, 686, 731, 770, 810, 813, 816, 837, 839, 946, 975, 977, 985, 986, 987, 988, 991, 993, 996, 1074, 1103, 1104, 1146], "python_swdev_pip": [29, 731, 1029, 1074, 1077, 1078, 1082, 1090, 1092, 1104, 1107, 1114], "python_misc_import": [29, 731, 1029, 1074, 1077, 1078, 1082, 1090, 1092, 1104, 1107, 1114], "statement": [29, 54, 90, 110, 111, 163, 175, 179, 180, 181, 182, 187, 189, 194, 200, 203, 204, 206, 210, 213, 216, 222, 226, 232, 234, 237, 240, 246, 252, 255, 262, 265, 269, 271, 272, 275, 276, 281, 282, 287, 290, 293, 294, 297, 308, 309, 310, 311, 312, 313, 322, 327, 344, 347, 351, 364, 377, 379, 380, 383, 384, 389, 391, 397, 401, 404, 408, 411, 417, 421, 426, 427, 603, 629, 648, 649, 687, 728, 730, 731, 739, 811, 851, 937, 958, 972, 975, 977, 978, 983, 987, 989, 999, 1006, 1009, 1011, 1018, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1077, 1078, 1082, 1086, 1090, 1092, 1104, 1107, 1110, 1114, 1140], "incomplet": [29, 173, 212, 218, 228, 231, 235, 440, 547, 622, 731, 881, 1029, 1074, 1077, 1078, 1082, 1090, 1092, 1104, 1107, 1114, 1115], "python_swdev_venv": [29, 731, 1029, 1074, 1077, 1078, 1082, 1090, 1092, 1104, 1114], "python_swdev_pytest_intro": [29, 731, 1074, 1104, 1109], "By": [29, 51, 53, 143, 145, 150, 154, 158, 170, 176, 212, 218, 219, 221, 228, 229, 231, 232, 236, 240, 243, 247, 248, 250, 252, 261, 269, 271, 272, 276, 287, 290, 293, 294, 297, 303, 330, 362, 389, 412, 415, 632, 633, 635, 636, 639, 641, 643, 644, 687, 688, 728, 730, 731, 747, 820, 869, 882, 918, 937, 953, 964, 988, 995, 1072, 1073, 1074, 1083, 1104, 1109], "python_exercises_userdb_csvreader_funct": [29, 731, 1035, 1068, 1069, 1074], "refactor": [29, 43, 55, 140, 229, 232, 237, 240, 252, 255, 271, 275, 276, 281, 282, 390, 430, 447, 694, 731, 739, 745, 755, 759, 769, 780, 782, 787, 793, 796, 799, 874, 991, 1035, 1069, 1070, 1071, 1072, 1074], "Into": [29, 97, 221, 226, 229, 232, 237, 240, 252, 255, 261, 275, 276, 281, 282, 360, 375, 384, 390, 391, 397, 401, 404, 408, 417, 421, 425, 426, 427, 494, 495, 547, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 649, 687, 728, 730, 731, 966, 991, 1035, 1069, 1070, 1071, 1072, 1074], "reader": [29, 140, 215, 229, 232, 237, 240, 252, 255, 275, 276, 281, 282, 412, 431, 454, 731, 822, 988, 991, 1018, 1035, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074], "python_exercises_userdb_csvread": [29, 731, 1035, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "python_basics_python_0270_funct": [29, 90, 200, 731, 977, 999, 1019, 1032, 1033, 1034, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086], "python_basics_python_0139_commandline_argv": [29, 90, 200, 322, 731, 999, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "argument": [29, 57, 63, 90, 97, 114, 136, 142, 145, 148, 162, 163, 176, 179, 191, 200, 203, 210, 212, 216, 218, 219, 221, 222, 224, 226, 228, 229, 232, 233, 234, 235, 237, 240, 255, 256, 259, 262, 265, 269, 271, 272, 275, 276, 277, 281, 282, 290, 293, 294, 297, 322, 344, 345, 390, 397, 401, 404, 408, 417, 421, 426, 427, 431, 493, 525, 549, 559, 560, 649, 664, 684, 687, 697, 709, 728, 729, 730, 731, 736, 737, 838, 860, 874, 908, 910, 912, 915, 932, 970, 973, 977, 999, 1001, 1002, 1019, 1027, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1087, 1103, 1110, 1112], "sy": [29, 32, 90, 115, 120, 122, 144, 161, 163, 165, 166, 191, 193, 194, 200, 203, 209, 212, 216, 218, 223, 226, 228, 231, 232, 234, 235, 237, 238, 240, 253, 255, 256, 261, 262, 265, 271, 275, 276, 277, 281, 282, 293, 297, 307, 308, 315, 322, 418, 431, 490, 506, 507, 731, 733, 737, 758, 835, 864, 875, 882, 883, 884, 900, 901, 902, 904, 908, 909, 910, 911, 912, 914, 916, 918, 919, 933, 940, 942, 945, 949, 966, 976, 983, 998, 999, 1018, 1026, 1028, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1101, 1103, 1110, 1125], "argv": [29, 42, 50, 90, 145, 162, 163, 166, 176, 194, 200, 203, 204, 209, 212, 216, 218, 221, 222, 226, 228, 231, 232, 234, 237, 240, 255, 261, 262, 265, 271, 275, 276, 281, 282, 293, 297, 307, 315, 322, 396, 431, 432, 454, 493, 731, 882, 908, 909, 910, 911, 912, 916, 919, 933, 940, 949, 970, 976, 983, 999, 1028, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1117, 1122], "python_misc_csv": [29, 731, 1033, 1034, 1035, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1090], "python_exercises_userdb_user_json": [29, 731, 1035, 1069, 1070, 1071, 1072, 1074], "json": [29, 78, 85, 92, 114, 116, 118, 140, 176, 182, 192, 206, 210, 211, 219, 220, 228, 231, 232, 236, 239, 245, 254, 287, 289, 290, 292, 294, 297, 342, 731, 991, 1035, 1069, 1070, 1071, 1074, 1092, 1106], "python_exercises_userdb_userdb_modul": [29, 731, 1035, 1069, 1070, 1071, 1072, 1073, 1074], "both": [29, 54, 63, 85, 114, 115, 120, 122, 133, 143, 145, 150, 163, 175, 181, 202, 218, 221, 229, 232, 235, 237, 240, 252, 255, 267, 275, 276, 281, 282, 423, 429, 431, 432, 457, 503, 505, 525, 557, 565, 638, 694, 705, 731, 749, 772, 778, 817, 918, 922, 926, 939, 962, 968, 975, 988, 991, 995, 1002, 1009, 1016, 1020, 1025, 1035, 1038, 1041, 1047, 1069, 1070, 1071, 1072, 1074, 1082, 1110, 1117, 1130], "python_exercises_userdb_csvdictreader_funct": [29, 731, 1035, 1066, 1069, 1070, 1071, 1072, 1073, 1074], "dictread": [29, 194, 215, 216, 229, 232, 237, 240, 252, 255, 275, 276, 281, 282, 731, 991, 1033, 1035, 1069, 1070, 1071, 1072, 1073, 1074], "python_exercises_userdb_user_class_person": [29, 731, 1035, 1069, 1071, 1074], "awai": [29, 63, 77, 84, 142, 143, 144, 148, 167, 183, 204, 210, 218, 252, 255, 275, 276, 281, 287, 290, 311, 443, 706, 731, 817, 838, 949, 973, 991, 1035, 1069, 1074], "raw": [29, 63, 188, 191, 194, 199, 211, 214, 223, 227, 233, 247, 248, 252, 254, 255, 259, 261, 275, 276, 281, 284, 287, 290, 294, 307, 317, 343, 431, 432, 438, 461, 468, 506, 586, 707, 731, 814, 991, 1007, 1012, 1028, 1035, 1069, 1074], "python_advanced_oo_namedtupl": [29, 731, 977, 991, 1035, 1069, 1071, 1074], "namedtupl": [29, 179, 187, 194, 209, 210, 212, 218, 228, 231, 252, 269, 271, 272, 276, 287, 290, 293, 294, 297, 731, 977, 991, 1035, 1069, 1071, 1074, 1094, 1140], "python_exercises_userdb_csvdictread": [29, 731, 1035, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074], "python_exercises_userdb_mqtt_publish_csv": [29, 731, 1035, 1069, 1070, 1074], "mqtt": [29, 112, 116, 119, 192, 194, 208, 210, 219, 232, 233, 237, 271, 272, 287, 290, 293, 328, 331, 333, 731, 991, 1031, 1035, 1069, 1072, 1074, 1090], "publish": [29, 112, 118, 147, 149, 158, 219, 231, 232, 252, 294, 319, 328, 330, 731, 991, 1035, 1069, 1072, 1074, 1076, 1108], "python_exercises_sensors_project_setup": [29, 731, 1035, 1062, 1063, 1064, 1074], "setup": [29, 106, 114, 127, 131, 140, 158, 170, 174, 175, 213, 215, 231, 238, 241, 243, 248, 250, 256, 259, 263, 273, 277, 319, 322, 327, 328, 413, 446, 460, 471, 473, 487, 501, 504, 506, 507, 640, 642, 731, 746, 772, 869, 874, 882, 884, 899, 901, 912, 949, 953, 957, 959, 962, 963, 973, 980, 988, 1031, 1035, 1062, 1074, 1111, 1121, 1123], "python_exercises_sensors_sensor_const": [29, 731, 1035, 1062, 1063, 1064, 1074], "python_advanced_oo_method": [29, 731, 977, 991, 1035, 1062, 1063, 1064, 1074], "method": [29, 42, 43, 54, 55, 57, 63, 65, 69, 70, 73, 90, 97, 106, 107, 110, 111, 116, 120, 122, 123, 148, 179, 180, 181, 182, 184, 187, 200, 201, 203, 205, 210, 213, 214, 216, 221, 222, 224, 226, 227, 229, 230, 232, 233, 234, 235, 237, 240, 242, 252, 255, 257, 261, 262, 265, 267, 269, 270, 271, 272, 275, 276, 278, 281, 282, 284, 287, 290, 293, 294, 296, 297, 308, 309, 310, 311, 312, 313, 322, 326, 327, 403, 429, 449, 451, 453, 457, 467, 474, 475, 493, 495, 500, 505, 506, 507, 512, 514, 519, 525, 538, 540, 547, 548, 549, 552, 561, 573, 575, 576, 592, 598, 602, 608, 611, 614, 615, 618, 619, 620, 621, 624, 629, 630, 632, 635, 636, 639, 640, 641, 642, 643, 644, 647, 656, 669, 686, 687, 690, 694, 703, 711, 712, 720, 721, 725, 726, 728, 729, 730, 731, 739, 741, 746, 747, 756, 758, 768, 780, 791, 923, 973, 974, 977, 980, 984, 988, 989, 990, 991, 992, 996, 999, 1004, 1013, 1016, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1085, 1089, 1090, 1095, 1098, 1100, 1103, 1133, 1140, 1147], "python_exercises_legacy_while_prim": [29, 200, 731, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074], "prime": [29, 38, 162, 163, 182, 186, 187, 189, 194, 200, 206, 210, 222, 226, 229, 234, 240, 255, 262, 275, 276, 281, 282, 407, 731, 1035, 1045, 1048, 1049, 1051, 1056, 1057, 1058, 1059, 1060, 1074, 1140], "python_exercises_legacy_cmdline_digit": [29, 200, 322, 731, 1035, 1043, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074], "digit": [29, 136, 162, 163, 182, 189, 194, 200, 210, 213, 222, 226, 231, 232, 234, 235, 237, 239, 240, 255, 262, 275, 276, 277, 281, 282, 294, 307, 327, 353, 362, 731, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074], "word": [29, 43, 65, 136, 143, 163, 171, 175, 179, 182, 189, 194, 200, 204, 210, 213, 221, 222, 226, 229, 231, 232, 234, 237, 239, 240, 247, 248, 250, 255, 262, 269, 275, 276, 277, 281, 282, 294, 303, 322, 327, 352, 405, 447, 452, 525, 625, 703, 712, 720, 730, 731, 818, 820, 867, 939, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1061, 1074], "python_basics_python_0193_whil": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1032, 1033, 1034, 1035, 1037, 1039, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1090], "python_exercises_legacy_function_prim": [29, 200, 731, 1035, 1045, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "python_exercises_legacy_max_numbers_funct": [29, 200, 731, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "determin": [29, 102, 114, 136, 142, 166, 171, 173, 181, 182, 187, 189, 194, 200, 206, 210, 212, 213, 216, 222, 226, 232, 234, 237, 239, 240, 255, 262, 275, 276, 281, 282, 625, 659, 660, 697, 731, 786, 808, 827, 828, 829, 830, 831, 832, 833, 870, 874, 883, 901, 938, 939, 969, 1035, 1037, 1038, 1039, 1042, 1045, 1048, 1049, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1105, 1140], "python_exercises_legacy_python_1011_generators_yield": [29, 731, 1035, 1048, 1074], "fibonacci": [29, 163, 166, 182, 203, 216, 255, 269, 271, 272, 276, 282, 293, 294, 297, 654, 676, 731, 980, 981, 982, 1035, 1048, 1074], "python_exercises_legacy_uniq_gener": [29, 731, 1035, 1048, 1059, 1074], "uniq": [29, 162, 163, 180, 182, 194, 200, 210, 213, 216, 222, 226, 232, 234, 237, 255, 262, 275, 276, 281, 282, 523, 731, 871, 1035, 1045, 1048, 1049, 1056, 1057, 1060, 1074], "python_advanced_python_1010_generators_yield": [29, 731, 977, 1032, 1033, 1034, 1035, 1048, 1059, 1074, 1086], "python_exercises_legacy_distil": [29, 200, 731, 1035, 1045, 1048, 1059, 1074], "elimin": [29, 58, 136, 200, 222, 229, 231, 232, 234, 240, 255, 262, 275, 281, 282, 474, 519, 710, 731, 871, 978, 1035, 1048, 1059, 1074], "empti": [29, 38, 42, 48, 50, 143, 146, 153, 161, 181, 183, 200, 212, 215, 222, 223, 229, 231, 232, 234, 235, 238, 240, 241, 244, 255, 256, 261, 262, 263, 273, 275, 277, 281, 282, 317, 351, 403, 542, 551, 552, 556, 566, 568, 584, 585, 603, 621, 641, 647, 696, 706, 707, 719, 729, 731, 741, 778, 805, 806, 818, 822, 832, 869, 878, 891, 925, 945, 983, 1024, 1035, 1048, 1049, 1053, 1059, 1074], "comment": [29, 34, 35, 36, 38, 44, 136, 145, 180, 200, 201, 203, 216, 222, 224, 228, 229, 232, 234, 239, 240, 255, 262, 264, 275, 281, 282, 322, 345, 390, 409, 437, 474, 475, 503, 731, 883, 1021, 1035, 1048, 1059, 1074, 1089, 1103], "line": [29, 34, 35, 36, 38, 63, 112, 117, 139, 140, 143, 145, 148, 158, 162, 165, 166, 179, 183, 193, 195, 199, 200, 202, 203, 208, 209, 212, 213, 215, 216, 218, 219, 221, 222, 223, 226, 228, 229, 231, 232, 234, 235, 238, 240, 241, 243, 244, 255, 256, 261, 262, 263, 265, 269, 273, 275, 276, 277, 281, 282, 283, 295, 313, 322, 345, 351, 352, 360, 364, 367, 369, 375, 384, 386, 391, 397, 401, 404, 408, 413, 417, 420, 421, 423, 426, 427, 431, 434, 437, 444, 474, 475, 625, 628, 631, 649, 687, 728, 730, 731, 747, 751, 758, 760, 778, 805, 806, 809, 818, 820, 822, 844, 865, 867, 869, 870, 871, 875, 879, 882, 883, 884, 926, 936, 967, 973, 978, 979, 1003, 1020, 1024, 1026, 1027, 1028, 1033, 1035, 1048, 1054, 1059, 1073, 1074, 1076, 1079, 1084, 1089, 1111], "python_exercises_legacy_revert": [29, 200, 731, 1035, 1045, 1048, 1056, 1059, 1074], "revert": [29, 143, 200, 731, 756, 774, 936, 995, 1035, 1045, 1048, 1059, 1074], "python_basics_python_0500_fil": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1090], "python_exercises_legacy_for_prim": [29, 200, 731, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "python_basics_python_0225_rang": [29, 90, 200, 731, 977, 999, 1032, 1033, 1034, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1086], "python_exercises_legacy_passwd": [29, 731, 1035, 1048, 1059, 1074], "pars": [29, 162, 199, 200, 210, 211, 213, 216, 222, 226, 231, 232, 234, 240, 243, 271, 276, 293, 297, 308, 313, 326, 731, 1029, 1035, 1048, 1059, 1074, 1076, 1101], "passwd": [29, 100, 101, 114, 183, 193, 202, 215, 216, 218, 222, 223, 226, 231, 232, 234, 238, 240, 241, 249, 256, 258, 259, 263, 273, 277, 279, 280, 729, 731, 808, 810, 813, 815, 818, 820, 822, 833, 852, 855, 857, 858, 860, 863, 865, 869, 871, 874, 875, 885, 886, 894, 895, 899, 900, 905, 911, 931, 945, 973, 975, 1022, 1026, 1035, 1048, 1059, 1074, 1105], "python_basics_python_0210_indexing_sl": [29, 90, 731, 999, 1035, 1048, 1059, 1074, 1090, 1096], "python_exercises_legacy_python_0350_exercis": [29, 200, 731, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1074], "right": [29, 34, 35, 36, 38, 42, 63, 80, 84, 116, 136, 142, 143, 145, 148, 163, 183, 194, 195, 200, 205, 210, 223, 225, 231, 235, 243, 256, 269, 277, 308, 314, 346, 366, 367, 368, 374, 385, 415, 445, 496, 504, 551, 566, 568, 569, 647, 659, 675, 701, 706, 711, 731, 739, 758, 762, 778, 797, 820, 821, 823, 838, 893, 923, 973, 995, 1006, 1012, 1035, 1045, 1048, 1056, 1059, 1060, 1074], "justifi": [29, 163, 175, 200, 210, 231, 277, 346, 713, 731, 1000, 1035, 1045, 1048, 1056, 1059, 1060, 1074], "python_exercises_legacy_join_funct": [29, 200, 731, 1035, 1045, 1048, 1049, 1056, 1057, 1059, 1060, 1074], "join": [29, 35, 63, 154, 182, 200, 202, 203, 208, 210, 212, 215, 216, 218, 223, 227, 233, 241, 256, 263, 273, 277, 283, 307, 316, 431, 524, 647, 708, 714, 719, 721, 731, 921, 926, 949, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1074, 1103, 1110], "python_basics_python_0310_strings_format": [29, 90, 200, 731, 999, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1074], "python_basics_python_0320_strings_method": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090], "python_basics_python_0300_str": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090], "python_exercises_legacy_max_numb": [29, 200, 731, 1035, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "python_exercises_legacy_mixed_list_execut": [29, 200, 731, 1035, 1045, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "execut": [29, 44, 63, 108, 110, 111, 114, 136, 139, 143, 145, 153, 154, 158, 163, 170, 175, 182, 189, 195, 200, 210, 212, 213, 216, 218, 226, 228, 231, 255, 262, 275, 276, 281, 282, 285, 286, 301, 302, 307, 308, 315, 322, 344, 345, 379, 381, 385, 407, 412, 416, 425, 433, 436, 437, 449, 468, 471, 478, 485, 490, 504, 533, 557, 572, 675, 729, 731, 776, 778, 804, 805, 806, 813, 815, 820, 825, 826, 834, 838, 885, 894, 923, 936, 950, 952, 953, 954, 955, 958, 962, 964, 968, 970, 976, 980, 984, 987, 1000, 1010, 1011, 1014, 1033, 1035, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1085, 1088, 1118, 1120, 1132, 1143, 1144], "python_basics_python_0170_if": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1010, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1090], "python_basics_python_0140_vari": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "python_exercises_legacy_uniq_funct": [29, 200, 731, 1035, 1045, 1048, 1049, 1056, 1057, 1058, 1059, 1060, 1074], "python_basics_python_0150_datatypes_overview": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "python_basics_python_0120_helloworld": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "world": [29, 78, 90, 136, 139, 140, 143, 148, 154, 173, 182, 186, 187, 189, 193, 200, 204, 206, 208, 210, 212, 213, 216, 218, 221, 222, 223, 225, 226, 232, 233, 234, 235, 237, 238, 240, 243, 255, 256, 262, 265, 275, 276, 281, 282, 295, 308, 309, 310, 311, 312, 313, 317, 322, 355, 360, 364, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 432, 437, 445, 468, 473, 475, 646, 649, 687, 713, 721, 728, 730, 731, 735, 738, 740, 743, 745, 748, 755, 759, 763, 769, 775, 780, 782, 787, 790, 793, 796, 799, 816, 829, 841, 874, 912, 923, 938, 939, 952, 964, 966, 968, 969, 970, 977, 984, 985, 986, 987, 991, 999, 1003, 1004, 1010, 1013, 1015, 1019, 1020, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1081, 1086, 1089, 1090, 1096, 1104, 1126, 1130, 1140], "python_basics_python_0150_datatypes_overview_compound": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1032, 1033, 1034, 1035, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "python_exercises_legacy_mixed_list_interact": [29, 200, 731, 1035, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1074], "interact": [29, 63, 85, 120, 122, 139, 150, 182, 183, 189, 200, 210, 212, 213, 216, 218, 226, 228, 231, 236, 255, 256, 262, 275, 276, 281, 282, 284, 731, 838, 886, 891, 894, 904, 966, 1001, 1035, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1074, 1081, 1089], "interpret": [29, 63, 139, 145, 163, 164, 175, 179, 182, 189, 200, 203, 210, 212, 213, 216, 218, 226, 228, 231, 235, 251, 252, 255, 261, 262, 275, 276, 277, 281, 282, 284, 293, 294, 322, 407, 442, 446, 453, 457, 467, 481, 495, 547, 731, 778, 862, 884, 905, 952, 953, 1000, 1001, 1002, 1003, 1033, 1035, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1074, 1076, 1089, 1112, 1133], "python_basics_python_0160_boolean": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1010, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1090], "boolean": [29, 58, 84, 90, 163, 164, 180, 182, 184, 187, 188, 189, 200, 206, 210, 213, 214, 216, 217, 218, 222, 224, 226, 227, 232, 233, 234, 236, 237, 239, 240, 255, 262, 265, 275, 276, 281, 282, 308, 309, 310, 311, 312, 313, 322, 327, 351, 374, 390, 731, 925, 977, 999, 1007, 1010, 1011, 1022, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1088, 1090, 1140], "python_exercises_legacy_dict_keyerror": [29, 731, 1035, 1044, 1048, 1074], "python_exercises_legacy_wc": [29, 200, 731, 1035, 1045, 1048, 1056, 1059, 1060, 1074], "charact": [29, 145, 161, 186, 191, 195, 200, 204, 208, 215, 221, 231, 238, 241, 259, 262, 277, 283, 345, 346, 352, 360, 363, 369, 370, 375, 384, 391, 397, 401, 404, 407, 408, 412, 414, 417, 421, 426, 427, 612, 649, 687, 728, 729, 730, 731, 740, 745, 748, 755, 759, 769, 772, 780, 782, 787, 793, 794, 796, 799, 818, 820, 838, 860, 874, 882, 937, 987, 1006, 1020, 1021, 1022, 1026, 1028, 1035, 1038, 1045, 1048, 1056, 1059, 1074, 1089, 1117], "python_exercises_herdt_while_even_numb": [29, 731, 1035, 1037, 1039, 1074], "python_exercises_herdt_username_password": [29, 731, 1035, 1037, 1039, 1042, 1074], "usernam": [29, 158, 187, 195, 216, 319, 731, 805, 813, 822, 885, 895, 1022, 1035, 1037, 1039, 1054, 1074, 1140], "password": [29, 150, 153, 158, 183, 187, 195, 216, 319, 322, 327, 731, 813, 835, 875, 885, 886, 891, 1035, 1037, 1039, 1054, 1074, 1087, 1140], "python_exercises_herdt_greet": [29, 731, 1035, 1037, 1038, 1039, 1042, 1074], "python_exercises_herdt_max_numb": [29, 731, 1035, 1037, 1038, 1039, 1040, 1042, 1074], "python_exercises_herdt_swap": [29, 731, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1074], "python_exercises_herdt_boolean": [29, 731, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1074], "express": [29, 59, 62, 162, 178, 179, 181, 182, 192, 202, 211, 216, 217, 219, 223, 242, 243, 245, 246, 247, 248, 251, 252, 257, 276, 277, 282, 295, 345, 347, 351, 355, 364, 365, 367, 368, 369, 372, 374, 377, 379, 380, 382, 384, 390, 391, 397, 401, 404, 408, 417, 421, 426, 427, 431, 446, 455, 467, 468, 471, 475, 481, 482, 495, 503, 547, 549, 627, 649, 660, 664, 669, 687, 728, 730, 731, 838, 871, 952, 972, 982, 988, 1009, 1011, 1018, 1020, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1076, 1097, 1129, 1130, 1131], "python_exercises_csv_csv_modul": [29, 731, 1033, 1034, 1035, 1074], "python_exercises_csv_csv_db": [29, 731, 1032, 1034, 1035, 1074], "sqlite3": [29, 85, 179, 210, 216, 222, 229, 731, 1034, 1035, 1074, 1085, 1086, 1090], "python_db_sqlite3": [29, 731, 1032, 1034, 1035, 1074, 1086], "dbapi": [29, 179, 210, 222, 731, 1032, 1034, 1035, 1074, 1086], "python_advanced_decor": [29, 731, 977, 1074], "decor": [29, 59, 62, 163, 175, 178, 179, 194, 203, 219, 229, 243, 446, 453, 467, 481, 495, 547, 731, 973, 977, 988, 995, 996, 998, 1019, 1074, 1076, 1110, 1133], "python_advanced_stararg": [29, 731, 977, 1074], "keyword": [29, 39, 63, 127, 138, 176, 179, 180, 181, 182, 184, 203, 205, 219, 224, 229, 231, 252, 255, 256, 262, 265, 269, 271, 272, 275, 277, 281, 287, 290, 293, 294, 297, 322, 389, 419, 562, 563, 565, 583, 634, 694, 731, 927, 973, 974, 975, 977, 1001, 1017, 1019, 1031, 1074, 1087, 1127, 1129], "python_advanced_closur": [29, 731, 977, 1074], "closur": [29, 59, 62, 63, 162, 175, 179, 187, 188, 203, 216, 219, 229, 262, 265, 294, 691, 731, 974, 977, 1017, 1019, 1074, 1140], "python_advanced_iteration_gener": [29, 731, 977, 1074], "comprehens": [29, 63, 68, 163, 164, 176, 179, 182, 188, 202, 203, 204, 211, 216, 217, 219, 220, 221, 224, 227, 233, 236, 252, 255, 257, 264, 269, 275, 276, 281, 282, 293, 294, 296, 297, 692, 731, 749, 766, 774, 977, 982, 1074, 1095], "python_advanced_context_mgr": [29, 731, 977, 1074], "python_advanced_except": [29, 731, 977, 1074], "python_advanced_oo_classes_and_dict": [29, 731, 977, 984, 985, 986, 987, 991, 1035, 1062, 1063, 1064, 1069, 1071, 1074, 1104], "python_advanced_exec": [29, 731, 977, 1074], "python_advanced_comprehens": [29, 731, 977, 1074], "python_basics_python_0200_sequential_typ": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1032, 1033, 1034, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096], "sequenti": [29, 63, 90, 106, 108, 179, 180, 182, 184, 187, 188, 189, 192, 200, 205, 210, 213, 216, 221, 222, 224, 226, 234, 236, 237, 240, 244, 252, 255, 262, 265, 268, 270, 272, 273, 275, 276, 281, 282, 293, 294, 297, 308, 309, 310, 311, 312, 313, 322, 327, 420, 495, 508, 512, 547, 582, 592, 600, 611, 615, 644, 731, 882, 884, 914, 977, 982, 999, 1032, 1033, 1034, 1035, 1045, 1048, 1049, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1140], "python_advanced_oo_properti": [29, 731, 977, 991, 1074], "properti": [29, 40, 163, 179, 203, 216, 233, 235, 252, 256, 269, 271, 272, 276, 286, 287, 290, 293, 294, 297, 302, 326, 435, 436, 437, 442, 445, 731, 977, 991, 1074, 1103, 1116, 1119], "python_advanced_oo_constructor": [29, 731, 977, 984, 985, 986, 987, 991, 1074, 1104], "constructor": [29, 43, 53, 56, 70, 97, 110, 111, 114, 116, 118, 120, 122, 123, 170, 176, 182, 202, 203, 205, 216, 221, 229, 233, 252, 255, 257, 262, 265, 268, 269, 270, 271, 272, 273, 275, 276, 281, 287, 290, 293, 294, 297, 324, 325, 326, 399, 453, 467, 493, 495, 498, 501, 505, 506, 525, 534, 540, 547, 548, 549, 555, 572, 603, 619, 620, 629, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 647, 655, 656, 657, 659, 685, 687, 703, 706, 707, 708, 712, 717, 718, 719, 720, 721, 728, 730, 731, 737, 739, 770, 923, 977, 984, 985, 986, 987, 989, 991, 992, 993, 1007, 1074, 1103, 1104, 1110, 1122, 1130], "python_advanced_oo_operator_overload": [29, 731, 977, 991, 1074], "overload": [29, 97, 162, 170, 179, 205, 233, 268, 269, 270, 271, 272, 293, 297, 303, 415, 495, 503, 512, 514, 547, 549, 570, 573, 574, 576, 582, 592, 598, 602, 603, 611, 614, 615, 629, 630, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 655, 656, 660, 687, 703, 712, 720, 728, 730, 731, 737, 977, 991, 1074, 1095, 1129], "python_advanced_oo_str_repr": [29, 731, 977, 991, 1074], "str": [29, 162, 165, 176, 186, 191, 193, 194, 199, 202, 204, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 252, 253, 255, 256, 260, 261, 262, 263, 265, 267, 269, 271, 272, 273, 275, 276, 277, 281, 283, 287, 288, 290, 291, 293, 294, 295, 297, 307, 313, 316, 317, 318, 322, 395, 413, 431, 480, 485, 566, 567, 568, 569, 684, 696, 731, 975, 977, 989, 991, 992, 995, 1004, 1006, 1007, 1018, 1022, 1026, 1033, 1041, 1043, 1074, 1089, 1095, 1100, 1101], "repr": [29, 193, 212, 218, 228, 231, 235, 238, 241, 252, 255, 256, 262, 265, 269, 271, 272, 275, 276, 277, 281, 287, 288, 290, 293, 294, 297, 731, 975, 977, 991, 992, 1074], "python_advanced_oo_abc": [29, 731, 977, 991, 1074], "abstract": [29, 78, 84, 179, 219, 251, 268, 269, 270, 271, 272, 293, 294, 297, 326, 390, 429, 431, 446, 453, 457, 459, 461, 467, 469, 481, 495, 505, 547, 582, 621, 622, 699, 731, 811, 815, 884, 899, 977, 991, 1074, 1133, 1135], "abc": [29, 32, 162, 176, 179, 181, 186, 191, 193, 199, 202, 204, 208, 212, 215, 218, 219, 223, 225, 228, 231, 235, 238, 241, 244, 252, 253, 256, 263, 269, 271, 272, 273, 277, 283, 287, 290, 293, 294, 295, 297, 309, 317, 431, 505, 574, 595, 612, 614, 731, 977, 991, 1007, 1074], "duck": [29, 32, 178, 179, 229, 233, 252, 269, 271, 272, 276, 293, 294, 297, 446, 505, 731, 977, 984, 991, 1074, 1076, 1081, 1130], "python_advanced_multithreading_bas": [29, 731, 977, 984, 985, 986, 987, 1074], "python_advanced_multithreading_mutex": [29, 731, 977, 985, 986, 987, 1074], "race": [29, 72, 73, 74, 78, 87, 143, 161, 221, 247, 248, 250, 259, 270, 271, 272, 293, 294, 297, 303, 330, 331, 337, 406, 416, 525, 697, 713, 720, 730, 731, 755, 759, 780, 782, 787, 791, 793, 796, 799, 874, 904, 914, 915, 920, 928, 929, 935, 977, 985, 987, 1074, 1135, 1145, 1146], "condit": [29, 72, 73, 74, 78, 87, 89, 122, 143, 154, 161, 202, 221, 241, 247, 248, 250, 259, 270, 271, 272, 293, 294, 297, 303, 330, 331, 337, 345, 347, 351, 374, 375, 377, 378, 380, 382, 384, 391, 397, 401, 404, 406, 408, 416, 417, 421, 426, 427, 434, 439, 440, 441, 525, 542, 631, 649, 687, 697, 707, 713, 720, 721, 728, 730, 731, 755, 759, 780, 782, 787, 791, 793, 795, 796, 799, 874, 904, 910, 914, 915, 920, 928, 929, 931, 935, 977, 985, 987, 1010, 1011, 1026, 1074, 1080, 1095, 1135, 1145, 1146], "mutex": [29, 72, 73, 74, 76, 78, 87, 89, 161, 190, 221, 246, 247, 248, 250, 259, 270, 271, 272, 293, 294, 297, 303, 330, 331, 337, 525, 714, 716, 718, 719, 720, 730, 731, 755, 759, 776, 780, 781, 782, 787, 793, 796, 797, 799, 874, 915, 920, 925, 928, 929, 977, 985, 987, 1074, 1130, 1135, 1146], "python_advanced_multithreading_exam_quest": [29, 731, 977, 985, 987, 1074], "exam": [29, 96, 97, 106, 204, 220, 226, 249, 258, 279, 324, 336, 731, 808, 874, 915, 935, 977, 985, 1074, 1075], "python_basics_instal": [29, 90, 731, 999, 1074], "python_basics_python_0125_run": [29, 90, 200, 322, 731, 999, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "run": [29, 42, 59, 62, 63, 90, 97, 108, 110, 111, 133, 136, 139, 142, 143, 144, 145, 146, 149, 150, 153, 154, 162, 174, 175, 182, 183, 195, 200, 204, 205, 210, 215, 223, 231, 232, 235, 238, 241, 243, 248, 255, 256, 259, 262, 263, 265, 273, 275, 276, 277, 281, 282, 286, 295, 302, 307, 322, 325, 347, 365, 407, 410, 418, 419, 423, 424, 436, 437, 449, 454, 473, 474, 475, 503, 505, 506, 507, 529, 556, 569, 578, 590, 647, 705, 706, 729, 731, 751, 766, 776, 778, 779, 788, 811, 813, 815, 816, 817, 818, 834, 835, 838, 839, 869, 882, 883, 884, 885, 893, 895, 903, 905, 921, 934, 936, 937, 938, 940, 945, 950, 952, 955, 960, 962, 964, 968, 973, 984, 987, 999, 1000, 1002, 1029, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1045, 1048, 1049, 1050, 1051, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1092, 1105, 1111, 1116, 1117, 1122, 1135], "python_basics_python_0130_syntax_etc": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "syntax": [29, 68, 90, 136, 166, 175, 182, 183, 185, 187, 188, 189, 194, 200, 201, 206, 210, 213, 216, 222, 223, 226, 228, 232, 233, 234, 237, 240, 242, 253, 255, 262, 264, 265, 275, 276, 278, 281, 282, 303, 308, 309, 310, 311, 312, 313, 322, 469, 548, 549, 652, 669, 696, 709, 731, 866, 972, 974, 975, 976, 977, 984, 985, 986, 987, 991, 999, 1001, 1010, 1018, 1019, 1021, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104, 1130, 1140], "python_basics_python_0110_blahblah": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104], "blahblah": [29, 90, 182, 187, 189, 200, 206, 210, 213, 216, 222, 226, 232, 233, 234, 236, 237, 239, 240, 242, 255, 262, 265, 275, 276, 281, 282, 308, 309, 310, 311, 312, 313, 322, 731, 977, 984, 985, 986, 987, 991, 999, 1010, 1019, 1029, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1086, 1089, 1090, 1096, 1104, 1140], "python_basics_python_1000_function_object": [29, 90, 731, 999, 1074], "python_basics_python_0400_list": [29, 90, 731, 999, 1074], "python_misc_encod": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090], "encod": [29, 43, 90, 162, 179, 180, 182, 184, 200, 203, 210, 212, 215, 218, 219, 222, 228, 229, 231, 237, 239, 242, 256, 260, 261, 263, 276, 277, 284, 294, 295, 297, 307, 308, 309, 310, 311, 312, 313, 327, 431, 731, 977, 999, 1007, 1012, 1026, 1033, 1034, 1035, 1045, 1048, 1056, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1084, 1090, 1092], "python_basics_python_0460_set": [29, 90, 731, 999, 1074], "python_basics_python_0250_refs_flat_deep_copi": [29, 90, 200, 308, 309, 310, 311, 312, 313, 322, 731, 977, 999, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090], "mutabl": [29, 90, 175, 179, 180, 182, 184, 187, 188, 194, 200, 201, 210, 213, 214, 216, 217, 218, 219, 224, 226, 227, 230, 233, 237, 239, 240, 242, 245, 255, 257, 262, 264, 265, 269, 271, 272, 274, 275, 276, 278, 281, 282, 284, 293, 294, 296, 297, 308, 309, 310, 311, 312, 313, 322, 697, 731, 977, 999, 1008, 1012, 1033, 1034, 1035, 1045, 1048, 1056, 1057, 1059, 1060, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1089, 1090, 1140], "python_misc_vscod": [29, 731, 1074, 1090], "visual": [29, 78, 104, 170, 175, 179, 180, 182, 184, 195, 204, 205, 210, 213, 226, 232, 240, 243, 255, 259, 262, 265, 269, 275, 276, 281, 282, 322, 327, 342, 731, 817, 883, 954, 1000, 1033, 1074, 1090], "studio": [29, 104, 170, 175, 179, 180, 182, 184, 195, 204, 205, 210, 213, 226, 232, 240, 255, 259, 262, 265, 269, 275, 276, 281, 282, 322, 327, 342, 731, 817, 1000, 1074, 1090], "python_misc_mqtt": [29, 731, 1074, 1090, 1092], "python_misc_ai_machine_learning_intro": [29, 731, 1074, 1077, 1078, 1082, 1083, 1090], "concept": [29, 78, 97, 98, 99, 114, 143, 153, 167, 175, 179, 181, 183, 185, 195, 246, 249, 258, 259, 262, 279, 293, 297, 324, 325, 340, 343, 390, 413, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 589, 646, 687, 697, 720, 730, 731, 801, 805, 806, 807, 808, 811, 817, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 919, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 1006, 1014, 1024, 1074, 1077, 1078, 1082, 1089, 1090, 1092, 1145], "terminologi": [29, 98, 99, 114, 149, 167, 179, 214, 249, 258, 259, 262, 279, 293, 297, 380, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 562, 720, 730, 731, 801, 805, 806, 807, 808, 811, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 867, 868, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 929, 932, 935, 936, 937, 951, 954, 956, 957, 958, 959, 960, 961, 962, 963, 1074, 1077, 1078, 1082, 1090, 1148], "python_misc_ai_k_mean": [29, 731, 1074, 1077, 1078, 1090], "python_misc_ai_linear_regress": [29, 731, 1074, 1077, 1078, 1082, 1090], "linear": [29, 164, 166, 176, 179, 181, 199, 207, 262, 293, 297, 398, 420, 572, 697, 731, 814, 883, 949, 1011, 1074, 1077, 1078, 1083, 1090], "regress": [29, 179, 231, 262, 293, 297, 731, 1074, 1077, 1078, 1083, 1090], "python_misc_pandas_bas": [29, 731, 1074, 1090, 1096], "datafram": [29, 261, 262, 263, 265, 269, 272, 294, 431, 731, 1074, 1079, 1082, 1090, 1093, 1095, 1096, 1097, 1099, 1100], "python_misc_pandas_mod_col": [29, 731, 1074, 1090, 1096], "ad": [29, 32, 33, 39, 85, 115, 123, 149, 153, 154, 155, 158, 163, 183, 195, 205, 261, 262, 265, 269, 294, 319, 370, 389, 411, 438, 448, 452, 457, 566, 568, 569, 604, 658, 694, 731, 747, 882, 884, 934, 938, 939, 974, 992, 1007, 1026, 1074, 1090, 1096, 1097, 1101, 1111], "modifi": [29, 42, 75, 88, 110, 111, 115, 116, 121, 123, 145, 150, 158, 161, 163, 183, 202, 259, 261, 262, 265, 269, 270, 271, 272, 293, 294, 333, 348, 350, 356, 393, 405, 412, 429, 431, 433, 442, 452, 454, 457, 473, 474, 494, 503, 506, 507, 509, 510, 511, 523, 536, 539, 549, 556, 559, 560, 562, 565, 577, 629, 633, 635, 638, 641, 655, 669, 692, 697, 709, 720, 722, 725, 726, 729, 730, 731, 751, 766, 786, 805, 806, 818, 823, 874, 887, 891, 896, 915, 923, 929, 967, 968, 974, 976, 987, 1008, 1051, 1055, 1073, 1074, 1090, 1096, 1098, 1142, 1146], "column": [29, 63, 119, 136, 145, 148, 163, 166, 212, 231, 260, 261, 262, 263, 265, 269, 294, 295, 420, 431, 731, 818, 823, 834, 1033, 1045, 1057, 1074, 1081, 1084, 1090, 1096], "python_misc_pandas_loc": [29, 731, 1074, 1090, 1096], "select": [29, 63, 142, 143, 145, 149, 202, 207, 215, 232, 262, 265, 294, 368, 390, 731, 778, 822, 879, 884, 918, 919, 938, 941, 943, 946, 966, 1033, 1074, 1079, 1088, 1090, 1096, 1098, 1110, 1118, 1145, 1147], "row": [29, 144, 166, 182, 202, 215, 219, 221, 223, 235, 260, 261, 262, 265, 269, 282, 294, 295, 378, 420, 731, 818, 923, 975, 994, 1014, 1033, 1065, 1067, 1074, 1081, 1084, 1088, 1090, 1094, 1095, 1096, 1100], "loc": [29, 163, 256, 260, 261, 262, 263, 265, 267, 269, 294, 406, 731, 923, 986, 1074, 1090, 1093, 1094, 1095, 1096, 1097], "python_misc_pandas_index": [29, 731, 1074, 1090, 1096], "python_misc_pandas_iloc": [29, 731, 1074, 1090, 1096], "iloc": [29, 262, 263, 265, 267, 269, 294, 431, 731, 1074, 1090, 1094, 1096, 1099], "python_misc_pandas_add_row": [29, 731, 1074, 1090, 1096], "python_misc_pandas_filt": [29, 731, 1074, 1090, 1096], "python_db_postgr": [29, 731, 1074, 1086], "postgresql": [29, 731, 1074, 1085, 1086], "python_db_dbapi2": [29, 731, 1032, 1034, 1035, 1074, 1086], "python_drafts_matplotlib": [29, 731, 1029, 1074], "matplotlib": [29, 175, 194, 213, 214, 226, 240, 241, 243, 245, 276, 295, 331, 731, 972, 1029, 1074, 1076, 1082], "python_drafts_argpars": [29, 731, 1029, 1074], "argpars": [29, 219, 240, 271, 293, 297, 308, 731, 1029, 1074], "python_drafts_setuptool": [29, 731, 1029, 1074], "setuptool": [29, 61, 139, 252, 287, 297, 731, 1029, 1074, 1112], "As": [30, 46, 68, 80, 114, 140, 143, 145, 150, 154, 160, 172, 175, 179, 210, 223, 285, 301, 325, 342, 380, 411, 414, 490, 492, 506, 557, 562, 564, 565, 642, 751, 778, 804, 813, 882, 883, 891, 893, 910, 938, 946, 968, 974, 995, 1000, 1004, 1061, 1065, 1078, 1120, 1132], "follow": [30, 39, 43, 78, 106, 107, 109, 117, 133, 142, 143, 145, 146, 147, 148, 150, 158, 163, 167, 171, 172, 175, 179, 183, 184, 195, 212, 218, 228, 229, 231, 235, 244, 248, 250, 267, 268, 270, 276, 277, 319, 341, 343, 346, 363, 364, 377, 380, 407, 409, 411, 413, 418, 419, 422, 430, 432, 437, 447, 448, 451, 452, 468, 469, 471, 472, 473, 474, 475, 493, 496, 497, 500, 501, 503, 504, 505, 506, 507, 519, 525, 551, 566, 567, 568, 569, 622, 629, 631, 636, 638, 639, 642, 643, 646, 664, 697, 725, 726, 729, 739, 741, 747, 778, 804, 805, 806, 811, 813, 815, 817, 829, 831, 832, 838, 842, 850, 851, 875, 882, 883, 884, 905, 908, 909, 910, 911, 920, 937, 946, 950, 952, 958, 960, 962, 964, 966, 967, 968, 971, 975, 976, 980, 987, 1006, 1020, 1028, 1033, 1036, 1041, 1045, 1047, 1051, 1054, 1055, 1058, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1098, 1102, 1112, 1133], "version": [30, 61, 142, 146, 148, 149, 150, 153, 156, 158, 159, 171, 172, 173, 175, 182, 191, 193, 202, 203, 212, 216, 218, 222, 228, 231, 238, 243, 246, 255, 261, 267, 268, 269, 270, 277, 315, 330, 390, 429, 430, 432, 433, 435, 442, 445, 542, 639, 641, 642, 689, 693, 705, 726, 751, 753, 770, 778, 779, 794, 838, 882, 883, 953, 954, 964, 966, 967, 969, 1000, 1001, 1007, 1031, 1103, 1105, 1112, 1113, 1119, 1125], "control": [30, 45, 59, 62, 63, 86, 115, 119, 122, 123, 142, 149, 156, 158, 161, 172, 175, 180, 182, 183, 184, 185, 194, 195, 210, 213, 226, 231, 237, 251, 323, 324, 325, 327, 330, 368, 382, 383, 429, 432, 446, 453, 496, 497, 500, 506, 548, 731, 751, 776, 778, 783, 838, 874, 876, 877, 881, 882, 884, 900, 949, 954, 973, 976, 984, 996, 1009, 1011, 1095, 1111, 1113, 1131, 1141, 1147], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 63, 75, 84, 87, 91, 102, 110, 111, 120, 130, 135, 139, 140, 142, 144, 145, 147, 148, 149, 150, 153, 158, 163, 164, 167, 171, 175, 182, 204, 219, 223, 229, 231, 247, 248, 250, 262, 265, 272, 277, 295, 303, 308, 314, 325, 331, 346, 347, 395, 402, 403, 405, 407, 418, 429, 431, 432, 433, 437, 471, 490, 504, 507, 549, 561, 562, 590, 604, 612, 617, 641, 642, 644, 647, 654, 675, 678, 682, 683, 693, 699, 707, 711, 719, 721, 731, 737, 747, 749, 768, 770, 778, 780, 805, 806, 810, 811, 813, 814, 822, 834, 857, 875, 876, 878, 883, 884, 900, 901, 902, 912, 926, 934, 940, 949, 953, 954, 962, 966, 968, 975, 978, 979, 980, 998, 1007, 1018, 1026, 1027, 1028, 1031, 1034, 1055, 1088, 1110, 1135], "No": [30, 43, 63, 80, 133, 139, 143, 145, 149, 150, 158, 185, 202, 218, 219, 235, 261, 333, 353, 355, 369, 385, 389, 396, 407, 412, 424, 429, 433, 434, 437, 439, 442, 443, 444, 445, 457, 503, 542, 552, 553, 565, 572, 582, 597, 600, 618, 636, 646, 648, 651, 655, 658, 662, 706, 707, 714, 721, 756, 758, 760, 762, 776, 778, 783, 795, 814, 820, 822, 825, 826, 841, 849, 857, 860, 876, 878, 884, 898, 905, 910, 911, 920, 921, 923, 925, 934, 938, 946, 949, 955, 969, 971, 988, 995, 1001, 1004, 1007, 1008, 1016, 1020, 1024, 1026, 1083, 1084, 1088, 1089, 1098, 1101, 1110, 1112, 1118], "proprietari": 30, "accept": [30, 32, 60, 145, 171, 267, 429, 431, 697, 707, 709, 746, 878, 904, 974, 998, 1145, 1147], "proven": [30, 418, 422, 566, 568, 569, 658], "difficult": [30, 68, 202, 374, 392, 542, 764, 776, 938], "ffmpeg": 31, "video4linux2": 31, "640x480": 31, "dev": [31, 63, 100, 118, 143, 144, 154, 160, 161, 171, 172, 215, 221, 231, 238, 241, 256, 259, 263, 268, 270, 273, 277, 328, 418, 437, 501, 731, 733, 734, 736, 742, 749, 758, 772, 774, 778, 791, 808, 809, 818, 820, 821, 838, 852, 855, 858, 860, 874, 877, 882, 883, 884, 907, 914, 934, 937, 940, 942, 945, 946, 966, 1117, 1119, 1135], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 143, 146, 148, 154, 212, 218, 228, 231, 390, 770, 776, 781, 783, 938, 1105, 1125], "audio": [31, 126, 131, 145, 150, 731, 1134], "appar": [31, 57, 61, 63, 65, 66, 145, 147, 148, 150, 154, 204, 215, 267, 434, 448, 619, 664, 675, 707, 746, 882, 940, 1089], "next": [31, 39, 42, 63, 98, 114, 139, 144, 145, 150, 158, 163, 165, 176, 181, 183, 191, 195, 202, 208, 212, 215, 216, 218, 221, 223, 225, 228, 231, 235, 241, 247, 248, 253, 256, 263, 273, 277, 283, 295, 307, 314, 328, 362, 380, 382, 403, 431, 469, 473, 487, 497, 506, 542, 579, 655, 668, 675, 677, 699, 768, 778, 797, 822, 838, 870, 882, 884, 904, 914, 934, 953, 979, 980, 983, 1011, 1014, 1081, 1118], "mention": [31, 143, 144, 171, 175, 179, 205, 229, 271, 272, 293, 294, 492, 506, 690, 790, 883, 971, 1076, 1092], "frame": [31, 137, 148, 160, 182, 212, 218, 228, 231, 261, 267, 402, 415, 419, 469, 660, 876, 877, 1094], "size": [31, 100, 109, 123, 142, 144, 145, 162, 164, 170, 212, 213, 218, 221, 226, 228, 231, 235, 240, 243, 259, 276, 277, 282, 322, 353, 370, 375, 384, 391, 395, 397, 401, 402, 404, 407, 408, 410, 415, 416, 417, 419, 421, 426, 427, 449, 450, 456, 495, 507, 508, 512, 513, 514, 515, 516, 520, 521, 524, 530, 542, 547, 549, 553, 557, 562, 566, 568, 569, 582, 583, 584, 585, 590, 595, 596, 600, 604, 606, 607, 612, 614, 641, 643, 649, 652, 653, 658, 669, 670, 671, 673, 687, 697, 706, 710, 711, 719, 728, 729, 730, 731, 737, 749, 764, 774, 794, 803, 808, 809, 815, 822, 852, 855, 858, 860, 866, 870, 874, 878, 883, 904, 906, 945, 946, 952, 969, 972, 1076, 1089], "input": [31, 40, 68, 86, 118, 163, 164, 165, 166, 176, 179, 182, 184, 206, 212, 218, 221, 228, 231, 234, 235, 256, 259, 322, 327, 351, 352, 358, 382, 390, 413, 418, 430, 508, 509, 510, 511, 523, 562, 612, 631, 654, 729, 749, 804, 822, 853, 871, 875, 885, 901, 904, 916, 918, 919, 926, 982, 997, 1026, 1038, 1042, 1043, 1055, 1058, 1061, 1067, 1070, 1078, 1079, 1082, 1083, 1141], "rate": [31, 153, 175, 235, 294, 411, 797, 936], "hz": [31, 788], "bitrat": [31, 877], "If": [31, 43, 45, 47, 53, 55, 56, 57, 89, 112, 114, 142, 143, 144, 145, 148, 149, 150, 158, 159, 167, 175, 212, 218, 225, 228, 231, 235, 243, 248, 250, 259, 265, 277, 294, 322, 327, 368, 377, 407, 419, 439, 441, 447, 497, 503, 504, 519, 549, 554, 618, 625, 641, 642, 655, 660, 706, 710, 711, 719, 721, 731, 751, 756, 770, 778, 783, 795, 804, 813, 817, 820, 838, 839, 847, 850, 874, 875, 882, 883, 884, 885, 891, 905, 913, 915, 923, 928, 932, 945, 967, 968, 980, 988, 990, 1000, 1007, 1015, 1017, 1028, 1053, 1081, 1084, 1098, 1111, 1130], "instead": [31, 58, 63, 116, 123, 136, 142, 143, 144, 145, 163, 164, 172, 204, 221, 223, 231, 261, 277, 307, 328, 333, 370, 419, 447, 490, 493, 507, 569, 585, 641, 643, 660, 664, 706, 707, 721, 746, 747, 756, 809, 838, 860, 883, 925, 945, 952, 954, 964, 970, 1001, 1047, 1059, 1071, 1095, 1117], "stdout": [31, 123, 162, 195, 199, 203, 212, 218, 228, 231, 241, 249, 256, 258, 259, 279, 280, 294, 307, 315, 317, 322, 326, 328, 618, 731, 802, 804, 808, 819, 820, 863, 866, 869, 874, 904, 949, 976, 1026, 1028, 1033, 1038, 1042, 1045, 1060, 1092, 1101, 1136], "hold": [31, 116, 142, 144, 163, 179, 181, 182, 202, 229, 345, 357, 377, 449, 579, 634, 641, 692, 697, 711, 719, 742, 776, 780, 781, 875, 882, 938, 976, 989, 1011, 1059, 1081], "mplayer": [31, 273], "stdin": [31, 42, 195, 203, 212, 218, 221, 228, 231, 315, 322, 354, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731, 804, 820, 821, 853, 904, 1024, 1026, 1027, 1038, 1089, 1101, 1136], "unicod": [32, 34, 35, 36, 38, 203, 212, 216, 218, 228, 231, 253, 277, 357, 1006, 1012, 1026, 1089, 1103], "sphinxemojicod": 32, "pip": [32, 61, 127, 139, 175, 179, 200, 229, 243, 904, 1000, 1030, 1031, 1063, 1076, 1092, 1104, 1105, 1106, 1110, 1112, 1113], "conf": [32, 65, 144, 146, 148, 442, 778, 884, 976], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 256, 506, 737, 749], "innoc": [32, 149, 412, 713, 817, 951, 995], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 78, 80, 87, 89, 143, 340, 875, 883, 884], "muscl": 32, "nerd": [32, 838], "ok_hand": 32, "penguin": 32, "pig": [32, 407], "point_up": 32, "sleep": [32, 63, 143, 218, 247, 248, 271, 272, 293, 308, 380, 389, 719, 731, 755, 758, 760, 770, 780, 783, 787, 793, 795, 796, 799, 874, 875, 883, 912, 916, 919, 934, 936, 937, 940, 945, 984], "sunglass": 32, "think": [32, 42, 43, 69, 143, 144, 158, 181, 205, 390, 411, 412, 415, 501, 505, 552, 572, 647, 655, 657, 706, 805, 806, 809, 899, 945, 1007], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 193, 199, 215, 235, 277], "ac": [32, 153, 191], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 996], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 153], "aerial_tramwai": 32, "af": [32, 153], "afghanistan": 32, "ai": [32, 179, 1083, 1090], "airplan": [32, 875], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 267], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 952, 1018], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 65, 76, 88, 166, 221, 246, 247, 248, 250, 259, 270, 303, 525, 657, 706, 719, 720, 730, 731, 740, 745, 748, 750, 755, 758, 759, 761, 764, 765, 769, 770, 771, 773, 775, 780, 783, 784, 787, 788, 789, 793, 796, 798, 799, 874, 914, 924, 925, 987, 1130], "atom_symbol": 32, "australia": 32, "austria": [32, 143, 340], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 164, 972], "az": 32, "azerbaijan": 32, "ba": [32, 153], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 431], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1112], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 89, 175, 322, 875, 999, 1000, 1001, 1027, 1106], "bb": [32, 135, 146, 882], "bd": [32, 153], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 923, 1099], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 409], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 995, 998], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 153], "bg": [32, 431], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 184, 637], "bison": [32, 154, 758, 882, 966], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 989], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1088], "bookmark_tab": 32, "boom": [32, 675, 692], "boomerang": 32, "boot": [32, 133, 144, 146, 150, 162, 263, 425, 722, 751, 756, 774, 778, 788, 816, 882, 883, 884, 1125], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 241], "brain": [32, 59, 62], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 142, 155], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 423, 838], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 749], "bug": [32, 46, 55, 56, 107, 144, 145, 146, 186, 205, 221, 232, 331, 387, 389, 390, 405, 410, 412, 416, 429, 434, 439, 530, 532, 534, 542, 548, 549, 552, 557, 619, 622, 675, 685, 704, 721, 731, 768, 896, 927, 936, 937, 969, 989, 990, 1004, 1007], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 81, 115, 190, 215, 231, 238, 240, 241, 256, 259, 263, 273, 277, 447, 461, 476, 490, 506, 507, 731, 749, 774, 838, 874, 876, 881, 882, 883, 912, 918, 974, 1075, 1134, 1141, 1145, 1147], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 123, 148, 150, 883], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 261, 431, 875], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 145, 149, 183, 195, 249, 258, 259, 261, 279, 280, 307, 308, 407, 431, 506, 731, 736, 741, 758, 778, 794, 805, 806, 808, 809, 818, 820, 822, 850, 857, 865, 866, 868, 869, 871, 874, 875, 882, 883, 884, 885, 909, 911, 912, 916, 940, 946, 949, 1136], "cayman_island": 32, "cd": [32, 61, 129, 146, 147, 149, 150, 153, 154, 158, 171, 172, 205, 215, 235, 243, 248, 250, 308, 322, 327, 432, 504, 507, 567, 751, 753, 778, 779, 802, 804, 805, 806, 809, 815, 823, 828, 830, 838, 862, 875, 882, 883, 891, 904, 953, 954, 966, 967, 1031], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 804, 921], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 136, 142, 153, 163, 225, 242, 409, 783, 931], "chair": [32, 175], "champagn": 32, "champagne_glass": 32, "chart": [32, 189, 204, 213, 226, 240, 243, 276, 282, 1076, 1083], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 99, 160, 249, 258, 259, 279, 280, 729, 731, 808, 810, 812, 813, 824, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 847, 849, 850, 874, 886, 887, 888, 889, 890, 915, 921, 928, 933, 950, 962, 963, 993, 1101], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1110], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 231, 256, 992, 993], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 218, 219, 418, 882], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 101, 150, 195, 219, 321, 322, 325, 650, 652, 891, 1080, 1081, 1105], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 153], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 267], "cocos_island": 32, "coffe": [32, 146, 622, 882], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 112, 144, 158, 249, 258, 259, 279, 731, 802, 808, 874, 962, 963, 964, 967], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 143, 147, 175, 204, 364, 372, 418, 565, 575, 651, 662, 1018, 1102], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 175, 181, 262, 265, 367, 380, 390, 419, 429, 533, 584, 603, 604, 660, 708, 990, 997, 1014, 1025], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 259], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 760, 774], "cool": [32, 65, 129, 144, 145, 148, 150, 158, 163, 164, 175, 176, 179, 194, 259, 272, 340, 425, 431, 459, 468, 605, 647, 648, 664, 667, 686, 696, 699, 721, 778, 834, 884, 969, 973, 976, 993, 1012, 1026, 1076, 1083, 1088, 1130], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 154, 195, 212, 218, 228, 231, 256, 315, 319, 557, 706, 1002], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 142, 143, 144, 145, 150, 163, 175, 179, 343, 380, 414, 419, 695, 871, 906, 925], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 99, 114, 144, 146, 149, 183, 185, 249, 258, 259, 279, 280, 322, 327, 731, 778, 805, 806, 807, 808, 809, 838, 842, 843, 845, 846, 849, 850, 852, 858, 874, 882, 894, 905, 966, 1136], "cr": [32, 1026], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 65, 103, 104, 106, 118, 142, 155, 179, 273, 285, 286, 301, 302, 323, 324, 325, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 912, 913, 915, 929, 932, 935, 937, 954, 958, 959, 960, 961, 963, 966, 1132], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 143], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 204], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 591], "date": [32, 112, 140, 146, 154, 158, 175, 181, 211, 243, 259, 261, 335, 336, 431, 779, 971, 1065, 1067, 1071, 1073, 1080, 1085], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 131, 143, 148, 204, 273, 860, 937, 1134, 1141], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 203, 216, 1103], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 235, 1083], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 407], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 221, 525, 768, 986], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 97, 205, 221, 268, 270, 525, 549, 550, 555, 644, 656, 658, 687, 692, 703, 707, 712, 720, 728, 730, 731, 949], "dragon_fac": 32, "dress": [32, 140], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 140, 215, 231, 238, 241, 256, 263, 273, 277, 869, 1089, 1124], "ea": [32, 153], "eagl": [32, 215, 1033], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 97, 153, 195, 319, 322, 327, 330, 339, 731, 807, 808, 838, 874], "ecuador": 32, "ee": [32, 153], "eg": [32, 35, 116], "egg": [32, 61, 1020], "eggplant": 32, "egypt": 32, "eight": [32, 145, 163, 176, 186, 194, 223, 225, 322, 884, 1089], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 151, 154, 186, 202, 212, 437, 533, 921, 952, 953, 969, 1003, 1144], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 778], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 152, 161, 176, 178, 186, 223, 1125, 1126, 1127], "eritrea": 32, "estonia": 32, "et": [32, 97, 557, 706, 898, 953, 954, 995], "ethiopia": 32, "euro": [32, 473, 474, 475, 487, 488, 489], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 106, 203, 216, 251, 270, 331, 446, 453, 467, 481, 495, 547, 731, 904, 1103, 1133], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 167, 878, 884], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 261, 912], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 908, 916, 931], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 63, 409], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1112], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 63, 143, 163, 176, 186, 194, 215, 225, 231, 241, 256, 277, 295, 303, 322, 340, 1033, 1075], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 143, 145, 160, 171, 182, 212, 218, 221, 225, 228, 231, 256, 259, 270, 272, 286, 302, 315, 434, 435, 436, 441, 444, 630, 644, 721, 731, 737, 746, 760, 783, 786, 788, 876, 878, 907, 908, 909, 911, 925, 946, 950, 1011], "flame": [32, 146], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 139, 235, 583], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 804, 875], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 69, 383, 840], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 175, 1000], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 65, 142, 147, 163, 175, 176, 179, 186, 193, 194, 202, 218, 223, 225, 235, 238, 241, 252, 256, 259, 273, 276, 277, 283, 322, 778, 844, 1014, 1022, 1075, 1076, 1084, 1110, 1133], "four_leaf_clov": 32, "fox": [32, 407], "fox_fac": 32, "fr": [32, 154], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 69, 1130], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": 32, "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 906], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 143, 144, 340], "gf": 32, "gg": [32, 35, 38], "gh": [32, 139, 1098], "ghana": 32, "ghost": 32, "gi": [32, 139, 226], "gibraltar": 32, "gift": [32, 179, 210], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 68, 143, 262, 265, 307, 431, 441, 710, 805, 806, 968, 977], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 283, 1089], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 205, 221, 439, 718, 719, 721], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 143, 219, 259, 758, 768], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 139, 151, 158, 163, 170, 179, 194, 205, 221, 240, 267, 330, 357, 368, 387, 389, 452, 471, 539, 550, 566, 568, 569, 695, 822, 838, 883, 884, 900, 928, 962, 980, 995, 1002, 1130, 1136, 1148], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 719], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 175, 181, 182, 193, 199, 212, 218, 219, 222, 226, 228, 231, 235, 256, 263, 277, 322, 442, 778, 1024, 1105], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 221, 731, 874, 904, 913, 914, 915, 932, 945], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 194, 212, 218, 228, 231, 261, 294, 423, 458, 714, 737], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 148, 340], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 313, 314, 331], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 368, 449, 478, 1129], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 107, 110, 111, 145, 148, 158, 162, 165, 175, 176, 186, 193, 199, 212, 215, 218, 225, 228, 229, 231, 238, 241, 245, 253, 256, 263, 269, 273, 277, 283, 288, 295, 317, 438, 473, 474, 475, 487, 488, 489, 506, 742, 774, 776, 798, 805, 806, 811, 813, 822, 823, 824, 834, 841, 862, 864, 865, 876, 882, 884, 891, 910, 920, 962, 989, 1000, 1016, 1054, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1082, 1084, 1102, 1146], "ideograph_advantag": 32, "ie": 32, "il": [32, 153], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 203, 252, 276, 1076], "indonesia": 32, "infin": [32, 182, 231, 981, 982], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 838], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 203, 252, 1076], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 186, 199, 212, 215, 225, 228, 231, 235, 238, 277, 283], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 322, 820, 870], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 184], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 164, 166], "kn": 32, "knife": [32, 737, 904, 1130], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 212, 218, 228, 231], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 164, 166, 213, 226, 240, 243, 276, 282, 379, 384, 391, 397, 401, 404, 408, 411, 417, 421, 426, 427, 648, 649, 687, 728, 730, 731, 758, 1076, 1083, 1095, 1098], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 180], "leafy_green": 32, "leav": [32, 49, 65, 140, 143, 144, 150, 153, 183, 212, 235, 272, 333, 551, 553, 562, 563, 578, 580, 581, 726, 729, 741, 746, 756, 778, 883, 908, 928, 1016, 1089], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 313, 314, 331], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 143, 145, 175, 179, 212, 218, 221, 228, 231, 247, 248, 250, 259, 280, 293, 294, 303, 331, 405, 445, 525, 708, 714, 717, 719, 720, 726, 730, 731, 768, 776, 781, 786, 815, 891, 923, 928, 930, 938, 945, 986, 1076, 1130, 1142, 1145], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 164, 235, 371, 774, 825, 826, 837, 920, 949, 951], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 229, 830], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 146, 261, 431], "md": [32, 127, 342, 779], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 973], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 369, 425, 548], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 215, 1033], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 148, 150], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 430], "mn": 32, "mo": [32, 539], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 143, 148, 838, 1014, 1022], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 944, 945], "mr": [32, 114, 212, 223, 231, 235, 1038], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 331, 948, 949], "mu": [32, 235], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 99, 114, 183, 185, 249, 258, 259, 279, 280, 322, 327, 731, 751, 808, 845, 858, 874, 1136], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 212, 215, 218, 231, 238, 256], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 183, 185, 258, 279, 280, 351, 901], "ne": [32, 549, 567, 569, 916], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 144, 1001], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 215, 231, 238, 241, 256, 263, 273, 277, 895], "ng": [32, 144, 155, 259, 731, 874, 953, 955, 962, 963, 964], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 163, 176, 186, 194, 212, 223, 322], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 351], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 78, 114, 115, 121, 123, 125, 139, 145, 146, 153, 170, 183, 205, 223, 231, 235, 240, 259, 268, 270, 277, 385, 407, 425, 441, 444, 495, 538, 540, 547, 549, 552, 560, 564, 565, 604, 619, 654, 660, 701, 705, 706, 721, 731, 764, 770, 783, 794, 815, 818, 820, 860, 885, 886, 894, 912, 927, 931, 938, 946, 971, 975, 987, 988, 1011, 1024, 1044, 1061, 1097, 1098, 1104, 1118, 1133], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 166, 193, 261, 295, 431, 1079, 1098], "nr": [32, 191, 235, 737], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 419], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 65, 117, 142, 144, 145, 149, 158, 175, 191, 221, 261, 318, 359, 395, 413, 415, 445, 454, 504, 505, 506, 551, 559, 562, 567, 572, 582, 634, 641, 652, 660, 675, 694, 697, 706, 707, 792, 883, 910, 928, 955, 966, 984, 987, 1000, 1117], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 207], "om": [32, 685], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 212, 218, 228, 231, 395, 579, 581, 582], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 870], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 146], "pg": [32, 423], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 78, 136, 146, 153, 204, 433, 506, 934, 964, 969], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 267], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 231, 246], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 63, 114, 123, 139, 143, 144, 148, 149, 155, 171, 183, 185, 186, 202, 215, 231, 235, 261, 263, 355, 389, 395, 398, 399, 402, 403, 407, 478, 503, 504, 506, 507, 549, 551, 554, 559, 560, 561, 562, 563, 565, 567, 568, 582, 590, 650, 653, 654, 657, 659, 662, 671, 672, 673, 675, 677, 678, 681, 682, 683, 689, 691, 692, 701, 705, 710, 721, 726, 729, 742, 778, 797, 805, 806, 815, 838, 840, 857, 860, 867, 877, 885, 894, 901, 912, 921, 936, 949, 964, 971, 973, 1033, 1112, 1136], "pt": [32, 709, 809, 936], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 145, 146, 150, 268, 778, 814, 816, 900], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 63, 112, 145, 150, 182, 191, 194, 195, 205, 208, 215, 216, 218, 223, 225, 231, 235, 241, 243, 244, 253, 256, 260, 276, 277, 283, 322, 327, 385, 431, 432, 441, 449, 474, 504, 551, 557, 675, 697, 747, 783, 792, 797, 839, 928, 949, 964, 968, 973, 978, 997, 1020, 1071, 1076], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 143, 153, 161, 186, 190, 218, 231, 277, 308, 371, 405, 456, 484, 505, 507, 514, 734, 741, 749, 756, 762, 774, 865, 882, 898, 902, 1003, 1092], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 100, 114, 123, 133, 149, 204, 229, 259, 329, 419, 431, 567, 731, 778, 808, 838, 842, 846, 849, 852, 857, 858, 874, 887, 914, 1011], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 314, 697], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 838], "ringed_planet": 32, "ro": 32, "robot": [32, 231], "robot_fac": 32, "rock": [32, 272, 429, 968, 970, 1106], "rocket": [32, 150], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1117, 1148], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1089], "rw": [32, 61, 63, 144, 145, 154, 162, 231, 241, 438, 729, 734, 742, 809, 820, 823, 834, 837, 857, 860, 875, 882, 883, 884, 886, 895, 906, 909, 910, 918, 946, 952, 953, 954, 964, 966, 967, 1003, 1031], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 834], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 260], "sc": [32, 35], "scale": [32, 78, 175, 221, 235, 419, 882, 955, 968], "scarf": 32, "school": [32, 235, 490, 525, 1098, 1131], "school_satchel": 32, "scientist": [32, 175, 1000, 1081, 1082, 1083, 1090], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 204, 838], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 149, 490], "sd": [32, 215, 231, 235, 238, 241, 256, 263, 273, 277, 778], "se": [32, 554], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 634, 655, 891, 975, 1087], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 84, 163, 176, 186, 194, 223, 322, 1043, 1054], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 61, 150, 154, 243, 751, 805, 806, 823, 884, 906, 916, 1063], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 143], "shinto_shrin": 32, "ship": [32, 148], "shirt": [32, 43, 140], "shit": [32, 202], "shop": [32, 267], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 453], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 163, 176, 186, 194, 212, 322, 1011], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 146, 158, 432, 807], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 314, 936], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 210], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 63], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 144, 145, 150, 554, 641, 778, 884, 936, 950, 1092], "sound": [32, 59, 62, 142, 146, 149, 150, 219, 711, 820, 875, 883, 884, 1111], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 116, 419, 430], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": 32, "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 215, 1033], "sri_lanka": 32, "st": [32, 209, 431, 946, 948, 949], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 591, 884, 966], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 101, 106, 114, 123, 150, 243, 307, 308, 313, 314, 322, 976, 1112], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 109, 123, 262, 265, 495, 506, 512, 514, 547, 731, 931, 975], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 473, 474], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 114, 154, 183, 204, 212, 218, 221, 228, 231, 249, 258, 259, 279, 280, 360, 375, 384, 391, 397, 401, 404, 408, 411, 412, 417, 421, 426, 427, 649, 687, 693, 728, 729, 730, 731, 734, 753, 756, 778, 808, 823, 838, 858, 860, 874, 883, 983], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 145, 148], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 207], "tea": 32, "teacher": [32, 106, 148, 435, 437, 805, 806, 964], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 145, 166, 186, 225, 231, 869], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 238, 804, 973], "tg": 32, "th": [32, 179, 207, 353, 395, 504, 582, 1013, 1022], "thailand": 32, "thermomet": [32, 69, 82, 84, 85, 170, 179, 231, 251, 326, 328, 329, 331, 446, 453, 456, 458, 467, 468, 481, 495, 535, 536, 544, 547, 622, 625, 731, 884], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 62, 65, 83, 89, 91, 148, 160, 161, 170, 175, 179, 190, 212, 218, 219, 221, 228, 231, 246, 247, 248, 250, 259, 268, 270, 294, 303, 332, 335, 336, 337, 425, 454, 471, 485, 548, 689, 697, 706, 708, 715, 717, 720, 721, 730, 731, 760, 770, 776, 790, 798, 874, 896, 915, 923, 925, 926, 928, 930, 934, 935, 937, 948, 949, 950, 986, 987, 1076, 1119, 1129, 1130, 1131, 1133, 1145, 1146, 1147], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 62, 65, 114, 167, 268, 410, 722, 731, 755, 780, 787, 793, 796, 797, 799, 811, 814, 874, 883, 899, 903, 915, 934, 940, 942, 950, 1144, 1147], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 148], "tm": 32, "tn": [32, 183], "togo": 32, "toilet": [32, 221, 525, 768, 986], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1130], "toolbox": [32, 164], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 207], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 210, 219, 294], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 717, 719, 721, 770, 776, 923, 1142], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 262, 265], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 125, 149], "ve": [32, 143, 145, 820, 1111], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": 32, "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 142, 162, 175, 271, 272, 293, 329, 340, 647, 664, 822, 884, 988], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 267], "wave": [32, 34, 38, 259, 276], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 203, 204, 221, 241, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 431, 649, 687, 728, 730, 731, 818, 821, 871, 885, 1060], "weari": 32, "wed": [32, 202], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 442], "worri": [32, 410], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 179, 183, 186, 208, 212, 218, 228, 231, 238, 259, 273, 323, 324, 343, 431, 566, 627, 823, 837, 883, 884, 918, 973, 1013, 1026, 1071, 1073, 1101, 1105, 1110], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": 32, "za": [32, 283, 362], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 65, 144, 183, 195, 326, 328, 329, 675, 838, 882, 883], "layout": [33, 139, 160, 229, 233, 407, 420, 1110], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 363, 839], "entiti": [33, 143, 371, 385, 412, 429, 449, 457, 564, 747, 936, 1089], "isoamsa": 33, "mathemat": [33, 235, 1025], "arrow": [33, 35, 36, 38, 73, 74, 838, 968], "isoamsr": 33, "relat": [33, 69, 131, 164, 175, 179, 200, 204, 259, 272, 375, 384, 391, 395, 397, 401, 404, 408, 417, 421, 426, 427, 434, 549, 649, 687, 704, 728, 729, 730, 731, 746, 755, 803, 881, 936, 946, 1076, 1110, 1111], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 76, 87, 88, 139, 143, 149, 203, 204, 212, 216, 218, 219, 221, 226, 228, 231, 241, 330, 374, 407, 419, 587, 664, 756, 770, 778, 823, 952, 955, 968, 980, 1007, 1012, 1089, 1103], "sphinxish": 33, "send": [33, 101, 114, 123, 125, 140, 143, 154, 179, 180, 182, 183, 184, 185, 218, 219, 238, 240, 241, 259, 280, 322, 327, 471, 802, 818, 834, 877, 878, 882, 891, 901, 949, 951, 1072, 1089], "v4l": [33, 123], "ssh": [33, 97, 101, 102, 114, 123, 125, 140, 150, 154, 183, 215, 231, 238, 241, 249, 256, 258, 263, 273, 277, 279, 308, 321, 322, 328, 329, 335, 336, 340, 506, 507, 731, 804, 805, 806, 813, 860, 869, 874, 875, 886, 887, 912, 962, 963, 964, 1134, 1136, 1141], "taken": [34, 35, 36, 38, 40, 73, 74, 142, 146, 147, 154, 203, 409, 441, 506, 515, 562, 717, 781, 803, 813, 838, 952, 1003, 1089, 1103], "definit": [34, 35, 36, 38, 107, 118, 139, 143, 145, 146, 148, 150, 163, 172, 175, 176, 181, 195, 202, 204, 268, 270, 286, 302, 322, 343, 344, 345, 375, 384, 387, 390, 391, 397, 401, 404, 408, 414, 415, 416, 417, 419, 420, 421, 426, 427, 434, 436, 440, 448, 449, 471, 493, 533, 551, 552, 553, 558, 559, 565, 566, 568, 577, 580, 581, 603, 629, 638, 649, 659, 675, 687, 689, 702, 706, 710, 728, 730, 731, 756, 778, 839, 883, 884, 952, 971, 978, 984, 989, 1000, 1004, 1017, 1018, 1021, 1085, 1099, 1117, 1127, 1130], "includ": [34, 35, 36, 38, 44, 107, 135, 145, 150, 154, 158, 160, 171, 175, 182, 194, 195, 204, 205, 212, 216, 218, 219, 221, 228, 231, 235, 256, 270, 277, 286, 302, 319, 330, 344, 345, 347, 351, 353, 355, 386, 387, 402, 407, 410, 412, 416, 423, 432, 433, 435, 436, 437, 439, 444, 447, 448, 449, 450, 451, 452, 454, 456, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 533, 539, 542, 549, 550, 551, 553, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 574, 577, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 627, 631, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 648, 650, 652, 654, 657, 658, 659, 660, 662, 664, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 689, 690, 691, 692, 694, 696, 697, 699, 701, 705, 706, 707, 708, 709, 710, 711, 714, 716, 719, 721, 722, 725, 726, 727, 729, 731, 737, 742, 747, 749, 756, 758, 760, 762, 764, 766, 770, 772, 774, 783, 788, 792, 795, 798, 815, 835, 838, 844, 871, 876, 878, 882, 898, 900, 901, 902, 904, 907, 908, 909, 910, 911, 914, 916, 919, 927, 931, 933, 936, 942, 945, 949, 952, 955, 964, 967, 968, 970, 972, 1000, 1001, 1026, 1027, 1099, 1106, 1112, 1117, 1119, 1122, 1132], "substitut": [34, 35, 36, 38, 106, 123, 195, 231, 277, 319, 413, 429, 433, 664, 895, 1088], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1133], "WITH": [34, 35, 38, 901], "downward": [34, 35, 36, 38, 441], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 364], "circl": [34, 35, 38, 205, 525, 818], "abov": [34, 35, 38, 78, 114, 143, 145, 146, 147, 148, 150, 154, 158, 162, 181, 184, 195, 204, 212, 218, 228, 231, 235, 294, 333, 380, 403, 413, 423, 449, 469, 471, 493, 496, 497, 506, 507, 532, 542, 559, 560, 564, 565, 584, 628, 690, 739, 772, 778, 788, 805, 806, 822, 850, 882, 883, 884, 908, 912, 938, 945, 968, 976, 1007, 1021, 1092, 1098, 1110, 1117], "cudarrl": 34, "02938": 34, "side": [34, 163, 185, 259, 268, 359, 368, 409, 471, 503, 542, 566, 568, 569, 719, 758, 762, 817, 838, 886, 976, 1009, 1055, 1081, 1083, 1092], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 65, 144, 150, 212, 218, 228, 231, 244, 380, 507, 533, 565, 567, 569, 778, 904], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 223, 567, 710], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 61, 112, 144, 146, 149, 183, 185, 195, 249, 258, 267, 279, 280, 719, 731, 808, 864, 865, 868, 871, 874, 899, 900, 967, 1033], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 117, 205, 221, 225, 231, 330, 345, 363, 364, 365, 368, 387, 407, 416, 448, 454, 459, 461, 468, 477, 479, 480, 485, 486, 487, 488, 489, 490, 493, 501, 503, 505, 506, 507, 518, 549, 551, 557, 559, 560, 564, 568, 600, 627, 651, 654, 657, 660, 664, 669, 670, 671, 672, 685, 704, 705, 707, 710, 719, 778, 838, 882, 976, 996, 1020, 1097], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 101, 102, 116, 117, 158, 200, 210, 213, 216, 221, 225, 226, 231, 238, 240, 252, 253, 276, 282, 450, 454, 457, 507, 525, 603, 604, 605, 608, 650, 696, 697, 701, 731, 742, 747, 874, 886, 887, 888, 890, 970, 980, 1024, 1076, 1087, 1105], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 147, 423, 438, 443, 860, 954], "stem": [34, 747], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 142, 143, 146, 171, 248, 286, 302, 328, 349, 390, 435, 436, 447, 454, 496, 503, 504, 505, 506, 525, 567, 600, 625, 647, 664, 689, 706, 731, 746, 747, 778, 824, 870, 877, 884, 952, 955, 1117, 1122], "tail": [34, 38, 144, 183, 185, 195, 249, 258, 279, 280, 719, 731, 766, 808, 865, 868, 871, 874, 1101], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 63, 84, 110, 111, 116, 142, 143, 145, 163, 194, 205, 231, 277, 366, 367, 374, 380, 452, 496, 503, 549, 552, 556, 564, 565, 622, 629, 655, 820, 821, 838, 882, 891, 910, 952, 980, 984, 995, 996, 1007, 1021, 1075, 1081, 1099], "besid": [34, 35, 38, 158], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 152], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 146, 697], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 120, 142, 143, 144, 145, 146, 150, 153, 171, 175, 183, 195, 212, 216, 218, 221, 228, 231, 239, 267, 322, 340, 351, 361, 363, 364, 368, 372, 373, 400, 407, 409, 418, 422, 424, 425, 444, 449, 506, 551, 552, 557, 562, 627, 697, 706, 716, 737, 749, 758, 760, 776, 778, 783, 788, 792, 817, 838, 860, 884, 895, 901, 904, 934, 942, 971, 978, 1018, 1028, 1076, 1083, 1094, 1101, 1130], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 145, 167, 179, 195, 202, 205, 231, 235, 267, 268, 277, 289, 345, 351, 367, 374, 379, 390, 415, 418, 495, 501, 508, 512, 547, 592, 611, 615, 642, 644, 710, 731, 813, 817, 871, 895, 934, 938, 939, 1007, 1061, 1117], "sign": [34, 35, 36, 38, 146, 153, 158, 221, 361, 363, 371, 415, 429, 453, 627, 690, 751, 1007, 1021, 1081, 1127, 1128], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 106, 142, 144, 145, 175, 195, 199, 255, 294, 343, 415, 419, 452, 504, 549, 661, 706, 875, 876, 882, 914, 946, 999, 1022, 1088, 1117], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 137, 139, 142, 143, 144, 145, 153, 166, 228, 231, 235, 253, 322, 328, 425, 431, 438, 557, 756, 778, 875, 1078, 1083], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 62], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 149, 170, 190, 213, 226, 231, 240, 243, 273, 276, 277, 282, 295, 331, 431, 496, 711, 974, 1016, 1076], "TO": [34, 35, 38, 1031], "black": [34, 38, 148, 199, 207, 219, 222, 603, 964], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 200, 210, 213, 216, 240, 252, 276, 282, 1076], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 118, 121, 139, 143, 144, 145, 148, 150, 154, 163, 175, 184, 202, 235, 248, 294, 354, 356, 423, 430, 441, 474, 488, 496, 497, 503, 506, 641, 643, 657, 669, 689, 690, 706, 710, 719, 721, 726, 727, 729, 751, 772, 813, 817, 821, 838, 875, 884, 905, 949, 952, 1117], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 268, 525, 602, 611, 615, 644, 731], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 351, 367, 390, 553, 866, 995], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 139, 158, 244, 269, 308, 447, 564, 633, 749, 762, 774, 781, 792, 884, 894, 898, 952, 975, 995, 1003, 1066, 1068, 1095], "slash": [34, 38, 862, 946], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 61, 63, 112, 125, 140, 146, 148, 153, 158, 164, 176, 208, 212, 218, 221, 223, 228, 231, 256, 267, 272, 276, 277, 279, 280, 282, 286, 294, 298, 302, 304, 389, 405, 449, 452, 503, 550, 558, 559, 560, 588, 639, 640, 642, 643, 701, 705, 708, 710, 721, 751, 778, 779, 802, 805, 806, 821, 835, 973, 1078, 1089, 1112], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 62, 145, 158, 167, 204, 368, 416, 418, 439, 554, 619, 647, 695, 711, 946], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 565, 885], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 908], "02a70": 35, "approxim": [35, 38, 145, 241], "OR": [35, 38, 218, 351, 367, 390, 407, 866, 995], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 188, 215, 221, 238, 256, 263, 268, 277, 283, 348, 525, 532, 533, 592, 596, 611, 615, 644, 689, 731, 733, 772, 811, 875, 936, 1023, 1056], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 231, 955, 968, 1025], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 235], "equival": [35, 38, 78, 92, 106, 109, 231, 376, 380, 395, 400, 561, 638, 802, 804, 839, 871, 904, 984, 1006, 1016, 1026], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 69, 89, 103, 143, 144, 145, 147, 153, 154, 164, 179, 191, 204, 212, 215, 218, 223, 225, 228, 231, 235, 238, 253, 256, 263, 277, 282, 295, 308, 318, 352, 355, 368, 390, 395, 402, 415, 420, 429, 440, 461, 471, 493, 501, 565, 582, 641, 697, 707, 711, 722, 732, 733, 737, 783, 809, 810, 815, 875, 882, 912, 922, 936, 937, 938, 939, 946, 950, 984, 995, 1005, 1007, 1018, 1082, 1135], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1054], "02237": [35, 38], "proport": [35, 38, 144], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 123, 148, 154, 163, 175, 193, 202, 203, 216, 223, 247, 248, 250, 273, 277, 303, 395, 429, 434, 507, 525, 675, 703, 712, 720, 730, 731, 821, 882, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 914, 916, 919, 945, 949, 973, 1085, 1103, 1143], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1025, 1129], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 756, 857, 886, 975], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 195], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 147], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 901], "02a9a": 35, "greater": [35, 36, 38, 106, 114, 270, 367, 495, 501, 509, 512, 547, 689, 731, 764, 1007], "than": [35, 36, 38, 43, 65, 68, 106, 112, 114, 118, 123, 139, 143, 144, 148, 150, 153, 154, 158, 175, 179, 182, 186, 195, 202, 205, 212, 218, 223, 225, 228, 231, 235, 262, 265, 270, 294, 297, 308, 367, 368, 387, 389, 418, 419, 420, 431, 432, 434, 440, 447, 495, 503, 509, 512, 547, 551, 563, 566, 568, 569, 634, 647, 658, 684, 697, 721, 731, 734, 749, 764, 770, 774, 778, 838, 863, 867, 875, 883, 893, 894, 901, 904, 921, 949, 953, 968, 969, 984, 989, 1006, 1007, 1051, 1055, 1085, 1092, 1095, 1112, 1130], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 191, 202, 238], "02a99": 35, "less": [35, 36, 38, 59, 62, 78, 139, 143, 144, 145, 150, 154, 204, 218, 235, 249, 258, 259, 265, 279, 280, 345, 367, 368, 372, 415, 418, 449, 501, 605, 625, 651, 697, 699, 721, 731, 749, 751, 778, 808, 822, 838, 865, 868, 869, 871, 874, 904, 989, 1007, 1026, 1105, 1106, 1119, 1130, 1136], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 63, 143, 144, 160, 182, 212, 218, 228, 231, 277, 368, 410, 603, 647, 778, 815, 920, 939, 981, 982, 1007, 1080, 1102], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 145, 160, 164, 731, 737, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874, 907, 920, 928, 946, 1143], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 231, 235, 277, 762, 987], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 62, 117, 143, 145, 175, 179, 183, 185, 216, 229, 243, 370, 377, 448, 475, 504, 505, 536, 548, 557, 675, 710, 711, 726, 727, 749, 764, 778, 822, 968, 970, 1076], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 202, 243, 323, 324, 364, 386, 686, 694, 794, 984, 986, 1105], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 68, 78, 175, 182, 205, 222, 235, 285, 301, 416, 419, 431, 469, 549, 566, 568, 749, 798, 820, 882, 884, 949, 969, 982, 1132], "late": [35, 143, 145, 268, 270, 710, 711, 884, 940, 984, 1001, 1018, 1133], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 469], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 283, 1089], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 62, 114, 142, 143, 144, 146, 148, 150, 153, 158, 159, 171, 173, 183, 185, 199, 228, 231, 259, 262, 265, 490, 504, 566, 568, 569, 778, 804, 875, 884, 895, 910, 957, 960, 966, 999, 1092], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 88, 131, 143, 145, 150, 158, 161, 166, 175, 235, 407, 434, 439, 444, 563, 565, 794, 810, 815, 936, 950, 1003, 1082, 1095, 1110, 1122], "mcomma": 35, "02a29": 35, "comma": [35, 36, 181, 194, 215, 295, 1084], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 199, 223, 295, 1025], "model": [35, 112, 246, 261, 267, 270, 406, 1007, 1079, 1082, 1101], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 63, 175, 918], "lazi": [35, 212, 218, 228, 231, 359, 706], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 145, 175, 204, 369, 551, 553, 557, 603, 604, 605, 655, 696, 697, 838, 1000, 1015, 1088], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 62, 63, 84, 106, 110, 111, 114, 118, 123, 125, 143, 145, 163, 202, 203, 212, 216, 218, 224, 225, 228, 231, 235, 259, 345, 351, 363, 364, 376, 422, 425, 429, 431, 434, 460, 473, 558, 612, 686, 697, 705, 707, 718, 737, 747, 749, 811, 813, 814, 815, 838, 843, 844, 845, 847, 863, 875, 883, 887, 923, 934, 936, 937, 946, 949, 953, 955, 958, 964, 968, 969, 970, 983, 1020, 1021, 1028, 1043, 1049, 1082, 1089, 1097, 1100, 1103, 1105, 1110, 1111, 1118], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 235], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 901], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 525], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 221, 235, 345, 407, 416, 431, 970], "smte": 35, "02aac": 35, "spar": [35, 261, 431], "02225": [35, 38], "parallel": [35, 38, 59, 62, 72, 73, 74, 78, 91, 149, 172, 175, 179, 181, 216, 271, 272, 293, 439, 719, 731, 768, 770, 778, 781, 814, 822, 923, 934, 937, 984, 986, 987, 1071, 1076, 1134, 1135, 1142, 1146], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 63, 163, 176, 186, 202, 208, 215, 218, 223, 225, 231, 235, 244, 256, 270, 277, 295, 457, 568, 978, 1027, 1030, 1097], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 219, 231, 277, 452, 469, 549, 974, 1013, 1022, 1028, 1119], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 908], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 822], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 112, 158, 208], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 995], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 63, 163, 164, 199, 212, 215, 216, 218, 225, 228, 231, 238, 241, 253, 277, 314, 362, 431, 561, 684, 768, 838, 940, 966, 984, 986], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 215], "00026": 36, "ampersand": [36, 660], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 469], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 405, 406, 675, 770, 783, 988, 1054, 1084], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 150, 756, 817], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 261, 431], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 448, 459, 490, 601, 884, 1001], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 235, 308], "ONE": [36, 648], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 364], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1004], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 115, 139, 186, 215, 235, 252, 357, 389, 425, 429, 434, 457, 480, 493, 496, 497, 501, 705, 707, 760, 774, 814, 882, 938, 954, 1033, 1132], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 212, 218, 228, 231], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 63, 153, 164, 219, 235, 287, 290, 409, 429, 496, 525, 756, 875, 885, 891, 952, 986], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 154, 195, 319, 628, 884, 949], "space": [36, 38, 63, 78, 99, 110, 111, 114, 139, 143, 144, 145, 150, 163, 166, 190, 204, 231, 249, 256, 258, 259, 277, 279, 280, 313, 324, 325, 333, 352, 371, 373, 392, 453, 458, 467, 471, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 556, 565, 600, 720, 730, 731, 739, 776, 791, 805, 806, 807, 808, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874, 883, 886, 887, 888, 889, 890, 897, 901, 902, 903, 904, 905, 913, 915, 920, 928, 929, 931, 932, 935, 937, 945, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 984, 987, 1021], "000ac": 36, "NOT": [36, 38, 173, 351, 390, 435, 474, 475, 488, 489, 749, 866, 1095], "num": [36, 148, 162, 163, 176, 186, 202, 216, 218, 223, 225, 231, 235, 253, 256, 295, 395, 580, 582, 664, 665, 666, 667, 676, 696, 866, 871, 979, 1084], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 231, 238, 241, 277, 283, 1089], "indic": [36, 194, 212, 218, 223, 228, 231, 267, 603, 739], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 235], "period": [36, 84, 120, 160, 183, 423, 556, 722, 788, 875, 883, 902, 912, 934, 936, 949, 1105], "0002e": 36, "full": [36, 161, 206, 210, 256, 368, 383, 411, 416, 519, 530, 565, 669, 706, 719, 817, 822, 883, 925, 931, 976, 995, 1028, 1084, 1092], "stop": [36, 137, 148, 204, 231, 268, 270, 272, 277, 295, 307, 434, 474, 488, 772, 875, 950, 975, 1098, 1117], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 163, 211, 214, 218, 225, 231, 239, 364, 803, 866, 867, 885, 1020], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 88, 143, 147, 148, 149, 158, 167, 180, 204, 229, 262, 265, 268, 340, 533, 551, 633, 718, 768, 770, 838, 881, 882, 898, 952, 953, 954, 956, 962, 968, 969, 970, 1110], "semi": [36, 263, 297, 461, 705, 920, 971], "0003b": 36, "semicolon": [36, 434, 1084], "shy": 36, "000ad": 36, "soft": [36, 140, 329, 776], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 61, 142, 144, 145, 154, 173, 175, 195, 204, 205, 231, 371, 419, 425, 429, 435, 551, 557, 566, 568, 569, 647, 655, 658, 662, 696, 697, 707, 770, 778, 817, 838, 928, 984, 1095, 1110], "hmm": [37, 140, 149, 162, 173, 536, 669, 949], "annoi": [37, 43, 308, 431, 647, 1110], "thing": [37, 40, 42, 43, 49, 100, 136, 142, 143, 145, 146, 147, 148, 149, 150, 154, 163, 167, 171, 174, 175, 179, 183, 195, 212, 218, 219, 221, 228, 231, 241, 294, 311, 369, 385, 389, 413, 419, 422, 429, 453, 457, 525, 532, 533, 549, 551, 558, 563, 565, 587, 647, 669, 686, 710, 719, 729, 737, 742, 774, 778, 803, 817, 822, 871, 875, 876, 903, 908, 931, 936, 952, 964, 968, 969, 975, 989, 1003, 1026, 1117, 1135], "thin": [37, 38], "border": 37, "anfrag": [37, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "dauer": [37, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "tage": [37, 168, 170, 178, 339, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1141, 1143, 1144, 1146, 1147, 1148], "sysprog": [37, 139, 140, 259, 341, 731, 785, 790, 874, 915, 916, 919, 1143, 1144, 1146, 1147], "catcher": 37, "somehow": [37, 42, 117, 120, 122, 127, 144, 297, 563, 786, 1105, 1106], "einf\u00fchrungskur": [37, 1126, 1143, 1144, 1146, 1147], "richtet": [37, 1128, 1143], "kennen": [37, 323, 1143], "lernen": [37, 1143], "zusammenh\u00e4ng": [37, 1143], "grundpfeil": [37, 1143], "erkl\u00e4rt": [37, 163, 166, 170, 1127, 1143, 1147, 1148], "bild": [37, 166, 1143], "orientieren": [37, 1143], "zurechtfinden": [37, 323, 1143], "somedai": 37, "better": [37, 57, 61, 65, 122, 137, 139, 140, 144, 148, 154, 155, 165, 175, 176, 178, 179, 181, 182, 183, 186, 187, 200, 204, 210, 212, 213, 215, 216, 221, 222, 223, 225, 226, 229, 232, 235, 240, 244, 252, 259, 272, 276, 282, 348, 360, 368, 375, 384, 389, 390, 391, 397, 401, 404, 408, 409, 417, 419, 421, 426, 427, 430, 434, 439, 440, 445, 447, 525, 552, 560, 574, 587, 604, 627, 639, 642, 647, 649, 687, 699, 710, 728, 730, 731, 778, 857, 883, 884, 904, 920, 923, 949, 950, 978, 989, 1007, 1021, 1033, 1072, 1073, 1076, 1081, 1083, 1088, 1094, 1110, 1119], "yet": [37, 78, 133, 143, 150, 153, 163, 165, 232, 233, 243, 256, 294, 386, 419, 447, 456, 469, 471, 506, 507, 519, 525, 618, 721, 778, 795, 805, 806, 883, 891, 895, 949, 976, 1006, 1033, 1100, 1110, 1119], "redefin": 37, "wrap": [37, 63, 202, 240, 294, 468, 707, 713, 778, 1101], "look": [37, 42, 43, 45, 59, 62, 65, 82, 89, 102, 114, 116, 123, 136, 137, 142, 143, 144, 145, 146, 148, 150, 153, 158, 163, 171, 175, 179, 182, 194, 200, 204, 229, 259, 262, 265, 268, 269, 287, 290, 294, 307, 340, 403, 411, 419, 425, 429, 431, 434, 435, 442, 490, 505, 506, 519, 536, 562, 574, 586, 638, 651, 675, 707, 713, 714, 732, 737, 747, 774, 778, 805, 806, 810, 814, 817, 828, 830, 835, 842, 850, 865, 876, 882, 883, 891, 908, 918, 945, 946, 969, 973, 983, 1000, 1003, 1041, 1045, 1054, 1076, 1083, 1084, 1095, 1112, 1130, 1133], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 63, 78, 94, 128, 143, 148, 160, 173, 195, 290, 294, 297, 319, 340, 415, 418, 425, 506, 583, 586, 654, 695, 816, 876, 883, 895, 920, 1083], "approx": [38, 1064, 1110], "approxeq": 38, "assign": [38, 97, 163, 164, 165, 170, 176, 186, 193, 201, 212, 215, 218, 221, 223, 227, 228, 233, 235, 239, 263, 267, 268, 270, 295, 322, 328, 329, 351, 368, 374, 375, 384, 391, 397, 398, 401, 404, 408, 413, 415, 417, 421, 426, 427, 461, 468, 474, 475, 483, 488, 489, 551, 552, 555, 562, 618, 627, 634, 644, 648, 649, 651, 655, 662, 685, 687, 692, 701, 707, 727, 728, 730, 731, 882, 884, 923, 934, 937, 939, 1016, 1027, 1098, 1100], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 364, 862, 1020], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 199, 207, 223, 295, 407, 724, 1025, 1131], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 267, 353], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 115, 145, 311, 359, 375, 384, 389, 391, 397, 401, 404, 408, 413, 417, 421, 426, 427, 454, 471, 649, 687, 728, 730, 731, 1095], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1110], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 145, 1083], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 85, 97, 107, 114, 143, 144, 145, 146, 162, 165, 173, 176, 181, 186, 191, 193, 199, 202, 205, 208, 209, 213, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 259, 263, 272, 273, 276, 277, 283, 291, 295, 314, 316, 317, 322, 345, 352, 353, 355, 359, 386, 390, 419, 429, 431, 445, 452, 457, 551, 557, 564, 618, 619, 624, 625, 627, 631, 657, 694, 706, 707, 719, 721, 751, 772, 786, 802, 805, 806, 815, 817, 821, 822, 835, 838, 839, 860, 864, 866, 871, 877, 882, 883, 884, 896, 901, 949, 952, 974, 976, 1002, 1008, 1013, 1015, 1016, 1020, 1021, 1024, 1044], "caylei": 38, "0212d": 38, "letter": [38, 65, 362, 1006], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 222, 283], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 97, 123, 139, 179, 248, 252, 330, 407, 416, 447, 448, 449, 451, 452, 454, 456, 469, 471, 472, 490, 503, 504, 505, 506, 507, 566, 567, 568, 569, 658, 659, 696, 705, 706, 725, 726, 727, 729, 1111, 1118, 1133, 1148], "coloneq": 38, "complement": [38, 106, 368], "02201": 38, "complex": [38, 69, 143, 154, 158, 175, 181, 201, 218, 223, 225, 231, 235, 239, 241, 256, 263, 277, 322, 343, 386, 398, 413, 722, 882, 883, 907, 923, 946, 1007, 1016, 1123, 1133], "02102": 38, "02261": 38, "ident": [38, 227, 277, 289, 542, 995, 997, 1016], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 419, 469], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 175, 814, 882, 883, 1081, 1083], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 553], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1027], "02200": 38, "FOR": [38, 154, 176, 183], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 204, 212, 218, 221, 222, 223, 228, 231, 235, 273, 294, 351, 359, 360, 365, 375, 379, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 492, 599, 649, 660, 687, 697, 699, 728, 730, 731], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 97, 114, 121, 123, 145, 150, 166, 169, 171, 176, 182, 186, 191, 204, 205, 212, 215, 216, 223, 225, 235, 248, 259, 270, 303, 344, 345, 347, 351, 353, 355, 363, 386, 387, 389, 395, 402, 410, 412, 416, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 454, 456, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 526, 532, 533, 535, 536, 539, 542, 544, 549, 550, 551, 552, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 627, 636, 637, 638, 639, 640, 641, 642, 643, 652, 654, 657, 658, 659, 675, 676, 679, 690, 693, 696, 697, 701, 705, 706, 707, 708, 710, 719, 721, 725, 726, 727, 729, 737, 742, 746, 747, 749, 756, 758, 760, 762, 764, 766, 770, 772, 774, 783, 788, 791, 792, 795, 797, 798, 804, 815, 822, 835, 838, 860, 866, 876, 878, 882, 898, 900, 901, 902, 904, 905, 907, 908, 909, 910, 911, 914, 916, 919, 933, 936, 940, 942, 944, 945, 949, 950, 952, 953, 954, 955, 960, 964, 967, 968, 970, 1013, 1028, 1105, 1112, 1117, 1119, 1122], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 711, 1105], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 475], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 203, 216, 235, 1103], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 190, 294, 490, 503, 776, 838, 857, 875, 975], "corner": [38, 204, 267, 340, 352, 432, 444, 503, 719], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 176, 199, 223, 225, 231, 241, 256, 263, 277, 307, 316, 345, 349, 365, 389, 937, 1037], "lower": [38, 145, 199, 212, 218, 223, 228, 231, 235, 241, 256, 277, 307, 316, 345, 349, 365, 389, 449, 593, 938, 946, 995, 1100], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 97, 118, 123, 145, 235, 268, 272, 294, 415, 422, 468, 472, 494, 495, 496, 497, 498, 499, 500, 501, 505, 506, 547, 625, 731, 737, 804, 813, 904, 945, 969, 1081, 1083], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 145, 273], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 212, 218, 221, 222, 228, 231, 253, 261, 277, 345, 368, 457, 542, 566, 875, 946, 1021, 1084, 1134, 1141], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 163, 447, 474, 488, 658, 823, 825, 826, 908, 1017], "nor": [38, 163, 219, 474, 488, 558, 658, 823, 825, 826, 875, 895, 908, 1017], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 61, 145, 148, 153, 158, 175, 202, 212, 218, 221, 228, 231, 235, 262, 265, 267, 297, 325, 449, 459, 618, 625, 647, 705, 737, 875, 883, 907, 950, 973, 989, 998, 1031, 1079, 1081, 1083, 1102, 1117], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 269, 756, 1080], "differenti": [38, 69, 641, 709, 778, 823, 882, 1007, 1075, 1089], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 114, 183, 235, 389, 395, 549, 567, 568, 582, 710, 815, 838, 870, 945, 1105], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 73, 115, 120, 121, 122, 134, 150, 153, 158, 161, 163, 179, 200, 213, 218, 219, 226, 228, 231, 235, 240, 243, 253, 261, 267, 276, 282, 294, 308, 369, 418, 425, 439, 445, 451, 468, 490, 498, 499, 500, 501, 502, 506, 548, 549, 554, 669, 684, 702, 705, 739, 778, 815, 816, 838, 875, 883, 895, 936, 1022, 1076, 1079, 1081, 1111, 1130, 1133], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 203, 216, 549, 551, 559, 560, 568, 654, 669, 670, 671, 672, 673, 710, 1103], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 215, 1033], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 273], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 133, 143], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 85, 108, 110, 111, 146, 164, 195, 251, 374, 385, 390, 407, 415, 446, 455, 467, 481, 495, 547, 582, 621, 699, 731, 760, 818, 820, 822, 838, 860, 871, 908, 909, 911, 958, 1011, 1026, 1042, 1095, 1130], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 235], "varsubsetneq": 38, "variant": [38, 187, 203, 216, 246, 247, 248, 303, 345, 361, 478, 542, 695, 699, 701, 724, 756, 1103, 1137, 1140], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 127, 148, 158, 179, 204, 342, 422, 500, 652, 749, 764, 817], "author": [39, 146, 153, 231, 565, 751, 882, 1031, 1085], "overridden": [39, 368, 619, 686, 1110], "titl": [39, 40, 139, 149, 213, 226, 231, 240, 243, 276, 277, 282, 992, 1076, 1081], "favorit": [39, 175, 179, 182, 200, 204, 226, 229, 308, 778, 884, 936, 1000, 1076], "__": [39, 160, 162, 170, 277, 700, 704, 996], "ref": [39, 114, 158, 247, 248, 647, 662, 706, 726], "uniqu": [39, 158, 205, 247, 248, 250, 303, 506, 525, 707, 719, 726, 728, 730, 731, 884, 898, 912, 971, 1024, 1028, 1098], "across": [39, 43, 143, 150, 160, 212, 218, 228, 231, 261, 270, 294, 340, 368, 388, 412, 447, 452, 471, 534, 710, 721, 729, 805, 806, 817, 835, 882, 884, 904, 912, 946, 1007, 1018, 1085], "tree": [39, 42, 100, 102, 114, 133, 135, 144, 146, 149, 154, 158, 171, 172, 179, 203, 216, 219, 222, 226, 259, 287, 290, 398, 420, 425, 437, 469, 504, 506, 603, 606, 731, 753, 756, 770, 780, 803, 805, 806, 808, 822, 838, 839, 846, 850, 852, 858, 867, 874, 883, 888, 890, 895, 915, 923, 932, 955, 960, 980, 992, 1083, 1101, 1103, 1110, 1112], "_dummi": 39, "dummi": [39, 149, 328, 329, 758, 797, 1117], "One": [39, 43, 59, 62, 63, 76, 80, 82, 97, 106, 123, 143, 145, 154, 171, 182, 203, 221, 242, 243, 268, 308, 322, 333, 349, 389, 402, 411, 414, 423, 425, 430, 436, 441, 447, 506, 525, 533, 548, 567, 572, 582, 587, 652, 686, 711, 721, 778, 783, 809, 811, 814, 822, 838, 882, 883, 884, 908, 920, 925, 936, 937, 945, 950, 955, 987, 1011, 1084, 1085, 1089, 1094, 1132, 1146], "a_footnot": 39, "footer": 39, "block": [39, 98, 110, 111, 142, 143, 144, 145, 183, 185, 203, 210, 212, 216, 218, 228, 231, 240, 243, 252, 273, 276, 294, 307, 322, 327, 331, 345, 347, 365, 384, 390, 391, 397, 401, 404, 408, 416, 417, 419, 421, 426, 427, 454, 554, 557, 649, 675, 687, 706, 717, 718, 719, 720, 721, 728, 729, 730, 731, 764, 780, 790, 794, 808, 809, 811, 812, 814, 815, 860, 874, 883, 907, 914, 915, 920, 925, 929, 930, 935, 937, 945, 946, 949, 951, 973, 975, 1001, 1004, 1011, 1014, 1076], "rubric": 39, "nbsphinx": 40, "capabl": [40, 78, 143, 144, 150, 716, 778, 804, 867, 875, 883, 936, 1102, 1133], "nice": [40, 140, 143, 160, 183, 205, 270, 424, 425, 445, 493, 560, 647, 797, 804, 877, 883, 934, 997, 1033, 1081, 1083, 1092, 1098, 1113], "few": [40, 143, 144, 145, 146, 149, 150, 175, 179, 212, 343, 413, 664, 778, 816, 975, 979, 1111, 1135], "keep": [40, 43, 110, 111, 144, 145, 158, 167, 179, 182, 186, 202, 235, 308, 333, 357, 413, 419, 420, 629, 669, 770, 778, 783, 802, 817, 820, 876, 928, 964, 967, 987, 1004, 1081, 1082, 1130], "mind": [40, 117, 143, 144, 346, 713, 1004], "though": [40, 43, 45, 53, 68, 142, 143, 148, 150, 153, 154, 158, 159, 164, 171, 175, 179, 181, 182, 200, 203, 205, 216, 218, 219, 221, 226, 229, 243, 252, 261, 262, 265, 276, 297, 308, 349, 359, 368, 380, 385, 447, 448, 449, 452, 461, 469, 471, 504, 505, 506, 525, 549, 551, 552, 556, 559, 562, 565, 566, 568, 569, 582, 583, 618, 625, 647, 655, 657, 664, 669, 675, 692, 696, 701, 706, 707, 710, 717, 732, 733, 737, 756, 770, 809, 816, 817, 820, 823, 857, 871, 875, 882, 883, 884, 894, 902, 904, 931, 936, 938, 940, 946, 955, 973, 975, 976, 979, 984, 986, 993, 995, 1003, 1007, 1020, 1045, 1076, 1083, 1084, 1097, 1105, 1106, 1110, 1112, 1130, 1133], "toplevel": [40, 44, 109, 114, 123, 171, 204, 253, 433, 435, 439, 440, 441, 443, 490, 751, 779, 804, 973, 1119], "begin": [40, 42, 43, 112, 118, 119, 122, 123, 125, 142, 143, 153, 181, 202, 203, 215, 218, 231, 235, 247, 248, 252, 269, 277, 339, 345, 353, 365, 368, 389, 395, 412, 413, 415, 445, 452, 542, 552, 565, 578, 580, 582, 583, 584, 586, 587, 589, 590, 591, 593, 594, 595, 596, 600, 603, 614, 647, 662, 675, 678, 682, 689, 695, 696, 699, 713, 731, 804, 838, 862, 870, 896, 904, 980, 1004, 1026, 1076, 1111], "deeper": [40, 144, 175, 262, 265, 434, 931], "trail": [40, 147, 231, 273, 277, 295, 313, 314], "underscor": [40, 362, 976, 983, 996, 1006], "ipynb": [40, 162, 182, 192, 194, 231, 241, 262, 266, 272, 276, 282, 287, 290, 294, 298, 1078, 1082], "labels_": [40, 164, 166], "result": [40, 78, 115, 117, 122, 136, 145, 154, 160, 162, 182, 186, 202, 212, 218, 221, 228, 231, 235, 244, 253, 273, 277, 352, 368, 403, 410, 412, 413, 419, 449, 474, 478, 565, 593, 654, 660, 669, 697, 749, 894, 940, 968, 980, 995, 1009, 1015, 1027, 1084], "cluster": [40, 166, 1078, 1083], "membership": [40, 164, 181, 182, 224, 461, 1008, 1025], "sequenc": [40, 106, 109, 136, 163, 164, 166, 176, 182, 203, 205, 214, 216, 217, 218, 221, 224, 228, 231, 235, 253, 268, 270, 277, 283, 344, 398, 449, 495, 510, 511, 512, 547, 592, 611, 615, 631, 644, 652, 699, 731, 937, 980, 981, 982, 998, 1007, 1008, 1013, 1015, 1018, 1022, 1023, 1046, 1058, 1089, 1103, 1133], "bring": [40, 45, 112, 117, 123, 136, 143, 145, 153, 154, 175, 179, 182, 185, 221, 259, 262, 265, 268, 270, 294, 297, 330, 335, 336, 340, 525, 564, 603, 627, 638, 646, 774, 778, 790, 882, 883, 884, 953, 1000, 1048, 1071, 1089, 1130, 1133], "bigplan": [40, 166, 1078], "686": [40, 164, 218, 966], "unknown": [40, 261, 431, 734, 883, 989], "cmd": [40, 149, 772, 797, 1112], "color": [40, 148, 166, 860, 1078, 1105], "tmp": [40, 125, 139, 144, 146, 149, 186, 199, 202, 218, 223, 231, 235, 238, 241, 243, 248, 250, 253, 256, 263, 273, 277, 283, 354, 396, 419, 432, 437, 438, 445, 506, 507, 627, 704, 756, 778, 800, 804, 809, 818, 822, 823, 836, 837, 838, 840, 842, 843, 845, 847, 850, 857, 860, 861, 866, 887, 894, 905, 906, 908, 909, 911, 936, 942, 973, 974, 975, 980, 988, 989, 995, 996, 1017, 1018, 1022, 1026, 1032, 1088, 1097, 1098, 1111, 1112], "craft": [41, 46, 47, 51, 53, 55, 56, 229, 271, 272, 429, 474, 711, 731, 732], "tar": [42, 61, 109, 114, 130, 139, 154, 183, 185, 249, 258, 259, 279, 280, 425, 731, 778, 800, 801, 803, 808, 874, 960, 962, 963, 964, 966, 967, 973, 1031, 1112, 1136], "xz": [42, 61, 146, 154, 259, 418, 960, 964, 966, 967], "push": [42, 77, 125, 147, 149, 158, 161, 204, 219, 229, 286, 302, 328, 390, 435, 436, 447, 471, 719, 731, 778, 920, 938, 1051, 1055, 1110], "cmakelist": [42, 44, 112, 114, 123, 169, 170, 171, 172, 173, 204, 221, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 490, 503, 504, 505, 506, 507, 526, 529, 532, 533, 535, 538, 541, 544, 638, 941, 944, 948, 953, 954, 1116, 1119, 1121], "src": [42, 143, 144, 146, 204, 218, 248, 250, 256, 328, 357, 369, 419, 443, 444, 454, 490, 493, 503, 504, 505, 506, 508, 567, 584, 705, 706, 804, 822, 866, 1026, 1031, 1110], "load": [42, 43, 53, 56, 63, 75, 88, 142, 153, 154, 161, 162, 166, 182, 190, 191, 207, 208, 212, 218, 228, 231, 235, 238, 244, 253, 270, 271, 272, 288, 291, 293, 294, 405, 425, 437, 720, 730, 731, 734, 735, 737, 738, 740, 743, 745, 746, 748, 753, 755, 758, 759, 763, 769, 772, 774, 775, 778, 780, 782, 787, 790, 793, 796, 799, 814, 874, 883, 884, 915, 923, 929, 952, 969, 1076, 1094, 1135, 1144, 1146], "store": [42, 57, 63, 75, 88, 106, 116, 142, 144, 161, 163, 171, 172, 202, 205, 212, 270, 271, 272, 293, 294, 353, 405, 449, 631, 675, 689, 692, 699, 720, 730, 731, 744, 778, 817, 830, 874, 891, 915, 923, 929, 953, 971, 975, 976, 980, 1024, 1054, 1088, 1105, 1146], "search": [42, 51, 53, 106, 136, 138, 139, 143, 164, 167, 173, 175, 181, 182, 191, 202, 203, 205, 208, 212, 215, 216, 218, 221, 222, 223, 226, 228, 231, 244, 253, 256, 260, 263, 268, 273, 277, 283, 285, 301, 389, 416, 419, 431, 495, 506, 508, 512, 547, 592, 597, 611, 615, 632, 644, 731, 756, 820, 838, 870, 931, 953, 966, 983, 1012, 1082, 1103, 1110, 1132], "payload": [42, 739, 766, 876, 878], "primari": [42, 143, 154, 175, 261, 262, 265, 423, 776, 805, 806, 813, 815, 1054], "insert": [42, 63, 109, 112, 137, 142, 158, 162, 179, 181, 186, 216, 218, 221, 223, 225, 231, 235, 238, 256, 277, 283, 295, 322, 386, 403, 407, 423, 450, 456, 478, 484, 495, 512, 513, 514, 525, 542, 547, 583, 584, 597, 607, 608, 632, 640, 641, 642, 644, 651, 658, 660, 675, 696, 727, 729, 731, 756, 762, 772, 774, 778, 838, 882, 895, 926, 936, 1008, 1023, 1024, 1032, 1088, 1110], "const": [42, 58, 70, 97, 107, 109, 110, 111, 114, 116, 170, 205, 221, 268, 270, 303, 357, 365, 369, 387, 389, 395, 403, 415, 417, 419, 421, 426, 427, 432, 448, 450, 451, 452, 454, 456, 471, 472, 478, 479, 480, 483, 484, 485, 487, 488, 489, 495, 499, 503, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 521, 523, 524, 525, 533, 538, 540, 542, 547, 549, 550, 551, 552, 554, 556, 557, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 576, 582, 586, 588, 589, 590, 591, 592, 598, 602, 604, 607, 608, 611, 614, 615, 618, 621, 622, 625, 627, 628, 629, 632, 633, 636, 637, 639, 640, 641, 642, 643, 644, 651, 653, 654, 655, 656, 657, 658, 659, 660, 669, 670, 671, 672, 673, 675, 677, 678, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 694, 695, 697, 699, 703, 705, 706, 707, 708, 709, 712, 720, 721, 725, 726, 727, 728, 729, 730, 731, 734, 737, 742, 758, 760, 764, 772, 774, 788, 792, 798, 896, 904, 908, 909, 910, 911, 914, 916, 919, 921, 923, 925, 933, 939, 942, 945, 946, 950, 970, 988, 1064, 1087, 1122, 1128, 1129], "care": [42, 46, 48, 80, 123, 142, 143, 145, 148, 150, 175, 183, 215, 313, 345, 368, 377, 379, 395, 419, 420, 443, 474, 475, 550, 564, 582, 625, 696, 697, 701, 710, 725, 732, 756, 768, 770, 778, 783, 804, 805, 806, 883, 891, 895, 907, 920, 928, 954, 976, 1000, 1004, 1016, 1023, 1026, 1027, 1033, 1056, 1080, 1088, 1101, 1112], "dump": [42, 143, 162, 191, 207, 208, 218, 231, 235, 238, 244, 253, 288, 291, 294, 454, 473, 474, 557, 562, 685, 705, 816, 949, 950], "db": [42, 50, 153, 179, 204, 205, 206, 210, 216, 229, 244, 435, 449, 450, 456, 478, 484, 639, 640, 641, 642, 643, 711, 1032], "pull": [42, 44, 50, 63, 77, 114, 147, 158, 195, 204, 205, 219, 307, 330, 431, 435, 447, 564, 751, 778, 980, 983, 1100], "paramet": [42, 58, 63, 110, 111, 116, 120, 142, 145, 150, 160, 163, 170, 171, 175, 180, 181, 182, 184, 186, 194, 195, 199, 202, 203, 204, 205, 212, 216, 218, 221, 222, 224, 227, 228, 231, 238, 241, 262, 263, 265, 267, 308, 313, 322, 344, 353, 355, 359, 370, 374, 389, 390, 395, 397, 398, 401, 404, 408, 409, 415, 417, 421, 426, 427, 430, 432, 437, 493, 503, 509, 525, 539, 549, 551, 554, 558, 561, 562, 565, 569, 574, 575, 629, 635, 649, 652, 659, 675, 687, 689, 694, 707, 719, 728, 730, 731, 736, 737, 744, 758, 781, 786, 791, 794, 797, 798, 818, 820, 883, 898, 921, 931, 946, 954, 967, 971, 976, 990, 993, 998, 1005, 1021, 1028, 1033, 1043, 1049, 1051, 1055, 1061, 1070, 1081, 1084, 1087, 1094, 1097, 1098, 1100, 1103, 1126, 1127], "entri": [42, 117, 123, 140, 144, 145, 149, 207, 218, 344, 444, 460, 603, 605, 625, 766, 804, 817, 821, 822, 823, 860, 866, 898, 904, 918, 969, 976, 1024, 1087, 1119], "o_creat": [42, 731, 874, 904, 905, 909, 913, 915, 932, 945], "o_trunc": [42, 48, 904], "o_wronli": [42, 731, 874, 904, 905, 907, 908, 909, 913, 914, 915, 916, 919, 932, 945], "0666": [42, 837, 908, 909, 945], "assert": [42, 46, 123, 179, 203, 216, 228, 231, 245, 261, 294, 296, 431, 454, 596, 637, 640, 642, 648, 721, 902, 914, 916, 919, 945, 949, 950, 988, 1064, 1071, 1072, 1073, 1103, 1110, 1116, 1117, 1119, 1127], "ing": [42, 910], "mode": [42, 101, 114, 146, 158, 160, 195, 203, 212, 215, 216, 218, 228, 231, 235, 238, 256, 259, 263, 277, 280, 294, 419, 495, 547, 720, 730, 731, 737, 770, 776, 804, 805, 806, 808, 811, 812, 815, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 874, 877, 884, 898, 903, 904, 905, 913, 915, 929, 932, 935, 937, 945, 946, 1001, 1003, 1103, 1105], "binaryus": 42, "hton": [42, 901], "arpa": [42, 901], "inet": [42, 160, 901], "again": [42, 99, 114, 142, 143, 145, 148, 150, 154, 158, 159, 171, 175, 179, 181, 182, 183, 195, 204, 229, 234, 243, 249, 252, 258, 259, 276, 279, 282, 322, 323, 324, 327, 328, 333, 340, 341, 390, 431, 453, 457, 467, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 542, 547, 549, 551, 564, 565, 569, 579, 658, 669, 711, 719, 720, 726, 729, 730, 731, 798, 801, 805, 806, 807, 808, 811, 812, 819, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 868, 874, 884, 891, 894, 897, 899, 901, 902, 903, 905, 910, 913, 915, 916, 925, 929, 931, 932, 935, 937, 946, 954, 956, 957, 958, 959, 960, 961, 962, 963, 973, 993, 998, 1016, 1021, 1026, 1076, 1094, 1097, 1130], "od": [42, 231], "hardwir": [42, 63, 739, 900, 993], "enter": [42, 110, 111, 176, 183, 212, 217, 218, 228, 231, 240, 241, 243, 244, 261, 294, 295, 307, 322, 327, 347, 542, 565, 624, 658, 664, 675, 707, 756, 778, 794, 811, 834, 936, 937, 1011, 1063], "joerg": [42, 50, 125, 162, 176, 177, 179, 180, 182, 184, 191, 195, 199, 202, 208, 215, 218, 221, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 270, 272, 273, 277, 283, 288, 295, 316, 319, 414, 441, 449, 456, 490, 506, 508, 524, 562, 596, 608, 627, 637, 638, 639, 640, 642, 659, 805, 806, 813, 815, 820, 834, 850, 863, 869, 894, 931, 989, 990, 992, 993, 994, 996, 997, 1005, 1027, 1031, 1054, 1071, 1084, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "huber": [42, 225, 231, 1084], "caro": [42, 215, 225, 228, 235, 238, 241, 244, 253, 256, 263, 277, 295, 449, 456, 508, 524, 596, 608, 640, 642, 992, 994, 1014, 1065, 1067, 1071, 1073, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "johanna": [42, 215, 225, 228, 235, 238, 256, 263, 277, 295, 449, 508, 524, 596, 608, 1014, 1065, 1067, 1071, 1073, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "bodi": [42, 50, 55, 110, 111, 149, 344, 345, 347, 351, 380, 390, 419, 509, 542, 551, 552, 556, 559, 629, 647, 648, 651, 710, 980, 1111], "compil": [42, 43, 65, 103, 104, 108, 110, 111, 114, 144, 145, 154, 163, 170, 171, 172, 191, 205, 208, 221, 228, 244, 253, 256, 259, 260, 268, 277, 283, 285, 301, 330, 342, 355, 364, 365, 374, 377, 379, 386, 387, 396, 398, 405, 408, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 426, 427, 431, 435, 438, 440, 443, 444, 447, 453, 467, 469, 474, 475, 488, 489, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 533, 539, 542, 547, 549, 552, 554, 558, 560, 564, 575, 603, 622, 629, 634, 636, 647, 648, 649, 650, 652, 654, 655, 657, 658, 660, 662, 664, 669, 672, 675, 684, 685, 687, 693, 696, 697, 699, 701, 705, 706, 728, 730, 731, 746, 747, 762, 874, 882, 953, 954, 957, 958, 959, 960, 962, 976, 1001, 1006, 1018, 1020, 1117, 1119, 1127, 1128, 1130, 1131, 1132, 1143], "still": [42, 54, 61, 131, 137, 142, 143, 144, 145, 153, 154, 163, 164, 165, 205, 215, 221, 259, 261, 313, 333, 342, 393, 405, 431, 434, 440, 493, 515, 536, 539, 557, 558, 579, 585, 618, 633, 658, 675, 692, 696, 701, 705, 706, 708, 709, 710, 741, 746, 778, 781, 821, 835, 857, 882, 883, 884, 934, 936, 938, 949, 971, 979, 982, 988, 1001, 1004, 1007, 1031, 1067, 1090, 1098, 1119, 1127], "funni": [42, 44, 50, 100, 114, 175, 259, 452, 731, 808, 846, 852, 858, 874, 953], "temp": [42, 44, 231, 331, 705, 706, 707], "got": [42, 45, 143, 153, 205, 277, 389, 661, 904, 977], "overwritten": [42, 47, 53, 55, 56, 584, 731, 905, 983], "suspect": [42, 145, 147], "inmem": 42, "loos": [42, 43, 179, 195, 343, 368, 415, 768], "foolishli": 42, "main": [42, 50, 63, 107, 136, 145, 148, 149, 154, 182, 204, 216, 228, 229, 231, 248, 259, 267, 270, 272, 285, 287, 290, 294, 301, 322, 342, 344, 345, 347, 351, 353, 355, 356, 370, 385, 386, 387, 389, 393, 405, 412, 416, 419, 420, 423, 425, 431, 432, 434, 438, 454, 468, 473, 474, 475, 490, 491, 493, 501, 503, 505, 506, 525, 533, 536, 539, 553, 557, 558, 560, 562, 564, 565, 567, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 631, 636, 637, 638, 639, 640, 641, 642, 643, 647, 652, 662, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 685, 689, 691, 692, 694, 697, 699, 705, 706, 708, 709, 710, 711, 714, 719, 721, 729, 739, 746, 747, 749, 778, 815, 817, 835, 882, 884, 885, 898, 900, 901, 902, 908, 909, 910, 911, 916, 919, 920, 922, 926, 931, 933, 936, 937, 942, 945, 946, 949, 952, 960, 964, 970, 984, 987, 1002, 1066, 1068, 1117, 1122, 1135], "chang": [42, 45, 77, 80, 114, 121, 142, 145, 147, 148, 149, 150, 153, 154, 158, 166, 179, 195, 204, 235, 243, 329, 368, 405, 407, 411, 414, 415, 419, 429, 432, 447, 492, 498, 503, 504, 506, 507, 558, 583, 640, 694, 719, 729, 751, 756, 804, 813, 815, 817, 835, 844, 847, 862, 875, 877, 882, 883, 894, 898, 919, 949, 952, 967, 983, 1007, 1016, 1055, 1066, 1068, 1071, 1094, 1098, 1113, 1130], "errorhandl": 42, "just": [42, 46, 63, 69, 84, 108, 118, 133, 142, 143, 144, 145, 146, 147, 149, 150, 154, 158, 165, 167, 171, 175, 182, 205, 216, 219, 244, 285, 294, 301, 310, 351, 370, 395, 398, 407, 425, 429, 434, 444, 449, 490, 493, 503, 505, 506, 507, 530, 549, 550, 551, 557, 560, 561, 562, 565, 584, 612, 619, 625, 629, 633, 647, 654, 658, 660, 661, 675, 690, 693, 707, 709, 711, 729, 736, 741, 749, 751, 758, 762, 768, 770, 778, 794, 817, 838, 841, 842, 871, 875, 883, 884, 899, 901, 902, 908, 909, 911, 920, 921, 931, 938, 946, 964, 971, 974, 975, 978, 980, 998, 999, 1005, 1006, 1007, 1014, 1018, 1026, 1027, 1081, 1082, 1089, 1094, 1095, 1099, 1100, 1106, 1110, 1122, 1132], "silent": [42, 65, 225, 235, 651, 882], "truncat": [42, 231, 277, 345, 366, 468, 820, 904, 1026], "faschingb": 42, "echo": [42, 144, 195, 231, 259, 308, 506, 631, 751, 760, 778, 805, 806, 809, 810, 818, 822, 832, 841, 844, 848, 857, 875, 877, 882, 883, 884, 885, 905, 907, 916, 918, 919, 931, 934, 940, 949, 1112], "success": [42, 172, 212, 218, 228, 231, 406, 435, 664, 717, 756, 760, 850, 1042], "failur": [42, 43, 212, 218, 228, 231, 243, 248, 277, 307, 415, 425, 431, 445, 503, 507, 1110, 1111, 1118, 1119, 1122], "renam": [42, 50, 57, 63, 66, 99, 112, 114, 123, 136, 202, 249, 258, 259, 279, 280, 542, 694, 731, 746, 747, 808, 845, 858, 874, 970, 1088], "most": [43, 44, 57, 59, 62, 65, 87, 112, 139, 142, 143, 145, 146, 149, 154, 165, 167, 173, 175, 179, 181, 203, 212, 215, 218, 219, 228, 229, 231, 235, 241, 261, 263, 277, 297, 307, 343, 351, 380, 383, 390, 405, 407, 413, 418, 419, 423, 424, 434, 448, 461, 504, 564, 565, 603, 655, 699, 704, 707, 713, 756, 764, 778, 783, 803, 805, 806, 809, 816, 840, 871, 875, 882, 884, 896, 904, 910, 923, 938, 946, 949, 950, 952, 973, 974, 975, 980, 987, 988, 989, 995, 996, 1004, 1006, 1007, 1008, 1011, 1014, 1017, 1018, 1022, 1024, 1027, 1028, 1033, 1075, 1076, 1085, 1089, 1093, 1097, 1098, 1104, 1106, 1110, 1111, 1117, 1132, 1133, 1135], "somebodi": [43, 150, 158, 171, 205, 357, 414, 435, 533, 557, 609, 669, 675, 686, 717, 768, 786, 940], "concis": [43, 142, 175, 179, 229, 323, 324, 434, 778, 1076], "longer": [43, 158, 940, 1001, 1130], "necessari": [43, 61, 136, 144, 150, 154, 163, 172, 186, 202, 205, 262, 265, 297, 347, 357, 389, 429, 431, 435, 447, 493, 552, 556, 624, 650, 651, 685, 695, 707, 719, 774, 778, 813, 882, 884, 885, 900, 938, 949, 969, 996, 1003, 1007, 1031, 1088, 1110], "gosh": [43, 139, 368, 413, 415, 609, 692, 928, 973, 974, 980, 1007], "hungarian": [43, 409], "notat": [43, 170, 210, 226, 231, 236, 277, 409, 722, 883, 989], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 205, 207, 221, 229, 276, 287, 290, 632, 640, 641, 642, 644, 731, 1065, 1066, 1067, 1068, 1073], "bolt": [43, 205], "onto": [43, 59, 62, 112, 117, 153, 164, 205, 221, 294, 471, 553, 630, 644, 707, 731, 778, 863, 875, 883, 902, 934, 957, 964], "unclear": [43, 496, 950], "semant": [43, 49, 81, 143, 167, 247, 248, 250, 268, 400, 414, 415, 469, 550, 603, 609, 648, 655, 687, 703, 706, 707, 708, 709, 712, 720, 728, 730, 731, 737, 742, 770, 949, 950, 1007, 1085, 1130], "backingstor": [43, 53, 56, 731], "mangl": [43, 202, 203, 216, 233, 1001, 1103], "prefix": [43, 61, 139, 154, 212, 216, 218, 228, 231, 277, 315, 561, 591, 647, 778, 964, 966, 973, 995, 996, 1021, 1028, 1112], "m_": 43, "enough": [43, 146, 150, 167, 175, 225, 235, 268, 277, 333, 357, 448, 624, 882, 895, 923, 953, 975, 992, 1000, 1021, 1089, 1094, 1101, 1104, 1111, 1132], "take": [43, 48, 86, 102, 110, 111, 115, 117, 118, 136, 137, 142, 143, 144, 147, 148, 149, 150, 153, 158, 160, 163, 164, 166, 171, 175, 176, 181, 182, 183, 203, 216, 221, 223, 231, 235, 241, 265, 307, 308, 313, 322, 352, 389, 392, 409, 411, 418, 420, 424, 425, 429, 430, 432, 447, 448, 471, 472, 474, 475, 493, 503, 506, 519, 525, 539, 551, 558, 562, 565, 567, 605, 629, 647, 652, 659, 660, 669, 697, 699, 705, 709, 719, 741, 768, 778, 804, 805, 806, 882, 912, 940, 964, 970, 974, 978, 1000, 1016, 1017, 1033, 1040, 1043, 1045, 1049, 1050, 1051, 1054, 1055, 1056, 1058, 1060, 1070, 1075, 1083, 1084, 1089, 1094, 1103, 1105, 1112], "dogmat": [43, 221, 340, 1089], "switch": [43, 45, 54, 58, 59, 62, 110, 111, 112, 114, 115, 118, 119, 123, 144, 148, 150, 162, 163, 204, 212, 218, 228, 229, 231, 308, 309, 311, 328, 331, 334, 364, 378, 382, 384, 391, 397, 401, 404, 406, 408, 417, 421, 424, 426, 427, 431, 434, 447, 461, 495, 496, 497, 547, 608, 648, 649, 687, 728, 730, 731, 758, 776, 783, 792, 795, 797, 811, 815, 875, 878, 936, 969, 1127, 1131], "bool": [43, 50, 53, 55, 56, 122, 186, 193, 215, 218, 221, 223, 225, 228, 231, 238, 241, 256, 260, 261, 263, 267, 277, 439, 441, 508, 509, 513, 515, 520, 549, 551, 565, 566, 567, 568, 569, 587, 590, 596, 605, 652, 664, 665, 666, 667, 675, 678, 682, 689, 719, 721, 731, 791, 798, 936, 942, 949, 1007, 1033, 1095, 1100], "wear": [43, 140, 144], "incorrect": [43, 212, 218, 228, 231, 235, 368, 387, 1101], "metaphor": 43, "But": [43, 143, 144, 145, 148, 159, 195, 204, 294, 351, 357, 386, 389, 395, 398, 411, 413, 419, 429, 548, 549, 557, 562, 563, 564, 582, 600, 618, 619, 657, 660, 696, 705, 709, 711, 731, 760, 762, 778, 788, 805, 806, 860, 874, 882, 883, 884, 891, 905, 913, 915, 920, 928, 932, 955, 969, 971, 992, 995, 1001, 1081, 1084, 1095], "support": [43, 78, 117, 144, 146, 150, 154, 163, 167, 179, 191, 193, 212, 215, 218, 223, 225, 228, 231, 235, 238, 253, 256, 263, 295, 318, 387, 411, 425, 431, 548, 549, 551, 655, 707, 711, 725, 729, 734, 770, 860, 882, 883, 884, 894, 946, 952, 980, 988, 995, 1001, 1018, 1031, 1081, 1083, 1098, 1117], "copy_process": 43, "law": [43, 195, 319, 362, 407, 975, 1100], "tdd": [43, 114, 174, 179, 189, 229, 271, 287, 290, 294, 341, 1110], "until": [43, 55, 97, 98, 99, 102, 105, 110, 111, 114, 120, 122, 131, 133, 143, 145, 147, 149, 194, 203, 215, 234, 252, 272, 379, 385, 410, 413, 507, 567, 631, 675, 681, 719, 721, 746, 766, 776, 786, 788, 794, 811, 815, 822, 838, 850, 857, 899, 900, 901, 902, 925, 939, 946, 950, 979, 980, 1001, 1009, 1011, 1076], "fail": [43, 44, 139, 143, 145, 153, 154, 158, 170, 175, 205, 231, 248, 280, 307, 333, 432, 435, 445, 454, 503, 634, 655, 657, 664, 669, 729, 731, 756, 778, 857, 874, 884, 905, 910, 913, 915, 930, 931, 932, 949, 969, 973, 975, 984, 1026, 1042, 1098, 1111, 1112, 1116, 1118, 1120], "suffici": [43, 158, 163, 175, 308, 556, 584, 625, 629, 640, 648, 751, 860, 950, 998, 1000, 1028, 1111], "pass": [43, 44, 48, 55, 57, 58, 63, 110, 111, 163, 171, 175, 180, 181, 182, 184, 191, 202, 204, 208, 212, 218, 221, 223, 225, 228, 231, 235, 238, 241, 243, 244, 248, 253, 256, 261, 262, 265, 273, 277, 295, 307, 333, 353, 355, 357, 368, 389, 393, 396, 398, 415, 445, 447, 452, 454, 493, 503, 504, 505, 506, 508, 509, 549, 559, 560, 566, 567, 568, 569, 578, 629, 635, 659, 689, 697, 702, 706, 709, 725, 726, 727, 744, 781, 822, 882, 908, 911, 922, 931, 954, 971, 973, 974, 975, 976, 988, 989, 990, 992, 998, 1016, 1018, 1026, 1028, 1064, 1075, 1093, 1110, 1117], "current": [43, 99, 109, 114, 116, 129, 131, 144, 145, 146, 148, 150, 153, 154, 158, 183, 205, 212, 218, 228, 231, 249, 256, 258, 259, 277, 279, 280, 314, 333, 336, 341, 390, 423, 431, 447, 449, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 547, 637, 641, 706, 707, 720, 730, 731, 747, 778, 786, 800, 804, 805, 806, 807, 808, 811, 812, 813, 815, 821, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 838, 839, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 860, 862, 874, 883, 897, 903, 904, 905, 913, 915, 920, 922, 929, 932, 935, 936, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 974, 979, 1000, 1003, 1011, 1014, 1136], "initi": [43, 45, 63, 110, 111, 112, 114, 125, 142, 143, 146, 150, 158, 160, 170, 175, 179, 184, 190, 199, 203, 204, 214, 215, 216, 231, 235, 238, 241, 246, 256, 263, 268, 270, 273, 277, 290, 345, 347, 354, 398, 403, 413, 417, 421, 423, 426, 427, 449, 451, 469, 474, 475, 488, 489, 493, 495, 496, 497, 498, 499, 500, 503, 525, 539, 542, 547, 551, 552, 553, 555, 560, 562, 564, 566, 568, 583, 584, 585, 590, 603, 608, 629, 634, 636, 637, 638, 643, 644, 658, 669, 687, 695, 706, 707, 709, 721, 728, 730, 731, 736, 739, 741, 742, 749, 756, 764, 774, 778, 805, 806, 814, 839, 869, 883, 884, 899, 902, 920, 923, 936, 945, 946, 952, 987, 990, 1020, 1081, 1085, 1103, 1130, 1135], "mess": [43, 143, 229, 248, 250, 303, 649, 687, 730, 731, 1007, 1020, 1111], "roughli": [43, 65, 145, 150, 294, 418, 803, 936, 945], "took": [43, 142, 149, 179, 1041], "our": [43, 53, 59, 62, 70, 77, 104, 114, 120, 122, 123, 125, 144, 145, 147, 149, 154, 158, 165, 179, 194, 195, 204, 205, 219, 221, 259, 270, 272, 322, 415, 418, 429, 440, 448, 452, 457, 469, 473, 490, 501, 506, 640, 643, 751, 758, 778, 882, 883, 908, 911, 936, 946, 950, 952, 964, 967, 970, 976, 1073, 1081, 1084], "craftsmanship": [43, 45], "anoth": [43, 63, 78, 112, 142, 143, 144, 145, 149, 150, 153, 154, 158, 165, 167, 172, 175, 181, 182, 205, 212, 218, 221, 228, 233, 235, 241, 256, 259, 262, 265, 268, 294, 359, 377, 378, 392, 400, 412, 419, 430, 447, 448, 451, 456, 471, 474, 475, 488, 489, 493, 498, 507, 559, 562, 563, 565, 647, 652, 675, 699, 707, 711, 721, 766, 778, 804, 805, 806, 811, 820, 822, 834, 871, 882, 884, 894, 895, 909, 923, 925, 937, 945, 950, 967, 970, 971, 974, 975, 992, 999, 1007, 1023, 1027, 1032, 1084, 1092, 1098, 1101, 1110, 1133], "isol": [43, 54, 173, 175, 179, 229, 243, 882, 936, 937, 987, 1076, 1088, 1105, 1121, 1123], "wrong": [43, 78, 143, 145, 268, 368, 390, 409, 625, 711, 751, 908, 923, 937, 971, 975, 987, 1006, 1070, 1081], "oracl": [43, 1085], "conduct": [43, 1110], "serious": 43, "safeti": [43, 221, 411, 414, 417, 421, 426, 427, 430, 525, 648, 718, 731, 737, 875, 949, 950, 973], "architectur": [43, 108, 140, 150, 202, 339, 363, 390, 407, 430, 711, 739, 875, 902, 952, 953, 962, 964, 1133], "treat": [43, 81, 235, 355, 385, 820], "them": [43, 63, 66, 110, 111, 136, 140, 142, 143, 145, 148, 149, 150, 153, 154, 158, 163, 164, 165, 172, 175, 179, 180, 182, 184, 200, 202, 205, 216, 240, 243, 252, 272, 282, 294, 385, 407, 438, 449, 453, 469, 505, 566, 568, 569, 622, 629, 631, 634, 647, 697, 711, 778, 804, 810, 811, 817, 820, 845, 857, 884, 891, 936, 937, 946, 949, 952, 953, 964, 969, 974, 975, 976, 977, 998, 1000, 1022, 1054, 1057, 1076, 1082, 1089, 1100, 1117], "carefulli": [43, 145, 158, 415, 474, 664, 1082], "independ": [43, 63, 223, 235, 357, 390, 562, 862, 876, 884, 954], "self": [43, 59, 62, 63, 143, 144, 154, 162, 163, 170, 176, 179, 181, 199, 202, 203, 215, 216, 218, 225, 228, 229, 233, 235, 241, 244, 256, 263, 273, 277, 283, 295, 423, 431, 549, 551, 655, 657, 658, 692, 705, 711, 717, 739, 770, 774, 933, 969, 973, 974, 975, 984, 988, 989, 992, 993, 994, 995, 996, 997, 1007, 1097, 1098, 1103, 1111, 1116, 1117, 1119, 1130], "valid": [43, 142, 145, 153, 231, 234, 277, 333, 388, 395, 411, 415, 574, 582, 606, 641, 655, 692, 695, 721, 791, 1006, 1007, 1021, 1022, 1038, 1043, 1097, 1098, 1105], "first": [43, 53, 61, 63, 87, 116, 133, 140, 142, 145, 146, 148, 149, 150, 154, 158, 163, 173, 175, 182, 202, 215, 216, 223, 225, 229, 231, 235, 259, 261, 272, 277, 294, 307, 313, 319, 343, 351, 374, 389, 390, 395, 403, 419, 420, 431, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 495, 536, 542, 547, 549, 555, 557, 561, 580, 581, 582, 586, 605, 608, 640, 642, 647, 669, 676, 677, 696, 697, 699, 725, 726, 727, 731, 745, 748, 755, 759, 769, 778, 780, 782, 787, 793, 796, 799, 816, 817, 818, 823, 834, 838, 844, 860, 862, 865, 869, 871, 874, 875, 882, 883, 901, 905, 925, 933, 936, 939, 945, 953, 954, 968, 969, 970, 971, 975, 976, 980, 987, 989, 993, 1001, 1002, 1003, 1004, 1006, 1007, 1016, 1017, 1020, 1026, 1027, 1033, 1056, 1065, 1071, 1073, 1082, 1084, 1092, 1111, 1117, 1130, 1135], "debug": [43, 143, 144, 172, 202, 212, 218, 228, 231, 282, 286, 302, 322, 327, 340, 390, 416, 419, 423, 424, 425, 433, 435, 436, 452, 530, 675, 692, 731, 736, 758, 760, 820, 838, 904, 928, 949, 1026, 1105, 1128, 1131, 1136, 1145], "fact": [43, 53, 143, 144, 175, 294, 387, 395, 419, 429, 778, 823, 908, 946, 1085], "hard": [43, 70, 78, 85, 114, 116, 120, 122, 133, 143, 145, 148, 149, 154, 159, 164, 171, 175, 182, 204, 219, 225, 235, 249, 258, 259, 279, 280, 294, 368, 387, 416, 429, 457, 533, 729, 731, 778, 808, 814, 817, 858, 860, 874, 877, 883, 964, 973, 975, 995, 1012, 1026, 1078, 1099, 1130, 1146], "principl": [43, 53, 54, 83, 106, 123, 139, 145, 154, 269, 270, 271, 272, 430, 453, 454, 731, 778, 882, 884, 895, 955, 1084], "mayb": [43, 45, 57, 58, 61, 63, 78, 114, 116, 133, 136, 143, 144, 145, 148, 149, 158, 171, 175, 202, 218, 219, 269, 270, 271, 272, 287, 325, 328, 330, 331, 432, 451, 452, 453, 485, 538, 539, 609, 657, 727, 883, 967, 989, 1119], "overview": [43, 98, 114, 139, 150, 167, 183, 185, 200, 204, 216, 249, 250, 258, 262, 265, 268, 270, 279, 280, 296, 336, 340, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 567, 663, 674, 687, 698, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 886, 887, 888, 889, 890, 897, 898, 901, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963, 967, 999, 1076, 1130, 1131, 1133, 1135], "respons": [43, 53, 56, 89, 123, 128, 142, 153, 158, 206, 429, 471, 485, 493, 551, 559, 707, 731, 774, 786, 883, 884, 907, 936, 937, 1003, 1083, 1135], "googl": [44, 138, 143, 150, 152, 164, 167, 170, 171, 175, 176, 179, 200, 205, 342, 504, 705, 706, 867, 1001, 1076, 1117, 1119, 1148], "cloner": 44, "init": [44, 125, 142, 144, 160, 164, 241, 248, 250, 353, 380, 478, 479, 501, 504, 532, 549, 567, 585, 733, 741, 746, 766, 768, 780, 814, 866, 950], "cpp": [44, 50, 97, 112, 114, 115, 116, 118, 123, 154, 169, 179, 204, 205, 221, 248, 259, 268, 270, 342, 433, 434, 435, 440, 447, 448, 449, 451, 452, 454, 456, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 525, 549, 550, 551, 552, 553, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 627, 631, 636, 637, 638, 639, 640, 641, 642, 643, 647, 652, 654, 657, 658, 659, 662, 664, 669, 675, 684, 685, 686, 689, 690, 691, 692, 693, 694, 696, 697, 699, 701, 705, 706, 707, 708, 709, 710, 719, 721, 725, 726, 727, 729, 882, 912, 916, 919, 931, 933, 936, 952], "assert_eq": [44, 447, 449, 452, 456, 469, 496, 497, 503, 506, 507, 508, 509, 510, 511, 513, 515, 516, 517, 520, 521, 522, 523, 524, 542, 549, 550, 551, 562, 563, 565, 566, 567, 568, 569, 627, 652, 654, 657, 658, 659, 690, 701, 705, 706, 707, 708, 710, 725, 726, 727, 729, 1117, 1122], "test_f": [44, 471, 506, 507, 729, 1122], "simplefixtur": 44, "public": [44, 55, 101, 102, 107, 114, 123, 140, 153, 158, 195, 203, 216, 244, 249, 258, 259, 267, 273, 279, 280, 319, 322, 327, 403, 439, 440, 441, 443, 448, 450, 454, 456, 459, 460, 461, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 493, 506, 507, 519, 533, 539, 548, 549, 550, 552, 553, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 572, 575, 590, 591, 608, 618, 619, 621, 622, 624, 625, 633, 634, 639, 641, 642, 647, 650, 651, 652, 653, 654, 657, 658, 660, 669, 671, 672, 673, 675, 677, 678, 681, 682, 683, 684, 685, 686, 690, 691, 692, 694, 705, 706, 707, 710, 711, 719, 721, 729, 731, 742, 746, 807, 808, 813, 827, 833, 874, 886, 887, 888, 889, 890, 895, 996, 1001, 1103, 1122], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 114, 181, 212, 217, 218, 221, 223, 241, 280, 542, 557, 731, 874, 899, 903, 915, 949, 951, 974], "tallk": 44, "morph": [44, 63, 170, 179, 204, 205, 270, 527, 539, 542, 545, 551, 647, 699, 780, 978], "fixtur": [44, 123, 170, 179, 271, 272, 287, 293, 294, 297, 330, 460, 471, 507, 731, 1115, 1148], "trivial": [44, 143, 154, 285, 301, 369, 385, 542, 559, 655, 660, 711, 783, 791, 884, 900, 936, 1132], "tempfil": [44, 973], "crap": [44, 144, 219, 261, 415, 431, 434, 609, 648, 884, 949], "null": [44, 63, 144, 145, 146, 161, 186, 202, 215, 231, 238, 241, 256, 263, 273, 277, 344, 357, 364, 392, 403, 413, 418, 431, 506, 562, 661, 736, 742, 749, 774, 809, 818, 820, 821, 838, 853, 860, 902, 907, 914, 921, 923, 925, 927, 933, 936, 937, 942, 945, 949], "deriv": [44, 107, 115, 122, 165, 219, 231, 309, 333, 507, 525, 551, 621, 622, 624, 625, 686, 694, 975, 988, 1122], "seminar": [45, 126], "psycho": 45, "rule": [45, 144, 150, 175, 225, 231, 235, 268, 303, 330, 345, 364, 366, 367, 368, 383, 389, 407, 418, 419, 420, 422, 430, 432, 457, 469, 474, 575, 621, 655, 658, 662, 664, 684, 710, 711, 817, 838, 899, 975, 998, 1006, 1007, 1017, 1026, 1089, 1137], "dont": [45, 235, 429, 751], "scenario": [45, 145, 158, 167, 175, 179, 352, 473, 625, 719, 937, 938, 945], "robert": [45, 457], "martin": [45, 429, 430, 457], "someon": [45, 175, 216, 231, 238, 241, 272, 329, 564, 719, 770, 835, 841, 862, 884, 908, 952, 1000], "mistak": [45, 143, 149, 150, 200, 216, 240, 882, 1076, 1089], "kill": [45, 144, 145, 221, 838, 892, 921, 940, 949, 950, 979, 1136], "peopl": [45, 63, 140, 143, 145, 147, 148, 150, 158, 163, 175, 204, 238, 340, 429, 457, 475, 664, 778, 817, 984, 1000, 1028, 1083, 1085], "polit": [45, 697], "thei": [45, 55, 65, 78, 112, 131, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 163, 165, 167, 171, 183, 205, 212, 216, 218, 221, 228, 231, 235, 277, 285, 301, 333, 359, 365, 385, 413, 416, 419, 425, 429, 430, 434, 443, 448, 449, 469, 474, 475, 503, 505, 525, 542, 552, 557, 583, 587, 619, 647, 648, 651, 658, 659, 706, 707, 713, 737, 751, 770, 778, 803, 813, 817, 839, 875, 882, 883, 884, 895, 920, 949, 950, 955, 970, 980, 988, 995, 998, 1048, 1071, 1078, 1081, 1082, 1089, 1092, 1095, 1110, 1116, 1132, 1135], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 62, 63, 78, 89, 110, 111, 117, 136, 143, 149, 179, 202, 231, 272, 354, 411, 425, 429, 452, 457, 473, 492, 493, 562, 572, 624, 646, 648, 653, 729, 749, 762, 778, 803, 811, 813, 815, 816, 832, 839, 841, 883, 898, 933, 936, 949, 950, 969, 971, 980, 1016, 1034, 1045, 1056, 1082, 1117, 1132], "particular": [45, 112, 142, 154, 175, 398, 423, 449, 473, 525, 729, 824, 999, 1000], "electr": 45, "seem": [45, 131, 142, 144, 145, 164, 269, 448, 882, 884, 949, 1132], "adher": [45, 820], "immedi": [45, 63, 143, 144, 149, 150, 221, 262, 265, 268, 270, 308, 390, 600, 714, 719, 760, 770, 774, 875, 925, 934, 937, 939, 1020, 1117], "survei": [45, 164], "had": [45, 112, 142, 144, 145, 149, 150, 154, 158, 163, 175, 179, 208, 210, 229, 359, 398, 469, 536, 548, 633, 647, 772, 805, 806, 817, 842, 882, 895, 966, 1000, 1007, 1026, 1095, 1099], "life": [45, 122, 139, 150, 155, 158, 161, 163, 171, 554, 684, 705, 720, 730, 731, 778, 817, 874, 915, 929, 935, 1001, 1022, 1079], "accomplish": [45, 57, 78, 183, 269, 271, 272, 415, 430, 882], "befor": [45, 115, 116, 122, 139, 143, 144, 146, 147, 148, 150, 153, 158, 163, 179, 182, 186, 204, 231, 247, 248, 250, 271, 272, 277, 293, 294, 295, 303, 347, 355, 356, 365, 385, 434, 506, 536, 542, 581, 607, 622, 648, 660, 675, 687, 692, 693, 703, 707, 708, 713, 714, 719, 721, 722, 729, 730, 731, 742, 756, 766, 772, 778, 804, 840, 875, 884, 923, 938, 940, 952, 975, 980, 998, 1041, 1066, 1068, 1072, 1081, 1094, 1098, 1101, 1111, 1112, 1118], "formal": [45, 153, 167, 204, 205, 294, 297, 496, 1111], "googletest": [45, 65, 97, 170, 172, 173, 205, 248, 250, 285, 301, 445, 454, 490, 503, 505, 506, 567, 705, 706, 707, 731, 732, 1117, 1119, 1132], "messag": [45, 138, 140, 148, 149, 158, 161, 167, 173, 181, 182, 208, 212, 215, 218, 228, 231, 238, 241, 256, 263, 271, 272, 273, 277, 310, 322, 327, 430, 433, 435, 454, 559, 575, 634, 664, 669, 689, 691, 692, 701, 711, 719, 731, 753, 778, 811, 815, 820, 874, 896, 915, 925, 929, 1004, 1018, 1028, 1070, 1112, 1116, 1118, 1144, 1145, 1146], "saniti": [45, 421, 426, 427, 430, 434, 438, 564, 649, 687, 728, 730, 731], "perform": [45, 143, 149, 158, 160, 182, 201, 202, 231, 272, 328, 369, 372, 395, 402, 407, 415, 418, 419, 422, 425, 426, 427, 433, 542, 582, 600, 603, 625, 646, 660, 702, 731, 762, 940, 957, 967, 968, 1026, 1110, 1128, 1131], "delici": [45, 53], "fearlessli": [45, 53], "backlog": 45, "Or": [45, 115, 122, 143, 250, 303, 414, 430, 533, 661, 687, 698, 730, 731, 869, 895, 905, 931, 1006, 1020, 1097, 1101], "Will": [45, 143, 176, 235, 308, 739, 952, 1018, 1105, 1119, 1125, 1144], "high": [46, 53, 115, 164, 204, 218, 235, 429, 457, 480, 493, 497, 501, 705, 707, 722, 760, 772, 776, 788, 797], "speed": [46, 53, 133, 138, 143, 212, 216, 218, 228, 231, 235, 420, 710, 772, 778, 938, 940, 1080, 1081], "hype": 46, "we": [46, 50, 59, 61, 62, 68, 115, 120, 121, 122, 123, 125, 133, 142, 143, 145, 146, 147, 148, 149, 150, 154, 158, 159, 162, 163, 164, 165, 166, 167, 171, 172, 175, 179, 180, 181, 182, 183, 185, 194, 195, 202, 203, 204, 205, 209, 212, 215, 216, 218, 219, 221, 248, 250, 252, 259, 262, 265, 267, 269, 271, 272, 290, 294, 297, 308, 325, 328, 329, 333, 344, 359, 370, 377, 385, 398, 407, 409, 413, 415, 418, 423, 430, 432, 440, 441, 447, 448, 449, 452, 454, 456, 459, 468, 469, 473, 474, 490, 491, 492, 493, 501, 504, 505, 506, 536, 542, 551, 563, 587, 618, 622, 639, 640, 641, 642, 643, 647, 658, 669, 675, 701, 702, 707, 710, 721, 739, 742, 746, 747, 751, 753, 756, 774, 778, 780, 786, 794, 805, 806, 820, 821, 835, 841, 842, 857, 875, 882, 883, 884, 891, 895, 900, 901, 902, 908, 909, 910, 911, 923, 936, 945, 962, 966, 967, 968, 976, 995, 1000, 1026, 1028, 1032, 1034, 1063, 1070, 1071, 1072, 1076, 1081, 1082, 1083, 1084, 1091, 1092, 1098, 1101, 1118, 1119, 1135], "did": [46, 144, 145, 147, 149, 150, 153, 154, 162, 171, 175, 182, 267, 409, 413, 429, 454, 492, 640, 709, 711, 726, 751, 756, 778, 817, 875, 886, 895, 976, 1130], "consequ": [46, 142, 143, 262, 265, 389, 410, 413, 414, 457, 908, 995, 1095, 1130], "unsign": [46, 120, 216, 221, 361, 363, 371, 400, 403, 407, 415, 461, 476, 491, 505, 506, 507, 557, 627, 628, 637, 685, 719, 721, 734, 737, 742, 749, 758, 760, 762, 768, 774, 783, 788, 792, 904, 945, 946, 1127, 1128], "introduc": [46, 58, 78, 97, 204, 221, 229, 270, 285, 301, 411, 419, 431, 447, 452, 474, 492, 493, 494, 495, 525, 547, 633, 731, 797, 949, 978, 1004, 1018, 1083, 1132], "throw": [46, 147, 150, 221, 449, 473, 474, 478, 484, 485, 487, 488, 489, 507, 525, 603, 641, 683, 704, 707, 718, 721, 1122], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 731], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 731], "clean_code_bugs_find_error": [46, 47, 53, 731], "twice": [47, 53, 55, 56, 57, 143, 351, 390, 412, 432, 655, 658, 717, 731, 798, 838, 875, 891, 923, 968], "crash": [47, 53, 63, 110, 111, 141, 143, 144, 145, 148, 200, 202, 212, 218, 228, 231, 340, 380, 387, 473, 557, 584, 629, 705, 731, 936, 950, 1076], "found": [47, 53, 108, 109, 117, 130, 139, 142, 154, 163, 175, 208, 212, 215, 218, 221, 223, 225, 228, 231, 241, 256, 263, 277, 285, 295, 301, 308, 322, 416, 425, 435, 437, 445, 483, 487, 488, 489, 495, 506, 508, 512, 513, 514, 542, 547, 587, 590, 593, 603, 607, 608, 632, 640, 642, 644, 652, 726, 731, 749, 810, 813, 820, 867, 884, 952, 955, 964, 969, 975, 983, 992, 1022, 1054, 1080, 1083, 1120, 1132], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 731], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 731], "explicitli": [48, 144, 145, 149, 175, 215, 225, 235, 268, 367, 368, 386, 424, 430, 474, 551, 554, 562, 603, 652, 655, 658, 711, 809, 937, 946, 974, 984, 1003, 1089, 1097], "solut": [48, 65, 114, 148, 150, 158, 159, 167, 169, 175, 194, 204, 205, 210, 213, 216, 221, 226, 232, 248, 251, 262, 271, 272, 276, 282, 303, 389, 390, 393, 412, 415, 433, 446, 473, 495, 525, 547, 553, 554, 574, 611, 613, 615, 622, 636, 644, 659, 664, 669, 695, 711, 731, 839, 840, 857, 920, 925, 938, 939, 955, 980, 1016, 1047, 1059, 1089, 1133], "force_overwrit": 48, "descriptor": [48, 143, 167, 199, 231, 235, 256, 277, 295, 329, 554, 737, 758, 794, 814, 820, 821, 878, 900, 901, 902, 946], "mani": [49, 53, 56, 59, 62, 89, 123, 143, 145, 149, 150, 167, 172, 175, 191, 202, 223, 233, 238, 259, 263, 267, 268, 270, 276, 295, 308, 329, 333, 357, 369, 371, 380, 395, 409, 411, 416, 431, 432, 444, 445, 448, 451, 456, 459, 498, 525, 572, 582, 601, 603, 622, 634, 646, 647, 655, 675, 696, 701, 709, 717, 731, 737, 739, 756, 764, 770, 774, 778, 804, 814, 815, 817, 818, 871, 883, 901, 902, 921, 931, 934, 949, 950, 952, 962, 971, 973, 975, 980, 989, 999, 1004, 1007, 1010, 1014, 1022, 1026, 1028, 1032, 1081, 1083, 1084, 1085, 1089, 1098, 1117, 1130, 1133], "overwrit": [49, 109, 473, 474, 487, 495, 512, 514, 547, 557, 603, 605, 634, 731, 778, 840, 845, 857, 909, 1024], "present": [49, 61, 123, 140, 146, 150, 154, 158, 163, 176, 231, 277, 285, 294, 301, 441, 553, 774, 778, 813, 884, 895, 914, 975, 1058, 1098, 1132], "continu": [50, 53, 63, 89, 99, 106, 110, 111, 112, 123, 136, 144, 153, 154, 166, 175, 176, 179, 188, 193, 194, 195, 224, 229, 235, 241, 251, 319, 383, 384, 390, 391, 397, 401, 404, 408, 413, 417, 421, 426, 427, 429, 431, 434, 435, 452, 566, 568, 569, 629, 649, 657, 687, 726, 727, 728, 729, 730, 731, 875, 877, 881, 887, 910, 911, 949, 950, 955, 966, 973, 980, 984, 1017, 1020, 1038, 1083, 1098, 1117], "expected_cont": 50, "fill": [50, 145, 146, 158, 180, 231, 232, 277, 371, 647, 651, 696, 706, 749, 774, 778, 844, 901, 978], "strategi": [50, 215, 405, 883, 1033, 1110], "hurri": [50, 390], "read_fil": 50, "compar": [50, 114, 203, 205, 216, 231, 272, 277, 368, 410, 424, 425, 434, 503, 549, 706, 886, 921, 1018, 1023, 1047, 1051, 1081, 1103], "binaryfil": 50, "doesn": [50, 145, 148, 256, 385, 387, 390, 405, 419, 701, 737, 798, 805, 806, 840, 844, 857, 953, 964, 1020], "belong": [50, 172, 175, 357, 377, 403, 430, 525, 549, 563, 565, 823, 831, 910, 991, 1005], "test_write_csv": 50, "test_read_csv": [50, 1073], "ah": [50, 59, 62, 149, 165, 202, 204, 218, 604, 952, 1028, 1092], "altern": [51, 53, 55, 56, 63, 65, 68, 78, 83, 122, 142, 143, 150, 176, 195, 221, 282, 364, 441, 549, 558, 572, 583, 586, 655, 704, 710, 731, 778, 817, 838, 878, 882, 884, 896, 904, 910, 921, 927, 945, 952, 1000, 1020, 1023, 1097, 1101, 1105, 1112, 1122, 1125, 1141, 1142, 1144, 1147], "cluster_clean_code_featur": [51, 53, 55, 56, 731], "clean_code_features_other_index": [51, 53, 731], "clean_code_features_csv": [51, 53, 55, 56, 731], "establish": [53, 71, 183, 195, 259, 271, 272, 293, 297, 319, 429, 778, 936, 1133], "were": [53, 112, 136, 143, 145, 149, 158, 175, 179, 340, 389, 445, 548, 557, 558, 584, 651, 690, 805, 806, 884, 911, 966, 974, 998, 1007, 1026, 1031, 1089, 1095, 1130], "occas": [53, 89, 144, 706], "ourselv": [53, 175, 875], "gather": [53, 150, 182, 271, 272, 293, 294, 297, 307, 423, 425, 1060], "wreak": [53, 110, 111, 405, 629], "havoc": [53, 110, 111, 405, 629], "shoehorn": 53, "violat": [53, 123, 143, 429, 457, 685, 707, 792, 936, 950], "nearli": [53, 175, 181, 407, 928], "solid": [53, 139, 155, 268, 270, 430, 457, 1128, 1129, 1143, 1144, 1146, 1147], "chanc": [53, 143, 145, 180, 409, 429, 733, 778, 903, 1135], "cluster_clean_code_refactor": [53, 55, 56, 731], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 731], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 731], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 731], "clean_code_refactoring_backingstore_interfac": [53, 56, 731], "now": [54, 61, 112, 142, 143, 144, 145, 146, 147, 149, 150, 158, 162, 171, 181, 191, 208, 215, 221, 225, 235, 243, 263, 267, 288, 308, 309, 322, 385, 398, 413, 418, 443, 449, 456, 469, 474, 496, 497, 504, 563, 587, 590, 596, 600, 608, 651, 702, 707, 722, 736, 756, 778, 786, 788, 794, 810, 813, 875, 882, 883, 884, 910, 911, 919, 964, 966, 971, 974, 989, 992, 1016, 1071, 1081, 1083, 1101, 1111, 1130], "violatin": 54, "respect": [54, 59, 62, 65, 136, 144, 158, 205, 267, 269, 314, 361, 409, 429, 474, 492, 551, 558, 621, 655, 706, 707, 809, 817, 882, 936, 950, 995], "mainli": [55, 143, 179, 268, 277, 603, 729, 918, 978], "bugfix": 55, "ongo": [55, 112, 938], "scene": [55, 952, 995], "pleas": [55, 114, 144, 145, 148, 150, 154, 171, 175, 179, 180, 182, 183, 184, 185, 195, 221, 248, 250, 259, 280, 313, 355, 389, 419, 507, 564, 566, 567, 568, 569, 817, 875, 883, 884, 899, 928, 946, 954, 955, 1000, 1102], "wait": [55, 72, 73, 74, 78, 83, 87, 120, 122, 132, 143, 144, 145, 146, 147, 149, 190, 294, 308, 619, 647, 714, 722, 731, 755, 770, 776, 780, 783, 786, 788, 811, 814, 822, 874, 875, 901, 903, 907, 919, 931, 934, 937, 944, 946, 949, 1024, 1092, 1117, 1135, 1143], "unnecessarili": [55, 69, 946], "conflict": [55, 75, 77, 112, 115, 122, 270, 271, 272, 293, 355, 406, 558, 648, 720, 730, 731, 734, 737, 747, 874, 883, 915, 923, 929, 949, 983, 1113], "rip": [55, 146, 431, 490, 936, 1091], "detail": [55, 84, 140, 145, 148, 153, 157, 158, 170, 176, 190, 201, 202, 204, 205, 212, 218, 228, 232, 233, 235, 239, 261, 272, 322, 429, 434, 457, 494, 504, 506, 554, 706, 756, 838, 882, 884, 938, 970, 1078, 1119, 1128], "instanc": [55, 57, 107, 110, 111, 118, 150, 191, 199, 203, 212, 215, 216, 223, 225, 230, 233, 235, 238, 253, 256, 263, 277, 295, 318, 333, 447, 452, 460, 471, 473, 474, 475, 487, 488, 489, 492, 505, 618, 629, 636, 641, 689, 692, 739, 744, 747, 945, 946, 973, 975, 989, 990, 992, 995, 1018, 1103], "its": [55, 57, 59, 62, 65, 84, 87, 108, 110, 111, 137, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 160, 165, 167, 171, 172, 173, 175, 195, 202, 203, 205, 212, 216, 218, 228, 231, 235, 244, 259, 261, 262, 265, 268, 270, 277, 294, 313, 324, 355, 377, 388, 390, 405, 407, 409, 416, 418, 440, 448, 452, 471, 474, 475, 490, 491, 492, 493, 498, 503, 506, 548, 549, 550, 552, 554, 559, 589, 629, 647, 659, 669, 695, 714, 729, 742, 751, 756, 778, 783, 805, 806, 809, 811, 815, 820, 825, 826, 838, 839, 860, 862, 883, 886, 887, 894, 904, 905, 910, 925, 931, 934, 936, 937, 938, 946, 968, 973, 975, 978, 983, 988, 992, 998, 1006, 1016, 1018, 1023, 1027, 1033, 1081, 1083, 1102, 1103, 1110, 1112, 1130, 1132, 1133, 1135], "replac": [55, 63, 97, 123, 148, 193, 204, 212, 215, 216, 218, 219, 221, 228, 231, 263, 277, 294, 307, 349, 364, 405, 431, 494, 495, 547, 580, 581, 640, 647, 675, 692, 706, 721, 729, 731, 781, 884, 924, 936, 950, 974], "symptom": [57, 153], "mismatch": [57, 531], "onc": [57, 115, 142, 144, 145, 148, 149, 150, 153, 158, 163, 164, 307, 325, 347, 372, 381, 389, 419, 432, 448, 449, 450, 454, 459, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 504, 506, 564, 582, 583, 637, 678, 689, 699, 717, 729, 739, 742, 774, 875, 884, 926, 949, 950, 969, 975, 976, 977, 1011, 1032, 1041, 1054, 1085, 1088, 1112], "sync": [57, 123, 144, 215, 231, 238, 241, 256, 263, 273, 277, 405, 409, 778, 869], "imho": [57, 686], "forbidden": [58, 407], "accord": [58, 63, 114, 120, 142, 145, 231, 638, 822, 838, 871, 875, 883, 884], "uncl": [58, 340], "bob": [58, 231, 340, 429], "enum": [58, 204, 205, 364, 379, 417, 421, 426, 427, 431, 434, 649, 687, 728, 730, 731, 737, 739, 747, 936, 1130], "born": [59, 62, 816, 1001], "bound": [59, 62, 63, 221, 225, 256, 268, 283, 406, 416, 421, 426, 427, 531, 559, 561, 563, 660, 731, 816, 820, 876, 937, 940, 993, 1014, 1037, 1097], "employe": [59, 62, 170, 202, 992], "year": [59, 62, 142, 143, 144, 145, 149, 154, 175, 215, 221, 263, 267, 429, 548, 632, 633, 635, 636, 639, 640, 641, 642, 643, 644, 646, 693, 731, 1033], "emploi": [59, 62, 144, 154, 179, 390, 778], "configur": [59, 61, 62, 63, 68, 73, 78, 82, 84, 85, 86, 104, 112, 114, 116, 119, 120, 122, 123, 128, 129, 142, 144, 145, 148, 150, 173, 183, 249, 258, 259, 268, 279, 280, 286, 287, 290, 294, 302, 322, 328, 432, 436, 437, 439, 440, 452, 454, 459, 496, 497, 498, 506, 731, 751, 758, 778, 792, 808, 809, 810, 813, 822, 858, 871, 874, 875, 883, 895, 902, 916, 918, 946, 953, 954, 966, 976, 1046, 1084, 1088, 1097, 1105, 1133], "pattern": [59, 62, 82, 106, 123, 139, 140, 156, 159, 178, 179, 205, 208, 231, 270, 330, 339, 341, 429, 446, 447, 448, 449, 451, 452, 454, 456, 457, 458, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 495, 547, 710, 711, 731, 732, 838, 867, 934, 981, 982, 1117, 1137], "led": [59, 62, 72, 73, 74, 78, 91, 119, 123, 161, 183, 259, 308, 331, 496, 731, 737, 875, 883], "hei": [59, 62, 143, 183, 235, 564, 565, 813, 899, 1021, 1089], "reinvent": [59, 62, 203, 252, 1076], "wheel": [59, 62, 115, 127, 139, 780, 815, 910, 1105], "admit": [59, 62, 150], "notori": [59, 62], "fun": [59, 62, 143, 148, 201, 203, 239, 268, 340, 453, 690, 778, 817, 875, 882, 883, 980, 992, 1004, 1020, 1075, 1076, 1104, 1111, 1130], "live": [59, 62, 70, 97, 98, 114, 116, 140, 144, 148, 166, 170, 175, 179, 184, 195, 203, 204, 205, 206, 219, 221, 229, 240, 247, 248, 249, 250, 252, 258, 260, 261, 268, 269, 270, 271, 272, 276, 279, 280, 294, 303, 322, 326, 330, 331, 333, 340, 341, 342, 402, 419, 431, 432, 437, 453, 458, 467, 469, 471, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 582, 583, 603, 645, 656, 687, 688, 689, 706, 720, 729, 730, 731, 732, 742, 778, 808, 811, 812, 817, 833, 834, 874, 915, 983, 1000, 1033, 1076, 1102, 1111, 1129, 1130, 1144], "session": [59, 62, 139, 148, 150, 168, 175, 179, 183, 187, 212, 218, 228, 231, 243, 247, 248, 250, 261, 269, 328, 780, 809, 810, 892, 903, 1064, 1076, 1102, 1110, 1140], "simpl": [59, 62, 72, 74, 75, 78, 86, 112, 130, 139, 143, 147, 148, 150, 153, 154, 158, 163, 167, 170, 171, 175, 179, 182, 205, 221, 223, 225, 231, 235, 287, 290, 343, 344, 351, 390, 392, 406, 409, 416, 431, 432, 433, 434, 435, 439, 440, 442, 452, 550, 557, 558, 596, 624, 632, 633, 635, 636, 639, 640, 641, 642, 643, 644, 664, 697, 707, 716, 731, 737, 751, 758, 770, 778, 780, 788, 814, 867, 875, 876, 882, 883, 912, 918, 920, 923, 938, 946, 949, 953, 954, 955, 960, 976, 980, 1000, 1001, 1009, 1028, 1076, 1082, 1084, 1100, 1116, 1117], "thu": [59, 62, 143, 144, 145, 181, 374, 449, 751, 756, 798, 805, 908, 1088, 1135], "techniqu": [59, 62, 69, 70, 71, 409, 419, 505, 629, 878], "usag": [59, 62, 65, 80, 106, 115, 123, 145, 150, 195, 205, 216, 229, 243, 268, 270, 271, 293, 308, 328, 340, 390, 415, 416, 423, 434, 438, 444, 453, 454, 467, 493, 494, 495, 547, 557, 564, 565, 583, 618, 620, 624, 625, 644, 646, 658, 669, 675, 689, 696, 731, 780, 815, 838, 867, 870, 885, 916, 919, 934, 970, 975, 978, 1028, 1070, 1072, 1105, 1112, 1119, 1130], "At": [59, 62, 143, 144, 147, 150, 154, 158, 175, 179, 205, 215, 219, 221, 255, 354, 383, 387, 419, 447, 705, 770, 971, 988, 1076], "flow": [59, 62, 144, 175, 180, 182, 183, 184, 185, 189, 194, 195, 210, 213, 226, 237, 323, 324, 325, 327, 363, 383, 391, 397, 401, 404, 408, 417, 419, 421, 426, 427, 649, 687, 696, 728, 730, 731, 949, 984, 1009, 1011, 1018, 1095, 1131], "event": [59, 62, 63, 86, 118, 146, 167, 203, 212, 216, 218, 228, 231, 259, 271, 272, 425, 675, 719, 731, 746, 747, 755, 780, 781, 793, 794, 795, 796, 799, 811, 815, 874, 878, 903, 915, 918, 934, 937, 938, 942, 946, 987, 1092, 1101, 1103, 1135, 1144, 1146, 1147], "save": [59, 62, 63, 85, 139, 142, 143, 155, 163, 166, 212, 218, 228, 231, 262, 265, 268, 371, 373, 647, 678, 681, 682, 683, 822, 840, 894, 903, 940, 969, 973, 979, 989, 1022, 1081, 1112, 1130], "schedul": [59, 62, 63, 65, 99, 110, 111, 114, 143, 160, 183, 185, 249, 258, 259, 279, 335, 336, 447, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 760, 770, 776, 783, 798, 805, 806, 807, 808, 812, 814, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 920, 929, 931, 932, 936, 940, 954, 956, 957, 958, 959, 960, 961, 962, 963, 1088, 1125, 1135, 1136, 1146], "overhead": [59, 62, 419, 425, 536, 545, 710, 711], "usual": [59, 62, 84, 108, 114, 143, 144, 150, 153, 158, 163, 173, 175, 235, 269, 285, 301, 345, 385, 386, 412, 425, 429, 435, 437, 442, 447, 461, 469, 475, 504, 549, 565, 606, 660, 695, 696, 710, 719, 722, 729, 737, 749, 751, 756, 766, 772, 774, 778, 792, 794, 798, 814, 816, 820, 839, 875, 876, 883, 904, 918, 936, 937, 952, 953, 954, 955, 964, 973, 974, 975, 976, 980, 983, 986, 987, 993, 995, 997, 998, 1000, 1003, 1009, 1014, 1075, 1082, 1083, 1089, 1112, 1113, 1119, 1132], "exhibit": [59, 62, 221, 641, 884, 905, 910], "glitch": [59, 62, 145, 150, 883, 884], "caus": [59, 62, 143, 146, 158, 212, 218, 228, 231, 235, 884, 931, 936, 1098], "hiccup": [59, 62, 150, 261, 954], "twist": [59, 62, 762], "amazingli": [59, 62, 822], "submiss": 60, "submit": [60, 109, 772], "linuxtag": [60, 182, 880], "pure": [61, 69, 118, 150, 322, 385, 458, 621, 647, 686, 711, 817, 1007, 1130], "local": [61, 143, 144, 146, 149, 158, 171, 175, 176, 183, 184, 188, 204, 205, 219, 221, 222, 228, 231, 234, 235, 256, 259, 271, 273, 282, 285, 293, 294, 297, 301, 308, 322, 355, 359, 383, 385, 402, 440, 444, 453, 467, 469, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 547, 554, 572, 655, 658, 660, 689, 731, 751, 778, 783, 805, 806, 810, 860, 874, 882, 884, 885, 886, 887, 893, 895, 901, 912, 920, 962, 964, 971, 974, 1019, 1105, 1132, 1133, 1146], "easili": [61, 123, 137, 144, 150, 308, 364, 383, 416, 429, 448, 621, 697, 760, 776, 904, 934, 940, 970, 983, 1015, 1130], "guess": [61, 225, 235, 261, 409, 414, 664, 891, 946], "autotool": [61, 154], "portabl": [61, 167, 357, 419, 714, 920, 927, 946, 950, 1007, 1085], "archiv": [61, 103, 104, 114, 154, 155, 183, 185, 249, 258, 259, 279, 425, 438, 444, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 731, 808, 838, 874, 954, 957, 959, 960, 962, 963, 964, 969, 973, 1105], "m4": 61, "macro": [61, 221, 286, 302, 349, 360, 363, 375, 384, 391, 397, 401, 404, 408, 411, 417, 421, 426, 427, 435, 436, 440, 441, 444, 649, 687, 693, 728, 730, 731, 747, 766, 780, 820, 898, 904, 910, 920, 954, 1026, 1117, 1122, 1127, 1131], "stock": [61, 215, 216, 1032, 1033], "sudo": [61, 101, 114, 118, 139, 146, 148, 150, 158, 172, 183, 221, 249, 258, 259, 268, 270, 279, 280, 435, 442, 519, 731, 808, 833, 835, 874, 875, 884, 938, 966, 1112], "pwd": [61, 109, 112, 171, 248, 250, 322, 327, 438, 504, 506, 567, 753, 756, 805, 806, 815, 860, 862, 875, 953, 954, 967, 969, 1110], "pub": [61, 146, 183, 751, 891, 1070], "lib": [61, 114, 139, 148, 154, 182, 202, 205, 215, 231, 238, 241, 256, 263, 270, 273, 277, 437, 503, 756, 768, 774, 778, 869, 884, 949, 953, 955, 964, 966, 1105, 1112], "remot": [61, 102, 104, 146, 148, 150, 158, 195, 204, 251, 308, 446, 467, 481, 495, 547, 731, 751, 778, 779, 783, 804, 807, 874, 883, 885, 888, 889, 890, 893, 901, 964, 976, 1133, 1134, 1141], "v0": 61, "v1": [61, 261, 454, 469, 651], "v2": [61, 63, 150, 170, 261, 454, 469, 651], "autotooleri": 61, "autogen": 61, "step": [61, 63, 142, 143, 149, 150, 154, 158, 179, 218, 221, 222, 248, 250, 263, 267, 272, 295, 345, 347, 349, 365, 389, 431, 434, 451, 494, 504, 542, 567, 572, 705, 778, 805, 806, 952, 960, 1097, 1098, 1111], "noconfigur": 61, "suppress": [61, 149, 195, 423, 448, 557, 706, 857, 1105], "absorb": [61, 136, 181, 428, 430, 658, 1033], "Be": [61, 97, 221, 268, 270, 308, 362, 395, 504, 525, 550, 555, 617, 644, 656, 658, 687, 689, 692, 703, 712, 720, 728, 730, 731, 804, 949, 964], "awar": [61, 308, 406, 439, 938], "enabl": [61, 142, 148, 175, 183, 204, 212, 218, 228, 231, 259, 269, 368, 419, 445, 452, 474, 530, 776, 778, 783, 830, 875, 879, 883, 895, 938, 962, 966, 976, 1135], "mkdir": [61, 100, 114, 129, 144, 149, 153, 171, 172, 248, 250, 259, 322, 327, 504, 506, 507, 567, 729, 731, 778, 805, 806, 807, 808, 842, 843, 844, 845, 846, 849, 850, 852, 858, 874, 891, 895, 945, 964, 966, 967, 973], "dist": [61, 127, 710, 1031], "406332": 61, "apr": [61, 63, 202, 212, 241, 315, 953, 954, 967], "transfer": [61, 143, 205, 208, 285, 301, 308, 425, 507, 557, 658, 749, 778, 791, 792, 804, 805, 806, 865, 885, 891, 894, 1092, 1130, 1132], "scp": [61, 97, 101, 114, 129, 154, 183, 249, 258, 259, 279, 280, 506, 507, 731, 751, 805, 806, 874, 885, 886, 887, 888, 890, 895, 912, 962, 963, 964], "192": [61, 176, 183, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 328, 751, 813, 895, 1147], "168": [61, 176, 183, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 328, 751, 813, 895, 964, 1147], "82": [61, 153, 162, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 1033, 1080, 1081], "prerequisit": [61, 104, 221, 751, 882, 1003], "apt": [61, 118, 154, 158, 172, 221, 268, 270, 519, 758, 877, 882, 884, 895, 954, 966, 1112, 1117], "python3": [61, 63, 86, 127, 139, 154, 163, 176, 182, 202, 212, 218, 228, 231, 235, 930, 940, 966, 976, 1003, 1097, 1098, 1105, 1112], "along": [61, 144, 150, 203, 216, 340, 389, 459, 729, 823, 931, 952, 983, 1103], "omit": [61, 63, 149, 158, 163, 212, 218, 228, 231, 232, 235, 326, 370, 407, 419, 431, 451, 625, 647, 694, 756, 772, 821, 882, 883, 884, 891, 907, 908, 912, 923, 973, 976, 1028, 1110], "bind": [61, 123, 144, 246, 268, 270, 367, 374, 605, 647, 660, 687, 711, 712, 714, 720, 730, 731, 878, 952, 984, 988, 1007, 1018, 1095, 1130, 1145, 1147], "cxx": [61, 140, 432, 447, 448, 449, 450, 451, 452, 454, 456, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 503, 505, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 953, 954], "xf": [61, 154, 804, 966], "ld_library_path": [61, 437, 969], "gpiod": [61, 63, 758], "py3": [61, 127, 139, 1031], "aarch64": [61, 154, 964], "multi": [63, 1082, 1089], "chmod": [63, 150, 322, 805, 806, 823, 828, 830, 832, 835, 887, 891], "snippet": [63, 163, 182, 307, 612, 883, 976], "subdirectori": [63, 149, 158, 170, 172, 195, 286, 302, 432, 436, 437, 490, 504, 731, 753, 804, 805, 806, 818, 828, 830, 847, 862, 866, 883, 884, 964, 1064, 1117], "stuff": [63, 70, 78, 100, 114, 142, 145, 149, 158, 163, 175, 179, 182, 195, 204, 205, 226, 240, 259, 261, 282, 308, 326, 425, 431, 533, 580, 729, 731, 737, 746, 778, 808, 838, 846, 852, 858, 874, 882, 912, 973, 975, 1031, 1071, 1076, 1078, 1110], "stuff_complet": 63, "strace": [63, 97, 143, 145, 340, 736, 741, 794, 901, 907, 920, 936, 945, 1143], "pid": [63, 143, 145, 146, 424, 797, 810, 814, 816, 920, 936, 939, 945, 949, 950], "4677": 63, "11hello": 63, "clock_gettime64": 63, "clock_monoton": [63, 722, 902, 936], "tv_sec": [63, 936], "164646": 63, "tv_nsec": [63, 936], "833862215": 63, "_newselect": 63, "tv_usec": 63, "500000": [63, 877, 883, 1081], "unfinish": [63, 145], "4679": 63, "resum": [63, 677, 678, 681, 682, 683, 774, 936], "timeout": [63, 717, 719, 721, 901, 1105], "mi": [63, 223], "845864201": 63, "4678": [63, 218], "fd": [63, 153, 215, 259, 507, 737, 882, 896, 900, 901, 902, 904, 908, 909, 910, 911, 914, 916, 919, 942, 945, 949, 1033], "fourth": 63, "involv": [63, 78, 143, 146, 150, 153, 205, 259, 271, 272, 293, 328, 405, 413, 419, 425, 490, 557, 559, 648, 749, 778, 875, 953, 962, 964], "occasion": [63, 131, 158, 175, 204, 221, 415, 429, 439, 641, 778, 822, 1000, 1014, 1075, 1090], "due": [63, 150, 175, 447, 711, 1105], "weird": [63, 259, 415, 685, 737, 762, 931, 949], "gil": [63, 175, 179, 271, 272, 293, 294, 297, 1076], "jitter": [63, 938, 940], "heavi": [63, 167, 175, 457, 884, 1000, 1135], "usr": [63, 143, 144, 148, 154, 163, 166, 171, 173, 195, 202, 203, 212, 215, 218, 228, 231, 235, 238, 241, 256, 261, 263, 273, 277, 319, 322, 432, 434, 435, 437, 438, 442, 664, 697, 707, 751, 778, 804, 810, 822, 834, 866, 869, 882, 884, 930, 940, 949, 952, 953, 954, 955, 964, 967, 969, 976, 979, 1003, 1064, 1079, 1092, 1105, 1112, 1119], "env": [63, 139, 144, 166, 261, 930, 940, 1003, 1030, 1064, 1079, 1092], "hello_left": 63, "hello_right": 63, "rjust": [63, 163, 231, 277], "hello_middl": 63, "center": [63, 166, 208, 223, 225, 231, 235, 256, 263, 277, 295, 316, 423, 503], "t1": [63, 162, 225, 235, 256, 260, 277, 921], "t2": [63, 162, 218, 225, 235, 256, 921], "t3": 63, "async": [63, 143, 175, 179, 212, 218, 228, 229, 231, 294, 675, 928, 951, 1076, 1145], "await": [63, 294], "epoll_wait": 63, "201": [63, 146, 176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 295], "multiplex": [63, 883, 902, 936, 1147], "create_task": 63, "sysf": [63, 114, 115, 119, 123, 140, 190, 259, 309, 310, 506, 731, 734, 735, 780, 874, 875, 882, 884, 915, 916, 919, 1134, 1141], "unmaintain": [63, 249, 258, 259, 954, 1018, 1127], "immun": [63, 564, 722], "hotplug": [63, 882], "reset": [63, 142, 454, 456, 706, 707, 708, 729, 1098, 1146], "pullup": 63, "pulldown": 63, "rpi": [63, 125, 154, 308, 778, 779, 882], "hope": [63, 143, 145, 148, 150, 154], "major": [63, 148, 161, 212, 218, 228, 231, 268, 270, 429, 433, 564, 737, 744, 809, 937, 1001, 1007, 1022], "releas": [63, 146, 172, 286, 302, 390, 436, 707, 718, 719, 721, 731, 737, 751, 875, 882, 925, 930, 966, 969, 1001, 1111, 1142], "ton": [63, 705, 817, 879, 904, 936, 940, 1130], "bartosz": 63, "golaszewski": 63, "gpiochip0": [63, 758, 918], "ioctl": [63, 259, 411, 744, 746, 772, 780, 781, 786, 792, 878, 882], "crw": [63, 742, 809, 860, 882, 883, 884], "254": [63, 164, 215, 218, 223, 225, 228, 235, 238, 256, 263, 273, 277, 283], "request": [63, 93, 98, 144, 145, 148, 205, 207, 232, 238, 294, 430, 449, 471, 485, 654, 655, 658, 659, 736, 780, 904, 919, 1110], "request_lin": 63, "consum": [63, 123, 145, 148, 165, 215, 294, 423, 440, 469, 719, 721, 803, 811, 818, 925, 926, 937, 942, 944, 946, 949, 976, 998, 1007, 1033, 1088, 1135], "mytest": 63, "config": [63, 97, 116, 117, 123, 132, 133, 139, 144, 146, 148, 154, 162, 256, 273, 277, 326, 333, 342, 506, 707, 731, 751, 779, 860, 882, 883, 884, 891, 966, 976, 1105], "lineset": 63, "set_valu": [63, 721], "all_io": 63, "transform": [63, 66, 163, 178, 179, 182, 184, 194, 199, 200, 202, 203, 210, 221, 223, 226, 229, 252, 259, 261, 270, 276, 294, 303, 307, 419, 510, 511, 523, 525, 578, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 675, 699, 731, 962, 982, 1026, 1059, 1076], "ntime": [63, 986], "task": [63, 77, 115, 117, 118, 122, 158, 200, 213, 226, 240, 243, 246, 276, 282, 326, 329, 331, 332, 335, 336, 337, 340, 731, 805, 806, 823, 865, 874, 882, 885, 900, 915, 921, 934, 935, 937, 938, 1076, 1110], "interv": [63, 89, 116, 182, 212, 218, 219, 228, 231, 235, 256, 294, 326, 491, 493, 506, 507, 647, 721, 722, 902, 912, 936, 940], "none": [63, 120, 127, 139, 142, 143, 148, 153, 162, 164, 176, 186, 193, 194, 203, 208, 209, 212, 215, 218, 224, 225, 228, 231, 235, 238, 244, 253, 256, 260, 261, 263, 273, 277, 283, 295, 317, 409, 410, 431, 434, 554, 640, 642, 901, 918, 946, 973, 976, 998, 1024, 1031, 1101, 1117], "itertool": [63, 240, 242, 294, 980], "cram": [63, 136, 173, 746, 936, 973, 1089], "goe": [63, 65, 85, 112, 118, 146, 148, 163, 268, 419, 454, 519, 622, 642, 651, 701, 742, 778, 820, 821, 907, 934, 940, 950, 953, 960, 1003, 1006, 1026], "stuff_raw": 63, "mod": [63, 231, 256, 276, 756], "sidewai": [63, 179, 182, 237, 335, 336, 981, 982], "numpi": [63, 175, 179, 194, 213, 219, 226, 261, 267, 295, 297, 431, 1000, 1075, 1079, 1082, 1090, 1094, 1105, 1112], "transpos": [63, 838], "col": 63, "tolist": 63, "outsid": [63, 231, 458, 471, 551, 559, 564, 706, 707, 768, 839, 921, 937, 976], "instanti": [63, 202, 326, 449, 460, 474, 475, 488, 489, 490, 493, 575, 604, 622, 643, 669, 675, 697, 710, 711, 988, 989, 1079], "coro": [63, 675, 677, 678, 680, 681, 682, 683], "cannot": [63, 110, 111, 139, 143, 144, 145, 150, 154, 165, 166, 172, 173, 175, 182, 202, 235, 262, 265, 308, 385, 386, 389, 390, 409, 411, 413, 416, 419, 437, 440, 452, 475, 503, 542, 551, 554, 556, 559, 560, 583, 618, 619, 621, 622, 624, 625, 629, 648, 651, 654, 660, 686, 696, 697, 701, 707, 709, 719, 721, 774, 778, 783, 798, 815, 820, 823, 834, 849, 857, 893, 937, 946, 968, 969, 970, 974, 976, 988, 993, 1000, 1008, 1009, 1015, 1016, 1026, 1095, 1097, 1098, 1110, 1135], "stuff_raw2": 63, "05": [63, 97, 114, 146, 153, 158, 202, 237, 260, 267, 278, 287, 290, 321, 339, 438, 1080], "runtimeerror": [63, 166, 202, 256, 307, 973, 975], "reus": [63, 112, 158, 164, 968, 1018], "alreadi": [63, 80, 114, 143, 144, 146, 154, 165, 167, 175, 179, 235, 262, 265, 402, 413, 419, 451, 471, 473, 484, 487, 506, 523, 603, 731, 737, 751, 758, 766, 776, 778, 781, 798, 874, 882, 883, 884, 891, 904, 905, 907, 912, 913, 915, 932, 967, 973, 1000, 1026, 1105, 1110, 1112, 1119], "bare": [63, 78, 80, 87, 89, 108, 125, 143, 340, 875, 883], "create_coro": 63, "ctor": [63, 170, 179, 228, 277, 503, 525, 533, 550, 553, 554, 557, 567, 569, 604, 627, 651, 652, 654, 658, 659, 684, 692, 707, 797], "nest": [63, 139, 203, 216, 225, 235, 242, 246, 263, 273, 353, 382, 383, 409, 669, 721, 725, 783, 973, 1016, 1103], "_blink": 63, "coro_cr": 63, "creator": [63, 137, 154], "create_factory_for_blink": 63, "blinkfunc": 63, "blink_func": 63, "stuff_decorator_stage1": 63, "stage1": 63, "stararg": [63, 974, 977, 998], "func": [63, 202, 212, 218, 228, 231, 262, 276, 509, 578, 647, 662, 669, 710, 974, 978], "becom": [63, 68, 78, 89, 92, 118, 120, 122, 143, 145, 171, 183, 262, 265, 285, 287, 290, 301, 368, 398, 400, 407, 410, 431, 447, 451, 490, 651, 706, 707, 708, 778, 815, 834, 867, 883, 884, 891, 934, 937, 938, 973, 979, 1009, 1111, 1117, 1132, 1133], "obsolet": [63, 175, 1000], "prog": [63, 216, 307], "demo": [63, 97, 98, 112, 114, 118, 143, 166, 170, 175, 178, 180, 183, 184, 187, 195, 202, 210, 213, 216, 219, 221, 226, 232, 249, 252, 255, 258, 259, 279, 280, 322, 340, 432, 433, 437, 438, 442, 445, 493, 501, 631, 708, 731, 808, 811, 812, 833, 834, 874, 903, 945, 954, 1000, 1082, 1116, 1136, 1140], "opposit": [63, 147, 383, 884, 937, 1089], "futur": [63, 114, 119, 121, 150, 215, 235, 247, 248, 250, 259, 303, 313, 335, 336, 407, 471, 641, 675, 717, 719, 720, 730, 731, 788, 1130], "steig": [64, 151], "normalweg": 64, "w\u00e4r": 64, "umst\u00e4nden": [64, 1125, 1129, 1144], "renat": 64, "beschreibung": [64, 187, 189, 197, 200, 203, 204, 206, 222, 234, 866], "bergfex": 64, "reden": 64, "sie": [64, 151, 157, 162, 166, 223, 228, 295, 317, 323, 340, 800, 865, 1124, 1126, 1127, 1128, 1134, 1144, 1146, 1147, 1148], "tagen": [64, 1134], "wir": [64, 161, 166, 170, 176, 178, 186, 187, 192, 206, 225, 231, 238, 291, 340, 608, 1125, 1140, 1141], "w\u00fcrden": 64, "denk": [64, 151, 207, 1144], "beiden": [64, 162, 176, 223, 231, 238], "h\u00fctten": [64, 152], "schlafen": 64, "hochk\u00f6nig": 65, "cite": [65, 150, 164, 175, 297], "complain": [65, 145, 154, 158, 172, 369, 542, 557, 558, 753, 781, 891], "subrepo": 65, "whole": [65, 222, 234, 235, 237, 240, 243, 252, 255, 294, 307, 431, 660, 669, 711, 753, 756, 778, 823, 905, 974, 1045, 1133], "subtitl": 65, "fight": [65, 817], "against": [65, 145, 154, 195, 203, 215, 216, 389, 431, 435, 439, 490, 506, 722, 751, 753, 758, 762, 770, 813, 910, 955, 960, 970, 984, 1042, 1103, 1110, 1135], "fake": [65, 882], "simplest": [65, 181, 243, 432, 449, 582, 589, 696, 717, 783, 813, 867, 931, 964, 1002, 1007, 1110, 1118], "unprofession": [65, 147], "populist": 65, "gtest_discover_test": 65, "robust": 65, "sentenc": 65, "implicitli": [65, 199, 204, 215, 396, 446, 554, 562, 652, 660, 741, 908, 973, 1005, 1089], "gtest_add_test": 65, "scan": [65, 212, 235, 238, 882, 884], "primit": [65, 143, 187, 188, 268, 982, 1130, 1140], "sort": [65, 85, 106, 108, 130, 143, 170, 176, 184, 188, 203, 205, 215, 216, 221, 223, 225, 226, 231, 239, 253, 256, 263, 268, 277, 283, 419, 420, 423, 424, 434, 525, 583, 601, 611, 615, 644, 685, 689, 697, 710, 719, 721, 731, 818, 822, 860, 871, 884, 975, 1023, 1024, 1078, 1103, 1105], "port": [65, 118, 139, 140, 145, 150, 155, 215, 249, 258, 279, 280, 294, 308, 340, 731, 811, 817, 865, 874, 885, 890, 894, 912, 1033, 1088, 1092, 1105, 1134, 1141], "trap": [65, 144, 205, 402, 407, 425, 553, 1129, 1131], "hehe": [65, 175, 182], "html_sidebar": 65, "rtd": [65, 140], "linkcheck": 65, "admonit": 65, "matrix": [65, 164, 166, 267, 329, 331, 420], "thoma": [65, 137], "cokela": 65, "ablog": 65, "couldn": [65, 150, 154, 179, 182, 1014], "figur": [65, 114, 129, 135, 140, 148, 149, 164, 219, 972], "piec": [65, 78, 136, 144, 409, 525, 577, 883, 914], "especi": [65, 86, 92, 112, 118, 144, 148, 167, 175, 259, 322, 340, 342, 368, 379, 409, 429, 651, 753, 884], "feed": [65, 84, 140, 1081], "blog_baseurl": 65, "nicer": [65, 938], "pour": [65, 447, 804], "tag": [65, 146, 148, 151, 152, 176, 192, 194, 236, 434, 442, 751, 966, 969, 1142], "resolv": [66, 77, 112, 154, 158, 212, 215, 218, 221, 228, 231, 238, 241, 256, 263, 273, 277, 386, 412, 561, 895, 952, 955, 1080, 1081], "buildenviron": 66, "resolve_refer": 66, "builder": [66, 215, 1033], "get_and_resolve_doctre": 66, "apply_post_transform": 66, "addnod": 66, "docstr": [66, 139, 199, 202, 212, 218, 224, 236, 239, 242, 264, 296, 322, 1004], "emit": [66, 84, 474, 475, 820], "doctre": 66, "increasingli": 68, "whose": [68, 154, 212, 218, 228, 231, 267, 277, 335, 336, 469, 539, 642, 643, 875, 976, 1110, 1117], "mainten": [68, 364, 390, 409, 969], "easier": [68, 80, 85, 92, 164, 205, 431, 457, 562, 646, 778, 1130], "never": [68, 110, 111, 143, 144, 145, 150, 163, 225, 231, 235, 277, 295, 368, 389, 405, 416, 419, 429, 447, 469, 548, 629, 707, 817, 875, 898, 923, 953], "simpler": [68, 154, 205, 269, 272, 347, 406, 440, 586, 774, 778, 883, 895], "wors": [68, 131, 146, 231, 415, 431, 669, 900, 1113], "makefil": [68, 97, 205, 248, 250, 432, 443, 747, 751, 779, 780, 957, 960, 962, 969, 970], "everytbodi": 69, "runtim": [69, 143, 154, 176, 180, 204, 228, 231, 344, 365, 413, 423, 424, 437, 442, 473, 474, 487, 501, 536, 545, 585, 603, 604, 647, 689, 696, 710, 711, 921, 952, 988, 1006, 1018, 1082, 1083], "dispatch": [69, 294, 536, 545, 621, 624, 625], "hell": [69, 195, 229, 415, 448, 661, 692, 714, 768, 803, 928, 1089], "destructor": [69, 70, 97, 106, 118, 123, 205, 221, 242, 268, 270, 324, 325, 453, 467, 495, 505, 519, 525, 534, 540, 547, 548, 549, 550, 555, 557, 572, 620, 621, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 660, 687, 703, 712, 718, 720, 728, 730, 731, 739, 770, 783, 795, 1122], "opportun": [69, 150, 153, 163, 175, 194, 419, 638, 989, 1133], "shoot": [69, 840], "oneself": [69, 1135], "encapsul": [70, 73, 203, 216, 221, 268, 270, 294, 308, 429, 449, 453, 467, 493, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 525, 547, 548, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 656, 687, 703, 712, 720, 728, 730, 731, 747, 780, 946, 1001, 1103, 1131], "hide": [70, 204, 216, 272, 1001], "fanci": [70, 1021, 1082, 1102], "whatnot": [70, 219, 719, 778, 875, 883, 901, 931], "boost": [71, 221, 442, 445, 525, 675, 939, 1148], "feel": [71, 143, 145, 154, 175, 542, 639, 641, 642, 647, 920, 938, 1000], "cluster_ecpropos": [72, 73, 74, 87, 731], "cluster_ecproposal_ec2": [72, 74, 731], "cluster_ecproposal_ec2_python": [72, 74, 731], "cluster_ecproposal_ec1": [72, 73, 74, 87, 731], "cluster_ecproposal_ec1_mt": [72, 73, 74, 87, 731], "cluster_ecproposal_ec1_linux": [72, 73, 74, 731], "cluster_ecproposal_ec1_cxx": [72, 73, 74, 87, 731], "ecproposal_ec2_python_exercise_avg_displai": [72, 74, 731], "ex": [72, 73, 74, 78, 87, 131, 203, 216, 519, 536, 697, 731, 823, 838, 1103, 1112], "averag": [72, 73, 74, 78, 84, 85, 179, 215, 219, 235, 270, 294, 452, 468, 498, 505, 731, 940, 1033], "displai": [72, 73, 74, 78, 115, 119, 123, 148, 212, 218, 228, 231, 256, 259, 261, 263, 268, 273, 277, 331, 423, 496, 731, 813, 860, 869, 882, 936, 1112], "ecproposal_ec2_python_exercise_sensor": [72, 74, 731], "temperatur": [72, 73, 74, 78, 82, 91, 94, 97, 114, 115, 118, 119, 123, 179, 212, 259, 294, 328, 331, 346, 348, 350, 448, 454, 459, 480, 494, 495, 496, 497, 498, 499, 500, 501, 505, 506, 507, 518, 536, 547, 625, 657, 731, 778, 874, 881, 913, 915, 932, 988, 1064, 1079, 1080, 1081, 1082], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [72, 73, 74, 731], "ecproposal_ec1_linux_exercise_avg_sensor": [72, 73, 74, 731], "ecproposal_ec1_linux_exercise_led_displai": [72, 73, 74, 731], "ecproposal_ec2_python_flask": [72, 74, 731], "ecproposal_ec2_python_bas": [72, 74, 731], "ecproposal_ec2_python_web_sensor": [72, 74, 731], "ecproposal_ec1_linux_exercise_sensor": [72, 73, 74, 731], "ecproposal_ec1_git": [72, 73, 74, 731], "ecproposal_ec1_mt_wait": [72, 73, 74, 87, 731], "ecproposal_ec1_mt_lock": [72, 73, 74, 87, 731], "avoid": [72, 73, 74, 78, 87, 143, 150, 158, 235, 355, 390, 468, 503, 505, 515, 549, 553, 604, 731, 776, 867, 883, 1131], "semaphor": [72, 73, 74, 76, 78, 87, 89, 138, 167, 168, 190, 212, 218, 228, 231, 340, 719, 731, 770, 925, 1135, 1145], "ecproposal_ec1_mt_exercise_mt_rac": [72, 73, 74, 87, 731], "ecproposal_ec1_mt_exercise_mt_race_fix": [72, 73, 74, 87, 731], "ecproposal_ec1_cxx_build": [72, 73, 74, 87, 731], "ecproposal_ec1_linux_dev_mgmt": [72, 73, 74, 731], "ecproposal_ec1_cxx_ifac": [72, 73, 74, 731], "ecproposal_ec1_linux_gpio": [72, 73, 74, 731], "ecproposal_ec1_linux_bas": [72, 73, 74, 731], "ecproposal_ec1_cxx_unittest": [72, 73, 74, 731], "ecproposal_ec1_cxx_oo_bas": [72, 73, 74, 731], "qualiti": [73, 150, 204, 267, 883, 1104], "assur": 73, "characterist": 73, "polymorph": [74, 106, 114, 115, 121, 202, 203, 216, 268, 270, 272, 287, 290, 431, 453, 467, 495, 547, 620, 624, 625, 644, 705, 710, 731, 1103, 1130, 1133], "concurr": [74, 175, 179, 229, 697, 768, 984, 1076], "increment": [75, 161, 204, 218, 221, 244, 267, 347, 351, 355, 375, 384, 391, 395, 397, 401, 404, 408, 417, 421, 426, 427, 525, 542, 649, 687, 728, 730, 731, 810, 922, 923, 924, 945, 946, 984], "lossi": 75, "access": [76, 78, 88, 110, 111, 116, 140, 144, 145, 146, 148, 150, 163, 173, 183, 190, 202, 212, 215, 218, 221, 228, 231, 238, 241, 256, 259, 263, 273, 277, 287, 308, 322, 325, 327, 359, 398, 419, 420, 458, 474, 499, 500, 501, 502, 525, 548, 560, 562, 565, 566, 568, 569, 583, 608, 622, 629, 632, 635, 636, 639, 640, 641, 642, 643, 644, 658, 675, 690, 694, 706, 731, 736, 746, 749, 755, 766, 774, 778, 780, 796, 811, 814, 823, 825, 826, 849, 874, 884, 893, 894, 900, 904, 908, 910, 914, 918, 922, 936, 937, 945, 950, 971, 976, 983, 984, 987, 1006, 1013, 1015, 1028, 1044, 1080, 1097, 1112, 1135], "flavor": [76, 87, 143, 432, 696, 701], "stash": 77, "suffic": [77, 150, 357, 407], "purpos": [77, 78, 80, 121, 136, 144, 148, 154, 175, 194, 212, 218, 228, 231, 243, 256, 325, 353, 431, 443, 550, 582, 622, 711, 778, 811, 820, 883, 905, 910, 931, 952, 970, 1000, 1081, 1111, 1134, 1141], "unifi": [78, 120, 123, 182, 575], "intention": [78, 204, 277, 662], "power": [78, 89, 142, 144, 159, 164, 204, 221, 323, 324, 325, 343, 355, 356, 398, 407, 778, 788, 795, 809, 875, 879, 882, 883, 884, 903, 918, 936, 940, 977, 995, 999, 1001, 1007, 1012, 1024, 1099], "being": [78, 81, 115, 131, 143, 146, 147, 153, 167, 175, 181, 202, 231, 235, 294, 322, 368, 395, 412, 448, 451, 536, 560, 603, 705, 707, 711, 713, 719, 729, 760, 774, 778, 813, 895, 910, 936, 983, 990, 1000, 1003, 1080, 1119, 1122, 1135], "address": [78, 99, 106, 110, 111, 114, 115, 143, 145, 146, 147, 150, 183, 190, 195, 202, 204, 205, 221, 223, 249, 258, 259, 270, 279, 280, 319, 324, 325, 333, 386, 388, 397, 401, 404, 407, 408, 416, 417, 421, 426, 427, 447, 453, 458, 461, 467, 469, 471, 476, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 547, 557, 562, 649, 659, 660, 687, 701, 720, 728, 730, 731, 758, 762, 774, 776, 805, 806, 807, 808, 811, 812, 814, 818, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874, 876, 878, 883, 884, 886, 887, 888, 889, 890, 895, 897, 901, 903, 905, 912, 913, 915, 920, 928, 929, 931, 932, 935, 937, 945, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 969, 984, 987, 1080, 1081, 1100, 1110], "crucial": [78, 143, 167, 422, 584], "mmu": [78, 143, 749, 792, 815, 936], "sophist": [78, 212, 448, 469, 506, 643], "permiss": [78, 97, 100, 101, 102, 114, 178, 179, 183, 185, 195, 202, 218, 238, 249, 258, 273, 276, 279, 294, 308, 317, 322, 323, 324, 325, 327, 495, 547, 633, 720, 729, 730, 731, 737, 778, 805, 806, 808, 811, 812, 815, 821, 824, 828, 829, 830, 831, 832, 834, 835, 836, 840, 852, 855, 857, 858, 860, 874, 875, 885, 888, 890, 891, 894, 895, 900, 903, 904, 905, 908, 910, 911, 913, 915, 929, 932, 935, 937, 938, 950, 975, 1076, 1105, 1112, 1136, 1145], "nativ": [78, 97, 104, 114, 142, 148, 150, 176, 212, 248, 250, 268, 329, 731, 778, 874, 953, 957, 959, 962, 1085, 1088, 1094], "varieti": [78, 425, 814, 952, 1133], "storag": [78, 148, 153, 432, 660, 778, 814, 875, 883, 900, 920, 1146], "underli": [78, 203, 210, 226, 235, 276, 322, 327, 697, 884, 1076, 1081, 1085], "platform": [78, 150, 203, 212, 216, 218, 228, 231, 235, 243, 261, 315, 324, 342, 758, 778, 883, 884, 918, 936, 1064, 1103, 1110, 1112], "offer": [78, 143, 153, 194, 269, 383, 560, 564], "popular": [78, 154, 167, 171, 378, 655, 803, 884, 936, 952, 968, 994, 1078, 1084, 1092, 1106, 1133], "often": [78, 89, 142, 143, 144, 145, 175, 225, 235, 262, 265, 285, 301, 364, 374, 395, 434, 449, 461, 575, 697, 778, 838, 914, 980, 1000, 1014, 1132, 1133], "appropri": [78, 120, 130, 136, 143, 153, 158, 163, 195, 235, 364, 378, 390, 505, 711, 774, 882, 894, 945, 1082, 1088, 1133], "prototyp": [78, 308, 355, 447, 509, 542, 658, 778, 875, 883, 896, 973, 1088], "higher": [78, 143, 154, 212, 218, 228, 231, 729, 776, 875, 937, 939, 946, 954, 962, 1088, 1132], "fulli": [78, 147, 150, 154, 179, 411, 506, 946], "distribut": [78, 148, 153, 158, 170, 175, 195, 205, 223, 235, 319, 447, 493, 501, 714, 749, 778, 816, 817, 938, 1000], "en": [78, 148, 160, 170, 231, 259, 627], "vogu": 78, "serial": [78, 142, 143, 153, 183, 218, 219, 231, 811, 813, 1134, 1141], "groundwork": 78, "lai": 78, "instruct": [78, 142, 146, 150, 173, 204, 259, 268, 270, 419, 490, 706, 721, 924, 936, 967, 1064], "consolid": [78, 175], "makeri": 78, "everybodi": [78, 148, 269, 411, 457, 551, 590, 633, 809, 1003, 1007, 1110, 1130], "clarifi": 78, "earli": [78, 142, 175, 179, 184, 269, 783, 795, 810, 938, 971, 988, 1026, 1132], "matter": [78, 142, 147, 148, 150, 158, 175, 181, 183, 349, 393, 425, 432, 439, 449, 549, 550, 562, 565, 651, 690, 697, 707, 709, 753, 778, 780, 823, 834, 876, 882, 884, 895, 975, 1000, 1101, 1112, 1122, 1133], "rewrit": [78, 80, 143, 431], "translat": [78, 91, 92, 163, 176, 194, 231, 235, 238, 241, 277, 696, 1043], "flask": [78, 93, 140, 179, 182, 974], "network": [78, 110, 111, 129, 138, 139, 140, 143, 150, 160, 161, 183, 185, 190, 215, 231, 238, 241, 252, 256, 258, 259, 263, 273, 277, 279, 294, 324, 340, 341, 425, 458, 731, 732, 755, 795, 811, 813, 814, 816, 874, 877, 878, 883, 884, 885, 895, 899, 900, 903, 904, 915, 934, 1141, 1145], "oppos": [80, 114, 142, 182, 216, 223, 233, 268, 390, 434, 439, 536, 862, 876, 883, 891, 925, 938, 945, 950, 969, 995, 1006, 1007, 1089, 1097], "ahead": [80, 158, 429, 990], "optimz": 80, "donald": [80, 418], "knuth": [80, 418], "prematur": [80, 418, 422], "optim": [80, 144, 256, 268, 405, 421, 422, 426, 427, 434, 731, 762, 1088, 1129, 1131], "evil": [80, 221, 359, 409, 418, 422, 434, 562], "knowledg": [81, 85, 262, 265, 268, 506, 640, 642, 778, 876, 884, 977, 999, 1104], "onewir": [81, 85, 97, 106, 114, 115, 123, 259, 270, 322, 325, 494, 495, 547, 731, 874, 881, 882, 913, 915, 932], "protocol": [81, 135, 148, 181, 182, 192, 214, 217, 219, 220, 224, 227, 230, 233, 242, 255, 257, 262, 265, 271, 272, 274, 275, 278, 281, 293, 294, 296, 297, 328, 331, 363, 371, 458, 471, 736, 865, 876, 878, 882, 884, 885, 893, 894, 914, 973, 977, 981, 988], "aspect": [81, 116, 175, 179, 205, 229, 268, 270, 454, 809, 882, 884, 1076, 1104, 1110, 1135], "regard": [81, 150, 175, 308, 838, 1000, 1007, 1106, 1110], "filesystem": [81, 85, 106, 114, 142, 145, 154, 183, 185, 195, 246, 322, 327, 506, 730, 731, 778, 804, 883, 895, 911, 918, 936, 955, 1110, 1136, 1141, 1143, 1147], "hwmon": [81, 85, 115, 328, 331], "composit": [82, 106, 123, 179, 205, 251, 269, 270, 287, 446, 453, 467, 481, 495, 547, 731, 980, 1133], "mock": [82, 114, 115, 121, 122, 123, 269, 271, 272, 293, 297, 309, 311, 495, 496, 497, 498, 500, 536, 547, 731, 1117], "pin": [84, 122, 259, 308, 875, 879, 882, 883], "light": [84, 153, 817, 999, 1110], "linearli": [84, 235, 589, 814], "cold": [84, 194], "hot": [84, 145, 420, 423, 760], "queri": [84, 1008], "said": [84, 110, 111, 145, 158, 175, 262, 265, 272, 469, 582, 629, 713, 719, 739, 875, 883, 884, 895, 922, 937, 980, 1000, 1020, 1089, 1102], "ds18s20": [85, 328, 1110], "datasheet": [85, 128, 774, 875, 884], "lm73": [85, 259, 328, 331, 731, 874, 881, 884], "ti": [85, 142, 429, 507, 551, 708], "hoc": [85, 205, 389], "report": [85, 115, 142, 145, 146, 158, 160, 162, 333, 415, 425, 548, 896, 931, 1117, 1119], "experi": [85, 131, 150, 175, 429, 434, 533, 883, 884, 1111], "subsystem": [86, 97, 98, 103, 104, 114, 161, 183, 190, 195, 232, 248, 250, 252, 258, 259, 268, 270, 271, 287, 293, 731, 756, 774, 788, 808, 812, 814, 874, 875, 882, 883, 884, 918, 934, 975, 1110, 1134, 1135, 1141], "deprec": [86, 122, 272, 616, 904, 918, 1130], "foremost": 87, "osen": [87, 89, 153, 713, 729, 936], "recurs": [87, 88, 179, 203, 212, 218, 228, 231, 717, 770, 783, 822, 823, 838, 850, 860, 867, 887, 894, 931, 1012, 1016, 1130], "mother": [88, 108, 159, 221, 525, 993, 1130], "protect": [88, 143, 145, 195, 203, 215, 268, 270, 370, 389, 487, 488, 548, 551, 562, 618, 620, 621, 644, 719, 731, 762, 770, 776, 815, 857, 883, 924, 925, 936, 984, 987, 996, 1122, 1135], "critic": [88, 143, 153, 425, 718, 768, 770, 1105], "kind": [88, 143, 145, 153, 158, 163, 175, 179, 212, 218, 219, 228, 229, 231, 243, 259, 271, 272, 293, 297, 454, 506, 554, 601, 651, 660, 705, 719, 809, 875, 882, 883, 984, 1076, 1102, 1104, 1135], "poll": [89, 149, 160, 770, 772, 795, 918, 923, 925, 942, 946, 1134, 1141, 1145, 1147], "second": [89, 142, 145, 146, 150, 162, 175, 181, 202, 208, 212, 216, 218, 228, 231, 235, 261, 263, 308, 343, 353, 407, 423, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 483, 487, 488, 489, 493, 496, 506, 542, 557, 605, 607, 608, 647, 676, 677, 696, 707, 708, 721, 722, 725, 726, 727, 788, 815, 820, 823, 883, 902, 905, 912, 936, 945, 949, 953, 954, 968, 969, 970, 1020, 1028, 1105, 1117, 1130], "readi": [89, 142, 875, 1110], "rare": [89, 148, 165, 179, 432, 442, 504, 506, 557, 655, 706, 860, 882, 899, 1011, 1015, 1028, 1111], "btw": [89, 147, 153, 175, 181, 195, 202, 222, 225, 322, 406, 747, 813, 1065, 1067], "increas": [89, 145, 419, 875, 938, 940, 968, 1133], "tight": [89, 167, 363, 721, 781, 1101], "bui": [89, 143, 448], "bigger": [89, 143, 175, 419, 1082], "avail": [89, 118, 123, 142, 143, 145, 146, 148, 154, 158, 167, 171, 175, 195, 204, 212, 218, 228, 231, 285, 293, 294, 297, 301, 341, 433, 435, 440, 444, 449, 474, 475, 675, 711, 717, 721, 751, 778, 783, 810, 834, 875, 879, 882, 883, 934, 937, 938, 955, 966, 971, 976, 983, 1007, 1025, 1026, 1075, 1084, 1101, 1105, 1112, 1113, 1132, 1135], "intro": [93, 114, 122, 123, 140, 170, 194, 204, 213, 226, 227, 240, 243, 262, 265, 270, 276, 282, 294, 547, 647, 655, 675, 699, 731, 874, 898, 915, 917, 919, 1076, 1131, 1133, 1145], "rout": [93, 179, 974], "jinja2": 93, "ss2022": [96, 731, 807, 808, 874], "ws2022": 96, "lab": [96, 106, 114, 322], "vo": [97, 106, 114, 328], "ku": [97, 105, 106, 114], "g1": [97, 731, 807, 808, 874], "g2": [97, 322, 731, 807, 808, 874], "08": [97, 99, 105, 114, 146, 153, 154, 155, 209, 212, 237, 241, 267, 339, 443, 875, 882, 884, 906, 967, 1080], "cont": [97, 114, 213, 276], "command": [97, 99, 112, 114, 139, 142, 147, 153, 183, 195, 200, 210, 212, 218, 219, 226, 228, 231, 240, 243, 249, 251, 258, 259, 276, 279, 280, 308, 322, 327, 340, 390, 411, 422, 434, 444, 445, 446, 453, 467, 471, 481, 495, 504, 547, 557, 706, 720, 730, 731, 778, 804, 805, 806, 807, 808, 811, 812, 813, 815, 816, 817, 818, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 840, 841, 842, 843, 845, 846, 847, 849, 850, 852, 853, 854, 856, 858, 866, 871, 874, 883, 884, 885, 886, 887, 894, 898, 903, 905, 913, 915, 929, 931, 932, 935, 936, 937, 938, 952, 953, 960, 964, 968, 1028, 1076, 1105, 1112, 1119, 1133], "wsl": [97, 98, 103, 104, 114, 232, 252, 258, 271, 287, 293, 731, 808, 812, 874, 955, 962, 963, 967], "homework": [97, 102, 105, 114, 145], "sshf": [97, 101, 114, 249, 258, 259, 279, 280, 329, 731, 874, 885, 890, 955, 964], "toolchain": [97, 103, 104, 106, 108, 114, 118, 138, 155, 170, 172, 259, 340, 431, 432, 438, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 547, 720, 730, 731, 779, 808, 811, 812, 874, 897, 903, 905, 912, 913, 915, 929, 932, 935, 937, 954, 955, 956, 957, 960, 968, 969, 970, 1001, 1125, 1127, 1128, 1129, 1137, 1143, 1145], "bashrc": [97, 104, 114, 142, 154, 215, 249, 258, 259, 273, 279, 280, 731, 808, 810, 858, 860, 874, 894, 964, 966], "studi": [97, 104, 204, 247, 248, 250, 251, 259, 303, 446, 453, 647, 687, 730, 731, 874, 957, 959, 962], "ds18b20": [97, 114, 123, 259, 322, 731, 874, 881, 912], "slave": [97, 114, 123, 259, 731, 874, 879, 881, 912], "redirect": [97, 100, 114, 144, 147, 183, 185, 195, 212, 218, 228, 231, 249, 258, 259, 279, 307, 322, 327, 731, 805, 806, 807, 808, 822, 842, 843, 845, 846, 849, 850, 852, 858, 871, 874, 904, 1026, 1126, 1136, 1143], "pipe": [97, 143, 148, 150, 163, 183, 185, 195, 249, 258, 259, 261, 279, 307, 322, 327, 729, 731, 808, 815, 820, 860, 865, 874, 904, 948, 949, 950, 964, 1026, 1126, 1136, 1143], "06": [97, 106, 114, 153, 184, 228, 247, 260, 267, 284, 287, 290, 321, 339, 431, 442, 525, 729, 1003, 1080], "past": [97, 143, 147, 148, 205, 221, 395, 580, 582, 586, 589, 593, 658, 751, 753, 817, 1071, 1075, 1127], "2p": [97, 104], "3p": [97, 104], "5p": [97, 104], "pointer": [97, 108, 114, 123, 146, 170, 246, 314, 323, 324, 325, 340, 353, 355, 357, 398, 399, 401, 402, 404, 406, 407, 408, 417, 421, 426, 427, 461, 506, 519, 536, 541, 543, 548, 549, 551, 559, 566, 568, 577, 581, 585, 589, 590, 593, 599, 603, 616, 649, 656, 657, 658, 685, 687, 692, 694, 696, 701, 706, 708, 711, 712, 720, 726, 727, 728, 730, 731, 737, 744, 749, 760, 766, 795, 798, 896, 922, 950, 1026, 1127, 1128, 1129, 1130, 1131, 1133], "exit": [97, 114, 139, 143, 145, 173, 194, 212, 218, 221, 228, 231, 253, 259, 294, 315, 340, 344, 396, 438, 445, 454, 557, 624, 704, 706, 731, 741, 746, 780, 874, 884, 900, 901, 902, 904, 905, 910, 912, 915, 916, 932, 942, 949, 950, 969, 975, 983, 984, 1002, 1005, 1018, 1028, 1038, 1055, 1105, 1112], "statu": [97, 114, 115, 139, 144, 146, 158, 212, 218, 221, 228, 231, 243, 253, 259, 340, 344, 396, 434, 438, 445, 624, 729, 731, 780, 794, 874, 905, 910, 912, 915, 932, 936, 949, 969, 1005, 1031, 1090], "yai": [97, 139, 215, 223, 225, 238, 244, 263, 273, 590, 641, 647, 931], "ol": [97, 114, 221, 268, 270, 277, 331, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 551, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 699, 703, 709, 712, 720, 728, 730, 731, 871, 946, 1021, 1026, 1048], "randomsensor": [97, 123, 454, 459, 468, 480, 494, 495, 501, 505, 515, 516, 517, 518, 520, 521, 547, 705, 706, 707, 708, 731, 988], "rectangl": [97, 136, 457, 525, 554, 570, 644, 731], "mystr": [97, 169, 221], "point3d": [97, 570, 644, 731], "cuboid": [97, 570, 644, 731], "hierarchi": [99, 106, 110, 111, 116, 179, 180, 182, 184, 202, 203, 216, 219, 231, 249, 258, 259, 279, 280, 290, 333, 420, 447, 448, 449, 452, 453, 467, 468, 472, 474, 495, 505, 547, 731, 808, 811, 812, 813, 824, 827, 828, 829, 830, 831, 832, 833, 838, 844, 850, 857, 874, 886, 887, 888, 889, 890, 915, 933, 962, 963, 1103], "parent": [99, 109, 110, 111, 145, 158, 160, 249, 258, 259, 279, 280, 729, 731, 758, 808, 810, 811, 812, 813, 814, 823, 824, 827, 828, 829, 830, 831, 832, 833, 841, 842, 843, 844, 845, 847, 849, 850, 851, 862, 874, 886, 887, 888, 889, 890, 915, 921, 962, 963], "login": [99, 114, 123, 148, 150, 183, 195, 249, 321, 322, 731, 805, 806, 808, 809, 810, 812, 814, 815, 816, 824, 827, 828, 829, 830, 831, 832, 833, 839, 874, 875, 883, 886, 887, 888, 889, 890, 891, 893, 895, 912, 962, 963, 1054, 1125, 1134, 1141], "bourn": [99, 114, 159, 183, 185, 249, 258, 259, 279, 322, 323, 324, 327, 340, 341, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 729, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 868, 874, 897, 903, 905, 913, 915, 916, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "verifi": [100, 102, 114, 120, 122, 131, 153, 159, 171, 183, 195, 259, 333, 542, 560, 731, 808, 813, 842, 845, 846, 849, 852, 858, 874, 887, 888, 890, 1042, 1079, 1082, 1105], "joke": [100, 143], "mostli": [100, 229, 340, 345, 351, 363, 379, 409, 418, 563, 604, 706, 711, 746, 814, 817, 838, 904, 931, 934, 955, 1132], "secur": [101, 114, 146, 148, 150, 195, 215, 221, 249, 258, 279, 321, 731, 805, 806, 811, 813, 816, 834, 838, 874, 875, 885, 886, 887, 888, 889, 893, 904, 912, 962, 963, 969, 971, 1003, 1033], "account": [101, 110, 111, 114, 148, 150, 170, 175, 179, 180, 215, 221, 231, 238, 241, 256, 260, 261, 263, 273, 277, 322, 327, 352, 425, 431, 629, 647, 751, 882, 895, 1000, 1080], "authent": [101, 114, 183, 195, 204, 249, 258, 259, 279, 280, 319, 322, 731, 805, 806, 874, 885, 886, 887, 888, 889, 890, 895, 1042], "ownership": [101, 114, 170, 205, 259, 280, 294, 495, 515, 519, 525, 547, 660, 702, 705, 706, 720, 730, 731, 805, 806, 808, 811, 812, 815, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 874, 903, 904, 905, 913, 915, 929, 932, 935, 937, 1130, 1133], "setuid": [101, 114, 183, 249, 258, 259, 279, 280, 731, 808, 813, 833, 874], "quick": [102, 114, 175, 182, 200, 204, 210, 219, 226, 240, 252, 282, 474, 711, 865, 875, 1076, 1102], "credenti": [102, 114, 150, 243, 731, 806, 807, 808, 813, 827, 828, 829, 830, 831, 832, 833, 874, 891, 920, 973], "share": [102, 103, 106, 110, 111, 114, 125, 138, 143, 145, 150, 154, 158, 167, 168, 170, 171, 173, 176, 195, 205, 212, 215, 218, 228, 231, 235, 238, 241, 246, 247, 248, 250, 256, 259, 263, 273, 277, 286, 302, 303, 319, 340, 341, 385, 412, 413, 419, 425, 432, 436, 443, 444, 448, 460, 505, 525, 533, 647, 708, 710, 711, 719, 721, 728, 730, 731, 756, 760, 776, 783, 807, 808, 811, 817, 827, 830, 831, 833, 869, 874, 883, 907, 920, 922, 928, 934, 940, 952, 955, 962, 964, 984, 987, 1119, 1134, 1135, 1143, 1145], "adjust": [102, 133, 137, 731, 778, 874, 883, 888, 890, 946, 953], "ubuntu": [103, 118, 144, 150, 154, 158, 170, 171, 172, 173, 183, 248, 250, 259, 340, 731, 817, 874, 877, 895, 954, 955, 962, 963, 967, 1112, 1117], "zoom": [103, 104, 114, 150, 159, 175, 259, 273, 340, 432, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 731, 860, 874, 954, 957, 958, 959, 960, 962, 1124], "recap": [104, 114, 179, 183, 192, 221, 268, 269, 296, 322, 543, 982], "endeavor": 104, "hoop": [104, 817, 949], "doze": [104, 149, 204, 205, 218, 322, 329, 407, 729, 817, 862, 1020, 1026, 1112], "pictur": [104, 140, 143, 164, 175, 179, 272, 273, 419, 425, 504, 790, 838, 840, 860, 875, 894, 898, 1145], "fit": [104, 154, 159, 164, 166, 363, 368, 448, 572, 647, 669, 737, 778, 875, 1079, 1081, 1090], "theori": [106, 179, 392, 419, 1081], "Of": [106, 114, 119, 123, 145, 148, 178, 179, 229, 247, 248, 250, 252, 259, 268, 270, 303, 453, 467, 495, 505, 547, 580, 620, 631, 644, 728, 730, 731, 807, 822, 869, 874, 912, 915, 917, 982, 1076, 1089, 1133], "ece20": [106, 109, 490, 506, 567, 805, 806, 813], "uml": [106, 123, 251, 269, 271, 272, 453, 467, 495, 505, 547, 731], "foundat": [106, 226, 256, 453, 467, 495, 547, 731, 778, 1141], "adapt": [106, 123, 146, 179, 251, 269, 446, 453, 455, 456, 467, 471, 481, 485, 495, 547, 711, 731, 883, 884, 1133], "syllabu": [106, 330], "vote": 106, "beurteilungsschema": 106, "grade": [106, 109, 114, 123, 326, 336, 1110], "total": [106, 109, 112, 145, 154, 158, 162, 215, 231, 241, 248, 418, 423, 431, 445, 454, 469, 503, 504, 505, 506, 557, 567, 706, 860, 862, 875, 882, 883, 884, 895, 918, 946, 953, 954, 955, 964, 967, 1031, 1033, 1117], "compos": [106, 116, 125, 159, 221, 294, 357, 449, 628, 778, 966, 969, 978, 992, 1038, 1089], "practic": [106, 216, 225, 229, 235, 392, 429, 582, 621, 658, 693, 700, 882, 908, 950, 1084, 1103, 1130, 1133], "theoret": [106, 324, 343, 714], "semest": [106, 109, 326, 328], "addition": [106, 142, 145, 368, 452, 469], "deliv": [106, 143, 878, 949, 950], "variou": [106, 145, 221, 247, 248, 705, 719, 721, 778, 810, 1135], "weight": [106, 166, 175, 414, 772, 884, 1000], "decid": [106, 144, 145, 150, 175, 229, 418, 448, 509, 523, 587, 774, 778, 798, 882, 983, 1000], "excerpt": [106, 179, 182, 324, 325, 1033, 1090], "w1": [106, 114, 115, 259, 490, 506, 507, 912], "soup": [106, 140, 432, 434, 435, 437, 438, 440, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 456, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 503, 505, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 627, 707, 916, 919, 976, 979, 1028, 1110, 1119], "armv8": [106, 154, 259, 507, 953, 966, 967], "rpi4": [106, 154, 259, 507, 953, 966, 967], "gnueabihf": [106, 154, 259, 507, 778, 953, 964, 966, 967], "shape": [106, 136, 164, 166, 205, 267, 268, 495, 525, 547, 567, 647, 731, 778, 904, 1081, 1084, 1094], "algorithm": [106, 144, 153, 164, 212, 218, 226, 228, 231, 239, 241, 247, 248, 268, 277, 419, 495, 512, 536, 543, 547, 574, 585, 587, 588, 590, 591, 594, 595, 611, 614, 615, 644, 689, 697, 699, 710, 714, 731, 1055, 1078, 1082], "find_if": [106, 108, 205, 221, 268, 303, 589, 592, 611, 615, 632, 641, 644, 710, 731], "customiz": [106, 268, 592, 611, 615, 644, 731], "binary_search": [106, 108, 205, 221, 268, 592, 611, 615, 644, 731], "associ": [106, 154, 172, 180, 182, 184, 200, 205, 259, 262, 265, 268, 270, 366, 367, 375, 380, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 495, 496, 512, 514, 547, 582, 611, 615, 644, 647, 649, 675, 687, 728, 730, 731, 737, 744, 802, 876, 904, 976, 1006, 1007, 1008, 1024, 1026, 1083, 1133], "hour": [106, 148, 150, 175, 179, 212, 234, 252, 263, 276, 328, 1038, 1076, 1083], "sent": [106, 143, 144, 183, 288, 425, 471, 818, 926, 946, 950, 1092], "015": 106, "voluntari": 106, "odd": [106, 114, 235, 270, 407, 495, 509, 512, 547, 731, 883, 978, 980], "char": [107, 145, 161, 204, 221, 231, 277, 345, 352, 357, 358, 361, 363, 364, 365, 368, 369, 382, 387, 390, 395, 396, 403, 407, 413, 414, 416, 432, 450, 454, 484, 488, 493, 507, 508, 539, 554, 557, 558, 562, 572, 612, 627, 628, 642, 658, 660, 685, 692, 709, 734, 737, 742, 758, 760, 772, 798, 882, 896, 900, 901, 904, 908, 909, 910, 911, 914, 916, 919, 933, 936, 942, 945, 946, 949, 970, 1015, 1021, 1087, 1117, 1122], "cout": [107, 116, 154, 433, 439, 454, 468, 473, 474, 475, 487, 488, 489, 490, 493, 501, 505, 506, 533, 551, 553, 558, 560, 564, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 628, 631, 638, 641, 647, 652, 662, 664, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 689, 691, 692, 694, 695, 697, 699, 708, 709, 710, 711, 719, 721, 722, 821, 882, 916, 919, 931, 933, 945, 949, 1117], "endl": [107, 154, 433, 454, 468, 473, 474, 475, 487, 488, 489, 490, 493, 501, 505, 506, 533, 551, 553, 558, 560, 564, 565, 572, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 628, 631, 638, 641, 647, 662, 664, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 689, 691, 692, 694, 695, 697, 699, 708, 709, 710, 711, 719, 721, 722, 882, 916, 919, 931, 933, 945, 949, 1117], "constitut": 107, "_id": 107, "objectcontain": 107, "add_object": 107, "_contain": [107, 697], "push_back": [107, 478, 479, 542, 583, 584, 585, 590, 593, 596, 600, 604, 651, 652, 655, 660, 719, 949, 1122], "fragment": [107, 420, 980, 1117], "iostream": [107, 212, 218, 228, 231, 454, 468, 473, 474, 475, 483, 487, 488, 489, 490, 493, 501, 505, 533, 551, 553, 558, 560, 564, 565, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 590, 591, 594, 595, 596, 600, 604, 605, 606, 607, 608, 614, 618, 619, 622, 624, 625, 631, 637, 638, 639, 640, 641, 642, 647, 652, 662, 665, 666, 667, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 683, 684, 689, 691, 692, 694, 697, 699, 708, 709, 710, 711, 719, 721, 729, 882, 916, 919, 923, 931, 933, 945, 949, 950, 1117], "my_vector": 107, "sysroot": [108, 154, 953, 967], "intel": [108, 128, 132, 146, 731, 952], "header": [108, 139, 171, 205, 221, 246, 276, 285, 286, 301, 302, 389, 390, 391, 397, 401, 404, 408, 412, 417, 421, 426, 427, 431, 436, 437, 438, 443, 444, 454, 575, 649, 664, 669, 687, 693, 728, 730, 731, 822, 879, 884, 953, 955, 964, 1033, 1066, 1070, 1071, 1073, 1081, 1084, 1132], "match": [108, 142, 149, 178, 191, 208, 215, 216, 218, 223, 231, 241, 243, 244, 253, 256, 276, 277, 283, 294, 387, 431, 506, 660, 664, 684, 697, 701, 813, 822, 895, 955, 975, 1021, 1076, 1117], "linker": [108, 110, 111, 138, 170, 285, 301, 386, 412, 419, 423, 424, 435, 442, 564, 575, 778, 952, 955, 958, 962, 969, 1127, 1128, 1129, 1132, 1137, 1143], "uniquifi": [109, 270, 495, 512, 547, 731], "lookup": [109, 117, 163, 180, 193, 212, 218, 223, 228, 231, 245, 277, 414, 469, 495, 512, 514, 547, 662, 731, 988, 1017, 1024, 1054, 1089, 1098, 1147], "leak": [109, 145, 402, 416, 454, 474, 475, 495, 512, 514, 515, 531, 539, 542, 547, 548, 554, 619, 693, 704, 706, 731, 976], "sure": [109, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 183, 195, 202, 219, 221, 261, 319, 413, 448, 449, 452, 471, 474, 475, 504, 530, 627, 701, 726, 778, 883, 884, 905, 909, 964, 976, 1133], "gz": [109, 139, 778, 779, 802, 803, 804, 1031, 1112], "whatev": [109, 117, 120, 122, 142, 143, 145, 150, 166, 181, 241, 308, 425, 471, 550, 650, 675, 729, 843, 845, 895, 900, 936, 938, 1006, 1073, 1081, 1088, 1089, 1112], "quiz": [110, 111, 114, 630, 644, 731, 808, 812, 827, 833, 852, 858, 874, 959, 962], "servic": [110, 111, 139, 148, 149, 150, 183, 215, 231, 238, 241, 256, 263, 273, 277, 425, 431, 714, 770, 776, 781, 811, 814, 865, 884, 893, 895, 902, 938, 1005], "owner": [110, 111, 144, 183, 322, 327, 707, 737, 778, 811, 825, 826, 834, 860, 895, 923], "dimension": [110, 111, 164, 669, 811, 1081, 1082], "identifi": [110, 111, 144, 153, 212, 218, 228, 231, 277, 368, 390, 411, 413, 423, 638, 736, 776, 811, 882, 884, 1022, 1083], "pthread": [110, 111, 143, 154, 160, 212, 218, 228, 231, 713, 719, 811, 920, 925, 928, 936, 950, 955], "timeslic": [110, 111, 143, 811, 934, 939], "suspend": [110, 111, 143, 144, 675, 677, 717, 774, 809, 811, 822, 925, 950], "favor": [110, 111, 811, 937, 1130], "fair": [110, 111, 143, 776, 811, 937, 939], "ensur": [110, 111, 231, 449, 497, 811], "evenli": [110, 111, 223, 811], "cpu": [110, 111, 142, 143, 146, 150, 153, 176, 186, 190, 270, 333, 337, 405, 406, 418, 420, 425, 583, 714, 721, 731, 749, 762, 776, 783, 788, 798, 809, 811, 814, 818, 874, 882, 883, 884, 898, 915, 923, 925, 935, 936, 937, 938, 939, 986, 1003, 1135], "infinit": [110, 111, 143, 163, 182, 212, 216, 218, 221, 223, 228, 231, 239, 272, 276, 380, 398, 405, 811, 815, 934, 937, 980, 981, 982, 1011, 1046], "illus": [110, 111, 811, 815, 934, 937, 1135], "action": [110, 111, 153, 182, 238, 432, 438, 550, 629, 837, 838, 899, 904, 936, 949, 951, 1083, 1105], "undefin": [110, 111, 204, 361, 368, 395, 438, 556, 564, 588, 595, 600, 624, 629, 660, 689, 949], "behavior": [110, 111, 143, 145, 148, 180, 202, 204, 231, 368, 588, 595, 600, 629, 660, 677, 811, 905, 909, 950, 953, 973, 978, 995], "declar": [110, 111, 203, 204, 216, 221, 344, 360, 375, 384, 389, 391, 397, 398, 401, 404, 405, 408, 411, 412, 413, 417, 419, 421, 426, 427, 432, 552, 562, 622, 629, 638, 639, 649, 660, 669, 685, 687, 707, 728, 730, 731, 884, 904, 908, 910, 911, 937, 1103, 1119], "promis": [110, 111, 145, 247, 248, 250, 259, 303, 355, 413, 471, 539, 551, 560, 629, 675, 677, 678, 681, 682, 719, 720, 730, 731, 949, 1001, 1130], "caller": [110, 111, 145, 221, 355, 357, 393, 399, 423, 425, 562, 629, 641, 658, 707, 709, 714, 717, 770, 781, 921, 925, 976, 1055], "uniniti": [110, 111, 416, 542, 549, 551, 552, 553, 556, 629, 733], "guarante": [110, 111, 143, 181, 212, 231, 407, 452, 629, 742, 749, 883, 884, 937, 938, 946, 973], "contigu": [110, 111, 420, 583, 600, 629, 764, 914, 1097], "vec": [110, 111, 549, 551, 558, 565, 566, 567, 568, 569, 629], "carri": [112, 145, 150, 165, 411, 443, 452, 469, 729, 882, 939, 952, 975], "norm": [112, 221, 1089], "meantim": [112, 454, 899], "fresh": [112, 144], "made": [112, 116, 136, 137, 142, 143, 144, 146, 149, 150, 154, 158, 195, 210, 235, 259, 294, 322, 354, 392, 393, 395, 398, 429, 449, 453, 469, 475, 675, 762, 778, 809, 810, 815, 875, 882, 908, 914, 919, 937, 955, 980, 987, 997, 1033, 1081], "sinc": [112, 125, 154, 160, 205, 211, 242, 318, 419, 422, 551, 559, 560, 590, 603, 646, 647, 675, 696, 701, 707, 722, 729, 778, 882, 895, 902, 908, 911, 923, 938, 945, 1006, 1131], "whichev": 112, "enumer": [112, 158, 164, 166, 176, 182, 187, 188, 192, 194, 200, 201, 203, 224, 228, 233, 239, 253, 257, 274, 277, 296, 364, 411, 431, 648, 739, 774, 884, 1140], "pack": [112, 154, 158, 204, 504, 525, 804, 838, 876, 878], "unpack": [112, 158, 162, 182, 188, 192, 194, 199, 203, 207, 212, 215, 220, 224, 225, 231, 236, 238, 242, 243, 254, 259, 261, 264, 273, 277, 295, 307, 322, 701, 778, 804, 876, 878, 882, 953, 960, 966, 967, 1006, 1024, 1130], "kib": [112, 158], "222": [112, 176, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 438], "checkout": [112, 125, 135, 146, 158, 172, 751, 778, 779, 1142], "previou": [112, 147, 163, 294, 490, 542, 558, 640, 838, 870, 910, 977, 979, 999, 1001, 1045, 1104], "9bfda12": 112, "mosquitto": [112, 119, 215, 219, 231, 238, 241, 256, 263, 273, 277, 1070, 1092], "client": [112, 118, 125, 148, 150, 161, 206, 210, 238, 252, 429, 457, 458, 471, 710, 711, 878, 891, 893, 901, 946, 1088, 1105], "smoothli": 112, "forward": [112, 158, 221, 247, 248, 249, 258, 279, 280, 303, 360, 375, 384, 390, 391, 397, 401, 404, 408, 417, 421, 426, 427, 612, 649, 656, 687, 697, 728, 730, 731, 778, 838, 862, 870, 874, 875, 885, 890, 1130], "diverg": [112, 936], "00aea42": 112, "delet": [112, 170, 182, 212, 231, 246, 256, 277, 317, 416, 447, 450, 489, 506, 515, 519, 531, 539, 554, 557, 616, 619, 624, 647, 657, 658, 659, 687, 692, 704, 705, 706, 707, 730, 731, 756, 786, 815, 1085, 1112, 1129, 1130], "footnot": [112, 146, 148, 149, 150, 153, 154, 159, 166, 172, 175, 178, 262, 265, 448, 475, 519, 566, 568, 569, 582, 612, 631, 747, 749, 810, 817, 832, 882, 883, 884, 905, 908, 968, 1000, 1003, 1033, 1067, 1082, 1130, 1133], "term": [112, 143, 145, 167, 195, 235, 268, 270, 319, 419, 562, 565, 629, 707, 710, 811, 884, 903, 937, 949, 1081, 1117], "ss2023": 113, "ws2023": [113, 115, 116, 117, 118, 120, 122, 731], "firstnam": [114, 123, 176, 202, 215, 223, 225, 228, 231, 235, 238, 241, 243, 244, 253, 256, 263, 277, 283, 288, 295, 308, 313, 449, 450, 478, 484, 493, 494, 507, 562, 608, 634, 638, 640, 642, 659, 805, 806, 842, 843, 845, 847, 850, 976, 989, 990, 992, 993, 994, 996, 997, 1005, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1084, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "lastnam": [114, 123, 176, 205, 215, 221, 223, 225, 228, 231, 235, 238, 241, 243, 244, 256, 263, 277, 283, 288, 295, 308, 313, 449, 450, 478, 484, 493, 494, 507, 562, 608, 632, 634, 638, 641, 644, 659, 731, 805, 806, 842, 843, 845, 847, 850, 976, 989, 990, 992, 993, 994, 996, 997, 1005, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1084, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "bouncem": [114, 123, 506, 507, 805, 806], "procf": [114, 183, 185, 259, 731, 816, 874, 915, 932, 1134, 1141], "umask": [114, 249, 258, 259, 279, 280, 322, 327, 731, 808, 833, 857, 874, 908, 920], "diff": [114, 199, 218, 549, 551, 995, 1136], "raspi": [114, 139, 273, 322, 328, 731, 755, 778, 779, 780, 782, 787, 793, 796, 799, 874, 876, 877, 878, 879, 882, 883, 884, 966, 967], "spirit": [114, 383], "readm": [114, 127, 162, 268, 270, 882, 883], "modular": [114, 175, 180, 182, 210, 229, 261, 324, 325, 355, 432, 952, 979], "plc": 114, "sallok": 114, "constantsensor_nopoli": [114, 123, 495, 501, 547, 731], "randomsensor_nopoli": [114, 123, 495, 547, 731], "ece21": [114, 123], "labexam": 114, "hysteresis_nopoli": [114, 115, 123, 495, 496, 547, 731], "upload": [114, 149, 838, 1031, 1104], "j": [114, 140, 148, 154, 191, 206, 208, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 277, 283, 295, 369, 372, 389, 413, 420, 469, 562, 651, 662, 710, 788, 804, 960, 964, 980, 1089, 1095], "bz2": [114, 144, 425, 778, 800, 803, 973], "influenc": [114, 953, 1130], "felber": 114, "vscode": [114, 173, 328, 342, 860], "folder": [114, 149], "comprehend": [114, 229, 368, 374, 949], "workspacefold": 114, "suppli": [114, 145, 183, 507, 509, 553, 737, 778, 794, 813, 875, 879, 882, 884, 899, 908, 1037], "cpprefer": [114, 587, 588, 589, 590, 591, 593, 594, 595, 596, 599, 608, 627], "averagingsensor_nopoli": [114, 123, 495, 547, 731], "toolcas": [114, 268, 270, 664], "mocksensor_nopoli": [114, 123, 495, 496, 497, 498, 547, 731], "specifi": [114, 143, 160, 231, 243, 277, 363, 431, 440, 493, 496, 501, 504, 553, 633, 647, 662, 686, 697, 778, 838, 895, 908, 912, 938, 950, 1003, 1018, 1026, 1030, 1047, 1066, 1068, 1097, 1099, 1105], "hint": [114, 120, 158, 231, 243, 272, 346, 449, 509, 519, 523, 634, 805, 806, 818, 887, 936], "target_link_librari": [114, 171, 435, 437, 438, 439, 440, 444, 490, 526, 529, 535, 541, 544, 948, 953, 954, 1116, 1119, 1121], "inter": [114, 143, 161, 167, 937, 1134, 1141, 1144, 1146], "likewis": [114, 218, 536, 567, 804, 823, 894, 910, 960, 1081, 1119], "ledstripedisplay_nopoli": [114, 123, 495, 547, 731], "somewhat": [115, 163, 204, 419, 452], "02131d959eaa": [115, 490, 506, 507, 912], "heat": [115, 251, 446, 453, 497, 506, 731, 884, 1080, 1081], "hwmon2": [115, 882], "temp1_input": [115, 882, 884], "boilingpot": 115, "hysteresi": [115, 121, 122, 123, 331, 497], "knob": [115, 1004], "steer": 115, "desir": [115, 148, 212, 218, 228, 231, 364, 368, 379, 501, 551, 553, 559, 641, 776, 909, 911, 1083], "hardcod": [115, 144, 326, 525, 737, 741, 1042], "ledstripedisplai": [115, 120, 121, 122], "unreason": 115, "cluster_fh2021": [115, 116, 117, 118, 119, 120, 122, 731], "fh2021_boiling_pot": [115, 119, 122, 731], "fh2021_switch_interfac": [115, 119, 122, 731], "fh2021_sysfs_gpio_switch": [115, 119, 122, 731], "termin": [116, 142, 144, 148, 162, 173, 195, 241, 243, 259, 262, 265, 268, 270, 272, 344, 347, 351, 354, 357, 364, 376, 382, 405, 425, 431, 443, 447, 473, 474, 506, 525, 554, 675, 681, 708, 714, 794, 813, 816, 820, 821, 822, 838, 860, 870, 871, 904, 922, 926, 931, 936, 948, 949, 950, 1005, 1007, 1011, 1026, 1038, 1055, 1083, 1089, 1092, 1141], "style": [116, 139, 143, 148, 212, 218, 221, 228, 231, 270, 415, 430, 431, 525, 550, 551, 556, 590, 624, 627, 638, 647, 652, 683, 699, 724, 746, 795, 918, 1004, 1045, 1070, 1081], "reusabl": 116, "compon": [116, 203, 216, 422, 862, 937, 1103], "dedic": [116, 143, 144, 175, 180, 229, 259, 262, 265, 415, 431, 746, 816, 817, 882, 883, 884, 918, 920, 954, 972, 983, 1016, 1133], "constrain": [116, 816], "decoupl": [116, 219, 447, 936], "sink": [116, 119, 123, 271, 272, 287, 290, 293, 297, 731], "prebuilt": [116, 882], "order": [116, 123, 130, 136, 142, 148, 149, 153, 154, 163, 175, 176, 179, 181, 212, 218, 223, 229, 233, 235, 238, 268, 285, 301, 348, 374, 385, 407, 419, 434, 449, 468, 523, 525, 532, 534, 597, 643, 729, 733, 749, 762, 778, 867, 875, 882, 884, 900, 939, 964, 980, 1000, 1048, 1058, 1132], "sensorconfig": [116, 123], "sensorvalu": [116, 117, 118, 468, 482], "acquisitionloop": [116, 294], "n_iter": 116, "doit": [116, 215, 454], "write_measur": [116, 294], "mockingsink": 116, "receiv": [116, 144, 163, 218, 221, 259, 288, 355, 471, 562, 660, 737, 749, 770, 778, 838, 875, 878, 884, 891, 899, 904, 926, 934, 949, 950, 973, 976, 1026, 1057, 1072, 1089], "yaml": 116, "ini": [116, 127, 148, 162, 330, 333, 1110], "fh2021_datalogg": [116, 117, 118, 119, 731], "predecessor": [117, 118, 229, 237, 243, 287, 290], "sinklogg": [117, 118], "csvsink": [117, 294], "logfil": [117, 144, 182, 820, 871], "linksoben": 117, "rechtsunten": 117, "addmeasur": 117, "rememb": [117, 148, 149, 164, 171, 181, 202, 374, 407, 457, 583, 584, 618, 621, 658, 659, 707, 774, 778, 820, 835, 838, 857, 882, 891, 893, 974, 1040, 1050], "csvname": [117, 216, 261, 431], "valuenam": 117, "_config": 117, "sensor_valu": 117, "getmeasur": 117, "rotat": [117, 144, 875, 900], "backup": [117, 149, 183, 432, 807, 809, 891, 1094], "fh2021_datalogger_csv_sink": [117, 119, 731], "struct": [118, 146, 170, 204, 205, 221, 390, 395, 401, 402, 403, 404, 407, 408, 411, 413, 415, 417, 421, 426, 427, 449, 454, 471, 506, 507, 551, 552, 557, 559, 561, 562, 582, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 647, 649, 650, 651, 652, 659, 675, 678, 680, 681, 682, 683, 687, 692, 710, 711, 721, 728, 729, 730, 731, 737, 739, 742, 744, 746, 747, 749, 762, 766, 768, 770, 772, 774, 780, 781, 786, 788, 791, 795, 797, 798, 876, 878, 882, 901, 902, 914, 925, 936, 939, 945, 946, 949, 950, 1131], "sensor_config": 118, "getallmeasur": 118, "localhost": [118, 1087, 1092], "1883": [118, 1092], "transport": [118, 167, 219, 221, 504, 721, 1072, 1092], "sensor1": [118, 253, 454], "sensor2": [118, 454], "api": [118, 143, 150, 167, 190, 204, 231, 333, 337, 731, 734, 741, 749, 756, 760, 772, 874, 915, 927, 935, 938, 946, 1031, 1087, 1106, 1134, 1135], "burden": [118, 431, 564, 978, 1111], "handmad": 118, "fedora": [118, 139, 148, 154, 155, 158, 172, 259, 519, 731, 735, 738, 740, 743, 745, 748, 755, 757, 758, 759, 763, 769, 775, 779, 782, 787, 793, 796, 799, 834, 838, 874, 877, 954, 955, 962, 963, 964, 967, 1092, 1117], "mosquitto_new": 118, "mosquitto_connect": 118, "mosquitto_destroi": 118, "prohibit": [118, 559], "wide": [118, 150, 154, 345, 346, 810, 891, 946, 952], "boil": [118, 119, 122, 123, 731, 778], "pot": [118, 119, 122, 123, 731], "iot": [118, 119, 122, 123, 219, 259, 731], "broadcast": [118, 719, 876, 883, 925, 950, 1147], "flexibl": [118, 251, 440, 446, 460, 467, 481, 495, 547, 593, 731, 921, 936, 952, 953, 954, 969, 970, 1021, 1125], "fh2021_datalogger_mqtt_sink": [118, 119, 731], "cycl": [119, 123, 205, 240, 429, 431, 675, 706, 720, 730, 731, 874, 875, 883, 915, 929, 935], "logger": [119, 123, 272, 290, 294, 297, 711, 731], "pwm": [119, 123, 259, 268, 731, 778, 874, 875, 881, 918, 1134, 1141], "wrapper": [119, 202, 231, 241, 246, 283, 452, 650, 675, 898, 946, 974, 995, 1078], "fh2021_pwm_displai": [119, 120, 731], "pca9685": [120, 123, 259, 731, 874, 875, 881], "percentag": [120, 423], "pwmdisplai": 120, "bit": [120, 122, 137, 142, 143, 145, 148, 150, 153, 154, 175, 176, 179, 186, 205, 216, 218, 219, 225, 249, 252, 258, 259, 262, 265, 279, 280, 317, 322, 327, 333, 345, 351, 357, 363, 368, 375, 384, 391, 392, 397, 401, 404, 407, 408, 417, 421, 426, 427, 490, 504, 565, 649, 684, 687, 697, 707, 728, 730, 731, 774, 778, 797, 808, 809, 833, 835, 837, 874, 875, 876, 878, 883, 885, 908, 936, 953, 962, 972, 1012, 1076, 1089, 1125, 1130], "pwm5": 120, "visibl": [120, 122, 158, 184, 204, 270, 308, 355, 357, 359, 383, 385, 416, 417, 421, 426, 427, 491, 640, 731, 749, 882, 884, 946, 1017, 1045, 1085], "10000000": [120, 145, 218, 371, 922, 978, 986], "duti": [120, 875, 883], "duty_cycl": [120, 875, 883], "automat": [120, 122, 131, 145, 147, 149, 150, 158, 193, 195, 199, 205, 212, 218, 228, 231, 235, 268, 270, 359, 368, 395, 412, 415, 419, 431, 460, 461, 550, 553, 618, 622, 660, 689, 734, 749, 778, 882, 884, 911, 973, 1026, 1033, 1038], "mockswitch": [121, 122], "serv": [121, 147, 149, 380, 1082, 1111, 1145], "ground": [121, 883, 884], "mocksensor": [121, 123], "sysfsgpioswitch": 122, "wherea": 122, "gpio20": 122, "set_stat": 122, "voltag": [122, 875, 882], "constructur": 122, "proid": 122, "lifecycl": 122, "avg": [123, 231, 412, 451, 468, 479, 498, 505], "random": [123, 161, 163, 179, 191, 203, 215, 216, 219, 223, 225, 228, 231, 236, 238, 241, 263, 272, 317, 322, 365, 452, 454, 459, 468, 494, 505, 515, 516, 517, 518, 520, 521, 522, 552, 705, 809, 884, 895, 914, 942, 976, 988, 1011, 1083, 1092, 1103], "lifetim": [123, 144, 202, 204, 221, 233, 360, 375, 384, 391, 397, 401, 402, 404, 408, 417, 421, 426, 427, 461, 554, 637, 649, 660, 687, 728, 730, 731, 971], "averagingsensor": [123, 451, 479], "overrid": [123, 139, 203, 216, 231, 246, 448, 454, 456, 461, 476, 478, 479, 480, 482, 483, 485, 507, 621, 622, 686, 687, 730, 731, 973, 988, 1103, 1122], "scheme": [123, 231, 277, 294, 297, 563, 971, 975], "constantsensor": [123, 451, 454, 459, 471, 472, 480, 492, 499, 505, 515, 516, 517, 518, 520, 521, 657, 705, 706, 707, 708, 988, 1064], "outlook": [123, 817], "w1sensor": [123, 491, 492, 493, 494, 506], "meet": [123, 148, 150, 175, 407, 822, 964, 977], "liskow": [123, 457], "segreg": [123, 429], "invers": [123, 235, 337, 429, 447, 454, 742, 937, 938, 1146], "gcc": [123, 144, 145, 171, 191, 193, 212, 218, 228, 231, 315, 342, 344, 368, 385, 389, 407, 410, 411, 413, 423, 424, 432, 434, 533, 716, 778, 779, 815, 835, 900, 901, 902, 908, 909, 910, 911, 920, 923, 953, 964, 966, 967, 968, 969, 970, 1002, 1119, 1125], "target_include_directori": [123, 440, 441, 443, 444], "announc": [123, 329, 440, 441, 618, 882, 883], "anyon": [123, 143, 539, 749], "node": [123, 136, 148, 153, 163, 403, 423, 440, 603, 734, 737, 741, 747, 756, 968, 1092, 1110], "startlog": 123, "leftov": 123, "gettim": 123, "_interv": 123, "millisecond": [123, 143, 212, 218, 228, 231, 708, 722, 786, 883], "accordingli": [123, 150, 183, 493, 503, 506, 536, 882, 884, 969, 1004, 1007, 1101], "nanosleep": [123, 143, 721, 936], "chrono": [123, 246, 247, 248, 250, 259, 303, 454, 647, 708, 719, 720, 724, 730, 731], "sinkmock": 123, "gettemperatur": [123, 988], "expect_eq": [123, 1117], "preserv": [123, 149, 160, 181, 238, 407, 805, 806, 840, 894, 1101], "dir": [125, 176, 195, 203, 216, 225, 228, 235, 253, 256, 276, 277, 295, 307, 315, 396, 431, 432, 438, 443, 823, 953, 954, 966, 989, 1103, 1105, 1112], "wo": [125, 151, 161, 162, 170, 176, 178, 340, 1127, 1128, 1146], "jf": [125, 136, 150, 187, 188, 246, 263, 322, 327, 341, 471, 485, 753, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1135, 1140], "aon": 125, "biz": 125, "svn": [125, 139, 159, 205, 340, 341], "recommend": [125, 154, 175, 183, 195, 228, 419, 572, 603, 778, 838, 883, 1031, 1085, 1093], "lokalen": 125, "fetch": [125, 144, 158, 778, 921, 949], "myremot": 125, "orig": [125, 146, 193], "stia": 125, "improv": [126, 419, 422, 434, 690, 705, 729, 971], "stack": [126, 164, 165, 166, 173, 187, 188, 206, 212, 215, 218, 228, 231, 238, 241, 256, 263, 273, 277, 413, 419, 469, 553, 584, 704, 811, 815, 883, 908, 920, 1140], "hang": [126, 186, 549, 781, 804], "seo": [126, 790], "blog": [126, 139, 143, 146, 153, 158, 709], "i2": [126, 128, 133, 238, 273, 731], "kontron": [126, 135, 731], "smarc": [126, 135, 731], "proper": [127, 143, 171, 405, 753, 778, 910, 995], "manifest": [127, 964, 1113], "cfg": [127, 135], "author_email": 127, "classifi": [127, 1031, 1078], "tox": 127, "travi": 127, "yml": 127, "upgrad": [127, 131, 132, 162, 731, 1105, 1112], "zip": [127, 135, 139, 203, 223, 229, 243, 256, 838, 844, 860], "zipfil": [127, 203], "99": [127, 153, 162, 176, 186, 193, 199, 202, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327, 423, 939, 1015, 1050, 1080], "999": [127, 215, 218, 231, 238, 241, 256, 263, 273, 277], "whl": [127, 139, 1031, 1105], "uninstal": [127, 437, 1105, 1110], "pypa": 127, "sampleproject": 127, "devicetre": [128, 883], "connect": [128, 143, 150, 163, 183, 195, 216, 259, 288, 319, 327, 328, 403, 721, 809, 871, 875, 876, 883, 884, 893, 898, 904, 918, 1085, 1087, 1092, 1105, 1133, 1145, 1147], "signal": [128, 139, 140, 168, 270, 340, 423, 721, 731, 749, 770, 815, 874, 875, 883, 915, 920, 928, 936, 937, 942, 946, 1136, 1143, 1144, 1147], "audio_mck": 128, "i2s0_ck": 128, "i2s0_lrck": 128, "i2s0_sdout": 128, "alsa": [128, 146], "tlv320dac3203irg": 128, "tlv320dac3203": 128, "drive": [128, 261, 409, 497, 883, 904, 1083], "suggest": [128, 142, 143, 145, 147, 149, 150, 158, 167, 175, 182, 183, 184, 185, 229, 248, 250, 268, 270, 383, 1000, 1028, 1110], "tlv320aic32x4": 128, "compat": [128, 148, 164, 267, 558, 648, 664, 729, 734, 753, 955, 1001, 1024, 1089, 1105, 1106], "tlv320aic31xxsw": 128, "tlv320aic31xx": 128, "wget": [129, 148, 150, 154, 273, 964, 966], "cdimag": 129, "amd64": [129, 195, 319, 363], "iso": [129, 203, 221, 222, 238, 241, 261, 283, 295, 343, 431, 548, 564, 802], "netinst": 129, "img": [129, 164, 166, 418, 778, 882], "qcow2": 129, "virtualdebian": 129, "30g": [129, 150], "kvm": [129, 146], "hda": 129, "cdrom": 129, "2048": [129, 153, 218], "nic": 129, "sic": [129, 154], "box": [129, 133, 175, 875, 882, 1000], "deliveri": [130, 134, 143, 948, 951], "outcom": [131, 179, 184, 270, 778, 837, 838, 960, 1032], "dirti": [131, 132, 145, 159, 389, 454, 731], "forget": [131, 136, 143, 144, 145, 219, 354, 357, 402, 431, 1085, 1091, 1111, 1130], "graphic": [131, 424, 813, 814, 883], "plug": [131, 144, 146, 453], "monitor": [131, 146, 160], "4k": [131, 145, 936, 945], "dual": [131, 133], "gnome": [131, 143, 148, 215, 231, 238, 241, 256, 263, 273, 277, 425, 778, 813, 869, 937], "applianc": [131, 145, 425], "x11": 131, "wayland": [131, 148], "benchmark": 131, "glxgear": 131, "su": [131, 966], "pect": 131, "cluster_project_xxx": [132, 731], "project_xxx_debian_config": [132, 731], "project_xxx_hardware_bringup": [132, 731], "bringup": [132, 133, 731], "project_xxx_wait_hardwar": [132, 731], "project_xxx_dirty_upgrad": [132, 731], "project_xxx_yocto_kernel": [132, 731], "bsp": [132, 731], "project_xxx_audio_chip": [132, 731], "chip": [132, 161, 215, 731, 875, 879, 882, 900, 902, 936, 1033], "project_xxx_debian_kernel_packag": [132, 731], "finish": [132, 175, 194, 714, 731, 788, 987], "shot": [133, 150, 383, 647, 721, 729], "dac": 133, "massacr": [133, 162, 221, 322, 383, 389, 415, 439, 647, 983], "distro": [133, 437, 1007, 1119], "bootload": [133, 142, 153, 425, 814, 882, 884], "oldconfig": [133, 144, 751, 758, 778, 779], "qemu": [133, 215, 231, 238, 241, 256, 263, 273, 277], "grub": [133, 153], "stabl": [133, 150, 154, 429, 756, 778, 817, 936, 968, 970, 1031, 1106], "yoctoproject": 135, "v5": [135, 146], "bsp_smarc": 135, "sxal4_smarc": 135, "sxal_r1": 135, "0_combin": 135, "sxal4_5": 135, "sxal4": 135, "inc": [135, 146, 267, 406, 443, 444, 716, 923, 986], "filesextrapaths_prepend": 135, "thisdir": 135, "linux_vers": 135, "linux_version_extens": 135, "linux_kernel_typ": 135, "kbranch": 135, "kmeta": 135, "lic_files_chksum": 135, "md5": 135, "bbea815ee2795b2f4230826c0c6b8814": 135, "srcrev_machine_pn": 135, "3604bc07c035939266d78d65084c6cd54ffc6d56": 135, "srcrev_meta_pn": 135, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 135, "src_uri": 135, "bareclon": 135, "cach": [135, 139, 144, 270, 273, 405, 419, 424, 425, 583, 600, 860, 937, 1105, 1112, 1128], "destsuffix": 135, "scc": 135, "pv": 135, "srcpv": 135, "include_patch": 135, "patch": [135, 154, 155, 938, 966, 1125], "compatible_machin": 135, "therebi": [136, 175, 655, 869, 949, 995, 1033], "special": [136, 143, 190, 223, 225, 231, 235, 259, 344, 396, 457, 468, 471, 474, 475, 519, 542, 547, 660, 662, 716, 727, 804, 815, 820, 876, 898, 904, 926, 950, 969, 974, 993, 995, 1003, 1012, 1014, 1018, 1078, 1083, 1115, 1135, 1136], "simplifi": 136, "fine": [136, 145, 150, 179, 434, 435, 550, 662, 664, 758, 788, 895, 899, 967, 984, 996, 1005, 1011, 1026, 1089], "grain": [136, 150, 431, 434, 788, 996, 1011], "surround": [136, 648, 689, 701], "cut": [136, 164, 182, 195, 235, 249, 258, 279, 280, 368, 403, 731, 768, 808, 822, 868, 871, 874, 884], "linewis": 136, "wherev": [136, 347], "obs studio": 137, "video edit": 137, "screen record": 137, "These": [137, 145, 147, 148, 212, 218, 228, 231, 434, 447, 751, 778, 882, 954], "offici": [137, 179, 180, 183, 184, 185, 190, 547, 966, 1115], "jonathan": [137, 323, 324, 1125], "himself": [137, 884], "paus": [137, 145, 936, 949], "meanwhil": 137, "freez": [137, 1105, 1113], "photo": 137, "length": [137, 199, 202, 212, 218, 228, 231, 260, 267, 277, 431, 503, 554, 566, 627, 749, 762, 774, 876, 878, 904, 914, 946, 1081, 1089, 1093, 1100], "grab": [137, 875, 883], "neil": 138, "patel": 138, "insight": [138, 142, 434, 964, 1104], "consol": [138, 195, 813, 816, 871, 1055, 1136], "crawlabl": 138, "dn": [138, 147, 150, 215, 231, 238, 241, 256, 263, 273, 277, 1147], "domain": [138, 139, 149, 150, 155, 415, 429, 441, 937, 1075, 1078, 1145, 1147], "ipc": [138, 139, 140, 143, 339, 341, 729, 731, 874, 915, 943, 1145], "queue": [138, 139, 144, 153, 154, 161, 167, 187, 188, 190, 219, 247, 248, 250, 259, 271, 272, 293, 294, 297, 303, 471, 720, 730, 731, 772, 780, 798, 811, 815, 874, 915, 925, 929, 1140, 1144, 1145, 1146], "pydbu": 139, "openh": [139, 140, 161, 202], "traceback": [139, 165, 212, 218, 228, 231, 241, 261, 263, 277, 973, 974, 975, 980, 988, 989, 995, 996, 1017, 1018, 1022, 1024, 1027, 1028, 1089, 1097, 1098, 1111], "recent": [139, 142, 145, 150, 165, 173, 212, 218, 228, 231, 241, 261, 263, 277, 343, 778, 857, 973, 974, 975, 980, 988, 989, 995, 996, 1017, 1018, 1022, 1024, 1027, 1028, 1089, 1097, 1098, 1111], "oh_test": 139, "easysuit": 139, "oh_dbus_easysuit": 139, "easysuite_error": 139, "error_suit": 139, "dbusheatingerror": 139, "modulenotfounderror": [139, 256, 261, 975], "research": [139, 142, 143, 256, 1082], "pygobject": 139, "714": [139, 218], "kb": [139, 145, 1112], "venv": [139, 176, 202, 212, 218, 228, 229, 231, 243, 273, 329, 330, 860, 1030, 1063, 1076, 1091, 1097, 1098, 1104, 1110, 1112, 1113], "standalon": [139, 407, 660, 949, 1117], "ss_9wmug": 139, "__env_pip__": 139, "ignor": [139, 160, 172, 231, 277, 333, 369, 389, 419, 441, 449, 647, 662, 675, 697, 736, 820, 883, 908, 950, 973, 1105], "9lrqmi4l": 139, "overlai": [139, 778, 882, 883], "locat": [139, 140, 144, 149, 154, 175, 212, 218, 228, 231, 235, 285, 301, 322, 340, 392, 405, 413, 419, 447, 469, 562, 582, 658, 706, 753, 778, 882, 883, 884, 904, 922, 946, 953, 973, 1080, 1097, 1132], "pycairo": 139, "cwd": [139, 504, 729, 804, 815, 841, 860, 862, 866, 954], "821": [139, 218], "py2": 139, "344": [139, 218, 231, 263, 277, 295], "517": [139, 218, 263], "tmpabab356k_in_process": 139, "build_wheel": 139, "tmpt1yod7mc": 139, "o4u45fjc": 139, "pycairo_33865a19ad6b4a719885f07926efe16d": 139, "bdist_wheel": [139, 1031], "build_pi": 139, "x86_64": [139, 146, 148, 195, 202, 319, 342, 368, 506, 567, 751, 756, 955, 964], "cairo": 139, "pyi": 139, "build_ext": 139, "pkg": 139, "perhap": [139, 235, 747, 1084], "pkg_config_path": 139, "gobject": 139, "introspect": [139, 936], "cp39": 139, "linux_x86_64": 139, "lib64": [139, 171, 176, 202, 212, 218, 228, 231, 235, 425, 435, 437, 442, 952, 955, 969, 976, 1097, 1098, 1105, 1119], "_vendor": 139, "pep517": 139, "in_process": 139, "_in_process": 139, "tmpf2wjv23h": 139, "4rtfumdz": 139, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 139, "pygtkcompat": 139, "generictreemodel": 139, "_signalhelp": 139, "_propertyhelp": 139, "_ossighelp": 139, "_option": 139, "_gtktemplat": 139, "_error": [139, 478], "_constant": 139, "keysym": 139, "pango": 139, "gio": 139, "gdkpixbuf": 139, "gdk": 139, "glib": 139, "gimarshallingtest": 139, "tmp56g_ixbz": 139, "bvay4iv4": 139, "pygobject_6777f13e15934fb2b13139399b143557": 139, "todo": [139, 184, 219, 247, 248, 335, 336, 505, 647, 732], "summari": [139, 180, 454, 557, 706, 1110], "c1": [139, 153, 452, 566, 651], "misc": [139, 140, 162, 163, 525, 747, 791, 1129], "w3school": 139, "howto": [139, 140, 749], "howto_css_image_transpar": 139, "asp": 139, "titelseit": 139, "mitt": 139, "howto_js_read_mor": 139, "subdir": [139, 729, 973], "gegen": [139, 1125], "clutter": [139, 172], "404": [139, 149, 218, 225, 263, 277, 295], "prio": [139, 181, 938, 939, 945], "beagleboard": [139, 144, 155], "repair": [139, 155, 215], "nand": [139, 155], "40w": [139, 155], "suck": [139, 140, 155], "disk": [139, 142, 143, 146, 150, 155, 418, 814, 815, 835, 864, 899, 900, 969, 1026, 1125], "contact": [139, 1132], "ssl": [139, 150, 1105], "certif": [139, 150, 153, 200, 229, 1103, 1105], "070": [139, 647], "fortgeschritten": [139, 341, 1127], "700": [139, 218, 600, 708, 891], "lf": [139, 202, 485, 1026], "descr": [139, 223], "050": [139, 647, 948, 949], "080": [139, 627, 647], "020": [139, 218, 259, 627, 647, 944, 945, 948, 949], "060": [139, 140, 179, 330, 647], "_hidden": 139, "010": [139, 647, 837, 941, 942, 944, 945, 948, 949], "190": [139, 176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "propos": [139, 415, 493], "030": [139, 647, 657, 707, 944, 945, 948, 949], "040": [139, 647, 944, 945, 948, 949], "central": [140, 172, 205, 294, 297, 343, 387, 447, 729, 969, 1014, 1026, 1133], "rstjinja": 140, "105": [140, 162, 176, 186, 191, 193, 199, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 940], "110": [140, 147, 162, 176, 186, 193, 199, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317, 487, 488, 647, 837, 944, 945], "cxx_class_templ": [140, 547, 731], "cxx_dynamic_memori": [140, 547, 731], "cxx_global_initi": [140, 547, 731], "cxx_inheritance_virtu": [140, 547, 731], "cxx_ownership_raii": [140, 547, 731], "cxx_stl_container_intro": [140, 547, 731], "cxx_templates_vs_interfac": [140, 547, 731], "maj": [140, 735], "min": [140, 256, 735, 1081], "cdev": [140, 734, 735, 737, 741, 742, 747], "fop": [140, 735, 742], "devtmpf": [140, 734, 735, 780], "dynam": [140, 170, 178, 179, 212, 218, 228, 229, 231, 274, 340, 404, 408, 417, 421, 426, 427, 437, 468, 505, 536, 545, 547, 554, 619, 621, 624, 625, 644, 649, 658, 687, 711, 728, 730, 731, 735, 740, 745, 748, 750, 755, 759, 769, 773, 775, 780, 782, 787, 793, 796, 799, 804, 815, 874, 923, 925, 934, 952, 953, 992, 1006, 1027, 1076, 1131, 1135], "sysprog_ev": 140, "sysprog_ipc": 140, "sysprog_sign": 140, "unittest_gtest_bas": [140, 731, 1115], "unittest_gtest_fixtur": [140, 731, 1115], "brows": [140, 142, 158, 817, 883], "blender": 140, "corda": 140, "figclass": 140, "homebrain": [140, 261, 273, 860, 861], "literalinclud": 140, "within": [140, 145, 221, 231, 277, 340, 496, 497, 501, 506, 551, 622, 685, 742, 875, 987, 1004, 1016, 1100], "045": [140, 259], "tex": 140, "055": 140, "056": 140, "910": [140, 218, 860], "glt": 140, "virtmem": 140, "fart": 140, "ungern": 140, "lost": [140, 150, 215, 221, 416, 525, 647, 706, 891, 925, 928, 945, 987, 1110, 1111, 1117], "he": [140, 144, 158, 166, 175, 179, 182, 195, 200, 203, 205, 226, 229, 252, 271, 272, 276, 293, 660, 662, 697, 700, 893, 926, 939, 950, 992, 1020, 1076, 1102], "subscrib": [140, 219, 231], "friend": [142, 143, 190, 211, 247, 248, 250, 259, 270, 303, 425, 488, 565, 720, 721, 730, 731, 749, 770, 875, 1119], "alia": [142, 147, 195, 221, 401, 404, 408, 417, 421, 426, 427, 435, 649, 687, 728, 730, 731, 838, 839, 966], "rm": [142, 144, 148, 149, 183, 185, 322, 327, 885, 895, 1112], "rf": [142, 144, 838, 848, 1112], "creativ": [142, 220], "variat": [142, 709, 783, 820], "thereof": [142, 259, 267, 452, 569, 992], "happili": [142, 143, 221, 415, 564], "stage3": 142, "decad": [142, 150, 167, 778, 882, 884, 895, 974, 1133], "busybox": [142, 143], "initramf": [142, 803], "resid": [142, 145], "flash": [142, 145, 150, 425, 816, 875, 936], "correct": [142, 150, 154, 182, 202, 204, 215, 322, 368, 405, 409, 410, 417, 420, 421, 426, 427, 429, 457, 525, 557, 622, 624, 625, 657, 702, 705, 713, 731, 821, 825, 826, 850, 882, 883, 884, 937, 979, 987, 1081, 1105], "eras": [142, 484, 542, 603, 708, 725, 835], "hit": [142, 144, 145, 164, 167, 205, 729, 838, 867, 870, 1105], "sole": 142, "liter": [142, 165, 181, 186, 193, 203, 211, 212, 216, 223, 228, 231, 235, 238, 247, 248, 256, 263, 277, 295, 303, 314, 318, 322, 349, 357, 364, 413, 468, 483, 503, 647, 660, 778, 950, 1007, 1020, 1024, 1103], "told": [142, 145, 435, 474, 875], "reboot": [142, 144, 161, 778, 839, 882, 883, 884], "fatal": [142, 170, 433, 443, 778, 1118], "saw": [142, 145, 175, 204, 333, 370, 551, 908, 910], "115200": 142, "8n1": 142, "remaind": [142, 143, 146, 148, 171, 175, 259, 756, 778, 875, 883, 954], "recov": [142, 162], "fauxpa": 142, "explan": [142, 145, 171, 175, 182, 205, 236, 296, 322, 423, 444, 525, 778, 809, 875, 883, 910, 940, 945, 1079, 1082, 1112], "annot": [142, 203, 252, 292, 424, 548, 1076], "beagl": 142, "omap": 142, "rom": 142, "stage": [142, 158, 204, 1083], "processor": [142, 143, 202, 203, 216, 363, 407, 600, 711, 778, 783, 920, 937, 952, 1103], "sram": 142, "dram": 142, "latter": [142, 145, 936, 976, 1016, 1083], "abil": [142, 647], "press": [142, 758, 795, 838, 875], "wrote": [142, 145, 330, 1130], "board": [142, 144, 778, 882], "ones": [142, 158, 165, 167, 231, 269, 277, 351, 419, 883, 884, 1009, 1093], "revis": [142, 146, 149, 246, 548, 646, 1130], "slightli": [142, 154, 175, 204, 221, 222, 525, 1004], "season": 142, "c4": [142, 153], "valuabl": [142, 423, 805, 806, 968, 970, 976], "c3": [142, 146, 153], "angstrom": 142, "mlo": 142, "ift": 142, "fdisk": [142, 1125], "obvoiusli": 142, "fat32": [142, 778], "fat16": 142, "partit": [142, 143, 144, 231, 277, 778], "mount": [142, 144, 259, 328, 734, 778, 809, 918, 945, 946, 955, 964, 966], "sector": [142, 215, 1033], "intend": [142, 148, 149, 150, 160, 195, 212, 218, 228, 231, 434, 751, 883, 910, 911, 1031], "slot": [142, 914, 995], "partli": [142, 144, 411], "meaning": [142, 150, 760], "scr": 142, "omap3": 142, "mmc1": 142, "arch": [142, 146, 758, 778, 779, 882], "mach": [142, 204, 209, 225], "omap2": 142, "omap3beagl": 142, "Near": 142, "notic": [142, 143, 145, 158, 212, 218, 228, 231, 415, 434, 435, 492, 727, 818, 922, 924, 984, 1098], "offset": [142, 749, 907, 969], "128k": 142, "0x80000": 142, "byte": [142, 145, 158, 160, 162, 212, 218, 228, 231, 238, 241, 256, 277, 283, 307, 322, 345, 353, 363, 364, 395, 398, 407, 410, 416, 420, 454, 549, 554, 557, 562, 569, 582, 706, 792, 809, 815, 838, 869, 876, 882, 899, 900, 901, 904, 906, 908, 909, 910, 911, 934, 937, 942, 945, 949, 1001, 1007, 1012, 1026, 1089], "reli": [142, 175, 696, 788, 1007], "ecc": [142, 146], "nandecc": 142, "hw": 142, "80000": 142, "0x0": [142, 882], "0x60000": 142, "unlik": [142, 195, 246, 711, 718, 875, 1015, 1094, 1135], "intermedi": [142, 163, 452, 952, 1001], "nevertheless": [142, 143, 150, 262, 265, 778], "0x20000": 142, "fatload": 142, "80200000": 142, "20392": 142, "131072": [142, 736], "40000": 142, "0x40000": 142, "60000": 142, "incarn": [142, 150, 389, 695], "choic": [142, 143, 144, 167, 203, 216, 235, 419, 429, 439, 504, 552, 621, 706, 882, 936, 964, 1092, 1103], "finger": [142, 153, 419, 817, 875], "sw": [142, 502], "0x1e0000": 142, "1e0000": 142, "0x240000": 142, "275928": 142, "1966080": 142, "prompt": [142, 150, 153, 163, 195, 206, 234, 243, 810, 838, 840, 891, 1001, 1002, 1038, 1042, 1055, 1061, 1112], "280000": 142, "400000": [142, 883, 1081], "month": [143, 205, 215, 263, 267, 364], "met": [143, 411, 884], "microcontrol": [143, 380, 875, 883, 936], "clue": 143, "minim": [143, 145, 154, 163, 413, 419, 572, 860, 964, 975], "vxwork": 143, "ce": [143, 153, 966], "quit": [143, 145, 148, 270, 390, 405, 407, 625, 640, 779, 838, 839, 870, 875, 883, 926, 949, 964], "blob": [143, 259, 270, 342, 525, 778], "presenc": [143, 145, 441, 1135], "probabl": [143, 149, 175, 235, 265, 314, 440, 445, 550, 655, 778, 790, 838, 884, 936, 1012, 1026, 1089, 1092], "sooner": [143, 158, 415, 781], "chose": [143, 154, 221, 641, 862, 895, 964], "opinion": [143, 154, 175, 229, 729, 817, 984], "stori": [143, 144, 145, 149, 150, 154, 171, 172, 204, 267, 400, 533, 551, 565, 753, 756, 779, 817, 878, 895], "unless": [143, 225, 231, 235, 277, 619, 652, 804, 860, 921, 1007, 1026, 1097], "hire": 143, "cheap": [143, 145, 432, 562, 655, 660, 696, 697, 783, 1130], "misl": 143, "posix": [143, 145, 168, 713, 720, 722, 730, 731, 815, 874, 904, 915, 921, 925, 927, 935, 943, 1026, 1144, 1145], "tell": [143, 144, 145, 148, 149, 150, 158, 172, 219, 412, 583, 804, 884, 952], "pitfal": [143, 227, 247, 248, 250, 303, 322, 583, 662, 687, 688, 689, 707, 730, 731, 875, 1130], "seen": [143, 145, 150, 163, 176, 204, 355, 374, 412, 447, 457, 749, 774, 803, 923, 1083, 1087, 1122], "didn": [143, 144, 145, 154, 175, 179, 195, 205, 229, 778, 857, 909, 1026, 1028, 1076, 1080], "rtoss": 143, "commonli": [143, 212, 235, 262, 265, 461, 722, 729, 764, 798, 840, 904, 952, 1101], "tear": [143, 248, 454, 503, 504, 505, 506, 567, 706, 747, 952, 1117], "notif": [143, 148, 167, 719, 879, 950], "dread": 143, "segment": [143, 145, 387, 496, 562, 685, 705, 936, 946], "fault": [143, 145, 335, 336, 387, 562, 705, 936], "arriv": [143, 770, 795, 934, 949], "handler": [143, 212, 218, 228, 231, 270, 277, 290, 423, 758, 760, 788, 920, 936, 948, 951], "pai": [143, 267, 418, 441, 809], "attent": [143, 199, 215, 223, 353, 374, 376, 405, 424, 434, 584, 589, 658, 689, 692, 770, 938, 973, 1099, 1122], "safe": [143, 212, 218, 219, 228, 231, 241, 415, 655, 697, 699, 707, 721, 891, 896, 920, 923, 928, 951], "pthread_": 143, "defer": [143, 429, 776, 798], "trick": [143, 200, 210, 213, 216, 240, 252, 276, 282, 390, 1076], "asynchron": [143, 212, 218, 228, 231, 308, 899, 916, 919, 949, 950], "sigwait": [143, 949], "sigwaitinfo": 143, "sigtimedwait": 143, "caught": [143, 212, 218, 228, 231, 422, 572], "synchron": [143, 215, 221, 231, 238, 241, 256, 263, 271, 272, 273, 277, 293, 294, 297, 714, 720, 730, 731, 869, 874, 899, 915, 921, 922, 929, 935, 936, 946, 948, 951, 1135], "signalfd": [143, 904, 942, 1144, 1145], "Its": [143, 145, 148, 503, 867, 937], "emb": 143, "among": [143, 167, 175, 212, 218, 228, 231, 412, 706, 823, 882, 904, 910, 934, 950, 1000, 1084, 1085, 1110, 1133], "epol": [143, 918, 942, 946, 1145, 1147], "err": [143, 182, 202, 267, 506, 603, 742, 772, 774, 809, 876, 878, 882, 995, 1098], "naiv": [143, 163, 218, 221, 285, 301, 407, 440, 449, 541, 543, 557, 624, 705, 727, 786, 920, 940, 951, 981, 982, 1083, 1088, 1122, 1132], "intra": 143, "oss": 143, "synchronis": [143, 920, 1146], "pthread_mutex_init": [143, 719, 923], "critical_sect": 143, "closest": [143, 655], "pendant": [143, 542, 737], "expir": [143, 788, 902, 934, 936, 950], "sometim": [143, 158, 235, 379, 395, 419, 556, 646, 809, 816, 909, 921, 966, 972, 1003, 1110], "setitim": 143, "timer_cr": [143, 936], "drawback": [143, 389, 406, 411, 416, 460, 583, 891], "unfortun": [143, 144, 167, 204, 474, 875, 1094], "straightforward": [143, 222, 669, 707, 746, 978, 995, 1013, 1081], "timerfd_cr": [143, 902, 904, 1144, 1145], "conjunct": 143, "emul": [143, 248, 250, 268, 407, 416, 422], "stupid": [143, 145, 202, 218, 221, 223, 364, 389, 395, 413, 419, 429, 655, 710, 795, 857, 899, 980, 1026], "screw": [143, 609], "otherwis": [143, 144, 229, 231, 235, 272, 277, 313, 368, 379, 405, 415, 565, 603, 660, 689, 696, 711, 717, 749, 762, 770, 778, 786, 805, 806, 891, 920, 925, 931, 946, 975, 1004, 1007, 1024, 1026, 1045, 1056, 1122], "etern": 143, "nowadai": [143, 145, 147, 148, 204, 271, 272, 293, 345, 363, 753, 788, 813, 816, 904, 950, 1089], "imagin": [143, 145, 409, 414, 415, 447, 460, 778, 817, 834, 875, 884, 923, 950], "moder": [143, 150, 210], "tri": [143, 144, 145, 154, 158, 164, 175, 223, 333, 504, 634, 717, 729, 875, 884, 937, 1130], "achiev": [143, 202, 235, 625, 934, 987], "albeit": [143, 469, 695, 931, 1012, 1130], "lose": [143, 194, 205, 225, 228, 231, 241, 1011], "wealth": 143, "socket": [143, 161, 182, 252, 729, 731, 811, 814, 874, 899, 903, 904, 915, 946, 950, 1105, 1144, 1145, 1147], "arbitrari": [112, 143, 164, 231, 235, 349, 365, 383, 419, 434, 572, 599, 600, 652, 710, 722, 737, 879, 904, 908, 936, 976, 1012, 1026, 1054], "uart": [143, 411, 811], "previous": [143, 212, 218, 228, 231, 235, 950, 1130], "regardless": [143, 390, 883], "surpris": [143, 145, 259, 413, 618, 971, 995], "alon": [143, 144, 145, 158, 268, 270, 419, 423, 664, 1016, 1083, 1135], "advantag": [143, 411, 562], "consid": [143, 145, 175, 179, 203, 212, 218, 228, 229, 231, 235, 259, 277, 383, 410, 411, 419, 471, 625, 838, 882, 937, 992, 1000, 1076, 1104, 1105, 1132], "regularli": [143, 416], "buffer": [143, 231, 256, 271, 272, 277, 293, 297, 351, 480, 485, 660, 794, 822, 896, 899, 900, 901, 902, 910, 949, 1026], "ttys0": 143, "stream": [143, 148, 150, 190, 216, 231, 256, 548, 565, 822, 876, 934, 980, 1101, 1103, 1147], "eventfd": [143, 904, 942, 1144, 1145], "complic": [143, 144, 153, 182, 225, 235, 361, 380, 419, 444, 575, 658, 664, 684, 737, 774, 876, 884, 949, 952, 980, 1092, 1132, 1135], "infrastructur": [143, 424, 734, 946], "unregist": [143, 456], "callback": [143, 179, 212, 218, 228, 231, 331, 675, 788, 797, 1092], "comfort": [143, 195, 325, 699, 882, 1101], "excit": 143, "hundr": [143, 145, 150, 253, 256, 904], "panel": 143, "deal": [143, 219, 413, 559, 778, 884, 1005, 1078, 1089, 1130, 1135], "touch": [143, 149, 175, 212, 218, 228, 231, 431, 823, 832, 837, 882, 905, 911, 1135], "stai": [143, 167, 179, 210, 949], "harder": [143, 711, 885], "buggi": [143, 557, 685, 697, 936], "examin": [143, 145, 415, 565, 706, 838, 931], "debugg": [143, 212, 218, 228, 229, 231, 452, 1128, 1143], "gdb": [143, 195, 340, 1128], "remain": [143, 144, 154, 163, 176, 223, 231, 277, 510, 511, 523, 552, 600, 606, 637, 643, 648, 710, 718, 760, 891, 939, 950, 952, 1051, 1054, 1055, 1058, 1066, 1068, 1084, 1119], "spidev": 143, "bluntli": 143, "whether": [143, 163, 231, 235, 256, 267, 277, 354, 418, 509, 554, 587, 729, 774, 883, 1055, 1061, 1105], "deadlin": 143, "howev": [143, 153, 172, 235, 448, 751, 753, 875, 918, 920], "sched_setschedul": [143, 160, 939], "pthread_attr_setschedparam": [143, 939], "runnabl": [143, 776, 937, 938, 939], "prioriti": [143, 160, 231, 770, 776, 778, 780, 815, 937, 938, 946, 1146], "anymor": [143, 149, 154, 167, 204, 221, 431, 435, 564, 658, 660, 669, 693, 706, 707, 711, 813, 882, 925, 936, 938, 969, 1007, 1009, 1098], "potenti": [143, 432, 562, 669, 717, 895, 975, 987, 1032], "harm": [143, 383, 411, 707, 709, 975], "polici": [143, 148, 160, 431, 447, 621, 625, 756, 937, 938, 1146], "sched_fifo": [143, 938, 939, 1125], "sched_rr": [143, 145, 939, 1125], "round": [143, 210, 215, 225, 235, 251, 256, 446, 453, 454, 456, 458, 467, 468, 481, 495, 547, 731, 939, 1146], "robin": [143, 210, 939, 1146], "manner": [143, 389, 778, 882], "troubl": 143, "trigger": [143, 333, 760, 764, 882, 995, 1085], "certain": [143, 175, 182, 410, 415, 473, 496, 497, 675, 697, 774, 809, 822, 925, 952, 1000], "circumst": [143, 937], "deadlock": [143, 525, 717, 718, 770, 783, 923, 937, 938], "inspect": [143, 145, 212, 218, 228, 231, 249, 258, 269, 279, 294, 731, 808, 874, 895], "deploy": [143, 175, 179, 200, 286, 302, 436, 442, 731, 753, 1076], "uclibc": 143, "minut": [143, 149, 150, 175, 179, 182, 219, 884, 1076, 1092], "investig": 143, "spend": [143, 150, 164, 175, 179, 200, 203, 226, 252, 276, 418, 1076], "todai": [144, 195, 203, 219, 252, 269, 285, 301, 331, 357, 1076, 1132, 1135], "browser": [144, 150, 162, 173, 206], "significantli": [144, 949], "decreas": [144, 145, 407, 838, 940], "week": [144, 159, 409], "forth": [144, 420, 809, 882, 895, 1007], "spare": 144, "volum": 144, "undertak": 144, "indirectli": [144, 706], "pocket": 144, "purchas": [144, 235], "corsair": 144, "120": [144, 162, 176, 186, 193, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 566, 647, 944, 945], "overhaul": 144, "reserv": [144, 150, 167, 179, 215, 231, 256, 277, 362, 584, 742, 774, 834, 939, 1033], "livecd": 144, "ssd": [144, 418, 900], "vanish": 144, "gone": [144, 165, 215, 675, 707, 758, 781, 839, 928], "nowher": [144, 283, 517], "depart": 144, "unusu": 144, "cope": 144, "bet": 144, "themselv": [144, 389, 429, 469], "aggress": 144, "harddisk": 144, "treatment": [144, 235, 838, 969], "proud": 144, "120g": 144, "fresher": 144, "plenti": [144, 146, 423], "4g": [144, 145], "shouldn": [144, 647, 778, 1024], "hibern": 144, "fstab": 144, "room": [144, 150, 179, 294, 449, 600, 772, 884, 1089, 1133], "swapon": 144, "sda1": 144, "swapoff": 144, "overal": 144, "mitig": [144, 772], "temporari": [144, 153, 170, 212, 218, 221, 228, 231, 271, 272, 293, 297, 434, 506, 507, 655, 659, 660, 675, 689, 697, 729, 822, 952, 978, 1059], "perfect": [144, 150, 158, 204, 252, 303, 343, 600, 656, 687, 710, 730, 731, 978, 1031, 1076, 1108, 1130], "portag": [144, 778, 867], "openoffic": 144, "tmpdir": [144, 269, 431, 506, 729, 973, 1071, 1073, 1110], "500m": 144, "2g": 144, "6g": 144, "throwawai": 144, "1tb": 144, "sdc1": [144, 809], "mnt": [144, 809, 817, 946], "emerg": 144, "umount": 144, "runnung": 144, "offend": [144, 146, 148, 158, 474, 936], "candid": [144, 163, 204, 419, 664, 684, 697, 975, 1047], "destin": [144, 370, 437, 542, 583, 658, 894, 901], "app": [144, 148, 936, 1088], "admin": [144, 150, 322, 889, 893], "cron": [144, 821, 1005], "rc": [144, 875], "grep": [144, 148, 154, 183, 185, 195, 249, 258, 279, 280, 731, 797, 802, 808, 813, 815, 820, 822, 834, 865, 868, 871, 874, 882, 884, 885, 921, 931, 936, 1092, 1134, 1136, 1141], "tune": [144, 145, 154, 419, 805, 806, 828, 830, 832, 839, 887, 1004], "exce": [144, 179, 739, 936, 946], "20m": [144, 875, 934], "compresscmd": 144, "bzip2": [144, 154, 183, 185, 803, 804, 966], "compressopt": 144, "compressext": 144, "missingok": 144, "sharedscript": 144, "postrot": 144, "reload": [144, 183], "endscript": 144, "adjac": [144, 329, 706, 749], "sda": [144, 882, 884], "cfq": 144, "noop": [144, 877], "believ": [144, 150, 875, 884, 912], "r5": 144, "menuconfig": [144, 154, 778, 882, 966], "xorg": [144, 148], "emerge_log_dir": 144, "unionf": 144, "fuse": [144, 146, 885, 895], "persist": [144, 160, 359, 363, 371, 441, 839, 883], "held": [145, 287, 290, 340, 736, 770, 783], "compani": [145, 148, 149, 150, 185, 195, 235, 261, 272, 287, 429, 447, 448, 817, 1031, 1078], "z\u00fcrich": [145, 339], "hardcor": 145, "attitud": [145, 150, 269], "began": 145, "dive": [145, 262, 265, 1090], "inevit": [145, 340, 699], "came": [145, 212, 216, 218, 228, 231, 835, 841, 882, 1007, 1059, 1130], "mb": [145, 816], "heap": [145, 402, 454, 554, 557, 609, 689, 706, 739, 764], "128": [145, 148, 162, 176, 186, 193, 199, 202, 208, 212, 215, 218, 221, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 418, 562, 882, 910, 967, 1089], "dead": [145, 154, 419], "attempt": [145, 150, 173, 231, 341, 655, 657, 1105], "reject": [145, 158], "proof": [145, 167, 407, 418, 422, 452, 536], "evid": 145, "fortun": [145, 150, 419, 431, 660, 1081], "overnight": [145, 210], "night": [145, 179], "instinct": 145, "defens": [145, 361, 362], "grow": [145, 583, 815, 968], "growth": [145, 215, 1033], "cumbersom": [145, 147, 182, 560, 583, 651, 695, 734, 920, 946, 1117], "handi": [145, 1141], "tricki": 145, "alloca": 145, "essenti": [145, 172, 221, 268, 270, 637], "stdio": [145, 204, 216, 344, 345, 347, 351, 353, 355, 386, 412, 432, 558, 564, 815, 835, 882, 900, 901, 902, 904, 905, 908, 909, 910, 911, 923, 936, 942, 945, 949, 950, 952, 955, 964, 968, 970, 1026], "unistd": [145, 410, 507, 539, 835, 882, 898, 900, 901, 902, 904, 907, 908, 909, 910, 911, 914, 916, 919, 933, 936, 942, 945, 949], "stdlib": [145, 402, 416, 882, 900, 901, 902, 933, 942, 949], "size_t": [145, 402, 415, 450, 530, 539, 542, 585, 590, 596, 600, 606, 627, 641, 653, 658, 669, 670, 671, 672, 673, 725, 726, 727, 729, 737, 764, 896, 904, 914, 946, 949], "stack_growth": 145, "argc": [145, 396, 454, 493, 882, 908, 909, 910, 911, 916, 919, 933, 949, 970, 1117, 1122], "mem": [145, 161, 539, 742], "fprintf": [145, 377, 390, 896, 936, 970], "stderr": [145, 194, 203, 212, 218, 228, 231, 241, 249, 258, 259, 279, 280, 315, 322, 377, 390, 434, 731, 808, 819, 820, 874, 896, 904, 936, 970, 1005, 1018, 1026, 1136], "atoi": [145, 912], "printf": [145, 154, 204, 216, 344, 345, 347, 353, 355, 359, 385, 386, 389, 390, 412, 432, 558, 564, 815, 835, 898, 902, 942, 949, 950, 952, 964, 968, 970, 1015, 1021], "getpid": [145, 949], "memset": [145, 901, 936, 945, 949], "24299": 145, "vsz": 145, "rss": 145, "3944": [145, 218], "986": [145, 215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "188": [145, 176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 253, 256, 263, 273, 277, 283, 295], "320": [145, 218, 228, 231, 256, 263, 277, 283, 295], "exact": [145, 195, 235, 319, 383, 694, 711, 751, 753, 1105], "glibc": [145, 758, 964, 966, 967, 1125], "presum": 145, "assum": [145, 231, 235, 277, 413, 560, 721, 756, 838, 882, 884, 895, 967, 1036, 1112], "writabl": [145, 413, 823, 838, 910], "eater": [145, 940], "1k": 145, "furthermor": 145, "188k": 145, "anyth": [145, 149, 150, 175, 202, 218, 222, 245, 267, 268, 329, 429, 440, 444, 461, 496, 571, 640, 660, 725, 726, 727, 875, 887, 895, 899, 905, 934, 968, 973, 974, 975, 1018, 1026, 1081, 1098, 1102], "proce": [145, 153, 232, 265, 328, 506], "million": [145, 181, 447, 625, 778, 978], "24908": 145, "4800": [145, 218], "1200": [145, 218, 600, 1098], "1044": [145, 218], "1376": [145, 218], "grown": [145, 148], "reflect": [145, 778, 937, 967, 968, 995], "greedi": 145, "24960": 145, "8mb": 145, "barrier": [145, 405, 706, 721, 762], "ulimit": [145, 815], "8192": [145, 218, 390, 815], "8000000": 145, "25018": 145, "11632": [145, 218], "2908": [145, 218], "7876": [145, 218], "8236": [145, 218], "demand": [145, 148, 165, 265, 413, 778, 829, 831, 980, 1015], "magic": [145, 147, 396, 431, 675, 737, 778, 980, 1110], "hood": [145, 952], "bother": [145, 895, 899], "pthread_attr_setstacks": 145, "2mb": 145, "rlimit_stack": 145, "pthread_creat": [145, 921, 936], "nthread": 145, "act": [145, 202, 514, 584, 884, 895, 898, 950, 986], "shut": [145, 746, 778], "sit": [145, 221, 328, 459, 822, 882, 883, 893, 895, 899, 949, 1092], "stack_limit": 145, "thread_func": 145, "arg": [145, 162, 176, 202, 203, 212, 216, 218, 228, 229, 231, 235, 241, 256, 277, 295, 432, 737, 921, 973, 977, 998, 1005, 1028, 1103, 1119, 1125], "pthread_attr_t": [145, 921, 939], "attr": [145, 160, 921, 923, 925, 939, 945, 946], "pthread_attr_init": 145, "ld": [145, 438, 442, 533, 551, 624, 756, 778, 805, 806, 823, 836, 860, 942, 952, 953, 964, 969], "strerror": [145, 218, 896, 905, 936, 949], "p_attr": 145, "pthread_t": [145, 921, 936, 939], "rv": [145, 191, 253], "31524": 145, "825840": 145, "206460": 145, "819936": 145, "1404": [145, 218], "800mb": 145, "writeabl": [145, 834, 857], "worth": [145, 778, 884, 1004, 1075, 1130, 1145], "physic": [145, 148, 183, 190, 271, 272, 293, 297, 420, 625, 762, 814, 883, 902, 906, 936, 937], "eaten": 145, "field": [145, 148, 150, 162, 167, 173, 209, 216, 223, 231, 241, 244, 261, 263, 267, 277, 314, 333, 346, 813, 818, 837, 871, 1022, 1033, 1054, 1083, 1084], "alleg": 145, "wast": [145, 153, 154, 415, 702, 719, 1089], "moment": [145, 179, 415, 447, 449, 643, 692], "771": [145, 218], "766604": 145, "aha": [145, 165, 176, 307, 741, 758, 883, 1089, 1117], "hasn": [145, 148, 149, 158, 772, 795, 1006], "effect": [145, 149, 170, 323, 324, 359, 409, 419, 471, 618, 733, 762, 834, 839, 882, 894, 895, 937, 951, 976, 988, 1009, 1055, 1083, 1104, 1112], "4096": [145, 162, 218, 729, 805, 806, 875, 882, 883, 884, 895, 918, 945], "1026": [145, 218], "invalid": [145, 186, 193, 223, 228, 229, 231, 235, 238, 256, 263, 270, 277, 295, 318, 333, 416, 474, 485, 488, 542, 557, 640, 641, 642, 655, 658, 664, 705, 707, 721, 736, 925, 1028], "insist": [145, 175, 564, 1119], "pthread_stack_min": 145, "16384": [145, 150, 218, 882, 883, 884], "1125": 145, "7840": [145, 218], "1960": [145, 218], "1936": [145, 218], "risk": [145, 447, 875, 893, 938, 1003], "512": [145, 218, 263, 295, 420, 815], "513": [145, 218, 263, 706], "2212": [145, 218], "4210920": 145, "1052730": 145, "4205016": 145, "4576": [145, 218], "misunderstand": [145, 715], "obvious": [145, 146, 148, 154, 166, 345, 409, 413, 440, 469, 533, 559, 565, 603, 618, 619, 647, 658, 692, 696, 701, 729, 776, 778, 791, 814, 815, 821, 835, 883, 884, 894, 910, 911, 938, 950, 952, 968, 989, 992, 1132], "overcommit": 145, "kept": [145, 150, 175, 181, 390, 405, 815, 876, 952, 980], "plai": [145, 153, 195, 407, 425, 778, 875, 993, 996, 1083], "stutter": 145, "4353": 145, "red": [145, 146, 191, 193, 199, 207, 219, 222, 235, 267, 315, 603, 875, 1002, 1092], "chili": 145, "pepper": 145, "overli": [145, 821, 979], "adob": 145, "riddanc": 145, "8462": [145, 218], "3284640": 145, "821160": 145, "3278736": 145, "3064580": 145, "lie": [145, 697], "constraint": [145, 153, 664, 667, 669, 884], "800": [145, 186, 218, 600, 1036], "4000000": 145, "11338": [145, 218], "900": [145, 218, 600], "12156": [145, 218], "shrink": [145, 583], "inadvert": 145, "3mb": 145, "nois": 145, "henc": [145, 150, 506, 560, 604, 900, 904, 952], "14386": [145, 218], "child_stack": 145, "0x7f5813f22ff0": 145, "clone_vm": 145, "clone_f": 145, "clone_fil": 145, "clone_sigha": 145, "14413": 145, "mmap": [145, 944, 946, 1144], "8392704": 145, "prot_read": [145, 945], "prot_writ": [145, 945], "map_priv": [145, 945], "map_anonym": 145, "map_stack": 145, "0x7fd14f9af000": 145, "mprotect": 145, "0x7fd14f1ae000": 145, "prot_non": 145, "placehold": [145, 475, 507, 662, 711, 884], "addit": [112, 145, 163, 175, 202, 231, 234, 307, 366, 413, 434, 468, 469, 483, 505, 551, 563, 569, 640, 778, 815, 891, 995, 1007, 1023, 1025, 1105], "proc": [145, 215, 231, 238, 241, 256, 263, 273, 277, 741, 758, 760, 762, 778, 779, 904, 921, 945, 949, 1143], "7fd14f1af000": 145, "7fd14f9af000": 145, "00000000": 145, "7fd14f9b0000": 145, "topmost": [145, 1110], "pseudo": [145, 163], "redund": [145, 390, 419], "smap": 145, "7fd14f1ae000": 145, "pss": 145, "shared_clean": 145, "shared_dirti": 145, "private_clean": 145, "private_dirti": 145, "referenc": [145, 163, 186, 294, 297, 446, 564, 706, 707, 708, 912, 1119], "anonym": [145, 449, 751, 945], "anonhugepag": 145, "kernelpages": 145, "mmupages": 145, "miss": [145, 164, 171, 173, 175, 191, 218, 223, 228, 235, 294, 297, 322, 379, 424, 425, 433, 435, 443, 505, 536, 557, 648, 684, 753, 756, 902, 936, 954, 977], "shallow": [145, 215, 227, 650], "extent": [145, 175, 182, 195, 319, 410, 415, 778, 952, 1000], "8k": [145, 822], "swamp": 145, "panic": [145, 158, 786, 838], "meaningless": 145, "global": [145, 146, 164, 170, 175, 179, 184, 188, 191, 204, 212, 215, 218, 221, 222, 228, 231, 234, 245, 248, 256, 268, 271, 273, 277, 282, 286, 293, 297, 302, 317, 322, 368, 385, 391, 397, 401, 404, 408, 412, 415, 417, 421, 422, 426, 427, 435, 436, 441, 454, 460, 469, 503, 504, 505, 506, 547, 554, 567, 649, 687, 690, 705, 706, 716, 728, 730, 731, 747, 884, 920, 923, 927, 928, 930, 952, 973, 976, 984, 986, 1019, 1033, 1076, 1105, 1113, 1117], "dig": [145, 147], "thorough": [145, 154, 999, 1083, 1102, 1145], "counter": [145, 228, 347, 353, 354, 363, 419, 424, 425, 549, 658, 945], "delai": [145, 212, 218, 228, 231, 883], "substanti": 145, "overcom": [145, 294, 322, 409], "beforehand": 145, "mlock": [145, 1144], "mlockal": [145, 1144], "contradictori": 145, "lengthi": 145, "felt": 145, "lucki": [145, 557], "agre": [145, 175, 179, 328, 457, 937, 1082], "glad": 145, "outdat": [146, 154, 778, 1105], "halfwai": 146, "procedur": [146, 154, 355, 699, 875, 1033], "thunderbolt": 146, "hdmi": 146, "unplug": 146, "oop": [146, 1129], "feb": [146, 191, 193, 195, 319, 364, 860, 918, 964], "derefer": [146, 562], "0000000000000080": 146, "supervisor": 146, "error_cod": 146, "0x0000": 146, "pgd": 146, "p4d": 146, "0000": [146, 231, 277, 884], "smp": [146, 195, 202, 319], "pti": 146, "281": [146, 215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 277, 283, 295], "comm": 146, "kworker": 146, "taint": 146, "fc31": 146, "asustek": 146, "zenbook": 146, "ux391ua": 146, "bio": 146, "204": [146, 176, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 277, 283, 295, 454], "workqueu": [146, 731, 755, 780, 793, 796, 874], "ucsi_connector_chang": 146, "typec_ucsi": 146, "0010": 146, "ucsi_displayport_remove_partn": 146, "0xa": 146, "0x20": [146, 768], "c7": [146, 153, 1105], "83": [146, 153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 779, 1080, 1081], "5b": [146, 153], "e9": [146, 153], "6d": [146, 153, 346, 347], "f3": [146, 153], "3d": [146, 153, 164], "fb": [146, 153], "2e": [146, 153, 651], "0f": [146, 153], "1f": [146, 153], "84": [146, 153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 1080, 1081], "90": [146, 153, 162, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 431, 1080, 1081, 1110], "85": [146, 153, 162, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 953, 954, 1080, 1081, 1117], "ff": [146, 153, 340, 884], "8b": 146, "78": [146, 153, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 503, 1080, 1081], "c6": 146, "rsp": [146, 215, 1033], "0018": 146, "ffff9daa002d3df8": 146, "eflag": 146, "00010202": 146, "rax": 146, "0000000000000008": 146, "rbx": 146, "ffff901f4ce35710": 146, "rcx": 146, "0000000000003c7d": 146, "rdx": 146, "0000000000003c7c": 146, "rsi": [146, 838], "0000000000000001": 146, "rdi": 146, "rbp": 146, "0000000000000000": [146, 970], "r08": 146, "ffffffffbc7dbe60": 146, "r09": 146, "ffff9daa002d3cf0": 146, "r10": 146, "ffff901f54951a18": 146, "r11": 146, "ffff901f56a68a78": 146, "r12": 146, "r13": 146, "r14": 146, "ffff901f4ce35860": 146, "r15": 146, "ffff901f4ce355d8": 146, "ffff901f56a00000": 146, "knlg": 146, "cr0": 146, "0000000080050033": 146, "cr2": 146, "cr3": 146, "000000028fbbc003": 146, "cr4": 146, "00000000003606f0": 146, "trace": [146, 165, 212, 218, 228, 231, 434, 768], "ucsi_unregister_altmod": 146, "0x77": 146, "0x90": [146, 768], "ucsi_unregister_partn": 146, "0x13": 146, "0x30": [146, 371], "0x247": 146, "0x340": 146, "process_one_work": 146, "0x1b5": 146, "0x360": 146, "worker_thread": 146, "0x50": 146, "0x3c0": 146, "kthread": 146, "0xf9": 146, "0x130": 146, "kthread_park": 146, "ret_from_fork": 146, "0x35": 146, "0x40": [146, 883], "cdc_ether": 146, "usbnet": 146, "r8152": 146, "mii": 146, "rc_cec": 146, "typec_displayport": 146, "uinput": 146, "rfcomm": 146, "ccm": 146, "xt_checksum": 146, "xt_masquerad": 146, "nf_nat_tftp": 146, "nf_conntrack_tftp": 146, "tun": [146, 151, 166, 170, 186, 193, 232, 1127, 1128, 1129], "bridg": 146, "stp": 146, "llc": 146, "nf_conntrack_netbios_n": 146, "nf_conntrack_broadcast": 146, "xt_ct": 146, "ip6t_reject": 146, "nf_reject_ipv6": 146, "ip6t_rpfilt": 146, "ipt_reject": 146, "nf_reject_ipv4": 146, "xt_conntrack": 146, "ebtable_nat": 146, "ebtable_brout": 146, "ip6table_nat": 146, "ip6table_mangl": 146, "ip6table_raw": 146, "ip6table_secur": 146, "iptable_nat": 146, "nf_nat": 146, "iptable_mangl": 146, "iptable_raw": 146, "iptable_secur": 146, "nf_conntrack": 146, "nf_defrag_ipv6": 146, "nf_defrag_ipv4": 146, "libcrc32c": 146, "ip_set": 146, "nfnetlink": 146, "ebtable_filt": 146, "ebtabl": 146, "ip6table_filt": 146, "ip6_tabl": 146, "iptable_filt": 146, "cmac": 146, "bnep": 146, "sunrpc": 146, "vfat": [146, 778, 809], "snd_hda_codec_hdmi": 146, "snd_soc_skl": 146, "snd_soc_sst_ipc": 146, "snd_soc_sst_dsp": 146, "snd_hda_ext_cor": 146, "x86_pkg_temp_therm": 146, "intel_powerclamp": 146, "snd_soc_acpi_intel_match": 146, "coretemp": 146, "snd_soc_acpi": 146, "kvm_intel": 146, "snd_soc_cor": 146, "snd_hda_codec_realtek": 146, "snd_hda_codec_gener": 146, "snd_compress": 146, "ledtrig_audio": 146, "ac97_bu": 146, "snd_pcm_dmaengin": 146, "iwlmvm": 146, "snd_hda_intel": 146, "snd_intel_dspcfg": 146, "irqbypass": 146, "snd_hda_codec": 146, "uvcvideo": 146, "mac80211": 146, "btusb": 146, "itco_wdt": 146, "btrtl": 146, "crct10dif_pclmul": 146, "videobuf2_vmalloc": 146, "itco_vendor_support": 146, "videobuf2_memop": 146, "mei_hdcp": 146, "btbcm": 146, "btintel": 146, "crc32_pclmul": 146, "intel_rapl_msr": 146, "snd_hda_cor": 146, "videobuf2_v4l2": 146, "libarc4": 146, "ghash_clmulni_intel": 146, "videobuf2_common": 146, "snd_hwdep": 146, "intel_cst": 146, "bluetooth": [146, 1134, 1147], "snd_seq": 146, "asus_nb_wmi": 146, "iwlwifi": 146, "videodev": 146, "snd_seq_devic": 146, "intel_uncor": 146, "asus_wmi": 146, "snd_pcm": 146, "intel_rapl_perf": 146, "cdc_acm": 146, "sparse_keymap": 146, "wmi_bmof": 146, "ecdh_gener": 146, "cfg80211": 146, "intel_wmi_thunderbolt": 146, "pcspkr": 146, "snd_timer": 146, "snd": 146, "i2c_i801": 146, "soundcor": 146, "joydev": 146, "idma64": 146, "intel_xhci_usb_role_switch": 146, "mei_m": 146, "ucsi_acpi": 146, "processor_thermal_devic": 146, "intel_rapl_common": 146, "mei": [146, 218], "intel_soc_dts_iosf": 146, "intel_pch_therm": 146, "typec": 146, "int3403_therm": 146, "int340x_thermal_zon": 146, "int3400_therm": 146, "acpi_thermal_rel": 146, "acpi_pad": 146, "binfmt_misc": 146, "ip_tabl": 146, "rfkill": 146, "i915": 146, "i2c_algo_bit": 146, "drm_kms_helper": 146, "hid_multitouch": 146, "drm": 146, "nvme": 146, "crc32c_intel": 146, "nvme_cor": 146, "serio_raw": 146, "wmi": 146, "i2c_hid": 146, "76d248e576fee192": 146, "deferenc": 146, "dp": 146, "ness": [146, 182, 267], "ucsi": 146, "displayport": 146, "linu": [146, 770, 778], "typec_altmod": 146, "alt": [146, 176, 838, 866, 1127, 1134, 1141], "ucsi_dp": 146, "typec_altmode_get_drvdata": 146, "271": [146, 215, 218, 223, 225, 231, 256, 263, 277, 283], "bugzilla": 146, "1785972": 146, "upstream": [146, 149, 154, 158, 756], "john": [146, 419], "stebbin": 146, "roundtrip": 146, "wiki": [146, 160, 271, 272, 293, 297, 751, 778], "explod": [146, 753, 1015], "jwboyer": [146, 751], "f31": 146, "quiet": [146, 179, 1105], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 146, "josh": 146, "boyer": 146, "fedoraproject": [146, 751], "mon": 146, "rpmdevtool": [146, 751], "koji": 146, "rpmdev": 146, "setuptre": 146, "spec": [146, 231, 751, 774], "srpm": 146, "unam": [146, 751, 756, 774, 778, 779], "correspond": [146, 158, 231, 344, 387, 883, 960, 968, 1007, 1043, 1078, 1105], "kenrel": 146, "ivh": [146, 148], "crypto": 146, "ccp": 146, "sha": 146, "drop": [146, 158, 294, 450, 469, 478, 699, 706, 708, 797, 945, 950], "edit": [146, 148, 149, 158, 190, 195, 231, 259, 343, 503, 751, 778, 883, 1031, 1102, 1143], "zips": 146, "ko": [146, 747, 756, 778], "endif": [146, 387, 389, 390, 432, 434, 439, 440, 533, 542, 551, 557, 559, 560, 600, 658, 659, 705, 721, 952, 968, 970, 1119], "buildid": [146, 751, 953], "primary_target": 146, "825": [146, 218], "asoc": 146, "patch601": 146, "patch999": 146, "roedel": [146, 504, 507, 954, 967, 1063, 1112], "patienc": [146, 175, 1000], "oldpackag": 146, "uefi": [146, 153], "market": [147, 150, 215, 259, 267, 1033], "intent": [147, 149, 153, 154, 452, 707, 711, 751, 908, 910, 911], "remark": 147, "organ": [147, 172, 385, 420, 431, 459, 600, 814, 900, 967], "numer": [147, 164, 180, 182, 184, 218, 228, 231, 235, 267, 277, 434, 606, 895], "enforc": [147, 205, 407, 429, 564, 737, 884], "cname": [147, 149], "propag": [147, 361, 419, 435, 443, 444, 625, 675, 885], "1100": [147, 212, 218, 235, 600], "3600": [147, 218], "185": [147, 176, 193, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "199": [147, 176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 295, 778, 1033], "109": [147, 162, 176, 186, 191, 193, 199, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327], "153": [147, 162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 329], "111": [147, 162, 164, 176, 186, 193, 199, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317], "108": [147, 162, 176, 186, 193, 199, 202, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317], "strip": [147, 166, 175, 209, 211, 212, 215, 223, 227, 228, 233, 235, 241, 244, 256, 263, 273, 277, 283, 322, 331, 952, 953, 955, 964, 983, 1056, 1101], "breviti": 147, "fqdn": 147, "qualifi": [147, 413, 559, 560, 697], "surf": 147, "consequenti": [147, 150, 153, 181, 809, 882, 972, 993, 1119], "microsoft team": 148, "chrome": 148, "google chrom": 148, "confer": [148, 150, 179, 203, 226, 252], "virtual classroom": 148, "classroom": [148, 150], "remote train": 148, "dr": [148, 967], "chromium": [148, 183], "frequent": [148, 150, 158, 175, 235, 863, 883, 1000, 1021], "face": [148, 150, 175, 225, 235, 713], "travel": [148, 838], "corona": [148, 150, 175], "viru": [148, 150], "conferenc": 148, "dramat": 148, "march": 148, "spent": [148, 418, 722, 974, 1082], "weston": 148, "shown": [148, 181, 313, 860, 946, 1089], "invest": [148, 150, 154, 235], "smooth": 148, "layer": [148, 248, 250, 268, 737, 809, 883, 895, 905, 914], "cornercas": 148, "hover": 148, "sharer": 148, "gdm": [148, 215, 231, 238, 241, 256, 263, 273, 277, 813, 869], "daemon": [148, 195, 215, 231, 238, 241, 256, 263, 273, 277, 425, 813, 816, 863, 864, 867, 869, 885, 893, 898, 900, 930, 986], "uncom": [148, 474, 475, 669, 882], "waylanden": 148, "defaultsess": 148, "deb": [148, 280], "5153": 148, "thank": [148, 229, 256, 661, 697, 760, 920, 1081], "marjan": 148, "javorka": 148, "fashion": 148, "efl": [148, 797, 885, 936], "61762": 148, "1670": [148, 218], "80": [148, 153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 423, 496, 860, 936, 966, 978, 1033, 1080, 1081, 1110], "947213": 148, "61764": 148, "98775": 148, "zygot": 148, "sandbox": [148, 175, 179, 229, 243, 261, 1076, 1112, 1113], "61800": 148, "239615": 148, "gpu": 148, "sharedarraybuff": 148, "sparerendererforsiteperprocess": 148, "prefer": [148, 225, 235, 363, 419, 461, 565, 652, 660, 664, 770, 822, 1028], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 148, "token": [148, 205, 221, 349, 389, 813, 926, 1031, 1127], "4327801531638606376": 148, "61825": 148, "420846": 148, "autoplai": 148, "gestur": 148, "12993561460135093079": 148, "asar": 148, "agent": [148, 891, 1083], "mozilla": [148, 273, 860], "applewebkit": 148, "537": [148, 218], "khtml": 148, "gecko": 148, "microsoftteam": 148, "preview": [148, 233, 286, 302, 436, 731], "3497": 148, "safari": 148, "webview": 148, "preload": 148, "preload_notif": 148, "fff": 148, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 148, "raster": 148, "v8_context_snapshot_data": 148, "v8_natives_data": 148, "101": [148, 162, 176, 186, 193, 199, 208, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 1011, 1080, 1081], "msteam": 148, "notificationsmanag": 148, "61973": 148, "790018": 148, "432557619363765409": 148, "mainwindow": 148, "62033": 148, "1259666": 148, "5585537623314398260": 148, "pluginhost": 148, "wish": [148, 150, 158, 179, 423, 432, 571, 638, 719, 999, 1094, 1095, 1112], "insan": [148, 287, 809], "killal": [148, 940, 950], "63500": 148, "298385": 148, "63502": 148, "blood": 148, "pressur": [148, 212], "rise": [148, 497, 760, 918, 919, 936], "wipe": 148, "logout": 148, "pop": [148, 161, 223, 225, 238, 253, 263, 273, 283, 295, 390, 719, 998, 1023], "morn": [148, 184, 194, 212, 221, 223, 229, 1038], "webassembli": 148, "blow": 148, "water": [148, 267], "tab": [148, 149, 162, 231, 259, 277, 313, 364, 778, 838, 1020, 1045, 1136], "firefox": [148, 425, 921, 950, 1088], "dom": [148, 207], "gave": [148, 150, 163, 175, 880, 1081], "3987": 148, "132": [148, 162, 164, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "plagu": 148, "invent": [148, 357, 389, 449, 471, 472, 1132, 1133], "game": [148, 215, 231, 238, 241, 256, 263, 273, 277, 294, 834, 898, 1014], "pornwatch": 148, "teamview": 148, "webpag": 149, "properli": [149, 643, 721, 778, 964], "retrospect": 149, "jekyl": 149, "bend": [149, 501], "companion": [149, 267], "pollut": [149, 390, 413, 419, 452, 648, 954], "distinguish": [149, 558, 711, 810, 964], "handwritten": [149, 247, 248, 250, 303, 557, 657, 687, 688, 689, 705, 730, 731], "remind": 149, "pile": [149, 158, 459, 950], "incomprehens": [149, 229, 621, 1130], "blame": [149, 884], "technic": [149, 150, 172, 444, 448, 548, 603, 647, 980, 1089, 1122], "nojekyl": 149, "eof": [149, 199, 202, 221, 222, 238, 314, 351, 352, 353, 354, 367, 631, 780, 794, 900, 901, 904, 910, 942, 949, 1002], "doctyp": 149, "constel": 149, "machineri": [149, 271, 272, 293, 297], "eventu": [149, 158, 422, 918, 967], "click": [149, 150], "danc": [149, 506, 798, 968], "cri": [149, 710], "haven": [149, 150, 175, 525, 875, 882], "subdomain": 149, "afterthough": 149, "_build": 149, "restor": [149, 158, 165, 212, 218, 228, 231, 751, 950, 973], "shini": 149, "nervous": 149, "marketinges": [149, 259], "familiar": [149, 175, 231, 324, 325, 714, 883, 1000], "big blue button": 150, "strongli": [150, 212, 218, 228, 231, 262, 265, 505, 603, 649, 687, 728, 730, 731, 1130], "shame": 150, "pursu": 150, "collabor": [150, 160, 167, 172, 179, 252], "moreov": 150, "focus": 150, "teach": [150, 175, 340], "trust": [150, 153, 215, 271, 272, 293, 655, 891, 893, 1033, 1105, 1122], "benefit": [150, 262, 265, 268, 270, 413, 1071], "beat": [150, 225, 235, 1075], "talent": [150, 340], "whiteboard": [150, 945], "chat": 150, "breakout": [150, 882], "stabil": [150, 454, 884, 1106], "thousand": [150, 256, 809], "curiou": [150, 1076], "curious": 150, "licens": [150, 256, 441, 734, 1002, 1031], "lgpl": 150, "blindsid": 150, "govern": [150, 764, 904], "html5": 150, "exception": [150, 884], "modern": [150, 154, 156, 167, 170, 175, 182, 204, 226, 435, 709, 731, 738, 740, 745, 748, 755, 759, 769, 780, 782, 787, 793, 796, 799, 874, 952, 971, 1001, 1076, 1102, 1131, 1133], "heavili": [150, 172, 175, 259, 261, 340, 505, 700, 778, 875, 884, 1000], "webrtc": 150, "pain": [150, 778, 955, 964], "death": [150, 202, 950], "firewal": [150, 183, 893], "busi": [150, 294, 429, 439, 564, 783, 795, 807, 842, 844, 849, 850], "indefinit": [150, 637], "vm": [150, 325], "encrypt": [150, 813, 834, 885, 893, 894, 895, 1054, 1092], "bbb": [150, 162, 223, 241], "provis": 150, "gcp": 150, "expertis": [150, 506], "n1": [150, 176, 235], "500gb": 150, "10gb": 150, "spars": [150, 225, 235, 567, 569, 774], "mandatori": [150, 884, 1001], "issuanc": 150, "udp": [150, 876, 878, 1145, 1147], "32768": 150, "clickabl": 150, "7443": 150, "755": [150, 218, 322, 823, 1003], "xenial": 150, "220": [150, 176, 191, 202, 212, 215, 218, 223, 225, 231, 235, 238, 253, 256, 263, 273, 277, 283, 295], "hostnam": [150, 1105], "certbot": 150, "greenlight": 150, "letsencrypt": 150, "minor": [150, 154, 212, 218, 228, 231, 261, 737, 744, 809], "docker": [150, 154], "bundl": [150, 173, 1088, 1105], "rake": 150, "succesfulli": 150, "screenshot": [150, 173, 322], "tryout": [150, 884], "kid": [150, 195, 213, 308], "layman": 150, "knew": [150, 179, 662, 969], "reproduc": [150, 153, 269, 416, 884], "thought": [150, 390, 702, 778, 1089], "fred": [150, 876, 976], "dixon": 150, "leader": 150, "aka": [150, 195, 218, 221, 223, 243, 525, 709], "canva": 150, "bradlei": 150, "schreffler": 150, "upfront": 150, "far": [150, 175, 183, 204, 210, 218, 221, 261, 359, 374, 395, 396, 398, 409, 413, 418, 443, 572, 582, 647, 710, 756, 820, 884, 978, 1000, 1081, 1130], "exhaust": [150, 934, 937, 980], "heard": 150, "tast": [150, 349, 565, 621, 647, 690, 710], "era": 150, "budget": [150, 199], "advertis": [150, 700], "viabl": 150, "shout": [150, 689, 692], "loud": [150, 368, 583, 651, 689, 695, 696], "gmunden": [151, 340], "traunse": 151, "hike": [151, 152, 179], "bergsteigen": [151, 152], "climb": [151, 152, 179, 210], "klettern": [151, 152], "outdoor": [151, 152], "donnerstag": 151, "geistigen": 151, "ersch\u00f6pfung": 151, "k\u00f6rperlich": 151, "erfahren": [151, 152, 340, 1128], "dazu": [151, 160, 161, 166, 170, 187, 322, 327, 340, 1126, 1140, 1148], "ausgesucht": [151, 152], "zwar": [151, 1125, 1129, 1141], "lo": [151, 152, 193, 231, 267, 501, 758, 988], "gmundner": [151, 179], "h\u00fctte": [151, 152, 179], "n\u00e4chsten": 151, "naturfreundesteig": 151, "zusammenfassung": [151, 157], "wunsch": 151, "vollend": 151, "erf\u00fcllt": 151, "unversichert": 151, "unmarkiert": 151, "leicht": [151, 187, 1125, 1140, 1146, 1147], "panik": 151, "geraten": 151, "h\u00e4nde": [151, 152], "braucht": [151, 152], "fingern\u00e4gel": 151, "z\u00e4hne": 151, "mitunt": [151, 152, 1137], "verkoffert": 151, "augen": [151, 238], "offenhalten": 151, "jeder": [151, 1124, 1127, 1128, 1147], "spur": 151, "folgen": [151, 187, 188, 1127, 1140], "fr\u00fcher": [151, 232], "umdrehen": 151, "sackgass": 151, "erweist": 151, "vielleicht": [151, 176, 187, 238, 1129, 1140], "weggehen": 151, "stirnlamp": 151, "mitnehmen": 151, "war": [151, 161, 166, 168, 176, 187, 191, 340, 429, 1125, 1127, 1129, 1140, 1146, 1147], "sch\u00f6nsten": 151, "jemal": 151, "zuletzt": 151, "traumhaften": 151, "gegend": 151, "immer": [151, 152, 166, 170, 176, 178, 191, 263, 1125, 1129, 1136, 1146], "griffweit": 151, "erscheint": 151, "paar": [151, 161, 176, 178, 186, 193, 225, 322, 327, 1125, 1148], "eindr\u00fcck": 151, "m\u00fcder": 151, "abklatsch": 151, "erinnerungen": 151, "hirn": 151, "eingebrannt": 151, "einstieg": [151, 187, 1140], "traunsteinstra\u00df": 151, "hundert": [151, 162, 235], "meter": 151, "s\u00fcdlich": 151, "hoisn": [151, 179], "wirt": [151, 179], "markiert": [151, 152], "wanderweg": [151, 152], "wegweisern": [151, 152], "bergauf": [151, 152], "kupp": 151, "klamm": 151, "einsteigt": 151, "bergab": 151, "touristisch": 151, "erschlossen": 151, "trifft": 151, "familien": 151, "kindern": [151, 1141], "rechter": 151, "felsstock": 151, "adlerhorst": 151, "sieht": [151, 162, 166, 176], "rau": [151, 225], "touristenzon": 151, "rauf": 151, "schart": 151, "durchschnaufen": 151, "einstellen": 151, "gen\u00fcsslich": 151, "h\u00f6henmet": 151, "verspeisen": 151, "steinmanderl": 151, "verfehlen": 151, "erkennbar": [151, 162, 1143], "kamm": 151, "r\u00fcber": 151, "traunsteinfelsen": 151, "erstreckt": [151, 152], "sch\u00f6nste": 151, "teil": [151, 161, 170, 178, 1125, 1127], "meditativ": 151, "wundersch\u00f6n": [151, 152], "steil": 151, "voll": 151, "zecken": 151, "schon": [151, 152, 161, 176, 178, 186, 216, 340, 1127, 1129, 1134, 1141, 1143, 1146], "bl\u00fcht": 151, "rinnen": 151, "leichtest": [151, 162], "dahin": [151, 1125], "wieder": [151, 176, 178, 186, 191, 193, 207, 1127, 1141], "vertun": 151, "manderl": 151, "aufstellen": 151, "nachwelt": 151, "nemesi": 151, "bergverr\u00fcckten": 151, "gleich": [151, 162, 176, 186, 187, 191, 193, 225, 273, 317, 1125, 1140, 1147], "schl\u00fcsselstel": 151, "quert": 151, "latschen": 151, "\u00f6fter": [151, 152], "festhalten": 151, "gel\u00e4nd": 151, "einsam": 151, "bohrhaken": 151, "verrotteten": 151, "schuhband": 151, "festh\u00e4lt": 151, "runterfallen": 151, "glaub": [151, 160, 161], "stell": [151, 176, 207], "umgehen": [151, 1134], "querung": 151, "hierher": 151, "st\u00fcck": 151, "reinzum\u00fcnden": 151, "scheint": [151, 160], "gibt": [151, 152, 157, 160, 162, 163, 166, 176, 187, 188, 199, 225, 317, 1124, 1125, 1126, 1127, 1129, 1134, 1140, 1146], "foto": [151, 840], "mittendrin": 151, "besch\u00e4ftigt": 151, "hose": 151, "kacken": 151, "gesagt": [151, 166, 176, 186, 340, 1125], "manderln": 151, "aufnahmen": 151, "zunehmenden": 151, "sonnenuntergang": 151, "unvergesslich": 151, "nacht": [151, 152], "geworden": 151, "halten": [151, 152], "zumindest": [151, 176, 1127], "hinauf": 151, "stund": [151, 865, 1148], "gekostet": 151, "exklus": [151, 176, 186], "schneck": 151, "j\u00e4gerbrot": 151, "schein": 151, "ausstieg": 151, "hernlersteig": 151, "m\u00fcndet": 151, "gmundnerh\u00fctt": 151, "gem\u00fctlich": [151, 152], "nett": [151, 152, 166, 277, 340, 1134, 1141], "wirtsleut": 151, "h\u00fcttenruh": 151, "ansitzen": 151, "schweinsbraten": 151, "reinkommt": 151, "k\u00fcche": 151, "geputzt": 151, "backerbsen": 151, "morgen": [151, 231, 235], "hochnebel": 151, "blick": [151, 152, 1126], "flugzeug": 151, "gipfel": [151, 152], "dolin": 151, "nebel": 151, "dabei": [151, 162, 166, 202, 340, 1124], "verziehen": 151, "r\u00fcckweg": 151, "hoisnwirt": 151, "miesweg": 151, "karibik": 151, "steiner alpen": 152, "kamni\u0161ke alp": 152, "kamni\u0161ko savinjskih alp": 152, "alten": [152, 1129], "tradit": [152, 215, 218, 415, 430, 566, 568, 569, 571, 591, 820, 884, 1023, 1054, 1144], "bleiburg": [152, 210], "k\u00e4rnten": [152, 340], "umliegenden": 152, "bergen": 152, "interessantesten": 152, "2558m": [152, 210], "steiner": 152, "alpen": 152, "davor": [152, 194], "gekannt": 152, "nun": [152, 170, 176, 199, 206, 231, 608], "gesehen": [152, 176, 182, 216], "steht": [152, 176, 186, 187, 1137, 1140], "fest": 152, "n\u00e4chste": [152, 170], "jahr": [152, 176], "\u00fcberschreitung": 152, "soweit": [152, 1134, 1141], "h\u00f6chst": 152, "interessant": [152, 1126], "steinhaufen": 152, "unge\u00fcbt": 152, "verloren": [152, 191, 194], "h\u00f6henangst": 152, "schauen": [152, 187, 1140], "helm": 152, "schaden": 152, "schottersurf": 152, "kommen": [152, 157, 225, 322, 327, 340, 866], "ihr": [152, 157, 161, 166, 176, 800, 1124, 1126, 1128, 1129, 1134, 1141, 1147], "artikel": [152, 160], "rein": [152, 162, 187, 1140, 1141], "ins": [152, 161, 340, 716, 1125, 1141], "eisenkappel": 152, "seebergsattel": 152, "openstreetmap": 152, "klein": [152, 161, 162, 166, 1125, 1127, 1128], "dorf": 152, "uhren": 152, "stehengeblieben": 152, "scheinen": 152, "parkplatz": 152, "geparkt": 152, "wissend": 152, "hinten": 152, "tal": 152, "beginnt": [152, 186, 1148], "ahnen": 152, "stetig": 152, "verzagen": 152, "eingang": [152, 1125], "kar": 152, "pl\u00f6tzlich": 152, "freundlich": 152, "vorhanden": [152, 1134, 1141], "fr\u00fchst\u00fcck": 152, "lager": [152, 267], "respektvol": 152, "erklimmenden": 152, "zieht": 152, "haltend": 152, "wand": 152, "wiederum": [152, 176], "gilt": [152, 166, 207, 340], "mittlerweil": [152, 1125, 1142], "akzeptiert": 152, "deswegen": [152, 186, 191, 1127], "schliesslich": [152, 1125], "stehend": 152, "denn": [152, 176, 186, 1146, 1148], "hinaufkomm": 152, "passiert": [152, 176, 193], "anf\u00e4ngern": 152, "geschehen": 152, "jung": [152, 340], "izola": 152, "slowenien": 152, "stellten": 152, "ankam": 152, "ob": [152, 160, 186, 1129, 1148], "beantwortet": 152, "adoptivs\u00f6hn": 152, "gewonnen": 152, "nachbarberg": 152, "ko\u010dna": 152, "sichtlich": 152, "spa\u00df": [152, 232, 1143], "abstieg": 152, "erweitert": 152, "rund": 152, "fertig": [152, 186, 203, 231, 668, 675], "empfehl": [152, 1125], "runterzugehen": 152, "raufgekommen": 152, "ostseitigen": 152, "westseitig": 152, "sch\u00f6ner": [152, 176], "langen": 152, "grat": 152, "felst\u00fcrm": 152, "daf\u00fcr": [152, 170, 176, 186, 187, 1125], "anstrengend": 152, "200m": 152, "pulverhangerl": 152, "zur\u00fcck": [152, 176, 188, 1134, 1141], "wohlverdient": 152, "la\u0161ko": 152, "geschmack": 152, "schroff": 152, "selektiv": 152, "jedermann": 152, "kett": 152, "2000m": 152, "umschlossen": 152, "gletschergeformten": 152, "karen": 152, "steilen": 152, "w\u00e4nden": 152, "ost": 152, "richtung": [152, 1136], "schlafm\u00f6glichkeiten": 152, "biwak": 152, "einladung": 152, "\u00fcberquerung": 152, "dringend": 152, "f\u00e4llig": [152, 340], "fu\u00dfnoten": [152, 1124], "belieben": 152, "gummi": 152, "reifen": 152, "fahren": 152, "mehrplatzlag": 152, "reserviert": 152, "h\u00fcttenschl\u00e4fer": 152, "ohrenst\u00f6psel": 152, "f\u00e4lle": 152, "eingetreten": 152, "fassen": [152, 231], "typ": [152, 188, 199, 209, 866, 1088], "geschnarcht": 152, "geschrien": 152, "modules sign": 153, "secure boot": 153, "shim": 153, "dell xps 13": 153, "unresolv": [153, 753, 756, 952], "upset": [153, 700], "tendenc": 153, "vendor": [153, 154, 445, 447, 506, 774, 778, 882, 912], "efi": 153, "implementor": [153, 247, 248, 250, 303, 649, 687, 696, 730, 731, 737, 1110, 1130], "shine": 153, "stuck": 153, "cryptographi": 153, "third": [153, 190, 202, 231, 277, 435, 563, 565, 676, 677, 756, 758, 823, 865, 908], "parti": [153, 158, 453, 565, 749, 756, 904, 945, 1092], "signatur": [153, 199, 231, 235, 256, 277, 551, 647, 694, 710, 711, 946], "openssl": [153, 834], "req": 153, "x509": 153, "newkei": 153, "rsa": [153, 891], "keyout": 153, "xps13": 153, "priv": [153, 772], "outform": 153, "36500": [153, 506], "subj": 153, "passphras": [153, 183, 891], "expiri": 153, "0x2": 153, "97": [153, 162, 176, 186, 191, 193, 199, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 423, 1080], "e5": 153, "ef": 153, "88": [153, 162, 176, 186, 191, 193, 199, 202, 204, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327, 425, 1020, 1080, 1081, 1117], "3a": 153, "b3": 153, "9c": 153, "1b": 153, "a4": 153, "d7": 153, "sha256withrsaencrypt": 153, "issuer": [153, 449], "sep": [153, 154, 182, 202, 215, 218, 223, 231, 235, 238, 256, 277, 295, 431, 628, 860, 882, 884, 895, 952], "gmt": 153, "aug": [153, 218, 875, 883], "2121": 153, "subject": [153, 432, 739, 776, 1110], "rsaencrypt": 153, "modulu": [153, 212, 218, 228, 231], "b5": 153, "2d": [153, 205, 565, 1021], "5c": 153, "6f": [153, 940], "b0": 153, "95": [153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 1080, 1081], "f6": 153, "9e": 153, "9d": 153, "0d": 153, "bc": [153, 758, 882], "f5": 153, "6e": 153, "fe": [153, 431], "94": [153, 162, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 474, 475, 1080], "2b": [153, 884], "e6": 153, "b2": 153, "a0": [153, 883], "f8": 153, "7d": 153, "1c": 153, "2c": 153, "9f": 153, "4d": [153, 1021], "86": [153, 162, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 1080, 1081], "e3": [153, 468], "dd": [153, 809, 838, 1125], "7b": 153, "3f": 153, "aa": 153, "b8": 153, "a5": [153, 883], "d5": 153, "0b": 153, "81": [153, 162, 164, 176, 186, 191, 193, 199, 202, 204, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 954, 978, 1080, 1081], "d1": [153, 225, 288, 622], "e8": 153, "dc": [153, 449], "c5": 153, "d2": [153, 225, 288, 622], "c2": [153, 452, 566, 651], "0a": [153, 351], "a1": [153, 215, 260, 1033], "e1": [153, 203, 216, 468, 648, 1103], "89": [153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 423, 882, 883, 884, 954, 1080, 1081], "4c": 153, "4a": 153, "77": [153, 176, 184, 186, 191, 193, 195, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 319, 322, 327, 1080, 1081], "a9": 153, "68": [153, 176, 181, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 314, 317, 860, 1080, 1081], "b6": 153, "a8": 153, "9b": 153, "d8": 153, "7f": [153, 884], "e2": [153, 203, 216, 468, 648, 1103], "a3": 153, "79": [153, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327, 1080, 1081], "f4": 153, "96": [153, 162, 176, 186, 191, 193, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 423, 953, 954, 1080, 1081], "4f": [153, 1021], "1d": 153, "7e": 153, "4e": 153, "0e": 153, "d9": 153, "8c": 153, "d3": [153, 622], "c8": 153, "f7": 153, "8e": 153, "d6": 153, "3b": 153, "1e": 153, "4b": [153, 884, 940], "5e": [153, 1007], "5f": 153, "7c": 153, "expon": [153, 1007], "65537": 153, "0x10001": 153, "x509v3": 153, "98": [153, 162, 176, 186, 193, 199, 202, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 548, 585, 954], "0c": [153, 884], "keyid": 153, "c0": 153, "8f": 153, "b1": 153, "b7": 153, "9a": 153, "fa": 153, "7a": 153, "df": [153, 179, 295, 431], "a6": 153, "c9": 153, "76": [153, 176, 186, 191, 193, 199, 202, 204, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327, 442, 443, 707, 1033, 1080, 1081], "f0": 153, "b4": 153, "f9": 153, "eb": 153, "f1": 153, "6c": [153, 884], "2f": [153, 347, 1021], "5a": 153, "e0": 153, "d0": 153, "93": [153, 162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 317, 1080], "8d": 153, "2a": 153, "fc": [153, 448, 449], "1a": 153, "b9": 153, "cb": [153, 612], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 153, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 153, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 153, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 153, "wl72mzqr": 153, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 153, "hmszvaowukuzi2kflrpvc": 153, "79gwnr4": 153, "jc": 153, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 153, "valspcvotvjdokib4eyxnavjbdjdldd": 153, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 153, "nb3kgq7zt5ym": 153, "b8ce2f": 153, "ettmprmfi94x": 153, "7i5tuqrbsylistict": 153, "rf1kw6": 153, "zuzvmwyow9cyzwc5rar": 153, "ys0exg3v": 153, "hyjl7vaxa23rb": 153, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 153, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 153, "dz1idzapbgnvhrmbaf8ebtadaqh": 153, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 153, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 153, "xra": 153, "kdtflvc7uuvwtp": 153, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 153, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 153, "yqfvxbjphkw": 153, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 153, "ahemjzbycfiiq65b5x": 153, "y7aq": 153, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 153, "rk": 153, "b3lljngstu2g": 153, "mokutil": 153, "mokmanag": 153, "bloodi": [153, 949, 1089], "fan": [153, 175, 179, 205, 229, 1076], "highest": [153, 212, 218, 228, 231, 277, 374, 419, 883, 939], "melt": 153, "7390": [153, 218], "cross develop": 154, "raspberry pi": [154, 875, 876, 877, 878, 879, 882, 883, 884], "crosstool-ng": 154, "c++": [154, 156, 1129, 1130, 1131, 1133], "sadli": [154, 205, 413, 747, 882, 916, 919, 953, 975], "linaro": [154, 731, 874, 962, 963], "libstdc": [154, 964, 966], "unsatisfi": 154, "libpthread": [154, 955], "feedback": [154, 170, 173, 182, 183, 184], "thankfulli": 154, "gperf": [154, 966], "flex": [154, 758, 882, 966], "texinfo": [154, 966], "help2man": [154, 966], "libtool": [154, 966], "ncurs": [154, 751], "unzip": [154, 779, 966], "rsync": [154, 966], "diffutil": 154, "libncurses5": [154, 966], "gawk": [154, 966], "util": [154, 161, 182, 446, 452, 471, 485, 600, 655, 658, 660, 966, 973, 1105], "ct": [154, 966], "zlib": [154, 966], "extra": [154, 176, 186, 212, 380, 441, 533, 704, 778], "prior": [154, 804, 820, 845, 882, 952, 968, 1022], "bootstrap": [154, 966, 1112], "latest": [154, 734, 749, 755, 1105], "yann": 154, "morin": 154, "warranti": [154, 195, 319], "merchant": 154, "chosen": [154, 434, 875, 882, 884, 910, 914, 934, 938, 1082, 1095], "rpi3": 154, "armv7": 154, "rpi2": 154, "23179": 154, "libc": [154, 952, 969], "glibc_2": [154, 952], "ldd": [154, 435, 437, 969], "0xb6e06000": 154, "invok": [154, 184, 203, 216, 308, 313, 449, 551, 563, 622, 652, 931, 953, 990, 1002, 1003, 1028, 1103], "rpt2": 154, "rpi1": 154, "deb10u1": 154, "quirk": [154, 875], "werror": [154, 355, 368, 411, 434, 746, 747, 1119], "behind": [154, 194, 368, 419, 449, 471, 581, 778, 893, 952, 995, 1093], "glibcxx_3": 154, "libgcc_": 154, "downgrad": 154, "cmake_find_root_path": [154, 953], "cmake_sysroot": [154, 953], "viewpoint": 154, "bye": [154, 675, 679, 681, 682, 683, 1089], "relocat": 154, "fragil": 154, "sdk": 154, "buildroot": 154, "encount": [154, 183, 231, 235, 883, 884, 910], "ct_prefix": 154, "categori": [155, 167, 431, 1078], "crosstool": [155, 259, 731, 874, 953, 955, 962, 963, 964], "1399": 155, "dell": 155, "xp": [155, 429], "grintovec": [155, 210], "plan\u0161arsko": 155, "jezero": 155, "\u010de\u0161ka": [155, 210], "ko\u010da": [155, 210], "traunstein": [155, 179, 340], "zierlersteig": [155, 179], "bigbluebutton": [155, 159, 1124], "deploi": [155, 183, 322, 327, 447, 768, 805, 806, 883, 884, 889, 891, 895], "consumpt": 155, "buildmanag": 156, "embeddedentwicklung": 156, "anpassungen": 156, "paketen": 156, "rootfilesystem": [156, 955], "dient": 157, "vermarktung": 157, "referenz": [157, 246], "kursteilnehm": [157, 340], "beendigung": 157, "entstandenen": 157, "zur\u00fcckgreifen": 157, "finden": [157, 161, 170, 1124], "sofern": 157, "kund": [157, 170], "w\u00fcnscht": 157, "abstufungen": 157, "\u00f6ffentlichkeit": [157, 1141], "besprochen": 157, "hierbei": 157, "anwendung": [157, 1146], "g\u00e4nzlich": 157, "abgesehen": 157, "ausdr\u00fccklich": 157, "zustimmt": 157, "namen": [157, 176, 186, 235, 295, 866, 1148], "individuen": 157, "prinzipiel": 157, "erw\u00e4hnt": [157, 170], "erlaubni": 157, "sollten": [157, 225, 263], "vorgehen": [157, 243, 1141, 1148], "anbietet": 157, "nie": [157, 166, 178, 340, 1129], "zug\u00e4nglich": 157, "onlinekursen": 157, "m\u00f6glichkeit": [157, 160, 178, 1127, 1146, 1147], "\u00fcbungsmateri": 157, "zustimmen": 157, "einzeln": [157, 170], "keinesfal": 157, "ver\u00f6ffentlicht": 157, "verschiedenst": 157, "m\u00f6glichkeiten": [157, 170, 1143, 1146], "entstanden": [157, 170, 178], "nichtsdestotrotz": [157, 1127], "verf\u00fcgung": [157, 176, 1129, 1146], "accompani": [158, 179, 268, 270, 1079, 1135], "privaci": [158, 175, 179, 180], "guidelin": [158, 175, 294, 884], "certainli": [158, 910], "redhat": [158, 280, 425], "gitk": [158, 838], "traine": [158, 185], "suppos": [158, 179, 235, 307, 471, 756, 778, 795, 817, 875, 923, 1070, 1110], "respositori": [158, 170], "user1": 158, "user2": 158, "user3": 158, "untrack": 158, "beast": 158, "similarli": 158, "unstag": 158, "accident": [158, 562, 694, 762, 805, 806, 845, 909, 1017], "7434a5b": 158, "100755": 158, "cowork": 158, "employ": [158, 429], "favourit": 158, "869": [158, 218], "124": [158, 162, 176, 183, 186, 193, 199, 202, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 1033], "a4b9666": 158, "bf5bb75": 158, "went": [158, 179], "retri": [158, 896, 995, 1105], "noon": [158, 938, 1026], "lack": [158, 409, 434, 506, 640, 642, 884, 964], "unavoid": 158, "her": [158, 162, 187, 231, 234, 642, 813, 834, 1042, 1084, 1140], "confid": 158, "merg": [158, 204, 780, 938, 1024, 1142], "gentl": [159, 1131], "histori": [159, 167, 203, 221, 247, 248, 250, 252, 303, 368, 645, 649, 651, 687, 728, 730, 731, 737, 780, 809, 815, 866, 1076, 1082, 1088, 1132, 1136, 1143], "tinker": 159, "solder": 159, "sysv": [160, 953], "grace": [160, 272, 714], "sigterm": [160, 949, 950], "sigkil": 160, "beeinflussen": 160, "shutdown": [160, 215, 231, 238, 241, 256, 263, 273, 277, 330, 756, 869, 946, 984], "herausgefunden": [160, 166, 340], "nachfolgend": [160, 1125], "manpag": 160, "verhindern": 160, "genehm": 160, "systemd": [160, 215, 231, 238, 241, 256, 263, 273, 277, 778, 816, 869, 884, 949, 1125], "inhibit": [160, 647, 685], "children": [160, 423], "vererbt": 160, "attributen": 160, "setprior": 160, "execv": [160, 907, 952], "sched_reset_on_fork": 160, "ORed": 160, "privileg": [160, 215, 231, 238, 241, 256, 263, 273, 277, 834, 869], "playback": 160, "prevent": [160, 163, 212, 218, 221, 228, 231, 259, 405, 411, 415, 815, 904, 909, 938, 949, 975, 987, 1017], "evad": 160, "rlimit_rttim": 160, "getr": 160, "anstel": 160, "prozessen": 160, "teilen": 160, "prozess": [160, 323, 1134, 1136, 1143, 1144, 1147], "startenden": 160, "gestarteten": 160, "weitergegeben": 160, "ausser": [160, 187, 317, 1140], "unterbunden": 160, "pthread_attr_setinheritsch": 160, "pthread_inherit_sch": 160, "pthread_explicit_sch": 160, "newli": [160, 411], "sowa": [160, 166, 340, 1125], "\u00e4hnlich": [160, 191], "wikipedia": [160, 221, 419, 562, 884, 895, 939, 971, 1089], "filter_driv": 160, "offenbar": [160, 176, 340, 1127], "miser": [160, 600], "netzwerkdrivern": 160, "hoher": 160, "interruptlast": 160, "verbessern": 160, "n\u00f6tig": [160, 1136], "diesbez\u00fcglich": 160, "\u00fcberlegt": 160, "schaltet": 160, "netzwerkdriv": 160, "30107": 160, "linuxfound": 160, "workgroup": 160, "napi": [160, 190, 772], "implementationen": 160, "libmodbu": 160, "freemodbu": 160, "konfiguriert": [160, 161], "jumbo": 160, "jumbo_fram": 160, "mtu": [160, 877], "1500": [160, 218], "eth0": 160, "9000": [160, 218], "ifconfig": [160, 772], "abgelegt": 160, "konfigur": [160, 162], "ifac": [160, 474, 488, 711], "vorsicht": [160, 186, 866], "routern": 160, "fragmentieren": 160, "tracerout": 160, "netzwerkverbindung": 160, "g\u00fcte": 160, "wissen": [160, 340, 1127, 1134], "sar": 160, "sysstat": 160, "schmerzvol": 160, "netter": 160, "ausprogrammiert": 161, "konflikt": [161, 1142], "parallelen": [161, 1146], "demonstr": [161, 163, 183, 255, 501, 550, 1078, 1082, 1122], "mutter": [161, 340, 341, 1146], "aller": [161, 170, 340, 341, 1125, 1146], "danach": [161, 1124], "hilf": [161, 186, 322, 327, 1136], "gefixt": 161, "kommunk": 161, "variablen": [161, 162, 187, 188, 191, 194, 199, 227, 245, 246, 314, 317, 323, 1126, 1136, 1137, 1140], "frontal": 161, "vorgef\u00fchrt": 161, "diskuss": [161, 170, 192, 340], "dank": [161, 166, 340, 1125], "beispielcod": 161, "h\u00e4ndisch": [161, 1128], "zweier": [161, 187, 1140], "bewundern": 161, "k\u00f6nnt": 161, "euch": 161, "erinnern": [161, 340], "blinken": 161, "liess": 161, "irgendwo": [161, 235], "hatten": [161, 166, 340], "edg": [161, 205, 760, 918, 919], "kleinen": 161, "empf": 161, "unbedingt": [161, 176, 1125], "beispielprogramm": 161, "horcht": 161, "gesprochen": 161, "ausf\u00fchrlich": [161, 246], "schamlos": 161, "eigenwerbung": 161, "\u00fcberbleibsel": 161, "ehemaligen": 161, "socketcan": [161, 876, 877], "absorbiert": 161, "worden": [161, 170, 1125], "enth\u00e4lt": [161, 176], "schnuckelig": 161, "aufzeichnen": 161, "replai": [161, 877], "folien": [161, 170, 178, 1124], "freitag": [161, 1125], "kerneldrivertag": 161, "sorri": [161, 167, 817], "emanuel": 161, "beispieldriv": 161, "han": 161, "findet": 161, "angeboten": [161, 1124], "promin": [161, 704, 774], "implementiert": [161, 176, 207, 1134, 1148], "gute": [161, 178, 1134, 1141], "anfang": [161, 162, 170], "mcp2515": [161, 778], "angesprochen": [161, 178], "fortgeschrittener": [161, 178], "einpflegt": 161, "agiert": 161, "mcp251x": 161, "at91": 161, "soc": [161, 882, 883, 884, 918], "deinem": 161, "stecker": 161, "verbaut": 161, "at91_can": 161, "lacht": 161, "zeilenweisen": 162, "nutzdaten": [162, 215], "extrahieren": [162, 189], "wollend": [162, 1141], "spalt": 162, "offensichtlich": [162, 1128], "separiert": 162, "felder": 162, "antwort": [162, 263], "stdtype": 162, "gscheitesten": 162, "aufeinanderfolgend": 162, "whitespac": [162, 223, 231, 277, 353, 1022, 1045, 1101], "nimmt": [162, 187, 199, 223, 225, 231, 263, 1127, 1140], "tupl": [162, 175, 180, 182, 184, 188, 192, 194, 200, 201, 203, 207, 210, 213, 214, 216, 217, 219, 220, 224, 226, 227, 228, 233, 236, 239, 240, 242, 252, 254, 257, 260, 261, 264, 274, 276, 278, 282, 283, 295, 307, 322, 478, 980, 998, 999, 1006, 1007, 1012, 1021, 1024, 1053, 1076, 1097, 1098, 1130], "weiss": [162, 166, 176, 295, 1143, 1148], "rauskommen": 162, "aaa": [162, 223, 235, 241, 277], "tbbb": 162, "tccc": 162, "feld0": 162, "feld1": 162, "feld2": 162, "ccc": [162, 241], "optional": [162, 1127], "splittet": 162, "bearbeitet": [162, 1147], "manuel": [162, 186, 191], "ddd": 162, "eee": 162, "maxsplit": [162, 231, 277, 431], "restfield": 162, "len": [162, 163, 164, 166, 176, 186, 191, 193, 194, 199, 202, 203, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 284, 295, 314, 317, 431, 774, 878, 979, 992, 1005, 1007, 1013, 1015, 1022, 1024, 1026, 1027, 1071, 1089, 1093, 1097, 1100], "10101010": 162, "switchnumb": 162, "rsplit": [162, 231, 277, 431, 1022], "l1": [162, 165, 176, 193, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 469], "l2": [162, 165, 176, 193, 199, 202, 207, 212, 215, 218, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295], "\u00e4nderung": [162, 176, 1148], "87": [162, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 1033, 1080, 1081], "zeigen": [162, 865], "dasselb": 162, "objekt": [162, 176, 186, 277], "140070310441600": 162, "ver\u00e4ndert": 162, "91": [162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 1080, 1081], "140070371015728": 162, "92": [162, 163, 186, 191, 193, 195, 199, 202, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 322, 327, 862, 1080, 1081], "attributeerror": [162, 176, 212, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 975, 988, 989, 996], "gottseidank": 162, "alternativ": 162, "aufruf": [162, 176, 182, 186, 231, 318], "paaren": 162, "keyerror": [162, 165, 176, 186, 193, 202, 212, 215, 218, 223, 225, 228, 231, 238, 241, 253, 256, 263, 273, 277, 283, 295, 317, 975, 1024, 1098], "nix": [162, 163, 176, 194, 202, 223, 225, 228, 253, 273, 317, 507], "umstaendlich": 162, "102": [162, 176, 186, 191, 193, 199, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 317, 322, 327], "103": [162, 176, 186, 193, 199, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317], "104": [162, 164, 176, 186, 191, 193, 199, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 1033], "106": [162, 176, 186, 191, 193, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317, 860], "setdefault": [162, 203, 223, 238, 253, 256, 263, 273, 277, 283, 295, 1024], "107": [162, 176, 186, 191, 193, 195, 199, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 317, 319, 418], "meinvoelligsinnlosertyp": 162, "sinnlose_addit": 162, "sinnlobj": 162, "112": [162, 176, 183, 186, 191, 193, 199, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 260, 263, 273, 277, 283, 295, 317, 860], "113": [162, 176, 186, 191, 193, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 260, 263, 273, 277, 283, 295, 454], "__main__": [162, 166, 176, 181, 199, 202, 212, 215, 216, 218, 223, 225, 228, 231, 235, 238, 241, 244, 256, 263, 273, 277, 283, 295, 317, 322, 976, 979, 983, 989, 997, 1105, 1111], "0x7f64a8934890": 162, "114": [162, 164, 176, 186, 193, 199, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "115": [162, 176, 186, 191, 193, 199, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "116": [162, 176, 186, 193, 199, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "nochwenigersinnvol": 162, "der_absolute_unsinn": 162, "super": [162, 178, 179, 186, 200, 202, 203, 218, 226, 229, 233, 252, 256, 267, 276, 468, 973, 975, 992, 1076, 1083], "unsinn": 162, "uebertreibs_jetzt_bitt": 162, "117": [162, 176, 186, 193, 199, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "118": [162, 176, 186, 193, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 860, 1033], "0x7f64a894a790": 162, "119": [162, 176, 186, 193, 195, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 319], "121": [162, 164, 176, 186, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "1335": 162, "122": [162, 164, 176, 186, 191, 193, 199, 202, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 954], "819508": 162, "123": [162, 176, 186, 193, 194, 199, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 364, 877, 1033, 1040, 1111], "uptim": 162, "timedelta": [162, 181, 208, 210, 263], "358": [162, 218, 263, 277, 295, 425], "125": [162, 186, 191, 193, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "irgendwann_einmal_gewesen": 162, "834972": 162, "126": [162, 176, 186, 191, 193, 199, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "datetime_from_batteri": 162, "840837": 162, "127": [162, 176, 186, 191, 193, 199, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 893, 901], "846889": 162, "woher": [162, 225], "ausschauen": 162, "sinnlo": [162, 225], "sinnlos": [162, 199, 277], "repraesent": 162, "129": [162, 176, 186, 193, 195, 202, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 319], "130": [162, 176, 186, 193, 208, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 267, 273, 277, 283, 295, 647, 751, 1020], "completedprocess": [162, 231, 241], "returncod": [162, 231, 241], "erfolgreich": 162, "beendet": [162, 1146], "schau": 162, "du": [162, 176, 231, 238, 244, 901, 906], "verwendest": 162, "anzuzeigen": 162, "cell": [162, 175, 875, 1000, 1081], "gesendet": 162, "ausf\u00fchrt": 162, "krieg": 162, "131": [162, 176, 186, 193, 202, 208, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 697], "capture_output": [162, 241], "ndrwxrwxr": [162, 241], "mar": [162, 231, 364, 805, 806, 809, 823, 835, 857, 860, 862, 886, 900, 910, 952, 955, 964], "2607": 162, "33768": 162, "ndrwxr": 162, "xr": [162, 442, 805, 806, 823, 825, 826, 834, 835, 860, 875, 882, 883, 884, 952, 964, 966, 967, 1003], "switchzeug": 162, "keiner": [162, 176, 295, 1129], "seinen": [162, 176], "formuliert": [162, 170], "logisch": [162, 186], "irgendwa": [162, 208, 223, 225], "konverti": 162, "musst": 162, "dich": 162, "festlegen": 162, "133": [162, 176, 186, 193, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "stdout_as_utf8": 162, "utf": [162, 203, 212, 215, 216, 218, 222, 228, 231, 241, 263, 277, 283, 295, 1007, 1026, 1073, 1103], "134": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 706], "135": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "drwxrwxr": [162, 241, 860, 918, 953, 954, 955, 964, 966], "drwxr": [162, 805, 806, 823, 860, 875, 882, 883, 884, 964, 966], "136": [162, 164, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 443], "fuer": [162, 223, 228, 235], "listdir": [162, 269, 273, 329, 431], "ipynb_checkpoint": [162, 241], "gitignor": [162, 432, 954], "137": [162, 173, 176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "rekurs": 162, "iterieren": [162, 166, 176, 191, 199], "dirpath": 162, "dirnam": [162, 215, 218, 269, 431, 506, 729, 1110], "checkpoint": [162, 212, 218, 228, 231], "itg": 162, "scope": [162, 170, 176, 187, 188, 191, 222, 234, 247, 248, 250, 259, 271, 282, 293, 297, 303, 322, 359, 365, 469, 519, 539, 552, 554, 563, 648, 689, 701, 704, 719, 720, 730, 731, 974, 1019, 1130, 1140, 1144], "getter": [162, 560, 608], "setter": [162, 202, 996], "fibo": [162, 163, 182, 202, 216, 675, 677, 979], "listcomprehens": 162, "generatorexpress": [162, 163], "switchdb": 162, "schema": [162, 243, 549, 1032], "michi": 162, "pyexec": 162, "ifadminstatu": 162, "ifdescr": 162, "iflastchang": 162, "snmpenginetim": 162, "ifoperstatu": 162, "fein": [162, 186], "helferlein": 162, "hochtrabend": 162, "nennt": 162, "funktional": 162, "138": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 1033], "139": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "140": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 273, 277, 283, 295, 647], "l_quadrat": 162, "141": [162, 176, 186, 193, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 364, 860], "kompliziert": [162, 176, 228, 231, 253, 1125, 1144], "anm": 162, "versionen": [162, 232], "aufgebaut": 162, "rausnehmen": 162, "konfigurationsfil": 162, "configpars": 162, "142": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 260, 273, 277, 283, 295, 895, 940], "143": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "liste_als_str": 162, "144": [162, 176, 186, 193, 202, 209, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 443], "145": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 1094], "herbert": 162, "146": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "heraussen": 162, "147": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 813], "148": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 566], "149": [162, 176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "151": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 329], "152": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 329], "mein_dict": 162, "gerhard": 162, "175": [162, 176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 277, 283, 295], "154": [162, 176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295, 860], "dict_as_json_str": 162, "155": [162, 176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 329], "gelesenes_dict_von_json": 162, "nahm": 163, "woch": [163, 183, 340, 341, 1125], "anspruch": 163, "platz": 163, "gesammelten": 163, "notizen": 163, "schnell": [163, 166, 186, 207, 232, 1128], "sachen": [163, 189], "is_prim": [163, 186, 189, 194, 1055], "divisor": [163, 194, 729, 1047], "unmodifi": [163, 176, 212, 223, 452, 503, 549, 563, 882, 884, 975, 988, 1058], "randomnumb": 163, "howmani": 163, "randrang": [163, 191, 215, 223, 225, 228, 231, 235, 238, 241, 263, 317, 976, 1011], "prev": [163, 768], "cur": [163, 283, 369], "fibonum": 163, "tend": [163, 262, 265, 272, 419, 751, 817, 967], "input_list_str": 163, "input_list": [163, 238, 1058], "__n": 163, "__lt__": [163, 225, 228, 231, 235, 253, 256, 277, 295], "rh": [163, 212, 216, 231, 357, 399, 415, 469, 483, 549, 563, 565, 689], "__le__": [163, 225, 228, 231, 235, 253, 256, 277, 295, 995], "__eq__": [163, 225, 228, 231, 235, 253, 256, 277, 295, 995], "__iadd__": 163, "iadd": 163, "__add__": [163, 228, 231, 235, 253, 277, 295, 995], "new_numb": [163, 218], "__radd__": [163, 228, 235, 253, 995], "radd": 163, "lh": [163, 212, 216, 357, 399, 415, 469, 483, 539, 549, 563, 565, 689, 809], "makesnosens": 163, "__number": 163, "input_numb": 163, "numnber": 163, "list_of_squar": 163, "shorter": [163, 983, 994, 1026, 1075], "compehens": 163, "effort": [163, 235, 269, 412, 413, 430, 883], "local_assign": 163, "read_global_vari": 163, "enclos": [163, 231, 382], "local_shadows_glob": 163, "explicit_global_assign": 163, "creation": [163, 272, 294, 713, 715, 720, 730, 731, 837, 874, 904, 915, 920, 929, 935, 946, 955, 1017, 1026, 1027, 1112], "captur": [163, 246, 247, 248, 250, 270, 303, 307, 322, 687, 688, 691, 730, 731, 875, 971, 1130], "create_funct": 163, "inner_funct": 163, "whic": 163, "f_one": 163, "f_two": 163, "launch": [163, 179], "discov": [163, 175, 182], "area": [163, 172, 205, 235, 774, 883, 1141, 1147], "scikit": [164, 166, 213, 1112], "manipul": [164, 434, 583, 706, 729, 776, 882, 895, 904, 939, 951, 1014, 1032], "appreci": [164, 215, 817, 1033], "beauti": [164, 178, 179, 182, 200, 202, 203, 210, 221, 225, 226, 229, 235, 252, 276, 322, 395, 525, 583, 920, 977, 1026, 1033, 1076], "spectral": [164, 1078], "mat": 164, "scipi": [164, 166, 194, 213, 1112], "loadmat": [164, 166], "sklearn": [164, 166, 1079, 1081, 1112], "pixel": 164, "rgb": [164, 166, 331], "dimens": [164, 166, 1081, 1133], "xkcd": 164, "schafer": [164, 175, 178, 179, 182, 200, 203, 210, 213, 216, 226, 229, 240, 243, 252, 276, 282, 322, 327, 1076, 1094, 1095, 1097, 1098, 1099, 1100, 1102, 1113], "keith": [164, 175, 179, 200, 213, 226, 240, 243, 276, 282, 1076], "galli": [164, 175, 179, 200, 213, 226, 240, 243, 276, 282, 1076], "sci": 164, "kit": [164, 331], "spyder": [164, 175, 1000], "pycharm": [164, 175, 269, 1000], "retain": [164, 388, 1018], "invoc": [164, 469], "comparison": [164, 181, 204, 218, 221, 231, 239, 277, 364, 368, 374, 525, 689, 1009, 1051], "misfeatur": 164, "png": [164, 166, 438, 954, 1078], "imgfil": 164, "veggi": [164, 166, 1078], "pillow": [164, 166], "welcom": 164, "cooper": [164, 714], "477x686": 164, "imgarrai": [164, 166], "ndim": [164, 1081], "477": [164, 218, 263], "dtype": [164, 166, 260, 263, 267, 1081, 1094, 1095, 1097, 1098, 1099, 1100], "uint8": 164, "255": [164, 199, 215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 295, 931], "172": [164, 176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 414], "nrow": [164, 166], "ncol": [164, 166], "reshap": [164, 166, 200, 213, 226, 240, 243, 276, 282, 1076, 1079, 1081], "irrelev": [164, 181, 186, 219, 364, 406, 429, 823, 1007, 1089], "colorspac": 164, "mpl_toolkit": 164, "mplot3d": 164, "axes3d": 164, "pyplot": [164, 193, 212, 241, 244, 295, 972, 1030, 1081], "plt": [164, 193, 212, 241, 244, 295, 972, 1030, 1081], "fig": 164, "add_subplot": 164, "set_xlabel": 164, "set_ylabel": 164, "set_zlabel": 164, "ndindex": 164, "scatter": [164, 749], "rgb_linear": 164, "n_cluster": [164, 166], "copy_x": 164, "max_it": 164, "n_init": 164, "n_job": 164, "precompute_dist": 164, "random_st": [164, 1079, 1081], "tol": 164, "verbos": [164, 171, 434, 707, 804, 838, 840, 1011, 1105], "cluster_cent": 164, "int32": [164, 415], "327222": 164, "cluster_centers_": [164, 166], "20529747": 164, "50360681": 164, "3796182": 164, "94408609": 164, "75471018": 164, "53133237": 164, "226": [164, 176, 195, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295, 319], "64913628": 164, "76939951": 164, "92569235": 164, "71464963": 164, "47333306": 164, "60640492": 164, "8888303": 164, "92275244": 164, "84313209": 164, "157": [164, 176, 186, 193, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "30685398": 164, "43988931": 164, "03959132": 164, "225": [164, 176, 215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 277, 283, 438, 1033], "55934051": 164, "182": [164, 176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 273, 277, 283, 295], "98255893": 164, "3232048": 164, "241": [164, 215, 218, 223, 225, 228, 231, 238, 241, 256, 273, 277, 283, 1033], "37322907": 164, "159": [164, 176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "54158234": 164, "51775529": 164, "idx": [164, 166, 231], "cube": 164, "concaten": [164, 166, 203, 215, 216, 223, 231, 277, 316, 364, 430, 863, 1012, 1020, 1103], "axi": [164, 166, 267, 1097, 1098], "reduced_img": [164, 166], "fromarrai": [164, 166], "float": [165, 176, 180, 182, 184, 186, 193, 194, 199, 202, 212, 215, 216, 218, 221, 223, 225, 228, 231, 236, 239, 253, 256, 261, 273, 277, 283, 294, 296, 317, 318, 345, 346, 347, 351, 361, 363, 364, 368, 398, 407, 412, 431, 459, 468, 574, 575, 664, 882, 940, 950, 988, 1006, 1021, 1028, 1033, 1127, 1131], "franziska": [165, 166], "baseexcept": [165, 202, 231, 235, 256, 975], "callabl": [165, 179, 215, 228, 238, 241, 256, 263, 273, 277, 284, 647, 689, 711, 719, 989, 990, 1027], "forev": [165, 389, 390], "rescu": [165, 223, 562, 583, 705, 707, 778, 973], "pooh": [165, 575], "hex": [165, 176, 186, 193, 208, 218, 228, 241, 253, 256, 263, 273, 283, 317, 333, 506, 884, 1021], "0x7f03d41165f0": 165, "nonexist": 165, "react": [165, 180, 182, 184, 285, 301, 411, 572, 882, 899, 975, 1132], "ensu": 165, "catch": [165, 205, 221, 244, 270, 307, 333, 478, 495, 512, 514, 547, 573, 576, 592, 598, 602, 607, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 675, 683, 721, 731, 950], "jessa": [165, 186, 193, 215, 244, 295], "verdammt": [165, 322], "ipython": [165, 202, 212, 218, 228, 231, 256, 273, 860], "bd3a1af9b474": 165, "issubclass": [165, 202, 218, 231, 256], "rais": [165, 166, 180, 182, 184, 202, 203, 212, 216, 218, 219, 223, 225, 228, 229, 231, 235, 243, 244, 277, 294, 307, 333, 973, 980, 986, 996, 1022, 1024, 1097, 1098, 1103], "bummer": [165, 218, 721, 1020], "peter": [165, 188, 225, 235, 313, 314, 1013], "paul": [165, 313, 314, 1013], "mari": [165, 1013], "pet": 165, "perfectli": [165, 221], "bloh": [165, 202], "blech": [165, 273, 660, 1092], "range_iter": [165, 176, 191, 208, 215, 223, 225, 228, 231, 241, 253, 256, 263, 273], "0x7f03d402e570": 165, "stopiter": [165, 176, 191, 202, 208, 212, 215, 218, 223, 225, 228, 231, 235, 241, 253, 256, 263, 273, 277, 283, 295, 675, 683, 975, 980], "beantwortung": [166, 340], "herrschaft": [166, 340], "gestellt": [166, 176, 340, 1129], "schulungsr\u00e4umen": [166, 340], "platzhirsch": [166, 340], "schlagen": [166, 340], "spass": [166, 340, 1134, 1136, 1141], "unglaublich": [166, 340], "lustig": [166, 187, 340, 1125, 1136], "vermittelt": [166, 340, 1146], "gelernt": [166, 340, 1134], "anwend": [166, 340], "beachten": [166, 187, 340, 1140], "zudem": [166, 340], "kursleit": [166, 340], "sympathisch": [166, 340], "kompet": [166, 340], "w\u00fcrde": [166, 176, 340], "weiterempfehlen": [166, 340], "wiederholen": [166, 340], "christoph": [166, 208, 340], "jemand": [166, 340], "lassen": [166, 176, 187, 340, 1128, 1134, 1140, 1144, 1148], "bevor": [166, 1134, 1141, 1148], "anf\u00e4ngerthemen": 166, "vorbei": [166, 225, 231, 1137], "herumzureiten": 166, "gehackt": [166, 206], "zeug": [166, 295, 1143], "chef": 166, "vorgespr\u00e4ch": 166, "\u00fcbungsbeispiel": [166, 176], "mitgegeben": 166, "ausgehend": [166, 187, 340], "spektralbild": 166, "sagt": [166, 223], "verwend": [166, 199, 340], "clusteringalgorithmu": 166, "kategorisieren": 166, "abgebildeten": 166, "st\u00fccke": [166, 170], "erkennen": [166, 1129], "hab": 166, "erlaubt": [166, 176, 1125], "kursvorbereitung": 166, "appet": 166, "reduzieren": 166, "farbredukt": 166, "farben": 166, "bilddaten": 166, "interoperiert": 166, "nahtlo": [166, 1134, 1141], "zufal": [166, 192, 1128], "alpha": [166, 231, 277, 1031], "ausgangsbild": 166, "abzuschneiden": 166, "restoren": 166, "algorithmu": [166, 186, 231, 235, 238], "reduc": [166, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 447, 649, 687, 728, 730, 731, 884, 1078], "acht": [166, 186, 187, 231, 263, 283, 1140], "\u00fcberschaubar": 166, "ausdrucksst\u00e4rk": 166, "bemerkbar": 166, "wegschneiden": 166, "pil": 166, "kmean": 166, "nrgba": 166, "disregard": [166, 368], "arbitrarili": [166, 737, 910, 914, 973], "linear_rgb": 166, "rgba": 166, "ergeben": 166, "testprogramm": 166, "imndata": 166, "teilzeitmitarbeiterin": 166, "studiert": 166, "folgendem": [166, 208, 1148], "bekackten": 166, "inputformat": 166, "parsen": [166, 191], "zwischendurch": 166, "gruppenarbeit": 166, "h2o": 166, "dat": 166, "mass": [166, 272], "0000000e": 166, "2662399e": 166, "5994910e": 166, "4391972e": 166, "0048070e": 166, "0078250e": 166, "hessian": 166, "hartre": 166, "bohr": 166, "kamu": 166, "05054e": 166, "61610e": 166, "00000e": 166, "20781e": 166, "08051e": 166, "83024e": 166, "06829e": 166, "42629e": 166, "65256e": 166, "52600e": 166, "69570e": 166, "91733e": 166, "04388e": 166, "34292e": 166, "04780e": 166, "63758e": 166, "19019e": 166, "41217e": 166, "11622e": 166, "21912e": 166, "11752e": 166, "04198e": 166, "36702e": 166, "14839e": 166, "71613e": 166, "96373e": 166, "40456e": 166, "21369e": 166, "24236e": 166, "60956e": 166, "84350e": 166, "29686e": 166, "92365e": 166, "einigen": [166, 187, 340], "runden": [166, 176], "nachdenken": 166, "einigerma\u00dfen": 166, "zufrieden": 166, "load_dat": 166, "matrix_lin": 166, "readlin": [166, 193, 195, 202, 203, 215, 216, 222, 231, 238, 263, 273, 314, 838, 1026, 1103], "vergeigt": 166, "matrix_el": 166, "unnecessari": [166, 359, 389], "triangular": 166, "max": [166, 176, 194, 199, 212, 218, 221, 223, 225, 228, 233, 238, 256, 373, 389, 525, 574, 815, 876, 1081], "row_no": 166, "__name__": [166, 202, 203, 216, 225, 231, 235, 256, 273, 277, 315, 322, 974, 976, 979, 983, 1103], "bildverarbeitung": 166, "ahnung": [166, 208], "beeeeeep": 167, "broad": [167, 448, 1083, 1130, 1131], "responsibl": [167, 937, 1110], "sane": [167, 333, 815, 1084, 1110], "interfer": [167, 419, 432, 883], "paradigm": [167, 814, 822, 875, 883, 1145], "breakag": [167, 758], "nontrivi": [167, 175, 179, 324, 1000, 1104], "inappropri": [167, 346, 351, 452, 736], "conclus": [167, 175, 182, 776], "awkward": 167, "encourag": [167, 737], "hear": 167, "predat": [167, 741, 867, 946], "doubt": [167, 212, 218, 228, 231, 235, 706, 1007], "schulungsbeschreibung": [168, 1124], "drehbuch": 168, "workshop": 168, "infolgedessen": 168, "virtuel": [168, 232, 1134, 1144, 1145], "konzipiert": [168, 178, 340], "add_subdirectori": [169, 439, 443, 944, 1119], "group1": 169, "group2": 169, "montag": [170, 178, 179, 200, 204, 1125], "vorbereitung": [170, 340, 1127], "mitbringen": 170, "teilzunehmen": 170, "stattfinden": [170, 246], "folgt": 170, "hierzu": 170, "privatheitsrichtlinien": 170, "bauanleitung": 170, "ausprobieren": 170, "willkommen": 170, "schulungsbeschreibungen": 170, "raii": [170, 272, 547, 731], "stl": [170, 331, 395, 508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524, 547, 548, 586, 590, 612, 614, 615, 629, 644, 655, 731, 1129, 1130, 1131], "scott": [170, 654, 709], "meyer": [170, 457, 709], "primer": [170, 1117], "sonstig": 170, "argh": [170, 390, 641, 669, 975, 1105, 1117], "kursanforderung": 170, "erg\u00e4nzend": 170, "lasst": 170, "testgetrieben": 170, "testcas": [170, 1111], "aufgab": [170, 176, 206, 1137], "hacken": 170, "diskutieren": 170, "niederschrift": 170, "geschehenen": 170, "geh\u00f6renden": 170, "privaten": 170, "verl\u00e4uft": 170, "ansehen": 170, "clonen": 170, "wann": [170, 178], "zugeh\u00f6rigen": 170, "entspricht": 170, "unbetr\u00e4chtlich": 170, "gcc5": 170, "laufen": [170, 1125], "darau": [170, 178], "installationsanleitung": 170, "benutzung": [170, 322, 327], "zuerst": [170, 1148], "aggreg": [170, 420, 431, 549, 790, 1094, 1117], "klassen": [170, 176, 182, 323, 1129], "konstruktoren": [170, 194, 246, 323, 1129], "methoden": [170, 176, 188, 317, 1129], "referenzen": [170, 176, 187, 188, 246, 1129, 1140], "klass": [170, 199, 295], "\u00e4quival": 170, "\u00fcbergab": 170, "langsam": [170, 176, 225], "ausbauen": 170, "dynmem": 170, "demonstrieren": 170, "alloziert": [170, 176, 193], "konstruktor": 170, "destruktor": 170, "vermeiden": [170, 176, 1146], "dtor": [170, 447, 533, 619, 624, 655, 658, 692], "ausflug": [170, 186, 227], "capac": [170, 600], "\u00fcbung": [170, 187, 188, 1140], "handgestrickt": 170, "fallen": [170, 1128, 1129], "lustvol": 170, "erleiden": 170, "teufel": [170, 1128], "smart": [170, 246, 268, 323, 324, 325, 340, 429, 506, 616, 656, 657, 687, 707, 712, 720, 728, 730, 731, 1130, 1133], "shared_ptr": [170, 205, 221, 247, 248, 250, 268, 270, 303, 461, 525, 616, 647, 656, 687, 702, 708, 709, 712, 720, 728, 730, 731, 1130], "unique_ptr": [170, 205, 221, 247, 248, 250, 268, 270, 303, 447, 454, 461, 487, 488, 525, 616, 655, 656, 687, 702, 705, 712, 720, 727, 728, 730, 731, 1130], "demonstriert": 170, "vorgriff": 170, "sortieren": [170, 1129], "employeerecord": 170, "parametrisierbarem": 170, "koordinatentyp": 170, "102ff": 170, "arten": [170, 1127], "containern": 170, "pointerarithmetik": 170, "wiederholung": [170, 187, 194, 230, 1140], "iteratoren": [170, 233], "laufzeitverhalten": [170, 188], "verbesserungen": 170, "gegen\u00fcb": [170, 1127], "6ff": 170, "lambda": [170, 202, 203, 216, 218, 221, 233, 246, 253, 270, 273, 278, 295, 431, 525, 590, 662, 687, 692, 697, 699, 711, 714, 719, 730, 731, 971, 1129, 1130, 1131], "gegen\u00fcberstellung": 170, "sort_algorithm_reverse_lambda": 170, "vererbung": [170, 1129], "fallstudi": 170, "livegehackt": 170, "angebunden": 170, "komplex": [170, 223, 225, 231, 238, 263, 1146], "aufbauen": 170, "vergleichbaren": 170, "anbinden": 170, "wurden": [170, 178], "eigen": [170, 189, 1129, 1134, 1141, 1146, 1147], "kapitel": [170, 322, 327, 1127], "behandelt": [170, 1124], "vorbeigehen": 170, "dcmake_cxx_flag": 171, "dcmake_install_prefix": [171, 437], "libgtest": [171, 172, 268, 270, 1117, 1119], "claim": [171, 357, 566, 568, 569, 813, 906], "simlp": 171, "concret": [171, 179, 205, 268, 447, 454, 459, 474, 536, 622, 624, 719, 988, 1083], "find_packag": [171, 173, 1119], "add_execut": [171, 432, 438, 444, 490, 526, 529, 532, 535, 538, 541, 544, 638, 941, 948, 953, 954, 1116, 1119, 1121], "add_test": [171, 445, 529, 1116, 1119], "emphasi": [171, 303], "ultim": [171, 202, 222, 557, 722, 883], "luke": [171, 231, 1119], "thetoplevel": 171, "findgtest": [171, 173, 1119], "gtest_root": 171, "dgtest_root": 171, "paranoidli": 171, "bitrot": [172, 1119], "var": [172, 176, 215, 231, 238, 241, 256, 263, 273, 277, 483, 778, 810, 840, 860, 865, 866, 869, 966], "libgmock": [172, 268, 270], "gmock": [172, 1117], "dcmake_build_typ": [172, 434], "loudli": [172, 557, 781, 891], "flathub": 173, "appstream": 173, "visualstudio": [173, 232, 342], "flatpakref": 173, "stone": 173, "snap": 173, "hate": [173, 551], "textual": [173, 175, 504], "findpackagehandlestandardarg": 173, "gtest_librari": 173, "gtest_include_dir": 173, "gtest_main_librari": 173, "378": [173, 215, 218, 225, 263, 1033], "_fphsa_failure_messag": 173, "197": [173, 176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 256, 273, 277, 283, 295], "find_package_handle_standard_arg": 173, "occur": [173, 235, 349, 364, 369, 370, 416, 440, 523, 717, 776, 838, 867, 937, 1021, 1022, 1026, 1135], "gessmann": 173, "cpoint_demo": 173, "cmakefil": [173, 432, 438, 443, 953, 954], "cmakeoutput": 173, "sigh": [173, 205, 506, 709, 1067], "jail": 173, "dict_extensions_suit": 174, "thing_suit": 174, "xsv": 174, "dict_extens": 174, "wednesdai": [175, 183, 265], "thursdai": [175, 179], "publicli": [175, 539], "freedom": [175, 419, 625], "spontan": 175, "cost": 175, "agil": [175, 189, 429, 1104], "methodologi": 175, "formul": [175, 271, 431, 664, 722, 901, 1133], "diadact": [175, 1000], "anaconda": [175, 269, 1000], "dictat": [175, 285, 301, 368, 407, 946, 1000, 1001, 1085, 1102, 1105, 1132], "volumin": [175, 1000], "nodepad": [175, 1000], "configurabilti": [175, 1102], "eclips": [175, 1000, 1092], "pydev": [175, 1000], "seemingli": [175, 179, 952, 1000, 1076], "strang": [175, 882, 1000], "emac": [175, 195, 273, 838, 860, 952, 1000, 1102], "immutabilii": 175, "crisi": 175, "slept": 175, "lunch": 175, "squeez": 175, "Such": [175, 250, 254, 656, 687, 697, 703, 712, 720, 728, 730, 731, 952, 1110], "takeawai": 175, "nonverb": 175, "antenna": 175, "Being": [175, 821, 862, 884, 1016], "stubborn": 175, "greybeard": 175, "distutil": 175, "azur": 175, "devop": [175, 999], "heavyweight": [175, 328, 711], "reach": [175, 223, 631, 706, 737, 742, 809, 910, 1021], "afternoon": 175, "simplic": [175, 469, 809, 876, 899, 973], "paral": 175, "imposs": [175, 235, 415, 451, 675, 686, 776, 928], "expand": [175, 231, 277, 389, 390, 881, 910, 952, 954], "entertain": [175, 179, 200, 203, 226, 252, 276, 1076], "david": [175, 178, 179, 187, 200, 203, 226, 252, 267, 271, 272, 276, 293, 297, 323, 324, 655, 704], "beazlei": [175, 178, 179, 187, 200, 203, 226, 252, 271, 272, 276, 293, 297, 323, 324], "freelanc": 175, "raymond": [175, 178, 179, 182, 186, 187, 200, 203, 210, 226, 229, 252, 276], "hetting": [175, 178, 179, 182, 186, 187, 200, 203, 210, 226, 229, 252, 276], "bias": 175, "humor": [175, 882, 1021], "emphas": [175, 182, 204, 542, 733, 741, 758, 1105], "dissect": [175, 179, 267, 692, 980, 1076], "multiprocess": [175, 179, 229, 271, 272, 1076, 1134, 1141, 1145], "truli": [175, 179, 1076], "chri": [175, 179, 200, 1076], "wilcox": [175, 179, 200, 1076], "frontier": [175, 179, 252, 276, 1076], "whop": [175, 179, 252, 276, 967, 1076, 1083], "simul": [175, 328, 329, 506], "covid": 175, "apart": [175, 235, 272, 382, 648, 876, 978], "ipykernel_launch": [176, 228, 231], "57bd7d77": 176, "6e54": 176, "4dcd": 176, "b7a8": 176, "452f82f88569": 176, "welt": [176, 186, 199, 317, 340, 1125, 1146], "doku": [176, 186, 253], "aeh": 176, "__doc__": [176, 199, 202, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 277, 295, 315, 317, 976, 1004, 1027], "interaktiven": 176, "modu": 176, "formatierung": [176, 186, 246], "\u00fcbernimmt": 176, "nachdem": [176, 186], "welch": [176, 216], "hamma": 176, "bieten": [176, 1144], "sech": [176, 186, 199, 231, 238, 263, 277], "zurueck": [176, 235, 273], "objektidentit\u00e4t": [176, 194], "0x7fe9d8578dc0": 176, "referenzieren": 176, "wechselt": 176, "zeigt": [176, 186, 1141], "identit\u00e4t": 176, "0x7fe9c4454d90": 176, "listen": [176, 182, 187, 188, 192, 227, 246, 322, 762, 877, 893, 1092, 1140, 1145, 1147], "ausdrucksstark": 176, "trotzdem": [176, 1134, 1141], "lesbar": [176, 225], "beid": [176, 191, 207, 1148], "modifizieren": 176, "modifik": 176, "sichtbar": [176, 340], "gerechnet": 176, "valueerror": [176, 186, 202, 208, 215, 223, 225, 228, 231, 235, 238, 241, 244, 256, 263, 277, 295, 975, 1022], "typeerror": [176, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 295, 316, 974, 975, 988, 995, 1018, 1027, 1098], "gel\u00f6scht": 176, "retten": 176, "uff": 176, "140641996429568": 176, "\u00e4ndern": [176, 188, 1148], "erzeugt": [176, 186], "operanden": 176, "unver\u00e4ndert": 176, "new_l": [176, 231, 1008], "140641996429632": 176, "hurra": [176, 193, 256], "killerfeatur": 176, "abcabc": [176, 215], "sequentiel": [176, 186, 225, 230, 1129], "suche": 176, "Suche": [176, 188, 199, 207, 225], "umst\u00e4ndlich": [176, 186], "andrea": [176, 177, 235, 668, 675], "pfeifer": 176, "gefundener_us": 176, "glauben": 176, "klammern": 176, "begrenz": 176, "interpretiert": 176, "overriden": 176, "ausdruck": 176, "evaluierungsreihenfolg": 176, "9223372036854775808": 176, "einstellig": 176, "schreibt": [176, 866, 1148], "datenmengen": 176, "abzulegen": 176, "sucht": 176, "solchen": [176, 186], "vorstellungsvermoegen": 176, "milliarden": 176, "sebastian": 176, "hugo": [176, 218], "machma": 176, "behandeln": 176, "nichtvorhandensein": 176, "ausnahm": 176, "regel": 176, "mim": 176, "victor": 176, "festzustellen": 176, "evaluiert": 176, "aufgerufen": 176, "operand": [176, 193, 212, 215, 241, 366, 367, 368, 374, 565, 566, 568, 569, 664, 697, 995, 1009], "bereit": [176, 187, 1124, 1129, 1140], "gesamtergebni": 176, "jaja": [176, 231], "rechten": 176, "sparen": 176, "potschert": [176, 188, 191, 194, 218, 225, 238], "berechnung": [176, 225], "summ": [176, 199, 225, 231, 235, 238, 263, 288], "einzig": [176, 475, 489, 1143, 1146], "iteriert": [176, 186], "bildet": [176, 231], "primitiveren": 176, "intelligenteren": 176, "0x7fe9c43c3c90": 176, "letzt": [176, 191, 236], "schleif": [176, 187, 188, 192, 1140], "jede": [176, 322, 327, 1124, 1147, 1148], "selb": [176, 186], "k\u00fcrzer": 176, "vergleicht": 176, "objektidentit\u00e4ten": 176, "objektinhalt": 176, "modifiziert": 176, "kopieren": [176, 322, 327, 1129], "vermeintlich": 176, "modifiktionen": 176, "sch\u00fctzen": 176, "l3": [176, 193, 225, 231, 241, 253, 263, 273, 283, 469], "kopi": [176, 225], "klar": [176, 186, 1125], "geschachtelt": [176, 187, 188, 1140], "gleicher": 176, "referenziert": [176, 186], "erachtet": 176, "ersparst": 176, "kopien": 176, "ran": [176, 248, 437, 454, 503, 504, 505, 506, 567, 706, 969, 1117], "parametern": [176, 199], "beliebigen": [176, 866], "definieren": 176, "vergleichbar": 176, "unterst\u00fctzen": 176, "ihn": [176, 235], "\u00e4pfel": 176, "birnen": 176, "verglichen": 176, "hingegen": [176, 186, 1143], "php": [176, 206, 222, 709], "falschem": 176, "uebergeben": 176, "vergleich": [176, 199, 207, 236, 246], "aepfeln": 176, "140641996137808": 176, "add_to_list": 176, "__defaults__": [176, 225, 235, 256, 277, 1018], "meine_list": [176, 186], "defaultwert": 176, "benutzt": [176, 1134], "allerhand": 176, "seiteneffekten": 176, "aufpassen": 176, "ewig": 176, "existierend": 176, "unf\u00e4ll": 176, "wechselwirkungen": 176, "eventuellen": 176, "globalen": [176, 186], "156": [176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "erzwingt": 176, "158": [176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 260, 273, 277, 283, 295], "160": [176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 253, 256, 267, 273, 277, 283, 295, 436, 731], "gesucht": 176, "genauer": 176, "n\u00e4chst\u00e4u\u00dferen": 176, "162": [176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "nirgend": 176, "163": [176, 186, 193, 209, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "gibtsnetglob": 176, "gibtsnet": 176, "164": [176, 186, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "nameerror": [176, 191, 225, 231, 256, 277, 283, 975, 1017], "aufgabenstellung": 176, "kandidat": 176, "ersten": [176, 178, 191, 283, 314, 1126, 1146, 1148], "unsportlich": 176, "zweiten": [176, 178, 283], "unnachhaltig": 176, "dritten": [176, 283], "gelegenheit": 176, "gab": [176, 178], "erz\u00e4hlen": [176, 1127], "165": [176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 1033], "seq": [176, 194, 256, 768, 940, 978], "fromkei": [176, 222, 227, 239], "166": [176, 186, 193, 215, 218, 223, 225, 231, 235, 238, 253, 256, 273, 277, 283, 295], "167": [176, 186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "xxx": [176, 193, 215, 223, 225, 231, 241, 263, 295, 316, 318, 398, 474], "kksvjhbsk": 176, "sgkysdudsvvc": 176, "dict_kei": [176, 244, 273, 1024], "diesmal": 176, "169": [176, 186, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 273, 277, 283, 295], "170": [176, 193, 202, 209, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "irgendein": [176, 208], "171": [176, 193, 195, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295, 319], "sonst": [176, 186, 223, 225, 238], "kategori": 176, "number_str": 176, "173": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 869], "ihm": [176, 178, 187], "174": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 273, 277, 283, 295, 860], "176": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 277, 283, 295], "177": [176, 193, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "178": [176, 193, 202, 215, 218, 223, 225, 231, 235, 238, 244, 253, 256, 273, 277, 283, 295], "179": [176, 183, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "180": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 431, 762], "181": [176, 193, 215, 218, 223, 225, 231, 235, 238, 253, 256, 263, 273, 277, 283, 295, 431], "heisst": [176, 188, 192, 193, 1128, 1134], "sequenz": 176, "kopiert": 176, "unterschi": [176, 193, 199, 223], "sobald": [176, 178], "183": [176, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "\u00fcbergeben": 176, "184": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295], "it1": 176, "it2": 176, "multipli": [176, 203, 216, 235, 277, 654, 1103], "n2": [176, 235], "combined_iter": 176, "186": [176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "schlecht": 176, "simplen": 176, "transformationen": 176, "generieren": 176, "quadratzahlen": [176, 225], "187": [176, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295], "quadrat": 176, "naeherung": 176, "performant": 176, "gen_squar": 176, "189": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 273, 277, 283, 295], "syntaktisch": [176, 199], "191": [176, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 244, 253, 256, 273, 277, 283, 295], "genexpr": [176, 202, 295], "0x7fe9c43f2900": 176, "193": [176, 193, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "194": [176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 277, 283, 295], "195": [176, 193, 215, 218, 223, 225, 228, 231, 235, 238, 244, 256, 277, 283, 295], "indent": [176, 191, 209, 216, 222, 231, 232, 377, 998, 1001, 1011, 1101], "196": [176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 253, 256, 263, 273, 277, 283, 295], "userlist": 176, "nochwa": [176, 225, 263], "dropdown": 176, "dropdownlist": 176, "fehleranf\u00e4llig": 176, "198": [176, 193, 202, 215, 218, 223, 225, 228, 231, 235, 238, 244, 256, 263, 273, 277, 283, 295], "202": [176, 193, 202, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 277, 283, 295, 431, 454], "203": [176, 193, 202, 204, 215, 218, 223, 225, 228, 231, 235, 238, 253, 256, 277, 283, 295], "205": [176, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "206": [176, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 277, 283, 295], "207": [176, 202, 215, 218, 223, 225, 231, 235, 238, 241, 256, 277, 283], "208": [176, 215, 218, 223, 225, 231, 235, 238, 241, 256, 277, 283, 295], "209": [176, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 277, 283, 295], "user_a": 176, "user_b": 176, "n\u00e4herung": 176, "nackten": [176, 1127], "210": [176, 202, 215, 218, 223, 225, 231, 235, 238, 256, 263, 277, 283, 295], "hantiert": [176, 1128], "anderem": [176, 1134, 1141], "211": [176, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283], "reviewten": 176, "funktionsaufruf": [176, 238], "sonder": 176, "stackoverflowprogrammierung": 176, "entgegenwirken": 176, "ausholen": 176, "212": [176, 202, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 277, 283, 295], "veloc": [176, 202, 318, 1018], "length_m": [176, 202, 318, 1018], "time_": [176, 202, 318, 1018], "213": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 277, 283], "spiel": 176, "214": [176, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 277, 283, 295], "liegen": 176, "positionel": 176, "215": [176, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 277, 283], "param": [176, 186, 199, 216, 244, 277, 660, 709, 710, 883, 939], "216": [176, 202, 215, 218, 223, 225, 231, 235, 238, 253, 256, 263, 277, 283, 295], "217": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "218": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "219": [176, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "entpacken": 176, "positionellen": 176, "221": [176, 202, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295], "kwarg": [176, 202, 229, 231, 235, 256, 277, 973, 977, 998], "explizi": 176, "rauskletzeln": 176, "223": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 277, 283, 295, 1089], "celebrate_another_birthdai": 176, "224": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 277, 283], "227": [176, 215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "228": [176, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 277, 283, 295], "zeiterfassung": 177, "__pycache__": [177, 203, 216, 1103], "supp": 177, "cpython": [177, 202, 212, 218, 228, 231], "pyc": 177, "dienstag": 178, "anleitung": 178, "offen": [178, 340, 1124], "vorwissen": [178, 1129], "konkreten": [178, 340], "aufgabenstellungen": 178, "dienstgeb": 178, "mitgebracht": 178, "quickstart": [178, 1135], "vorgetragen": 178, "wenngleich": [178, 340, 1134, 1144, 1146, 1147], "un\u00fcblichen": 178, "reihenfolg": [178, 1125], "verbrachten": 178, "firmenprojekt": 178, "entspringenden": 178, "festgehalten": 178, "empfehlungen": 178, "weitergehen": 178, "k\u00f6nnte": [178, 1148], "idiomat": [178, 179, 182, 200, 203, 210, 226, 229, 252, 276, 1076], "lieblingsphras": 178, "bringt": [178, 1127, 1146], "forgiv": [178, 179, 276, 1076], "eafp": [178, 179, 276, 1076], "begriff": [178, 192], "viertelstund": 178, "regex": [178, 191, 216, 218, 243, 244, 253, 276, 283, 1020, 1076], "unumg\u00e4nglich": [178, 1142], "textuel": 178, "analysieren": 178, "hero": [178, 179, 200, 203, 226, 252, 276, 1076], "unterhaltsamen": 178, "keynot": [178, 179, 200, 203, 226, 229, 252, 276, 1076], "konferenz": 178, "pydata": [178, 179, 200, 203, 226, 252, 276, 1076], "chicago": [178, 179, 200, 203, 226, 252, 276, 1076], "witzig": 178, "kommt": [178, 193, 203, 206, 232, 1137, 1146, 1148], "selten": 178, "l\u00e4nge": 178, "ganzen": [178, 187, 1140], "abend": 178, "totalschaden": 178, "\u00fcbertragen": 178, "jedem": 178, "angemeldet": 178, "experienc": [179, 268, 270, 297, 340, 1004, 1135], "machinelearn": 179, "fuzzi": [179, 218], "improvis": 179, "shall": 179, "jango": 179, "rush": 179, "strong": [179, 229, 367, 1083, 1085], "claus": [179, 182, 212, 218, 228, 233, 255, 669, 978, 1011, 1014], "whet": [179, 262], "appetit": [179, 262], "get_temperatur": [179, 231, 294, 448, 451, 452, 454, 459, 461, 471, 472, 477, 479, 480, 482, 485, 486, 490, 493, 498, 499, 500, 501, 505, 506, 507, 518, 536, 657, 705, 706, 707, 708, 988, 1064], "__dict__": [179, 199, 202, 203, 215, 216, 225, 228, 231, 235, 244, 256, 273, 277, 295, 989, 995, 1103], "con": [179, 863, 969], "fiction": 179, "get_temperature_celsiu": 179, "competitor": 179, "eana": 179, "get_temperature_fahrenheit": 179, "eanaadapt": 179, "unserthermomet": 179, "revisit": [179, 221, 229, 252, 270, 294, 582], "shift": [179, 220, 407, 419, 551, 600, 883, 995], "visitor": 179, "gang": [179, 1133], "idiom": [179, 548, 685], "classic": [179, 406, 457, 548, 770, 1133], "travers": [179, 420, 693, 705, 975, 980, 1016], "convolut": 179, "__call__": [179, 225, 235, 256, 277, 283, 974], "__str__": [179, 202, 203, 216, 225, 228, 231, 235, 253, 256, 277, 294, 295, 333, 975, 1103], "__repr__": [179, 225, 228, 231, 235, 253, 256, 277, 295], "poor": [179, 221, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731, 768, 875, 905, 950], "deleg": [179, 557, 687, 730, 731, 1130], "deck": [179, 204, 525], "sensordata": 179, "sensordata_test": 179, "historydata": 179, "slowli": [179, 542, 647, 760, 875], "csvreport": 179, "csv2sqlite3": 179, "frontend": [179, 558, 952, 970, 1106], "flaskerl": 179, "reiter": [179, 200, 219, 221, 226, 229, 330, 559, 1076], "phrase": [179, 182, 200, 223, 225, 226, 229, 231, 256, 805, 806, 993, 1076], "impress": [179, 405], "brought": [179, 419, 984], "cloth": 179, "extraordinari": 179, "mondai": [180, 182, 184, 185, 210, 259, 265, 268, 270], "preliminari": [180, 182, 183, 184, 185], "homogen": [180, 340], "versu": [180, 182, 184], "immut": [180, 182, 184, 186, 187, 194, 201, 203, 214, 215, 216, 218, 224, 230, 233, 239, 245, 254, 262, 264, 265, 278, 295, 317, 389, 999, 1006, 1007, 1008, 1012, 1103, 1140], "datastructur": [180, 204, 222, 1012], "exercise4": 180, "uh2ebfw8oym": [180, 184], "f26namfjggw": 180, "5qqq3yzbkp8": 180, "ugharkscop9uthgcoaec": 180, "pairwis": [181, 215, 564], "vale": 181, "bewar": [181, 368, 882, 950, 1081, 1083], "cheaper": [181, 419, 566, 568, 569, 647], "memorywis": 181, "johann": 181, "syntact": [181, 202, 376, 519, 559, 647, 699], "sugar": [181, 647, 699], "allow": [181, 182, 202, 231, 362, 429, 634, 707, 729, 760, 783, 1038, 1110, 1130], "retval": [181, 415, 605, 921], "dlc": 181, "msg1": 181, "readabl": [181, 225, 235, 269, 355, 386, 390, 410, 411, 412, 419, 429, 431, 490, 604, 625, 640, 648, 651, 686, 697, 699, 705, 710, 711, 813, 823, 829, 834, 838, 860, 885, 952, 978, 997, 1018, 1026, 1028, 1047], "0x7f41f5ff26a0": 181, "msglist": 181, "0x7f41f5ff4160": 181, "0x7f41f5ff41c0": 181, "291130": 181, "now_timestamp": 181, "1603884859": 181, "3412576": 181, "fromtimestamp": 181, "341258": 181, "372": [181, 218, 225, 263], "45259": 181, "microsecond": [181, 410, 815], "programmverweis": 182, "xy": [182, 225, 228, 263, 567, 1016], "zab": 182, "eventcodefil": 182, "definedlisaev": 182, "event_id": 182, "bla": 182, "blubb": 182, "verbessert": 182, "stringformatierung": 182, "ctype": 182, "headerfil": [182, 866], "lst": [182, 218, 820, 1125], "callbackfunc": 182, "datetim": [182, 203, 209, 210, 211, 216, 264, 267, 1033], "observ": [182, 251, 269, 307, 446, 453, 467, 470, 481, 495, 547, 731, 981, 982, 1088, 1133], "longish": 182, "resurrect": [182, 432, 838], "outputsequ": 182, "resist": 182, "uncondition": [182, 781, 975], "suitabl": [182, 231, 277, 751, 875, 924, 988, 997], "analysi": [182, 419, 1078, 1081, 1094], "cp1252": [182, 1070, 1071, 1073], "csvlog": 182, "csv_reader": 182, "recv": [182, 183, 878], "tuesdai": [183, 265, 280], "246": [183, 215, 218, 223, 225, 228, 231, 238, 256, 273, 277, 283, 1089], "corpor": [183, 256], "commandin": [183, 185], "comress": [183, 185], "gzip": [183, 185, 249, 258, 279, 280, 731, 778, 801, 803, 804, 808, 874, 962, 963, 1136], "diagnos": [183, 185, 323, 324, 1134, 1141], "netstat": [183, 185, 258, 279, 280, 1092, 1134, 1141], "netcat": [183, 185, 258, 279, 280], "subshel": [183, 185, 195], "telnetd": 183, "insecur": [183, 891], "proto": 183, "foreign": [183, 259, 390], "34490": 183, "56062": 183, "sshd": [183, 215, 231, 238, 241, 256, 263, 273, 277, 810, 814, 816, 869, 885, 895], "systemctl": [183, 966, 1092], "freedesktop": 183, "systemd1": 183, "quickli": [183, 270, 285, 297, 301, 325, 389, 449, 883, 1132], "unprivileg": 183, "putti": [183, 195, 319], "puttygen": 183, "id_rsa": [183, 891], "authorized_kei": [183, 891], "trivia": 183, "hoorai": [183, 228, 241, 263, 1011], "idiot": 183, "blinker": 183, "briana": 183, "mac": [183, 200, 216, 838, 1002, 1076, 1113], "wakeup": [184, 221, 333, 337, 719, 731, 774, 874, 883, 902, 915, 925, 935, 937], "patrick": 184, "1996": [184, 218], "wagna": 184, "gernot": 184, "1982": [184, 218], "birthplac": 184, "txt2json": 184, "equip": [185, 259, 330, 875, 1134, 1141], "wobei": 186, "deppert": [186, 199, 317], "sidestep": 186, "builtin_function_or_method": [186, 256, 283], "sozusagen": 186, "genauso": [186, 1124], "aufrufen": [186, 866], "zaehler": 186, "initialwert": 186, "zaehlen": 186, "naechsten": 186, "schleifendurchlauf": 186, "locker": [186, 776], "mein_integ": 186, "1024": [186, 218, 809, 815, 838, 900], "sch\u00fctzt": 186, "passen": [186, 253], "gehandhabt": 186, "1267650600228229401496703205376": [186, 212, 215, 223, 235, 241, 263], "hoch": 186, "rechnen": [186, 322, 327], "tut": [186, 295, 317, 1127], "ausschliesslich": [186, 1136], "ganzzahldivis": 186, "ganzzahligen": 186, "resultat": 186, "gleichen": [186, 1134, 1147], "vorrang": 186, "ghi": [186, 225], "viert": 186, "nwelt": 186, "nwie": 186, "linefe": [186, 195, 216, 223, 351, 352, 1020, 1026, 1056, 1101], "bedeutung": [186, 1129, 1136], "unangetastet": 186, "glump": 186, "nebenlaeufigkeitsdemo": 186, "ebenlaeufigkeitsdemo": 186, "l\u00f6sung": [186, 199, 208, 340, 877], "formatierungsm\u00f6glichkeit": 186, "pfx_var1": 186, "pfx_var2": 186, "ausgab": [186, 1127], "notwendig": [186, 1126, 1142, 1143], "abzubrechen": 186, "ignorieren": [186, 187, 193, 1140], "gefunden": [186, 256, 866], "value1": [186, 1036], "501": [186, 218, 1036], "value2": [186, 1036], "799": [186, 215, 218, 1033, 1036], "value3": [186, 1036], "sprachen": [186, 187, 1127, 1140], "neg": [186, 231, 235, 368, 410, 415, 627, 756, 869, 1117], "indiz": 186, "erscheinen": 186, "komisch": 186, "bequem": 186, "mapping_t": 186, "f\u00fcnf": [186, 1134], "sieben": [186, 199, 225, 605], "neun": 186, "explicit": [186, 205, 212, 216, 225, 233, 235, 365, 374, 402, 415, 419, 432, 474, 475, 488, 489, 525, 551, 553, 554, 578, 604, 647, 648, 657, 664, 669, 677, 684, 689, 704, 707, 749, 904, 918, 950, 970, 971, 1001, 1004, 1007, 1084, 1097], "implicit": [186, 212, 225, 235, 355, 361, 365, 530, 646, 648, 664, 838, 907, 993, 1007], "primzahlen": 186, "checken": 186, "primzahl": [186, 187, 1140], "checkenden": 186, "zahl": [186, 193, 199, 224, 225, 228, 238, 317], "probier": 186, "gach": [186, 225], "teiler": 186, "teiler_kandidaten": 186, "prim": 186, "gleichema\u00dfen": 186, "vollst\u00e4ndigkeit": 186, "halber": 186, "startend": [186, 225], "schrittweit": 186, "0x7f24f2ac0e50": 186, "ablegen": 186, "0x7f24f2ac0e70": 186, "arschlangsam": 186, "num_comparison": 186, "datenstruktur": [186, 207], "suchen": [186, 207, 865, 1129, 1136], "einf\u00fcgen": [186, 1134], "optimiert": [186, 199], "perfekt": 186, "einitreten": 186, "himmi": 186, "list_reverseiter": [186, 215, 238, 263], "0x7f24ec31d190": 186, "bricht": 186, "beinhart": 186, "liefert": [186, 1136], "lieber": 186, "zweit": [186, 199, 225, 256, 295, 317, 1134], "po": [186, 225, 231, 235, 256, 261, 273, 277, 431, 507, 600, 627], "wirklichkeit": 186, "ordin\u00e4r": 186, "alternativen": 186, "fruit": 186, "gemma": 186, "divisor_candid": 186, "161": [186, 193, 215, 218, 223, 225, 228, 231, 235, 238, 241, 253, 256, 273, 277, 283, 295], "wegen": 186, "dogma": 186, "zugewiesen": 186, "meine_vari": 186, "eine_vari": [186, 263, 273], "angelegt": 186, "streng": 186, "obigem": 186, "dazusagen": 186, "noch_eine_globale_vari": 186, "increment_diese_vari": 186, "offiziel": [187, 189, 197, 200, 203, 204, 206, 222, 234], "leitfaden": 187, "kommentar": [187, 188, 199, 263, 317, 1140], "platziert": [187, 207], "hackereien": 187, "gleicherma\u00dfen": 187, "sogenannten": 187, "semantik": [187, 188, 1140], "sprach": [187, 188, 1127, 1128, 1129, 1140, 1141, 1148], "standarddatentypen": [187, 188, 1140], "literal": [187, 188, 246, 1140], "python2": [187, 225, 1140], "endg\u00fcltig": [187, 1140], "rausl\u00f6schen": [187, 1140], "konstanten": [187, 188, 1140], "typen": [187, 193, 1136, 1140, 1146], "operatoren": [187, 188, 866, 1129, 1140], "angeschnitten": [187, 1140], "vertiefung": [187, 203, 1140], "nocheinm": [187, 340, 1140], "ausdr\u00fcck": [187, 188, 246, 1140], "operatorrangfolgen": [187, 188, 1140], "grundlegenden": [187, 323, 1136, 1140], "sprachelementen": [187, 1140], "rede": [187, 1140], "syntaxdiagramm": [187, 1140], "gespritzt": [187, 1140], "gesamt": [187, 1140], "sperrig": [187, 1140], "n\u00fctzt": [187, 1140], "menschlich": [187, 1140], "abzubilden": [187, 1140], "tabel": [187, 1140], "anweisungen": [187, 188, 1140], "gro\u00dfen": [187, 1140], "fisch": [187, 1140], "instruktiv": [187, 1140], "bedingungen": [187, 188, 1126, 1140], "verzweigungen": [187, 188, 1140], "bedingt": [187, 188, 1127, 1140], "anweisung": [187, 188, 1140], "formulierungen": [187, 1140], "mehrfach": [187, 188, 1140], "fallauswahl": [187, 188, 1140], "benutzereingaben": [187, 1140], "\u00fcberpr\u00fcfen": [187, 1140], "schleifenkonstrukt": [187, 1140], "weitgehend": [187, 1140], "unserem": [187, 1140], "vehikel": [187, 1140], "hilfreich": [187, 1136, 1140], "klarstellung": [187, 1140], "fu\u00dfgesteuert": [187, 188, 1140], "z\u00e4hlergesteuert": [187, 188, 1140], "auslassen": [187, 1140], "kopfgesteuert": [187, 188, 1140], "gewinnt": [187, 1140], "konsol": [187, 1140], "anzeigen": [187, 1136, 1140], "voraussetzung": [187, 1140], "ausblick": [187, 1140], "schnell\u00fcbersicht": [187, 188, 1140], "sprunganweisungen": [187, 188, 1140], "endlosschleifen": [187, 188, 1140], "naja": [187, 1140], "reinschauen": [187, 1140], "mager": [187, 1140], "ausgelassen": [187, 1140], "eindimensional": [187, 188, 1140], "gefolgt": [187, 225, 1140], "zeichenketten": [187, 188, 1140], "tupel": [187, 188, 191, 1140], "besonder": [187, 188, 1140], "stapel": [187, 188, 1140], "schlangen": [187, 188, 1140], "tempo": [187, 1140], "schauma": [187, 193, 1140], "fallt": [187, 1140], "gscheit": [187, 194, 1140], "gemeinsam": [187, 1124, 1126, 1140, 1143], "dr\u00fcber": [187, 1140], "vielzahl": [187, 1140, 1144, 1147], "l\u00f6sungsm\u00f6glichkeiten": [187, 1140], "eingegangen": [187, 1124, 1140, 1144], "pythonischst": [187, 1140], "bestritten": [187, 1140], "unterprogramm": [187, 188, 1140], "parameter\u00fcbergab": [187, 188, 1140], "r\u00fcckgabewert": [187, 188, 1140], "inner": [187, 188, 208, 431, 974, 1140], "standardbibliotheken": [187, 188, 1140], "funktionalit\u00e4ten": [187, 188, 1140], "berechnet": [187, 223, 231, 1140], "satz": 187, "gepr\u00e4gt": 187, "konferenzen": 187, "definitiv": 187, "sehenswert": 187, "anf\u00e4nger": [187, 1143], "hochinteress": 187, "sprachelement": 188, "elementar": 188, "beliebig": [188, 223, 1141], "gro\u00df": [188, 1146], "vergleichsoperatoren": 188, "strichrechnung": 188, "modulo": [188, 199, 212, 218, 223, 231, 317, 366, 995, 1007], "un\u00e4rer": 188, "negat": [188, 212, 235, 867, 995, 1007, 1025], "konvertierungen": [188, 1127], "pr\u00e4zendenzregeln": 188, "vertauschen": [188, 199, 317], "kontrollstrukturen": [188, 224, 1127], "verzweigung": 188, "schleifen": [188, 246, 1126], "versuch": [188, 200], "hybrid": [188, 621], "supergscheit": 188, "prozeduren": 188, "funktionen": [188, 192, 246, 323, 1126, 1127, 1129, 1137], "funktionspoint": 188, "funktionsobjekt": 188, "primzahlenbeispiel": 188, "laufzeitfehl": 188, "lokal": [188, 199, 245, 246, 1147], "zuweisen": 188, "fehlerfal": 188, "anschliessend": 189, "interaktiv": 189, "uebungen": 189, "idealerweis": [189, 263], "ueblichen": 189, "negoti": 190, "deiniti": [190, 756, 1135], "unload": [190, 758, 772, 774, 1135], "synchronizt": 190, "spinlock": [190, 731, 755, 770, 776, 780, 782, 786, 787, 793, 796, 797, 799, 874, 938, 1135], "rcu": 190, "halv": 190, "softirq": 190, "tasklet": [190, 776], "irss": 190, "kmalloc": [190, 731, 740, 745, 748, 749, 750, 755, 759, 768, 769, 773, 775, 782, 787, 790, 793, 796, 799, 874], "dma": [190, 731, 755, 773, 775, 817, 874, 899, 900, 901, 1135], "coher": [190, 749], "20201125": [191, 193], "unbekannten": 191, "lookup_t": [191, 194, 317], "12345": [191, 223, 235, 263, 1111], "noch_eine_list": 191, "gesamte_list": 191, "vorl\u00e4ufig": 191, "letz": 191, "indented_text": 191, "nebenbei": [191, 193, 317], "eine_zum_sterben_verurteilte_vari": 191, "ein_set": 191, "sequenzen": 191, "grottenlangsam": 191, "subscript": [191, 225, 229, 295, 395, 582, 603, 607, 1097], "multiple_return_valu": 191, "xyz": [191, 193, 199, 218, 225, 256], "mein_formatierter_str": 191, "my_rang": [191, 231, 277, 283], "retlist": 191, "zeichenkett": 191, "funktionieren": [191, 1129, 1147], "my_list": [191, 202, 244], "airms_eth": 191, "simplizistisch": 191, "bl\u00f6d": 191, "phase": [191, 473, 487, 946, 980], "i_oder_v": 191, "iv": 191, "rms_eth": 191, "vorcompilieren": 191, "acirms_eth": 191, "my_regex": 191, "zeilennumm": 191, "dazuhaben": 191, "meine_zu_sendenden_daten": 191, "345": [191, 212, 218, 231, 263, 295], "234": [191, 215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 273, 277, 283, 295, 317], "meine_zu_sendenden_daten_in_string_form": 191, "ueblicherweis": 191, "ueber": 191, "verschickt": 191, "empfangen": [191, 206], "geschrieben": [191, 1147], "empfaeng": 191, "empfangenen": 191, "natuerlich": 191, "zurueckkonvertieren": 191, "meine_empfangenen_daten_python_form": 191, "gegangen": [191, 244], "wurscht": [191, 231, 866], "returnwerten": 192, "containerdatentypen": 192, "untypisiert": 192, "zeilen": [193, 235, 1136], "neiner": 193, "nund": [193, 212], "nb": 193, "stoppt": 193, "newlin": [193, 195, 208, 231, 256, 273, 313, 344, 351, 364, 1004, 1020], "ndrin": 193, "drin": [193, 194, 199, 235, 263, 273, 317, 322], "zuviel": [193, 1129], "mischt": 193, "unsupport": [193, 215, 241, 995], "140546731085392": 193, "0x7fd395fb0e50": 193, "0x7fd3900395b0": 193, "new_t": [193, 1008], "0x7fd390052800": 193, "667": [193, 215, 218, 238, 244, 542], "2923750584022716461": 193, "529344067295497451": 193, "unhash": [193, 253, 263, 277], "fuenf": [193, 215, 225, 253, 263, 277, 295, 317], "verschluckt": 193, "6000000": 193, "elementen": [193, 207], "nonetyp": [193, 203, 217, 218, 273, 283, 295], "_io": [193, 212, 215, 218, 228, 231, 263, 277, 314, 780], "textiowrapp": [193, 212, 215, 218, 228, 231, 263, 277, 314, 973], "oi": 193, "456": [193, 194, 218, 225, 263, 364], "hansi": [193, 231, 235, 238], "linspac": 193, "11111111": 193, "22222222": 193, "33333333": 193, "44444444": 193, "55555556": 193, "66666667": 193, "77777778": 193, "88888889": 193, "sin": 193, "8961922": 193, "79522006": 193, "19056796": 193, "96431712": 193, "66510151": 193, "37415123": 193, "99709789": 193, "51060568": 193, "54402111": 193, "plot": [193, 212, 241, 244, 295, 972, 1030, 1082, 1083], "line2d": [193, 241, 244, 295], "0x7fd35cd3ef40": 193, "splev": 193, "splrep": 193, "spline": 193, "represent": [193, 212, 231, 693, 788, 882, 883], "spl": 193, "evalu": [193, 212, 217, 223, 233, 347, 367, 372, 374, 382, 389, 390, 468, 469, 482, 483, 654, 664, 821, 838, 975, 1009, 1011, 1018, 1117], "x2": [193, 235], "y2": 193, "0x7fd341a486d0": 193, "speicher": [194, 1127, 1134, 1141], "sch\u00fctze": 194, "gemischten": 194, "operationen": [194, 1146], "interpol": [194, 235, 1081], "lag": 194, "gib": [194, 273], "depp": [194, 223], "ret_l": 194, "uniq_l": 194, "read_excel": [194, 1081], "invit": [195, 621], "effici": [195, 240, 294, 379, 418, 420, 422, 583, 587, 597, 600, 702, 822, 869, 871, 980, 1083, 1094, 1097, 1135], "expans": [195, 866, 867, 1126], "ecdsa": [195, 319], "fingerprint": [195, 319, 886, 937], "sha256": [195, 319, 886], "in22o4vcd400x0bb4flcb5": [195, 319], "vqnrvkvoirgfqq6mapo": [195, 319], "perman": [195, 319], "individu": [195, 319, 371, 429], "sat": [195, 319], "straight": [195, 669, 1098], "startung": 195, "standpoint": 195, "suboptim": [195, 244], "pwned": 195, "hidden": [195, 460, 655, 751, 952], "clumsi": [195, 221, 222, 262, 265, 445, 449, 549, 557, 565, 578, 605, 647, 710, 972, 973, 989, 990, 1097, 1130], "clumsier": 195, "dumpbin": 195, "hmoe": 195, "frcoll": 195, "bunch": [195, 711, 805, 964, 988], "oom": [195, 215, 231, 238, 241, 256, 263, 273, 277, 979], "killer": [195, 215, 231, 238, 241, 256, 263, 273, 277, 1013], "amoc": 195, "snapshot": [195, 689, 722, 816, 964], "tinkernut": 195, "raspberi": 195, "awesom": [195, 1110], "tunnel": [195, 261, 885, 893, 904], "centric": [195, 1135], "virtualbox": [195, 817], "cygwin": [195, 248, 250, 268, 817], "assort": 195, "nano": 195, "univers": [195, 270, 506, 904, 1001, 1135], "scripe": 195, "voellig": 199, "wohl": [199, 283, 1127, 1148], "selbsterklaerend": 199, "printet": 199, "builtin": [199, 205, 212, 218, 219, 228, 231, 235, 256, 277, 294, 295, 838, 976], "accur": [199, 231, 235, 256, 277, 424], "__weakref__": [199, 215, 225, 228, 231, 235, 244, 256, 277, 295], "weak": [199, 231, 235, 256, 277, 295, 708, 1083], "_abc": [199, 212, 218, 228, 231], "_1": [199, 710, 711], "a123": 199, "vernichten": 199, "laufzeit": 199, "140032702361168": 199, "refcount": [199, 706, 708, 973, 1130], "dezim": 199, "oktal": 199, "0o755": [199, 235, 317], "493": [199, 218, 235], "0b11": [199, 235, 238], "sql": [199, 210, 222, 1085, 1088], "0b11111111": 199, "ordnung": 199, "uhrzeit": 199, "vormittag": 199, "6666666666666666": [199, 235], "nda": [199, 253], "python_dir": 199, "jan": [199, 228, 231, 313, 314, 331, 364, 742, 834, 860, 918, 952, 966, 1003], "lowercas": [199, 231, 277, 838, 885, 1021, 1038, 1043], "140032636418048": 199, "ein_iterierbares_d": 199, "extraw\u00fcrschtl": 199, "sex": [199, 212, 234, 235, 1038], "diver": 199, "translation_t": [199, 235, 238, 241], "bag": [199, 247, 248, 250, 303, 432, 442, 728, 730, 731, 946, 1008], "green": [199, 235, 471, 506, 507, 567, 875], "blue": [199, 207, 215, 235, 1033], "mengenoperationen": 199, "set1": 199, "set2": 199, "symm_diff": 199, "lisa": 199, "eugeni": [199, 202], "okan": 199, "mcguir": 199, "sinner": 199, "vornam": [199, 207, 208], "nachnam": [199, 207, 208], "persnr": 199, "personalnumm": 199, "5000": [199, 212, 218, 992], "4000": [199, 218], "3000": [199, 212, 218, 238, 277], "15000": [199, 218], "uppercas": [199, 231, 277, 838, 1021, 1038], "verfuegbar": 199, "restlichen": 199, "gehaelt": 199, "konstant": [199, 207, 230], "unexpect": [199, 409], "pcap": [200, 220, 226, 1075], "certifi": 200, "math": [200, 203, 213, 215, 216, 218, 226, 235, 240, 243, 276, 282, 549, 551, 1001, 1076, 1103], "statist": [200, 213, 226, 235, 240, 243, 276, 282, 423, 940, 1060, 1076, 1081, 1110], "undo": [200, 838, 1076], "brad": [200, 1076], "traversi": [200, 1076], "evaluierung": 201, "eval": [201, 229, 230, 239, 257, 271, 272, 277, 284, 293, 296, 297, 997], "openfil": 202, "hanld": 202, "soemth": [202, 792], "zf": 202, "namelist": 202, "zipdemo": 202, "extracted_nam": 202, "isinst": [202, 203, 216, 218, 231, 244, 256, 995, 1098, 1103], "superclass": [202, 203, 216, 231, 1103], "subclass": [202, 203, 216, 231, 235, 975, 992, 1103], "class1": 202, "class2": 202, "salari": 202, "selina": 202, "orgl": 202, "8010": [202, 218, 431], "birth": [202, 228, 241, 549, 729, 1065, 1066, 1067, 1068, 1071, 1072, 1073], "1622102062": 202, "4778333": 202, "019427776336669922": 202, "009679079055786133": 202, "daniel": [202, 205, 313, 314, 331], "ortner": 202, "num_employe": 202, "__first": 202, "__last": 202, "__address": 202, "_person__first": 202, "_person__last": 202, "_person__address": 202, "_first": 202, "_last": 202, "_address": 202, "do_debug": 202, "val": [202, 231, 710, 883], "ueberhaupt": 202, "l_float": 202, "0x7fd9881b04a0": 202, "functool": [202, 269], "komplexen": 202, "testfil": 202, "nzeil": [202, 231], "seek": [202, 277, 314], "nth_fibo": 202, "accomod": 202, "0x7fd9801cec10": 202, "0x7fd9801b8d60": 202, "0x7fd9801b4900": 202, "0x7fd98014cd40": 202, "gen": [202, 277], "sequenceno": 202, "kv_pair": 202, "permissionerror": [202, 218, 238, 256, 273, 975], "deni": [202, 218, 238, 273, 474, 488, 821, 857, 885, 893, 905, 910, 911, 975, 1105], "eacc": 202, "filenotfounderror": [202, 218, 256, 975], "64bit": 202, "utc": 202, "python_implement": [202, 203, 216, 1103], "python_version_tupl": [202, 203, 216, 1103], "python39": 202, "dynload": 202, "isfil": [202, 307, 431], "isdir": [202, 431], "my_path": 202, "hopefulli": 202, "the_except": 202, "__class__": [202, 225, 228, 231, 235, 244, 253, 256, 277, 295], "__bases__": [202, 203, 216, 233, 1103], "distrust": 202, "guido": [202, 1100], "incompet": 202, "precondit": [202, 807], "abdefg": 202, "beg": [202, 390, 976], "bdefg": 202, "stringifi": 202, "0x7ffa9c2ac3a0": 202, "formatstr": 202, "ding": [202, 232, 945], "formatierter_str": 202, "oserror": [203, 231, 256, 975], "errno": [203, 216, 218, 238, 273, 415, 756, 905, 920, 949, 950, 967, 975, 1103, 1105], "assertionerror": [203, 228, 244, 256, 295, 975, 988, 1110, 1111], "jjjj": [203, 335, 336, 428], "line_count": 203, "aud": 203, "qualifii": [203, 216, 1103], "trunc": [203, 216, 1103], "hypot": [203, 216, 1103], "seed": [203, 216, 235, 501, 1103], "ascii": [203, 216, 231, 238, 241, 256, 277, 283, 351, 354, 357, 363, 1006, 1007, 1020, 1026, 1084, 1103], "codepoint": [203, 216, 1103], "escap": [203, 216, 231, 253, 344, 1084, 1103], "ord": [203, 216, 235, 256, 1015, 1103], "chr": [203, 216, 256, 1103], "isxxx": [203, 216, 1103], "rfind": [203, 216, 231, 277, 283, 1022, 1103], "grammar": [203, 216, 1103], "instrospect": [203, 216, 1103], "hasattr": [203, 216, 231, 244, 256, 989, 995, 1103], "__module__": [203, 215, 216, 225, 228, 231, 235, 244, 256, 277, 295, 1103], "bytearrai": [203, 216, 231, 256, 1103], "histogram": [203, 204, 221, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 535, 536, 544, 649, 687, 728, 730, 731], "defaultdict": [203, 229, 230, 254], "make_histogram": [203, 536, 545], "fileobj": 203, "stringio": [203, 231], "8859": [203, 221, 222, 238, 241, 261, 283, 295, 431], "pycon": [203, 229, 252, 276, 1076], "2017": [203, 229, 252, 557, 655, 706, 1076], "metaprogram": [203, 230, 252, 664, 988, 1076, 1131], "contract": [203, 205, 252, 1076], "evolut": [203, 252, 838, 1076], "unauthor": [203, 252, 1076], "biographi": [203, 252, 1076], "lesson": [203, 252, 319, 325, 430, 693, 968, 1076], "evolv": [203, 252, 690, 1076], "assembli": [203, 252, 276, 952, 954, 1076, 1132], "revolv": [203, 229, 1076, 1082], "mro": [203, 229, 233, 1076], "cpa": 204, "fahr": [204, 345, 347], "tomorrow": [204, 219, 329, 330], "correctli": [204, 294, 308, 407, 882, 905, 1028, 1084], "consecut": [204, 370, 699, 871], "becam": [204, 290], "44ff": 204, "gig": 204, "upcom": 204, "msi": 204, "wswitch": [204, 411, 648, 747], "wall": [204, 218, 219, 368, 418, 434, 722, 746, 747, 1119], "77ff": 204, "skip": [204, 231, 314, 432, 434, 753, 883, 953, 954, 975, 1112], "89ff": 204, "alongsid": [204, 772], "num_us": 204, "199ff": 204, "204ff": 204, "208ff": 204, "220ff": 204, "222ff": 204, "db_get_user_at_index": 204, "298ff": 204, "strcpy": [204, 221, 357, 403, 539, 554, 557, 658, 692, 878, 936], "strlen": [204, 357, 382, 410, 554, 557, 658, 692, 916, 919, 949], "bahavior": 204, "dest": [204, 357], "strtol": 204, "stringif": [204, 1127], "db_error_str": 204, "sexi": [204, 928], "caleb": 204, "discret": [205, 235, 294, 417, 421, 426, 427, 649, 687, 728, 730, 731], "bleed": 205, "rect": [205, 398, 525], "sphere": [205, 525], "preprocessor": [205, 221, 364, 391, 397, 401, 404, 408, 413, 417, 421, 426, 427, 646, 649, 687, 728, 730, 731, 952, 1117, 1131], "julia": 205, "yesterdai": [205, 221, 229, 269], "distanc": [205, 551, 559, 560, 580, 697, 710], "has_lastnam": 205, "botton": 205, "mingw": [205, 248, 250, 268, 329, 342, 817], "resembl": 205, "tortur": 205, "functor": [205, 247, 248, 250, 303, 591, 687, 688, 730, 731], "rudimentarili": [205, 1005, 1079], "gotten": 205, "recourc": 205, "outright": [205, 261, 405, 980, 1011], "geniu": [205, 261, 582, 980, 1011], "livehackingli": 205, "zuordnung": [206, 222, 234], "bissl": 206, "commandlineargument": [206, 1126], "stoff": 206, "summenbeispiel": 206, "showcas": 206, "datenbank": 206, "formulieren": 206, "verbindung": [206, 1124, 1134, 1141, 1147], "schicken": [206, 1124], "schickman": 206, "muessen": 206, "verwandlen": 206, "fractal": [206, 222], "schatzi": 207, "zeitkomplexit\u00e4t": 207, "foreach": 207, "assozi": [207, 1129], "color_transl": 207, "gelb": 207, "yellow": 207, "hashtabl": [207, 1098], "englisch": [207, 1124], "sack": 207, "my_color": 207, "her_color": 207, "pink": 207, "gr\u00fcn": 207, "beig": 207, "vereiningungsmeng": 207, "schnittmeng": 207, "symmetrisch": 207, "differenzmeng": 207, "sei": 207, "gewesen": 207, "waer": [207, 283], "1037190666": [207, 223, 225, 231, 235, 238, 241, 244, 449, 456, 473, 474, 475, 487, 488, 489, 608, 989], "6666010185": 207, "schwarzbauer": 207, "json_string_fuer_den_brows": 207, "response_dict": 207, "svnr": [207, 215, 218, 225, 231, 235, 238, 241, 243, 244, 283, 450, 456, 478, 484, 989, 1093], "pprint": [207, 209, 216, 218, 253, 976, 1084], "formatieren": 207, "endlich": 207, "transfer_string_in_php_am_serv": 207, "u00f6rg": 207, "transfer_string_in_js_am_brows": 207, "response_dict_am_brows": 207, "verwandeln": [207, 1143], "schlussendlich": 207, "geeignet": [207, 1125], "platzieren": 207, "meine_t": 207, "sozialversicherungsnumm": 207, "simmer": 208, "mein_str": 208, "sq": [208, 215, 218, 225, 235, 256, 277, 295], "docu": 208, "nmehrzeilig": 208, "nvon": 208, "mehrzeilig": 208, "deppertem": 208, "irrelevant": 208, "quargel": [208, 209], "190666": 208, "inkorrekt": 208, "geburtsdatum": 208, "endswith": [208, 223, 225, 231, 241, 256, 260, 263, 277, 283, 1022], "sss": 208, "isalpha": [208, 212, 223, 225, 231, 235, 256, 277, 283, 1022], "isidentifi": [208, 212, 225, 231, 241, 256, 277, 283, 1022], "islow": [208, 231, 241, 256, 277, 1022], "arg1": 208, "arg2": 208, "arg3": 208, "abcblah": 208, "blahabcbcabcc": 208, "lah": 208, "rstrip": [208, 212, 216, 223, 227, 228, 231, 241, 256, 273, 277, 283, 313, 322], "lstrip": [208, 223, 227, 231, 256, 277, 283, 322], "wieviel": [208, 1134, 1141], "995237": 208, "datestr": 208, "dt": [208, 778, 882], "strptime": [208, 209, 210, 216], "uuid": 208, "msg_aussi": 208, "sea": [208, 223, 256, 318, 668], "oida": [208, 225, 228, 277, 434], "msgid": 208, "uuid4": 208, "timestamp": [208, 218, 238, 267, 271, 272, 293, 295, 297, 431, 711, 739, 840, 860, 894, 945], "345654325678": 208, "json_aussi": 208, "6563515ef0824d42b459389cefd09127": 208, "json_eini": 208, "sender": [208, 950], "msg_eini": 208, "sauberestextfil": 209, "12345678": 209, "2270": [209, 218], "20333": 209, "360": [209, 218, 295], "91011121": 209, "30333": 209, "36756788": 209, "1112": [209, 218], "1244": [209, 218], "31333": 209, "45011121": 209, "44444": 209, "340": [209, 218, 225, 231, 263, 277], "sauber": 209, "read_sauberes_text_fil": 209, "item1": 209, "item13": 209, "werk": 209, "lort": 209, "charg": [209, 453, 460, 473, 474, 475, 487, 488, 489], "sonderbestandsnumm": 209, "materialkurztext": 209, "lagerplatz": 209, "verfueg_bestand": 209, "bme": 209, "we_datum": 209, "verf\u00fcg": 209, "bestand": 209, "datum": [209, 1083], "api2": 210, "opc": [210, 219, 294], "rrdtool": 210, "rrd": 210, "subprocess": [210, 226, 231, 240, 242, 252, 276, 307, 322, 327, 1076], "commmon": [212, 390], "140576769461632": 212, "simplicit": 212, "inputfil": [212, 431], "450": [212, 218, 225, 260, 263], "paragraph": [212, 444], "highli": [212, 340, 506], "pathnam": [212, 218, 228, 231, 737, 904, 908, 1020], "displayhook": [212, 218, 228, 231, 315], "excepthook": [212, 218, 228, 231, 315], "uncaught": [212, 218, 228, 231, 525], "systemexit": [212, 218, 228, 231, 253, 256, 315, 975], "behav": [212, 218, 221, 228, 231, 504, 525, 651, 706, 707, 726, 794, 820, 940], "last_typ": [212, 218, 228, 231, 315], "last_valu": [212, 218, 228, 231, 315, 675, 678, 681, 682, 683], "last_traceback": [212, 218, 228, 231, 315], "builtin_module_nam": [212, 218, 228, 231, 315], "pertain": [212, 218, 228, 231], "exec_prefix": [212, 218, 228, 231, 315], "float_info": [212, 218, 228, 231, 315], "float_repr_styl": [212, 218, 228, 231, 315], "hash_info": [212, 218, 228, 231, 315], "hexvers": [212, 218, 228, 231, 315], "int_info": [212, 218, 228, 231, 315], "maxsiz": [212, 218, 228, 231, 315], "largest": [212, 218, 228, 231, 407], "maxunicod": [212, 218, 228, 231, 315], "thread_info": [212, 218, 228, 231, 315], "version_info": [212, 218, 228, 231, 315], "__stdin__": [212, 218, 228, 231, 315], "__stdout__": [212, 218, 228, 231, 315], "__stderr__": [212, 218, 228, 231, 315], "__displayhook__": [212, 218, 228, 231, 315], "__excepthook__": [212, 218, 228, 231, 315], "screen": [212, 218, 228, 231, 814, 820, 838], "exc_info": [212, 218, 228, 231, 315], "getdlopenflag": [212, 218, 228, 231, 315], "dlopen": [212, 218, 228, 231, 1144], "getprofil": [212, 218, 228, 231, 315], "profil": [212, 218, 228, 231, 340, 418, 424, 427, 731, 778, 810, 1128, 1131], "getrefcount": [212, 218, 228, 231, 238, 315], "getrecursionlimit": [212, 218, 228, 231, 315], "getsizeof": [212, 218, 228, 231, 253, 256, 315], "gettrac": [212, 218, 228, 231, 315], "setdlopenflag": [212, 218, 228, 231, 315], "setprofil": [212, 218, 228, 231, 315], "setrecursionlimit": [212, 218, 228, 231, 315], "settrac": [212, 218, 228, 231, 315], "__breakpointhook__": [212, 218, 228, 231, 315], "breakpointhook": [212, 218, 228, 231, 315], "breakpoint": [212, 218, 228, 231, 256], "exctyp": [212, 218, 228, 231], "__unraisablehook__": [212, 218, 228, 231, 315], "unraisablehook": [212, 218, 228, 231, 315], "unrais": [212, 218, 228, 231], "exc_typ": [212, 218, 228, 231, 973], "exc_valu": [212, 218, 228, 231, 973], "exc_traceback": [212, 218, 228, 231, 973], "err_msg": [212, 218, 228, 231], "addaudithook": [212, 218, 228, 231, 315], "audit": [212, 218, 228, 231, 315], "call_trac": [212, 218, 228, 231, 315], "afterward": [212, 218, 228, 231, 369, 419, 556, 706, 707, 708, 721, 774, 946, 1111], "older": [212, 218, 228, 231, 803, 946], "get_asyncgen_hook": [212, 218, 228, 231, 315], "firstit": [212, 218, 228, 231], "get_coroutine_origin_tracking_depth": [212, 218, 228, 231, 315], "coroutin": [212, 218, 228, 231, 303, 677, 678, 680, 681, 682, 683, 687, 730, 731, 1076], "getallocatedblock": [212, 218, 228, 231, 315], "getdefaultencod": [212, 218, 228, 231, 277, 315], "getfilesystemencodeerror": [212, 218, 228, 231, 315], "getfilesystemencod": [212, 218, 228, 231, 315], "getswitchinterv": [212, 218, 228, 231, 315], "setswitchinterv": [212, 218, 228, 231, 315], "is_fin": [212, 218, 228, 231, 315], "set_asyncgen_hook": [212, 218, 228, 231, 315], "set_coroutine_origin_tracking_depth": [212, 218, 228, 231, 315], "cr_origin": [212, 218, 228, 231], "rtld_global": [212, 218, 228, 231], "rtld_xxx": [212, 218, 228, 231], "rtld_lazi": [212, 218, 228, 231], "frequenc": [212, 218, 228, 231, 235, 271, 272, 293, 297, 308, 333, 337, 731, 874, 875, 883, 915, 935, 937], "uninterrupt": [212, 218, 228, 231, 770], "workload": [212, 218, 228, 231], "typic": [212, 218, 228, 231, 259, 269, 285, 297, 301, 390, 430, 434, 451, 475, 504, 631, 749, 798, 823, 953, 998, 1008, 1130, 1132], "005": [212, 218, 228, 231], "abiflag": [212, 218, 228, 231, 315], "api_vers": [212, 218, 228, 231, 315], "1013": [212, 218, 228, 231], "ipyk": 212, "base_exec_prefix": [212, 218, 228, 231, 315], "base_prefix": [212, 218, 228, 231, 315], "_ast": [212, 218, 228, 231], "_codec": [212, 218, 228, 231], "_collect": [212, 218, 228, 231], "_f": [212, 218, 228, 231], "byteord": [212, 218, 228, 231, 253, 315, 876], "foundati": [212, 218, 228, 231], "emati": [212, 218, 228, 231], "ipykernel": [212, 218, 228, 231, 256], "zmqshelldisplayhook": [212, 218, 228, 231], "dont_write_bytecod": [212, 218, 228, 231, 315], "opt": [212, 218, 228, 231, 396], "ation": [212, 218, 228, 231], "7976931348623157e": [212, 218, 228, 231], "308": [212, 218, 225, 228, 231, 273, 283, 295], "max_": [212, 218, 228, 231], "epsilo": [212, 218, 228, 231], "2305843009213693": [212, 218, 228, 231], "iphash2": [212, 218, 228, 231], "50922736": 212, "cache_tag": [212, 218, 228, 231], "xv": [212, 218, 228, 231], "bits_per_digit": [212, 218, 228, 231], "sizeof_digit": [212, 218, 228, 231], "syntaxerror": [212, 223, 228, 235, 256, 975], "eol": [212, 235], "9223372036854775807": [212, 218, 228, 231], "1114111": [212, 218, 228, 231], "meta_path": [212, 218, 228, 231, 315], "_frozen_importlib": [212, 218, 228, 231, 256], "builtinimport": [212, 218, 228, 231, 256], "_fro": [212, 218, 228, 231], "homepa": 212, "path_hook": [212, 218, 228, 231, 315], "zipimport": [212, 218, 228, 231], "filefind": [212, 218, 228, 231], "path_importer_cach": [212, 218, 228, 231, 315], "jfa": [212, 218, 228, 231], "platlibdir": [212, 218, 228, 231, 315], "ps1": [212, 218, 228, 231, 315, 1112], "ps2": [212, 218, 228, 231, 315], "ps3": [212, 218, 228, 231, 315], "pycache_prefix": [212, 218, 228, 231, 315], "outstream": [212, 218, 228, 231], "versio": [212, 218, 228, 231], "202103": 212, "releaselev": [212, 218, 228, 231], "warnopt": [212, 218, 228, 231, 315], "isdigit": [212, 223, 231, 235, 256, 263, 277, 283, 1022], "pp": [212, 263, 395, 582], "list_of_str": 212, "tensorflow": 213, "kesselfal": 213, "rettenbachklamm": 213, "hochtor": 213, "hochschwab": 213, "_a": [215, 231, 256], "_123": 215, "140575811317328": 215, "140575811316208": 215, "0xffffffff": [215, 216, 368], "4294967296": [215, 223], "0x48": [215, 882], "330": [215, 218, 231, 256, 263, 277, 295], "332": [215, 218, 231, 263, 277, 295], "333": [215, 218, 231, 263, 277, 318], "334": [215, 218, 231, 263], "dstr": 215, "777": [215, 218], "aliv": [215, 388, 928, 971], "bcd": 215, "dusan": 215, "alex": [215, 229, 993], "mist": [215, 263], "span": [215, 241, 244, 246, 253, 277, 345, 364, 388, 753], "141592653589793": [215, 218], "roll": [215, 234, 255, 271, 272, 1011, 1127], "dice": [215, 234, 255, 271, 272, 1011], "win": [215, 231, 241, 869, 936, 1011], "rnd": [215, 238], "convention": 215, "wise": [215, 259, 413, 557, 629, 660, 729, 731, 746, 756, 776, 874, 915, 975], "resultset": [215, 218, 1088], "sbin": [215, 231, 238, 241, 256, 263, 273, 277, 810, 814, 816, 863, 869, 900, 910], "nologin": [215, 231, 238, 241, 256, 263, 273, 277, 863, 869, 900, 910], "adm": [215, 231, 238, 241, 256, 263, 273, 277, 864, 867, 869], "lp": [215, 231, 238, 241, 256, 263, 273, 277, 869], "spool": [215, 231, 238, 241, 256, 263, 273, 277, 869], "lpd": [215, 231, 238, 241, 256, 263, 273, 277, 869], "ftp": [215, 231, 238, 241, 256, 263, 273, 277, 865, 966], "65534": [215, 231, 238, 241, 256, 263, 273, 277], "apach": [215, 231, 238, 241, 256, 263, 273, 277], "httpd": [215, 231, 238, 241, 256, 263, 273, 277], "coredump": [215, 231, 238, 241, 256, 263, 273, 277, 869, 949], "997": [215, 218, 231, 238, 241, 256, 263, 273, 277], "dumper": [215, 231, 238, 241, 256, 263, 273, 277, 869], "998": [215, 218, 231, 238, 241, 256, 263, 273, 277], "996": [215, 218, 231, 238, 241, 256, 263, 273, 277], "timesync": [215, 231, 238, 241, 256, 263, 273, 277, 869], "995": [215, 218, 231, 238, 241, 256, 263, 273, 277], "tss": [215, 231, 238, 241, 256, 263, 273, 277], "tpm": [215, 231, 238, 241, 256, 263, 273, 277], "dbu": [215, 231, 238, 241, 256, 263, 273, 277, 816], "polkitd": [215, 231, 238, 241, 256, 263, 273, 277, 816], "994": [215, 218, 231, 238, 241, 256, 263, 273, 277], "avahi": [215, 231, 238, 241, 256, 263, 273, 277, 816], "mdn": [215, 231, 238, 241, 256, 263, 273, 277], "unbound": [215, 231, 238, 241, 256, 263, 273, 277, 1007], "992": [215, 218, 231, 238, 241, 256, 263, 273, 277], "dnsmasq": [215, 231, 238, 241, 256, 263, 273, 277, 816], "991": [215, 218, 231, 238, 241, 256, 263, 273, 277], "dhcp": [215, 231, 238, 241, 256, 263, 273, 277], "nm": [215, 231, 238, 241, 256, 263, 273, 277, 425, 558, 778, 964, 970], "openconnect": [215, 231, 238, 241, 256, 263, 273, 277], "993": [215, 218, 231, 238, 241, 256, 263, 273, 277], "989": [215, 218, 231, 238, 241, 256, 263, 273, 277], "networkmanag": [215, 231, 238, 241, 256, 263, 273, 277, 425, 816], "usbmuxd": [215, 231, 238, 241, 256, 263, 273, 277], "gluster": [215, 231, 238, 241, 256, 263, 273, 277], "988": [215, 218, 231, 238, 241, 256, 263, 273, 277], "glusterf": [215, 231, 238, 241, 256, 263, 273, 277], "rtkit": [215, 231, 238, 241, 256, 263, 273, 277], "realtimekit": [215, 231, 238, 241, 256, 263, 273, 277], "pipewir": [215, 231, 238, 241, 256, 263, 273, 277], "987": [215, 218, 231, 238, 241, 256, 263, 273, 277], "geoclu": [215, 231, 238, 241, 256, 263, 273, 277], "990": [215, 218, 231, 238, 241, 256, 263, 273, 277], "chroni": [215, 231, 238, 241, 256, 263, 273, 277], "984": [215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "saslauth": [215, 231, 238, 241, 256, 263, 273, 277], "saslauthd": [215, 231, 238, 241, 256, 263, 273, 277], "radvd": [215, 231, 238, 241], "rpc": [215, 231, 238, 241, 256, 263, 273, 277], "rpcbind": [215, 231, 238, 241, 256, 263, 273, 277], "openvpn": [215, 231, 238, 241, 256, 263, 273, 277], "982": [215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "981": [215, 218, 231, 238, 241], "spawn": [215, 231, 238, 241, 256, 263, 273, 277, 294], "colord": [215, 231, 238, 241, 256, 263, 273, 277], "985": [215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "rpcuser": [215, 231, 238, 241, 256, 263, 273, 277], "abrt": [215, 231, 238, 241, 256, 263, 273, 277, 816, 869], "flatpak": [215, 231, 238, 241, 256, 263, 273, 277, 280, 869], "979": [215, 218, 231, 238, 241], "helper": [215, 231, 235, 238, 241, 256, 263, 273, 277, 363, 557, 621, 669, 710, 772, 869, 1101, 1105], "983": [215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "978": [215, 218, 231, 238, 241, 256, 263, 273, 277, 869], "vboxadd": [215, 231, 238, 241, 256, 263, 273, 277, 869], "tcpdump": [215, 231, 238, 241, 256, 263, 273, 277, 869], "974": [215, 218, 231, 238, 241], "broker": [215, 219, 231, 238, 241, 256, 263, 273, 277, 294, 816, 1070], "mappingproxi": [215, 231, 244], "229": [215, 218, 223, 225, 231, 235, 238, 256, 263, 273, 277, 283, 295], "230": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "231": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 277, 283, 473, 474, 475, 487, 488, 489], "232": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 277, 283], "233": [215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 273, 277, 283], "inputlist": [215, 978], "ret": [215, 218, 223, 431, 669, 942, 978, 1023], "235": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "236": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 277, 283, 295, 416], "237": [215, 218, 223, 225, 231, 235, 238, 241, 256, 273, 277, 283], "238": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "239": [215, 218, 223, 225, 231, 235, 238, 256, 263, 273, 277, 283, 295], "240": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 273, 277, 283], "242": [215, 218, 223, 225, 228, 231, 238, 241, 256, 273, 277, 283, 295], "243": [215, 218, 223, 225, 231, 238, 241, 256, 273, 277, 283, 295], "244": [215, 218, 223, 225, 228, 231, 238, 241, 256, 277, 283, 295], "245": [215, 218, 223, 225, 238, 256, 273, 277, 283, 295], "247": [215, 218, 223, 225, 231, 235, 238, 256, 273, 277, 283], "248": [215, 218, 223, 225, 228, 235, 238, 256, 263, 273, 277, 283, 295], "249": [215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 277, 283, 295], "250": [215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 267, 273, 277, 283, 867], "251": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 295], "252": [215, 218, 223, 225, 228, 235, 238, 256, 263, 273, 277, 283, 295, 1089], "253": [215, 218, 223, 225, 228, 231, 238, 241, 256, 263, 277, 283], "256": [215, 218, 223, 225, 231, 238, 241, 256, 263, 273, 277, 283, 354, 562, 1078, 1089], "257": [215, 218, 223, 225, 228, 231, 235, 238, 241, 256, 263, 273, 277, 283], "258": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283], "0x7fda5444e6a0": 215, "259": [215, 218, 223, 225, 228, 231, 238, 256, 263, 273, 277, 283], "260": [215, 218, 223, 225, 228, 231, 238, 256, 263, 273, 277, 283, 295], "261": [215, 218, 223, 225, 231, 235, 241, 256, 263, 273, 277, 283], "262": [215, 218, 223, 225, 231, 241, 256, 263, 273, 277, 283, 295], "263": [215, 218, 223, 225, 231, 235, 238, 241, 256, 263, 273, 277, 283, 295], "264": [215, 218, 223, 225, 228, 231, 238, 241, 256, 263, 277, 283, 295], "265": [215, 218, 223, 225, 231, 238, 256, 263, 277, 283, 295], "266": [215, 218, 223, 225, 228, 231, 235, 241, 256, 277, 283], "267": [215, 218, 223, 225, 228, 231, 238, 241, 256, 263, 277, 283, 295], "268": [215, 218, 223, 225, 231, 238, 241, 256, 263, 277, 283], "269": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 954], "270": [215, 218, 223, 225, 231, 235, 238, 256, 263, 273, 277, 283, 295], "other_map": 215, "272": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283, 295], "273": [215, 218, 223, 225, 231, 235, 256, 263, 277, 283, 497, 515, 516, 517, 518, 520, 521, 988], "274": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 273, 277, 283], "140575811316304": 215, "275": [215, 218, 223, 225, 231, 235, 238, 256, 263, 273, 277, 283, 295], "276": [215, 218, 223, 225, 228, 238, 256, 263, 273, 277, 283, 295], "277": [215, 218, 223, 225, 228, 231, 235, 238, 256, 273, 277, 283], "278": [215, 218, 223, 225, 231, 238, 256, 263, 277, 283, 295], "279": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 277, 283, 295], "280": [215, 218, 223, 225, 228, 231, 235, 256, 263, 277, 283, 295, 953, 954], "140575692459008": 215, "282": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 277, 283, 295], "283": [215, 218, 223, 225, 228, 231, 235, 238, 256, 277, 283], "284": [215, 218, 223, 225, 231, 235, 238, 256, 260, 283, 295], "elementwis": 215, "285": [215, 218, 223, 225, 228, 231, 256, 263, 277, 283, 295], "286": [215, 218, 223, 225, 228, 231, 235, 256, 277, 283, 295], "287": [215, 218, 223, 225, 228, 231, 235, 238, 256, 263, 283, 295], "140575692438848": 215, "288": [215, 218, 223, 225, 231, 235, 238, 256, 263, 277, 283, 295], "140575692448960": 215, "289": [215, 218, 223, 225, 231, 256, 263, 277, 283, 295], "290": [215, 218, 223, 225, 231, 256, 263, 277, 283], "292": [215, 218, 223, 231, 235, 256, 263, 273, 277], "293": [215, 218, 223, 225, 231, 256, 263, 273, 277, 283], "295": [215, 218, 223, 225, 231, 235, 256, 263, 273, 277], "296": [215, 218, 223, 225, 231, 256, 263, 273, 277, 283], "298": [215, 218, 223, 231, 235, 256, 263, 273, 277, 283], "deep": [215, 227, 295, 664, 669, 940], "301": [215, 218, 223, 228, 231, 235, 256, 263, 273, 277, 283, 295], "302": [215, 218, 225, 231, 235, 256, 263, 277, 283, 295, 1033], "deepcopi": [215, 225, 238, 263, 283, 295, 1016], "303": [215, 218, 225, 228, 231, 263, 277, 283, 295, 954], "304": [215, 218, 225, 228, 231, 235, 295], "305": [215, 218, 228, 231, 256, 273, 277, 283, 295], "314": [215, 218, 225, 228, 231, 256, 263, 273, 277, 283], "315": [215, 218, 231, 256, 277, 283], "rdr": [215, 216, 431, 454, 1084], "delimit": [215, 216, 231, 260, 261, 277, 578, 864, 1004, 1084], "fund_nam": [215, 216, 1033], "fund_isin": [215, 216, 1033], "fund_tick": [215, 216, 1033], "as_of_d": [215, 216, 1033], "fund_in_univers": [215, 216, 1033], "fund_of_fund": [215, 216, 1033], "fund_holdings_count": [215, 216, 1033], "fund_holding_funds_count": [215, 216, 1033], "american": [215, 221, 630, 644, 731, 1033, 1089], "fund": [215, 1033], "balanc": [215, 219, 398, 1033], "us0240711020": [215, 1033], "abalx": [215, 1033], "20210103": [215, 1033], "084": [215, 1033], "dodg": [215, 1033], "cox": [215, 1033], "us2562011047": [215, 1033], "dodbx": [215, 1033], "410": [215, 218, 263, 277, 1033], "us2562191062": [215, 1033], "dodgx": [215, 1033], "franklin": [215, 1033], "incom": [215, 231, 294, 1033, 1092], "us3534963000": [215, 1033], "fkinx": [215, 1033], "america": [215, 1033], "us3998741066": [215, 1033], "agthx": [215, 1033], "price": [215, 235, 424, 447, 1033], "us7414791092": [215, 1033], "prgfx": [215, 1033], "fidel": [215, 1033], "puritan": [215, 1033], "us3163451079": [215, 1033], "fpurx": [215, 1033], "contrafund": [215, 1033], "us3160711095": [215, 1033], "fcntx": [215, 1033], "363": [215, 218, 263, 277, 295, 1033], "us77954m1053": [215, 1033], "prwcx": [215, 1033], "westburi": [215, 1033], "us6804141090": [215, 1033], "owlsx": [215, 1033], "us1401931035": [215, 1033], "caibx": [215, 1033], "582": [215, 218, 1033], "harbor": [215, 1033], "institut": [215, 216, 460, 475, 1033, 1103], "us4115115044": [215, 1033], "hacax": [215, 1033], "us77954q1067": [215, 1033], "trbcx": [215, 1033], "dreyfu": [215, 1033], "treasuri": [215, 1033], "cash": [215, 1033], "inst": [215, 1033], "us2619411083": [215, 1033], "dirxx": [215, 1033], "blackrock": [215, 1033], "us09251t5092": [215, 1033], "malox": [215, 1033], "us3163453059": [215, 1033], "flpsx": [215, 1033], "liquid": [215, 1033], "us09248u5517": [215, 1033], "tttxx": [215, 1033], "dfa": [215, 1033], "portfolio": [215, 235, 1033], "us2332038841": [215, 1033], "dfgbx": [215, 1033], "feder": [215, 1033], "herm": [215, 1033], "us60934n6821": [215, 1033], "utixx": [215, 1033], "oakmark": [215, 1033], "investor": [215, 235, 1033], "us4138382027": [215, 1033], "oakix": [215, 1033], "asset": [215, 1033], "us00767h4939": [215, 1033], "787": [215, 218, 1033], "fpa": [215, 1033], "crescent": [215, 1033], "us30254t7596": [215, 1033], "fpacx": [215, 1033], "us3534968058": [215, 1033], "fcisx": [215, 1033], "us5529836943": [215, 1033], "meiix": [215, 1033], "goldman": [215, 1033], "sach": [215, 1033, 1148], "instrument": [215, 422, 424, 882, 1033], "us38142b5003": [215, 1033], "ftixx": [215, 1033], "schwab": [215, 1033], "us8085098551": [215, 1033], "swppx": [215, 1033], "508": [215, 218, 263, 295, 1033], "templeton": [215, 1033], "bond": [215, 1033], "advisor": [215, 1033], "us8802084009": [215, 1033], "tgbax": [215, 1033], "us32008f6060": [215, 1033], "sgiix": [215, 1033], "ishar": [215, 1033], "etf": [215, 1033], "us4642872000": [215, 1033], "ivv": [215, 1033], "507": [215, 218, 295, 1033], "vanguard": [215, 1033], "admir": [215, 1033], "us9229087104": [215, 1033], "vfiax": [215, 1033], "510": [215, 218, 295, 1033], "us9229087286": [215, 1033], "vtsax": [215, 1033], "370": [215, 218, 263, 277, 1033], "spdr": [215, 1033], "midcap": [215, 1033], "us78467y1073": [215, 1033], "mdy": [215, 1033], "dow": [215, 1033], "jone": [215, 323, 324, 1033], "industri": [215, 778, 1033], "us78467x1090": [215, 1033], "health": [215, 1033], "us81369y2090": [215, 1033], "xlv": [215, 1033], "discretionari": [215, 1033], "us81369y4070": [215, 1033], "xly": [215, 1033], "energi": [215, 1033], "us81369y5069": [215, 1033], "xle": [215, 1033], "financi": [215, 1033], "us81369y6059": [215, 1033], "xlf": [215, 1033], "us81369y8030": [215, 1033], "xlk": [215, 1033], "invesco": [215, 1033], "qqq": [215, 1033], "us46090e1038": [215, 1033], "us2562061034": [215, 1033], "dodfx": [215, 1033], "msci": [215, 1033], "eaf": [215, 1033], "us4642874659": [215, 1033], "efa": [215, 1033], "897": [215, 218, 1033], "jpmorgan": [215, 1033], "sec": [215, 445, 936, 1033, 1105], "mny": [215, 1033], "mkt": [215, 1033], "us4812a28358": [215, 1033], "jtsxx": [215, 1033], "eql": [215, 1033], "wght": [215, 1033], "us46137v3574": [215, 1033], "us4812a03757": [215, 1033], "cjtxx": [215, 1033], "us00143w8753": [215, 1033], "odvyx": [215, 1033], "dividend": [215, 1033], "us78464a7634": [215, 1033], "sdy": [215, 1033], "equiti": [215, 1033], "us2332033719": [215, 1033], "dfiex": [215, 1033], "888": [215, 218, 1033], "edgewood": [215, 1033], "us0075w07594": [215, 1033], "egfix": [215, 1033], "prudenti": [215, 1033], "us00767h7585": [215, 1033], "r6": [215, 1033], "us55273h3536": [215, 1033], "meikx": [215, 1033], "327": [215, 218, 231, 256, 263, 273], "328": [215, 218, 225, 231, 263], "geschieht": [216, 340, 865], "wunder": 216, "groesser": 216, "jave": 216, "shorthand": [216, 355, 857, 989], "lin": 216, "lout": 216, "faster": [216, 235, 294, 407, 419, 940, 946], "outputlist": 216, "getus": [216, 1054], "userdatabas": [216, 1054], "userid": [216, 228], "groupid": 216, "loginshel": 216, "userrecord": 216, "dens": [216, 225, 235], "pratic": 216, "_fix_float_numb": 216, "fieldnam": [216, 1084], "_fix_bool": 216, "elif": [216, 223, 353, 390, 431, 995, 1010, 1011], "_fix_dat": 216, "read_stock": [216, 1033], "csvfile": [216, 988], "converted_record": 216, "dbname": [216, 1087], "stmt": 216, "predefin": [216, 910, 945, 950, 1103, 1123], "circuit": [217, 223, 233, 883, 1009, 1134, 1141], "windows_path": [218, 223], "festplatt": [218, 1144], "eue": [218, 295, 317], "lehrer": 218, "50923504": 218, "202107": 218, "140106795875920": 218, "140106669190640": 218, "669": [218, 235], "140106669191024": 218, "0j": 218, "copied_l": [218, 225], "140106669249856": 218, "copied_t": 218, "tuple_containing_one_el": 218, "tran": 218, "satan": [218, 228], "queen": [218, 238, 1065, 1067, 1071, 1073, 1084], "10000000000": [218, 273, 317], "prod": 218, "resultset_to_local_db": 218, "my_local_db": 218, "basenam": 218, "normalized_path": 218, "normpath": [218, 225, 983], "291": [218, 223, 231, 256, 273, 283, 295, 423], "294": [218, 223, 231, 256, 273, 277, 283], "297": [218, 223, 225, 231, 235, 277], "299": [218, 223, 228, 231, 235, 256, 263, 273, 277, 283], "306": [218, 228, 235, 256, 273, 277, 283, 295], "307": [218, 225, 231, 256, 273, 277, 283, 295], "309": [218, 225, 228, 231, 263, 273, 277, 283, 295], "310": [218, 225, 228, 231, 277, 283, 295, 368], "311": [218, 225, 256, 277, 283], "312": [218, 225, 231, 256, 263, 273, 283], "313": [218, 225, 231, 263, 277, 283], "316": [218, 225, 228, 231, 256, 277, 295], "317": [218, 225, 228, 256, 263, 273, 277, 295], "318": [218, 228, 231, 263, 277], "319": [218, 225, 228, 231, 256, 273, 277, 295], "321": [218, 228, 231, 263, 273, 277, 283, 295], "322": [218, 228, 231, 263, 283, 295], "323": [218, 225, 228, 231, 256, 277, 283, 295], "324": [218, 228, 231, 256, 273, 277, 283, 295, 506], "325": [218, 225, 231, 263, 273, 283], "326": [218, 225, 231, 256, 273, 283, 295], "329": [218, 231, 256, 263, 295], "331": [218, 225, 231, 256, 277], "335": [218, 225, 231, 263, 277], "336": [218, 225, 231, 277, 438], "337": [218, 231, 263, 277], "338": [218, 225, 263, 277], "339": [218, 225, 231, 277], "341": [218, 225, 231, 263, 277, 295], "342": [218, 225, 231, 263, 283], "343": [218, 231, 263, 277, 295], "346": [218, 231, 277, 295, 604, 605, 606, 607], "347": [218, 263, 277, 295], "348": [218, 231, 295], "349": [218, 231, 277, 295, 418], "351": [218, 225, 231, 277], "352": [218, 225, 231, 263, 277], "353": [218, 225, 231, 263, 277], "354": [218, 231, 277, 452], "355": [218, 263, 277], "356": [218, 238, 277, 295], "357": [218, 263, 277, 295], "359": [218, 277], "361": [218, 277, 295], "362": [218, 263, 277, 295], "364": [218, 277], "365": [218, 295], "366": [218, 263, 277], "367": [218, 277, 295], "368": [218, 277], "369": [218, 263, 277], "371": [218, 263], "373": [218, 225, 263, 295], "374": [218, 225, 277, 295], "375": [218, 225, 235, 263, 277, 295, 418], "376": [218, 263, 277, 295], "377": [218, 225, 263, 277, 295], "379": [218, 263, 277, 295], "380": [218, 263, 277, 295], "381": [218, 225, 263, 277], "382": [218, 263, 277, 295], "383": [218, 225, 263, 267, 295], "384": [218, 263, 277, 295], "385": [218, 263, 277, 295], "386": [218, 263, 277, 295], "387": 218, "388": [218, 263, 277, 295], "389": [218, 295], "390": [218, 277, 295], "391": [218, 263, 295], "392": [218, 263], "393": [218, 225, 263, 277, 295], "394": [218, 225, 263, 277, 295], "395": [218, 225, 263, 277, 295], "396": [218, 225, 263, 823], "397": [218, 225, 277, 295], "398": [218, 225, 277], "399": [218, 225, 277, 295], "401": [218, 225, 263, 277], "402": [218, 263, 295], "403": [218, 225, 277, 295], "405": [218, 277], "406": [218, 225, 263, 277, 295], "407": [218, 263, 277, 295], "408": [218, 225, 263, 277, 295], "409": [218, 225, 263, 277, 295], "411": [218, 225, 263, 277], "412": [218, 277], "413": [218, 225, 263, 277], "414": [218, 225, 263, 277, 295], "415": [218, 277, 295], "416": [218, 225, 263, 295], "417": [218, 225, 263, 277], "418": [218, 225, 263, 295], "419": [218, 225, 263, 277, 295], "420": [218, 225, 263, 277, 295], "421": [218, 225, 263, 277, 295], "422": [218, 225], "423": [218, 263, 277, 295], "424": [218, 225, 263, 277], "425": [218, 263], "426": [218, 295], "427": [218, 225, 263, 295], "428": [218, 225, 263, 295], "429": [218, 263, 295], "430": [218, 225, 263, 295], "431": [218, 263, 295], "432": [218, 225, 263, 295], "433": [218, 263, 295], "434": [218, 263], "435": 218, "436": [218, 263, 295], "437": [218, 225, 263, 295], "438": [218, 225, 295], "439": [218, 263], "440": [218, 225, 263], "441": [218, 225, 263], "442": [218, 225, 263], "443": [218, 225, 295], "444": [218, 225, 295], "445": [218, 225, 295], "446": [218, 263], "447": [218, 225, 263, 295], "448": [218, 263], "449": [218, 225], "451": [218, 225, 295], "452": [218, 225, 263], "453": [218, 225, 295], "454": [218, 225, 263], "455": [218, 225], "457": 218, "458": [218, 263], "459": 218, "460": [218, 263], "461": [218, 263], "462": [218, 263], "463": 218, "464": [218, 263], "465": [218, 263, 267], "466": [218, 263], "467": [218, 263], "468": [218, 263], "469": [218, 263, 707], "470": [218, 263], "471": [218, 263], "472": [218, 263], "473": 218, "474": [218, 263], "475": [218, 263], "476": [218, 263], "478": 218, "479": [218, 263], "480": [218, 263], "481": [218, 263], "482": [218, 263], "483": [218, 263], "484": 218, "485": 218, "486": [218, 263], "487": [218, 263], "488": [218, 263], "489": 218, "490": [218, 860], "491": 218, "492": 218, "494": [218, 263], "495": 218, "496": 218, "497": [218, 263], "498": [218, 263], "499": 218, "502": [218, 263], "503": 218, "504": [218, 263], "505": [218, 231, 263], "506": [218, 263], "509": [218, 295], "511": [218, 295], "514": 218, "515": [218, 263, 706], "516": [218, 263], "518": [218, 263], "519": 218, "520": [218, 263], "521": [218, 263], "522": 218, "523": 218, "524": [218, 263], "525": [218, 263], "526": 218, "527": 218, "528": 218, "529": 218, "530": 218, "531": [218, 263], "532": 218, "533": 218, "534": 218, "535": 218, "536": [218, 860], "538": 218, "539": 218, "540": 218, "541": 218, "542": 218, "543": 218, "544": 218, "545": 218, "546": 218, "547": 218, "548": [218, 267], "549": 218, "550": 218, "551": 218, "552": 218, "553": 218, "554": [218, 862], "555": 218, "556": 218, "557": 218, "558": 218, "559": 218, "560": 218, "561": 218, "562": 218, "563": 218, "564": 218, "565": 218, "566": 218, "567": 218, "568": 218, "569": 218, "570": 218, "571": 218, "572": 218, "573": 218, "574": 218, "575": 218, "576": 218, "577": 218, "578": 218, "579": 218, "580": 218, "581": 218, "583": 218, "584": 218, "585": 218, "586": 218, "587": 218, "588": 218, "589": 218, "590": 218, "591": 218, "592": 218, "593": 218, "594": 218, "595": 218, "596": [218, 966], "597": 218, "598": 218, "599": 218, "601": 218, "602": 218, "603": 218, "604": 218, "605": 218, "606": 218, "607": 218, "608": 218, "609": 218, "610": [218, 860], "611": 218, "612": [218, 823], "613": 218, "614": 218, "615": 218, "616": 218, "617": 218, "618": 218, "619": 218, "620": 218, "621": 218, "622": 218, "623": 218, "624": 218, "625": [218, 235], "626": 218, "627": 218, "628": 218, "629": 218, "630": 218, "631": 218, "632": 218, "633": 218, "634": 218, "635": 218, "636": 218, "637": 218, "638": 218, "639": 218, "640": [218, 557], "641": 218, "642": 218, "643": 218, "644": [218, 1003], "645": 218, "646": 218, "647": 218, "648": 218, "649": 218, "650": 218, "651": 218, "652": 218, "653": 218, "654": 218, "655": 218, "656": 218, "657": 218, "658": 218, "659": 218, "660": 218, "661": 218, "662": 218, "663": 218, "665": 218, "668": [218, 1007], "670": 218, "671": 218, "672": 218, "673": 218, "674": 218, "675": 218, "676": 218, "677": 218, "678": 218, "679": 218, "680": 218, "681": 218, "682": [218, 860], "683": 218, "684": 218, "685": 218, "687": 218, "688": 218, "689": 218, "690": 218, "691": 218, "692": 218, "693": 218, "694": 218, "695": 218, "696": 218, "697": 218, "698": [218, 860, 900], "699": 218, "701": 218, "702": 218, "703": [218, 271, 272, 293], "704": 218, "705": 218, "706": 218, "707": 218, "708": [218, 231], "709": 218, "710": [218, 557], "711": 218, "712": 218, "713": 218, "715": [218, 631], "716": 218, "717": 218, "718": 218, "719": 218, "720": 218, "721": 218, "722": 218, "723": 218, "724": 218, "725": 218, "726": 218, "727": 218, "728": 218, "729": 218, "730": [218, 260], "731": 218, "732": 218, "733": 218, "734": 218, "735": 218, "736": 218, "737": 218, "738": 218, "739": 218, "740": 218, "741": 218, "742": 218, "743": 218, "744": 218, "745": 218, "746": [218, 954], "747": 218, "748": 218, "749": 218, "750": 218, "751": 218, "752": 218, "753": 218, "754": 218, "756": 218, "757": 218, "758": 218, "759": 218, "760": 218, "761": 218, "762": 218, "763": 218, "764": 218, "765": 218, "766": 218, "767": 218, "768": 218, "769": 218, "770": 218, "772": 218, "773": 218, "774": 218, "775": 218, "776": 218, "778": 218, "779": 218, "780": 218, "781": 218, "782": [218, 267], "783": 218, "784": 218, "785": 218, "786": 218, "788": 218, "789": [218, 225], "790": 218, "791": [218, 706], "792": 218, "793": 218, "794": 218, "795": 218, "796": 218, "797": 218, "798": 218, "801": [218, 260], "802": 218, "803": 218, "804": 218, "805": 218, "806": 218, "807": 218, "808": 218, "809": 218, "810": 218, "811": 218, "812": 218, "813": 218, "814": 218, "815": [218, 235], "816": [218, 241], "817": 218, "818": 218, "819": 218, "820": 218, "822": 218, "823": 218, "824": 218, "826": 218, "827": 218, "828": [218, 267], "829": 218, "830": 218, "831": 218, "832": 218, "833": 218, "834": 218, "835": 218, "836": 218, "837": 218, "838": 218, "839": 218, "840": 218, "841": 218, "842": 218, "843": 218, "844": 218, "845": 218, "846": 218, "847": 218, "848": 218, "849": 218, "850": 218, "851": 218, "852": 218, "853": 218, "854": 218, "855": 218, "856": 218, "857": 218, "858": 218, "859": 218, "860": 218, "861": 218, "862": 218, "863": 218, "864": 218, "865": 218, "866": 218, "867": 218, "868": 218, "870": 218, "871": 218, "872": 218, "873": 218, "874": [218, 454], "875": 218, "876": 218, "877": 218, "878": 218, "879": [218, 418], "880": 218, "881": 218, "882": 218, "883": 218, "884": 218, "885": 218, "886": 218, "887": 218, "889": 218, "890": 218, "891": 218, "892": 218, "893": 218, "894": 218, "895": 218, "896": 218, "898": 218, "899": 218, "901": 218, "902": [218, 860], "903": 218, "904": 218, "905": 218, "906": 218, "907": 218, "908": 218, "909": 218, "911": 218, "912": 218, "913": 218, "914": 218, "915": 218, "916": 218, "917": [218, 267], "918": 218, "919": 218, "920": 218, "921": 218, "922": 218, "923": 218, "924": 218, "925": 218, "926": 218, "927": 218, "928": 218, "929": 218, "930": 218, "931": 218, "932": 218, "933": 218, "934": 218, "935": 218, "936": 218, "937": 218, "938": 218, "939": 218, "940": 218, "941": 218, "942": 218, "943": 218, "944": 218, "945": 218, "946": 218, "947": 218, "948": [218, 976], "949": 218, "950": 218, "951": 218, "952": 218, "953": 218, "954": 218, "955": 218, "956": 218, "957": 218, "958": 218, "959": 218, "960": 218, "961": 218, "962": 218, "963": 218, "964": 218, "965": [218, 1097, 1098], "966": [218, 1097, 1098], "967": [218, 1097, 1098], "968": [218, 1097, 1098], "969": [218, 1097, 1098], "970": 218, "971": 218, "972": 218, "973": 218, "975": 218, "976": [218, 256, 263, 273, 277], "977": [218, 256, 263, 273, 277, 869], "timeaxi": 218, "myrang": 218, "1002": [218, 604, 605, 606, 607, 823], "1004": 218, "1006": 218, "1008": 218, "1010": 218, "1012": 218, "1014": 218, "1016": 218, "1018": 218, "1020": [218, 805, 806, 813], "1022": 218, "1028": 218, "1030": 218, "1032": 218, "1034": 218, "1036": 218, "1038": 218, "1040": 218, "1042": [218, 940], "1046": 218, "1048": 218, "1050": 218, "1052": 218, "1054": 218, "1056": 218, "1058": 218, "1060": 218, "1062": 218, "1064": 218, "1066": 218, "1068": [218, 267], "1070": [218, 267], "1072": [218, 267], "1074": 218, "1076": 218, "1078": 218, "1080": 218, "1082": 218, "1084": 218, "1086": 218, "1088": 218, "1090": 218, "1092": 218, "1094": 218, "1096": 218, "1098": 218, "1102": 218, "1104": 218, "1106": 218, "1108": 218, "1110": 218, "1114": 218, "1116": 218, "1118": 218, "1120": 218, "1122": 218, "1124": 218, "1126": 218, "1128": 218, "1130": 218, "1132": 218, "1134": 218, "1136": 218, "1138": 218, "1140": 218, "1142": 218, "1144": 218, "1146": 218, "1148": 218, "1150": 218, "1152": [218, 1098], "1154": [218, 1098], "1156": 218, "1158": 218, "1160": 218, "1162": 218, "1164": 218, "1166": 218, "1168": 218, "1170": 218, "1172": 218, "1174": 218, "1176": 218, "1178": 218, "1180": 218, "1182": 218, "1184": 218, "1186": 218, "1188": 218, "1190": 218, "1192": 218, "1194": 218, "1196": 218, "1198": 218, "1202": [218, 1098], "1204": [218, 1098], "1206": 218, "1208": 218, "1210": 218, "1212": 218, "1214": 218, "1216": 218, "1218": 218, "1220": 218, "1222": 218, "1224": 218, "1226": 218, "1228": 218, "1230": 218, "1232": 218, "1236": 218, "1238": 218, "1240": 218, "1242": 218, "1246": 218, "1248": 218, "1250": 218, "1252": 218, "1254": [218, 473, 474, 475, 487, 488, 489], "1256": 218, "1258": 218, "1260": [218, 438], "1262": 218, "1264": 218, "1266": 218, "1268": 218, "1270": 218, "1272": 218, "1274": 218, "1276": 218, "1278": 218, "1280": 218, "1282": 218, "1284": 218, "1286": 218, "1288": 218, "1290": 218, "1292": 218, "1294": 218, "1296": 218, "1298": 218, "1300": 218, "1302": 218, "1304": 218, "1306": 218, "1308": 218, "1310": 218, "1312": 218, "1314": 218, "1316": 218, "1318": 218, "1320": 218, "1322": 218, "1324": 218, "1326": 218, "1328": 218, "1330": 218, "1332": 218, "1334": 218, "1336": 218, "1338": 218, "1340": 218, "1342": 218, "1344": 218, "1346": 218, "1348": 218, "1350": 218, "1352": [218, 910], "1354": 218, "1356": 218, "1358": 218, "1360": 218, "1362": 218, "1364": 218, "1366": 218, "1368": 218, "1370": 218, "1372": 218, "1374": 218, "1378": 218, "1380": 218, "1382": 218, "1384": 218, "1386": 218, "1388": 218, "1390": 218, "1392": [218, 454], "1394": 218, "1396": 218, "1398": 218, "1400": 218, "1402": 218, "1406": 218, "1408": 218, "1410": 218, "1412": 218, "1414": 218, "1416": [218, 1021], "1418": 218, "1420": 218, "1422": 218, "1424": 218, "1426": 218, "1428": 218, "1430": 218, "1432": 218, "1434": 218, "1436": 218, "1438": 218, "1440": 218, "1442": 218, "1444": 218, "1446": 218, "1448": 218, "1450": [218, 1097], "1452": [218, 1097], "1454": [218, 1097], "1456": 218, "1458": 218, "1460": 218, "1462": 218, "1464": 218, "1466": 218, "1468": 218, "1470": 218, "1472": 218, "1474": 218, "1476": 218, "1478": 218, "1480": 218, "1482": 218, "1484": 218, "1486": 218, "1488": 218, "1490": 218, "1492": 218, "1494": 218, "1496": 218, "1498": 218, "1502": 218, "1504": 218, "1506": 218, "1508": 218, "1510": 218, "1512": 218, "1514": 218, "1516": 218, "1518": [218, 1097], "1520": [218, 1097], "1522": [218, 1097], "1524": 218, "1526": 218, "1528": 218, "1530": 218, "1532": 218, "1534": 218, "1536": [218, 952], "1538": 218, "1540": 218, "1542": 218, "1544": 218, "1546": 218, "1548": 218, "1550": 218, "1552": 218, "1554": 218, "1556": 218, "1558": [218, 821], "1560": 218, "1562": 218, "1564": 218, "1566": 218, "1568": 218, "1570": 218, "1572": 218, "1574": 218, "1576": 218, "1578": 218, "1580": 218, "1582": 218, "1584": 218, "1586": 218, "1588": 218, "1590": 218, "1592": 218, "1594": 218, "1596": 218, "1598": 218, "1600": 218, "1602": 218, "1604": [218, 946], "1606": 218, "1608": 218, "1610": 218, "1612": 218, "1614": 218, "1616": 218, "1618": 218, "1620": 218, "1622": 218, "1624": 218, "1626": 218, "1628": 218, "1630": 218, "1632": 218, "1634": [218, 473, 474], "1636": 218, "1638": 218, "1640": 218, "1642": 218, "1644": 218, "1646": 218, "1648": 218, "1650": 218, "1652": 218, "1654": 218, "1656": 218, "1658": 218, "1660": 218, "1662": 218, "1664": 218, "1666": 218, "1668": 218, "1672": 218, "1674": 218, "1676": 218, "1678": 218, "1680": 218, "1682": 218, "1684": 218, "1686": 218, "1688": [218, 953, 954], "1690": 218, "1692": 218, "1694": 218, "1696": 218, "1698": 218, "1700": 218, "1702": 218, "1704": 218, "1706": [218, 964], "1708": 218, "1710": 218, "1712": 218, "1714": 218, "1716": 218, "1718": 218, "1722": 218, "1724": 218, "1726": 218, "1728": 218, "1730": 218, "1732": 218, "1734": 218, "1736": 218, "1738": 218, "1740": 218, "1742": 218, "1744": 218, "1746": 218, "1748": 218, "1750": 218, "1752": 218, "1754": 218, "1756": 218, "1758": 218, "1760": 218, "1762": 218, "1764": [218, 277], "1766": 218, "1768": 218, "1770": 218, "1772": 218, "1774": 218, "1776": 218, "1778": 218, "1780": 218, "1782": 218, "1784": 218, "1786": 218, "1788": 218, "1790": 218, "1792": 218, "1794": 218, "1796": 218, "1798": 218, "1800": [218, 952], "1802": 218, "1804": 218, "1806": 218, "1808": 218, "1810": 218, "1812": 218, "1814": 218, "1816": 218, "1818": 218, "1820": 218, "1822": 218, "1824": 218, "1826": 218, "1828": 218, "1830": 218, "1832": 218, "1834": 218, "1836": 218, "1838": 218, "1840": 218, "1842": 218, "1844": 218, "1846": 218, "1848": 218, "1850": 218, "1852": 218, "1854": 218, "1856": 218, "1858": 218, "1860": 218, "1862": 218, "1864": 218, "1866": 218, "1868": 218, "1870": 218, "1872": 218, "1874": 218, "1876": 218, "1878": 218, "1880": 218, "1882": 218, "1884": 218, "1886": 218, "1888": 218, "1890": 218, "1892": 218, "1894": 218, "1896": 218, "1898": 218, "1900": [218, 228, 1065, 1067, 1071, 1073], "1902": 218, "1904": 218, "1906": 218, "1908": 218, "1910": 218, "1912": 218, "1914": 218, "1916": 218, "1918": 218, "1920": 218, "1922": 218, "1924": 218, "1926": 218, "1928": 218, "1930": 218, "1932": 218, "1934": 218, "1938": 218, "1940": 218, "1942": 218, "1944": 218, "1946": 218, "1948": 218, "1950": 218, "1952": 218, "1954": [218, 1031], "1956": [218, 1001], "1958": 218, "1962": 218, "1964": 218, "1968": [218, 383], "1970": [218, 722], "1972": 218, "1974": 218, "1976": 218, "1978": [218, 343], "1980": [218, 548, 952], "1984": 218, "1986": [218, 1065, 1067, 1071, 1073], "1988": [218, 343, 457], "1990": [218, 548], "1992": 218, "1994": 218, "2004": 218, "2024": 218, "2026": 218, "2028": 218, "2030": 218, "2032": 218, "2034": 218, "2036": 218, "2038": 218, "2040": 218, "2042": 218, "2044": 218, "2046": 218, "2050": 218, "2052": 218, "2054": 218, "2056": 218, "2058": 218, "2060": 218, "2062": 218, "2064": 218, "2066": 218, "2068": 218, "2070": 218, "2072": 218, "2074": 218, "2076": 218, "2078": 218, "2080": 218, "2082": 218, "2084": 218, "2086": 218, "2088": 218, "2090": 218, "2092": 218, "2094": 218, "2096": 218, "2098": 218, "2100": 218, "2102": 218, "2104": 218, "2106": 218, "2108": 218, "2110": 218, "2112": 218, "2114": 218, "2116": 218, "2118": 218, "2120": 218, "2122": 218, "2124": 218, "2126": 218, "2128": 218, "2130": 218, "2132": 218, "2134": 218, "2136": 218, "2138": 218, "2140": 218, "2142": 218, "2144": 218, "2146": 218, "2148": 218, "2150": 218, "2152": 218, "2154": 218, "2156": 218, "2158": 218, "2160": 218, "2162": 218, "2164": 218, "2166": 218, "2168": 218, "2170": 218, "2172": 218, "2174": 218, "2176": 218, "2178": 218, "2180": 218, "2182": 218, "2184": 218, "2186": 218, "2188": 218, "2190": 218, "2192": 218, "2194": 218, "2196": 218, "2198": 218, "2200": 218, "2202": 218, "2204": 218, "2206": 218, "2208": 218, "2210": 218, "2214": 218, "2216": 218, "2218": 218, "2220": 218, "2222": 218, "2224": 218, "2226": 218, "2228": 218, "2230": 218, "2232": 218, "2234": 218, "2236": 218, "2238": 218, "2240": 218, "2242": 218, "2244": 218, "2246": 218, "2248": 218, "2250": 218, "2252": 218, "2254": 218, "2256": 218, "2258": 218, "2260": 218, "2262": 218, "2264": 218, "2266": 218, "2268": 218, "2272": 218, "2274": 218, "2276": 218, "2278": 218, "2280": 218, "2282": 218, "2284": 218, "2286": 218, "2288": 218, "2290": 218, "2292": 218, "2294": 218, "2296": 218, "2298": 218, "2300": 218, "2302": 218, "2304": 218, "2306": 218, "2308": 218, "2310": 218, "2312": 218, "2314": 218, "2316": 218, "2318": 218, "2320": 218, "2322": 218, "2324": 218, "2326": 218, "2328": 218, "2330": 218, "2332": [218, 860], "2334": 218, "2336": 218, "2338": 218, "2340": 218, "2342": 218, "2344": 218, "2346": 218, "2348": 218, "2350": 218, "2352": 218, "2354": 218, "2356": 218, "2358": 218, "2360": 218, "2362": 218, "2364": 218, "2366": 218, "2368": 218, "2370": 218, "2372": 218, "2374": 218, "2376": 218, "2378": 218, "2380": 218, "2382": 218, "2384": 218, "2386": 218, "2388": 218, "2390": 218, "2392": 218, "2394": 218, "2396": 218, "2398": 218, "2400": 218, "2402": 218, "2404": 218, "2406": 218, "2408": 218, "2410": 218, "2412": 218, "2414": 218, "2416": 218, "2418": 218, "2420": 218, "2422": 218, "2424": 218, "2426": 218, "2428": 218, "2430": 218, "2432": 218, "2434": 218, "2436": 218, "2438": 218, "2440": 218, "2442": 218, "2444": 218, "2446": 218, "2448": 218, "2450": 218, "2452": 218, "2454": 218, "2456": 218, "2458": 218, "2460": [218, 697], "2462": 218, "2464": 218, "2466": 218, "2468": 218, "2470": 218, "2472": 218, "2474": 218, "2476": 218, "2478": 218, "2480": 218, "2482": 218, "2484": 218, "2486": 218, "2488": 218, "2490": 218, "2492": 218, "2494": 218, "2496": 218, "2498": 218, "2500": 218, "2502": 218, "2504": 218, "2506": 218, "2508": 218, "2510": 218, "2512": 218, "2514": 218, "2516": 218, "2518": 218, "2520": 218, "2522": 218, "2524": 218, "2526": 218, "2528": 218, "2530": 218, "2532": 218, "2534": 218, "2536": 218, "2538": 218, "2540": 218, "2542": 218, "2544": 218, "2546": 218, "2548": 218, "2550": 218, "2552": 218, "2554": 218, "2556": 218, "2558": 218, "2560": 218, "2562": 218, "2564": 218, "2566": 218, "2568": 218, "2570": 218, "2572": 218, "2574": 218, "2576": 218, "2578": 218, "2580": 218, "2582": 218, "2584": 218, "2586": 218, "2588": 218, "2590": 218, "2592": 218, "2594": 218, "2596": 218, "2598": 218, "2600": 218, "2602": 218, "2604": 218, "2606": 218, "2608": 218, "2610": 218, "2612": 218, "2614": 218, "2616": 218, "2618": 218, "2620": 218, "2622": 218, "2624": 218, "2626": 218, "2628": 218, "2630": 218, "2632": 218, "2634": 218, "2636": 218, "2638": 218, "2640": [218, 277], "2642": 218, "2644": 218, "2646": 218, "2648": 218, "2650": 218, "2652": 218, "2654": 218, "2656": 218, "2658": 218, "2660": 218, "2662": 218, "2664": 218, "2666": 218, "2668": 218, "2670": 218, "2672": 218, "2674": 218, "2676": 218, "2678": 218, "2680": 218, "2682": 218, "2684": 218, "2686": 218, "2688": 218, "2690": 218, "2692": 218, "2694": 218, "2696": 218, "2698": 218, "2700": 218, "2702": 218, "2704": 218, "2706": 218, "2708": 218, "2710": 218, "2712": 218, "2714": 218, "2716": 218, "2718": 218, "2720": 218, "2722": 218, "2724": 218, "2726": 218, "2728": 218, "2730": [218, 273], "2732": 218, "2734": 218, "2736": 218, "2738": 218, "2740": 218, "2742": 218, "2744": 218, "2746": [218, 860, 886, 910], "2748": [218, 238, 256, 263, 295], "2750": 218, "2752": 218, "2754": 218, "2756": 218, "2758": 218, "2760": 218, "2762": 218, "2764": 218, "2766": 218, "2768": 218, "2770": 218, "2772": 218, "2774": 218, "2776": 218, "2778": 218, "2780": 218, "2782": 218, "2784": 218, "2786": 218, "2788": 218, "2790": 218, "2792": 218, "2794": 218, "2796": 218, "2798": 218, "2800": [218, 261, 431], "2802": [218, 431], "2804": 218, "2806": 218, "2808": 218, "2810": 218, "2812": 218, "2814": 218, "2816": 218, "2818": 218, "2820": 218, "2822": 218, "2824": 218, "2826": 218, "2828": [218, 425], "2830": 218, "2832": 218, "2834": 218, "2836": 218, "2838": 218, "2840": 218, "2842": 218, "2844": 218, "2846": 218, "2848": 218, "2850": 218, "2852": 218, "2854": 218, "2856": 218, "2858": 218, "2860": 218, "2862": 218, "2864": 218, "2866": 218, "2868": 218, "2870": 218, "2872": 218, "2874": 218, "2876": 218, "2878": 218, "2880": 218, "2882": 218, "2884": 218, "2886": 218, "2888": 218, "2890": 218, "2892": 218, "2894": 218, "2896": 218, "2898": 218, "2900": 218, "2902": 218, "2904": 218, "2906": 218, "2910": 218, "2912": 218, "2914": 218, "2916": 218, "2918": 218, "2920": 218, "2922": 218, "2924": 218, "2926": 218, "2928": 218, "2930": 218, "2932": 218, "2934": 218, "2936": 218, "2938": 218, "2940": 218, "2942": 218, "2944": 218, "2946": 218, "2948": 218, "2950": 218, "2952": 218, "2954": 218, "2956": 218, "2958": 218, "2960": 218, "2962": 218, "2964": 218, "2966": 218, "2968": 218, "2970": 218, "2972": 218, "2974": 218, "2976": 218, "2978": 218, "2980": 218, "2982": 218, "2984": 218, "2986": 218, "2988": 218, "2990": 218, "2992": 218, "2994": 218, "2996": 218, "2998": 218, "3002": 218, "3004": 218, "3006": 218, "3008": 218, "3010": 218, "3012": 218, "3014": 218, "3016": 218, "3018": 218, "3020": 218, "3022": 218, "3024": 218, "3026": 218, "3028": 218, "3030": 218, "3032": 218, "3034": 218, "3036": 218, "3038": 218, "3040": 218, "3042": 218, "3044": 218, "3046": 218, "3048": 218, "3050": 218, "3052": 218, "3054": 218, "3056": 218, "3058": 218, "3060": 218, "3062": 218, "3064": 218, "3066": 218, "3068": 218, "3070": 218, "3072": 218, "3074": 218, "3076": 218, "3078": 218, "3080": 218, "3082": 218, "3084": 218, "3086": 218, "3088": 218, "3090": 218, "3092": 218, "3094": 218, "3096": 218, "3098": 218, "3100": 218, "3102": 218, "3104": 218, "3106": 218, "3108": 218, "3110": [218, 267], "3112": 218, "3114": 218, "3116": 218, "3118": 218, "3120": 218, "3122": 218, "3124": 218, "3126": 218, "3128": 218, "3130": 218, "3132": 218, "3134": 218, "3136": 218, "3138": 218, "3140": 218, "3142": 218, "3144": 218, "3146": 218, "3148": 218, "3150": 218, "3152": 218, "3154": 218, "3156": 218, "3158": 218, "3160": 218, "3162": 218, "3164": 218, "3166": 218, "3168": 218, "3170": 218, "3172": 218, "3174": 218, "3176": 218, "3178": 218, "3180": 218, "3182": 218, "3184": 218, "3186": 218, "3188": 218, "3190": 218, "3192": 218, "3194": 218, "3196": 218, "3198": 218, "3200": 218, "3202": 218, "3204": 218, "3206": 218, "3208": 218, "3210": 218, "3212": 218, "3214": 218, "3216": 218, "3218": 218, "3220": 218, "3222": 218, "3224": 218, "3226": 218, "3228": 218, "3230": 218, "3232": 218, "3234": 218, "3236": 218, "3238": 218, "3240": 218, "3242": 218, "3244": 218, "3246": 218, "3248": 218, "3250": 218, "3252": 218, "3254": 218, "3256": 218, "3258": 218, "3260": 218, "3262": 218, "3264": 218, "3266": 218, "3268": 218, "3270": 218, "3272": 218, "3274": 218, "3276": 218, "3278": 218, "3280": 218, "3282": 218, "3284": 218, "3286": 218, "3288": 218, "3290": 218, "3292": 218, "3294": 218, "3296": 218, "3298": 218, "3300": 218, "3302": 218, "3304": 218, "3306": 218, "3308": 218, "3310": 218, "3312": 218, "3314": 218, "3316": 218, "3318": 218, "3320": 218, "3322": 218, "3324": 218, "3326": 218, "3328": 218, "3330": 218, "3332": 218, "3334": 218, "3336": 218, "3338": 218, "3340": 218, "3342": 218, "3344": 218, "3346": 218, "3348": 218, "3350": 218, "3352": 218, "3354": 218, "3356": 218, "3358": 218, "3360": 218, "3362": 218, "3364": 218, "3366": 218, "3368": 218, "3370": 218, "3372": 218, "3374": 218, "3376": 218, "3378": 218, "3380": 218, "3382": 218, "3384": 218, "3386": 218, "3388": 218, "3390": 218, "3392": 218, "3394": 218, "3396": 218, "3398": 218, "3400": 218, "3402": 218, "3404": 218, "3406": 218, "3408": 218, "3410": 218, "3412": 218, "3414": 218, "3416": 218, "3418": 218, "3420": 218, "3422": 218, "3424": 218, "3426": 218, "3428": 218, "3430": 218, "3432": 218, "3434": 218, "3436": 218, "3438": 218, "3440": 218, "3442": 218, "3444": 218, "3446": 218, "3448": 218, "3450": 218, "3452": 218, "3454": 218, "3456": 218, "3458": 218, "3460": 218, "3462": 218, "3464": 218, "3466": 218, "3468": 218, "3470": 218, "3472": 218, "3474": 218, "3476": 218, "3478": 218, "3480": 218, "3482": 218, "3484": 218, "3486": 218, "3488": 218, "3490": 218, "3492": 218, "3494": 218, "3496": 218, "3498": 218, "3500": 218, "3502": 218, "3504": 218, "3506": 218, "3508": 218, "3510": 218, "3512": 218, "3514": 218, "3516": 218, "3518": 218, "3520": 218, "3522": 218, "3524": 218, "3526": 218, "3528": 218, "3530": 218, "3532": 218, "3534": 218, "3536": 218, "3538": 218, "3540": 218, "3542": 218, "3544": 218, "3546": 218, "3548": 218, "3550": 218, "3552": 218, "3554": 218, "3556": 218, "3558": 218, "3560": 218, "3562": 218, "3564": 218, "3566": 218, "3568": 218, "3570": 218, "3572": 218, "3574": 218, "3576": 218, "3578": 218, "3580": 218, "3582": 218, "3584": 218, "3586": 218, "3588": 218, "3590": 218, "3592": 218, "3594": 218, "3596": 218, "3598": 218, "3602": 218, "3604": 218, "3606": 218, "3608": 218, "3610": 218, "3612": 218, "3614": 218, "3616": 218, "3618": 218, "3620": [218, 1098], "3622": [218, 1098], "3624": [218, 1098], "3626": 218, "3628": 218, "3630": 218, "3632": 218, "3634": 218, "3636": 218, "3638": 218, "3640": 218, "3642": 218, "3644": 218, "3646": 218, "3648": 218, "3650": 218, "3652": 218, "3654": 218, "3656": 218, "3658": 218, "3660": 218, "3662": 218, "3664": 218, "3666": 218, "3668": 218, "3670": 218, "3672": 218, "3674": 218, "3676": 218, "3678": 218, "3680": 218, "3682": 218, "3684": 218, "3686": 218, "3688": 218, "3690": 218, "3692": 218, "3694": 218, "3696": 218, "3698": 218, "3700": 218, "3702": 218, "3704": 218, "3706": 218, "3708": 218, "3710": 218, "3712": 218, "3714": 218, "3716": 218, "3718": 218, "3720": 218, "3722": [218, 907], "3724": 218, "3726": 218, "3728": 218, "3730": 218, "3732": 218, "3734": 218, "3736": 218, "3738": 218, "3740": 218, "3742": 218, "3744": 218, "3746": 218, "3748": 218, "3750": 218, "3752": 218, "3754": 218, "3756": 218, "3758": 218, "3760": 218, "3762": 218, "3764": 218, "3766": 218, "3768": 218, "3770": [218, 267], "3772": 218, "3774": 218, "3776": 218, "3778": 218, "3780": 218, "3782": 218, "3784": 218, "3786": 218, "3788": 218, "3790": 218, "3792": 218, "3794": 218, "3796": 218, "3798": 218, "3800": 218, "3802": 218, "3804": 218, "3806": 218, "3808": 218, "3810": 218, "3812": 218, "3814": 218, "3816": 218, "3818": 218, "3820": 218, "3822": 218, "3824": 218, "3826": 218, "3828": 218, "3830": 218, "3832": 218, "3834": 218, "3836": 218, "3838": 218, "3840": 218, "3842": 218, "3844": 218, "3846": 218, "3848": 218, "3850": 218, "3852": 218, "3854": 218, "3856": 218, "3858": 218, "3860": 218, "3862": 218, "3864": 218, "3866": 218, "3868": 218, "3870": 218, "3872": 218, "3874": [218, 1098], "3876": [218, 1098], "3878": [218, 1098], "3880": 218, "3882": 218, "3884": 218, "3886": 218, "3888": 218, "3890": 218, "3892": 218, "3894": 218, "3896": 218, "3898": 218, "3900": 218, "3902": 218, "3904": 218, "3906": 218, "3908": 218, "3910": 218, "3912": 218, "3914": 218, "3916": 218, "3918": 218, "3920": 218, "3922": 218, "3924": 218, "3926": 218, "3928": 218, "3930": 218, "3932": 218, "3934": 218, "3936": 218, "3938": 218, "3940": 218, "3942": 218, "3946": 218, "3948": 218, "3950": 218, "3952": 218, "3954": 218, "3956": 218, "3958": 218, "3960": 218, "3962": 218, "3964": 218, "3966": 218, "3968": 218, "3970": 218, "3972": 218, "3974": 218, "3976": 218, "3978": 218, "3980": 218, "3982": 218, "3984": 218, "3986": 218, "3988": 218, "3990": 218, "3992": 218, "3994": 218, "3996": 218, "3998": 218, "4002": 218, "4004": 218, "4006": 218, "4008": 218, "4010": 218, "4012": 218, "4014": 218, "4016": 218, "4018": 218, "4020": 218, "4022": 218, "4024": 218, "4026": 218, "4028": 218, "4030": 218, "4032": 218, "4034": 218, "4036": 218, "4038": 218, "4040": 218, "4042": 218, "4044": 218, "4046": 218, "4048": 218, "4050": 218, "4052": 218, "4054": 218, "4056": 218, "4058": 218, "4060": 218, "4062": 218, "4064": 218, "4066": 218, "4068": 218, "4070": 218, "4072": 218, "4074": 218, "4076": 218, "4078": 218, "4080": 218, "4082": 218, "4084": 218, "4086": 218, "4088": 218, "4090": 218, "4092": 218, "4094": 218, "4098": 218, "4100": 218, "4102": 218, "4104": 218, "4106": 218, "4108": 218, "4110": 218, "4112": 218, "4114": 218, "4116": 218, "4118": 218, "4120": 218, "4122": 218, "4124": 218, "4126": 218, "4128": 218, "4130": 218, "4132": 218, "4134": 218, "4136": 218, "4138": 218, "4140": 218, "4142": 218, "4144": 218, "4146": 218, "4148": 218, "4150": 218, "4152": 218, "4154": 218, "4156": 218, "4158": 218, "4160": 218, "4162": 218, "4164": 218, "4166": 218, "4168": 218, "4170": 218, "4172": 218, "4174": 218, "4176": 218, "4178": 218, "4180": 218, "4182": 218, "4184": 218, "4186": 218, "4188": 218, "4190": 218, "4192": 218, "4194": 218, "4196": 218, "4198": 218, "4200": 218, "4202": 218, "4204": 218, "4206": 218, "4208": 218, "4210": 218, "4212": 218, "4214": 218, "4216": 218, "4218": 218, "4220": 218, "4222": 218, "4224": 218, "4226": 218, "4228": 218, "4230": 218, "4232": 218, "4234": 218, "4236": 218, "4238": 218, "4240": 218, "4242": 218, "4244": 218, "4246": 218, "4248": 218, "4250": 218, "4252": 218, "4254": 218, "4256": 218, "4258": 218, "4260": 218, "4262": 218, "4264": 218, "4266": 218, "4268": 218, "4270": 218, "4272": 218, "4274": 218, "4276": 218, "4278": 218, "4280": 218, "4282": 218, "4284": 218, "4286": 218, "4288": 218, "4290": 218, "4292": 218, "4294": 218, "4296": 218, "4298": 218, "4300": 218, "4302": 218, "4304": 218, "4306": 218, "4308": 218, "4310": 218, "4312": 218, "4314": 218, "4316": 218, "4318": 218, "4320": 218, "4322": 218, "4324": 218, "4326": 218, "4328": 218, "4330": 218, "4332": 218, "4334": 218, "4336": 218, "4338": 218, "4340": 218, "4342": 218, "4344": 218, "4346": 218, "4348": 218, "4350": 218, "4352": 218, "4354": 218, "4356": 218, "4358": 218, "4360": 218, "4362": 218, "4364": 218, "4366": 218, "4368": 218, "4370": 218, "4372": 218, "4374": 218, "4376": 218, "4378": 218, "4380": 218, "4382": 218, "4384": 218, "4386": 218, "4388": 218, "4390": 218, "4392": 218, "4394": 218, "4396": 218, "4398": 218, "4400": 218, "4402": 218, "4404": 218, "4406": 218, "4408": 218, "4410": 218, "4412": 218, "4414": 218, "4416": 218, "4418": 218, "4420": 218, "4422": 218, "4424": 218, "4426": 218, "4428": 218, "4430": 218, "4432": 218, "4434": 218, "4436": 218, "4438": 218, "4440": 218, "4442": 218, "4444": 218, "4446": 218, "4448": 218, "4450": 218, "4452": 218, "4454": 218, "4456": 218, "4458": 218, "4460": 218, "4462": 218, "4464": 218, "4466": 218, "4468": 218, "4470": 218, "4472": 218, "4474": 218, "4476": 218, "4478": 218, "4480": 218, "4482": 218, "4484": 218, "4486": 218, "4488": 218, "4490": 218, "4492": 218, "4494": 218, "4496": 218, "4498": 218, "4502": 218, "4504": 218, "4506": 218, "4508": 218, "4510": 218, "4512": 218, "4514": 218, "4516": 218, "4518": 218, "4520": 218, "4522": 218, "4524": 218, "4526": 218, "4528": 218, "4530": 218, "4532": 218, "4534": 218, "4536": 218, "4538": 218, "4540": 218, "4542": 218, "4544": 218, "4546": 218, "4548": 218, "4550": 218, "4552": 218, "4554": 218, "4556": 218, "4558": 218, "4560": 218, "4562": 218, "4564": 218, "4566": 218, "4568": 218, "4570": 218, "4572": 218, "4574": 218, "4578": 218, "4580": 218, "4582": 218, "4584": 218, "4586": 218, "4588": 218, "4590": 218, "4592": 218, "4594": 218, "4596": 218, "4598": 218, "4600": 218, "4602": 218, "4604": 218, "4606": 218, "4608": 218, "4610": 218, "4612": 218, "4614": 218, "4616": 218, "4618": 218, "4620": 218, "4622": 218, "4624": 218, "4626": 218, "4628": [218, 231], "4630": [218, 425], "4632": 218, "4634": 218, "4636": 218, "4638": 218, "4640": 218, "4642": 218, "4644": 218, "4646": 218, "4648": 218, "4650": 218, "4652": 218, "4654": 218, "4656": 218, "4658": 218, "4662": 218, "4664": 218, "4666": 218, "4668": 218, "4670": 218, "4672": 218, "4674": 218, "4676": 218, "4680": 218, "4682": 218, "4684": 218, "4686": 218, "4688": 218, "4690": 218, "4692": 218, "4694": 218, "4696": 218, "4698": 218, "4700": 218, "4702": 218, "4704": 218, "4706": 218, "4708": 218, "4710": 218, "4712": 218, "4714": 218, "4716": 218, "4718": 218, "4720": 218, "4722": 218, "4724": 218, "4726": 218, "4728": 218, "4730": 218, "4732": 218, "4734": 218, "4736": 218, "4738": 218, "4740": 218, "4742": 218, "4744": 218, "4746": 218, "4748": 218, "4750": 218, "4752": 218, "4754": 218, "4756": 218, "4758": 218, "4760": 218, "4762": 218, "4764": 218, "4766": 218, "4768": 218, "4770": 218, "4772": 218, "4774": 218, "4776": 218, "4778": 218, "4780": 218, "4782": 218, "4784": 218, "4786": 218, "4788": 218, "4790": 218, "4792": 218, "4794": 218, "4796": 218, "4798": 218, "4802": 218, "4804": 218, "4806": 218, "4808": 218, "4810": 218, "4812": 218, "4814": 218, "4816": 218, "4818": 218, "4820": 218, "4822": 218, "4824": 218, "4826": 218, "4828": 218, "4830": 218, "4832": 218, "4834": 218, "4836": 218, "4838": 218, "4840": 218, "4842": 218, "4844": 218, "4846": 218, "4848": 218, "4850": 218, "4852": 218, "4854": 218, "4856": 218, "4858": 218, "4860": 218, "4862": 218, "4864": 218, "4866": [218, 228], "4868": 218, "4870": 218, "4872": 218, "4874": 218, "4876": 218, "4878": 218, "4880": 218, "4882": [218, 823], "4884": 218, "4886": 218, "4888": 218, "4890": 218, "4892": 218, "4894": 218, "4896": 218, "4898": 218, "4900": 218, "4902": 218, "4904": 218, "4906": 218, "4908": 218, "4910": 218, "4912": 218, "4914": 218, "4916": 218, "4918": 218, "4920": 218, "4922": 218, "4924": 218, "4926": [218, 231], "4928": 218, "4930": 218, "4932": 218, "4934": 218, "4936": 218, "4938": 218, "4940": 218, "4942": 218, "4944": 218, "4946": 218, "4948": 218, "4950": [218, 235], "4952": 218, "4954": 218, "4956": 218, "4958": 218, "4960": 218, "4962": 218, "4964": 218, "4966": 218, "4968": 218, "4970": 218, "4972": 218, "4974": 218, "4976": 218, "4978": 218, "4980": 218, "4982": 218, "4984": 218, "4986": 218, "4988": 218, "4990": 218, "4992": 218, "4994": 218, "4996": 218, "4998": 218, "5002": 218, "5004": 218, "5006": 218, "5008": 218, "5010": 218, "5012": 218, "5014": 218, "5016": 218, "5018": 218, "5020": 218, "5022": 218, "5024": 218, "5026": 218, "5028": 218, "5030": 218, "5032": 218, "5034": 218, "5036": 218, "5038": 218, "5040": 218, "5042": 218, "5044": 218, "5046": 218, "5048": 218, "5052": 218, "5054": 218, "5056": 218, "5058": 218, "5060": 218, "5062": 218, "5064": 218, "5066": 218, "5068": 218, "5070": 218, "5072": 218, "5074": 218, "5076": 218, "5078": 218, "5080": [218, 860], "5082": 218, "5084": 218, "5086": 218, "5088": 218, "5090": 218, "5092": 218, "5094": 218, "5096": 218, "5098": 218, "5100": 218, "5102": 218, "5104": 218, "5106": 218, "5108": 218, "5110": 218, "5112": 218, "5114": 218, "5116": 218, "5118": 218, "5120": 218, "5122": 218, "5124": 218, "5126": 218, "5128": 218, "5130": 218, "5132": 218, "5134": 218, "5136": 218, "5138": 218, "5140": 218, "5142": 218, "5144": 218, "5146": 218, "5148": 218, "5150": 218, "5152": 218, "5154": 218, "5156": 218, "5158": 218, "5160": 218, "5162": 218, "5164": 218, "5166": 218, "5168": 218, "5170": 218, "5172": 218, "5174": 218, "5176": 218, "5178": 218, "5180": 218, "5182": 218, "5184": 218, "5186": 218, "5188": 218, "5190": 218, "5192": 218, "5194": 218, "5196": 218, "5198": 218, "5200": 218, "5202": 218, "5204": 218, "5206": 218, "5208": 218, "5210": 218, "5212": 218, "5214": 218, "5216": 218, "5218": 218, "5220": 218, "5222": 218, "5224": 218, "5226": 218, "5228": 218, "5230": 218, "5232": 218, "5234": 218, "5236": 218, "5238": 218, "5240": 218, "5242": 218, "5244": 218, "5246": 218, "5248": 218, "5250": 218, "5252": 218, "5254": 218, "5256": 218, "5258": 218, "5260": 218, "5262": 218, "5264": 218, "5266": 218, "5268": 218, "5270": 218, "5272": 218, "5274": 218, "5276": 218, "5278": 218, "5280": 218, "5282": 218, "5284": 218, "5286": 218, "5288": 218, "5290": 218, "5292": 218, "5294": 218, "5296": 218, "5298": 218, "5300": 218, "5302": 218, "5304": 218, "5306": 218, "5308": 218, "5310": 218, "5312": 218, "5314": 218, "5316": 218, "5318": 218, "5320": 218, "5322": 218, "5324": 218, "5326": 218, "5328": 218, "5330": 218, "5332": 218, "5334": 218, "5336": 218, "5338": 218, "5340": 218, "5342": 218, "5344": 218, "5346": 218, "5348": 218, "5350": 218, "5352": 218, "5354": 218, "5356": 218, "5358": 218, "5360": 218, "5362": [218, 261, 431], "5364": 218, "5366": 218, "5368": 218, "5370": 218, "5372": 218, "5374": 218, "5376": 218, "5378": 218, "5380": 218, "5382": 218, "5384": 218, "5386": 218, "5388": 218, "5390": 218, "5392": 218, "5394": 218, "5396": 218, "5398": 218, "5400": 218, "5402": 218, "5404": 218, "5406": 218, "5408": 218, "5410": [218, 425], "5412": 218, "5414": 218, "5416": 218, "5418": 218, "5420": 218, "5422": 218, "5424": 218, "5426": 218, "5428": 218, "5430": 218, "5432": 218, "5434": 218, "5436": 218, "5438": 218, "5440": 218, "5442": 218, "5444": 218, "5446": 218, "5448": 218, "5450": 218, "5452": 218, "5454": 218, "5456": 218, "5458": 218, "5460": 218, "5462": 218, "5464": 218, "5466": 218, "5468": 218, "5470": 218, "5472": 218, "5474": 218, "5476": 218, "5478": 218, "5480": 218, "5482": 218, "5484": 218, "5486": 218, "5488": 218, "5490": 218, "5492": 218, "5494": 218, "5496": 218, "5498": 218, "5500": 218, "5502": 218, "5504": 218, "5506": 218, "5508": 218, "5510": 218, "5512": 218, "5514": 218, "5516": 218, "5518": 218, "5520": 218, "5522": 218, "5524": 218, "5526": 218, "5528": 218, "5530": 218, "5532": 218, "5534": 218, "5536": 218, "5538": 218, "5540": 218, "5542": 218, "5544": 218, "5546": 218, "5548": 218, "5550": 218, "5552": 218, "5554": 218, "5556": 218, "5558": 218, "5560": 218, "5562": 218, "5564": 218, "5566": 218, "5568": 218, "5570": 218, "5572": 218, "5574": 218, "5576": 218, "5578": 218, "5580": 218, "5582": 218, "5584": 218, "5586": 218, "5588": 218, "5590": 218, "5592": 218, "5594": 218, "5596": 218, "5598": 218, "5600": 218, "5602": 218, "5604": 218, "5606": 218, "5608": 218, "5610": 218, "5612": 218, "5614": 218, "5616": 218, "5618": 218, "5620": 218, "5622": 218, "5624": 218, "5626": 218, "5628": 218, "5630": 218, "5632": 218, "5634": 218, "5636": 218, "5638": 218, "5640": 218, "5642": 218, "5644": 218, "5646": 218, "5648": 218, "5650": 218, "5652": 218, "5654": 218, "5656": 218, "5658": 218, "5660": 218, "5662": 218, "5664": 218, "5666": 218, "5668": 218, "5670": 218, "5672": 218, "5674": 218, "5676": 218, "5678": [218, 893], "5680": 218, "5682": 218, "5684": 218, "5686": 218, "5688": 218, "5690": 218, "5692": 218, "5694": 218, "5696": 218, "5698": 218, "5700": 218, "5702": 218, "5704": 218, "5706": 218, "5708": 218, "5710": 218, "5712": 218, "5714": 218, "5716": 218, "5718": 218, "5720": 218, "5722": 218, "5724": 218, "5726": 218, "5728": 218, "5730": 218, "5732": 218, "5734": 218, "5736": 218, "5738": 218, "5740": 218, "5742": 218, "5744": 218, "5746": 218, "5748": 218, "5750": 218, "5752": 218, "5754": 218, "5756": 218, "5758": 218, "5760": 218, "5762": 218, "5764": 218, "5766": 218, "5768": 218, "5770": 218, "5772": 218, "5774": 218, "5776": 218, "5778": 218, "5780": 218, "5782": 218, "5784": 218, "5786": 218, "5788": 218, "5790": 218, "5792": 218, "5794": 218, "5796": 218, "5798": 218, "5800": 218, "5802": 218, "5804": 218, "5806": 218, "5808": 218, "5810": 218, "5812": 218, "5814": 218, "5816": 218, "5818": 218, "5820": 218, "5822": 218, "5824": 218, "5826": 218, "5828": 218, "5830": 218, "5832": [218, 228], "5834": 218, "5836": 218, "5838": 218, "5840": 218, "5842": 218, "5844": 218, "5846": 218, "5848": 218, "5850": 218, "5852": 218, "5854": 218, "5856": 218, "5858": 218, "5860": 218, "5862": 218, "5864": 218, "5866": 218, "5868": 218, "5870": 218, "5872": 218, "5874": 218, "5876": 218, "5878": 218, "5880": 218, "5882": 218, "5884": 218, "5886": 218, "5888": 218, "5890": 218, "5892": 218, "5894": 218, "5896": 218, "5898": 218, "5900": 218, "5902": 218, "5904": 218, "5906": 218, "5908": 218, "5910": 218, "5912": 218, "5914": 218, "5916": 218, "5918": 218, "5920": 218, "5922": 218, "5924": 218, "5926": 218, "5928": 218, "5930": 218, "5932": 218, "5934": 218, "5936": 218, "5938": 218, "5940": 218, "5942": 218, "5944": 218, "5946": 218, "5948": 218, "5950": 218, "5952": 218, "5954": 218, "5956": 218, "5958": 218, "5960": 218, "5962": 218, "5964": 218, "5966": 218, "5968": 218, "5970": 218, "5972": 218, "5974": 218, "5976": 218, "5978": 218, "5980": 218, "5982": 218, "5984": 218, "5986": 218, "5988": 218, "5990": 218, "5992": 218, "5994": 218, "5996": 218, "5998": 218, "6000": [218, 992], "6002": 218, "6004": 218, "6006": 218, "6008": 218, "6010": 218, "6012": 218, "6014": 218, "6016": 218, "6018": 218, "6020": 218, "6022": 218, "6024": 218, "6026": 218, "6028": 218, "6030": 218, "6032": 218, "6034": 218, "6036": 218, "6038": 218, "6040": 218, "6042": 218, "6044": 218, "6046": 218, "6048": 218, "6050": 218, "6052": 218, "6054": 218, "6056": 218, "6058": 218, "6060": 218, "6062": 218, "6064": 218, "6066": 218, "6068": 218, "6070": 218, "6072": 218, "6074": 218, "6076": 218, "6078": 218, "6080": 218, "6082": 218, "6084": 218, "6086": 218, "6088": 218, "6090": 218, "6092": 218, "6094": 218, "6096": 218, "6098": 218, "6100": 218, "6102": 218, "6104": 218, "6106": 218, "6108": 218, "6110": 218, "6112": 218, "6114": 218, "6116": 218, "6118": 218, "6120": 218, "6122": 218, "6124": 218, "6126": 218, "6128": 218, "6130": 218, "6132": 218, "6134": 218, "6136": 218, "6138": 218, "6140": 218, "6142": 218, "6144": 218, "6146": 218, "6148": 218, "6150": 218, "6152": 218, "6154": 218, "6156": 218, "6158": 218, "6160": 218, "6162": 218, "6164": 218, "6166": 218, "6168": 218, "6170": 218, "6172": 218, "6174": 218, "6176": 218, "6178": 218, "6180": 218, "6182": 218, "6184": 218, "6186": 218, "6188": 218, "6190": 218, "6192": 218, "6194": 218, "6196": 218, "6198": 218, "6200": 218, "6202": 218, "6204": 218, "6206": 218, "6208": 218, "6210": 218, "6212": 218, "6214": 218, "6216": 218, "6218": 218, "6220": 218, "6222": 218, "6224": 218, "6226": 218, "6228": 218, "6230": 218, "6232": 218, "6234": 218, "6236": 218, "6238": 218, "6240": 218, "6242": 218, "6244": 218, "6246": 218, "6248": 218, "6250": 218, "6252": 218, "6254": 218, "6256": 218, "6258": 218, "6260": 218, "6262": 218, "6264": 218, "6266": 218, "6268": 218, "6270": 218, "6272": 218, "6274": 218, "6276": 218, "6278": 218, "6280": 218, "6282": 218, "6284": 218, "6286": 218, "6288": 218, "6290": 218, "6292": 218, "6294": 218, "6296": 218, "6298": 218, "6300": 218, "6302": 218, "6304": 218, "6306": 218, "6308": 218, "6310": 218, "6312": 218, "6314": 218, "6316": 218, "6318": 218, "6320": 218, "6322": 218, "6324": 218, "6326": 218, "6328": 218, "6330": 218, "6332": 218, "6334": 218, "6336": 218, "6338": 218, "6340": 218, "6342": 218, "6344": 218, "6346": 218, "6348": 218, "6350": 218, "6352": 218, "6354": 218, "6356": 218, "6358": 218, "6360": 218, "6362": 218, "6364": 218, "6366": 218, "6368": 218, "6370": 218, "6372": 218, "6374": 218, "6376": 218, "6378": 218, "6380": 218, "6382": 218, "6384": 218, "6386": 218, "6388": 218, "6390": 218, "6392": 218, "6394": 218, "6396": 218, "6398": 218, "6400": 218, "6402": 218, "6404": 218, "6406": 218, "6408": 218, "6410": 218, "6412": 218, "6414": 218, "6416": 218, "6418": 218, "6420": 218, "6422": 218, "6424": 218, "6426": 218, "6428": 218, "6430": 218, "6432": 218, "6434": 218, "6436": 218, "6438": 218, "6440": 218, "6442": 218, "6444": 218, "6446": 218, "6448": 218, "6450": 218, "6452": 218, "6454": 218, "6456": 218, "6458": 218, "6460": 218, "6462": 218, "6464": 218, "6466": 218, "6468": 218, "6470": 218, "6472": 218, "6474": 218, "6476": 218, "6478": 218, "6480": 218, "6482": 218, "6484": 218, "6486": 218, "6488": 218, "6490": 218, "6492": 218, "6494": 218, "6496": 218, "6498": 218, "6500": 218, "6502": 218, "6504": 218, "6506": 218, "6508": 218, "6510": 218, "6512": 218, "6514": 218, "6516": 218, "6518": 218, "6520": 218, "6522": 218, "6524": 218, "6526": 218, "6528": 218, "6530": 218, "6532": 218, "6534": 218, "6536": 218, "6538": 218, "6540": 218, "6542": 218, "6544": 218, "6546": 218, "6548": 218, "6550": 218, "6552": 218, "6554": 218, "6556": 218, "6558": 218, "6560": 218, "6562": 218, "6564": 218, "6566": 218, "6568": 218, "6570": 218, "6572": 218, "6574": 218, "6576": 218, "6578": 218, "6580": 218, "6582": 218, "6584": 218, "6586": 218, "6588": 218, "6590": 218, "6592": 218, "6594": 218, "6596": 218, "6598": 218, "6600": 218, "6602": 218, "6604": 218, "6606": 218, "6608": 218, "6610": 218, "6612": 218, "6614": 218, "6616": 218, "6618": 218, "6620": 218, "6622": 218, "6624": 218, "6626": 218, "6628": 218, "6630": 218, "6632": 218, "6634": 218, "6636": 218, "6638": 218, "6640": 218, "6642": 218, "6644": 218, "6646": 218, "6648": 218, "6650": 218, "6652": 218, "6654": 218, "6656": 218, "6658": 218, "6660": 218, "6662": 218, "6664": 218, "6666": 218, "6668": 218, "6670": 218, "6672": 218, "6674": 218, "6676": 218, "6678": 218, "6680": 218, "6682": 218, "6684": 218, "6686": 218, "6688": 218, "6690": 218, "6692": 218, "6694": 218, "6696": 218, "6698": 218, "6700": 218, "6702": 218, "6704": 218, "6706": 218, "6708": 218, "6710": 218, "6714": 218, "6716": [218, 241], "6718": 218, "6720": 218, "6722": 218, "6724": 218, "6726": 218, "6728": 218, "6730": 218, "6732": 218, "6734": 218, "6736": 218, "6738": 218, "6740": 218, "6742": 218, "6744": 218, "6746": 218, "6748": 218, "6750": 218, "6752": 218, "6754": 218, "6756": 218, "6758": 218, "6760": 218, "6762": 218, "6764": 218, "6766": 218, "6768": 218, "6770": 218, "6772": 218, "6774": 218, "6776": 218, "6778": 218, "6780": 218, "6782": 218, "6784": 218, "6786": 218, "6788": 218, "6790": 218, "6792": 218, "6794": 218, "6796": 218, "6798": 218, "6800": 218, "6802": 218, "6804": 218, "6806": 218, "6808": 218, "6810": 218, "6812": 218, "6814": 218, "6816": 218, "6818": 218, "6820": 218, "6822": 218, "6824": 218, "6826": 218, "6828": 218, "6830": 218, "6832": 218, "6834": 218, "6836": 218, "6838": 218, "6840": 218, "6842": 218, "6844": 218, "6846": 218, "6848": 218, "6850": 218, "6852": 218, "6854": 218, "6856": 218, "6858": [218, 267], "6860": 218, "6862": 218, "6864": 218, "6866": 218, "6868": 218, "6870": 218, "6872": 218, "6874": 218, "6876": 218, "6878": 218, "6880": 218, "6882": 218, "6884": 218, "6886": 218, "6888": 218, "6890": 218, "6892": 218, "6894": 218, "6896": 218, "6898": 218, "6900": 218, "6902": 218, "6904": 218, "6906": 218, "6908": 218, "6910": 218, "6912": 218, "6914": 218, "6916": 218, "6918": 218, "6920": 218, "6922": 218, "6924": 218, "6926": 218, "6928": 218, "6930": 218, "6932": 218, "6934": 218, "6936": 218, "6938": 218, "6940": 218, "6942": 218, "6944": 218, "6946": 218, "6948": 218, "6950": 218, "6952": 218, "6954": 218, "6956": 218, "6958": 218, "6960": 218, "6962": 218, "6964": 218, "6966": 218, "6968": 218, "6970": 218, "6972": 218, "6974": 218, "6976": 218, "6978": 218, "6980": 218, "6982": 218, "6984": 218, "6986": 218, "6988": 218, "6990": 218, "6992": 218, "6994": 218, "6996": 218, "6998": 218, "7000": 218, "7002": 218, "7004": 218, "7006": 218, "7008": 218, "7010": 218, "7012": 218, "7014": 218, "7016": 218, "7018": 218, "7020": 218, "7022": 218, "7024": 218, "7026": 218, "7028": 218, "7030": 218, "7032": 218, "7034": 218, "7036": 218, "7038": 218, "7040": 218, "7042": 218, "7044": 218, "7046": 218, "7048": 218, "7050": 218, "7052": 218, "7054": 218, "7056": 218, "7058": 218, "7060": 218, "7062": 218, "7064": 218, "7066": 218, "7068": 218, "7070": 218, "7072": 218, "7074": 218, "7076": 218, "7078": 218, "7080": 218, "7082": 218, "7084": 218, "7086": 218, "7088": 218, "7090": 218, "7092": 218, "7094": 218, "7096": 218, "7098": 218, "7100": 218, "7102": 218, "7104": 218, "7106": 218, "7108": 218, "7110": 218, "7112": 218, "7114": 218, "7116": 218, "7118": 218, "7120": 218, "7122": 218, "7124": 218, "7126": 218, "7128": 218, "7130": 218, "7132": 218, "7134": 218, "7136": 218, "7138": 218, "7140": 218, "7142": 218, "7144": 218, "7146": 218, "7148": 218, "7150": 218, "7152": 218, "7154": 218, "7156": 218, "7158": 218, "7160": 218, "7162": 218, "7164": 218, "7166": 218, "7168": 218, "7170": 218, "7172": 218, "7174": 218, "7176": 218, "7178": 218, "7180": 218, "7182": 218, "7184": 218, "7186": 218, "7188": 218, "7190": 218, "7192": 218, "7194": 218, "7196": 218, "7198": 218, "7200": 218, "7202": 218, "7204": 218, "7206": 218, "7208": 218, "7210": 218, "7212": 218, "7214": 218, "7216": 218, "7218": 218, "7220": 218, "7222": 218, "7224": 218, "7226": 218, "7228": 218, "7230": 218, "7232": 218, "7234": 218, "7236": 218, "7238": 218, "7240": 218, "7242": 218, "7244": 218, "7246": 218, "7248": 218, "7250": 218, "7252": 218, "7254": 218, "7256": 218, "7258": 218, "7260": 218, "7262": 218, "7264": 218, "7266": 218, "7268": 218, "7270": 218, "7272": 218, "7274": 218, "7276": 218, "7278": 218, "7280": 218, "7282": 218, "7284": 218, "7286": 218, "7288": 218, "7290": 218, "7292": 218, "7294": 218, "7296": 218, "7298": 218, "7300": 218, "7302": 218, "7304": 218, "7306": 218, "7308": 218, "7310": 218, "7312": 218, "7314": 218, "7316": 218, "7318": 218, "7320": 218, "7322": 218, "7324": 218, "7326": 218, "7328": 218, "7330": 218, "7332": 218, "7334": 218, "7336": 218, "7338": 218, "7340": 218, "7342": 218, "7344": 218, "7346": 218, "7348": 218, "7350": 218, "7352": 218, "7354": 218, "7356": 218, "7358": 218, "7360": 218, "7362": 218, "7364": 218, "7366": 218, "7368": 218, "7370": 218, "7372": 218, "7374": 218, "7376": 218, "7378": 218, "7380": 218, "7382": 218, "7384": 218, "7386": 218, "7388": 218, "7392": 218, "7394": 218, "7396": 218, "7398": 218, "7400": 218, "7402": 218, "7404": 218, "7406": 218, "7408": 218, "7410": 218, "7412": 218, "7414": 218, "7416": 218, "7418": 218, "7420": 218, "7422": 218, "7424": 218, "7426": 218, "7428": 218, "7430": 218, "7432": 218, "7434": 218, "7436": 218, "7438": 218, "7440": 218, "7442": 218, "7444": 218, "7446": 218, "7448": 218, "7450": 218, "7452": 218, "7454": 218, "7456": 218, "7458": 218, "7460": 218, "7462": 218, "7464": 218, "7466": 218, "7468": 218, "7470": 218, "7472": 218, "7474": 218, "7476": 218, "7478": 218, "7480": 218, "7482": 218, "7484": 218, "7486": 218, "7488": 218, "7490": 218, "7492": 218, "7494": 218, "7496": 218, "7498": 218, "7500": 218, "7502": 218, "7504": 218, "7506": 218, "7508": 218, "7510": 218, "7512": 218, "7514": 218, "7516": 218, "7518": 218, "7520": 218, "7522": 218, "7524": 218, "7526": 218, "7528": 218, "7530": 218, "7532": 218, "7534": 218, "7536": 218, "7538": 218, "7540": 218, "7542": 218, "7544": 218, "7546": 218, "7548": 218, "7550": 218, "7552": 218, "7554": 218, "7556": 218, "7558": 218, "7560": 218, "7562": 218, "7564": 218, "7566": 218, "7568": 218, "7570": 218, "7572": 218, "7574": 218, "7576": 218, "7578": 218, "7580": 218, "7582": 218, "7584": 218, "7586": 218, "7588": 218, "7590": 218, "7592": 218, "7594": 218, "7596": 218, "7598": 218, "7600": 218, "7602": 218, "7604": 218, "7606": 218, "7608": 218, "7610": 218, "7612": 218, "7614": 218, "7616": 218, "7618": 218, "7620": 218, "7622": 218, "7624": 218, "7626": 218, "7628": 218, "7630": 218, "7632": 218, "7634": 218, "7636": 218, "7638": 218, "7640": 218, "7642": 218, "7644": 218, "7646": 218, "7648": 218, "7650": 218, "7652": 218, "7654": 218, "7656": 218, "7658": 218, "7660": 218, "7662": 218, "7664": 218, "7666": 218, "7668": 218, "7670": 218, "7672": 218, "7674": 218, "7676": 218, "7678": 218, "7680": 218, "7682": 218, "7684": 218, "7686": 218, "7688": 218, "7690": 218, "7692": 218, "7694": 218, "7696": 218, "7698": 218, "7700": 218, "7702": 218, "7704": 218, "7706": 218, "7708": 218, "7710": 218, "7712": 218, "7714": 218, "7716": 218, "7718": 218, "7720": 218, "7722": 218, "7724": 218, "7726": 218, "7728": 218, "7730": 218, "7732": 218, "7734": 218, "7736": 218, "7738": 218, "7740": 218, "7742": 218, "7744": 218, "7746": 218, "7748": 218, "7750": 218, "7752": 218, "7754": 218, "7756": 218, "7758": 218, "7760": 218, "7762": 218, "7764": 218, "7766": 218, "7768": 218, "7770": 218, "7772": 218, "7774": 218, "7776": 218, "7778": 218, "7780": 218, "7782": 218, "7784": 218, "7786": 218, "7788": 218, "7790": 218, "7792": 218, "7794": 218, "7796": 218, "7798": 218, "7800": 218, "7802": 218, "7804": 218, "7806": 218, "7808": 218, "7810": 218, "7812": 218, "7814": 218, "7816": 218, "7818": 218, "7820": 218, "7822": 218, "7824": 218, "7826": 218, "7828": 218, "7830": 218, "7832": 218, "7834": 218, "7836": 218, "7838": 218, "7842": 218, "7844": 218, "7846": 218, "7848": 218, "7850": 218, "7852": 218, "7854": 218, "7856": 218, "7858": 218, "7860": 218, "7862": 218, "7864": 218, "7866": 218, "7868": 218, "7870": 218, "7872": 218, "7874": 218, "7878": 218, "7880": 218, "7882": 218, "7884": 218, "7886": 218, "7888": 218, "7890": 218, "7892": 218, "7894": 218, "7896": 218, "7898": 218, "7900": 218, "7902": 218, "7904": 218, "7906": 218, "7908": 218, "7910": 218, "7912": 218, "7914": 218, "7916": 218, "7918": 218, "7920": 218, "7922": 218, "7924": 218, "7926": 218, "7928": 218, "7930": 218, "7932": 218, "7934": 218, "7936": 218, "7938": 218, "7940": 218, "7942": 218, "7944": 218, "7946": 218, "7948": 218, "7950": 218, "7952": 218, "7954": 218, "7956": 218, "7958": 218, "7960": 218, "7962": 218, "7964": 218, "7966": 218, "7968": 218, "7970": 218, "7972": 218, "7974": 218, "7976": 218, "7978": 218, "7980": 218, "7982": 218, "7984": 218, "7986": 218, "7988": 218, "7990": 218, "7992": 218, "7994": 218, "7996": 218, "7998": 218, "8002": 218, "8004": 218, "8006": 218, "8008": 218, "8012": 218, "8014": 218, "8016": 218, "8018": 218, "8022": 218, "8024": 218, "8026": 218, "8028": 218, "8030": 218, "8032": 218, "8034": 218, "8036": 218, "8038": 218, "8040": 218, "8042": 218, "8044": 218, "8046": 218, "8048": 218, "8050": 218, "8052": 218, "8054": 218, "8056": 218, "8058": 218, "8060": 218, "8062": 218, "8064": 218, "8066": 218, "8068": 218, "8070": 218, "8072": 218, "8074": 218, "8076": 218, "8078": 218, "8080": 218, "8082": 218, "8084": 218, "8086": 218, "8088": 218, "8090": 218, "8092": 218, "8094": 218, "8096": 218, "8098": 218, "8100": 218, "8102": [218, 953, 954], "8104": 218, "8106": 218, "8108": 218, "8110": 218, "8112": 218, "8114": 218, "8116": 218, "8118": 218, "8120": 218, "8122": 218, "8124": 218, "8126": 218, "8128": 218, "8130": 218, "8132": 218, "8134": 218, "8136": 218, "8138": 218, "8140": 218, "8142": 218, "8144": 218, "8146": 218, "8148": 218, "8150": 218, "8152": 218, "8154": 218, "8156": 218, "8158": 218, "8160": 218, "8162": 218, "8164": 218, "8166": 218, "8168": 218, "8170": 218, "8172": 218, "8174": 218, "8176": 218, "8178": 218, "8180": 218, "8182": 218, "8184": 218, "8186": 218, "8188": 218, "8190": 218, "8194": 218, "8196": 218, "8198": 218, "8200": 218, "8202": 218, "8204": 218, "8206": 218, "8208": 218, "8210": 218, "8212": 218, "8214": 218, "8216": 218, "8218": 218, "8220": 218, "8222": 218, "8224": 218, "8226": 218, "8228": 218, "8230": 218, "8232": 218, "8234": 218, "8238": 218, "8240": 218, "8242": 218, "8244": 218, "8246": 218, "8248": 218, "8250": 218, "8252": 218, "8254": 218, "8256": 218, "8258": 218, "8260": [218, 778], "8262": 218, "8264": 218, "8266": 218, "8268": 218, "8270": 218, "8272": 218, "8274": 218, "8276": 218, "8278": 218, "8280": 218, "8282": 218, "8284": 218, "8286": 218, "8288": 218, "8290": 218, "8292": 218, "8294": 218, "8296": 218, "8298": 218, "8300": 218, "8302": 218, "8304": 218, "8306": 218, "8308": 218, "8310": 218, "8312": 218, "8314": 218, "8316": 218, "8318": 218, "8320": 218, "8322": 218, "8324": 218, "8326": 218, "8328": 218, "8330": 218, "8332": 218, "8334": 218, "8336": 218, "8338": 218, "8340": 218, "8342": 218, "8344": 218, "8346": 218, "8348": 218, "8350": 218, "8352": 218, "8354": 218, "8356": 218, "8358": 218, "8360": 218, "8362": 218, "8364": 218, "8366": 218, "8368": 218, "8370": 218, "8372": 218, "8374": 218, "8376": 218, "8378": 218, "8380": 218, "8382": 218, "8384": 218, "8386": 218, "8388": 218, "8390": 218, "8392": 218, "8394": 218, "8396": 218, "8398": 218, "8400": 218, "8402": 218, "8404": 218, "8406": 218, "8408": 218, "8410": 218, "8412": 218, "8414": 218, "8416": 218, "8418": 218, "8420": 218, "8422": 218, "8424": 218, "8426": 218, "8428": 218, "8430": 218, "8432": 218, "8434": 218, "8436": 218, "8438": 218, "8440": 218, "8442": 218, "8444": 218, "8446": 218, "8448": 218, "8450": 218, "8452": 218, "8454": 218, "8456": 218, "8458": 218, "8460": 218, "8464": 218, "8466": 218, "8468": 218, "8470": 218, "8472": 218, "8474": 218, "8476": 218, "8478": 218, "8480": 218, "8482": 218, "8484": 218, "8486": 218, "8488": 218, "8490": 218, "8492": 218, "8494": 218, "8496": 218, "8498": 218, "8500": 218, "8502": 218, "8504": 218, "8506": 218, "8508": 218, "8510": 218, "8512": 218, "8514": 218, "8516": 218, "8518": 218, "8520": 218, "8522": 218, "8524": 218, "8526": 218, "8528": 218, "8530": 218, "8532": 218, "8534": 218, "8536": 218, "8538": 218, "8540": 218, "8542": 218, "8544": 218, "8546": 218, "8548": 218, "8550": 218, "8552": 218, "8554": 218, "8556": 218, "8558": 218, "8560": 218, "8562": 218, "8564": 218, "8566": 218, "8568": 218, "8570": 218, "8572": 218, "8574": 218, "8576": 218, "8578": 218, "8580": 218, "8582": 218, "8584": 218, "8586": 218, "8588": 218, "8590": 218, "8592": 218, "8594": 218, "8596": 218, "8598": 218, "8600": 218, "8602": 218, "8604": 218, "8606": 218, "8608": 218, "8610": 218, "8612": 218, "8614": 218, "8616": 218, "8618": 218, "8620": 218, "8622": 218, "8624": 218, "8626": 218, "8628": 218, "8630": 218, "8632": 218, "8634": 218, "8636": 218, "8638": 218, "8640": 218, "8642": 218, "8644": 218, "8646": 218, "8648": 218, "8650": 218, "8652": 218, "8654": 218, "8656": 218, "8658": 218, "8660": 218, "8662": 218, "8664": 218, "8666": 218, "8668": 218, "8670": 218, "8672": 218, "8674": 218, "8676": 218, "8678": 218, "8680": 218, "8682": 218, "8684": 218, "8686": 218, "8688": 218, "8690": 218, "8692": 218, "8694": 218, "8696": 218, "8698": 218, "8700": 218, "8702": 218, "8704": 218, "8706": 218, "8708": 218, "8710": 218, "8712": 218, "8714": 218, "8716": 218, "8718": 218, "8720": 218, "8722": 218, "8724": 218, "8726": 218, "8728": 218, "8730": 218, "8732": 218, "8734": 218, "8736": 218, "8738": 218, "8740": 218, "8742": 218, "8744": 218, "8746": 218, "8748": 218, "8750": 218, "8752": 218, "8754": 218, "8756": 218, "8758": 218, "8760": 218, "8762": 218, "8764": 218, "8766": 218, "8768": 218, "8770": 218, "8772": 218, "8774": 218, "8776": 218, "8778": 218, "8780": 218, "8782": 218, "8784": 218, "8786": 218, "8788": 218, "8790": 218, "8792": 218, "8794": 218, "8796": 218, "8798": 218, "8800": 218, "8802": 218, "8804": 218, "8806": 218, "8808": 218, "8810": 218, "8812": 218, "8814": 218, "8816": 218, "8818": 218, "8820": 218, "8822": 218, "8824": 218, "8826": 218, "8828": 218, "8830": 218, "8832": 218, "8834": 218, "8836": 218, "8838": 218, "8840": 218, "8842": 218, "8844": 218, "8846": 218, "8848": 218, "8850": 218, "8852": 218, "8854": 218, "8856": 218, "8858": 218, "8860": 218, "8862": 218, "8864": 218, "8866": 218, "8868": 218, "8870": 218, "8872": 218, "8874": 218, "8876": 218, "8878": 218, "8880": 218, "8882": 218, "8884": 218, "8886": 218, "8888": 218, "8890": 218, "8892": 218, "8894": 218, "8896": 218, "8898": 218, "8900": 218, "8902": 218, "8904": 218, "8906": 218, "8908": 218, "8910": 218, "8912": 218, "8914": 218, "8916": 218, "8918": 218, "8920": 218, "8922": 218, "8924": 218, "8926": 218, "8928": 218, "8930": 218, "8932": 218, "8934": 218, "8936": 218, "8938": 218, "8940": 218, "8942": 218, "8944": 218, "8946": 218, "8948": 218, "8950": 218, "8952": 218, "8954": 218, "8956": 218, "8958": 218, "8960": 218, "8962": 218, "8964": 218, "8966": 218, "8968": 218, "8970": 218, "8972": 218, "8974": 218, "8976": 218, "8978": 218, "8980": 218, "8982": 218, "8984": 218, "8986": 218, "8988": 218, "8990": 218, "8992": 218, "8994": 218, "8996": 218, "8998": 218, "9002": 218, "9004": 218, "9006": 218, "9008": 218, "9010": 218, "9012": 218, "9014": 218, "9016": 218, "9018": 218, "9020": 218, "9022": 218, "9024": 218, "9026": 218, "9028": 218, "9030": 218, "9032": 218, "9034": 218, "9036": 218, "9038": 218, "9040": 218, "9042": 218, "9044": 218, "9046": 218, "9048": 218, "9050": 218, "9052": 218, "9054": 218, "9056": 218, "9058": 218, "9060": 218, "9062": 218, "9064": 218, "9066": 218, "9068": 218, "9070": 218, "9072": 218, "9074": 218, "9076": 218, "9078": 218, "9080": 218, "9082": 218, "9084": 218, "9086": 218, "9088": 218, "9090": 218, "9092": 218, "9094": 218, "9096": 218, "9098": 218, "9100": 218, "9102": 218, "9104": 218, "9106": 218, "9108": 218, "9110": 218, "9112": 218, "9114": 218, "9116": 218, "9118": 218, "9120": 218, "9122": 218, "9124": 218, "9126": 218, "9128": 218, "9130": 218, "9132": 218, "9134": 218, "9136": 218, "9138": 218, "9140": 218, "9142": 218, "9144": 218, "9146": 218, "9148": 218, "9150": 218, "9152": 218, "9154": 218, "9156": 218, "9158": 218, "9160": 218, "9162": 218, "9164": 218, "9166": 218, "9168": 218, "9170": 218, "9172": 218, "9174": 218, "9176": 218, "9178": 218, "9180": 218, "9182": 218, "9184": 218, "9186": 218, "9188": 218, "9190": 218, "9192": 218, "9194": 218, "9196": 218, "9198": 218, "9200": 218, "9202": 218, "9204": 218, "9206": 218, "9208": 218, "9210": 218, "9212": 218, "9214": 218, "9216": 218, "9218": 218, "9220": 218, "9222": 218, "9224": 218, "9226": 218, "9228": 218, "9230": 218, "9232": 218, "9234": 218, "9236": 218, "9238": 218, "9240": 218, "9242": 218, "9244": 218, "9246": 218, "9248": 218, "9250": 218, "9252": 218, "9254": 218, "9256": 218, "9258": 218, "9260": 218, "9262": 218, "9264": 218, "9266": 218, "9268": 218, "9270": 218, "9272": 218, "9274": 218, "9276": 218, "9278": 218, "9280": 218, "9282": 218, "9284": 218, "9286": 218, "9288": 218, "9290": 218, "9292": 218, "9294": 218, "9296": 218, "9298": 218, "9300": 218, "9302": 218, "9304": 218, "9306": 218, "9308": 218, "9310": 218, "9312": 218, "9314": 218, "9316": 218, "9318": 218, "9320": 218, "9322": 218, "9324": 218, "9326": 218, "9328": 218, "9330": 218, "9332": 218, "9334": 218, "9336": 218, "9338": 218, "9340": 218, "9342": 218, "9344": 218, "9346": 218, "9348": 218, "9350": 218, "9352": 218, "9354": 218, "9356": 218, "9358": 218, "9360": 218, "9362": 218, "9364": 218, "9366": 218, "9368": 218, "9370": 218, "9372": 218, "9374": 218, "9376": 218, "9378": 218, "9380": 218, "9382": 218, "9384": 218, "9386": 218, "9388": 218, "9390": 218, "9392": 218, "9394": [218, 838], "9396": 218, "9398": 218, "9400": 218, "9402": 218, "9404": 218, "9406": 218, "9408": 218, "9410": 218, "9412": 218, "9414": 218, "9416": 218, "9418": 218, "9420": 218, "9422": 218, "9424": 218, "9426": 218, "9428": 218, "9430": 218, "9432": 218, "9434": 218, "9436": 218, "9438": 218, "9440": 218, "9442": 218, "9444": 218, "9446": 218, "9448": 218, "9450": 218, "9452": 218, "9454": 218, "9456": 218, "9458": 218, "9460": 218, "9462": 218, "9464": 218, "9466": 218, "9468": 218, "9470": 218, "9472": 218, "9474": 218, "9476": 218, "9478": 218, "9480": 218, "9482": 218, "9484": 218, "9486": 218, "9488": 218, "9490": 218, "9492": 218, "9494": 218, "9496": 218, "9498": 218, "9500": 218, "9502": 218, "9504": 218, "9506": 218, "9508": 218, "9510": 218, "9512": 218, "9514": 218, "9516": 218, "9518": 218, "9520": 218, "9522": 218, "9524": 218, "9526": 218, "9528": 218, "9530": 218, "9532": 218, "9534": 218, "9536": 218, "9538": 218, "9540": 218, "9542": 218, "9544": 218, "9546": 218, "9548": 218, "9550": 218, "9552": 218, "9554": 218, "9556": 218, "9558": 218, "9560": 218, "9562": 218, "9564": 218, "9566": 218, "9568": 218, "9570": 218, "9572": 218, "9574": 218, "9576": 218, "9578": 218, "9580": 218, "9582": 218, "9584": 218, "9586": 218, "9588": 218, "9590": 218, "9592": 218, "9594": 218, "9596": 218, "9598": 218, "9600": 218, "9602": 218, "9604": 218, "9606": 218, "9608": 218, "9610": 218, "9612": 218, "9614": 218, "9616": 218, "9618": 218, "9620": 218, "9622": 218, "9624": 218, "9626": 218, "9628": 218, "9630": 218, "9632": 218, "9634": 218, "9636": 218, "9638": 218, "9640": 218, "9642": 218, "9644": 218, "9646": 218, "9648": 218, "9650": 218, "9652": 218, "9654": 218, "9656": 218, "9658": 218, "9660": 218, "9662": 218, "9664": 218, "9666": 218, "9668": 218, "9670": 218, "9672": 218, "9674": 218, "9676": 218, "9678": 218, "9680": 218, "9682": 218, "9684": 218, "9686": 218, "9688": 218, "9690": 218, "9692": 218, "9694": 218, "9696": 218, "9698": 218, "9700": 218, "9702": 218, "9704": 218, "9706": 218, "9708": 218, "9710": 218, "9712": 218, "9714": 218, "9716": 218, "9718": 218, "9720": 218, "9722": 218, "9724": 218, "9726": 218, "9728": 218, "9730": 218, "9732": 218, "9734": 218, "9736": 218, "9738": 218, "9740": 218, "9742": 218, "9744": 218, "9746": 218, "9748": 218, "9750": 218, "9752": 218, "9754": 218, "9756": 218, "9758": 218, "9760": 218, "9762": 218, "9764": 218, "9766": 218, "9768": [218, 228], "9770": 218, "9772": 218, "9774": 218, "9776": 218, "9778": 218, "9780": 218, "9782": 218, "9784": 218, "9786": 218, "9788": 218, "9790": 218, "9792": 218, "9794": 218, "9796": 218, "9798": 218, "9800": 218, "9802": 218, "9804": 218, "9806": 218, "9808": 218, "9810": 218, "9812": 218, "9814": 218, "9816": 218, "9818": 218, "9820": 218, "9822": 218, "9824": 218, "9826": 218, "9828": 218, "9830": 218, "9832": 218, "9834": 218, "9836": 218, "9838": 218, "9840": 218, "9842": 218, "9844": 218, "9846": 218, "9848": 218, "9850": 218, "9852": 218, "9854": 218, "9856": 218, "9858": 218, "9860": 218, "9862": 218, "9864": 218, "9866": 218, "9868": 218, "9870": 218, "9872": 218, "9874": 218, "9876": 218, "9878": 218, "9880": 218, "9882": 218, "9884": 218, "9886": 218, "9888": 218, "9890": 218, "9892": 218, "9894": 218, "9896": 218, "9898": 218, "9900": 218, "9902": 218, "9904": 218, "9906": 218, "9908": 218, "9910": 218, "9912": 218, "9914": 218, "9916": 218, "9918": 218, "9920": 218, "9922": 218, "9924": 218, "9926": 218, "9928": 218, "9930": 218, "9932": 218, "9934": 218, "9936": 218, "9938": 218, "9940": 218, "9942": 218, "9944": 218, "9946": 218, "9948": 218, "9950": 218, "9952": 218, "9954": 218, "9956": 218, "9958": 218, "9960": 218, "9962": 218, "9964": 218, "9966": 218, "9968": 218, "9970": 218, "9972": 218, "9974": 218, "9976": 218, "9978": 218, "9980": 218, "9982": 218, "9984": 218, "9986": 218, "9988": 218, "9990": 218, "9992": 218, "9994": 218, "9996": 218, "9998": 218, "10002": 218, "10004": 218, "10006": 218, "10008": 218, "10010": 218, "10012": 218, "10014": 218, "10016": 218, "10018": 218, "10020": 218, "10022": 218, "10024": 218, "10026": 218, "10028": 218, "10030": 218, "10032": 218, "10034": 218, "10036": 218, "10038": 218, "10040": 218, "10042": 218, "10044": 218, "10046": 218, "10048": 218, "10050": 218, "10052": 218, "10054": 218, "10056": 218, "10058": 218, "10060": 218, "10062": 218, "10064": 218, "10066": 218, "10068": 218, "10070": 218, "10072": 218, "10074": 218, "10076": 218, "10078": 218, "10080": 218, "10082": 218, "10084": 218, "10086": 218, "10088": 218, "10090": 218, "10092": 218, "10094": 218, "10096": 218, "10098": 218, "10100": 218, "10102": 218, "10104": 218, "10106": 218, "10108": 218, "10110": 218, "10112": 218, "10114": 218, "10116": 218, "10118": 218, "10120": 218, "10122": 218, "10124": 218, "10126": 218, "10128": 218, "10130": 218, "10132": 218, "10134": 218, "10136": 218, "10138": 218, "10140": 218, "10142": 218, "10144": 218, "10146": 218, "10148": 218, "10150": 218, "10152": 218, "10154": 218, "10156": 218, "10158": 218, "10160": 218, "10162": 218, "10164": 218, "10166": 218, "10168": 218, "10170": 218, "10172": 218, "10174": 218, "10176": 218, "10178": 218, "10180": 218, "10182": 218, "10184": 218, "10186": 218, "10188": 218, "10190": 218, "10192": 218, "10194": 218, "10196": 218, "10198": 218, "10200": 218, "10202": 218, "10204": 218, "10206": 218, "10208": 218, "10210": 218, "10212": 218, "10214": 218, "10216": 218, "10218": 218, "10220": 218, "10222": 218, "10224": 218, "10226": [218, 267], "10228": 218, "10230": 218, "10232": 218, "10234": 218, "10236": 218, "10238": 218, "10240": 218, "10242": 218, "10244": 218, "10246": 218, "10248": 218, "10250": 218, "10252": 218, "10254": 218, "10256": 218, "10258": 218, "10260": 218, "10262": 218, "10264": 218, "10266": 218, "10268": 218, "10270": 218, "10272": 218, "10274": 218, "10276": 218, "10278": 218, "10280": 218, "10282": 218, "10284": 218, "10286": 218, "10288": 218, "10290": 218, "10292": 218, "10294": 218, "10296": 218, "10298": 218, "10300": 218, "10302": 218, "10304": 218, "10306": 218, "10308": 218, "10310": 218, "10312": 218, "10314": 218, "10316": 218, "10318": 218, "10320": 218, "10322": 218, "10324": 218, "10326": 218, "10328": 218, "10330": 218, "10332": 218, "10334": 218, "10336": 218, "10338": 218, "10340": 218, "10342": 218, "10344": 218, "10346": 218, "10348": 218, "10350": 218, "10352": 218, "10354": 218, "10356": 218, "10358": 218, "10360": 218, "10362": 218, "10364": 218, "10366": 218, "10368": 218, "10370": 218, "10372": 218, "10374": 218, "10376": 218, "10378": 218, "10380": 218, "10382": 218, "10384": 218, "10386": 218, "10388": 218, "10390": 218, "10392": 218, "10394": 218, "10396": 218, "10398": 218, "10400": 218, "10402": 218, "10404": 218, "10406": 218, "10408": 218, "10410": 218, "10412": 218, "10414": 218, "10416": 218, "10418": 218, "10420": 218, "10422": 218, "10424": 218, "10426": 218, "10428": 218, "10430": 218, "10432": 218, "10434": 218, "10436": 218, "10438": 218, "10440": 218, "10442": 218, "10444": 218, "10446": 218, "10448": 218, "10450": 218, "10452": 218, "10454": 218, "10456": 218, "10458": 218, "10460": 218, "10462": 218, "10464": 218, "10466": 218, "10468": 218, "10470": 218, "10472": 218, "10474": 218, "10476": 218, "10478": 218, "10480": 218, "10482": 218, "10484": 218, "10486": 218, "10488": 218, "10490": 218, "10492": 218, "10494": 218, "10496": 218, "10498": 218, "10500": 218, "10502": 218, "10504": 218, "10506": 218, "10508": 218, "10510": 218, "10512": 218, "10514": 218, "10516": 218, "10518": 218, "10520": 218, "10522": 218, "10524": 218, "10526": 218, "10528": 218, "10530": 218, "10532": 218, "10534": 218, "10536": 218, "10538": 218, "10540": 218, "10542": 218, "10544": 218, "10546": 218, "10548": 218, "10550": 218, "10552": [218, 964], "10554": 218, "10556": 218, "10558": 218, "10560": 218, "10562": 218, "10564": 218, "10566": 218, "10568": 218, "10570": 218, "10572": 218, "10574": 218, "10576": 218, "10578": 218, "10580": 218, "10582": 218, "10584": 218, "10586": 218, "10588": 218, "10590": 218, "10592": 218, "10594": 218, "10596": 218, "10598": 218, "10600": 218, "10602": 218, "10604": 218, "10606": 218, "10608": 218, "10610": 218, "10612": 218, "10614": 218, "10616": 218, "10618": 218, "10620": 218, "10622": 218, "10624": 218, "10626": 218, "10628": 218, "10630": 218, "10632": 218, "10634": 218, "10636": 218, "10638": 218, "10640": 218, "10642": 218, "10644": 218, "10646": 218, "10648": 218, "10650": 218, "10652": 218, "10654": 218, "10656": 218, "10658": 218, "10660": 218, "10662": 218, "10664": 218, "10666": 218, "10668": 218, "10670": 218, "10672": 218, "10674": 218, "10676": 218, "10678": 218, "10680": 218, "10682": 218, "10684": 218, "10686": 218, "10688": 218, "10690": 218, "10692": 218, "10694": 218, "10696": 218, "10698": 218, "10700": 218, "10702": 218, "10704": 218, "10706": 218, "10708": 218, "10710": 218, "10712": 218, "10714": 218, "10716": 218, "10718": 218, "10720": 218, "10722": 218, "10724": 218, "10726": 218, "10728": 218, "10730": 218, "10732": 218, "10734": 218, "10736": 218, "10738": 218, "10740": 218, "10742": 218, "10744": 218, "10746": 218, "10748": 218, "10750": 218, "10752": 218, "10754": 218, "10756": 218, "10758": 218, "10760": 218, "10762": 218, "10764": 218, "10766": 218, "10768": 218, "10770": 218, "10772": 218, "10774": 218, "10776": 218, "10778": 218, "10780": 218, "10782": 218, "10784": 218, "10786": 218, "10788": 218, "10790": 218, "10792": 218, "10794": 218, "10796": 218, "10798": 218, "10800": 218, "10802": 218, "10804": 218, "10806": 218, "10808": 218, "10810": 218, "10812": 218, "10814": 218, "10816": 218, "10818": 218, "10820": 218, "10822": 218, "10824": 218, "10826": 218, "10828": 218, "10830": 218, "10832": 218, "10834": 218, "10836": 218, "10838": 218, "10840": 218, "10842": 218, "10844": 218, "10846": 218, "10848": 218, "10850": 218, "10852": 218, "10854": 218, "10856": 218, "10858": 218, "10860": 218, "10862": 218, "10864": 218, "10866": 218, "10868": 218, "10870": 218, "10872": 218, "10874": 218, "10876": 218, "10878": 218, "10880": 218, "10882": 218, "10884": 218, "10886": 218, "10888": 218, "10890": 218, "10892": 218, "10894": 218, "10896": 218, "10898": 218, "10900": 218, "10902": 218, "10904": 218, "10906": 218, "10908": 218, "10910": 218, "10912": 218, "10914": 218, "10916": 218, "10918": 218, "10920": 218, "10922": 218, "10924": 218, "10926": 218, "10928": 218, "10930": 218, "10932": 218, "10934": 218, "10936": 218, "10938": 218, "10940": 218, "10942": 218, "10944": 218, "10946": 218, "10948": 218, "10950": 218, "10952": 218, "10954": 218, "10956": 218, "10958": 218, "10960": 218, "10962": 218, "10964": 218, "10966": 218, "10968": 218, "10970": 218, "10972": 218, "10974": 218, "10976": 218, "10978": 218, "10980": 218, "10982": 218, "10984": 218, "10986": 218, "10988": 218, "10990": 218, "10992": 218, "10994": 218, "10996": 218, "10998": 218, "11000": 218, "11002": 218, "11004": 218, "11006": 218, "11008": 218, "11010": 218, "11012": 218, "11014": 218, "11016": 218, "11018": 218, "11020": 218, "11022": 218, "11024": 218, "11026": 218, "11028": 218, "11030": 218, "11032": 218, "11034": 218, "11036": 218, "11038": 218, "11040": 218, "11042": 218, "11044": 218, "11046": 218, "11048": 218, "11050": 218, "11052": 218, "11054": 218, "11056": 218, "11058": 218, "11060": 218, "11062": 218, "11064": 218, "11066": 218, "11068": 218, "11070": 218, "11072": 218, "11074": 218, "11076": 218, "11078": 218, "11080": 218, "11082": 218, "11084": 218, "11086": 218, "11088": 218, "11090": 218, "11092": 218, "11094": 218, "11096": 218, "11098": 218, "11100": 218, "11102": 218, "11104": 218, "11106": 218, "11108": 218, "11110": 218, "11112": 218, "11114": 218, "11116": 218, "11118": 218, "11120": 218, "11122": 218, "11124": 218, "11126": 218, "11128": 218, "11130": 218, "11132": 218, "11134": 218, "11136": 218, "11138": 218, "11140": 218, "11142": 218, "11144": 218, "11146": 218, "11148": 218, "11150": 218, "11152": 218, "11154": 218, "11156": 218, "11158": 218, "11160": 218, "11162": 218, "11164": 218, "11166": 218, "11168": 218, "11170": 218, "11172": 218, "11174": 218, "11176": 218, "11178": 218, "11180": 218, "11182": 218, "11184": 218, "11186": 218, "11188": 218, "11190": 218, "11192": 218, "11194": 218, "11196": 218, "11198": 218, "11200": 218, "11202": 218, "11204": 218, "11206": 218, "11208": 218, "11210": 218, "11212": 218, "11214": 218, "11216": 218, "11218": 218, "11220": 218, "11222": 218, "11224": 218, "11226": 218, "11228": 218, "11230": 218, "11232": 218, "11234": 218, "11236": 218, "11238": 218, "11240": 218, "11242": 218, "11244": 218, "11246": 218, "11248": 218, "11250": 218, "11252": 218, "11254": 218, "11256": 218, "11258": 218, "11260": 218, "11262": 218, "11264": 218, "11266": 218, "11268": 218, "11270": 218, "11272": 218, "11274": 218, "11276": 218, "11278": 218, "11280": 218, "11282": 218, "11284": 218, "11286": 218, "11288": 218, "11290": 218, "11292": 218, "11294": 218, "11296": 218, "11298": 218, "11300": 218, "11302": 218, "11304": 218, "11306": 218, "11308": 218, "11310": 218, "11312": 218, "11314": 218, "11316": 218, "11318": 218, "11320": 218, "11322": 218, "11324": 218, "11326": 218, "11328": 218, "11330": 218, "11332": 218, "11334": 218, "11336": 218, "11340": 218, "11342": 218, "11344": 218, "11346": 218, "11348": [218, 267], "11350": 218, "11352": 218, "11354": 218, "11356": 218, "11358": 218, "11360": 218, "11362": 218, "11364": 218, "11366": 218, "11368": 218, "11370": 218, "11372": 218, "11374": 218, "11376": 218, "11378": 218, "11380": 218, "11382": 218, "11384": 218, "11386": 218, "11388": 218, "11390": 218, "11392": 218, "11394": 218, "11396": 218, "11398": 218, "11400": 218, "11402": 218, "11404": 218, "11406": 218, "11408": 218, "11410": 218, "11412": 218, "11414": 218, "11416": 218, "11418": 218, "11420": 218, "11422": 218, "11424": 218, "11426": 218, "11428": 218, "11430": 218, "11432": 218, "11434": 218, "11436": 218, "11438": 218, "11440": 218, "11442": 218, "11444": 218, "11446": 218, "11448": 218, "11450": 218, "11452": 218, "11454": 218, "11456": 218, "11458": 218, "11460": 218, "11462": 218, "11464": 218, "11466": 218, "11468": 218, "11470": 218, "11472": 218, "11474": 218, "11476": 218, "11478": 218, "11480": 218, "11482": 218, "11484": 218, "11486": 218, "11488": 218, "11490": 218, "11492": 218, "11494": 218, "11496": 218, "11498": 218, "11500": 218, "11502": 218, "11504": 218, "11506": 218, "11508": 218, "11510": 218, "11512": 218, "11514": 218, "11516": 218, "11518": 218, "11520": 218, "11522": 218, "11524": 218, "11526": 218, "11528": 218, "11530": 218, "11532": 218, "11534": 218, "11536": 218, "11538": 218, "11540": 218, "11542": 218, "11544": 218, "11546": 218, "11548": 218, "11550": 218, "11552": 218, "11554": 218, "11556": 218, "11558": 218, "11560": 218, "11562": 218, "11564": 218, "11566": 218, "11568": 218, "11570": 218, "11572": 218, "11574": 218, "11576": 218, "11578": 218, "11580": 218, "11582": 218, "11584": 218, "11586": 218, "11588": 218, "11590": 218, "11592": 218, "11594": 218, "11596": 218, "11598": 218, "11600": 218, "11602": 218, "11604": 218, "11606": 218, "11608": 218, "11610": 218, "11612": 218, "11614": 218, "11616": 218, "11618": 218, "11620": 218, "11622": 218, "11624": 218, "11626": 218, "11628": 218, "11630": 218, "11634": 218, "11636": 218, "11638": 218, "11640": 218, "11642": 218, "11644": 218, "11646": 218, "11648": 218, "11650": 218, "11652": 218, "11654": 218, "11656": 218, "11658": 218, "11660": 218, "11662": 218, "11664": 218, "11666": 218, "11668": 218, "11670": 218, "11672": 218, "11674": 218, "11676": 218, "11678": 218, "11680": 218, "11682": 218, "11684": 218, "11686": 218, "11688": 218, "11690": 218, "11692": 218, "11694": 218, "11696": 218, "11698": 218, "11700": 218, "11702": 218, "11704": 218, "11706": 218, "11708": 218, "11710": 218, "11712": 218, "11714": 218, "11716": 218, "11718": 218, "11720": 218, "11722": 218, "11724": 218, "11726": 218, "11728": 218, "11730": 218, "11732": 218, "11734": 218, "11736": 218, "11738": 218, "11740": 218, "11742": 218, "11744": 218, "11746": 218, "11748": 218, "11750": 218, "11752": 218, "11754": 218, "11756": 218, "11758": 218, "11760": 218, "11762": 218, "11764": 218, "11766": 218, "11768": 218, "11770": 218, "11772": 218, "11774": 218, "11776": 218, "11778": 218, "11780": 218, "11782": 218, "11784": 218, "11786": 218, "11788": 218, "11790": 218, "11792": 218, "11794": 218, "11796": 218, "11798": 218, "11800": 218, "11802": 218, "11804": 218, "11806": 218, "11808": 218, "11810": 218, "11812": 218, "11814": 218, "11816": 218, "11818": 218, "11820": 218, "11822": 218, "11824": 218, "11826": 218, "11828": 218, "11830": 218, "11832": 218, "11834": 218, "11836": 218, "11838": 218, "11840": 218, "11842": 218, "11844": 218, "11846": 218, "11848": 218, "11850": 218, "11852": 218, "11854": 218, "11856": 218, "11858": 218, "11860": 218, "11862": 218, "11864": 218, "11866": 218, "11868": 218, "11870": 218, "11872": 218, "11874": 218, "11876": 218, "11878": 218, "11880": 218, "11882": 218, "11884": 218, "11886": 218, "11888": 218, "11890": 218, "11892": 218, "11894": 218, "11896": 218, "11898": 218, "11900": 218, "11902": 218, "11904": 218, "11906": 218, "11908": 218, "11910": 218, "11912": 218, "11914": 218, "11916": 218, "11918": 218, "11920": 218, "11922": 218, "11924": 218, "11926": 218, "11928": 218, "11930": 218, "11932": 218, "11934": 218, "11936": 218, "11938": 218, "11940": 218, "11942": 218, "11944": 218, "11946": 218, "11948": 218, "11950": 218, "11952": 218, "11954": 218, "11956": 218, "11958": 218, "11960": 218, "11962": 218, "11964": 218, "11966": 218, "11968": 218, "11970": 218, "11972": 218, "11974": 218, "11976": 218, "11978": 218, "11980": 218, "11982": 218, "11984": 218, "11986": 218, "11988": 218, "11990": 218, "11992": 218, "11994": 218, "11996": 218, "11998": 218, "12000": 218, "12002": 218, "12004": 218, "12006": 218, "12008": 218, "12010": 218, "12012": 218, "12014": 218, "12016": 218, "12018": 218, "12020": 218, "12022": 218, "12024": 218, "12026": 218, "12028": 218, "12030": 218, "12032": 218, "12034": 218, "12036": 218, "12038": 218, "12040": 218, "12042": 218, "12044": 218, "12046": 218, "12048": 218, "12050": 218, "12052": 218, "12054": 218, "12056": 218, "12058": 218, "12060": 218, "12062": 218, "12064": 218, "12066": 218, "12068": 218, "12070": 218, "12072": 218, "12074": 218, "12076": 218, "12078": 218, "12080": 218, "12082": 218, "12084": 218, "12086": 218, "12088": 218, "12090": 218, "12092": 218, "12094": 218, "12096": 218, "12098": 218, "12100": 218, "12102": 218, "12104": 218, "12106": 218, "12108": 218, "12110": 218, "12112": 218, "12114": 218, "12116": 218, "12118": 218, "12120": 218, "12122": 218, "12124": 218, "12126": 218, "12128": 218, "12130": 218, "12132": 218, "12134": 218, "12136": 218, "12138": 218, "12140": 218, "12142": 218, "12144": 218, "12146": 218, "12148": 218, "12150": 218, "12152": 218, "12154": 218, "12158": 218, "12160": 218, "12162": 218, "12164": 218, "12166": 218, "12168": 218, "12170": 218, "12172": 218, "12174": 218, "12176": 218, "12178": 218, "12180": 218, "12182": 218, "12184": 218, "12186": 218, "12188": 218, "12190": 218, "12192": 218, "12194": 218, "12196": 218, "12198": 218, "12200": 218, "12202": 218, "12204": 218, "12206": 218, "12208": 218, "12210": 218, "12212": 218, "12214": 218, "12216": 218, "12218": 218, "12220": 218, "12222": 218, "12224": 218, "12226": 218, "12228": 218, "12230": 218, "12232": 218, "12234": 218, "12236": 218, "12238": 218, "12240": 218, "12242": 218, "12244": 218, "12246": 218, "12248": 218, "12250": 218, "12252": 218, "12254": 218, "12256": 218, "12258": 218, "12260": 218, "12262": 218, "12264": 218, "12266": 218, "12268": 218, "12270": 218, "12272": 218, "12274": 218, "12276": 218, "12278": 218, "12280": 218, "12282": 218, "12284": 218, "12286": 218, "12288": 218, "12290": 218, "12292": 218, "12294": 218, "12296": 218, "12298": 218, "12300": 218, "12302": 218, "12304": 218, "12306": 218, "12308": 218, "12310": 218, "12312": 218, "12314": 218, "12316": 218, "12318": 218, "12320": 218, "12322": 218, "12324": 218, "12326": 218, "12328": 218, "12330": 218, "12332": 218, "12334": 218, "12336": 218, "12338": 218, "12340": 218, "12342": 218, "12344": 218, "12346": 218, "12348": 218, "12350": 218, "12352": 218, "12354": 218, "12356": 218, "12358": 218, "12360": 218, "12362": 218, "12364": 218, "12366": 218, "12368": 218, "12370": 218, "12372": 218, "12374": 218, "12376": 218, "12378": 218, "12380": 218, "12382": 218, "12384": 218, "12386": 218, "12388": 218, "12390": 218, "12392": 218, "12394": 218, "12396": 218, "12398": 218, "12400": 218, "12402": 218, "12404": 218, "12406": 218, "12408": 218, "12410": 218, "12412": 218, "12414": 218, "12416": 218, "12418": 218, "12420": 218, "12422": 218, "12424": 218, "12426": 218, "12428": 218, "12430": 218, "12432": 218, "12434": 218, "12436": 218, "12438": 218, "12440": 218, "12442": 218, "12444": 218, "12446": 218, "12448": 218, "12450": 218, "12452": 218, "12454": 218, "12456": 218, "12458": 218, "12460": 218, "12462": 218, "12464": 218, "12466": 218, "12468": 218, "12470": 218, "12472": 218, "12474": 218, "12476": 218, "12478": 218, "12480": 218, "12482": 218, "12484": 218, "12486": 218, "12488": 218, "12490": 218, "12492": 218, "12494": 218, "12496": 218, "12498": 218, "12500": 218, "12502": 218, "12504": 218, "12506": 218, "12508": 218, "12510": 218, "12512": 218, "12514": 218, "12516": 218, "12518": 218, "12520": 218, "12522": 218, "12524": 218, "12526": 218, "12528": 218, "12530": 218, "12532": 218, "12534": 218, "12536": 218, "12538": 218, "12540": 218, "12542": 218, "12544": 218, "12546": 218, "12548": 218, "12550": 218, "12552": 218, "12554": 218, "12556": 218, "12558": 218, "12560": 218, "12562": 218, "12564": 218, "12566": 218, "12568": 218, "12570": 218, "12572": 218, "12574": 218, "12576": 218, "12578": 218, "12580": 218, "12582": 218, "12584": 218, "12586": 218, "12588": 218, "12590": 218, "12592": 218, "12594": 218, "12596": 218, "12598": 218, "12600": 218, "12602": 218, "12604": 218, "12606": 218, "12608": 218, "12610": 218, "12612": 218, "12614": 218, "12616": 218, "12618": 218, "12620": 218, "12622": 218, "12624": 218, "12626": 218, "12628": 218, "12630": 218, "12632": 218, "12634": 218, "12636": 218, "12638": 218, "12640": 218, "12642": 218, "12644": 218, "12646": 218, "12648": 218, "12650": 218, "12652": 218, "12654": 218, "12656": 218, "12658": 218, "12660": 218, "12662": 218, "12664": 218, "12666": 218, "12668": 218, "12670": 218, "12672": 218, "12674": 218, "12676": 218, "12678": 218, "12680": 218, "12682": 218, "12684": 218, "12686": 218, "12688": 218, "12690": 218, "12692": 218, "12694": 218, "12696": 218, "12698": 218, "12700": 218, "12702": 218, "12704": 218, "12706": 218, "12708": 218, "12710": 218, "12712": 218, "12714": 218, "12716": 218, "12718": 218, "12720": 218, "12722": 218, "12724": 218, "12726": 218, "12728": 218, "12730": 218, "12732": 218, "12734": 218, "12736": 218, "12738": 218, "12740": 218, "12742": 218, "12744": 218, "12746": 218, "12748": 218, "12750": 218, "12752": 218, "12754": 218, "12756": 218, "12758": 218, "12760": 218, "12762": 218, "12764": 218, "12766": 218, "12768": 218, "12770": 218, "12772": 218, "12774": 218, "12776": 218, "12778": 218, "12780": 218, "12782": 218, "12784": 218, "12786": 218, "12788": 218, "12790": 218, "12792": 218, "12794": 218, "12796": 218, "12798": 218, "12800": 218, "12802": 218, "12804": 218, "12806": 218, "12808": 218, "12810": 218, "12812": 218, "12814": 218, "12816": 218, "12818": 218, "12820": 218, "12822": 218, "12824": 218, "12826": 218, "12828": 218, "12830": 218, "12832": 218, "12834": 218, "12836": 218, "12838": 218, "12840": 218, "12842": 218, "12844": 218, "12846": 218, "12848": 218, "12850": 218, "12852": 218, "12854": 218, "12856": 218, "12858": 218, "12860": 218, "12862": 218, "12864": 218, "12866": 218, "12868": 218, "12870": 218, "12872": 218, "12874": 218, "12876": 218, "12878": 218, "12880": 218, "12882": 218, "12884": 218, "12886": 218, "12888": 218, "12890": 218, "12892": 218, "12894": 218, "12896": 218, "12898": 218, "12900": 218, "12902": 218, "12904": 218, "12906": 218, "12908": 218, "12910": 218, "12912": 218, "12914": 218, "12916": 218, "12918": 218, "12920": 218, "12922": 218, "12924": 218, "12926": 218, "12928": 218, "12930": 218, "12932": 218, "12934": 218, "12936": 218, "12938": 218, "12940": 218, "12942": 218, "12944": 218, "12946": 218, "12948": 218, "12950": 218, "12952": 218, "12954": 218, "12956": 218, "12958": 218, "12960": 218, "12962": 218, "12964": 218, "12966": 218, "12968": 218, "12970": 218, "12972": 218, "12974": 218, "12976": 218, "12978": 218, "12980": 218, "12982": 218, "12984": 218, "12986": 218, "12988": 218, "12990": 218, "12992": 218, "12994": 218, "12996": 218, "12998": 218, "13000": 218, "13002": 218, "13004": 218, "13006": 218, "13008": 218, "13010": 218, "13012": 218, "13014": 218, "13016": 218, "13018": 218, "13020": 218, "13022": 218, "13024": 218, "13026": 218, "13028": 218, "13030": 218, "13032": 218, "13034": 218, "13036": 218, "13038": 218, "13040": 218, "13042": 218, "13044": 218, "13046": 218, "13048": 218, "13050": 218, "13052": 218, "13054": 218, "13056": 218, "13058": 218, "13060": 218, "13062": 218, "13064": 218, "13066": 218, "13068": 218, "13070": 218, "13072": 218, "13074": 218, "13076": 218, "13078": 218, "13080": 218, "13082": 218, "13084": 218, "13086": 218, "13088": 218, "13090": 218, "13092": 218, "13094": 218, "13096": 218, "13098": 218, "13100": 218, "13102": 218, "13104": 218, "13106": 218, "13108": 218, "13110": 218, "13112": 218, "13114": 218, "13116": 218, "13118": 218, "13120": 218, "13122": 218, "13124": 218, "13126": 218, "13128": 218, "13130": 218, "13132": 218, "13134": 218, "13136": 218, "13138": 218, "13140": 218, "13142": 218, "13144": 218, "13146": 218, "13148": 218, "13150": 218, "13152": 218, "13154": 218, "13156": 218, "13158": 218, "13160": 218, "13162": 218, "13164": 218, "13166": 218, "13168": 218, "13170": 218, "13172": 218, "13174": 218, "13176": 218, "13178": 218, "13180": 218, "13182": 218, "13184": 218, "13186": 218, "13188": 218, "13190": 218, "13192": 218, "13194": 218, "13196": 218, "13198": 218, "13200": 218, "13202": 218, "13204": 218, "13206": 218, "13208": 218, "13210": 218, "13212": 218, "13214": 218, "13216": 218, "13218": 218, "13220": 218, "13222": 218, "13224": 218, "13226": 218, "13228": 218, "13230": 218, "13232": 218, "13234": 218, "13236": 218, "13238": 218, "13240": 218, "13242": 218, "13244": 218, "13246": 218, "13248": 218, "13250": 218, "13252": 218, "13254": 218, "13256": 218, "13258": 218, "13260": 218, "13262": 218, "13264": 218, "13266": 218, "13268": 218, "13270": 218, "13272": 218, "13274": 218, "13276": 218, "13278": 218, "13280": 218, "13282": 218, "13284": 218, "13286": 218, "13288": 218, "13290": 218, "13292": 218, "13294": 218, "13296": 218, "13298": 218, "13300": 218, "13302": 218, "13304": 218, "13306": 218, "13308": 218, "13310": 218, "13312": 218, "13314": 218, "13316": 218, "13318": 218, "13320": 218, "13322": 218, "13324": 218, "13326": 218, "13328": 218, "13330": 218, "13332": 218, "13334": 218, "13336": 218, "13338": 218, "13340": 218, "13342": 218, "13344": 218, "13346": 218, "13348": 218, "13350": 218, "13352": 218, "13354": 218, "13356": 218, "13358": 218, "13360": 218, "13362": 218, "13364": 218, "13366": 218, "13368": 218, "13370": 218, "13372": 218, "13374": 218, "13376": 218, "13378": 218, "13380": 218, "13382": 218, "13384": 218, "13386": 218, "13388": 218, "13390": 218, "13392": 218, "13394": 218, "13396": 218, "13398": 218, "13400": 218, "13402": 218, "13404": 218, "13406": 218, "13408": 218, "13410": 218, "13412": 218, "13414": 218, "13416": 218, "13418": 218, "13420": 218, "13422": 218, "13424": 218, "13426": 218, "13428": 218, "13430": 218, "13432": 218, "13434": 218, "13436": 218, "13438": 218, "13440": 218, "13442": 218, "13444": 218, "13446": 218, "13448": 218, "13450": 218, "13452": 218, "13454": 218, "13456": 218, "13458": 218, "13460": 218, "13462": 218, "13464": 218, "13466": 218, "13468": 218, "13470": 218, "13472": 218, "13474": 218, "13476": 218, "13478": 218, "13480": 218, "13482": 218, "13484": 218, "13486": 218, "13488": 218, "13490": 218, "13492": 218, "13494": 218, "13496": 218, "13498": 218, "13502": 218, "13504": 218, "13506": 218, "13508": 218, "13510": 218, "13512": 218, "13514": 218, "13516": 218, "13518": 218, "13520": 218, "13522": 218, "13524": 218, "13526": 218, "13528": 218, "13530": 218, "13532": 218, "13534": 218, "13536": 218, "13538": 218, "13540": 218, "13542": 218, "13544": 218, "13546": 218, "13548": 218, "13550": 218, "13552": 218, "13554": 218, "13556": 218, "13558": 218, "13560": 218, "13562": 218, "13564": 218, "13566": 218, "13568": 218, "13570": 218, "13572": 218, "13574": 218, "13576": 218, "13578": 218, "13580": 218, "13582": 218, "13584": 218, "13586": 218, "13588": 218, "13590": 218, "13592": 218, "13594": 218, "13596": 218, "13598": 218, "13600": 218, "13602": 218, "13604": 218, "13606": 218, "13608": 218, "13610": 218, "13612": 218, "13614": 218, "13616": 218, "13618": 218, "13620": 218, "13622": 218, "13624": 218, "13626": 218, "13628": 218, "13630": 218, "13632": 218, "13634": 218, "13636": 218, "13638": 218, "13640": 218, "13642": 218, "13644": 218, "13646": 218, "13648": 218, "13650": 218, "13652": 218, "13654": 218, "13656": 218, "13658": 218, "13660": 218, "13662": 218, "13664": 218, "13666": 218, "13668": 218, "13670": 218, "13672": 218, "13674": 218, "13676": 218, "13678": 218, "13680": 218, "13682": 218, "13684": 218, "13686": 218, "13688": 218, "13690": 218, "13692": 218, "13694": 218, "13696": 218, "13698": 218, "13700": 218, "13702": 218, "13704": 218, "13706": 218, "13708": 218, "13710": 218, "13712": 218, "13714": 218, "13716": 218, "13718": 218, "13720": 218, "13722": 218, "13724": 218, "13726": 218, "13728": 218, "13730": 218, "13732": 218, "13734": 218, "13736": 218, "13738": 218, "13740": 218, "13742": 218, "13744": 218, "13746": 218, "13748": 218, "13750": 218, "13752": 218, "13754": 218, "13756": 218, "13758": 218, "13760": 218, "13762": 218, "13764": 218, "13766": 218, "13768": 218, "13770": 218, "13772": 218, "13774": 218, "13776": 218, "13778": 218, "13780": 218, "13782": 218, "13784": 218, "13786": 218, "13788": 218, "13790": 218, "13792": 218, "13794": 218, "13796": 218, "13798": 218, "13800": 218, "13802": 218, "13804": 218, "13806": 218, "13808": 218, "13810": 218, "13812": 218, "13814": 218, "13816": 218, "13818": 218, "13820": 218, "13822": 218, "13824": 218, "13826": 218, "13828": 218, "13830": 218, "13832": 218, "13834": 218, "13836": 218, "13838": 218, "13840": 218, "13842": 218, "13844": 218, "13846": 218, "13848": 218, "13850": 218, "13852": 218, "13854": 218, "13856": 218, "13858": 218, "13860": 218, "13862": 218, "13864": 218, "13866": 218, "13868": 218, "13870": 218, "13872": 218, "13874": 218, "13876": 218, "13878": 218, "13880": 218, "13882": 218, "13884": 218, "13886": 218, "13888": 218, "13890": 218, "13892": 218, "13894": 218, "13896": 218, "13898": 218, "13900": 218, "13902": 218, "13904": 218, "13906": 218, "13908": 218, "13910": 218, "13912": 218, "13914": 218, "13916": 218, "13918": 218, "13920": 218, "13922": 218, "13924": 218, "13926": 218, "13928": 218, "13930": 218, "13932": 218, "13934": 218, "13936": 218, "13938": 218, "13940": 218, "13942": 218, "13944": 218, "13946": 218, "13948": 218, "13950": 218, "13952": 218, "13954": 218, "13956": 218, "13958": 218, "13960": [218, 921], "13962": 218, "13964": 218, "13966": 218, "13968": 218, "13970": 218, "13972": 218, "13974": 218, "13976": 218, "13978": 218, "13980": 218, "13982": 218, "13984": 218, "13986": 218, "13988": 218, "13990": 218, "13992": 218, "13994": 218, "13996": 218, "13998": 218, "14000": 218, "14002": 218, "14004": 218, "14006": 218, "14008": 218, "14010": 218, "14012": 218, "14014": 218, "14016": 218, "14018": 218, "14020": 218, "14022": 218, "14024": 218, "14026": 218, "14028": 218, "14030": 218, "14032": 218, "14034": 218, "14036": 218, "14038": 218, "14040": 218, "14042": 218, "14044": 218, "14046": 218, "14048": 218, "14050": 218, "14052": 218, "14054": 218, "14056": 218, "14058": 218, "14060": 218, "14062": 218, "14064": 218, "14066": 218, "14068": 218, "14070": 218, "14072": 218, "14074": 218, "14076": 218, "14078": 218, "14080": 218, "14082": 218, "14084": 218, "14086": 218, "14088": 218, "14090": 218, "14092": 218, "14094": 218, "14096": 218, "14098": 218, "14100": 218, "14102": 218, "14104": 218, "14106": 218, "14108": 218, "14110": 218, "14112": 218, "14114": 218, "14116": 218, "14118": 218, "14120": 218, "14122": 218, "14124": 218, "14126": 218, "14128": 218, "14130": 218, "14132": 218, "14134": 218, "14136": 218, "14138": 218, "14140": 218, "14142": 218, "14144": 218, "14146": 218, "14148": 218, "14150": 218, "14152": 218, "14154": 218, "14156": 218, "14158": 218, "14160": 218, "14162": 218, "14164": 218, "14166": 218, "14168": 218, "14170": 218, "14172": 218, "14174": 218, "14176": 218, "14178": 218, "14180": 218, "14182": 218, "14184": 218, "14186": 218, "14188": 218, "14190": 218, "14192": 218, "14194": 218, "14196": 218, "14198": 218, "14200": 218, "14202": 218, "14204": 218, "14206": 218, "14208": 218, "14210": 218, "14212": 218, "14214": 218, "14216": 218, "14218": 218, "14220": 218, "14222": 218, "14224": 218, "14226": 218, "14228": 218, "14230": 218, "14232": 218, "14234": 218, "14236": 218, "14238": 218, "14240": 218, "14242": 218, "14244": 218, "14246": 218, "14248": 218, "14250": 218, "14252": 218, "14254": 218, "14256": 218, "14258": 218, "14260": 218, "14262": 218, "14264": 218, "14266": 218, "14268": 218, "14270": 218, "14272": 218, "14274": 218, "14276": 218, "14278": 218, "14280": 218, "14282": 218, "14284": 218, "14286": 218, "14288": 218, "14290": 218, "14292": 218, "14294": 218, "14296": 218, "14298": 218, "14300": 218, "14302": 218, "14304": 218, "14306": 218, "14308": 218, "14310": 218, "14312": 218, "14314": 218, "14316": 218, "14318": 218, "14320": 218, "14322": 218, "14324": 218, "14326": 218, "14328": 218, "14330": 218, "14332": 218, "14334": 218, "14336": 218, "14338": 218, "14340": 218, "14342": 218, "14344": 218, "14346": 218, "14348": 218, "14350": 218, "14352": 218, "14354": 218, "14356": 218, "14358": 218, "14360": 218, "14362": 218, "14364": 218, "14366": 218, "14368": 218, "14370": 218, "14372": 218, "14374": 218, "14376": 218, "14378": 218, "14380": 218, "14382": 218, "14384": 218, "14388": 218, "14390": 218, "14392": 218, "14394": 218, "14396": 218, "14398": 218, "14400": 218, "14402": 218, "14404": 218, "14406": 218, "14408": 218, "14410": 218, "14412": 218, "14414": 218, "14416": 218, "14418": 218, "14420": 218, "14422": 218, "14424": 218, "14426": 218, "14428": 218, "14430": 218, "14432": 218, "14434": 218, "14436": 218, "14438": 218, "14440": 218, "14442": 218, "14444": 218, "14446": 218, "14448": 218, "14450": 218, "14452": 218, "14454": 218, "14456": 218, "14458": 218, "14460": 218, "14462": 218, "14464": 218, "14466": 218, "14468": 218, "14470": 218, "14472": 218, "14474": 218, "14476": 218, "14478": 218, "14480": 218, "14482": 218, "14484": 218, "14486": 218, "14488": 218, "14490": 218, "14492": 218, "14494": 218, "14496": 218, "14498": 218, "14500": 218, "14502": 218, "14504": 218, "14506": 218, "14508": 218, "14510": 218, "14512": 218, "14514": 218, "14516": 218, "14518": 218, "14520": 218, "14522": 218, "14524": 218, "14526": 218, "14528": 218, "14530": 218, "14532": 218, "14534": 218, "14536": 218, "14538": 218, "14540": 218, "14542": 218, "14544": 218, "14546": 218, "14548": 218, "14550": 218, "14552": 218, "14554": 218, "14556": 218, "14558": 218, "14560": 218, "14562": 218, "14564": 218, "14566": 218, "14568": 218, "14570": 218, "14572": 218, "14574": 218, "14576": 218, "14578": 218, "14580": 218, "14582": 218, "14584": 218, "14586": 218, "14588": 218, "14590": 218, "14592": 218, "14594": 218, "14596": 218, "14598": 218, "14600": 218, "14602": 218, "14604": 218, "14606": 218, "14608": 218, "14610": 218, "14612": 218, "14614": 218, "14616": 218, "14618": 218, "14620": 218, "14622": 218, "14624": 218, "14626": 218, "14628": 218, "14630": 218, "14632": 218, "14634": 218, "14636": 218, "14638": 218, "14640": 218, "14642": 218, "14644": 218, "14646": 218, "14648": 218, "14650": 218, "14652": 218, "14654": 218, "14656": 218, "14658": 218, "14660": 218, "14662": 218, "14664": 218, "14666": 218, "14668": 218, "14670": 218, "14672": 218, "14674": 218, "14676": 218, "14678": 218, "14680": 218, "14682": 218, "14684": 218, "14686": 218, "14688": 218, "14690": 218, "14692": 218, "14694": 218, "14696": 218, "14698": 218, "14700": 218, "14702": 218, "14704": 218, "14706": 218, "14708": 218, "14710": 218, "14712": 218, "14714": 218, "14716": 218, "14718": 218, "14720": 218, "14722": 218, "14724": 218, "14726": 218, "14728": 218, "14730": 218, "14732": 218, "14734": 218, "14736": 218, "14738": 218, "14740": 218, "14742": 218, "14744": 218, "14746": 218, "14748": 218, "14750": 218, "14752": 218, "14754": 218, "14756": 218, "14758": 218, "14760": 218, "14762": 218, "14764": 218, "14766": 218, "14768": 218, "14770": 218, "14772": 218, "14774": 218, "14776": 218, "14778": 218, "14780": 218, "14782": 218, "14784": 218, "14786": 218, "14788": 218, "14790": 218, "14792": 218, "14794": 218, "14796": 218, "14798": 218, "14800": 218, "14802": 218, "14804": 218, "14806": 218, "14808": 218, "14810": 218, "14812": 218, "14814": 218, "14816": 218, "14818": 218, "14820": 218, "14822": 218, "14824": 218, "14826": 218, "14828": 218, "14830": 218, "14832": 218, "14834": 218, "14836": 218, "14838": 218, "14840": 218, "14842": 218, "14844": 218, "14846": 218, "14848": 218, "14850": 218, "14852": 218, "14854": 218, "14856": 218, "14858": 218, "14860": 218, "14862": 218, "14864": 218, "14866": 218, "14868": 218, "14870": 218, "14872": 218, "14874": 218, "14876": 218, "14878": 218, "14880": 218, "14882": [218, 548], "14884": 218, "14886": 218, "14888": 218, "14890": 218, "14892": 218, "14894": 218, "14896": 218, "14898": 218, "14900": 218, "14902": 218, "14904": 218, "14906": 218, "14908": 218, "14910": 218, "14912": 218, "14914": 218, "14916": 218, "14918": 218, "14920": 218, "14922": 218, "14924": 218, "14926": 218, "14928": 218, "14930": 218, "14932": 218, "14934": 218, "14936": 218, "14938": 218, "14940": 218, "14942": 218, "14944": 218, "14946": 218, "14948": 218, "14950": 218, "14952": 218, "14954": 218, "14956": 218, "14958": 218, "14960": 218, "14962": 218, "14964": 218, "14966": 218, "14968": 218, "14970": 218, "14972": 218, "14974": 218, "14976": 218, "14978": 218, "14980": 218, "14982": 218, "14984": 218, "14986": 218, "14988": 218, "14990": [218, 267], "14992": 218, "14994": 218, "14996": 218, "14998": 218, "15002": 218, "15004": 218, "15006": 218, "15008": 218, "15010": 218, "15012": 218, "15014": 218, "15016": 218, "15018": 218, "15020": 218, "15022": 218, "15024": 218, "15026": 218, "15028": 218, "15030": 218, "15032": 218, "15034": 218, "15036": 218, "15038": 218, "15040": 218, "15042": 218, "15044": 218, "15046": 218, "15048": 218, "15050": 218, "15052": 218, "15054": 218, "15056": 218, "15058": 218, "15060": 218, "15062": 218, "15064": 218, "15066": 218, "15068": 218, "15070": 218, "15072": 218, "15074": 218, "15076": 218, "15078": 218, "15080": 218, "15082": 218, "15084": 218, "15086": 218, "15088": 218, "15090": 218, "15092": 218, "15094": 218, "15096": 218, "15098": 218, "15100": 218, "15102": 218, "15104": 218, "15106": 218, "15108": 218, "15110": 218, "15112": 218, "15114": 218, "15116": 218, "15118": 218, "15120": 218, "15122": 218, "15124": 218, "15126": 218, "15128": 218, "15130": 218, "15132": 218, "15134": 218, "15136": 218, "15138": 218, "15140": 218, "15142": 218, "15144": 218, "15146": 218, "15148": 218, "15150": 218, "15152": 218, "15154": 218, "15156": 218, "15158": 218, "15160": 218, "15162": 218, "15164": 218, "15166": 218, "15168": 218, "15170": 218, "15172": 218, "15174": 218, "15176": 218, "15178": 218, "15180": 218, "15182": 218, "15184": 218, "15186": 218, "15188": 218, "15190": 218, "15192": 218, "15194": 218, "15196": 218, "15198": 218, "15200": 218, "15202": 218, "15204": 218, "15206": 218, "15208": 218, "15210": 218, "15212": 218, "15214": 218, "15216": 218, "15218": 218, "15220": 218, "15222": 218, "15224": 218, "15226": 218, "15228": 218, "15230": 218, "15232": 218, "15234": 218, "15236": 218, "15238": 218, "15240": 218, "15242": 218, "15244": [218, 966], "15246": 218, "15248": 218, "15250": 218, "15252": 218, "15254": 218, "15256": 218, "15258": 218, "15260": 218, "15262": 218, "15264": 218, "15266": 218, "15268": 218, "15270": 218, "15272": 218, "15274": 218, "15276": 218, "15278": 218, "15280": 218, "15282": 218, "15284": 218, "15286": 218, "15288": 218, "15290": 218, "15292": 218, "15294": 218, "15296": 218, "15298": 218, "15300": 218, "15302": 218, "15304": 218, "15306": 218, "15308": 218, "15310": 218, "15312": 218, "15314": 218, "15316": 218, "15318": 218, "15320": 218, "15322": 218, "15324": 218, "15326": 218, "15328": 218, "15330": 218, "15332": 218, "15334": 218, "15336": 218, "15338": 218, "15340": 218, "15342": 218, "15344": 218, "15346": 218, "15348": 218, "15350": 218, "15352": 218, "15354": 218, "15356": 218, "15358": 218, "15360": 218, "15362": 218, "15364": 218, "15366": 218, "15368": 218, "15370": 218, "15372": 218, "15374": 218, "15376": 218, "15378": 218, "15380": 218, "15382": 218, "15384": 218, "15386": 218, "15388": 218, "15390": 218, "15392": 218, "15394": 218, "15396": 218, "15398": 218, "15400": 218, "15402": 218, "15404": 218, "15406": 218, "15408": 218, "15410": 218, "15412": 218, "15414": 218, "15416": 218, "15418": 218, "15420": 218, "15422": 218, "15424": 218, "15426": 218, "15428": 218, "15430": 218, "15432": 218, "15434": 218, "15436": 218, "15438": 218, "15440": 218, "15442": 218, "15444": 218, "15446": 218, "15448": 218, "15450": 218, "15452": 218, "15454": 218, "15456": 218, "15458": 218, "15460": 218, "15462": 218, "15464": 218, "15466": 218, "15468": 218, "15470": 218, "15472": 218, "15474": 218, "15476": 218, "15478": 218, "15480": 218, "15482": 218, "15484": 218, "15486": 218, "15488": 218, "15490": 218, "15492": 218, "15494": 218, "15496": 218, "15498": 218, "15500": 218, "15502": 218, "15504": 218, "15506": 218, "15508": 218, "15510": 218, "15512": 218, "15514": 218, "15516": 218, "15518": 218, "15520": 218, "15522": 218, "15524": 218, "15526": 218, "15528": 218, "15530": 218, "15532": 218, "15534": 218, "15536": 218, "15538": 218, "15540": 218, "15542": 218, "15544": 218, "15546": 218, "15548": 218, "15550": 218, "15552": 218, "15554": 218, "15556": 218, "15558": 218, "15560": 218, "15562": 218, "15564": 218, "15566": 218, "15568": 218, "15570": 218, "15572": 218, "15574": 218, "15576": 218, "15578": 218, "15580": 218, "15582": 218, "15584": 218, "15586": 218, "15588": 218, "15590": 218, "15592": 218, "15594": 218, "15596": 218, "15598": 218, "15600": 218, "15602": 218, "15604": 218, "15606": 218, "15608": 218, "15610": 218, "15612": 218, "15614": 218, "15616": 218, "15618": 218, "15620": 218, "15622": 218, "15624": 218, "15626": 218, "15628": 218, "15630": 218, "15632": 218, "15634": 218, "15636": 218, "15638": 218, "15640": 218, "15642": 218, "15644": 218, "15646": 218, "15648": 218, "15650": 218, "15652": 218, "15654": 218, "15656": 218, "15658": 218, "15660": 218, "15662": 218, "15664": 218, "15666": 218, "15668": 218, "15670": 218, "15672": 218, "15674": 218, "15676": 218, "15678": 218, "15680": 218, "15682": 218, "15684": 218, "15686": 218, "15688": 218, "15690": 218, "15692": 218, "15694": 218, "15696": 218, "15698": 218, "15700": 218, "15702": 218, "15704": 218, "15706": 218, "15708": 218, "15710": 218, "15712": 218, "15714": 218, "15716": 218, "15718": 218, "15720": 218, "15722": 218, "15724": 218, "15726": 218, "15728": 218, "15730": 218, "15732": 218, "15734": 218, "15736": 218, "15738": 218, "15740": 218, "15742": 218, "15744": 218, "15746": 218, "15748": 218, "15750": 218, "15752": 218, "15754": 218, "15756": 218, "15758": 218, "15760": 218, "15762": 218, "15764": 218, "15766": 218, "15768": 218, "15770": 218, "15772": 218, "15774": 218, "15776": 218, "15778": 218, "15780": 218, "15782": 218, "15784": 218, "15786": 218, "15788": 218, "15790": 218, "15792": 218, "15794": 218, "15796": 218, "15798": 218, "15800": 218, "15802": 218, "15804": 218, "15806": 218, "15808": 218, "15810": 218, "15812": 218, "15814": 218, "15816": 218, "15818": 218, "15820": 218, "15822": 218, "15824": 218, "15826": 218, "15828": 218, "15830": 218, "15832": 218, "15834": 218, "15836": 218, "15838": 218, "15840": 218, "15842": 218, "15844": 218, "15846": 218, "15848": 218, "15850": 218, "15852": 218, "15854": 218, "15856": 218, "15858": 218, "15860": 218, "15862": 218, "15864": 218, "15866": 218, "15868": 218, "15870": 218, "15872": 218, "15874": 218, "15876": 218, "15878": 218, "15880": 218, "15882": 218, "15884": 218, "15886": 218, "15888": 218, "15890": 218, "15892": 218, "15894": 218, "15896": 218, "15898": 218, "15900": 218, "15902": 218, "15904": 218, "15906": 218, "15908": 218, "15910": 218, "15912": 218, "15914": 218, "15916": 218, "15918": 218, "15920": 218, "15922": 218, "15924": 218, "15926": 218, "15928": 218, "15930": 218, "15932": 218, "15934": 218, "15936": 218, "15938": 218, "15940": 218, "15942": 218, "15944": 218, "15946": 218, "15948": 218, "15950": 218, "15952": 218, "15954": 218, "15956": 218, "15958": 218, "15960": 218, "15962": 218, "15964": 218, "15966": 218, "15968": 218, "15970": 218, "15972": 218, "15974": 218, "15976": 218, "15978": 218, "15980": 218, "15982": 218, "15984": 218, "15986": 218, "15988": 218, "15990": 218, "15992": 218, "15994": 218, "15996": 218, "15998": 218, "16000": 218, "16002": 218, "16004": 218, "16006": 218, "16008": 218, "16010": 218, "16012": 218, "16014": 218, "16016": 218, "16018": 218, "16020": 218, "16022": 218, "16024": 218, "16026": 218, "16028": 218, "16030": 218, "16032": 218, "16034": 218, "16036": 218, "16038": 218, "16040": 218, "16042": 218, "16044": 218, "16046": 218, "16048": 218, "16050": 218, "16052": 218, "16054": 218, "16056": 218, "16058": 218, "16060": 218, "16062": 218, "16064": 218, "16066": 218, "16068": 218, "16070": 218, "16072": 218, "16074": 218, "16076": 218, "16078": 218, "16080": 218, "16082": 218, "16084": 218, "16086": 218, "16088": 218, "16090": 218, "16092": 218, "16094": 218, "16096": 218, "16098": 218, "16100": 218, "16102": 218, "16104": 218, "16106": 218, "16108": 218, "16110": 218, "16112": 218, "16114": 218, "16116": 218, "16118": 218, "16120": 218, "16122": 218, "16124": 218, "16126": 218, "16128": 218, "16130": 218, "16132": 218, "16134": 218, "16136": 218, "16138": 218, "16140": 218, "16142": 218, "16144": 218, "16146": 218, "16148": 218, "16150": 218, "16152": 218, "16154": 218, "16156": 218, "16158": 218, "16160": 218, "16162": 218, "16164": 218, "16166": 218, "16168": 218, "16170": 218, "16172": 218, "16174": 218, "16176": 218, "16178": 218, "16180": 218, "16182": 218, "16184": 218, "16186": 218, "16188": 218, "16190": 218, "16192": 218, "16194": 218, "16196": 218, "16198": 218, "16200": 218, "16202": 218, "16204": 218, "16206": 218, "16208": 218, "16210": 218, "16212": 218, "16214": 218, "16216": 218, "16218": 218, "16220": 218, "16222": 218, "16224": 218, "16226": 218, "16228": 218, "16230": 218, "16232": 218, "16234": 218, "16236": 218, "16238": 218, "16240": 218, "16242": 218, "16244": 218, "16246": 218, "16248": 218, "16250": 218, "16252": 218, "16254": 218, "16256": 218, "16258": 218, "16260": 218, "16262": 218, "16264": 218, "16266": 218, "16268": 218, "16270": 218, "16272": 218, "16274": 218, "16276": 218, "16278": 218, "16280": 218, "16282": 218, "16284": 218, "16286": 218, "16288": 218, "16290": 218, "16292": 218, "16294": 218, "16296": 218, "16298": 218, "16300": 218, "16302": 218, "16304": 218, "16306": 218, "16308": 218, "16310": 218, "16312": 218, "16314": 218, "16316": 218, "16318": 218, "16320": 218, "16322": 218, "16324": 218, "16326": 218, "16328": 218, "16330": 218, "16332": 218, "16334": 218, "16336": 218, "16338": 218, "16340": 218, "16342": 218, "16344": 218, "16346": 218, "16348": 218, "16350": 218, "16352": 218, "16354": 218, "16356": 218, "16358": 218, "16360": 218, "16362": 218, "16364": 218, "16366": 218, "16368": 218, "16370": 218, "16372": 218, "16374": 218, "16376": 218, "16378": 218, "16380": 218, "16382": 218, "16386": 218, "16388": 218, "16390": 218, "16392": 218, "16394": 218, "16396": 218, "16398": 218, "16400": 218, "16402": 218, "16404": 218, "16406": 218, "16408": 218, "16410": 218, "16412": 218, "16414": 218, "16416": 218, "16418": 218, "16420": 218, "16422": 218, "16424": 218, "16426": 218, "16428": 218, "16430": 218, "16432": 218, "16434": 218, "16436": 218, "16438": 218, "16440": 218, "16442": 218, "16444": 218, "16446": 218, "16448": 218, "16450": 218, "16452": 218, "16454": 218, "16456": 218, "16458": 218, "16460": 218, "16462": 218, "16464": 218, "16466": 218, "16468": 218, "16470": 218, "16472": 218, "16474": 218, "16476": 218, "16478": 218, "16480": 218, "16482": 218, "16484": 218, "16486": 218, "16488": 218, "16490": 218, "16492": 218, "16494": 218, "16496": 218, "16498": 218, "16500": 218, "16502": 218, "16504": 218, "16506": 218, "16508": 218, "16510": 218, "16512": 218, "16514": 218, "16516": 218, "16518": 218, "16520": 218, "16522": 218, "16524": 218, "16526": 218, "16528": 218, "16530": 218, "16532": 218, "16534": 218, "16536": 218, "16538": 218, "16540": 218, "16542": 218, "16544": 218, "16546": 218, "16548": 218, "16550": 218, "16552": 218, "16554": 218, "16556": 218, "16558": 218, "16560": 218, "16562": 218, "16564": 218, "16566": 218, "16568": 218, "16570": 218, "16572": 218, "16574": 218, "16576": 218, "16578": 218, "16580": 218, "16582": 218, "16584": 218, "16586": 218, "16588": 218, "16590": 218, "16592": 218, "16594": 218, "16596": 218, "16598": 218, "16600": 218, "16602": 218, "16604": 218, "16606": 218, "16608": 218, "16610": 218, "16612": 218, "16614": 218, "16616": 218, "16618": 218, "16620": 218, "16622": 218, "16624": 218, "16626": 218, "16628": 218, "16630": 218, "16632": 218, "16634": 218, "16636": 218, "16638": 218, "16640": 218, "16642": 218, "16644": 218, "16646": 218, "16648": 218, "16650": 218, "16652": 218, "16654": 218, "16656": 218, "16658": 218, "16660": 218, "16662": 218, "16664": 218, "16666": 218, "16668": 218, "16670": 218, "16672": 218, "16674": 218, "16676": 218, "16678": 218, "16680": 218, "16682": 218, "16684": 218, "16686": 218, "16688": 218, "16690": 218, "16692": 218, "16694": 218, "16696": 218, "16698": 218, "16700": 218, "16702": 218, "16704": 218, "16706": 218, "16708": 218, "16710": 218, "16712": 218, "16714": 218, "16716": 218, "16718": 218, "16720": 218, "16722": 218, "16724": 218, "16726": 218, "16728": 218, "16730": 218, "16732": 218, "16734": 218, "16736": 218, "16738": 218, "16740": 218, "16742": 218, "16744": 218, "16746": 218, "16748": 218, "16750": 218, "16752": 218, "16754": 218, "16756": 218, "16758": 218, "16760": 218, "16762": 218, "16764": 218, "16766": 218, "16768": 218, "16770": 218, "16772": 218, "16774": 218, "16776": 218, "16778": 218, "16780": 218, "16782": 218, "16784": 218, "16786": 218, "16788": 218, "16790": 218, "16792": 218, "16794": 218, "16796": 218, "16798": 218, "16800": 218, "16802": 218, "16804": 218, "16806": 218, "16808": 218, "16810": 218, "16812": 218, "16814": 218, "16816": 218, "16818": 218, "16820": 218, "16822": 218, "16824": 218, "16826": 218, "16828": 218, "16830": 218, "16832": 218, "16834": 218, "16836": 218, "16838": 218, "16840": 218, "16842": 218, "16844": 218, "16846": 218, "16848": 218, "16850": 218, "16852": 218, "16854": 218, "16856": 218, "16858": 218, "16860": 218, "16862": 218, "16864": 218, "16866": 218, "16868": 218, "16870": 218, "16872": 218, "16874": 218, "16876": 218, "16878": 218, "16880": 218, "16882": 218, "16884": 218, "16886": 218, "16888": 218, "16890": 218, "16892": 218, "16894": 218, "16896": 218, "16898": 218, "16900": 218, "16902": 218, "16904": 218, "16906": 218, "16908": 218, "16910": 218, "16912": 218, "16914": 218, "16916": 218, "16918": 218, "16920": 218, "16922": 218, "16924": 218, "16926": 218, "16928": 218, "16930": 218, "16932": 218, "16934": 218, "16936": 218, "16938": 218, "16940": 218, "16942": 218, "16944": 218, "16946": 218, "16948": 218, "16950": 218, "16952": 218, "16954": 218, "16956": 218, "16958": 218, "16960": 218, "16962": 218, "16964": 218, "16966": 218, "16968": 218, "16970": 218, "16972": 218, "16974": 218, "16976": 218, "16978": 218, "16980": 218, "16982": 218, "16984": 218, "16986": 218, "16988": 218, "16990": 218, "16992": 218, "16994": 218, "16996": 218, "16998": 218, "17000": 218, "17002": 218, "17004": 218, "17006": 218, "17008": 218, "17010": 218, "17012": 218, "17014": 218, "17016": 218, "17018": 218, "17020": 218, "17022": 218, "17024": 218, "17026": 218, "17028": 218, "17030": 218, "17032": 218, "17034": 218, "17036": 218, "17038": 218, "17040": 218, "17042": 218, "17044": 218, "17046": 218, "17048": 218, "17050": 218, "17052": 218, "17054": 218, "17056": 218, "17058": 218, "17060": 218, "17062": 218, "17064": 218, "17066": 218, "17068": 218, "17070": 218, "17072": 218, "17074": 218, "17076": 218, "17078": 218, "17080": 218, "17082": 218, "17084": 218, "17086": 218, "17088": 218, "17090": 218, "17092": 218, "17094": 218, "17096": 218, "17098": 218, "17100": 218, "17102": 218, "17104": 218, "17106": 218, "17108": 218, "17110": 218, "17112": 218, "17114": 218, "17116": 218, "17118": 218, "17120": 218, "17122": 218, "17124": 218, "17126": [218, 267], "17128": 218, "17130": 218, "17132": 218, "17134": 218, "17136": 218, "17138": 218, "17140": 218, "17142": 218, "17144": 218, "17146": 218, "17148": 218, "17150": 218, "17152": 218, "17154": 218, "17156": 218, "17158": 218, "17160": 218, "17162": 218, "17164": 218, "17166": 218, "17168": 218, "17170": 218, "17172": 218, "17174": 218, "17176": 218, "17178": 218, "17180": 218, "17182": 218, "17184": 218, "17186": 218, "17188": 218, "17190": 218, "17192": 218, "17194": 218, "17196": 218, "17198": 218, "17200": 218, "17202": 218, "17204": 218, "17206": 218, "17208": 218, "17210": 218, "17212": 218, "17214": 218, "17216": 218, "17218": 218, "17220": 218, "17222": 218, "17224": 218, "17226": 218, "17228": 218, "17230": 218, "17232": 218, "17234": 218, "17236": 218, "17238": 218, "17240": 218, "17242": 218, "17244": 218, "17246": 218, "17248": 218, "17250": 218, "17252": 218, "17254": 218, "17256": 218, "17258": 218, "17260": 218, "17262": 218, "17264": 218, "17266": 218, "17268": 218, "17270": 218, "17272": 218, "17274": 218, "17276": 218, "17278": 218, "17280": 218, "17282": 218, "17284": 218, "17286": 218, "17288": 218, "17290": 218, "17292": 218, "17294": 218, "17296": 218, "17298": 218, "17300": 218, "17302": 218, "17304": 218, "17306": 218, "17308": 218, "17310": 218, "17312": 218, "17314": 218, "17316": 218, "17318": 218, "17320": 218, "17322": 218, "17324": 218, "17326": 218, "17328": 218, "17330": 218, "17332": 218, "17334": 218, "17336": 218, "17338": 218, "17340": 218, "17342": 218, "17344": 218, "17346": 218, "17348": 218, "17350": 218, "17352": 218, "17354": 218, "17356": 218, "17358": 218, "17360": 218, "17362": 218, "17364": 218, "17366": 218, "17368": 218, "17370": 218, "17372": 218, "17374": 218, "17376": 218, "17378": 218, "17380": 218, "17382": 218, "17384": 218, "17386": 218, "17388": 218, "17390": 218, "17392": 218, "17394": 218, "17396": 218, "17398": 218, "17400": 218, "17402": 218, "17404": 218, "17406": 218, "17408": 218, "17410": 218, "17412": 218, "17414": 218, "17416": 218, "17418": 218, "17420": 218, "17422": 218, "17424": 218, "17426": 218, "17428": 218, "17430": 218, "17432": 218, "17434": 218, "17436": 218, "17438": 218, "17440": 218, "17442": 218, "17444": 218, "17446": 218, "17448": 218, "17450": 218, "17452": 218, "17454": 218, "17456": 218, "17458": 218, "17460": 218, "17462": 218, "17464": 218, "17466": 218, "17468": 218, "17470": 218, "17472": 218, "17474": 218, "17476": 218, "17478": 218, "17480": 218, "17482": 218, "17484": 218, "17486": 218, "17488": 218, "17490": 218, "17492": 218, "17494": 218, "17496": 218, "17498": 218, "17500": 218, "17502": 218, "17504": 218, "17506": 218, "17508": 218, "17510": 218, "17512": 218, "17514": 218, "17516": 218, "17518": 218, "17520": 218, "17522": 218, "17524": 218, "17526": 218, "17528": 218, "17530": 218, "17532": 218, "17534": 218, "17536": 218, "17538": 218, "17540": 218, "17542": 218, "17544": 218, "17546": 218, "17548": 218, "17550": 218, "17552": 218, "17554": 218, "17556": 218, "17558": 218, "17560": 218, "17562": 218, "17564": 218, "17566": 218, "17568": 218, "17570": 218, "17572": 218, "17574": 218, "17576": 218, "17578": 218, "17580": 218, "17582": 218, "17584": 218, "17586": 218, "17588": 218, "17590": 218, "17592": 218, "17594": 218, "17596": 218, "17598": 218, "17600": 218, "17602": 218, "17604": 218, "17606": 218, "17608": 218, "17610": 218, "17612": 218, "17614": 218, "17616": 218, "17618": 218, "17620": 218, "17622": 218, "17624": 218, "17626": 218, "17628": 218, "17630": 218, "17632": 218, "17634": 218, "17636": 218, "17638": 218, "17640": 218, "17642": 218, "17644": 218, "17646": 218, "17648": 218, "17650": 218, "17652": 218, "17654": 218, "17656": 218, "17658": 218, "17660": 218, "17662": 218, "17664": 218, "17666": 218, "17668": 218, "17670": 218, "17672": 218, "17674": 218, "17676": 218, "17678": 218, "17680": 218, "17682": 218, "17684": 218, "17686": 218, "17688": 218, "17690": 218, "17692": 218, "17694": 218, "17696": 218, "17698": 218, "17700": 218, "17702": 218, "17704": 218, "17706": 218, "17708": 218, "17710": 218, "17712": 218, "17714": 218, "17716": 218, "17718": 218, "17720": 218, "17722": 218, "17724": 218, "17726": 218, "17728": 218, "17730": 218, "17732": 218, "17734": 218, "17736": 218, "17738": 218, "17740": 218, "17742": 218, "17744": 218, "17746": 218, "17748": 218, "17750": 218, "17752": 218, "17754": 218, "17756": 218, "17758": 218, "17760": 218, "17762": 218, "17764": 218, "17766": 218, "17768": 218, "17770": 218, "17772": 218, "17774": 218, "17776": 218, "17778": 218, "17780": 218, "17782": 218, "17784": 218, "17786": 218, "17788": 218, "17790": 218, "17792": 218, "17794": 218, "17796": 218, "17798": 218, "17800": 218, "17802": 218, "17804": 218, "17806": 218, "17808": 218, "17810": 218, "17812": 218, "17814": 218, "17816": 218, "17818": 218, "17820": 218, "17822": 218, "17824": 218, "17826": 218, "17828": 218, "17830": 218, "17832": 218, "17834": 218, "17836": 218, "17838": 218, "17840": 218, "17842": 218, "17844": 218, "17846": 218, "17848": 218, "17850": 218, "17852": 218, "17854": 218, "17856": 218, "17858": 218, "17860": 218, "17862": 218, "17864": 218, "17866": 218, "17868": 218, "17870": 218, "17872": 218, "17874": 218, "17876": 218, "17878": 218, "17880": 218, "17882": 218, "17884": 218, "17886": 218, "17888": 218, "17890": 218, "17892": 218, "17894": 218, "17896": 218, "17898": 218, "17900": 218, "17902": 218, "17904": 218, "17906": 218, "17908": 218, "17910": 218, "17912": 218, "17914": 218, "17916": 218, "17918": 218, "17920": 218, "17922": 218, "17924": 218, "17926": 218, "17928": 218, "17930": 218, "17932": 218, "17934": 218, "17936": 218, "17938": 218, "17940": 218, "17942": 218, "17944": 218, "17946": 218, "17948": 218, "17950": 218, "17952": 218, "17954": 218, "17956": 218, "17958": 218, "17960": 218, "17962": 218, "17964": 218, "17966": 218, "17968": 218, "17970": 218, "17972": 218, "17974": 218, "17976": 218, "17978": 218, "17980": 218, "17982": 218, "17984": 218, "17986": 218, "17988": 218, "17990": 218, "17992": 218, "17994": 218, "17996": 218, "17998": 218, "18000": [218, 884], "18002": 218, "18004": 218, "18006": 218, "18008": 218, "18010": 218, "18012": 218, "18014": 218, "18016": 218, "18018": 218, "18020": 218, "18022": 218, "18024": 218, "18026": 218, "18028": 218, "18030": 218, "18032": 218, "18034": 218, "18036": 218, "18038": 218, "18040": 218, "18042": 218, "18044": 218, "18046": 218, "18048": 218, "18050": 218, "18052": 218, "18054": 218, "18056": 218, "18058": 218, "18060": 218, "18062": 218, "18064": 218, "18066": 218, "18068": 218, "18070": 218, "18072": 218, "18074": 218, "18076": 218, "18078": 218, "18080": 218, "18082": 218, "18084": 218, "18086": 218, "18088": 218, "18090": 218, "18092": 218, "18094": 218, "18096": 218, "18098": 218, "18100": 218, "18102": 218, "18104": 218, "18106": 218, "18108": 218, "18110": 218, "18112": 218, "18114": 218, "18116": 218, "18118": 218, "18120": 218, "18122": 218, "18124": 218, "18126": 218, "18128": 218, "18130": 218, "18132": 218, "18134": 218, "18136": 218, "18138": 218, "18140": 218, "18142": 218, "18144": 218, "18146": 218, "18148": 218, "18150": 218, "18152": 218, "18154": 218, "18156": 218, "18158": 218, "18160": 218, "18162": 218, "18164": 218, "18166": 218, "18168": 218, "18170": 218, "18172": 218, "18174": 218, "18176": 218, "18178": 218, "18180": 218, "18182": 218, "18184": 218, "18186": 218, "18188": 218, "18190": 218, "18192": 218, "18194": 218, "18196": 218, "18198": 218, "18200": 218, "18202": 218, "18204": 218, "18206": 218, "18208": 218, "18210": 218, "18212": 218, "18214": 218, "18216": 218, "18218": 218, "18220": 218, "18222": 218, "18224": 218, "18226": 218, "18228": 218, "18230": 218, "18232": 218, "18234": 218, "18236": 218, "18238": 218, "18240": 218, "18242": 218, "18244": 218, "18246": 218, "18248": 218, "18250": 218, "18252": 218, "18254": 218, "18256": 218, "18258": 218, "18260": 218, "18262": 218, "18264": 218, "18266": 218, "18268": 218, "18270": 218, "18272": 218, "18274": 218, "18276": 218, "18278": 218, "18280": 218, "18282": 218, "18284": 218, "18286": 218, "18288": 218, "18290": 218, "18292": 218, "18294": 218, "18296": 218, "18298": 218, "18300": 218, "18302": 218, "18304": 218, "18306": 218, "18308": 218, "18310": 218, "18312": 218, "18314": 218, "18316": 218, "18318": 218, "18320": 218, "18322": 218, "18324": 218, "18326": 218, "18328": 218, "18330": 218, "18332": 218, "18334": 218, "18336": 218, "18338": 218, "18340": 218, "18342": 218, "18344": 218, "18346": 218, "18348": 218, "18350": 218, "18352": 218, "18354": 218, "18356": 218, "18358": 218, "18360": 218, "18362": 218, "18364": 218, "18366": 218, "18368": 218, "18370": 218, "18372": 218, "18374": 218, "18376": 218, "18378": 218, "18380": 218, "18382": 218, "18384": [218, 952], "18386": 218, "18388": 218, "18390": 218, "18392": 218, "18394": 218, "18396": 218, "18398": 218, "18400": 218, "18402": 218, "18404": 218, "18406": 218, "18408": 218, "18410": 218, "18412": 218, "18414": 218, "18416": 218, "18418": 218, "18420": 218, "18422": 218, "18424": 218, "18426": 218, "18428": 218, "18430": 218, "18432": 218, "18434": 218, "18436": 218, "18438": 218, "18440": 218, "18442": 218, "18444": 218, "18446": 218, "18448": 218, "18450": 218, "18452": 218, "18454": 218, "18456": 218, "18458": 218, "18460": 218, "18462": 218, "18464": 218, "18466": 218, "18468": 218, "18470": 218, "18472": 218, "18474": 218, "18476": 218, "18478": 218, "18480": 218, "18482": 218, "18484": 218, "18486": 218, "18488": 218, "18490": 218, "18492": 218, "18494": 218, "18496": 218, "18498": 218, "18500": 218, "18502": 218, "18504": 218, "18506": 218, "18508": 218, "18510": 218, "18512": 218, "18514": 218, "18516": 218, "18518": 218, "18520": 218, "18522": 218, "18524": 218, "18526": 218, "18528": 218, "18530": 218, "18532": 218, "18534": 218, "18536": 218, "18538": 218, "18540": 218, "18542": 218, "18544": 218, "18546": 218, "18548": 218, "18550": 218, "18552": 218, "18554": 218, "18556": 218, "18558": 218, "18560": 218, "18562": 218, "18564": 218, "18566": 218, "18568": 218, "18570": 218, "18572": 218, "18574": 218, "18576": 218, "18578": 218, "18580": 218, "18582": 218, "18584": 218, "18586": 218, "18588": 218, "18590": 218, "18592": 218, "18594": 218, "18596": 218, "18598": 218, "18600": 218, "18602": 218, "18604": 218, "18606": 218, "18608": 218, "18610": 218, "18612": 218, "18614": 218, "18616": 218, "18618": 218, "18620": 218, "18622": 218, "18624": 218, "18626": 218, "18628": 218, "18630": 218, "18632": 218, "18634": 218, "18636": 218, "18638": 218, "18640": 218, "18642": 218, "18644": 218, "18646": 218, "18648": 218, "18650": 218, "18652": 218, "18654": 218, "18656": 218, "18658": 218, "18660": 218, "18662": 218, "18664": 218, "18666": 218, "18668": 218, "18670": 218, "18672": 218, "18674": 218, "18676": 218, "18678": 218, "18680": 218, "18682": 218, "18684": 218, "18686": 218, "18688": 218, "18690": 218, "18692": 218, "18694": 218, "18696": 218, "18698": 218, "18700": 218, "18702": 218, "18704": 218, "18706": 218, "18708": 218, "18710": 218, "18712": 218, "18714": 218, "18716": 218, "18718": 218, "18720": 218, "18722": 218, "18724": 218, "18726": 218, "18728": 218, "18730": 218, "18732": 218, "18734": 218, "18736": 218, "18738": 218, "18740": 218, "18742": 218, "18744": 218, "18746": 218, "18748": 218, "18750": 218, "18752": 218, "18754": 218, "18756": 218, "18758": 218, "18760": 218, "18762": 218, "18764": 218, "18766": 218, "18768": 218, "18770": 218, "18772": 218, "18774": 218, "18776": 218, "18778": 218, "18780": 218, "18782": 218, "18784": 218, "18786": 218, "18788": 218, "18790": 218, "18792": 218, "18794": 218, "18796": 218, "18798": 218, "18800": 218, "18802": 218, "18804": 218, "18806": 218, "18808": 218, "18810": 218, "18812": 218, "18814": 218, "18816": 218, "18818": 218, "18820": 218, "18822": 218, "18824": 218, "18826": 218, "18828": 218, "18830": 218, "18832": 218, "18834": 218, "18836": 218, "18838": 218, "18840": 218, "18842": 218, "18844": 218, "18846": 218, "18848": 218, "18850": 218, "18852": 218, "18854": 218, "18856": 218, "18858": 218, "18860": 218, "18862": 218, "18864": 218, "18866": 218, "18868": 218, "18870": 218, "18872": 218, "18874": 218, "18876": 218, "18878": 218, "18880": 218, "18882": 218, "18884": 218, "18886": 218, "18888": 218, "18890": 218, "18892": 218, "18894": 218, "18896": 218, "18898": 218, "18900": 218, "18902": 218, "18904": 218, "18906": 218, "18908": 218, "18910": 218, "18912": 218, "18914": 218, "18916": 218, "18918": 218, "18920": 218, "18922": 218, "18924": 218, "18926": 218, "18928": 218, "18930": 218, "18932": 218, "18934": 218, "18936": 218, "18938": 218, "18940": 218, "18942": 218, "18944": 218, "18946": 218, "18948": 218, "18950": 218, "18952": 218, "18954": 218, "18956": 218, "18958": 218, "18960": 218, "18962": 218, "18964": 218, "18966": 218, "18968": 218, "18970": 218, "18972": 218, "18974": 218, "18976": 218, "18978": 218, "18980": 218, "18982": 218, "18984": 218, "18986": 218, "18988": 218, "18990": 218, "18992": 218, "18994": 218, "18996": 218, "18998": 218, "19000": 218, "19002": 218, "19004": 218, "19006": 218, "19008": 218, "19010": 218, "19012": 218, "19014": 218, "19016": 218, "19018": 218, "19020": 218, "19022": 218, "19024": 218, "19026": 218, "19028": 218, "19030": 218, "19032": 218, "19034": 218, "19036": 218, "19038": 218, "19040": 218, "19042": 218, "19044": 218, "19046": 218, "19048": 218, "19050": 218, "19052": 218, "19054": 218, "19056": 218, "19058": 218, "19060": 218, "19062": 218, "19064": 218, "19066": 218, "19068": 218, "19070": 218, "19072": 218, "19074": 218, "19076": 218, "19078": 218, "19080": 218, "19082": 218, "19084": 218, "19086": 218, "19088": 218, "19090": 218, "19092": 218, "19094": 218, "19096": 218, "19098": 218, "19100": 218, "19102": 218, "19104": 218, "19106": 218, "19108": 218, "19110": 218, "19112": 218, "19114": 218, "19116": 218, "19118": 218, "19120": 218, "19122": 218, "19124": 218, "19126": 218, "19128": 218, "19130": 218, "19132": 218, "19134": 218, "19136": 218, "19138": 218, "19140": 218, "19142": 218, "19144": 218, "19146": 218, "19148": 218, "19150": 218, "19152": 218, "19154": 218, "19156": 218, "19158": 218, "19160": 218, "19162": 218, "19164": 218, "19166": 218, "19168": 218, "19170": 218, "19172": 218, "19174": 218, "19176": 218, "19178": 218, "19180": 218, "19182": 218, "19184": 218, "19186": 218, "19188": 218, "19190": 218, "19192": 218, "19194": 218, "19196": 218, "19198": 218, "19200": 218, "19202": 218, "19204": 218, "19206": 218, "19208": 218, "19210": 218, "19212": 218, "19214": 218, "19216": 218, "19218": 218, "19220": 218, "19222": 218, "19224": 218, "19226": 218, "19228": 218, "19230": 218, "19232": 218, "19234": 218, "19236": 218, "19238": 218, "19240": 218, "19242": 218, "19244": 218, "19246": 218, "19248": 218, "19250": 218, "19252": 218, "19254": 218, "19256": 218, "19258": 218, "19260": 218, "19262": 218, "19264": 218, "19266": 218, "19268": 218, "19270": 218, "19272": 218, "19274": 218, "19276": 218, "19278": 218, "19280": 218, "19282": 218, "19284": 218, "19286": 218, "19288": 218, "19290": 218, "19292": 218, "19294": 218, "19296": 218, "19298": 218, "19300": 218, "19302": 218, "19304": 218, "19306": 218, "19308": 218, "19310": 218, "19312": 218, "19314": 218, "19316": 218, "19318": 218, "19320": 218, "19322": 218, "19324": 218, "19326": 218, "19328": 218, "19330": 218, "19332": 218, "19334": 218, "19336": 218, "19338": 218, "19340": 218, "19342": 218, "19344": 218, "19346": 218, "19348": 218, "19350": 218, "19352": 218, "19354": 218, "19356": 218, "19358": 218, "19360": 218, "19362": 218, "19364": 218, "19366": 218, "19368": 218, "19370": 218, "19372": 218, "19374": 218, "19376": 218, "19378": 218, "19380": 218, "19382": 218, "19384": 218, "19386": 218, "19388": 218, "19390": 218, "19392": 218, "19394": 218, "19396": 218, "19398": 218, "19400": 218, "19402": 218, "19404": 218, "19406": 218, "19408": 218, "19410": 218, "19412": 218, "19414": 218, "19416": 218, "19418": 218, "19420": 218, "19422": 218, "19424": 218, "19426": 218, "19428": 218, "19430": 218, "19432": 218, "19434": 218, "19436": 218, "19438": 218, "19440": 218, "19442": 218, "19444": 218, "19446": 218, "19448": 218, "19450": 218, "19452": 218, "19454": 218, "19456": 218, "19458": 218, "19460": 218, "19462": 218, "19464": 218, "19466": 218, "19468": 218, "19470": 218, "19472": 218, "19474": 218, "19476": 218, "19478": 218, "19480": 218, "19482": 218, "19484": 218, "19486": 218, "19488": 218, "19490": 218, "19492": 218, "19494": 218, "19496": 218, "19498": 218, "19500": 218, "19502": 218, "19504": 218, "19506": 218, "19508": 218, "19510": 218, "19512": 218, "19514": 218, "19516": 218, "19518": 218, "19520": 218, "19522": 218, "19524": 218, "19526": 218, "19528": 218, "19530": 218, "19532": 218, "19534": 218, "19536": 218, "19538": 218, "19540": 218, "19542": 218, "19544": 218, "19546": 218, "19548": 218, "19550": 218, "19552": 218, "19554": 218, "19556": 218, "19558": 218, "19560": 218, "19562": 218, "19564": 218, "19566": 218, "19568": 218, "19570": 218, "19572": 218, "19574": 218, "19576": 218, "19578": 218, "19580": 218, "19582": 218, "19584": 218, "19586": 218, "19588": 218, "19590": 218, "19592": 218, "19594": 218, "19596": 218, "19598": 218, "19600": 218, "19602": 218, "19604": 218, "19606": 218, "19608": 218, "19610": 218, "19612": 218, "19614": 218, "19616": 218, "19618": 218, "19620": 218, "19622": 218, "19624": 218, "19626": 218, "19628": 218, "19630": 218, "19632": 218, "19634": 218, "19636": 218, "19638": 218, "19640": 218, "19642": 218, "19644": 218, "19646": 218, "19648": 218, "19650": 218, "19652": 218, "19654": 218, "19656": 218, "19658": 218, "19660": 218, "19662": 218, "19664": 218, "19666": 218, "19668": 218, "19670": 218, "19672": 218, "19674": 218, "19676": 218, "19678": 218, "19680": 218, "19682": 218, "19684": 218, "19686": 218, "19688": 218, "19690": 218, "19692": 218, "19694": 218, "19696": 218, "19698": 218, "19700": 218, "19702": 218, "19704": 218, "19706": 218, "19708": 218, "19710": 218, "19712": 218, "19714": 218, "19716": 218, "19718": 218, "19720": 218, "19722": 218, "19724": 218, "19726": 218, "19728": 218, "19730": 218, "19732": 218, "19734": 218, "19736": 218, "19738": 218, "19740": 218, "19742": 218, "19744": 218, "19746": 218, "19748": 218, "19750": 218, "19752": 218, "19754": 218, "19756": 218, "19758": 218, "19760": 218, "19762": 218, "19764": 218, "19766": 218, "19768": 218, "19770": 218, "19772": 218, "19774": 218, "19776": 218, "19778": 218, "19780": 218, "19782": 218, "19784": 218, "19786": 218, "19788": 218, "19790": 218, "19792": 218, "19794": 218, "19796": 218, "19798": 218, "19800": 218, "19802": 218, "19804": 218, "19806": 218, "19808": 218, "19810": 218, "19812": 218, "19814": 218, "19816": 218, "19818": 218, "19820": 218, "19822": 218, "19824": 218, "19826": 218, "19828": 218, "19830": 218, "19832": 218, "19834": 218, "19836": 218, "19838": 218, "19840": 218, "19842": 218, "19844": 218, "19846": 218, "19848": 218, "19850": 218, "19852": 218, "19854": 218, "19856": 218, "19858": 218, "19860": 218, "19862": 218, "19864": 218, "19866": 218, "19868": 218, "19870": 218, "19872": 218, "19874": 218, "19876": 218, "19878": 218, "19880": 218, "19882": 218, "19884": 218, "19886": 218, "19888": 218, "19890": 218, "19892": 218, "19894": 218, "19896": 218, "19898": 218, "19900": 218, "19902": 218, "19904": 218, "19906": 218, "19908": 218, "19910": 218, "19912": 218, "19914": 218, "19916": 218, "19918": 218, "19920": 218, "19922": 218, "19924": 218, "19926": 218, "19928": 218, "19930": 218, "19932": 218, "19934": 218, "19936": 218, "19938": 218, "19940": 218, "19942": 218, "19944": 218, "19946": 218, "19948": 218, "19950": 218, "19952": 218, "19954": 218, "19956": 218, "19958": 218, "19960": 218, "19962": 218, "19964": 218, "19966": 218, "19968": 218, "19970": 218, "19972": 218, "19974": 218, "19976": 218, "19978": 218, "19980": 218, "19982": 218, "19984": 218, "19986": 218, "19988": 218, "19990": 218, "19992": 218, "19994": 218, "19996": 218, "19998": 218, "l_to_send": 218, "json_to_send": 218, "json_receiv": 218, "l_receiv": 218, "sine": [218, 259, 276], "140106668681968": 218, "wallclock_axi": 218, "1638538131": 218, "1975703": 218, "2978473": 218, "3981225": 218, "498449": 218, "5987027": 218, "698947": 218, "7996597": 218, "899947": 218, "1638538132": 218, "0001943": 218, "1010473": 218, "0b10110": 218, "0x16": [218, 768], "0b1011": [218, 253], "bit_3": 218, "0b00001": 218, "0b1": [218, 235], "0b1000": [218, 235], "0b11110": 218, "bitwis": [218, 374, 407, 904, 908, 995], "num1": [218, 235], "0b110101101": 218, "num2": [218, 235], "0b101110100": 218, "0b100100100": 218, "0b111111101": 218, "0b1010": 218, "0b10100": [218, 235], "1fuzzi2fuzzi3fuzzi4": 218, "0b11011001": 218, "abcdef": [218, 225, 231, 235], "cde": 218, "lexic": [218, 434, 729], "indexerror": [218, 235, 238, 256, 295, 322, 975, 1028, 1097], "auer": 218, "aue": 218, "zerodivisionerror": [218, 231, 256, 975], "lst1": 218, "lst2": 218, "toc": 219, "treeset": 219, "searchabl": [219, 222], "diesel": 219, "vibrat": 219, "lighter": 219, "sensorrandom": 219, "sensorsin": 219, "sensorconst": 219, "wild": [219, 221, 226, 261], "yesterai": 219, "deseri": [219, 231], "decod": [219, 231, 238, 241, 277, 283, 294, 297, 1026, 1072], "swallow": [219, 809, 975], "walkthrough": [219, 221, 226, 1145], "1h": 219, "exchangeformat": 219, "test_mqtt_format": 219, "parser": [219, 231, 285, 301, 333, 661, 1028, 1132], "mosquitto_sub": [219, 1092], "writer": [219, 737, 822], "deserializeerror": 219, "dangl": [219, 377, 548, 562], "fahrenheit": [221, 345, 347, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 448, 649, 687, 728, 730, 731], "nonconst": [221, 560], "getchar": [221, 351, 353, 358, 367], "dry": 221, "verif": [221, 1081], "umlaut": [221, 222, 307, 1007, 1089], "\u00f6": [221, 241, 1089], "canari": 221, "asid": [221, 385, 386, 398, 660, 937], "brainfuck": 221, "nok": [221, 697, 931], "singli": [221, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "typedef": [221, 401, 404, 408, 417, 421, 426, 427, 647, 649, 687, 695, 711, 728, 730, 731, 798, 946], "commonplac": [221, 1135], "boundari": [221, 231, 277, 407, 721, 876], "neighborhood": 221, "signed": [221, 361, 410], "unsigned": 221, "excurs": [221, 451, 1075], "pointerarith": 221, "lower_bound": [221, 268, 303, 587, 592, 611, 615, 644, 731], "for_each": [221, 268, 592, 611, 615, 644, 695, 731], "diagram": [221, 451, 469, 471, 791, 875, 882, 884], "search_by_lastnam": [221, 640, 641, 642], "const_iter": [221, 542, 586, 589, 590, 591, 593, 608, 647, 662, 695, 696], "calloper": [221, 525], "exc": [221, 525], "ostream": [221, 525, 551, 711, 1117], "paint": [221, 630, 644, 731], "reverse_copi": [221, 268, 525, 592, 611, 615, 644, 731], "cin": [221, 594, 612, 614, 630, 644, 731], "accumul": [221, 525], "raci": [221, 525], "wsl2": [221, 248, 250, 268, 270, 329], "libsqlite3": [221, 435], "libboost": 221, "libgtk": 221, "prosaic": 221, "roman": 221, "mad": [221, 409], "wxwidget": 221, "lieb": [222, 283], "gr\u00fc\u00dfe": [222, 283], "utf8": 222, "distil": [222, 282, 308, 973, 1045], "4j": 223, "unlimit": [223, 815, 1007], "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [223, 256, 273, 277, 295, 317], "0xdeadbeef": [223, 225, 231, 277, 283, 317, 506], "3735928559": [223, 225, 231, 235, 277, 283, 317], "0b10010011": 223, "ippi": 223, "0b0101": 223, "0101": 223, "teifl": 223, "fun1": 223, "fun2": 223, "ipykernel_165524": 223, "729327466": 223, "nsecond": [223, 1020], "rline": 223, "carriag": [223, 364, 1020], "neuer": 223, "ordner": 223, "euer": 223, "regex_str": [223, 241], "calim": 223, "yaaai": 223, "needl": [223, 1014, 1022], "haystack": [223, 1014, 1022], "finit": [223, 272, 379, 867], "haystack_s": 223, "0x7fe07c0cdf90": 223, "list_iter": [223, 241, 295], "0x7fe07c0cd7f0": 223, "unicode_code_point": 223, "l_new": 223, "ijk": 223, "mengenlehr": 223, "s1": [223, 231, 235, 238, 241, 256, 263, 273, 283, 295, 451, 468, 498, 557, 651, 657, 705, 1025], "s2": [223, 231, 235, 238, 241, 256, 263, 273, 283, 295, 451, 468, 498, 557, 651, 657, 705, 1025], "gunnar": 223, "liam": 223, "maximumum": 223, "variable2": 223, "maximum2": 223, "mrmr": 223, "einser": 223, "square_numb": [223, 1023], "squares_gener": 223, "other_d": [223, 256], "nove": 223, "isspac": [223, 225, 228, 231, 256, 277, 1022], "buchhaltung": [223, 838, 860, 861], "startswith": [223, 231, 260, 261, 263, 277, 431, 1022, 1095], "buch": [223, 1127], "oooo": 223, "isupp": [223, 231, 241, 277, 1022], "zz": 223, "traurig": 223, "substr": [223, 225, 231, 241, 256, 263, 277, 295, 1117], "gid": [223, 231, 729, 805, 806, 813, 815, 823, 895, 910, 1054], "count_byt": 223, "nbyte": 223, "2691": [223, 729, 834], "miscellanea": [224, 898], "brace": [224, 231, 277, 351, 374, 377, 389, 449, 542, 551, 583, 585, 590, 603, 604, 647, 687, 696, 728, 730, 731, 1004, 1007], "hour_of_dai": 224, "ein_str": 225, "ein_anderer_str": 225, "fghjgfgh": 225, "dfghgfgh": 225, "do_someth": [225, 244, 317, 380, 382, 390, 405, 419, 704, 1004], "komplett": 225, "returnwert": [225, 1127], "sinnloser": 225, "weis": [225, 1148], "vorgenommen": 225, "obacht": 225, "140672599989840": 225, "140672464974720": 225, "hoechst": [225, 263], "rechnern": 225, "100000": [225, 241, 660, 883, 1081], "": [225, 241], "exponenti": [225, 1007, 1021], "__annotations__": [225, 235, 256, 277, 291, 976], "__closure__": [225, 235, 256, 277], "__code__": [225, 235, 256, 277], "__delattr__": [225, 228, 231, 235, 253, 256, 277, 295], "__dir__": [225, 228, 235, 253, 256, 277, 295], "__format__": [225, 228, 231, 235, 253, 256, 277, 295], "__ge__": [225, 228, 231, 235, 253, 256, 277, 295, 995], "__get__": [225, 235, 256, 277], "__getattribute__": [225, 228, 231, 235, 253, 256, 277, 295], "__globals__": [225, 235, 256, 277], "__gt__": [225, 228, 231, 235, 253, 256, 277, 295], "__hash__": [225, 228, 231, 235, 253, 256, 277, 295], "__init_subclass__": [225, 228, 235, 253, 256, 277, 295], "__kwdefaults__": [225, 235, 256, 277], "__ne__": [225, 228, 231, 235, 253, 256, 277, 295, 995], "__new__": [225, 228, 231, 235, 253, 256, 277, 295], "__qualname__": [225, 235, 256, 277], "__reduce__": [225, 228, 231, 235, 253, 256, 277, 295], "__reduce_ex__": [225, 228, 235, 253, 256, 277, 295], "__setattr__": [225, 228, 231, 235, 253, 256, 277, 295], "__sizeof__": [225, 228, 231, 235, 253, 256, 277, 295], "__subclasshook__": [225, 228, 235, 253, 256, 277, 295], "karteikart": 225, "my_formatted_person": 225, "123425041997": 225, "caros_str": 225, "joergs_str": 225, "0x7ff0dc48b490": 225, "next_po": 225, "tim": [225, 235, 313, 314], "ugli": [225, 235, 249, 258, 259, 272, 279, 280, 346, 351, 525, 731, 803, 808, 833, 834, 874, 973, 974], "flat": [225, 235, 398, 424, 425, 945, 946], "puriti": [225, 235], "silenc": [225, 235, 390, 821], "ambigu": [225, 235, 377, 412, 413, 414, 561, 661, 838], "refus": [225, 235, 244, 441, 751, 804, 875, 891, 950], "temptat": [225, 235], "dutch": [225, 235], "honk": [225, 235], "wahr": 225, "falsch": [225, 238, 1134], "kriegt": 225, "nachkommastellen": 225, "moeglichkeit": 225, "f_str": 225, "punkt_po": 225, "nachkomma_str": 225, "praezedenz": 225, "wandel": 225, "vorn": 225, "anhaengen": 225, "wuenschen": 225, "wuerd": 225, "appendleft": 225, "extendleft": 225, "relem": 225, "popleft": 225, "sorted_l": 225, "sorted_t": 225, "sorted_": 225, "subtext": 225, "ssissippi": 225, "140672464726576": 225, "copied_text": 225, "140672464784832": 225, "140672464784064": 225, "140672599989872": 225, "140672464751872": 225, "140672464768512": 225, "140672464594880": 225, "jkl": 225, "suesser": [225, 231, 238, 241, 244, 260], "sechser_gewuerfelt": 225, "n_tri": [225, 228, 263, 1011], "versag": [225, 263], "eva": [225, 277, 1014], "xrang": [225, 1015], "0x7ff0dc48bed0": 225, "hann": 225, "gruess": 225, "gott": [225, 256, 340], "fill_in_us": 225, "scho": 225, "my_db": 225, "uniq_dict": 225, "konfigurierbaren": 225, "startwert": 225, "ausgibt": 225, "sqnum": 225, "0x7ff014b01820": 225, "xslx": 225, "yz": 225, "lret": 225, "ochwa": 225, "followup": [226, 287, 290, 492, 1065], "unbalanc": 226, "geospati": 226, "gdal": 226, "sweigart": [226, 240, 282, 1076], "datenypen": 227, "libarari": 227, "chainmap": 227, "dequ": [227, 719], "suchalgorithmen": 227, "51139385": 228, "77397a312b47": 228, "50924272": [228, 231], "20210728": [228, 231, 1002], "eine_komplizierte_funkt": 228, "endeffekt": 228, "zusammenzuzaehlen": 228, "tarnt": 228, "vergeblich": 228, "komplexitaet": 228, "zahl_als_str": 228, "bledsinn": 228, "try_no": 228, "blahblahblah": 228, "cxyxyyyyxi": 228, "table_str": 228, "table_dict": 228, "139769175732912": 228, "139769175738624": 228, "satan_str": 228, "satan_int": 228, "result_of_print": 228, "result_of_evald_print": 228, "code_str": [228, 238], "compiled_cod": 228, "woswasi": [228, 235], "0x7f1e91eb42f0": 228, "philipp": [228, 235, 238, 256, 263, 277, 295, 449, 524, 596, 608, 640, 642, 1065, 1067, 1071, 1073, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "lastnma": 228, "0x7f1e8c0fe2e0": 228, "__abs__": [228, 235, 253], "__and__": [228, 235, 295, 995], "__bool__": [228, 235, 253], "__ceil__": [228, 235, 253], "__divmod__": [228, 235, 253], "__float__": [228, 235, 253, 277], "__floor__": [228, 235, 253], "__floordiv__": [228, 235, 253, 995], "__getnewargs__": [228, 231, 235, 253, 277], "__index__": [228, 235], "__int__": [228, 235, 253, 277, 294], "__invert__": [228, 235], "__lshift__": [228, 235, 995], "__mod__": [228, 231, 235, 253, 277, 995], "__mul__": [228, 231, 235, 253, 277, 995], "__neg__": [228, 235, 253], "__or__": [228, 235, 295, 995], "__pos__": [228, 235, 253], "__pow__": [228, 235, 253, 995], "__rand__": [228, 235, 295], "__rdivmod__": [228, 235, 253], "__rfloordiv__": [228, 235, 253], "__rlshift__": [228, 235], "__rmod__": [228, 231, 235, 253, 277], "__rmul__": [228, 231, 235, 253, 277], "__ror__": [228, 235, 295], "__round__": [228, 235, 253], "__rpow__": [228, 235, 253], "__rrshift__": [228, 235, 995], "__rshift__": [228, 235, 995], "__rsub__": [228, 235, 253, 295, 995], "__rtruediv__": [228, 235, 253], "__rxor__": [228, 235, 295], "__sub__": [228, 235, 253, 295, 995], "__truediv__": [228, 235, 253, 995], "__trunc__": [228, 235, 253], "__xor__": [228, 235, 295, 995], "as_integer_ratio": [228, 235, 253], "bit_length": [228, 235], "conjug": [228, 235, 253], "denomin": [228, 235], "from_byt": [228, 235], "to_byt": [228, 235], "0x7f1e8c0b3130": 228, "int_list": 228, "0x7f1e8c0fe340": 228, "0x7f1e8c0fe760": 228, "u1": 228, "u2": 228, "type_of_us": 228, "scrambl": 228, "hansj\u00f6rg": [228, 431], "gr\u00f6jsnah": 228, "class_str": 228, "1997": [228, 238, 1001, 1065, 1067, 1071, 1073], "0x7f1e8c1c2e50": 228, "joleckmi": 228, "cmdline": 229, "excess": [229, 380], "provocantli": 229, "udemi": [229, 233], "pybai": [229, 1076], "suchzeit": 230, "everywher": [230, 245, 410, 425, 441, 651, 790, 928, 1014], "d_as_str": 231, "received_d": 231, "1939": 231, "145415": 231, "bytes_or_buff": [231, 277], "expos": [231, 277, 539, 625, 809, 875, 883, 884, 918], "strict": [231, 251, 277, 295, 446, 460, 467, 481, 495, 547, 731, 1025, 1106], "__contains__": [231, 277, 295], "format_spec": [231, 256, 277], "getattr": [231, 235, 256, 277, 989], "__getitem__": [231, 277, 1097, 1098], "__iter__": [231, 277, 295, 980], "__len__": [231, 277, 295], "casefold": [231, 277], "caseless": [231, 277], "fillchar": [231, 277], "pad": [231, 277, 1021], "occurr": [231, 277, 354], "codec": [231, 238, 241, 277, 283, 1089], "unicodeencodeerror": [231, 238, 241, 256, 277, 283, 975, 1089], "xmlcharrefreplac": [231, 277], "register_error": [231, 277], "suffix": [231, 277], "expandtab": [231, 256, 277], "tabsiz": [231, 277], "lowest": [231, 277, 374, 380, 938, 939, 1026], "format_map": [231, 277], "isalnum": [231, 277, 1022], "alphabet": [231, 277, 354, 409, 431, 822, 1089], "isascii": [231, 277], "007f": [231, 277], "isdecim": [231, 277], "iskeyword": [231, 241, 277], "isnumer": [231, 277], "isprint": [231, 277, 354, 382], "printabl": [231, 277, 354, 975], "istitl": [231, 277], "uncas": [231, 277], "pq": [231, 277], "ljust": [231, 277], "removeprefix": [231, 277], "removesuffix": [231, 277], "rindex": [231, 277, 1022], "rpartit": [231, 277], "discard": [231, 277, 295, 413, 559, 560, 697, 820, 821], "splitlin": [231, 277], "keepend": [231, 277], "swapcas": [231, 277], "titlecas": [231, 277], "lookuperror": [231, 256, 277, 975], "untouch": [231, 277, 778], "zfill": [231, 277], "maketran": [231, 277], "usabl": [231, 277, 373, 452, 503, 658, 885], "numerischen": 231, "ecma": 231, "3rd": [231, 737], "interchang": [231, 629, 711, 1089], "marshal": 231, "pickl": [231, 235], "simplejson": 231, "foo": [231, 263, 273, 277, 295, 519, 660, 693, 711, 975, 1016], "baz": 231, "u1234": 231, "sort_kei": 231, "getvalu": 231, "compact": [231, 380], "mydict": 231, "obj": [231, 256, 487, 746, 747, 756, 989, 997, 1097, 1098], "x08ar": 231, "as_complex": 231, "dct": 231, "__complex__": 231, "object_hook": 231, "2j": 231, "parse_float": 231, "encode_complex": 231, "serializ": 231, "1j": 231, "jsonencod": 231, "iterencod": 231, "scanner": 231, "jsondecodeerror": 231, "jsondecod": 231, "msg": [231, 244, 365, 450, 454, 942, 944, 945, 949, 971, 974, 975], "unformat": 231, "lineno": [231, 238], "colno": 231, "delattr": [231, 235, 256], "setattr": [231, 235, 256, 989], "__setstate__": [231, 235], "with_traceback": [231, 235], "tb": [231, 235], "__traceback__": [231, 235], "__cause__": [231, 235], "__context__": [231, 235], "__suppress_context__": [231, 235], "parse_int": 231, "parse_const": 231, "object_pairs_hook": 231, "nan": [231, 263, 1081, 1093], "num_str": 231, "_w": 231, "0x7f99fff1bb70": 231, "raw_decod": 231, "extran": 231, "skipkei": 231, "ensure_ascii": 231, "check_circular": 231, "allow_nan": 231, "recogn": [231, 575, 884, 1133], "sensibl": 231, "circular": 231, "recursionerror": [231, 256, 975], "compliant": [231, 988], "item_separ": 231, "key_separ": 231, "_one_shot": 231, "chunk": [231, 322, 410, 772, 910, 1078, 1089], "bigobject": 231, "mysocket": 231, "fp": 231, "inf": 231, "complianc": 231, "ippolito": 231, "redivi": 231, "140299267714496": 231, "140299267930496": 231, "schweissparameter_aussi": 231, "strom_ma": 231, "200004": 231, "spannung_v": 231, "aufs_kabel": 231, "maschine_112": 231, "kabel": [231, 235], "vom_kabel": 231, "schweissparameter_eini": 231, "strom_a": 231, "hal": 231, "2c445fb3": 231, "6ca4": 231, "b9d9": 231, "7cfbbff55326": 231, "doesnt_exist": 231, "_a666": 231, "140299402960464": 231, "0b10000000000000000000000000000000000000000000000000000000000000000": [231, 235, 256, 273], "140299327492352": 231, "func_fals": 231, "func_tru": 231, "sex_opt": 231, "140298898107648": 231, "t_mit_einem_el": 231, "supi": 231, "squares_map": 231, "squares_set": 231, "numtri": 231, "even_numb": [231, 295], "mississppi": 231, "xxxx": 231, "nbin": [231, 238, 263, 277], "ndaemon": [231, 238, 263, 277], "nadm": [231, 238, 263, 277], "nlp": [231, 238, 263, 277], "nsync": [231, 238, 263, 277], "nshutdown": [231, 238, 263, 277], "nhalt": [231, 238, 263, 277], "nmail": [231, 238, 263, 277], "noper": [231, 238, 263, 277], "ngame": [231, 238, 263, 277], "nftp": [231, 238, 263, 277], "nnobodi": [231, 238, 263, 277], "napach": [231, 238, 263, 277], "nsystemd": [231, 238, 263, 277], "ntss": [231, 238, 263, 277], "ndbu": [231, 238, 263, 277], "npolkitd": [231, 238, 263, 277], "navahi": [231, 238, 263, 277], "nunbound": [231, 238, 263, 277], "ndnsmasq": [231, 238, 263, 277], "nnm": [231, 238, 263, 277], "nusbmuxd": [231, 238, 263, 277], "ngluster": [231, 238, 263, 277], "nrtkit": [231, 238, 263, 277], "npipewir": [231, 238, 263, 277], "ngeoclu": [231, 238, 263, 277], "nchroni": [231, 238, 263, 277], "nsaslauth": [231, 238, 263, 277], "nradvd": [231, 238], "nrpc": [231, 238, 263, 277], "nqemu": [231, 238, 263, 277], "nopenvpn": [231, 238, 263, 277], "ncolord": [231, 238, 263, 277, 900], "nrpcuser": [231, 238, 263, 277], "nabrt": [231, 238, 263, 277], "nflatpak": [231, 238, 263, 277], "ngdm": [231, 238, 263, 277], "ngnome": [231, 238, 263, 277], "nvboxadd": [231, 238, 263, 277], "nsshd": [231, 238, 263, 277], "ntcpdump": [231, 238, 263, 277], "njfasch": [231, 238, 263, 277], "nmosquitto": [231, 238, 263, 277], "nsomeon": [231, 238], "1001": [231, 238, 241, 604, 605, 606, 607, 823, 835, 866, 895], "move_to_end": 231, "thermometera": 231, "thermometerb": 231, "get_average_temperatur": 231, "th_list": 231, "ipykernel_9164": 231, "859664274": 231, "2942790015": 231, "0x7fac83797be0": 231, "basisklass": 231, "level2_1": 231, "l21": 231, "level2_2": 231, "level3": 231, "jedi": 231, "blueey": 231, "droid": 231, "r2d2": 231, "derivednoctor": 231, "dnoctor": 231, "derivedctorcallingsup": 231, "derivedctorcallingbasector": 231, "__firstnam": 231, "__lastnam": 231, "_user__firstnam": 231, "_user__lastnam": 231, "lightsab": 231, "padawan": 231, "arithmeticerror": [231, 256, 975], "waaah": 231, "abgebrannt": 231, "puh": 231, "intakt": 231, "is_even": [231, 235, 664, 665, 666, 667], "0x7fac81f52df0": 231, "0x7fac81cb5700": 231, "progamm": 231, "tumpfback": 231, "och": 231, "umpfback": 231, "rt": [231, 731, 755, 759, 769, 780, 782, 787, 790, 793, 796, 799, 874], "wholefil": 231, "notepad": 232, "betreiben": [232, 1134, 1141, 1142], "unterschiedlichen": 232, "sinnvol": 232, "umgebungen": 232, "unausweichlich": 232, "installationsverzeichni": 232, "verzeichniss": [232, 1136], "ausf\u00fchren": 232, "hernimmt": 232, "wei\u00df": 232, "rennt": 232, "ordereddict": 233, "__mro__": 233, "successor": [234, 374], "repeatedli": [234, 604, 1088], "kantenlaeng": 235, "ipykernel_101004": 235, "2437887948": 235, "0x10": [235, 238, 438], "0b1111111111111111111111111111111111111111111111111111111111111111": [235, 256, 273, 277], "1267650600228229401496703205381": 235, "735611673": 235, "ndigit": [235, 256, 353], "0b101": 235, "0b100": [235, 238], "register_statu": 235, "0b1001000": 235, "0b00001000": 235, "strom": 235, "liegt_strom_an": 235, "0b00111110": 235, "ever": [235, 295, 429, 438, 469, 817, 883, 1006, 1130], "deadbeef": [235, 506, 877], "gross": 235, "doktor": 235, "jawui": 235, "akademik": 235, "ndef": 235, "tdef": [235, 256], "geh": 235, "hochkomplex": 235, "verendet": 235, "euler": 235, "sche": 235, "dokumentiern": 235, "koennt": 235, "varianc": 235, "fmean": 235, "geometric_mean": 235, "harmonic_mean": 235, "harmon": 235, "median": 235, "median_low": 235, "median_high": 235, "median_group": 235, "50th": 235, "percentil": 235, "multimod": 235, "quantil": 235, "centr": 235, "nearest": [235, 472, 1083], "doctest": 235, "ellipsi": [235, 256], "8333333333": 235, "8333": 235, "spread": 235, "pvarianc": 235, "pstdev": 235, "stdev": [235, 938, 940], "38961843444": 235, "recalcul": 235, "statisticserror": 235, "normaldist": 235, "x1": 235, "unchang": [235, 648, 969], "jointli": 235, "rescal": 235, "cdf": 235, "cumul": [235, 423], "inv_cdf": 235, "coeffici": 235, "ovl": 235, "agreement": 235, "densiti": 235, "8035050657330205": 235, "dx": 235, "quartil": 235, "decil": 235, "zscore": 235, "score": 235, "from_sampl": 235, "readonli": 235, "dataset": [235, 1079, 1081, 1094, 1096, 1098, 1100], "subcontrari": 235, "reciproc": 235, "quantiti": [235, 267, 1083], "earn": 235, "5625": 235, "midpoint": 235, "estim": 235, "nomin": 235, "taught": [235, 999, 1135], "aabbbbbbbbcc": 235, "aabbbbccddddeeffffgg": 235, "986893273527251": 235, "0th": 235, "100th": 235, "xbar": 235, "0810874155219827": 235, "3720238095238095": 235, "01875": 235, "gesamter_gruss": 235, "excelsheet": 235, "hinters": 235, "gabali": 235, "helen": 235, "fischer": 235, "sssklndkfgv": 235, "fosvh": 235, "worl": [235, 238, 1013], "lowr": 235, "dlrow": [235, 1013], "olleh": [235, 1013], "even_numbers_fun": 235, "even_numbers_gen": 235, "evennum": 235, "even_filt": 235, "tausend": 235, "1234250497": [235, 238, 241, 244, 449, 456, 608], "1234250597": 235, "users_json_str": 235, "liest": 235, "kontrah": 235, "verwandelt": 235, "gelesenes_ding_wieder_als_dict": 235, "schatz": 235, "erich": 235, "koxi": 235, "hatkeinenwert": 235, "fn": [235, 414, 431, 729, 1100], "ul": [235, 368], "ln": [235, 414], "1st": [236, 1119], "einschub": 236, "filterketten": 236, "datensatz": 236, "letzten": 236, "recapitul": 237, "naeherungsverfahren": 238, "addieren": 238, "140606563548752": 238, "wirklich": [238, 1125], "0o10": 238, "teilbar": 238, "00001": 238, "abd": [238, 574], "i1": [238, 273], "140606428182128": 238, "140606428182896": 238, "2345010101": 238, "elizabeth": [238, 1065, 1067, 1071, 1073, 1084], "1901": 238, "evi": 238, "maxim": [238, 429, 884], "wuerfeln": 238, "freuen": 238, "sechser": 238, "faellt": 238, "jammern": 238, "versuch_numm": 238, "versuchen": 238, "jammert": 238, "hlo": [238, 1013], "output_list": [238, 1058], "nullt": 238, "34567654567": 238, "gsd": 238, "another_t": 238, "symmetisch": 238, "netzwerkkommunik": 238, "request_to_send": 238, "request_str_to_send": 238, "1651046407": 238, "3633313": 238, "cabl": [238, 809], "request_str_from_c": 238, "request_from_c": 238, "1651046335": 238, "8477345": 238, "139909434561408": 238, "139909544402512": 238, "139909544402544": 238, "139909543772528": 238, "139909433666288": 238, "roo": [238, 277, 869], "xf6": [238, 241, 283, 1007, 1089], "joerg_latin": 238, "xf6rg": [238, 241, 283, 295, 1089], "j\u0456rg": [238, 241, 283, 1089], "cyclic": 240, "140616191009600": 241, "140616191012720": 241, "140116274372176": 241, "0x7f6f5cc2de50": 241, "0x7f6f5cc2df30": 241, "18446744073709551617": 241, "multi_dict": 241, "ipykernel_189565": 241, "1743780635": 241, "140115753096128": 241, "ntri": 241, "bytes_joerg": 241, "bytes_joerg_iso_latin_1": 241, "bytes_joerg_utf_32": 241, "xff": [241, 283], "xfe": [241, 283], "x00": [241, 283, 882], "x00j": [241, 283], "x00r": [241, 283], "x00g": [241, 283], "bytes_joerg_utf_16": 241, "xfej": 241, "bytes_joerg_utf_8": 241, "xc3": [241, 277, 283, 1007, 1089], "xb6rg": [241, 277, 283, 1089], "iso_latin_1": 241, "russian": 241, "bytes_received_by_russian": 241, "2435": 241, "010d": 241, "0000000666": 241, "ssi": 241, "garbag": [241, 424, 431, 447, 706, 718, 884, 911, 973], "ipykernel_4000": 241, "3227798639": 241, "ahja": 241, "24000": 241, "24500": 241, "25000": 241, "25500": 241, "26000": 241, "26500": 241, "__del__": 241, "whe": 241, "13397": 241, "116985": 241, "120725": 241, "118110": 241, "0x7fe3a392aa30": 241, "test_person_bas": 243, "pluggi": [243, 261, 1064, 1110], "rootdir": [243, 261, 778, 1064, 1110], "test_persondb_bas": 243, "test_pytest_demo": 243, "xfail": [243, 1110], "test_persondb": 243, "test_duplicate_svnr": 243, "test_update_sunnycas": 243, "test_update_notexist": 243, "test_update_exact_dupl": 243, "former": [243, 1016], "persondb": 243, "sqlite": [243, 435, 1032, 1085], "ics_demand": 243, "maco": [243, 322, 327], "woe": 243, "homebrew": 243, "brew": 243, "flaviocop": 243, "str_mit_666": 244, "140240419976192": 244, "140240419593568": 244, "aclass": 244, "almostempti": 244, "beenther": 244, "kuckucksei": 244, "chirp": 244, "some_bullshit": 244, "bad_thing_happen": 244, "do_some_bullshit": 244, "boah": 244, "python_cod": 244, "a_global_vari": 244, "globale_vari": 244, "140240513015376": 244, "140240513014256": 244, "140240419270768": 244, "140240419271792": 244, "storesanintegerandmodifiesit": 244, "the_int": 244, "my_int": 244, "saiami": 244, "storesalistandmodifiesit": 244, "the_list": 244, "append_someth": 244, "salami": 244, "compute_squar": 244, "satanicerror": 244, "jess": 244, "invalidsvnr": 244, "rex_lin": 244, "json_str": [244, 1072], "python_l": 244, "0x7f8c0551f490": 244, "behandlung": 246, "kurzer": 246, "reicht": [246, 1125], "unwichtig": 246, "weggelassen": 246, "\u00fc": [246, 1089], "jeden": 246, "teilnehmer\u00fcbung": 246, "kernsprach": 246, "rvalu": [246, 268, 303, 550, 655, 687, 697, 703, 706, 707, 708, 709, 712, 720, 728, 730, 731, 1129, 1130, 1131], "constexpr": [246, 247, 248, 268, 270, 687, 697, 721, 730, 731, 1130], "uniform": [246, 247, 248, 250, 303, 429, 449, 551, 583, 603, 604, 647, 687, 696, 728, 730, 731, 988, 1130], "initialisierung": [246, 1146], "infer": 246, "speichermodel": 246, "atomar": [246, 1128, 1146], "standardbibliothek": 246, "regu\u00e4r": 246, "trait": [246, 303], "zufallszahlen": 246, "zeitbibliothek": 246, "sprachsyntax": 246, "deduct": [246, 662, 664], "erweiterungen": 246, "ge\u00e4ndert": 246, "definitionen": 246, "bibliothek": 246, "zusatzvari": 246, "constinit": 246, "modularisierung": [246, 323, 1127], "versionierung": 246, "routinen": 246, "synchronisierung": 246, "werkzeug": [246, 1127, 1134, 1136, 1141, 1144], "kalend": [246, 1124], "zeitzonen": 246, "zus\u00e4tz": 246, "initializer_list": [247, 248, 250, 303, 450, 451, 478, 479, 647, 649, 687, 730, 731], "handwrit": [247, 248, 250, 303, 687, 703, 730, 731], "weak_ptr": [247, 248, 250, 303, 703, 728, 730, 731], "boilerpl": [247, 248, 250, 286, 302, 303, 436, 687, 688, 689, 707, 730, 731, 954, 1126], "condition_vari": [247, 248, 250, 259, 303, 720, 730, 731, 1130], "emplace_back": [247, 248, 583], "cref": [247, 248], "interoper": [248, 250, 268, 270], "wazoo": [248, 250, 268, 270], "anviron": [248, 250], "submodul": [248, 250, 504, 567], "chdir": [248, 250], "gtest_main": [248, 454, 503, 505, 506, 526, 529, 541, 567, 705, 706, 1116, 1121], "dummy_suit": 248, "sticki": [249, 258, 259, 279, 280, 322, 327, 731, 808, 833, 874], "insod": 250, "lvalu": [250, 655, 656, 659, 687, 697, 703, 707, 712, 720, 728, 730, 731], "afterword": [250, 656, 687, 730, 731], "ain": [250, 429, 1003], "singleton": [251, 446, 447, 453, 467, 481, 495, 547, 731, 1133], "inflex": [251, 349, 446, 460, 467, 473, 474, 481, 495, 547, 731], "proxi": [251, 269, 271, 272, 293, 297, 328, 446, 453, 455, 456, 467, 481, 495, 547, 731, 1105, 1133], "serverthread": [251, 471, 485], "my_si": [253, 983], "function_returns_two_valu": 253, "140134238766608": 253, "sizeof": [253, 353, 363, 374, 395, 402, 403, 407, 410, 530, 542, 554, 582, 648, 710, 878, 896, 900, 901, 902, 908, 909, 910, 911, 936, 942, 945, 949, 1015], "__getformat__": 253, "__setformat__": 253, "fromhex": 253, "0b0010": 253, "0b1001": 253, "key_list": 253, "key_tupl": 253, "evil_list": 253, "evil_list_2": 253, "neinem": 253, "nviel": 253, "doze_path": [253, 256], "compiled_regex": 253, "l_json": 253, "l_json_sent": 253, "received_data": 253, "0x7f73869f06c0": 253, "create_avg_item": 253, "ninetynin": 253, "koppel": 255, "netzwerk": [255, 323, 1134, 1144, 1147], "condens": [255, 430], "nprint": 256, "noption": 256, "nfile": 256, "nsep": 256, "nend": 256, "nflush": 256, "forcibli": 256, "didact": [256, 340, 343, 566, 568, 569, 1133], "fullnam": [256, 263, 992, 996], "nerst": 256, "nzweit": [256, 317], "andere_list": 256, "neue_list": 256, "140323934455312": 256, "140323934455344": 256, "140323934455376": 256, "140323852147712": 256, "140323933649904": 256, "140323833601584": 256, "frozenset": [256, 273, 294], "__builtins__": [256, 277, 976], "gr\u00fc\u00df": 256, "nocheinprogramm": 256, "ocheinprogramm": 256, "dfghgfdfghj": 256, "jhghgh": 256, "matchstr": 256, "compiled_match": 256, "tprint": 256, "num_ss": 256, "isi": [256, 508, 524, 1093], "strippeditem": 256, "yet_another_d": 256, "s3": [256, 263, 468], "s4": 256, "isdisjoint": [256, 263, 295, 1025], "nnoteworthi": 256, "nil": 256, "__package__": [256, 315, 976], "__loader__": [256, 315, 976], "__spec__": [256, 315, 976], "modulespec": 256, "loader": [256, 419, 437, 442, 952, 969, 1144], "__build_class__": 256, "__import__": 256, "dont_inherit": 256, "_feature_vers": 256, "divmod": 256, "raw_input": 256, "ipkernel": 256, "ipythonkernel": 256, "0x7f9fb16abcd0": 256, "class_or_tupl": 256, "aiter": 256, "async_iter": 256, "anext": 256, "oct": [256, 860, 882, 884], "pow": [256, 559, 560, 710], "exp": [256, 483], "notimpl": [256, 295, 995], "memoryview": 256, "__debug__": 256, "stopasynciter": [256, 975], "generatorexit": [256, 975], "keyboardinterrupt": [256, 272, 975], "importerror": [256, 975], "environmenterror": [256, 1105], "ioerror": [256, 1111], "eoferror": [256, 975], "notimplementederror": [256, 975], "unboundlocalerror": [256, 975], "indentationerror": [256, 975], "taberror": [256, 975], "unicodeerror": [256, 975], "unicodedecodeerror": [256, 975], "unicodetranslateerror": [256, 975], "floatingpointerror": [256, 975], "overflowerror": [256, 975], "systemerror": [256, 975], "referenceerror": [256, 975], "memoryerror": [256, 975], "buffererror": [256, 975], "userwarn": [256, 975], "encodingwarn": [256, 975], "deprecationwarn": [256, 975], "pendingdeprecationwarn": [256, 975], "syntaxwarn": [256, 975], "runtimewarn": [256, 975], "futurewarn": [256, 975, 1093], "importwarn": [256, 975], "unicodewarn": [256, 975], "byteswarn": [256, 975], "resourcewarn": [256, 975], "connectionerror": [256, 975], "blockingioerror": [256, 975], "brokenpipeerror": [256, 975], "childprocesserror": [256, 975], "connectionabortederror": [256, 975], "connectionrefusederror": [256, 975], "connectionreseterror": [256, 975], "fileexistserror": [256, 975], "isadirectoryerror": [256, 975], "notadirectoryerror": [256, 975], "interruptederror": [256, 975], "processlookuperror": [256, 975], "timeouterror": [256, 975], "closefd": 256, "beopen": 256, "1995": [256, 457, 1065, 1067, 1071, 1073], "nation": [256, 882], "1991": [256, 1001], "sticht": 256, "centrum": 256, "amsterdam": [256, 1001], "credit": [256, 749, 1002], "cwi": 256, "cnri": 256, "zope": 256, "cast": [256, 374, 530, 618, 625, 737], "execfil": 256, "_pydev_imp": 256, "_pydev_execfil": 256, "glob": [256, 406, 866, 923, 971, 986, 1117], "runfil": 256, "_pydev_bundl": 256, "pydev_umd": 256, "wdir": 256, "__ipython__": 256, "exclud": [256, 425, 552], "transient": 256, "display_id": 256, "get_ipython": 256, "interactiveshel": 256, "zmqshell": 256, "zmqinteractiveshel": 256, "0x7f9fb1516200": 256, "config_fil": 256, "srcdir": 256, "dstdir": 256, "dst": [256, 369, 419, 508, 549, 568, 577, 578, 584, 1026], "untrust": 259, "lan": 259, "programmat": [259, 475, 875, 883, 931, 951, 1101], "stty": 259, "termio": 259, "ioctl_tti": 259, "setseri": 259, "tty": [259, 809, 864, 936, 942, 966], "tty_io": 259, "bidirection": 259, "nake": 259, "tiocgseri": 259, "tiocsseri": 259, "async_low_lat": 259, "cfmakeraw": 259, "ttyusb0": [259, 809], "low_lat": 259, "serial_struct": 259, "bidir": 259, "advantec": 259, "nonetheless": [259, 262, 265, 294, 664, 1117], "mycat": 259, "mimick": [259, 705], "make_realtim": 259, "interfaceri": 259, "cif": 259, "samba": 259, "automationadmin": 259, "gsc": 259, "pd": [260, 261, 263, 267, 295, 431, 1079, 1081, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "read_csv": [260, 261, 267, 295, 431, 1079, 1081], "txn": 260, "iso8859": 260, "time_book": [260, 261, 431], "time_valuta": [260, 261, 431], "at66666666666666": 260, "bezahlung": [260, 261, 263, 431], "kart": [260, 261, 263, 431], "eur": [260, 261, 431], "95111243": [260, 431], "abbuchung": [260, 431], "onlinebank": [260, 431], "gutschrift": 260, "000000144919": 260, "339099446722187": 260, "000": [260, 295, 431, 837, 875], "card_pay": 260, "filt": 260, "9325008697": 260, "339099446790254": 260, "og": [260, 419], "237811001182": 260, "auszahlung": 260, "200075787001": 260, "tzb": 260, "anl": 260, "347159strom": 260, "200004871820": 260, "200004876265": 260, "200004848862": 260, "200004871863": 260, "dauerauftrag": 260, "qsnng6xau": 260, "00121672661": 260, "120016487112": [260, 431], "bx": 260, "000009219": 260, "entgelt": 260, "nichtdurchf\u00fchrung": 260, "032300005522384": 260, "saldo": 260, "messtechnik": 260, "602674240071": 260, "0004325259000023": 260, "oeamtc": 260, "mitgliedschaft": 260, "re_liv": 260, "billa": [260, 263, 431], "rew": 260, "dankt": [260, 261, 263, 431], "pipe_stag": 261, "max_colwidth": 261, "max_column": 261, "max_row": 261, "039": 261, "consolut": 261, "insuffici": [261, 661], "categor": [261, 430, 1083], "fuction": 261, "filt_uncat": 261, "uncat_row": 261, "unspecif": [261, 333, 756], "useless": [261, 655, 713, 822, 869, 925, 997], "food": [261, 267], "luxuri": 261, "categorize_card_pay": 261, "jet": 261, "uncertainti": 261, "categorize_v1": 261, "categorize_v2": 261, "secondari": 261, "test_categori": [261, 431], "test_bas": [261, 1064], "000009258": 261, "k002": [261, 431], "impos": [262, 265], "hurt": [262, 265, 368], "strength": [262, 265, 395, 999], "overengin": [262, 265, 368, 429, 430, 1125, 1133], "140480285361680": 263, "0xffffffffffffffff": [263, 283], "0x10000000000000000": [263, 283], "140479638276224": 263, "140480203220736": 263, "140480210406176": 263, "7940943354778932823": 263, "0x7fc4189e7c90": 263, "28800": 263, "237988": 263, "produce_dai": 263, "374557": 263, "l_mal_2": 263, "140480285361712": 263, "140479638477760": 263, "140479638427520": 263, "l4": 263, "l5": 263, "140480202528192": 263, "140479638428736": 263, "140480203212992": 263, "l6": 263, "140479598069936": 263, "is_old": 263, "ipykernel_370861": 263, "4290492544": 263, "abc123": 263, "0x7fc4189e5030": 263, "yyi": 263, "lichtenberg": [263, 449, 608, 640, 642, 1065, 1067, 1071, 1073, 1093, 1094, 1095, 1097, 1098, 1099, 1100], "persons2": [263, 1093, 1094], "set_index": [263, 1098], "sort_valu": 263, "inplac": [263, 267, 891, 1094], "flt": [263, 1095], "isin": [263, 1095], "reset_index": 263, "dropna": 263, "value_count": [263, 267], "int64": [263, 267, 1100], "conversiosn": 264, "9am": 265, "woven": [265, 269], "pipelin": [265, 340, 803, 818, 821, 822, 871, 885, 964], "accountid": 267, "accountdescript": 267, "accountparentid": 267, "storeid": 267, "storedescript": 267, "locationid": 267, "locationdescript": 267, "productid": 267, "productdescript": 267, "sales_managerid": 267, "dateyear": 267, "datequart": 267, "datemonth": 267, "datedai": 267, "categoryvers": 267, "categorycategori": 267, "categorytyp": 267, "valueunit": 267, "original_sales_pric": 267, "sale": 267, "st43": 267, "franchescini": 267, "ct14": 267, "salem": 267, "pd23": 267, "ipa": 267, "sm1": 267, "20144": 267, "201412": 267, "1779": 267, "763910": 267, "usd": 267, "st35": 267, "pd2": 267, "pepsi": 267, "sm4": 267, "201410": 267, "957113": 267, "st98": 267, "walter": 267, "pd24": 267, "amber": 267, "20142": 267, "201406": 267, "449395": 267, "st188": 267, "arrowhead": 267, "ct1": 267, "pd19": 267, "sm8": 267, "20164": 267, "201611": 267, "078689": 267, "st107": 267, "spire": 267, "ct5": 267, "san": 267, "jose": 267, "pd15": 267, "juic": 267, "sm5": 267, "20154": 267, "201512": 267, "303679": 267, "quantity_sold": 267, "sold": 267, "st4": 267, "gstore": 267, "ct13": 267, "portland": 267, "pd26": 267, "wine": 267, "000000": [267, 1081], "1069": 267, "st49": 267, "bai": 267, "depot": 267, "ct4": 267, "sacramento": 267, "pd27": 267, "20151": 267, "201501": 267, "592904": 267, "discount": 267, "st36": 267, "pricelow": 267, "arena": 267, "ct10": 267, "reno": 267, "pd22": 267, "sm3": 267, "20162": 267, "201605": 267, "4351": 267, "045830": 267, "1071": 267, "st7": 267, "street": [267, 844], "pd16": 267, "7905": 267, "590606": 267, "pd12": 267, "lemonad": 267, "20153": 267, "201507": 267, "1073": 267, "modified_model": 267, "sales_managerdescript": 267, "janet": 267, "buri": 267, "nanci": 267, "miller": 267, "setp": 267, "nan_field": 267, "bitfield": 267, "bitfi": 267, "nan_column": 267, "gabriel": [267, 693], "walton": 267, "carl": 267, "jjjjj": 267, "ref_t": 267, "datetime64": 267, "damn": 267, "ref_2015_12_04": 267, "flt_before_2015_12_04": 267, "rows_before_2015_12_04": 267, "st119": 267, "ct2": 267, "francisco": 267, "pd11": 267, "orang": [267, 1018], "pulp": 267, "sm7": 267, "kiran": 267, "raj": 267, "201503": 267, "226847": 267, "13627": 267, "793342": 267, "3427": 267, "896898": 267, "15569": 267, "353983": 267, "float64": [267, 1081], "1957": 267, "740301": 267, "572676": 267, "686587": 267, "289381": 267, "flt_product_pd2": 267, "flt_2015": 267, "flt_only_sold": 267, "flt_combin": 267, "st139": 267, "farlo": 267, "ct15": 267, "eugen": 267, "sm11": 267, "jame": 267, "frank": 267, "201511": 267, "st178": 267, "rai": 267, "ct8": 267, "beverli": 267, "hill": 267, "201508": 267, "facet": [268, 270, 603], "rich": [268, 270, 1094, 1104], "toolset": [268, 270, 621], "conceptu": [268, 270, 420, 749, 756, 894], "undergon": [268, 270], "revolut": [268, 270], "odr": [268, 693], "explor": [268, 883], "rodata": [268, 969], "unspecifi": [268, 374, 461, 533, 949, 950], "bookkeep": [269, 430], "fewer": 269, "love": [269, 1071], "closer": 269, "augment": [269, 778, 1090], "test_blah": 269, "monkeypatch": [269, 271, 272, 287, 293, 294, 297], "contextlib": 269, "chatgpt": 270, "ludwig": 270, "registri": [270, 514], "memleak": 270, "jason": [271, 272, 293], "brownle": [271, 272, 293], "contriv": [271, 272, 293, 452, 976, 1011], "subthread": [271, 272], "introductori": [271, 272, 293, 731, 874, 915, 1082, 1083, 1130], "mindset": [271, 272, 293, 297, 778], "develp": 271, "datalogg": [272, 294], "10am": 272, "reopen": 272, "drei_millionen_int": 273, "3_000_000": 273, "odd_numb": [273, 980], "odd_numbers_func": 273, "ret_num": 273, "0x7f32ccc4c610": 273, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [273, 317], "139855258515840": 273, "139856078033344": 273, "139856078226432": 273, "139856160540176": 273, "i3": 273, "i4": 273, "nope": [273, 931], "0101010101010": 273, "bash_logout": [273, 860], "bash_profil": [273, 860], "thunderbird": [273, 840, 860], "gnupg": [273, 860], "hst": 273, "gitconfig": [273, 860], "pki": [273, 860], "daham": 273, "20230403": 273, "222915": 273, "bash_histori": [273, 860], "python_histori": [273, 860], "lesshst": [273, 860], "139855258795072": 273, "139855260513728": 273, "139856085569920": 273, "doppelt": 273, "gemoppelt": 273, "trag": 273, "exakt": 273, "paarweis": 273, "read_lines_of_fil": 273, "0x7f32c7d8d390": 273, "nohead": [276, 1070, 1071, 1073], "userdb_csv": [276, 1071, 1072, 1073], "interleav": 276, "dosometh": 277, "0x7fe7fbf80df0": 277, "140634424624656": 277, "140634424623536": 277, "0o644": 277, "0b01110101": 277, "setting_blah": 277, "setting_foo": 277, "config_context": 277, "140634341074320": 277, "140634424624688": 277, "140634341076688": 277, "140634341077776": 277, "140634343012864": 277, "140634341099856": 277, "ipykernel_61373": 277, "1125713270": 277, "1234567876543234567654321234565432123456": 277, "140634281233520": 277, "140634341798400": 277, "140634341995008": 277, "140634341576640": 277, "140634341773312": 277, "140634281802304": 277, "global_vari": 277, "bar2": 277, "bar3": 277, "bar4": 277, "bar5": 277, "bar6": 277, "0x7fe7f869b7d0": 277, "0x7fe7f869b920": 277, "0x7fe7f869bbc0": 277, "punctuat": 277, "abcabcabcabcabc": 277, "rex": 277, "cba": [277, 612], "another_d": 277, "rb": 277, "30000": 277, "coreutil": 280, "autopoint": 280, "rpm": [280, 442], "fcntl": [280, 882, 900, 904, 908, 909, 910, 911, 916, 919, 942, 945, 949], "luciano": [282, 323, 324, 1076], "ramalho": [282, 323, 324, 1076], "140640823526928": 283, "0x7fe97e53c610": 283, "140640823526960": 283, "140640741310912": 283, "140640741034048": 283, "140640741341184": 283, "wasjetzt": 283, "140640722624768": 283, "140640722715136": 283, "l1_copi": 283, "my_funky_gener": 283, "meine_dumme_sequenz": 283, "0x7fe9785083a0": 283, "0x7fe98c21bce0": 283, "greeter": [283, 433, 434, 435, 439, 440, 968], "0x7fe9796976d0": 283, "140640740502720": 283, "140640722823952": 283, "140640741119552": 283, "l_copi": 283, "140640741312256": 283, "140640722734080": 283, "140640722760768": 283, "140640722739712": 283, "140640741402496": 283, "owher": 283, "0000042": [283, 1021], "bled": 283, "xfc": [283, 1007, 1089], "xdfe": [283, 1089], "gr\u045c\u043fe": [283, 1089], "\u795d\u597d": 283, "big5": [283, 1089], "xaf": 283, "xac": 283, "xa6n": 283, "unterschrift": 283, "illeg": [283, 411, 1089], "multibyt": [283, 357, 1089], "xe7": [283, 1089], "xa5": [283, 1089], "x9d": [283, 1089], "xe5": [283, 1089], "xbd": [283, 1089], "incorpor": [285, 301, 1132], "tradition": [285, 301, 697, 877, 998, 1132], "lexer": [285, 301, 1132], "aris": [285, 301, 460, 1132], "compili": [285, 301, 1132], "rant": [286, 302, 436, 731, 1099], "blacklist": [286, 302, 435, 436, 441, 444, 731], "acquaint": [287, 290], "data_to_send": 288, "data_receiv": 288, "user_receiv": [288, 1072], "140048588115008": 288, "140048588341376": 288, "d_str": [291, 627], "uebertragen": 291, "d_str_receiv": 291, "d_receiv": 291, "ala": [294, 297, 474, 565, 834, 900, 940, 1105], "frozendict": [294, 295], "filesensor": 294, "sergei": 294, "test_acquisition_loop": 294, "test_mock_csv_sink": 294, "mymockedth": 294, "nonloc": [294, 1017], "millcelsiu": 294, "acquisition_loop_util": 294, "ont": 294, "necessarili": [294, 395, 425, 582, 729, 764, 778, 815, 895, 993, 1112, 1119], "10m": [294, 940], "acquir": [294, 331, 721, 783, 925, 930, 939], "slower": [294, 419, 815], "packet": [294, 471, 772, 878, 901, 934], "transmit": 294, "datatim": 294, "read_measur": 294, "fourier": 294, "fft": 294, "011": 294, "ifft": 294, "print_": 295, "0x7f0b165fdf00": 295, "dos_path": [295, 317], "vernuenftigen": 295, "__class_getitem__": 295, "__iand__": 295, "__ior__": 295, "__isub__": 295, "__ixor__": 295, "difference_upd": 295, "intersection_upd": 295, "issubset": 295, "issuperset": 295, "symmetric_differ": 295, "symmetric_difference_upd": 295, "hallohallohallohallohallo": 295, "139685905188368": 295, "139685905188400": 295, "0x7f0b14487be0": 295, "fasschingbau": 295, "139685602274352": 295, "139685561461616": 295, "139685561690240": 295, "139685561316032": 295, "139685595970464": 295, "139685561151488": 295, "30000000": 295, "my_iter": 295, "my_print": [295, 998], "my_arg": [295, 973], "even_squar": 295, "squares_fun": 295, "squares_gen": 295, "0x7f0aefb94f20": 295, "0x7f0aefb955b0": 295, "squares_list": 295, "foobar": 295, "expr_str": 295, "expr": [295, 380, 390, 838], "skiprow": 295, "hz2": 295, "hz3_5": 295, "000566": 295, "000729": 295, "132363": 295, "229977": 295, "260597": 295, "444942": 295, "385433": 295, "638212": 295, "502710": 295, "796519": 295, "936250": 295, "972326": 295, "974442": 295, "999992": 295, "995683": 295, "973719": 295, "999245": 295, "895850": 295, "985202": 295, "768778": 295, "arang": 295, "001": [295, 371], "002": 295, "003": 295, "004": 295, "0x7f0ad44b8f70": 295, "0x7f0ad23371f0": 295, "aaarghhh": 296, "expresss": 296, "realist": [297, 894], "postpon": [297, 798], "broader": 303, "nodiscard": 303, "fallthrough": [303, 949], "noexcept": [303, 450, 484, 655, 658, 660, 675, 677, 678, 680, 681, 682, 683, 697, 707, 721], "string_view": 303, "commmandlin": 307, "omg": [307, 389, 737, 1111], "checker": [308, 313, 322], "horribl": 308, "gpio25": [308, 879], "embarass": 308, "winscp": 308, "cluster_ece19": [308, 309, 310, 311, 312, 313, 322, 731], "ece19": [308, 309, 310, 311, 313, 321, 322, 328, 329, 333, 731], "ece19_file_read": [308, 309, 310, 311, 312, 313, 322, 731], "ece19_blinklicht": [308, 309, 310, 311, 312, 322, 731], "ece19_blinklicht_oo": [309, 310, 311, 312, 322, 731], "ece19_blinklicht_abc": [311, 312, 322, 731], "ece19_blinklicht_unittest": [311, 312, 322, 731], "blinklicht": [312, 322, 327, 731], "1910420003": [313, 314], "corinna": [313, 314], "baumgartn": [313, 314, 331], "1910420002": [313, 314], "anzhelika": [313, 314, 322], "chernykh": [313, 314, 322, 331], "1910420005": [313, 314], "simon": [313, 314], "1910420006": [313, 314], "matthia": [313, 314, 331], "kappel": [313, 314, 331], "1810420009": [313, 314], "kolter": [313, 314], "1920420033": [313, 314], "kornberg": [313, 314, 331, 334], "1910420007": [313, 314], "lui": [313, 314, 331], "kraker": [313, 314, 331, 334], "1810420010": [313, 314], "leonid": [313, 314], "kudriaschov": [313, 314], "1910420008": [313, 314], "michael": [313, 314, 323, 324], "1910420010": [313, 314], "sonja": [313, 314, 331], "luka": [313, 314, 331, 334], "1910420013": [313, 314], "behnaz": [313, 314], "mehrabadi": [313, 314, 331], "1910420014": [313, 314], "moser": [313, 314, 331], "1910420015": [313, 314], "moritz": [313, 314], "nagelschmi": [313, 314, 331], "1910420018": [313, 314], "bianca": [313, 314], "reimer": [313, 314], "1910420020": [313, 314], "schmid": [313, 314, 331], "1910420021": [313, 314], "sch\u00fcttler": [313, 314], "1910420022": [313, 314], "schweiger": [313, 314, 331], "1910420024": [313, 314], "sinabel": [313, 314], "1910420025": [313, 314], "slovik": [313, 314, 331], "1910420026": [313, 314], "s\u00f6l": [313, 314, 331], "1910420027": [313, 314], "stangl": [313, 314, 331], "1910420028": [313, 314], "felix": [313, 314, 331], "themessl": [313, 314, 331], "1920420035": [313, 314], "astrid": [313, 314], "vogel": [313, 314, 331], "1810420029": [313, 314], "florian": [313, 314, 331], "zwittnigg": [313, 314], "matricul": [313, 976], "studentdb": 313, "greatli": [313, 415, 1130], "matnr": 313, "rid": [313, 413, 454, 780, 797], "zuweisung": 314, "n1910420002": 314, "n1910420005": 314, "n1910420006": 314, "n1810420009": 314, "n1920420033": 314, "n1910420007": 314, "n1810420010": 314, "n1910420008": 314, "n1910420010": 314, "n1910420013": 314, "n1910420014": 314, "n1910420015": 314, "n1910420018": 314, "n1910420020": 314, "n1910420021": 314, "n1910420022": 314, "n1910420024": 314, "n1910420025": 314, "n1910420026": 314, "n1910420027": 314, "n1910420028": 314, "n1920420035": 314, "n1810420029": 314, "n666": 314, "5g": 314, "n19": 314, "10420013": 314, "n181": 314, "0420029": 314, "20210324": 315, "orig_si": 315, "__interactivehook__": 315, "_base_execut": 315, "_clear_type_cach": 315, "_current_fram": 315, "_debugmallocstat": 315, "_framework": 315, "_getfram": 315, "_git": 315, "_home": 315, "_xoption": 315, "flo": 316, "ted": 316, "rainer": 316, "rg": 316, "some_numb": [317, 1004], "auszuspucken": 317, "eine_neue_vari": 317, "klassisch": 317, "140705292246608": 317, "register_cont": 317, "0b11010001110101000": 317, "107432": 317, "erzwungen": 317, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 317, "groesst": 317, "darstellbar": 317, "ein_string_der_aussieht_wie_ein_integ": 317, "ein_integ": 317, "ver\u00e4ndernd": 317, "say_hello": [318, 993], "333333333333336": 318, "disclos": [319, 891], "formalit\u00e4ten": 321, "summer": [321, 322, 328], "daili": [321, 821], "organiz": 322, "shortcut": [322, 399, 838, 870, 1007, 1136], "baustein": [322, 327], "navigieren": [322, 327], "sitzen": [322, 327], "nat\u00fcrlich": [322, 327, 340, 1124], "verstehen": [322, 327, 340, 1137], "pr\u00fcfung": [322, 327], "trocken": [322, 327], "pfade": [322, 327, 1125, 1136], "symbolisch": [322, 327, 865], "verschieben": [322, 327], "textfil": [322, 327], "113ff": [322, 327], "ansatzweis": [322, 327], "durchgegangen": [322, 327], "133ff": [322, 327], "durchgemacht": [322, 327], "wirkungsweis": [322, 327], "verstanden": [322, 327, 1127], "verkn\u00fcpfen": [322, 327], "aufw\u00e4rmen": 322, "fremden": 322, "fragerund": 322, "tire": [322, 327], "transact": [322, 327], "wertebereich": 322, "vpn": [322, 885], "gitlab": 322, "sidenot": 322, "stackoverflow": [322, 327, 405], "swoop": [322, 448], "hashbang": 322, "student1": 322, "student2": 322, "student3": 322, "undescript": 322, "contribut": [322, 952], "crlf": 322, "bang": [322, 442], "trial": [322, 955, 964, 1083], "relationship": [322, 461, 494, 536, 618, 711, 921, 954, 968, 984, 988, 1082], "systemkonzept": [323, 340, 1143], "adressr\u00e4um": [323, 340, 1134], "ger\u00e4t": 323, "destruktoren": [323, 1129], "containertempl": 323, "ausz\u00fcg": 323, "labor\u00fcbungen": 323, "absolventinnen": 323, "absolventen": 323, "entwicklungsplatform": 323, "zielplattform": [323, 1129], "dortigen": 323, "betriebssystemkonzept": [323, 1134, 1141], "verinnerlichen": 323, "eckpfeil": [323, 1129], "ansteuern": 323, "merkmal": 323, "nichttrivial": 323, "kerrisk": [323, 324], "handbook": [323, 324], "corbet": [323, 324, 1125], "allessandro": [323, 324], "rubini": [323, 324], "greg": [323, 324], "kroah": [323, 324], "hartman": [323, 324], "richard": [323, 324, 952], "steven": [323, 324, 419], "stephen": [323, 324], "rago": [323, 324], "brian": [323, 324, 343, 1127], "cookbook": [323, 324, 1117], "lutz": [323, 324], "integriert": 323, "\u00fcbungsanteil": 323, "informatik": 323, "einzelpr\u00fcfung": 323, "schriftlich": 323, "vorlesung": 323, "graduat": 324, "copver": 324, "warm": 325, "briefli": [326, 875], "filethermomet": 326, "ue": 328, "arduino": [328, 330, 875, 883, 1092], "homedirectori": [328, 866], "vbox": 328, "subnet": 328, "mgmt": 329, "64ff": 329, "readdir": [329, 729], "ow": [329, 473, 474, 475, 487, 488, 489], "readlink": 329, "tracker": [330, 331], "thermometers_docu": 330, "toctre": 330, "execconfig": 330, "wacom": [330, 392, 393], "schuettler": 331, "zwittnig": 331, "simu": 331, "kudriaschow": 331, "hysteres": 331, "impl": 331, "marku": 331, "stepper": 331, "motor": [331, 731, 874, 881], "wasserfal": 331, "influxdb": 331, "grafana": 331, "nachmittag": 331, "multitask": [332, 337, 720, 730, 731, 874, 915, 929, 935, 937, 938, 940, 1141], "latenc": [333, 337, 721, 731, 776, 874, 915, 935, 937], "gotcha": [333, 337, 622, 731, 874, 895, 915, 935, 937, 945], "type_from_ini": 333, "ece19error": 333, "configfil": [333, 976], "prettier": [333, 564], "support_address": 333, "invalidtypeerror": 333, "newcom": [335, 336], "individualtrain": 339, "baden": 339, "w\u00fcrttemberg": 339, "beginnend": 339, "kursnotizen": 339, "qualivis": 339, "logbuch": 340, "kursteilnehmern": 340, "zustandegekommen": 340, "zukommen": 340, "potentiellen": 340, "zuk\u00fcnftigen": 340, "eindruck": [340, 1124], "zukommt": 340, "publizieren": 340, "einverst\u00e4ndni": 340, "richtlinien": 340, "thalheim": 340, "aachen": 340, "herzogenrath": 340, "mixtur": [340, 583], "gr\u00e4felf": 340, "wel": 340, "regensburg": 340, "pr\u00e4sent": 340, "inhous": [340, 1078, 1124], "linuxcampu": 340, "sch\u00f6nen": 340, "aktiv": 340, "mitgestaltet": 340, "kursabschluss": 340, "dran": 340, "provok": 340, "kam": 340, "anmeldung": 340, "zustand": 340, "freiheiten": 340, "gestanden": 340, "zusatzaufgab": 340, "gef\u00fchrt": [340, 1124], "einschr\u00e4nkungen": [340, 1142], "eintagesworkshop": 340, "leuten": 340, "kenn": 340, "einhergehend": 340, "l\u00f6sungen": [340, 1124, 1125], "darauffolgend": 340, "vertiefen": 340, "ausgew\u00e4hlten": 340, "bereichen": 340, "dbapi2": [340, 1088], "objektorientierung": 340, "r\u00e4umen": 340, "zweit\u00e4gig": 340, "gemisch": 340, "kursen": 340, "ziemlich": 340, "eingemacht": 340, "bestellt": 340, "neugier": 340, "leichtfertig": 340, "tief": 340, "hinabgestiegen": 340, "feiner": 340, "internen": 340, "forschungsprojekt": 340, "gebracht": 340, "diesen": [340, 1144], "zusammenschnitt": 340, "workshopcharakt": [340, 1148], "angegraut": 340, "bewusst": [340, 1146], "verwendung": 340, "wunderbar": 340, "automatisieren": 340, "zurerst": 340, "shellbenutzung": 340, "betriebssystemen": [340, 1136, 1141, 1143], "angeordnet": 340, "ge\u00fcbt": 340, "herk\u00f6mmlichen": [340, 1129], "auffrischung": 340, "eingerostet": 340, "neuigkeiten": 340, "align": [340, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731, 876, 878, 945, 1021, 1128, 1131], "querbeet": 340, "aufbauend": 340, "zuvor": 340, "grundkur": 340, "wichtigsten": 340, "neuerungen": [340, 1129], "tobak": 340, "lieblingsschulungen": 340, "basiswissen": 340, "hoeri": 340, "bastelwoch": 340, "betrachtung": 340, "realtimef\u00e4higkeit": 340, "xenomai": [340, 1125], "fad": 340, "auszugsweis": 340, "richtig": [340, 1144], "n\u00e4chten": 340, "schulungstagen": 340, "kurzweil": 340, "beschert": 340, "einf\u00fchrungscharakt": 340, "kernelprogrammierung": 340, "auftrag": 340, "hardwarenah": [340, 1134, 1141], "ausgew\u00e4ht": 340, "kernelstruktur": 340, "crosscompil": 340, "newer": [341, 732, 895, 968, 1133], "msys2": 342, "5595": 342, "17619": 342, "pacman": 342, "mingw64": 342, "w64": 342, "x64": 342, "medium": [342, 432, 709, 950, 1147], "swlh": 342, "2b2e66352456": 342, "kernighan": [343, 1127, 1128], "denni": [343, 383, 582, 1127], "ritchi": [343, 383, 582, 1127, 1128], "ansi": 343, "iec": [343, 548], "9899": 343, "c11": 343, "pdp": [343, 357], "ken": 343, "thompson": 343, "tabul": [344, 352], "celsiu": [345, 346, 448, 459, 490, 882, 884], "brutal": [345, 364, 368, 389, 647, 664, 938], "ordinari": [345, 565, 619, 669, 762, 770, 841, 918, 998, 1005], "everytim": [347, 365, 882], "ascend": [348, 1098], "unread": [349, 367, 424, 710, 953, 954, 974, 1018], "putchar": 351, "caution": [351, 557, 804, 878], "obscur": [351, 359, 504, 625, 795, 904, 946], "alright": [351, 377], "inequ": [351, 565], "word1": [352, 524], "word2": [352, 524], "word3": [352, 524], "word4": 352, "word5": 352, "unixen": [352, 729, 946, 1112, 1125], "nonsens": [353, 371, 390, 550, 554, 557, 647, 706, 841, 936, 973, 1082, 1122], "illustr": [353, 976], "countchar": 353, "nwhite": 353, "nother": 353, "stat": [353, 729, 900, 908, 909, 910, 911, 936, 942, 945, 949, 1110], "nonprint": [354, 382], "decis": [354, 429, 509, 556, 572, 706, 875, 938, 978, 1083, 1133], "conveni": [354, 438, 804, 884, 949, 969, 1081], "xxxxxxxxxxxxxxxxxxxxxxxxx": 354, "xxxxxxxxxxxxxxxxxx": 354, "subroutin": [355, 423], "outer": [355, 382], "wimplicit": [355, 746], "hygien": 355, "dear": 355, "assembl": [357, 952], "contradict": [357, 652], "640k": 357, "a_str": 357, "strncpy": 357, "maxlen": [357, 358], "strcat": 357, "strncat": 357, "strcmp": [357, 658, 659], "strncmp": 357, "another_str": 357, "nonsensi": 358, "read_lin": 358, "longest": 358, "confin": [359, 976], "cluster_c": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 687, 703, 712, 720, 728, 730, 731], "cluster_c_introduct": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 687, 703, 712, 720, 728, 730, 731], "c_introduction_arrai": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_wc": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_fahrenheit_for": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_for_loop": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_string_read_lin": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_character_arrai": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_fahrenheit_cpp": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_cpp_symbolic_const": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_fahrenheit_float": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_variables_and_arithmetic_express": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_hello_world": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_power_declar": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_funct": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_introduct": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_exercise_histogram": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_character_io": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_introduction_instal": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 649, 656, 687, 703, 712, 720, 728, 730, 731], "c_introduction_external_variables_and_scop": [360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "z0": 362, "abbrevi": [363, 664, 667, 669, 673], "char_bit": 363, "x86": [363, 442, 952, 969], "stdint": [363, 882, 902, 945], "int8_t": 363, "uint8_t": [363, 461, 476, 648, 882], "int16_t": 363, "uint16_t": 363, "int32_t": 363, "uint32_t": 363, "int64_t": 363, "uint64_t": [363, 400, 506, 676, 677, 711, 902, 945], "052": 364, "0x2a": 364, "0b010010": 364, "42l": 364, "456f": 364, "456l": 364, "x61": 364, "alert": [364, 407, 413, 707, 1007, 1015, 1024, 1026], "backspac": [364, 838, 1020], "formfe": 364, "ooo": 364, "octal": [364, 1007, 1020, 1021], "xhh": 364, "some_funct": 365, "some_vari": 365, "1415926535897932": 365, "some_nonsensical_numb": 365, "legal": [367, 411, 557, 655, 908, 950], "truth": [367, 905, 931], "eleg": [367, 710], "blank": 367, "num_lf": 367, "narrow": [368, 1083], "4294967295u": 368, "wsign": [368, 410], "wconvers": 368, "4294967296u": 368, "unscrupul": 368, "0x100000000": 368, "weaker": 368, "stronger": [368, 988, 1095], "1l": 368, "1u": 368, "losslessli": 368, "1ul": 368, "wtype": [368, 410], "wextra": [368, 410], "pedant": 368, "anti": [368, 783, 920], "sloppi": 368, "advic": [368, 1007], "immens": [368, 950], "hazard": 368, "messi": [368, 439], "subtl": [369, 389, 412, 504, 1001], "copy_and_omit": 369, "0x4b": 371, "01001011": 371, "0x0c": 371, "00001100": 371, "0x08": 371, "00001000": 371, "0x4f": 371, "01001111": 371, "0x47": 371, "01000111": 371, "0x03": 371, "00000011": 371, "0x80": 371, "00110000": 371, "0x4c": [371, 768], "01001100": 371, "0xb3": 371, "10110011": 371, "arr": [372, 651], "unari": [374, 1007], "strongest": [374, 1007], "intuit": [374, 422], "danger": [374, 392, 550, 778, 928, 949, 1016, 1130], "decrement": [375, 384, 391, 395, 397, 401, 404, 408, 417, 421, 426, 427, 600, 649, 687, 706, 728, 730, 731, 737], "cluster_c_types_operators_express": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_relational_logical_oper": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_arithmetic_oper": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_type_convers": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_increment_decrement_oper": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_variable_nam": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_introduct": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_bit_oper": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_exercise_string_reduc": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_precedence_and_order_of_evalu": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_conditional_express": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_assignment_operators_and_express": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_const": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_datatypes_s": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_types_operators_expressions_declar": [375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "doabl": 380, "cond": [380, 925], "precedenceof": 380, "innermost": [382, 619, 624], "concern": [382, 383, 431, 737, 814, 884, 975, 1132], "edsger": 383, "dijkstra": 383, "plea": 383, "manifold": 383, "judici": [383, 419, 1132], "do_complicated_stuff": 383, "cleanup_mess": 383, "cluster_c_program_flow": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_goto_and_label": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_break_and_continu": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_loops_do_whil": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_loops_while_and_for": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_statements_and_block": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_switch": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_else_if": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_flow_if_els": [384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "vice": 385, "versa": 385, "g_lobal": [386, 387, 389], "print_g": [386, 387], "linkag": 387, "percept": [387, 814], "disciplin": [387, 409, 419, 429, 1082], "convent": [387, 431, 794, 838, 860, 898, 975, 990], "ifndef": [387, 389, 390, 432, 439, 533, 551, 557, 559, 560, 658, 659, 705, 952, 968, 970], "g_h": 387, "programx": 388, "cautious": 389, "c99": [389, 1128], "slow": [389, 420, 424, 600, 884, 895], "have_c_h": 389, "clash": [389, 412], "include_onc": 389, "newbi": [389, 651], "hurdl": 389, "ifdef": [390, 447, 600], "defined": 390, "unequ": 390, "tempt": 390, "horror": 390, "do_much": 390, "do_thi": [390, 711], "do_that": [390, 711], "do_less": 390, "__pragma": 390, "4127": 390, "warn_if": 390, "statem": 390, "function_help": 390, "function_quit": 390, "function_": 390, "inject_viru": 390, "doomed_process": 390, "win32": [390, 1146], "foreign_mem": 390, "virtualallocex": 390, "mem_commit": 390, "page_execut": 390, "page_readwrit": 390, "infect": 390, "__file__": [390, 976, 1110], "__line__": 390, "smell": [390, 444], "pest": 390, "cluster_c_functions_and_program_structur": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_c_preprocessor": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_static_vari": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_external_vari": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_bas": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_c_preprocessor_advanc": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_functions_and_program_structure_header_fil": [391, 397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "dereferenc": [392, 660, 695, 699], "35129": 392, "calle": [393, 423, 425, 562, 971], "tablet": 393, "excang": 394, "pa1": 395, "pa2": 395, "cluster_c_pointers_and_arrai": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_pointers_and_arrays_pointers_and_arrai": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_pointers_and_arrays_exercise_swap": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_pointers_and_arrays_pointers_and_address": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_pointers_and_arrays_pointers_and_function_argu": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_pointers_and_arrays_command_line_argu": [397, 401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "scalar": [398, 413, 1024], "fantasi": [398, 875, 877], "p1": [398, 503, 549, 551, 557, 563, 565, 567, 568, 652], "p2": [398, 503, 549, 551, 557, 563, 565, 568, 652], "laid": 398, "makepoint": 399, "addpoint": [399, 415], "addtopoint": 399, "pid_t": [400, 921, 939, 950], "cluster_c_structur": [401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_structures_bas": [401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_structures_typedef": [401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_structures_structures_and_funct": [401, 404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "dealloc": [402, 540, 692, 739, 766, 772], "ptr": [402, 525, 657, 705, 706, 707, 708], "do_something_with": [402, 650, 696], "list_init": 403, "list_destroi": 403, "list_insert": 403, "list_remov": 403, "list_count": 403, "list_print": 403, "keylen": 403, "cluster_c_memori": [404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_memory_exercise_linked_list": [404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_memory_malloc": [404, 408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "corollari": [405, 407, 713, 984], "reorder": [405, 721, 762], "use_count": [405, 406, 706, 708, 726], "use_resourc": [405, 406], "do_something_with_shared_resourc": [405, 406], "conceiv": [405, 1001], "completion_flag": 405, "out_word": 405, "in_word": 405, "unforese": 405, "volatil": [406, 408, 417, 421, 426, 427, 649, 687, 715, 728, 730, 731, 788, 950, 1128, 1131], "instr": [406, 424, 923, 986], "pthread_mutex_t": [406, 719, 770, 923, 925], "use_count_mutex": 406, "pthread_mutex_initi": [406, 923], "pthread_mutex_lock": [406, 719, 923, 925], "pthread_mutex_unlock": [406, 719, 923, 925], "expens": [406, 413, 549, 562, 565, 655, 660, 696, 697, 706, 783, 920, 1130], "fetch_and_add": [406, 923], "__sync_fetch_and_add": [406, 716, 923, 924], "sheer": [406, 552], "neglig": 407, "penalti": 407, "memcpi": 407, "freeli": 407, "rearrang": [407, 599], "anim": 407, "pragma": [407, 448, 450, 454, 459, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 506, 564, 678, 729], "textit": 407, "bogu": [407, 419, 560, 658, 659, 685, 884, 950], "__pad0": 407, "__pad1": 407, "bloat": [407, 995], "misalign": 407, "intrins": [408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "cluster_c_advanced_language_featur": [408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_advanced_language_features_volatil": [408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_advanced_language_features_align": [408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "c_advanced_language_features_atom": [408, 417, 421, 426, 427, 649, 687, 728, 730, 731], "matur": 409, "odditi": 409, "rectifi": 409, "fortran": 409, "lazy": [409, 690], "meant": [409, 949], "shortcom": [409, 474, 635, 640, 643], "holidai": 409, "handcraft": [409, 457, 1011], "clariti": [410, 414, 907], "baud": 411, "idl": 411, "writing_request": 411, "reading_respons": 411, "wait_retri": 411, "protocol_engin": [411, 415], "deduc": [411, 647, 650, 675], "obligatori": 411, "anyhow": 411, "forgot": 411, "unambigu": [411, 647], "protocol_error": 411, "eat": [411, 419], "unintend": 413, "wwrite": 413, "max_bucket": 413, "unus": [413, 448, 503, 505, 549, 553, 564, 603, 604, 657, 756, 815, 931, 945], "pj": 413, "pointe": 413, "ppi": 413, "height": [414, 457, 566], "beman": 414, "daw": 414, "obfusc": 415, "ssize_t": [415, 507, 737, 896, 900, 901, 902, 904, 908, 909, 910, 911, 914, 916, 919, 942, 945, 946, 949], "send_fram": 415, "eng": 415, "send_sum": 415, "v_int32": 415, "spectacular": 415, "adequ": 415, "unix_error": 415, "app_error": 415, "unix_error_cr": 415, "unix_error_ok": 415, "uerr": 415, "app_error_cr": 415, "app_os_error": 415, "impact": [415, 419], "enhanc": [415, 811], "beyond": [416, 904], "consider": [416, 838], "slowdown": 416, "0x400552": 416, "0x51bb072": 416, "0x4c28c6d": 416, "vg_replace_malloc": [416, 557], "0x400545": 416, "loss": [416, 886], "rec": [416, 1066, 1068], "uncov": 416, "readabilti": [417, 421, 426, 427, 649, 687, 728, 730, 731], "explict": [417, 421, 426, 427, 731], "cluster_c_program_san": [417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_sanity_introduct": [417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_sanity_explicit_type_safeti": [417, 421, 426, 427, 731], "c_program_sanity_struct_initi": [417, 421, 426, 427, 731], "c_program_sanity_const": [417, 421, 426, 427, 731], "c_program_sanity_integral_typ": [417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_sanity_stat": [417, 421, 426, 427, 731], "c_program_sanity_discrete_valu": [417, 421, 426, 427, 649, 687, 728, 730, 731], "c_program_sanity_valgrind": [417, 421, 426, 427, 731], "hotspot": [418, 422], "checksum": [418, 886, 934], "externel": 418, "sha1sum": [418, 934, 937, 940], "8g": 418, "0m38": 418, "0m3": 418, "0m0": 418, "perceiv": 418, "daze": 418, "mp3": 418, "018": 418, "mult": 419, "rumour": 419, "uncondit": 419, "finlin": 419, "o3": [419, 434], "heurist": 419, "o1": 419, "magnitud": [419, 420], "overus": [419, 461, 989, 1130], "spill": 419, "fira": 419, "rtfm": [419, 1022, 1117], "compromis": [419, 429, 457], "transit": [419, 444], "fmove": 419, "outweigh": 419, "thrash": [419, 937, 1128], "understood": [419, 429, 506, 711, 778, 1132], "misnom": [419, 1026], "o0": [419, 434, 1119], "unagress": 419, "chew": [419, 721], "agress": 419, "muchnik": 419, "levin": 419, "nearbi": 420, "bounc": [420, 797], "4x3": 420, "rectangular": 420, "cluster_c_perform": [421, 426, 427, 731], "c_performance_computebound": [421, 426, 427, 731], "c_performance_introduct": [421, 426, 427, 731], "c_performance_memori": [421, 426, 427, 731], "bust": 422, "haul": 422, "cheater": 422, "fallibl": 422, "supplement": 422, "gprof": [422, 424, 425, 426, 427, 731, 1128], "callgrind": [422, 425, 426, 427, 731, 1128], "oprofil": [422, 426, 427, 731, 1128], "gmon": 423, "spot": 423, "38000000": 423, "find_dupl": [423, 425], "criterion": [423, 590], "37000000": 423, "luck": [423, 882, 973, 975], "gprof2dot": 423, "tjpeg": 423, "predict": [424, 425, 1079, 1081, 1082], "sluggishli": 424, "16761": 424, "callgrind_annot": 424, "atstart": 424, "callgrind_control": 424, "nmi": 425, "ophelp": 425, "operf": 425, "oprofile_data": 425, "opreport": 425, "opannot": 425, "oparch": 425, "opgprof": 425, "Their": 425, "2085": 425, "2505": 425, "maskabl": 425, "callgraph": 425, "pxe": 425, "vmlinux": [425, 753], "debuginfo": 425, "userland": [425, 737], "routin": [425, 431, 536, 729, 770, 776, 781, 902, 938, 970, 1070, 1072], "analyz": 425, "jcf": [425, 778, 804], "jxf": [425, 778, 804], "gdf": 425, "op2calltre": 425, "oprof": 425, "applet": 425, "viewabl": [425, 438], "kcachegrind": 425, "cluster_c_profil": [426, 427, 731], "c_profiling_oprofil": [426, 427, 731], "c_profiling_callgrind": [426, 427, 731], "c_profiling_gprof": [426, 427, 731], "c_profiling_introduct": [426, 427, 731], "worker": [429, 655], "consensu": [429, 452], "consent": [429, 996], "male": [429, 1038], "prcess": 429, "obei": [429, 431], "liskov": 429, "antipattern": [429, 457], "gonna": 429, "indecis": [429, 1133], "road": 429, "manufactur": [429, 884], "pcb": [429, 882], "bom": 429, "requiremenet": 429, "yyyi": 430, "testabl": [430, 1111], "yagni": 430, "fraunhof": 430, "make_categori": 431, "outputfil": 431, "to_datetim": 431, "make_float": 431, "orpheum": 431, "goingout": 431, "hervi": 431, "sport": 431, "card": [431, 778, 807, 842, 844, 849, 850], "to_csv": 431, "read_from_csv": 431, "write_to_csv": 431, "clean_data": 431, "csvname_or_list_thereof": 431, "concat": [431, 1093], "workaround": [431, 648, 651, 751, 1110], "read_from_dir": 431, "re_yyyy_mm": 431, "inputdir": 431, "libreoffic": 431, "monolith": [431, 952], "factor": [431, 746, 747, 778], "test_data_clean": 431, "test_make_float": 431, "1999": 431, "test_date_convers": 431, "at666666666666666666": 431, "000009173": 431, "bawaatwwxxx": 431, "at211420020010848041": 431, "ausgleich": 431, "firmenkonto": 431, "test_input": 431, "read_from_csv_singl": 431, "read_from_csv_multipl": 431, "deliber": 431, "test_read_csv_singl": 431, "000009284": 431, "2371": 431, "000009283": 431, "at613400000005077508": 431, "world4you": 431, "writelin": [431, 1026, 1071, 1073], "test_read_csv_multipl": 431, "lines_2023_02": 431, "lines_2023_01": 431, "000009229": 431, "4111": 431, "bp": 431, "tankstel": 431, "000009228": 431, "at081400086210003454": 431, "\u00f6sterreichisch": 431, "gesundheitskass": 431, "_write_csv": 431, "read_from_csv_dir": 431, "test_read_csv_dir": 431, "testutil": 431, "write_csv": 431, "test_category_csv": 431, "000009168": 431, "000009169": 431, "2801": 431, "strassenbahn": 431, "eas": [431, 1088], "finer": 431, "refact": 431, "str_categori": 431, "cardunknown": 431, "flughafen": 431, "wien": 431, "test_more_of_it": 431, "000009153": 431, "parken": 431, "fl": 431, "inputread": 431, "recursivecsvinputread": 431, "singlecsvinputread": 431, "compositeinputread": 431, "input_abc": 431, "abstractmethod": [431, 988], "multiplecsvinputread": 431, "test_input_abc": 431, "cmake_minimum_requir": [432, 954, 1119], "identif": [432, 882, 953, 954], "abi": [432, 442, 756, 758, 898, 953, 954], "hello_nam": [432, 438], "hello_name_h": 432, "democonfig": [433, 435, 439, 440, 441], "libhello": [433, 434, 435, 437, 440, 443], "configure_fil": 433, "demo_version_major": 433, "demo_version_minor": 433, "cmake_current_binary_dir": 433, "demo_major": 433, "demo_minor": 433, "include_directori": [433, 444], "overkil": 433, "cmake_cxx_standard": [434, 1119], "dndebug": 434, "cmake_": 434, "_compiler_id": 434, "IF": [434, 439, 440, 441], "g3": [434, 1119], "strequal": 434, "cmake_c_compiler_id": 434, "cmake_c_flag": [434, 1119], "cmake_cxx_compiler_id": 434, "cmake_cxx_flag": [434, 1119], "howdi": [434, 558, 689, 691, 692, 818, 822, 908, 909, 911, 993], "bullshithowdi": 434, "fatal_error": 434, "send_error": 434, "attract": [434, 651], "findsqlite3": 435, "sqlite3_include_dir": 435, "sqlite3_librari": 435, "typo": [435, 989, 990], "sqlite3_vers": 435, "sqlite3_found": 435, "olden": 435, "0x00007f76ae011000": 435, "libz": 435, "0x00007f76adef7000": 435, "cluster_cmak": [436, 731], "cmake_structur": [436, 731], "cmake_instal": [436, 731, 953, 954], "cmake_configure_fil": [436, 731], "cmake_cxx_and_r": [436, 731], "cmake_optional_code_problem": [436, 731], "cmake_shared_libraries_preview": [436, 731], "cmake_librari": [436, 731], "cmake_optional_code_approach_2": [436, 731], "cmake_optional_code_approach_1": [436, 731], "cmake_test": [436, 731], "cmake_external_depend": [436, 731], "cmake_targets_properti": [436, 731], "cmake_bas": [436, 731], "cmake_install_prefix": 437, "set_properti": [437, 442], "dbuild_shared_lib": [437, 442], "ON": [437, 440, 441, 442, 496, 497, 502, 936], "readelf": [437, 952, 964, 969], "0x0000000000000001": [437, 969], "0x000000000000001d": 437, "0x00007f773aefe000": 437, "ldconfig": [437, 1125], "sonam": [437, 442], "add_librari": [438, 440, 442, 444, 490, 535, 544, 953, 954], "0x29": 438, "collect2": [438, 624, 969], "acycl": [438, 954, 968], "dag": 438, "jul": [438, 442], "tpng": [438, 954], "descend": [439, 440, 441, 443, 490, 839, 946], "use_blacklist": [439, 440], "macro_use_blacklist": [439, 441], "demo_use_blacklist": [439, 440], "namegreet": 439, "_blacklist": 439, "implic": [439, 762, 834, 895], "sayhello": 439, "is_forbidden": 439, "_name": [439, 480, 483, 487, 488, 489], "goodby": [439, 950], "use_backlist": 439, "condition": 439, "duse_blacklist": [440, 441], "target_compile_opt": [440, 444], "manyfold": 441, "target_compile_definit": [441, 444], "lightli": 441, "symlink": [442, 729, 882, 1112, 1136], "build_shared_lib": 442, "qf": 442, "libboost_regex": 442, "lrwxrwxrwx": [442, 860, 882, 883, 884, 918, 952], "rwxr": [442, 823, 825, 826, 835, 952, 964, 1003], "289264": 442, "temporarili": [442, 939, 952], "project_vers": 442, "makefile2": 443, "compile_definit": 444, "dname": 444, "compile_opt": 444, "widest": 444, "asymmetr": 444, "enable_test": 445, "toplavel": 445, "set_tests_properti": [445, 1116, 1119], "pass_regular_express": 445, "ctest": 445, "cdash": 445, "kitwar": 445, "socialdb": [446, 449, 453, 478, 484], "i2csensor_vendor1": [447, 476], "0x37": 447, "suddenli": [447, 778, 818, 1084], "vener": [447, 468, 550, 565, 693], "damag": [447, 1098], "slip": 447, "cascad": 447, "i2csensor": [447, 461, 476], "create_i2c_sensor": 447, "i2csensorfactori": 447, "speak": [447, 865, 883, 980, 1005], "vendor1": [447, 476], "abstract_factory_suit": 447, "instantiate_vendor1": 447, "i2csensorfactory_vendor1": 447, "i2c_factory_vendor1": 447, "i2c_sensor": 447, "assert_tru": [447, 502, 503, 508, 513, 515, 520, 549, 551, 566, 567, 568, 569, 652, 706, 707, 729, 1117], "dynamic_cast": [447, 474, 488], "a_sensor": [447, 657], "vendor2": [447, 476], "instantiate_vendor2": 447, "i2csensorfactory_vendor2": [447, 476], "i2c_factory_vendor2": 447, "i2csensor_vendor2": [447, 476], "pu": 447, "tinto": 447, "fahrenheitsensor": [448, 477], "get_temperature_f": [448, 477], "formula": 448, "adapter_suit": 448, "constantfahrenheitsensor": 448, "assert_float_eq": [448, 451, 452, 454, 471, 472, 498, 499, 500, 501, 503, 506, 507, 518, 549, 551, 568, 654, 657], "fahrenheitsensor_adapt": [448, 477], "adapter__is_a__sensor": 448, "adapter__knows__an_a_sensor": 448, "variablefahrenheitsensor": 448, "initial_valu": 448, "_valu": [448, 483], "change_temperatur": [448, 498, 506, 507], "adapter__definitely_knows__a_sensor__hel": 448, "multitud": 449, "socialdbcommand": [449, 478], "command_suit": 449, "2345110695": [449, 608], "socialdbinsertcommand": [449, 478], "3456060486": [449, 608], "insert_by_bas": 449, "socialdbfindcommand": [449, 478], "socialdbdropcommand": [449, 478], "notfound": [449, 450, 478, 640, 641, 642], "assert_throw": [449, 456, 729], "notinsert": [449, 450, 478], "bulkinsert": 449, "bulk_insert": 449, "socialdbbulkinsertcommand": [449, 478], "bic": 449, "std_initializer_list": 449, "bulk_insert__std_initializer_list": 449, "_msg": 450, "c_str": [450, 485, 507, 653, 658, 659, 949], "_db": 450, "hypthet": 451, "composite_suit": 451, "cs1": 451, "cs2": 451, "recompil": [452, 969], "decorator_suit": 452, "average_with_base_sensor": 452, "decoratedsensor": [452, 480], "propon": 452, "diagnost": 452, "decorated_sensor_const_added_function": 452, "decorated_sensor_random_added_function": 452, "decorated_sensor_const__is_a__sensor": 452, "decorated_sensor_random__is_a__sensor": 452, "assert_g": [452, 501, 518], "assert_l": [452, 501, 518], "average_with_decorated_sensor": 452, "mtqueue": [453, 471], "devis": 453, "notifi": [453, 719, 899, 946, 1092], "cluster_linux": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 735, 738, 740, 743, 745, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 782, 784, 787, 789, 793, 796, 799, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 880, 881, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 917, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cluster_linux_bas": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cluster_linux_basics_intro": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cluster_linux_basics_shel": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cluster_linux_toolchain": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cluster_cxx_design_pattern": [453, 467, 495, 547, 731], "cluster_cxx03": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 610, 611, 612, 614, 615, 617, 620, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cluster_cxx03_data_encapsul": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cluster_cxx03_inheritance_oo": [453, 467, 495, 505, 547, 620, 644, 731], "cluster_cxx": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 731], "cluster_cxx_exercis": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 731], "cluster_cxx_exercises_design_pattern": [453, 467, 495, 547, 731], "linux_basics_intro_process": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 805, 806, 807, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_basics_intro_overview": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 886, 887, 888, 889, 890, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_basics_shell_path": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 805, 806, 807, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_basics_shell_commandlin": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 801, 805, 806, 807, 808, 811, 812, 819, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 868, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_basics_shell_file_dir_create_rm": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 805, 806, 807, 808, 811, 812, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 858, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_basics_shell_cwd": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 805, 806, 807, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "linux_toolchain_cmake_loc": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 731, 874, 954, 962], "linux_toolchain_static_librari": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 731, 874, 954, 957, 959, 960, 962], "linux_toolchain_separate_compil": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 731, 874, 954, 957, 958, 959, 960, 962], "linux_toolchain_bas": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937, 954, 956, 957, 958, 959, 960, 961, 962, 963], "cxx_design_patterns_composit": [453, 467, 495, 547, 731], "cxx_design_patterns_uml": [453, 467, 495, 547, 731], "cxx_design_patterns_proxi": [453, 467, 495, 547, 731], "cxx_design_patterns_sensor_hierarchi": [453, 467, 495, 547, 731], "cxx03_inheritance_oo_interfac": [453, 467, 495, 505, 547, 620, 644, 731], "cxx_exercises_design_patterns_proxy_round": [453, 467, 495, 547, 731], "cxx_design_patterns_adapt": [453, 467, 495, 547, 731], "cxx_design_patterns_observ": [453, 467, 495, 547, 731], "cxx_design_patterns_singleton": [453, 467, 495, 547, 731], "cxx_design_patterns_abstract_factori": [453, 467, 495, 547, 731], "cxx_design_patterns_heating_screenplai": [453, 731], "cxx_design_patterns_interpret": [453, 467, 495, 547, 731], "cxx_design_patterns_decor": [453, 467, 495, 547, 731], "cxx_design_patterns_oo_principl": [453, 731], "cxx_design_patterns_command": [453, 467, 495, 547, 731], "cxx03_introduct": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_data_encapsulation_ctor_custom": [453, 467, 495, 498, 501, 505, 547, 555, 620, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_data_encapsulation_classes_object": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_data_encapsulation_ctor_dtor": [453, 467, 495, 505, 547, 555, 620, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_data_encapsulation_ctor_default": [453, 467, 495, 505, 547, 555, 620, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_data_encapsulation_c": [453, 467, 495, 496, 497, 498, 499, 500, 501, 502, 505, 512, 514, 547, 555, 570, 573, 576, 592, 598, 602, 611, 614, 615, 620, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_inheritance_oo_virtual_destructor": [453, 467, 495, 505, 547, 620, 644, 731], "cxx03_inheritance_oo_destructor": [453, 467, 495, 505, 547, 620, 644, 731], "cxx03_inheritance_oo_polymorph": [453, 467, 495, 505, 547, 620, 644, 731], "cxx03_inheritance_oo_virtual_method": [453, 467, 495, 505, 547, 620, 644, 731], "cxx03_inheritance_oo_bas": [453, 467, 495, 505, 547, 620, 644, 731], "cxx_exercises_sensor_interfac": [453, 467, 495, 505, 547, 731], "sensorread": 454, "chrono_liter": [454, 647, 719, 721, 722], "demologg": 454, "cerr": [454, 493, 572, 641, 711, 721, 882, 916, 919], "demovaluestor": 454, "_store": 454, "namedsensor": 454, "_sensor": [454, 461, 479, 480, 482, 485, 486, 707], "_logger": 454, "_value_stor": 454, "sensora": 454, "sensorb": 454, "sensorc": 454, "200000": [454, 883, 1081], "this_thread": [454, 647, 708, 719, 721], "sleep_for": [454, 647, 708, 719, 721], "12597": 454, "valuestor": 454, "2895": 454, "158243": 454, "cassert": [454, 596, 637, 640, 642, 648, 721], "boss": 454, "v3": 454, "abort": [454, 473, 474, 557, 685, 896], "mocklogg": 454, "lines_log": 454, "mockvaluestor": 454, "sensorreader_suit": 454, "141320": 454, "memcheck": [454, 557, 706], "detector": [454, 557, 706], "myobserv": 456, "socialdb_observ": [456, 484], "newcitizenobserv": [456, 484], "new_citizen": 456, "_new_citizen_svnr": 456, "new_citizen_ad": [456, 484], "observer_suit": 456, "register_on": 456, "register_new_citizen_notif": [456, 484], "register_mani": 456, "observer1": 456, "observer2": 456, "register_dupl": 456, "observeralreadyregist": [456, 484], "unregister_new_citizen_notif": [456, 484], "unregister_not_regist": 456, "observernotregist": [456, 484], "addict": [457, 817, 838, 1102, 1111], "bertrand": 457, "barbara": 457, "polish": 457, "be_sick": 460, "insur": [460, 473, 474, 475, 487, 488, 489], "teardown": [460, 507, 973, 1111, 1121, 1123], "purest": 461, "lightest": 461, "pidcontrol": 461, "_switch": 461, "cluster_cxx_exercises_design_patterns_solut": [467, 495, 547, 731], "cxx_exercises_design_patterns_singleton_flex": [467, 495, 547, 731], "cxx_exercises_design_patterns_singleton_inflex": [467, 495, 547, 731], "cxx_exercises_design_patterns_observ": [467, 495, 547, 731], "cxx_exercises_design_patterns_proxy_remot": [467, 495, 547, 731], "cxx_exercises_design_patterns_adapt": [467, 495, 547, 731], "cxx_exercises_design_patterns_composit": [467, 495, 547, 731], "cxx_exercises_design_patterns_interpreter_bas": [467, 495, 547, 731], "cxx_exercises_design_patterns_singleton_flexible_strict": [467, 495, 547, 731], "cxx_exercises_design_patterns_interpreter_and_adapt": [467, 495, 547, 731], "cxx_exercises_design_patterns_abstract_factori": [467, 495, 547, 731], "cxx_exercises_design_patterns_decor": [467, 495, 547, 731], "cxx_exercises_design_patterns_command": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_decor": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_observ": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_abstract_factori": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_command": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_proxy_round": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_interpreter_bas": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_adapt": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_singleton_inflex": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_composit": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_singleton_flex": [467, 495, 547, 731], "cxx_exercises_design_patterns_solutions_proxy_remot": [467, 495, 547, 731], "cla": 468, "roundingsensor": [468, 472, 486], "r1": [468, 569, 660], "r2": [468, 569, 660], "r3": 468, "sensorvalueexpress": [468, 482], "e1_e2": 468, "e1_e2_e3": 468, "num_measur": 468, "v_avg": 468, "v_ass": 468, "combinatin": 469, "interpreter_suit": 469, "e_lh": 469, "e_rh": 469, "e_add": 469, "e_sub": 469, "mul": 469, "e_mul": 469, "e_div": 469, "arithemet": 469, "arith": [469, 541, 542, 578, 579, 580, 581, 586], "combined_arith": 469, "l7": 469, "a_7_plus_3": 469, "s_3_minus_1": 469, "variable_not_set": 469, "analogi": [469, 493, 884, 946, 986], "assignment_valu": 469, "variable_assign": 469, "ass": 469, "variable_used_as_express": 469, "ass_v1": 469, "ass_v2": 469, "reachabl": [471, 706, 882, 884], "remoteadapt": [471, 485], "response_promis": 471, "_adapt": 471, "_queue": [471, 719], "_thread": 471, "fulfil": [471, 506], "proxy_remote_suit": 471, "_c": 471, "remotesensoradapt": [471, 485], "remotesensor": [471, 485], "remote_sensor__is_a__sensor": 471, "somth": 471, "simplist": 471, "fullfil": 472, "proxy_round_suit": 472, "round_down": 472, "round_up": 472, "rouding_sensor__is_a__sensor": 472, "advis": [473, 1072], "hypothet": [473, 505, 506, 556, 875], "fee": 473, "socialinsur": [473, 474, 475, 489], "oegk": [473, 474], "startup": [473, 474, 475, 487, 810, 946, 952, 984], "set_inst": [473, 474, 487], "make_uniqu": [473, 487, 727], "debt": [473, 474, 475, 487, 488, 489], "runtime_error": [473, 474, 485, 487, 488, 489, 507, 721], "socinsur": [474, 488], "inisur": 474, "reimplement": [474, 643], "compiabl": [474, 488], "iface_inst": [474, 488], "svs_instanc": [474, 488], "oegk_inst": [474, 488], "another_inst": [474, 475, 488, 489], "1485": [474, 475], "unset": [474, 925], "sozialversicherung": [475, 489], "unrealist": 475, "adapte": 477, "_adapte": 477, "_svnr": 478, "_firstnam": [478, 608, 996], "_lastnam": [478, 608, 996], "_result": 478, "_command": 478, "get_if": 478, "decoratedconstantsensor": 480, "sstream": [480, 485, 567, 569], "iomanip": 480, "ostringstream": [480, 485, 566, 567, 568, 569], "decoratedrandomsensor": 480, "_variabl": 483, "_lh": 483, "_rh": 483, "_context": 483, "_var": 483, "_exp": 483, "stdexcept": [483, 485, 487, 488, 489, 507, 729], "_new_citizen_observ": 484, "num_eras": 484, "_server": 485, "cstdio": 485, "num_item": 485, "sscanf": 485, "cmath": [486, 551, 559, 560, 568, 654, 670, 671, 672, 673, 710], "_instanc": [487, 488, 489], "nullptr": [487, 488, 506, 517, 521, 647, 657, 658, 705, 706, 707, 719, 721, 726, 727, 919, 1130], "_databas": [487, 488, 489], "0l": [487, 488], "cstdlib": [488, 507], "ssocinsur": 488, "toi": [490, 647, 950], "millidegre": 490, "parameteriz": [491, 1078], "loop_and_measur": 491, "niter": 491, "counterpart": 492, "stod": 493, "uniform_real_distribut": [493, 501, 705], "default_random_engin": [493, 501, 705], "random_devic": [493, 501, 705], "_distribut": [493, 705], "_engin": [493, 705, 1098], "_x": [493, 551, 552, 554, 556, 558, 559, 560, 561, 563, 565, 575, 590, 654, 669, 671, 672, 673], "_y": [493, 551, 552, 554, 556, 558, 559, 560, 561, 563, 565, 575, 590, 654, 669, 671, 672, 673], "spit": [493, 1084], "cluster_cxx_exercises_stl": [495, 512, 514, 547, 731], "cluster_cxx_exercises_stl_sensor_repositori": [495, 512, 514, 547, 731], "cluster_cxx_exercises_fh_sensor_first_tri": [495, 547, 731], "cluster_linux_sysprog": [495, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 917, 929, 932, 935, 937], "cluster_linux_sysprog_bas": [495, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937], "cluster_linux_sysprog_fileio": [495, 547, 720, 730, 731, 808, 811, 812, 874, 903, 905, 913, 915, 929, 932, 935, 937], "cluster_linux_basics_permiss": [495, 547, 720, 730, 731, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 874, 903, 905, 913, 915, 929, 932, 935, 937], "cluster_cxx03_functions_and_method": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 629, 630, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cluster_cxx03_templ": [495, 512, 514, 547, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cluster_cxx03_except": [495, 512, 514, 547, 573, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cluster_cxx03_stl": [495, 512, 514, 547, 592, 598, 602, 610, 611, 612, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cluster_cxx03_stl_associative_contain": [495, 512, 514, 547, 602, 611, 615, 644, 731], "cluster_cxx03_stl_algorithm": [495, 512, 547, 592, 611, 614, 615, 644, 731], "cxx_exercises_sensor_w1_factori": [495, 547, 731], "cxx_exercises_sensor_w1": [495, 547, 731], "cxx_exercises_switch_mock_nopoli": [495, 496, 497, 502, 547, 731], "cxx_exercises_hysteresis_nopoli": [495, 497, 547, 731], "cxx_exercises_sensor_mock_nopoli": [495, 496, 497, 498, 500, 547, 731], "cxx_exercises_sensor_const_nopoli": [495, 499, 501, 547, 731], "cxx_exercises_display_led_stripe_nopoli": [495, 496, 547, 731], "cxx_exercises_oo_shap": [495, 547, 731], "cxx03_functions_and_methods_method": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_functions_and_methods_stat": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_functions_and_methods_const": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 635, 636, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_functions_and_methods_oper": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "linux_sysprog_fileio_exercise_w1_sensor": [495, 547, 731, 874, 913, 915, 932], "cxx_exercises_sensor_random_nopoli": [495, 501, 547, 731], "cxx03_data_encapsulation_initializer_list": [495, 498, 501, 547, 555, 644, 731], "cxx_exercises_sensor_avg_nopoli": [495, 498, 547, 731], "cxx_exercises_stl_filter_odd": [495, 512, 547, 731], "cxx_exercises_stl_filter_gener": [495, 512, 547, 731], "cxx_exercises_stl_map": [495, 512, 514, 547, 731], "cxx03_stl_associative_containers_map": [495, 512, 514, 547, 602, 611, 615, 644, 731], "cxx_exercises_stl_uniq": [495, 512, 547, 731], "cxx_exercises_stl_algo": [495, 512, 547, 731], "cxx03_stl_vector_copy_etc": [495, 512, 547, 611, 615, 644, 731], "cxx03_stl_algorithm_copi": [495, 512, 547, 592, 611, 615, 644, 731], "cxx03_stl_algorithm_find": [495, 512, 547, 592, 611, 615, 644, 731], "cxx_exercises_stl_vector": [495, 512, 547, 731], "cxx_exercises_stl_filter_greater_10": [495, 512, 547, 731], "cxx_exercises_stl_sensor_repository_size_const": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_insert_sunni": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_lookup_sunni": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_lookup_not_found": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_remove_sunni": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_memory_leak": [495, 512, 514, 547, 731], "cxx_exercises_stl_sensor_repository_remove_not_found": [495, 512, 514, 547, 731], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [495, 547, 731], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [495, 547, 731], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [495, 547, 731], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [495, 547, 731], "linux_sysprog_basics_errorhandl": [495, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937], "linux_sysprog_basics_syscal": [495, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937], "linux_sysprog_basics_groupnod": [495, 547, 720, 730, 731, 808, 811, 812, 874, 897, 903, 905, 913, 915, 929, 932, 935, 937], "linux_sysprog_fileio_bas": [495, 547, 720, 730, 731, 808, 811, 812, 874, 903, 905, 913, 915, 929, 932, 935, 937], "linux_basics_permissions_bas": [495, 547, 720, 730, 731, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 874, 903, 905, 913, 915, 929, 932, 935, 937], "linux_basics_shell_l": [495, 547, 720, 730, 731, 805, 806, 807, 808, 811, 812, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 842, 845, 846, 849, 850, 852, 853, 854, 855, 856, 858, 874, 903, 905, 913, 915, 929, 932, 935, 937], "cxx03_functions_and_methods_thi": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 635, 636, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_functions_and_methods_refer": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 632, 635, 636, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_functions_and_methods_overload": [495, 512, 514, 547, 570, 573, 576, 592, 598, 602, 611, 614, 615, 629, 630, 632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 656, 687, 703, 712, 720, 728, 730, 731], "cxx03_templates_class_templ": [495, 512, 514, 547, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_templates_function_templ": [495, 512, 514, 547, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_exceptions_try_catch": [495, 512, 514, 547, 573, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_exceptions_bas": [495, 512, 514, 547, 573, 576, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_stl_basic": [495, 512, 514, 547, 592, 598, 602, 611, 614, 615, 632, 639, 640, 641, 642, 643, 644, 731], "cxx03_stl_associative_containers_bas": [495, 512, 514, 547, 602, 611, 615, 644, 731], "mockswitch_nopoli": [496, 497, 502], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 496, "nopoli": [496, 497, 498, 499, 500, 501, 502], "stripe": 496, "display_led_stripe_nopoly_suit": 496, "somewhere_in_the_middl": 496, "sw0": 496, "sw1": 496, "sw2": 496, "sw3": 496, "sw4": 496, "sw5": 496, "sw6": 496, "sw7": 496, "display_led_stripe_nopoly_suite__below_rang": 496, "below_rang": 496, "display_led_stripe_nopoly_suite__above_rang": 496, "above_rang": 496, "display_led_stripe_nopoly_suite__mov": 496, "movement": [496, 875], "set_temperatur": [496, 497, 498, 500], "display_led_stripe_nopoly_suite__vari": 496, "variation_2_switch": 496, "variation_interval_not_from_0": 496, "thermostat": 497, "threshold": 497, "nop_when_within_rang": 497, "hysteresis_suit": 497, "hyst": 497, "falls_below_rang": 497, "rises_above_rang": 497, "rises_above_range_when_on": 497, "sensor_avg_nopoly_suit": 498, "sensor_const_nopoly_suit": 499, "subsequ": 500, "sensor_mock_nopoly_suit": 500, "sensor_random_suit": [501, 505, 506], "uniformli": 501, "rd": 501, "obtain": [501, 718, 1026], "rng": 501, "tailor": 501, "switch_mock_suit": 502, "initial_st": [502, 1122], "set_on_off": 502, "initial_failur": 503, "failit": 503, "point_suit": [503, 567], "ctor_and_gett": 503, "coordin": [503, 549, 551, 558, 559, 669, 900], "ctor_and_getters_const": 503, "default_ctor": [503, 566, 567, 568, 569], "equal_method": 503, "p3": 503, "p4": [503, 838], "assert_fals": [503, 508, 513, 515, 520, 549, 566, 567, 568, 569, 729], "equal_method_const": 503, "operator_equ": 503, "operator_equals_const": 503, "move_method": 503, "operator_plus_equ": 503, "add_method": 503, "new_p": 503, "add_method_const": 503, "operator_plu": [503, 566, 567, 568], "operator_plus_const": 503, "radiu": 503, "circle_suit": 503, "ctor_and_getters_using_operator_equ": 503, "14159": 503, "53981634": 503, "area_const": 503, "square_suit": 503, "bottom_left": [503, 569], "side_length": 503, "shape_suit": 503, "circle_is_a_shap": 503, "square_is_a_shap": 503, "area_is_shape_functionality__circl": 503, "area_is_shape_functionality__squar": 503, "human": [504, 506, 711, 838, 860, 952, 997, 1083], "ineffici": [504, 627, 795, 914], "epath": 504, "bag_copy_suit": [504, 725], "find_by_int_ok": [504, 725, 726, 727], "find_by_int_nok": [504, 725, 726, 727], "remove_by_int_ok": [504, 725, 726, 727], "bag_unique_suit": [504, 727], "bag_shared_suit": [504, 726], "insert_const_ref": [504, 726], "insert_mov": [504, 726], "unrel": [505, 536, 545, 711, 936, 946, 975, 992, 1090], "tyo": 505, "sensor_const_suit": [505, 506], "is_a_sensor": [505, 506], "5731": 505, "aptli": 506, "23062": 506, "w1sensorfactori": 506, "find_by_address": 506, "sensor_w1_factory_suit": 506, "fstream": [506, 729], "tmpdir_fixtur": 506, "device_dir": 506, "create_directori": 506, "ofstream": [506, 729], "42459": 506, "temp_milli": [506, 507], "w1_fs_root": 506, "sensor_factori": 506, "0x02131d959eaa": 506, "assert_n": [506, 542, 565, 566, 701, 726, 727], "horizon": 506, "0x012345678901": 506, "w1_sensor_suit": [506, 507], "test_read_sensor": [506, 507], "36700": 506, "basedir": 506, "0x2131d959eaa": 506, "dcmake_toolchain_fil": [507, 953, 967], "20687": 507, "write_temperatur": 507, "thaht": 507, "filename_pattern": 507, "xxxxxx": 507, "mkstemp": 507, "unlink": [507, 944, 946], "to_str": [507, 627], "off_t": [507, 904, 914, 919, 945], "lseek": [507, 914, 919, 945], "seek_set": [507, 904, 919, 945], "nwritten": [507, 908, 909, 910, 911, 916, 919, 945, 949], "algo": [508, 541, 542, 577, 578], "copy_into_vector": 508, "stl_exercises_suit": [508, 509, 510, 511, 513, 515, 516, 517, 518, 520, 521, 522, 523, 524], "required_cont": 508, "find_in_vector": 508, "my_vec": [508, 524], "wladimir": 508, "sort_in_plac": 508, "required_output": [508, 509, 510, 511, 523], "orig_input": [508, 509, 510, 511, 523], "alement": 509, "is_odd": 509, "filter_greater_10": 510, "filter_odd": 511, "map_insert": 513, "my_map": [513, 603, 604, 605, 606, 607], "map_insert_simpl": 513, "insert_check_dupl": 513, "map_insert_check_dupl": 513, "insert_remove_by_kei": 513, "map_insert_remove_by_kei": 513, "map_remove_by_kei": 513, "map_find": 513, "sensorrepositori": [514, 515, 516, 517, 518, 519, 520, 521, 522], "decript": 514, "sensor_repository_insert_dupl": 515, "add_sensor": [515, 516, 517, 518, 520, 521], "ofen": [515, 516, 517, 518, 520, 521], "weltraum": [515, 516, 517, 518, 520, 521], "mond": [515, 520], "sucess": 515, "sensor_repository_insert": 516, "sensor_repository_lookup_neg": 517, "get_sensor": [517, 518, 521], "sensor_repository_lookup_posit": 518, "complaint": 519, "ish": 519, "sensor_repository_remove_nonexist": 520, "remove_sensor": [520, 521], "sensor_repository_remov": 521, "sensor_repository_size_const": 522, "vector_append": 524, "vector_join": 524, "joined_cont": 524, "userdb_map": 525, "userdb_vector": 525, "dan": 525, "sak": 525, "cppcon": [525, 652, 654, 655, 668, 675, 693, 704], "transcrib": 525, "mallocfre": 530, "arrayofinteg": 530, "memoryleak": 530, "arrayboundswrit": 530, "newdelet": 530, "singleinteg": 530, "deletemismatch": 530, "thing1": [532, 533], "thing2": [532, 533], "global_str": 533, "__have_thing_h__": 533, "_content": 533, "denstruct": 533, "destruct": [533, 554, 624, 655, 705, 820], "essenc": [533, 1117], "collaps": 536, "thoroughli": [536, 882], "_mem": [539, 685], "determinist": [539, 704, 718, 973, 1024], "maybeown": 539, "pointerarithmet": 542, "bugp": 542, "105ff": 542, "num_el": 542, "another_arrai": 542, "yet_another_arrai": 542, "108ff": 542, "basics_cxx03": 542, "basics_cxx11": 542, "cbegin": [542, 595, 614, 651, 662], "my_copi": 542, "naivecopi": 542, "cend": [542, 595, 614, 651], "algocopi": 542, "backinsert": 542, "back_insert_iter": [542, 583], "nah": [542, 1119], "insertfind": 542, "make_pair": [542, 605, 608, 696], "erasebyposit": 542, "erasebykei": 542, "domin": 548, "bjarn": 548, "stroustrup": 548, "1985": 548, "2003": [548, 1130], "unif": 548, "point_c_suit": [549, 551], "struct_initi": 549, "point_init_default": 549, "c_default_constructor_init": 549, "point_create_default": 549, "c_default_constructor_cr": 549, "point_creat": [549, 551], "c_constructor": [549, 551], "eq": [549, 565, 567, 569], "point_equ": 549, "point_not_equ": 549, "eq_n": 549, "point_mov": [549, 551, 559, 561], "point_add": 549, "point_sub": 549, "add_sub": 549, "point_dist": 549, "point_ab": [549, 551], "hyp": [549, 551, 559], "unwant": [549, 600, 696, 756, 975, 996, 1020], "cpp_copy_suit": 550, "generated_copy_ctor": 550, "copy1": [550, 706], "copy2": [550, 706], "copy3": 550, "copyabl": 550, "manual_copy_suit": 550, "copy_ctor": [550, 705], "assignment_oper": 550, "earlier": 551, "point_h": [551, 559, 560], "point_cpp_suit": 551, "constructor_coordin": 551, "inaccessibil": 551, "move_op_pluseq": 551, "whenev": [552, 559, 569, 655], "sth": 553, "dirty_stack": 553, "use_uniniti": 553, "onward": [553, 557, 564], "nw": 554, "memberwis": 554, "_c_str": [554, 557, 658], "cxx03_data_encapsulation_copy_bas": [555, 644, 731], "cxx03_data_encapsulation_object_copi": [555, 644, 656, 687, 703, 712, 720, 728, 730, 731], "string_h": [557, 658], "cstring": [557, 658, 659, 692], "tcach": [557, 685], "221601": 557, "julian": [557, 706], "seward": [557, 706], "libvex": [557, 706], "rerun": [557, 706], "realloc": [557, 600], "0x484465b": 557, "1103": 557, "0x401210": 557, "0x401194": 557, "0x4dc8c80": 557, "0x401188": 557, "0x484222f": 557, "0x4011c5": 557, "0x40116f": 557, "freed": [557, 737, 907, 973], "destroi": [557, 619, 641, 660, 677, 692, 707, 718, 768], "221807": 557, "twostr": 557, "twotwostr": 557, "s21": 557, "s22": 557, "segfault": [557, 792, 950], "paraamet": 558, "__pretty_function__": 558, "0000000000401176": 558, "_z1fi": 558, "00000000004011a0": 558, "_z1fpc": 558, "demangl": 558, "anywher": [559, 971], "fab": [559, 560], "distance_origin": [559, 560, 710], "hid": 559, "standardes": 559, "d_orig": 560, "fpermiss": [560, 697], "arrog": 560, "goodi": [560, 876], "pascal": 562, "uninitil": 562, "pass_by_copi": 562, "references_suit": 562, "voila": [562, 882, 940, 953, 954, 964, 995], "tediou": [562, 901, 954, 1028], "pass_by_point": 562, "pass_by_refer": 562, "pass_by_const_point": 562, "const_point": 562, "pass_by_const_refer": 562, "const_refer": 562, "pass_by_copy_expens": 562, "copy_expens": 562, "pass_by_const_reference_cheap": 562, "const_reference_cheap": 562, "addend": [563, 690, 710], "straightforwardli": [563, 1033], "add_point": 563, "static_suit": 563, "global_funct": 563, "static_method": 563, "bss": 564, "definition1": 564, "definition2": 564, "forbid": 564, "trickeri": 564, "points_equ": 565, "oddli": 565, "operators_suit": 565, "equals_glob": 565, "difficulti": 565, "equals_object": 565, "vector_addition_glob": 565, "vector_addition_object": 565, "point_plus_equ": 565, "combo": [566, 568], "cuboid_suit": 566, "front_bottom_left": 566, "point_whl_ctor": 566, "operator_eq_n": [566, 567, 568, 569], "operator_pluseq": [566, 567, 568], "operator_minuseq": [566, 568], "operator_minu": [566, 568], "operator_ostream": [566, 567, 568, 569], "buf": [566, 567, 568, 569, 896, 904, 914], "entirei": [566, 568, 569], "starting_point": 567, "implementation_in_cpp_fil": 567, "rectangle_suit": [567, 569], "pluseq": 567, "operator_unary_minu": [567, 568], "minus_p": [567, 568], "point3d_suit": 568, "coordinates_ctor": 568, "071067812": 568, "69041576": 568, "top_right": 569, "top_left": 569, "bottom_right": 569, "rational": [569, 603], "operator_plus_equal_vec": 569, "plus_vec": 569, "cxx03_functions_and_methods_exercise_class_point3d": [570, 644, 731], "cxx03_functions_and_methods_exercise_class_point": [570, 644, 731], "cxx03_functions_and_methods_static_member_vari": [570, 644, 731], "cxx03_functions_and_methods_exercise_class_rectangl": [570, 644, 731], "cxx03_functions_and_methods_exercise_class_cuboid": [570, 644, 731], "dothat": [571, 572], "dothi": [571, 572], "dothos": [571, 572], "dammit": [571, 572, 651], "thisexcept": 572, "thatexcept": 572, "thrown": [572, 949], "myexcept": 572, "error_detect": 572, "granular": [572, 749, 936], "typenam": [574, 575, 657, 664, 665, 666, 667, 669, 671, 672, 673, 678, 699, 705, 709, 719, 721], "a_begin": [578, 580], "a_end": [578, 580], "src_begin": [578, 582], "src_end": [578, 582], "dst_begin": [578, 582], "decai": 579, "zeroth": 579, "unflex": 583, "shrink_to_fit": 583, "prealloc": [583, 584], "gool": [585, 652], "cplusplu": [587, 588, 589, 590, 591, 593, 594, 595, 596, 599, 608], "int_arrai": [587, 589, 593, 596], "binarili": 587, "is_el": 587, "original_begin": 588, "original_end": 588, "copy_run": 588, "original_run": 588, "int_array_c": 589, "match_666": 590, "match_42": 590, "x_equals_666": 590, "x_equals_4": 590, "x_equal": 590, "_criterion": 590, "yesno": [590, 805, 806], "output_stern": 591, "output_bindestrich": 591, "output_with_prefix": 591, "_prefix": 591, "cxx03_stl_algorithm_binary_search": [592, 611, 615, 644, 731], "cxx03_stl_algorithm_sort": [592, 611, 615, 644, 731], "cxx03_stl_algorithm_lower_bound": [592, 611, 615, 644, 731], "cxx03_stl_algorithm_revers": [592, 611, 614, 615, 644, 731], "cxx03_stl_algorithm_reverse_copi": [592, 611, 614, 615, 644, 731], "cxx03_stl_algorithm_find_if": [592, 611, 615, 644, 731], "cxx03_stl_algorithm_for_each": [592, 611, 615, 644, 731], "reversed_": [595, 614], "less_revers": 596, "greater_than": 596, "cluster_cxx03_stl_sequential_contain": [598, 611, 615, 644, 731], "cxx03_stl_sequential_containers_bas": [598, 611, 615, 644, 731], "cxx03_stl_sequential_containers_vector": [598, 611, 615, 644, 731], "cxx03_stl_sequential_containers_list": [598, 611, 615, 644, 731], "liek": 600, "logarithm": 600, "mein_int_arrai": 600, "insert_po": 600, "new_elems_as_vector": 600, "elems_to_insert": 600, "cxx03_stl_associative_containers_multimap": [602, 611, 615, 644, 731], "realiz": [603, 1024], "parameter": [603, 709, 714, 960, 974], "keytyp": [603, 647], "valuetyp": [603, 647], "some_map": 603, "key_typ": [603, 604], "mapped_typ": [603, 604], "value_typ": [603, 604], "emplac": 603, "collis": 603, "zweiundvierzig": 603, "out_of_rang": [603, 607], "mymap": [604, 605, 606, 607], "sechshundersechsundsechzig": 604, "kv": 604, "pre11": [604, 605], "einundfuenfzig": [604, 605, 606, 607], "vierundfuenfzig": [604, 605, 606, 607], "dreihundertsechsundvierzig": [604, 605, 606, 607], "tausendein": [604, 605, 606, 607], "tausendzwei": [604, 605, 606, 607], "retval_7": 605, "retval_2": 605, "n_remov": 606, "found_value_1001": 607, "found_value_666": 607, "found_valu": 607, "joerg_svnr": 608, "caro_svnr": 608, "johanna_svnr": 608, "philipp_svnr": 608, "datenzwilling_von_joerg": 608, "faschingzwil": 608, "meine_map": 608, "datenzwil": 608, "equal_rang": 608, "found_rang": 608, "svnr_notexist": 608, "1234567": 608, "memory_resourc": 609, "cluster_cxx03_stl_alloc": [610, 611, 615, 644, 731], "cxx03_stl_allocator_bas": [610, 611, 615, 644, 731], "cluster_cxx03_stl_exercis": [611, 612, 614, 615, 644, 731], "cluster_cxx03_stl_exercises_reverse_str": [611, 612, 614, 615, 644, 731], "cxx03_stl_exercises_reverse_string_exercis": [611, 612, 614, 615, 644, 731], "cxx03_stl_exercises_reverse_string_solut": [611, 614, 615, 644, 731], "auto_ptr": [616, 655, 1130], "cluster_cxx03_dynamic_memori": [617, 644, 731], "cxx03_dynamic_memory_todo": [617, 644, 731], "inher": [618, 619, 622, 624, 625, 938, 1026], "novirtu": [618, 619, 625], "mantra": [619, 803], "spoiler": [619, 984], "cxx03_inheritance_oo_private_protect": [620, 644, 731], "derived1": 622, "derived2": 622, "countless": 622, "derived3": 622, "unimpl": [622, 988], "polymorp": 624, "strictli": [624, 882, 883, 984], "indirect": [625, 711, 815, 969], "cluster_cxx03_standard_library_miscellanea": [626, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 731], "cxx03_standard_library_miscellanea_str": [626, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 731], "string_suit": 627, "another_hello": 627, "greeting1": 627, "greeting2": 627, "convert_to_signed_integ": 627, "stol": 627, "stoll": 627, "numstr": 627, "stoi": [627, 916, 919], "convert_to_unsigned_integ": 627, "stoull": 627, "stoui": 627, "stoul": 627, "convert_from_someth": 627, "basic_str": [627, 709], "i_str": 627, "ui_str": 627, "666000": 627, "sprintf": [627, 916, 919, 949, 950], "print_char": 628, "cluster_cxx03_exercises_misc": [628, 629, 630, 631, 644, 731], "cxx03_exercises_misc_american_flag": [628, 630, 644, 731], "cxx03_exercises_misc_fh_moodle_quiz": [629, 630, 644, 731], "cxx03_exercises_misc_sum_integers_from_stdin": [630, 631, 644, 731], "ctrl": [631, 950, 1002], "cluster_cxx03_exercises_userdb": [632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_user_const_memb": [632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_user_ctor": [632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_userdb_search": [632, 640, 641, 642, 644, 731], "cxx03_exercises_userdb_userdb_insert": [632, 639, 640, 641, 642, 644, 731], "cxx03_exercises_userdb_user_access_method": [632, 633, 635, 636, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_user_simple_method": [632, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_userdb_search_find_if": [632, 640, 641, 644, 731], "cxx03_exercises_userdb_userdb_vector_bas": [632, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_user_default_ctor": [632, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_user_const": [632, 635, 636, 639, 640, 641, 642, 643, 644, 731], "cxx03_exercises_userdb_userdb_search_notfound_except": [632, 641, 644, 731], "architecton": 634, "celebr": 637, "trittsich": [637, 638], "age_by_n_year": 637, "user_init": 638, "userdb_insert": 639, "doesnotexist": [640, 642], "isvalid": [640, 641, 642], "unnatur": 641, "_user": [641, 780], "thereaft": 641, "wrinkl": 641, "usernotfound": 641, "unreach": [641, 893], "userdb_search_by_lastnam": 642, "undetect": 642, "userdb_init": 643, "cluster_cxx11": [645, 649, 656, 663, 674, 687, 688, 698, 703, 712, 720, 728, 730, 731], "cluster_cxx11_introduct": [645, 649, 687, 728, 730, 731], "cxx11_introduction_overview_livehack": [645, 730, 731], "cxx11_introduction_histori": [645, 649, 687, 728, 730, 731], "ugliest": 646, "todo_list": 647, "tdl": 647, "desc": 647, "key_value_pair": 647, "up_1_to_10": 647, "down_1000_to_980": 647, "090": 647, "todo_item": 647, "make_shar": [647, 708, 726], "todolist": 647, "nocopi": 647, "add_item": 647, "_list": 647, "evangelist": 647, "cstdint": [648, 677], "wchar_t": 648, "cluster_cxx11_new_language_featur": [649, 656, 663, 674, 687, 688, 698, 703, 712, 720, 728, 730, 731], "cluster_cxx11_new_language_features_brace_initi": [649, 687, 728, 730, 731], "cxx11_new_language_features_strongly_typed_enum": [649, 687, 728, 730, 731], "cxx11_new_language_features_auto": [649, 687, 728, 730, 731], "cxx11_new_language_features_brace_initialization_mess": [649, 687, 730, 731], "cxx11_new_language_features_brace_initialization_intro": [649, 687, 728, 730, 731], "cxx11_new_language_features_brace_initialization_implementor_view": [649, 687, 730, 731], "pointcloud": [650, 652], "_point": 650, "data_": [651, 653], "memoriz": 651, "brace_initialization_suit": 652, "explicit_ctor_cal": 652, "initlist_ctor_cal": 652, "explicit_ctor": 652, "initlist_ctor": 652, "disabigu": 652, "nightmar": [652, 655, 969], "size_": 653, "constexpr_suit": 654, "basic_const_is_constexpr": 654, "constexpr_function_request": 654, "constexpr_function_not_request": 654, "constexpr_recursive_funct": 654, "6765": 654, "constexpr_ctor": 654, "schurr": 654, "olsen": [655, 704], "nicolai": [655, 697, 700], "josutti": [655, 697, 700], "smartptr": [656, 687, 705, 706, 730, 731], "cluster_cxx11_smart_point": [656, 687, 703, 712, 720, 728, 730, 731], "cluster_cxx11_new_language_features_move_pf": [656, 687, 703, 712, 720, 728, 730, 731], "cxx11_perfect_forward": [656, 687, 730, 731], "cxx11_new_language_features_move_pf_overview": [656, 687, 703, 712, 720, 728, 730, 731], "cxx11_smart_pointers_unique_ptr": [656, 687, 703, 712, 720, 728, 730, 731], "cxx11_smart_pointers_introduct": [656, 687, 703, 712, 720, 728, 730, 731], "cxx11_new_language_features_miscellan": [656, 687, 703, 712, 720, 728, 730, 731], "cxx11_new_language_features_move_pf_livehack_string_mov": [656, 687, 730, 731], "cxx11_new_language_features_move_pf_afterword": [656, 687, 730, 731], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [656, 687, 730, 731], "_p": [657, 705], "handwritten_suit": [657, 705], "explicit_mov": [657, 705], "assert_double_eq": [657, 705, 706], "create_constant_sensor": [657, 707], "prove": [657, 817], "return_by_copi": 657, "another_sensor": 657, "assigne": 657, "dubiou": 657, "bugfre": 658, "string_move_suit": 658, "make_a_string_from": 658, "ret_": 658, "move_return": 658, "move_assign": 658, "assig": 658, "person_h": 659, "person_suit": 659, "contructor": 659, "outliv": [660, 971], "rvr": 660, "ado": [662, 921, 1085], "mytyp": 662, "spellabl": 662, "0x7ffcd604846c": 662, "0x7ffcd6048468": 662, "iref": 662, "0x7ffffefe2b54": 662, "0x7ffffefe2b50": 662, "0x7ffc59ebd7bc": 662, "ciref": 662, "0x7ffc23e46284": 662, "0x7ffe4a148064": 662, "0x7ffc528e013c": 662, "cluster_cxx11_new_language_features_concept": [663, 687, 730, 731], "cxx11_new_language_features_concepts_link": [663, 687, 730, 731], "cxx11_new_language_features_concepts_intro": [663, 687, 730, 731], "cxx11_new_language_features_concepts_writing_concept": [663, 687, 730, 731], "conceptless": 664, "4ul": [664, 665], "4l": [664, 665], "satisfact": 664, "is_integral_v": 664, "_tp": [664, 697, 707], "hendrik": 668, "niemey": 668, "hypotenus": [669, 670, 671, 672, 673], "sumsq": [669, 670, 671, 672, 673], "point2d": [669, 671, 672, 673], "dozen": 669, "ruin": 669, "5l": 669, "same_a": 669, "commone_reference_with": 669, "common_reference_with": [669, 673], "has_siz": [672, 673], "index_returns_doubl": 673, "cluster_cxx11_new_language_features_coroutin": [674, 687, 730, 731], "cxx11_new_language_features_coroutines_intro": [674, 687, 730, 731], "stackless": 675, "asio": 675, "co_return": [675, 679, 680, 681, 682, 683], "hello_inst": [675, 679, 680, 681, 682, 683], "promise_typ": [675, 677, 678, 680, 681, 682, 683], "get_return_object": [675, 677, 678, 680, 681, 682, 683], "suspend_alwai": [675, 677, 678, 680, 681, 682, 683], "initial_suspend": [675, 677, 678, 680, 681, 682, 683], "final_suspend": [675, 677, 678, 680, 681, 682, 683], "return_void": [675, 678, 680, 681, 682, 683], "unhandled_except": [675, 677, 678, 680, 681, 682, 683], "suspend_nev": [675, 677, 678, 682], "coroutine_handl": [675, 677, 678, 681, 682, 683], "from_promis": [675, 677, 678, 681, 682, 683], "_coro": [675, 677], "yield_valu": [675, 677, 678, 681, 682, 683], "sentinel": [675, 678, 682, 683, 697], "_promis": [675, 678, 681, 682, 683], "glue": 675, "deciph": 675, "diagrammat": 675, "wei": 675, "co_yield": [676, 677, 678, 679, 681, 682, 683], "_elem": 677, "ed": [678, 681, 682, 683, 867, 904], "lackingdefaultconstructor": 684, "ldc": 684, "hasdefaultconstructor": 684, "hmpf": 684, "hdc": 684, "ownsmemori": 685, "om_copi": 685, "incontin": 686, "leaf": [686, 857], "method1": 686, "method2": 686, "cluster_cxx11_new_language_features_rang": [687, 698, 730, 731], "cluster_cxx11_new_language_features_lambda": [687, 688, 730, 731], "cxx11_new_language_features_modul": [687, 730, 731], "cxx11_new_language_features_default": [687, 730, 731], "cxx11_new_language_features_range_based_for": [687, 728, 730, 731], "cxx11_new_language_features_delegating_ctor": [687, 730, 731], "cxx11_new_language_features_fin": [687, 730, 731], "cxx11_new_language_features_structured_bind": [687, 730, 731], "cxx11_new_language_features_livehack_smartptr_mov": [687, 730, 731], "cxx11_smart_pointers_introduction_livehack": [687, 703, 730, 731], "cxx11_new_language_features_range_based_for_map": [687, 730, 731], "cxx11_new_language_features_constexpr": [687, 730, 731], "cxx11_new_language_features_delet": [687, 730, 731], "cxx11_new_language_features_overrid": [687, 730, 731], "cxx11_new_language_features_ranges_good_bad": [687, 698, 730, 731], "cxx11_new_language_features_ranges_link": [687, 698, 730, 731], "cxx11_new_language_features_ranges_intro": [687, 698, 730, 731], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [687, 688, 730, 731], "cxx11_new_language_features_lambda_lambda_is_functor": [687, 688, 730, 731], "cxx11_new_language_features_lambda_lambda_captur": [687, 688, 730, 731], "cxx11_new_language_features_lambda_lambda": [687, 688, 730, 731], "elsewher": [689, 778, 978], "lamda": 689, "print_messag": [689, 691, 692], "create_print_funct": [689, 691, 692], "constantli": [690, 795, 937], "mere": 690, "catur": 690, "akin": 690, "lambda_capture_suit": 690, "explicit_by_copi": 690, "lambda_capure_suit": 690, "explicit_by_refer": 690, "dubio": 690, "explicit_mix": 690, "initialized_captur": 690, "all_by_refer": 690, "all_by_copi": 690, "all_by_copy_except": 690, "this_captur": 690, "_i": [690, 710], "add_to_yourself_and_guarantee_programmers_job_secur": 690, "print_message_func": [691, 692], "_messag": [691, 692], "piti": 692, "mpp": 693, "precompil": [693, 778, 952], "speedup": 693, "rei": 693, "bori": 693, "kolpackov": 693, "abandon": 693, "inde": 695, "range_based_for_suit": 696, "map_pre_11": 696, "map_bas": 696, "map_basic_const_auto_refer": 696, "ific": [696, 701], "map_unpack_copi": 696, "map_unpack_refer": 696, "map_unpack_const_refer": 696, "min_el": 697, "forward_rang": [697, 699], "drop_view": 697, "filter_view": 697, "ref_view": 697, "ranges_util": 697, "view_interfac": 697, "_deriv": 697, "sized_sentinel_for": 697, "decltyp": 697, "__cust": 697, "declval": 697, "__cust_access": 697, "__begin": 697, "_s_size": 697, "_m_deriv": 697, "forward_iter": 697, "coll": 697, "2nd": [697, 1119], "__cxx11": [697, 709], "_vp": 697, "__simple_view": 697, "random_access_rang": [697, 699], "sized_rang": 697, "pretend": 697, "comitte": [697, 700], "lazili": 699, "first_two_drop": 699, "first_two_dropped_next_two_taken": 699, "oldstyl": 699, "inspir": 699, "refin": 699, "input_rang": 699, "bidirectional_rang": 699, "backward": [699, 753, 838, 870, 875, 1001, 1106], "contiguous_rang": 699, "tristan": 700, "brindl": 700, "cppnorth": 700, "l0bhzp6hmdm": 700, "nico": 700, "accu": 700, "rust": [700, 952], "parrai": 701, "decompos": 701, "structured_binding_suit": 701, "struct_copi": 701, "struct_refer": 701, "struct_const_refer": 701, "tuple_copi": 701, "make_tupl": 701, "affect": 701, "tuple_refer": 701, "tuple_const_refer": 701, "array_copi": 701, "array_refer": 701, "array_const_refer": 701, "suspici": 701, "designwis": 702, "uptr": 702, "cxx11_smart_pointers_shared_ptr": [703, 712, 720, 728, 730, 731], "cxx11_smart_pointers_closing_word": [703, 712, 720, 730, 731], "cxx11_smart_pointers_weak_ptr": [703, 728, 730, 731], "myclass": [704, 706], "unwind": 704, "yoky6hzlkx": 704, "steal": [705, 938], "cxx11_unique_ptr_sensors_h": 705, "_temp": 705, "basic_const": 705, "raw_": 705, "raw_s_ref": 705, "copy_ctor_bad": 705, "assignment_operator_bad": 705, "gtest_filt": [705, 706, 1117], "reveal": [705, 971], "vtabl": 705, "autoptr": 705, "copy_ctor_good_autoptr_styl": 705, "unexpectedli": 705, "assignment_operator_good_autoptr_styl": 705, "destiat": 705, "excus": 706, "shared_ptr_suit": 706, "rs1": [706, 707], "rs2": [706, 707], "rand1": [706, 707, 708], "rand2": [706, 707, 708], "cann": 706, "basic_make_shar": 706, "set_refer": 706, "_ref": 706, "cyclic_refer": 706, "303549": 706, "unique_ptr_suit": 707, "threw": 707, "ownership_error": 707, "cxx11": 707, "unique_ptr_suite_ownership_error_test": 707, "testbodi": 707, "_dp": 707, "default_delet": 707, "verbose_ctor": 707, "make_unique_auto": 707, "tranfer": 707, "create_random_sensor": 707, "implicit_ownership_transf": 707, "holdsasensor": 707, "taking_ownership_in_own_cod": 707, "sompil": 707, "raw1": 707, "tie": 708, "unti": 708, "weak_ptr_suit": 708, "borrowed_sensor": 708, "another_refer": 708, "sensor_ref": 708, "measurement_thread": 708, "rvref": 709, "lo_funct": 709, "adventur": 709, "grimm": 709, "jaud": 709, "factset": 709, "570f242261f8": 709, "suffer": [710, 883], "origin_dist": 710, "criteria": [710, 822, 1106], "predic": 710, "void_funct": 710, "bind_suit": 710, "plain_void_funct": 710, "one_parameter_funct": 710, "plain_one_parameter_funct": 710, "minus_hardcod": 710, "_1_minus_2": 710, "minus_swap_paramet": 710, "second_minus_first": 710, "_2": [710, 711], "minus_hardcode_first_paramet": 710, "_42_minus_param": 710, "funcfunc": 710, "tradeoff": [710, 783], "oneimplement": 711, "anotherimplement": 711, "do_much_work": 711, "c_using_on": 711, "c_using_anoth": 711, "explanatori": 711, "trampolin": 711, "rtti": 711, "pod": 711, "metaphys": 711, "ostreamlogg": 711, "databaselogg": 711, "logfunc_t": 711, "funcptrlogg": 711, "somebusinessclasswithneedforlog": 711, "successfulli": [711, 798, 813, 1105, 1112], "do_stupid_log": 711, "ostream_logg": 711, "database_logg": 711, "funcptr_logg": 711, "busy_logging_to_ostream": 711, "busy_logging_to_databas": 711, "busy_logging_to_funcptr": 711, "foo_func": 711, "explos": 711, "cluster_cxx11_functions_funct": [712, 720, 730, 731], "cxx11_functions_functions_bind": [712, 720, 730, 731], "cxx11_functions_functions_funct": [712, 720, 730, 731], "msdn": 713, "devil": 713, "singlethread": 713, "god": 713, "paralleliz": 714, "cancel": [714, 928], "interlockedincr": 716, "mutual": [717, 986], "try_lock": 717, "try_lock_for": 717, "unavail": 717, "try_lock_until": 717, "time_point": [717, 722], "do_something_errorpron": 718, "do_more_of_it": 718, "wake": [719, 760, 770, 901, 925, 934, 940], "waiter": [719, 770, 795, 925], "stop_wait": 719, "wait_for": [719, 721], "wait_until": [719, 721], "notify_on": 719, "notify_al": 719, "thunder": 719, "herd": 719, "condvar": 719, "threadsafequeu": 719, "maxelem": 719, "_maxelem": 719, "dur": [719, 721], "scoped_lock": [719, 721], "_lock": [719, 721], "pop_front": 719, "2m": [719, 721, 875], "1m": [719, 803, 875], "consumer1": 719, "consumer2": 719, "pthread_cond_init": [719, 925], "_not_empti": 719, "_not_ful": 719, "pthread_cond_wait": [719, 925], "pthread_cond_sign": [719, 925], "pthread_cond_t": [719, 925], "unique_lock": 719, "cluster_linux_sysprog_posix_thread": [720, 730, 731, 874, 915, 929, 935], "cluster_linux_sysprog_blocking_io": [720, 730, 731, 808, 811, 812, 874, 903, 915, 929, 935, 937], "cluster_linux_sysprog_schedul": [720, 730, 731, 874, 915, 929, 935, 937], "cluster_cxx11_multithread": [720, 730, 731], "linux_sysprog_posix_threads_condition_vari": [720, 730, 731, 874, 915, 929], "linux_sysprog_posix_threads_exercise_mutex": [720, 730, 731, 874, 915, 929], "linux_sysprog_posix_threads_bas": [720, 730, 731, 874, 915, 929, 935], "linux_sysprog_scheduling_bas": [720, 730, 731, 874, 915, 929, 935, 937], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [720, 730, 731, 874, 915, 929, 935], "linux_sysprog_posix_threads_lifecycl": [720, 730, 731, 874, 915, 929, 935], "linux_sysprog_posix_threads_mutex": [720, 730, 731, 874, 915, 929, 935], "linux_sysprog_blocking_io_blocking_io": [720, 730, 731, 808, 811, 812, 874, 903, 915, 929, 935, 937], "cxx11_multithreading_introduct": [720, 730, 731], "cxx11_multithreading_promise_futur": [720, 730, 731], "cxx11_multithreading_thread": [720, 730, 731], "cxx11_multithreading_scoped_lock": [720, 730, 731], "cxx11_multithreading_mutex": [720, 730, 731], "cxx11_multithreading_condition_vari": [720, 730, 731], "cxx11_multithreading_race_condit": [720, 730, 731], "cxx11_multithreading_atom": [720, 730, 731], "cxx11_multithreading_chrono": [720, 730, 731], "get_futur": 721, "set_except": 721, "exception_ptr": 721, "shared_futur": 721, "uncoordin": 721, "ten_million_years_": 721, "answer_poll_interval_m": 721, "answer_valid": 721, "chew_answ": 721, "timespec": [721, 925, 936, 946], "reaction": [721, 893, 975], "answer_computation_tim": 721, "answer_poll_interv": 721, "ten_million_year": 721, "lockguard": 721, "_answer_valid": 721, "_answer": 721, "_data": [721, 966], "binary_semaphor": 721, "__cplusplu": 721, "202001l": 721, "_notifi": 721, "answer_promis": 721, "answer_futur": 721, "make_exception_ptr": 721, "epoch": [722, 945], "time_t": 722, "notion": 722, "system_clock": 722, "monoton": [722, 786, 788], "ntp": 722, "steady_clock": 722, "timepoint": 722, "steadili": 722, "high_resolution_clock": 722, "brand": 722, "spent_milli": 722, "duration_cast": 722, "bagcopi": 725, "find_by_int": [725, 726, 727], "remove_by_int": [725, 726, 727], "nremov": [725, 726, 727], "bagshar": 726, "item2": [726, 727], "weakref": 726, "sharedref": 726, "baguniqu": 727, "constbag": 727, "cluster_cxx11_exercis": [728, 730, 731], "cxx11_exercises_bag_uniqu": [728, 730, 731], "cxx11_exercises_bag_copi": [728, 730, 731], "cxx11_exercises_bag_shar": [728, 730, 731], "withing": 729, "filesystem_suit": 729, "cd_to_tmpdir_fixtur": 729, "path_compose_compar": 729, "path_compose_compare_2": 729, "is_absolut": 729, "is_rel": 729, "path_abs_rel": 729, "abspath": 729, "relpath": 729, "parent_path": 729, "remove_filenam": 729, "replace_filenam": 729, "replace_extens": 729, "path_component_access": 729, "filename_part": 729, "dir_part": 729, "path_iter": 729, "current_directori": 729, "cwd_chdir": 729, "current_path": 729, "create_directory_error": 729, "filesystem_error": 729, "create_directory_singl": 729, "is_regular_fil": 729, "create_directory_multipl": 729, "is_directori": 729, "is_block_fil": 729, "is_character_fil": 729, "is_empti": 729, "is_fifo": 729, "is_oth": 729, "is_socket": 729, "is_symlink": 729, "greatest": 729, "nov": [729, 768, 834, 860, 882, 966, 975, 1002, 1031], "inod": [729, 737, 744], "919153": 729, "0644": [729, 823, 837], "system_u": 729, "object_r": 729, "passwd_file_t": 729, "s0": 729, "111282886": 729, "0100": 729, "737858445": 729, "743858359": 729, "file_s": 729, "hard_link_count": 729, "last_write_tim": 729, "ext4": [729, 778], "btrf": 729, "ntf": 729, "directory_iter": 729, "subdir1": 729, "subdir2": 729, "file1": [729, 747, 863], "file2": [729, 747, 863], "dirit": 729, "recursive_directory_iter": 729, "cxx11_filesystem": [730, 731], "cluster_linux_toolchain_cross": [731, 874, 956, 957, 959, 961, 962, 963], "cluster_linux_toolchain_exercis": [731, 874, 957, 958, 959, 960, 961, 962], "cluster_linux_toolchain_raspi": [731, 874, 957, 959, 962, 963], "cluster_linux_sysprog_process": [731, 874, 915], "cluster_linux_sysprog_intro_hw": [731, 874, 915, 917], "cluster_linux_kernel": [731, 735, 738, 740, 743, 745, 748, 750, 752, 754, 755, 757, 759, 761, 763, 765, 767, 769, 771, 773, 775, 777, 779, 782, 784, 787, 789, 793, 796, 799, 874], "cluster_linux_basics_permissions_exercis": [731, 808, 824, 827, 828, 829, 830, 831, 832, 833, 874], "cluster_linux_basics_archiving_compress": [731, 801, 808, 874, 962, 963], "cluster_linux_basics_shell_exercis": [731, 805, 806, 807, 808, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 858, 874], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [731, 805, 806, 807, 808, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 858, 874], "cluster_linux_basics_shell_exercises_l": [731, 808, 852, 853, 854, 855, 856, 858, 874], "cluster_linux_basics_text_tool": [731, 808, 868, 874], "cluster_linux_basics_io_redir_pip": [731, 808, 819, 874], "cluster_linux_basics_exercis": [731, 805, 806, 807, 808, 874], "cluster_linux_ssh": [731, 874, 886, 887, 888, 889, 890, 962, 963], "cluster_linux_ssh_exercis": [731, 874, 886, 887, 888, 889, 890], "cluster_linux_hardwar": [731, 874, 880, 881], "cluster_linux_hardware_can": [731, 874, 880, 881], "cluster_unittest": [731, 1115], "linux_toolchain_shared_librari": [731, 874, 962], "linux_basics_intro_environ": [731, 808, 812, 858, 874, 915, 962, 963], "linux_toolchain_cmake_cross": [731, 874, 962], "linux_toolchain_cross_bas": [731, 874, 956, 957, 959, 961, 962, 963], "linux_toolchain_exercises_native_build": [731, 874, 959, 960, 962], "linux_toolchain_exercises_fh_moodle_quiz": [731, 874, 958, 959, 962], "linux_toolchain_exercises_raspberry_toolchain": [731, 874, 959, 961, 962], "linux_toolchain_exercises_cross_build": [731, 874, 957, 959, 962], "linux_toolchain_raspi_toolchain_setup": [731, 874, 957, 959, 962, 963], "linux_toolchain_raspi_linaro_pi": [731, 874, 962, 963], "defunct": [731, 874, 962, 963], "linux_basics_archiving_compression_tar": [731, 801, 808, 874, 962, 963], "linux_ssh_bas": [731, 874, 886, 887, 888, 889, 890, 962, 963], "linux_ssh_scp": [731, 874, 886, 887, 888, 890, 962, 963], "linux_toolchain_raspi_detail": [731, 874, 962, 963], "linux_toolchain_raspi_docker_fedora_wsl": [731, 874, 962, 963], "linux_sysprog_ev": [731, 874, 915], "linux_sysprog_ipc": [731, 874, 915], "linux_sysprog_sign": [731, 874, 915], "linux_sysprog_fileio_misc": [731, 874, 913, 915, 932], "linux_sysprog_fileio_example_o_excl": [731, 874, 913, 915, 932], "o_excl": [731, 874, 904, 905, 913, 915, 932, 945], "linux_sysprog_fileio_example_o_creat": [731, 874, 913, 915, 932], "linux_sysprog_fileio_example_o_wronli": [731, 874, 913, 915, 932], "linux_sysprog_fileio_basics_exercise_copi": [731, 874, 905, 913, 915, 932], "linux_sysprog_fileio_example_o_rdonli": [731, 874, 913, 915, 932], "o_rdonli": [731, 736, 874, 900, 904, 905, 908, 911, 912, 913, 915, 916, 919, 932, 942, 945, 949], "linux_sysprog_fileio_fileio_group": [731, 874, 913, 915, 932], "linux_sysprog_fileio_basics_exercise_hol": [731, 874, 913, 915, 932], "linux_sysprog_fileio_dupl": [731, 874, 913, 915, 932], "linux_sysprog_posix_threads_miscellan": [731, 874, 915, 929], "linux_sysprog_posix_threads_exercise_condition_vari": [731, 874, 915, 929], "linux_sysprog_posix_threads_mutex_trylock": [731, 874, 915, 929], "trylock": [731, 874, 915, 923, 929], "islock": [731, 874, 915, 923, 929], "linux_sysprog_posix_threads_last_warn": [731, 874, 915, 929], "linux_sysprog_blocking_io_blocking_io_fil": [731, 808, 811, 812, 874, 903, 915], "linux_sysprog_blocking_io_blocking_io_tim": [731, 874, 903, 915], "linux_sysprog_blocking_io_blocking_io_network": [731, 874, 903, 915], "linux_sysprog_scheduling_wakeup_lat": [731, 874, 915, 935, 937], "linux_sysprog_scheduling_exam_quest": [731, 874, 915, 935, 937], "linux_sysprog_scheduling_realtim": [731, 874, 915, 935, 937], "linux_sysprog_scheduling_processes_and_thread": [731, 874, 915, 935, 937], "linux_sysprog_scheduling_realtime_api": [731, 874, 915, 935], "linux_sysprog_process_tre": [731, 874, 915], "linux_sysprog_process_commandlin": [731, 874, 915], "linux_basics_intro_process_tre": [731, 808, 812, 824, 827, 828, 829, 830, 831, 832, 833, 874, 886, 887, 888, 889, 890, 915, 962, 963], "linux_sysprog_intro_hw_watch": [731, 874, 915, 917], "linux_sysprog_intro_hw_get": [731, 874, 915, 917], "linux_sysprog_intro_hw_sysfs_gpio": [731, 874, 915, 917], "linux_kernel_cdev_manu": [731, 735, 738, 740, 743, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_modules_hello_world": [731, 735, 738, 740, 743, 745, 748, 755, 757, 759, 763, 769, 775, 782, 787, 793, 796, 799, 874], "linux_kernel_fedora_module_build": [731, 735, 738, 740, 743, 745, 748, 754, 755, 757, 759, 763, 769, 775, 782, 787, 793, 796, 799, 874], "linux_kernel_interrupt": [731, 755, 759, 761, 773, 775, 782, 787, 793, 796, 799, 874], "linux_kernel_process_vs_atom": [731, 740, 745, 748, 750, 755, 759, 761, 765, 769, 771, 773, 775, 777, 782, 784, 787, 789, 793, 796, 799, 874], "linux_kernel_cdev_refactor": [731, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_cdev_first_function": [731, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_cdev_file_oper": [731, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_kmalloc": [731, 740, 745, 748, 750, 755, 759, 769, 773, 775, 782, 787, 793, 796, 799, 874], "linux_kernel_list": [731, 740, 745, 748, 755, 759, 767, 769, 782, 787, 793, 796, 799, 874], "doubli": [731, 740, 744, 745, 748, 755, 759, 768, 769, 780, 782, 787, 793, 796, 799, 874], "linux_kernel_mutex": [731, 755, 759, 769, 771, 782, 787, 793, 796, 799, 874], "linux_kernel_cdev_auto": [731, 735, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_stub_sysprog_dup": [731, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874], "dup": [731, 737, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 821, 874, 907, 946], "stub": [731, 738, 740, 745, 748, 755, 759, 769, 782, 787, 793, 796, 799, 874, 965], "linux_kernel_fedora_kernel_build": [731, 735, 738, 740, 743, 745, 748, 752, 754, 755, 757, 759, 763, 769, 775, 782, 787, 793, 796, 799, 874], "linux_kernel_spinlock_cod": [731, 755, 782, 787, 793, 796, 799, 874], "linux_kernel_interrupt_cod": [731, 755, 759, 782, 787, 793, 796, 799, 874], "linux_kernel_spinlock": [731, 755, 782, 784, 787, 793, 796, 799, 874], "linux_kernel_mutex_cod": [731, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_raspi_kernel_build": [731, 755, 759, 779, 782, 787, 793, 796, 799, 874], "linux_kernel_multiple_devic": [731, 745, 755, 759, 769, 782, 787, 793, 796, 799, 874], "linux_kernel_netdev": [731, 755, 773, 874], "linux_kernel_dma": [731, 750, 755, 773, 775, 874], "linux_kernel_pci": [731, 755, 775, 874], "linux_kernel_iomemori": [731, 755, 763, 775, 874], "linux_kernel_workqueu": [731, 755, 793, 796, 799, 874], "linux_kernel_timer_cod": [731, 755, 787, 793, 796, 799, 874], "linux_kernel_tim": [731, 755, 787, 789, 793, 796, 799, 874], "linux_kernel_waitqueu": [731, 755, 796, 874], "linux_kernel_usermem": [731, 755, 793, 796, 874], "linux_basics_permissions_setuid": [731, 808, 833, 874], "linux_basics_permissions_setuid_livedemo": [731, 808, 833, 874], "linux_basics_permissions_fh_moodle_quiz": [731, 808, 825, 833, 874], "linux_basics_permissions_umask": [731, 808, 833, 874], "linux_basics_permissions_fh_moodle_quiz_nocheat": [731, 808, 826, 833, 874], "linux_basics_permissions_sticki": [731, 808, 833, 874], "linux_basics_permissions_exercises_credenti": [731, 808, 824, 827, 828, 829, 830, 831, 832, 833, 874], "linux_basics_intro_login": [731, 808, 812, 824, 827, 828, 829, 830, 831, 832, 833, 874, 886, 887, 888, 889, 890, 962, 963], "linux_basics_permissions_exercises_private_directori": [731, 808, 827, 828, 829, 833, 874], "linux_basics_permissions_exercises_private_directory_quest": [731, 808, 827, 829, 833, 874], "linux_basics_permissions_exercises_shared_fil": [731, 808, 827, 832, 833, 874], "linux_basics_permissions_exercises_public_directori": [731, 808, 827, 830, 831, 833, 874], "linux_basics_permissions_exercises_public_directory_quest": [731, 808, 827, 831, 833, 874], "linux_basics_intro_wsl": [731, 808, 812, 874], "linux_basics_intro_demo_everything_is_a_fil": [731, 808, 811, 812, 874], "linux_basics_intro_fh_moodle_quiz": [731, 808, 811, 812, 874], "linux_basics_archiving_compression_gzip": [731, 801, 808, 874, 962, 963], "linux_basics_archiving_compression_overview": [731, 801, 808, 874, 962, 963], "linux_basics_archiving_compression_exercis": [731, 801, 808, 874], "linux_basics_shell_cp": [731, 805, 806, 807, 808, 842, 843, 845, 846, 849, 850, 852, 858, 874], "linux_basics_shell_link": [731, 808, 858, 874], "linux_basics_shell_fh_moodle_quiz": [731, 808, 851, 858, 874], "linux_basics_shell_configfil": [731, 808, 858, 874], "linux_basics_shell_mv": [731, 808, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [731, 805, 806, 807, 808, 842, 843, 844, 845, 846, 847, 849, 850, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [731, 805, 806, 807, 808, 842, 843, 844, 845, 846, 849, 850, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [731, 808, 842, 846, 849, 850, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [731, 808, 842, 843, 846, 849, 850, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [731, 808, 842, 845, 846, 849, 850, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [731, 808, 842, 846, 849, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [731, 808, 846, 848, 852, 858, 874], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [731, 808, 846, 849, 852, 858, 874], "linux_basics_shell_exercises_ls_dev_typ": [731, 808, 852, 853, 855, 858, 874], "linux_basics_shell_exercises_ls_etc_passwd_s": [731, 808, 852, 854, 855, 858, 874], "linux_basics_shell_exercises_ls_home_permiss": [731, 808, 852, 855, 856, 858, 874], "linux_basics_text_tools_find": [731, 808, 868, 874], "linux_basics_text_tools_grep": [731, 808, 868, 874], "linux_basics_text_tools_less": [731, 808, 868, 874], "linux_basics_text_tools_head_tail": [731, 808, 868, 874], "linux_basics_text_tools_cat": [731, 808, 868, 874], "linux_basics_text_tools_overview": [731, 808, 868, 874], "linux_basics_text_tools_cut": [731, 808, 868, 874], "linux_basics_text_tools_exercis": [731, 808, 868, 874], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [731, 808, 819, 874], "linux_basics_io_redir_pipes_io_redir": [731, 808, 819, 874], "linux_basics_io_redir_pipes_pip": [731, 808, 819, 874], "linux_basics_io_redir_pipes_exercis": [731, 808, 819, 874], "linux_basics_exercises_fh_ss2022_exam_01_g1": [731, 805, 807, 808, 874], "linux_basics_exercises_fh_ss2022_exam_01_g2": [731, 806, 807, 808, 874], "linux_ssh_key_pair": [731, 874, 886, 887, 888, 889, 890], "linux_ssh_sshf": [731, 874, 890], "linux_ssh_link": [731, 874, 890], "linux_ssh_portforward": [731, 874, 890], "linux_ssh_exercises_copy_fil": [731, 874, 886, 887, 888, 890], "linux_ssh_exercises_pubkei": [731, 874, 886, 887, 888, 889, 890], "linux_ssh_exercises_copy_tre": [731, 874, 887, 888, 890], "linux_hardware_i2c": [731, 874, 881], "linux_hardware_brushless_motor": [731, 874, 881], "brushless": [731, 874, 881], "linux_hardware_pwm": [731, 874, 881], "linux_hardware_w1": [731, 874, 881], "linux_hardware_can_program": [731, 874, 880, 881], "linux_hardware_can_hardwar": [731, 874, 880, 881], "linux_hardware_can_interfac": [731, 874, 880, 881], "linux_hardware_can_intro": [731, 874, 880, 881], "unittest_gtest_cmak": [731, 1115], "interconnect": 732, "device_cr": [733, 734, 737], "cdev_init": [733, 741, 742], "cdev_add": [733, 741, 742], "unhappi": 733, "device_destroi": 733, "my_class": 733, "my_driv": [733, 736, 746, 747, 758, 768, 774, 780, 786, 797], "mknod": [733, 741, 742], "character devic": [734, 737, 742, 1135], "relatim": 734, "register_chrdev_region": [734, 741, 742], "alloc_chrdev_region": [734, 742], "htmldoc": 734, "chrdev": 734, "dev_t": [734, 742], "baseminor": 734, "highlight": 734, "bug_on": 734, "module_licens": [734, 756], "openat": [736, 900], "at_fdcwd": [736, 900], "0x7f3d11330000": 736, "einval": [736, 741, 756, 794], "enotti": 736, "file_oper": [737, 741, 742, 780], "citizenship": 737, "__user": [737, 792], "loff_t": 737, "unlocked_ioctl": 737, "my_op": 737, "this_modul": 737, "my_open": 737, "my_read": 737, "my_writ": 737, "my_ioctl": [737, 768], "mode_t": [737, 904, 908, 946], "filp": [737, 780, 794], "vf": 737, "swiss": [737, 904, 1130], "armi": [737, 904, 1130], "my_ioctl_request": [737, 739], "my_request_such": 737, "my_request_such_and_such": 737, "laden": [737, 1144], "endod": 737, "_iow": 737, "_ior": 737, "_ioc": 737, "_ioc_non": 737, "_ioc_read": 737, "_ioc_typecheck": 737, "_ioc_writ": 737, "_iowr": 737, "my_ev": [739, 746, 747, 786, 791], "my_event_typ": 739, "my_event_ioctl": 739, "jiffi": [739, 780, 786], "my_event_list": [739, 746, 747, 768], "list_head": [739, 766, 768, 791], "num_ev": 739, "my_event_list_init": 739, "my_event_list_destroi": 739, "my_event_list_add": [739, 768, 781, 786, 797], "my_ioctl_add_ev": 739, "printk": [739, 756, 758, 797], "unregister_chrdev_region": [741, 742], "caveat": [741, 780, 883], "register_chrdev": 741, "unregister_chrdev": 741, "kern_err": 741, "cdev_del": [741, 742], "my_driver_henkel": 741, "kmem": 742, "opaqu": 742, "majmin": 742, "mkdev": 742, "drivernam": 742, "my_fop": 742, "my_cdev": 742, "devicefil": 742, "ndevic": 744, "module_param": 744, "my_devic": [744, 746, 747, 758, 774, 786], "private_data": [744, 774, 780], "kbuild": [746, 747], "torn": [746, 1122], "ccflag": [746, 747], "container_of": [747, 798], "file3": 747, "distinct": [747, 814, 898, 1025], "my_device_init": 747, "my_device_destroi": [747, 786], "everyt": 749, "vmalloc": 749, "ioremap": [749, 762], "iommu": 749, "pysic": 749, "dma_addr_t": 749, "alloc_pag": 749, "gfp_mask": 749, "get_free_pag": 749, "__get_free_pag": 749, "2order": 749, "__get_dma_pag": 749, "zone": 749, "__free_pag": 749, "free_pag": 749, "addr": [749, 762, 774, 878, 883, 901, 945, 1110], "dma_handl": 749, "cpu_addr": [749, 774], "dma_alloc_coher": 749, "gfp": [749, 764, 790], "dma_free_coher": 749, "pci_dev": [749, 774], "gfp_kernel": [749, 764, 781], "gfp_atom": [749, 764], "dma_bidirect": 749, "dma_to_devic": 749, "dma_from_devic": 749, "dma_map_singl": 749, "dma_mapping_error": 749, "fuck": 749, "dma_unmap_singl": 749, "dma_map_pag": 749, "dma_unmap_pag": 749, "dma_address": 749, "sglist": 749, "sg_run": 749, "dma_map_sg": 749, "for_each_sg": 749, "hw_address": 749, "sg_dma_address": 749, "hw_len": 749, "sg_dma_len": 749, "dma_unmap_sg": 749, "nent": 749, "unmap": [749, 774], "recreat": [749, 850, 968], "dma_sync_single_for_cpu": 749, "dma_sync_sg_for_cpu": 749, "mel": [749, 764], "gorman": [749, 764], "incredibli": 749, "transcript": [751, 778, 1075], "building_a_custom_kernel": 751, "fc33": [751, 756], "extravers": [751, 779], "cleanli": 751, "uncommit": 751, "j6": 751, "fedpkg": 751, "pesign": 751, "grubbi": 751, "33rd": 751, "f33": 751, "builddep": 751, "libexec": [751, 964], "symver": [753, 756], "modpost": [753, 756], "module_src": 753, "kernel_build": 753, "install_mod_path": [753, 778], "modules_instal": [753, 778, 882], "fedora_kernel_build": 755, "fedora_module_build": 755, "modules_hello_world": 755, "cdev_manu": 755, "process_vs_atom": 755, "stub_sysprog_dup": 755, "cdev_auto": 755, "cdev_file_oper": 755, "cdev_first_function": 755, "cdev_refactor": 755, "multiple_devic": 755, "mutex_cod": 755, "raspi_kernel_build": 755, "interrupt_cod": 755, "spinlock_cod": 755, "timer_cod": 755, "iomemori": 755, "usermem": 755, "netdev": 755, "waitqueu": [755, 1135], "ldd3": [755, 766], "reilli": [755, 867], "probe": [756, 882, 883, 884], "hello_init": 756, "kern_debug": 756, "hello_exit": 756, "module_init": 756, "module_exit": 756, "exot": 756, "currect": [756, 851], "lsmod": [756, 882, 883, 884], "insmod": 756, "modprob": [756, 778, 779, 877, 882, 883, 884], "rmmod": [756, 786], "dep": 756, "softdep": 756, "rebuilt": 756, "depmod": [756, 774], "cross_compil": [758, 778, 779], "libssl": [758, 882], "gpio_request": 758, "gpio_fre": 758, "gpio_direction_input": 758, "gpio_direction_output": 758, "gpio_to_irq": 758, "my_device_activate_gpio": 758, "_destroi": 758, "3f200000": 758, "pinctrl": 758, "bcm2835": [758, 879], "request_irq": [758, 760, 774], "free_irq": [758, 760, 774], "priorit": [760, 776, 876, 934, 946], "preempt_rt": [760, 770, 1125], "mainlin": [760, 778, 938, 1125], "irqreturn_t": [760, 774], "irq_handl": [760, 774], "irq": [760, 774, 776, 780, 936], "opqu": 760, "irq_non": 760, "irq_wake_thread": 760, "irq_handler_t": 760, "irqf_shar": [760, 774], "irqf_trigger_ris": 760, "irqf_trigger_fal": 760, "irqf_trigger_high": 760, "irqf_trigger_low": 760, "iomem": 762, "ioport": 762, "request_mem_region": 762, "0x20200000": 762, "release_mem_region": 762, "asm": [762, 967], "iounmap": 762, "ioread8": 762, "ioread16": 762, "ioread32": 762, "iowrite8": 762, "u8": 762, "iowrite16": 762, "u16": 762, "iowrite32": 762, "u32": 762, "kmalloc kfre": 764, "dynamic memori": 764, "slab": 764, "gfp_t": [764, 781, 797], "kzalloc": 764, "kfree": 764, "scarc": 764, "discourag": 764, "stolen": [766, 875], "some_list": 766, "init_list_head": 766, "some_data": 766, "list_add": 766, "list_add_tail": 766, "new_payload": 766, "existing_payload": 766, "prepend": [766, 778, 810, 1013], "list_for_each": 766, "list_entri": 766, "cursor": [766, 838, 1085], "run_payload": 766, "list_empti": 766, "list_first_entri": 766, "list_del": [766, 768], "a_payload": 766, "inject": [768, 781, 786, 1088], "opfer": 768, "corrupt": 768, "ffff91285ae68f00": 768, "ffff9128406cec00": 768, "list_debug": 768, "0x70": [768, 883], "0xb0": 768, "0xdd": 768, "ksys_ioctl": 768, "0x82": 768, "0xc0": 768, "__x64_sys_ioctl": 768, "do_syscall_64": 768, "0x4d": 768, "entry_syscall_64_after_hwfram": 768, "0x44": 768, "0xa9": 768, "unprotect": [768, 780, 996], "nevent": [768, 791], "my_device_list": 768, "preemptibl": [770, 938], "preemption": [770, 776, 783, 883, 934, 937, 938], "holder": [770, 994], "mutex_init": 770, "mutex_destroi": 770, "mutex_lock": 770, "mutex_lock_interrupt": 770, "eintr": [770, 896, 949, 950], "mutex_lock_interruptible_nest": 770, "mutex_trylock": 770, "eagain": [770, 780, 794], "mutex_unlock": 770, "torvald": [770, 778], "trickl": 770, "rtmutex": 770, "rt_mutex": 770, "net_devic": 772, "alloc_netdev": 772, "sizeof_priv": 772, "netdev_priv": 772, "funcion": 772, "ethernet": 772, "etherdevic": 772, "alloc_etherdev": 772, "free_netdev": 772, "register_netdev": 772, "unregister_netdev": 772, "devinc": 772, "hard_start_xmit": 772, "sk_buff": 772, "skb": 772, "transmiss": [772, 901, 1072], "tx_timeout": 772, "quota": [772, 804], "stead": 772, "do_ioctl": 772, "ifreq": [772, 878], "ifr": [772, 878], "netif_start_queu": 772, "netif_stop_queu": 772, "netif_wake_queu": 772, "udevd": 774, "pci_device_id": 774, "my_id": 774, "pci_devic": 774, "0xdead": 774, "0xbeef": 774, "0xbeee": 774, "module_device_t": 774, "my_prob": 774, "my_remov": 774, "my_suspend": 774, "pm_message_t": 774, "my_resum": 774, "my_shutdown": 774, "pci_driv": 774, "id_tabl": 774, "my_init": 774, "pci_register_driv": 774, "my_exit": [774, 983], "pci_unregister_driv": 774, "subsystem_vendor": 774, "subsystem_devic": 774, "u64": [774, 788], "dma_mask": 774, "device_count_resourc": 774, "pci_enable_devic": 774, "pdev": 774, "wizardri": 774, "pci_request_region": 774, "pci_set_mast": 774, "pci_clear_mast": 774, "pci_set_dma_mask": 774, "pci_set_drvdata": 774, "ioread": 774, "iowrit": 774, "pci_resource_len": 774, "bar_no": 774, "__iomem": 774, "pci_iomap": 774, "pci_iounmap": 774, "pci_alloc_consist": 774, "os_devic": 774, "_o": 774, "dma_addr": 774, "pci_free_consist": 774, "_size": 774, "_cpu_addr": 774, "t_os_dma_addr__get_n": 774, "_dma_addr": 774, "_os_devic": 774, "dma_bit_mask": 774, "pci_set_consistent_dma_mask": 774, "config_debug_atomic_sleep": [776, 781], "cross compil": 778, "educ": 778, "raspberrypi": [778, 779, 882, 954, 961], "borrow": 778, "pi2": 778, "1gb": 778, "canon": [778, 895], "workstat": 778, "hf": 778, "armv6j": 778, "hardfloat": 778, "gnueabi": 778, "objcopi": 778, "raspberry_pi": 778, "local_overlai": 778, "ebuild": 778, "binutil": [778, 779], "repo_nam": 778, "9999": 778, "sourcedir": 778, "builddir": 778, "buildparam": 778, "kconfig": 778, "zconf": 778, "raspbian": 778, "bootdir": 778, "bootf": 778, "rootf": 778, "kernel7": 778, "Then": [778, 893, 1092], "assimil": 778, "bcmrpi_defconfig": 778, "bcm2709_defconfig": 778, "config_localvers": 778, "config_ikconfig": 778, "eveytim": 778, "config_can_mcp251x": 778, "config_sensors_lm73": 778, "zimag": [778, 779, 882], "dtb": [778, 779, 882], "j3": 778, "mkknlimg": 778, "te": 778, "superus": 778, "jtf": 778, "bcm2709": 778, "smi": 778, "ft5406": 778, "can1": [778, 877], "v7": [778, 779], "ipv4": [778, 1147], "xfrm4_mode_beet": 778, "inet_lro": 778, "esp4": 778, "xfrm4_mode_transport": 778, "udp_tunnel": 778, "sdb": 778, "57344": 778, "sdb1": 778, "4162560": 778, "sdb2": 778, "enjoi": 778, "ec2aa3d2": 778, "eee7": 778, "454e": 778, "d145df5ddcba": 778, "agnost": 778, "urg": 778, "rasperri": [779, 882, 884, 1134, 1141], "patchlevel": 779, "sublevel": 779, "_morph": [780, 790], "my_driver_hello": 780, "my_driver_cdev_manu": 780, "my_driver_cdev_dynamic_major": 780, "my_driver_cdev_file_oper": 780, "my_driver_cdev_first_function": 780, "my_driver_cdev_refactor": 780, "my_driver_multiple_devic": 780, "my_driver_mutex": 780, "my_driver_interrupt": 780, "my_driver_spinlock_atom": 780, "my_driver_time_tim": 780, "my_driver_workqueu": 780, "my_driver_usermem": 780, "copy_": 780, "my_driver_waitqueu": 780, "nonblock": [780, 794, 946, 1147], "spinlock_t": [781, 783], "isr": [781, 938, 1135], "spin_unlock": [781, 783], "reenabl": 781, "uniprocessor": 783, "multiprocessor": 783, "spin_lock_init": 783, "spin_lock": 783, "spin_trylock": 783, "irqflag": 783, "spin_lock_irqsav": 783, "spin_unlock_irqrestor": 783, "pend": [786, 815, 938, 951], "my_inject_deferred_ev": 786, "my_device_add_deferred_ev": 786, "del_timer_sync": [786, 788], "paranoia": 786, "symmetri": 786, "my_device_add_ev": 786, "my_inject_ev": 786, "tick": 788, "config_hz": 788, "friendli": [788, 1026, 1095, 1099], "hrtimer": 788, "jiffies_to_msec": 788, "jiffies_to_usec": 788, "jiffies_to_nsec": 788, "msecs_to_jiffi": 788, "usecs_to_jiffi": 788, "timespec64_to_jiffi": 788, "timespec64": 788, "jiffies_to_timespec64": 788, "timer_list": 788, "my_tim": 788, "timerfunc": 788, "timer_setup": 788, "add_tim": 788, "del_tim": 788, "0520": 790, "0521": 790, "0525": 790, "0532": 790, "0710": 790, "preempt": [790, 934, 938], "caption": 790, "backlink": 790, "my_event_nod": 791, "my_get_one_ev": [791, 794], "my_device_get_one_ev": 791, "my_event_get_one_ev": 791, "efault": [791, 792], "uaccess": 792, "copy_to_us": 792, "copy_from_us": 792, "enosi": 794, "timerfd": [794, 902, 942], "f_flag": 794, "wait_queue_head_t": 795, "wq": [795, 797, 798], "init_waitqueue_head": 795, "sched": 795, "wait_ev": 795, "wait_event_interrupt": 795, "wait_event_timeout": 795, "timeout_jiffi": 795, "wait_event_interruptible_timeout": 795, "wake_up": 795, "wake_up_interrupt": 795, "task_interrupt": 795, "create_workqueu": [797, 798], "destroy_workqueu": [797, 798], "eo": 797, "rtprio": 797, "work_struct": [797, 798], "init_work": [797, 798], "chrt": [797, 938], "workqueue_struct": 798, "work_func_t": 798, "queue_work": 798, "packen": 800, "gunzip": 802, "zgrep": 802, "zcat": 802, "zless": 802, "intact": [802, 1051, 1055], "viro": 803, "cpio": 803, "cleaner": 803, "archivformat": 803, "lzma": 803, "430mb": 803, "95mb": 803, "74mb": 803, "5m": [803, 875], "64mb": 803, "togeht": 804, "ceph": 804, "gfs2": 804, "zcf": 804, "decompress": [804, 964], "zxf": 804, "ztf": 804, "dirt": 804, "livingroom": 804, "grumbl": 804, "reat": 804, "tract": 804, "ell": [804, 838], "vv": 804, "supplementari": [805, 806, 813, 815], "1021": [805, 806, 813], "somefil": [805, 806, 844], "chgrp": [805, 806, 823, 830, 832], "fellow": [805, 806], "picki": [805, 806, 988], "ttyusb1": 809, "stick": [809, 813], "2006854": 809, "sdc": 809, "2006823": 809, "deserv": [809, 867, 928, 954], "trash": [809, 838], "burn": [809, 884], "1mib": 809, "1mibf": 809, "0m": [809, 860, 936], "mkf": 809, "entropi": 809, "my_vari": 810, "1034184": 810, "1035812": 810, "ancestor": [810, 816, 894], "decriptor": [811, 910], "getti": 813, "kerbero": [813, 815], "gnome3": 813, "agetti": 813, "cleartext": [813, 834], "shadow": [813, 834, 910, 1017, 1054], "brute": [813, 891, 954], "crack": 813, "attack": [813, 891, 969, 1088, 1133], "hierarch": 814, "peripher": [814, 1134, 1141], "grand": 814, "ten_integ": 815, "unfair": [815, 938], "dialout": [815, 910], "seg": 815, "kbyte": 815, "62715": 815, "819200": 815, "pstree": 816, "modemmanag": 816, "journ": 816, "abrtd": 816, "auditd": 816, "bluetoothd": 816, "cupsd": 816, "lau": 816, "firewalld": 816, "fwupd": 816, "tini": [816, 952], "enemi": 817, "guidanc": 817, "dicdat": 817, "acknowledg": [817, 875], "seamless": [817, 1101], "vmware": 817, "exampk": 817, "altruism": 817, "mkfifo": [818, 822], "stdin_fileno": [820, 904, 914, 950, 1026], "stdout_fileno": [820, 900, 901, 904, 910, 936, 945, 949, 950, 1026], "stderr_fileno": [820, 904, 1026], "religi": 820, "fed": 820, "filefor": 820, "sudoer": 821, "weekli": 821, "compet": [822, 883], "award": [822, 869], "plumber": 822, "sniff": 822, "fifo": [822, 904, 1146], "rendezv": 822, "unnam": 822, "chown": [823, 835, 966], "useradd": [823, 966], "groupadd": 823, "usermod": 823, "groupmod": 823, "teammember42": 823, "manfromthestreet": 823, "jun": [823, 954], "triplet": 823, "1003": 823, "110100100": 823, "110000000": 823, "0600": 823, "111101101": 823, "0755": 823, "bitmask": [823, 834, 950], "1317": 834, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 834, "0g2rqr9cnydnqq5unt": 834, "wpu8jyzeuxktapl0": 834, "burnout": 834, "retyp": 834, "rwsr": [834, 835], "32712": 834, "rwxrwxrwx": 834, "4755": [834, 835], "uid_t": 835, "getuid": 835, "geteuid": 835, "rwxrwxr": [835, 900, 952, 953, 954], "24456": 835, "drwxrwxrwt": 836, "0022": 837, "strain": 838, "injuri": 838, "diseas": 838, "outout": 838, "20k": 838, "olevel": 838, "debugopt": 838, "expr1": 838, "expr2": 838, "daystart": 838, "regextyp": 838, "synopsi": 838, "findu": 838, "til": 838, "findutil": 838, "pression": 838, "print0": 838, "keystrok": 838, "noob": [838, 999], "pos1": 838, "misconfigur": 838, "esc": 838, "freak": 838, "cvsserver": 838, "gitview": 838, "oesterreich": 838, "clearanc": 838, "e7d76d19": 838, "dd3d": 838, "4d52": 838, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 838, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 838, "gif": [838, 1089], "einkommensteuerbescheid1": 838, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 838, "einkommensteuervorauszahlungsbescheid1": 838, "immobilienbewertung": 838, "etw": 838, "confirm": 838, "ova": 838, "umsatzsteuerbescheid1": [838, 860, 861], "h0020211105124337": 838, "vk9vst311192021_0022021": 838, "img_": 840, "jpg": 840, "bilder": 840, "121751": 841, "op": [841, 1027], "garbage1": [842, 843, 845, 849, 850], "garbage2": [842, 843, 845, 849, 850], "diretori": 844, "sweetheart": [844, 850, 857, 931], "citi": 844, "mqueue": [853, 945], "leavel": 857, "hintingx": 860, "1048576": 860, "drwx": [860, 862], "36817": 860, "umsatzsteuerbescheid": 861, "finanzamt": 861, "abgab": 861, "neighbor": [862, 1083], "enat": 863, "dereferenzieren": 865, "50k": [865, 866], "rekursiv": 866, "eintr\u00e4g": 866, "unterhalb": 866, "gefiltert": 866, "un\u00fcblich": 866, "gebr\u00e4uchlich": 866, "geh\u00f6ren": 866, "mmin": 866, "h\u00f6chsten": 866, "gefundenem": 866, "eintrag": 866, "heissen": 866, "beginnen": 866, "versteht": 866, "vergessen": 866, "j\u00fcnger": 866, "verkn\u00fcpft": 866, "metacharact": [866, 885], "gr\u00f6\u00dfer": 866, "lobal": 867, "egular": 867, "xpression": 867, "rint": 867, "sed": [867, 1134, 1141], "tream": 867, "itor": 867, "verb": 867, "insensit": [867, 1100], "entor": 867, "perlr": 867, "perlretut": 867, "perlrequick": 867, "jeffrei": 867, "friedl": 867, "philosopi": 871, "toether": 871, "hc": 871, "325324": 871, "xarg": 871, "bitbak": 873, "behan": 873, "webster": 873, "drone": 875, "electronic speed control": 875, "vehicl": 875, "rack": 875, "recognit": [875, 1083], "flight": 875, "wire": [875, 885, 964], "fritz": [875, 883], "brigh": 875, "heinrich": 875, "pwmchip0": [875, 883], "pwm0": [875, 883], "polar": 875, "uevent": [875, 882, 883, 884, 918], "puls": [875, 1134, 1141], "cheapest": 875, "quicrun": 875, "16bl30": 875, "brake": 875, "11v": 875, "conclud": [875, 883], "lipo": 875, "madli": 875, "transmitt": 875, "throttl": 875, "neutral": [875, 1085], "chop": 875, "kindli": [875, 1089], "mechatron": 875, "50hz": 875, "nanosecond": [875, 883, 902], "20000000": [875, 986], "oscil": 875, "10bl60": 875, "000n": 875, "1500000": [875, 940], "2000000": 875, "1550000": 875, "1600000": 875, "acceler": 875, "1650000": 875, "1700000": 875, "1750000": 875, "1800000": 875, "1850000": 875, "1900000": 875, "1950000": 875, "logist": [875, 1083], "hobbi": 875, "can bu": [876, 877, 878, 879], "sinowatz": [876, 976], "donat": 876, "volkswagen": 876, "traffic": 876, "octet": 876, "arbitr": 876, "can_fram": [876, 878], "canid_t": [876, 878], "can_id": [876, 878], "eff": [876, 878], "rtr": [876, 878], "__u8": [876, 878], "can_dlc": [876, 878], "__attribute__": [876, 878], "can0": [877, 878], "noarp": 877, "qdisc": 877, "qlen": 877, "relic": 877, "cansend": 877, "candump": 877, "canplay": 877, "cangen": 877, "snif": 877, "loopback": 877, "pf_can": 878, "sockaddr_can": 878, "sock_raw": 878, "can_raw": 878, "ifr_nam": 878, "siocgifindex": 878, "can_famili": 878, "af_can": 878, "can_ifindex": 878, "ifr_ifindex": 878, "sockaddr": [878, 901], "can_socket": 878, "packt": 878, "frame_layout": 878, "ib3x8": 878, "frame_s": 878, "calcsiz": 878, "recvfrom": 878, "sendto": 878, "lnxpp": 879, "can2udp": 879, "openwrt": 879, "asymmetrisch": 879, "mosi": 879, "miso": 879, "sclk": 879, "broadcom": 879, "ce0": 879, "3v": [879, 882], "5v": [879, 882], "transceiv": 879, "inter intergrated circuit": 882, "lm-sensor": 882, "handwork": [882, 884], "texa": 882, "maker": 882, "dtparam": [882, 883, 884], "i2c_arm": [882, 883, 884], "gpio2": 882, "gpio3": 882, "i2c_bcm2835": [882, 883, 884], "fe804000": [882, 884, 918], "i2c_dev": [882, 883], "sot": 882, "7v": 882, "rail": 882, "capacitor": 882, "idc": 882, "gnd": [882, 884], "vdd": 882, "smbdat": 882, "smbclk": 882, "unconnect": 882, "0x49": 882, "0x4a": 882, "jumper": 882, "3v3": [882, 884], "scl": [882, 884], "probl": 882, "i2c_slav": 882, "0x0703": 882, "o_rdwr": [882, 904, 911, 945], "msb_lsb": 882, "msb": 882, "lsb": [882, 953], "65535": 882, "dev_fd": 882, "perror": [882, 896, 900, 901, 902, 908, 909, 910, 911, 916, 919, 936, 942, 945, 949], "libncurs": 882, "bcm2711_defconfig": 882, "v7l": 882, "semiconductor": 882, "j4": 882, "kernel7l": 882, "new_devic": [882, 884], "0048": 882, "modalia": 882, "preinstal": 882, "hwmon0": 882, "thermal": 882, "thermal_zone0": 882, "hwmon1": [882, 884], "temp1_max": 882, "temp1_max_alarm": 882, "temp1_min": 882, "temp1_min_alarm": 882, "update_interv": 882, "milli": [882, 884], "22000": 882, "randomli": [882, 884], "nomenclatur": 882, "pulse width modul": 883, "resistor": 883, "bright": 883, "potentiomet": 883, "ssop": 883, "0b1000000": 883, "buse": [883, 884], "i2cdetect": [883, 884], "charactr": 883, "pca": 883, "simultan": [883, 949], "peculiar": 883, "pca9685a": 883, "nxp": 883, "dtoverlai": [883, 884], "pwm_pca9685": 883, "regmap_i2c": 883, "3f804000": 883, "0040": [883, 918], "npwm": 883, "unexport": [883, 918], "butt": [883, 964], "intercept": [883, 975], "dim": 883, "300000": [883, 1081], "fade": 883, "800000": [883, 1081], "600000": [883, 1081], "50000": 883, "apolog": 883, "kenel": 883, "devlop": 883, "pleasur": 883, "cornerston": 884, "unstabl": 884, "parasit": 884, "bitbang": 884, "gpiopin": 884, "profession": 884, "addon": 884, "pinout": 884, "01144fe43baa": 884, "w1_bus_master8": 884, "w1_bus_master1": 884, "breadboard": [884, 1134, 1141], "amaz": 884, "400000000000": 884, "800000000000": 884, "behalf": [884, 898, 952], "ad0": 884, "ad1": 884, "ad2": 884, "vcc": 884, "0x18": 884, "0b0011000": 884, "shortli": [884, 975], "execstart": 884, "36864": 884, "w1_bus_master2": 884, "w1_bus_master3": 884, "w1_bus_master4": 884, "w1_bus_master5": 884, "w1_bus_master6": 884, "w1_bus_master7": 884, "busno": 884, "abtract": 884, "prepackag": 884, "afford": 884, "alarm": [884, 948, 951], "conv_tim": 884, "w1_slave_driv": 884, "eeprom": 884, "ext_pow": 884, "w1_slave": 884, "22750": 884, "crc": 884, "rpi_volt": 884, "isa": 884, "in0": 884, "cpu_therm": 884, "temp1": 884, "w1_slave_temp": 884, "reliabl": 884, "radiou": 884, "disappear": 884, "0c4000000000": 884, "0x28": 884, "dalla": [884, 912], "02131d9920aa": 884, "5d": 884, "011432f138f9": 884, "misbehavior": 884, "instabl": 884, "pump": 884, "nuclear": 884, "plant": 884, "ssh-keygen": [885, 891], "password authent": [885, 891], "key based authent": [885, 891], "remote login": [885, 891], "unencrypt": 885, "rlogin": 885, "telnet": 885, "nsa": 885, "primarili": [885, 978, 1097], "sftp": 885, "portno": 885, "unabl": 885, "propaget": 885, "sha256sum": 886, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 886, "mitm": 891, "uncomfort": 891, "keygen": 891, "safeguard": 891, "unrespons": 892, "port forward": 893, "portforward": 893, "secure copi": [893, 894], "hmmm": 893, "whateer": 893, "mydocu": 894, "recus": 894, "mobil": 894, "bandwidth": 894, "mediat": 894, "descriptiotn": 894, "file system": 895, "network file system": 895, "smb": 895, "crawl": 895, "debianish": 895, "mountpoint": 895, "grant": 895, "idmap": 895, "errnum": 896, "strerror_r": 896, "buflen": 896, "cleanest": 896, "_r": 896, "reentrant": 896, "syscal": 898, "getaddrinfo": 898, "ri": 900, "nbytes_read": [900, 901, 902], "24608": 900, "1024root": 900, "nager": 900, "698nager": 900, "gatewai": 901, "peer": [901, 904], "netinet": 901, "af_inet": 901, "sock_stream": 901, "sockaddr_in": 901, "sin_famili": 901, "sin_port": 901, "inet_aton": 901, "sin_addr": 901, "ipproto_ip": 901, "sa_famili": 901, "inet_addr": 901, "10hallo": 901, "16thi": 901, "ong": 901, "14ong": 901, "timerfd_settim": 902, "itimerspec": [902, 936], "nasti": [903, 936], "ingenu": 904, "smae": 904, "o_append": 904, "o_cloexec": 904, "sigpip": [904, 950], "whenc": 904, "seek_cur": 904, "seek_end": 904, "occupi": [904, 906, 907], "status": 905, "srcfile": 905, "dstfile": 905, "1073741825": 906, "0k": 906, "texttt": 907, "dup2": 907, "oldfd": 907, "newfd": 907, "o_": 907, "bytes_to_writ": [908, 909, 911], "wxr": 908, "o_tmpfil": 908, "speci": 908, "pli": 908, "nread": [910, 916, 919, 942, 945, 949], "thats": [910, 911], "litter": 911, "misspel": 911, "24625": 912, "24562": 912, "pread": 914, "pwrite": 914, "readv": 914, "writev": 914, "uio": 914, "iovec": 914, "iov": 914, "iovcnt": 914, "preadv": 914, "pwritev": 914, "ftruncat": [914, 945, 946], "filedescriptor": 914, "gpio26": [916, 918, 919], "subtre": 918, "fe200000": 918, "gpiochip488": 918, "gpiochip504": 918, "active_low": 918, "fd_set": [919, 942], "exc_fd": 919, "fd_zero": [919, 942], "nreadi": 919, "fd_isset": [919, 942], "eek": 919, "intens": 920, "ppid": 920, "tid": 920, "tsd": 920, "spezif": 920, "_reentrant": 920, "lpthread": [920, 936, 955], "start_routin": 921, "pthread_exit": 921, "pthread_cancel": 921, "pthread_attr_setdetachst": 921, "detachst": 921, "pthread_create_detach": 921, "pthread_detach": 921, "pthread_self": 921, "pthread_equ": 921, "30650": 921, "13961": 921, "correl": 921, "gettid": 921, "pthread_mutexattr_t": [923, 939], "pthread_mutex_destroi": 923, "pthread_mutex_trylock": 923, "global_mutex": 923, "pthread_mutexattr_settyp": 923, "pthread_mutex_norm": 923, "pthread_mutex_errorcheck": 923, "pthread_mutex_recurs": 923, "pthread_mutex_default": 923, "pthread_cond_destroi": 925, "pthread_cond_broadcast": 925, "parlanc": 925, "set_autoreset_ev": 925, "ev": 925, "is_set": 925, "wait_autoreset_ev": 925, "acquiriert": 925, "autoreset": 925, "spuriou": 925, "woken": 925, "pthread_condattr_t": 925, "pthread_cond_initi": 925, "pthread_cond_timedwait": 925, "abstim": 925, "use_glob": 927, "pthread_once_t": 927, "global_onc": 927, "pthread_once_init": 927, "init_glob": 927, "pthread_onc": 927, "once_control": 927, "init_routin": 927, "pthread_key_cr": 927, "__thread": 927, "pthread_atfork": 928, "legales": 928, "lock_rac": 930, "succeed": [930, 1117], "foreground": [931, 984], "huh": 931, "paradox": 931, "setenv": 933, "putenv": 933, "unsetenv": 933, "clearenv": 933, "customvar": 933, "timesl": 934, "starv": 934, "throughput": 934, "sha1": [934, 937, 953], "voluntarili": [934, 937], "lrt": 936, "app_statu": 936, "tick_count": 936, "update_statu": 936, "sigact": [936, 949, 950], "sa_handl": [936, 949, 950], "sigrtmin": 936, "sigev": [936, 946], "sev": 936, "sigev_notifi": 936, "sigev_sign": 936, "sigev_signo": 936, "timer_t": 936, "tspec": 936, "nsec": 936, "timer_settim": 936, "show_statu": 936, "freerto": [936, 939], "syncron": 936, "update_status_func": 936, "initial_t": 936, "interval_t": 936, "show_status_func": 936, "update_task": 936, "show_task": 936, "231765": 936, "225819": 936, "5635": 936, "lwp": 936, "231766": 936, "231767": 936, "tracer": 936, "restart_syscal": 936, "clock_nanosleep": 936, "clock_realtim": 936, "500000000": 936, "033": 936, "7m": 936, "flash_func": 936, "is_revers": 936, "flash_task": 936, "flasher": 936, "indepen": 936, "toggl": 936, "fore": [936, 986], "particularli": 937, "suscept": 937, "renic": 938, "din": 938, "44300": 938, "echtzeitbetrieb": 938, "betrieb": 938, "rechensystem": 938, "verarbeitung": 938, "anfallend": 938, "st\u00e4ndig": 938, "derart": 938, "betriebsbereit": 938, "da\u00df": 938, "verarbeitungsergebniss": 938, "innerhalb": [938, 1147], "vorgegebenen": 938, "zeitspann": 938, "000014": 938, "013914m": 938, "91410827636698u": 938, "000002": [938, 940], "002382m": 938, "3820173632900326u": 938, "intrus": 938, "controversi": 938, "sched_oth": 939, "relinquish": 939, "sched_param": 939, "sched_getschedul": 939, "sched_prior": 939, "pthread_setschedparam": 939, "pthread_getschedparam": 939, "predefini": 939, "pthread_attr_setschedpolici": 939, "spoken": 939, "pthread_mutexattr_setprotocol": 939, "pthread_prio_inherit": 939, "pthread_prio_protect": 939, "risen": 939, "pthread_mutexattr_setprioceil": 939, "000105": 940, "105247m": 940, "24749755859354u": 940, "000015": 940, "014643m": 940, "64260525619006u": 940, "105u": 940, "000067": 940, "067263m": 940, "2626495361326u": 940, "000003": 940, "002883m": 940, "8827592917392217u": 940, "ondemand": 940, "governor": 940, "cpufreq": 940, "scaling_governor": 940, "cpuinfo_cur_freq": 940, "067036m": 940, "03615188598611u": 940, "000001": 940, "001257m": 940, "2571678380193383u": 940, "000065": 940, "065188m": 940, "188407897949u": 940, "002376m": 940, "3758434034066656u": 940, "001042": 940, "042438m": 940, "4375534057617u": 940, "000017": 940, "017123m": 940, "123423079175748u": 940, "000143": 940, "142646m": 940, "6458358764593u": 940, "000005": 940, "004995m": 940, "994855006705264u": 940, "_syse": 942, "exit_failur": 942, "consume_fd": 942, "random_fd": 942, "tty_fd": 942, "nfd": 942, "ttys4": 942, "in_fd": 942, "eof_detect": 942, "shm": [944, 945, 946], "099": 944, "sem": [944, 945, 946], "shared memori": 945, "message queu": 945, "mman": 945, "fstat": 945, "st_size": 945, "map_fail": 945, "shm_open": [945, 946], "tmpf": [945, 946], "resiz": 945, "4095": 945, "weigh": 945, "map_shar": 945, "counter_loc": 945, "sem_t": [945, 946], "sem_open": 945, "sem_fail": 945, "sem_wait": 945, "sem_post": 945, "mq_attr": [945, 946], "mq_maxmsg": [945, 946], "mq_msgsize": [945, 946], "mqd_t": [945, 946], "mq_open": 945, "mq_send": 945, "mq_receiv": 945, "shm_unlink": 946, "overtak": 946, "mq_overview": 946, "oflag": 946, "mq_flag": 946, "mqde": 946, "msg_ptr": 946, "msg_len": 946, "msg_prio": 946, "sevp": 946, "disturb": [946, 949], "elegantli": 946, "qsize": 946, "signo": 946, "notify_pid": 946, "goiven": 946, "sem_overview": 946, "sem_trywait": 946, "sem_timedwait": 946, "abs_timeout": 946, "shm_close": 946, "shm_overview": 946, "035": [948, 949], "051": [948, 949], "segv": [949, 950], "mortem": [949, 1075], "core_pattern": 949, "termination_handl": 949, "sigint": [949, 950], "sig_atomic_t": [949, 950], "term_act": 949, "alarm_handl": 949, "alarm_act": 949, "sigset_t": [949, 951], "termination_sign": 949, "sigemptyset": [949, 950], "sigaddset": [949, 950], "sigquit": 949, "sigprocmask": [949, 950], "sig_block": 949, "impolit": 949, "sig": [949, 950], "consume_pip": 949, "pipenam": 949, "puzzl": 949, "pthread_sigmask": [949, 950], "sigtstp": 950, "sigalrm": [950, 951], "sigchld": 950, "abnorm": 950, "sigabrt": 950, "sigsegv": 950, "sigbu": 950, "sigil": 950, "sigfp": 950, "unblock": 950, "oldset": 950, "sigpend": 950, "sigfillset": 950, "signum": 950, "sigdelset": 950, "sigismemb": 950, "sigsetop": 950, "recept": 950, "sa_mask": 950, "sa_flag": 950, "oldact": 950, "sig_ign": 950, "sig_dfl": 950, "sighandler_t": 950, "_exit": 950, "barebon": 951, "louder": 951, "stallman": 952, "risc": 952, "llvm": 952, "24360": 952, "hello_h": [952, 968, 970], "24416": 952, "linkabl": [952, 1088, 1144], "0000000000401040": 952, "_start": 952, "0000000000401000": 952, "_init": 952, "00000000004011b8": 952, "_fini": 952, "crt": 952, "crt1": 952, "crti": 952, "crtn": 952, "0000000000404000": 952, "_global_offset_table_": 952, "reloc": 952, "1762320": 952, "0000000000401126": 952, "1224008": 952, "greetdemo": 953, "cmake_system_nam": 953, "toolchain_base_dir": [953, 967], "cmake_c_compil": 953, "cmake_cxx_compil": 953, "find_xxx": 953, "cmake_find_root_path_mode_program": 953, "cmake_find_root_path_mode_librari": 953, "cmake_find_root_path_mode_includ": 953, "toolchian": 953, "cmake_toolchain_fil": 953, "libgreet": [953, 954, 960, 969, 970], "13921": [953, 954], "cmakecach": [953, 954], "26192": [953, 954], "27920": [953, 954], "8503": [953, 954], "eabi5": 953, "armhf": 953, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 953, "debug_info": 953, "armv7l": 955, "challeng": 955, "metadistribut": 955, "miniumum": 955, "realiti": 955, "rasberri": 957, "clickabout": 962, "workabl": 964, "tarbal": 964, "lastest": 964, "x86_64_arm": 964, "precompos": 964, "uncompress": 964, "73812": 964, "1107168": 964, "1481768": 964, "1968456": 964, "1091864": 964, "1030432": 964, "1221816": 964, "lynxbe": 966, "y3p9kn7mjei": 966, "cli": 966, "containerd": 966, "dockerhub": 966, "hub": 966, "sh_18_04": 966, "78683068": 966, "1292296": 966, "70mb": 967, "73018472": 967, "auxvec": 967, "bitsperlong": 967, "bpf_perf_ev": 967, "rapidli": 968, "phoni": [968, 969, 970], "origaniz": 969, "relink": 969, "0x2e20": 969, "vdso": 969, "0x00007fffe9fa7000": 969, "0x00007f75ca289000": 969, "0x00007f75ca46d000": 969, "r_x86_64_32": 969, "fpic": 969, "whom": 970, "hello_flex": 970, "hello_flexible_h": 970, "cq": 970, "lisp": 971, "create_f": 971, "create_print": 971, "print_blah": 971, "print_someth": 971, "sytax": 972, "432x288": 972, "shutil": 973, "tarfil": 973, "temporarydirectori": 973, "tmpd": 973, "tarnam": 973, "expandvar": 973, "contrain": 973, "__enter__": 973, "__exit__": 973, "openforread": 973, "ipykernel_212264": 973, "2037535577": 973, "myprint": 973, "orig_print": 973, "exc_val": 973, "exc_tb": 973, "myarg": 973, "total_ord": 974, "ipykernel_212282": 974, "2840657929": 974, "a_vari": 975, "fallback": [975, 995], "baseexceptiongroup": 975, "exceptiongroup": 975, "subtyp": 975, "maybe_fail": 975, "ipykernel_212300": 975, "104829323": 975, "lone": 975, "4008457068": 975, "mysubsystemerror": 975, "reallybaderror": 975, "someothererror": 975, "definitelybad": 975, "evenwors": 975, "collapsingtheworld": 975, "errorcod": 975, "__cached__": 976, "_frozen_importlib_extern": 976, "sourcefileload": 976, "0x7faa84b1d510": 976, "blindli": 976, "ansibl": 976, "matno": 976, "conffil": 976, "confcod": 976, "confdict": 976, "2737": 976, "object ori": [977, 1133], "keyword argu": 977, "starstararg": [977, 998], "for loop": 977, "iterator protocol": 977, "operator overload": 977, "drawn": 978, "cnt": 978, "inputrang": 978, "disgust": 978, "gentli": 978, "smarter": 978, "nolimit": 979, "fibo_numb": 979, "jerki": 979, "max_numb": 979, "satisfactori": 979, "python_1010_generators_yield": 979, "glossari": 980, "ipykernel_212324": 980, "4235178104": 980, "breadth": 980, "coverag": 982, "subnamespac": 983, "mysupermodul": 983, "mysuperfunct": 983, "subpackage1": 983, "module1": 983, "module2": 983, "subpackage2": 983, "disambigu": 983, "increment_background": [984, 986], "background_integ": 984, "foreground_integ": 984, "runn": 984, "backgroundincrement": 984, "uncool": 984, "14784035": 986, "quack": 988, "mockup": 988, "396531845765324": 988, "87541546643573": 988, "99622241138668": 988, "94462910652362": 988, "059800220094004": 988, "__next__": 988, "brokensensor": 988, "ipykernel_212342": 988, "2792400554": 988, "71536506": 988, "152158437": 988, "1134347102": 988, "refect": 989, "ipykernel_212362": 989, "1242235954": 989, "4119786358": 989, "emp": 992, "add_employe": 992, "mgr": 992, "isold": [992, 993, 1093], "haubentauch": [992, 993, 996, 1093], "parentcl": 992, "funnili": 992, "make_child": 993, "parent1": 993, "parent2": 993, "vvv": 993, "father": 993, "vvvvvv": 993, "tabular": 994, "someclass": 994, "persons_from_csv": 994, "person_dict": 994, "operators object oriented program": 995, "behaivor": 995, "number2": 995, "int2": 995, "ipykernel_212452": 995, "3709071117": 995, "151628379": 995, "whistl": [995, 998], "symmetr": [995, 1025], "commut": 995, "452733317": 995, "summar": 995, "ipykernel_212470": 996, "2144392361": 996, "attrnam": 996, "meier": 996, "3124626440": 996, "1226798660": 996, "expicitli": 997, "0x7fbe9a37c820": 997, "toolkit": 999, "marker": 1001, "eighti": 1001, "monti": 1001, "incompat": [1001, 1007, 1015, 1026], "benevol": 1001, "bdfl": [1001, 1085], "overse": 1001, "januari": 1001, "dropbox": 1001, "awk": 1003, "sensit": 1006, "throughout": 1006, "0o01234": 1007, "14159265359": [1007, 1021], "3e12": 1007, "afterthought": 1007, "\u00e4\u00f6\u00fc": 1007, "xa4": 1007, "xb6": 1007, "xbc": 1007, "xe4": 1007, "compel": 1007, "codebas": 1007, "ancient": 1007, "sequencish": 1011, "sixtim": 1011, "seen_sixey": 1011, "blahblahblahblahblah": 1012, "aah": 1013, "a_list": 1013, "a_tupl": 1013, "hlow": 1013, "hlowrd": 1013, "straw": [1014, 1022], "heritag": 1015, "140228428826128": 1016, "140228428826160": 1016, "140228428826384": 1016, "140228118465216": 1016, "140228118672896": 1016, "ipykernel_212546": 1017, "723444260": 1017, "globvar": 1017, "parameterizab": 1018, "ipykernel_212564": 1018, "3939188879": 1018, "3571579993": 1018, "program_exit": 1018, "exitstatu": 1018, "spam": [1020, 1083], "dec": 1020, "x58": 1020, "07d": 1021, "0x": 1021, "5x": 1021, "0x2f": 1021, "4x": 1021, "0x002f": 1021, "5o": 1021, "0o31": 1021, "04d": 1021, "0042": 1021, "05d": 1021, "00042": 1021, "thistl": 1022, "thorn": 1022, "ipykernel_212618": 1022, "677815794": 1022, "annoy": 1022, "sqn": 1023, "defval": 1024, "iterkei": 1024, "keyiter": 1024, "0x7ff2e8753418": 1024, "unord": 1025, "tunabl": 1026, "shoudn": 1026, "0x7fca2c785b70": 1027, "tof": 1027, "outputfilenam": 1028, "argumentpars": 1028, "add_argu": 1028, "parse_arg": 1028, "ou": 1028, "ylabel": [1030, 1081], "xmin": 1030, "xmax": 1030, "ymin": 1030, "ymax": 1030, "twine": 1031, "lotsa": [1031, 1105], "long_descript": 1031, "long_description_content_typ": 1031, "beta": 1031, "osi": 1031, "approv": 1031, "package_dir": 1031, "python_requir": 1031, "install_requir": 1031, "paho": [1031, 1092], "pyproject": 1031, "toml": 1031, "backend": 1031, "build_meta": 1031, "yadda": 1031, "sdist": 1031, "python_course_2022_11_07": 1031, "12549": 1031, "BE": 1031, "mydb": 1032, "hardli": 1033, "femal": 1038, "miracl": [1041, 1058], "previouslin": 1045, "ifi": 1058, "uniqifi": 1059, "sensor_const": 1064, "test_sensor_const": 1064, "ii": [1065, 1067, 1071, 1073, 1084], "user_record": [1066, 1068], "read_csv_head": [1066, 1073], "read_csv_nohead": [1068, 1072, 1073], "csvfilenam": 1070, "test_noheader_person": 1071, "read_noheader_person": 1071, "test_must_not_use_global_variables_as_return_object": 1071, "filename1": 1071, "noheader1": 1071, "filename2": 1071, "noheader2": 1071, "users1": 1071, "users2": 1071, "test_header_person": 1071, "read_header_person": 1071, "test_user_json_person": 1071, "userdb_json": [1071, 1072], "test_person_to_json": 1071, "joerg_sent": 1071, "to_json_person": 1071, "joerg_receiv": 1071, "from_json_person": 1071, "envis": [1072, 1131], "user_json": 1072, "to_json": 1072, "test_user_json": 1072, "test_user_to_json": 1072, "user_s": 1072, "json_user_s": 1072, "from_json": 1072, "test_nohead": 1073, "test_head": 1073, "lectur": [1075, 1145], "unsupervis": [1078, 1083], "conveyor": 1078, "belt": 1078, "linear_regress": [1079, 1082], "model_select": [1079, 1081], "train_test_split": [1079, 1081], "linear_model": [1079, 1081], "linearregress": [1079, 1081], "history_data": [1079, 1080, 1081, 1082], "inputfeatur": [1079, 1081], "outputfeatur": [1079, 1081], "input_train": [1079, 1081], "input_test": [1079, 1081], "output_train": [1079, 1081], "output_test": [1079, 1081], "test_siz": [1079, 1081], "output_predict": [1079, 1081], "visualcross": 1080, "york": [1080, 1081], "wind": [1080, 1081], "chill": [1080, 1081], "precipit": [1080, 1081], "snow": [1080, 1081], "gust": [1080, 1081], "humid": [1080, 1081], "rain": 1080, "cloudi": 1080, "995833": 1081, "688889": 1081, "287500": 1081, "327273": 1081, "012222": 1081, "690278": 1081, "470769": 1081, "369444": 1081, "513421": 1081, "946106": 1081, "574023": 1081, "313256": 1081, "994536": 1081, "070695": 1081, "025980": 1081, "302423": 1081, "214825": 1081, "665492": 1081, "900000": 1081, "700000": 1081, "090000": 1081, "050000": 1081, "377500": 1081, "750000": 1081, "950000": 1081, "650000": 1081, "330000": 1081, "325000": 1081, "850000": 1081, "425000": 1081, "825000": 1081, "715000": 1081, "470000": 1081, "970000": 1081, "multidimension": 1081, "xlabel": 1081, "coef_": 1081, "80189231": 1081, "intercept_": 1081, "95355086": 1081, "609608": 1081, "571879": 1081, "736988": 1081, "170933": 1081, "798254": 1081, "189739": 1081, "180394": 1081, "449230": 1081, "661530": 1081, "057745": 1081, "850176": 1081, "284120": 1081, "685067": 1081, "weather": [1082, 1083], "ndarrai": [1082, 1098], "splice": [1082, 1083], "cute": 1082, "paper": 1082, "aspir": [1082, 1110], "dilig": 1083, "bite": 1083, "forecast": 1083, "agi": 1083, "asi": 1083, "forest": 1083, "predictor": 1083, "accuraci": 1083, "classif": 1083, "unlabel": 1083, "reinforc": 1083, "reward": 1083, "bay": 1083, "sepp": 1084, "tupleunpack": 1084, "spell": 1084, "redundantli": 1084, "quotechar": 1084, "spreadsheet": 1084, "odbc": 1085, "mysql": 1085, "informix": 1085, "berkeleydb": 1085, "mongodb": 1085, "rollback": 1085, "initd": 1087, "psycopg": 1087, "libpq": 1087, "conninfo": 1087, "psycopg2": 1087, "schwammerldb": 1087, "android": 1088, "schwammerln": 1088, "giftig": 1088, "geniessbar": 1088, "dbm": 1088, "steinpilz": 1088, "roehren": 1088, "speisetaeubl": 1088, "lamellen": 1088, "speitaeubl": 1088, "eierschwammerl": 1088, "teufelsroehrl": 1088, "overcod": 1089, "512119": 1089, "european": 1089, "steroid": 1089, "htmlhelp": 1089, "charset": 1089, "latin1": 1089, "chines": 1089, "enc": 1089, "0xfc": 1089, "0xdf": 1089, "0xf6": 1089, "\u00df": 1089, "cyril": 1089, "received_enc": 1089, "lg_enc": 1089, "bye_enc": 1089, "artificial intellig": 1090, "postgr": 1090, "mssql": 1090, "data sci": 1090, "ecosystem": 1090, "antp": 1092, "53767": 1092, "tcp6": 1092, "mosquitto_pub": 1092, "easiest": 1092, "message_receiv": 1092, "userdata": 1092, "on_messag": 1092, "loop_forev": 1092, "mosqitto_pub": 1092, "styrian": 1092, "esp": 1092, "666608091972": 1093, "ignore_index": 1093, "new_person": 1093, "saskia": 1093, "456710042003": 1093, "irrevers": 1094, "ipykernel_213036": 1097, "3315724720": 1097, "maybe_cal": [1097, 1098], "apply_if_cal": [1097, 1098], "_getitem_axi": [1097, 1098], "_is_scalar_access": [1097, 1098], "1519": 1097, "_validate_integ": 1097, "1521": 1097, "_ix": 1097, "len_axi": 1097, "_get_axi": 1097, "1451": 1097, "1453": 1097, "rangeindex": 1098, "get_loc": 1098, "toler": 1098, "3621": 1098, "casted_kei": 1098, "_lib": 1098, "pyx": 1098, "indexengin": 1098, "hashtable_class_help": 1098, "pxi": 1098, "pyobjecthasht": 1098, "get_item": 1098, "ipykernel_213061": 1098, "1471010945": 1098, "thru": 1098, "1201": 1098, "_validate_kei": 1098, "_get_label": 1098, "1203": 1098, "_get_slice_axi": 1098, "slice_obj": 1098, "1151": 1098, "5667": 1098, "1153": 1098, "1155": 1098, "_handle_lowerdim_multi_index_axis0": 1098, "tup": 1098, "drop_level": 1098, "new_index": 1098, "3875": 1098, "3877": 1098, "3623": 1098, "3625": 1098, "listlik": 1098, "_check_indexing_error": 1098, "sort_index": 1098, "multiindex": 1098, "contrari": 1099, "lower_email": 1100, "rentner": 1100, "is_palindrom": 1100, "facto": [1101, 1126], "subel": 1101, "attrib": 1101, "getroot": 1101, "examtop": 1103, "package manag": 1104, "project manag": [1104, 1132], "unit test": 1104, "virtual environ": 1104, "affin": 1104, "witch": 1105, "gnore": 1105, "ackup": 1105, "bort": 1105, "cert": 1105, "pem": 1105, "pythonhost": 1105, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1105, "cp38": 1105, "manylinux2010_x86_64": 1105, "ext": 1105, "argcomplet": 1105, "asn1crypto": 1105, "ensurepip": [1106, 1112], "test_project": 1110, "test_soup": 1110, "test_task": 1110, "stringent": 1110, "discoveri": 1110, "syndrom": [1110, 1111, 1117], "test_person_point": 1110, "deselect": 1110, "tweak": 1110, "test_": 1110, "test_simpl": 1110, "test_trivi": 1110, "test_trivial_but_fail": 1110, "___________________________": 1110, "____________________________": 1110, "test_stat": 1110, "implementation_point": 1110, "implementor1": 1110, "implementor2": 1110, "documentation_point": 1110, "integration_point": 1110, "implementation_perc": 1110, "documentation_perc": 1110, "integration_perc": 1110, "total_perc": 1110, "total_point": 1110, "gathered_point": 1110, "test_another_task_aspect": 1110, "pathlib": 1110, "test_ini_file_pars": 1110, "my_test_fil": 1110, "mytestcas": 1111, "runtest": 1111, "assertequ": 1111, "texttestrunn": 1111, "__db": 1111, "create_databas": 1111, "fill_test_data": 1111, "remove_databas": 1111, "testfeature1": 1111, "testfeature2": 1111, "testsuit": 1111, "addtest": 1111, "testload": 1111, "loadtestsfromtestcas": 1111, "testsometh": 1111, "failif": 1111, "failunless": 1111, "failunlessequ": 1111, "failifequ": 1111, "failunlessalmostequ": 1111, "failunlessrais": 1111, "env_dir": 1112, "my_venv": 1112, "csh": 1112, "easy_instal": 1112, "pip3": 1112, "powershel": 1112, "joblib": 1112, "threadpoolctl": 1112, "deactiv": 1112, "my_recreated_venv": 1112, "persuad": 1112, "will_fail": [1116, 1119], "initgoogletest": [1117, 1122], "run_all_test": [1117, 1122], "lgtest": [1117, 1119], "onesuit": 1117, "test1": 1117, "test2": 1117, "anothersuit": 1117, "postive_pattern": 1117, "negative_pattern": 1117, "gtest_list_test": 1117, "faildemo": 1117, "failisfat": 1117, "assertdemo": 1117, "assertisfat": 1117, "expect_": 1117, "expectdemo": 1117, "expectisnonfat": 1117, "expect_tru": 1117, "0x58": 1117, "0x55": 1117, "assert_": 1118, "repoqueri": 1119, "dpkg": 1119, "listfil": 1119, "joergfaschingbau": 1119, "cmake_compiler_is_gnucc": 1119, "predef": [1121, 1122], "predefinedtestenviron": 1122, "paranoidtest": 1122, "untechn": 1122, "thefixtur": 1122, "testthatmodifiesst": 1122, "complexfixtur": 1122, "first_n": 1122, "sometest": 1122, "egal": 1124, "welcher": 1124, "schulungstyp": 1124, "problemlo": 1124, "verifiziert": 1124, "formlos": 1124, "anliegen": 1124, "umgehend": 1124, "setzen": 1124, "besprechen": 1124, "gestaltung": 1124, "schl\u00fcssigkeit": 1124, "chronologisch": 1124, "gehaltenen": 1124, "querzulesen": 1124, "roter": 1124, "faden": 1124, "ablaufen": 1124, "\u00e4nderungen": 1124, "kursgeschehen": 1124, "passieren": 1124, "detailliert": 1124, "kosten": 1124, "terminen": 1124, "inhouseschulungen": 1124, "buchenden": 1124, "terminisiert": 1124, "zustandekommt": 1124, "zeitlich": 1124, "\u00f6rtlich": 1124, "flexibel": [1124, 1125], "zul\u00e4sst": 1124, "besond": 1124, "onlineschulungen": 1124, "erwiesen": 1124, "dedizierten": 1124, "implementieren": [1124, 1129], "instruktionen": [1124, 1128], "datenschutzrichtlinien": 1124, "genug": 1124, "durchweg": 1124, "wahlweis": 1124, "offenen": 1124, "anmelden": 1124, "inhouseschulung": 1124, "exklusiv": 1124, "\u00fcblicherweis": 1124, "firmenstandort": 1124, "basteln": [1124, 1141], "schwierig": 1124, "z\u00fcgig": 1125, "uhr": 1125, "punktlandung": 1125, "mbr": 1125, "bootet": 1125, "nachs\u00e4tz": 1125, "wahllos": 1125, "reinen": [1125, 1141], "gebastelt": 1125, "leichtfertigerweis": 1125, "richtigerweis": 1125, "multilib": 1125, "ausgestattet": [1125, 1134, 1141, 1148], "l\u00e4uft": 1125, "seltsamerweis": 1125, "dar\u00fcber": 1125, "zeitersparnisgr\u00fcnden": 1125, "hinweggeholfen": 1125, "vorcompilierten": 1125, "statisch": [1125, 1143], "gelinkten": 1125, "christof": 1125, "sourcen": 1125, "crosszucompilieren": 1125, "gescheitert": 1125, "ungl\u00fccklichen": 1125, "umstand": 1125, "schulungsrechn": 1125, "neu": 1125, "aufzusetzen": 1125, "kompil": 1125, "verschwunden": 1125, "buildscript": 1125, "konnt": 1125, "kreativen": 1125, "wiederhergestellt": 1125, "v\u00f6llig": 1125, "sinnfrei": 1125, "distributionen": 1125, "compilieren": [1125, 1127], "architekturen": 1125, "versucht": [1125, 1126, 1128], "richtigen": 1125, "leben": [1125, 1141], "anzuwenden": 1125, "leut": 1125, "anzusehen": 1125, "wort": [1125, 1127], "gefallen": 1125, "hart": 1125, "garantien": 1125, "durchau": 1125, "gerechtfertigt": 1125, "gesch\u00fctz": 1125, "auffahren": 1125, "enthaltenen": 1125, "n\u00fctzen": 1125, "stichwort": [1125, 1134, 1141], "mittelweg": 1125, "diffundieren": 1125, "aufruft": 1125, "startet": 1125, "ausgekl\u00fcgelt": 1125, "funktionsweis": 1125, "jeher": 1125, "kennt": [1125, 1147], "gewaltig": 1125, "geschichtsbelastet": 1125, "tr\u00e4gt": 1125, "intelligent": [1125, 1134, 1141], "trotz": 1125, "behauptungen": 1125, "gar": 1125, "lieblingsseit": 1125, "linuxthemen": 1125, "zentrisch": 1125, "bourne shel": [1126, 1136], "\u00fcbel": 1126, "sprechen": [1126, 1134, 1141], "vollst\u00e4ndig": 1126, "shellprogrammierung": 1126, "ruf": 1126, "schmutzigen": 1126, "stattdessen": 1126, "hauch": 1126, "pervers": 1126, "\u00e4sthetik": 1126, "verpassen": 1126, "geschicht": 1126, "kram": 1126, "environmentvariablen": 1126, "kontrollkonstrukt": [1126, 1127], "hauptteil": 1126, "stringmanipul": 1126, "obskur": 1126, "konstrukt": [1126, 1136], "auskommt": 1126, "umgang": [1126, 1136], "vorausgesetzt": [1126, 1128, 1129, 1137, 1143, 1144, 1146, 1147], "bibel": 1127, "hinzuf\u00fcgen": 1127, "erfind": 1127, "tickt": 1127, "wozu": 1127, "grenzen": 1127, "vorlag": 1127, "didaktik": 1127, "erg\u00e4nzt": 1127, "kontext": 1127, "heutigen": 1127, "dienen": 1127, "sprachkern": 1127, "unterrichten": 1127, "standardlibrari": 1127, "zugunsten": 1127, "bequemeren": 1127, "verzichten": 1127, "sprachdesign": 1127, "geachtet": 1127, "isoliert": 1127, "abseit": [1127, 1129, 1147], "mitbringt": 1127, "h\u00e4lt": 1127, "eignet": 1127, "hervorragend": [1127, 1134, 1142, 1147], "systemprogrammierung": 1127, "weglassen": 1127, "programmiert": [1127, 1129], "dementsprechend": [1127, 1147], "sinngem\u00e4ss": 1127, "aufgeteilt": 1127, "manipulieren": [1127, 1136], "maschineninstruktionen": 1127, "ausgef\u00fchrt": [1127, 1128], "geschwindigkeitsvorteil": 1127, "interpretierten": 1127, "nachteil": 1127, "verst\u00e4ndni": [1127, 1136, 1146], "speicherverwaltung": [1127, 1129, 1144], "integral": 1127, "zusammengesetzt": 1127, "speicherlayout": 1127, "wenigst": 1127, "worin": 1127, "programmstrukturierung": 1127, "deklar": 1127, "beliebtest": 1127, "unmeng": 1127, "flexibilit\u00e4t": [1127, 1144], "einbringen": 1127, "unbeliebtest": 1127, "fehlerm\u00f6glichkeiten": 1127, "verkettet": 1127, "fehlerszenarien": [1127, 1147], "absturz": 1127, "dahinsiechen": 1127, "debugginghilfen": 1127, "typumwandlungen": 1127, "hauptkritikpunkt": 1127, "sorglos": 1127, "integertypen": 1127, "breit": [1127, 1134], "regelwerk": 1127, "historisch": 1127, "aufarbeitung": 1127, "historischem": 1127, "ballast": 1127, "compileroptionen": 1127, "pr\u00e4prozessor": [1127, 1128], "leid": 1127, "grundz\u00fcgen": 1127, "gezeigt": [1127, 1136, 1141], "compilierung": 1127, "heutzutag": 1127, "wegzudenken": [1127, 1134], "damal": [1127, 1129], "programmen": [1127, 1128, 1143], "separat": 1127, "verbinden": 1127, "spielt": 1127, "archivieren": 1127, "linken": 1127, "programmgesundheit": 1127, "bedeutungen": 1127, "optimierungsm\u00f6glichkeiten": 1127, "memoryfehlern": 1127, "verwalten": 1127, "formatiert": 1127, "_und_": 1127, "komfort": 1127, "m\u00e4chtige": [1127, 1144], "jedoch": [1127, 1134, 1141, 1147], "weit": 1127, "fehlerimmunit\u00e4t": 1127, "allein": 1127, "verdienen": 1127, "erw\u00e4hnung": 1127, "stringbearbeitung": 1127, "heutig": 1127, "eigenwillig": 1127, "f\u00fclle": 1127, "erleichtern": 1127, "lauern": [1127, 1146], "gefahren": [1127, 1146, 1147], "sprachumfang": 1128, "angeht": 1128, "compiliert": 1128, "maschinencod": 1128, "pointern": 1128, "sofort": 1128, "beipflichten": 1128, "einmal": [1128, 1143, 1144, 1148], "beinharten": 1128, "typenkonvertierungen": 1128, "aufgesessen": 1128, "beleuchtet": [1128, 1146], "beschrittenen": 1128, "dunklen": 1128, "ecken": 1128, "widmet": 1128, "intensiv": 1128, "fehlersuch": 1128, "erkl\u00e4rungen": 1128, "sprachdefinit": 1128, "greifbar": 1128, "verdacht": 1128, "manch": 1128, "typkonversionen": 1128, "l\u00fccken": 1128, "typensystem": [1128, 1129], "techniken": [1128, 1134], "typensicherheit": 1128, "dunkl": 1128, "unn\u00f6tig": 1128, "programmhygien": 1128, "wege": 1128, "sauberen": 1128, "weisen": 1128, "optimierungstechniken": 1128, "anwenden": 1128, "optimierung": 1128, "erschweren": 1128, "lesbarkeit": 1128, "memoryzugriff": 1128, "ur": 1128, "beziehungsweis": 1128, "hardwareunterst\u00fctzung": 1128, "Ins": 1128, "kenntniss": [1128, 1129, 1137, 1143, 1144, 1146, 1147], "urspr\u00fcnglich": 1129, "erfunden": 1129, "leichter": 1129, "handhabbar": 1129, "erm\u00f6glichen": [1129, 1144], "ressourcenverwaltung": 1129, "kontrolliert": 1129, "mainstream": 1129, "einzug": 1129, "hie\u00df": 1129, "treffend": 1129, "seitdem": 1129, "vereinzelt": 1129, "soviel": 1129, "dampflokomot": 1129, "stellt": [1129, 1147], "vielfalt": 1129, "sprachkonstrukt": 1129, "genial": 1129, "gewagt": 1129, "behaupten": 1129, "anbelangt": 1129, "sprachmittel": 1129, "wichtigst": 1129, "n\u00e4mlich": 1129, "reichlich": [1129, 1134, 1141], "umstieg": 1129, "erw\u00e4gen": 1129, "embeddedbetriebssystem": 1129, "einsetzen": 1129, "vielerort": 1129, "m\u00f6glich": [1129, 1134], "datenkapselung": 1129, "objekten": 1129, "fallstrick": 1129, "korrektheit": 1129, "100ste": 1129, "strukturiert": 1129, "fehlerbehandlung": 1129, "generisch": 1129, "mechanismen": [1129, 1144, 1146, 1148], "mehrfachvererbung": 1129, "teilweis": 1129, "kapiteln": 1129, "unterschied": 1129, "erl\u00e4utert": [1129, 1134], "c++ 11": 1130, "enjoy": 1130, "overrrid": 1130, "coolest": 1130, "optinion": 1130, "oneshot": 1130, "communict": 1130, "unlearn": 1130, "inventor": 1131, "weren": 1132, "intricaci": 1132, "interdepend": 1132, "rudimentari": 1132, "graviti": 1133, "vocabulari": 1133, "confront": 1133, "reusab": 1133, "nicknam": 1133, "zentrum": [1134, 1141], "vollwertig": 1134, "selben": 1134, "betriessystemkonzept": 1134, "jahrzehnten": 1134, "bew\u00e4hrt": 1134, "automot": 1134, "sektor": 1134, "vertreten": 1134, "altbew\u00e4hrten": 1134, "konsequ": [1134, 1144], "ausbaut": 1134, "hardwareschnittstellen": 1134, "echtzeitf\u00e4higkeit": 1134, "dahint": 1134, "rundet": 1134, "hardwarebastelworkshop": 1134, "embeddedprogrammier": [1134, 1141], "l\u00e4nger": [1134, 1141], "normalen": [1134, 1141], "dateisystem": [1134, 1141], "versagt": [1134, 1141], "teuer": [1134, 1141], "erkauft": [1134, 1141], "elektronik": [1134, 1141], "testen": [1134, 1141, 1148], "hostsoftwar": [1134, 1141], "architekten": [1134, 1141], "plattformzusammensetzung": [1134, 1141], "entscheiden": [1134, 1141, 1148], "rechtfertigen": [1134, 1141], "logik": [1134, 1141], "steck": [1134, 1141], "beantworten": [1134, 1141, 1148], "eingeladen": [1134, 1141], "l\u00f6tmateri": [1134, 1141], "mitzubringen": [1134, 1141], "bastelei": 1134, "erfolgt": 1134, "vorhandenen": [1134, 1141, 1148], "minicomputern": 1134, "prototypen": 1134, "desktopbetriebssystem": [1134, 1141], "verh\u00e4ltniss": [1134, 1141], "512mb": [1134, 1141], "m\u00fchsam": [1134, 1141], "produktivsystem": [1134, 1141], "ohnehin": [1134, 1141], "unangebracht": [1134, 1141], "anf\u00e4ng": [1134, 1141], "filesystemen": [1134, 1141], "durchzuf\u00fchren": 1134, "filedeskriptoren": [1134, 1136], "getrennt": 1134, "abl\u00e4uf": 1134, "adressraum": 1134, "sorgfalt": 1134, "bloss": 1134, "gef\u00e4chert": 1134, "gewissen": 1134, "szenarien": 1134, "steuerungen": 1134, "gef\u00e4hrlich": 1134, "umfangreich": 1134, "hauptthema": 1134, "dennoch": 1134, "n\u00fctzlich": 1134, "haub": 1134, "schalten": [1134, 1141], "ausg\u00e4ngen": [1134, 1141], "abfragen": [1134, 1141], "eing\u00e4ngen": [1134, 1141], "sowohl": [1134, 1141], "dumm": [1134, 1141], "ereignisgesteuert": [1134, 1141], "mikrocontrollern": [1134, 1141], "aufgaben": [1134, 1141], "temperaturmessung": [1134, 1141], "expandierung": [1134, 1141], "ausgelagert": [1134, 1141, 1144], "dediziert": [1134, 1141], "angesteuert": [1134, 1141], "gegeben": [1134, 1141, 1143, 1144], "driverframework": 1134, "netzwerkstack": [1134, 1141], "einpasst": [1134, 1141], "schnittstellen": [1134, 1144], "implementationssprachen": 1134, "hardwareerfahrung": [1134, 1141], "linux kernel": 1135, "kernel driv": [1135, 1145], "wait queu": 1135, "block devic": 1135, "interrupt handl": 1135, "dose": 1135, "curios": 1135, "userpac": 1135, "massiv": 1135, "vital": 1135, "einblick": 1136, "gingen": 1136, "vieler": 1136, "demosess": 1136, "vertrackt": 1136, "entmystifiziert": 1136, "gef\u00fcrchteten": 1136, "erlernt": 1136, "inbetriebsetz": 1136, "hardwareingenieur": 1136, "angehend": 1136, "administratoren": 1136, "editieren": 1136, "bl\u00e4ttern": 1136, "textdateien": 1136, "schnittstel": 1136, "kombinationen": 1136, "kombin": 1136, "abschweifen": 1136, "programmierkenntniss": 1136, "zwingend": [1136, 1143], "make gnu": 1137, "gnu mak": 1137, "build manag": 1137, "seiner": [1137, 1144, 1148], "m\u00e4chtigen": 1137, "daran": 1137, "wendet": 1137, "interessiert": 1137, "gr\u00f6\u00dfere": 1137, "gebaut": 1137, "komplizierten": 1137, "griff": 1137, "regeln": 1137, "selbstdefiniert": 1137, "gewiss": [1137, 1142, 1144], "fertigkeit": 1137, "hemmenhofen": 1141, "gleichnamigen": 1141, "gerufen": 1141, "produktivem": 1141, "n\u00e4herzubringen": 1141, "spielekonsumenten": 1141, "kinder": 1141, "enden": 1141, "erstem": 1141, "breiteren": 1141, "drauf": 1141, "vorhandensein": 1141, "basisinfrastruktur": 1141, "vielem": 1141, "hervorragenden": 1141, "gestandenen": 1141, "obwohl": [1141, 1144], "sprachunabh\u00e4ngig": 1141, "brauchen": 1141, "computerspielen": 1141, "spielerischen": 1141, "f\u00fchren": 1141, "w\u00e4hlt": 1141, "lm": 1141, "netzwerkprotokol": [1141, 1147], "behaupt": 1142, "allen": 1142, "gro\u00dfkopferten": 1142, "kommerziellen": 1142, "systemen": 1142, "perforc": 1142, "etabliert": 1142, "erh\u00e4ltlich": 1142, "nachfolg": 1142, "abgel\u00f6st": 1142, "prim\u00e4r": 1142, "publikum": 1142, "sekund\u00e4r": 1142, "versionieren": 1142, "arbeitsweis": 1142, "bereinigung": 1142, "strategien": 1142, "programmierern": 1142, "vertrautheit": 1142, "vorteil": [1142, 1143], "umsteig": 1143, "\u00e4rgerni": 1143, "schl\u00e4gt": 1143, "ausgekl\u00fcgeltst": 1143, "systemcal": [1143, 1144, 1147], "sogenannt": 1143, "inspizieren": 1143, "grundprinzip": [1143, 1147], "sammlung": [1143, 1144], "ausf\u00fchrbar": 1143, "bedient": 1143, "handhabung": 1143, "gew\u00f6hnungsbed\u00fcrftig": 1143, "filedescriptoren": 1143, "lowlevel": 1143, "tiefen": 1144, "steigen": 1144, "alltagsprogrammier": 1144, "normalerweis": 1144, "verborgen": 1144, "hochperformant": 1144, "anwendungen": 1144, "modernen": [1144, 1146], "bertriebssystemen": 1144, "sogenanntem": 1144, "virtuellen": 1144, "speicherbereich": 1144, "instanzen": 1144, "desselben": 1144, "hauptspeich": 1144, "speicherzugriff": 1144, "schutzmechanismen": 1144, "miteinand": 1144, "kommunizieren": [1144, 1147], "semaphoren": 1144, "steinalt": 1144, "\u00fcberlebt": 1144, "keinesweg": 1144, "fehlerfrei": 1144, "benutzen": 1144, "verpasst": 1144, "beruht": 1144, "ladbar": 1144, "ressourcenschonung": 1144, "wasserdichten": 1144, "upgradepfad": 1144, "grundkenntni": [1144, 1146, 1147], "memory manag": 1145, "tcp-ip": 1145, "unverst\u00e4ndlich": 1146, "ungeachtet": 1146, "effizient": 1146, "propagiert": 1146, "soliden": 1146, "unbedacht": 1146, "handeln": 1146, "lebenszyklu": 1146, "gestartet": 1146, "versuchung": 1146, "gewalt": 1146, "terminieren": 1146, "konsequenzen": 1146, "joinabl": 1146, "detach": 1146, "eigenschaften": 1146, "racecondit": 1146, "vermeidung": 1146, "\u00fcberal": 1146, "vermutet": 1146, "integeroperationen": 1146, "kommunikationsmechanismen": 1146, "werkzeugkasten": 1146, "kommunikationskan\u00e4l": 1146, "niemal": 1146, "reihen": 1146, "traditionellen": 1146, "aufgenommen": 1146, "codebasi": 1146, "verzweigt": 1146, "ansehnlich": 1146, "realtimef\u00e4higkeiten": 1146, "priorit\u00e4ten": 1146, "f\u00fcgt": 1147, "benutzend": 1147, "programmierparadigma": 1147, "dar": 1147, "beschr\u00e4nkt": 1147, "streamverbindungen": 1147, "verbindungsaufnahm": 1147, "datagramm": 1147, "verbindungslos": 1147, "adressfamilien": 1147, "auffassung": 1147, "adress": 1147, "endpoint": 1147, "nummern": 1147, "adressen": 1147, "verbindungen": 1147, "hilfsfunktionen": 1147, "adresskonvertierung": 1147, "ipv6": 1147, "\u00e4quivalent": 1147, "ungleich": 1147, "ressourcenschonend": 1147, "pfadnamen": 1147, "bedienbar": 1147, "mittlerweis": 1147, "eingepasst": 1147, "angenehm": 1147, "umzugehen": 1147, "widmen": 1147, "verbundenen": 1147, "auszusetzen": 1147, "reagiert": 1147, "gelesen": 1147, "eventgetrieben": 1147, "knopfdruck": 1148, "abnimmt": 1148, "zahlreichen": 1148, "abgeklopft": 1148, "angst": 1148, "kaputtmachen": 1148, "konstruktiv": 1148, "einfachheit": 1148, "klarzumachen": 1148, "umzusetzen": 1148, "anstatt": 1148, "auszustatten": 1148, "gedanken": 1148, "erkannt": 1148, "entscheidung": 1148, "verbockt": 1148, "softwareentwickl": 1148, "jedwed": 1148, "stabilen": 1148, "abliefern": 1148, "entscheidungstr\u00e4g": 1148, "vorgesetzt": 1148, "schl\u00fcssige": 1148, "kan\u00e4l": 1148, "etablieren": 1148, "unittestframework": 1148, "tragen": 1148, "schwerf\u00e4llig": 1148, "halben": 1148, "\u00fcbrige": 1148, "zurechtzufinden": 1148, "vortragend": 1148, "aufgrund": 1148, "aufwarten": 1148, "beibringen": 1148, "\u00fcppigen": 1148, "verbergen": 1148, "pr\u00e4ferierten": 1148, "vortragenden": 1148}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 838], "googl": 0, "map": [0, 7, 191, 196, 199, 202, 205, 221, 231, 295, 317, 513, 514, 542, 603, 604, 695, 696, 749, 895], "streetview": 0, "curriculum": [1, 73, 74], "vita": 1, "\u00fcber": [2, 176, 186, 191, 199, 207], "mich": [2, 193], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 140], "angebot": 5, "In": [5, 32, 45, 65, 112, 148, 150, 151, 153, 183, 186, 247, 248, 250, 269, 271, 294, 303, 340, 431, 433, 439, 440, 501, 506, 508, 549, 553, 564, 565, 566, 567, 568, 569, 594, 651, 655, 659, 689, 690, 696, 709, 756, 805, 806, 813, 869, 919, 952, 954, 968, 975, 1016, 1130], "hous": 5, "schulungen": [5, 1124], "zu": [5, 23, 169, 186], "meiner": 5, "person": [5, 244, 460, 659], "schwerpunk": 5, "c": [5, 7, 67, 68, 69, 70, 71, 97, 107, 108, 110, 111, 114, 140, 154, 169, 170, 186, 196, 204, 205, 221, 246, 247, 248, 250, 251, 259, 268, 270, 303, 304, 305, 325, 331, 340, 349, 389, 390, 427, 434, 439, 446, 453, 495, 501, 512, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 557, 558, 562, 563, 564, 576, 582, 584, 629, 644, 646, 647, 648, 651, 652, 684, 685, 689, 696, 697, 705, 714, 719, 730, 878, 898, 916, 919, 1021, 1127, 1128, 1129, 1130, 1131, 1133], "python": [5, 8, 11, 59, 60, 62, 63, 90, 95, 136, 163, 166, 175, 176, 178, 179, 180, 182, 184, 186, 189, 191, 194, 200, 201, 203, 206, 208, 210, 213, 214, 215, 216, 217, 219, 220, 222, 225, 226, 229, 232, 234, 237, 239, 240, 241, 242, 243, 245, 247, 248, 250, 252, 253, 254, 255, 256, 257, 262, 264, 265, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 306, 322, 325, 327, 340, 647, 675, 689, 696, 878, 880, 977, 980, 984, 999, 1000, 1001, 1003, 1005, 1007, 1015, 1026, 1029, 1074, 1075, 1076, 1089, 1090, 1092, 1102, 1104, 1105, 1106, 1107, 1138, 1139], "linux": [5, 79, 80, 81, 97, 110, 111, 114, 143, 148, 156, 158, 159, 161, 168, 183, 185, 190, 195, 249, 258, 259, 279, 280, 325, 327, 340, 342, 755, 807, 808, 811, 817, 874, 876, 880, 881, 882, 884, 897, 915, 938, 1125, 1135, 1136, 1143, 1144, 1145, 1146, 1147], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 60, 62, 63, 78, 136, 138, 159, 195, 204, 248, 250, 258, 287, 290, 324, 430, 1075, 1132, 1135], "materi": [6, 24, 28, 30, 166, 168, 183, 204, 321, 336, 337, 341, 430, 1074, 1075, 1096], "einleitung": [7, 196], "datatyp": [7, 186, 191, 193, 196, 199, 208, 212, 215, 218, 223, 225, 231, 235, 238, 240, 241, 253, 255, 256, 262, 263, 265, 273, 275, 276, 277, 281, 282, 283, 293, 295, 297, 317, 345, 395, 398, 978, 1007, 1008, 1012], "number": [7, 196, 199, 202, 223, 235, 238, 317, 675, 734, 741, 742, 905, 979, 995, 998, 1007, 1015, 1016, 1037, 1040, 1050, 1051, 1093, 1097, 1098, 1122], "integ": [7, 176, 186, 191, 196, 199, 223, 225, 235, 238, 244, 256, 263, 283, 295, 317, 363, 410, 415, 631, 986, 1007, 1016], "string": [7, 162, 163, 169, 176, 186, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 240, 241, 244, 253, 256, 260, 263, 277, 283, 295, 314, 316, 317, 344, 357, 358, 364, 370, 434, 612, 613, 614, 627, 658, 659, 1007, 1020, 1021, 1022, 1057, 1100, 1103], "compound": [7, 186, 196, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 273, 277, 283, 295, 398, 1008], "list": [7, 11, 23, 162, 163, 176, 186, 193, 196, 199, 202, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 403, 434, 501, 525, 542, 556, 599, 647, 660, 697, 739, 766, 767, 768, 790, 860, 972, 975, 978, 979, 988, 1008, 1016, 1023, 1052, 1053, 1103, 1105], "arrai": [7, 164, 186, 196, 344, 353, 357, 395, 397, 407, 420, 530, 582, 584, 592, 636, 651, 662, 701], "javascript": [7, 196, 235], "std": [7, 107, 196, 205, 221, 247, 248, 250, 303, 449, 508, 513, 514, 524, 542, 565, 566, 567, 568, 569, 577, 583, 584, 585, 586, 596, 603, 604, 614, 627, 640, 643, 647, 650, 652, 659, 695, 696, 697, 701, 703, 706, 707, 708, 710, 711, 716, 717, 718, 719, 721, 722, 723, 726, 729], "vector": [7, 107, 196, 508, 524, 542, 549, 565, 583, 584, 585, 586, 600, 643, 652, 697, 931], "java": [7, 196], "dictionari": [7, 162, 176, 186, 191, 193, 196, 199, 207, 208, 212, 215, 218, 223, 225, 228, 231, 235, 238, 241, 244, 253, 256, 263, 273, 277, 283, 295, 317, 972, 976, 989, 1008, 1024, 1044, 1071], "kei": [7, 153, 196, 244, 317, 606, 607, 838, 889, 891], "valu": [7, 63, 181, 196, 267, 268, 317, 355, 411, 568, 916, 938, 1009], "set": [7, 38, 63, 181, 186, 191, 196, 199, 207, 208, 212, 215, 218, 223, 225, 231, 235, 238, 241, 253, 256, 263, 273, 277, 283, 295, 834, 835, 950, 972, 1008, 1025, 1063, 1088, 1098], "mathematisch": [7, 196], "mengen": [7, 186, 196], "while": [7, 163, 176, 186, 196, 215, 223, 225, 228, 231, 238, 241, 263, 380, 381, 776, 781, 782, 1011, 1037, 1061], "function": [7, 43, 150, 163, 181, 186, 196, 199, 202, 205, 208, 212, 215, 223, 225, 231, 235, 240, 241, 244, 247, 248, 250, 252, 256, 263, 269, 277, 287, 288, 290, 293, 294, 295, 297, 303, 322, 355, 357, 362, 389, 391, 393, 394, 399, 431, 432, 491, 525, 549, 558, 563, 565, 570, 574, 590, 647, 654, 657, 658, 659, 660, 669, 699, 711, 712, 739, 740, 802, 896, 898, 936, 971, 973, 974, 976, 978, 979, 998, 1015, 1017, 1018, 1019, 1027, 1049, 1051, 1055, 1058, 1066, 1068, 1100], "basic": [8, 63, 70, 90, 142, 154, 163, 175, 180, 182, 183, 184, 185, 189, 190, 194, 195, 204, 213, 216, 219, 226, 232, 237, 240, 243, 249, 255, 258, 262, 265, 272, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 290, 293, 294, 295, 297, 317, 340, 385, 389, 392, 398, 425, 432, 448, 449, 503, 506, 571, 576, 579, 582, 583, 585, 589, 592, 603, 609, 618, 654, 662, 696, 701, 705, 706, 707, 708, 729, 741, 742, 743, 804, 807, 808, 811, 821, 860, 871, 876, 885, 897, 904, 912, 920, 952, 974, 975, 1028, 1030, 1064, 1083, 1094, 1095, 1116, 1117, 1118, 1136, 1139], "2021": [8, 11, 113, 187, 189, 192, 194, 195, 197, 200, 203, 204, 205, 206, 210, 213, 215, 216, 218, 219, 221, 314, 315, 322, 325, 326, 327, 328, 329, 330, 331, 340], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 136, 140, 150, 159, 164, 179, 180, 182, 183, 184, 185, 187, 189, 190, 194, 197, 200, 203, 204, 205, 206, 210, 213, 222, 226, 229, 232, 234, 237, 240, 243, 252, 255, 262, 265, 341, 1075, 1081], "inform": [8, 39, 128, 138, 150, 175, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 194, 197, 200, 203, 204, 205, 206, 210, 213, 222, 226, 229, 232, 234, 237, 240, 243, 252, 255, 262, 265, 313, 322, 425, 709, 1005, 1075], "\u00fcberblick": [8, 187, 197, 206, 222, 234, 1129], "log": [8, 105, 127, 144, 179, 180, 183, 184, 192, 194, 195, 197, 200, 204, 206, 210, 213, 222, 234, 243, 322, 335, 336, 805, 806, 813], "tag": [8, 170, 189, 193, 197, 200, 206, 222, 234, 235], "1": [8, 19, 23, 37, 73, 78, 97, 107, 114, 145, 148, 160, 168, 170, 175, 179, 180, 182, 183, 184, 186, 187, 189, 194, 195, 197, 200, 204, 205, 206, 210, 213, 216, 219, 222, 226, 234, 259, 262, 265, 268, 269, 270, 271, 272, 276, 280, 282, 287, 293, 294, 297, 321, 323, 324, 331, 338, 340, 343, 344, 345, 347, 351, 355, 364, 366, 367, 368, 369, 373, 374, 377, 380, 386, 387, 388, 389, 390, 393, 395, 399, 403, 405, 407, 410, 411, 412, 413, 415, 416, 418, 419, 425, 439, 449, 452, 454, 490, 552, 554, 561, 572, 575, 582, 584, 665, 670, 711, 716, 722, 725, 726, 737, 742, 749, 760, 770, 838, 877, 878, 884, 893, 907, 920, 921, 923, 925, 927, 928, 939, 946, 950, 953, 954, 970, 978, 983, 1004, 1006, 1007, 1013, 1016, 1021, 1022, 1024, 1025, 1026, 1027, 1089, 1100, 1101, 1103, 1125], "2": [8, 19, 23, 37, 74, 78, 97, 107, 114, 145, 148, 170, 175, 176, 179, 180, 182, 183, 184, 186, 189, 193, 194, 195, 197, 200, 204, 205, 206, 210, 213, 215, 216, 219, 222, 226, 234, 259, 262, 265, 268, 269, 270, 271, 272, 276, 280, 287, 293, 294, 297, 336, 338, 340, 343, 344, 345, 347, 351, 355, 364, 366, 367, 368, 369, 373, 374, 377, 380, 386, 387, 389, 390, 393, 395, 399, 403, 405, 407, 410, 411, 412, 413, 415, 416, 418, 419, 425, 440, 449, 452, 454, 490, 539, 552, 554, 561, 572, 575, 582, 584, 666, 671, 711, 716, 722, 725, 726, 742, 749, 770, 838, 877, 878, 884, 893, 907, 920, 921, 923, 925, 927, 928, 939, 946, 950, 953, 954, 966, 970, 978, 983, 1004, 1006, 1007, 1013, 1015, 1016, 1022, 1024, 1025, 1026, 1027, 1085, 1087, 1088, 1089, 1100, 1101, 1103], "live": [8, 42, 44, 45, 162, 165, 187, 197, 200, 210, 259, 547, 587, 588, 590, 591, 594, 595, 596, 608, 647, 658, 691, 692, 719, 721, 809, 835, 899, 917], "hack": [8, 42, 44, 45, 162, 165, 187, 197, 200, 210, 259, 262, 266, 269, 272, 547, 587, 588, 590, 591, 594, 595, 596, 608, 647, 658, 691, 692, 719, 721, 836, 917], "jupyt": [8, 9, 40, 187, 188, 192, 193, 194, 197, 198, 200, 201, 210, 211, 213, 214, 216, 217, 220, 222, 224, 227, 230, 233, 236, 239, 241, 242, 245, 254, 257, 260, 264, 273, 274, 278, 284, 289, 292, 295, 296, 299, 300, 317, 1081, 1082], "notebook": [8, 9, 40, 182, 187, 188, 192, 193, 194, 197, 198, 200, 201, 203, 210, 211, 213, 214, 216, 217, 218, 220, 222, 224, 227, 230, 233, 236, 239, 241, 242, 245, 254, 257, 260, 264, 273, 274, 278, 284, 289, 292, 295, 296, 299, 300, 317, 322, 1079, 1081, 1082], "link": [8, 23, 39, 127, 146, 164, 175, 178, 180, 182, 184, 187, 189, 194, 195, 197, 206, 210, 213, 216, 222, 229, 240, 243, 276, 282, 327, 329, 403, 405, 654, 668, 675, 693, 700, 704, 755, 766, 767, 817, 838, 859, 877, 884, 892, 968, 969, 1000, 1030, 1031, 1076, 1092, 1094, 1095, 1097, 1098, 1099, 1100, 1108, 1113], "programmierung": [9, 11, 162, 187, 188, 197, 198, 206, 222, 224, 234, 236, 340], "grundlagen": [9, 11, 175, 186, 187, 188, 197, 198, 200, 201, 206, 210, 214, 217, 220, 222, 224, 234, 236, 239, 242, 245, 254, 257, 278, 340], "detail": [10, 78, 195, 199, 231, 238, 270, 317, 339, 415, 493, 583, 1006], "content": [11, 24, 37, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 158, 167, 171, 172, 202, 324, 428, 530, 533, 539, 542, 548, 630, 707, 807, 827, 840, 846, 852, 855, 872, 880, 881, 888, 897, 913, 915, 917, 932, 942, 945, 959, 979, 1034, 1035, 1039, 1048, 1062, 1069, 1117, 1119, 1122, 1130, 1133, 1135], "anhand": [11, 186, 206, 222, 234, 340, 1136], "von": [11, 23, 157, 162, 166, 169, 176, 186, 193, 206, 207, 222, 234, 317, 340, 1136], "12": [11, 23, 45, 166, 185, 186, 190, 197, 205, 218, 219, 221, 252, 322, 327, 331, 333, 340, 1103], "und": [11, 23, 156, 160, 176, 186, 187, 191, 193, 197, 199, 202, 206, 222, 225, 231, 234, 238, 244, 323, 340, 365, 374, 1129, 1140], "13": [11, 23, 41, 45, 153, 175, 186, 187, 197, 250, 259, 262, 263, 265, 340], "4": [11, 23, 107, 145, 170, 179, 182, 186, 194, 195, 197, 200, 204, 205, 222, 234, 259, 331, 340, 345, 403, 407, 413, 449, 452, 554, 672, 978, 1103], "templat": [12, 204, 221, 270, 303, 512, 525, 526, 527, 528, 544, 545, 546, 574, 575, 576, 582, 615, 661, 664, 669, 671, 699], "descript": [12, 59, 62, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 460, 547, 555, 570, 573, 576, 612, 617, 626, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 645, 687, 688, 712, 720, 724, 728, 730, 872, 880, 881, 935], "sidebar": [12, 37], "metadata": [12, 247, 248, 250, 860], "about": [13, 107, 140, 159, 218, 223, 235, 253, 256, 262, 266, 283, 290, 442, 652, 689, 867, 968, 1020, 1023, 1024, 1025], "thi": [13, 32, 37, 115, 116, 117, 118, 120, 122, 127, 145, 150, 151, 153, 154, 164, 173, 561, 575, 690, 797, 876, 899, 952, 969, 976, 978], "site": [13, 28, 32, 127, 147, 149, 173], "licens": 13, "gplv3": 13, "github": [13, 112, 123, 147, 149, 179, 180, 192, 200, 322, 490, 504, 1076], "sphinx": [13, 40, 66, 149], "instal": [13, 61, 118, 146, 150, 154, 158, 171, 172, 175, 200, 204, 205, 285, 301, 322, 327, 342, 437, 753, 895, 950, 961, 966, 967, 1000, 1030, 1031, 1063, 1076, 1092, 1110, 1112, 1117, 1119, 1132], "instruct": [13, 406, 716, 923, 953, 970], "pip": [13, 276], "venv": [13, 276], "work": [13, 17, 65, 97, 112, 114, 126, 131, 145, 179, 210, 248, 250, 267, 268, 269, 270, 329, 423, 424, 425, 504, 575, 729, 797, 798, 834, 837, 841, 966], "progress": [13, 17, 126], "more": [13, 145, 163, 176, 215, 218, 223, 231, 235, 238, 240, 252, 253, 255, 256, 259, 261, 262, 265, 271, 272, 275, 276, 281, 282, 283, 290, 293, 297, 322, 345, 351, 374, 390, 392, 406, 416, 432, 442, 444, 554, 564, 567, 574, 587, 593, 647, 689, 690, 694, 711, 786, 815, 816, 817, 821, 822, 867, 894, 936, 973, 975, 977, 1020, 1023, 1024, 1025, 1075, 1084, 1110, 1122], "opentrain": [14, 23], "draft": [15, 872, 1029], "topic": [15, 21, 73, 74, 98, 99, 101, 102, 103, 104, 139, 175, 179, 182, 203, 204, 205, 216, 221, 240, 243, 259, 262, 265, 268, 269, 293, 297, 303, 304, 312, 326, 330, 331, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 453, 496, 497, 498, 499, 500, 501, 502, 505, 547, 555, 570, 573, 576, 592, 598, 602, 610, 615, 617, 620, 626, 644, 645, 649, 656, 663, 674, 687, 688, 698, 703, 712, 720, 724, 728, 730, 731, 732, 755, 875, 890, 908, 910, 929, 935, 956, 962, 963, 978, 983, 991, 1029, 1078, 1082, 1086, 1090, 1092, 1096, 1109, 1115], "miscellan": [16, 125, 136, 140, 159, 163, 183, 212, 223, 225, 231, 241, 247, 248, 252, 256, 259, 268, 271, 272, 277, 282, 283, 293, 294, 297, 303, 525, 547, 626, 630, 661, 724, 914, 925, 927, 1022, 1090, 1103], "s5": [17, 18, 140], "integr": [17, 651, 667], "web": [17, 93, 94, 141], "slide": [17, 18, 30, 45, 163, 325, 337, 946, 950], "implement": [17, 115, 116, 117, 118, 120, 122, 231, 294, 308, 314, 454, 461, 471, 476, 486, 487, 488, 489, 493, 501, 506, 507, 551, 552, 557, 563, 565, 623, 647, 658, 736, 739, 758, 794, 973, 979, 995, 1054], "note": [17, 37, 61, 125, 158, 308, 447, 823], "todo": [17, 140, 169, 172, 183, 189, 309, 310, 311, 328, 430, 525, 526, 529, 532, 535, 538, 541, 544, 735, 739, 747, 779, 941, 944, 948, 1091, 1116, 1121], "test": [18, 37, 42, 43, 44, 45, 50, 71, 115, 116, 117, 118, 120, 122, 154, 175, 205, 229, 240, 243, 252, 261, 262, 265, 266, 267, 271, 272, 285, 287, 290, 293, 294, 297, 301, 330, 336, 340, 431, 445, 454, 474, 490, 504, 506, 507, 567, 739, 758, 791, 883, 912, 964, 967, 1031, 1064, 1071, 1072, 1073, 1081, 1110, 1111, 1115, 1117, 1119, 1122, 1132, 1148], "level": [19, 419], "head": [19, 37, 766, 869, 1084], "imag": [19, 164, 183, 966], "screencast": [20, 137], "written": [21, 114, 550, 553], "new": [21, 139, 205, 221, 247, 248, 250, 303, 340, 493, 530, 646, 647, 687, 723, 758, 791, 1093], "write": [21, 42, 50, 58, 142, 493, 530, 557, 669, 684, 707, 736, 904, 911, 996, 1026, 1032, 1101], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 199, 207], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 97, 107, 114, 123, 145, 170, 179, 180, 182, 183, 184, 185, 186, 189, 194, 195, 200, 204, 205, 206, 208, 210, 215, 216, 219, 222, 226, 234, 241, 259, 262, 265, 268, 270, 271, 272, 276, 280, 282, 293, 294, 295, 297, 340, 345, 395, 399, 403, 407, 413, 415, 416, 418, 419, 449, 452, 454, 490, 554, 667, 726, 907, 923, 927, 928, 978, 1007, 1015, 1021, 1026, 1103], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 252, 340, 804], "anschlussf\u00f6rderung": 23, "die": [23, 53, 151, 169, 207, 1137], "besonder": [23, 186], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 170, 176, 186, 340, 1128], "da": [23, 166, 176, 193, 202, 235], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 145, 163, 170, 175, 176, 178, 186, 204, 205, 207, 259, 331, 340, 403, 413, 449, 452, 673, 805, 806, 1103], "l\u00f6sung": [23, 176], "beschreibung": 23, "der": [23, 186, 191, 207, 323, 340, 1125], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 186, 223, 241, 243, 508, 510, 511, 515, 603, 605, 606, 1012], "ein": [23, 176, 207, 1136, 1141], "nachhaltigen": 23, "impact": 23, "nach": [23, 243], "projektend": 23, "6": [23, 123, 186, 187, 207, 208, 241, 340, 403, 413, 449, 452, 1021, 1140], "umfeldanalys": 23, "wa": [23, 175, 191, 636], "ist": [23, 176], "stand": 23, "technik": 23, "method": [23, 199, 202, 212, 223, 225, 228, 231, 241, 256, 268, 277, 283, 295, 314, 316, 324, 503, 539, 551, 558, 559, 560, 563, 565, 567, 570, 622, 625, 633, 637, 705, 706, 707, 708, 709, 737, 772, 774, 788, 993, 995, 1021, 1022, 1023, 1111], "wissen": 23, "welch": 23, "ander": [23, 162, 323], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 151, 191, 207], "genannten": 23, "problemen": 23, "gibt": [23, 186], "e": [23, 422, 706], "schon": 23, "7": [23, 179, 186, 187, 207, 340, 403, 413, 1140], "alleinstellungsmerkm": 23, "8": [23, 186, 187, 206, 207, 340, 403, 413, 884, 1089, 1140], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 179, 180, 186, 187, 207, 340, 403, 413, 978, 1125, 1140], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 186, 212, 225, 238, 241, 256, 263, 277, 283, 295, 340, 1016], "projektbereich": 23, "angaben": 23, "zur": [23, 157, 176, 186], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 162, 207], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 194, 252, 282, 655], "risiken": 23, "erfolgskriterien": 23, "am": [23, 176, 235, 340], "angestrebt": 23, "jahr": 23, "10": [23, 45, 99, 100, 123, 129, 160, 163, 168, 179, 182, 186, 221, 222, 249, 250, 251, 252, 253, 267, 290, 291, 293, 294, 296, 322, 326, 327, 328, 332, 340, 403, 510, 805, 806], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 123, 161, 166, 184, 185, 186, 215, 216, 221, 246, 250, 252, 255, 256, 290, 297, 298, 299, 300, 301, 302, 329, 330, 340, 403, 525, 648, 651, 684, 685, 696, 705, 730], "projekttermin": 23, "termin": [23, 809, 921, 984], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 191, 207], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 186], "finanziert": 23, "durch": [23, 176], "sonderprei": 23, "14": [23, 45, 166, 175, 186, 187, 190, 204, 246, 340, 1103], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 166, 175, 186, 340], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 193, 199], "haben": [23, 176], "sie": [23, 176], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 205, 229, 243, 255, 256, 340, 978, 1125], "datenschutz": 23, "screenplai": [24, 63, 307, 431, 527, 530, 533, 536, 539, 542, 545, 577, 578, 579, 580, 581, 584, 585, 586, 604, 605, 606, 607, 733, 736, 741, 746, 751, 753, 791, 794, 797, 942, 945, 949, 1017, 1105, 1112, 1117, 1119, 1122], "The": [24, 39, 43, 45, 61, 100, 112, 115, 141, 154, 186, 202, 205, 208, 215, 232, 241, 244, 259, 267, 269, 271, 277, 280, 287, 290, 293, 294, 297, 303, 343, 351, 352, 389, 390, 405, 412, 413, 422, 423, 427, 428, 437, 505, 506, 558, 582, 603, 604, 626, 646, 647, 655, 660, 662, 664, 689, 707, 710, 721, 774, 804, 813, 814, 821, 838, 841, 852, 855, 858, 860, 869, 871, 875, 891, 893, 895, 896, 898, 904, 912, 916, 931, 933, 940, 952, 954, 955, 964, 965, 973, 974, 976, 980, 984, 992, 995, 999, 1001, 1003, 1010, 1015, 1021, 1063, 1084, 1091, 1100, 1111, 1132], "problem": [24, 387, 409, 432, 433, 441, 447, 448, 449, 452, 458, 505, 506, 648, 660, 664, 684, 685, 694, 710, 734, 768, 815, 834, 893, 895, 899, 954, 969, 970, 974, 988, 1083, 1106, 1113], "And": [24, 42, 61, 63, 112, 123, 154, 250, 253, 256, 259, 262, 267, 268, 269, 270, 271, 272, 277, 280, 282, 285, 287, 290, 293, 294, 297, 301, 303, 363, 407, 431, 432, 434, 437, 438, 443, 444, 445, 451, 454, 460, 468, 469, 474, 482, 488, 503, 550, 551, 557, 562, 578, 582, 583, 584, 586, 604, 619, 620, 624, 627, 652, 658, 660, 662, 675, 692, 695, 696, 697, 699, 700, 705, 717, 719, 721, 726, 742, 800, 804, 805, 806, 810, 813, 819, 821, 857, 869, 871, 876, 880, 886, 887, 898, 911, 933, 961, 962, 964, 966, 967, 968, 969, 971, 976, 980, 981, 984, 988, 989, 990, 995, 996, 997, 998, 1062, 1063, 1064, 1072, 1084, 1089, 1094, 1095, 1097, 1098, 1099, 1110, 1132], "me": [24, 147, 910], "open": [24, 131, 156, 272, 457, 736, 737, 901, 904, 907, 909, 946, 973, 1026], "sourc": [24, 40, 146, 156, 172, 432, 450, 734, 737, 739, 742, 744, 747, 751, 756, 758, 768, 770, 778, 781, 786, 905, 954, 1031, 1089], "walk": [24, 259, 322], "through": [24, 259, 322], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 144, 148, 150, 154, 164, 165, 171, 173, 183, 202, 204, 205, 218, 221, 348, 350, 353, 368, 383, 405, 415, 423, 424, 433, 435, 449, 452, 469, 490, 590, 614, 635, 643, 655, 659, 660, 696, 710, 721, 870, 882, 883, 884, 920, 936, 953, 954, 964, 965, 971, 973, 976, 979, 989, 998, 1105, 1111, 1112], "case": [25, 26, 27, 28, 29, 30, 204, 379, 383, 454, 516, 518, 521, 695, 696, 905, 909, 910, 911, 963, 971, 998, 1111, 1117], "custom": [25, 131, 134, 147, 312, 551, 552, 566, 572, 596, 650, 1098, 1100, 1117], "subtract": [25, 549], "known": [25, 142], "calcul": [26, 202, 372, 451, 996], "minimum": [26, 756], "durat": 26, "trainer": [27, 158], "editor": [27, 195], "end": [27, 661], "user": [27, 42, 46, 205, 207, 340, 553, 632, 637, 638, 639, 640, 641, 642, 742, 810, 811, 813, 814, 815, 823, 824, 835, 895, 975, 1065, 1067, 1069, 1070, 1072, 1105], "audienc": [27, 1132], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 100, 112, 123, 129, 135, 154, 164, 172, 173, 181, 221, 231, 259, 262, 267, 276, 294, 340, 358, 380, 386, 428, 431, 574, 577, 618, 627, 631, 657, 658, 697, 746, 751, 792, 797, 882, 894, 912, 936, 945, 952, 994, 1031, 1071, 1075, 1076, 1081, 1083, 1125], "other": [28, 38, 52, 202, 271, 283, 324, 655, 756, 778, 823, 983], "menu": 29, "choos": 29, "show": 30, "plain": [30, 590, 618, 619, 647], "text": [30, 280, 389, 865, 868, 871, 1026, 1101], "file": [30, 31, 42, 48, 164, 166, 202, 212, 215, 231, 238, 240, 241, 255, 259, 263, 273, 275, 276, 277, 280, 281, 282, 313, 314, 329, 387, 431, 433, 439, 454, 533, 564, 736, 737, 738, 746, 778, 805, 806, 809, 827, 832, 833, 839, 840, 843, 844, 845, 853, 857, 860, 861, 865, 868, 870, 886, 894, 895, 899, 900, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 918, 942, 946, 952, 953, 967, 973, 1002, 1026, 1031, 1032, 1033, 1054, 1056, 1065, 1067, 1084, 1117], "send": [31, 946, 950], "A": [31, 45, 63, 112, 120, 123, 143, 154, 221, 247, 248, 250, 262, 266, 267, 268, 269, 271, 276, 303, 340, 346, 355, 385, 412, 430, 431, 434, 448, 468, 482, 490, 493, 503, 508, 523, 549, 564, 565, 574, 583, 613, 624, 625, 638, 647, 652, 660, 689, 692, 705, 708, 710, 805, 806, 809, 823, 834, 857, 861, 894, 896, 900, 901, 902, 905, 908, 909, 910, 911, 918, 931, 936, 939, 952, 965, 966, 969, 970, 971, 974, 979, 998, 1001, 1063, 1089, 1094, 1097, 1100, 1101, 1110], "v4l": 31, "camera": 31, "devic": [31, 63, 81, 97, 114, 733, 734, 735, 736, 737, 738, 741, 742, 743, 744, 745, 746, 768, 772, 773, 774, 809, 882, 884, 942], "output": [31, 50, 117, 164, 176, 313, 445, 628, 820, 978, 1081, 1117], "over": [31, 215, 223, 225, 729, 884, 1014, 1015], "ssh": [31, 195, 259, 280, 319, 327, 885, 888, 889, 890, 891, 892, 893, 894, 895], "captur": [31, 689, 690, 692], "To": [31, 37, 39, 42, 44, 53, 140, 238, 267, 453, 454, 469, 490, 616, 627, 647, 651, 660, 662, 664, 675, 689, 697, 705, 707, 709, 710, 721, 749, 790, 792, 805, 806, 886, 887, 894, 954, 964, 966, 971, 973, 974, 994, 995, 1072, 1093, 1094, 1100], "plai": [31, 63, 675], "remot": [31, 97, 112, 114, 125, 458, 471, 485, 805, 806, 886, 887, 891, 894, 895], "system": [31, 145, 218, 259, 280, 329, 340, 361, 425, 622, 713, 827, 833, 895, 897, 898, 899, 904, 915, 933, 936, 939, 1005, 1105, 1125, 1143, 1144, 1145, 1146, 1147], "emoji": 32, "code": [32, 41, 43, 45, 107, 173, 174, 176, 177, 200, 216, 269, 271, 272, 285, 301, 340, 409, 419, 429, 430, 431, 433, 439, 440, 441, 446, 450, 526, 529, 532, 535, 538, 541, 544, 574, 659, 707, 739, 740, 744, 745, 746, 747, 748, 758, 759, 768, 769, 780, 781, 782, 786, 787, 910, 941, 944, 948, 968, 969, 970, 1071, 1072, 1073, 1076, 1079, 1082, 1089, 1102, 1112, 1116, 1121, 1132], "sphinxemoji": 32, "setup": [32, 63, 78, 109, 146, 150, 172, 179, 180, 182, 183, 184, 205, 255, 261, 262, 265, 268, 270, 272, 275, 276, 280, 281, 282, 445, 503, 505, 875, 883, 891, 902, 966, 967, 1000, 1063, 1064, 1112, 1122], "most": [32, 38, 63, 662, 1105], "here": [32, 144, 454, 894], "all": [32, 38, 53, 63, 199, 202, 221, 267, 297, 340, 621, 647, 655, 690, 710, 797, 815, 952, 968, 986, 1074], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 147, 968, 1093, 1100], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 349, 364, 425, 859, 952], "arrow": 34, "isoamsr": 35, "relat": [35, 159, 262, 265, 367], "isonum": 36, "binari": [36, 469, 1026], "oper": [36, 163, 176, 186, 199, 215, 218, 221, 228, 231, 235, 238, 252, 267, 287, 317, 351, 366, 367, 368, 371, 372, 374, 375, 380, 392, 503, 525, 550, 551, 557, 565, 605, 705, 713, 719, 736, 737, 738, 820, 899, 936, 995, 1005, 1007, 1009, 1025, 1095, 1103], "layout": [37, 231, 398], "page": [37, 94, 147, 149, 749, 838, 870, 898], "admonit": 37, "i": [37, 45, 144, 145, 162, 202, 212, 218, 223, 228, 231, 238, 240, 241, 273, 277, 280, 282, 314, 326, 351, 377, 424, 430, 448, 503, 522, 549, 556, 618, 624, 625, 660, 662, 685, 689, 694, 697, 706, 710, 714, 718, 751, 762, 783, 798, 809, 813, 814, 819, 820, 821, 834, 844, 857, 884, 894, 895, 896, 899, 900, 901, 902, 903, 904, 907, 909, 911, 913, 914, 931, 934, 952, 969, 971, 976, 1026, 1083, 1097, 1103, 1122], "an": [37, 115, 147, 218, 271, 286, 293, 297, 302, 318, 322, 340, 436, 441, 551, 660, 675, 739, 857, 883, 894, 899, 936, 969, 980, 989, 1016, 1018, 1112, 1130], "tip": 37, "hint": [37, 471, 501], "import": [37, 154, 162, 202, 212, 221, 322, 556, 950, 975, 983, 1091], "attent": [37, 1018], "caution": [37, 625], "error": [37, 43, 154, 218, 271, 272, 293, 294, 297, 390, 415, 449, 571, 581, 582, 666, 669, 820, 884, 896, 905, 909, 910, 911, 988, 1044], "danger": [37, 357, 718, 835], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1126, 1127, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "local": [37, 39, 97, 112, 114, 125, 163, 186, 388, 420, 437, 458, 891, 894, 927, 954, 1017, 1112], "bleh": 37, "do": [37, 42, 140, 202, 244, 381, 418, 437, 448, 647, 768, 790, 805, 806, 821, 952], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 921], "restructuredtext": 39, "cheat": [39, 322], "sheet": [39, 322], "further": [39, 128, 167, 203, 204, 226, 313, 322, 419, 655, 709, 1005], "document": [39, 149, 199, 215, 295, 317, 587, 588, 589, 590, 591, 593, 594, 595, 596, 599, 600, 603, 608, 742, 758, 760, 764, 766, 788, 792, 795, 805, 806, 809, 813, 820, 821, 822, 823, 838, 839, 840, 841, 857, 860, 861, 894, 896, 898, 900, 901, 902, 904, 907, 908, 909, 910, 911, 914, 952, 953, 1004, 1028, 1038, 1101, 1110, 1117], "extern": [39, 285, 301, 308, 386, 435, 564, 753, 754, 883, 969, 1039, 1132], "section": 39, "refer": [39, 140, 143, 186, 212, 215, 218, 225, 238, 241, 247, 248, 250, 253, 256, 260, 263, 268, 271, 277, 283, 295, 355, 393, 420, 562, 656, 659, 660, 662, 689, 690, 692, 701, 706, 708, 709, 726, 727, 785, 1016], "That": [39, 244, 247, 248, 250, 267, 294, 303, 394, 452, 549, 556, 647, 650, 660, 689, 707, 708, 778, 813, 884, 894, 899, 900, 903, 971, 998, 1119], "we": [39, 42, 45, 53, 429, 431, 768, 797, 964, 1117], "anoth": [39, 231, 429, 936, 968], "contain": [39, 221, 241, 267, 270, 525, 541, 542, 543, 582, 583, 597, 598, 601, 602, 603, 647, 651, 699, 766, 966], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 129, 148, 445, 504, 567, 786, 875, 900, 901, 902, 966, 967, 1003, 1079, 1082, 1110], "seminar": 41, "clean": [41, 43, 45, 209, 269, 271, 272, 340, 430, 431], "2022": [41, 98, 99, 100, 101, 102, 103, 104, 221, 222, 223, 226, 229, 232, 234, 237, 240, 243, 246, 249, 250, 251, 252, 253, 255, 256, 332, 333, 334, 340], "04": [41, 104, 148, 221, 232, 234, 237, 270, 271, 272, 273, 274, 322, 340, 966], "agenda": [41, 179, 180, 182, 183, 184, 185, 190, 194, 195, 232, 237, 249, 258, 262, 265, 271, 275, 279, 281, 285, 287, 293, 297, 301, 303, 335, 336, 1132], "timelin": 41, "befor": [42, 63, 131, 164, 287, 290, 705, 1117], "formal": [42, 351], "unit": [42, 43, 45, 71, 175, 205, 243, 252, 262, 265, 330, 490, 506, 567, 1064, 1115], "initi": [42, 212, 247, 248, 250, 303, 353, 365, 414, 501, 532, 533, 534, 549, 556, 567, 604, 627, 647, 649, 650, 651, 652, 696, 718, 772, 783, 795, 925, 927], "structur": [42, 43, 136, 140, 163, 226, 247, 248, 250, 252, 274, 285, 296, 300, 301, 303, 383, 391, 398, 401, 407, 443, 490, 525, 696, 701, 721, 746, 774, 970, 983, 1110, 1117, 1132], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 204, 525, 639, 643], "bin": 42, "binaryfil": 42, "cpp": [42, 439, 490, 493, 665, 666, 667, 670, 671, 672, 673, 676, 677, 679, 680, 681, 682, 683], "extend": [42, 199, 567, 992], "read": [42, 49, 50, 58, 202, 209, 313, 314, 324, 358, 419, 431, 454, 655, 697, 736, 794, 900, 904, 910, 912, 1026, 1032, 1033, 1065, 1066, 1067, 1068, 1081, 1101], "iter": [42, 165, 176, 181, 186, 191, 193, 199, 202, 207, 208, 212, 215, 218, 223, 225, 228, 231, 240, 241, 252, 253, 255, 256, 262, 265, 269, 273, 275, 276, 277, 281, 282, 294, 295, 314, 582, 583, 606, 647, 675, 682, 695, 696, 697, 729, 766, 978, 980, 981, 982, 994, 1014, 1015, 1024], "bug": [42, 47, 53, 368, 533, 697], "faschingbau": [42, 147], "As": [42, 452, 469, 660, 699, 884, 918, 952, 989, 1119], "last": [42, 368, 389, 390, 419, 572, 575, 711, 928, 950, 1117], "name": [42, 43, 117, 212, 215, 231, 362, 400, 558, 647, 778, 822, 840, 946, 1017, 1028], "wrap": [42, 175, 415, 647, 974], "up": [42, 145, 175, 209, 252, 270, 271, 293, 327, 415, 647, 989], "what": [42, 45, 49, 53, 150, 153, 218, 228, 377, 418, 429, 553, 622, 641, 647, 659, 660, 689, 710, 747, 768, 778, 794, 798, 813, 821, 839, 878, 891, 894, 895, 899, 900, 903, 907, 939, 952, 964, 968, 976, 980, 984, 1027, 1097, 1100], "have": [42, 45, 429, 768, 964, 969], "messag": [43, 143, 144, 428, 434, 926, 945, 946, 1092, 1117], "book": [43, 45, 190, 240, 282, 343, 428, 1076], "survei": [43, 429], "comment": [43, 199, 223, 238, 263, 317, 1004, 1045], "format": [43, 50, 202, 208, 223, 283, 1021, 1073], "object": [43, 176, 181, 218, 225, 231, 235, 243, 244, 252, 255, 256, 268, 269, 271, 272, 275, 276, 281, 287, 288, 290, 293, 294, 297, 310, 429, 447, 452, 532, 533, 534, 549, 551, 554, 557, 559, 563, 565, 620, 622, 636, 651, 654, 657, 660, 706, 946, 969, 970, 975, 983, 989, 991, 993, 1027, 1094, 1098, 1103], "data": [43, 116, 117, 118, 163, 165, 191, 200, 226, 240, 243, 252, 276, 293, 294, 295, 297, 363, 407, 410, 431, 555, 559, 582, 701, 813, 927, 994, 1062, 1076, 1081, 1083], "handl": [43, 218, 221, 231, 243, 262, 265, 270, 271, 272, 293, 294, 297, 333, 441, 449, 571, 896, 975, 1028], "boundari": [43, 1089], "class": [43, 176, 202, 221, 225, 228, 231, 244, 252, 268, 273, 287, 290, 434, 452, 459, 460, 477, 478, 490, 493, 507, 526, 527, 528, 551, 558, 559, 564, 566, 567, 568, 569, 575, 590, 618, 619, 638, 647, 648, 650, 658, 659, 691, 705, 734, 974, 988, 989, 992, 993, 994, 995], "switch": [44, 121, 122, 379, 411, 502], "googletest": [44, 171, 504, 1115], "git": [44, 77, 112, 123, 125, 146, 154, 158, 200, 204, 205, 259, 322, 327, 340, 751, 1076], "submodul": 44, "establish": [44, 45, 967], "demo": [44, 261, 262, 269, 435, 454, 691, 706, 809, 835, 899, 934, 938], "straightforward": [44, 176], "main": [44, 112, 396, 487, 488, 489, 968], "convers": [44, 199, 215, 223, 225, 231, 235, 238, 256, 267, 273, 277, 283, 295, 317, 368, 395, 619, 627, 1007, 1021], "fix": [44, 146, 154, 247, 248, 250, 267, 303, 314, 557, 675, 721, 768, 769, 781, 782], "shortcom": 44, "softwar": [45, 123, 172, 269, 429, 430, 884, 957, 960, 1134], "craft": [45, 269, 430], "09": [45, 123, 148, 203, 213, 221, 287, 288, 289, 290, 291, 292, 340], "00": 45, "15": [45, 186, 192, 229, 262, 265, 275, 276, 277, 322, 329, 334, 340, 805, 806], "introductori": [45, 259, 675, 917], "word": [45, 238, 389, 390, 419, 422, 572, 575, 702, 711, 838, 1043, 1060], "engin": [45, 240, 884], "disciplin": 45, "coffe": 45, "break": [45, 186, 223, 382, 1011, 1014], "project": [45, 109, 112, 119, 123, 147, 163, 204, 205, 219, 243, 248, 250, 252, 268, 270, 271, 272, 285, 287, 290, 293, 294, 297, 301, 328, 329, 330, 334, 336, 429, 431, 490, 495, 504, 505, 567, 1063, 1104, 1110, 1132, 1135], "enter": [45, 63, 215, 582, 625, 660, 686, 695, 709, 781, 870, 938, 968, 976, 988, 989, 1084, 1089, 1094], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 148, 840], "small": 45, "23": [45, 184, 210, 226, 232, 250, 258, 268, 279, 280, 340], "59": 45, "extrem": 45, "program": [45, 50, 63, 93, 159, 175, 181, 202, 205, 221, 231, 243, 244, 252, 255, 259, 269, 271, 272, 275, 276, 277, 281, 287, 290, 293, 294, 297, 329, 340, 344, 345, 347, 383, 384, 385, 391, 417, 422, 427, 429, 434, 454, 487, 488, 489, 493, 549, 710, 739, 791, 823, 834, 835, 876, 878, 897, 912, 915, 916, 919, 931, 941, 949, 952, 984, 991, 1000, 1001, 1003, 1005, 1052, 1064, 1075, 1102, 1103, 1131, 1143, 1144, 1145, 1146, 1147], "session": 45, "find": [46, 128, 146, 164, 449, 508, 589, 607, 725, 866, 1119], "crash": [46, 146], "If": [46, 49, 553, 647, 662, 794, 908, 909, 975, 1100], "Not": [46, 63, 65, 115, 116, 117, 118, 120, 122, 154, 235, 244, 515, 517, 520, 589, 625, 641, 647, 669, 684, 685, 697, 706, 768, 794, 834, 905, 908, 909, 910, 911, 931, 952, 969, 979, 1094, 1117], "found": [46, 517, 520, 589, 641, 1119], "state": [46, 144, 204, 675, 781, 783], "exist": [48, 65, 140, 515, 905, 908, 909, 911, 992, 1100], "ar": [48, 143, 144, 223, 225, 238, 288, 415, 431, 553, 559, 647, 675, 936, 946, 974, 983, 995, 1099, 1119], "overwritten": 48, "done": [49, 112, 453, 616, 710], "twice": 49, "altern": [50, 656], "csv": [50, 117, 215, 232, 240, 243, 252, 255, 275, 276, 277, 281, 282, 297, 431, 1032, 1033, 1034, 1065, 1066, 1067, 1068, 1073, 1084], "frontend": 50, "featur": [51, 53, 63, 255, 271, 272, 273, 275, 276, 281, 293, 297, 408, 431, 687, 977, 992, 1011, 1081, 1083], "search": [52, 587, 589, 590, 593, 603, 607, 627, 640, 641, 642, 867, 969, 1022, 1105], "By": [52, 171, 235, 267, 355, 562, 606, 637, 640, 642, 664, 675, 686, 689, 690, 692, 697, 701, 709, 725, 726, 727, 975, 1008, 1097, 1098, 1099, 1110], "index": [52, 186, 204, 223, 235, 283, 420, 673, 878, 1013, 1098, 1105, 1106, 1107], "backlog": 53, "need": [53, 314, 454, 669, 671, 936, 1084], "chang": [53, 112, 823, 834, 841], "Or": [53, 431, 439, 440, 454, 658, 697, 898, 989, 1094], "Will": 53, "refactor": [53, 56, 431, 507, 746, 747, 748, 786, 1066, 1068, 1073], "after": [53, 179, 210, 381, 797, 813, 992], "backingstor": [54, 55, 57], "ha": [54, 55, 672], "too": [54, 55, 425, 440, 647, 691, 714], "mani": [54, 55, 231, 419, 441, 697, 860, 940], "respons": [54, 55, 207, 457], "interfac": [54, 69, 86, 121, 183, 231, 270, 309, 440, 444, 454, 457, 461, 469, 480, 487, 488, 503, 505, 535, 536, 537, 544, 545, 546, 621, 737, 809, 877, 878, 881, 883, 988, 1085], "load": [57, 164, 406, 442, 756, 757, 882, 924, 986], "constructor": [57, 181, 231, 247, 248, 250, 256, 303, 503, 533, 539, 550, 551, 552, 553, 554, 556, 557, 566, 567, 568, 569, 636, 651, 652, 653, 658, 660, 684, 704, 705, 990], "bool": 58, "realli": [58, 647, 709], "submiss": [59, 62, 109], "pointless": [59, 60, 62, 63, 995], "blink": [59, 60, 62, 63, 322], "With": [59, 60, 62, 63, 97, 114, 173, 204, 251, 267, 269, 271, 293, 297, 340, 424, 432, 453, 468, 482, 504, 575, 657, 710, 804, 805, 806, 867, 870, 875, 880, 906, 969, 1017, 1097, 1099, 1111, 1112, 1115], "asyncio": [59, 60, 62, 63], "libgpiod": [59, 60, 61, 62, 63], "raspberri": [59, 60, 62, 63, 154, 183, 308, 340, 758, 779, 875, 879, 882, 957, 961, 963, 965, 1141], "pi": [59, 60, 61, 62, 63, 154, 183, 340, 758, 778, 779, 875, 882, 964, 965, 1141], "biographi": [59, 62], "abstract": [59, 62, 252, 287, 290, 447, 462, 476, 814, 900, 901, 902, 988], "fedora": [61, 146, 153, 751, 752, 753, 754, 966], "prepar": [61, 146, 164, 179, 180, 182, 183, 184, 185, 195, 204, 219, 229, 248, 250, 258, 490, 567, 778], "tarbal": [61, 154], "On": [61, 63, 112, 204, 238, 240, 262, 266, 267, 271, 293, 297, 342, 504, 506, 551, 582, 583, 587, 593, 696, 721, 821, 900, 901, 902, 907, 912, 916, 939, 966, 1031], "build": [61, 68, 144, 146, 154, 171, 172, 205, 223, 432, 434, 442, 490, 504, 566, 567, 568, 569, 746, 751, 752, 753, 754, 756, 778, 779, 882, 900, 901, 902, 912, 953, 954, 957, 960, 964, 965, 966, 968, 969, 970, 1024, 1119, 1137], "present": 63, "start": [63, 221, 247, 248, 250, 340, 454, 657, 669, 969, 1092, 1117], "point": [63, 235, 238, 503, 549, 551, 559, 565, 567, 568, 569, 575, 657, 669, 721, 805, 806, 964, 1007], "greet": [63, 294, 1038], "multipl": [63, 112, 181, 390, 431, 432, 744, 745, 746, 840, 894, 952, 973, 975, 1012, 1094, 1097, 1111], "background": [63, 148, 150, 548, 646], "thread": [63, 143, 145, 154, 271, 272, 331, 525, 647, 713, 714, 719, 920, 921, 922, 927, 929, 936, 939, 984], "charact": [63, 344, 351, 354, 357, 364, 733, 734, 735, 736, 737, 738, 741, 742, 743, 1060], "base": [63, 154, 223, 231, 247, 248, 250, 252, 287, 290, 303, 452, 618, 619, 647, 660, 675, 695, 696, 970, 975, 988], "gpio": [63, 86, 122, 161, 183, 308, 309, 310, 311, 322, 758, 759, 882, 884, 916, 917, 918], "entir": [63, 267, 751, 753, 838, 894], "matrix": 63, "off": [63, 204], "bring": [63, 125, 327, 621], "togeth": [63, 437, 621, 840], "modular": [63, 221, 385], "bit": [63, 276, 371, 823, 834, 836, 1001, 1003], "row": [63, 267, 1093, 1097, 1098, 1099], "coroutin": [63, 250, 674, 675], "enough": [63, 549, 625], "sequenc": [63, 212, 215, 223, 255, 262, 265, 275, 276, 281, 282, 364, 523, 587, 593, 979, 1012, 1020], "loop": [63, 163, 165, 176, 186, 191, 223, 225, 235, 238, 241, 247, 248, 250, 269, 271, 293, 297, 303, 347, 380, 381, 419, 491, 695, 919, 980, 1011, 1014], "forev": 63, "strip": [63, 208, 225, 231, 314], "down": [63, 440], "factori": [63, 447, 462, 476, 506], "turn": [63, 979], "Into": [63, 112, 265, 287, 290, 293, 358, 454, 491, 508, 584, 638, 647, 691, 1066, 1068, 1073], "anti": [63, 719, 721], "clumsi": [63, 721], "decor": [63, 202, 252, 262, 265, 269, 271, 272, 287, 293, 294, 297, 452, 466, 480, 974], "wrapper": [63, 118], "final": [63, 231, 247, 248, 250, 303, 686, 813, 817, 975], "playground": 63, "cycl": [63, 115, 116, 117, 118, 120, 122, 921], "fast": [63, 181], "forward": [63, 250, 356, 420, 709, 893], "ani": [63, 267, 448, 503, 931], "cancel": 63, "goodby": 63, "hochk\u00f6nig": 64, "k\u00f6nigsjodl": 64, "klettersteig": 64, "tour": [64, 252, 647], "werfen": 64, "ostpreussenh\u00fctt": 64, "matrashau": 64, "blog": [65, 140], "articl": [65, 150, 151, 153, 154], "yet": [65, 231], "revisit": [65, 347, 415, 658], "post": [65, 155, 164, 945], "pending_xref": 66, "cmake": [68, 171, 172, 204, 259, 285, 286, 301, 302, 340, 432, 434, 436, 440, 490, 504, 912, 953, 954, 967, 1119, 1120, 1132], "oo": [70, 108, 123, 176, 202, 205, 221, 228, 231, 240, 243, 247, 248, 250, 252, 262, 265, 268, 270, 287, 290, 294, 303, 331, 457, 494, 503, 525, 984], "graph": [72, 73, 74, 423, 425, 630, 731, 779, 1034, 1035, 1039, 1048, 1062, 1069], "embed": [73, 74, 78, 96, 97, 107, 108, 113, 114, 124, 161, 170, 259, 268, 270, 305, 321, 323, 324, 336, 338, 340, 1133, 1134], "comput": [73, 74, 78, 96, 107, 108, 113, 124, 319, 321, 323, 324, 336, 338, 418, 419, 503, 805, 806, 814], "current": [73, 74, 452, 729, 841], "depend": [73, 74, 115, 116, 117, 118, 119, 120, 122, 172, 285, 287, 301, 308, 309, 310, 311, 313, 435, 436, 438, 439, 443, 453, 457, 467, 490, 495, 512, 514, 525, 533, 592, 598, 602, 610, 612, 615, 620, 628, 629, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 649, 656, 663, 674, 698, 703, 755, 756, 805, 806, 807, 811, 825, 826, 827, 846, 851, 852, 855, 888, 890, 897, 903, 905, 913, 915, 917, 929, 932, 954, 956, 958, 959, 962, 963, 969, 984, 986, 1032, 1033, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1078, 1082, 1086, 1089, 1092, 1096, 1109, 1115, 1132], "ex": [75, 76, 82, 83, 84, 85, 91, 92], "race": [75, 76, 88, 715, 768, 769, 776, 922, 923, 986], "condit": [75, 76, 88, 373, 381, 390, 715, 719, 768, 769, 776, 922, 923, 925, 926, 986], "avoid": [76, 88], "goal": [76, 82, 83, 84, 85, 87, 88, 89, 91, 128, 130, 131, 133, 164, 268, 270, 1130, 1133], "outcom": [76, 82, 83, 84, 85, 182, 290, 324], "introduct": [77, 80, 163, 247, 248, 250, 262, 265, 269, 270, 280, 285, 286, 301, 302, 303, 325, 340, 343, 360, 418, 422, 436, 453, 461, 548, 645, 651, 695, 704, 713, 728, 758, 778, 812, 975, 1110, 1130, 1132, 1143], "2019": [78, 163, 166, 340], "overview": [78, 123, 159, 259, 271, 272, 295, 303, 337, 341, 657, 664, 675, 699, 705, 719, 721, 729, 749, 803, 814, 840, 871, 882, 883, 884, 885, 920, 952, 974, 1078, 1082], "knowledg": [78, 1132], "transfer": [78, 707], "unix": [80, 110, 111, 167, 327, 343, 405, 415, 451, 1003], "hardwar": [81, 84, 85, 123, 131, 134, 259, 405, 879, 881, 882, 884, 917, 1134], "manag": [81, 145, 193, 223, 243, 252, 262, 265, 268, 269, 271, 287, 290, 293, 294, 297, 329, 330, 334, 429, 557, 617, 705, 788, 789, 954, 973, 992, 1104, 1134], "averag": [82, 83, 91, 451, 479], "sensor": [82, 83, 85, 91, 92, 94, 270, 294, 447, 448, 452, 454, 459, 477, 479, 480, 486, 490, 492, 493, 494, 505, 506, 507, 514, 705, 882, 884, 912, 1062, 1064], "parallel": 83, "led": [84, 120, 322], "temperatur": [84, 85, 92, 120, 490, 493, 882, 884, 912], "displai": [84, 91, 120], "sysf": [86, 122, 183, 308, 322, 883, 917, 918], "gpiod": 86, "multithread": [87, 161, 221, 247, 248, 250, 259, 293, 294, 297, 303, 330, 337, 719, 720, 949, 984, 985, 987, 1146], "semaphor": [88, 143, 721, 945, 946], "mutex": [88, 143, 406, 717, 721, 768, 769, 770, 771, 783, 784, 923, 924, 939, 986], "commun": [89, 240, 471, 719, 925, 946], "wait": [89, 134, 719, 721, 794, 795, 796, 925, 945], "someth": [89, 176, 549, 647, 721, 794, 795, 796, 1014], "simpl": [93, 181, 445, 549, 559, 574, 625, 637, 781, 783, 809, 823, 952, 969, 974, 994, 1024, 1101, 1110], "2020": [96, 148, 168, 170, 175, 176, 178, 179, 180, 182, 184, 185, 190, 340], "ss2022": [97, 105, 805, 806], "block": [97, 114, 376, 572, 899, 900, 901, 902, 903, 950, 1103], "cross": [97, 108, 114, 154, 259, 758, 778, 953, 955, 956, 957, 962, 964, 965, 967, 1125], "develop": [97, 108, 114, 115, 116, 117, 118, 120, 122, 123, 175, 190, 204, 207, 229, 240, 243, 259, 262, 264, 265, 268, 269, 270, 271, 272, 293, 294, 297, 305, 325, 340, 755, 955, 956, 962, 1133, 1134, 1135, 1148], "03": [98, 99, 100, 101, 102, 103, 123, 192, 195, 200, 219, 221, 229, 232, 249, 262, 263, 265, 268, 269, 285, 322, 340, 644, 647, 648], "08": [98, 210, 213, 221, 234, 340], "homework": [98, 99, 100, 101, 104], "until": 100, "21": [100, 101, 232, 315, 322, 340], "exercis": [100, 109, 136, 158, 163, 164, 176, 179, 180, 184, 192, 193, 195, 204, 205, 215, 221, 238, 243, 247, 248, 250, 252, 255, 259, 263, 268, 270, 271, 275, 276, 281, 282, 283, 287, 290, 293, 294, 297, 303, 312, 314, 322, 328, 346, 348, 350, 352, 354, 356, 358, 370, 394, 403, 447, 448, 449, 451, 452, 453, 455, 456, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 523, 524, 525, 555, 566, 567, 568, 569, 570, 611, 612, 613, 620, 628, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 709, 725, 726, 727, 800, 807, 818, 824, 827, 828, 830, 832, 842, 843, 844, 845, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 865, 886, 887, 888, 889, 905, 906, 912, 946, 950, 957, 959, 960, 961, 962, 991, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073], "creat": [100, 112, 125, 137, 142, 146, 149, 171, 172, 504, 647, 714, 798, 804, 805, 806, 823, 828, 830, 832, 840, 844, 846, 857, 889, 906, 908, 909, 911, 945, 946, 964, 966, 971, 1063, 1081, 1083], "copi": [100, 176, 225, 260, 370, 508, 542, 550, 557, 562, 577, 583, 584, 588, 595, 647, 658, 660, 685, 690, 692, 696, 701, 705, 706, 725, 792, 840, 842, 843, 846, 886, 887, 894, 905, 1016, 1094], "move": [100, 247, 248, 250, 268, 303, 503, 549, 565, 656, 657, 658, 659, 660, 705, 707, 726, 758, 838, 845, 846, 861], "remov": [100, 241, 440, 520, 521, 603, 606, 725, 846, 849, 857, 946], "l": [100, 855, 860], "command": [100, 449, 464, 478, 756, 823, 834, 838, 855, 860, 875, 966], "22": [102, 182, 189, 194, 281, 282, 283, 297, 298, 299, 300, 340, 1103], "24": [102, 119, 123, 189, 221, 251, 271, 272, 273, 274, 293, 294, 296, 297, 298, 299, 300, 340], "ku": 102, "28": [103, 163, 180, 221, 269, 328, 340], "01": [104, 109, 213, 219, 221, 222, 223, 252, 258, 322, 332, 333, 340, 805, 806], "ws2022": [106, 107, 108], "plan": [106, 123, 232, 325], "evolut": 106, "fh": [107, 108, 112, 124, 490, 491, 492, 493, 494, 566, 567, 568, 569, 629, 811, 825, 826, 851, 958], "joanneum": [107, 108, 124], "2023": [107, 108, 109, 110, 111, 123, 250, 258, 259, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 305, 340], "question": [107, 108, 131, 202, 337, 431, 445, 490, 629, 811, 825, 826, 829, 831, 851, 937, 958, 987, 1103], "inherit": [107, 162, 202, 231, 252, 287, 290, 461, 535, 536, 537, 618, 619, 620, 623, 647, 907, 984, 992], "memori": [107, 145, 167, 193, 395, 398, 402, 404, 406, 413, 420, 519, 529, 530, 531, 557, 616, 617, 749, 762, 763, 764, 765, 791, 792, 793, 811, 815, 945, 946, 1134, 1144], "leak": [107, 519, 530, 557, 707], "ye": [108, 1089], "No": [108, 144, 183, 469, 647, 664, 710, 975, 1100, 1117], "lab": 109, "exam": [109, 110, 111, 114, 203, 216, 218, 229, 322, 337, 503, 805, 806, 807, 937, 987, 1103], "17": [109, 123, 215, 216, 218, 222, 223, 229, 246, 253, 259, 275, 276, 277, 340, 564], "ss2023": [110, 111, 114], "06": [110, 111, 203, 204, 221, 250, 281, 282, 283, 322, 340], "30": [110, 111, 161, 170, 180, 185, 232, 340], "handout": 110, "concept": [110, 111, 250, 280, 303, 663, 664, 667, 668, 669, 672, 673, 699, 812, 1083], "toolchain": [110, 111, 154, 205, 285, 301, 778, 952, 953, 958, 959, 961, 962, 963, 964, 965, 966, 967, 1132], "solv": [111, 924, 1083, 1106, 1113], "our": [112, 171, 884], "ece21": 112, "fork": [112, 123, 785], "pull": [112, 123, 454], "request": [112, 123, 431, 737, 739, 758, 760, 918], "upstream": [112, 123, 125], "sync": [112, 749], "onli": [112, 241, 267, 395, 662, 710, 751, 1045], "onc": [112, 322], "updat": [112, 123, 148], "It": [112, 146, 175, 267, 326, 395, 621, 834, 895, 908, 909, 952], "Its": [112, 989], "fetch": 112, "your": [112, 167, 260, 261, 410, 669, 824], "clone": [112, 154, 158, 171, 504], "merg": 112, "push": [112, 440], "finish": [114, 130, 139, 205, 797], "iot": 115, "boil": 115, "pot": 115, "begin": [115, 305, 343, 697], "requir": [115, 116, 117, 118, 120, 122, 209, 240, 287, 290, 324, 435, 447, 468, 471, 490, 491, 492, 496, 497, 498, 499, 500, 501, 502, 669, 905, 912, 1032, 1033, 1054, 1063, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1073], "futur": [115, 116, 117, 118, 120, 122, 331, 721], "part": [115, 116, 117, 118, 120, 122, 232, 1119], "Of": [115, 116, 117, 118, 120, 122, 267, 276, 287, 290, 432, 503, 549, 581, 582, 622, 660, 692, 697, 707, 709, 719, 725, 726, 727, 805, 806, 813, 905, 916, 940, 954, 975, 978, 998, 1094, 1100], "logger": [116, 117, 118, 454], "sink": [117, 118, 294], "column": [117, 267, 1094, 1095, 1097, 1098, 1099, 1100], "configur": [117, 147, 149, 154, 433, 839, 877, 882, 884, 919], "mqtt": [118, 231, 294, 297, 1070, 1092], "mosquitto": 118, "ws2023": [119, 123], "task": [119, 123, 328, 936], "via": [120, 123, 151, 152, 319, 884], "pwm": [120, 883], "control": [120, 240, 255, 262, 265, 275, 276, 281, 282, 454, 675, 875, 883], "05": [123, 200, 203, 234, 240, 243, 246, 249, 275, 276, 277, 279, 280, 314, 315, 322, 340], "vo": 123, "recap": [123, 191, 204, 205, 219, 252, 272, 287, 290, 294, 295, 542, 704, 952, 978], "polymorph": [123, 205, 496, 497, 498, 499, 500, 501, 502, 505, 622, 711], "collabor": 123, "necessarili": 123, "organiz": 123, "design": [123, 251, 269, 271, 272, 287, 290, 340, 357, 414, 429, 453, 457, 467, 620, 1133], "At": 123, "larg": 123, "datalogg": 123, "graz": [124, 166, 168, 175, 213, 340], "branch": [125, 377], "track": [125, 968], "submit": [125, 797, 798], "appli": [125, 146, 1100], "patch": [125, 146], "packag": [127, 130, 148, 154, 171, 252, 269, 287, 293, 315, 778, 957, 960, 983, 1031, 1103, 1104, 1105, 1106, 1107, 1108, 1112], "pypi": [127, 200, 240, 1031, 1076, 1106, 1108], "audio": [128, 132], "chip": [128, 883], "bringup": [128, 131, 884], "get": [129, 142, 172, 223, 721, 766, 791, 916], "debian": [129, 130], "kernel": [129, 130, 131, 135, 144, 146, 190, 340, 425, 742, 751, 752, 753, 754, 755, 756, 770, 772, 778, 779, 811, 814, 879, 882, 1135], "config": [129, 778], "within": 129, "qemu": 129, "extract": [129, 135, 202, 491, 1066, 1068, 1073, 1081], "boot": [129, 142, 153, 340, 814], "etc": [130, 191, 199, 202, 231, 241, 244, 277, 854, 882, 910, 1004, 1054], "yocto": [131, 135, 873], "everyth": [131, 159, 218, 437, 809, 820, 899], "like": [131, 303, 549, 931], "i2": 132, "kontron": 132, "smarc": 132, "modul": [132, 176, 200, 202, 240, 241, 253, 269, 276, 293, 294, 315, 322, 425, 440, 504, 693, 746, 751, 753, 754, 756, 757, 772, 778, 883, 983, 1073, 1076, 1084, 1103, 1111, 1119], "dirti": 133, "upgrad": 133, "path": [133, 154, 202, 212, 218, 225, 443, 729, 810, 862, 964, 969, 1063, 1119], "step": [133, 449, 452, 454, 490, 582, 675, 725, 726, 953, 954, 968, 988, 1013], "intel": 135, "bsp": 135, "improv": 136, "beginn": [136, 200, 212, 235, 240, 252, 276, 1075, 1076], "split": [136, 162, 225, 231, 314, 1022, 1081], "openshot": 137, "seo": [138, 139], "sitemap": 138, "meta": [138, 139], "stack": [139, 145, 186, 207, 402, 660], "hang": 139, "dbu": [139, 454], "stuff": [139, 322, 415, 814, 848], "extens": 140, "rest": [140, 202, 297, 904], "style": [140, 378, 429, 549, 651, 705, 723, 1021], "convert": [140, 163, 267, 994, 1072], "rst": 140, "exampl": [140, 225, 231, 235, 318, 351, 355, 390, 392, 412, 415, 451, 490, 575, 600, 651, 652, 670, 671, 672, 673, 699, 708, 802, 820, 822, 823, 871, 895, 899, 904, 907, 925, 950, 973, 988, 1008, 1018, 1021, 1022, 1023, 1024, 1045, 1087, 1095, 1100, 1110, 1111], "add": [140, 261, 441, 445, 503, 739, 786, 797, 949, 992, 1093], "miss": [140, 252, 651, 908], "past": [140, 390], "learn": [141, 262, 324, 1077, 1083], "beagleboard": 142, "how": [142, 145, 153, 175, 205, 223, 359, 398, 423, 424, 425, 559, 697, 707, 821, 834, 837, 980, 1083], "repair": 142, "nand": 142, "also": [142, 396, 809, 814, 815, 820, 821, 900, 901, 902, 904, 931, 934, 938, 940, 1019, 1083], "40w": 142, "x": [142, 205, 539], "loader": 142, "u": [142, 895], "bootabl": 142, "mmc": 142, "sd": [142, 183], "card": [142, 183, 261, 806], "port": [143, 893], "There": [143, 223, 429, 557, 713, 794, 884, 894, 899, 910, 911], "": [143, 158, 183, 371, 395, 429, 549, 641, 647, 650, 710, 742, 747, 766, 778, 794, 823, 839, 891, 939, 952, 980, 984, 1027], "alwai": [143, 223, 243, 685, 909], "better": [143, 346, 431, 788, 998, 1089], "wai": [143, 202, 223, 231, 419, 940, 984, 1003], "process": [143, 145, 164, 259, 280, 776, 777, 810, 811, 815, 816, 931, 932, 933, 936, 940], "signal": [143, 167, 405, 719, 925, 948, 949, 950, 951], "aren": 143, "t": [143, 200, 697, 1076], "queue": [143, 186, 719, 795, 926, 945, 946], "timer": [143, 786, 788, 789, 902, 936], "poll": [143, 719, 721], "event": [143, 739, 758, 768, 786, 787, 791, 919, 925, 941, 943], "dispatch": 143, "interrupt": [143, 758, 759, 760, 761, 774, 783, 919, 936], "realtim": [143, 145, 333, 337, 340, 770, 938, 939, 1125, 1134], "save": [144, 707], "solid": [144, 429], "disk": [144, 183, 809], "life": [144, 708, 921], "gentoo": [144, 778], "rant": [144, 164, 434, 954], "swap": [144, 238, 394, 710, 821, 1041], "tmpf": 144, "instanc": [144, 202, 228, 231], "syslog": 144, "var": 144, "mountpoint": 144, "logrot": 144, "o": [144, 202, 212, 218, 225, 226, 231, 238, 240, 241, 273, 277, 280, 282, 314, 351, 762, 819, 820, 821, 844, 857, 899, 900, 901, 902, 903, 904, 913, 914, 934, 1026, 1103], "schedul": [144, 280, 332, 333, 337, 811, 815, 921, 934, 935, 937, 938, 939], "ram": 144, "thing": [144, 205, 226, 247, 248, 250, 303], "left": [144, 371, 562], "why": [145, 146, 154, 223, 429, 457, 549, 552, 556, 557, 704, 710, 751, 797, 822, 876, 883, 891, 895, 920, 973, 1018], "p": 145, "suck": [145, 758], "count": [145, 706, 785, 821, 1060], "consumpt": 145, "conclus": [145, 783, 875, 883], "pthread": 145, "experi": 145, "100": 145, "default": [145, 176, 223, 225, 247, 248, 250, 303, 318, 503, 551, 553, 554, 566, 567, 568, 569, 636, 684, 705, 837, 950, 1018, 1098], "eat": 145, "limit": [145, 979], "than": [145, 510, 995], "my": [145, 148, 244, 344, 345, 431, 746, 817, 834], "could": [145, 708], "take": [145, 396, 707, 998], "doe": [145, 575, 821, 834, 837, 905, 908, 909], "differ": [145, 176, 395, 580, 582, 840, 894], "rpm": [146, 148, 173, 751], "prerequisit": [146, 154, 172, 271, 293, 297, 324, 753, 1031], "rpmbuild": 146, "directori": [146, 171, 172, 329, 431, 432, 504, 729, 805, 806, 823, 828, 829, 830, 831, 840, 841, 842, 849, 856, 857, 860, 861, 866, 894, 905, 953, 954, 973, 1110], "download": [146, 192, 194, 322, 327, 341, 507, 964, 967, 1124], "For": [146, 148, 154, 232, 235, 259, 262, 264, 265, 268, 270, 305, 340, 352, 477, 551, 562, 647, 675, 696, 721, 813, 899, 964, 965, 966, 976, 994, 1063, 1133], "domain": [147, 167, 265, 722], "subdomain": 147, "www": 147, "apex": 147, "microsoft": 148, "team": 148, "screen": [148, 870], "share": [148, 437, 442, 702, 706, 709, 726, 805, 806, 832, 945, 946, 968, 969, 1144], "x11": 148, "reviv": 148, "meh": 148, "annoy": 148, "re": [148, 975], "regist": [148, 419], "itself": 148, "autostart": 148, "browser": [148, 207], "recommend": [148, 179, 324, 1111, 1132], "deploi": 149, "gener": [149, 153, 163, 172, 176, 181, 208, 215, 218, 223, 225, 231, 250, 252, 256, 262, 265, 269, 271, 272, 276, 283, 285, 293, 294, 295, 297, 301, 380, 509, 550, 553, 557, 675, 676, 678, 679, 684, 731, 884, 891, 918, 953, 954, 978, 979, 980, 981, 982, 1007, 1046, 1059, 1132], "public": [149, 202, 444, 551, 805, 806, 830, 831, 891], "repo": [149, 171], "jfasch": [149, 835], "home": [149, 810, 840, 856, 895], "time": [149, 158, 162, 267, 435, 722, 786, 787, 815, 927, 1038], "deploy": [149, 285, 301, 437, 778, 1132], "bigbluebutton": 150, "onlin": [150, 159, 1124], "tl": 150, "dr": 150, "host": [150, 195, 778, 966], "check": [150, 445, 469, 823, 884, 925, 961, 1022, 1042], "els": [150, 218, 225, 231, 241, 271, 293, 297, 353, 377, 378, 379, 556, 571, 861, 878, 891, 975, 1011, 1014], "traunstein": 151, "zierlersteig": 151, "kaltenbachwildni": 151, "anstieg": 151, "auf": [151, 192], "zierlerberg": 151, "rinn": 151, "abstieg": 151, "grintovec": 152, "plan\u0161arsko": 152, "jezero": 152, "\u010de\u0161ka": 152, "ko\u010da": 152, "anreis": 152, "hinauf": 152, "runter": 152, "zusammenfassung": 152, "brick": 153, "1399": 153, "dell": 153, "xp": 153, "happen": 153, "virtualbox": 153, "secur": [153, 183, 259, 280, 319, 890, 894], "enrol": 153, "machin": [153, 183, 204, 262, 319, 886, 887, 912, 1077, 1083], "owner": [153, 823], "mok": 153, "pair": [153, 647, 889, 891], "stage": 153, "reboot": 153, "diagnost": [153, 882], "crosstool": [154, 965, 966], "ng": [154, 965, 966], "prebuilt": [154, 1100], "repositori": [154, 158, 336, 504, 514], "releas": [154, 434, 760, 770, 986], "glibc": 154, "version": [154, 431, 434, 437, 647, 675, 908], "gcc": [154, 406, 419, 952], "simplest": [154, 675, 680, 718, 972, 995, 1111, 1117], "stdio": 154, "h": [154, 678, 870], "iostream": 154, "distribut": [154, 1031], "afterword": [154, 655], "schulung": [156, 176], "entwicklung": 156, "beratung": 156, "richtlinien": 157, "ver\u00f6ffentlichung": 157, "kursmateri": 157, "window": [158, 195, 212, 268, 270, 342, 817], "workflow": [158, 205], "conflict": [158, 924, 986], "individu": 159, "languag": [159, 175, 205, 221, 247, 248, 250, 255, 275, 276, 281, 340, 408, 427, 687, 931, 977, 999, 1001], "qualivis": [160, 340], "z\u00fcrich": [160, 340], "2013": [160, 340, 1125], "fragen": [160, 193], "antworten": 160, "kursnotizen": 161, "2015": [161, 340], "userspac": [161, 737, 739, 791, 792, 793, 882, 883, 919], "can": [161, 182, 205, 240, 396, 448, 452, 503, 562, 647, 707, 876, 877, 878, 880], "bu": [161, 182, 454, 877, 880, 884], "driver": [161, 190, 261, 340, 755, 756, 774, 882, 1135], "beispiel": [161, 176, 235, 866], "heizungssteuerung": 161, "k\u00f6nnen": [162, 186, 199], "viel": 162, "mutabl": [162, 165, 176, 186, 193, 199, 212, 215, 223, 225, 228, 231, 238, 241, 244, 256, 263, 273, 277, 283, 295, 1016, 1018], "immut": [162, 165, 176, 193, 199, 212, 223, 228, 231, 238, 244, 253, 260, 263, 277, 560, 1016], "kann": [162, 207], "man": [162, 207, 838], "nicht": [162, 176, 186], "oft": 162, "genug": 162, "wiederholen": 162, "hart": 162, "indizieren": 162, "weich": 162, "nettfragen": 162, "shortcut": [162, 994, 1024], "objektorientiert": 162, "date": [162, 208, 267, 327], "delta": 162, "datetim": [162, 181, 202, 208, 263], "bissl": 162, "potschert": [162, 186], "schreiben": [162, 186], "scho": 162, "formen": 162, "represent": [162, 997], "__str__": [162, 992, 997], "subprocess": [162, 241], "enumer": [162, 186, 191, 193, 199, 202, 223, 231, 238, 256, 273, 295], "zip": [162, 202], "comprehens": [162, 186, 208, 215, 218, 223, 225, 231, 235, 256, 262, 263, 265, 295, 972, 978, 1023, 1103], "exec": [162, 228, 244, 252, 256, 283, 976], "eval": [162, 163, 199, 228, 238, 256, 283, 295], "umgebend": 162, "context": [162, 223, 262, 265, 269, 776, 777, 797, 973, 976], "eigen": 162, "json": [162, 184, 191, 207, 208, 218, 235, 238, 244, 252, 253, 288, 291, 1072], "individualtrain": [163, 178, 340], "tage": [163, 340], "beginnend": [163, 340], "inhalt": [163, 166, 949, 1127], "51": 163, "58": 163, "94": [163, 176], "121": 163, "famou": [163, 422], "overload": [163, 221, 231, 252, 287, 525, 551, 558, 565, 705, 995, 997], "getter": [163, 503, 559], "setter": 163, "listcomprehens": 163, "express": [163, 176, 191, 208, 215, 241, 244, 256, 373, 375, 451, 469, 483, 654, 867, 978, 1036, 1095], "global": [163, 176, 186, 244, 294, 359, 365, 386, 388, 402, 439, 532, 533, 534, 563, 564, 565, 896, 971, 1017], "scope": [163, 186, 294, 718, 721, 971, 1017], "variabl": [163, 186, 199, 202, 212, 215, 223, 231, 238, 241, 253, 273, 277, 317, 345, 359, 362, 365, 386, 388, 394, 413, 469, 533, 560, 564, 690, 719, 810, 896, 925, 926, 933, 1006, 1017, 1041], "closur": [163, 186, 252, 269, 271, 272, 287, 293, 297, 689, 971, 973, 1103], "between": [163, 568, 1081], "walkthrough": 164, "reduc": [164, 370], "eight": 164, "color": 164, "pil": 164, "numpi": [164, 166, 193, 200, 240, 243, 262, 265, 276, 282, 294, 340, 1076, 1081], "cluster": 164, "excurs": [164, 240, 689], "matplotlib": [164, 193, 212, 244, 282, 1030, 1081], "now": [164, 176], "come": [164, 200, 437, 631, 952, 1076], "let": 164, "kmean": 164, "result": [164, 423, 1088], "properti": [164, 202, 231, 443, 444, 996], "center": 164, "restor": 164, "alpha": 164, "back": [164, 600, 1072], "rgba": 164, "random": [165, 202, 235, 240, 480, 493, 501, 1096], "type": [165, 191, 215, 218, 228, 231, 238, 247, 248, 250, 252, 253, 267, 269, 287, 290, 291, 295, 303, 318, 361, 363, 364, 368, 375, 400, 410, 415, 434, 444, 553, 582, 603, 604, 647, 648, 651, 662, 664, 701, 749, 758, 853, 860, 923, 973, 975, 988, 995, 1018, 1083], "except": [165, 202, 218, 221, 228, 231, 243, 244, 252, 262, 265, 269, 270, 287, 290, 333, 525, 572, 573, 641, 690, 697, 721, 975, 1103], "demonstr": 165, "dict": [165, 215, 223, 225, 231, 238, 994], "access": [165, 204, 353, 406, 407, 551, 559, 567, 633, 729, 762, 791, 792, 793, 989, 996, 1023, 1024], "indic": [165, 193], "slice": [165, 176, 191, 202, 225, 231, 235, 256, 277, 283, 815, 1013, 1097, 1099], "protocol": [165, 176, 191, 212, 215, 218, 223, 225, 228, 231, 241, 256, 269, 273, 277, 295, 675, 875, 939, 980, 982], "standardthemen": 166, "hauptthema": 166, "numerik": 166, "lesen": [166, 186], "mat": 166, "l\u00f6sen": 166, "uni": 166, "\u00fcbung": [166, 169, 186], "propos": 167, "posix": [167, 719, 920, 929, 942, 944, 945, 946, 947], "ipc": [167, 168, 340, 942, 944, 945, 946, 947, 1144], "virtual": [167, 240, 261, 535, 536, 537, 622, 624, 625, 749, 811, 815, 877, 945, 1063, 1112, 1113, 1114, 1144], "socket": [167, 878, 901], "applic": [167, 936], "compani": 167, "thought": 167, "handgestrickt": 169, "um": 169, "fallen": 169, "lustvol": 169, "erleiden": 169, "programmier": 170, "baden": [170, 340], "w\u00fcrttemberg": [170, 340], "kursinform": 170, "kursaufbau": 170, "kursverlauf": [170, 178], "hand": 171, "privat": [171, 202, 231, 444, 551, 623, 685, 805, 806, 828, 829], "makefil": [172, 504, 746, 756, 953, 954, 968], "argh": 173, "visual": [173, 200, 216, 423, 438, 1076, 1102, 1112], "studio": [173, 200, 216, 1076, 1102, 1112], "flatpak": 173, "issu": [173, 971], "m": 173, "bei": [175, 186, 340], "firma": [175, 340], "environ": [175, 240, 248, 250, 259, 261, 268, 269, 270, 329, 810, 933, 1000, 1063, 1112, 1113, 1114, 1122], "driven": [175, 204, 229, 240, 243, 271, 272, 293, 294, 297, 340, 941, 1148], "dai": [175, 179, 180, 182, 183, 184, 194, 195, 204, 205, 210, 213, 215, 216, 219, 226, 259, 262, 265, 268, 269, 270, 271, 272, 276, 280, 282, 287, 293, 294, 297, 696, 1038, 1130], "advanc": [175, 179, 182, 191, 194, 203, 219, 229, 232, 243, 252, 255, 265, 271, 272, 273, 274, 275, 276, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 340, 408, 1075, 1076, 1138], "18": [176, 178, 204, 223, 243, 255, 256, 270, 286, 322, 340, 966, 1103], "19": [176, 178, 182, 216, 232, 321, 322, 336, 338, 340], "sy": [176, 202, 809, 1005], "multilin": [176, 208, 212, 317, 1020], "docstr": [176, 223, 235, 238, 241, 263, 295, 317], "datentypen": [176, 186, 193, 206, 222, 234], "ausflug": [176, 225], "variablen": [176, 186, 193, 206, 222, 225, 234, 244], "deren": 176, "unterbau": 176, "zuweisung": 176, "mit": [176, 186, 191, 204, 340, 866, 1125, 1141], "hilf": 176, "tupl": [176, 181, 186, 191, 193, 199, 202, 212, 215, 218, 223, 225, 231, 235, 238, 241, 247, 248, 250, 253, 256, 263, 273, 277, 303, 316, 317, 647, 696, 701, 1008, 1016, 1084], "unpack": [176, 181, 186, 191, 193, 202, 218, 223, 235, 241, 247, 248, 250, 253, 263, 303, 316, 317, 647, 696, 964, 1084], "unendlich": 176, "breit": 176, "divis": [176, 186], "floor": [176, 186], "konvertierung": 176, "konstruktoren": [176, 193], "welchen": 176, "typ": [176, 186], "typen": 176, "besser": 176, "laufzeitverhalten": [176, 186], "geeigneter": 176, "datenstrukturen": [176, 186, 187, 207, 225, 1140], "boolean": [176, 186, 212, 215, 223, 225, 231, 235, 238, 367, 451, 1009, 1036, 1095], "short": [176, 215, 231, 367, 461, 758], "circuit": [176, 215, 231, 367], "evalu": [176, 215, 231], "warum": [176, 186], "sind": [176, 186], "mehr": [176, 191], "rang": [176, 181, 186, 193, 202, 208, 212, 215, 223, 225, 228, 235, 238, 241, 247, 248, 250, 253, 263, 277, 283, 294, 303, 581, 582, 647, 675, 695, 696, 697, 698, 699, 700, 978, 1015, 1030], "foli": 176, "161": 176, "shallow": [176, 225, 1016], "deep": [176, 225, 1016], "dem": [176, 1141], "deepcopi": 176, "funktionen": [176, 186, 187, 191, 1140], "first": [123, 176, 205, 344, 494, 710, 739, 740, 774, 1112], "gotcha": [176, 756, 786, 940], "paramet": [176, 223, 225, 269, 318, 357, 393, 396, 399, 413, 431, 435, 660, 664, 699, 710, 778, 908, 953, 1018, 1088], "90": 176, "ff": 176, "lokal": [176, 186, 244], "92": 176, "uniq": [176, 1058, 1059], "punkt": [176, 186], "zusammengefasst": 176, "hier": 176, "sch\u00f6nere": 176, "al": [176, 186, 235], "comprens": 176, "125": 176, "lesbarkeit": 176, "perform": [176, 199, 421, 697], "review": [176, 205], "pprint": 176, "praktisch": 176, "debug": [176, 434, 776, 974], "datentransform": 176, "127ff": 176, "complet": [176, 525, 838], "collect": [176, 225, 228, 253, 952, 994, 1094, 1108], "namedtupl": [176, 994], "parameter\u00fcbergab": [176, 186], "variabel": 176, "lang": 176, "argumentlisten": 176, "erst": 176, "klass": 176, "weiterf\u00fchrend": [178, 200], "workspac": [179, 180, 182, 184], "core": [179, 216, 259, 953], "special": [179, 862], "tutori": [179, 182, 194, 200, 210, 240, 243, 276, 1076], "parti": [179, 210], "v": [181, 186, 193, 199, 202, 223, 228, 231, 235, 238, 244, 260, 263, 273, 277, 288, 316, 317, 355, 364, 376, 379, 383, 385, 434, 437, 544, 545, 546, 560, 706, 714, 756, 776, 777, 783, 784, 898, 934, 1004, 1007, 1015, 1026, 1105], "return": [181, 244, 399, 657, 658, 660, 675], "orient": [181, 231, 244, 252, 255, 256, 269, 271, 272, 275, 276, 281, 287, 290, 293, 294, 297, 310, 429, 549, 620, 991, 1103], "addit": [182, 549, 565, 627, 992], "brought": 182, "thoma": 182, "cloud": [183, 319], "particip": 183, "desk": 183, "interlud": [183, 758], "bloodi": 183, "wild": [183, 232, 287, 290, 293], "watchdog": 183, "support": [183, 195, 650, 774], "25": [184, 194, 203, 210, 221, 226, 237, 279, 280, 287, 288, 289, 292, 340], "grundlegend": [186, 187, 1140], "sprachelement": [186, 187, 1140], "syntax": [186, 193, 199, 231, 241, 263, 277, 317, 690, 699, 1004], "semantik": 186, "einr\u00fcckung": 186, "ihren": 186, "\u00e4ndern": 186, "kommentar": 186, "sprach": 186, "standarddatentypen": 186, "elementar": [186, 187, 1140], "beliebig": 186, "gro\u00df": 186, "vergleichsoperatoren": 186, "pr\u00e4zedenz": 186, "vor": 186, "strichrechnung": 186, "modulo": 186, "un\u00e4rer": 186, "negat": [186, 1095], "erzwingen": 186, "auch": 186, "zeichenketten": 186, "raw": [186, 193, 208, 212, 225, 231, 253, 283, 989, 1020, 1071], "f": [186, 208, 223, 241, 283, 1021], "konvertierungen": 186, "pr\u00e4zendenzregeln": 186, "literal": 186, "primit": [186, 713, 978], "konstanten": 186, "operatoren": 186, "ausdr\u00fcck": 186, "operatorrangfolgen": 186, "\u00fcbungen": [186, 1124], "zwei": 186, "vertauschen": 186, "kontrollstrukturen": [186, 187, 206, 222, 223, 234, 1140], "anweisungen": 186, "folgen": 186, "bedingungen": 186, "verzweigungen": 186, "bedingt": 186, "anweisung": 186, "verzweigung": [186, 187, 1140], "geschachtelt": 186, "mehrfach": 186, "fallauswahl": 186, "schleifen": [186, 187, 1140], "z\u00e4hlergesteuert": 186, "kopfgesteuert": 186, "schleif": [186, 191], "fu\u00dfgesteuert": 186, "jf": 186, "continu": [186, 221, 223, 262, 270, 272, 294, 382, 1011, 1014], "sequenti": [186, 191, 223, 235, 589, 590, 597, 598, 978, 1012], "schnell\u00fcbersicht": 186, "sprunganweisungen": 186, "endlosschleifen": 186, "ben\u00f6tigt": 186, "Suche": 186, "eindimensional": 186, "record": [186, 1070, 1072], "tupel": 186, "listen": [186, 191, 225, 317], "sort": [186, 238, 508, 587, 592, 593, 596, 1098], "revers": [186, 594, 595, 612, 613, 614, 995], "stapel": 186, "schlangen": 186, "versuch": 186, "zur\u00fcck": 186, "hybrid": 186, "supergscheit": 186, "methoden": [186, 187, 1140], "prozeduren": [186, 187, 1140], "funktionspoint": 186, "so": [186, 199, 202, 212, 244, 268, 429, 549, 647, 660, 662, 689, 1097], "heisst": [186, 191], "funktionsobjekt": 186, "primzahlenbeispiel": 186, "funktion": 186, "laufzeitfehl": 186, "existiert": 186, "zuweisen": 186, "fehlerfal": 186, "peter": 186, "unterprogramm": 186, "wert": 186, "referenzen": 186, "r\u00fcckgabewert": 186, "oder": [186, 323, 1125], "inner": [186, 971], "standardbibliotheken": 186, "built": [186, 269, 553, 651, 756, 975], "funktionalit\u00e4ten": 186, "struktur": 187, "herdt": [187, 1140], "kapitel": [187, 1140], "ganz": [191, 223], "kurz": 191, "mehreren": 191, "returnwerten": 191, "bzw": [191, 323], "containerdatentypen": 191, "untypisiert": 191, "l\u00f6schen": 191, "begriff": 191, "zufal": 191, "regular": [191, 204, 205, 241, 244, 256, 867], "hallo": 193, "speicher": 193, "sch\u00fctze": 193, "ich": 193, "davor": 193, "aber": 193, "gemischten": 193, "wiederholung": [193, 228], "objektidentit\u00e4t": 193, "statement": [193, 202, 376, 390, 971, 973, 986, 1004, 1010, 1088, 1091], "operationen": 193, "verloren": 193, "interpol": 193, "mittel": [193, 199], "scipi": 193, "shell": [195, 259, 280, 319, 340, 810, 821, 823, 839, 851, 852, 858, 890, 907, 916, 931, 1126], "script": [195, 280, 340, 885, 916, 983, 1002, 1126], "29": [195, 269, 322, 330, 340], "assign": [199, 225, 231, 238, 317, 372, 469, 550, 556, 557, 657, 658, 660, 705, 971, 1006, 1013, 1017, 1093], "fun": [199, 238, 252, 1006], "arithmet": [199, 204, 223, 235, 317, 345, 366, 395, 469, 483, 542, 565, 578, 579, 583, 586, 995, 1007], "complex": [199, 238, 317, 1122], "nur": 199, "sum": [199, 631], "weiter": 199, "dynamisch": 199, "evaluierung": 199, "scienc": [200, 226, 240, 243, 276, 293, 294, 295, 297, 1076], "don": [200, 697, 1076], "batteri": [200, 317, 1022, 1076], "confer": [200, 276, 1076], "talk": [200, 276, 876, 882, 883, 1076], "zipfil": 202, "One": [202, 241, 267, 314, 371, 390, 429, 431, 564, 697, 710, 791, 876, 894, 927, 952, 968], "member": [202, 231, 551, 556, 557, 559, 564, 633, 634, 651], "attribut": [202, 228, 244, 303, 815, 918, 989, 996, 1101], "protect": [202, 623, 697, 768], "posit": [202, 549, 969, 998, 1028], "keyword": [202, 223, 247, 248, 250, 303, 318, 412, 413, 971, 998, 1018], "argument": [202, 223, 231, 252, 287, 318, 396, 905, 931, 974, 998, 1005, 1018, 1028], "mix": [202, 215, 283, 690, 1052, 1053], "yield": [202, 218, 223, 241, 269, 283, 978, 981], "filter": [202, 231, 260, 261, 267, 295, 509, 510, 511, 697, 1095], "nonetyp": [202, 215], "none": [202, 223], "recurs": [202, 398, 557, 654, 729, 840], "fibonacci": [202, 675, 677, 979, 1046], "sever": 202, "same": [202, 533, 558, 564, 689, 1017, 1111], "oserror": 202, "errno": [202, 896], "platform": [202, 882], "assert": [202, 244, 295], "assertionerror": 202, "27": [203, 221, 237, 287, 288, 289, 292, 301, 302, 340], "predefin": [203, 390, 1122], "stream": [203, 749, 820, 1026], "pcap": [203, 216, 218, 229, 1103], "syllabu": [203, 216, 1103], "programmieren": [204, 340], "tool": [204, 277, 280, 295, 324, 803, 868, 871, 882, 1137], "massacr": 204, "group": [204, 205, 219, 252, 259, 271, 272, 287, 290, 293, 294, 297, 328, 360, 375, 384, 391, 397, 401, 404, 408, 417, 421, 426, 427, 547, 555, 570, 573, 576, 617, 626, 645, 687, 688, 712, 720, 724, 728, 730, 815, 823, 832, 872, 880, 881, 935], "kick": 204, "encapsul": [204, 415, 555, 721], "flow": [204, 234, 240, 255, 262, 265, 275, 276, 281, 282, 384], "pointer": [204, 205, 221, 247, 248, 250, 268, 270, 303, 392, 393, 395, 397, 413, 525, 542, 557, 561, 562, 578, 579, 580, 582, 583, 586, 606, 647, 662, 702, 703, 704, 705, 707], "standard": [204, 216, 221, 225, 240, 268, 270, 276, 363, 410, 434, 512, 572, 582, 615, 626, 628, 655, 820, 904, 1026, 1076, 1119], "librari": [204, 216, 221, 240, 268, 270, 276, 357, 432, 437, 438, 442, 512, 572, 582, 615, 626, 655, 898, 969, 970, 1076, 1144], "stl": [204, 525, 541, 542, 543, 574, 582, 583, 611], "07": [205, 221, 252, 285, 286, 322, 326, 340], "kid": 205, "recapitul": 205, "some": [205, 223, 228, 267, 270, 280, 690, 721], "jump": [205, 395], "complic": [205, 474, 968], "Be": [205, 448, 452, 453, 557, 562, 616, 708, 713], "toolbox": 205, "databas": [205, 297, 632, 756, 1032, 1034, 1069, 1085, 1086, 1088], "gtest": [205, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123], "smart": [205, 221, 247, 248, 250, 270, 303, 525, 702, 703, 704, 705], "datenbank": 207, "showcas": 207, "full": 207, "kommt": 207, "db": 207, "aufgab": 207, "formulieren": 207, "damit": 207, "dies": 207, "http": [207, 295], "verbindung": 207, "client": [207, 485, 1092], "schicken": 207, "jetzt": 207, "schickman": 207, "weg": 207, "vom": [207, 340], "server": [207, 1092], "php": 207, "j": 207, "empfangen": 207, "nun": 207, "muessen": 207, "verwandlen": 207, "liter": [208, 317, 469, 721, 722], "quot": [208, 212, 238, 1084], "friend": [208, 717], "sinc": [208, 241, 247, 248, 250, 303, 564, 1021], "pars": [208, 1005, 1028, 1054], "sap": [209, 262, 264, 265, 266, 267, 306, 340], "export": 209, "solut": [209, 387, 409, 432, 441, 447, 448, 449, 452, 453, 458, 467, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 557, 584, 614, 651, 653, 660, 684, 685, 694, 815, 834, 893, 895, 899, 968, 970, 986, 1113], "terminologi": [212, 280, 812, 950, 1083], "31": [213, 221, 229, 340], "numer": 213, "ai": 213, "mountain": 213, "io": [215, 231, 259, 263, 418, 762, 763, 818, 918], "common": [215, 419, 431, 597, 979, 988], "wtf": [215, 902, 950], "creativ": [218, 804, 992], "shift": [218, 371, 565], "sampl": [218, 710, 780, 835, 1033, 1054, 1075, 1103, 1110, 1135], "hmmm": 219, "02": [221, 226, 240, 259, 334, 340, 817], "undefin": [221, 1017], "behavior": [221, 699], "again": [221, 269, 280, 559, 646, 858, 995, 1126], "26": [221, 251, 258, 271, 272, 273, 274, 293, 294, 296, 322, 340], "repeat": [221, 850], "quickli": 221, "algorithm": [221, 238, 262, 270, 303, 395, 508, 525, 542, 577, 578, 582, 583, 592, 596, 1081, 1083], "functor": [221, 525, 590, 689, 691, 692, 710], "unifi": 221, "model": [221, 1081, 1083], "uml": [221, 461], "todai": [221, 971], "associ": [221, 374, 461, 601, 602], "dynam": [221, 252, 271, 272, 273, 293, 297, 303, 402, 529, 530, 531, 583, 616, 617, 734, 764, 765, 969, 989, 998], "alloc": [221, 419, 539, 584, 609, 610, 617, 749, 772, 914, 978], "week": 221, "zahl": 223, "miscellanea": 223, "brace": [223, 247, 248, 250, 303, 649, 650, 651, 652, 1095], "singl": [223, 432, 457, 894, 952, 1117], "hour_of_dai": 223, "membership": [223, 1012], "best": 223, "intro": [225, 259, 322, 541, 542, 543, 918, 972], "doc": [225, 295], "ident": [225, 288], "datenypen": 225, "libarari": 225, "chainmap": 225, "dequ": 225, "suchalgorithmen": 225, "pitfal": [225, 268, 271, 318, 553, 622, 647, 675, 692], "fromkei": [225, 238], "join": [225, 231, 1022, 1049], "lstrip": [225, 314], "rstrip": [225, 314], "sequentiel": 228, "konstant": 228, "suchzeit": 228, "metaprogram": 228, "everywher": [228, 244, 557, 976], "defaultdict": [228, 253], "hello": [231, 241, 344, 679, 756, 757, 1002], "world": [231, 344, 351, 756, 757, 1002], "blahblah": [231, 235, 238, 241, 582, 1001], "commandlin": [231, 259, 297, 308, 313, 396, 424, 431, 838, 893, 916, 950, 1005, 1028], "lifetim": [231, 359, 388, 692, 706, 714, 1085], "preview": [231, 442], "explicit": [231, 353, 549, 561, 652, 690, 692, 705, 718, 986], "max": 231, "iteratoren": 231, "generatoren": 231, "ordereddict": 231, "duck": [231, 247, 248, 250, 287, 290, 303, 988], "resolut": 231, "order": [231, 533, 975, 995], "mro": 231, "super": 231, "__bases__": 231, "__mro__": 231, "self": [231, 557, 990], "call": [231, 389, 393, 419, 423, 425, 525, 781, 898, 904, 933, 939, 998], "mangl": [231, 558], "udemi": 231, "claus": [231, 271, 293, 297, 975], "lambda": [231, 247, 248, 250, 277, 303, 647, 688, 689, 690, 691, 710, 1103], "oppos": 231, "20": [232, 246, 250, 268, 270, 281, 282, 283, 303, 314, 322, 340, 966], "discuss": [234, 271, 272, 328, 353, 355, 719, 781, 786, 794], "chart": 234, "interact": [235, 283, 1002, 1053], "1st": 235, "explan": [235, 295], "preced": [235, 238, 374, 1007], "float": [235, 238, 295, 1007], "einschub": 235, "vergleich": 235, "filterketten": 235, "zen": 235, "datensatz": 235, "notat": 235, "letzt": 235, "letzten": 235, "infinit": [238, 979], "long": [238, 647], "comparison": [238, 549, 596, 729, 803, 995, 1007], "digit": [238, 322, 1043], "english": [238, 324, 1043], "determin": [238, 824, 1040, 1050, 1051], "maximum": [238, 1040, 1050, 1051], "two": [238, 394, 487, 488, 549, 568, 652, 946, 1040, 1041, 1050, 1051], "out": [238, 271, 272, 454, 552, 581, 582, 940, 954, 971, 1013], "duplic": [238, 432, 574, 907], "encod": [238, 240, 241, 252, 262, 282, 283, 322, 1089], "nest": [241, 385, 398], "itertool": 241, "chain": [241, 781], "destructor": [241, 533, 539, 554, 619, 624, 704], "prient": 243, "next": [243, 418, 683, 1117], "standesregist": 243, "sqlite3": [243, 435, 1032, 1088], "xml": [243, 1101], "tree": [243, 751, 778, 816, 842, 849, 887, 894, 933], "projektabschlusstag": 243, "id": [244, 272, 815, 835, 895, 921, 933, 1125], "anyth": 244, "defin": [244, 441, 553, 690, 975], "own": [244, 431, 659, 669, 815], "lookup": [244, 517, 518], "vorbesprechung": 246, "legend": 246, "neuerungen": 246, "seit": 246, "2011": [246, 247, 248, 250, 340], "ausblick": 246, "thank": [247, 248, 250, 303], "you": [247, 248, 250, 303, 662], "readablil": [247, 248, 250, 303], "writabl": [247, 248, 250, 303, 905], "err": [247, 248, 250, 303, 606, 696], "bind": [247, 248, 250, 303, 696, 701, 709, 710, 1088], "auto": [247, 248, 250, 303, 647, 662, 695, 696, 925, 1111], "without": [247, 248, 250, 303, 563, 584, 658, 914], "simpli": [247, 248, 250, 303, 895], "deserv": [247, 248, 250, 303], "ag": [247, 248, 250, 303, 637], "overrid": [247, 248, 250, 303, 694], "delet": [247, 248, 250, 303, 530, 599, 685, 838], "strongli": [247, 248, 250, 303, 648], "enum": [247, 248, 250, 303, 411, 648, 746], "deleg": [247, 248, 250, 303, 653], "nullptr": [247, 248, 250, 303, 661], "rvalu": [247, 248, 250, 656, 659, 660], "skeleton": [248, 250, 268, 270, 567, 805, 806], "perfect": [250, 369, 411, 709], "view": [250, 650, 697, 699, 700, 742, 804], "architectur": [251, 340, 429, 647, 686, 778], "pattern": [251, 269, 271, 272, 340, 453, 467, 979, 1133], "mondai": 251, "tuesdai": 251, "wednesdai": 251, "forc": [252, 368], "front": [252, 271, 293, 989], "seri": [252, 255, 275, 276, 281, 282, 525, 1062, 1069, 1094], "piec": 252, "go": [252, 907, 1084], "kickoff": [252, 271, 272, 287, 290, 294, 297], "livehack": [252, 261, 431, 454, 656, 741, 1017, 1105, 1112], "Such": [253, 627, 660], "noob": 255, "wsl": [259, 268, 270, 817, 966], "quick": 259, "permiss": [259, 280, 823, 825, 826, 827, 833, 837, 856, 887], "uart": [259, 809], "susi": 259, "untold": [259, 262, 268, 269, 272], "whet": [260, 261], "appetit": [260, 261], "panda": [260, 262, 263, 265, 267, 269, 282, 294, 1081, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100], "regex": 260, "pipelin": 261, "categori": 261, "payment": 261, "select": [261, 267, 269, 875, 882, 942, 1094, 1095, 1097, 1099, 1117], "uncategor": 261, "dataset": [262, 266, 267, 1080, 1082], "origin": [262, 265, 574, 691, 692, 788, 1084], "automat": [262, 265, 285, 301, 365, 388, 684, 1132], "cleanup": [262, 265, 786, 797], "conversiosn": 263, "outlook": [265, 303], "specif": [265, 927, 1064], "usecas": 267, "drop": [267, 449, 697], "nan": 267, "datafram": [267, 1081, 1094, 1098], "isna": 267, "to_datetim": 267, "dated": 267, "workabl": 267, "usag": [267, 272, 398, 402, 425, 441, 445, 490, 505, 551, 588, 589, 595, 622, 650, 654, 662, 706, 707, 708, 737, 781, 821, 860, 877, 884, 908, 952, 1030], "modifi": [267, 406, 413, 490, 924, 986, 1016, 1100], "increas": 267, "price": 267, "particular": 267, "store": [267, 406, 454, 924, 986], "readabl": [267, 409, 721, 910], "combin": [267, 372, 468, 469, 482], "prefer": [268, 270], "ubuntu": [268, 270, 966], "under": [268, 270, 840, 900, 973], "unsupport": 268, "heavi": [268, 270, 814], "weight": [268, 270], "resourc": [268, 324, 557, 617, 705, 718, 774], "r": [268, 857, 894], "littl": [268, 380, 431, 1001], "concurr": 268, "far": [268, 714, 1083], "fact": [269, 760, 822, 989, 992], "fixtur": [269, 506, 729, 1110, 1111, 1121, 1122, 1123], "omin": [269, 974], "warm": 270, "resolv": 270, "cont": 270, "d": [270, 454], "insid": [271, 272, 559, 564, 659, 660], "construct": [271, 293, 297, 994, 1011], "emphasi": [271, 293, 297], "recoveri": [271, 272, 293, 294, 297], "broader": 271, "sens": 271, "morn": [272, 276, 280, 282, 294], "pytest": [272, 1109, 1110], "awaken": 276, "bash": [280, 340, 858, 1126], "bourn": [280, 858, 1126], "inspect": [280, 865, 868], "wakeup": [280, 282, 938, 940], "redirect": [280, 818, 819, 820, 821, 844, 857, 907], "pipe": [280, 699, 804, 818, 819, 821, 822, 869, 871], "archiv": [280, 800, 801, 803, 804, 966, 967, 970], "compress": [280, 800, 801, 803, 804], "network": [280, 471, 772, 773, 876, 901, 1147], "least": [280, 1117], "day2": 282, "interpret": [283, 423, 455, 468, 469, 482, 483, 1053], "len": 283, "abl": 283, "callabl": [283, 710], "summer": [287, 290, 325], "sandbox": [287, 290], "equal": [288, 503, 549, 565, 566, 567, 568, 569, 589, 995], "spoiler": 290, "annot": 291, "multiprocess": 293, "idea": 293, "veri": [294, 694, 1101], "leftov": 294, "yesterdai": 294, "ifi": 294, "toolcas": [294, 303, 665, 666, 667], "arg": [294, 974], "kwarg": [294, 974], "includ": [294, 389, 443, 1022], "receiv": [294, 946], "udp": 294, "datagram": [294, 876], "compositesink": 294, "timestamp": [294, 786], "org": [295, 322], "aaarghhh": 295, "expresss": 295, "constexpr": [303, 654], "constinit": 303, "constev": 303, "semant": [303, 656, 657, 658, 659, 660, 946], "erasur": 303, "versu": [303, 969], "static": [303, 388, 412, 503, 563, 564, 968, 969, 970, 993], "checker": 307, "blinklicht": [308, 309, 310, 311], "electron": [308, 875], "aspect": 308, "circuitri": 308, "header": [308, 387, 433, 439, 564, 882, 1065], "pinout": [308, 882], "unittest": [311, 1111, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1148], "ece19": 312, "g2": [314, 806], "big": [314, 340, 766], "swoop": 314, "size": [314, 363, 522, 672, 854], "chunk": 314, "line": [314, 358, 390, 552, 821, 838, 1004, 1045, 1056, 1060], "str": [314, 997], "byte": 316, "btw": 317, "wertebereich": 317, "sidenot": [318, 1018], "pure": [318, 622, 624, 1018], "beauti": [318, 425, 809, 884, 1018], "login": [319, 813, 885], "formalit\u00e4ten": 320, "ec": [321, 336, 338, 805, 806], "daili": 322, "pass": [322, 562], "fail": [322, 909, 1110, 1117, 1119], "reiter": 322, "argpars": [322, 1005, 1028], "deutsch": [323, 340], "lehrinhalt": 323, "lernergebniss": 323, "lv": 323, "empfohlen": [323, 1126, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "verpflichtend": 323, "fachliteratur": 323, "lernressourcen": 323, "instrument": 323, "art": 323, "vermittlung": 323, "voraussetzungen": 323, "begleitbedingungen": 323, "pr\u00fcfungsmethod": 323, "beurteilungskriterien": 323, "mode": [324, 434, 823, 875, 908, 1002, 1026], "deliveri": [324, 949, 950], "co": 324, "requisit": 324, "assess": 324, "criteria": [324, 934], "whose": 326, "fault": 326, "newcom": 327, "jjjj": 330, "sidewai": [331, 564, 710, 721, 974, 979], "bisher": 340, "gehalten": 340, "entwickl": 340, "fortgeschritten": [340, 1128], "wiener": 340, "neustadt": 340, "einf\u00fchrung": [340, 1127, 1129, 1136], "ober\u00f6sterreich": 340, "pictur": [340, 766], "obersteiermark": 340, "korn": 340, "salzburg": 340, "ausgew\u00e4hlt": 340, "themen": 340, "2018": 340, "raum": 340, "n\u00fcrnberg": 340, "oberb\u00fcren": 340, "schweiz": 340, "2017": 340, "m\u00fcnchen": [340, 1125], "lowlevel": 340, "refresh": 340, "programmiererstandpunkt": 340, "2016": 340, "wien": 340, "workshop": 340, "bodenseo": 340, "hemmenhofen": 340, "bodense": 340, "systemnah": 340, "2014": 340, "mathia": 340, "kettner": 340, "siemen": 340, "braunschweig": 340, "intermedi": [340, 480, 971, 988], "scratch": [340, 1125], "lpd": 340, "hannov": 340, "unter": 340, "k\u00f6ln": 340, "projektverwaltung": 340, "subvers": [340, 1142], "lka": 340, "niedersachsen": 340, "konfigur": 340, "gnu": [340, 423, 952, 1137], "make": [340, 437, 504, 646, 685, 762, 805, 806, 953, 954, 1137], "2012": 340, "hamburg": 340, "fehlerdiagnos": 340, "polizei": 340, "stia": 340, "admont": 340, "bi": 340, "2010": 340, "softwareentwicklung": 340, "darmstadt": 340, "ulm": 340, "bundeswehr": 340, "wildflecken": 340, "cool": [343, 1021], "gui": 343, "Their": [343, 363], "hobbi": 343, "histori": [343, 548, 646, 742, 946, 971, 1001, 1080], "second": [345, 347], "fahrenheit": [346, 348, 350, 477], "tabl": [346, 348, 350, 503, 995], "simplif": 347, "constant": [349, 364, 389, 419, 480], "preprocessor": [349, 389, 390], "macro": [350, 389, 390, 439, 737, 758], "outsid": 351, "cat": [351, 863], "poor": [351, 352], "wc": 352, "definit": [353, 355, 357, 365, 383, 385, 386, 389, 441, 564, 647, 737, 938, 1015], "memset": 353, "histogram": 354, "nonsens": 355, "signatur": 355, "declar": [355, 356, 385, 386, 387, 564], "mistak": 357, "stdin": [358, 871, 885], "variant": [363, 452, 458, 647, 723, 946], "qualifi": 363, "width": [363, 395, 569, 582, 883, 1013], "escap": [364, 1020], "logic": 367, "implicit": [368, 707], "sign": 368, "truncat": [368, 914], "propag": 368, "unsign": 368, "compil": [368, 385, 390, 406, 407, 432, 433, 434, 550, 553, 557, 686, 707, 758, 778, 952, 955, 964, 968], "warn": [368, 374, 390, 928, 950], "cast": 368, "increment": [369, 582, 675, 986], "decrement": [369, 582], "confus": [369, 1007, 1095], "manipul": [371, 707, 914, 950], "bitwis": [371, 1095], "AND": 371, "OR": 371, "xor": 371, "right": [371, 1057], "invert": [371, 1094], "complement": 371, "summari": [374, 549, 710, 778, 804, 969, 989, 1097, 1099], "true": [377, 452, 562, 1098], "fals": 377, "truth": 377, "option": [377, 424, 439, 440, 441, 804, 838, 840, 860, 867, 882, 894, 1084], "matter": 378, "distinct": 379, "purpos": [380, 918], "closer": 380, "comma": 380, "infam": 380, "idiom": 380, "bodi": 381, "goto": 383, "label": [383, 1099], "monolith": [385, 432, 454, 507], "separ": [385, 386, 432, 454, 719, 862, 968], "visibl": [388, 412], "replac": [389, 492], "inlin": [389, 419, 552, 564], "guard": 389, "rule": [390, 429, 550, 553, 564, 652, 660, 697, 816], "span": 390, "stringif": [390, 997], "token": 390, "address": [392, 749, 792, 815, 882, 936, 1095], "arbitrari": [395, 582, 974, 998], "see": [396, 809, 814, 815, 820, 821, 900, 901, 902, 904, 931, 934, 938, 940, 1019, 1083], "struct": [398, 399, 414, 549, 638, 701], "typedef": 400, "alia": 400, "singli": 403, "volatil": [405, 839], "lie": 405, "valid": 405, "handler": [405, 949, 950], "intrins": 406, "atom": [406, 716, 721, 776, 777, 781, 782, 797, 923], "builtin": 406, "align": 407, "unalign": 407, "pad": 407, "saniti": [409, 417, 431], "readabilti": 409, "shoot": 409, "offens": 409, "unobvi": 409, "ambigu": [409, 415, 652], "smell": 409, "know": 410, "size_t": 410, "discret": 411, "tradit": [411, 429, 998], "approach": [411, 439, 440, 441], "wishlist": 411, "close": [411, 457, 702, 946], "somewhat": 412, "contriv": 412, "hoorai": 412, "correct": [413, 560, 694], "const": [413, 522, 539, 559, 560, 562, 634, 635, 647, 662, 696, 701], "non": [413, 496, 497, 498, 499, 500, 501, 502, 539, 559, 1117], "good": [414, 439, 440, 549, 564, 582, 651, 660, 669, 670, 697, 699], "old": [414, 564, 582, 647, 660, 669, 670, 699], "c99": 414, "explict": 415, "safeti": [415, 431], "scheme": 415, "artifici": [415, 1077], "valgrind": [416, 530], "action": [416, 950], "optim": [418, 419, 420], "bound": [418, 419, 530, 934], "unnecessari": 419, "peephol": 419, "subexpress": 419, "elimin": [419, 707, 1045], "strength": 419, "reduct": 419, "fold": 419, "invari": 419, "unrol": 419, "tail": [419, 869], "cpu": [419, 815, 934, 940], "cach": [420, 441, 697], "multidimension": 420, "thrash": 420, "profil": [422, 423, 425, 426], "donald": 422, "knuth": 422, "toni": 422, "hoar": 422, "larri": 422, "wall": 422, "practic": 422, "brian": 422, "w": 422, "kernighan": 422, "rob": 422, "pike": 422, "gprof": 423, "flat": 423, "callgrind": 424, "analysi": 424, "per": [424, 746, 786, 1122], "kcachegrind": 424, "oprofil": 425, "much": [425, 440, 691, 973], "wide": 425, "offlin": 425, "graphic": 425, "accomplish": 429, "disclaim": [429, 817], "principl": [429, 457], "yagni": 429, "uncl": 430, "bob": 430, "typic": [431, 816, 920, 936], "bookkeep": 431, "effort": 431, "spaghetti": 431, "concaten": [431, 1093], "input": [431, 820, 978, 1081], "yyyi": 431, "mm": 431, "where": [431, 437, 814, 952], "testabl": 431, "explicitli": [431, 690, 707], "categor": 431, "net": 431, "place": [431, 508, 553, 594, 805, 806, 1016], "overengin": [431, 564], "boilerpl": [432, 691, 774], "execut": [432, 438, 823, 969, 975, 983, 1003, 1052, 1117, 1119], "consist": [432, 749], "paus": 434, "diagram": 434, "cmake_build_typ": 434, "k": [434, 1078], "printf": [434, 551], "popular": [434, 810], "find_packag": 435, "prefix": [437, 974], "target": [437, 438, 440, 443, 444, 506, 912, 953, 1132], "runpath": 437, "abi": 437, "blacklist": [439, 440], "flag": [439, 628, 764, 904, 1021], "libhello": 439, "bad": [439, 440, 697, 747], "target_compile_definit": 440, "backlist": 440, "availablil": 440, "use_blacklist": 441, "normal": 442, "subdirectori": 443, "reorgan": 443, "i2c": [447, 882, 884], "subhierarchi": 447, "instanti": [447, 454, 603, 664, 744], "adapt": [448, 454, 463, 468, 470, 477, 482, 710], "must": [448, 911], "adapte": 448, "asensor": 448, "real": [448, 556, 647, 708, 835], "measur": [448, 491, 722, 938, 940], "motiv": [449, 452, 468, 469, 565, 648, 651, 653, 662, 664, 689, 695, 798, 980, 990, 996], "insert": [449, 515, 516, 599, 600, 603, 604, 605, 639, 709, 725, 726, 766], "bulk": 449, "6a": 449, "initializer_list": [449, 650, 652], "socialdb": 450, "composit": [451, 461, 465, 479, 729], "filesystem": [451, 729, 946], "thermomet": [451, 471, 472, 485, 486, 505], "aggreg": [452, 461, 651], "conret": 452, "realiz": 452, "situat": [452, 895], "constantsensor": 452, "decoratedconstantsensor": 452, "randomsensor": [452, 493], "decoratedrandomsensor": 452, "verifi": [452, 850, 884, 886, 1081], "still": [452, 647, 973, 978], "hold": [452, 994], "studi": [454, 695, 696, 963], "heat": 454, "dbuslogg": 454, "dbusvaluestor": 454, "either": 454, "stop": [454, 705], "help": [454, 838, 870, 1105, 1112], "observ": [456, 484, 980], "which": [457, 911, 952], "liskov": 457, "substitut": [457, 562], "segreg": 457, "invers": [457, 939], "proxi": [458, 468, 471, 472, 482, 485, 486], "foundat": 459, "hierarchi": [459, 572, 816, 975], "hypothet": [459, 995], "singleton": [460, 473, 474, 475, 487, 488, 489], "connector": 461, "uniniti": [469, 562], "round": [123, 472, 486], "flexibl": [473, 474, 487, 488], "strict": [474, 488], "inflex": [475, 489], "i2csensorfactori": 476, "concret": [476, 487, 488], "i2csensorfactory_vendor1": 476, "stub": [485, 785], "socialinsur": [487, 488], "oegk": [487, 488], "sv": [487, 488], "introduc": [490, 551, 697], "relationship": [490, 624, 625, 1081], "onewir": [490, 506, 507, 884, 912], "firstnam": 490, "lastnam": [490, 640, 642], "w1sensor": [490, 507], "answer": [490, 689], "try": [494, 572, 705, 975], "ledstripedisplay_nopoli": 496, "cover": [496, 497, 498, 499, 500, 501, 502, 505], "hysteresis_nopoli": 497, "averagingsensor_nopoli": 498, "constantsensor_nopoli": 499, "mocksensor_nopoli": 500, "randomsensor_nopoli": 501, "mock": 502, "shape": [503, 838], "procedur": 503, "circl": 503, "area": [503, 569], "squar": 503, "massag": 504, "sub": 504, "notfound": 506, "find_is_const": 506, "isol": [506, 1085, 1122], "realiti": 506, "pc": 506, "greater": 510, "odd": 511, "overwrit": 515, "sunni": [516, 518, 521, 905, 909, 910, 911], "uniquifi": 523, "transcript": 525, "malloc": 530, "free": 530, "mismatch": [530, 895], "across": 533, "ownership": [538, 539, 540, 707, 823], "raii": [538, 539, 540, 718], "dealloc": 539, "naiv": [542, 563, 614, 794, 949, 979, 1094], "ol": [549, 696], "look": [549, 900, 901, 902], "distanc": [549, 568], "length": 549, "manual": [550, 553, 557, 710, 838, 898, 916, 919, 980], "specifi": [551, 905], "otherwis": 551, "lifecycl": 554, "dragon": [557, 713], "memberwis": 557, "straighforward": 557, "correctli": 557, "underli": [558, 648], "mechan": 558, "just": 558, "pollut": 560, "hidden": [561, 860], "cannot": 562, "easili": 562, "odr": 564, "litt": 564, "defnit": 564, "ostream": [565, 566, 567, 568, 569], "cout": 565, "cuboid": 566, "upon": [566, 568, 569], "point3d": [566, 568], "surfac": 566, "volum": [566, 966], "unari": [567, 568], "rectangl": [568, 569], "coordin": [568, 569], "absolut": [568, 729, 862, 1075], "height": 569, "catch": [572, 975], "throw": 572, "spirit": [582, 706, 707, 708], "pre": [584, 651], "destin": [584, 905], "back_insert_iter": 584, "binary_search": 587, "intellig": [587, 593, 982, 1077], "find_if": [590, 640], "customiz": 590, "for_each": 591, "lower_bound": 593, "reverse_copi": [595, 614], "characterist": [597, 600], "modif": [600, 968], "fill": [603, 1088], "definin": 604, "subscript": 605, "eras": 606, "multimap": 608, "deriv": [618, 619], "larger": [622, 970, 978], "want": [622, 647, 658, 662, 685, 746, 751, 909, 992], "substr": [627, 1022], "paint": 628, "american": 628, "onto": 628, "moodl": [629, 811, 825, 826, 851, 958], "quiz": [629, 811, 825, 826, 851, 958], "cin": 631, "n": 637, "year": 637, "transform": [638, 710, 726, 978], "wrong": [641, 721, 905], "great": [646, 936], "around": [647, 675], "school": 647, "item": [647, 709, 725, 726, 727, 973, 979], "inevit": 647, "union": [647, 723], "consider": [647, 936], "uniform": 649, "implementor": 650, "direct": [650, 749], "inconsist": 651, "heap": 651, "refus": 651, "narrow": 651, "mess": [652, 1089], "realist": [652, 976, 1110], "int": [652, 931], "nicolai": 652, "josutti": 652, "complain": 652, "said": 655, "guidelin": 655, "well": 655, "smartptr": 657, "lvalu": [660, 709], "wish": [660, 988], "theori": 660, "Ones": 660, "sai": [662, 840], "decai": 662, "chosen": 664, "rescu": [664, 689, 711, 954, 974, 995, 1100], "syntact": [664, 974], "variat": [664, 696, 701, 778], "conceptless": [665, 666], "fulfil": 669, "has_siz": 669, "index_returns_doubl": 669, "func": 670, "ret": 673, "doubl": 673, "foreword": 675, "prototyp": 675, "examp": 675, "explain": 675, "drive": [675, 875], "anatomi": [675, 756], "resum": 675, "suspens": 675, "caller": 675, "co_yield": 675, "mimick": 675, "fibo": 676, "suspend": [681, 682, 683], "decis": [686, 934], "cleanli": 686, "care": 689, "handwritten": [691, 692], "proggi": 691, "morph": 691, "possibl": 692, "temporari": [692, 973, 1110], "made": 692, "hard": [694, 859], "aris": 694, "gool": 696, "prevent": [696, 707], "accident": [696, 726], "dangl": 697, "easi": [697, 714], "constraint": 697, "dogmat": 697, "sigh": 697, "storag": [699, 927], "abbrevi": 699, "avail": [699, 737], "compat": 701, "unique_ptr": [703, 706, 707], "shared_ptr": [703, 706, 726], "handwrit": 705, "ctor": 705, "auto_ptr": 705, "mayb": 705, "uniqu": [706, 727], "But": [706, 909], "juggl": 706, "make_shar": 706, "cyclic": 706, "chanc": 707, "leakag": 707, "keystrok": 707, "make_uniqu": 707, "acknowledg": 707, "prove": 707, "weak_ptr": [708, 726], "borrow": 708, "invalid": 708, "univers": 709, "dual": 709, "bag": [709, 725, 726, 727], "null": 710, "pointlessli": 710, "hardcod": [710, 742], "placehold": 710, "classic": 711, "upsid": 711, "technic": 711, "downsid": 711, "joinabl": 714, "detach": [714, 921], "cornercas": 714, "recursive_mutex": 717, "timed_mutex": 717, "recursive_timed_mutex": 717, "lock": [718, 721, 770, 783], "unlock": [718, 783], "consid": 718, "acquisit": [718, 1062], "lock_guard": 718, "condition_vari": 719, "safe": [719, 950], "predic": [719, 925], "concern": 719, "promis": 721, "chrono": [721, 722], "utterli": 721, "becom": [721, 970], "readi": 721, "minim": 721, "pro": 721, "clock": 722, "sleep": [722, 776, 781, 782], "rel": [729, 862, 983], "compon": 729, "creation": [729, 810, 921, 922], "create_directori": 729, "entri": 729, "classif": 729, "is_xxx": 729, "directory_entri": 729, "modern": [733, 734, 735, 1130], "slideshow": [734, 737, 739, 742, 744, 747, 749, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 781, 783, 786, 788, 792, 795, 798, 946, 950, 1018, 1106, 1113], "hook": 736, "necessari": 736, "ioctl": [736, 737, 739, 758, 791, 904], "vtabl": 737, "kernelspac": 737, "_io": [737, 758], "major": [741, 742], "minor": [741, 742], "space": [742, 792, 811, 814, 815, 936], "hair": 746, "pretti": 746, "wswitch": 746, "dma": [749, 750, 774], "physic": 749, "scatterlist": 749, "when": 751, "explod": 751, "loadabl": 756, "init": [756, 774, 816, 1125], "exit": [756, 885, 921, 931], "unload": 756, "raspi": [758, 759, 895], "legaci": [758, 1048], "api": [758, 788, 920, 939], "my_activate_gpio": 758, "servic": [760, 816, 1092], "routin": [760, 774], "reserv": 762, "kmalloc": [764, 765, 781], "doubli": [766, 767], "node": [766, 907], "empti": [766, 857, 989, 1045], "consequ": 768, "rt": [770, 771], "mutual": [770, 783], "exclus": [770, 783], "registr": 772, "layer": 772, "util": [772, 877], "pci": [774, 775], "foremost": 774, "probe": 774, "bar": 774, "rasperri": 778, "crossdev": 778, "artifact": [778, 1078], "bootload": 778, "jjj": 779, "mainten": 780, "spinlock": [781, 783, 784], "spin_lock": 781, "irq": 781, "spin_lock_irqsav": 781, "spin_unlock_irqrestor": 781, "ah": [781, 1089], "bulletproof": 783, "dup": 785, "defer": [786, 797], "jiffi": 788, "wheel": [788, 1031], "get_one_ev": 791, "copy_to_us": 791, "noth": 794, "o_nonblock": 794, "wake": 795, "workqueu": [797, 798, 799], "did": 797, "destroi": [798, 1112], "gzip": 802, "tar": 804, "etiquett": 804, "Being": 804, "g1": 805, "lot": [805, 806], "precondit": [805, 806], "credenti": [805, 824], "backup": [805, 806, 840], "busi": 806, "ok": [809, 931], "serial": 809, "pseudo": 809, "partit": 809, "proc": 809, "authent": [813, 891], "prompt": 813, "verif": [813, 1064], "success": 813, "imperson": 813, "uid": [815, 834, 835], "parent": [816, 933], "child": 816, "subsystem": 817, "0": [817, 931, 1085, 1125], "stdout": [821, 871, 885, 907], "stderr": 821, "trick": [821, 1020], "teacher": 823, "constel": 823, "root": [823, 835], "octal": 823, "tune": [823, 938, 1084], "setuid": [834, 835], "passwd": [834, 854, 910, 1054], "sudo": 834, "password": [834, 1042], "chmod": [834, 1003], "toi": 834, "effect": [835, 950, 989], "ugli": 836, "sticki": 836, "umask": 837, "edit": 838, "tabul": 838, "filenam": 838, "bashrc": [839, 840], "cp": 840, "similar": 840, "its": [840, 1084], "pwd": 841, "cd": 841, "mkdir": [847, 857], "funni": 848, "dev": 853, "touch": 857, "rm": 857, "rmdir": 857, "renam": 861, "mv": 861, "somewher": 861, "cut": [864, 1013], "durchsuchen": 866, "optionen": 866, "verkn\u00fcpfungen": 866, "grep": 867, "less": [870, 971, 995], "brushless": 875, "motor": 875, "speed": 875, "esc": 875, "fwd": 875, "rev": 875, "calibr": 875, "exchang": 876, "packet": 876, "vcan": 877, "frame": [878, 1093], "mcp2515": 879, "schemat": 879, "solder": 879, "spi": 879, "lm73": 882, "slave": [882, 884], "master": [882, 884], "enabl": [882, 884], "bcm2835": 882, "datasheet": 882, "connect": [882, 901, 1088], "i2cdetect": 882, "detect": 882, "hwmon": [882, 884], "monitor": [882, 884], "pca9685": 883, "puls": 883, "wire": [883, 884], "ds18b20": 884, "alter": 884, "w1": 884, "attach": 884, "pin": [884, 918], "ds2482": 884, "800": 884, "channel": 884, "announc": 884, "hotplug": 884, "lm": 884, "caveat": [884, 1085], "topologi": 884, "symptom": 884, "statu": [885, 921, 931], "adjust": [887, 964], "wear": 891, "admin": 891, "hat": 891, "scp": 894, "sshf": 895, "mount": 895, "logdata": 895, "unmount": 895, "fusermount": 895, "umount": 895, "helper": [896, 1095], "simplic": [900, 901, 902], "watch": 900, "strace": 900, "supervis": 900, "descriptor": [904, 907, 914], "filedescriptor": 904, "offset": [904, 914], "lseek": 904, "hole": 906, "o_creat": 908, "bogu": 908, "o_excl": 909, "alreadi": 909, "o_rdonli": 910, "even": [910, 911, 1037], "o_wronli": 911, "writeabl": 911, "implicitli": 911, "scatter": 914, "gather": 914, "retriev": 916, "wise": 917, "legal": 920, "pthread_join": 921, "synchron": [923, 949], "win32": 925, "reset": 925, "trylock": 930, "islock": 930, "argc": 931, "char": 931, "argv": [931, 1005], "procf": 933, "pid": 933, "ppid": 933, "getpid": 933, "getppid": 933, "multitask": 934, "fair": [934, 938], "runnabl": [934, 940], "bare": 936, "metal": 936, "hm": 936, "awai": [936, 1071], "stabil": 936, "latenc": [938, 940], "nice": 938, "inexact": 938, "immedi": 938, "preempt_rt": 938, "polici": 939, "prioriti": 939, "runn": 939, "frequenc": 940, "scale": 940, "mysteri": 940, "remain": 940, "sysprog": [941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951], "mmap": 945, "segment": 945, "produc": [945, 979], "consum": 945, "mq_open": 946, "mq_send": 946, "mq_receiv": 946, "mq_close": 946, "mq_unlink": 946, "notif": 946, "mq_notifi": 946, "mqueue": 946, "sem_open": 946, "sem_wait": 946, "sem_post": 946, "sem_clos": 946, "sem_unlink": 946, "barebon": 949, "alarm": 949, "louder": 949, "innoc": 949, "sigalrm": 949, "programmat": 950, "mask": 950, "pend": 950, "sigset_t": 950, "async": 950, "seem": 952, "nm": 952, "agnost": 953, "goodi": 954, "nativ": [955, 960], "sysroot": [955, 964], "linaro": 964, "defunct": 964, "patienc": 964, "against": [964, 969, 995], "docker": 966, "autoconf": 966, "71": 966, "zoom": 968, "rememb": 968, "reloc": 969, "independ": 969, "pic": 969, "runtim": 969, "def": 971, "reach": 971, "theoret": 971, "nonloc": 971, "hood": 973, "monkeypatch": 973, "print": [973, 998], "contextlib": 973, "contextmanag": 973, "involv": 973, "prefixprint": 973, "mind": 974, "sugar": 974, "functool": [974, 995], "rais": 975, "regardless": 975, "coverag": 978, "infin": 979, "form": 983, "daemon": 984, "mother": 986, "acquir": 986, "abc": 988, "late": 988, "abtract": 988, "interrelationship": 991, "salari": 992, "introspect": 992, "isinst": 992, "issubclass": 992, "classmethod": 993, "staticmethod": 993, "_make": 994, "_asdict": 994, "dunder": 995, "compar": 995, "incompat": 995, "lotsa": 995, "magic": 995, "__gt__": 995, "term": 995, "__lt__": 995, "total_ord": 995, "them": 995, "readonli": 996, "repr": 997, "__repr__": 997, "suppli": 998, "ultim": 998, "fundament": 999, "guido": 1001, "van": 1001, "rossum": 1001, "hash": 1003, "bang": 1003, "she": 1003, "doze": 1003, "registri": 1003, "indent": 1004, "cosmet": 1005, "rudimentari": 1005, "python2": 1007, "unicod": 1007, "esoter": 1011, "delimit": 1020, "interv": 1028, "axi": 1030, "setuptool": 1031, "manifest": 1031, "publish": [1031, 1070, 1092], "usernam": 1042, "prime": [1047, 1055, 1061], "strategi": 1054, "revert": 1056, "justifi": 1057, "activ": 1063, "dictread": [1065, 1066, 1084], "cp1252": [1065, 1067], "reader": [1067, 1068, 1084], "nohead": 1067, "both": 1073, "interrel": 1074, "product": 1075, "david": 1076, "beazlei": 1076, "raymond": 1076, "hetting": 1076, "mean": 1078, "linear": [1079, 1081, 1082], "regress": [1079, 1081, 1082], "weather": 1080, "ndarrai": 1081, "plot": 1081, "splice": 1081, "mankind": 1083, "god": 1083, "insan": 1084, "scsv": 1084, "dbapi": [1085, 1087, 1088], "transact": 1085, "postgresql": 1087, "postgr": 1087, "cursor": 1088, "queri": 1088, "ascii": 1089, "iso": 1089, "latin": 1089, "8859": 1089, "lieb": 1089, "gr\u00fc\u00dfe": 1089, "j\u00f6rg": 1089, "\u795d\u597d": 1089, "utf": 1089, "decod": 1089, "incomplet": 1091, "broker": 1092, "subscrib": 1092, "payload": 1092, "append": 1093, "deprec": 1093, "bitmap": 1095, "neat": 1095, "iloc": [1097, 1098], "Then": 1097, "inplac": 1098, "loc": [1098, 1099], "hiccup": 1099, "inclus": 1099, "lowercas": 1100, "email": 1100, "normalized_email": 1100, "ing": 1100, "elementtre": 1101, "etre": 1101, "sax": 1101, "dom": 1101, "34": 1103, "invoc": 1105, "subcommand": 1105, "upload": 1108, "pythonpath": 1110, "mark": 1110, "expect": [1110, 1119], "recogn": 1111, "meat": 1111, "freez": 1112, "recreat": 1112, "fatal": 1117, "failur": 1117, "assert_": 1117, "suit": 1117, "teardown": 1122, "organisatorisch": 1124, "buchung": 1124, "kursablauf": 1124, "kursgestaltung": 1124, "unterlagen": 1124, "grub": 1125, "97": 1125, "bauen": 1125, "prozess": 1125, "verschieden": 1125, "zielpublikum": [1126, 1128, 1129, 1134, 1136, 1141, 1142, 1148], "kursinhalt": [1126, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "vorkenntniss": [1126, 1128, 1129, 1134, 1136, 1137, 1141, 1142, 1143, 1144, 1146, 1147, 1148], "three": 1130, "prior": 1132, "beispielen": 1136, "mutter": 1137, "aller": 1137, "woch": 1141, "svn": 1142}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [140, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [95, "python"], [322, "python"], [327, "python"]], "Linux": [[5, "linux"], [79, "linux"], [158, "linux"], [874, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [430, "course-material"], [1075, "course-material"]], "Einleitung": [[7, "Einleitung"], [196, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [193, "Datatypes"], [196, "Datatypes"], [199, "Datatypes"], [212, "Datatypes"], [215, "Datatypes"], [223, "Datatypes"], [225, "Datatypes"], [231, "Datatypes"], [235, "Datatypes"], [238, "Datatypes"], [241, "Datatypes"], [255, "datatypes"], [262, "datatypes"], [265, "datatypes"], [273, "Datatypes"], [275, "datatypes"], [276, "datatypes"], [277, "Datatypes"], [281, "datatypes"], [282, "datatypes"], [317, "Datatypes"], [1007, "datatypes"]], "Numbers": [[7, "Numbers"], [196, "Numbers"], [199, "Numbers"], [223, "Numbers"], [317, "Numbers"], [1007, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [196, "Integer-Numbers"], [1007, "integer-numbers"]], "Strings": [[7, "Strings"], [193, "Strings"], [196, "Strings"], [199, "Strings"], [208, "Strings"], [212, "Strings"], [212, "id3"], [215, "Strings"], [223, "Strings"], [235, "Strings"], [253, "Strings"], [256, "Strings"], [256, "id1"], [256, "id3"], [263, "Strings"], [317, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [196, "Compound-Datatypes"], [208, "Compound-Datatypes"], [212, "Compound-Datatypes"], [215, "Compound-Datatypes"], [218, "Compound-Datatypes"], [223, "Compound-Datatypes"], [225, "Compound-Datatypes"], [231, "Compound-Datatypes"], [235, "Compound-Datatypes"], [238, "Compound-Datatypes"], [241, "Compound-Datatypes"], [253, "Compound-Datatypes"], [277, "Compound-Datatypes"], [283, "Compound-Datatypes"], [295, "Compound-Datatypes"], [1008, "compound-datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [196, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [196, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [196, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [196, "while"], [215, "while"], [231, "while"], [263, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [196, "Functions"], [199, "Functions"], [212, "Functions"], [223, "Functions"], [225, "Functions"], [231, "Functions"], [235, "Functions"], [240, "functions"], [256, "Functions"], [263, "Functions"], [277, "Functions"], [293, "functions"], [297, "functions"], [355, "functions"], [355, "id1"], [1019, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [179, null], [180, null], [182, null], [183, null], [184, null], [185, null], [187, null], [189, null], [190, null], [194, null], [197, null], [200, null], [203, null], [204, null], [205, null], [206, null], [210, null], [213, null], [222, null], [226, null], [229, null], [232, null], [234, null], [237, null], [240, null], [243, null], [252, null], [255, null], [262, null], [265, null]], "\u00dcberblick": [[8, "uberblick"], [187, "uberblick"], [197, "uberblick"], [206, "uberblick"], [222, "uberblick"], [234, "uberblick"]], "Log": [[8, "log"], [127, "log"], [179, "log"], [180, "log"], [183, "log"], [184, "log"], [192, "log"], [194, "log"], [195, "log"], [197, "log"], [200, "log"], [204, "log"], [206, "log"], [210, "log"], [213, "log"], [222, "log"], [234, "log"], [243, "log"]], "Tag 1": [[8, "tag-1"], [170, "tag-1"], [189, "tag-1"], [197, "tag-1"], [200, "tag-1"], [206, "tag-1"], [222, "tag-1"], [234, "tag-1"]], "Tag 2": [[8, "tag-2"], [170, "tag-2"], [189, "tag-2"], [197, "tag-2"], [200, "tag-2"], [206, "tag-2"], [222, "tag-2"], [234, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [187, "live-hacking-jupyter-notebook"], [197, "live-hacking-jupyter-notebook"], [200, "live-hacking-jupyter-notebook"], [210, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [127, "links"], [164, "Links"], [175, "links"], [180, "links"], [182, "links"], [184, "links"], [187, "links"], [194, "links"], [195, "links"], [197, "links"], [206, "links"], [210, "links"], [213, "links"], [216, "links"], [222, "links"], [229, "links"], [240, "links"], [243, "links"], [276, "links"], [282, "links"], [327, "links"], [405, "links"], [654, "links"], [675, "links"], [693, "links"], [704, "links"], [755, "links"], [817, "links"], [838, "links"], [877, null], [884, "links"], [1000, null], [1030, null], [1031, "links"], [1092, "links"], [1094, "links"], [1095, "links"], [1097, "links"], [1098, "links"], [1099, "links"], [1100, "links"], [1113, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [188, "programmierung-grundlagen-jupyter-notebook"], [198, "programmierung-grundlagen-jupyter-notebook"], [224, "programmierung-grundlagen-jupyter-notebook"], [236, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [78, "details"], [339, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [138, null], [140, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [158, null], [167, null], [171, "contents"], [172, null], [428, "contents"], [530, null], [533, null], [539, null], [542, null], [630, "id1"], [807, "id1"], [827, "id1"], [846, "id1"], [852, "id1"], [855, "id1"], [872, "id1"], [880, "id1"], [881, "id1"], [888, "id1"], [897, "id1"], [913, "id1"], [915, "id1"], [917, "id1"], [932, "id1"], [942, null], [945, null], [959, "id1"], [979, null], [1034, "id1"], [1035, "id1"], [1039, "id1"], [1048, "id1"], [1062, "id1"], [1069, "id1"], [1117, null], [1119, null], [1122, null], [1130, "contents"], [1133, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [340, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [322, "github"]], "Sphinx": [[13, "sphinx"], [66, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [126, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [125, "miscellaneous"], [136, "miscellaneous"], [163, "miscellaneous"], [183, "miscellaneous"], [247, "miscellaneous"], [248, "miscellaneous"], [268, "miscellaneous"], [282, "miscellaneous"], [293, "miscellaneous"], [294, "miscellaneous"], [297, "miscellaneous"], [303, "miscellaneous"], [525, "miscellaneous"], [525, "id1"], [661, "miscellaneous"], [724, "miscellaneous"], [914, "miscellaneous"], [927, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [308, "implementation-notes"]], "Todo": [[17, "id1"], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [140, null], [169, "id1"], [172, "id2"], [172, "id3"], [430, "todo"], [526, "id1"], [529, "id1"], [532, "id1"], [535, "id1"], [538, "id1"], [541, "id1"], [544, "id1"], [735, "id1"], [739, "id1"], [747, "id2"], [941, "id1"], [944, "id1"], [948, "id1"], [1116, "id1"], [1121, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [255, "setup"], [262, "setup"], [265, "setup"], [275, "setup"], [276, "setup"], [280, "setup"], [281, "setup"], [282, "setup"], [875, "setup"], [1000, "setup"], [1112, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1126, null], [1127, null], [1128, null], [1129, null], [1134, null], [1136, null], [1137, null], [1141, null], [1142, null], [1143, null], [1144, null], [1146, null], [1147, null], [1148, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [128, "further-information"], [203, "further-information"], [204, "further-information"], [226, "further-information"], [313, "further-information"], [322, "further-information"], [709, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [429, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [896, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [506, "unit-tests"]], "Classes": [[43, "classes"], [202, "Classes"], [287, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [507, "refactoring"], [786, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [62, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [62, "biography"]], "Abstract": [[59, "abstract"], [62, "abstract"]], "Description": [[59, "description"], [62, "description"], [460, "description"], [612, "description"], [628, "description"], [631, "description"], [633, "description"], [634, "description"], [635, "description"], [636, "description"], [637, "description"], [638, "description"], [639, "description"], [640, "description"], [642, "description"], [643, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[60, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[61, "installation-notes"]], "libgpiod": [[61, "libgpiod"]], "Fedora: Prepare Tarballs": [[61, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[61, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[64, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[64, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[64, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[65, "blog"], [140, "blog"]], "Articles": [[65, "articles"]], "In the Works": [[65, "in-the-works"]], "Not Yet in the Works": [[65, "not-yet-in-the-works"]], "Revisit Existing Posts": [[65, "revisit-existing-posts"]], "pending_xref": [[66, "pending-xref"]], "C++": [[67, "c"], [110, "c"], [111, "c"], [140, "c"]], "C++: Building with CMake": [[68, "c-building-with-cmake"]], "C++: Interfaces": [[69, "c-interfaces"]], "C++: OO Basics": [[70, "c-oo-basics"]], "C++: Unit Testing": [[71, "c-unit-testing"]], "Graph": [[72, "graph"], [630, "graph"], [779, "graph"], [1034, "graph"], [1035, "graph"], [1039, "graph"], [1048, "graph"], [1062, "graph"], [1069, "graph"]], "Embedded Computing 1": [[73, "embedded-computing-1"], [78, "embedded-computing-1"]], "Current Curriculum": [[73, "current-curriculum"], [74, "current-curriculum"]], "Topics": [[73, "topics"], [74, "topics"], [98, "topics"], [99, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [139, "topics"], [175, "topics"], [175, "id2"], [203, "topics"], [240, "topics"], [243, null], [326, "topics"], [330, "topics"], [360, "topics"], [375, "topics"], [384, "topics"], [391, "topics"], [397, "topics"], [401, "topics"], [404, "topics"], [408, "topics"], [417, "topics"], [421, "topics"], [426, "topics"], [427, "topics"], [547, "topics"], [555, "topics"], [570, "topics"], [573, "topics"], [576, "topics"], [592, "topics"], [598, "topics"], [602, "topics"], [610, "topics"], [615, "topics"], [617, "topics"], [620, "topics"], [626, "topics"], [644, "topics"], [645, "topics"], [649, "topics"], [656, "topics"], [663, "topics"], [674, "topics"], [687, "topics"], [688, "topics"], [698, "topics"], [703, "topics"], [712, "topics"], [720, "topics"], [724, "topics"], [728, "topics"], [730, "topics"], [732, "topics"], [890, "topics"], [908, null], [910, null], [910, null], [929, "topics"], [935, "topics"], [956, "topics"], [962, "topics"], [963, "topics"], [983, null], [991, "topics"], [1086, "topics"], [1096, "topics"], [1109, "topics"], [1115, "topics"]], "Dependency Graph": [[73, "dependency-graph"], [74, "dependency-graph"]], "Embedded Computing 2": [[74, "embedded-computing-2"], [78, "embedded-computing-2"]], "EX: Race Conditions": [[75, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[76, "ex-avoiding-race-condition"]], "Goals": [[76, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"]], "Outcome": [[76, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [182, "outcome"]], "Git Introduction": [[77, "git-introduction"]], "Embedded Computing 2019": [[78, "embedded-computing-2019"]], "Overview": [[78, "overview"], [657, "overview"], [705, "overview"], [719, "overview"], [721, "overview"], [729, "overview"], [803, "overview"], [814, "overview"], [871, "overview"], [882, "overview"], [883, "overview"], [884, "overview"], [884, "id1"], [885, "overview"], [920, "overview"]], "Knowledge Transferred": [[78, "knowledge-transferred"]], "Course Setup": [[78, "course-setup"]], "Introduction to Linux and Unix": [[80, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[81, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[82, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[83, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[84, "ex-led-temperature-display"]], "Hardware": [[84, "hardware"], [85, "hardware"]], "EX: Temperature Sensors": [[85, "ex-temperature-sensors"], [92, "ex-temperature-sensors"]], "GPIO": [[86, "gpio"]], "sysfs Interface": [[86, "sysfs-interface"]], "gpiod Interface": [[86, "gpiod-interface"]], "Multithreading": [[87, "multithreading"], [161, "multithreading"], [221, "multithreading"], [247, "multithreading"], [248, "multithreading"], [250, "multithreading"], [293, "multithreading"], [294, "multithreading"], [297, "multithreading"], [303, "multithreading"], [330, "multithreading"], [337, "multithreading"], [720, "multithreading"], [949, "multithreading"], [985, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[88, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[89, "communication-waiting-for-something"]], "Python Basics": [[90, "python-basics"]], "EX: Averaging Sensor, Display": [[91, "ex-averaging-sensor-display"]], "Simple Web Programming": [[93, "simple-web-programming"]], "Sensors Web Pages": [[94, "sensors-web-pages"]], "Embedded Computing 2020": [[96, "embedded-computing-2020"]], "SS2022": [[97, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[97, "block-1-linux-and-working-with-remote-embedded-devices"], [114, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[97, "block-2-c-on-linux-local-and-cross-development"], [114, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[97, "block-3-c"], [114, "block-3-c"]], "2022-03-08": [[98, "id1"]], "Homework": [[98, "homework"], [99, "homework"], [101, "homework"], [104, "homework"]], "2022-03-10": [[99, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[100, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[101, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[102, "ku"]], "2022-03-28": [[103, "id1"]], "2022-04-01": [[104, "id1"]], "SS2022: Logs": [[105, "ss2022-logs"]], "WS2022": [[106, "ws2022"]], "Plan: Evolution": [[106, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[107, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[107, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[107, "question-3-memory-leak"]], "Question 4: std::vector": [[107, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[108, "cross-development"], [259, "cross-development"], [955, "cross-development"], [956, "cross-development"]], "C++, OO": [[108, "c-oo"]], "Lab Exam 2023-01-17": [[109, "lab-exam-2023-01-17"]], "Project Setup": [[109, "project-setup"], [505, "project-setup"], [1063, "project-setup"]], "Exercises": [[109, "exercises"], [158, "exercises"], [163, "exercises"], [195, "exercises"], [205, "exercises"], [205, "id1"], [205, "id3"], [263, "Exercises"], [268, "exercises"], [287, "exercises"], [287, "id1"], [290, "exercises"], [294, "exercises"], [458, "exercises"], [460, "exercises"], [467, "exercises"], [495, "exercises"], [512, "exercises"], [514, "exercises"], [555, "exercises"], [570, "exercises"], [620, "exercises"], [644, "exercises"], [962, "exercises"], [991, "exercises"], [1035, "exercises"]], "Exam Submission": [[109, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[110, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[110, "unix-linux-concepts"], [111, "unix-linux-concepts"]], "Toolchain": [[110, "toolchain"], [111, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[111, "ss2023-exam-2023-06-30-solved"]], "Embedded Computing 2021": [[113, "embedded-computing-2021"]], "SS2023": [[114, "ss2023"]], "Finish: Written Exam": [[114, "finish-written-exam"]], "An IoT Boiling Pot (The Beginning)": [[115, "an-iot-boiling-pot-the-beginning"]], "Requirements": [[115, "requirements"], [116, "requirements"], [117, "requirements"], [118, "requirements"], [120, "requirements"], [122, "requirements"], [447, "requirements"], [471, "requirements"], [502, "requirements"]], "Implementation": [[115, "implementation"], [116, "implementation"], [117, "implementation"], [118, "implementation"], [120, "implementation"], [122, "implementation"], [506, "implementation"]], "Testing": [[115, "testing"], [116, "testing"], [117, "testing"], [118, "testing"], [120, "testing"], [122, "testing"], [261, "testing"]], "Future (Not Part Of This Development Cycle)": [[115, "future-not-part-of-this-development-cycle"], [116, "future-not-part-of-this-development-cycle"], [117, "future-not-part-of-this-development-cycle"], [118, "future-not-part-of-this-development-cycle"], [120, "future-not-part-of-this-development-cycle"], [122, "future-not-part-of-this-development-cycle"]], "Dependencies": [[115, "dependencies"], [116, "dependencies"], [117, "dependencies"], [118, "dependencies"], [119, "dependencies"], [120, "dependencies"], [122, "dependencies"], [308, "dependencies"], [309, "dependencies"], [310, "dependencies"], [311, "dependencies"], [313, "dependencies"], [436, "dependencies"], [453, "dependencies"], [467, "dependencies"], [495, "dependencies"], [512, "dependencies"], [514, "dependencies"], [525, "dependencies"], [592, "dependencies"], [598, "dependencies"], [602, "dependencies"], [610, "dependencies"], [612, "dependencies"], [615, "dependencies"], [620, "dependencies"], [628, "dependencies"], [629, "dependencies"], [631, "dependencies"], [633, "dependencies"], [634, "dependencies"], [635, "dependencies"], [636, "dependencies"], [637, "dependencies"], [638, "dependencies"], [639, "dependencies"], [640, "dependencies"], [641, "dependencies"], [642, "dependencies"], [643, "dependencies"], [649, "dependencies"], [656, "dependencies"], [663, "dependencies"], [674, "dependencies"], [698, "dependencies"], [703, "dependencies"], [805, "dependencies"], [806, "dependencies"], [807, "dependencies"], [811, "dependencies"], [825, "dependencies"], [826, "dependencies"], [827, "dependencies"], [846, "dependencies"], [851, "dependencies"], [852, "dependencies"], [855, "dependencies"], [888, "dependencies"], [890, "dependencies"], [897, "dependencies"], [903, "dependencies"], [905, "dependencies"], [913, "dependencies"], [915, "dependencies"], [917, "dependencies"], [929, "dependencies"], [932, "dependencies"], [956, "dependencies"], [958, "dependencies"], [959, "dependencies"], [962, "dependencies"], [963, "dependencies"], [984, "dependencies"], [986, "dependencies"], [1032, "dependencies"], [1033, "dependencies"], [1036, "dependencies"], [1037, "dependencies"], [1038, "dependencies"], [1040, "dependencies"], [1041, "dependencies"], [1042, "dependencies"], [1043, "dependencies"], [1044, "dependencies"], [1045, "dependencies"], [1049, "dependencies"], [1050, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1053, "dependencies"], [1055, "dependencies"], [1056, "dependencies"], [1057, "dependencies"], [1058, "dependencies"], [1059, "dependencies"], [1060, "dependencies"], [1061, "dependencies"], [1063, "dependencies"], [1064, "dependencies"], [1065, "dependencies"], [1066, "dependencies"], [1067, "dependencies"], [1068, "dependencies"], [1070, "dependencies"], [1071, "dependencies"], [1072, "dependencies"], [1073, "dependencies"], [1086, "dependencies"], [1089, "dependencies"], [1092, "dependencies"], [1096, "dependencies"], [1109, "dependencies"], [1115, "dependencies"]], "Data Logger": [[116, "data-logger"]], "Data Logger: CSV Sink": [[117, "data-logger-csv-sink"]], "Column name configuration": [[117, "column-name-configuration"]], "output()": [[117, "output"]], "Data Logger: MQTT Sink": [[118, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[118, "mqtt-implementation-mosquitto"]], "Installation": [[118, "installation"], [342, "installation"], [895, "installation"], [1030, "installation"], [1092, "installation"], [1117, "installation"]], "Wrapper": [[118, "wrapper"]], "WS2023/24: Project": [[119, "ws2023-24-project"]], "Tasks": [[119, "tasks"], [936, "tasks"], [123, "tasks"]], "Temperature Display: LED Via A PWM Controller": [[120, "temperature-display-led-via-a-pwm-controller"]], "Switch Interface": [[121, "switch-interface"]], "SysFS GPIO Switch": [[122, "sysfs-gpio-switch"]], "Embedded Computing (FH Joanneum Graz)": [[124, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[125, "git-notes"]], "Bring Local Branch Upstream": [[125, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[125, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[125, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[127, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[128, "audio-chip-bringup"]], "Goal": [[128, "goal"], [130, "goal"], [131, "goal"], [133, "goal"], [268, "goal"], [270, "goal"], [1130, "goal"], [1133, "goal"]], "Findings": [[128, "findings"]], "Get Debian 10 Kernel Config": [[129, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[129, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[129, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[130, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[131, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[131, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[132, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[133, "dirty-upgrade-path"]], "Steps": [[133, "steps"]], "Wait for Customer Hardware": [[134, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[135, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[136, "python-training-improvements"]], "Beginner Course": [[136, "beginner-course"]], "Exercise Structure": [[136, "exercise-structure"]], "Split Exercises": [[136, "split-exercises"]], "Creating Screencasts": [[137, "creating-screencasts"]], "OpenShot": [[137, "openshot"]], "SEO": [[138, "seo"]], "Sitemap": [[138, "sitemap"]], "Meta Information": [[138, "meta-information"]], "Courses": [[138, "courses"]], "Stacks (Hanging)": [[139, "stacks-hanging"]], "DBus (New Topic)": [[139, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[139, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[140, "miscellaneous-to-do"]], "Extensions": [[140, "extensions"]], "reST Todos": [[140, "rest-todos"]], "Styling": [[140, "styling"]], "Convert to RST/S5": [[140, "convert-to-rst-s5"]], "Examples": [[140, "examples"], [451, "examples"], [651, "examples"], [699, "examples"], [802, "examples"], [904, null]], "Convert Existing Content": [[140, "convert-existing-content"]], "Add Missing": [[140, "add-missing"]], "Structure": [[140, "structure"], [490, "structure"]], "References, Past Trainings": [[140, "references-past-trainings"]], "About": [[140, "about"]], "Learning The Web": [[141, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[142, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[142, "basics"], [213, "basics"], [240, "basics"], [255, "basics"], [275, "basics"], [276, "basics"], [276, "id1"], [281, "basics"], [282, "basics"], [282, "id1"], [317, "Basics"], [385, "basics"], [571, "basics"], [583, "basics"], [603, "basics"], [701, "basics"], [804, "basics"], [920, "basics"], [1028, "basics"]], "Getting X-Loader and U-Boot": [[142, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[142, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[142, "repairing-the-nand"]], "Writing X-Loader to NAND": [[142, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[142, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[143, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[143, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[143, "signals-aren-t-messages"]], "References": [[143, null], [143, null], [143, null], [215, "References"], [218, "References"], [562, "references"]], "Message Queues aren\u2019t Message Queues": [[143, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[143, "semaphores-and-mutexes"]], "Timers": [[143, "timers"]], "Polling": [[143, "polling"]], "Event Dispatching": [[143, "event-dispatching"]], "Interrupts": [[143, "interrupts"], [761, "interrupts"]], "Realtime": [[143, "realtime"], [938, "realtime"], [1125, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[144, "saving-solid-state-disk-life-gentoo"]], "Rant": [[144, "rant"], [164, "Rant"], [954, null]], "No Swap": [[144, "no-swap"]], "tmpfs instances here and there": [[144, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[144, "syslog-var-log-messages"]], "Mountpoint for messages": [[144, "mountpoint-for-messages"]], "Logrotate": [[144, "logrotate"]], "Kernel I/O Scheduler": [[144, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[144, "use-ram-for-the-kernel-build"]], "Things that are left": [[144, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[145, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[145, "process-stack-management"]], "Conclusion": [[145, "conclusion"], [145, "id1"], [875, "conclusion"], [883, "conclusion"]], "Thread (pthread) Stack Management": [[145, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[145, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[145, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[145, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[145, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[145, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[145, "how-does-this-work"]], "Realtime is different": [[145, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[146, "patching-and-building-the-fedora-kernel"]], "Why?": [[146, "why"], [891, "why"], [973, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[146, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[146, null], [146, null]], "Prepare the RPM Build": [[146, "prepare-the-rpm-build"]], "Install Prerequisites": [[146, "install-prerequisites"]], "Setup rpmbuild Directory": [[146, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[146, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[146, "apply-the-patch"]], "Build the Kernel RPMs": [[146, "build-the-kernel-rpms"]], "Install Kernel": [[146, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[147, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[147, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[147, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[148, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[148, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[148, "rpm-package-meh"]], "Updated on 2020-04-09": [[148, null]], "Annoyance #1: Keeps Running in Background": [[148, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[148, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[148, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[149, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[149, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[149, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[149, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[150, "using-bigbluebutton-for-online-training"]], "In this Article": [[150, null], [151, null], [153, null]], "TL;DR": [[150, "tl-dr"]], "Background Information": [[150, "background-information"]], "Hosting Setup": [[150, "hosting-setup"]], "BigBlueButton Installation": [[150, "bigbluebutton-installation"]], "Functionality Check": [[150, "functionality-check"]], "What Else?": [[150, "what-else"], [878, "what-else"], [891, "what-else"]], "Traunstein via Zierlersteig": [[151, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[151, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[151, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[151, "die-rinne"]], "Abstieg": [[151, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[152, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[152, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[152, "ceska-koca"]], "Hinauf": [[152, "hinauf"]], "Runter": [[152, "runter"]], "Zusammenfassung": [[152, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[153, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[153, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[153, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[153, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[153, "generate-key-pair"]], "Stage Key for Enrollment": [[153, "stage-key-for-enrollment"]], "Reboot, Brick": [[153, "reboot-brick"]], "Diagnostics": [[153, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[154, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [965, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[154, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[154, "installing-crosstool-ng"]], "Prerequisites": [[154, "prerequisites"], [1031, "prerequisites"]], "Installing From Cloned Git Repository": [[154, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[154, "installing-from-release-tarball"]], "PATH, And Basic Test": [[154, "path-and-basic-test"]], "Configure Toolchain Build": [[154, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[154, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[154, "important-glibc-version"]], "The Error": [[154, "the-error"], [154, "id4"]], "The Fix": [[154, "the-fix"], [154, "id5"]], "Important: GCC Version": [[154, "important-gcc-version"]], "Toolchain Build/Install": [[154, "toolchain-build-install"]], "Test": [[154, "test"], [758, "test"]], "Simplest: C, <stdio.h>": [[154, "simplest-c-stdio-h"]], "C++, <iostream>": [[154, "c-iostream"]], "C++, <thread>": [[154, "c-thread"]], "Packaging/Distributing The Toolchain": [[154, "packaging-distributing-the-toolchain"]], "Afterword": [[154, "afterword"]], "Posts": [[155, "posts"]], "Linux und Open Source": [[156, "linux-und-open-source"]], "Schulung": [[156, "schulung"]], "Entwicklung": [[156, "entwicklung"]], "Beratung": [[156, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[157, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[158, "installing-git"]], "Windows": [[158, "windows"]], "Workflow": [[158, "workflow"]], "Cloning the Repository": [[158, "cloning-the-repository"]], "Exercise Time": [[158, "exercise-time"]], "Conflicts": [[158, "conflicts"]], "Trainer\u2019s Notes": [[158, "trainer-s-notes"]], "Courses: Overview": [[159, "courses-overview"]], "Online Trainings": [[159, null]], "Individual Trainings": [[159, null]], "Everything About Linux": [[159, "everything-about-linux"]], "Programming Languages": [[159, "programming-languages"]], "Miscellaneous but Related": [[159, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[160, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[160, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[161, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[161, "gpios-in-userspace"]], "CAN Bus": [[161, "can-bus"], [182, "can-bus"]], "Driver Beispiele": [[161, "driver-beispiele"]], "Heizungssteuerung": [[161, "heizungssteuerung"]], "Live Hacking": [[162, "Live-Hacking"], [587, "live-hacking"], [588, "live-hacking"], [590, "live-hacking"], [591, "live-hacking"], [594, "live-hacking"], [595, "live-hacking"], [596, "live-hacking"], [608, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[162, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[162, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[162, "Dictionaries"], [191, "Dictionaries"], [263, "Dictionaries"], [277, "Dictionaries"], [317, "Dictionaries"], [1024, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[162, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[162, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[162, "Shortcuts"]], "Objektorientierte Programmierung": [[162, "Objektorientierte-Programmierung"]], "Inheritance": [[162, "Inheritance"], [202, "Inheritance"], [992, "inheritance"]], "Date and Time and Time Deltas - datetime": [[162, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[162, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[162, "String-Representations:-__str__()"]], "subprocess": [[162, "subprocess"], [241, "subprocess"]], "enumerate(), zip()": [[162, "enumerate(),-zip()"]], "List Comprehension": [[162, "List-Comprehension"], [186, "List-Comprehension"], [225, "List-Comprehension"], [295, "List-Comprehension"], [978, "list-comprehension"], [1023, "list-comprehension"]], "exec(), eval()": [[162, "exec(),-eval()"]], "Umgebender Context": [[162, "Umgebender-Context"]], "Eigener Context": [[162, "Eigener-Context"]], "json": [[162, "json"], [238, "json"]], "Project": [[163, "project"], [123, "project"], [123, "id3"], [123, "id5"], [123, "id7"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[163, "python-individualtraining-5-tage-beginnend-28-10-2019"], [340, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[163, null], [166, null], [949, null], [1127, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[163, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[163, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[163, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[163, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[163, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[163, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[163, "operator-overloading"], [221, "operator-overloading"], [231, "Operator-Overloading"], [252, "operator-overloading"], [287, "operator-overloading"], [525, "operator-overloading"], [551, "operator-overloading"], [565, "operator-overloading"], [995, "operator-overloading"]], "Getters and Setters": [[163, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[163, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[163, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[163, "closures-between-local-and-global"]], "Goals of this Training": [[164, "Goals-of-this-Training"]], "Exercise": [[164, "Exercise"], [205, "exercise"], [247, "exercise"], [247, "id1"], [248, "exercise"], [250, "exercise"], [259, "exercise"], [268, "exercise"], [290, "exercise"], [303, "exercise"], [322, "exercise"], [328, "exercise"], [447, "exercise"], [448, "exercise"], [449, "exercise"], [451, "exercise"], [452, "exercise"], [455, "exercise"], [456, "exercise"], [641, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[164, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[164, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[164, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[164, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[164, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[164, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[164, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[164, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[164, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[164, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[165, "Random-Live-Hacking"]], "Data Types": [[165, "Data-Types"], [295, "Data-Types"]], "Mutable, Immutable": [[165, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[165, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[165, "Indices-and-Slicing"]], "for loops": [[165, "for-loops"]], "Iterator protocol": [[165, "Iterator-protocol"], [228, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[166, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[166, null], [168, null], [321, null]], "Standardthemen": [[166, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[166, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[166, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[166, "losen-einer-uni-ubung"]], "Proposal": [[167, "proposal"]], "Signals": [[167, "signals"]], "Posix IPC (and Virtual Memory)": [[167, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[167, "unix-domain-sockets"]], "Application in your Company": [[167, "application-in-your-company"]], "Further Thoughts": [[167, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[168, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[169, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[170, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[170, null]], "Kursaufbau": [[170, "kursaufbau"]], "Kursverlauf": [[170, "kursverlauf"], [178, "kursverlauf"]], "Tag 3": [[170, "tag-3"], [189, "tag-3"], [200, "tag-3"], [222, "tag-3"], [234, "tag-3"]], "Tag 4": [[170, "tag-4"], [200, "tag-4"], [222, "tag-4"], [234, "tag-4"]], "Tag 5": [[170, "tag-5"]], "Installing googletest By Hand": [[171, "installing-googletest-by-hand"]], "Clone googletest Repo": [[171, "clone-googletest-repo"]], "Create Build Directory": [[171, "create-build-directory"], [172, "create-build-directory"], [504, "create-build-directory"]], "CMake, Build and Install": [[171, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[171, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[172, "software-setup-build"]], "Getting the Source": [[172, "getting-the-source"]], "Install Prerequisites and Dependencies": [[172, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[172, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[173, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[173, "flatpak"]], "Issues": [[173, "issues"]], "RPM From M$": [[173, "rpm-from-m"]], "Code": [[174, "code"], [177, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[175, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[175, null], [178, null]], "Environment": [[175, "environment"], [810, "environment"]], "Unit Testing and Test Driven Development": [[175, "unit-testing-and-test-driven-development"]], "Python Installation": [[175, "python-installation"], [1000, "python-installation"]], "Programming Environment": [[175, "programming-environment"], [259, "programming-environment"], [1000, "programming-environment"]], "Day 1: Language Basics": [[175, "day-1-language-basics"]], "Day 2: Advanced Topics": [[175, "day-2-advanced-topics"]], "Wrap-Up": [[175, "wrap-up"]], "How Was It?": [[175, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[176, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[176, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[176, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[176, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[176, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[176, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[176, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[176, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[176, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[176, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[176, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[176, "list-und-Mutability"]], "Tuple und Immutability": [[176, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[176, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[176, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[176, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[176, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[176, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[176, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[176, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[176, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[176, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[176, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[176, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[176, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[176, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[176, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[176, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[176, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[176, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[176, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[176, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[176, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[176, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[176, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[176, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[178, "python-individualtraining-18-5-2020-19-5-2020"], [340, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[178, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[179, "python-advanced-7-9-2020-10-9-2020"], [340, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[179, "preparation"], [180, "preparation"], [182, "preparation"], [183, "preparation"], [184, "preparation"], [185, "preparation"], [567, "preparation"]], "Workspace Setup": [[179, "workspace-setup"], [180, "workspace-setup"], [182, "workspace-setup"], [184, "workspace-setup"]], "Github for Exercises": [[179, "github-for-exercises"], [180, "github-for-exercises"]], "Agenda": [[179, "agenda"], [180, "agenda"], [182, "agenda"], [183, "agenda"], [184, "agenda"], [185, "agenda"], [190, "agenda"], [194, "agenda"], [195, "agenda"], [232, "agenda"], [237, "agenda"], [249, "agenda"], [258, "agenda"], [279, "agenda"], [287, "agenda"], [1132, "agenda"]], "Advanced Core Python Topics": [[179, "advanced-core-python-topics"]], "Special Topics": [[179, "special-topics"]], "Day 1": [[179, "day-1"], [180, "day-1"], [182, "day-1"], [183, "day-1"], [184, "day-1"], [194, "day-1"], [195, "day-1"], [204, "day-1"], [205, "day-1"], [210, "day-1"], [213, "day-1"], [216, "day-1"], [219, "day-1"], [226, "day-1"], [268, "day-1"], [269, "day-1"], [270, "day-1"], [276, "day-1"], [280, "day-1"], [282, "day-1"], [287, "day-1"], [294, "day-1"]], "Day 2": [[179, "day-2"], [180, "day-2"], [182, "day-2"], [183, "day-2"], [184, "day-2"], [194, "day-2"], [195, "day-2"], [204, "day-2"], [205, "day-2"], [210, "day-2"], [213, "day-2"], [215, "Day-2"], [216, "day-2"], [219, "day-2"], [226, "day-2"], [259, "day-2"], [268, "day-2"], [270, "day-2"], [276, "day-2"], [280, "day-2"], [287, "day-2"], [294, "day-2"]], "Day 3": [[179, "day-3"], [180, "day-3"], [182, "day-3"], [183, "day-3"], [184, "day-3"], [194, "day-3"], [195, "day-3"], [204, "day-3"], [205, "day-3"], [210, "day-3"], [215, "Day-3"], [216, "day-3"], [219, "day-3"], [226, "day-3"], [259, "day-3"], [262, "day-3"], [268, "day-3"], [270, "day-3"], [276, "day-3"], [280, "day-3"], [282, "day-3"], [294, "day-3"]], "Day 4": [[179, "day-4"], [182, "day-4"], [194, "day-4"], [195, "day-4"], [204, "day-4"], [205, "day-4"], [259, "day-4"]], "Recommended Tutorials": [[179, "recommended-tutorials"]], "After Work Party": [[179, "after-work-party"], [210, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[180, "python-basics-28-9-2020-30-9-2020"], [340, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[181, "Iterables"]], "set constructor": [[181, "set-constructor"]], "Fast vs.\u00a0Simple": [[181, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[181, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[181, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[181, "Object-Oriented-Programming"], [231, "Object-Oriented-Programming"], [244, "Object-Oriented-Programming"], [255, "object-oriented-programming"], [269, "object-oriented-programming"], [271, "object-oriented-programming"], [272, "object-oriented-programming"], [275, "object-oriented-programming"], [276, "object-oriented-programming"], [281, "object-oriented-programming"], [287, "object-oriented-programming"], [290, "object-oriented-programming"], [293, "object-oriented-programming"], [294, "object-oriented-programming"], [297, "object-oriented-programming"], [429, "object-oriented-programming"], [991, "object-oriented-programming"]], "datetime": [[181, "datetime"], [208, "datetime"], [263, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[182, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[182, "additional-topics-brought-in-by-thomas"]], "Notebook": [[182, "notebook"], [203, "notebook"], [218, "Notebook"], [322, "notebook"]], "Tutorials": [[182, "tutorials"], [210, "tutorials"]], "Linux on Raspberry Pi": [[183, "linux-on-raspberry-pi"]], "Cloud Machine": [[183, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[183, "raspberry-on-participant-s-desks"]], "Basic security": [[183, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[183, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[183, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[183, "in-the-wild-watchdog"]], "TODO": [[183, "todo"], [309, "todo"], [310, "todo"], [311, "todo"], [1091, "todo"]], "Support Material": [[183, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[184, "python-basics-23-11-2020-25-11-2020"], [340, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[184, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[185, "linux-basics-30-11-2020-3-12-2020"], [340, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[186, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[186, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[186, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[186, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[186, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[186, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[186, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[186, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[186, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[186, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[186, "Floor-Division"]], "Modulo Operator: %": [[186, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[186, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[186, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[186, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[186, "Raw-Strings"], [208, "Raw-Strings"], [225, "Raw-Strings"], [231, "Raw-Strings"], [253, "Raw-Strings"], [283, "Raw-Strings"], [1020, "raw-strings"]], "f-Strings": [[186, "f-Strings"]], "Konvertierungen": [[186, "Konvertierungen"]], "Boolean": [[186, "Boolean"], [212, "Boolean"], [215, "Boolean"], [223, "Boolean"], [225, "Boolean"], [235, "Boolean"], [238, "Boolean"], [1009, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[186, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[186, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[186, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[186, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[186, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[186, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[186, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[186, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[186, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[186, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[186, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[186, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[186, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[186, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[186, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[186, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[186, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[186, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[186, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[186, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[186, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[186, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[186, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[186, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[186, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[186, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[186, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[186, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[186, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[186, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[186, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[186, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[186, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[186, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[186, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[186, "Liste"]], "Set": [[186, "Set"], [207, "Set"], [208, "Set"], [212, "Set"], [212, "id1"], [215, "Set"], [218, "Set"], [218, "id1"], [225, "Set"], [238, "Set"], [241, "Set"], [253, "Set"], [256, "Set"], [256, "id5"], [263, "Set"], [273, "Set"], [277, "Set"], [295, "Set"]], "8.2 Arrays": [[186, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[186, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[186, "8.4-Records"]], "8.5 Zeichenketten": [[186, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[186, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[186, "sorted,-reversed"]], "8.7 Dictionaries": [[186, "8.7-Dictionaries"]], "(jf) Records in Python": [[186, "(jf)-Records-in-Python"]], "8.8 Mengen": [[186, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[186, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[186, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[186, "\u00dcbung-1"]], "Versuch 1: in und index()": [[186, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[186, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[186, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[186, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[186, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[186, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[186, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[186, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[186, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[186, "Lokale-Variable"]], "Globale Variable (lesen)": [[186, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[186, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[186, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[186, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[186, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[186, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[186, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[186, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[186, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[186, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[186, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[187, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[187, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[187, "herdt-kapitel-6-grundlegende-sprachelemente"], [1140, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[187, "herdt-kapitel-7-kontrollstrukturen"], [1140, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[187, "verzweigung"], [1140, "verzweigung"]], "Schleifen": [[187, "schleifen"], [1140, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[187, "herdt-kapitel-8-elementare-datenstrukturen"], [1140, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[187, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1140, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[189, "python-basics-22-2-2021-24-2-2021"], [340, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[189, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[190, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[190, "books"], [240, "books"], [282, "books"], [1076, "books"]], "Python Advanced": [[191, "Python-Advanced"]], "Data Types Recap": [[191, "Data-Types-Recap"]], "Sequential Datatypes": [[191, "Sequential-Datatypes"], [223, "Sequential-Datatypes"], [235, "Sequential-Datatypes"], [1012, "sequential-datatypes"], [1012, "id1"]], "Slicing etc.": [[191, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[191, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[191, "Sets"], [191, "id1"], [199, "Sets"], [1025, "sets"]], "for Schleife, ganz kurz": [[191, "for-Schleife,-ganz-kurz"]], "Tuple": [[191, "Tuple"], [215, "Tuple"], [218, "Tuple"], [225, "Tuple"], [238, "Tuple"], [241, "Tuple"], [253, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[191, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[191, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[191, "Listen"], [225, "Listen"], [317, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[191, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[191, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[191, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[191, "Iterable:-Der-Begriff"]], "Zufall": [[191, "Zufall"]], "Regular Expressions": [[191, "Regular-Expressions"], [244, "Regular-Expressions"], [256, "Regular-Expressions"], [867, "regular-expressions"]], "enumerate()": [[191, "enumerate()"], [199, "enumerate()"], [202, "enumerate()"], [238, "enumerate()"], [256, "enumerate()"], [273, "enumerate()"], [295, "enumerate()"]], "JSON": [[191, "JSON"], [208, "JSON"], [218, "JSON"], [244, "JSON"], [253, "JSON"], [288, "JSON"], [291, "JSON"]], "2021-03-15": [[192, "id1"]], "Exercises (auf Github)": [[192, "exercises-auf-github"]], "Jupyter Notebook": [[192, "jupyter-notebook"], [194, "jupyter-notebook"], [211, "jupyter-notebook"], [213, "jupyter-notebook"], [216, "jupyter-notebook"], [222, "jupyter-notebook"], [227, "jupyter-notebook"], [230, "jupyter-notebook"], [233, "jupyter-notebook"], [317, "Jupyter-Notebook"], [1082, "jupyter-notebook"]], "Download": [[192, null], [194, null]], "Hallo Jupyter Notebook": [[193, "Hallo-Jupyter-Notebook"]], "Syntax": [[193, "Syntax"], [263, "Syntax"], [317, "Syntax"], [317, "id1"]], "Raw strings": [[193, "Raw-strings"]], "Variablen": [[193, "Variablen"], [225, "Variablen"]], "Tuple Unpacking": [[193, "Tuple-Unpacking"], [235, "Tuple-Unpacking"], [253, "Tuple-Unpacking"], [263, "Tuple-Unpacking"], [316, "Tuple-Unpacking"], [317, "Tuple-Unpacking"], [317, "id2"]], "Speicher, Memory Management": [[193, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[193, "Mutable-vs.\u00a0Immutable"], [244, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[193, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[193, "Aber!!!!"]], "Dictionary": [[193, "Dictionary"], [199, "Dictionary"], [207, "Dictionary"], [208, "Dictionary"], [212, "Dictionary"], [212, "id2"], [215, "Dictionary"], [218, "Dictionary"], [218, "id2"], [225, "Dictionary"], [238, "Dictionary"], [241, "Dictionary"], [253, "Dictionary"], [256, "Dictionary"], [256, "id4"], [263, "Dictionary"], [273, "Dictionary"], [277, "Dictionary"], [283, "Dictionary"], [295, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[193, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[193, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[193, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[193, "for-und-range()"]], "Objektidentit\u00e4t": [[193, "Objektidentit\u00e4t"]], "Das with Statement": [[193, "Das-with-Statement"], [202, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[193, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[193, "String-Operationen"]], "enumerate(), und verlorene Indices": [[193, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[193, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[193, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[194, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[194, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[195, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[195, null]], "Course Preparation": [[195, "course-preparation"], [248, "course-preparation"], [250, "course-preparation"], [258, "course-preparation"]], "SSH": [[195, "ssh"], [327, "ssh"]], "Linux and/or Shell on Windows Host": [[195, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[195, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[197, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[199, "Syntax-etc."], [231, "Syntax-etc."], [277, "Syntax-etc."], [1004, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[199, "Comments-vs.\u00a0Documentation"]], "Variables": [[199, "Variables"], [212, "Variables"], [215, "Variables"], [231, "Variables"], [241, "Variables"], [273, "Variables"], [277, "Variables"], [317, "Variables"], [1006, "variables"]], "Assignment Fun": [[199, "Assignment-Fun"], [238, "Assignment-Fun"], [1006, "assignment-fun"]], "Assignment Details": [[199, "Assignment-Details"], [231, "Assignment-Details"], [238, "Assignment-Details"], [317, "Assignment-Details"], [1006, "assignment-details"]], "Operators": [[199, "Operators"], [235, "Operators"]], "Integer Arithmetic": [[199, "Integer-Arithmetic"]], "String Methods": [[199, "String-Methods"], [316, "String-Methods"]], "Datatype Conversions": [[199, "Datatype-Conversions"], [223, "Datatype-Conversions"], [225, "Datatype-Conversions"], [231, "Datatype-Conversions"], [235, "Datatype-Conversions"], [238, "Datatype-Conversions"], [256, "Datatype-Conversions"], [273, "Datatype-Conversions"], [277, "Datatype-Conversions"], [283, "Datatype-Conversions"], [295, "Datatype-Conversions"], [317, "Datatype-Conversions"], [1007, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[199, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[199, "Complex-Datatypes"], [317, "Complex-Datatypes"]], "List (mutable)": [[199, "List-(mutable)"], [212, "List-(mutable)"]], "extend()? Iterable?": [[199, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[199, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[199, "in-Operator"], [238, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[199, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[199, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[199, "sum()"]], "map()": [[199, "map()"], [202, "map()"]], "list() function": [[199, "list()-function"]], "Performance: in Operator, und list und set": [[199, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[199, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[200, "python-grundlagen-2021-05-03-2021-05-05"], [340, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[200, "weiterfuhrende-information"]], "Visual Studio Code": [[200, "visual-studio-code"], [216, "visual-studio-code"], [1076, "visual-studio-code"]], "Python Beginner Tutorials": [[200, "python-beginner-tutorials"], [240, "python-beginner-tutorials"], [1076, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[200, "numpy-and-data-science-tutorials"], [240, "numpy-and-data-science-tutorials"], [243, "numpy-and-data-science-tutorials"], [276, "numpy-and-data-science-tutorials"], [1076, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[200, "pypi-installing-modules-that-don-t-come-as-batteries"], [1076, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[200, "git-and-github"], [1076, "git-and-github"]], "Conference Talks": [[200, "conference-talks"], [276, "conference-talks"], [1076, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[201, "python-grundlagen-jupyter-notebook"], [214, "python-grundlagen-jupyter-notebook"], [217, "python-grundlagen-jupyter-notebook"], [220, "python-grundlagen-jupyter-notebook"], [239, "python-grundlagen-jupyter-notebook"], [242, "python-grundlagen-jupyter-notebook"], [245, "python-grundlagen-jupyter-notebook"], [254, "python-grundlagen-jupyter-notebook"], [257, "python-grundlagen-jupyter-notebook"], [278, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[202, "import-zipfile"]], "Read Contents \u2026": [[202, "Read-Contents-\u2026"]], "Extract One Member": [[202, "Extract-One-Member"]], "All in One, Using with": [[202, "All-in-One,-Using-with"]], "Functionality: Methods": [[202, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[202, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[202, "Instance-Attributes"]], "Class Attributes": [[202, "Class-Attributes"]], "Public, Protected, Private": [[202, "Public,-Protected,-Private"]], "Properties": [[202, "Properties"], [231, "Properties"], [444, "properties"], [996, "properties"]], "Functions, Positional and Keyword Arguments": [[202, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[202, "Positional-Arguments"]], "Keyword Arguments": [[202, "Keyword-Arguments"], [223, "Keyword-Arguments"], [318, "Keyword-Arguments"], [1018, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[202, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[202, "The-range()-Function"], [208, "The-range()-Function"], [215, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[202, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[202, "Iterable"], [218, "Iterable"]], "list(), and iterable?": [[202, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[202, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[202, "Decorators,-etc."]], "NoneType and None": [[202, "NoneType-and-None"]], "File I/O": [[202, "File-I/O"], [231, "File-I/O"], [238, "File-I/O"], [241, "File-I/O"], [273, "File-I/O"], [277, "File-I/O"], [314, "File-I/O"], [913, "file-i-o"], [1026, "file-i-o"]], "Iteration, yield, Recursion": [[202, "Iteration,-yield,-Recursion"]], "Recursion": [[202, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[202, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[202, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[202, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[202, "zip()"]], "filter(), and several other methods to do the same": [[202, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[202, "OSError,-errno"]], "The platform Module, sys.path": [[202, "The-platform-Module,-sys.path"]], "os.path": [[202, "os.path"], [218, "os.path"], [225, "os.path"]], "Exceptions und so (assert())": [[202, "Exceptions-und-so-(assert())"]], "AssertionError": [[202, "AssertionError"]], "Random Questions": [[202, "Random-Questions"]], "Slicing": [[202, "Slicing"], [225, "Slicing"], [231, "Slicing"], [256, "Slicing"], [277, "Slicing"], [1097, "slicing"]], "OO": [[202, "OO"], [270, "oo"], [331, "oo"], [525, "oo"]], "String Formatting": [[202, "String-Formatting"], [208, "String-Formatting"], [1021, "string-formatting"]], "import datetime": [[202, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[203, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[203, "predefined-streams"]], "PCAP Exam Syllabus": [[203, "pcap-exam-syllabus"], [216, "pcap-exam-syllabus"]], "2021-06-09": [[203, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[204, "programmieren-mit-c-2021-06-14-2021-06-18"], [340, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[204, "preparation-tools"]], "State machine": [[204, "state-machine"]], "Regular Course Topics": [[204, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[204, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[204, "regular-course-material"], [204, "id1"]], "Group Project Kick-Off :-)": [[204, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[204, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[204, "group-project-use-case-driven-course-flow"]], "Day 5": [[204, "day-5"], [205, "day-5"], [259, "day-5"]], "Pointer Recap": [[204, "pointer-recap"]], "On With Group Project": [[204, "on-with-group-project"]], "C++ Basics": [[204, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[204, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[205, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[205, "setup-for-the-new-kids"]], "Recapitulate some C": [[205, "recapitulate-some-c"]], "Group project review": [[205, "group-project-review"]], "Jump into C++": [[205, "jump-into-c"]], "Regular Topics": [[205, "regular-topics"], [205, "id2"], [205, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[205, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[205, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[205, "finish-first-user-database-functionality"]], "Unit Testing": [[205, "unit-testing"], [262, "unit-testing"], [265, "unit-testing"], [330, "unit-testing"]], "GTest Installation": [[205, "gtest-installation"]], "Git Workflows": [[205, "git-workflows"]], "Day X": [[205, "day-x"]], "Smart Pointers, Recap": [[205, "smart-pointers-recap"]], "std::map": [[205, "std-map"], [603, "std-map"]], "OO, and Polymorphism": [[205, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[206, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [340, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[206, "variablen-und-datentypen"], [222, "variablen-und-datentypen"], [234, "variablen-und-datentypen"]], "Kontrollstrukturen": [[206, "kontrollstrukturen"], [222, "kontrollstrukturen"], [223, "Kontrollstrukturen"], [234, "kontrollstrukturen"]], "Datenstrukturen": [[207, "Datenstrukturen"]], "List": [[207, "List"], [208, "List"], [215, "List"], [218, "List"], [238, "List"], [241, "List"], [253, "List"], [256, "List"], [283, "List"], [295, "List"], [1105, "list"]], "Iteration": [[207, "Iteration"], [207, "id1"], [208, "Iteration"], [208, "id1"], [218, "Iteration"], [241, "Iteration"], [253, "Iteration"], [295, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[207, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[207, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[207, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[207, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[207, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[207, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[208, "Iterable?"]], "List Comprehension, Generator Expression": [[208, "List-Comprehension,-Generator-Expression"]], "Literals": [[208, "Literals"], [469, "literals"]], "Quoting?": [[208, "Quoting?"], [212, "Quoting?"]], "Multiline Strings": [[208, "Multiline-Strings"], [212, "Multiline-Strings"], [1020, "multiline-strings"]], "Functionality": [[208, "Functionality"], [802, "functionality"]], "strip() and friends": [[208, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[208, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[208, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[209, "read-a-cleaned-up-sap-export"]], "Requirement": [[209, "requirement"], [468, "requirement"], [490, "requirement"], [491, "requirement"], [492, "requirement"], [496, "requirement"], [497, "requirement"], [498, "requirement"], [499, "requirement"], [500, "requirement"], [501, "requirement"], [905, "requirement"], [912, "requirement"], [1032, "requirement"], [1033, "requirement"], [1054, "requirement"], [1065, "requirement"], [1066, "requirement"], [1067, "requirement"], [1068, "requirement"], [1070, "requirement"], [1071, "requirement"], [1072, "requirement"], [1073, "requirement"]], "Solution": [[209, "solution"], [447, "solution"], [449, "solution"], [452, "solution"], [1113, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[210, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[212, "Initial-Terminology"]], "Sequence": [[212, "Sequence"]], "Tuple (immutable)": [[212, "Tuple-(immutable)"]], "References, (Im)mutability": [[212, "References,-(Im)mutability"], [225, "References,-(Im)mutability"], [238, "References,-(Im)mutability"], [241, "References,-(Im)mutability"], [256, "References,-(Im)mutability"], [263, "References,-(Im)mutability"], [277, "References,-(Im)mutability"], [283, "References,-(Im)mutability"], [283, "id1"], [295, "References,-(Im)mutability"], [1016, "references-im-mutability"]], "Iteration, for, and range()": [[212, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[212, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[212, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[212, "List-and-Tuple"]], "matplotlib": [[212, "matplotlib"], [244, "matplotlib"]], "File I/O, and Strings": [[212, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[212, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[212, "Miscellaneous-String-Methods"], [223, "Miscellaneous-String-Methods"], [225, "Miscellaneous-String-Methods"], [231, "Miscellaneous-String-Methods"], [241, "Miscellaneous-String-Methods"], [256, "Miscellaneous-String-Methods"], [277, "Miscellaneous-String-Methods"], [283, "Miscellaneous-String-Methods"], [1022, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[213, "python-basics-2021-08-31-2021-09-01"], [340, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[213, "numerics-and-ai"]], "Mountains near Graz": [[213, "mountains-near-graz"]], "2021-11-17": [[215, "2021-11-17"]], "Enter Tuples": [[215, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[215, "Datatype-Conversions,-Type-Names"]], "NoneType": [[215, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[215, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[215, "Exercise:-Mixed-List"]], "Python Documentation": [[215, "Python-Documentation"]], "for": [[215, "for"], [277, "for"], [317, "for"]], "Iteration over Compound Datatypes": [[215, "Iteration-over-Compound-Datatypes"], [225, "Iteration-over-Compound-Datatypes"]], "File IO": [[215, "File-IO"], [231, "File-IO"], [259, "file-io"], [263, "File-IO"]], "Generators, Iterator Protocol, for": [[215, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[215, "Common-Sequence-Operation"]], "Comprehensions": [[215, "Comprehensions"], [218, "Comprehensions"], [231, "Comprehensions"], [263, "Comprehensions"], [295, "Comprehensions"]], "List, Iterable? WTF?": [[215, "List,-Iterable?-WTF?"]], "Dict and iterable": [[215, "Dict-and-iterable"]], "More on Lists": [[215, "More-on-Lists"], [223, "More-on-Lists"], [238, "More-on-Lists"]], "More on Dictionaries": [[215, "More-on-Dictionaries"], [223, "More-on-Dictionaries"]], "References, Mutability": [[215, "References,-Mutability"]], "CSV": [[215, "CSV"], [232, "csv"], [240, "csv"], [277, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[216, "python-basics-2021-11-17-2021-11-19"], [340, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[216, "python-core-topics"]], "Python Standard Library": [[216, "python-standard-library"]], "More About Strings": [[218, "More-About-Strings"], [235, "More-About-Strings"], [283, "More-About-Strings"], [1020, "more-about-strings"]], "List, Tuple": [[218, "List,-Tuple"], [273, "List,-Tuple"], [277, "List,-Tuple"]], "Tuple Unpacking: What Else": [[218, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[218, "Iterator-Protocol"], [225, "Iterator-Protocol"], [256, "Iterator-Protocol"], [273, "Iterator-Protocol"], [277, "Iterator-Protocol"]], "yield": [[218, "yield"], [241, "yield"]], "Everything is an Object of a Type": [[218, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[218, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[218, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[218, "2021-12-17"]], "Shift Operators": [[218, "Shift-Operators"]], "PCAP Sample Exam": [[218, "PCAP-Sample-Exam"]], "System Errors": [[218, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[219, "python-advanced-2021-12-01-2021-12-03"], [340, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[219, "basics-recap"], [272, "basics-recap"]], "Group Project Preparation": [[219, "group-project-preparation"]], "Hmmm?": [[219, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[221, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [340, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[221, "id1"]], "2021-12-07": [[221, "id2"]], "2021-12-08": [[221, "id3"]], "2021-12-09": [[221, "id4"]], "2022-01-24": [[221, "id5"]], "Undefined Behavior": [[221, "undefined-behavior"]], "Modularization": [[221, "modularization"], [385, "modularization"]], "2022-01-25": [[221, "id6"]], "C++ and OO (Classes)": [[221, "c-and-oo-classes"]], "Modularization (again)": [[221, "modularization-again"]], "2022-01-26": [[221, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[221, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[221, "classes-continued"]], "2022-01-27": [[221, "id8"]], "2022-01-28": [[221, "id9"]], "Standard Template Library: Container Templates": [[221, "standard-template-library-container-templates"]], "2022-01-31": [[221, "id10"]], "2022-02-01": [[221, "id11"]], "Algorithms": [[221, "algorithms"], [592, "algorithms"]], "Functors": [[221, "functors"]], "Unified Modeling Language (UML)": [[221, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[221, "exercise-using-all-from-today"]], "2022-02-02": [[221, "id12"]], "Associative Container: std::map": [[221, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[221, "exceptions-and-exception-handling"]], "2022-02-03": [[221, "id13"]], "2022-02-04": [[221, "id14"]], "C++11: A New Language": [[221, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[221, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[221, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[222, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [340, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[223, "2022-01-17"]], "Variables and Datatypes": [[223, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[223, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[223, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[223, "Integer-Numbers:-Arithmetic"], [235, "Integer-Numbers:-Arithmetic"], [1007, "integer-numbers-arithmetic"]], "Some Methods": [[223, "Some-Methods"]], "String Formatting: f-Strings": [[223, "String-Formatting:-f-Strings"]], "More about Strings": [[223, "More-about-Strings"]], "if": [[223, "if"], [263, "if"]], "2022-01-18": [[223, "2022-01-18"]], "Miscellanea": [[223, "Miscellanea"]], "Braces: Single Element Tuples?": [[223, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[223, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[223, "while-Loops"], [225, "while-Loops"], [238, "while-Loops"], [1011, "while-loops"], [1011, "id1"]], "break and continue": [[223, "break-and-continue"], [382, "break-and-continue"], [382, "id1"], [1011, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[223, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[223, "Sequence-Membership"], [1012, "sequence-membership"]], "list (mutable)": [[223, "list-(mutable)"]], "tuple (immutable)": [[223, "tuple-(immutable)"]], "dict (mutable)": [[223, "dict-(mutable)"]], "set (mutable)": [[223, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[223, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[223, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[223, "Default-Parameters"], [225, "Default-Parameters"], [318, "Default-Parameters"], [1018, "default-parameters"]], "List Comprehensions": [[223, "List-Comprehensions"], [235, "List-Comprehensions"]], "Iteration over Dictionaries": [[223, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[223, "Building-Dictionaries"], [1024, "building-dictionaries"]], "More on Sets": [[223, "More-on-Sets"]], "with: Context Managers": [[223, "with:-Context-Managers"]], "Strings Intro": [[225, "Strings-Intro"]], "Doc Strings": [[225, "Doc-Strings"]], "Object Identity": [[225, "Object-Identity"]], "Integers": [[225, "Integers"], [235, "Integers"], [238, "Integers"], [256, "Integers"], [263, "Integers"], [283, "Integers"]], "Variablen? Datenypen?": [[225, "Variablen?-Datenypen?"]], "Objects, Classes": [[225, "Objects,-Classes"]], "Python Standard Libarary Examples": [[225, "Python-Standard-Libarary-Examples"]], "collections": [[225, "collections"]], "ChainMap": [[225, "ChainMap"]], "deque": [[225, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[225, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[225, "Slice-Assignment"], [1013, "slice-assignment"]], "Lists are mutable": [[225, "Lists-are-mutable"]], "Shallow copy and deep copy": [[225, "Shallow-copy-and-deep-copy"]], "else": [[225, "else"], [231, "else"]], "for Loops, range()": [[225, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[225, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[225, "dict.fromkeys()"], [238, "dict.fromkeys()"]], "Generators": [[225, "Generators"], [231, "Generators"], [271, "generators"], [272, "generators"], [276, "generators"], [293, "generators"], [297, "generators"]], "join, split": [[225, "join,-split"]], "strip, lstrip, rstrip": [[225, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[226, "python-basics-2022-02-23-2022-02-25"], [340, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[226, "data-structures"]], "OS Things": [[226, "os-things"]], "Data Science": [[226, "data-science"], [294, "data-science"], [295, "Data-Science"]], "Wiederholung": [[228, "Wiederholung"]], "Mutable/Immutable": [[228, "Mutable/Immutable"]], "Attribute": [[228, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[228, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[228, "Exceptions"], [244, "Exceptions"], [269, "exceptions"], [525, "exceptions"], [572, "exceptions"], [573, "exceptions"]], "for vs.\u00a0while, range()": [[228, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[228, "String-Methods-(some)"]], "eval()": [[228, "eval()"], [238, "eval()"], [295, "eval()"]], "exec()": [[228, "exec()"], [244, "exec()"]], "Dictionary Iteration": [[228, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[228, "Classes,-Attributes,-OO"]], "Types and Instances": [[228, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[228, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[228, "OO-Everywhere"]], "Dictionary Operations": [[228, "Dictionary-Operations"]], "collections.defaultdict": [[228, "collections.defaultdict"], [253, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[229, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[229, "id1"]], "2022-03-16": [[229, "id2"]], "Test Driven Development": [[229, "test-driven-development"], [271, "test-driven-development"], [293, "test-driven-development"], [294, "test-driven-development"]], "2022-03-17": [[229, "id3"]], "2022-03-31": [[229, "id4"]], "PCAP exam preparation": [[229, "pcap-exam-preparation"]], "Hello World": [[231, "Hello-World"], [344, "hello-world"], [1002, "hello-world"]], "Blahblah": [[231, "Blahblah"], [582, "blahblah"], [1001, "blahblah"]], "Object Oriented?": [[231, "Object-Oriented?"]], "MQTT": [[231, "MQTT"], [297, "mqtt"], [1092, "mqtt"]], "Commandline Arguments": [[231, "Commandline-Arguments"], [396, "commandline-arguments"], [396, "id1"]], "Object Lifetime": [[231, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[231, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[231, "More-String-Methods"], [231, "id1"]], "Dictionary Preview": [[231, "Dictionary-Preview"]], "list: Mutable": [[231, "list:-Mutable"]], "list(): explicit constructor": [[231, "list():-explicit-constructor"]], "tuple: Immutable": [[231, "tuple:-Immutable"]], "dict: Mutable": [[231, "dict:-Mutable"]], "set: Mutable": [[231, "set:-Mutable"]], "List comprehension": [[231, "List-comprehension"]], "DIctionary Comprehension": [[231, "DIctionary-Comprehension"]], "Set Comprehension": [[231, "Set-Comprehension"], [295, "Set-Comprehension"], [972, "set-comprehension"]], "max": [[231, "max"]], "for, enumerate()": [[231, "for,-enumerate()"]], "Iteratoren, Generatoren": [[231, "Iteratoren,-Generatoren"]], "Generatoren": [[231, "Generatoren"]], "split und join": [[231, "split-und-join"]], "strip()": [[231, "strip()"]], "dict vs.\u00a0OrderedDict": [[231, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[231, "Duck-Typing"], [988, "duck-typing"]], "Interfaces": [[231, "Interfaces"], [621, "interfaces"], [621, "id1"]], "Implementation Inheritance": [[231, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[231, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[231, "__bases__"]], "__mro__": [[231, "__mro__"]], "Object Layout (self)": [[231, "Object-Layout-(self)"]], "More from OO": [[231, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[231, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[231, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[231, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[231, "Exception-Handling"], [262, "exception-handling"], [265, "exception-handling"], [270, "exception-handling"], [333, "exception-handling"], [975, "exception-handling"]], "Order of except Clauses": [[231, "Order-of-except-Clauses"]], "finally": [[231, "finally"]], "lambda": [[231, "lambda"]], "map(), filter()": [[231, "map(),-filter()"], [295, "map(),-filter()"]], "Generators, Iteration Protocol": [[231, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[231, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[232, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [340, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[232, "basics"]], "2022-03-30: Basics": [[232, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[232, "advanced"]], "Plan For The Wild Part": [[232, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[234, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [340, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[234, "discussion-flow-charts"]], "BlahBlah": [[235, "BlahBlah"], [238, "BlahBlah"], [241, "BlahBlah"]], "Interactive": [[235, "Interactive"]], "For Beginners": [[235, "For-Beginners"]], "Not For Beginners?": [[235, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[235, "Strings,-1st-Explanation"]], "Operator Precedence": [[235, "Operator-Precedence"], [238, "Operator-Precedence"], [1007, "operator-precedence"]], "Floating Point Numbers": [[235, "Floating-Point-Numbers"], [1007, "floating-point-numbers"]], "Docstrings": [[235, "Docstrings"], [241, "Docstrings"], [317, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[235, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[235, "Random-Numbers"]], "Indexing and Slicing": [[235, "Indexing-and-Slicing"], [283, "Indexing-and-Slicing"], [1013, "indexing-and-slicing"]], "for Loops": [[235, "for-Loops"], [347, "for-loops"], [1014, "for-loops"]], "range()": [[235, "range()"], [263, "range()"]], "Filterketten": [[235, "Filterketten"]], "Zen": [[235, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[235, "Compound-Datatypes-By-Example:-List,-Tuple"], [1008, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[235, "Compound-Datatypes-By-Example:-Dictionary"], [1008, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[235, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[235, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[235, "Compound-Datatypes-By-Example:-Set"], [1008, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[235, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[237, "python-basics-2022-04-25-2022-04-27"], [340, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[238, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[238, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[238, "Variables-and-Types"]], "Swap": [[238, "Swap"]], "Integers are Infinitely long": [[238, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[238, "Floating-Point-Comparison"]], "Mutability/Immutability": [[238, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[238, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[238, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1040, "exercise-determine-maximum-of-two-numbers"], [1050, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[238, "Ranges"], [698, "ranges"]], "Exercise: Sort out Duplicates": [[238, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[238, "Algorithmic-Complexity"]], "More On Dictionaries": [[238, "More-On-Dictionaries"]], "More On Sets": [[238, "More-On-Sets"]], "eval(), json": [[238, "eval(),-json"]], "Encoding": [[238, "Encoding"], [262, "encoding"], [283, "Encoding"], [322, "encoding"], [1089, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[240, "python-2022-05-02-2022-05-05"], [340, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[240, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[240, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[240, "excursion-can-communication-oo-modules"]], "Modules": [[240, "modules"], [253, "Modules"], [294, "modules"], [322, "modules"], [693, "modules"], [983, "modules"]], "CSV, Functions": [[240, "csv-functions"]], "PyPI, Virtual Environments": [[240, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[240, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[240, "more-on-datatypes"]], "Random Topics": [[240, "random-topics"]], "Standard Library": [[240, "standard-library"]], "Hello Jupyter Notebook": [[241, "Hello-Jupyter-Notebook"]], "Syntax etc": [[241, "Syntax-etc"]], "Mutability": [[241, "Mutability"], [273, "Mutability"]], "Removing Elements": [[241, "Removing-Elements"], [603, "removing-elements"]], "Nested Lists?": [[241, "Nested-Lists?"]], "while loops, and else": [[241, "while-loops,-and-else"]], "for loops (and else)": [[241, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[241, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[241, "Encoding,-and-String"]], "Regular Expression": [[241, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[241, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[241, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[241, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[241, "itertools.chain()"]], "Destructor?": [[241, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[241, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[243, "python-advanced-2022-05-16-2022-05-18"], [340, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[243, "project-management"], [294, "project-management"], [329, "project-management"], [330, "project-management"], [334, "project-management"]], "Unit Testing, Test Driven Development": [[243, "unit-testing-test-driven-development"]], "Object Priented Programming": [[243, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[243, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[243, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[243, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[243, "xml-element-tree"]], "Projektabschlusstag": [[243, "projektabschlusstag"]], "Basic Python": [[243, "basic-python"], [1139, "basic-python"]], "Assert": [[244, "Assert"]], "The id() function": [[244, "The-id()-function"]], "class Person": [[244, "class-Person"]], "Functions That Do Not Return Anything": [[244, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[244, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[244, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[244, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[244, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[244, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[246, "vorbesprechung-2022-05-11"]], "Legende": [[246, "legende"]], "Neuerungen in C++ seit 2011": [[246, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[246, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[246, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[246, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[247, "c-a-new-language-starting-in-2011"], [248, "c-a-new-language-starting-in-2011"]], "Metadata": [[247, "metadata"], [248, "metadata"], [250, "metadata"], [860, "metadata"]], "Introduction": [[247, "introduction"], [248, "introduction"], [250, "introduction"], [269, "introduction"], [270, "introduction"], [303, "introduction"], [343, "introduction"], [360, "introduction"], [422, "introduction"], [453, "introduction"], [548, "introduction"], [645, "introduction"], [704, "introduction"], [728, "introduction"], [778, "introduction"], [975, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[247, "pythonicity-thank-you-readablility-and-writability"], [248, "pythonicity-thank-you-readablility-and-writability"], [250, "pythonicity-thank-you-readablility-and-writability"], [303, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[247, "range-based-for-loops"], [248, "range-based-for-loops"], [250, "range-based-for-loops"], [303, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[247, "tuple-unpacking-err-structured-binding"], [248, "tuple-unpacking-err-structured-binding"], [250, "tuple-unpacking-err-structured-binding"], [303, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[247, "duck-typing-err-auto-without-a-duck"], [248, "duck-typing-err-auto-without-a-duck"], [250, "duck-typing-err-auto-without-a-duck"], [303, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[247, "things-that-simply-deserved-fixing-since-ages"], [248, "things-that-simply-deserved-fixing-since-ages"], [250, "things-that-simply-deserved-fixing-since-ages"], [303, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[247, "brace-initialization"], [248, "brace-initialization"], [250, "brace-initialization"], [303, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[247, "new-oo-keywords-override-final-default-delete"], [248, "new-oo-keywords-override-final-default-delete"], [250, "new-oo-keywords-override-final-default-delete"], [303, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[247, "strongly-typed-enum"], [248, "strongly-typed-enum"], [250, "strongly-typed-enum"], [303, "strongly-typed-enum"], [648, "strongly-typed-enum"]], "Delegating Constructor": [[247, "delegating-constructor"], [248, "delegating-constructor"], [250, "delegating-constructor"], [303, "delegating-constructor"], [653, "delegating-constructor"]], "nullptr": [[247, "nullptr"], [248, "nullptr"], [250, "nullptr"], [303, "nullptr"], [661, "nullptr"]], "Smart Pointers": [[247, "smart-pointers"], [248, "smart-pointers"], [250, "smart-pointers"], [270, "smart-pointers"], [525, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[247, "moving-rvalue-references"], [248, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[247, "functions-std-bind-std-function-lambdas"], [248, "functions-std-bind-std-function-lambdas"], [250, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[248, "work-environment"], [250, "work-environment"], [268, "work-environment"], [269, "work-environment"], [270, "work-environment"], [329, "work-environment"]], "Skeleton Project": [[248, "skeleton-project"], [250, "skeleton-project"], [567, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[249, "linux-basics-2022-10-03-2022-10-05"], [340, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[250, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [340, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[250, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[250, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[250, "coroutines-and-c-23-generators"]], "Ranges And Views": [[250, "ranges-and-views"]], "Concepts": [[250, "concepts"], [303, "concepts"], [663, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[251, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [340, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[251, "monday"]], "Tuesday": [[251, "tuesday"]], "Wednesday": [[251, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[252, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[252, "up-front-project-management"], [271, "up-front-project-management"], [293, "up-front-project-management"]], "Object Oriented Programming: Classes": [[252, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[252, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[252, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[252, "exercise-series-csv-json"]], "Iteration, Generators": [[252, "iteration-generators"]], "Going Dynamic: type(), exec()": [[252, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[252, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[252, "group-project-kickoff"], [272, "group-project-kickoff"], [294, "group-project-kickoff"], [297, "group-project-kickoff"]], "Data Structures Recap": [[252, "data-structures-recap"]], "Miscellaneous Livehacking": [[252, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[252, "function-arguments-closures-decorators"], [287, "function-arguments-closures-decorators"]], "Exceptions, with": [[252, "exceptions-with"], [287, "exceptions-with"], [290, "exceptions-with"]], "Package Management": [[252, "package-management"]], "Videos": [[252, "videos"]], "Beginner": [[252, "beginner"], [276, "beginner"]], "Advanced": [[252, "advanced"], [276, "advanced"]], "Fun": [[252, "fun"]], "Python (2022-10-17)": [[253, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[253, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[253, "Variables,-Types"]], "Immutable? References?": [[253, "Immutable?-References?"]], "And range()?": [[253, "And-range()?"]], "More About Dictionaries": [[253, "More-About-Dictionaries"], [253, "id1"], [256, "More-About-Dictionaries"], [283, "More-About-Dictionaries"], [1024, "more-about-dictionaries"]], "More About Lists": [[253, "More-About-Lists"], [256, "More-About-Lists"], [283, "More-About-Lists"], [1023, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[255, "python-2022-11-16-2022-11-18"], [256, "Python-(2022-11-16---2022-11-18)"], [340, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[255, "control-flow-sequences-iteration"], [262, "control-flow-sequences-iteration"], [265, "control-flow-sequences-iteration"], [275, "control-flow-sequences-iteration"], [276, "control-flow-sequences-iteration"], [281, "control-flow-sequences-iteration"], [282, "control-flow-sequences-iteration"], [282, "id2"]], "More Datatypes": [[255, "more-datatypes"], [262, "more-datatypes"], [265, "more-datatypes"], [275, "more-datatypes"], [276, "more-datatypes"], [276, "id2"], [281, "more-datatypes"], [282, "more-datatypes"], [345, "more-datatypes"]], "Exercise Series: CSV Files": [[255, "exercise-series-csv-files"], [275, "exercise-series-csv-files"], [276, "exercise-series-csv-files"], [281, "exercise-series-csv-files"], [282, "exercise-series-csv-files"]], "Advanced Language Features": [[255, "advanced-language-features"], [275, "advanced-language-features"], [276, "advanced-language-features"], [281, "advanced-language-features"], [408, "advanced-language-features"]], "Noob Exercises": [[255, "noob-exercises"]], "Object Oriented": [[256, "Object-Oriented"]], "Lists and Tuples": [[256, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[256, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[256, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[256, "And-Lists?-Mutable!"]], "Tuples?": [[256, "Tuples?"]], "set": [[256, "set"]], "More About Sets": [[256, "More-About-Sets"], [283, "More-About-Sets"], [1025, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[256, "Comprehensions-(List,-Dictionary,-Set)"], [972, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[256, "Generator-Expressions"]], "eval and exec": [[256, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[258, "linux-basics-2023-01-23-2023-01-26"], [340, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[259, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [340, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[259, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[259, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[259, "day-1-overview"]], "Introductory Live Hacking": [[259, "introductory-live-hacking"]], "The Shell": [[259, "the-shell"]], "Processes Quick Walk-Through": [[259, "processes-quick-walk-through"]], "Permissions": [[259, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[259, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[259, "uart"]], "SUSI": [[259, "susi"]], "Secure Shell (SSH)": [[259, "secure-shell-ssh"]], "Miscellaneous Hardware": [[259, "miscellaneous-hardware"]], "Group Exercise": [[259, "group-exercise"]], "Untold": [[259, "untold"], [269, "untold"], [272, "untold"]], "More From The Commandline": [[259, "more-from-the-commandline"]], "Multithreading (And C++)": [[259, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[260, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[260, "Filter-in-Pandas"]], "Copy vs Reference": [[260, "Copy-vs-Reference"]], "Immutable": [[260, "Immutable"]], "String": [[260, "String"]], "Regex": [[260, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[261, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[261, "pipeline-driver"]], "Virtual Environment Setup": [[261, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[261, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[261, "filter-select-uncategorized"]], "More Categories": [[261, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[262, "python-for-sap-developers-2023-03-13-2023-03-15"], [340, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[262, "day-1-basics"]], "Demo": [[262, "demo"]], "Day 2 (Basics, Continued)": [[262, "day-2-basics-continued"]], "Pandas": [[262, "pandas"], [263, "Pandas"], [265, "pandas"], [269, "pandas"], [294, "pandas"], [1096, "pandas"]], "Hacking About On A SAP Test Dataset": [[262, "hacking-about-on-a-sap-test-dataset"], [266, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[262, "untold-from-original-agenda"]], "OO Introduction": [[262, "oo-introduction"], [265, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[262, "context-managers-automatic-cleanup"], [265, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[262, "iteration-generators-comprehensions"], [265, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[262, "decorators-and-related-topics"], [265, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[262, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[263, "2023-03-13"]], "Comment vs Docstring": [[263, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[263, "Mutable?-Immutable?"]], "Lists": [[263, "Lists"], [263, "id2"], [277, "Lists"]], "Tuples": [[263, "Tuples"]], "DataType Conversiosn": [[263, "DataType-Conversiosn"]], "String, File IO Exercise": [[263, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[264, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[265, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[265, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[265, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[265, "day-3-domain-specifics"]], "NumPy": [[265, "numpy"], [294, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[267, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[267, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[267, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[267, "DataFrame.all()-(and-any())"]], "Column Selection": [[267, "Column-Selection"]], "Dropping Columns": [[267, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[267, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[267, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[267, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[267, "Conversion"]], "Usage: A Filter": [[267, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[267, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[267, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[268, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[268, "preferred-ubuntu-under-windows-wsl"], [270, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[268, "unsupported-environments"]], "Skeleton Project Setup": [[268, "skeleton-project-setup"], [270, "skeleton-project-setup"]], "Classes, Objects, Methods": [[268, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[268, "heavy-weight-oo-muscle"], [270, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[268, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[268, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[268, "a-little-concurrency"]], "Untold So Far": [[268, "untold-so-far"]], "C++ Standard Library": [[268, "c-standard-library"]], "Miscellaneous Topics": [[268, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[269, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[269, "clean-code"], [271, "clean-code"], [272, "clean-code"]], "Demo Hacking": [[269, "demo-hacking"]], "Python Development: Select Topics": [[269, "python-development-select-topics"]], "Built-In Types: Facts": [[269, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[269, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[269, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[269, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[269, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[269, "decorators-the-ominous"]], "Modules And Packages": [[269, "modules-and-packages"], [293, "modules-and-packages"]], "Design Patterns": [[269, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[270, "c-for-embedded-developers-2023-04-18-2023-04-20"], [340, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[270, "some-details"]], "Standard Template Library": [[270, "standard-template-library"], [615, "standard-template-library"]], "Warm-Up": [[270, "warm-up"]], "Sensor Exercise, Resolved": [[270, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[270, "oo-cont-d"]], "Smart Pointers (Continued)": [[270, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[270, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[270, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[271, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[271, "day-1-python-inside-out"], [272, "day-1-python-inside-out"]], "Exercise Prerequisites": [[271, "exercise-prerequisites"], [293, "exercise-prerequisites"]], "References And Other Pitfalls": [[271, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[271, "looping-constructs-with-an-emphasis-on-the-else-clause"], [293, "looping-constructs-with-an-emphasis-on-the-else-clause"], [297, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[271, "closures-decorators-and-more"], [272, "closures-decorators-and-more"], [293, "closures-decorators-and-more"], [297, "closures-decorators-and-more"]], "Dynamic Features": [[271, "dynamic-features"], [272, "dynamic-features"], [273, "Dynamic-Features"], [293, "dynamic-features"], [297, "dynamic-features"]], "Error Handling And Recovery": [[271, "error-handling-and-recovery"], [272, "error-handling-and-recovery"], [293, "error-handling-and-recovery"], [294, "error-handling-and-recovery"], [297, "error-handling-and-recovery"]], "Miscellaneous Threading": [[271, "miscellaneous-threading"], [272, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[271, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[271, "group-project-discussion"]], "Design Patterns Overview": [[271, "design-patterns-overview"], [272, "design-patterns-overview"]], "Day 3: Group Project": [[271, "day-3-group-project"], [272, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[272, "python-advanced-2023-04-24-2023-04-26"], [340, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[272, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[272, "morning-opening"]], "Object Oriented Programming (Continued)": [[272, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[272, "project-setup-ide-usage"]], "Continue Hacking": [[272, "continue-hacking"]], "Test Driven Development, pytest": [[272, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[273, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[273, "is-vs.\u00a0=="]], "Compound DataTypes": [[273, "Compound-DataTypes"]], "class": [[273, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[274, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[275, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[276, "python-basics-2023-05-15-2023-05-17"], [277, "Python-Basics-(2023-05-15---2023-05-17)"], [340, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[276, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[276, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[276, "modules-from-standard-library"], [1076, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[277, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[277, "The-range-Function"], [1015, "the-range-function"]], "Lambda, And Functional Programming Tools": [[277, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[279, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[280, "linux-basics-2023-05-23-2023-05-25"], [340, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[280, "introduction-concepts-and-terminology"], [812, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[280, "the-shell-bash-bourne-again-shell"], [280, "id1"], [858, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[280, "tools-inspecting-text-files"], [868, "tools-inspecting-text-files"]], "File System Permissions": [[280, "file-system-permissions"], [280, "id2"], [833, "file-system-permissions"]], "Morning Wakeup": [[280, "morning-wakeup"], [282, "morning-wakeup"]], "I/O Redirection And Pipes": [[280, "i-o-redirection-and-pipes"], [819, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[280, "archiving-and-compression"], [801, "archiving-and-compression"], [803, "archiving-and-compression"]], "Networking": [[280, "networking"]], "Processes And Scheduling": [[280, "processes-and-scheduling"]], "SSH: Secure Shell": [[280, "ssh-secure-shell"], [890, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[280, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[281, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[282, "python-basics-2023-06-20-2023-06-22"], [283, "Python-Basics-(2023-06-20---2023-06-22)"], [340, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[282, "day2"]], "File I/O, And Encoding": [[282, "file-i-o-and-encoding"]], "Python Videos": [[282, "python-videos"]], "NumPy, Pandas, Matplotlib": [[282, "numpy-pandas-matplotlib"]], "DataTypes": [[283, "DataTypes"]], "(Im)mutable?": [[283, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[283, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[283, "len(),-range(),-for"]], "Generators, yield": [[283, "Generators,-yield"]], "Other -ables: Callable": [[283, "Other--ables:-Callable"]], "exec() (and eval())": [[283, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[283, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[284, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[285, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[285, "toolchain-introduction"], [301, "toolchain-introduction"], [1132, "toolchain-introduction"]], "Project Structure, Dependencies": [[285, "project-structure-dependencies"], [301, "project-structure-dependencies"], [1132, "project-structure-dependencies"]], "External Dependencies": [[285, "external-dependencies"], [301, "external-dependencies"], [435, "external-dependencies"], [1132, "external-dependencies"]], "Code Generators": [[285, "code-generators"], [301, "code-generators"], [1132, "code-generators"]], "Automatic Testing": [[285, "automatic-testing"], [301, "automatic-testing"], [1132, "automatic-testing"]], "Installation And Deployment": [[285, "installation-and-deployment"], [301, "installation-and-deployment"], [1132, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[286, "cmake-an-introduction-2023-07-18"], [340, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[287, "python-advanced-2023-09-25-2023-09-27"], [288, "Python-Advanced-(2023-09-25---2023-09-27)"], [340, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[287, "recap-of-python-basics-course-before-summer"], [290, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[287, "project-management-requirements-sandboxing-testing"], [290, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[287, "into-the-wild-group-project-kickoff"], [290, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[287, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [290, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[287, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[288, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[288, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[289, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [292, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[290, "python-advanced-2023-10-09-2023-10-11"], [340, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[290, "classes-basics"]], "Classes: More": [[290, "classes-more"]], "Spoiler: Group Project Outcome": [[290, "spoiler-group-project-outcome"]], "More About Functions": [[290, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[291, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[291, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[293, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[293, "day-1-basic-python"], [297, "day-1-basic-python"]], "Datatypes, Datatypes": [[293, "datatypes-datatypes"], [297, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[293, "day-2-advanced-python-features"]], "Multiprocessing": [[293, "multiprocessing"]], "Day 3: Into The Wild": [[293, "day-3-into-the-wild"]], "Data Science Topics": [[293, "data-science-topics"], [297, "data-science-topics"]], "Group Project: An Idea": [[293, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[294, "python-advanced-2023-10-24-2023-10-26"], [340, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[294, "python-basics-recap"], [295, "Python-Basics-Recap"]], "The Very Basics": [[294, "the-very-basics"]], "range(), And Iteration In General": [[294, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[294, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[294, "object-oriented-programming-continued"], [294, "id1"]], "Group Project, OO-ified": [[294, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[294, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[294, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[294, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[294, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[294, "compositesink"]], "MQTT Sink Implementation": [[294, "mqtt-sink-implementation"]], "Timestamps?": [[294, "timestamps"]], "Jupyter Notebook: Python Advanced": [[295, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[295, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[295, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[295, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[295, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[295, "assert"]], "Iteration, Generators, Iterator Protocol": [[295, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[295, "AAARGHHH"]], "Generator Expresssions": [[295, "Generator-Expresssions"]], "Dictionary Comprehension": [[295, "Dictionary-Comprehension"], [972, "dictionary-comprehension"]], "Functional Tools": [[295, "Functional-Tools"]], "filter()": [[295, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[296, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[297, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[297, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[297, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[297, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[297, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[297, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[298, "python-advanced-2023-11-22-2023-22-24"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[299, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[300, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[301, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[302, "cmake-an-introduction-2023-11-27"], [340, "cmake-an-introduction-2023-11-27"]], "Agenda: C++: Advanced Topics": [[303, "agenda-c-advanced-topics"]], "constexpr, constinit, consteval": [[303, "constexpr-constinit-consteval"]], "Smart Pointers, And Move Semantics": [[303, "smart-pointers-and-move-semantics"]], "Types, Functions, Type Erasure, Toolcase": [[303, "types-functions-type-erasure-toolcase"]], "Functions (std::function<>, Lambdas)": [[303, "functions-std-function-lambdas"]], "Type Erasure": [[303, "type-erasure"]], "C++ Toolcase": [[303, "c-toolcase"]], "Dynamic Versus Static Typing: Templates": [[303, "dynamic-versus-static-typing-templates"]], "Outlook In >=20": [[303, "outlook-in-20"]], "Attributes And The Like": [[303, "attributes-and-the-like"]], "<algorithm> Overview": [[303, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[303, "miscellaneous-miscellaneous"]], "C++: Advanced Topics": [[304, "c-advanced-topics"]], "C++ For Embedded Developers (Beginning of 2023)": [[305, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[306, "python-sap"]], "Screenplay Checker": [[307, "screenplay-checker"]], "GPIO: Blinklicht": [[308, "gpio-blinklicht"]], "Commandline": [[308, "commandline"], [313, "commandline"], [838, "commandline"]], "sysfs GPIO": [[308, "sysfs-gpio"]], "Electronic Aspect": [[308, "electronic-aspect"]], "External Circuitry": [[308, "external-circuitry"]], "Raspberry Header Pinout": [[308, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[309, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[310, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[311, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[312, "ece19-exercises-and-custom-topics"]], "Reading a File": [[313, "reading-a-file"], [900, "reading-a-file"]], "Output": [[313, "output"]], "2021-05-20 (G2)": [[314, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[314, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[314, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[314, "Reading-File-Line-by-Line"]], "Iterating a File": [[314, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[314, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[314, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[314, "str.split()"]], "2021-05-21": [[315, "2021-05-21"], [322, "id11"]], "Modules and Packages": [[315, "Modules-and-Packages"], [983, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[316, "Strings-vs.\u00a0Bytes"]], "Batteries": [[317, "Batteries"]], "Key Value Map": [[317, "Key-Value-Map"]], "Comments vs Documentation": [[317, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[317, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[317, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[317, "Arithmetic-Operators"], [366, "arithmetic-operators"], [995, "arithmetic-operators"]], "Wertebereich von Integers": [[317, "Wertebereich-von-Integers"]], "An Example": [[318, "An-Example"], [1018, "an-example"]], "Sidenote: Pure Beauty": [[318, "Sidenote:-Pure-Beauty"], [1018, "sidenote-pure-beauty"]], "Parameters and Types": [[318, "Parameters-and-Types"], [1018, "parameters-and-types"]], "Pitfalls": [[318, "Pitfalls"]], "Cloud Computer, SSH Login": [[319, "cloud-computer-ssh-login"]], "Machine, Logins": [[319, "machine-logins"]], "Login via Secure Shell (SSH)": [[319, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[320, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[321, "embedded-computing-1-ece-19"]], "Daily Log": [[322, "daily-log"]], "2021-03-04": [[322, "id1"]], "2021-03-05": [[322, "id2"]], "Cheat Sheets": [[322, null]], "2021-03-18": [[322, "id3"]], "2021-03-26": [[322, "id4"]], "2021-04-15": [[322, "id5"]], "2021-04-21": [[322, "id6"]], "Git Intro": [[322, "git-intro"]], "Download and Installation": [[322, null], [327, null]], "2021-04-29": [[322, "id7"]], "2021-05-10": [[322, "id8"]], "Org Stuff": [[322, "org-stuff"]], "Python: Functions": [[322, "python-functions"]], "2021-05-12": [[322, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[322, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[322, "id10"]], "Reiterating on Exercise": [[322, "reiterating-on-exercise"]], "import argparse": [[322, "import-argparse"]], "Exercise digit (Once More)": [[322, "exercise-digit-once-more"]], "2021-06-01": [[322, "id12"]], "sysfs GPIO: Blinking an LED": [[322, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[322, "id13"]], "Embedded Computing 1 (Deutsch)": [[323, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[323, "lehrinhalte"]], "Lernergebnisse der LV": [[323, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[323, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[323, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[323, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[323, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[324, "embedded-computing-1-english"]], "Course Content": [[324, "course-content"]], "Learning Outcome": [[324, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[324, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[324, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[324, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[324, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[325, "plan-for-summer-2021"]], "Linux Introduction": [[325, "linux-introduction"]], "Slides": [[325, null], [325, null], [325, null]], "C/C++ Development": [[325, "c-c-development"]], "Python Development": [[325, "python-development"]], "2021-10-07": [[326, "id1"]], "Whose Fault It Is": [[326, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[327, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[327, "linux-unix"]], "Git": [[327, "git"]], "2021-10-28": [[328, "id1"]], "Group Project": [[328, "group-project"]], "Discussion of Tasks": [[328, "discussion-of-tasks"]], "TODOs": [[328, "todos"]], "2021-11-15": [[329, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[329, "systems-programming-files-directories-links"]], "2021-11-29": [[330, "id1"]], "jjjj": [[330, "jjjj"]], "2021-12-1{4,5}": [[331, "id1"]], "Future Topics": [[331, "future-topics"]], "Threading": [[331, "threading"]], "C++ Sideways": [[331, "c-sideways"]], "2022-01-10": [[332, "id1"]], "Scheduling": [[332, "scheduling"], [934, "scheduling"], [935, "scheduling"]], "2022-01-12": [[333, "id1"]], "Scheduling and Realtime": [[333, "scheduling-and-realtime"], [337, "scheduling-and-realtime"]], "2022-02-15": [[334, "id1"]], "Agenda/Log": [[335, "agenda-log"], [336, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[336, "embedded-computing-2-ece-19"]], "Project Repository": [[336, "project-repository"]], "Test Material": [[336, "test-material"]], "Exam Material Overview": [[337, "exam-material-overview"]], "Questions": [[337, "questions"], [337, "id1"], [629, "questions"], [811, "questions"], [825, "questions"], [826, "questions"], [851, "questions"], [958, "questions"]], "Slide Material": [[337, "slide-material"], [337, "id2"]], "Embedded Computing 1+2, ECE 19": [[338, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[340, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[340, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[340, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[340, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[340, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[340, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[340, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[340, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[340, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[340, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[340, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[340, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[340, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[340, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[340, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[340, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[340, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[340, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[340, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[340, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[340, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[340, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[340, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[340, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[340, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[340, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[340, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[340, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[340, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[340, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[340, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[340, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[340, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[340, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[340, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[340, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[340, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[340, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[340, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[340, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[340, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[340, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[340, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[340, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[340, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[340, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[340, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[340, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[340, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[340, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[340, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[340, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[340, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[340, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[340, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[340, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[340, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[340, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[340, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[340, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[340, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[340, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[340, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[340, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[340, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[340, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[340, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[340, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[340, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[340, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[340, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[340, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[340, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[340, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[340, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[340, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[340, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[340, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[340, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[340, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[340, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[340, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[340, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[341, "training-material-overview-and-download"]], "On Windows": [[342, "on-windows"]], "On Linux": [[342, "on-linux"]], "The Book (1)": [[343, "the-book-1"]], "The Book (2)": [[343, "the-book-2"]], "The Beginning": [[343, "the-beginning"]], "Cool Guys and Their Hobby": [[343, "cool-guys-and-their-hobby"]], "History of UNIX": [[343, "history-of-unix"]], "My First Program (1)": [[344, "my-first-program-1"]], "My First Program (2)": [[344, "my-first-program-2"]], "Character Arrays - Strings": [[344, "character-arrays-strings"]], "Variables and Arithmetic": [[345, "variables-and-arithmetic"]], "My Second Program (1)": [[345, "my-second-program-1"]], "My Second Program (2)": [[345, "my-second-program-2"]], "My Second Program (3)": [[345, "my-second-program-3"]], "My Second Program (4)": [[345, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[346, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[347, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[347, "for-loop-simplification-2"]], "Second Program, revisited": [[347, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[348, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[349, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[349, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[350, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[351, "character-i-o"]], "The Outside World": [[351, "the-outside-world"]], "cat for the Poor (1)": [[351, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[351, "cat-for-the-poor-2"]], "More Examples \u2026": [[351, "more-examples"]], "More Examples - if": [[351, "more-examples-if"]], "if, Formally": [[351, "if-formally"]], "Operators, Formally": [[351, "operators-formally"]], "Exercise: wc For The Poor": [[352, "exercise-wc-for-the-poor"]], "Arrays": [[353, "arrays"]], "Array Definition, Explicit Initialization": [[353, "array-definition-explicit-initialization"]], "Array Access": [[353, "array-access"]], "Discussion: Initialization": [[353, "discussion-initialization"]], "Discussion: if, else": [[353, "discussion-if-else"]], "Array Initializer": [[353, "array-initializer"]], "Discussion: Initializer": [[353, "discussion-initializer"]], "Initialization using memset()": [[353, "initialization-using-memset"]], "Discussion: memset()": [[353, "discussion-memset"]], "Exercise: Character Histogram": [[354, "exercise-character-histogram"]], "A Nonsensical Example": [[355, "a-nonsensical-example"]], "Function Signature": [[355, "function-signature"]], "Discussion": [[355, "discussion"]], "Definition vs. Declaration (1)": [[355, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[355, "definition-vs-declaration-2"]], "By Value / By Reference": [[355, "by-value-by-reference"]], "Exercise: Forward Declaration": [[356, "exercise-forward-declaration"]], "Character Arrays": [[357, "character-arrays"]], "Strings: Mistake by Design?": [[357, "strings-mistake-by-design"]], "Strings: Definition": [[357, "strings-definition"]], "Strings: Library Functions": [[357, "strings-library-functions"]], "Strings as Parameters": [[357, "strings-as-parameters"]], "Strings: Dangers": [[357, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[358, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[359, "lifetime-of-variables"]], "Lifetime": [[359, "lifetime"]], "Global Variables": [[359, "global-variables"], [533, "global-variables"]], "Global Variables: How?": [[359, "global-variables-how"]], "Group Description": [[360, "group-description"], [375, "group-description"], [384, "group-description"], [391, "group-description"], [397, "group-description"], [401, "group-description"], [404, "group-description"], [408, "group-description"], [417, "group-description"], [421, "group-description"], [426, "group-description"], [427, "group-description"], [547, "group-description"], [555, "group-description"], [570, "group-description"], [573, "group-description"], [576, "group-description"], [617, "group-description"], [626, "group-description"], [645, "group-description"], [687, "group-description"], [688, "group-description"], [712, "group-description"], [720, "group-description"], [724, "group-description"], [728, "group-description"], [730, "group-description"], [872, "group-description"], [880, "group-description"], [881, "group-description"], [935, "group-description"]], "Type System": [[361, "type-system"]], "Variable Names": [[362, "variable-names"]], "Variable- and Function Names": [[362, "variable-and-function-names"]], "Data Types, Sizes": [[363, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[363, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[363, "integer-variants-qualifiers"]], "Widths": [[363, "widths"]], "Constants": [[364, "constants"]], "Constants and Types": [[364, "constants-and-types"]], "Character Constants: Escape Sequences": [[364, "character-constants-escape-sequences"]], "String Constants": [[364, "string-constants"]], "Character vs. String Constants": [[364, "character-vs-string-constants"]], "Symbolic Constants (1)": [[364, "symbolic-constants-1"]], "Symbolic Constants (2)": [[364, "symbolic-constants-2"]], "Variable Definitions": [[365, "variable-definitions"]], "Definitions und Initialization": [[365, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[365, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[365, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[366, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[366, "arithmetic-operators-2"]], "Relational and Logical Operators": [[367, "relational-and-logical-operators"]], "Relational Operators (1)": [[367, "relational-operators-1"]], "Relational Operators (2)": [[367, "relational-operators-2"]], "Logical (Boolean) Operators": [[367, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[367, "boolean-operators-short-circuit"]], "Type Conversions": [[368, "type-conversions"]], "Implicit Type Conversions": [[368, "implicit-type-conversions"]], "Sign Bugs": [[368, "sign-bugs"]], "Truncation": [[368, "truncation"]], "Sign Propagation": [[368, "sign-propagation"]], "Conversion Using Operators": [[368, "conversion-using-operators"]], "Conversion and unsigned (1)": [[368, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[368, "conversion-and-unsigned-2"]], "Compiler Warnings": [[368, "compiler-warnings"]], "Last Warning": [[368, "last-warning"], [928, "last-warning"]], "Forced Conversion - Cast": [[368, "forced-conversion-cast"]], "Increment, Decrement": [[369, "increment-decrement"]], "Confusion: ++, --": [[369, "confusion"]], "Confused to perfection (1)": [[369, "confused-to-perfection-1"]], "Confused to perfection (2)": [[369, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[370, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[371, "bit-operators"]], "Bit Manipulation": [[371, "bit-manipulation"]], "Bitwise AND and OR": [[371, "bitwise-and-and-or"]], "Bitwise XOR": [[371, "bitwise-xor"]], "Shift Left": [[371, "shift-left"]], "Shift Right": [[371, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[371, "inverting-one-s-complement"]], "Assignment with Calculation": [[372, "assignment-with-calculation"]], "Combined Operators": [[372, "combined-operators"]], "?: - Conditional Expression": [[373, "conditional-expression"]], "?: - Conditional Expression (1)": [[373, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[373, "conditional-expression-2"]], "Precedence, Associativity": [[374, "precedence-associativity"]], "Summary: Operators": [[374, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[374, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[374, "operators-precedence-und-associativity-2"]], "More Warnings": [[374, "more-warnings"]], "Types, Operators, Expressions": [[375, "types-operators-expressions"]], "Statements and Blocks": [[376, "statements-and-blocks"]], "Statement vs. Block": [[376, "statement-vs-block"]], "if - else": [[377, "if-else"]], "Branches": [[377, "branches"]], "True or False? What is Truth?": [[377, "true-or-false-what-is-truth"]], "else is optional (1)": [[377, "else-is-optional-1"]], "else is optional (2)": [[377, "else-is-optional-2"]], "else - if": [[378, "else-if"]], "Style Matters": [[378, "style-matters"]], "switch": [[379, "switch"], [379, "id1"]], "Case Distinctions": [[379, "case-distinctions"]], "if - else if vs. switch": [[379, "if-else-if-vs-switch"]], "Loops: while and for": [[380, "loops-while-and-for"]], "while: general purpose loop": [[380, "while-general-purpose-loop"]], "From while to for (1)": [[380, "from-while-to-for-1"]], "From while to for (2)": [[380, "from-while-to-for-2"]], "for, a Little Closer": [[380, "for-a-little-closer"]], "Comma Operator": [[380, "comma-operator"]], "for: Infamous Idioms": [[380, "for-infamous-idioms"]], "Loops: do - while": [[381, "loops-do-while"]], "do - while: Condition After Body": [[381, "do-while-condition-after-body"]], "goto and Labels": [[383, "goto-and-labels"]], "Structured Programming vs. goto": [[383, "structured-programming-vs-goto"]], "goto: Definition": [[383, "goto-definition"]], "goto: Use Cases": [[383, "goto-use-cases"]], "Program Flow": [[384, "program-flow"]], "Nesting": [[385, "nesting"]], "Declaration vs. Definition": [[385, "declaration-vs-definition"]], "A Monolithic Program": [[385, "a-monolithic-program"]], "Separate Compilation": [[385, "separate-compilation"]], "Extern/Global Variables": [[386, "extern-global-variables"]], "Variables: Declaration and Definition": [[386, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[386, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[386, "variables-separating-declaration-from-definition-2"]], "Header Files": [[387, "header-files"]], "Declarations: Problems (1)": [[387, "declarations-problems-1"]], "Declarations: Problems (2)": [[387, "declarations-problems-2"]], "Declarations: Solutions": [[387, "declarations-solutions"]], "Static Variables": [[388, "static-variables"]], "Lifetime and Visibility (1)": [[388, "lifetime-and-visibility-1"]], "Automatic Variables": [[388, "automatic-variables"]], "Local static Variable": [[388, "local-static-variable"]], "Global static Variable": [[388, "global-static-variable"]], "Global Variable": [[388, "global-variable"], [1017, "global-variable"]], "C Preprocessor: Basics": [[389, "c-preprocessor-basics"]], "#include": [[389, "include"]], "Macros: Text Replacement": [[389, "macros-text-replacement"]], "Macros: Constant Definition": [[389, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[389, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[389, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[389, "include-guards-1"]], "Include Guards (2)": [[389, "include-guards-2"]], "The C Preprocessor: Last Words": [[389, "the-c-preprocessor-last-words"], [390, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[390, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[390, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[390, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[390, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[390, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[390, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[390, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[390, "stringification-1"]], "Stringification (2)": [[390, "stringification-2"]], "Token Pasting (1)": [[390, "token-pasting-1"]], "Token Pasting (2)": [[390, "token-pasting-2"]], "Warnings and Errors": [[390, "warnings-and-errors"]], "Predefined Macros (1)": [[390, "predefined-macros-1"]], "Functions and Program Structure": [[391, "functions-and-program-structure"]], "Pointers and Addresses": [[392, "pointers-and-addresses"]], "Pointers: Basics": [[392, "pointers-basics"]], "Pointer: Operators": [[392, "pointer-operators"]], "More Examples": [[392, "more-examples"]], "Pointers as Function Parameters": [[393, "pointers-as-function-parameters"]], "Call by Reference (1)": [[393, "call-by-reference-1"]], "Call by Reference (2)": [[393, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[394, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[395, "pointers-and-arrays"], [397, "pointers-and-arrays"]], "It\u2019s Only Memory": [[395, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[395, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[395, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[395, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[395, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[395, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[395, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[395, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[395, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[395, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[396, null], [809, null], [814, null], [814, null], [815, null], [815, null], [815, null], [820, null], [821, null], [904, null], [931, null], [934, null], [938, null], [940, null], [1019, null]], "main() Can Take Parameters": [[396, "main-can-take-parameters"]], "struct: Basics": [[398, "struct-basics"]], "struct: Compound Datatypes": [[398, "struct-compound-datatypes"]], "struct: How?": [[398, "struct-how"]], "Usage": [[398, "usage"], [588, "usage"], [595, "usage"]], "Nested Structures": [[398, "nested-structures"]], "Memory Layout": [[398, "memory-layout"]], "Recursive Structures?": [[398, "recursive-structures"]], "struct: Functions": [[399, "struct-functions"]], "Parameters and Return (1)": [[399, "parameters-and-return-1"]], "Parameters and Return (2)": [[399, "parameters-and-return-2"]], "Parameters and Return (3)": [[399, "parameters-and-return-3"]], "typedef: Type Alias": [[400, "typedef-type-alias"]], "Alias for Type Names": [[400, "alias-for-type-names"]], "Structures": [[401, "structures"]], "Dynamic Memory": [[402, "dynamic-memory"], [402, "id1"]], "Stack and Global Memory": [[402, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[402, "dynamic-memory-usage"]], "Singly Linked List": [[403, "singly-linked-list"]], "Exercises (1)": [[403, "exercises-1"]], "Exercises (2)": [[403, "exercises-2"]], "Exercises (3)": [[403, "exercises-3"]], "Exercises (4)": [[403, "exercises-4"]], "Exercises (5)": [[403, "exercises-5"]], "Exercises (6)": [[403, "exercises-6"]], "Exercises (7)": [[403, "exercises-7"]], "Exercises (8)": [[403, "exercises-8"]], "Exercises (9)": [[403, "exercises-9"]], "Exercises (10)": [[403, "exercises-10"]], "Exercises (11)": [[403, "exercises-11"]], "Memory": [[404, "memory"]], "Volatile": [[405, "volatile"]], "volatile: The Lie (1)": [[405, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[405, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[405, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[405, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[406, "compiler-intrinsics"]], "Atomic Memory Access": [[406, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[406, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[406, "load-modify-store-mutex"]], "Atomic Instructions": [[406, "atomic-instructions"], [923, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[406, "more-gcc-builtins"]], "Alignment": [[407, "alignment"]], "Data Alignment": [[407, "data-alignment"]], "Data Alignment, Compilers": [[407, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[407, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[407, "unaligned-data-access-2"]], "Padding (1)": [[407, "padding-1"]], "Padding (2)": [[407, "padding-2"]], "Padding (3)": [[407, "padding-3"]], "Padding (4)": [[407, "padding-4"]], "Structure Alignment (1)": [[407, "structure-alignment-1"]], "Structure Alignment (2)": [[407, "structure-alignment-2"]], "And Arrays? (1)": [[407, "and-arrays-1"]], "And Arrays? (2)": [[407, "and-arrays-2"]], "And Arrays? (3)": [[407, "and-arrays-3"]], "Sanity and Readabilty": [[409, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[409, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[409, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[409, "shooting-offenses"]], "Ambiguity": [[409, "ambiguity"]], "Readability": [[409, "readability"]], "Code Smells": [[409, "code-smells"]], "Know Your Integers": [[410, "know-your-integers"]], "Standard Data Types: size_t (1)": [[410, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[410, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[411, "discrete-values-enum"], [411, "id1"]], "Discrete Values": [[411, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[411, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[411, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[411, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[411, "discrete-values-enum-and-switch"], [411, "id2"]], "Discrete Values - Close to Perfection": [[411, "discrete-values-close-to-perfection"]], "Visibility - static": [[412, "visibility-static"]], "Visibility": [[412, "visibility"]], "A Somewhat Contrived Example (1)": [[412, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[412, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[412, "the-static-keyword-hooray"]], "Correctness - const": [[413, "correctness-const"]], "Non-Modifiable Memory (1)": [[413, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[413, "non-modifiable-memory-2"]], "The const Keyword (1)": [[413, "the-const-keyword-1"]], "The const Keyword (2)": [[413, "the-const-keyword-2"]], "const Variables": [[413, "const-variables"]], "const Parameters (1)": [[413, "const-parameters-1"]], "const Parameters (2)": [[413, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[413, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[413, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[413, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[413, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[413, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[413, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[413, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[413, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[413, "pointers-pointers-pointers-9"]], "Struct Initialization": [[414, "struct-initialization"]], "Good Old Struct Initialization": [[414, "good-old-struct-initialization"]], "C99 Designated Initializer": [[414, "c99-designated-initializer"]], "Explict Type Safety": [[415, "explict-type-safety"]], "Integer Types Are Ambiguous": [[415, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[415, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[415, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[415, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[415, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[415, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[415, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[415, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[415, "wrap-up-artificial-type-safety"]], "valgrind": [[416, "valgrind"]], "Valgrind": [[416, "id1"]], "Valgrind in Action (1)": [[416, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[416, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[416, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[416, "valgrind-more"]], "Program Sanity": [[417, "program-sanity"]], "Optimization": [[418, "optimization"]], "Optimization - Introduction": [[418, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[418, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[418, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[418, "compute-bound-or-io-bound-3"]], "What to do Next?": [[418, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[419, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[419, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[419, "unnecessary-optimizations"]], "Inlining (1)": [[419, "inlining-1"]], "Inlining (2)": [[419, "inlining-2"]], "Inlining (3)": [[419, "inlining-3"]], "Register Allocation (1)": [[419, "register-allocation-1"]], "Register Allocation (2)": [[419, "register-allocation-2"]], "Peephole Optimization": [[419, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[419, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[419, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[419, "peephole-optimization-constant-folding"]], "Loop Invariants": [[419, "loop-invariants"]], "Loop Unrolling": [[419, "loop-unrolling"]], "Tail Call Optimization": [[419, "tail-call-optimization"]], "CPU Optimization, Last Words": [[419, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[419, "gcc-optimization-levels"]], "Further Reading": [[419, "further-reading"]], "Optimizations: Memory Optimizations": [[420, "optimizations-memory-optimizations"]], "Memory: Caches": [[420, "memory-caches"]], "Locality of reference": [[420, "locality-of-reference"]], "Multidimensional Arrays": [[420, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[420, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[420, "multidimensional-arrays-forward-indexing"]], "Performance": [[421, "performance"]], "Profiling - Famous Words": [[422, "profiling-famous-words"]], "Donald E. Knuth": [[422, null]], "Tony Hoare": [[422, null]], "Larry Wall": [[422, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[422, null]], "Profiling - Introduction": [[422, "profiling-introduction"]], "GNU Profiler - gprof": [[423, "gnu-profiler-gprof"]], "gprof - How it Works": [[423, "gprof-how-it-works"]], "Using gprof": [[423, "using-gprof"]], "gprof: Flat Profile": [[423, "gprof-flat-profile"]], "gprof: Call Graph": [[423, "gprof-call-graph"]], "gprof: Interpreting The Results": [[423, "gprof-interpreting-the-results"]], "gprof: Visualization": [[423, "gprof-visualization"]], "callgrind": [[424, "callgrind"]], "callgrind - How it Works": [[424, "callgrind-how-it-works"]], "callgrind - How it is Used": [[424, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[424, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[424, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[424, "callgrind-useful-options"]], "oprofile": [[425, "oprofile"]], "oprofile - How it Works": [[425, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[425, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[425, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[425, "oprofile-too-much-information"]], "oprofile - Call Graph": [[425, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[425, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[425, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[425, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[425, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[425, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[425, "oprofile-graphical-beauty"]], "Profiling": [[426, "profiling"]], "The C Programming Language": [[427, "the-c-programming-language"]], "Messages From The Book": [[428, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[429, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[429, "rules-why-rules"]], "Coding Style": [[429, "coding-style"]], "Disclaimer": [[429, null]], "Design Principles: SOLID": [[429, "design-principles-solid"]], "Another One: YAGNI": [[429, "another-one-yagni"]], "Architecture": [[429, "architecture"]], "Project Management: Traditional": [[429, "project-management-traditional"]], "Project Management: Software": [[429, "project-management-software"]], "So What?": [[429, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[430, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[430, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[431, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[431, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[431, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[431, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[431, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[431, "where-are-we-questions"]], "Testability: Input Cleaning": [[431, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[431, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[431, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[431, "testability-reading-input-from-directory"]], "Testability: Categorization": [[431, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[431, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[431, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[432, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[432, "single-monolithic-executable"]], "Building With CMake": [[432, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[432, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[432, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[432, "problem-duplicate-compilation"]], "Problem: More Functionality": [[432, "problem-more-functionality"]], "Solution: Libraries": [[432, "solution-libraries"], [970, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[433, "configured-header-files"]], "Problem": [[433, "problem"], [441, "problem"], [447, "problem"], [448, "problem"], [449, "problem"], [452, "problem"], [458, "problem"], [506, "problem"], [768, "problem"], [899, "problem"]], "Configured Files": [[433, "configured-files"]], "Use In Compiled Code": [[433, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[434, "c-debug-release-cmake-programming-rants"]], "Pause": [[434, "pause"]], "Class Diagram": [[434, "class-diagram"]], "C++ Standard Version": [[434, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[434, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[434, "compiler-type"]], "Strings And Lists": [[434, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[434, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[434, "message-popular-modes"]], "FIND_PACKAGE()": [[435, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[435, "find-package-required"]], "SQLite3 Parameters": [[435, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[435, "using-sqlite3-parameters"]], "Demo Time": [[435, "demo-time"]], "CMake: An Introduction": [[436, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[437, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[437, "prefix-where-everything-comes-together"]], "Installing Targets": [[437, "installing-targets"]], "Doing The Installation (make install)": [[437, "doing-the-installation-make-install"]], "And Shared Libraries?": [[437, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[437, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[437, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[438, "libraries-and-dependencies"]], "Libraries And Executables": [[438, "libraries-and-executables"]], "Targets And Dependencies": [[438, "targets-and-dependencies"]], "Visualizing Dependencies": [[438, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[439, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[439, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[439, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[439, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[439, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[439, "good-or-bad"], [440, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[440, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[440, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[440, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[440, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[441, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[441, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[441, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[441, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[442, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[442, "normal-libraries"]], "Building Shared Libraries": [[442, "building-shared-libraries"]], "More About Loading": [[442, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[443, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[443, "reorganization"]], "Dependencies, And Target Properties": [[443, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[444, "targets-properties-and-more"]], "Target Types": [[444, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[444, "properties-private-public-interface"]], "Running Tests": [[445, "running-tests"], [1110, "running-tests"]], "Setup And Usage": [[445, "setup-and-usage"]], "Add Simple Test": [[445, "add-simple-test"]], "Checking Test Output": [[445, "checking-test-output"]], "Questionability": [[445, "questionability"]], "C++ Code": [[446, "c-code"]], "Abstract Factory": [[447, "abstract-factory"]], "I2C Sensor Subhierarchy": [[447, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[447, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[447, "solution-factory-objects"]], "Notes": [[447, "notes"]], "Adapter": [[448, "adapter"]], "Solution: Adaptation": [[448, "solution-adaptation"]], "Basic Adaptation": [[448, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[448, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[448, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[448, "adapter-is-doing-real-measurements"]], "Command": [[449, "command"]], "Motivation": [[449, "motivation"], [452, "motivation"], [468, "motivation"], [469, "motivation"], [565, "motivation"], [662, "motivation"], [664, "motivation"], [689, "motivation"], [695, "motivation"], [990, "motivation"], [996, "motivation"]], "Step 1: Basic insert()": [[449, "step-1-basic-insert"]], "Step 2: Basic find()": [[449, "step-2-basic-find"]], "Step 3: drop()": [[449, "step-3-drop"]], "Step 4: Handle find() Errors": [[449, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[449, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[449, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[449, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[450, "socialdb-source-code"]], "Composite": [[451, "composite"]], "Unix Filesystem": [[451, "unix-filesystem"]], "Boolean Expressions": [[451, "boolean-expressions"]], "Thermometers, And Average Calculation": [[451, "thermometers-and-average-calculation"]], "Decorator": [[452, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[452, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[452, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[452, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[452, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[452, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[452, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[452, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[452, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[453, "design-patterns-with-c"]], "Topics/Exercises": [[453, "topics-exercises"]], "Solutions": [[453, "solutions"], [467, "solutions"], [481, "solutions"]], "To Be Done": [[453, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[454, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[454, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[454, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[454, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[454, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[454, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[454, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[454, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[454, "stop-here-need-help"]], "Tests": [[454, "tests"], [474, "tests"]], "Interpreter": [[455, "interpreter"]], "Observer": [[456, "observer"]], "OO Design Principles": [[457, "oo-design-principles"]], "Principles: Why? Which?": [[457, "principles-why-which"]], "Single Responsibility": [[457, "single-responsibility"]], "Open/Closed": [[457, "open-closed"]], "Liskov Substitution": [[457, "liskov-substitution"]], "Interface Segregation": [[457, "interface-segregation"]], "Dependency Inversion": [[457, "dependency-inversion"]], "Proxy": [[458, "proxy"]], "Solution: Proxy": [[458, "solution-proxy"]], "Local Variant": [[458, "local-variant"]], "Remote Variant": [[458, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[459, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[459, "hypothetical"]], "Class Hierarchy": [[459, "class-hierarchy"]], "Singleton": [[460, "singleton"]], "And class Person?": [[460, "and-class-person"]], "UML Short Introduction": [[461, "uml-short-introduction"]], "Interface": [[461, "interface"]], "Interface Implementation, Inheritance": [[461, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[461, "connectors-association-aggregation-composition"]], "Association": [[461, "association"]], "Aggregation": [[461, "aggregation"]], "Composition": [[461, "composition"]], "Exercise: Abstract Factory": [[462, "exercise-abstract-factory"]], "Exercise: Adapter": [[463, "exercise-adapter"], [470, "exercise-adapter"]], "Exercise: Command": [[464, "exercise-command"]], "Exercise: Composite": [[465, "exercise-composite"]], "Exercise: Decorator": [[466, "exercise-decorator"]], "Exercises: Design Patterns": [[467, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[468, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[469, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[469, "expression-interface"]], "Arithmetic (Binary) Expressions": [[469, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[469, "check-combined-arithmetic-expressions"]], "And Variables?": [[469, "and-variables"]], "No Uninitialized Variables!!": [[469, "no-uninitialized-variables"]], "Assigning To Variables": [[469, "assigning-to-variables"]], "Using Variables As Expressions": [[469, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[471, "exercise-proxy-remote-thermometer"]], "Network Communication": [[471, "network-communication"]], "Implementation Hints": [[471, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[472, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[473, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[474, "exercise-singleton-flexible-and-strict"]], "Complications": [[474, "complications"]], "Exercise: Singleton (Inflexible)": [[475, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[476, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[476, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[476, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[476, "i2csensorfactory-vendor1"], [476, "id1"]], "Solution: Adapter": [[477, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[477, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[478, "solution-command"]], "Command Classes": [[478, "command-classes"]], "Solution: Composite": [[479, "solution-composite"]], "Averaging (Composite) Sensor": [[479, "averaging-composite-sensor"]], "Solution: Decorator": [[480, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[480, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[480, "decorated-constant-sensor"]], "Decorated Random Sensor": [[480, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[482, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[483, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[484, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[485, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[485, "client-proxy-thermometer"]], "Remote Stub": [[485, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[486, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[486, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[487, "solution-singleton-flexible"]], "Main Program": [[487, "main-program"], [488, "main-program"], [489, "main-program"]], "SocialInsurance Interface": [[487, "socialinsurance-interface"], [488, "socialinsurance-interface"]], "Two Concrete Implementations": [[487, "two-concrete-implementations"], [488, "two-concrete-implementations"]], "OEGK": [[487, "oegk"], [488, "oegk"]], "SVS": [[487, "svs"], [488, "svs"]], "Solution: Singleton (Flexible And Strict)": [[488, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[489, "solution-singleton-inflexible"]], "Singleton Implementation": [[489, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[490, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[490, "github-project"]], "CMake Build": [[490, "cmake-build"], [912, "cmake-build"]], "Dependencies/Usage Relationships": [[490, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[490, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[490, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[490, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[490, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[491, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[492, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[493, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[493, "new-sensor-class-randomsensor"]], "Implementation Details": [[493, "implementation-details"]], "New Program: random-temperature.cpp": [[493, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[494, "fh-sensor-oo-first-try"]], "C++ Exercises": [[495, "c-exercises"]], "Exercise Projects": [[495, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[496, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[496, "topics-covered"], [497, "topics-covered"], [498, "topics-covered"], [499, "topics-covered"], [500, "topics-covered"], [501, "topics-covered"], [502, "topics-covered"], [505, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[497, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[498, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[499, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[500, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[501, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[501, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[501, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[502, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[503, "oo-basics-interfaces-shapes"]], "Exercise Table": [[503, "exercise-table"]], "Setup, Exam Procedure": [[503, "setup-exam-procedure"]], "Point": [[503, "point"]], "Point: Constructor and Getter Methods": [[503, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[503, "point-default-constructor"]], "Point: Static Method: equal()": [[503, "point-static-method-equal"]], "Point: operator==()": [[503, "point-operator"]], "Point: Method: move()": [[503, "point-method-move"]], "Point: operator+=()": [[503, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[503, "point-static-method-add"]], "Point: operator+()": [[503, "point-suite-operator-plus"]], "Circle": [[503, "circle"]], "Circle: Constructor": [[503, "circle-constructor"]], "Circle: operator==()": [[503, "circle-operator"]], "Circle: Method: area()": [[503, "circle-method-area"]], "Square": [[503, "square"]], "Square: Constructor": [[503, "square-constructor"]], "Square: operator==()": [[503, "square-operator"]], "Square: Method: area()": [[503, "square-method-area"]], "Interface: Shape": [[503, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[503, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[503, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[504, "working-on-exercise-projects"]], "Clone Github Repository": [[504, "clone-github-repository"]], "Massage googletest Sub-Module": [[504, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[504, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[504, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[504, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[505, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[505, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[505, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[506, "exercise-onewire-sensor-factory"]], "Fixture": [[506, "fixture"], [729, "fixture"]], "basic": [[506, "basic"]], "notfound": [[506, "notfound"]], "find_is_const": [[506, "find-is-const"]], "Testing In Isolation": [[506, "testing-in-isolation"]], "Testing In Reality": [[506, "testing-in-reality"]], "On The PC": [[506, "on-the-pc"]], "On The Target": [[506, "on-the-target"]], "Exercise: OneWire Sensor Class": [[507, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[507, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[507, "test-monolithic-implementation"]], "class W1Sensor": [[507, "class-w1sensor"]], "Exercise: Algorithms": [[508, "exercise-algorithms"]], "Copy Into std::vector": [[508, "copy-into-std-vector"]], "Find Element In std::vector": [[508, "find-element-in-std-vector"]], "Sort In-Place": [[508, "sort-in-place"]], "Sort Into A Copy": [[508, "sort-into-a-copy"]], "Exercise: Generic Filter": [[509, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[510, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[511, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[512, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[513, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[514, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[515, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[516, "insert-sunny-case"]], "Lookup - Not Found": [[517, "lookup-not-found"]], "Lookup - Sunny Case": [[518, "lookup-sunny-case"]], "Memory Leaks?": [[519, "memory-leaks"]], "Remove - Not Found": [[520, "remove-not-found"]], "Remove - Sunny Case": [[521, "remove-sunny-case"]], ".size() Is const": [[522, "size-is-const"]], "Exercise: Uniquify A Sequence": [[523, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[524, "exercise-std-vector"]], "C++: TODO List": [[525, "c-todo-list"]], "Structural": [[525, "structural"]], "STL, Containers and Algorithms": [[525, "stl-containers-and-algorithms"]], "Templates/Overloading": [[525, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[525, "functors-overloading-the-function-call-operator"]], "Threads": [[525, "threads"]], "C++ >= 11": [[525, "c-11"]], "UserDB Exercise": [[525, "userdb-exercise"]], "Complete Transcription of C++11": [[525, "complete-transcription-of-c-11"]], "Exercise series": [[525, "exercise-series"]], "Code: C++: Class Templates": [[526, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[527, "screenplay-c-class-templates"]], "C++: Class Templates": [[528, "c-class-templates"]], "Code: C++: Dynamic Memory": [[529, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[530, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[530, "c-malloc-free"]], "valgrind: Memory Leak": [[530, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[530, "valgrind-array-bounds-write"]], "C++: new, delete": [[530, "c-new-delete"]], "C++: new, delete on Arrays": [[530, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[530, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[531, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[532, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[533, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[533, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[533, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[533, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[534, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[535, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[536, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[537, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[538, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[539, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[539, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[539, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[539, "ownership-2-x-non-const"]], "Ownership: const Method": [[539, "ownership-const-method"]], "Ownership: 2 x const": [[539, "ownership-2-x-const"]], "C++: Ownership/RAII": [[540, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[541, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[542, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[542, "pointer-arithmetics-recap"]], "Container: std::vector": [[542, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[542, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[542, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[542, "container-std-list"]], "Container: std::map": [[542, "container-std-map"]], "C++: STL Containers (Intro)": [[543, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[544, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[545, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[546, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[547, "c-miscellaneous-live-hacking"]], "Background": [[548, "background"]], "History": [[548, "history"], [971, "history"]], "Content": [[548, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[549, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[549, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[549, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[549, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[549, "comparison-functions-in-equality"]], "Moving Points": [[549, "moving-points"]], "Vector Addition and Subtraction": [[549, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[549, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[549, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[549, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[550, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[550, "compiler-generated-copy-constructor"]], "Rule": [[550, null], [553, null], [652, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[550, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[551, "classes-and-objects"]], "Introducing C++: class point": [[551, "introducing-c-class-point"]], "Access Specifiers: public And private": [[551, "access-specifiers-public-and-private"]], "Default Constructor": [[551, "default-constructor"], [553, "default-constructor"], [566, "default-constructor"], [567, "default-constructor"], [568, "default-constructor"], [569, "default-constructor"]], "Custom Constructor: Usage": [[551, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[551, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[551, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[551, "methods-operations-on-an-object"]], "And printf()?!": [[551, "and-printf"]], "Custom Constructor": [[552, "custom-constructor"], [566, "custom-constructor"]], "Constructors: why? (1)": [[552, "constructors-why-1"]], "Constructors: why? (2)": [[552, "constructors-why-2"]], "Constructors: Implementation - Inline": [[552, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[552, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[553, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[553, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[553, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[553, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[554, "more-constructors-destructors"]], "Default Constructor (1)": [[554, "default-constructor-1"]], "Default Constructor (2)": [[554, "default-constructor-2"]], "Object Lifecycle - Destructor": [[554, "object-lifecycle-destructor"]], "Destructors (1)": [[554, "destructors-1"]], "Destructors (2)": [[554, "destructors-2"]], "Destructors (3)": [[554, "destructors-3"]], "Destructors (4)": [[554, "destructors-4"]], "Data Encapsulation": [[555, "data-encapsulation"]], "Constructors: Member Initialization": [[556, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[556, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[556, "real-initialization-initializer-list"]], "Why Is That Important?": [[556, "why-is-that-important"]], "Why Else Is That Important?": [[556, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[557, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[557, "copy-in-c"]], "Copy Constructor": [[557, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[557, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[557, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[557, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[557, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[557, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[557, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[557, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[557, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[557, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[558, "overloading"]], "Functions in C": [[558, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[558, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[558, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[558, "overloading-class-methods-just-the-same"]], "Methods": [[559, "methods"], [706, "methods"], [707, "methods"], [708, "methods"], [993, "methods"]], "Objects - Data and Methods": [[559, "objects-data-and-methods"]], "class point Again": [[559, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[559, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[559, "how-are-members-accessed-inside-methods"]], "const Methods": [[559, "const-methods"], [560, "const-methods"]], "Non const Methods": [[559, "non-const-methods"]], "const": [[560, "const"]], "const: Immutable Variable": [[560, "const-immutable-variable"]], "const Correctness vs. Pollution": [[560, "const-correctness-vs-pollution"]], "this": [[561, "this"]], "Hidden Pointer: this (1)": [[561, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[561, "hidden-pointer-this-2"]], "Explicit this Pointer": [[561, "explicit-this-pointer"]], "Pass By Copy/Reference": [[562, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[562, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[562, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[562, "copy-reference-c-pointers"]], "C++: True References": [[562, "c-true-references"]], "And const? Pointers?": [[562, "and-const-pointers"]], "const References": [[562, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[562, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[563, "static-methods"]], "Methods without Object": [[563, "methods-without-object"]], "Naive Implementation: Global Function": [[563, "naive-implementation-global-function"]], "C++: static Method": [[563, "c-static-method"]], "static Member Variables": [[564, "static-member-variables"]], "Good Old C: extern Global Variables": [[564, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[564, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[564, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[564, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[564, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[564, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[565, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[565, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[565, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[565, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[565, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[565, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[565, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[565, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[566, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[566, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[566, "in-equality"], [567, "in-equality"], [568, "in-equality"], [569, "in-equality"]], "+=": [[566, "id2"], [567, "id1"], [568, "id2"], [569, "id2"]], "-=": [[566, "id4"], [568, "id4"]], "+": [[566, "id6"], [567, "id2"], [568, "id6"], [569, "id3"]], "-": [[566, "id8"], [568, "id8"]], "<< (std::ostream)": [[566, "std-ostream"], [567, "std-ostream"], [568, "std-ostream"], [569, "std-ostream"]], "Surface": [[566, "surface"]], "Volume": [[566, "volume"]], "Exercise (FH): class point": [[567, "exercise-fh-class-point"]], "Initial Build": [[567, "initial-build"]], "Initial Test Run": [[567, "initial-test-run"]], "Extending class point: More Unit Tests": [[567, "extending-class-point-more-unit-tests"]], "Access Methods": [[567, "access-methods"]], "Unary -": [[567, "unary"], [568, "unary"]], "Exercise (FH): class point3d": [[568, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[568, "building-class-rectangle-upon-class-point"], [569, "building-class-rectangle-upon-class-point"]], "Coordinates": [[568, "coordinates"], [569, "coordinates"]], "Absolute Value": [[568, "absolute-value"]], "Distance Between Two Points": [[568, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[569, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[569, "width-height-area"]], "Functions and Methods": [[570, "functions-and-methods"]], "Error Handling: if - else if - else": [[571, "error-handling-if-else-if-else"]], "try - catch": [[572, "try-catch"]], "try - Block": [[572, "try-block"]], "catch - Block": [[572, "catch-block"]], "Standard Library: Exception-Hierarchy": [[572, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[572, "custom-exceptions-1"]], "Custom Exceptions (2)": [[572, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[572, "throwing-exceptions-throw"]], "Last Words": [[572, "last-words"], [575, "last-words"]], "Function Templates": [[574, "function-templates"]], "Origin: Duplicated Code": [[574, "origin-duplicated-code"]], "A simple Function-Template": [[574, "a-simple-function-template"]], "More Templates from the STL": [[574, "more-templates-from-the-stl"]], "Class Templates": [[575, "class-templates"]], "Does This Work With Classes?": [[575, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[575, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[575, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[576, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[577, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[578, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[579, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[580, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[581, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[582, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[582, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[582, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[582, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[582, "pointer-difference"]], "Step Width? (1)": [[582, "step-width-1"]], "Step Width? (2)": [[582, "step-width-2"]], "And Arbitrary Data Types?": [[582, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[582, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[582, "stl-algorithms"]], "STL Containers": [[582, "stl-containers"]], "std::vector (And std::copy())": [[583, "std-vector-and-std-copy"]], "Dynamicity Details": [[583, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[583, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[583, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[584, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[584, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[584, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[584, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[584, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[585, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[586, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[587, null], [588, null], [589, null], [590, null], [591, null], [593, null], [594, null], [595, null], [596, null], [599, null], [600, null], [603, null], [608, null], [742, null], [742, null], [758, null], [760, "documentation"], [760, null], [764, "documentation"], [766, null], [766, null], [766, null], [792, "documentation"], [795, "documentation"], [805, null], [806, null], [809, null], [813, null], [813, null], [820, null], [821, null], [822, null], [822, null], [822, null], [823, null], [838, null], [838, null], [838, null], [839, null], [840, null], [841, null], [857, null], [857, null], [857, null], [860, null], [861, null], [894, null], [896, null], [898, null], [900, null], [901, null], [902, null], [904, null], [904, null], [904, null], [904, null], [904, null], [904, null], [907, null], [908, null], [909, null], [910, null], [910, null], [911, null], [914, null], [914, null], [914, null], [914, null], [952, null], [952, null], [953, null], [1028, null], [1038, null], [1117, "documentation"]], "binary_search<>: On Sorted Sequence": [[587, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[587, "more-intelligent-search"], [593, "more-intelligent-search"]], "copy<>": [[588, "copy"]], "find<>: Sequential Search, by Equality": [[589, "find-sequential-search-by-equality"]], "Basic Usage": [[589, "basic-usage"], [708, "basic-usage"], [860, "basic-usage"], [1030, "basic-usage"]], "Not Found?": [[589, "not-found"]], "find_if<>: Sequential Search, Customizable": [[590, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[590, "if-using-a-plain-function"]], "if, Using a Functor Class": [[590, "if-using-a-functor-class"]], "for_each<>": [[591, "for-each"]], "Basic Algorithms": [[592, "basic-algorithms"]], "Sorted Arrays": [[592, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[593, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[594, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[595, "reverse-copy-copying-and-reversing"]], "sort<>": [[596, "sort"]], "Algorithm: std::sort": [[596, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[596, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[597, "sequential-containers"], [598, "sequential-containers"]], "Common Characteristics": [[597, "common-characteristics"]], "list<>": [[599, "list"]], "Insertion and Deletion": [[599, "insertion-and-deletion"]], "vector<>": [[600, "vector"]], "Characteristics": [[600, "characteristics"]], "Modification at the Back": [[600, "modification-at-the-back"]], "Insertion": [[600, "insertion"]], "Example": [[600, "example"], [1045, "example"]], "Associative Containers": [[601, "associative-containers"], [602, "associative-containers"]], "Type Instantiation": [[603, "type-instantiation"]], "Filling The Container": [[603, "filling-the-container"]], "Inserting Elements": [[603, "inserting-elements"]], "Searching": [[603, "searching"], [627, "searching"]], "Screenplay: std::map Initialization And Inserting": [[604, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[604, "definining-the-type"]], "Initialization": [[604, "initialization"], [627, "initialization"]], "Screenplay: Inserting Elements": [[605, "screenplay-inserting-elements"]], "Subscript Operator": [[605, "subscript-operator"]], "insert()": [[605, "insert"]], "Screenplay: Removing (Erasing) Elements": [[606, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[606, "by-pointer-err-iterator"]], "By Key": [[606, "by-key"]], "Screenplay: Searching": [[607, "screenplay-searching"]], "find(key)": [[607, "find-key"]], "[key]": [[607, "key"]], "at(key)": [[607, "at-key"]], "multimap<>": [[608, "multimap"]], "Allocator Basics": [[609, "allocator-basics"]], "Allocators": [[610, "allocators"]], "STL: Exercises": [[611, "stl-exercises"]], "Exercise: Reverse a String": [[612, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[613, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[614, "solution-reverse-a-string"]], "Naive": [[614, "naive"]], "Using std::reverse<>": [[614, "using-std-reverse"]], "Using std::reverse_copy<>": [[614, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[616, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[617, "dynamic-memory-allocation-resource-management"]], "Inheritance Basics": [[618, "inheritance-basics"]], "Plain (Base) Class": [[618, "plain-base-class"], [619, "plain-base-class"]], "Inheriting (Deriving) From Base": [[618, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[618, "derived-is-a-base"]], "Destructors And Inheritance": [[619, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[619, "derived-class-and-destructor"]], "And Base Class Conversion?": [[619, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[620, "inheritance-and-object-oriented-design"]], "Bringing It All Together": [[621, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[622, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[622, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[622, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[622, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[623, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[624, "virtual-destructors"]], "Is-A Relationships And Destructors": [[624, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[624, "pure-virtual-destructor"]], "Virtual Methods": [[625, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[625, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[625, "enter-virtual"]], "Caution: virtual": [[625, "caution-virtual"]], "The Standard Library: Miscellaneous Topics": [[626, "the-standard-library-miscellaneous-topics"]], "std::string": [[627, "std-string"]], "Addition, And Such": [[627, "addition-and-such"]], "Conversion From String": [[627, "conversion-from-string"]], "Conversion To String": [[627, "conversion-to-string"]], "Substrings": [[627, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[628, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[629, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[630, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[631, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[632, "exercises-user-database"]], "Exercise: Access Methods for Members": [[633, "exercise-access-methods-for-members"]], "Exercise: const Members": [[634, "exercise-const-members"]], "Exercise: Use const": [[635, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[636, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[637, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[638, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[639, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[640, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[641, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[641, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[642, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[643, "exercise-use-std-vector-in-userdb"]], "C++ 03": [[644, "c-03"]], "History, Background": [[646, "history-background"]], "Make C++ Great Again": [[646, "make-c-great-again"]], "The \u201cNew\u201d C++": [[646, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[647, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[647, "c-03-to-do-list-version"]], "Real Container Initialization": [[647, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[647, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[647, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[647, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[647, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[647, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[647, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[647, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[647, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[647, "inevitable-threads"]], "Unions? std::variant!": [[647, "unions-std-variant"]], "Wrapping All That Into A Class": [[647, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[647, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[647, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[648, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[648, "c-03-enum-types-problems"]], "C++11 enum class": [[648, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[648, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[649, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[650, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[650, "std-initializer-list"]], "Direct Usage": [[650, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[650, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[651, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[651, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[651, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[651, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[651, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[651, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[651, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[651, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[651, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[651, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[652, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[652, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[652, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[652, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[652, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[652, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[653, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[653, "delegating-constructor-solution"]], "constexpr": [[654, "constexpr"]], "Basic Usage: Expressions": [[654, "basic-usage-expressions"]], "constexpr Functions": [[654, "constexpr-functions"]], "Recursive constexpr": [[654, "recursive-constexpr"]], "constexpr Objects": [[654, "constexpr-objects"]], "Afterword, Further Reading": [[655, "afterword-further-reading"]], "Uses In The Standard Library": [[655, "uses-in-the-standard-library"]], "Other Uses": [[655, "other-uses"]], "All Said \u27f6 Guidelines": [[655, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[655, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[656, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[656, "alternative-livehacking"]], "Starting Point": [[657, "starting-point"], [63, "starting-point"]], "SmartPtr With Move Semantics": [[657, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[657, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[657, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[658, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[658, "copy-semantics-revisited"]], "class String, Without Copy": [[658, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[658, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[658, "move-constructor-move"]], "Implementing Move Constructor": [[658, "implementing-move-constructor"]], "And Move Assignment?": [[658, "and-move-assignment"]], "Implementing Move Assignment": [[658, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[659, "using-move-semantics-in-own-code"]], "Using String: class Person": [[659, "using-string-class-person"]], "What?": [[659, "what"], [821, "what"]], "Using Rvalue References Inside Function: std::move": [[659, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Such": [[660, "lvalues-rvalues-and-such"]], "Return Object Problem: Reference To Stack-Based Object": [[660, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[660, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[660, "move-semantics-wish-list"]], "Theory: Lvalues": [[660, "theory-lvalues"]], "Theory: Rvalues": [[660, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[660, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[660, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[660, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[660, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[660, "enter-move-constructor-and-move-assignment"]], "Rules": [[660, null]], "Templates end with \u201c>>\u201d": [[661, "templates-end-with"]], "auto": [[662, "auto"]], "Most Basic Usage": [[662, "most-basic-usage"]], "auto Is Only The Basic Type": [[662, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[662, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[662, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[662, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[662, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[664, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[664, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[664, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[664, "concepts-to-the-rescue"]], "Syntactic Variations": [[664, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[665, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[666, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[667, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[668, "concepts-links"]], "Writing Your Own Concepts": [[669, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[669, "starting-point-good-old-function"]], "Need Template": [[669, "need-template"]], "Error: Requirement Not Fulfilled": [[669, "error-requirement-not-fulfilled"]], "Concept: has_size": [[669, "concept-has-size"]], "Concept: index_returns_double": [[669, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[670, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[671, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[672, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[673, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[674, "coroutines"]], "Coroutines: An Overview": [[675, "coroutines-an-overview"]], "Foreword": [[675, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[675, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[675, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[675, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[675, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[675, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[675, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[675, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[675, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[675, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[675, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[675, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[676, "fibo-generator-cpp"]], "fibonacci.cpp": [[677, "fibonacci-cpp"]], "generator.h": [[678, "generator-h"]], "generator-hello.cpp": [[679, "generator-hello-cpp"]], "simplest.cpp": [[680, "simplest-cpp"]], "suspend.cpp": [[681, "suspend-cpp"]], "suspend-iter.cpp": [[682, "suspend-iter-cpp"]], "suspend-next.cpp": [[683, "suspend-next-cpp"]], "= default": [[684, "default"]], "Problem: Default Constructor Not Automatically Generated": [[684, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[684, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[684, "c-11-solution-default"]], "= delete": [[685, "delete"]], "Problem: Copy Is Not Always Wanted": [[685, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[685, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[685, "c-11-solution-delete-copy"]], "final": [[686, "final"]], "Architectural Decisions": [[686, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[686, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[687, "new-language-features"]], "Lambda": [[688, "lambda"], [689, "lambda"]], "Lambda To The Rescue": [[689, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[689, "excursion-python-closures"]], "Same In C++: Capturing": [[689, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[689, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[689, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[689, "more-about-capturing"]], "Lambda: More Capturing": [[690, "lambda-more-capturing"]], "More Capture Syntax": [[690, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[690, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[690, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[690, "mixed-explicit-capture"]], "Define Variables In Capture": [[690, "define-variables-in-capture"]], "Capturing All By Reference": [[690, "capturing-all-by-reference"]], "Capturing All By Copy": [[690, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[690, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[690, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[691, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[691, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[691, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[692, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[692, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[692, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[692, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[692, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[694, "override"]], "Correct Overriding \u2026": [[694, "correct-overriding"]], "\u2026 Is Very Hard": [[694, "is-very-hard"]], "More Problems Arise": [[694, "more-problems-arise"]], "Solution: override": [[694, "solution-override"]], "Range Based for Loops: Introduction": [[695, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[695, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[695, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[695, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[696, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[696, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[696, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[696, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[696, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[696, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[697, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[697, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[697, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[697, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[697, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[697, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[697, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[697, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[697, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[699, "ranges-overview"]], "Ranges?": [[699, "ranges"]], "Containers And Views (Storage Behavior)": [[699, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[699, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[699, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[699, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[699, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[699, "available-ranges-concepts"]], "Ranges And Views: Links": [[700, "ranges-and-views-links"]], "Structured Binding": [[701, "structured-binding"]], "Variations, Compatible Data Types": [[701, "variations-compatible-data-types"]], "struct: By Copy": [[701, "struct-by-copy"]], "struct: Reference": [[701, "struct-reference"]], "struct: By const Reference": [[701, "struct-by-const-reference"]], "std::tuple: By Copy": [[701, "std-tuple-by-copy"]], "std::tuple: By Reference": [[701, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[701, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[701, "arrays-by-copy"]], "Arrays: By Reference": [[701, "arrays-by-reference"]], "Arrays: By const Reference": [[701, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[702, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[702, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[703, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[704, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[704, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[705, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[705, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[705, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[705, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[705, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[705, "explicit-move-method-maybe"]], "Stop!!!": [[705, "stop"]], "std::shared_ptr": [[706, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[706, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[706, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[706, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[706, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[706, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[706, "demo-basic-usage"]], "Demo: std::make_shared": [[706, "demo-std-make-shared"]], "Demo: Cyclic References": [[706, "demo-cyclic-references"]], "std::unique_ptr": [[707, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[707, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[707, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[707, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[707, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[707, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[707, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[707, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[707, "manipulating-pointer-content"]], "std::weak_ptr": [[708, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[708, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[708, "a-real-life-example"]], "Perfect Forwarding": [[709, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[709, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[709, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[709, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[709, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[710, "std-bind"]], "Why? What\u2019s The Problem?": [[710, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[710, "sample-program-all-done-manually"]], "Sideway: std::transform": [[710, "sideway-std-transform"]], "Sample Program: Using std::transform": [[710, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[710, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[710, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[710, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[710, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[710, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[710, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[710, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[710, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[710, "summary"], [778, "summary"], [778, "id1"], [1097, "summary"], [1099, "summary"]], "std::function": [[711, "std-function"]], "Classic Polymorphism": [[711, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[711, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[711, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[711, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[711, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[711, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[711, "std-function-last-words"]], "Functions, Functions": [[712, "functions-functions"]], "Threads Introduction": [[713, "threads-introduction"]], "Operating System Primitives": [[713, "operating-system-primitives"]], "There Be Dragons": [[713, "there-be-dragons"]], "Threads in C++": [[714, "threads-in-c"]], "Creating Threads is Far Too Easy": [[714, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[714, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[714, "cornercases-in-thread-lifetime"]], "Race Conditions": [[715, "race-conditions"], [776, "race-conditions"]], "std::atomic": [[716, "std-atomic"]], "Atomic Instructions (1)": [[716, "atomic-instructions-1"]], "Atomic Instructions (2)": [[716, "atomic-instructions-2"]], "std::mutex And Friends": [[717, "std-mutex-and-friends"]], "std::mutex": [[717, "std-mutex"]], "std::recursive_mutex": [[717, "std-recursive-mutex"]], "std::timed_mutex": [[717, "std-timed-mutex"]], "std::recursive_timed_mutex": [[717, "std-recursive-timed-mutex"]], "Scoped Locking": [[718, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[718, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[718, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[718, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[719, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[719, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[719, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[719, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[719, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[719, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[721, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[721, "overview-std-promise"]], "Overview: std::future": [[721, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[721, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[721, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[721, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[721, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[721, "pro-readability-encapsulate"]], "Atomics On Structures?": [[721, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[721, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[721, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[721, "and-exceptions"]], "std::chrono": [[722, "std-chrono"], [722, "id1"]], "Clock Domains": [[722, "clock-domains"]], "Measuring Time (1)": [[722, "measuring-time-1"]], "Measuring Time (2)": [[722, "measuring-time-2"]], "Sleeping, and Literals": [[722, "sleeping-and-literals"]], "New-Style Union: std::variant": [[723, "new-style-union-std-variant"]], "Exercise: Bag Of Items, By Copy": [[725, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[725, "step-1-insert-find"]], "Step 2: Remove": [[725, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[726, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[726, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[726, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[726, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[727, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[729, "std-filesystem"]], "Paths: Composition, Comparison": [[729, "paths-composition-comparison"]], "Absolute and Relative Paths": [[729, "absolute-and-relative-paths"], [862, "absolute-and-relative-paths"]], "Path Component Access": [[729, "path-component-access"]], "Iterating Over Path Components": [[729, "iterating-over-path-components"]], "Current Working Directory": [[729, "current-working-directory"], [841, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[729, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[729, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[729, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[729, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[729, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[729, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[729, "recursive-directory-iteration"]], "C++ 11": [[730, "c-11"]], "Generated Topic Graph": [[731, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[733, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[734, "modern-character-devices-slideshow"]], "Source": [[734, null], [737, null], [739, null], [742, null], [744, null], [747, null], [756, null], [758, null], [768, null], [770, null], [781, null], [786, null]], "Character Devices: Problems": [[734, "character-devices-problems"]], "Dynamic Device Numbers": [[734, "dynamic-device-numbers"]], "Device Classes": [[734, "device-classes"]], "Devices": [[734, "devices"]], "Modern Character Devices": [[735, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[736, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[736, "hooks-necessary"]], "Implement open(), read(), write()": [[736, "implement-open-read-write"]], "ioctl()": [[736, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[737, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[737, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[737, "available-methods"]], "open(): Userspace": [[737, "open-userspace"]], "open(): Kernelspace": [[737, "open-kernelspace"]], "ioctl(): Userspace": [[737, "ioctl-userspace"]], "ioctl(): Kernelspace": [[737, "ioctl-kernelspace"]], "ioctl(): Requests": [[737, "ioctl-requests"]], "_IO*() Macros": [[737, "io-macros"]], "_IO*() Macros: Usage": [[737, "io-macros-usage"]], "File Operations on Character Devices": [[738, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[739, "coding-first-functionality-slideshow"]], "Implement Event List": [[739, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[739, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[739, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[740, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[741, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[741, "major-and-minor-numbers"]], "Character Device": [[741, "character-device"]], "Character Device Basics (Slideshow)": [[742, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[742, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[742, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[742, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[742, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[742, "character-device-1"]], "Character Device (2)": [[742, "character-device-2"]], "And User Space?": [[742, "and-user-space"]], "Character Device Basics": [[743, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[744, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[744, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[745, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[746, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[746, "build-module-from-multiple-files"]], "Per-Device Structure": [[746, "per-device-structure"]], "Want My Hair Pretty": [[746, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[746, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[747, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[747, "what-s-bad"]], "Coding: Refactoring": [[748, "coding-refactoring"]], "DMA (Slideshow)": [[749, "dma-slideshow"]], "Address Types": [[749, "address-types"]], "Physical Memory Allocation": [[749, "physical-memory-allocation"]], "DMA Mappings: Overview": [[749, "dma-mappings-overview"]], "Consistent DMA Mappings": [[749, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[749, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[749, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[749, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[749, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[749, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[749, "streaming-mappings-syncing"]], "DMA": [[750, "dma"]], "Building a Fedora Kernel (Screenplay)": [[751, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[751, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[751, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[751, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[752, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[753, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[753, "prerequisite-build-entire-kernel"]], "Build Modules": [[753, "build-modules"]], "Install Modules": [[753, "install-modules"]], "Fedora: Building External Kernel Modules": [[754, "fedora-building-external-kernel-modules"]], "Linux Kernel Driver Development": [[755, "linux-kernel-driver-development"], [1135, "linux-kernel-driver-development"]], "Topics and Dependencies": [[755, "topics-and-dependencies"]], "Module Loading, Hello World (Slideshow)": [[756, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[756, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[756, "built-in-vs-loadable-module"]], "Minimum Module Source": [[756, "minimum-module-source"]], "Gotchas: init() and exit()": [[756, "gotchas-init-and-exit"]], "Module Build": [[756, "module-build"]], "Minimum Makefile, Building": [[756, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[756, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[756, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[757, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[758, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[758, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[758, "cross-compilation"]], "Cross Compilation Sucks": [[758, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[758, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[758, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[758, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[758, "interlude-io-macros"]], "Request GPIO": [[758, "request-gpio"]], "Request Interrupt": [[758, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[759, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[760, "interrupts-slideshow"]], "Interrupt Facts": [[760, "interrupt-facts"]], "Interrupt Service Routine": [[760, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[760, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[762, "io-memory-slideshow"]], "I/O Memory": [[762, "i-o-memory"]], "I/O Memory: Reservation": [[762, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[762, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[762, "accessing-i-o-memory"]], "IO Memory": [[763, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[764, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[764, "dynamic-memory-kmalloc"], [765, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[764, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[766, "doubly-linked-lists-slideshow"]], "Big Picture": [[766, "big-picture"]], "List Head": [[766, "list-head"]], "Insert a Node": [[766, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[766, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[766, "emptying-a-list"]], "Doubly Linked Lists": [[767, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[768, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[768, "what-do-we-have"]], "Consequences of Not Protecting": [[768, "consequences-of-not-protecting"]], "Protect Event List": [[768, "protect-event-list"]], "Protect Device List": [[768, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[769, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[770, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[770, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[770, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[770, "mutex-locking-1"]], "Mutex: Locking (2)": [[770, "mutex-locking-2"]], "Mutex: Releasing": [[770, "mutex-releasing"]], "Realtime Mutex": [[770, "realtime-mutex"]], "Mutex (and RT Mutex)": [[771, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[772, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[772, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[772, "module-initialization-device-registration"]], "Device Methods": [[772, "device-methods"]], "Kernel Networking Layer Utilities": [[772, "kernel-networking-layer-utilities"]], "Network Devices": [[773, "network-devices"]], "PCI (Slideshow)": [[774, "pci-slideshow"]], "First and Foremost": [[774, "first-and-foremost"]], "PCI Driver Methods": [[774, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[774, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[774, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[774, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[774, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[774, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[774, "dma-support-routines"]], "PCI": [[775, "pci"]], "Process vs.Atomic Context (Slideshow)": [[776, "process-vs-atomic-context-slideshow"]], "Process Context": [[776, "process-context"]], "Atomic Context": [[776, "atomic-context"]], "Atomic vs. Process Context": [[776, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[776, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[777, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[778, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[778, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[778, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[778, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[778, "other-toolchains"]], "Kernel Source": [[778, "kernel-source"]], "Kernel Compilation": [[778, "kernel-compilation"]], "Parameters for the Build": [[778, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[778, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[778, "building-the-kernel-artifacts"]], "Packaging": [[778, "packaging"], [1031, "packaging"]], "Bootloader Artifacts": [[778, "bootloader-artifacts"]], "Module Tree": [[778, "module-tree"]], "Deployment": [[778, "deployment"]], "Variation": [[778, "variation"]], "Raspberry Pi: Building the Kernel": [[779, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[779, "todo-jjj"]], "Sample Code Maintenance": [[780, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[781, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[781, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[781, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[781, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[781, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[782, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[783, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[783, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[783, "spinlock-initialization"]], "Simple Lock/Unlock": [[783, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[783, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[783, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[784, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[785, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[786, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[786, "per-event-timestamp"]], "Discussion: Deferred Events": [[786, "discussion-deferred-events"]], "Add Timer": [[786, "add-timer"]], "Gotcha: Cleanup Running Timer": [[786, "gotcha-cleanup-running-timer"]], "More Gotchas": [[786, "more-gotchas"]], "Coding: Timed Event": [[787, "coding-timed-event"]], "Timer Management (Slideshow)": [[788, "timer-management-slideshow"]], "Original Timer API": [[788, "original-timer-api"]], "jiffies": [[788, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[788, "timer-wheel-methods"]], "Better Documentation": [[788, "better-documentation"]], "Timer Management": [[789, "timer-management"]], "To Do List": [[790, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[791, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[791, "new-ioctl-get-one-event"]], "Getting One Event": [[791, "getting-one-event"]], "copy_to_user()": [[791, "copy-to-user"]], "Userspace Test Program": [[791, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[792, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[792, "address-spaces"]], "Copying To and From Userspace": [[792, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[793, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[794, "waiting-for-something-screenplay"]], "read() Not Implemented": [[794, "read-not-implemented"]], "Implementing read() Naively": [[794, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[794, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[794, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[795, "waiting-for-something-slideshow"]], "Waiting for Something": [[795, "waiting-for-something"], [796, "waiting-for-something"]], "Wait Queues: Initializing": [[795, "wait-queues-initializing"]], "Wait Queue: Waiting": [[795, "wait-queue-waiting"]], "Wait Queue: Waking": [[795, "wait-queue-waking"]], "Workqueue (Screenplay)": [[797, "workqueue-screenplay"]], "Add Workqueue": [[797, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[797, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[797, "cleanup-why-we-did-this-after-all"]], "Finish": [[797, "finish"]], "Workqueue (Slideshow)": [[798, "workqueue-slideshow"]], "Workqueue: Motivation": [[798, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[798, "creating-destroying-a-workqueue"]], "What is Work?": [[798, "what-is-work"]], "Submitting Work": [[798, "submitting-work"]], "Workqueue": [[799, "workqueue"]], "Exercises: Archiving And Compression": [[800, "exercises-archiving-and-compression"]], "gzip": [[802, "gzip"]], "Compression Tools: Comparison": [[803, "compression-tools-comparison"]], "tar": [[804, "tar"]], "Creating And Viewing Archives": [[804, "creating-and-viewing-archives"]], "(De)Compression": [[804, "de-compression"]], "Etiquette": [[804, "etiquette"]], "Option Summary": [[804, "option-summary"]], "Being Creative With The Pipe": [[804, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[805, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[805, "precondition-logged-in-to-remote-exam-computer"], [806, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[805, "create-exam-skeleton-5-points"], [806, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[805, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[805, "public-place-10-points"], [806, "public-place-10-points"]], "Private Place (10 Points)": [[805, "private-place-10-points"], [806, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[805, "shared-file-in-public-place-10-points"], [806, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[805, "make-a-backup-of-exam-01-15-points"], [806, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[806, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[806, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[807, "exercises-exams-linux-basics"]], "Linux Basics": [[808, "linux-basics"]], "Everything Is A File (Live Demo)": [[809, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[809, "simple-is-beautiful"]], "Ok: a File is a File": [[809, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[809, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[809, "pseudo-terminals"]], "Disks and Partitions": [[809, "disks-and-partitions"]], "/proc and /sys": [[809, "proc-and-sys"]], "Pseudo Devices": [[809, "pseudo-devices"]], "Environment (Variables)": [[810, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[810, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[810, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[810, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[811, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[811, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[811, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[813, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[813, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[813, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[813, "and-after-successful-authentication"]], "Impersonation": [[813, "impersonation"]], "Logged In, Finally": [[813, "logged-in-finally"]], "User Space, Kernel Space?": [[814, "user-space-kernel-space"]], "User Space: Abstractions": [[814, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[814, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[814, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[815, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[815, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[815, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[815, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[815, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[815, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[815, "process-attributes-groups"]], "Processes: More Attributes": [[815, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[816, "process-hierarchy-parent-child-process"]], "More Process Rules": [[816, "more-process-rules"]], "Typical Process Tree": [[816, "typical-process-tree"]], "Services, init": [[816, "services-init"]], "Windows Subsystem for Linux (WSL)": [[817, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[817, null]], "More Links": [[817, "more-links"]], "My $0.02": [[817, "my-0-02"]], "WSL, Finally": [[817, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[818, "exercises-io-redirection-pipes"]], "I/O Redirection": [[820, "i-o-redirection"]], "Standard I/O Streams": [[820, "standard-i-o-streams"]], "I/O Redirection Operators": [[820, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[820, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[820, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[820, "example-standard-error-redirection"]], "Example: Everything Redirection": [[820, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[821, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[821, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[821, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[821, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[821, "more-tricks"]], "Pipes": [[822, "pipes"]], "Why Pipes?": [[822, "why-pipes"]], "Pipe Facts": [[822, "pipe-facts"]], "Pipe Examples": [[822, "pipe-examples"]], "More Pipe Examples": [[822, "more-pipe-examples"]], "Named Pipes": [[822, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[823, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[823, "owner-and-permissions"]], "A Simple Example": [[823, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[823, null]], "Permission Check: User": [[823, "permission-check-user"]], "Permission Check: Group": [[823, "permission-check-group"]], "Permission Check: Others": [[823, "permission-check-others"]], "Programs: Execute Permissions": [[823, "programs-execute-permissions"]], "Directory Permissions": [[823, "directory-permissions"]], "Permission Bits, octal": [[823, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[823, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[823, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[824, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[825, "fh-moodle-quiz-permissions"], [826, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[827, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[828, "exercise-create-private-directory"]], "Question: Private Directory": [[829, "question-private-directory"]], "Exercise: Create Public Directory": [[830, "exercise-create-public-directory"]], "Question: Public Directory": [[831, "question-public-directory"]], "Exercise: Create Group-Shared File": [[832, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[834, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[834, "problem-change-my-password"]], "Solution: Set-UID Bit": [[834, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[834, "set-uid-how-does-it-work"]], "Command: chmod": [[834, "command-chmod"]], "Set-UID Is Not A Toy!": [[834, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[835, "setuid-live-demo"]], "Real and Effective User ID": [[835, "real-and-effective-user-id"]], "Sample Program": [[835, "sample-program"]], "Set-UID jfasch?": [[835, "set-uid-jfasch"]], "Set-UID root? Danger!": [[835, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[836, "ugly-hack-sticky-bit"]], "Sticky Bit": [[836, "sticky-bit"]], "Default Permissions: umask": [[837, "default-permissions-umask"]], "Default Permissions - umask": [[837, "id1"]], "umask: How Does it Work?": [[837, "umask-how-does-it-work"]], "Shape (1)": [[838, "shape-1"]], "Shape (2)": [[838, "shape-2"]], "Options": [[838, "options"], [867, "options"]], "Help and Manual": [[838, "help-and-manual"]], "Man Pages: Navigation": [[838, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[838, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[838, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[838, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[838, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[838, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[839, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[839, "what-s-volatile"]], "Copying: cp": [[840, "copying-cp"]], "Option Overview": [[840, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[840, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[840, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[840, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[840, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[840, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[841, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[841, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[842, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[843, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[844, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[845, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[846, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[847, "exercise-mkdir"]], "Exercise: Funny Stuff": [[848, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[849, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[850, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[851, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[852, "the-shell-exercises"]], "Exercise: File Types in /dev": [[853, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[854, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[855, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[856, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[857, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[857, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[857, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[857, "creating-an-empty-file-touch"]], "Removing A File: rm": [[857, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[857, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[859, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[860, "directory-listings-the-ls-command"]], "Many Options": [[860, "many-options"]], "Hidden Files": [[860, "hidden-files"]], "File Types": [[860, "file-types"]], "Moving and Renaming: mv": [[861, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[861, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[861, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[861, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[862, "path-separator"]], "Relative Paths": [[862, "relative-paths"]], "Absolute Paths": [[862, "absolute-paths"]], "Special Paths": [[862, "special-paths"]], "cat": [[863, "cat"], [863, "id1"]], "cut": [[864, "cut"], [864, "id1"]], "Exercises: Inspecting Text Files": [[865, "exercises-inspecting-text-files"]], "find": [[866, "find"]], "Directories durchsuchen mit find": [[866, "directories-durchsuchen-mit-find"]], "find: Optionen": [[866, "find-optionen"]], "find: Beispiele": [[866, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[866, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[866, "find-verknupfungen-beispiele"]], "grep": [[867, "grep"]], "Searching With grep": [[867, "searching-with-grep"]], "More About Regular Expressions": [[867, "more-about-regular-expressions"]], "head And tail": [[869, "head-and-tail"]], "head": [[869, "head"]], "tail": [[869, "tail"]], "head And tail In The Pipe": [[869, "head-and-tail-in-the-pipe"]], "less": [[870, "less"]], "Paging Files Using less": [[870, "paging-files-using-less"]], "Help Screen (Enter With h)": [[870, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[871, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[871, "stdin-stdout-examples"]], "Pipe: Examples": [[871, "pipe-examples"]], "Basics Text Tools": [[871, "basics-text-tools"]], "Drafts": [[872, "drafts"]], "Yocto": [[873, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[875, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[875, null]], "Electronic Speed Controller (ESC)": [[875, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[875, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[875, "the-command-protocol-and-calibration"]], "Driving the Motor": [[875, "driving-the-motor"]], "CAN/Linux Basics": [[876, "can-linux-basics"]], "Why This Talk?": [[876, "why-this-talk"]], "Network Programming: Datagram Exchange": [[876, "network-programming-datagram-exchange"]], "And CAN?": [[876, "and-can"]], "One CAN Network Packet \u2026": [[876, "one-can-network-packet"]], "CAN Interfaces": [[877, "can-interfaces"]], "CAN-Interface: Configuration": [[877, "can-interface-configuration"]], "CAN Utils": [[877, "can-utils"]], "CAN Utils: Usage (1)": [[877, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[877, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[877, "vcan-virtual-can-bus"]], "Programming": [[878, "programming"]], "CAN Programming": [[878, "can-programming"]], "CAN in C - Socket, Interface Index": [[878, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[878, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[878, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[878, "can-in-c-frames-2"]], "CAN in Python - Frames": [[878, "can-in-python-frames"]], "Hardware, Kernel": [[879, "hardware-kernel"]], "MCP2515: Schematic": [[879, "mcp2515-schematic"]], "MCP2515: Soldering": [[879, "mcp2515-soldering"]], "MCP2515: SPI": [[879, "mcp2515-spi"]], "MCP2515: Raspberry": [[879, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[880, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[881, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[882, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[882, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[882, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[882, null]], "Enable Userspace I2C": [[882, "enable-userspace-i2c"]], "Slave Device: LM73": [[882, "slave-device-lm73"]], "Datasheet etc.": [[882, null]], "Optional: Address Selection": [[882, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[882, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[882, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[882, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[882, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[882, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[882, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[882, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[883, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[883, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[883, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[883, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[883, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[884, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[884, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[884, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[884, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[884, null]], "Wiring: Attach DS2482-800 via I2C": [[884, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[884, "configure-software"]], "Enable I2C, and Check": [[884, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[884, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[884, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[884, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[884, "over-engineering-beauty"]], "Hardware Bringup": [[884, "hardware-bringup"]], "Device Usage": [[884, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[884, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[884, "using-the-device"]], "As a Generic OneWire Device": [[884, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[884, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[884, "lm-sensors"]], "OneWire Caveats": [[884, "onewire-caveats"]], "Bus Topology": [[884, "bus-topology"]], "Error Symptoms": [[884, "error-symptoms"]], "SSH: Basics": [[885, "ssh-basics"]], "Login": [[885, "login"]], "Exit Status, stdin, stdout: Scripting": [[885, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[886, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[887, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[888, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[889, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[891, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[891, "local-setup-key-generation"]], "Key Pair?": [[891, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[891, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[892, "ssh-links"]], "SSH: Port Forwarding": [[893, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[893, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[893, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[893, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[893, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[893, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[894, "ssh-secure-copy-scp"]], "What Is That?": [[894, "what-is-that"]], "Copy Single File From Local To Remote": [[894, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[894, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[894, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[894, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[894, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[894, "more-options"]], "SSH File System (sshfs)": [[895, "ssh-file-system-sshfs"]], "What Is It?": [[895, "what-is-it"]], "Why Is It?": [[895, "why-is-it"]], "Example Situation: The Raspi": [[895, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[895, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[895, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[895, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[895, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[896, "the-errno-variable"]], "errno Is A Global Variable": [[896, "errno-is-a-global-variable"]], "Helper Functions": [[896, "helper-functions"]], "Linux Systems Programming: Basics": [[897, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[898, "system-calls-vs-library-functions"]], "System Calls": [[898, "system-calls"]], "System Calls And The C-Library": [[898, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[898, "library-function-or-system-call"]], "Manual Pages": [[898, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[899, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[899, null]], "Solution: This Is What An Operating System Is There For": [[899, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[900, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[900, null], [901, null], [902, null], [1083, "see-also"]], "Abstractions": [[900, "abstractions"], [901, "abstractions"], [902, "abstractions"]], "Simplicity": [[900, "simplicity"], [901, "simplicity"], [902, "simplicity"]], "Build, Run, Look": [[900, "build-run-look"], [901, "build-run-look"], [902, "build-run-look"]], "Watch: Run Under strace Supervision": [[900, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[901, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[901, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[902, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[902, "setup-a-timer"]], "Blocking I/O: What Is That?": [[903, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[904, "file-i-o-basics"]], "File Descriptors": [[904, "file-descriptors"]], "Standard Filedescriptors": [[904, "standard-filedescriptors"]], "File I/O: System Calls": [[904, "file-i-o-system-calls"]], "open()": [[904, "open"]], "open() Flags": [[904, "open-flags"]], "read()": [[904, "read"]], "write()": [[904, "write"]], "File Offset: lseek()": [[904, "file-offset-lseek"]], "The Rest: ioctl()": [[904, "the-rest-ioctl"]], "Exercise: Copy A File": [[905, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[905, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[905, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[905, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[905, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[905, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[906, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[907, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[907, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[907, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[907, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[907, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[907, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[907, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[908, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[908, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[908, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[908, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[909, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[909, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[909, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[909, "error-file-exists"]], "O_RDONLY: Reading a File": [[910, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[910, "me-and-etc-passwd"]], "Code: Reading A File": [[910, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[910, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[910, "error-file-not-readable"]], "Error: File Not Even There": [[910, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[911, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[911, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[911, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[911, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[911, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[912, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[912, "onewire-basics"]], "Program": [[912, "program"], [1064, "program"]], "Test On The Target Machine": [[912, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[914, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[914, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[914, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[914, "truncating-files"]], "File Descriptors - Allocation": [[914, "file-descriptors-allocation"]], "Linux Systems Programming": [[915, "linux-systems-programming"], [1145, "linux-systems-programming"]], "Get Value Of GPIO": [[916, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[916, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[916, "shell-script"]], "C Program": [[916, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[917, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[918, "intro-sysfs-gpio"]], "sysfs?": [[918, "sysfs"]], "General Purpose IO (GPIO)": [[918, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[918, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[918, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[919, "interrupts-in-userspace"]], "Manual Configuration": [[919, "manual-configuration"]], "C Program: Configuration, Event Loop": [[919, "c-program-configuration-event-loop"]], "Why Threads?": [[920, "why-threads"]], "Typical Uses": [[920, "typical-uses"]], "Legal (1)": [[920, "legal-1"]], "Legal (2)": [[920, "legal-2"]], "POSIX Thread API": [[920, "posix-thread-api"]], "Thread Life Cycle": [[921, "thread-life-cycle"], [921, "id1"]], "Thread Creation": [[921, "thread-creation"]], "Thread Termination (1)": [[921, "thread-termination-1"]], "Thread Termination (2)": [[921, "thread-termination-2"]], "Exit Status, pthread_join()": [[921, "exit-status-pthread-join"]], "Detached Threads": [[921, "detached-threads"]], "Thread ID": [[921, "thread-id"]], "Scheduled Entities (1)": [[921, "scheduled-entities-1"]], "Scheduled Entities (2)": [[921, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[922, "thread-creation-race-condition"]], "Synchronization": [[923, "synchronization"]], "Race Conditions (1)": [[923, "race-conditions-1"]], "Race Conditions (2)": [[923, "race-conditions-2"]], "Mutex (1)": [[923, "mutex-1"]], "Mutex (2)": [[923, "mutex-2"]], "Mutex (3)": [[923, "mutex-3"]], "Mutex Types": [[923, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[924, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[925, "communication-condition-variable"]], "Condition Variable (1)": [[925, "condition-variable-1"]], "Condition Variable (2)": [[925, "condition-variable-2"]], "Condition Variable: wait()": [[925, "condition-variable-wait"]], "Condition Variable: signal()": [[925, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[925, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[925, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[925, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[925, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[925, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[926, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[927, "one-time-initialization-1"]], "One-Time Initialization (2)": [[927, "one-time-initialization-2"]], "One-Time Initialization (3)": [[927, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[927, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[928, "last-warning-1"]], "Last Warning (2)": [[928, "last-warning-2"]], "Last Warning (3)": [[928, "last-warning-3"]], "POSIX Threads": [[929, "posix-threads"]], "Trylock/islocked": [[930, "trylock-islocked"]], "Process: Arguments, Exit Status": [[931, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[931, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[931, "the-shell-a-programming-language"]], "Exit Status": [[931, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[931, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[931, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[931, "argument-vector-int-argc-char-argv"]], "Processes": [[932, "processes"]], "The Process Tree (And Environment, And procfs)": [[933, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[933, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[933, "system-calls-getpid-getppid"]], "Environment Variables": [[933, "environment-variables"]], "Scheduling (and Multitasking)": [[934, "scheduling-and-multitasking"]], "Fairness Criteria": [[934, "fairness-criteria"]], "CPU bound vs. I/O bound": [[934, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[934, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[934, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[936, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[936, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[936, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[936, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[936, "id1"]], "Threads Are Great: More Functionality": [[936, "threads-are-great-more-functionality"]], "Are Threads Great?": [[936, "are-threads-great"]], "Stability Considerations": [[936, "stability-considerations"]], "Processes, Address Spaces": [[936, "processes-address-spaces"]], "Stabilizing": [[936, "stabilizing"]], "Scheduling: Exam Questions": [[937, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[938, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[938, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[938, "enter-realtime-definition"]], "Realtime on Linux": [[938, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[938, "demo-measuring-wakeup-latency"]], "Immediately?": [[938, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[938, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[939, "realtime-api"]], "Scheduling Policies": [[939, "scheduling-policies"]], "Scheduling Priorities": [[939, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[939, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[939, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[939, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[939, "scheduling-threads-2"]], "Priority Inversion": [[939, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[939, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[940, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[940, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[940, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[940, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[940, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[941, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[942, "screenplay-sysprog-posix-ipc"], [945, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[942, "select-on-device-files"]], "Sysprog: Events": [[943, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[944, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[945, "virtual-memory-mmap"]], "POSIX Shared Memory": [[945, "posix-shared-memory"]], "Create Shared Memory Segment": [[945, "create-shared-memory-segment"]], "Produce into Shared Memory": [[945, "produce-into-shared-memory"]], "Consume from Shared Memory": [[945, "consume-from-shared-memory"]], "POSIX Semaphores": [[945, "posix-semaphores"]], "Create Semaphore": [[945, "create-semaphore"]], "Wait": [[945, "wait"]], "Post": [[945, "post"]], "POSIX Message Queues": [[945, "posix-message-queues"]], "Create": [[945, "create"]], "Produce": [[945, "produce"]], "Consume": [[945, "consume"]], "Slides: Sysprog: POSIX IPC": [[946, "slides-sysprog-posix-ipc"]], "Slideshow": [[946, null], [950, null]], "History: Two IPC Variants": [[946, "history-two-ipc-variants"]], "Object Names": [[946, "object-names"]], "File Semantics": [[946, "file-semantics"]], "Message Queues": [[946, "message-queues"]], "Open/Create: mq_open()": [[946, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[946, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[946, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[946, "notification-mq-notify"]], "Message Queues are Files": [[946, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[946, "message-queue-filesystem-mqueue"]], "Semaphores": [[946, "semaphores"]], "Open/Create: sem_open()": [[946, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[946, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[946, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[946, "semaphores-are-files"]], "Shared Memory (1)": [[946, "shared-memory-1"]], "Shared Memory (2)": [[946, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[946, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[947, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[948, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[949, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[949, "barebones-naive-program"]], "Signal Handler": [[949, "signal-handler"]], "Alarm": [[949, "alarm"]], "Alarm (Louder)": [[949, "alarm-louder"]], "Synchronous Delivery": [[949, "synchronous-delivery"]], "Innocent Multithreaded Program": [[949, "innocent-multithreaded-program"]], "Add SIGALRM": [[949, "add-sigalrm"]], "Slides: Sysprog: Signals": [[950, "slides-sysprog-signals"]], "Example Signals": [[950, "example-signals"]], "Terminology": [[950, "terminology"]], "Default Actions": [[950, "default-actions"]], "Important Signals": [[950, "important-signals"]], "Sending, Commandline": [[950, "sending-commandline"]], "Sending Signals, Programmatically": [[950, "sending-signals-programmatically"]], "Warning!": [[950, "warning"]], "Blocking Signals: Signal Mask": [[950, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[950, "signal-mask-manipulation"]], "Pending Signals": [[950, "pending-signals"]], "Signal Set: sigset_t": [[950, "signal-set-sigset-t"]], "Signal Handlers": [[950, "signal-handlers"]], "Installing a Signal Handler (1)": [[950, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[950, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[950, "effects-of-signal-delivery"]], "Last Warning!": [[950, "last-warning"]], "WTF Async Signal Safe?": [[950, "wtf-async-signal-safe"]], "Exercise: Signals": [[950, "exercise-signals"]], "Sysprog: Signals": [[951, "sysprog-signals"]], "Toolchain: Basics": [[952, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[952, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[952, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[952, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[952, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[952, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[952, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[952, "recap-toolchain"]], "CMake: Cross Build": [[953, "cmake-cross-build"]], "Cross Build: Parameters": [[953, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[953, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[953, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[953, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[953, "step-2-build-using-make"], [954, "step-2-build-using-make"]], "CMake: Local Build": [[954, "cmake-local-build"]], "make: Problems": [[954, "make-problems"]], "CMake To The Rescue": [[954, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[954, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[954, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[954, "goodie-dependency-management"]], "Native Compilation": [[955, "native-compilation"]], "Cross?": [[955, "cross"]], "The sysroot": [[955, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[957, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[958, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[959, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[960, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[961, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[962, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[963, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[964, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[964, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[964, "create-a-sysroot"]], "Patience!": [[964, null]], "Test Cross Build": [[964, "test-cross-build"]], "What We Have": [[964, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[964, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[964, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[966, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[966, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[966, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[966, "create-docker-volume"]], "Container Work": [[966, "container-work"]], "Command To Run Container On Volumes": [[966, "command-to-run-container-on-volumes"]], "Setup container": [[966, "setup-container"]], "Install autoconf 2.71": [[966, "install-autoconf-2-71"]], "Install crosstool-ng": [[966, "install-crosstool-ng"]], "Build Toolchain": [[966, "build-toolchain"]], "crosstool-ng Toolchain Build": [[966, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[966, "create-toolchain-archive"]], "Install Toolchain On Host": [[966, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[967, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[967, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[967, "establish-cmake-toolchain-file"]], "Test Run": [[967, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[968, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[968, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[968, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[968, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[968, "complication-modification-tracking"]], "Enter Makefiles": [[968, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[969, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[969, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[969, "and-dynamic-libraries"]], "Relocations": [[969, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[969, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[969, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[969, "and-build-dependencies"]], "And Runtime Dependencies?": [[969, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[969, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[969, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[969, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[970, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[970, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[970, "code-bases-become-larger-2"]], "Problem: Structure": [[970, "problem-structure"]], "Build Instructions: Building A Library": [[970, "build-instructions-building-a-library"]], "Closures": [[971, "closures"]], "Today": [[971, "today"]], "def is a Statement": [[971, "def-is-a-statement"]], "Functions That Create Functions": [[971, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[971, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[971, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[971, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[971, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[971, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[972, "intro"]], "Simplest: List Comprehension": [[972, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[973, "context-managers-the-with-statement"]], "Example: Open File": [[973, "example-open-file"]], "Example: Temporary Directory": [[973, "example-temporary-directory"]], "Example: Multiple with Items": [[973, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[973, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[973, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[973, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[973, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[974, "decorators"]], "The Ominous \u201c@\u201d": [[974, "the-ominous"]], "Decorators Overview": [[974, "decorators-overview"]], "A Simple Minded Function": [[974, "a-simple-minded-function"]], "Decorator Basics": [[974, "decorator-basics"]], "Decorators are Syntactic Sugar": [[974, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[974, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[974, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[974, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[974, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[975, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[975, "catching-exceptions-by-type"]], "Exception Objects": [[975, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[975, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[975, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[975, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[975, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[975, "built-in-exception-hierarchy"]], "Raising Exceptions": [[975, "raising-exceptions"]], "Re-Raising Exceptions": [[975, "re-raising-exceptions"]], "User-Defined Exceptions": [[975, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[975, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[975, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[975, "finally-executed-regardless-of-exception"]], "The exec() Function": [[976, "the-exec-function"]], "Dictionaries Everywhere: Context": [[976, "dictionaries-everywhere-context"]], "Enter exec()": [[976, "enter-exec"]], "exec(), and Context": [[976, "exec-and-context"]], "And What Is This Used For, Realistically?": [[976, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[977, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[978, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[978, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[978, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[978, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[978, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[978, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[978, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[978, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[979, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[979, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[979, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[979, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[979, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[979, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[980, "the-iterator-protocol"], [980, "id1"]], "Iteration in Python": [[980, "iteration-in-python"]], "What\u2019s an Iterator?": [[980, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[980, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[980, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[980, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[980, "generators-motivation"]], "Generators: How?": [[980, "generators-how"]], "Observations": [[980, "observations"]], "Iteration, Generators, And yield": [[981, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[982, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[983, "modules-are-objects"]], "Other Forms (1)": [[983, "other-forms-1"]], "Other Forms (2)": [[983, "other-forms-2"]], "Packages": [[983, "packages"]], "Executing Modules as Scripts": [[983, "executing-modules-as-scripts"]], "Package Structure": [[983, "package-structure"]], "Relative Imports (1)": [[983, "relative-imports-1"]], "Relative Imports (2)": [[983, "relative-imports-2"]], "Multithreading (Python)": [[984, "multithreading-python"]], "What\u2019s a Thread?": [[984, "what-s-a-thread"]], "Threads: The Pythonic Way": [[984, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[984, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[984, "and-program-termination"]], "Daemon Threads": [[984, "daemon-threads"]], "Race Conditions, and Mutexes": [[986, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[986, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[986, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[986, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[986, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[987, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[988, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[988, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[988, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[988, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[988, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[988, "abtract-base-class"]], "Classes And Dictionaries": [[989, "classes-and-dictionaries"]], "Facts Up-Front": [[989, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[989, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[989, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[989, "attributes"], [1101, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[989, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[989, "dynamic-attribute-access"]], "Constructor": [[990, "constructor"]], "And self?": [[990, "and-self"]], "Interrelationships": [[991, "interrelationships"]], "Extending Existing Classes": [[992, "extending-existing-classes"]], "Additional Feature: Salary": [[992, "additional-feature-salary"]], "Want Manager": [[992, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[992, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[992, "isinstance"]], "issubclass()": [[992, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[992, "add-str-creatively-after-the-fact"]], "Object Methods": [[993, "object-methods"]], "Class Methods (@classmethod)": [[993, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[993, "static-methods-staticmethod"]], "collections.namedtuple": [[994, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[994, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[994, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[994, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[995, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[995, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[995, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[995, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[995, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[995, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[995, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[995, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[995, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[995, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[996, "readonly-attributes"]], "And Write Access?": [[996, "and-write-access"]], "Calculated Attributes": [[996, "calculated-attributes"]], "str() And repr()": [[997, "str-and-repr"]], "Stringification And Representation": [[997, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[997, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[998, "positional-and-keyword-arguments"]], "Traditional Function Call": [[998, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[998, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[998, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[998, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[998, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[998, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[998, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[999, "python-the-language-fundamentals"]], "The Python Programming Language": [[1001, "the-python-programming-language"]], "A Little Bit of History": [[1001, "a-little-bit-of-history"]], "Guido Van Rossum": [[1001, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1002, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1002, "hello-world-script-files"]], "Running Python Programs": [[1003, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1003, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1003, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1003, "the-unix-way-running"]], "The Doze Way: Registry": [[1003, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1004, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1004, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1004, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[1004, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[1005, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1005, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1005, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1005, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1005, null]], "Variables (1)": [[1006, "variables-1"]], "Variables (2)": [[1006, "variables-2"]], "Integer Numbers: Comparison": [[1007, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1007, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1007, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1007, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1007, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1007, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1007, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1007, "strings-python-3"]], "Python 3, Generally": [[1007, "python-3-generally"]], "Boolean Values": [[1009, "boolean-values"]], "Boolean Operators": [[1009, "boolean-operators"]], "The if Statement": [[1010, "the-if-statement"], [1010, "id1"]], "Looping Constructs": [[1011, "looping-constructs"]], "Esoteric Feature: while/else": [[1011, "esoteric-feature-while-else"]], "Sequence Elements": [[1012, "sequence-elements"]], "Sequence Multiplication": [[1012, "sequence-multiplication"]], "Indexing (1)": [[1013, "indexing-1"]], "Indexing (2)": [[1013, "indexing-2"]], "Slicing: Cutting Out": [[1013, "slicing-cutting-out"]], "Slicing: Step Width": [[1013, "slicing-step-width"]], "Iteration over \u2026 Something": [[1014, "iteration-over-something"]], "break, continue, else": [[1014, "break-continue-else"]], "Iteration over Numbers: range()": [[1015, "iteration-over-numbers-range"]], "range(): Definition": [[1015, "range-definition"]], "range(): Python 2 vs. Python 3": [[1015, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1016, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1016, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1016, "immutability-tuples"]], "Mutability: Lists (1)": [[1016, "mutability-lists-1"]], "Mutability: Lists (2)": [[1016, "mutability-lists-2"]], "Shallow Copy": [[1016, "shallow-copy"]], "Deep Copy": [[1016, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1017, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1017, "undefined-variable"]], "Local Variable": [[1017, "local-variable"]], "Local and Global Variable With Same Name": [[1017, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1017, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1018, "functions-slideshow"]], "Why Functions?": [[1018, "why-functions"]], "Mutable Default Parameters: Attention!": [[1018, "mutable-default-parameters-attention"]], "String Delimiters": [[1020, "string-delimiters"]], "Escape Sequences": [[1020, "escape-sequences"]], "More String Tricks": [[1020, "more-string-tricks"]], "C-Style Formatting (1)": [[1021, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1021, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1021, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1021, "c-style-formatting-examples"]], "The format Method": [[1021, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1021, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1022, "batteries-included-checks"]], "Batteries Included: Search": [[1022, "batteries-included-search"]], "Substring Search: Examples": [[1022, "substring-search-examples"]], "Split and Join (1)": [[1022, "split-and-join-1"]], "Split and Join (2)": [[1022, "split-and-join-2"]], "List Access": [[1023, "list-access"]], "List Methods: Examples": [[1023, "list-methods-examples"]], "Dictionary Access": [[1024, "dictionary-access"]], "Examples: Simple Access": [[1024, "examples-simple-access"]], "Examples: Shortcuts": [[1024, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1024, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1024, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1025, "operations-on-sets-1"]], "Operations on Sets (2)": [[1025, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1026, "python-2-vs-python-3"]], "Opening Files": [[1026, "opening-files"]], "Reading Files": [[1026, "reading-files"]], "Reading Files: Pythonic": [[1026, "reading-files-pythonic"]], "Writing Files (1)": [[1026, "writing-files-1"]], "Writing Files (2)": [[1026, "writing-files-2"]], "File Modes": [[1026, "file-modes"]], "Text vs. Binary Mode": [[1026, "text-vs-binary-mode"]], "Standard Streams": [[1026, "standard-streams"]], "Function Objects": [[1027, "function-objects"]], "What\u2019s a Function?": [[1027, "what-s-a-function"]], "Function Objects?": [[1027, "id1"]], "Function Objects! (1)": [[1027, "function-objects-1"]], "Function Objects! (2)": [[1027, "function-objects-2"]], "Commandline Parsing with argparse": [[1028, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1028, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1028, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1029, "python-draft-topics"]], "Matplotlib": [[1030, "matplotlib"]], "Axis Ranges": [[1030, "axis-ranges"]], "Package Installation (setuptools)": [[1031, "package-installation-setuptools"]], "Files": [[1031, "files"]], "Test \u201cInstallation\u201d": [[1031, "test-installation"]], "Source Distribution": [[1031, "source-distribution"]], "Manifest": [[1031, "manifest"]], "Installing From Wheel File": [[1031, "installing-from-wheel-file"]], "Publishing On PyPI": [[1031, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1032, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1033, "exercise-read-csv-file"]], "Sample CSV File": [[1033, "sample-csv-file"]], "CSV and Databases": [[1034, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1036, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1037, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1038, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1039, "exercises-external"]], "Exercise: Swap Two Variables": [[1041, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1042, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1043, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1044, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1045, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1046, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1047, "exercise-primeness-for"]], "Exercises (Legacy)": [[1048, "exercises-legacy"]], "Exercise: Functions: join()": [[1049, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1051, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1052, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1053, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1054, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1054, null]], "Implementation Strategy": [[1054, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1055, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1056, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1057, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1058, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1059, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1060, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1061, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1062, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1063, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1063, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1063, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1064, "exercise-basic-sensor"]], "Specification, And Setup": [[1064, "specification-and-setup"]], "Verification": [[1064, "verification"]], "Unit Test": [[1064, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1065, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1065, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1066, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1067, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1067, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1068, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1069, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1070, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1071, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1071, "test-code"], [1072, "test-code"], [1073, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1072, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1073, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1074, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1075, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1075, "sample-trainings"]], "More Information": [[1075, "more-information"]], "Python Links": [[1076, "python-links"]], "Advanced Python": [[1076, "advanced-python"], [1138, "advanced-python"]], "David Beazley": [[1076, "david-beazley"]], "Raymond Hettinger": [[1076, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1077, "machine-learning-artificial-intelligence"]], "K-Means": [[1078, "k-means"]], "Topic Overview": [[1078, "topic-overview"], [1082, "topic-overview"]], "Artifacts": [[1078, "artifacts"]], "Topic Dependencies": [[1078, "topic-dependencies"], [1082, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1079, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1080, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1081, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1081, "pandas.DataFrame"]], "Reading Data": [[1081, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1081, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1081, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1081, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1081, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1081, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1081, "Verify-the-Model"]], "Linear Regression": [[1082, "linear-regression"]], "Running Code": [[1082, "running-code"]], "Dataset": [[1082, "dataset"]], "Machine Learning: Concepts and Terminology": [[1083, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1083, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1083, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1083, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1083, "types-of-machine-learning"]], "Problems Solved": [[1083, "problems-solved"], [1106, "problems-solved"], [1113, "problems-solved"]], "CSV Files": [[1084, "csv-files"]], "CSV in its Origins": [[1084, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1084, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1084, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1084, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1084, "more-tuning-needed-quoting"]], "Tuning Options": [[1084, "tuning-options"]], "And Headings?": [[1084, "and-headings"]], "Enter csv.DictReader": [[1084, "enter-csv-dictreader"]], "DBAPI 2": [[1085, "dbapi-2"]], "Database Interfaces": [[1085, "database-interfaces"]], "DBAPI 2.0": [[1085, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1085, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1085, "caveat-isolation"]], "Databases": [[1086, "databases"]], "DBAPI 2: PostgreSQL": [[1087, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1087, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1088, "dbapi-2-sqlite3"]], "SQLite3": [[1088, "sqlite3"]], "SQLite3 Connection": [[1088, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1088, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1088, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1088, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1088, "sqlite3-bind-parameters"]], "ASCII": [[1089, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1089, "iso-latin-1-iso-8859-1"]], "And Python?": [[1089, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1089, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1089, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1089, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1089, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1089, "and-jorg-2"]], "Enter UTF-8": [[1089, "enter-utf-8"]], "Boundary Code": [[1089, "boundary-code"]], "Ah Yes: decode()": [[1089, "ah-yes-decode"]], "And Source Encoding?": [[1089, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1090, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1091, "the-import-statement-incomplete"]], "Server/Broker": [[1092, "server-broker"]], "Client": [[1092, "client"]], "Starting the Service": [[1092, "starting-the-service"]], "Publishing a Message in Python": [[1092, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1092, "subscribing-a-topic-in-python"]], "Message Payload?": [[1092, "message-payload"]], "Pandas: Adding Rows": [[1093, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1093, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1093, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1093, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1094, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1094, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1094, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1094, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1094, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1094, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1094, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1095, "pandas-filters"]], "Basic Filter Example": [[1095, "basic-filter-example"]], "Filter? Bitmap!": [[1095, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1095, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1095, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1095, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1095, "negation"]], "Neat Helpers": [[1095, "neat-helpers"]], "Random Material": [[1096, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1097, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1097, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1097, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1097, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1097, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1098, "pandas-indexes"]], "Default Index: Row Number": [[1098, "default-index-row-number"]], "Setting Custom Index": [[1098, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1098, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1098, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1098, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1098, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1099, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1099, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1099, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1099, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1099, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1100, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1100, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1100, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1100, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1100, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1100, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1101, "xml-elementtree-etree"]], "SAX and DOM": [[1101, "sax-and-dom"]], "ElementTree": [[1101, "elementtree"]], "A Very Simple Document": [[1101, "a-very-simple-document"]], "Text (1)": [[1101, "text-1"]], "Text (2)": [[1101, "text-2"]], "Writing XML Documents": [[1101, "writing-xml-documents"]], "Reading XML Documents": [[1101, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1102, "visual-studio-code-for-python-programming"]], "PCAP Exam": [[1103, "pcap-exam"]], "Syllabus": [[1103, "syllabus"]], "Exam block #1: Modules and Packages (12%)": [[1103, "exam-block-1-modules-and-packages-12"]], "Exam block #2: Exceptions (14%)": [[1103, "exam-block-2-exceptions-14"]], "Exam block #3: Strings (18%)": [[1103, "exam-block-3-strings-18"]], "Exam block #4: Object-Oriented Programming (34%)": [[1103, "exam-block-4-object-oriented-programming-34"]], "Exam block #5: Miscellaneous (List Comprehensions, Lambdas, Closures, and I/O Operations) (22%)": [[1103, "exam-block-5-miscellaneous-list-comprehensions-lambdas-closures-and-i-o-operations-22"]], "Sample Questions": [[1103, "sample-questions"]], "Python: Project/Package Management": [[1104, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1105, "python-package-index-livehacking-screenplay"]], "Invocation": [[1105, "invocation"]], "Help": [[1105, "help"]], "Most Used Subcommands": [[1105, "most-used-subcommands"]], "Subcommand Help": [[1105, "subcommand-help"]], "System vs. User": [[1105, "system-vs-user"]], "Search": [[1105, "search"]], "Python Package Index (Slideshow)": [[1106, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1106, "python-package-index-pypi"]], "Python Package Index": [[1107, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1108, "packaging-pypi-upload-link-collection"]], "PyTest": [[1109, "pytest"]], "pytest Introduction, By Example": [[1110, "pytest-introduction-by-example"]], "Sample Project Structure": [[1110, "sample-project-structure"]], "pytest: Installation, Documentation": [[1110, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1110, "and-pythonpath"]], "A Simple Test": [[1110, "a-simple-test"]], "Failing Tests": [[1110, "failing-tests"]], "A More Realistic Example": [[1110, "a-more-realistic-example"]], "Fixtures": [[1110, "fixtures"]], "Temporary Test Directory": [[1110, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1110, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1111, "the-unittest-module"]], "Simplest Example": [[1111, "simplest-example"]], "Using a Fixture": [[1111, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1111, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1111, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1111, "the-meat-of-a-test"]], "Recommendations": [[1111, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1112, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1112, "first-help"]], "Local Package Installation": [[1112, "local-package-installation"]], "Freezing an Environment": [[1112, "freezing-an-environment"]], "Destroying an Environment": [[1112, "destroying-an-environment"]], "Recreating an Environment": [[1112, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1112, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1113, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1113, "virtual-environments-links"]], "Virtual Environments": [[1114, "virtual-environments"]], "Unit Testing With googletest": [[1115, "unit-testing-with-googletest"]], "Code: Unittest: GTest Basics": [[1116, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1117, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1117, "before-we-start"]], "Simplest Test: No Test": [[1117, "simplest-test-no-test"]], "Next Simplest: Single File": [[1117, "next-simplest-single-file"]], "Executing Tests Selectively": [[1117, "executing-tests-selectively"]], "Fatal Failure": [[1117, "fatal-failure"]], "FAIL()": [[1117, "fail"]], "ASSERT_*()": [[1117, "assert"]], "Non-Fatal Failure": [[1117, "non-fatal-failure"]], "Custom Message Output": [[1117, "custom-message-output"]], "Last Not Least: Structure": [[1117, "last-not-least-structure"]], "Test Cases and Suites": [[1117, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1118, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1119, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1119, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1119, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1119, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1119, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1120, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1121, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1122, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1122, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1122, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1122, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1123, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1124, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1124, null]], "Buchung": [[1124, "buchung"]], "Kursgestaltung": [[1124, "kursgestaltung"]], "\u00dcbungen": [[1124, "ubungen"]], "Unterlagen & Download": [[1124, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1125, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1125, "grub-0-97"]], "Cross Systeme Bauen": [[1125, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1125, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1125, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1126, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1126, "zielpublikum"], [1128, "zielpublikum"], [1129, "zielpublikum"], [1134, "zielpublikum"], [1136, "zielpublikum"], [1141, "zielpublikum"], [1142, "zielpublikum"], [1148, "zielpublikum"]], "Kursinhalt": [[1126, "kursinhalt"], [1128, "kursinhalt"], [1129, "kursinhalt"], [1134, "kursinhalt"], [1136, "kursinhalt"], [1137, "kursinhalt"], [1141, "kursinhalt"], [1142, "kursinhalt"], [1143, "kursinhalt"], [1144, "kursinhalt"], [1146, "kursinhalt"], [1147, "kursinhalt"], [1148, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1126, "empfohlene-vorkenntnisse"], [1128, "empfohlene-vorkenntnisse"], [1129, "empfohlene-vorkenntnisse"], [1134, "empfohlene-vorkenntnisse"], [1136, "empfohlene-vorkenntnisse"], [1137, "empfohlene-vorkenntnisse"], [1141, "empfohlene-vorkenntnisse"], [1142, "empfohlene-vorkenntnisse"], [1143, "empfohlene-vorkenntnisse"], [1144, "empfohlene-vorkenntnisse"], [1146, "empfohlene-vorkenntnisse"], [1147, "empfohlene-vorkenntnisse"], [1148, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1127, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1128, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1129, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1130, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1131, "c-and-c-programming"]], "CMake": [[1132, "cmake"]], "The Course": [[1132, null]], "Target Audience": [[1132, "target-audience"]], "Recommended Prior Knowledge": [[1132, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1133, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1134, "embedded-software-development-hardware-realtime-and-memory-management"]], "Course Contents": [[1135, "course-contents"]], "Sample Project": [[1135, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1136, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1137, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1140, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1141, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1142, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1143, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1144, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1146, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1147, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1148, "unittesting-and-test-driven-development"]], "Working with Git In Our FH-ECE21 Project": [[112, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[112, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[112, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[112, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[112, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[112, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[112, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[112, "push-into-fork-on-github"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[63, "setup-before-presentation"]], "Greeting": [[63, "greeting"]], "Multiple Background Threads": [[63, "multiple-background-threads"]], "Enter asyncio": [[63, "enter-asyncio"]], "Character Device Based GPIO": [[63, "character-device-based-gpio"]], "GPIO Device": [[63, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[63, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[63, "entire-matrix-on-off"]], "Bringing All Together": [[63, "bringing-all-together"]], "Modularize": [[63, "modularize"]], "Play A Bit: Blink Entire Rows": [[63, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[63, "coroutines"]], "Not Enough: sequence()": [[63, "not-enough-sequence"]], "Looping: forever()": [[63, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[63, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[63, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[63, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[63, "program-finally"]], "Playground: cycle()": [[63, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[63, "fast-forward-any-and-cancellation"]], "Playground: on()": [[63, "playground-on"]], "Goodbye": [[63, "goodbye"]], "WS2023/24": [[123, "ws2023-24"]], "2023-10-05 (6 VO)": [[123, "vo"]], "OO: Recap": [[123, "oo-recap"]], "Plan \ud83d\udcaa": [[123, "plan-muscle"]], "OO: Polymorphism": [[123, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[123, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[123, "tasks-first-round"]], "2023-11-03 (6 VO)": [[123, "id1"]], "Organizational": [[123, "organizational"]], "OO: Design?": [[123, "oo-design"]], "Hardware Overview": [[123, "hardware-overview"]], "2023-11-09 (3 VO)": [[123, "id2"]], "2023-11-10 (3 VO)": [[123, "id4"]], "2023-11-17 (3 VO)": [[123, "id6"]], "OO, And Software Development At Large": [[123, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[123, "updating-a-fork-from-upstream"]], "Datalogger Pull Request": [[123, "datalogger-pull-request"]]}, "indexentries": {}})