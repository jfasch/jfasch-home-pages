Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda", "trainings/log/detail/2023-XX-XX-C++-Advanced/index", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/pcap-exam", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/agenda.rst", "trainings/log/detail/2023-XX-XX-C++-Advanced/index.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/pcap-exam.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Embedded Computing 2021", "SS2023", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "Interfaces", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++ 03", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Such", "Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Structured Binding", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Introduction", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "C++ 11", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "PCAP Exam", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 147, 150, 218, 419, 1053, 1055, 1059, 1061], "j\u00f6rg": [0, 23, 151, 185, 193, 197, 212, 215, 218, 228, 231, 246, 267, 273, 285, 301, 302, 304, 306, 371, 445, 961, 964, 1002, 1026, 1053, 1054, 1055, 1056, 1059, 1060, 1061], "faschingbau": [0, 12, 23, 36, 49, 58, 61, 115, 132, 139, 140, 148, 166, 169, 170, 172, 173, 174, 175, 185, 192, 197, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 246, 253, 263, 267, 273, 278, 285, 301, 302, 304, 307, 310, 315, 371, 402, 419, 424, 437, 444, 445, 478, 494, 550, 596, 625, 626, 627, 628, 629, 630, 647, 793, 794, 801, 803, 808, 822, 838, 851, 857, 882, 919, 961, 964, 965, 977, 978, 980, 981, 982, 984, 985, 987, 993, 1015, 1019, 1042, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1063, 1072, 1078, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1092, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136], "offic": [0, 31, 138, 154], "co": [0, 12, 31, 36, 115, 129, 140, 169, 170, 172, 173, 174, 175, 236, 253, 257, 310, 315, 417, 424, 643, 965, 987, 1063, 1078, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1092, 1110, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136], "43": [0, 7, 136, 143, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 304, 305, 394, 407, 419, 578, 648, 698, 714, 848, 857, 870, 872, 911, 974], "0": [0, 5, 7, 21, 23, 31, 60, 62, 106, 109, 110, 117, 119, 129, 132, 134, 135, 136, 138, 144, 148, 152, 153, 154, 155, 156, 166, 169, 171, 173, 176, 181, 183, 184, 185, 186, 189, 192, 193, 194, 197, 198, 202, 205, 206, 208, 211, 213, 215, 218, 221, 224, 225, 228, 231, 233, 234, 236, 238, 243, 246, 249, 250, 251, 253, 257, 261, 262, 263, 267, 273, 283, 285, 296, 302, 303, 304, 305, 306, 307, 310, 332, 333, 335, 337, 339, 341, 342, 343, 345, 352, 353, 355, 356, 357, 365, 368, 370, 371, 377, 378, 380, 383, 398, 399, 400, 401, 403, 404, 407, 408, 411, 413, 417, 419, 420, 423, 427, 428, 430, 433, 436, 437, 442, 444, 447, 449, 456, 457, 459, 461, 462, 463, 464, 466, 467, 468, 471, 472, 475, 476, 477, 481, 484, 485, 489, 491, 492, 493, 494, 495, 503, 509, 510, 518, 521, 527, 530, 537, 538, 539, 541, 542, 545, 546, 547, 548, 550, 552, 553, 554, 555, 556, 557, 560, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 600, 602, 606, 607, 609, 610, 612, 613, 615, 617, 619, 624, 625, 626, 627, 628, 629, 630, 631, 635, 639, 640, 643, 646, 647, 648, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 677, 679, 680, 682, 684, 685, 687, 689, 693, 694, 696, 697, 698, 699, 704, 707, 709, 713, 717, 721, 724, 725, 729, 732, 744, 746, 756, 779, 780, 782, 797, 801, 803, 808, 811, 822, 823, 826, 848, 850, 851, 852, 857, 863, 866, 870, 871, 872, 881, 883, 886, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 902, 904, 906, 907, 913, 921, 922, 924, 926, 927, 928, 930, 933, 934, 937, 938, 940, 941, 943, 952, 955, 956, 958, 960, 962, 963, 966, 968, 972, 974, 976, 989, 992, 993, 994, 995, 999, 1001, 1003, 1006, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1021, 1024, 1025, 1026, 1031, 1033, 1042, 1052, 1059, 1061, 1067, 1068, 1069, 1076, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1093, 1098, 1100, 1105, 1110], "664": [0, 208, 811], "5783814": 0, "gpg": 0, "kei": [0, 9, 31, 41, 96, 100, 101, 107, 112, 128, 130, 132, 144, 152, 161, 166, 171, 173, 174, 176, 181, 183, 185, 188, 189, 190, 192, 197, 198, 200, 202, 203, 205, 206, 208, 213, 215, 216, 218, 221, 225, 228, 230, 231, 235, 239, 242, 243, 246, 248, 249, 253, 263, 266, 267, 269, 270, 272, 273, 285, 304, 307, 310, 315, 343, 391, 591, 593, 596, 635, 684, 719, 793, 794, 801, 858, 862, 874, 875, 876, 878, 883, 964, 968, 977, 995, 996, 1012, 1021, 1031, 1032, 1054, 1056, 1064, 1072, 1085, 1086, 1093, 1118, 1124], "prankergass": [0, 192, 213, 838], "33": [0, 7, 130, 143, 155, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 304, 305, 306, 419, 440, 797, 838, 940, 1068, 1069], "8020": [0, 192, 208, 213, 251, 419, 793, 794, 832, 838], "graz": [0, 1, 3, 23, 58, 61, 116, 174, 192, 251, 284, 287, 327, 419, 793, 794, 832, 838, 1063], "uid": [0, 213, 218, 221, 310, 315, 717, 793, 794, 801, 811, 883, 898, 954, 1042], "vat": [0, 177, 1128], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 36, 42, 47, 52, 53, 54, 55, 56, 58, 61, 62, 65, 69, 77, 96, 113, 133, 134, 135, 144, 149, 153, 166, 169, 170, 172, 173, 174, 185, 190, 192, 193, 194, 195, 200, 202, 203, 206, 209, 211, 213, 219, 221, 230, 233, 240, 242, 249, 259, 266, 272, 284, 291, 296, 299, 301, 310, 312, 314, 316, 321, 337, 340, 341, 346, 358, 360, 382, 393, 397, 403, 404, 407, 417, 419, 442, 445, 457, 459, 462, 473, 482, 483, 494, 495, 497, 502, 513, 519, 524, 530, 535, 537, 538, 541, 551, 553, 600, 607, 616, 619, 621, 635, 640, 651, 663, 675, 684, 690, 699, 713, 717, 718, 719, 725, 727, 737, 739, 746, 750, 766, 782, 793, 794, 797, 803, 808, 809, 811, 812, 813, 814, 820, 822, 824, 827, 845, 857, 859, 862, 866, 870, 871, 872, 879, 886, 888, 889, 890, 893, 895, 896, 897, 898, 900, 901, 902, 903, 904, 906, 907, 910, 914, 920, 924, 933, 934, 937, 938, 942, 945, 948, 966, 977, 982, 983, 987, 1010, 1011, 1016, 1021, 1022, 1023, 1025, 1028, 1029, 1030, 1031, 1033, 1034, 1037, 1038, 1040, 1042, 1044, 1045, 1046, 1048, 1049, 1053, 1055, 1058, 1062, 1064, 1077, 1088, 1091, 1098, 1099, 1100, 1118, 1119, 1131], "review": [0, 134, 157, 168, 262, 334], "http": [0, 3, 4, 8, 13, 20, 23, 31, 36, 38, 43, 58, 60, 61, 84, 105, 112, 117, 119, 129, 137, 138, 139, 140, 144, 148, 150, 152, 160, 161, 162, 163, 169, 170, 173, 174, 182, 187, 193, 195, 196, 202, 208, 209, 211, 218, 219, 221, 225, 233, 238, 240, 249, 252, 258, 259, 260, 262, 266, 272, 276, 277, 280, 284, 286, 288, 309, 310, 315, 330, 478, 492, 513, 555, 615, 688, 692, 697, 722, 737, 739, 743, 766, 767, 865, 867, 870, 906, 952, 954, 1009, 1019, 1075, 1077, 1091, 1093, 1094], "g": [0, 31, 47, 62, 96, 112, 113, 136, 140, 144, 148, 153, 154, 156, 166, 181, 185, 194, 198, 202, 205, 208, 213, 215, 218, 221, 225, 243, 249, 257, 273, 332, 352, 356, 359, 362, 367, 373, 374, 375, 377, 380, 395, 399, 407, 411, 412, 419, 420, 422, 425, 431, 432, 445, 449, 457, 478, 491, 494, 537, 541, 542, 571, 591, 609, 610, 639, 643, 646, 648, 657, 677, 698, 706, 710, 717, 725, 744, 766, 785, 804, 811, 826, 848, 855, 858, 865, 883, 892, 902, 922, 924, 926, 937, 938, 940, 941, 942, 943, 954, 959, 961, 963, 971, 983, 985, 986, 1004, 1005, 1009, 1010, 1073, 1077, 1088, 1100, 1105, 1121], "page": [0, 32, 38, 60, 71, 73, 77, 105, 112, 113, 128, 129, 130, 132, 133, 135, 136, 140, 145, 165, 170, 173, 194, 219, 249, 275, 317, 341, 342, 345, 390, 401, 441, 478, 719, 725, 744, 750, 752, 764, 790, 793, 794, 810, 859, 863, 872, 883, 893, 896, 924, 1071], "r": [0, 7, 13, 31, 37, 42, 60, 136, 138, 139, 143, 144, 152, 154, 155, 156, 165, 166, 169, 171, 172, 176, 181, 183, 186, 189, 192, 194, 198, 199, 202, 205, 208, 211, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 250, 251, 253, 263, 267, 273, 285, 302, 305, 310, 319, 331, 352, 377, 407, 419, 426, 440, 459, 460, 489, 493, 557, 584, 687, 695, 717, 730, 739, 744, 762, 766, 767, 797, 803, 808, 811, 822, 825, 826, 828, 848, 855, 863, 870, 871, 872, 874, 875, 883, 894, 897, 898, 906, 940, 941, 942, 952, 954, 955, 962, 983, 988, 991, 997, 1008, 1014, 1019, 1051, 1077, 1100, 1136], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 31, 36, 58, 61, 64, 106, 115, 133, 134, 135, 136, 138, 139, 140, 141, 142, 152, 165, 177, 186, 222, 226, 253, 548, 685, 766, 805, 854, 859, 872, 881, 883, 898, 1008, 1112, 1113, 1115, 1128, 1131, 1135], "19": [1, 7, 23, 112, 143, 145, 154, 155, 156, 165, 171, 174, 176, 181, 183, 185, 186, 189, 192, 197, 198, 202, 205, 208, 209, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 285, 303, 304, 305, 307, 315, 318, 327, 395, 419, 426, 695, 826, 848, 872, 943, 952, 984, 990, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1063, 1068, 1069, 1073, 1081, 1093, 1098, 1100], "6": [1, 7, 31, 60, 62, 108, 134, 136, 144, 148, 150, 153, 154, 155, 156, 166, 171, 173, 178, 181, 183, 184, 186, 189, 192, 193, 194, 196, 199, 201, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 232, 234, 243, 246, 250, 253, 257, 263, 267, 273, 281, 285, 302, 303, 305, 306, 310, 334, 335, 357, 394, 400, 411, 456, 457, 496, 497, 498, 499, 511, 530, 537, 539, 542, 545, 546, 549, 551, 554, 555, 556, 557, 575, 576, 577, 578, 584, 615, 616, 652, 698, 717, 822, 845, 848, 852, 857, 863, 870, 871, 872, 886, 894, 907, 940, 952, 954, 957, 963, 966, 972, 995, 996, 999, 1001, 1003, 1019, 1025, 1042, 1049, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1068, 1069, 1073, 1077, 1091, 1093, 1098, 1099, 1100, 1105, 1129], "1966": [1, 23, 174, 208, 218, 228, 231, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1073], "diplom": [1, 23], "au": [1, 5, 8, 23, 31, 141, 142, 150, 151, 152, 156, 166, 177, 187, 189, 196, 212, 215, 221, 222, 224, 236, 273, 305, 310, 311, 328, 1113, 1115, 1116, 1117, 1122, 1128, 1131], "technisch": [1, 23, 328, 1130], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 37, 39, 42, 44, 45, 47, 53, 54, 56, 57, 58, 61, 68, 72, 73, 77, 81, 82, 84, 91, 106, 107, 109, 110, 112, 113, 121, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 163, 165, 166, 169, 171, 172, 173, 176, 184, 185, 189, 190, 192, 193, 194, 195, 197, 200, 202, 205, 206, 209, 210, 211, 213, 216, 218, 219, 221, 225, 231, 233, 234, 238, 240, 242, 249, 252, 255, 257, 258, 259, 260, 262, 266, 267, 277, 280, 284, 291, 296, 297, 321, 327, 329, 333, 335, 339, 342, 343, 356, 365, 373, 377, 380, 383, 384, 395, 398, 399, 400, 401, 403, 406, 413, 417, 419, 423, 426, 432, 435, 436, 437, 440, 441, 445, 446, 447, 456, 457, 459, 460, 461, 462, 478, 480, 484, 489, 491, 493, 494, 497, 498, 499, 511, 513, 537, 538, 540, 542, 545, 546, 547, 551, 553, 554, 555, 556, 557, 570, 575, 588, 591, 594, 595, 600, 606, 609, 610, 617, 622, 626, 628, 629, 630, 631, 635, 636, 639, 643, 647, 656, 662, 675, 677, 685, 687, 694, 695, 697, 698, 699, 705, 717, 718, 719, 720, 725, 730, 732, 735, 737, 744, 766, 774, 779, 792, 793, 794, 798, 799, 803, 811, 820, 825, 826, 829, 832, 851, 853, 863, 870, 872, 874, 875, 880, 883, 888, 889, 890, 891, 893, 897, 898, 899, 900, 904, 906, 907, 913, 919, 921, 922, 925, 926, 927, 928, 934, 938, 940, 941, 946, 950, 955, 956, 959, 960, 963, 969, 970, 971, 975, 980, 981, 983, 985, 986, 987, 991, 992, 993, 995, 999, 1005, 1014, 1015, 1016, 1019, 1021, 1034, 1040, 1041, 1042, 1058, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1076, 1077, 1080, 1085, 1086, 1090, 1093, 1098, 1099, 1101, 1110, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1131, 1132, 1136], "der": [1, 3, 5, 7, 8, 11, 63, 129, 141, 142, 143, 147, 150, 151, 152, 153, 156, 158, 160, 166, 168, 177, 178, 179, 182, 183, 186, 187, 189, 192, 196, 212, 213, 215, 221, 224, 225, 228, 236, 285, 302, 310, 315, 1112, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 31, 141, 142, 166, 176, 273, 1113, 1132], "1998": [1, 3, 23, 144, 152, 208, 536], "vorlesungen": 1, "programmieren": [1, 5, 152, 156, 311, 327, 1117, 1122, 1125, 1129, 1131, 1135, 1136], "basi": [1, 3, 5, 7, 24, 77, 157, 165, 186, 195, 209, 221, 255, 305, 380, 1121, 1132, 1133], "c": [1, 3, 4, 6, 9, 12, 21, 23, 37, 41, 42, 62, 64, 71, 72, 73, 77, 84, 86, 105, 108, 113, 118, 128, 129, 132, 133, 134, 135, 136, 139, 146, 149, 151, 153, 161, 162, 166, 171, 172, 178, 181, 183, 188, 189, 192, 193, 202, 205, 206, 208, 212, 213, 215, 218, 221, 225, 228, 233, 234, 243, 246, 253, 259, 263, 267, 273, 276, 284, 285, 296, 305, 309, 311, 312, 317, 323, 324, 327, 329, 330, 331, 332, 333, 335, 339, 341, 343, 344, 345, 348, 351, 353, 355, 356, 357, 359, 363, 367, 368, 371, 372, 373, 374, 375, 379, 381, 383, 384, 385, 389, 390, 392, 393, 395, 396, 397, 399, 400, 401, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 420, 423, 424, 425, 426, 429, 430, 431, 436, 437, 439, 440, 445, 449, 455, 457, 460, 466, 478, 481, 484, 485, 486, 487, 488, 490, 491, 493, 494, 496, 502, 536, 538, 540, 541, 542, 543, 547, 548, 549, 553, 554, 556, 558, 561, 566, 571, 573, 574, 578, 580, 584, 586, 588, 590, 591, 592, 593, 596, 598, 599, 600, 602, 603, 605, 606, 607, 608, 609, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 633, 637, 643, 644, 648, 649, 650, 651, 652, 656, 662, 663, 674, 675, 676, 678, 679, 680, 681, 682, 683, 686, 687, 688, 689, 691, 692, 694, 695, 697, 698, 699, 700, 701, 703, 708, 709, 716, 717, 719, 720, 722, 725, 729, 730, 734, 735, 739, 741, 744, 746, 756, 766, 768, 769, 774, 782, 785, 790, 792, 798, 803, 805, 808, 823, 826, 848, 854, 857, 863, 864, 870, 871, 872, 884, 888, 889, 890, 895, 896, 897, 898, 899, 908, 911, 916, 924, 927, 929, 930, 933, 936, 937, 938, 940, 941, 942, 948, 950, 952, 956, 957, 958, 959, 961, 962, 986, 994, 995, 1003, 1004, 1008, 1014, 1021, 1075, 1076, 1080, 1099, 1100, 1107, 1110, 1120, 1122, 1123, 1125, 1131, 1132, 1133, 1134, 1135, 1136], "und": [1, 3, 4, 5, 6, 7, 8, 36, 38, 126, 141, 142, 147, 151, 152, 156, 158, 160, 168, 172, 178, 182, 184, 186, 191, 193, 197, 202, 213, 217, 218, 223, 225, 229, 235, 236, 253, 263, 273, 305, 306, 310, 315, 327, 329, 365, 373, 806, 853, 854, 873, 1112, 1113, 1114, 1115, 1116, 1120, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "\u00fcbertragungsprotokol": [1, 146], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 202, 208, 218, 221, 246], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 42, 71, 72, 73, 77, 105, 112, 146, 169, 182, 184, 193, 212, 219, 220, 223, 249, 253, 259, 261, 262, 266, 314, 323, 324, 419, 441, 483, 535, 536, 543, 606, 607, 610, 612, 613, 635, 699, 719, 758, 768, 965, 979, 1118, 1121], "design": [1, 3, 20, 23, 52, 56, 73, 77, 79, 81, 84, 105, 129, 130, 133, 146, 149, 169, 195, 196, 212, 258, 260, 318, 327, 329, 356, 386, 406, 407, 410, 418, 427, 434, 435, 436, 437, 439, 440, 442, 444, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 483, 491, 493, 535, 536, 542, 544, 560, 632, 681, 694, 698, 699, 701, 717, 719, 720, 871, 940, 1059, 1099, 1117, 1120], "analys": [1, 3, 146, 1115], "ration": [1, 3, 37, 139], "rose": [1, 3, 31], "f\u00fcr": [1, 3, 5, 63, 141, 142, 147, 151, 153, 156, 177, 178, 189, 196, 212, 224, 236, 250, 310, 315, 327, 329, 828, 1112, 1113, 1115, 1122, 1128, 1129, 1131, 1134], "java": [1, 9, 176, 177, 188, 200, 209, 596, 609, 694, 699, 706, 976, 989, 995, 1004, 1128, 1136], "releasemanag": [1, 3, 23, 146, 1130], "cv": [1, 3, 23, 31, 129, 203, 1130], "subvers": [1, 3, 149, 329, 848], "systemnah": [1, 3, 5, 23, 128, 146, 930, 933, 937, 1131], "programmierung": [1, 3, 4, 5, 6, 8, 23, 126, 146, 200, 227, 236, 327, 1113, 1114, 1115, 1117, 1122, 1129, 1131, 1134], "unter": [1, 3, 23, 63, 142, 150, 151, 168, 176, 311, 854, 1113, 1114, 1117, 1122, 1125, 1129, 1132, 1134, 1135], "unix": [1, 71, 72, 73, 77, 96, 130, 133, 162, 185, 249, 296, 310, 311, 312, 323, 324, 328, 345, 399, 445, 619, 710, 717, 719, 723, 725, 758, 791, 792, 793, 808, 810, 822, 850, 853, 859, 863, 866, 871, 883, 908, 924, 934, 990, 1014, 1042, 1113, 1114, 1116, 1120, 1122, 1124, 1125, 1129, 1131, 1132, 1133, 1135], "window": [1, 3, 31, 96, 97, 102, 103, 112, 121, 133, 138, 140, 150, 152, 165, 173, 190, 204, 206, 208, 219, 222, 233, 238, 240, 242, 248, 249, 261, 277, 283, 296, 307, 310, 313, 315, 328, 340, 407, 701, 704, 719, 796, 800, 826, 862, 892, 908, 913, 988, 990, 991, 1014, 1064, 1100], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 141, 142, 147, 151, 156, 160, 166, 168, 177, 178, 181, 183, 221, 236, 302, 327, 926, 1112, 1113, 1128, 1130], "2006": [1, 3, 23, 208], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 141, 142, 147, 152, 160, 166, 168, 177, 178, 183, 190, 305, 327, 854, 926, 1112, 1113, 1117, 1128, 1129, 1134], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 141, 151, 222, 1115], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 177, 1128], "forschung": 1, "entwicklung": [1, 3, 4, 311, 1124, 1130], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 129, 145, 208, 989], "enterpris": 1, "architect": [1, 427, 1092], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 139, 1130], "massgeblich": 1, "portierung": [1, 3, 4, 146], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 63, 115, 141, 142, 150, 151, 160, 168, 172, 173, 175, 177, 178, 181, 184, 186, 187, 189, 198, 215, 222, 227, 234, 243, 250, 285, 310, 311, 315, 327, 329, 791, 853, 854, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135], "enea": [1, 3, 133], "os": [1, 3, 133], "nach": [1, 3, 4, 5, 141, 142, 146, 147, 152, 156, 160, 176, 177, 183, 221, 222, 228, 328, 788, 1112, 1128], "linux": [1, 3, 4, 6, 24, 36, 38, 42, 58, 60, 61, 62, 64, 71, 72, 73, 77, 83, 84, 85, 86, 97, 102, 103, 105, 118, 125, 128, 129, 130, 132, 134, 135, 136, 140, 143, 144, 145, 150, 157, 160, 165, 172, 194, 195, 202, 208, 211, 218, 221, 222, 225, 230, 233, 238, 240, 242, 251, 258, 260, 261, 277, 283, 296, 307, 309, 310, 311, 312, 316, 317, 323, 324, 327, 329, 371, 393, 401, 410, 413, 430, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 521, 535, 702, 708, 717, 718, 719, 720, 722, 723, 725, 726, 728, 730, 731, 733, 735, 736, 737, 738, 739, 740, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 770, 771, 772, 775, 776, 777, 780, 781, 783, 784, 786, 787, 789, 791, 792, 793, 794, 800, 802, 804, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 854, 856, 859, 863, 865, 866, 867, 871, 873, 874, 875, 876, 877, 878, 879, 881, 882, 883, 886, 888, 889, 890, 891, 892, 893, 898, 900, 901, 904, 905, 906, 907, 909, 917, 920, 923, 925, 930, 933, 934, 937, 940, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 988, 990, 1052, 1077, 1098, 1101, 1114, 1115, 1116, 1117, 1120, 1122, 1125, 1129], "beteiligt": [1, 23], "seit": [1, 5, 23, 160, 166, 176, 181, 1113, 1122], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 96, 105, 108, 109, 110, 112, 116, 138, 185, 307, 309, 310, 315, 316, 318, 483, 494, 515, 535, 543, 558, 618, 632, 719, 796, 800, 815, 821, 840, 846, 862, 947, 950, 1107], "joanneum": [1, 116, 138, 1107], "kapfenberg": 1, "2011": [1, 3, 5, 129, 130, 145, 258, 260, 327, 331, 536, 635], "2015": [1, 23, 193, 219, 257, 327, 642, 1064], "lehrveranstaltung": [1, 311], "im": [1, 3, 5, 8, 29, 31, 37, 89, 141, 142, 151, 152, 156, 160, 165, 166, 168, 169, 172, 174, 177, 178, 181, 183, 187, 189, 190, 196, 197, 200, 203, 204, 206, 209, 212, 216, 217, 218, 224, 225, 227, 229, 230, 232, 245, 247, 252, 254, 255, 259, 261, 262, 265, 266, 268, 271, 272, 274, 283, 284, 286, 287, 296, 297, 298, 299, 300, 301, 310, 315, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1069, 1077, 1078, 1100, 1113, 1116, 1122, 1124, 1128, 1129, 1131, 1132, 1135, 1136], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 40, 45, 46, 50, 52, 54, 55, 67, 72, 73, 77, 84, 96, 103, 112, 132, 140, 143, 144, 149, 160, 166, 172, 176, 185, 202, 208, 209, 218, 219, 221, 246, 258, 260, 261, 262, 275, 307, 328, 329, 395, 427, 435, 436, 445, 447, 613, 699, 719, 720, 750, 797, 810, 862, 863, 870, 871, 886, 938, 947, 950, 1019, 1066, 1120, 1121, 1123, 1136], "avl": [1, 23, 130], "2018": [1, 23, 136, 208, 640], "2019": [1, 39, 114, 129, 171, 193, 242, 266, 284, 287, 327, 513, 640, 681, 848, 1063, 1064, 1066], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 39, 41, 43, 49, 71, 72, 73, 77, 83, 86, 96, 103, 107, 112, 117, 123, 129, 133, 138, 139, 145, 149, 160, 163, 173, 194, 211, 214, 238, 240, 242, 249, 258, 260, 263, 270, 275, 276, 313, 316, 317, 328, 329, 332, 373, 386, 401, 413, 425, 426, 427, 429, 431, 441, 455, 461, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 513, 518, 521, 535, 626, 663, 683, 693, 707, 719, 723, 726, 728, 731, 733, 735, 736, 743, 745, 746, 747, 751, 757, 762, 763, 768, 770, 775, 781, 784, 787, 823, 862, 871, 872, 896, 897, 898, 899, 913, 932, 936, 940, 943, 947, 950, 951, 955, 1002, 1013, 1019, 1093, 1098, 1104, 1108, 1113, 1118, 1120], "manag": [1, 5, 14, 23, 29, 62, 67, 71, 72, 73, 77, 93, 96, 107, 132, 134, 143, 148, 149, 157, 160, 162, 165, 169, 172, 173, 179, 180, 184, 189, 190, 193, 195, 205, 211, 214, 219, 221, 222, 228, 231, 246, 253, 260, 262, 263, 266, 267, 270, 313, 314, 316, 323, 324, 328, 329, 390, 407, 418, 436, 449, 507, 513, 538, 543, 632, 643, 644, 646, 675, 680, 691, 692, 694, 695, 696, 700, 708, 716, 718, 719, 737, 743, 750, 752, 775, 781, 784, 787, 797, 801, 802, 857, 862, 871, 879, 891, 924, 925, 938, 954, 965, 974, 993, 1017, 1021, 1062, 1063, 1064, 1065, 1066, 1070, 1078, 1080, 1093, 1095, 1097, 1098, 1102, 1107, 1118, 1120, 1123, 1130], "schittstel": 1, "zum": [1, 3, 5, 141, 142, 151, 156, 160, 166, 176, 189, 196, 213, 273, 328, 1113, 1115, 1116, 1117, 1129, 1132, 1134], "weiser": 1, "alter": [1, 168, 169, 219, 242, 328, 539, 547, 853, 1064], "mann": 1, "2020": [1, 23, 112, 113, 114, 129, 130, 136, 140, 141, 145, 148, 152, 171, 173, 208, 327, 494, 495, 643, 656, 793, 794, 873, 882, 900, 989, 1063, 1068, 1107, 1129], "embed": [1, 3, 4, 5, 23, 71, 86, 103, 116, 128, 129, 130, 133, 135, 146, 149, 173, 175, 198, 241, 308, 313, 315, 327, 329, 701, 719, 754, 766, 804, 826, 872, 883, 924, 940, 967, 1008, 1114, 1115, 1116, 1120, 1124, 1125, 1129, 1133], "comput": [1, 23, 28, 29, 31, 71, 83, 86, 100, 116, 136, 175, 225, 234, 258, 260, 284, 285, 295, 308, 310, 313, 315, 327, 336, 409, 414, 415, 440, 537, 547, 550, 556, 589, 685, 698, 710, 719, 788, 795, 863, 871, 873, 874, 881, 908, 922, 925, 989, 1077, 1093, 1123], "electron": [1, 138, 328, 871], "engin": [1, 136, 209, 211, 277, 280, 328, 399, 403, 407, 417, 448, 481, 489, 871, 987, 1136], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 84, 129, 924, 987], "projekt": [2, 130, 151, 1125, 1129], "stand": [3, 143, 192, 313, 766, 872, 956, 1072], "j\u00e4nner": [3, 23], "2014": [3, 130, 151, 172, 208, 242, 257, 266, 868, 1064], "devicedriv": 3, "die": [3, 5, 7, 8, 36, 44, 58, 61, 63, 129, 142, 147, 150, 151, 152, 153, 156, 160, 166, 168, 176, 177, 179, 181, 183, 186, 187, 189, 192, 196, 205, 212, 215, 218, 221, 224, 225, 228, 253, 281, 305, 310, 311, 315, 328, 329, 463, 477, 853, 854, 926, 1064, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "pci": [3, 180, 719, 743, 744, 805, 862, 870, 906, 1123], "hardwar": [3, 5, 64, 68, 71, 72, 73, 77, 79, 118, 122, 132, 133, 136, 146, 149, 208, 209, 221, 258, 261, 262, 283, 287, 296, 311, 312, 313, 328, 329, 345, 356, 359, 395, 413, 417, 487, 488, 489, 490, 494, 710, 719, 746, 766, 797, 802, 803, 862, 863, 864, 865, 868, 871, 887, 889, 890, 903, 906, 938, 1112, 1121, 1123, 1129], "ein": [3, 5, 7, 8, 36, 141, 142, 147, 150, 151, 152, 153, 156, 158, 160, 168, 172, 173, 175, 176, 177, 179, 181, 183, 184, 186, 187, 189, 190, 192, 196, 198, 202, 205, 206, 212, 213, 215, 218, 221, 222, 224, 225, 228, 236, 243, 246, 253, 263, 267, 273, 281, 285, 302, 305, 310, 315, 328, 329, 373, 501, 792, 853, 854, 926, 994, 1112, 1113, 1114, 1115, 1116, 1117, 1120, 1122, 1125, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 31, 36, 129, 141, 143, 147, 150, 151, 156, 160, 166, 168, 176, 177, 186, 187, 196, 212, 221, 224, 228, 310, 327, 404, 697, 788, 790, 854, 867, 1063, 1089, 1112, 1113, 1114, 1115, 1117, 1122, 1124, 1128, 1129, 1131, 1132, 1134, 1135, 1136], "untenstehenden": 3, "zeit": [3, 5, 142, 177, 1113, 1115, 1135], "dato": 3, "ort": 3, "raum": [3, 156], "anbindung": 3, "verschieden": [3, 23, 166, 328, 1114, 1115, 1116, 1122, 1129, 1134], "hardwareinterfac": 3, "i2c": [3, 4, 64, 77, 80, 84, 118, 121, 133, 134, 160, 173, 249, 313, 316, 321, 328, 434, 464, 523, 524, 532, 719, 766, 862, 869, 871, 906, 1122, 1129], "spi": [3, 4, 77, 133, 151, 160, 328, 523, 524, 532, 864, 865, 866, 871, 906, 1122, 1129], "can": [3, 12, 17, 29, 56, 57, 67, 74, 79, 82, 107, 109, 110, 112, 127, 130, 132, 133, 134, 135, 137, 138, 139, 140, 144, 148, 149, 150, 153, 155, 157, 161, 162, 163, 165, 169, 170, 171, 185, 192, 194, 202, 205, 208, 209, 211, 218, 221, 225, 228, 231, 249, 252, 255, 257, 258, 260, 263, 267, 273, 275, 291, 296, 302, 304, 307, 310, 315, 321, 328, 333, 335, 339, 343, 347, 353, 356, 367, 371, 377, 378, 381, 388, 393, 395, 399, 400, 401, 402, 403, 406, 407, 411, 412, 413, 417, 419, 420, 422, 428, 430, 431, 437, 442, 445, 446, 449, 456, 457, 461, 462, 463, 475, 479, 488, 495, 521, 527, 537, 539, 544, 546, 547, 552, 553, 560, 571, 575, 591, 592, 597, 606, 610, 613, 617, 622, 627, 629, 630, 631, 640, 642, 645, 646, 647, 648, 652, 657, 681, 684, 685, 687, 693, 694, 697, 698, 699, 702, 705, 707, 715, 717, 719, 725, 737, 752, 756, 760, 764, 766, 771, 774, 780, 792, 793, 794, 797, 798, 799, 801, 803, 804, 805, 806, 808, 809, 811, 816, 818, 820, 822, 824, 826, 827, 862, 863, 869, 870, 871, 872, 875, 877, 879, 881, 882, 883, 890, 892, 896, 900, 909, 911, 922, 925, 926, 934, 938, 942, 952, 957, 959, 961, 962, 963, 964, 966, 967, 968, 971, 974, 975, 976, 983, 984, 986, 987, 992, 995, 996, 999, 1004, 1006, 1012, 1014, 1016, 1019, 1021, 1028, 1038, 1049, 1059, 1060, 1061, 1063, 1069, 1071, 1076, 1077, 1083, 1085, 1090, 1093, 1098, 1118, 1120, 1122, 1129, 1133, 1135], "custom": [3, 27, 29, 31, 38, 96, 118, 122, 126, 129, 133, 136, 138, 139, 145, 149, 162, 170, 172, 174, 202, 208, 211, 218, 221, 222, 249, 251, 258, 260, 285, 296, 297, 298, 299, 301, 309, 310, 328, 417, 422, 441, 455, 483, 486, 489, 491, 493, 513, 535, 537, 543, 608, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 663, 665, 675, 680, 691, 700, 708, 716, 718, 719, 739, 766, 882, 913, 938, 1063, 1106], "firmwar": [3, 121, 133, 134, 136, 143, 152, 863, 870, 906], "kunden": [3, 5, 23, 147, 251, 328, 1112], "dezemb": [3, 23], "2012": [3, 23, 129, 145, 208], "backport": 3, "integr": [3, 16, 23, 37, 42, 113, 130, 138, 140, 148, 160, 165, 185, 275, 284, 312, 317, 318, 319, 407, 433, 436, 440, 652, 739, 748, 805, 826, 863, 865, 871, 872, 1089, 1098, 1101, 1120, 1122, 1129], "touchcontrol": 3, "driver": [3, 5, 77, 84, 118, 121, 133, 136, 138, 146, 149, 150, 249, 311, 312, 327, 329, 413, 719, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 733, 735, 736, 737, 738, 740, 741, 742, 745, 746, 747, 749, 750, 751, 753, 755, 757, 759, 760, 761, 763, 765, 766, 767, 770, 772, 775, 777, 781, 784, 787, 797, 802, 805, 862, 871, 872, 892, 906, 1113, 1133, 1135], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 42, 64, 107, 109, 110, 121, 133, 137, 139, 144, 148, 192, 202, 208, 215, 218, 221, 225, 231, 258, 267, 343, 350, 352, 356, 365, 422, 426, 459, 544, 597, 695, 705, 709, 717, 748, 750, 758, 766, 799, 808, 813, 814, 826, 871, 872, 894, 896, 897, 898, 900, 955, 956, 964, 1006, 1089, 1100], "2013": [3, 23, 129, 327], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 39, 60, 64, 71, 73, 77, 84, 90, 91, 116, 117, 128, 129, 130, 146, 148, 149, 152, 154, 162, 177, 178, 182, 185, 186, 187, 189, 192, 194, 201, 202, 208, 217, 218, 221, 225, 228, 249, 251, 260, 296, 297, 298, 299, 300, 301, 305, 306, 309, 311, 312, 317, 318, 319, 323, 324, 325, 327, 329, 341, 493, 634, 652, 671, 683, 689, 706, 719, 720, 826, 848, 862, 864, 869, 870, 911, 959, 960, 961, 962, 964, 966, 967, 969, 970, 971, 973, 974, 975, 976, 979, 983, 984, 990, 994, 998, 999, 1005, 1007, 1009, 1010, 1012, 1015, 1016, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1065, 1066, 1067, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1096, 1097, 1098, 1100, 1101, 1102, 1118, 1122, 1128, 1129, 1136], "programm": [3, 58, 61, 151, 152, 156, 165, 176, 181, 185, 189, 221, 246, 258, 259, 260, 287, 305, 311, 328, 377, 390, 397, 403, 407, 537, 539, 540, 609, 643, 677, 680, 802, 808, 859, 871, 892, 926, 987, 988, 992, 1014, 1071, 1078, 1092, 1115, 1118, 1123, 1131, 1132, 1134, 1136], "zur": [3, 141, 156, 160, 168, 178, 189, 305, 310, 315, 328, 926, 1113, 1115, 1116, 1117, 1129, 1134, 1135, 1136], "IT": [3, 249, 251, 328, 541], "wie": [3, 5, 141, 142, 150, 151, 152, 156, 160, 166, 168, 176, 181, 184, 191, 215, 305, 328, 1112, 1113, 1115, 1116, 1117, 1122, 1125, 1129, 1130, 1132, 1134, 1135], "beispiel": [3, 5, 23, 152, 176, 177, 199, 205, 226, 328, 1115, 1116, 1117, 1128, 1129, 1131, 1132, 1134, 1136], "e": [3, 5, 7, 31, 36, 37, 41, 47, 62, 96, 112, 113, 136, 138, 139, 140, 141, 142, 144, 147, 148, 150, 151, 152, 154, 155, 156, 160, 166, 168, 176, 177, 181, 183, 185, 186, 189, 192, 193, 194, 197, 198, 202, 205, 206, 208, 211, 213, 215, 218, 221, 222, 225, 228, 231, 234, 243, 246, 249, 250, 253, 255, 257, 263, 267, 273, 285, 303, 304, 305, 306, 310, 315, 328, 332, 349, 352, 356, 359, 362, 367, 377, 380, 395, 399, 403, 406, 407, 419, 420, 422, 425, 431, 432, 436, 445, 449, 457, 462, 466, 478, 491, 494, 495, 530, 537, 541, 542, 552, 560, 571, 591, 609, 610, 624, 629, 636, 639, 643, 646, 657, 663, 677, 698, 707, 709, 710, 717, 725, 744, 785, 792, 793, 794, 803, 804, 808, 809, 810, 811, 826, 848, 855, 870, 871, 872, 883, 892, 902, 904, 922, 925, 926, 937, 938, 940, 942, 943, 954, 959, 963, 971, 983, 985, 986, 1004, 1009, 1010, 1033, 1073, 1077, 1082, 1085, 1088, 1091, 1092, 1098, 1100, 1112, 1113, 1115, 1117, 1121, 1122, 1128, 1129, 1131, 1132, 1134, 1136], "bill": [3, 253], "email": [3, 31, 41, 115, 134, 140, 144, 149, 173, 189, 253, 321, 879, 1077, 1081, 1082, 1083, 1085, 1086, 1087], "kommunik": [3, 23, 1129, 1132, 1134, 1135, 1136], "extrakt": 3, "attach": [3, 154, 202, 208, 218, 221, 440, 748, 871, 924, 1071], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 31, 44, 59, 89, 96, 97, 103, 112, 117, 129, 130, 133, 134, 138, 160, 163, 169, 170, 172, 174, 185, 200, 202, 203, 206, 208, 211, 216, 218, 221, 222, 230, 233, 242, 245, 252, 255, 258, 259, 260, 265, 266, 270, 271, 272, 276, 277, 287, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 423, 424, 430, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 507, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 675, 691, 700, 708, 716, 718, 719, 739, 746, 762, 766, 767, 805, 862, 865, 870, 872, 937, 939, 942, 945, 947, 950, 971, 987, 991, 1017, 1062, 1075, 1082, 1093, 1094, 1101, 1106, 1108], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 36, 44, 72, 77, 79, 96, 100, 101, 107, 109, 110, 112, 129, 130, 133, 134, 139, 140, 144, 146, 148, 149, 150, 151, 157, 160, 162, 163, 173, 185, 190, 193, 200, 202, 205, 206, 210, 211, 216, 218, 219, 221, 228, 231, 237, 238, 239, 246, 248, 253, 258, 263, 266, 267, 269, 307, 310, 311, 312, 313, 314, 315, 321, 323, 324, 327, 329, 363, 372, 379, 383, 385, 389, 392, 396, 403, 404, 405, 409, 410, 414, 415, 417, 422, 425, 427, 440, 441, 448, 461, 483, 494, 535, 570, 613, 637, 675, 708, 709, 710, 716, 717, 718, 719, 722, 725, 737, 739, 758, 764, 766, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 823, 826, 852, 853, 857, 862, 866, 871, 872, 873, 878, 884, 888, 889, 890, 891, 893, 896, 898, 901, 902, 904, 905, 906, 907, 917, 920, 923, 925, 926, 928, 934, 937, 938, 940, 941, 942, 963, 964, 975, 991, 1019, 1064, 1091, 1100, 1114, 1121, 1123, 1124], "auf": [3, 5, 8, 23, 63, 129, 134, 142, 147, 150, 151, 152, 156, 160, 166, 168, 176, 177, 181, 187, 189, 196, 197, 212, 215, 222, 224, 236, 305, 310, 311, 315, 328, 854, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1128, 1132, 1135, 1136], "gentoo": [3, 129, 132, 145, 413, 1113], "updat": [3, 43, 132, 134, 148, 152, 180, 205, 213, 228, 238, 240, 246, 253, 258, 260, 267, 273, 285, 310, 317, 492, 494, 555, 776, 924, 954, 955, 956, 957, 958, 1012, 1014, 1088, 1101, 1107, 1130], "betriebssystem": [3, 1122, 1124, 1129, 1131], "usb": [3, 4, 62, 132, 133, 134, 136, 328, 406, 744, 797, 1122], "touchscreen": 3, "cheat": [3, 32, 64, 173, 185, 410, 663, 826], "detect": [3, 31, 105, 153, 165, 375, 378, 412, 420, 518, 545, 648, 673, 694, 760, 871, 872, 898, 907, 930, 941, 942, 1043], "m\u00fcnzeinwurf": 3, "via": [3, 17, 62, 84, 133, 136, 140, 145, 154, 169, 170, 192, 198, 219, 221, 249, 252, 255, 258, 267, 284, 309, 316, 328, 437, 442, 462, 547, 571, 682, 696, 746, 766, 769, 797, 802, 808, 823, 859, 870, 881, 882, 889, 896, 906, 927, 934, 952, 1018, 1118], "gpio": [3, 4, 58, 61, 64, 71, 72, 73, 77, 83, 112, 113, 130, 249, 258, 300, 313, 315, 319, 719, 743, 768, 770, 775, 781, 784, 787, 862, 867, 871, 903, 907, 1122, 1129], "interrupt": [3, 62, 85, 109, 110, 151, 180, 249, 413, 719, 737, 743, 758, 760, 761, 763, 764, 768, 769, 770, 774, 775, 778, 781, 784, 785, 787, 797, 799, 802, 805, 862, 867, 884, 886, 887, 888, 889, 890, 891, 903, 905, 906, 922, 925, 926, 928, 937, 938, 1122, 1123, 1129], "m\u00e4rz": 3, "firma": [3, 147, 156, 251, 327, 1112, 1122, 1129], "spielo": 3, "intern": [3, 56, 83, 113, 166, 171, 194, 202, 205, 206, 208, 218, 221, 252, 255, 284, 303, 317, 346, 376, 391, 406, 422, 431, 436, 550, 591, 638, 681, 713, 744, 752, 778, 870, 871, 872, 913, 964, 968, 1012, 1021, 1077, 1082], "datenkonvertierung": 3, "einem": [3, 5, 23, 141, 151, 152, 156, 160, 166, 168, 176, 177, 181, 183, 189, 215, 221, 228, 243, 310, 311, 315, 328, 1113, 1115, 1117, 1122, 1131, 1135, 1136], "konvertierung": [3, 23, 1115], "asterix": 3, "format": [3, 17, 23, 29, 30, 41, 50, 52, 53, 54, 55, 89, 115, 136, 152, 153, 155, 156, 163, 170, 172, 174, 177, 181, 190, 193, 200, 201, 203, 209, 214, 215, 219, 221, 222, 227, 230, 231, 242, 245, 246, 251, 265, 266, 267, 271, 272, 274, 280, 283, 284, 287, 333, 334, 339, 375, 419, 719, 720, 766, 797, 803, 826, 886, 940, 979, 987, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1057, 1058, 1059, 1060, 1062, 1064, 1069, 1080, 1093, 1128, 1132], "zweck": [3, 166, 1129], "extern": [3, 13, 21, 23, 29, 62, 84, 132, 136, 140, 162, 165, 172, 194, 195, 200, 211, 216, 221, 230, 251, 266, 276, 284, 310, 315, 343, 347, 373, 375, 377, 379, 385, 389, 392, 396, 400, 405, 409, 414, 415, 424, 425, 521, 637, 675, 681, 716, 718, 719, 723, 726, 728, 731, 733, 736, 739, 743, 744, 745, 747, 751, 757, 763, 766, 770, 775, 776, 781, 784, 787, 862, 872, 922, 988, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1062, 1064, 1105, 1107, 1115, 1122, 1129], "datenquellen": 3, "export": [3, 39, 60, 133, 144, 169, 194, 195, 198, 200, 296, 681, 722, 798, 827, 863, 871, 904, 906, 907, 952, 954, 957, 1055, 1072], "daten": [3, 166, 168, 181, 191, 196, 281, 926, 1135], "soap": [3, 31], "ip": [3, 115, 137, 140, 150, 157, 185, 307, 310, 316, 321, 518, 530, 865, 883, 889, 925, 1093, 1122, 1129, 1133, 1135], "kamera": 3, "einen": [3, 5, 23, 141, 142, 152, 156, 160, 166, 168, 176, 189, 225, 328, 596, 853, 1112, 1113, 1114, 1115, 1117, 1124, 1132, 1134, 1135, 1136], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 41, 49, 52, 53, 54, 58, 61, 62, 68, 81, 83, 84, 96, 109, 110, 112, 113, 118, 133, 135, 138, 153, 161, 169, 171, 189, 194, 195, 202, 208, 212, 215, 216, 218, 219, 223, 225, 240, 246, 255, 258, 259, 260, 261, 262, 267, 283, 287, 297, 298, 303, 310, 321, 344, 346, 378, 388, 390, 391, 407, 417, 422, 429, 432, 433, 435, 436, 437, 439, 440, 441, 444, 445, 447, 456, 457, 461, 462, 463, 478, 482, 484, 485, 486, 487, 488, 490, 491, 492, 496, 497, 498, 499, 501, 503, 508, 511, 512, 536, 538, 542, 546, 554, 555, 556, 557, 562, 591, 597, 606, 608, 609, 610, 617, 625, 626, 627, 628, 629, 630, 631, 632, 638, 643, 644, 645, 647, 657, 672, 673, 674, 675, 681, 682, 684, 693, 697, 699, 701, 707, 713, 714, 717, 718, 719, 725, 732, 735, 752, 780, 797, 799, 803, 805, 863, 870, 872, 883, 886, 892, 908, 913, 934, 958, 962, 963, 968, 969, 970, 976, 980, 1004, 1039, 1043, 1052, 1059, 1064, 1073, 1076, 1080, 1118, 1123], "gige": 3, "vision": [3, 251, 328], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 173], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1112], "applik": [3, 150], "august": [3, 23], "logistik": 3, "autom": [3, 172, 185, 216, 230, 272, 328, 863, 874, 881, 954, 956, 964, 1064], "beteiligten": 3, "protokol": [3, 4, 1122, 1129, 1134], "server": [3, 115, 137, 140, 146, 152, 173, 185, 196, 205, 221, 228, 231, 242, 246, 253, 263, 267, 413, 459, 473, 792, 866, 879, 881, 889, 934, 1076, 1093, 1110, 1129], "zu": [3, 6, 8, 141, 142, 147, 150, 151, 156, 160, 166, 177, 178, 181, 183, 187, 196, 197, 212, 213, 222, 224, 228, 236, 243, 310, 315, 328, 788, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1125, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "sp": [3, 645], "tcp": [3, 133, 140, 157, 173, 278, 864, 889, 1080, 1122, 1129, 1133, 1135], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 175, 863, 1071], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1122, 1124], "beratend": 3, "versionskontrol": [3, 23, 146, 1130], "architektur": [3, 23, 146, 328], "2008": [3, 144, 208, 989], "ylog": [3, 23], "gmbh": [3, 23, 419], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 181], "mit": [3, 4, 5, 7, 8, 23, 129, 141, 142, 150, 151, 152, 156, 158, 160, 168, 172, 173, 177, 178, 179, 182, 183, 186, 187, 189, 196, 197, 198, 199, 212, 221, 222, 224, 225, 228, 236, 267, 306, 310, 311, 315, 327, 329, 853, 1019, 1112, 1114, 1115, 1116, 1117, 1122, 1124, 1128, 1130, 1131, 1132, 1134, 1135, 1136], "iar": 3, "arm": [3, 132, 144, 185, 351, 746, 766, 767, 870, 883, 937, 940, 941, 952], "workbench": 3, "segger": [3, 133], "embo": [3, 133], "vba": 3, "excel": [3, 77, 134, 172, 198, 1055, 1069], "verteilung": 3, "microsoft": [3, 11, 139, 140, 143, 145, 149, 160, 168, 238, 240, 249, 258, 260, 328, 330, 378, 394, 805, 1055, 1112], "net": [3, 23, 38, 42, 112, 113, 119, 150, 151, 176, 228, 234, 418, 494, 495, 760, 766, 793, 794, 854, 889, 1077], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 152, 1131, 1132], "script": [3, 37, 60, 123, 126, 129, 132, 134, 139, 140, 149, 164, 172, 173, 175, 200, 202, 208, 218, 221, 248, 249, 269, 301, 310, 327, 329, 411, 419, 430, 681, 766, 808, 811, 826, 954, 965, 991, 992, 1016, 1019, 1100, 1113, 1124], "shell": [3, 4, 31, 96, 98, 100, 103, 112, 149, 153, 172, 173, 175, 213, 221, 239, 248, 269, 295, 296, 309, 310, 311, 312, 315, 327, 329, 331, 413, 419, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 717, 718, 719, 766, 789, 793, 794, 795, 796, 799, 800, 801, 803, 804, 807, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 841, 842, 843, 844, 854, 855, 856, 859, 862, 863, 873, 874, 875, 876, 877, 885, 891, 892, 893, 901, 903, 906, 907, 917, 920, 923, 925, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 954, 990, 991, 993, 1014, 1016, 1042, 1105, 1113, 1120, 1122, 1124, 1125, 1129, 1130, 1131, 1133], "oststeiermark": 3, "erweiterung": [3, 328], "buildumgebung": 3, "cmake": [3, 4, 5, 43, 64, 71, 72, 73, 77, 86, 96, 105, 112, 130, 139, 144, 149, 160, 163, 195, 211, 238, 240, 258, 260, 313, 327, 329, 330, 421, 423, 425, 426, 429, 430, 431, 432, 433, 441, 455, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 535, 555, 719, 720, 862, 950, 1103, 1125], "www": [3, 20, 23, 58, 61, 84, 129, 139, 148, 150, 170, 173, 174, 219, 246, 330, 697, 722, 737, 743, 767, 906, 1075, 1077, 1091], "org": [3, 4, 23, 60, 119, 125, 129, 132, 136, 140, 144, 150, 152, 163, 173, 176, 193, 202, 208, 209, 218, 221, 225, 246, 259, 286, 314, 330, 722, 737, 739, 743, 766, 767, 906, 952, 954, 988, 1009, 1019, 1058, 1075, 1093, 1094], "confix": [3, 130], "2009": [3, 1064], "schulungen": [3, 6, 23, 129, 130, 147], "dem": [3, 5, 8, 23, 141, 142, 150, 151, 152, 156, 160, 173, 177, 187, 196, 199, 212, 213, 222, 224, 236, 267, 310, 315, 328, 329, 926, 1112, 1113, 1114, 1116, 1117, 1122, 1124, 1131, 1132, 1134], "umkrei": 3, "softwareentwicklung": [3, 4, 146], "nicht": [3, 5, 7, 23, 36, 141, 142, 147, 150, 156, 160, 177, 178, 181, 186, 189, 208, 213, 215, 221, 228, 234, 253, 263, 305, 310, 328, 854, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1128, 1129, 1130, 1131, 1134, 1135, 1136], "from": [3, 5, 8, 13, 21, 27, 32, 33, 34, 35, 38, 43, 52, 53, 55, 60, 62, 64, 67, 72, 73, 77, 80, 81, 83, 85, 89, 96, 97, 98, 100, 101, 102, 105, 108, 109, 110, 112, 113, 115, 122, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 146, 148, 149, 150, 152, 153, 155, 156, 161, 165, 166, 169, 170, 172, 173, 174, 175, 177, 183, 184, 185, 190, 192, 193, 194, 195, 197, 199, 200, 202, 206, 208, 209, 215, 216, 218, 219, 222, 223, 225, 228, 230, 233, 237, 238, 240, 242, 243, 245, 248, 251, 255, 258, 259, 260, 261, 262, 265, 267, 269, 270, 271, 272, 277, 280, 283, 285, 287, 288, 291, 295, 296, 297, 298, 299, 300, 301, 303, 307, 309, 310, 312, 313, 314, 315, 317, 318, 331, 332, 338, 340, 341, 345, 348, 351, 354, 355, 356, 359, 363, 370, 372, 373, 378, 379, 385, 386, 389, 392, 393, 395, 396, 397, 399, 401, 405, 406, 407, 409, 413, 414, 415, 417, 418, 420, 421, 425, 428, 429, 430, 431, 433, 435, 436, 437, 442, 446, 456, 460, 462, 478, 479, 480, 481, 483, 486, 489, 491, 492, 493, 494, 495, 513, 521, 524, 530, 535, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 550, 552, 553, 555, 556, 566, 570, 571, 588, 600, 607, 610, 612, 618, 621, 628, 632, 635, 636, 637, 639, 643, 648, 652, 657, 663, 669, 674, 675, 687, 689, 693, 694, 695, 696, 699, 701, 707, 709, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 735, 737, 741, 746, 748, 754, 758, 766, 767, 768, 769, 774, 776, 778, 786, 791, 792, 793, 794, 797, 798, 801, 802, 803, 805, 808, 809, 810, 816, 818, 823, 825, 826, 827, 828, 829, 831, 832, 845, 850, 858, 859, 862, 863, 865, 866, 867, 868, 871, 872, 875, 879, 883, 886, 887, 888, 889, 890, 893, 896, 898, 899, 901, 903, 906, 909, 914, 919, 920, 925, 926, 928, 937, 938, 943, 952, 954, 956, 958, 963, 964, 965, 968, 971, 972, 973, 974, 975, 976, 979, 983, 986, 987, 988, 991, 992, 995, 998, 1007, 1010, 1011, 1013, 1014, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1070, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1089, 1091, 1092, 1093, 1095, 1097, 1098, 1100, 1102, 1105, 1107, 1110, 1121, 1128], "scratch": [3, 41, 165, 870, 1071], "mathia": [3, 1113], "kettner": [3, 129], "novemb": [3, 23], "bodenseo": [3, 1129], "singen": 3, "bodense": [3, 1129], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1131], "driverentwicklung": [3, 146], "powerpc": 3, "vanilla": [3, 136], "kernel": [3, 4, 5, 42, 60, 64, 77, 109, 110, 115, 118, 122, 123, 128, 129, 130, 132, 133, 135, 143, 144, 145, 146, 149, 151, 166, 173, 205, 218, 221, 228, 231, 246, 249, 253, 263, 267, 296, 316, 327, 329, 371, 393, 406, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 731, 733, 735, 736, 737, 738, 745, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 759, 761, 762, 763, 764, 765, 770, 772, 775, 777, 778, 779, 780, 781, 784, 786, 787, 791, 797, 801, 803, 804, 805, 810, 854, 859, 862, 866, 868, 869, 871, 872, 883, 886, 889, 890, 892, 895, 906, 908, 909, 922, 924, 925, 928, 933, 937, 938, 940, 1113, 1122, 1133], "abteilungsleitung": 3, "ag": [3, 31, 138, 140, 152, 166, 208, 211, 253, 304, 402, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 631, 632, 719, 791, 940, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089], "realtim": [4, 5, 77, 79, 146, 149, 150, 249, 311, 312, 323, 324, 329, 707, 709, 719, 764, 768, 771, 774, 785, 862, 866, 871, 872, 903, 922, 923, 925, 934, 1132, 1133, 1134], "hardwareintegr": [4, 146], "netzwerkprogrammierung": [4, 1122, 1135], "multithread": [4, 29, 58, 61, 71, 72, 73, 74, 77, 128, 129, 133, 135, 146, 165, 169, 200, 209, 219, 236, 258, 260, 319, 323, 324, 328, 329, 394, 404, 635, 663, 701, 718, 719, 911, 916, 925, 938, 939, 965, 974, 1062, 1064, 1118, 1122, 1133], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 41, 43, 49, 62, 96, 102, 103, 105, 109, 110, 112, 121, 132, 133, 134, 135, 137, 139, 142, 144, 146, 148, 157, 161, 166, 171, 178, 181, 185, 186, 194, 202, 208, 211, 215, 218, 219, 221, 222, 225, 233, 249, 258, 260, 267, 276, 295, 305, 310, 327, 351, 365, 418, 420, 423, 424, 430, 435, 440, 441, 442, 455, 456, 457, 459, 461, 462, 478, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 500, 502, 535, 539, 542, 543, 546, 550, 551, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 613, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 644, 648, 652, 657, 675, 682, 685, 691, 695, 700, 702, 708, 716, 718, 719, 727, 732, 739, 764, 766, 778, 795, 798, 799, 808, 810, 812, 816, 818, 820, 822, 837, 838, 862, 864, 870, 872, 875, 879, 882, 889, 897, 900, 903, 905, 913, 919, 924, 926, 934, 941, 945, 946, 947, 948, 950, 964, 971, 972, 988, 991, 1009, 1011, 1021, 1022, 1032, 1041, 1047, 1052, 1060, 1064, 1073, 1076, 1080, 1088, 1089, 1100, 1101, 1115, 1119, 1122, 1129, 1131], "userspac": [4, 80, 84, 85, 113, 118, 133, 134, 205, 221, 228, 231, 246, 249, 253, 263, 267, 328, 406, 413, 719, 724, 735, 743, 744, 752, 758, 764, 768, 774, 778, 782, 784, 802, 804, 862, 865, 869, 872, 883, 903, 905, 906, 924, 928, 934, 1122, 1123], "host": [4, 107, 132, 139, 144, 307, 321, 746, 767, 864, 870, 941, 943, 952, 1075, 1080, 1093], "devic": [4, 68, 71, 72, 73, 77, 83, 88, 118, 132, 133, 138, 151, 172, 180, 262, 311, 312, 313, 478, 494, 495, 705, 707, 709, 717, 719, 728, 735, 736, 737, 743, 744, 747, 748, 750, 757, 766, 768, 770, 775, 781, 782, 784, 785, 787, 799, 802, 805, 808, 848, 862, 871, 883, 886, 892, 900, 906, 925, 928, 929, 931, 934, 950, 975, 1113, 1122, 1123, 1124, 1129], "libusb": [4, 133], "gadgetf": [4, 133], "modbu": [4, 150], "verschiedenen": [4, 23, 160, 177, 1115, 1116, 1128, 1134], "rto": [4, 133], "yocto": [4, 118, 122, 123, 144, 719, 766, 860, 943, 1113], "programmiersprachen": [4, 8, 177, 187, 196, 212, 224, 1117, 1134], "incl": [4, 23, 130, 1124], "buildsystem": 4, "autoconf": [4, 60, 144], "automak": [4, 139, 144, 954, 1125], "meson": [4, 139, 144, 932, 936, 954], "ninja": [4, 31, 144, 420, 942, 954], "make": [4, 13, 17, 42, 43, 44, 60, 62, 64, 67, 69, 77, 79, 108, 118, 123, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 149, 153, 154, 157, 161, 162, 165, 169, 170, 171, 175, 184, 185, 192, 194, 195, 206, 209, 221, 225, 238, 240, 262, 267, 270, 275, 284, 310, 313, 329, 362, 374, 378, 386, 393, 395, 397, 407, 413, 417, 420, 421, 422, 426, 428, 429, 431, 433, 435, 436, 437, 440, 456, 457, 462, 463, 480, 493, 495, 507, 513, 518, 524, 542, 553, 555, 557, 560, 572, 607, 609, 622, 635, 643, 648, 652, 689, 694, 695, 699, 709, 713, 714, 727, 734, 735, 739, 741, 744, 746, 766, 767, 783, 795, 805, 809, 811, 832, 845, 864, 865, 870, 871, 872, 893, 896, 898, 919, 922, 924, 926, 928, 933, 937, 940, 952, 954, 955, 956, 957, 961, 965, 968, 971, 983, 1014, 1021, 1034, 1042, 1069, 1082, 1120, 1121, 1131], "perl": [4, 144, 677, 855, 991], "leider": [4, 141, 208, 221, 228, 243, 1113, 1115], "objektorientiert": [4, 328, 1117], "ooa": 4, "ood": 4, "unit": [4, 71, 72, 73, 77, 81, 83, 96, 105, 112, 135, 153, 168, 169, 172, 173, 184, 193, 211, 225, 250, 251, 258, 262, 275, 319, 323, 324, 400, 419, 420, 433, 459, 482, 488, 492, 521, 552, 681, 709, 710, 719, 720, 872, 924, 1006, 1014, 1064, 1076, 1099, 1120, 1121], "test": [4, 16, 17, 32, 39, 71, 72, 73, 77, 81, 83, 96, 112, 113, 129, 133, 135, 136, 138, 139, 140, 146, 149, 152, 153, 159, 160, 161, 164, 168, 169, 172, 184, 190, 193, 206, 208, 209, 211, 221, 238, 240, 260, 267, 276, 319, 321, 323, 329, 330, 342, 404, 417, 418, 424, 428, 435, 436, 437, 438, 439, 440, 441, 444, 445, 447, 448, 457, 459, 460, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 518, 530, 532, 537, 538, 539, 550, 551, 553, 554, 556, 557, 615, 626, 627, 628, 629, 630, 631, 640, 642, 645, 646, 647, 678, 684, 689, 693, 694, 695, 696, 698, 713, 714, 715, 717, 719, 720, 724, 756, 766, 769, 771, 774, 782, 826, 864, 865, 870, 893, 948, 956, 987, 996, 1006, 1010, 1013, 1033, 1058, 1064, 1070, 1071, 1076, 1084, 1091, 1104, 1106, 1108, 1111, 1121], "driven": [4, 44, 70, 77, 81, 133, 146, 149, 160, 169, 184, 211, 249, 251, 277, 280, 329, 417, 444, 554, 556, 557, 924, 930, 931, 1089, 1098, 1121], "develop": [4, 5, 21, 44, 70, 72, 77, 79, 81, 102, 103, 134, 136, 138, 139, 140, 144, 146, 149, 157, 160, 168, 169, 172, 177, 184, 190, 195, 196, 203, 205, 206, 211, 216, 241, 246, 251, 276, 277, 280, 309, 311, 312, 321, 327, 329, 395, 407, 413, 417, 422, 430, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 535, 554, 556, 557, 610, 634, 708, 718, 719, 720, 723, 726, 728, 729, 731, 733, 736, 738, 739, 740, 742, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 766, 767, 770, 772, 775, 777, 781, 784, 787, 796, 799, 800, 802, 805, 862, 864, 865, 885, 891, 893, 901, 903, 917, 920, 923, 925, 941, 942, 945, 946, 947, 948, 949, 951, 957, 989, 1019, 1021, 1064, 1098, 1099, 1120, 1133], "gui": [4, 132, 138, 144, 148, 211, 317, 318, 805, 908, 1131], "gtk": [4, 129], "qt": 4, "fast": [5, 42, 140, 148, 172, 194, 209, 211, 225, 234, 284, 407, 513, 685, 699, 1012, 1094, 1130], "40": [5, 7, 23, 105, 129, 136, 143, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 341, 419, 440, 442, 456, 526, 527, 548, 694, 695, 696, 848, 867, 870, 871, 872, 952, 966, 967, 976, 991], "jahren": 5, "wesentlichen": [5, 23, 168, 1114], "programmier": [5, 36, 327, 328, 1116, 1117, 1122, 1124, 1125, 1130, 1131], "bin": [5, 13, 23, 49, 62, 112, 129, 132, 134, 144, 153, 156, 166, 183, 193, 202, 205, 208, 213, 218, 221, 225, 228, 231, 243, 246, 251, 253, 263, 267, 310, 318, 420, 421, 422, 423, 425, 426, 427, 428, 431, 433, 478, 493, 494, 744, 766, 798, 801, 803, 808, 811, 822, 826, 827, 851, 852, 857, 870, 872, 888, 895, 898, 904, 918, 919, 928, 940, 941, 942, 952, 954, 957, 961, 967, 991, 1018, 1019, 1042, 1051, 1052, 1067, 1080, 1093, 1098, 1100, 1112], "ich": [5, 23, 63, 141, 142, 150, 151, 152, 156, 166, 176, 184, 215, 267, 310, 328, 1075, 1112, 1113, 1122, 1129, 1130, 1136], "heut": [5, 328, 1117, 1132], "feinen": 5, "situat": [5, 121, 133, 135, 144, 165, 192, 491, 492, 495, 507, 569, 646, 760, 766, 817, 819, 863, 879, 898, 926, 943, 952, 955, 956, 1004, 1113, 1118], "repertoir": [5, 8, 28, 148, 177, 187, 441], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 147, 150, 160, 166, 178, 191, 310, 311, 315, 328, 854, 1112, 1114, 1115, 1125, 1135, 1136], "da": [5, 7, 8, 63, 141, 142, 147, 150, 151, 152, 153, 160, 168, 172, 176, 177, 181, 184, 186, 187, 189, 193, 196, 197, 198, 202, 205, 212, 213, 215, 218, 221, 222, 224, 226, 234, 236, 243, 253, 263, 267, 285, 291, 302, 305, 310, 315, 328, 854, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1128, 1129, 1130, 1131, 1132, 1135, 1136], "sich": [5, 23, 36, 141, 142, 147, 150, 151, 152, 156, 166, 168, 176, 197, 215, 218, 228, 311, 1112, 1113, 1115, 1116, 1117, 1122, 1125, 1129, 1130, 1131, 1134, 1135, 1136], "jahrelangen": 5, "erfahrung": [5, 222, 1114], "entwickelt": [5, 160, 1122, 1129, 1131], "hat": [5, 8, 23, 36, 136, 141, 142, 150, 151, 152, 153, 156, 160, 166, 168, 176, 177, 181, 183, 187, 198, 218, 273, 285, 303, 310, 328, 990, 1112, 1115, 1117, 1122, 1129, 1130, 1131, 1134, 1135, 1136], "al": [5, 8, 23, 31, 96, 141, 142, 147, 150, 151, 152, 156, 158, 160, 168, 177, 178, 185, 187, 189, 197, 215, 216, 218, 226, 230, 272, 311, 328, 545, 694, 791, 827, 848, 853, 854, 886, 1064, 1112, 1115, 1117, 1122, 1128, 1129, 1130, 1131, 1134], "einzelunternehm": [5, 23], "werd": [5, 1112], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 142, 156, 168, 328], "um": [5, 23, 31, 141, 142, 150, 152, 156, 160, 166, 176, 177, 215, 228, 243, 328, 1112, 1114, 1115, 1116, 1117, 1122, 1128, 1132], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 160], "oder": [5, 23, 129, 150, 156, 160, 166, 177, 178, 183, 197, 206, 215, 222, 826, 854, 1089, 1112, 1115, 1116, 1122, 1125, 1128, 1129, 1130, 1132, 1135, 1136], "damit": [5, 23, 141, 166, 196, 222, 310, 315, 328, 1113, 1131, 1135], "arbeiten": [5, 23, 166, 177, 1128], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 41, 58, 61, 71, 72, 73, 75, 77, 83, 84, 89, 96, 100, 109, 110, 112, 126, 128, 129, 130, 132, 133, 134, 135, 138, 140, 143, 144, 146, 148, 151, 153, 154, 156, 157, 161, 168, 169, 170, 172, 173, 174, 179, 184, 185, 190, 193, 194, 200, 202, 203, 206, 209, 212, 216, 219, 222, 223, 224, 230, 235, 239, 248, 251, 252, 255, 258, 260, 268, 269, 270, 272, 276, 288, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 311, 312, 313, 314, 315, 316, 321, 323, 324, 327, 329, 334, 336, 337, 340, 342, 343, 345, 346, 347, 348, 351, 353, 356, 358, 363, 376, 385, 389, 390, 392, 394, 396, 397, 404, 406, 409, 411, 412, 413, 414, 418, 419, 420, 424, 425, 429, 430, 433, 435, 441, 445, 455, 456, 457, 461, 462, 463, 478, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 500, 502, 524, 530, 535, 536, 542, 543, 558, 561, 564, 580, 586, 590, 599, 600, 602, 603, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 675, 677, 680, 685, 690, 691, 695, 700, 702, 708, 716, 718, 719, 720, 724, 735, 737, 746, 766, 780, 782, 783, 796, 798, 799, 800, 801, 802, 803, 806, 808, 809, 810, 821, 826, 829, 855, 859, 862, 863, 865, 868, 869, 870, 871, 879, 883, 886, 888, 889, 890, 891, 892, 893, 896, 897, 898, 899, 901, 905, 906, 910, 914, 917, 920, 923, 924, 925, 926, 930, 931, 933, 938, 939, 941, 948, 952, 954, 957, 958, 959, 964, 965, 967, 973, 974, 975, 976, 987, 990, 994, 995, 998, 999, 1002, 1006, 1007, 1009, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1078, 1080, 1084, 1092, 1093, 1095, 1097, 1098, 1102, 1105, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1125], "gem\u00e4\u00df": [5, 23, 142], "herkunft": [5, 1136], "mein": [5, 23, 141, 142, 147, 151, 152, 166, 176, 177, 196, 328, 865, 933, 1113, 1128], "muttersprach": [5, 23], "ist": [5, 7, 8, 141, 142, 147, 150, 151, 152, 156, 160, 168, 176, 177, 181, 183, 186, 187, 189, 192, 196, 198, 202, 205, 206, 211, 212, 213, 215, 218, 221, 224, 228, 234, 243, 253, 267, 285, 302, 305, 306, 310, 315, 328, 373, 926, 1082, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1125, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "umfasst": [5, 142], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 64, 96, 105, 126, 129, 130, 133, 147, 148, 165, 168, 169, 170, 172, 174, 175, 177, 179, 180, 184, 187, 190, 193, 195, 196, 199, 200, 203, 206, 209, 211, 212, 224, 227, 230, 233, 237, 238, 240, 242, 245, 252, 255, 261, 262, 266, 272, 276, 277, 280, 283, 284, 287, 288, 310, 318, 328, 420, 422, 423, 424, 425, 426, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440, 442, 444, 447, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 535, 615, 695, 720, 868, 879, 904, 907, 964, 965, 967, 987, 988, 1016, 1066, 1078, 1079, 1092, 1103, 1107, 1115, 1117, 1120, 1122, 1123, 1129], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 141, 142, 151, 152, 156, 160, 168, 177, 178, 183, 186, 189, 205, 222, 310, 315, 328, 853, 854, 926, 1112, 1115, 1116, 1117, 1122, 1124, 1125, 1128, 1129, 1131, 1132, 1135, 1136], "letzter": 5, "betreffend": 5, "neuen": [5, 1117], "standard": [5, 33, 34, 35, 37, 105, 112, 125, 140, 161, 165, 170, 172, 174, 195, 202, 208, 217, 218, 221, 225, 236, 249, 251, 275, 301, 310, 311, 312, 313, 315, 331, 332, 333, 339, 340, 345, 346, 350, 395, 483, 502, 521, 535, 536, 580, 586, 590, 597, 598, 599, 600, 602, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 652, 657, 683, 685, 687, 688, 717, 719, 806, 809, 810, 826, 859, 873, 889, 895, 898, 911, 914, 938, 968, 987, 988, 1004, 1077, 1089, 1094, 1108, 1114, 1115, 1117, 1118, 1119, 1120, 1124], "absolut": [5, 8, 29, 64, 89, 98, 112, 131, 135, 140, 146, 149, 156, 166, 169, 170, 172, 174, 185, 190, 194, 202, 208, 209, 216, 218, 219, 221, 222, 225, 230, 233, 239, 242, 245, 248, 249, 252, 255, 261, 262, 266, 269, 270, 272, 277, 280, 283, 284, 287, 288, 296, 297, 298, 299, 300, 301, 307, 309, 310, 313, 328, 413, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 705, 708, 718, 719, 720, 764, 776, 792, 793, 794, 795, 796, 799, 800, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 862, 882, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1074, 1077, 1078, 1080, 1084, 1087, 1089, 1092, 1095, 1097, 1102], "beginn": [5, 8, 29, 31, 77, 89, 130, 131, 141, 146, 149, 160, 166, 169, 170, 172, 174, 185, 200, 203, 204, 206, 209, 216, 219, 222, 226, 233, 245, 252, 255, 261, 262, 272, 277, 280, 283, 284, 287, 288, 296, 297, 298, 299, 300, 301, 309, 310, 313, 355, 663, 719, 720, 965, 972, 973, 974, 975, 979, 987, 989, 995, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1074, 1077, 1078, 1080, 1084, 1092, 1095, 1097, 1102], "advanc": [5, 8, 29, 77, 89, 130, 140, 146, 149, 154, 157, 160, 170, 174, 182, 185, 190, 200, 205, 206, 216, 230, 252, 272, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 313, 327, 405, 407, 409, 414, 415, 567, 637, 675, 710, 716, 718, 719, 720, 907, 964, 965, 967, 972, 973, 974, 975, 979, 987, 989, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1069, 1070, 1071, 1074, 1077, 1078, 1080, 1084, 1091, 1092, 1095, 1097, 1102, 1105, 1119], "product": [5, 8, 29, 37, 42, 77, 84, 89, 135, 146, 149, 169, 170, 172, 174, 190, 209, 216, 219, 222, 230, 233, 242, 245, 252, 255, 257, 261, 262, 266, 272, 277, 280, 283, 284, 287, 288, 296, 297, 298, 299, 300, 301, 309, 310, 313, 413, 417, 433, 719, 720, 863, 872, 943, 957, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1074, 1077, 1078, 1080, 1084, 1092, 1095, 1097, 1102], "gro\u00dfe": [5, 36, 166, 1131], "thema": [5, 23, 151, 168, 222, 236, 310, 315, 1112], "einfach": [5, 152, 166, 177, 181, 263, 1116, 1117, 1122, 1128, 1130, 1132, 1134, 1136], "doch": [5, 189, 263, 273, 328, 1134], "m\u00e4chtig": 5, "vermutlich": [5, 166, 1134], "grund": [5, 1115, 1122], "warum": [5, 7, 23, 177, 178, 186, 228, 1122, 1128, 1129, 1134, 1136], "gern": [5, 166, 1112, 1122, 1129], "nachgefragt": 5, "werden": [5, 8, 36, 141, 142, 147, 150, 151, 152, 160, 166, 168, 177, 178, 181, 187, 196, 197, 212, 224, 236, 854, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1128, 1129, 1131, 1132, 1134, 1135, 1136], "deren": [5, 23, 150, 172, 1117, 1130, 1134, 1135], "kernkompetenz": 5, "liegt": [5, 23, 141, 152, 156, 225, 1116, 1132], "sondern": [5, 152, 166, 177, 1113, 1122, 1125, 1128, 1135], "eher": [5, 141, 177, 1114, 1128], "beiwerk": 5, "ihrem": [5, 23, 1112], "eigentlichen": 5, "job": [5, 144, 165, 175, 234, 400, 863, 871, 888, 889, 890, 959, 977, 989, 993, 1069, 1098], "schreiben": [5, 156, 178, 310, 311, 315, 1115, 1132, 1134], "physik": [5, 156], "z": [5, 37, 108, 152, 153, 156, 166, 176, 208, 209, 221, 224, 246, 273, 340, 350, 361, 362, 423, 556, 619, 689, 792, 853, 938, 990, 1113, 1122, 1124, 1129], "b": [5, 7, 21, 31, 37, 62, 72, 73, 106, 115, 136, 148, 152, 153, 154, 156, 166, 171, 176, 181, 183, 186, 189, 192, 199, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 278, 285, 302, 304, 305, 306, 342, 350, 352, 361, 377, 391, 394, 407, 537, 539, 547, 548, 554, 555, 556, 557, 562, 606, 607, 612, 613, 642, 648, 682, 689, 699, 717, 766, 797, 809, 826, 848, 853, 854, 870, 871, 872, 911, 927, 956, 962, 971, 974, 986, 994, 995, 1001, 1004, 1006, 1008, 1009, 1014, 1077, 1080, 1093, 1113, 1122, 1124, 1129], "guter": [5, 1113], "ersatz": [5, 177, 1128], "matlab": [5, 154, 156, 209, 328, 1063, 1066], "tester": [5, 130, 1098, 1124], "basic": [5, 10, 28, 29, 71, 72, 73, 76, 77, 82, 96, 100, 102, 105, 109, 110, 112, 113, 129, 130, 133, 135, 140, 143, 148, 149, 154, 157, 160, 169, 182, 195, 200, 211, 219, 221, 224, 225, 249, 251, 258, 259, 260, 268, 276, 286, 291, 309, 310, 311, 312, 313, 315, 317, 321, 327, 329, 379, 385, 389, 392, 396, 405, 407, 409, 411, 412, 414, 415, 422, 424, 425, 432, 439, 441, 442, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 529, 530, 535, 561, 569, 574, 586, 590, 598, 599, 602, 603, 607, 608, 620, 627, 628, 629, 630, 631, 632, 637, 640, 641, 643, 646, 648, 675, 692, 708, 714, 716, 718, 719, 723, 726, 728, 733, 736, 743, 747, 757, 766, 768, 770, 775, 781, 784, 786, 787, 789, 793, 794, 800, 802, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 868, 869, 874, 875, 876, 877, 878, 888, 889, 890, 891, 893, 898, 901, 903, 911, 917, 920, 923, 925, 933, 936, 937, 941, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 957, 995, 1023, 1050, 1051, 1062, 1063, 1072, 1078, 1084, 1085, 1087, 1103, 1107, 1119, 1120, 1133], "einf\u00fchrung": [5, 156, 160, 173, 175, 329, 987, 1114, 1119, 1120, 1122, 1131, 1133], "anhand": [5, 6, 151, 160, 173, 175, 177, 178, 227, 327, 329, 1114, 1120, 1128, 1133], "beispielen": [5, 8, 147, 173, 175, 177, 187, 196, 212, 224, 328, 329, 1120, 1133], "memori": [5, 41, 42, 48, 54, 72, 77, 79, 96, 108, 109, 110, 128, 132, 133, 134, 136, 138, 145, 149, 153, 154, 155, 158, 160, 165, 171, 172, 180, 184, 185, 189, 202, 208, 211, 218, 221, 236, 258, 260, 262, 267, 284, 287, 328, 329, 331, 345, 351, 373, 374, 380, 393, 395, 396, 398, 404, 405, 407, 409, 413, 414, 415, 442, 457, 459, 461, 462, 463, 465, 467, 468, 475, 476, 483, 500, 502, 503, 527, 535, 536, 541, 542, 552, 570, 571, 572, 588, 607, 617, 632, 635, 637, 646, 673, 675, 680, 687, 692, 694, 695, 696, 716, 718, 719, 728, 733, 736, 738, 743, 747, 757, 761, 762, 763, 766, 768, 770, 771, 775, 778, 784, 787, 797, 802, 804, 810, 862, 879, 888, 908, 910, 911, 924, 925, 957, 961, 974, 975, 988, 995, 1076, 1115, 1116, 1119, 1123, 1124, 1133], "weiter": [5, 23, 36, 141, 142, 166, 168, 177, 191, 215, 233, 263, 854, 1112, 1122, 1128, 1129, 1131, 1132, 1136], "standbein": [5, 1122], "mehreren": [5, 166, 182, 1135], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 41, 79, 89, 98, 112, 126, 129, 151, 153, 173, 175, 185, 187, 190, 194, 200, 211, 212, 216, 222, 223, 224, 227, 230, 245, 252, 255, 261, 265, 266, 271, 272, 283, 310, 311, 312, 313, 314, 328, 385, 389, 392, 396, 405, 409, 414, 415, 418, 420, 430, 441, 455, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 637, 675, 708, 716, 718, 719, 735, 766, 789, 793, 794, 795, 796, 799, 800, 806, 807, 808, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 827, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 863, 871, 885, 891, 893, 901, 903, 917, 919, 920, 923, 925, 939, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 958, 987, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1114, 1122, 1124, 1125, 1129, 1130, 1131], "konzept": [5, 23, 328, 1122, 1124, 1131], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 141], "mehr": [5, 11, 23, 141, 150, 152, 176, 182, 202, 328, 1112, 1113, 1115, 1117, 1122, 1129, 1130, 1131, 1136], "kernentwickl": 5, "themen": [5, 23, 147, 158, 160, 1122], "applikationsentwicklung": 5, "direkt": [5, 23, 160, 1115, 1131], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 63, 141, 142, 150, 152, 160, 166, 176, 177, 181, 186, 187, 196, 197, 212, 218, 224, 234, 305, 328, 854], "nur": [5, 23, 141, 147, 151, 152, 156, 166, 168, 176, 177, 181, 183, 191, 213, 305, 328, 1114, 1115, 1122, 1125, 1128, 1129, 1130, 1132, 1134, 1135, 1136], "mutig": 5, "pool": [5, 82, 194, 786, 925, 927], "absprach": [5, 1112], "individuel": [5, 23, 168, 1112], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 160, 166, 328, 1113, 1134], "recht": [5, 7, 63, 141, 142, 152, 160, 166, 177, 186, 1128, 1129], "dynamisch": [5, 160, 191, 1115, 1117, 1132], "teilnehm": [5, 147, 156, 160, 168, 328, 1122, 1129], "haben": [5, 141, 142, 151, 156, 160, 168, 176, 177, 189, 328, 596, 1113, 1114, 1115, 1116, 1117, 1122, 1128, 1130, 1131, 1132, 1135], "oft": [5, 23, 141, 166, 168, 1116], "bed\u00fcrfniss": [5, 23, 168], "vorab": [5, 147, 160, 196], "bekannt": [5, 23, 166, 1117], "waren": [5, 151, 156, 1113, 1117], "wodurch": [5, 23], "auch": [5, 23, 141, 142, 147, 152, 156, 166, 178, 181, 183, 189, 192, 197, 218, 222, 228, 253, 305, 306, 328, 1112, 1113, 1114, 1115, 1116, 1122, 1125, 1129, 1134, 1136], "mal": [5, 142, 156, 166, 177, 228, 328, 1113, 1117, 1128], "agenda": [5, 23, 27, 157, 262, 266, 270, 272, 276, 284, 288, 292], "abgewichen": 5, "wird": [5, 7, 23, 141, 142, 147, 150, 151, 152, 160, 166, 176, 177, 183, 186, 215, 310, 315, 328, 1112, 1113, 1116, 1117, 1122, 1124, 1125, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "verh\u00e4ltni": 5, "vortrag": [5, 151, 1112], "\u00fcbungen": [5, 8, 147, 160, 168, 177, 178, 187, 196, 212, 224, 328, 1115, 1122, 1124, 1128, 1131], "ca": [5, 23, 31, 141, 143, 1093], "50": [5, 7, 105, 108, 143, 154, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 306, 311, 312, 402, 404, 420, 491, 526, 527, 848, 870, 871, 872, 966, 989, 1009, 1021, 1068, 1069, 1081, 1098], "kleiner": [5, 7, 186, 853], "den": [5, 142, 150, 151, 152, 156, 160, 166, 168, 176, 177, 182, 189, 196, 225, 273, 310, 311, 315, 328, 788, 1113, 1114, 1115, 1116, 1117, 1122, 1125, 1128, 1129, 1135, 1136], "teilnehmern": [5, 328, 1136], "pc": [5, 77, 107, 129, 185, 249, 296, 313, 316, 495, 864, 865, 871, 1113], "erledigt": 5, "speziel": [5, 147, 176, 177, 236, 1125, 1128, 1131, 1135], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1112], "denen": [5, 23, 141, 1122], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 32, 58, 61, 64, 77, 84, 89, 107, 112, 113, 115, 133, 134, 135, 136, 137, 138, 139, 140, 144, 148, 149, 150, 153, 154, 165, 166, 169, 170, 172, 173, 174, 177, 178, 182, 183, 184, 188, 190, 191, 194, 196, 200, 201, 203, 204, 206, 207, 209, 210, 212, 214, 216, 217, 218, 223, 224, 226, 227, 229, 230, 232, 238, 240, 242, 244, 245, 247, 249, 251, 252, 254, 255, 258, 259, 260, 262, 264, 265, 266, 268, 271, 272, 274, 277, 280, 283, 284, 286, 287, 310, 315, 317, 328, 330, 345, 351, 368, 373, 374, 383, 386, 398, 399, 407, 413, 421, 422, 423, 425, 427, 429, 430, 432, 437, 440, 442, 457, 462, 471, 472, 476, 485, 486, 491, 492, 493, 494, 511, 539, 540, 554, 555, 556, 557, 570, 639, 648, 663, 693, 694, 709, 717, 719, 737, 750, 752, 762, 766, 771, 776, 798, 805, 811, 827, 863, 865, 870, 871, 872, 879, 884, 886, 892, 900, 904, 908, 913, 921, 922, 925, 926, 937, 939, 940, 941, 952, 955, 961, 964, 965, 968, 977, 978, 984, 987, 988, 991, 995, 1000, 1019, 1041, 1052, 1059, 1060, 1062, 1064, 1066, 1069, 1070, 1071, 1073, 1077, 1092, 1093, 1105, 1107, 1110, 1121, 1128], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 41, 43, 64, 96, 105, 108, 112, 115, 117, 129, 130, 140, 144, 145, 147, 148, 151, 153, 160, 161, 162, 172, 174, 179, 180, 184, 185, 187, 194, 195, 196, 200, 202, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 230, 233, 237, 238, 240, 241, 242, 245, 249, 252, 258, 259, 260, 262, 266, 270, 272, 276, 277, 280, 284, 288, 291, 309, 314, 315, 316, 317, 324, 329, 330, 482, 513, 555, 722, 725, 727, 730, 732, 735, 744, 746, 756, 758, 766, 767, 768, 769, 774, 778, 865, 870, 872, 940, 941, 942, 944, 950, 954, 956, 957, 958], "endprodukt": 5, "bleibt": [5, 23, 1132], "homepag": [5, 13, 137, 139, 147, 150, 151, 165, 192, 200, 202, 237, 238, 240, 404, 952, 1098], "erhalten": 5, "hier": [5, 8, 17, 23, 63, 141, 142, 147, 150, 151, 153, 156, 160, 168, 172, 176, 177, 183, 187, 193, 196, 197, 206, 212, 215, 224, 225, 267, 285, 328, 1112, 1115, 1122, 1128, 1129, 1131, 1132, 1134], "mix": [5, 29, 172, 179, 190, 193, 200, 203, 206, 207, 211, 213, 216, 245, 252, 265, 266, 271, 272, 274, 356, 395, 398, 399, 401, 403, 546, 719, 992, 995, 1011, 1014, 1023, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1063, 1077, 1082, 1088, 1133], "j\u00fcngeren": 5, "2023": [5, 59, 95, 105, 112, 250, 251, 254, 257, 268, 274, 285, 327, 418, 419, 688], "10": [5, 7, 62, 96, 101, 104, 105, 108, 112, 122, 129, 135, 136, 141, 143, 144, 154, 155, 166, 171, 173, 177, 178, 181, 183, 186, 189, 190, 192, 197, 198, 199, 200, 202, 203, 205, 206, 208, 213, 215, 218, 221, 225, 228, 230, 231, 233, 234, 244, 246, 251, 253, 260, 261, 262, 263, 266, 267, 272, 273, 278, 282, 285, 296, 303, 304, 305, 306, 309, 323, 324, 327, 339, 341, 343, 345, 353, 371, 378, 395, 397, 411, 421, 431, 461, 481, 483, 484, 486, 489, 492, 497, 500, 520, 521, 526, 527, 529, 530, 535, 545, 548, 550, 557, 624, 625, 631, 635, 642, 646, 647, 673, 685, 694, 695, 696, 697, 707, 719, 756, 766, 774, 795, 797, 803, 822, 826, 828, 848, 850, 854, 857, 865, 870, 871, 872, 889, 898, 906, 933, 936, 940, 941, 942, 954, 955, 964, 966, 967, 995, 996, 1003, 1025, 1026, 1046, 1052, 1063, 1064, 1068, 1069, 1085, 1086, 1093, 1098, 1110, 1128], "09": [5, 96, 129, 136, 145, 169, 185, 250, 285, 307, 327, 419, 422, 848, 871, 872, 896, 991, 1068], "11": [5, 7, 39, 62, 105, 112, 129, 130, 145, 154, 155, 160, 161, 165, 166, 171, 172, 173, 177, 178, 181, 183, 186, 189, 192, 195, 197, 198, 199, 202, 207, 208, 209, 213, 215, 218, 221, 225, 228, 231, 234, 237, 238, 243, 247, 250, 253, 257, 263, 267, 273, 281, 284, 285, 291, 302, 303, 304, 305, 306, 313, 316, 323, 324, 327, 329, 331, 345, 411, 413, 427, 439, 492, 520, 529, 530, 536, 538, 539, 541, 545, 547, 548, 554, 556, 566, 571, 573, 578, 591, 592, 593, 596, 609, 633, 637, 640, 643, 644, 649, 650, 651, 652, 662, 674, 675, 676, 677, 678, 679, 680, 682, 685, 686, 689, 691, 694, 695, 697, 698, 700, 707, 708, 709, 716, 717, 719, 720, 791, 804, 848, 857, 911, 916, 940, 941, 942, 990, 996, 1001, 1019, 1053, 1055, 1059, 1061, 1063, 1066, 1068, 1069, 1080, 1098, 1110, 1117, 1118, 1119, 1128], "introduct": [5, 29, 71, 72, 73, 77, 96, 97, 98, 105, 112, 113, 146, 149, 194, 195, 209, 211, 219, 222, 230, 233, 239, 241, 242, 248, 249, 251, 258, 261, 262, 266, 269, 277, 280, 283, 284, 287, 309, 314, 318, 327, 329, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 637, 644, 656, 663, 675, 691, 700, 708, 718, 719, 720, 768, 789, 793, 794, 795, 796, 799, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 861, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 906, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 987, 1060, 1061, 1062, 1071, 1092, 1097, 1119, 1133], "07": [5, 96, 105, 112, 129, 143, 145, 156, 169, 198, 199, 233, 238, 250, 251, 257, 273, 309, 323, 324, 327, 425, 793, 794, 870, 991, 1019, 1063, 1068], "18": [5, 7, 62, 136, 143, 144, 148, 154, 155, 171, 176, 181, 183, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 214, 215, 221, 225, 228, 231, 234, 243, 247, 249, 250, 253, 257, 263, 267, 273, 278, 285, 303, 305, 306, 309, 327, 545, 610, 674, 682, 694, 719, 730, 739, 766, 803, 809, 811, 845, 848, 862, 872, 896, 898, 932, 943, 950, 951, 952, 955, 984, 1019, 1026, 1068, 1069], "For": [5, 39, 112, 131, 132, 133, 137, 140, 143, 145, 146, 148, 149, 154, 157, 162, 163, 165, 169, 185, 190, 193, 200, 203, 206, 211, 221, 224, 226, 230, 238, 240, 241, 242, 266, 272, 277, 321, 327, 329, 341, 342, 348, 363, 372, 379, 385, 389, 392, 394, 396, 405, 409, 414, 415, 432, 457, 513, 538, 545, 549, 562, 571, 591, 637, 675, 682, 685, 689, 694, 699, 716, 718, 719, 737, 752, 766, 793, 794, 803, 826, 862, 863, 871, 872, 873, 882, 886, 913, 934, 941, 942, 943, 950, 951, 955, 988, 989, 999, 1006, 1014, 1037, 1042, 1064, 1067, 1069, 1071], "04": [5, 96, 104, 112, 116, 129, 140, 143, 145, 160, 161, 185, 233, 249, 250, 253, 257, 285, 307, 309, 327, 420, 719, 862, 943, 950, 951, 955, 1068, 1098], "20": [5, 7, 8, 23, 62, 129, 136, 138, 143, 152, 153, 154, 155, 166, 171, 176, 177, 181, 183, 186, 187, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 250, 253, 257, 259, 263, 267, 274, 277, 278, 280, 285, 305, 306, 309, 327, 333, 335, 337, 353, 377, 417, 457, 485, 486, 491, 520, 521, 526, 527, 529, 530, 545, 642, 645, 646, 647, 656, 663, 685, 687, 688, 693, 694, 695, 696, 785, 791, 811, 826, 848, 863, 870, 871, 872, 926, 943, 952, 966, 967, 991, 1010, 1018, 1019, 1045, 1068, 1069, 1098, 1100, 1107], "clean": [5, 45, 46, 50, 52, 54, 55, 62, 116, 148, 200, 219, 327, 395, 406, 407, 410, 416, 537, 635, 719, 720, 940, 942, 952, 961, 1014, 1063], "code": [5, 21, 23, 28, 29, 32, 39, 41, 45, 46, 50, 52, 54, 55, 62, 64, 69, 72, 79, 84, 102, 103, 107, 112, 116, 118, 126, 130, 132, 133, 134, 135, 136, 139, 140, 147, 148, 151, 153, 156, 157, 158, 160, 161, 162, 165, 168, 169, 170, 172, 174, 179, 184, 185, 189, 193, 194, 195, 200, 202, 203, 205, 208, 211, 216, 218, 219, 221, 222, 230, 240, 242, 245, 249, 251, 252, 255, 258, 260, 263, 265, 266, 267, 271, 272, 273, 276, 277, 280, 283, 284, 295, 296, 305, 310, 315, 327, 330, 337, 339, 343, 347, 353, 367, 373, 378, 394, 395, 399, 401, 403, 409, 410, 412, 413, 414, 415, 416, 420, 422, 423, 424, 426, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 447, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 516, 518, 519, 521, 522, 524, 525, 527, 528, 530, 531, 533, 534, 535, 536, 537, 538, 539, 541, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 563, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 600, 606, 607, 609, 610, 612, 613, 615, 621, 624, 628, 629, 635, 636, 640, 642, 644, 645, 646, 648, 650, 652, 663, 672, 673, 674, 675, 677, 678, 679, 680, 682, 684, 689, 693, 694, 696, 697, 698, 699, 707, 709, 713, 714, 715, 717, 718, 719, 720, 725, 730, 743, 744, 758, 764, 766, 771, 778, 781, 782, 784, 787, 805, 832, 862, 863, 871, 872, 887, 888, 904, 907, 911, 915, 924, 928, 930, 931, 933, 935, 937, 939, 940, 941, 942, 943, 944, 945, 947, 948, 950, 952, 963, 964, 966, 967, 968, 972, 974, 983, 985, 988, 989, 991, 992, 998, 999, 1000, 1006, 1010, 1011, 1012, 1019, 1039, 1043, 1062, 1066, 1078, 1080, 1089, 1092, 1098, 1099, 1101, 1105, 1106, 1107, 1110, 1111, 1118, 1123, 1131, 1132, 1136], "With": [5, 29, 113, 116, 121, 134, 140, 160, 221, 230, 249, 251, 252, 255, 260, 267, 275, 277, 280, 284, 327, 368, 397, 413, 423, 433, 434, 443, 455, 469, 483, 535, 644, 675, 718, 719, 720, 766, 795, 796, 862, 869, 870, 901, 903, 920, 938, 941, 952, 983, 987, 1062, 1078, 1082, 1084, 1086, 1094, 1118, 1120, 1121, 1123], "03": [5, 96, 104, 112, 129, 130, 138, 143, 145, 152, 160, 195, 216, 218, 221, 250, 251, 254, 257, 263, 276, 306, 309, 313, 327, 329, 411, 418, 419, 420, 441, 455, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 530, 535, 536, 538, 539, 541, 543, 545, 546, 548, 550, 553, 558, 561, 564, 580, 586, 590, 598, 599, 600, 602, 603, 605, 608, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 644, 675, 691, 700, 708, 716, 718, 719, 720, 828, 952, 1068, 1091, 1107, 1117], "28": [5, 7, 23, 96, 104, 129, 136, 143, 144, 154, 155, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 304, 305, 306, 323, 324, 327, 419, 431, 478, 494, 495, 518, 527, 610, 657, 756, 808, 848, 872, 900, 941, 942, 954, 1021, 1068, 1110], "29": [5, 7, 96, 105, 143, 144, 154, 155, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 302, 305, 309, 323, 324, 327, 419, 697, 730, 870, 872, 940, 943, 952, 1068], "sap": [5, 200, 251, 327, 1084], "13": [5, 6, 7, 62, 105, 116, 126, 136, 138, 145, 152, 154, 155, 166, 171, 174, 178, 181, 183, 186, 189, 192, 197, 199, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 251, 254, 257, 263, 267, 273, 278, 285, 305, 306, 327, 411, 418, 423, 426, 537, 652, 694, 730, 808, 848, 871, 896, 906, 926, 954, 961, 963, 1004, 1015, 1068, 1069, 1093, 1128], "15": [5, 7, 60, 62, 105, 112, 129, 132, 140, 143, 152, 154, 155, 163, 166, 169, 171, 177, 178, 181, 183, 185, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 216, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 268, 273, 277, 278, 280, 285, 303, 305, 306, 307, 309, 316, 323, 324, 327, 419, 485, 486, 503, 504, 505, 506, 508, 509, 612, 672, 695, 717, 795, 809, 863, 897, 906, 976, 1067, 1068, 1069, 1089, 1093, 1128], "02": [5, 96, 105, 112, 129, 136, 143, 145, 152, 156, 182, 192, 219, 233, 250, 251, 257, 323, 324, 327, 411, 419, 420, 872, 940, 941, 942, 952, 954, 1068], "17": [5, 7, 62, 95, 105, 112, 138, 144, 148, 152, 154, 155, 166, 171, 173, 176, 181, 183, 186, 189, 192, 197, 198, 202, 207, 209, 210, 214, 215, 216, 218, 221, 225, 228, 234, 237, 238, 244, 246, 250, 253, 257, 263, 268, 273, 277, 278, 280, 285, 302, 305, 306, 327, 545, 593, 634, 643, 652, 673, 685, 695, 717, 730, 766, 797, 848, 872, 888, 894, 924, 928, 955, 984, 1026, 1068, 1069, 1077, 1089], "tour": [5, 141, 200, 237, 238, 240, 260, 291, 327, 328, 481, 633, 718, 719, 1063, 1118, 1119], "forc": [5, 34, 132, 134, 138, 161, 221, 327, 328, 402, 417, 445, 541, 801, 879, 908, 942, 1063, 1118], "2022": [5, 96, 104, 105, 116, 145, 208, 214, 218, 221, 237, 238, 244, 247, 323, 324, 327, 419, 430, 492, 663, 688, 692, 717, 826, 828, 942, 952, 1019, 1063, 1091], "12": [5, 6, 7, 8, 39, 62, 105, 112, 115, 129, 138, 143, 144, 145, 154, 155, 159, 166, 171, 177, 178, 181, 183, 186, 189, 192, 193, 197, 198, 199, 202, 205, 206, 210, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 249, 250, 251, 253, 257, 263, 267, 273, 278, 281, 284, 285, 287, 304, 305, 309, 323, 324, 327, 395, 419, 420, 428, 513, 646, 652, 685, 717, 797, 808, 811, 826, 848, 850, 857, 870, 872, 874, 898, 906, 924, 940, 952, 954, 955, 961, 963, 967, 995, 1006, 1063, 1066, 1068, 1069, 1093, 1104, 1128], "01": [5, 62, 95, 96, 104, 105, 112, 129, 130, 138, 143, 145, 152, 156, 174, 185, 192, 199, 208, 214, 221, 233, 250, 251, 253, 257, 307, 309, 323, 324, 327, 406, 419, 420, 433, 520, 521, 710, 795, 822, 872, 926, 928, 955, 1052, 1063, 1068, 1098], "A": [5, 13, 20, 23, 27, 28, 29, 37, 38, 39, 40, 45, 46, 50, 52, 54, 55, 60, 64, 68, 72, 73, 77, 81, 83, 84, 96, 97, 107, 108, 109, 110, 112, 120, 132, 135, 136, 137, 138, 140, 145, 148, 149, 150, 153, 154, 155, 169, 171, 172, 173, 181, 185, 192, 194, 196, 202, 205, 208, 212, 218, 219, 221, 225, 233, 239, 241, 245, 248, 249, 260, 262, 267, 269, 270, 273, 280, 283, 284, 287, 296, 302, 307, 311, 312, 327, 332, 335, 336, 348, 349, 350, 363, 368, 372, 378, 379, 381, 384, 385, 389, 392, 393, 394, 395, 396, 399, 401, 402, 403, 405, 407, 409, 414, 415, 417, 423, 430, 433, 434, 435, 439, 440, 443, 445, 455, 457, 469, 482, 483, 492, 494, 500, 535, 540, 541, 546, 548, 549, 550, 599, 600, 602, 603, 606, 617, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 637, 639, 652, 663, 673, 675, 678, 685, 691, 697, 701, 710, 715, 716, 717, 718, 719, 720, 727, 741, 743, 760, 783, 795, 796, 799, 800, 805, 808, 809, 813, 814, 819, 823, 829, 859, 862, 869, 870, 872, 887, 891, 892, 895, 901, 903, 908, 909, 910, 911, 920, 925, 926, 937, 938, 941, 943, 948, 950, 951, 952, 955, 956, 963, 964, 968, 969, 970, 971, 972, 974, 975, 976, 977, 994, 995, 1002, 1004, 1009, 1015, 1019, 1020, 1021, 1026, 1049, 1052, 1055, 1066, 1070, 1072, 1073, 1076, 1080, 1083, 1084, 1090, 1093, 1099, 1100, 1110, 1118, 1119, 1120, 1121, 1123, 1133], "new": [5, 16, 31, 41, 43, 48, 49, 54, 62, 64, 77, 106, 113, 130, 133, 135, 136, 137, 138, 139, 140, 143, 148, 160, 165, 185, 202, 206, 208, 218, 221, 225, 233, 243, 260, 266, 267, 284, 296, 321, 327, 356, 386, 390, 391, 399, 403, 417, 420, 440, 442, 460, 464, 476, 478, 482, 491, 493, 494, 503, 504, 505, 506, 508, 509, 513, 519, 527, 536, 537, 542, 545, 591, 593, 604, 606, 607, 612, 629, 633, 637, 639, 640, 644, 645, 646, 648, 651, 662, 673, 676, 680, 682, 684, 686, 687, 691, 692, 693, 694, 695, 696, 700, 701, 708, 710, 712, 716, 718, 719, 723, 760, 766, 774, 798, 822, 845, 863, 866, 870, 871, 872, 895, 896, 897, 906, 908, 909, 915, 927, 958, 977, 992, 995, 1004, 1043, 1068, 1069, 1086, 1093, 1098, 1117, 1118, 1119, 1121], "languag": [5, 12, 29, 42, 58, 61, 77, 89, 112, 113, 129, 154, 156, 168, 169, 170, 172, 174, 177, 179, 184, 185, 187, 190, 192, 193, 194, 196, 212, 216, 219, 222, 224, 227, 252, 255, 258, 259, 260, 287, 296, 297, 298, 299, 300, 301, 310, 313, 327, 329, 331, 333, 345, 348, 359, 363, 372, 377, 379, 385, 389, 390, 392, 405, 409, 414, 417, 422, 424, 441, 455, 456, 457, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 500, 502, 535, 536, 543, 548, 550, 558, 561, 563, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 644, 651, 652, 662, 676, 681, 683, 686, 691, 695, 698, 699, 700, 708, 716, 718, 719, 720, 798, 855, 863, 864, 940, 942, 959, 968, 972, 973, 974, 975, 976, 979, 984, 988, 992, 994, 995, 998, 1007, 1015, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1070, 1074, 1077, 1078, 1080, 1084, 1089, 1092, 1095, 1097, 1102, 1107, 1115, 1118, 1119, 1120, 1121, 1123], "start": [5, 8, 41, 109, 110, 127, 129, 132, 133, 134, 135, 138, 143, 144, 148, 152, 157, 162, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 184, 185, 187, 190, 194, 195, 200, 206, 215, 221, 222, 231, 233, 246, 249, 251, 253, 255, 258, 260, 262, 267, 270, 285, 287, 296, 313, 327, 330, 337, 340, 341, 350, 353, 367, 390, 411, 412, 425, 433, 437, 440, 447, 513, 524, 530, 596, 607, 612, 615, 635, 687, 710, 717, 727, 766, 779, 793, 794, 798, 799, 802, 804, 805, 826, 827, 839, 848, 850, 863, 889, 890, 899, 902, 909, 910, 914, 918, 919, 922, 924, 927, 933, 937, 940, 954, 959, 966, 971, 972, 974, 975, 983, 993, 994, 1000, 1010, 1026, 1033, 1034, 1052, 1071, 1073, 1081, 1082, 1086, 1089, 1098, 1106, 1118, 1121], "schluss": [5, 7, 141, 166, 186], "noch": [5, 7, 141, 142, 152, 156, 160, 166, 176, 177, 181, 183, 186, 189, 192, 202, 215, 221, 222, 225, 246, 253, 328, 1117, 1128, 1135], "talk": [5, 41, 44, 49, 83, 112, 133, 137, 148, 153, 157, 165, 169, 172, 177, 209, 211, 212, 312, 417, 418, 680, 689, 766, 785, 863, 868, 872, 879, 1110], "heurigen": 5, "grazer": [5, 59, 151, 172, 868], "linuxtagen": [5, 151], "pointless": [5, 116, 246, 260, 267, 284, 399, 546], "blink": [5, 60, 116, 260, 263, 284, 296, 299, 863, 904, 907], "asyncio": [5, 116, 165, 169, 219, 260, 284, 663, 1064], "libgpiod": [5, 115, 116, 130, 260, 284, 296, 298], "raspberri": [5, 77, 96, 103, 105, 115, 116, 128, 145, 149, 175, 249, 260, 284, 313, 315, 316, 327, 329, 495, 719, 743, 747, 766, 770, 775, 781, 784, 787, 862, 869, 871, 872, 883, 928, 941, 943, 947, 950, 952, 954, 965, 987, 991, 1078, 1080, 1092, 1113, 1122], "pi": [5, 37, 77, 105, 112, 113, 116, 145, 149, 175, 205, 208, 249, 260, 284, 316, 327, 329, 353, 380, 383, 401, 491, 494, 495, 550, 570, 650, 719, 743, 747, 770, 775, 781, 784, 787, 862, 869, 871, 872, 883, 928, 941, 943, 950, 951, 954, 995], "cours": [5, 8, 13, 39, 103, 113, 115, 116, 129, 130, 131, 132, 133, 135, 148, 161, 162, 172, 180, 184, 190, 195, 200, 211, 219, 222, 239, 241, 249, 258, 260, 261, 275, 276, 284, 287, 310, 328, 329, 331, 380, 381, 397, 424, 435, 441, 447, 492, 717, 741, 766, 778, 793, 794, 855, 864, 893, 900, 942, 964, 965, 987, 1019, 1051, 1060, 1064, 1077, 1078, 1092, 1118, 1121, 1133], "sollt": [5, 23, 141, 142, 147, 150, 189, 1115, 1134], "interess": [5, 23, 222, 1113, 1124], "anderen": [5, 23, 166, 176, 181, 183, 328, 1112, 1113, 1115, 1117, 1136], "themenkomplex": 5, "bestehen": [5, 1131], "biet": 5, "folgend": [5, 147, 166, 177, 222, 1128], "preisgestaltung": 5, "all": [5, 23, 24, 29, 34, 39, 41, 44, 56, 58, 60, 61, 64, 69, 79, 87, 109, 110, 113, 120, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 153, 154, 155, 160, 162, 165, 166, 168, 169, 171, 176, 181, 185, 191, 193, 194, 202, 205, 208, 209, 213, 218, 219, 221, 238, 240, 243, 246, 249, 251, 258, 260, 267, 284, 295, 297, 298, 305, 321, 333, 337, 347, 351, 352, 355, 356, 357, 368, 376, 377, 383, 393, 395, 397, 399, 400, 403, 406, 407, 410, 412, 417, 419, 420, 421, 422, 423, 426, 427, 431, 432, 435, 436, 440, 442, 445, 447, 448, 456, 457, 462, 463, 484, 486, 494, 495, 513, 541, 542, 545, 547, 552, 570, 571, 588, 593, 606, 607, 621, 629, 631, 646, 648, 650, 663, 673, 677, 682, 683, 685, 695, 696, 699, 702, 704, 707, 725, 727, 734, 737, 739, 744, 752, 756, 758, 762, 764, 766, 774, 780, 783, 792, 793, 794, 798, 799, 801, 802, 804, 806, 808, 809, 810, 811, 826, 827, 838, 845, 848, 850, 852, 853, 854, 855, 857, 863, 864, 865, 866, 870, 871, 872, 882, 883, 887, 889, 892, 898, 900, 909, 916, 922, 925, 926, 927, 938, 942, 948, 952, 957, 958, 962, 963, 964, 975, 983, 988, 989, 993, 995, 1008, 1009, 1012, 1013, 1014, 1019, 1025, 1026, 1042, 1043, 1059, 1063, 1064, 1073, 1077, 1086, 1093, 1098, 1100, 1105, 1112, 1113, 1115, 1117, 1121, 1122, 1129, 1130, 1133, 1136], "onlin": [5, 11, 23, 138, 145, 147, 148, 160, 165, 168, 328], "gehalten": [5, 8, 129, 156, 168, 177, 187, 196, 212, 224, 1112, 1117, 1128], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 128, 141, 142, 156, 165, 168, 328, 329, 722, 725, 730, 735, 744, 752, 930, 933, 937, 965, 967, 987, 1063, 1078, 1092, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1133], "980": [5, 205, 208, 221, 228, 231, 635], "reisekosten": [5, 23], "auto": [5, 130, 142, 150, 154, 160, 236, 437, 442, 466, 467, 471, 472, 475, 476, 477, 530, 538, 547, 548, 571, 593, 594, 596, 637, 638, 645, 652, 655, 657, 660, 663, 664, 665, 667, 668, 669, 670, 671, 675, 677, 678, 679, 680, 685, 687, 689, 694, 695, 696, 698, 709, 713, 714, 715, 716, 717, 718, 719, 766, 937, 1118, 1129, 1134], "42": [5, 7, 21, 41, 60, 150, 152, 153, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 306, 352, 378, 380, 381, 383, 386, 394, 399, 401, 407, 421, 431, 436, 440, 457, 459, 488, 489, 493, 494, 495, 496, 497, 498, 499, 511, 518, 530, 537, 545, 546, 550, 552, 578, 581, 584, 591, 615, 619, 639, 640, 648, 650, 678, 685, 698, 699, 709, 713, 714, 715, 729, 811, 848, 857, 865, 911, 919, 933, 940, 941, 942, 962, 963, 964, 971, 974, 992, 994, 995, 1004, 1005, 1006, 1009, 1028, 1110], "per": [5, 49, 77, 139, 166, 284, 301, 321, 351, 390, 395, 484, 756, 762, 776, 780, 785, 786, 798, 802, 822, 848, 915, 924, 941, 1111, 1136], "kilomet": [5, 135, 677, 826], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 141], "sampl": [6, 112, 133, 144, 190, 193, 194, 206, 210, 216, 222, 225, 242, 258, 284, 296, 413, 481, 707, 913, 933, 1016], "log": [6, 95, 130, 138, 139, 148, 155, 160, 163, 172, 192, 202, 208, 218, 221, 249, 251, 263, 280, 309, 422, 423, 442, 699, 729, 766, 795, 802, 804, 826, 863, 865, 871, 873, 877, 879, 882, 883, 1063, 1066, 1093, 1107], "record": [6, 29, 39, 52, 128, 129, 137, 139, 140, 166, 177, 178, 184, 194, 199, 206, 222, 242, 257, 277, 280, 301, 313, 412, 413, 719, 865, 959, 964, 979, 1021, 1023, 1042, 1053, 1054, 1055, 1056, 1057, 1059, 1062, 1072, 1128], "grundlagen": [6, 8, 23, 126, 227, 266, 327, 1115, 1117, 1124, 1125, 1128, 1129, 1131, 1132, 1135], "4": [6, 7, 8, 31, 60, 62, 105, 108, 125, 130, 132, 136, 138, 144, 152, 153, 154, 155, 156, 159, 166, 171, 173, 177, 178, 181, 183, 186, 189, 192, 193, 197, 198, 199, 200, 202, 203, 205, 206, 208, 213, 215, 216, 218, 221, 225, 228, 230, 231, 234, 242, 243, 246, 250, 251, 253, 257, 263, 266, 267, 272, 273, 278, 285, 303, 304, 305, 307, 310, 323, 324, 327, 341, 357, 377, 380, 383, 400, 404, 407, 408, 418, 419, 421, 439, 442, 481, 485, 486, 487, 488, 489, 491, 493, 494, 496, 512, 514, 530, 537, 539, 547, 548, 551, 553, 554, 555, 556, 557, 569, 570, 578, 588, 638, 640, 642, 657, 658, 659, 661, 663, 672, 674, 678, 685, 687, 698, 717, 766, 767, 804, 852, 855, 857, 865, 870, 871, 872, 894, 907, 924, 928, 960, 962, 963, 970, 972, 976, 983, 986, 995, 996, 1001, 1004, 1005, 1006, 1010, 1011, 1015, 1016, 1018, 1019, 1021, 1025, 1038, 1042, 1053, 1055, 1059, 1061, 1064, 1068, 1069, 1071, 1077, 1081, 1082, 1083, 1085, 1086, 1088, 1093, 1098, 1113, 1128], "2021": [6, 10, 23, 114, 126, 143, 145, 181, 183, 192, 198, 199, 202, 207, 210, 233, 307, 309, 323, 324, 327, 513, 656, 681, 822, 826, 848, 849, 926, 940, 954, 990], "templat": [6, 64, 73, 105, 160, 195, 236, 258, 263, 312, 313, 421, 483, 502, 535, 536, 580, 586, 590, 591, 598, 599, 600, 602, 620, 627, 628, 629, 630, 631, 632, 639, 645, 650, 653, 654, 655, 656, 660, 661, 663, 666, 693, 697, 699, 707, 709, 717, 719, 911, 1117, 1119], "descript": [6, 8, 38, 105, 117, 135, 136, 148, 149, 165, 169, 170, 172, 173, 174, 175, 180, 195, 200, 202, 206, 208, 211, 218, 221, 225, 237, 238, 241, 275, 276, 329, 422, 432, 440, 450, 451, 452, 453, 454, 458, 468, 492, 687, 694, 695, 696, 705, 707, 709, 717, 766, 778, 790, 792, 801, 826, 828, 848, 855, 858, 859, 872, 884, 892, 942, 954, 1005, 1019, 1042, 1100, 1121], "sidebar": [6, 17, 64, 130, 778], "metadata": [6, 28, 38, 129, 148, 246, 798, 801, 871, 874, 900, 962, 1123], "angebot": [6, 147], "hous": [6, 31, 133], "meiner": [6, 23, 222, 328, 1113], "person": [6, 23, 140, 170, 189, 192, 231, 233, 235, 242, 246, 253, 284, 285, 317, 402, 437, 438, 441, 466, 550, 609, 879, 977, 978, 980, 981, 982, 984, 985, 1059, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1098, 1099], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 178, 186], "wichtig": [7, 186, 236, 310, 315, 1136], "1": [7, 31, 38, 41, 49, 60, 62, 71, 73, 86, 105, 108, 109, 110, 115, 125, 126, 129, 134, 136, 139, 140, 142, 143, 144, 148, 149, 151, 152, 153, 154, 155, 156, 161, 162, 163, 166, 168, 171, 178, 181, 182, 183, 186, 189, 192, 193, 197, 198, 199, 202, 205, 208, 211, 213, 215, 218, 221, 225, 228, 231, 233, 234, 238, 243, 246, 250, 251, 253, 257, 263, 267, 273, 276, 278, 281, 285, 295, 296, 302, 303, 304, 305, 306, 307, 308, 310, 313, 315, 323, 324, 327, 341, 342, 364, 371, 380, 384, 386, 394, 411, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 433, 435, 436, 456, 457, 463, 473, 481, 482, 485, 489, 491, 493, 494, 495, 497, 501, 503, 504, 505, 506, 507, 508, 509, 514, 517, 520, 523, 526, 529, 530, 532, 537, 538, 539, 545, 547, 551, 553, 554, 555, 556, 557, 562, 567, 569, 575, 576, 577, 578, 579, 584, 588, 600, 602, 610, 612, 615, 619, 629, 635, 636, 638, 639, 640, 642, 645, 646, 648, 650, 652, 654, 655, 657, 659, 660, 661, 663, 664, 665, 672, 678, 680, 683, 684, 685, 687, 689, 690, 693, 694, 696, 697, 698, 707, 715, 717, 719, 724, 729, 735, 739, 744, 766, 783, 792, 793, 794, 797, 798, 799, 801, 802, 803, 804, 805, 808, 809, 810, 811, 812, 816, 818, 820, 822, 823, 827, 828, 829, 845, 848, 849, 850, 851, 852, 854, 855, 857, 858, 859, 861, 863, 870, 871, 873, 874, 882, 883, 884, 886, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 904, 906, 907, 919, 921, 922, 924, 926, 928, 929, 930, 933, 936, 937, 939, 940, 943, 952, 954, 955, 956, 957, 959, 960, 962, 963, 964, 967, 968, 970, 972, 974, 976, 977, 983, 984, 986, 988, 989, 990, 991, 993, 996, 997, 998, 999, 1000, 1003, 1005, 1006, 1011, 1016, 1018, 1019, 1021, 1026, 1029, 1032, 1042, 1046, 1049, 1052, 1053, 1055, 1059, 1060, 1061, 1067, 1068, 1069, 1070, 1076, 1081, 1082, 1083, 1085, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1105, 1109, 1112, 1118, 1120, 1121, 1125, 1128, 1130, 1135], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 77, 79, 81, 83, 84, 86, 88, 89, 90, 96, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 112, 113, 118, 120, 121, 126, 127, 129, 130, 132, 133, 136, 137, 138, 139, 140, 143, 144, 148, 149, 150, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 181, 183, 184, 185, 186, 189, 190, 193, 194, 195, 197, 198, 200, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 219, 220, 222, 223, 224, 225, 227, 229, 232, 233, 234, 238, 239, 240, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 271, 273, 275, 277, 278, 280, 281, 283, 284, 285, 287, 291, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 310, 313, 315, 316, 318, 321, 323, 324, 328, 329, 331, 332, 333, 334, 335, 341, 342, 343, 345, 347, 348, 349, 351, 352, 355, 356, 357, 359, 360, 362, 363, 364, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 437, 439, 440, 441, 442, 445, 448, 449, 456, 457, 459, 460, 461, 462, 463, 476, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 500, 502, 507, 511, 513, 518, 521, 524, 527, 530, 535, 536, 538, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 562, 565, 566, 570, 571, 572, 573, 574, 575, 576, 578, 579, 584, 588, 591, 592, 593, 595, 597, 600, 602, 607, 609, 610, 615, 616, 617, 619, 621, 622, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 637, 639, 640, 642, 643, 645, 646, 647, 649, 652, 657, 658, 659, 660, 661, 663, 674, 675, 678, 679, 683, 684, 687, 688, 689, 693, 695, 696, 697, 699, 701, 705, 707, 708, 709, 710, 713, 716, 717, 718, 719, 720, 721, 722, 725, 727, 730, 732, 734, 735, 737, 741, 744, 748, 752, 754, 756, 758, 760, 762, 764, 766, 767, 768, 773, 774, 776, 778, 779, 780, 782, 783, 791, 792, 793, 794, 795, 796, 798, 799, 800, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 825, 826, 827, 828, 829, 830, 831, 833, 834, 837, 838, 840, 841, 842, 846, 848, 850, 853, 855, 858, 859, 862, 863, 864, 865, 866, 868, 869, 870, 871, 873, 874, 875, 876, 877, 878, 879, 881, 886, 893, 896, 898, 900, 903, 904, 906, 907, 908, 909, 910, 911, 913, 914, 916, 917, 920, 923, 924, 925, 926, 927, 928, 933, 934, 937, 938, 941, 942, 943, 944, 948, 950, 951, 952, 953, 954, 955, 956, 958, 960, 961, 962, 963, 965, 966, 967, 968, 971, 972, 974, 975, 976, 977, 978, 980, 981, 983, 984, 985, 986, 987, 988, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1016, 1018, 1019, 1021, 1022, 1023, 1024, 1026, 1033, 1036, 1039, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1082, 1083, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1098, 1099, 1100, 1101, 1103, 1105, 1107, 1111, 1113, 1115, 1118, 1120, 1121, 1122, 1123, 1131, 1132, 1133, 1135], "41": [7, 138, 143, 154, 155, 166, 176, 181, 183, 186, 189, 192, 194, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 304, 305, 442, 698, 756, 848, 871, 976, 1019, 1021, 1068, 1100], "print": [7, 62, 129, 152, 153, 155, 156, 166, 169, 171, 172, 176, 181, 183, 184, 185, 186, 189, 192, 193, 197, 198, 199, 202, 205, 206, 208, 213, 215, 218, 221, 224, 225, 228, 231, 234, 243, 246, 250, 251, 253, 263, 267, 273, 278, 284, 285, 302, 303, 304, 305, 306, 336, 340, 342, 411, 422, 566, 593, 616, 663, 677, 685, 687, 803, 804, 810, 826, 828, 829, 870, 918, 928, 959, 962, 963, 964, 966, 967, 968, 972, 974, 976, 977, 980, 982, 985, 990, 991, 992, 993, 998, 999, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1014, 1015, 1029, 1031, 1041, 1042, 1043, 1045, 1046, 1052, 1067, 1072, 1076, 1080, 1089], "ja": [7, 23, 142, 166, 183, 186, 189, 202, 205, 234], "basta": [7, 133, 186, 995], "2": [7, 29, 31, 41, 49, 60, 62, 71, 103, 105, 126, 129, 134, 136, 142, 143, 144, 150, 152, 153, 154, 155, 156, 167, 171, 177, 178, 181, 182, 186, 189, 192, 193, 197, 198, 199, 202, 207, 208, 213, 215, 218, 219, 221, 225, 228, 231, 233, 234, 243, 246, 250, 251, 253, 257, 263, 267, 273, 276, 278, 281, 285, 296, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 319, 327, 340, 341, 353, 359, 360, 380, 384, 411, 417, 418, 419, 420, 423, 424, 425, 429, 430, 431, 432, 433, 435, 457, 481, 482, 485, 491, 493, 494, 497, 501, 503, 504, 505, 506, 508, 509, 513, 528, 530, 537, 538, 539, 545, 547, 548, 551, 553, 554, 555, 556, 557, 562, 567, 571, 575, 576, 577, 578, 579, 584, 588, 592, 593, 594, 595, 600, 610, 615, 635, 638, 639, 640, 642, 645, 648, 650, 652, 653, 655, 657, 660, 661, 663, 673, 674, 677, 678, 683, 684, 685, 687, 689, 690, 693, 694, 695, 696, 697, 698, 707, 709, 717, 719, 725, 766, 793, 794, 801, 804, 805, 808, 809, 810, 822, 845, 848, 851, 852, 857, 859, 861, 863, 867, 870, 871, 883, 886, 888, 889, 890, 892, 893, 896, 897, 898, 899, 900, 902, 904, 906, 907, 919, 921, 924, 926, 928, 939, 940, 955, 957, 959, 960, 962, 963, 965, 968, 970, 972, 976, 980, 983, 984, 986, 987, 988, 989, 990, 991, 993, 996, 997, 998, 1000, 1005, 1006, 1011, 1016, 1018, 1020, 1021, 1022, 1023, 1025, 1029, 1032, 1042, 1046, 1049, 1052, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1064, 1067, 1068, 1069, 1074, 1081, 1082, 1083, 1085, 1086, 1087, 1092, 1093, 1098, 1099, 1100, 1104, 1105, 1112, 1120, 1121, 1128, 1131, 1132, 1134, 1135, 1136], "1234": [7, 31, 186, 189, 199, 208, 213, 215, 267, 305, 881, 889, 938, 995], "3": [7, 31, 60, 62, 105, 108, 109, 110, 115, 129, 138, 143, 144, 148, 150, 152, 153, 154, 155, 156, 163, 165, 166, 171, 177, 178, 181, 182, 183, 186, 189, 192, 193, 197, 199, 201, 202, 207, 208, 211, 213, 215, 218, 221, 225, 228, 230, 232, 233, 234, 236, 243, 246, 250, 251, 253, 257, 263, 267, 273, 278, 280, 281, 286, 303, 304, 305, 306, 310, 311, 312, 315, 327, 341, 353, 354, 355, 368, 377, 378, 399, 400, 408, 411, 413, 418, 419, 420, 423, 428, 439, 456, 457, 481, 482, 486, 489, 491, 492, 493, 494, 496, 497, 498, 499, 503, 504, 505, 506, 508, 509, 511, 513, 530, 537, 539, 545, 546, 547, 549, 550, 551, 553, 554, 555, 556, 557, 562, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 584, 600, 610, 615, 617, 638, 639, 640, 642, 650, 652, 653, 657, 658, 659, 660, 661, 663, 678, 683, 685, 687, 689, 694, 695, 697, 698, 717, 724, 730, 766, 804, 809, 823, 826, 848, 850, 852, 857, 859, 865, 867, 870, 871, 872, 874, 883, 884, 886, 888, 889, 890, 893, 897, 898, 899, 907, 908, 909, 913, 919, 921, 924, 927, 928, 929, 932, 934, 937, 938, 940, 941, 942, 960, 962, 963, 965, 968, 970, 972, 976, 983, 986, 987, 988, 989, 990, 993, 994, 996, 998, 1000, 1001, 1004, 1005, 1006, 1011, 1012, 1013, 1015, 1018, 1019, 1021, 1038, 1042, 1046, 1052, 1053, 1055, 1059, 1061, 1064, 1067, 1068, 1069, 1072, 1075, 1081, 1082, 1083, 1085, 1086, 1088, 1093, 1098, 1099, 1100, 1107, 1112, 1114, 1116, 1118, 1121, 1124, 1128], "decim": [7, 186, 221, 225, 267, 296, 333, 419, 995, 1009], "5": [7, 31, 60, 62, 125, 129, 136, 138, 144, 154, 155, 156, 161, 164, 167, 171, 177, 178, 181, 183, 184, 186, 189, 190, 192, 193, 196, 198, 199, 200, 202, 203, 205, 206, 208, 213, 215, 216, 218, 221, 225, 228, 230, 231, 233, 234, 238, 242, 243, 246, 250, 253, 257, 263, 266, 267, 272, 273, 278, 281, 285, 296, 302, 304, 305, 310, 315, 323, 324, 327, 333, 335, 340, 357, 359, 368, 395, 400, 404, 413, 418, 422, 425, 436, 439, 442, 457, 465, 481, 484, 486, 491, 492, 494, 495, 496, 497, 498, 499, 511, 512, 517, 530, 537, 538, 539, 545, 549, 550, 553, 554, 556, 557, 578, 588, 615, 635, 639, 642, 643, 645, 646, 652, 654, 655, 657, 672, 673, 685, 687, 694, 695, 696, 698, 717, 739, 744, 767, 795, 797, 848, 852, 857, 863, 870, 871, 872, 888, 890, 898, 907, 924, 940, 952, 960, 962, 963, 966, 972, 976, 983, 989, 994, 995, 996, 1000, 1001, 1003, 1006, 1009, 1011, 1015, 1016, 1019, 1042, 1046, 1053, 1055, 1059, 1061, 1064, 1068, 1069, 1072, 1077, 1088, 1093, 1098, 1100, 1105, 1109, 1115, 1117, 1122, 1123, 1128, 1129], "hexadecim": [7, 186, 225, 352, 871, 995, 1008, 1009], "16": [7, 62, 129, 138, 140, 141, 143, 152, 154, 155, 160, 161, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 247, 250, 253, 257, 263, 267, 273, 278, 285, 302, 303, 304, 305, 306, 310, 315, 316, 327, 351, 395, 402, 413, 420, 557, 615, 694, 744, 756, 848, 865, 870, 872, 883, 888, 889, 897, 906, 940, 942, 954, 955, 960, 967, 970, 995, 1021, 1068, 1069, 1100], "7": [7, 31, 41, 62, 130, 133, 136, 138, 143, 150, 153, 154, 155, 156, 166, 171, 178, 181, 183, 184, 186, 189, 190, 192, 196, 198, 199, 200, 202, 203, 205, 208, 213, 215, 218, 221, 225, 228, 230, 231, 233, 234, 242, 243, 246, 250, 251, 253, 257, 263, 267, 272, 273, 278, 281, 285, 295, 304, 305, 310, 315, 316, 327, 341, 345, 359, 386, 395, 419, 420, 423, 428, 436, 456, 457, 481, 484, 489, 493, 494, 496, 497, 498, 499, 511, 518, 526, 530, 537, 545, 546, 550, 552, 553, 554, 556, 577, 581, 584, 593, 610, 619, 639, 647, 672, 673, 674, 678, 685, 713, 714, 715, 797, 798, 809, 810, 826, 848, 857, 870, 871, 872, 889, 897, 921, 924, 933, 934, 937, 938, 941, 942, 963, 966, 972, 976, 989, 994, 995, 996, 999, 1001, 1003, 1004, 1019, 1031, 1049, 1052, 1064, 1068, 1069, 1072, 1077, 1088, 1098], "0x1234": [7, 186, 995], "4660": [7, 186, 208, 995], "8": [7, 31, 62, 108, 129, 135, 136, 140, 144, 152, 153, 154, 155, 156, 160, 165, 166, 169, 171, 178, 181, 183, 184, 186, 189, 190, 192, 193, 198, 199, 200, 202, 203, 205, 206, 208, 212, 213, 215, 218, 221, 225, 228, 230, 231, 234, 242, 243, 246, 249, 250, 253, 257, 263, 267, 270, 272, 273, 278, 281, 284, 285, 302, 303, 304, 305, 310, 327, 351, 395, 407, 413, 419, 423, 425, 428, 456, 488, 523, 530, 537, 542, 545, 550, 554, 556, 557, 646, 694, 717, 739, 762, 766, 797, 803, 811, 848, 850, 857, 863, 864, 865, 866, 870, 871, 940, 957, 963, 966, 972, 995, 996, 1001, 1009, 1014, 1018, 1019, 1025, 1061, 1064, 1068, 1069, 1075, 1091, 1093, 1100], "bin\u00e4r": [7, 23, 186, 189], "9": [7, 8, 31, 60, 62, 129, 134, 138, 141, 148, 152, 153, 154, 155, 156, 164, 166, 168, 171, 172, 173, 174, 175, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 196, 198, 199, 200, 202, 205, 206, 208, 213, 215, 218, 221, 222, 225, 228, 231, 233, 234, 243, 246, 249, 250, 253, 257, 258, 260, 263, 267, 273, 278, 285, 302, 303, 305, 306, 310, 315, 327, 333, 335, 341, 350, 353, 411, 419, 436, 456, 465, 484, 530, 532, 548, 557, 647, 657, 685, 744, 822, 845, 848, 870, 871, 872, 888, 924, 960, 970, 989, 990, 996, 1001, 1003, 1011, 1015, 1019, 1026, 1031, 1068, 1069, 1077, 1091, 1093, 1098], "0b100110": [7, 186, 215, 995], "38": [7, 23, 129, 136, 143, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 306, 440, 456, 481, 548, 694, 848, 943, 952, 963, 1068, 1069], "arithmet": [7, 107, 153, 186, 191, 211, 214, 226, 241, 258, 310, 334, 348, 355, 356, 362, 363, 372, 378, 379, 385, 389, 392, 394, 395, 396, 405, 409, 414, 415, 434, 443, 455, 456, 469, 483, 531, 535, 565, 569, 570, 573, 578, 635, 637, 675, 684, 685, 716, 718, 719], "man": [7, 31, 36, 112, 133, 135, 141, 142, 150, 156, 160, 166, 168, 176, 177, 183, 186, 189, 194, 196, 198, 209, 215, 222, 225, 249, 270, 310, 315, 317, 328, 425, 518, 527, 539, 701, 717, 725, 744, 792, 793, 794, 797, 798, 801, 808, 809, 810, 811, 812, 816, 818, 820, 823, 827, 828, 829, 845, 848, 849, 851, 852, 854, 855, 857, 858, 872, 879, 882, 883, 884, 886, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 902, 908, 909, 911, 913, 915, 916, 919, 921, 927, 934, 937, 938, 940, 956, 957, 1113, 1114, 1115, 1117, 1125, 1128, 1130, 1131, 1132, 1134, 1135, 1136], "behaviour": [7, 186, 194, 752, 898, 1014], "erzwingen": [7, 166, 178, 186], "floor": [7, 37, 178, 186, 189, 193, 205, 206, 208, 213, 215, 221, 225, 305, 983, 995, 1091], "divis": [7, 35, 37, 178, 186, 189, 205, 208, 213, 215, 221, 305, 333, 354, 456, 457, 471, 983, 995, 1049], "modul": [7, 12, 21, 23, 29, 64, 116, 123, 129, 136, 138, 143, 155, 161, 163, 165, 168, 169, 170, 171, 172, 179, 180, 186, 189, 193, 195, 200, 202, 203, 206, 208, 209, 212, 213, 215, 216, 218, 219, 221, 222, 224, 225, 227, 228, 232, 233, 236, 242, 244, 245, 246, 251, 253, 261, 262, 265, 267, 271, 272, 275, 276, 277, 280, 285, 287, 295, 296, 305, 311, 312, 313, 315, 321, 328, 373, 417, 419, 423, 424, 430, 432, 433, 445, 634, 675, 718, 719, 722, 723, 725, 726, 728, 730, 731, 732, 733, 735, 736, 743, 746, 747, 751, 757, 762, 763, 767, 768, 770, 775, 778, 781, 784, 787, 862, 863, 870, 872, 961, 962, 963, 964, 965, 968, 976, 977, 979, 983, 984, 988, 989, 992, 993, 1004, 1005, 1006, 1010, 1012, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1057, 1058, 1059, 1060, 1062, 1063, 1065, 1066, 1070, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1085, 1086, 1092, 1093, 1095, 1097, 1098, 1101, 1102, 1108, 1120, 1122, 1123, 1129, 1133, 1136], "restklassen": [7, 186], "rest": [7, 17, 39, 140, 142, 152, 176, 186, 189, 193, 195, 213, 221, 253, 267, 285, 305, 331, 341, 366, 420, 568, 569, 630, 687, 754, 805, 866, 896, 924, 983, 986, 1010, 1039, 1043, 1072, 1087, 1120, 1136], "14": [7, 62, 126, 130, 143, 154, 155, 166, 171, 178, 181, 183, 185, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 233, 234, 237, 243, 246, 250, 253, 257, 263, 267, 273, 284, 285, 287, 302, 303, 305, 306, 307, 327, 419, 430, 431, 433, 442, 536, 610, 634, 646, 685, 687, 695, 697, 808, 811, 823, 848, 850, 870, 871, 872, 874, 889, 898, 928, 940, 941, 942, 961, 1063, 1068, 1069, 1117, 1128], "oper": [7, 29, 32, 33, 34, 37, 72, 77, 79, 96, 107, 113, 132, 133, 135, 139, 151, 152, 154, 157, 160, 165, 169, 170, 171, 172, 174, 178, 183, 186, 191, 192, 193, 194, 195, 200, 202, 206, 207, 210, 213, 215, 216, 220, 223, 226, 229, 231, 234, 236, 246, 253, 258, 259, 260, 261, 262, 263, 266, 267, 283, 287, 296, 310, 315, 333, 341, 351, 357, 372, 377, 378, 379, 383, 385, 386, 389, 392, 394, 396, 398, 401, 405, 407, 409, 414, 415, 437, 438, 457, 477, 483, 495, 500, 502, 530, 535, 536, 537, 542, 543, 547, 550, 554, 555, 556, 557, 558, 561, 562, 564, 570, 578, 579, 580, 586, 590, 591, 594, 599, 602, 603, 615, 620, 627, 628, 629, 630, 631, 632, 635, 637, 643, 645, 646, 648, 652, 657, 659, 660, 661, 663, 666, 670, 673, 675, 677, 678, 679, 680, 685, 687, 694, 695, 698, 705, 709, 716, 717, 718, 719, 728, 733, 736, 737, 743, 747, 757, 766, 768, 770, 775, 781, 782, 784, 787, 793, 794, 797, 826, 832, 857, 858, 862, 870, 871, 872, 883, 888, 889, 890, 891, 892, 893, 904, 907, 911, 913, 933, 937, 941, 954, 957, 965, 968, 975, 976, 979, 996, 1000, 1004, 1009, 1010, 1015, 1029, 1062, 1064, 1073, 1082, 1105, 1110, 1117, 1123], "preced": [7, 34, 37, 186, 208, 213, 221, 226, 229, 333, 339, 354, 355, 363, 368, 372, 377, 379, 383, 385, 387, 389, 392, 396, 405, 409, 414, 415, 566, 570, 637, 675, 716, 718, 719, 826, 875], "implizit": [7, 166, 186, 263, 1115, 1132], "klammerung": [7, 186, 854], "durch": [7, 141, 142, 150, 156, 160, 168, 176, 186, 218, 228, 310, 315, 328, 854, 1112, 1113, 1115], "pr\u00e4zedenz": [7, 166, 178, 186], "6666666666666665": [7, 186], "frage": [7, 142, 152, 156, 183, 186, 189, 195, 215, 328, 1122, 1129, 1136], "6665": [7, 186], "6667": [7, 186], "ieee": [7, 186], "floatingpoint": [7, 186, 354, 355, 478, 766, 1041], "representaion": [7, 186], "true": [7, 34, 37, 49, 57, 62, 109, 110, 134, 136, 138, 143, 152, 153, 154, 155, 165, 166, 171, 176, 181, 183, 184, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 213, 215, 218, 219, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 285, 296, 302, 305, 339, 355, 356, 368, 380, 383, 423, 481, 545, 553, 578, 606, 617, 619, 640, 663, 664, 665, 666, 668, 669, 670, 671, 696, 705, 707, 709, 754, 756, 786, 799, 826, 839, 907, 913, 918, 919, 922, 924, 925, 933, 934, 937, 946, 961, 967, 968, 972, 974, 975, 976, 977, 980, 983, 996, 997, 999, 1000, 1001, 1004, 1010, 1013, 1014, 1077, 1081, 1083, 1088, 1104, 1105, 1107], "zahlen": [7, 176, 177, 186, 1115, 1128], "vergleichen": [7, 166, 186], "21": [7, 96, 98, 101, 104, 105, 112, 140, 143, 154, 155, 166, 171, 174, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 285, 305, 309, 327, 419, 756, 808, 848, 871, 872, 883, 954, 1068, 1069], "ab": [7, 23, 31, 141, 143, 166, 176, 177, 186, 221, 225, 228, 243, 246, 267, 537, 539, 547, 556, 642, 698, 1069, 1122, 1128], "0001": [7, 136, 154, 186], "aber": [7, 23, 36, 142, 150, 152, 156, 166, 176, 177, 181, 184, 186, 215, 218, 221, 273, 328, 854, 1113, 1115, 1117, 1124, 1131, 1135, 1136], "unendlich": [7, 8, 177, 186, 187], "lang": [7, 138, 141, 142, 151, 186, 301, 302, 319, 328, 422, 1114, 1130, 1135], "22": [7, 62, 96, 104, 105, 112, 135, 138, 143, 145, 154, 155, 166, 171, 173, 176, 181, 182, 183, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 274, 277, 278, 280, 285, 302, 304, 305, 306, 327, 811, 848, 872, 873, 881, 882, 897, 941, 942, 1026, 1063, 1068, 1069, 1129], "1000000": [7, 135, 166, 186, 263, 305, 411, 863, 871], "23": [7, 62, 112, 136, 143, 144, 145, 151, 154, 155, 156, 166, 171, 173, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 219, 221, 224, 225, 228, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 285, 327, 383, 419, 422, 663, 811, 848, 870, 871, 952, 1021, 1026, 1068, 1069, 1100, 1107], "32": [7, 143, 144, 150, 152, 155, 166, 171, 176, 181, 183, 186, 189, 192, 195, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 305, 333, 335, 351, 356, 395, 436, 442, 465, 481, 494, 762, 791, 797, 822, 848, 864, 866, 941, 942, 952, 1019], "4294967295": [7, 186, 205, 213, 221], "24": [7, 62, 96, 104, 111, 136, 143, 151, 154, 155, 156, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 267, 273, 278, 285, 302, 303, 305, 306, 327, 430, 628, 630, 652, 694, 695, 766, 793, 794, 848, 870, 957, 963, 1068, 1069], "64": [7, 135, 138, 143, 166, 171, 176, 181, 183, 186, 189, 192, 194, 195, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 339, 351, 356, 380, 395, 401, 404, 430, 762, 904, 907, 930, 937, 940, 957, 1021, 1068, 1113], "18446744073709551615": [7, 166, 176, 186, 189, 202, 205, 213, 215, 221, 225, 228, 231, 253, 285, 305], "overflow": [7, 41, 43, 49, 135, 176, 186, 202, 205, 206, 208, 211, 212, 218, 221, 228, 231, 246, 253, 263, 267, 356, 358, 394, 403, 803], "wenn": [7, 23, 141, 142, 147, 152, 160, 166, 168, 176, 177, 183, 186, 222, 228, 263, 853, 1112, 1114, 1115, 1122, 1124, 1125, 1128, 1131, 1136], "verwendet": [7, 23, 156, 160, 166, 186, 228, 1113, 1115, 1125, 1129, 1131, 1136], "wert": [7, 23, 177, 178, 183, 186, 218, 221, 225, 228, 234, 263, 267, 273, 1128, 1136], "w\u00e4re": [7, 150, 176, 186, 222, 1117, 1124], "dort": [7, 63, 142, 150, 152, 160, 176, 177, 186, 328, 1128, 1134, 1136], "25": [7, 62, 96, 143, 144, 154, 155, 156, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 219, 221, 224, 225, 228, 231, 233, 234, 243, 246, 250, 253, 257, 263, 267, 273, 280, 285, 296, 305, 306, 327, 529, 530, 652, 689, 746, 848, 872, 940, 966, 1009, 1053, 1055, 1059, 1061, 1068, 1069, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "18446744073709551616": [7, 166, 176, 186, 189, 202, 205, 213, 215, 225, 228, 246, 253, 263, 267, 273, 285, 305], "26": [7, 136, 138, 143, 144, 145, 154, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 238, 243, 246, 250, 253, 257, 267, 273, 278, 285, 305, 309, 327, 529, 530, 657, 673, 826, 848, 872, 904, 906, 907, 940, 942, 1068, 1069, 1093, 1129], "1000": [7, 23, 166, 176, 186, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285, 302, 305, 494, 495, 513, 588, 635, 709, 776, 801, 803, 808, 822, 823, 850, 851, 855, 857, 883, 890, 898, 919, 924, 928, 954, 961, 1010, 1042], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 166, 176, 186, 189, 202, 225, 228, 246, 273], "27": [7, 62, 96, 112, 143, 145, 154, 155, 166, 176, 181, 183, 185, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 224, 225, 228, 231, 233, 234, 243, 246, 250, 253, 257, 263, 267, 273, 280, 285, 302, 304, 305, 307, 327, 419, 493, 518, 685, 848, 870, 872, 940, 1068, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "10000": [7, 44, 186, 205, 208, 221, 253, 964, 980], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 186, 205, 221, 253], "hallo": [7, 166, 176, 181, 184, 186, 189, 197, 205, 208, 215, 218, 221, 225, 228, 234, 246, 250, 253, 273, 285, 305, 353, 545, 717, 797, 845, 873, 886, 889, 895], "39": [7, 130, 143, 152, 154, 155, 166, 171, 176, 181, 183, 185, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 281, 285, 302, 303, 304, 305, 306, 307, 456, 610, 657, 811, 940, 1068, 1069], "30": [7, 23, 62, 96, 105, 108, 112, 129, 130, 135, 143, 145, 155, 165, 166, 171, 176, 181, 183, 185, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 257, 263, 267, 270, 273, 285, 302, 304, 305, 307, 327, 340, 354, 419, 481, 485, 520, 521, 526, 527, 529, 530, 646, 647, 694, 695, 696, 822, 848, 854, 870, 871, 872, 928, 954, 966, 967, 1019, 1068, 1072, 1080, 1098, 1107], "eingebettet": [7, 186], "34": [7, 143, 144, 152, 155, 166, 171, 176, 181, 183, 185, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 250, 251, 253, 257, 263, 267, 273, 278, 281, 285, 304, 305, 306, 307, 442, 456, 460, 461, 462, 463, 475, 476, 477, 575, 576, 577, 578, 579, 584, 616, 823, 826, 848, 976, 995, 1068, 1069], "31": [7, 105, 112, 136, 138, 143, 155, 166, 171, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 216, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 304, 305, 327, 391, 419, 426, 672, 848, 906, 938, 955, 989, 1021, 1068, 1091], "eingenbettet": [7, 186], "mississippi": [7, 186, 189, 198, 202, 205, 213, 215, 221, 225, 231, 234, 246, 253, 267, 273, 285, 615], "count": [7, 29, 62, 86, 88, 133, 145, 148, 186, 189, 190, 193, 198, 202, 205, 208, 213, 215, 218, 221, 225, 231, 234, 246, 252, 253, 267, 273, 285, 339, 340, 341, 342, 355, 411, 467, 493, 521, 635, 685, 710, 719, 722, 725, 726, 727, 728, 730, 733, 736, 737, 743, 747, 757, 770, 775, 781, 784, 787, 797, 806, 826, 848, 859, 862, 892, 895, 902, 913, 934, 1010, 1023, 1033, 1036, 1044, 1047, 1062, 1069, 1077, 1118], "ss": [7, 31, 186, 189, 198, 202, 205, 213, 215, 221, 225, 231, 234, 246, 253, 267, 273, 285, 615], "35": [7, 129, 143, 155, 166, 173, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 302, 304, 305, 306, 456, 485, 628, 630, 646, 1068], "find": [7, 17, 41, 43, 46, 47, 52, 64, 112, 132, 133, 134, 135, 139, 144, 149, 161, 162, 163, 173, 175, 186, 189, 193, 195, 198, 202, 206, 208, 211, 213, 215, 218, 221, 225, 228, 231, 234, 239, 246, 248, 251, 253, 258, 260, 267, 269, 270, 273, 275, 285, 287, 291, 295, 304, 310, 315, 398, 404, 411, 423, 431, 438, 445, 466, 471, 472, 475, 476, 477, 478, 483, 500, 501, 530, 535, 538, 552, 554, 556, 557, 578, 580, 591, 594, 596, 599, 603, 615, 628, 630, 632, 635, 678, 682, 715, 719, 732, 771, 792, 793, 794, 796, 801, 805, 806, 808, 809, 810, 812, 826, 853, 856, 859, 862, 871, 872, 883, 911, 940, 943, 957, 987, 991, 1002, 1010, 1070, 1091, 1108, 1120, 1122, 1123, 1124, 1129], "36": [7, 129, 134, 138, 143, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 250, 253, 257, 263, 267, 273, 285, 302, 305, 310, 315, 423, 436, 442, 460, 484, 487, 488, 489, 493, 494, 495, 645, 694, 695, 696, 717, 848, 870, 976, 1052], "37": [7, 143, 154, 155, 166, 167, 171, 176, 181, 183, 186, 189, 192, 194, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 304, 305, 306, 460, 976, 1068, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "capit": [7, 37, 186, 189, 198, 205, 215, 221, 246, 267, 304, 826, 1021], "zeil": [7, 152, 166, 176, 183, 186, 189, 192, 198, 202, 221, 225, 243, 246, 285, 305], "nnoch": [7, 183, 186, 202], "some": [7, 17, 21, 105, 120, 132, 133, 134, 135, 137, 140, 143, 144, 148, 154, 157, 162, 165, 169, 172, 174, 185, 186, 192, 194, 202, 208, 209, 214, 220, 221, 225, 237, 238, 240, 246, 249, 252, 253, 255, 259, 261, 262, 269, 287, 291, 328, 352, 386, 397, 413, 436, 442, 513, 538, 540, 560, 578, 591, 594, 648, 657, 685, 693, 695, 705, 708, 718, 719, 725, 730, 739, 754, 762, 766, 783, 785, 803, 808, 863, 871, 872, 893, 896, 922, 924, 926, 934, 963, 965, 992, 1008, 1014, 1060, 1078, 1098, 1120, 1121], "name": [7, 23, 38, 39, 56, 64, 109, 110, 112, 113, 115, 125, 129, 132, 133, 135, 136, 137, 140, 147, 148, 153, 155, 157, 162, 165, 166, 169, 172, 174, 176, 181, 186, 189, 192, 193, 204, 206, 207, 208, 211, 213, 215, 218, 223, 225, 228, 243, 246, 250, 251, 253, 257, 267, 295, 301, 304, 305, 306, 321, 343, 357, 363, 371, 372, 378, 379, 385, 389, 392, 396, 397, 400, 402, 405, 409, 411, 413, 414, 415, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 440, 442, 457, 461, 462, 463, 468, 471, 475, 476, 477, 492, 494, 497, 502, 507, 539, 549, 551, 553, 617, 630, 636, 637, 647, 648, 657, 675, 677, 681, 687, 695, 716, 717, 718, 719, 722, 730, 734, 744, 748, 760, 762, 786, 792, 793, 794, 797, 805, 806, 808, 811, 812, 826, 832, 848, 854, 859, 866, 870, 871, 872, 874, 875, 882, 883, 886, 888, 892, 900, 933, 937, 940, 941, 942, 952, 954, 955, 957, 958, 959, 962, 964, 971, 976, 978, 981, 985, 986, 988, 989, 993, 994, 1002, 1004, 1006, 1008, 1009, 1010, 1015, 1019, 1021, 1026, 1042, 1043, 1053, 1059, 1061, 1069, 1072, 1075, 1076, 1077, 1082, 1083, 1085, 1086, 1087, 1088, 1091, 1098, 1105, 1107, 1117, 1121, 1123, 1124], "directori": [7, 17, 43, 60, 96, 98, 99, 101, 108, 112, 129, 132, 133, 134, 135, 144, 148, 159, 164, 167, 173, 185, 186, 192, 193, 194, 195, 202, 205, 206, 208, 218, 221, 233, 238, 239, 240, 248, 249, 261, 262, 266, 269, 270, 275, 283, 287, 295, 296, 310, 315, 321, 323, 324, 377, 411, 413, 418, 421, 425, 427, 429, 431, 432, 434, 437, 439, 441, 455, 456, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 514, 517, 520, 523, 526, 529, 532, 535, 626, 708, 718, 719, 744, 766, 768, 788, 792, 795, 796, 797, 799, 800, 801, 803, 805, 806, 808, 809, 810, 812, 813, 814, 815, 820, 821, 823, 825, 826, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 846, 850, 855, 862, 870, 871, 872, 874, 879, 883, 885, 888, 891, 898, 899, 900, 901, 903, 906, 908, 917, 920, 923, 925, 929, 932, 936, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 963, 971, 991, 1042, 1051, 1052, 1091, 1100, 1104, 1109, 1120, 1124, 1133], "multilin": [7, 176, 186, 201, 204, 208, 213, 221, 225, 285, 310, 378, 964, 992], "jetzt": [7, 141, 152, 156, 166, 176, 183, 186, 196, 225, 281], "l": [7, 31, 37, 60, 62, 98, 112, 136, 140, 144, 152, 153, 155, 156, 161, 166, 171, 176, 181, 183, 184, 185, 186, 189, 192, 197, 198, 202, 205, 208, 211, 213, 215, 218, 221, 225, 228, 231, 234, 239, 243, 246, 248, 249, 253, 263, 267, 269, 270, 273, 285, 302, 304, 305, 310, 315, 383, 384, 391, 395, 407, 412, 413, 419, 426, 429, 430, 445, 457, 483, 530, 535, 554, 584, 635, 708, 717, 718, 719, 730, 744, 766, 767, 793, 794, 795, 796, 797, 799, 800, 803, 805, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 833, 834, 837, 838, 840, 841, 842, 844, 845, 846, 850, 855, 859, 862, 863, 865, 870, 871, 872, 873, 874, 881, 883, 888, 889, 891, 893, 894, 896, 897, 898, 901, 903, 906, 909, 917, 920, 923, 924, 925, 934, 938, 940, 941, 942, 943, 952, 954, 955, 960, 962, 983, 991, 993, 996, 997, 1001, 1003, 1011, 1019, 1046, 1107, 1124], "44": [7, 129, 136, 143, 155, 166, 176, 181, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 872, 1093], "45": [7, 29, 50, 52, 54, 55, 71, 72, 73, 86, 89, 122, 125, 138, 141, 143, 155, 165, 166, 169, 171, 176, 181, 183, 186, 189, 190, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 296, 297, 298, 299, 300, 301, 304, 305, 310, 315, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 424, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 575, 576, 577, 578, 579, 580, 584, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 651, 675, 676, 686, 691, 700, 708, 716, 717, 718, 719, 723, 726, 728, 731, 733, 736, 738, 742, 743, 745, 747, 749, 751, 757, 759, 761, 763, 770, 772, 775, 777, 781, 784, 787, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 869, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 905, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1068, 1070, 1074, 1077, 1078, 1080, 1084, 1092, 1095, 1097, 1102, 1103], "46": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 848, 872, 888, 1068, 1069], "47": [7, 136, 138, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 306, 685, 859, 924, 952, 1009, 1068], "try": [7, 27, 112, 129, 132, 133, 135, 140, 152, 155, 165, 166, 169, 173, 176, 181, 183, 186, 189, 192, 195, 198, 200, 202, 205, 208, 211, 213, 215, 218, 221, 225, 228, 230, 231, 233, 234, 237, 238, 240, 242, 243, 246, 249, 250, 253, 260, 261, 262, 263, 266, 267, 273, 284, 285, 291, 296, 303, 304, 305, 306, 310, 314, 315, 325, 403, 407, 433, 437, 461, 466, 475, 483, 491, 500, 502, 535, 543, 561, 564, 580, 586, 590, 595, 599, 602, 603, 620, 622, 624, 627, 628, 629, 630, 631, 632, 663, 671, 675, 685, 691, 695, 709, 713, 715, 718, 719, 771, 774, 871, 892, 937, 961, 968, 1021, 1064, 1070, 1081, 1082, 1086, 1100], "except": [7, 21, 29, 42, 45, 60, 62, 73, 109, 110, 134, 138, 144, 152, 153, 160, 165, 166, 169, 170, 172, 174, 176, 181, 183, 186, 189, 193, 194, 195, 198, 200, 202, 205, 206, 209, 210, 213, 215, 219, 220, 223, 225, 228, 230, 231, 235, 243, 246, 250, 253, 261, 262, 263, 266, 267, 273, 283, 284, 285, 287, 295, 297, 303, 304, 305, 306, 310, 315, 323, 324, 343, 395, 398, 432, 437, 438, 445, 472, 483, 500, 502, 535, 564, 580, 586, 590, 599, 602, 603, 607, 620, 627, 628, 630, 631, 632, 636, 639, 663, 671, 692, 694, 695, 706, 719, 734, 766, 799, 804, 870, 924, 938, 961, 965, 968, 971, 974, 977, 987, 989, 992, 1010, 1012, 1062, 1064, 1081, 1086, 1100, 1110, 1117], "index": [7, 13, 23, 29, 38, 50, 52, 89, 109, 110, 129, 130, 139, 152, 154, 159, 164, 166, 167, 169, 170, 172, 174, 178, 179, 181, 184, 186, 189, 190, 192, 193, 195, 198, 200, 203, 205, 206, 208, 209, 211, 212, 214, 215, 216, 219, 221, 222, 224, 226, 227, 228, 230, 231, 233, 242, 243, 245, 246, 251, 252, 253, 255, 257, 259, 261, 262, 265, 266, 267, 271, 272, 274, 277, 280, 283, 284, 285, 287, 310, 317, 341, 357, 383, 411, 419, 514, 517, 520, 523, 526, 529, 530, 532, 570, 571, 573, 578, 617, 657, 685, 697, 719, 762, 929, 932, 936, 987, 988, 1000, 1003, 1010, 1016, 1017, 1018, 1019, 1021, 1023, 1036, 1042, 1047, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1078, 1080, 1082, 1084, 1085, 1087, 1091, 1092, 1102, 1104, 1109], "out": [7, 43, 44, 49, 54, 62, 64, 74, 84, 105, 112, 119, 125, 126, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 143, 144, 148, 153, 154, 161, 162, 165, 169, 172, 173, 181, 186, 189, 194, 202, 208, 209, 211, 218, 221, 225, 229, 258, 284, 285, 296, 310, 316, 321, 332, 353, 371, 377, 378, 386, 397, 404, 411, 412, 413, 417, 419, 420, 425, 430, 433, 435, 437, 462, 463, 478, 481, 491, 507, 513, 530, 537, 539, 553, 568, 610, 613, 648, 663, 682, 685, 698, 709, 715, 734, 735, 744, 766, 774, 779, 793, 794, 797, 801, 805, 808, 812, 822, 853, 859, 863, 870, 871, 872, 889, 890, 906, 924, 927, 937, 938, 940, 952, 957, 964, 968, 1008, 1009, 1016, 1042, 1045, 1072, 1077, 1079, 1085, 1087, 1088, 1093, 1099, 1118], "rang": [7, 29, 41, 62, 89, 107, 112, 140, 153, 154, 155, 160, 169, 172, 174, 177, 178, 181, 184, 186, 189, 190, 193, 200, 201, 203, 204, 206, 207, 208, 211, 212, 214, 216, 217, 220, 221, 226, 227, 229, 230, 232, 234, 236, 244, 245, 246, 252, 254, 255, 262, 263, 265, 266, 268, 271, 272, 274, 283, 285, 287, 302, 356, 383, 399, 401, 447, 481, 484, 485, 489, 513, 529, 530, 566, 568, 571, 574, 675, 713, 716, 718, 719, 730, 863, 870, 919, 925, 928, 960, 963, 965, 970, 972, 974, 976, 986, 987, 995, 999, 1016, 1020, 1021, 1022, 1023, 1033, 1035, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1074, 1077, 1085, 1087, 1117, 1118, 1128], "48": [7, 136, 143, 152, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 306, 870], "append": [7, 152, 153, 154, 155, 156, 166, 171, 173, 176, 181, 183, 184, 185, 186, 189, 192, 197, 198, 199, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 306, 419, 422, 512, 530, 572, 588, 600, 627, 727, 739, 754, 766, 793, 794, 808, 811, 832, 845, 870, 879, 892, 928, 960, 966, 967, 980, 996, 1001, 1004, 1006, 1011, 1014, 1015, 1041, 1089, 1093], "one": [7, 21, 27, 31, 39, 43, 44, 49, 58, 61, 62, 65, 79, 83, 84, 105, 109, 110, 112, 115, 121, 123, 127, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 148, 153, 154, 155, 157, 162, 165, 166, 169, 171, 173, 176, 181, 183, 184, 185, 186, 189, 192, 194, 195, 202, 205, 208, 213, 215, 216, 218, 219, 221, 224, 225, 228, 231, 233, 243, 246, 249, 252, 253, 255, 257, 259, 263, 267, 272, 273, 275, 284, 295, 296, 301, 302, 307, 310, 316, 328, 333, 340, 351, 356, 358, 366, 371, 373, 374, 378, 381, 383, 388, 391, 399, 400, 401, 403, 407, 411, 413, 419, 420, 422, 423, 425, 427, 431, 432, 435, 436, 437, 442, 444, 445, 447, 448, 456, 461, 463, 481, 484, 486, 487, 491, 492, 494, 513, 524, 530, 541, 542, 550, 551, 553, 554, 555, 556, 557, 568, 569, 577, 588, 591, 595, 610, 617, 634, 635, 638, 639, 640, 643, 652, 663, 682, 684, 685, 693, 695, 696, 697, 698, 699, 705, 707, 709, 717, 727, 734, 741, 744, 754, 760, 766, 774, 782, 786, 791, 792, 793, 799, 808, 810, 811, 826, 845, 859, 863, 865, 866, 867, 870, 871, 872, 873, 875, 879, 882, 883, 889, 890, 892, 893, 896, 899, 900, 902, 908, 909, 910, 911, 913, 916, 919, 922, 924, 925, 926, 933, 937, 940, 943, 946, 952, 955, 956, 958, 959, 961, 963, 964, 966, 972, 974, 975, 977, 988, 989, 992, 993, 994, 996, 1000, 1001, 1003, 1005, 1006, 1010, 1012, 1014, 1015, 1022, 1032, 1035, 1042, 1043, 1068, 1069, 1070, 1071, 1073, 1077, 1078, 1080, 1082, 1088, 1089, 1090, 1094, 1098, 1100, 1105, 1107, 1120, 1123], "49": [7, 143, 152, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 306, 678, 811, 952, 966], "extend": [7, 134, 135, 166, 183, 184, 186, 191, 197, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 259, 263, 267, 273, 305, 440, 447, 456, 481, 554, 556, 557, 609, 727, 798, 996, 1001, 1011, 1069, 1081], "slice": [7, 29, 89, 154, 156, 165, 169, 170, 172, 174, 179, 182, 183, 186, 193, 205, 206, 208, 209, 212, 216, 217, 223, 224, 226, 227, 228, 230, 242, 245, 247, 252, 255, 262, 265, 266, 268, 271, 272, 274, 283, 284, 287, 719, 764, 925, 987, 1000, 1004, 1023, 1036, 1047, 1062, 1078, 1082, 1084, 1086, 1091], "inclus": [7, 172, 186, 213, 225, 377, 570, 1025, 1085], "exclus": [7, 160, 186, 208, 225, 262, 359, 570, 705, 892, 925, 974, 1010, 1014, 1025, 1085], "51": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 592, 593, 594, 595, 848, 850, 1068], "l\u00f6schen": [7, 176, 182, 186, 310], "52": [7, 143, 152, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 306, 872, 1068], "del": [7, 37, 152, 155, 156, 166, 181, 183, 186, 189, 197, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 303, 305, 971, 996, 1012], "53": [7, 136, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 317, 461, 462, 688, 746, 848, 870, 940, 952, 1068, 1069], "iter": [7, 24, 29, 62, 153, 156, 160, 165, 169, 170, 172, 174, 177, 178, 182, 184, 186, 190, 191, 193, 194, 196, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 220, 223, 225, 227, 228, 232, 244, 247, 253, 261, 262, 264, 268, 273, 283, 286, 287, 295, 310, 316, 368, 370, 383, 419, 444, 494, 513, 530, 572, 573, 574, 578, 581, 588, 591, 593, 595, 600, 650, 657, 666, 687, 713, 719, 889, 961, 965, 967, 976, 989, 999, 1013, 1014, 1020, 1021, 1022, 1023, 1036, 1047, 1059, 1062, 1064, 1074, 1076, 1089, 1091, 1128], "mittel": [7, 11, 23, 156, 166, 168, 184, 186, 191, 328, 1112, 1115, 1124, 1132], "54": [7, 143, 152, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 304, 305, 317, 592, 593, 594, 595, 695, 756, 848, 870, 952, 1068], "element": [7, 8, 34, 37, 105, 108, 109, 110, 112, 153, 155, 156, 166, 171, 172, 177, 178, 181, 183, 184, 186, 187, 189, 192, 196, 197, 198, 202, 205, 206, 208, 212, 214, 215, 221, 224, 225, 228, 232, 253, 257, 260, 263, 272, 285, 304, 305, 341, 368, 383, 391, 395, 398, 483, 497, 500, 502, 511, 530, 535, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 581, 585, 588, 592, 595, 617, 635, 638, 640, 657, 671, 685, 687, 719, 727, 934, 966, 968, 985, 996, 1001, 1002, 1011, 1013, 1046, 1072, 1089, 1098, 1121, 1128], "55": [7, 143, 152, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 304, 305, 306, 317, 394, 419, 625, 626, 627, 628, 630, 940, 1021], "def": [7, 62, 152, 153, 156, 166, 171, 172, 176, 181, 183, 184, 186, 189, 192, 193, 198, 199, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 251, 253, 263, 267, 273, 278, 281, 285, 305, 306, 419, 677, 918, 961, 962, 963, 966, 967, 968, 971, 972, 974, 976, 978, 980, 981, 982, 983, 984, 985, 986, 992, 995, 1005, 1006, 1011, 1015, 1046, 1052, 1059, 1060, 1061, 1080, 1085, 1086, 1088, 1098, 1099], "is_integ": [7, 186, 243], "elem": [7, 152, 156, 166, 171, 176, 181, 183, 186, 198, 205, 208, 213, 218, 243, 246, 253, 263, 267, 273, 497, 594, 596, 643, 663, 665, 667, 670, 684, 685, 687, 707, 968, 1011, 1015], "type": [7, 29, 49, 77, 82, 99, 109, 110, 113, 125, 126, 129, 132, 133, 136, 138, 140, 148, 152, 153, 156, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 182, 183, 185, 186, 189, 192, 193, 194, 197, 198, 202, 207, 210, 211, 213, 215, 219, 220, 223, 225, 229, 231, 233, 234, 236, 244, 246, 249, 250, 253, 261, 262, 263, 266, 267, 273, 278, 282, 283, 284, 286, 287, 302, 303, 304, 305, 310, 312, 313, 321, 343, 354, 355, 362, 367, 372, 373, 377, 379, 383, 385, 386, 389, 392, 393, 394, 395, 396, 399, 401, 402, 404, 405, 409, 414, 415, 419, 435, 437, 446, 449, 457, 463, 493, 497, 518, 527, 537, 539, 545, 546, 550, 552, 553, 563, 571, 600, 606, 610, 613, 615, 617, 619, 625, 637, 638, 643, 648, 649, 657, 663, 674, 675, 677, 682, 683, 684, 685, 694, 695, 697, 698, 699, 704, 714, 715, 716, 717, 718, 719, 722, 725, 727, 732, 735, 754, 766, 792, 796, 808, 811, 823, 826, 829, 840, 842, 843, 846, 854, 862, 863, 865, 870, 871, 874, 879, 888, 889, 892, 895, 896, 897, 898, 899, 909, 921, 930, 933, 937, 938, 940, 957, 959, 962, 965, 968, 972, 977, 978, 979, 986, 990, 992, 994, 995, 996, 1000, 1002, 1003, 1004, 1009, 1010, 1012, 1014, 1016, 1029, 1040, 1041, 1059, 1062, 1064, 1069, 1073, 1077, 1082, 1083, 1085, 1093, 1098, 1100, 1118, 1119], "int": [7, 21, 45, 106, 109, 110, 135, 144, 153, 155, 166, 172, 176, 181, 183, 184, 186, 189, 193, 194, 199, 202, 205, 206, 208, 211, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 252, 253, 255, 263, 267, 273, 281, 285, 303, 305, 306, 332, 333, 335, 337, 339, 341, 342, 343, 345, 346, 347, 351, 352, 353, 355, 356, 357, 361, 371, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 386, 387, 388, 391, 393, 394, 398, 399, 400, 401, 402, 403, 407, 408, 442, 449, 456, 457, 461, 462, 463, 464, 467, 470, 471, 473, 475, 476, 477, 479, 481, 489, 491, 493, 495, 496, 497, 498, 499, 501, 511, 513, 518, 521, 527, 530, 537, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 560, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 588, 591, 592, 593, 594, 595, 596, 600, 602, 606, 607, 610, 612, 613, 615, 616, 617, 619, 624, 625, 626, 627, 628, 629, 630, 631, 635, 636, 638, 639, 642, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 677, 678, 679, 680, 682, 683, 684, 685, 687, 689, 696, 697, 698, 699, 702, 704, 707, 709, 722, 725, 730, 732, 737, 744, 746, 748, 750, 754, 758, 760, 762, 771, 776, 783, 803, 823, 866, 870, 884, 886, 888, 889, 890, 892, 895, 896, 897, 898, 899, 902, 904, 907, 909, 911, 913, 915, 921, 924, 927, 928, 930, 933, 934, 937, 938, 940, 952, 956, 958, 983, 994, 995, 1003, 1004, 1006, 1009, 1015, 1016, 1031, 1054, 1056, 1059, 1060, 1086, 1105, 1110], "return": [7, 21, 27, 62, 106, 129, 132, 134, 135, 136, 140, 144, 152, 153, 156, 166, 170, 172, 174, 176, 181, 183, 184, 186, 189, 192, 193, 194, 198, 199, 202, 205, 206, 208, 211, 213, 215, 218, 221, 225, 228, 231, 235, 236, 243, 246, 251, 253, 257, 263, 267, 278, 281, 284, 285, 305, 306, 332, 333, 335, 339, 341, 343, 352, 361, 371, 377, 383, 384, 386, 393, 394, 397, 398, 400, 401, 403, 407, 419, 426, 435, 436, 437, 438, 442, 444, 447, 456, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 481, 488, 489, 493, 494, 497, 513, 521, 527, 530, 537, 538, 539, 541, 542, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 560, 562, 563, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 591, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 619, 623, 624, 625, 626, 627, 628, 629, 630, 631, 635, 640, 642, 643, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 677, 678, 679, 680, 681, 682, 685, 687, 692, 693, 695, 696, 697, 698, 699, 705, 707, 709, 713, 714, 715, 717, 722, 729, 737, 744, 748, 756, 758, 780, 782, 786, 803, 823, 870, 884, 886, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 904, 907, 908, 909, 919, 921, 924, 930, 933, 934, 937, 938, 940, 952, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 976, 980, 981, 983, 984, 985, 1006, 1008, 1010, 1011, 1012, 1015, 1021, 1037, 1039, 1043, 1046, 1047, 1054, 1056, 1059, 1083, 1085, 1086, 1088, 1098, 1105, 1110], "els": [7, 21, 42, 49, 62, 109, 110, 133, 135, 136, 139, 148, 153, 156, 166, 169, 172, 176, 184, 186, 189, 192, 193, 194, 198, 202, 205, 206, 209, 210, 211, 213, 217, 218, 223, 225, 228, 232, 234, 243, 245, 246, 251, 253, 263, 267, 273, 285, 295, 306, 317, 339, 345, 356, 361, 372, 378, 379, 385, 389, 392, 396, 397, 405, 409, 414, 415, 419, 427, 428, 442, 466, 473, 476, 530, 553, 577, 578, 588, 595, 609, 629, 637, 642, 675, 696, 698, 705, 709, 716, 718, 719, 748, 758, 782, 793, 794, 799, 818, 820, 823, 829, 850, 871, 884, 887, 892, 918, 919, 921, 924, 926, 964, 971, 983, 984, 987, 998, 1006, 1012, 1086, 1091, 1117], "fals": [7, 45, 109, 110, 136, 138, 152, 153, 166, 171, 176, 181, 183, 184, 186, 189, 192, 198, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 257, 263, 267, 273, 278, 285, 304, 319, 335, 339, 356, 393, 419, 553, 578, 610, 617, 640, 652, 705, 709, 786, 799, 826, 918, 919, 924, 926, 946, 961, 976, 980, 983, 996, 997, 999, 1000, 1004, 1082, 1083, 1086, 1088, 1105], "56": [7, 129, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 304, 305, 317, 356, 460, 548, 845, 870, 872, 1068, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "x": [7, 23, 31, 41, 60, 62, 138, 144, 152, 153, 154, 156, 166, 176, 181, 183, 185, 186, 189, 192, 202, 205, 208, 209, 213, 215, 221, 225, 228, 231, 233, 234, 243, 246, 250, 253, 262, 263, 267, 306, 310, 352, 355, 356, 362, 377, 378, 380, 383, 386, 387, 391, 393, 401, 403, 407, 430, 481, 491, 528, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 551, 553, 555, 556, 563, 570, 578, 638, 639, 640, 642, 657, 659, 660, 661, 678, 689, 698, 792, 793, 794, 797, 801, 803, 808, 811, 813, 814, 822, 823, 848, 851, 855, 857, 863, 870, 871, 872, 888, 898, 904, 906, 907, 915, 919, 940, 941, 942, 943, 948, 952, 954, 955, 960, 961, 989, 991, 997, 1005, 1006, 1008, 1009, 1010, 1013, 1014, 1018, 1042, 1069, 1086, 1098, 1099, 1105], "filter": [7, 29, 105, 108, 112, 150, 153, 186, 193, 206, 223, 246, 252, 255, 259, 260, 267, 284, 286, 483, 500, 535, 693, 694, 719, 791, 810, 859, 1062, 1078, 1084, 1087, 1091, 1105], "57": [7, 129, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 306, 426, 431, 848, 870, 883, 941, 942, 1068], "zero": [7, 31, 37, 129, 135, 151, 153, 154, 156, 166, 176, 184, 186, 189, 202, 208, 213, 215, 218, 221, 225, 228, 243, 267, 310, 332, 341, 359, 684, 694, 698, 725, 737, 752, 797, 826, 841, 848, 872, 892, 913, 919, 922, 925, 928, 933, 934, 1000], "two": [7, 12, 17, 29, 31, 33, 34, 35, 37, 41, 43, 53, 68, 84, 105, 121, 123, 126, 127, 132, 133, 134, 135, 148, 153, 154, 155, 161, 165, 166, 171, 176, 177, 179, 181, 183, 184, 186, 189, 190, 192, 194, 195, 196, 200, 202, 203, 206, 208, 211, 212, 213, 215, 216, 221, 222, 224, 225, 227, 229, 230, 231, 243, 245, 246, 249, 251, 252, 253, 261, 263, 265, 266, 267, 271, 272, 273, 277, 280, 296, 302, 310, 316, 319, 328, 329, 340, 347, 377, 383, 385, 386, 389, 391, 392, 395, 396, 398, 400, 403, 405, 409, 414, 415, 417, 418, 419, 420, 429, 432, 445, 447, 457, 461, 462, 481, 491, 493, 513, 521, 524, 530, 546, 551, 553, 570, 593, 635, 636, 637, 638, 639, 675, 681, 684, 685, 687, 694, 697, 699, 716, 718, 719, 764, 766, 769, 831, 833, 853, 863, 865, 870, 871, 872, 889, 892, 893, 900, 910, 911, 919, 924, 933, 938, 948, 958, 966, 972, 975, 978, 983, 986, 987, 993, 996, 999, 1010, 1012, 1014, 1020, 1023, 1025, 1026, 1027, 1030, 1032, 1033, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1059, 1062, 1063, 1069, 1071, 1077, 1085, 1099, 1105, 1118, 1128, 1133], "58": [7, 136, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 317, 419, 872, 941, 942, 952, 1068, 1069], "59": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 317, 942, 943, 952, 1068], "three": [7, 12, 31, 35, 37, 42, 62, 109, 110, 134, 146, 153, 154, 165, 166, 169, 170, 176, 181, 183, 184, 186, 192, 200, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 251, 252, 253, 255, 261, 262, 263, 267, 272, 273, 285, 310, 328, 397, 572, 617, 799, 808, 811, 826, 863, 870, 872, 892, 924, 933, 968, 978, 996, 1000, 1010, 1012, 1014, 1026, 1032, 1063, 1064, 1119, 1133], "60": [7, 62, 105, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 233, 234, 243, 246, 250, 253, 263, 267, 273, 285, 304, 305, 461, 462, 463, 475, 476, 477, 484, 808, 870, 871, 872, 966, 1068, 1069], "61": [7, 62, 143, 154, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 310, 315, 1068, 1069], "62": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 808, 1021, 1068], "63": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 310, 315, 1021, 1068], "k": [7, 29, 135, 154, 156, 166, 169, 181, 183, 186, 189, 193, 194, 205, 208, 213, 215, 218, 221, 228, 231, 243, 246, 252, 253, 263, 273, 283, 285, 287, 311, 312, 331, 459, 592, 635, 697, 719, 826, 873, 908, 1062, 1065, 1071, 1078, 1098], "v": [7, 20, 23, 31, 87, 115, 129, 133, 140, 154, 157, 160, 166, 170, 172, 174, 178, 180, 181, 184, 185, 186, 191, 193, 194, 195, 196, 202, 205, 206, 208, 209, 211, 212, 214, 220, 223, 224, 226, 229, 231, 235, 242, 243, 246, 249, 254, 262, 264, 268, 272, 273, 279, 285, 296, 310, 407, 431, 436, 457, 483, 517, 535, 592, 612, 635, 639, 643, 648, 649, 650, 657, 658, 659, 660, 661, 666, 669, 670, 671, 677, 683, 684, 685, 708, 715, 718, 719, 728, 733, 736, 738, 743, 747, 749, 753, 757, 758, 759, 761, 763, 766, 768, 770, 774, 775, 777, 781, 784, 787, 792, 796, 799, 800, 803, 826, 828, 855, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 933, 934, 940, 983, 1006, 1091, 1100, 1101, 1113, 1115, 1132, 1134], "65": [7, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 625, 928, 1068, 1069], "item": [7, 133, 153, 155, 166, 171, 176, 181, 183, 186, 189, 192, 193, 197, 198, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 233, 237, 238, 240, 243, 246, 251, 253, 263, 267, 273, 285, 291, 304, 395, 399, 401, 420, 684, 716, 718, 719, 933, 934, 968, 969, 970, 976, 1002, 1009, 1012, 1014, 1052, 1091, 1098], "66": [7, 136, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 615, 1021, 1068, 1069], "": [7, 8, 14, 20, 23, 34, 36, 37, 39, 42, 43, 44, 47, 54, 58, 60, 61, 62, 64, 65, 77, 88, 103, 107, 108, 112, 113, 119, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 169, 171, 172, 176, 177, 181, 183, 184, 185, 186, 187, 189, 192, 194, 195, 198, 199, 202, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 221, 225, 228, 231, 234, 237, 238, 240, 243, 246, 249, 250, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 267, 270, 273, 275, 277, 280, 283, 284, 285, 287, 291, 295, 296, 304, 305, 307, 310, 313, 314, 328, 330, 343, 345, 351, 356, 377, 378, 381, 390, 395, 397, 399, 400, 401, 402, 403, 407, 418, 419, 420, 422, 423, 425, 427, 428, 431, 432, 435, 436, 437, 439, 440, 441, 442, 445, 446, 457, 459, 460, 462, 463, 467, 478, 480, 491, 492, 493, 494, 497, 503, 505, 506, 514, 517, 520, 521, 523, 526, 529, 532, 539, 541, 542, 545, 546, 549, 550, 552, 553, 562, 572, 582, 583, 593, 600, 602, 607, 609, 612, 613, 615, 619, 622, 626, 636, 637, 639, 641, 643, 646, 647, 648, 649, 652, 656, 657, 663, 672, 675, 677, 680, 684, 685, 687, 689, 693, 694, 695, 697, 699, 707, 709, 710, 715, 717, 718, 719, 725, 734, 737, 739, 744, 750, 752, 762, 771, 774, 786, 791, 792, 793, 794, 797, 798, 801, 803, 804, 808, 809, 810, 812, 816, 818, 820, 822, 823, 824, 826, 828, 829, 845, 848, 849, 851, 852, 854, 855, 857, 858, 859, 863, 866, 870, 871, 872, 873, 874, 881, 882, 883, 884, 886, 887, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 900, 902, 904, 906, 907, 909, 910, 911, 915, 916, 919, 921, 924, 925, 926, 928, 929, 930, 932, 934, 936, 937, 938, 943, 952, 954, 955, 956, 957, 958, 959, 961, 962, 963, 966, 967, 969, 970, 971, 975, 976, 983, 987, 988, 989, 992, 996, 997, 1003, 1006, 1009, 1010, 1013, 1014, 1021, 1026, 1033, 1044, 1051, 1052, 1053, 1055, 1063, 1070, 1072, 1073, 1076, 1077, 1080, 1087, 1088, 1089, 1090, 1092, 1093, 1098, 1099, 1104, 1107, 1109, 1110, 1113, 1118, 1120, 1123, 1136], "rot": [7, 186, 197], "gruen": [7, 186], "blau": [7, 186, 197], "67": [7, 143, 154, 166, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 419, 484, 928, 1009, 1021, 1068, 1069], "69": [7, 60, 138, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 1068, 1069, 1088], "schwarz": [7, 186, 197], "70": [7, 60, 135, 143, 166, 171, 173, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 419, 484, 870, 871, 872, 966, 1068, 1069, 1098], "add": [7, 23, 41, 43, 48, 64, 113, 115, 117, 128, 129, 133, 134, 135, 139, 140, 144, 148, 153, 162, 165, 166, 169, 172, 181, 183, 184, 186, 189, 192, 194, 198, 202, 205, 206, 208, 213, 218, 221, 225, 228, 231, 237, 238, 243, 246, 249, 253, 257, 263, 267, 273, 278, 280, 285, 310, 316, 358, 359, 398, 399, 407, 420, 421, 427, 430, 437, 439, 440, 456, 457, 461, 466, 467, 478, 486, 493, 495, 513, 527, 537, 550, 551, 553, 555, 624, 625, 626, 635, 643, 663, 674, 685, 693, 707, 709, 732, 734, 735, 739, 746, 754, 756, 766, 779, 782, 792, 865, 870, 871, 872, 900, 924, 926, 928, 934, 939, 952, 954, 961, 962, 984, 988, 996, 1014, 1019, 1086, 1098, 1099, 1105], "71": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 941, 942, 1068, 1069], "72": [7, 143, 166, 171, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 302, 305, 310, 315, 545, 857, 952, 1021, 1068, 1069], "remov": [7, 56, 98, 108, 112, 139, 140, 153, 155, 166, 181, 186, 192, 198, 206, 208, 213, 215, 221, 225, 228, 232, 233, 239, 246, 248, 249, 263, 267, 269, 270, 273, 284, 285, 422, 423, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 500, 501, 502, 507, 511, 530, 535, 565, 571, 588, 621, 643, 696, 707, 708, 709, 714, 717, 718, 719, 727, 744, 754, 762, 785, 792, 793, 794, 795, 796, 799, 800, 813, 814, 816, 818, 819, 820, 821, 823, 824, 830, 831, 832, 833, 835, 836, 838, 840, 846, 862, 873, 883, 885, 891, 893, 896, 901, 903, 906, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 952, 956, 966, 986, 996, 1011, 1012, 1013, 1046], "73": [7, 143, 154, 166, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 1068], "74": [7, 136, 138, 143, 166, 176, 181, 183, 186, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 848, 857, 1021, 1068, 1069], "75": [7, 143, 166, 176, 181, 183, 186, 189, 192, 194, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 419, 1068, 1069], "sum": [7, 37, 62, 166, 186, 190, 191, 205, 206, 208, 211, 213, 221, 224, 225, 228, 231, 246, 253, 368, 383, 398, 400, 401, 403, 467, 493, 513, 537, 551, 553, 566, 570, 618, 632, 719, 925, 983, 999, 1082], "100": [7, 31, 132, 133, 138, 148, 152, 153, 166, 176, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 224, 225, 228, 231, 233, 234, 243, 246, 249, 250, 251, 253, 257, 263, 267, 273, 284, 285, 305, 306, 310, 315, 368, 374, 375, 417, 420, 433, 442, 475, 476, 484, 503, 565, 566, 567, 568, 569, 571, 572, 573, 574, 588, 635, 652, 673, 737, 776, 822, 825, 848, 865, 904, 926, 928, 932, 933, 941, 942, 967, 999, 1003, 1021, 1052, 1098], "5050": [7, 166, 186, 208, 221, 228, 253], "bestimmen": [7, 186], "maximum": [7, 29, 126, 166, 176, 177, 179, 181, 184, 186, 189, 190, 196, 200, 202, 203, 205, 206, 208, 212, 213, 215, 216, 218, 221, 222, 224, 225, 227, 229, 230, 245, 246, 252, 253, 265, 266, 267, 271, 272, 306, 358, 631, 709, 719, 727, 803, 863, 928, 934, 1006, 1023, 1025, 1026, 1027, 1030, 1033, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1063, 1067, 1068, 1069, 1070, 1093, 1128], "zwei": [7, 63, 142, 152, 160, 166, 178, 181, 183, 186, 189, 202, 205, 213, 218, 221, 225, 231, 253, 273, 281, 285, 305, 501, 592, 593, 594, 595, 853, 1115, 1132], "inlin": [7, 113, 154, 160, 172, 186, 202, 231, 234, 236, 258, 285, 378, 400, 403, 524, 539, 553, 592, 629, 681, 699, 960, 1039], "ohn": [7, 23, 150, 152, 160, 186, 189, 788, 854, 1114, 1134, 1135, 1136], "funktion": [7, 23, 156, 160, 166, 177, 178, 179, 183, 186, 189, 192, 213, 215, 218, 221, 253, 285, 305, 1128], "666": [7, 41, 49, 106, 152, 153, 166, 176, 181, 183, 186, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 301, 302, 303, 305, 306, 341, 421, 440, 495, 496, 497, 498, 499, 503, 504, 505, 506, 508, 509, 511, 518, 530, 537, 541, 550, 552, 575, 576, 577, 578, 579, 581, 584, 592, 595, 615, 619, 648, 650, 657, 659, 660, 661, 665, 685, 689, 692, 694, 699, 702, 713, 714, 715, 724, 725, 959, 963, 1005, 1006, 1009, 1110], "var1": [7, 176, 186, 1029], "var2": [7, 176, 186, 1029], "6712": [7, 186, 208], "isn": [7, 132, 148, 186, 252, 255, 318, 332, 383, 570, 574, 613, 636, 663, 683, 870, 1008, 1105], "fehler": [7, 160, 166, 186, 310, 315], "link": [7, 13, 17, 27, 31, 43, 64, 102, 103, 112, 126, 129, 130, 132, 133, 139, 140, 141, 142, 143, 144, 150, 152, 160, 166, 173, 186, 209, 211, 239, 240, 248, 249, 257, 262, 269, 270, 275, 310, 323, 324, 373, 386, 392, 396, 400, 405, 409, 414, 415, 420, 423, 425, 426, 431, 441, 455, 478, 483, 484, 485, 486, 487, 488, 489, 490, 493, 513, 520, 521, 535, 550, 637, 643, 651, 675, 685, 686, 716, 717, 718, 719, 727, 728, 732, 733, 736, 744, 747, 756, 757, 766, 768, 770, 775, 781, 784, 787, 796, 846, 848, 853, 862, 871, 878, 908, 911, 913, 940, 941, 942, 943, 945, 946, 947, 948, 950, 952, 958, 1063, 1092, 1102, 1105, 1112, 1113, 1120], "\u212c": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2145": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u212d": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2102": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2146": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03dd": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2130": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2147": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2131": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u02c7": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u210f": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u210b": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2111": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2148": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2110": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2124": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2112": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2133": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2115": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2134": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u210c": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2119": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u210d": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u211a": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u211c": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u211b": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u211d": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03f5": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03d5": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03c5": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03b5": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03f0": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03c6": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03d6": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03f1": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03c2": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u03d1": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "\u2128": [8, 24, 25, 26, 37, 40, 41, 42, 43, 44, 49, 53, 54, 62, 72, 73, 96, 105, 112, 113, 169, 170, 172, 173, 174, 175, 177, 179, 180, 187, 190, 193, 194, 195, 196, 200, 203, 206, 209, 211, 212, 216, 219, 222, 224, 227, 233, 237, 238, 239, 240, 241, 248, 249, 251, 258, 259, 260, 261, 262, 269, 270, 275, 276, 277, 280, 283, 284, 287, 288, 291, 292, 293, 295, 296, 297, 298, 299, 301, 310, 317, 318, 319, 320, 321, 322, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 456, 457, 464, 465, 466, 467, 468, 470, 471, 472, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 570, 571, 572, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 600, 602, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 652, 656, 657, 662, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 709, 710, 717, 721, 722, 724, 725, 727, 729, 730, 732, 734, 735, 737, 743, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 768, 769, 771, 773, 774, 776, 779, 780, 782, 783, 785, 786, 788, 790, 791, 792, 797, 798, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 822, 823, 824, 825, 826, 827, 828, 829, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 857, 858, 859, 864, 865, 866, 867, 870, 873, 879, 880, 881, 882, 883, 884, 886, 887, 888, 889, 890, 891, 892, 895, 896, 897, 898, 899, 902, 904, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 921, 922, 924, 926, 927, 928, 940, 941, 942, 943, 948, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 968, 971, 972, 974, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1019, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1072, 1073, 1075, 1076, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1094, 1098, 1099, 1100, 1101, 1128], "mittwoch": [8, 177, 179, 187], "00": [8, 135, 136, 138, 143, 148, 156, 160, 168, 169, 170, 172, 173, 174, 175, 177, 179, 181, 183, 185, 187, 190, 194, 200, 202, 208, 218, 221, 222, 249, 250, 257, 258, 260, 303, 411, 419, 433, 688, 710, 717, 793, 794, 848, 870, 871, 872, 924, 943, 952, 990, 1098], "tectrain": [8, 11, 156, 168, 177, 179, 187, 190, 193, 194, 195, 196, 200, 212, 224, 328], "html": [8, 17, 18, 23, 38, 39, 130, 139, 152, 160, 177, 187, 190, 193, 197, 200, 203, 206, 209, 225, 256, 305, 615, 722, 737, 743, 826, 848, 934, 938, 1009, 1075], "download": [8, 17, 62, 64, 105, 121, 132, 138, 140, 144, 148, 153, 156, 165, 172, 177, 185, 187, 190, 193, 194, 195, 200, 203, 206, 216, 219, 222, 224, 227, 230, 233, 242, 245, 252, 256, 263, 280, 301, 330, 420, 423, 484, 485, 486, 487, 488, 489, 490, 493, 494, 539, 624, 626, 630, 631, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 685, 687, 826, 828, 848, 850, 863, 870, 871, 872, 882, 948, 954, 988, 1021, 1033, 1042, 1052, 1053, 1055, 1066, 1068, 1070, 1093], "repositori": [8, 23, 76, 96, 108, 115, 120, 129, 136, 139, 147, 151, 160, 162, 169, 170, 180, 185, 187, 190, 194, 195, 196, 200, 203, 206, 211, 212, 216, 219, 222, 224, 227, 233, 241, 249, 259, 260, 262, 266, 272, 276, 277, 280, 284, 288, 295, 309, 310, 315, 483, 500, 535, 719, 766, 1107, 1112], "kurssprach": [8, 177, 187, 196, 212, 224], "kurs": [8, 23, 130, 147, 168, 179, 187, 196, 212, 224, 1112, 1113, 1114, 1122, 1129, 1136], "viel": [8, 23, 151, 156, 160, 166, 177, 187, 196, 202, 212, 213, 224, 243, 1115, 1116, 1122, 1130, 1131], "spezifisch": [8, 177, 187, 196, 212, 224, 1113, 1132, 1135], "unterrichtet": [8, 177, 187, 196, 212, 224], "themenreihenfolg": [8, 177, 187, 196, 212, 224], "herdt": [8, 126, 187, 196, 212, 224], "skriptum": [8, 177, 187, 196, 212, 224, 1128], "\u00fcbernommen": [8, 177, 187, 196, 212, 224], "etwa": [8, 23, 141, 142, 151, 156, 166, 168, 177, 187, 189, 196, 212, 224, 328, 1113, 1115, 1122, 1128, 1129, 1131, 1136], "allgemein": [8, 177, 187, 196, 212, 224, 1128], "allgemeinen": [8, 177, 181, 187, 196, 212, 224, 1131], "dadurch": [8, 177, 187, 196, 212, 224, 328, 1115, 1135], "verwirrend": [8, 177, 187, 196, 212, 224, 1128], "weswegen": [8, 177, 187, 196, 212, 224], "vielen": [8, 23, 151, 176, 187, 196, 212, 224, 328, 1122, 1124], "f\u00e4llen": [8, 23, 177, 187, 196, 212, 224], "ausnahmen": [8, 177, 187, 196, 212, 224], "gemacht": [8, 23, 141, 147, 177, 187, 196, 212, 224, 1128, 1136], "kursstruktur": [8, 187], "sieh": [8, 23, 150, 151, 152, 156, 160, 166, 177, 179, 182, 187, 196, 212, 224, 328, 1113, 1114, 1128], "jjj": [8, 130, 174, 179, 187, 209, 257, 262, 319, 721, 722, 723, 727, 735], "hello": [8, 29, 62, 89, 126, 144, 166, 172, 176, 177, 179, 183, 187, 189, 190, 194, 196, 198, 200, 202, 203, 206, 208, 211, 212, 213, 215, 216, 222, 223, 224, 225, 227, 228, 230, 232, 245, 246, 252, 255, 263, 265, 266, 271, 272, 285, 296, 297, 298, 299, 300, 301, 305, 306, 310, 345, 348, 352, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 542, 545, 615, 637, 643, 646, 663, 668, 669, 670, 671, 675, 716, 718, 719, 723, 726, 728, 731, 733, 736, 743, 747, 751, 757, 763, 768, 770, 775, 778, 781, 784, 787, 793, 794, 797, 798, 830, 832, 837, 838, 845, 862, 873, 895, 919, 940, 941, 942, 952, 954, 956, 957, 958, 965, 972, 973, 974, 975, 979, 987, 991, 992, 998, 1001, 1003, 1007, 1008, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1088, 1092, 1114, 1128], "py": [8, 17, 21, 31, 39, 62, 64, 117, 129, 148, 152, 153, 156, 164, 165, 166, 169, 170, 172, 174, 184, 187, 193, 199, 202, 206, 208, 209, 212, 213, 216, 218, 219, 221, 222, 224, 225, 231, 233, 245, 251, 252, 253, 261, 262, 266, 267, 272, 283, 284, 295, 310, 419, 677, 870, 926, 928, 961, 962, 963, 964, 966, 967, 968, 971, 972, 974, 976, 977, 983, 984, 990, 991, 993, 999, 1005, 1006, 1010, 1016, 1018, 1019, 1020, 1021, 1025, 1026, 1028, 1029, 1031, 1033, 1038, 1042, 1044, 1046, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1066, 1067, 1072, 1080, 1085, 1086, 1091, 1098, 1099], "swap": [8, 29, 135, 171, 177, 187, 189, 196, 208, 211, 212, 224, 229, 230, 239, 248, 249, 269, 270, 385, 389, 392, 396, 405, 409, 414, 415, 513, 637, 675, 716, 718, 719, 752, 796, 807, 808, 862, 994, 1023, 1025, 1026, 1027, 1028, 1030, 1062, 1128, 1132], "exercis": [8, 29, 77, 92, 96, 101, 103, 105, 112, 113, 130, 152, 160, 165, 172, 173, 177, 179, 184, 187, 190, 196, 200, 203, 206, 207, 209, 212, 216, 219, 222, 224, 227, 229, 230, 239, 241, 248, 252, 254, 255, 269, 270, 274, 295, 296, 297, 298, 299, 301, 309, 312, 315, 323, 324, 341, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 434, 442, 482, 503, 504, 505, 506, 508, 509, 510, 515, 535, 602, 603, 617, 637, 675, 703, 716, 718, 719, 720, 727, 789, 793, 794, 796, 800, 807, 817, 819, 821, 846, 856, 862, 878, 901, 903, 912, 920, 939, 946, 987, 988, 1022, 1051, 1062, 1063, 1098, 1118, 1121, 1123, 1128, 1133], "greet": [8, 29, 166, 177, 187, 190, 196, 202, 203, 212, 213, 215, 221, 222, 224, 227, 230, 245, 246, 306, 429, 719, 941, 942, 948, 958, 1023, 1025, 1027, 1030, 1062, 1128], "depend": [8, 13, 28, 29, 62, 77, 112, 126, 129, 130, 133, 134, 140, 144, 163, 165, 177, 187, 190, 195, 196, 202, 203, 208, 209, 212, 218, 221, 222, 224, 227, 230, 245, 262, 270, 276, 310, 325, 333, 349, 351, 359, 362, 378, 395, 407, 413, 417, 421, 425, 428, 432, 435, 442, 448, 482, 494, 520, 522, 530, 610, 636, 684, 707, 717, 719, 725, 778, 789, 796, 800, 807, 810, 821, 846, 856, 863, 871, 889, 941, 952, 956, 958, 965, 987, 988, 990, 1023, 1027, 1036, 1062, 1092, 1093, 1123, 1125, 1128], "time": [8, 29, 35, 37, 42, 52, 62, 72, 75, 84, 88, 97, 109, 110, 112, 113, 123, 132, 133, 134, 135, 137, 138, 140, 153, 154, 157, 165, 169, 171, 172, 173, 177, 183, 185, 187, 190, 192, 194, 195, 196, 202, 203, 205, 208, 209, 212, 213, 221, 222, 224, 227, 228, 230, 231, 245, 246, 249, 252, 253, 255, 258, 259, 261, 262, 263, 267, 270, 280, 283, 284, 287, 296, 317, 328, 345, 353, 367, 373, 376, 399, 401, 406, 407, 410, 411, 412, 413, 417, 422, 433, 435, 436, 439, 445, 494, 524, 537, 544, 546, 587, 588, 642, 649, 663, 677, 685, 687, 698, 705, 709, 717, 719, 737, 739, 743, 744, 746, 758, 764, 766, 768, 781, 784, 787, 791, 797, 798, 799, 805, 806, 810, 826, 857, 862, 863, 870, 871, 872, 882, 892, 898, 899, 900, 904, 907, 908, 910, 913, 916, 922, 924, 925, 926, 927, 928, 933, 955, 956, 962, 966, 972, 975, 976, 987, 988, 989, 992, 999, 1002, 1005, 1006, 1023, 1025, 1027, 1030, 1062, 1068, 1077, 1082, 1093, 1123, 1128, 1134], "dai": [8, 12, 29, 134, 135, 137, 143, 146, 152, 153, 157, 171, 177, 187, 190, 196, 198, 207, 212, 221, 222, 224, 227, 230, 245, 253, 257, 280, 316, 318, 319, 328, 418, 423, 424, 435, 456, 719, 783, 822, 887, 924, 965, 987, 994, 1003, 1023, 1025, 1027, 1030, 1062, 1063, 1070, 1092, 1119, 1120, 1121, 1123, 1128, 1133], "hen": [8, 187], "vehikelkauf": [8, 187], "datentypen": [8, 156, 160, 177, 178, 184, 187, 218, 236, 311, 1115, 1128, 1135], "\u00fcbersicht": [8, 177, 187, 190, 200, 203, 206], "git": [8, 13, 23, 60, 64, 71, 72, 73, 77, 112, 116, 120, 125, 137, 139, 147, 160, 161, 162, 165, 182, 184, 185, 187, 209, 211, 222, 233, 238, 240, 258, 259, 260, 316, 317, 323, 324, 420, 481, 492, 555, 719, 741, 766, 767, 826, 865, 870, 954, 955, 1019, 1107, 1112], "scm": [8, 60, 136, 160, 187, 739], "com": [8, 13, 20, 23, 36, 41, 43, 49, 84, 105, 112, 115, 117, 129, 138, 139, 140, 144, 148, 160, 161, 162, 163, 169, 170, 173, 174, 182, 187, 189, 195, 209, 211, 219, 221, 233, 238, 240, 246, 249, 252, 253, 258, 259, 260, 262, 266, 272, 276, 277, 280, 284, 288, 309, 310, 315, 321, 330, 478, 492, 513, 555, 575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 596, 615, 697, 766, 767, 826, 865, 870, 873, 881, 882, 954, 1019, 1077, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1091], "pep": [8, 129, 177, 187, 259, 261, 262, 283, 284], "The": [8, 13, 17, 29, 30, 39, 48, 52, 56, 58, 61, 62, 64, 77, 83, 89, 98, 105, 106, 107, 108, 109, 110, 112, 116, 126, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 148, 149, 150, 153, 154, 156, 157, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 185, 187, 190, 193, 196, 200, 201, 202, 203, 206, 207, 208, 211, 212, 215, 216, 218, 219, 221, 224, 225, 227, 230, 232, 235, 237, 238, 239, 240, 242, 245, 248, 251, 252, 255, 258, 260, 262, 265, 266, 268, 269, 271, 272, 296, 297, 298, 299, 300, 301, 307, 310, 311, 312, 313, 315, 316, 327, 328, 329, 332, 334, 342, 348, 356, 358, 360, 361, 362, 363, 368, 372, 376, 379, 385, 389, 392, 395, 396, 399, 405, 407, 409, 414, 418, 420, 422, 435, 436, 437, 440, 441, 446, 455, 456, 457, 459, 461, 463, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 497, 500, 502, 535, 536, 538, 542, 543, 545, 554, 555, 556, 557, 558, 561, 564, 572, 580, 586, 590, 599, 602, 603, 608, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 640, 644, 646, 656, 675, 685, 687, 691, 700, 707, 708, 713, 716, 717, 718, 719, 720, 727, 729, 739, 741, 744, 760, 766, 768, 771, 789, 791, 793, 794, 795, 796, 799, 800, 803, 804, 807, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 825, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 856, 862, 866, 870, 871, 872, 885, 887, 891, 893, 896, 897, 898, 899, 901, 903, 906, 910, 911, 913, 914, 917, 920, 923, 924, 925, 934, 937, 938, 941, 944, 945, 946, 947, 948, 949, 950, 951, 954, 955, 956, 957, 958, 959, 963, 965, 966, 969, 970, 973, 974, 975, 977, 978, 979, 986, 988, 990, 992, 993, 1000, 1004, 1007, 1011, 1012, 1014, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1071, 1073, 1074, 1077, 1078, 1080, 1084, 1086, 1092, 1095, 1098, 1100, 1102, 1105, 1115, 1118, 1119, 1121, 1128], "zen": [8, 136, 177, 187, 215, 226, 259, 652], "corei": [8, 154, 165, 168, 169, 172, 174, 177, 179, 185, 187, 190, 193, 200, 203, 206, 216, 219, 230, 233, 242, 266, 272, 310, 315, 1064, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1101], "schaefer": [8, 174, 177, 179, 185, 187], "youtub": [8, 20, 140, 154, 165, 168, 170, 172, 174, 177, 179, 187, 194, 261, 262, 283, 287, 296], "channel": [8, 138, 154, 177, 187, 863, 871, 933], "trainer": [8, 12, 23, 24, 58, 61, 140, 159, 160, 165, 177, 187, 238, 240, 258, 422, 424, 492, 539, 687, 871, 965, 972, 987, 988, 1063, 1078, 1090, 1092, 1098, 1118, 1123], "hacker": [8, 177, 187, 1123], "schier": [8, 177, 187], "anzahl": [8, 177, 187], "sehr": [8, 23, 36, 141, 142, 156, 160, 166, 168, 176, 177, 181, 187, 218, 328, 1113, 1115, 1122, 1125, 1128, 1129, 1131, 1136], "guten": [8, 156, 166, 168, 177, 187, 221, 225, 328, 1117], "tutori": [8, 140, 154, 165, 168, 173, 177, 185, 187, 193, 194, 196, 203, 206, 216, 219, 242, 272, 284, 296, 310, 315, 826, 872, 1016, 1018, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1101], "stil": [8, 177, 187], "besser": [8, 23, 141, 152, 176, 177, 187, 197, 1128], "ander": [8, 156, 166, 177, 187, 197, 205, 218, 305, 310, 315, 319, 328, 792, 1113, 1114, 1117, 1122, 1125, 1130, 1134, 1135], "auswahl": [8, 177, 187], "einleitung": [9, 188], "datatyp": [9, 29, 89, 126, 165, 169, 172, 177, 178, 179, 182, 184, 188, 190, 191, 196, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 222, 223, 224, 226, 227, 229, 232, 242, 244, 247, 254, 262, 264, 268, 274, 284, 286, 296, 297, 298, 299, 300, 301, 310, 315, 349, 356, 541, 570, 638, 719, 933, 965, 970, 972, 973, 974, 975, 979, 987, 998, 1007, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092, 1128], "number": [9, 24, 27, 29, 35, 52, 56, 58, 61, 62, 67, 77, 79, 81, 83, 84, 109, 110, 123, 126, 132, 134, 135, 138, 140, 143, 144, 148, 151, 153, 156, 162, 165, 169, 172, 175, 176, 177, 179, 184, 185, 188, 190, 191, 193, 196, 200, 202, 203, 205, 206, 208, 209, 212, 214, 215, 216, 218, 221, 222, 224, 226, 227, 229, 230, 231, 233, 238, 240, 242, 245, 246, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 271, 272, 275, 283, 284, 287, 296, 301, 310, 317, 328, 333, 335, 337, 339, 341, 342, 343, 349, 353, 355, 356, 367, 378, 394, 398, 403, 407, 411, 417, 419, 429, 447, 448, 456, 481, 489, 491, 494, 496, 507, 513, 540, 560, 568, 571, 578, 594, 619, 628, 631, 640, 652, 678, 685, 687, 717, 719, 725, 727, 734, 737, 746, 748, 760, 762, 768, 776, 780, 791, 799, 806, 832, 851, 853, 855, 857, 859, 871, 882, 883, 886, 890, 891, 892, 897, 898, 899, 900, 919, 924, 925, 933, 934, 938, 940, 943, 963, 964, 966, 968, 969, 970, 980, 992, 993, 994, 999, 1000, 1010, 1011, 1012, 1014, 1015, 1023, 1026, 1027, 1030, 1033, 1034, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1058, 1062, 1063, 1064, 1067, 1072, 1090, 1091, 1093, 1098, 1111, 1120, 1123, 1128], "integ": [9, 37, 74, 75, 87, 151, 153, 155, 170, 171, 172, 174, 178, 182, 188, 191, 195, 202, 205, 206, 208, 211, 214, 217, 218, 219, 221, 226, 229, 235, 247, 254, 267, 274, 286, 310, 333, 334, 339, 349, 352, 354, 355, 356, 367, 378, 380, 382, 383, 394, 395, 399, 405, 409, 414, 415, 456, 457, 460, 478, 513, 541, 567, 570, 618, 632, 636, 637, 639, 675, 678, 704, 716, 718, 719, 725, 900, 910, 911, 912, 919, 959, 972, 975, 1003, 1009, 1015, 1041, 1085, 1087, 1115, 1119, 1134], "string": [9, 29, 41, 49, 57, 89, 96, 105, 113, 130, 135, 160, 170, 171, 172, 174, 177, 178, 181, 184, 188, 190, 191, 193, 194, 196, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 226, 227, 229, 232, 235, 237, 238, 240, 242, 244, 245, 247, 251, 252, 254, 255, 257, 265, 266, 268, 271, 272, 274, 283, 284, 286, 287, 295, 296, 297, 298, 299, 300, 301, 306, 310, 315, 321, 334, 337, 341, 348, 357, 363, 372, 378, 379, 385, 389, 392, 396, 401, 405, 409, 414, 415, 419, 427, 438, 442, 444, 459, 461, 462, 463, 466, 468, 471, 472, 473, 475, 476, 477, 478, 494, 495, 496, 501, 512, 513, 521, 527, 530, 536, 538, 541, 542, 545, 560, 562, 579, 582, 583, 584, 588, 591, 592, 593, 594, 595, 596, 599, 603, 614, 616, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 637, 638, 639, 641, 643, 644, 648, 663, 667, 669, 670, 671, 672, 675, 677, 679, 680, 684, 694, 695, 696, 697, 699, 716, 717, 718, 719, 798, 889, 900, 904, 907, 911, 919, 924, 933, 937, 964, 965, 968, 976, 985, 987, 992, 1000, 1014, 1021, 1022, 1023, 1028, 1033, 1036, 1037, 1038, 1041, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1075, 1076, 1077, 1078, 1080, 1083, 1115, 1128], "compound": [9, 29, 89, 126, 169, 172, 177, 178, 179, 188, 190, 196, 200, 201, 203, 204, 206, 207, 209, 210, 212, 214, 216, 217, 222, 223, 224, 226, 227, 229, 230, 232, 244, 245, 252, 255, 262, 264, 265, 266, 268, 271, 272, 274, 283, 284, 286, 287, 296, 297, 298, 299, 300, 301, 310, 333, 364, 383, 719, 965, 972, 973, 974, 975, 979, 987, 1020, 1021, 1022, 1023, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092, 1128], "list": [9, 27, 29, 36, 62, 89, 98, 112, 117, 126, 129, 130, 133, 140, 144, 155, 160, 162, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 184, 185, 188, 190, 191, 193, 196, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 223, 224, 226, 227, 229, 230, 232, 234, 238, 239, 242, 244, 245, 247, 248, 249, 252, 254, 255, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 274, 283, 284, 286, 287, 295, 302, 305, 307, 310, 314, 315, 316, 328, 386, 392, 396, 397, 405, 409, 411, 413, 414, 415, 419, 420, 423, 432, 439, 441, 442, 481, 483, 491, 494, 527, 529, 531, 535, 539, 540, 545, 570, 586, 599, 603, 622, 632, 637, 640, 675, 683, 689, 694, 707, 708, 716, 717, 718, 719, 720, 728, 732, 733, 736, 743, 744, 747, 757, 768, 770, 774, 775, 781, 784, 787, 792, 793, 794, 795, 796, 799, 800, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 833, 834, 837, 838, 840, 841, 842, 843, 844, 846, 854, 862, 871, 891, 893, 895, 901, 903, 911, 913, 917, 920, 923, 925, 940, 942, 957, 961, 964, 965, 968, 969, 970, 983, 985, 987, 988, 994, 995, 1000, 1001, 1002, 1003, 1006, 1012, 1014, 1015, 1016, 1021, 1023, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1054, 1056, 1059, 1061, 1062, 1063, 1064, 1069, 1072, 1082, 1085, 1089, 1100, 1105, 1112, 1115, 1128, 1129], "arrai": [9, 96, 107, 112, 156, 177, 178, 183, 188, 190, 194, 195, 197, 203, 211, 216, 221, 230, 233, 237, 238, 258, 266, 272, 333, 342, 348, 352, 363, 372, 379, 389, 392, 396, 398, 400, 401, 404, 405, 409, 414, 415, 493, 496, 519, 527, 530, 568, 569, 571, 573, 575, 578, 579, 584, 588, 600, 620, 627, 628, 629, 630, 631, 632, 635, 637, 675, 683, 698, 716, 718, 719, 737, 798, 803, 919, 996, 1000, 1012, 1064, 1067, 1069, 1093, 1128], "javascript": [9, 23, 131, 166, 176, 188, 197, 221, 226, 959, 1005], "std": [9, 41, 49, 57, 105, 107, 108, 109, 110, 112, 113, 144, 160, 161, 188, 236, 249, 258, 260, 421, 422, 427, 435, 438, 440, 442, 444, 449, 456, 459, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 481, 483, 484, 489, 491, 493, 494, 495, 497, 498, 499, 500, 511, 513, 521, 531, 535, 538, 539, 541, 546, 547, 548, 552, 560, 562, 566, 567, 568, 569, 570, 575, 576, 577, 578, 579, 581, 582, 583, 587, 588, 590, 593, 594, 595, 596, 599, 600, 603, 604, 606, 607, 610, 612, 613, 614, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 629, 630, 632, 637, 639, 642, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 677, 679, 680, 682, 687, 690, 693, 697, 700, 702, 708, 712, 713, 715, 716, 718, 719, 870, 904, 907, 911, 919, 921, 933, 937, 1069, 1105, 1110, 1118], "vector": [9, 13, 105, 107, 109, 110, 112, 113, 160, 188, 194, 211, 237, 238, 251, 257, 258, 260, 440, 442, 466, 467, 483, 484, 491, 497, 498, 499, 500, 511, 529, 531, 535, 539, 541, 546, 551, 575, 577, 578, 579, 581, 584, 586, 599, 603, 617, 619, 620, 627, 628, 629, 630, 632, 638, 639, 643, 648, 649, 650, 657, 658, 659, 660, 661, 663, 683, 684, 687, 713, 715, 719, 937, 993, 1071, 1088, 1110], "dictionari": [9, 29, 62, 89, 155, 165, 170, 171, 172, 174, 177, 178, 179, 182, 184, 188, 190, 191, 196, 200, 201, 203, 204, 206, 207, 209, 210, 212, 214, 216, 217, 220, 223, 224, 226, 227, 229, 230, 232, 235, 242, 244, 245, 247, 252, 254, 255, 259, 261, 262, 264, 265, 266, 268, 271, 272, 274, 277, 280, 283, 284, 286, 287, 310, 315, 318, 684, 719, 965, 968, 972, 973, 974, 975, 978, 979, 983, 987, 1021, 1023, 1031, 1036, 1041, 1042, 1047, 1050, 1051, 1052, 1054, 1056, 1057, 1062, 1064, 1072, 1082, 1089, 1092, 1128], "valu": [9, 57, 83, 107, 112, 113, 133, 135, 137, 148, 150, 152, 153, 154, 166, 170, 172, 174, 176, 181, 183, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 202, 203, 205, 206, 208, 209, 211, 213, 215, 216, 218, 221, 225, 228, 230, 231, 242, 243, 246, 249, 251, 253, 263, 266, 267, 272, 273, 285, 296, 304, 310, 332, 337, 339, 341, 342, 352, 355, 356, 357, 365, 367, 368, 376, 378, 380, 381, 386, 397, 401, 403, 405, 409, 414, 415, 419, 422, 427, 429, 432, 437, 440, 442, 456, 457, 459, 462, 466, 468, 471, 473, 474, 476, 487, 488, 489, 491, 494, 501, 513, 530, 539, 540, 541, 544, 550, 553, 591, 593, 595, 596, 637, 639, 640, 646, 648, 657, 663, 666, 669, 670, 671, 675, 684, 695, 709, 713, 716, 718, 719, 722, 725, 744, 746, 748, 750, 766, 776, 798, 811, 862, 871, 892, 900, 902, 903, 905, 906, 907, 910, 913, 919, 922, 933, 934, 937, 938, 957, 959, 961, 964, 968, 972, 974, 976, 983, 994, 995, 996, 1004, 1006, 1009, 1011, 1012, 1016, 1021, 1024, 1029, 1031, 1034, 1041, 1043, 1064, 1067, 1069, 1072, 1075, 1076, 1082, 1083, 1086, 1087, 1088, 1091, 1105], "map": [9, 31, 33, 41, 58, 61, 105, 107, 108, 135, 142, 160, 166, 180, 182, 184, 188, 190, 191, 193, 194, 197, 205, 206, 208, 223, 237, 238, 240, 246, 258, 260, 267, 286, 291, 310, 413, 438, 442, 471, 475, 476, 477, 483, 494, 500, 529, 531, 535, 590, 593, 594, 595, 596, 599, 603, 632, 635, 639, 643, 649, 675, 694, 695, 696, 698, 718, 719, 750, 762, 924, 933, 934, 982, 986, 995, 996, 1015, 1071, 1091, 1122, 1132], "mathematisch": [9, 188, 246], "mengen": [9, 177, 178, 188, 1128], "while": [9, 13, 29, 52, 53, 62, 89, 126, 137, 139, 140, 148, 154, 165, 169, 170, 172, 173, 174, 175, 177, 178, 179, 181, 183, 184, 185, 188, 189, 190, 192, 193, 196, 197, 198, 200, 202, 203, 206, 207, 208, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 229, 230, 232, 242, 245, 246, 252, 254, 255, 259, 261, 265, 266, 267, 271, 272, 273, 283, 284, 285, 287, 296, 297, 298, 299, 300, 301, 302, 310, 313, 315, 333, 335, 339, 341, 343, 350, 355, 357, 371, 372, 378, 379, 383, 385, 389, 392, 393, 396, 398, 400, 405, 407, 409, 414, 415, 425, 437, 442, 456, 463, 481, 530, 566, 570, 571, 574, 576, 578, 581, 596, 619, 625, 635, 637, 648, 663, 664, 665, 671, 675, 696, 707, 709, 713, 716, 718, 719, 743, 746, 754, 756, 766, 768, 774, 775, 781, 784, 787, 799, 803, 810, 862, 863, 870, 871, 883, 888, 889, 890, 891, 898, 907, 913, 918, 919, 922, 924, 930, 933, 937, 952, 957, 965, 966, 967, 968, 972, 975, 987, 988, 992, 997, 1002, 1014, 1020, 1021, 1022, 1023, 1027, 1033, 1035, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1070, 1071, 1074, 1078, 1092, 1115, 1119, 1121, 1123, 1128], "function": [9, 21, 29, 37, 49, 58, 61, 62, 77, 79, 81, 89, 96, 109, 110, 112, 113, 126, 130, 133, 135, 144, 152, 165, 166, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 181, 184, 185, 188, 190, 191, 193, 194, 196, 200, 201, 203, 204, 206, 207, 208, 209, 211, 212, 214, 216, 217, 218, 219, 222, 223, 224, 226, 227, 228, 232, 235, 236, 243, 245, 247, 249, 251, 252, 254, 255, 258, 260, 261, 262, 263, 265, 266, 268, 271, 272, 273, 279, 286, 295, 305, 306, 312, 313, 315, 328, 332, 333, 339, 342, 346, 347, 348, 353, 358, 362, 363, 371, 372, 373, 374, 376, 378, 383, 385, 386, 389, 390, 391, 392, 394, 396, 397, 398, 400, 405, 407, 409, 411, 414, 415, 418, 426, 432, 440, 445, 457, 478, 482, 483, 494, 497, 498, 499, 500, 502, 511, 524, 530, 535, 539, 542, 545, 547, 548, 549, 550, 556, 561, 564, 566, 580, 586, 590, 599, 602, 603, 610, 613, 616, 617, 618, 620, 621, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 639, 640, 643, 644, 652, 655, 661, 663, 672, 673, 674, 675, 677, 679, 680, 685, 691, 695, 697, 698, 708, 716, 717, 718, 719, 730, 733, 736, 737, 743, 747, 750, 754, 757, 760, 766, 768, 770, 775, 781, 782, 784, 785, 786, 787, 796, 799, 800, 862, 870, 883, 885, 891, 892, 893, 900, 901, 903, 908, 909, 910, 916, 917, 919, 920, 923, 925, 938, 940, 948, 958, 965, 968, 969, 970, 971, 979, 987, 989, 992, 993, 997, 999, 1020, 1021, 1022, 1023, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1041, 1044, 1045, 1047, 1048, 1049, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1074, 1080, 1091, 1094, 1098, 1110, 1118, 1119, 1120, 1128], "xx": [10, 202, 233, 267, 273], "yy": 10, "kur": [11, 23, 151, 153, 156, 168, 328, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1131, 1132, 1134], "fand": [11, 168, 328], "team": [11, 140, 145, 148, 149, 160, 168, 169, 170, 185, 194, 219, 261, 328, 805, 811, 818, 820, 966, 1063, 1112, 1120], "statt": [11, 23, 168, 328, 1129, 1130, 1136], "wurd": [11, 142, 156, 160, 166, 168, 177, 310, 315, 328, 1117, 1128, 1129, 1135], "\u00fcber": [11, 23, 141, 142, 147, 151, 152, 156, 160, 168, 177, 178, 182, 191, 196, 222, 311, 328, 1112, 1122, 1128, 1129, 1134, 1135], "meinen": [11, 23, 168, 196, 212, 224, 328], "partner": [11, 23, 168, 328, 1112], "durat": [12, 27, 138, 148, 390, 424, 494, 705, 709, 710, 965, 987, 1063, 1092, 1120, 1121, 1123, 1133], "each": [12, 39, 62, 75, 105, 109, 110, 133, 134, 135, 148, 154, 172, 173, 185, 202, 205, 208, 218, 221, 225, 258, 260, 267, 295, 301, 307, 310, 315, 383, 408, 411, 413, 437, 445, 478, 492, 493, 549, 635, 710, 717, 754, 762, 766, 793, 799, 820, 824, 826, 870, 871, 872, 910, 914, 922, 956, 968, 971, 976, 982, 1042, 1063, 1069, 1071, 1072, 1073, 1088, 1093, 1123, 1133], "about": [12, 23, 29, 30, 38, 41, 42, 43, 44, 45, 48, 62, 64, 67, 74, 79, 82, 83, 89, 96, 112, 113, 121, 126, 127, 129, 133, 134, 135, 137, 140, 148, 157, 161, 162, 165, 169, 170, 171, 172, 173, 174, 177, 184, 185, 190, 193, 194, 195, 196, 200, 202, 203, 206, 209, 210, 211, 212, 214, 216, 218, 219, 221, 222, 224, 226, 227, 230, 239, 242, 244, 245, 247, 248, 249, 255, 259, 260, 265, 266, 269, 271, 272, 274, 283, 284, 287, 291, 296, 297, 298, 299, 300, 301, 310, 312, 315, 321, 351, 356, 365, 367, 395, 398, 399, 401, 407, 411, 413, 417, 431, 437, 530, 539, 540, 563, 570, 636, 645, 649, 650, 680, 684, 689, 698, 699, 717, 719, 735, 737, 766, 776, 785, 793, 794, 812, 829, 863, 870, 871, 872, 883, 887, 893, 908, 925, 933, 959, 965, 966, 968, 975, 976, 983, 987, 995, 1006, 1014, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1071, 1077, 1078, 1079, 1080, 1084, 1093, 1098, 1107, 1120, 1121, 1128, 1133], "book": [12, 29, 31, 129, 133, 138, 148, 149, 160, 169, 194, 216, 252, 261, 262, 328, 418, 424, 826, 965, 987, 1063, 1078, 1092, 1119, 1121, 1123, 1133], "separ": [12, 37, 77, 102, 103, 112, 133, 160, 162, 172, 192, 205, 211, 221, 225, 228, 231, 246, 249, 252, 253, 255, 263, 267, 275, 340, 378, 399, 419, 422, 429, 441, 445, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 513, 530, 535, 560, 681, 709, 717, 719, 734, 735, 768, 802, 806, 811, 857, 859, 862, 872, 908, 924, 940, 942, 945, 946, 947, 948, 950, 958, 963, 1020, 1037, 1042, 1063, 1072, 1105, 1115, 1120, 1133], "requir": [12, 13, 27, 36, 38, 41, 60, 88, 107, 112, 125, 129, 133, 134, 135, 138, 140, 144, 153, 161, 163, 165, 169, 173, 181, 192, 195, 206, 209, 211, 213, 218, 219, 233, 249, 258, 260, 261, 284, 321, 332, 365, 395, 397, 420, 429, 432, 440, 460, 462, 482, 491, 494, 513, 562, 575, 591, 628, 639, 645, 646, 652, 655, 660, 661, 685, 692, 863, 871, 872, 883, 888, 924, 926, 933, 952, 957, 965, 978, 987, 988, 1006, 1015, 1016, 1019, 1072, 1078, 1092, 1093, 1098, 1100, 1101, 1107, 1119, 1121, 1123, 1133, 1136], "particip": [12, 138, 140, 162, 165, 249, 280, 478, 865, 988, 1002, 1022, 1063, 1133], "should": [12, 36, 42, 44, 54, 56, 76, 79, 129, 134, 135, 138, 140, 144, 148, 155, 161, 165, 169, 194, 195, 209, 215, 221, 225, 249, 284, 287, 296, 301, 316, 317, 331, 356, 378, 393, 403, 407, 417, 422, 429, 435, 440, 445, 446, 448, 449, 457, 494, 538, 545, 547, 643, 646, 648, 652, 663, 707, 725, 744, 756, 758, 762, 766, 791, 810, 826, 833, 838, 870, 871, 872, 879, 898, 914, 925, 963, 972, 976, 984, 995, 1029, 1033, 1042, 1070, 1080, 1093, 1098, 1099, 1133], "fluent": [12, 272, 311, 312, 1064, 1133], "target": [12, 17, 39, 62, 107, 134, 136, 144, 185, 194, 276, 312, 401, 404, 420, 423, 424, 430, 433, 446, 550, 719, 739, 741, 746, 766, 828, 893, 918, 942, 943, 952, 954, 961, 965, 972, 974, 987, 1071, 1078, 1092, 1100, 1123], "audienc": [12, 133, 135, 165, 170, 287, 965, 987, 1019, 1078, 1092, 1118, 1123], "english": [12, 29, 105, 126, 153, 172, 179, 190, 200, 203, 212, 216, 222, 224, 227, 229, 230, 245, 252, 257, 265, 266, 271, 272, 284, 308, 309, 310, 315, 424, 719, 965, 987, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062, 1063, 1077, 1078, 1092], "german": [12, 14, 424, 965, 987, 1063, 1077, 1078, 1080, 1092], "see": [12, 13, 23, 27, 29, 41, 42, 44, 45, 49, 52, 54, 56, 62, 64, 76, 77, 84, 88, 98, 105, 112, 113, 118, 119, 121, 126, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 148, 150, 153, 154, 155, 163, 165, 169, 170, 179, 184, 185, 189, 192, 194, 195, 200, 202, 205, 206, 208, 209, 211, 212, 218, 221, 225, 230, 233, 242, 246, 249, 251, 255, 257, 258, 259, 260, 262, 266, 267, 275, 276, 284, 293, 296, 301, 310, 313, 314, 316, 321, 324, 329, 332, 341, 342, 343, 345, 351, 368, 381, 387, 390, 400, 406, 419, 420, 425, 429, 430, 431, 432, 436, 437, 440, 441, 442, 450, 451, 452, 453, 454, 458, 461, 462, 478, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 511, 512, 513, 521, 527, 530, 535, 537, 538, 539, 540, 545, 547, 548, 553, 554, 556, 571, 575, 588, 602, 606, 607, 609, 610, 622, 626, 628, 629, 631, 635, 638, 643, 645, 646, 647, 648, 650, 657, 663, 677, 678, 680, 683, 684, 685, 687, 689, 693, 694, 695, 696, 697, 698, 707, 709, 714, 717, 720, 722, 725, 727, 729, 730, 732, 734, 735, 737, 739, 741, 744, 746, 752, 754, 756, 758, 760, 762, 766, 769, 773, 774, 780, 782, 792, 793, 794, 798, 801, 804, 805, 822, 826, 827, 829, 830, 832, 835, 837, 853, 863, 870, 871, 872, 893, 896, 898, 899, 900, 904, 907, 909, 911, 914, 921, 933, 937, 940, 941, 942, 943, 948, 950, 953, 954, 955, 956, 957, 958, 961, 962, 963, 964, 965, 968, 976, 977, 980, 981, 983, 986, 988, 990, 993, 1001, 1004, 1005, 1006, 1016, 1019, 1022, 1031, 1035, 1038, 1049, 1060, 1061, 1067, 1069, 1072, 1077, 1078, 1080, 1082, 1085, 1086, 1087, 1092, 1095, 1098, 1103, 1105, 1110, 1120, 1121, 1123, 1133], "also": [12, 13, 23, 27, 56, 62, 64, 113, 129, 134, 135, 137, 138, 140, 141, 143, 144, 145, 152, 154, 155, 156, 157, 160, 162, 163, 165, 166, 169, 175, 177, 195, 202, 208, 218, 219, 221, 225, 231, 237, 238, 240, 249, 251, 258, 259, 260, 266, 267, 276, 284, 296, 328, 419, 420, 425, 430, 437, 446, 456, 459, 461, 462, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 512, 537, 538, 539, 540, 545, 547, 553, 571, 588, 591, 606, 607, 609, 635, 643, 646, 647, 648, 650, 663, 674, 677, 680, 683, 684, 685, 687, 689, 693, 695, 698, 699, 707, 709, 717, 756, 766, 771, 792, 804, 810, 811, 826, 830, 832, 835, 837, 857, 863, 873, 882, 883, 896, 900, 904, 911, 921, 942, 943, 950, 955, 957, 959, 961, 962, 963, 965, 968, 976, 980, 986, 988, 992, 995, 1005, 1006, 1009, 1019, 1031, 1035, 1038, 1049, 1069, 1070, 1078, 1082, 1085, 1086, 1087, 1092, 1095, 1098, 1120, 1122, 1128, 1129, 1133], "train": [12, 13, 14, 23, 29, 30, 31, 36, 64, 105, 116, 128, 129, 134, 138, 145, 146, 148, 156, 157, 160, 161, 162, 165, 168, 192, 202, 208, 218, 221, 251, 258, 260, 263, 275, 318, 328, 420, 422, 423, 424, 425, 426, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440, 442, 444, 447, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 535, 615, 695, 720, 722, 725, 730, 735, 741, 744, 752, 873, 879, 881, 882, 883, 904, 907, 930, 933, 937, 964, 965, 967, 987, 988, 1016, 1019, 1022, 1066, 1067, 1070, 1071, 1078, 1092, 1103, 1107, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136], "sourc": [13, 23, 28, 30, 38, 60, 64, 67, 72, 85, 109, 110, 112, 113, 132, 133, 134, 135, 138, 139, 140, 144, 148, 150, 151, 153, 154, 161, 174, 179, 184, 202, 208, 216, 218, 221, 225, 230, 238, 240, 242, 245, 246, 249, 270, 277, 373, 374, 377, 412, 421, 422, 423, 425, 426, 427, 428, 430, 431, 432, 441, 492, 495, 496, 610, 643, 646, 652, 657, 663, 693, 734, 764, 767, 778, 810, 826, 827, 859, 900, 940, 941, 943, 944, 946, 950, 952, 954, 955, 956, 957, 958, 995, 1051, 1060, 1100, 1107, 1113, 1123, 1130], "under": [13, 21, 34, 54, 113, 132, 133, 135, 140, 161, 172, 174, 284, 328, 442, 457, 494, 802, 803, 870, 871, 872, 873, 874, 875, 882, 883, 925, 940, 964, 971, 978, 1012, 1098], "why": [13, 24, 28, 44, 49, 64, 65, 68, 112, 129, 133, 134, 139, 145, 165, 169, 170, 172, 174, 185, 194, 214, 252, 255, 261, 262, 283, 291, 310, 313, 314, 317, 331, 343, 349, 356, 359, 377, 388, 393, 394, 399, 403, 406, 413, 418, 456, 479, 538, 553, 571, 584, 610, 613, 629, 635, 636, 652, 683, 699, 702, 715, 734, 746, 762, 766, 797, 803, 806, 863, 916, 919, 937, 952, 954, 962, 963, 966, 1012, 1014, 1064, 1069, 1079, 1087], "appli": [13, 75, 82, 130, 135, 174, 192, 251, 257, 284, 360, 395, 401, 419, 550, 650, 685, 739, 766, 806, 809, 826, 870, 871, 896, 957, 1083], "websit": [13, 23, 134, 148, 1094, 1107], "contain": [13, 17, 29, 34, 37, 60, 105, 106, 107, 109, 110, 112, 129, 130, 136, 139, 144, 148, 153, 155, 160, 161, 163, 165, 166, 169, 172, 174, 192, 194, 195, 202, 208, 218, 219, 221, 225, 232, 233, 236, 237, 238, 251, 258, 267, 284, 295, 296, 305, 312, 313, 319, 321, 358, 377, 391, 411, 413, 419, 421, 422, 426, 440, 456, 478, 481, 483, 492, 493, 494, 500, 501, 502, 535, 536, 538, 546, 555, 572, 575, 588, 599, 603, 617, 626, 631, 632, 638, 643, 683, 695, 698, 713, 714, 715, 717, 719, 722, 727, 735, 737, 739, 760, 762, 766, 786, 793, 794, 797, 806, 808, 831, 832, 833, 838, 845, 870, 871, 872, 879, 900, 908, 909, 924, 934, 940, 943, 948, 952, 957, 964, 966, 971, 988, 1010, 1013, 1019, 1021, 1033, 1042, 1046, 1061, 1064, 1066, 1070, 1072, 1075, 1077, 1082, 1093, 1094, 1098, 1104, 1105, 1117, 1118], "give": [13, 27, 39, 52, 58, 61, 109, 110, 126, 130, 132, 133, 135, 140, 143, 154, 157, 161, 162, 169, 174, 185, 193, 225, 230, 242, 258, 260, 329, 343, 344, 359, 375, 378, 386, 411, 417, 419, 422, 437, 489, 491, 507, 524, 560, 575, 621, 629, 652, 681, 766, 792, 799, 817, 819, 871, 872, 891, 892, 904, 907, 926, 928, 933, 934, 940, 943, 952, 961, 964, 987, 1004, 1016, 1064, 1068, 1069, 1093, 1098, 1100, 1118, 1121, 1123], "structur": [13, 29, 64, 77, 88, 107, 113, 133, 148, 170, 184, 211, 212, 219, 221, 222, 224, 227, 230, 233, 236, 245, 252, 255, 262, 266, 272, 276, 277, 280, 284, 288, 310, 314, 316, 318, 333, 343, 351, 356, 385, 387, 391, 392, 396, 405, 408, 409, 414, 415, 419, 420, 424, 432, 439, 457, 482, 492, 511, 560, 593, 626, 635, 637, 675, 716, 718, 719, 754, 756, 760, 764, 766, 786, 822, 853, 889, 895, 911, 916, 934, 1004, 1006, 1046, 1052, 1089, 1092, 1099, 1106, 1118], "much": [13, 27, 34, 37, 62, 79, 113, 132, 133, 134, 135, 140, 143, 148, 157, 163, 165, 169, 170, 171, 173, 195, 206, 208, 209, 211, 213, 219, 233, 234, 237, 238, 240, 252, 255, 261, 262, 283, 284, 287, 291, 313, 345, 356, 367, 403, 407, 417, 432, 457, 536, 546, 552, 571, 592, 612, 635, 636, 645, 646, 650, 663, 675, 676, 677, 681, 683, 685, 695, 699, 718, 719, 722, 737, 744, 752, 754, 760, 762, 766, 805, 806, 855, 863, 866, 869, 871, 883, 925, 934, 937, 938, 940, 942, 952, 959, 962, 963, 976, 977, 982, 983, 986, 995, 1012, 1064, 1070, 1071, 1098, 1100, 1118], "like": [13, 21, 27, 28, 30, 38, 42, 44, 54, 58, 61, 62, 64, 76, 77, 112, 113, 126, 132, 133, 134, 135, 137, 138, 140, 143, 144, 148, 153, 156, 157, 161, 162, 163, 165, 169, 171, 174, 184, 185, 192, 194, 195, 202, 208, 209, 211, 212, 218, 221, 234, 236, 238, 240, 246, 249, 251, 252, 255, 258, 260, 284, 287, 296, 301, 313, 321, 342, 345, 349, 371, 373, 378, 383, 395, 399, 407, 410, 417, 423, 427, 429, 432, 435, 436, 437, 457, 481, 491, 492, 493, 494, 495, 507, 513, 521, 524, 530, 539, 542, 545, 549, 550, 551, 553, 574, 591, 600, 607, 609, 612, 615, 616, 625, 626, 634, 635, 638, 639, 645, 646, 663, 681, 683, 684, 694, 695, 698, 699, 705, 715, 717, 720, 722, 724, 727, 735, 737, 739, 744, 750, 756, 758, 760, 762, 766, 771, 779, 782, 786, 794, 797, 798, 802, 803, 805, 808, 826, 828, 831, 833, 838, 855, 863, 864, 866, 870, 871, 872, 873, 882, 883, 887, 891, 893, 896, 900, 906, 908, 909, 927, 934, 938, 940, 942, 943, 956, 959, 961, 963, 966, 968, 976, 981, 986, 988, 990, 992, 994, 996, 1000, 1004, 1006, 1009, 1010, 1013, 1016, 1018, 1021, 1029, 1032, 1042, 1043, 1046, 1052, 1053, 1054, 1055, 1056, 1058, 1063, 1066, 1069, 1071, 1072, 1080, 1082, 1083, 1088, 1098, 1099, 1100, 1105, 1107, 1118, 1123], "topic": [13, 16, 27, 28, 29, 58, 61, 68, 77, 89, 96, 105, 112, 126, 130, 135, 139, 140, 153, 157, 170, 173, 174, 175, 177, 185, 190, 200, 203, 209, 219, 221, 222, 237, 238, 242, 260, 262, 266, 296, 297, 298, 299, 301, 309, 310, 315, 316, 321, 323, 324, 327, 328, 329, 513, 554, 556, 615, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 717, 766, 768, 778, 789, 796, 798, 800, 807, 812, 816, 818, 820, 821, 846, 856, 869, 871, 874, 875, 877, 893, 943, 952, 953, 957, 965, 970, 987, 988, 992, 1019, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1071, 1077, 1092, 1095, 1098, 1102, 1120, 1121, 1128], "other": [13, 27, 29, 32, 38, 39, 50, 52, 58, 61, 62, 77, 79, 81, 109, 110, 115, 121, 133, 134, 135, 136, 137, 140, 144, 148, 157, 161, 165, 169, 170, 172, 173, 174, 185, 193, 202, 208, 209, 218, 221, 225, 246, 267, 274, 275, 284, 287, 296, 313, 317, 321, 341, 347, 356, 365, 383, 386, 397, 413, 417, 420, 422, 428, 429, 432, 433, 434, 440, 521, 536, 538, 539, 545, 547, 548, 551, 552, 553, 563, 591, 613, 636, 645, 646, 677, 681, 693, 695, 697, 699, 710, 717, 719, 737, 756, 758, 792, 799, 802, 803, 819, 824, 826, 828, 848, 865, 870, 871, 872, 875, 879, 882, 891, 892, 898, 899, 911, 916, 919, 925, 934, 938, 940, 942, 952, 959, 961, 963, 972, 975, 976, 977, 980, 983, 986, 990, 992, 993, 994, 995, 1001, 1002, 1006, 1008, 1010, 1012, 1013, 1026, 1042, 1069, 1073, 1076, 1078, 1080, 1098, 1110, 1118, 1120, 1121, 1123, 1133], "exampl": [13, 17, 24, 29, 38, 39, 64, 77, 86, 112, 113, 126, 127, 129, 132, 133, 134, 135, 140, 143, 144, 148, 152, 153, 154, 157, 161, 165, 169, 171, 173, 184, 192, 194, 198, 202, 205, 208, 209, 211, 217, 218, 219, 222, 223, 224, 226, 230, 233, 242, 249, 251, 252, 255, 259, 261, 262, 266, 267, 275, 277, 280, 283, 284, 287, 298, 301, 310, 318, 321, 334, 340, 341, 342, 350, 356, 408, 420, 431, 432, 433, 440, 444, 446, 456, 457, 459, 461, 481, 482, 494, 513, 549, 551, 553, 562, 571, 578, 616, 625, 643, 652, 657, 672, 673, 677, 678, 682, 685, 689, 695, 699, 717, 719, 725, 737, 744, 766, 793, 794, 798, 803, 823, 826, 836, 848, 855, 863, 870, 871, 872, 873, 882, 886, 893, 896, 897, 898, 899, 900, 908, 915, 934, 937, 939, 940, 941, 942, 943, 944, 950, 956, 957, 958, 959, 962, 963, 964, 968, 975, 982, 985, 987, 988, 989, 991, 999, 1004, 1013, 1019, 1021, 1037, 1042, 1060, 1061, 1062, 1070, 1071, 1077, 1079, 1085, 1086, 1092, 1097, 1105, 1107, 1120, 1121], "here": [13, 14, 62, 67, 72, 73, 76, 77, 79, 80, 84, 105, 119, 121, 130, 132, 133, 135, 136, 138, 139, 140, 143, 144, 148, 153, 155, 161, 162, 163, 165, 169, 171, 174, 184, 185, 189, 192, 193, 194, 195, 200, 203, 211, 212, 216, 219, 221, 225, 238, 240, 242, 246, 249, 251, 255, 258, 260, 267, 270, 285, 293, 296, 301, 307, 310, 313, 314, 316, 329, 332, 397, 399, 406, 413, 429, 435, 437, 457, 462, 473, 476, 479, 481, 492, 494, 496, 511, 513, 521, 535, 538, 539, 542, 548, 554, 556, 560, 572, 600, 606, 626, 628, 629, 635, 646, 652, 657, 663, 673, 677, 682, 685, 687, 693, 695, 698, 707, 720, 734, 739, 741, 744, 756, 762, 766, 792, 826, 863, 865, 870, 871, 872, 879, 883, 890, 896, 900, 906, 911, 924, 933, 937, 938, 949, 952, 956, 958, 961, 962, 963, 964, 976, 979, 983, 988, 991, 992, 999, 1005, 1015, 1016, 1022, 1043, 1046, 1063, 1069, 1070, 1071, 1072, 1077, 1091, 1098, 1100, 1103, 1107, 1121, 1123], "discuss": [13, 41, 49, 112, 165, 169, 170, 172, 174, 209, 219, 255, 259, 260, 283, 310, 314, 317, 318, 321, 323, 324, 328, 430, 518, 521, 524, 527, 530, 533, 703, 709, 746, 779, 826, 933, 937, 966, 1105, 1107, 1110, 1121], "over": [13, 33, 34, 37, 41, 60, 64, 88, 96, 113, 126, 129, 130, 132, 133, 135, 137, 138, 143, 153, 157, 165, 169, 171, 172, 173, 184, 189, 192, 194, 195, 202, 207, 208, 209, 211, 214, 217, 245, 249, 252, 255, 261, 262, 278, 283, 287, 295, 310, 313, 356, 367, 368, 383, 397, 417, 427, 435, 445, 459, 536, 542, 570, 588, 600, 628, 635, 683, 684, 702, 713, 766, 863, 867, 871, 873, 879, 900, 914, 922, 925, 940, 952, 954, 959, 962, 999, 1012, 1016], "lwn": [13, 38, 150, 746, 758, 776, 1113], "attribut": [13, 130, 133, 135, 150, 169, 183, 189, 193, 202, 205, 208, 213, 215, 220, 221, 225, 228, 231, 235, 236, 243, 246, 250, 253, 263, 267, 273, 285, 303, 305, 314, 321, 395, 411, 413, 425, 440, 707, 717, 798, 804, 825, 829, 896, 908, 909, 926, 927, 934, 938, 962, 963, 976, 978, 989, 1015, 1069, 1134], "sharealik": 13, "cc": [13, 23, 31, 115, 151, 159, 160, 161, 238, 420, 442, 491, 493, 494, 514, 517, 520, 521, 523, 524, 526, 527, 529, 530, 532, 555, 693, 694, 699, 744, 932, 933, 936, 937, 942, 1104, 1105, 1107, 1109, 1110], "BY": [13, 23, 34, 663], "sa": [13, 23, 31, 924], "don": [13, 24, 57, 60, 77, 83, 112, 121, 126, 132, 133, 134, 135, 138, 139, 140, 148, 163, 165, 169, 173, 184, 185, 195, 202, 206, 208, 209, 211, 218, 221, 273, 285, 318, 342, 383, 395, 398, 399, 401, 407, 413, 417, 419, 436, 493, 521, 527, 536, 537, 552, 553, 560, 570, 606, 613, 643, 646, 648, 663, 677, 678, 690, 699, 704, 709, 734, 739, 758, 766, 771, 801, 826, 828, 833, 839, 850, 863, 866, 870, 871, 875, 883, 887, 888, 889, 890, 909, 910, 911, 916, 937, 938, 943, 964, 972, 974, 988, 991, 995, 1019, 1073, 1079, 1086, 1093, 1104, 1110], "t": [13, 24, 42, 49, 57, 60, 62, 64, 77, 83, 112, 121, 126, 130, 132, 134, 135, 138, 139, 140, 143, 144, 148, 150, 152, 163, 165, 166, 169, 172, 173, 176, 181, 183, 184, 185, 189, 195, 198, 202, 205, 206, 208, 209, 211, 213, 215, 218, 219, 221, 225, 228, 231, 234, 240, 243, 246, 251, 252, 253, 255, 257, 263, 267, 273, 285, 296, 302, 304, 305, 307, 318, 330, 332, 333, 335, 341, 342, 352, 367, 373, 375, 378, 383, 393, 395, 397, 398, 399, 401, 407, 413, 417, 419, 422, 436, 489, 491, 493, 513, 521, 527, 536, 537, 539, 546, 552, 553, 560, 562, 563, 570, 574, 606, 613, 635, 636, 638, 643, 645, 646, 648, 652, 653, 654, 655, 663, 666, 677, 678, 683, 689, 690, 693, 694, 695, 697, 699, 702, 704, 707, 709, 725, 734, 739, 746, 758, 760, 766, 771, 783, 786, 792, 793, 794, 801, 803, 826, 827, 828, 832, 833, 839, 845, 848, 850, 863, 866, 870, 871, 872, 875, 879, 883, 887, 888, 889, 890, 897, 909, 910, 911, 916, 926, 933, 934, 937, 938, 940, 941, 943, 952, 955, 958, 964, 965, 972, 974, 976, 984, 988, 991, 994, 995, 996, 1002, 1008, 1012, 1014, 1015, 1016, 1019, 1021, 1068, 1073, 1077, 1079, 1086, 1093, 1104, 1105, 1110, 1120], "want": [13, 17, 27, 29, 30, 44, 49, 60, 62, 77, 83, 115, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 153, 156, 161, 165, 169, 172, 173, 184, 185, 192, 195, 202, 209, 213, 215, 249, 251, 252, 255, 277, 296, 307, 321, 343, 355, 371, 399, 411, 413, 417, 421, 422, 437, 440, 461, 480, 489, 494, 513, 524, 537, 542, 545, 553, 578, 613, 629, 643, 648, 663, 684, 689, 695, 697, 698, 699, 717, 722, 741, 766, 771, 801, 803, 805, 808, 823, 826, 827, 845, 863, 866, 870, 871, 872, 883, 887, 888, 889, 890, 895, 909, 924, 926, 927, 928, 937, 940, 942, 952, 954, 956, 959, 960, 961, 962, 963, 964, 965, 967, 971, 978, 983, 987, 994, 1003, 1006, 1016, 1020, 1022, 1058, 1063, 1073, 1077, 1078, 1080, 1082, 1086, 1098, 1100, 1101, 1105, 1118, 1123], "anybodi": [13, 64, 133, 138, 165, 184, 185, 400, 898, 909, 1110], "monei": [13, 134, 137, 140, 208, 805, 1021], "my": [13, 17, 24, 28, 31, 38, 58, 61, 62, 64, 96, 115, 121, 132, 133, 134, 136, 137, 139, 140, 143, 144, 148, 161, 165, 169, 172, 185, 192, 219, 233, 235, 249, 259, 307, 310, 315, 328, 407, 418, 440, 494, 530, 548, 559, 613, 695, 717, 750, 762, 766, 768, 794, 801, 816, 818, 823, 829, 850, 863, 870, 872, 874, 875, 882, 883, 888, 889, 890, 899, 934, 976, 995, 1018, 1058, 1080, 1098, 1118], "without": [13, 132, 133, 134, 135, 143, 144, 169, 213, 277, 343, 367, 374, 400, 403, 407, 412, 417, 428, 440, 445, 457, 524, 530, 536, 542, 606, 613, 636, 663, 681, 701, 702, 709, 737, 750, 766, 805, 806, 848, 872, 874, 883, 909, 928, 933, 934, 938, 961, 962, 965, 966, 968, 975, 977, 979, 981, 983, 990, 995, 1012, 1098, 1100, 1118, 1123], "modif": [13, 54, 105, 113, 148, 211, 343, 345, 351, 356, 387, 417, 440, 445, 492, 550, 710, 717, 739, 766, 811, 827, 848, 975, 995, 1012, 1073, 1110], "back": [13, 29, 31, 62, 65, 134, 135, 138, 144, 169, 171, 173, 198, 206, 211, 222, 224, 242, 257, 277, 280, 393, 408, 459, 484, 513, 533, 553, 567, 572, 610, 643, 657, 692, 699, 719, 734, 739, 748, 766, 768, 797, 829, 863, 870, 883, 924, 934, 940, 959, 966, 979, 983, 995, 1023, 1057, 1058, 1059, 1062, 1088], "m": [13, 23, 31, 37, 60, 117, 119, 134, 135, 136, 138, 140, 143, 148, 161, 166, 171, 176, 185, 189, 198, 199, 200, 202, 206, 221, 225, 231, 233, 238, 250, 285, 306, 310, 311, 312, 317, 331, 419, 442, 488, 491, 492, 493, 494, 530, 555, 663, 685, 694, 734, 735, 741, 744, 776, 803, 805, 826, 870, 883, 928, 981, 1018, 1019, 1026, 1051, 1052, 1069, 1079, 1093, 1098, 1100, 1105], "lawyer": 13, "understand": [13, 112, 132, 133, 135, 139, 140, 143, 144, 148, 157, 165, 169, 194, 221, 252, 255, 258, 260, 261, 262, 277, 280, 283, 287, 312, 321, 349, 397, 406, 413, 445, 481, 622, 643, 652, 673, 684, 766, 805, 811, 863, 983, 1021, 1064, 1069, 1070, 1087, 1118, 1119, 1120], "permit": [13, 135, 140, 185, 249, 307, 518, 539, 546, 870, 881, 925, 989, 1089], "exactli": [13, 77, 133, 135, 157, 163, 192, 262, 301, 335, 375, 481, 492, 570, 646, 683, 766, 872, 897, 898, 938, 956, 1072, 1092], "gnu": [13, 144, 149, 185, 194, 307, 313, 329, 414, 415, 420, 422, 545, 694, 719, 746, 767, 826, 941, 942, 952, 954, 956, 1116, 1120], "free": [13, 31, 139, 144, 160, 185, 307, 390, 404, 442, 519, 539, 545, 547, 607, 626, 627, 629, 630, 646, 673, 692, 693, 694, 730, 737, 768, 888, 889, 890, 902, 925, 938, 940, 1070, 1080, 1089, 1115], "document": [13, 24, 39, 41, 64, 77, 85, 112, 113, 130, 133, 135, 137, 144, 145, 151, 154, 161, 173, 185, 191, 192, 200, 202, 207, 208, 209, 211, 218, 221, 225, 238, 240, 242, 251, 258, 260, 263, 284, 286, 294, 296, 301, 310, 317, 318, 393, 394, 397, 404, 420, 421, 422, 423, 425, 428, 429, 430, 431, 432, 433, 445, 492, 511, 552, 556, 570, 571, 615, 626, 628, 638, 643, 650, 652, 657, 673, 674, 680, 682, 685, 687, 694, 695, 696, 698, 705, 706, 707, 709, 713, 717, 737, 739, 762, 766, 767, 774, 778, 792, 798, 805, 812, 816, 818, 820, 850, 851, 852, 854, 855, 857, 858, 866, 870, 871, 872, 906, 913, 921, 954, 956, 957, 961, 963, 964, 968, 972, 974, 976, 982, 999, 1009, 1010, 1060, 1072, 1075, 1082, 1083, 1086, 1088, 1096, 1099, 1106, 1107, 1126, 1127], "ago": [13, 135, 139, 195, 791], "wa": [13, 36, 52, 64, 77, 113, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 148, 150, 152, 153, 154, 156, 160, 161, 166, 168, 169, 172, 176, 182, 183, 189, 192, 195, 198, 199, 209, 211, 213, 215, 222, 225, 234, 246, 253, 259, 262, 267, 285, 291, 310, 315, 328, 331, 378, 403, 423, 527, 535, 536, 545, 546, 591, 620, 627, 628, 629, 630, 631, 632, 639, 643, 646, 701, 717, 719, 741, 748, 756, 762, 801, 823, 853, 855, 863, 872, 899, 919, 938, 963, 995, 1069, 1083, 1086, 1093, 1098, 1100, 1103, 1113, 1115, 1116, 1117, 1118, 1130, 1136], "debian": [13, 77, 121, 122, 123, 140, 144, 148, 150, 162, 173, 185, 270, 307, 328, 507, 719, 766, 865, 942, 954, 1100, 1105], "resolut": [13, 219, 223, 225, 400, 648, 710, 744, 776, 872], "us": [13, 14, 17, 21, 24, 38, 39, 44, 47, 53, 58, 60, 61, 62, 64, 67, 69, 70, 73, 76, 77, 80, 81, 83, 84, 85, 87, 88, 96, 105, 106, 112, 113, 125, 126, 128, 129, 130, 132, 133, 135, 136, 139, 143, 145, 148, 150, 153, 157, 159, 160, 162, 165, 169, 171, 172, 184, 185, 190, 193, 200, 202, 203, 205, 206, 209, 210, 212, 216, 218, 219, 221, 225, 228, 230, 231, 233, 238, 240, 242, 246, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 266, 267, 272, 275, 280, 283, 284, 287, 291, 295, 296, 301, 307, 310, 313, 315, 316, 319, 328, 339, 342, 343, 346, 347, 348, 351, 353, 362, 363, 365, 367, 368, 372, 373, 374, 377, 378, 379, 381, 385, 386, 389, 392, 396, 400, 401, 405, 407, 408, 409, 413, 414, 415, 417, 419, 420, 422, 427, 428, 429, 430, 433, 435, 436, 438, 439, 442, 445, 446, 447, 449, 456, 459, 460, 461, 479, 481, 482, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 507, 511, 512, 513, 514, 517, 520, 523, 526, 529, 532, 537, 539, 540, 544, 545, 548, 550, 552, 553, 554, 556, 557, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 579, 582, 583, 584, 588, 591, 592, 593, 594, 595, 596, 600, 606, 609, 610, 612, 613, 616, 617, 619, 620, 622, 624, 625, 626, 627, 628, 629, 630, 632, 634, 635, 637, 638, 639, 640, 642, 644, 646, 650, 652, 657, 663, 665, 672, 673, 675, 677, 678, 680, 682, 685, 690, 694, 695, 696, 697, 699, 701, 705, 707, 710, 713, 716, 717, 718, 719, 724, 725, 727, 729, 732, 734, 735, 737, 739, 741, 744, 746, 750, 752, 754, 758, 760, 762, 766, 767, 769, 771, 779, 780, 782, 785, 786, 792, 793, 794, 797, 801, 802, 805, 806, 808, 810, 812, 818, 823, 826, 828, 831, 832, 833, 835, 845, 851, 853, 857, 862, 863, 866, 867, 869, 873, 874, 875, 882, 883, 886, 892, 893, 896, 897, 898, 900, 904, 906, 907, 909, 911, 912, 913, 915, 916, 919, 921, 922, 925, 926, 929, 932, 933, 934, 936, 937, 938, 940, 943, 950, 951, 954, 955, 956, 957, 958, 962, 965, 966, 968, 969, 970, 971, 972, 975, 976, 981, 983, 985, 987, 988, 989, 991, 995, 997, 999, 1003, 1004, 1005, 1006, 1009, 1012, 1014, 1016, 1019, 1021, 1024, 1025, 1026, 1029, 1030, 1031, 1035, 1037, 1040, 1041, 1042, 1043, 1047, 1049, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1080, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1098, 1101, 1104, 1105, 1107, 1109, 1110, 1118, 1120, 1121, 1123], "gfdl": 13, "becaus": [13, 17, 37, 60, 65, 79, 127, 132, 133, 135, 144, 148, 157, 165, 169, 171, 185, 195, 202, 208, 218, 221, 335, 356, 395, 404, 407, 410, 417, 419, 428, 437, 440, 457, 491, 494, 537, 538, 545, 548, 588, 610, 629, 685, 693, 696, 735, 746, 764, 766, 805, 845, 863, 870, 871, 872, 881, 892, 893, 896, 899, 913, 919, 934, 937, 938, 961, 964, 990, 1020, 1077, 1093, 1100, 1105, 1118], "too": [13, 27, 52, 55, 62, 79, 133, 135, 140, 149, 162, 165, 181, 192, 194, 211, 221, 225, 228, 237, 238, 240, 251, 253, 261, 262, 267, 283, 285, 291, 352, 397, 407, 417, 431, 437, 536, 550, 657, 659, 663, 675, 676, 677, 683, 689, 695, 717, 718, 719, 764, 766, 771, 798, 863, 872, 873, 879, 896, 909, 926, 942, 961, 962, 963, 966, 1012, 1016, 1094, 1118], "restrict": [13, 134, 163, 173, 395, 400, 429, 479, 560, 764, 793, 794, 882, 1077], "articl": [13, 148, 150, 746, 758, 776, 870, 872, 952], "describ": [13, 64, 106, 112, 130, 132, 133, 134, 135, 138, 140, 143, 144, 159, 185, 221, 225, 233, 259, 267, 270, 307, 440, 449, 495, 514, 517, 520, 523, 526, 529, 532, 685, 699, 766, 776, 799, 826, 872, 877, 929, 932, 936, 941, 949, 955, 956, 985, 1069, 1104, 1107, 1109], "pretti": [13, 134, 135, 157, 171, 175, 194, 211, 221, 407, 422, 570, 627, 702, 959, 1089], "same": [13, 17, 24, 28, 38, 39, 42, 43, 64, 133, 134, 135, 137, 139, 140, 143, 144, 148, 153, 154, 155, 157, 165, 166, 171, 174, 185, 193, 197, 202, 208, 211, 218, 219, 221, 224, 225, 243, 252, 255, 261, 262, 267, 283, 284, 285, 297, 298, 307, 314, 339, 343, 354, 355, 356, 373, 374, 378, 383, 386, 395, 397, 401, 403, 407, 408, 411, 412, 422, 440, 444, 447, 448, 459, 478, 479, 487, 491, 511, 513, 520, 522, 536, 539, 545, 548, 551, 570, 573, 579, 588, 591, 592, 593, 617, 628, 636, 641, 648, 650, 652, 655, 657, 681, 682, 685, 697, 698, 699, 705, 734, 735, 739, 744, 746, 748, 756, 758, 764, 766, 782, 798, 804, 810, 826, 827, 829, 853, 863, 870, 871, 872, 873, 882, 883, 889, 895, 909, 910, 911, 924, 928, 934, 938, 940, 956, 962, 963, 966, 971, 972, 975, 977, 981, 983, 999, 1001, 1004, 1009, 1011, 1012, 1013, 1046, 1054, 1056, 1070, 1072, 1073, 1076, 1077, 1080, 1082, 1085, 1086, 1087, 1098, 1100, 1105], "issu": [13, 133, 136, 143, 144, 195, 260, 261, 262, 283, 330, 343, 401, 902, 928, 937, 954, 972], "how": [13, 23, 24, 36, 41, 44, 49, 64, 69, 70, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 90, 103, 112, 119, 121, 129, 130, 133, 136, 138, 139, 140, 144, 145, 148, 153, 155, 157, 161, 162, 168, 169, 170, 171, 172, 173, 174, 185, 190, 192, 193, 194, 200, 202, 203, 205, 206, 208, 209, 211, 214, 216, 219, 230, 233, 237, 238, 242, 249, 252, 255, 257, 258, 259, 260, 261, 262, 266, 272, 275, 277, 283, 284, 287, 296, 312, 313, 317, 328, 343, 349, 374, 381, 383, 384, 395, 397, 399, 401, 406, 410, 417, 419, 421, 428, 442, 448, 478, 481, 489, 492, 513, 530, 537, 545, 546, 549, 560, 570, 609, 613, 619, 629, 635, 657, 694, 697, 698, 699, 709, 713, 714, 720, 727, 729, 730, 744, 756, 766, 771, 782, 793, 794, 799, 806, 826, 845, 853, 859, 863, 870, 871, 872, 880, 888, 889, 890, 893, 896, 899, 900, 906, 919, 922, 925, 926, 928, 933, 937, 938, 950, 952, 954, 956, 969, 970, 987, 988, 991, 1005, 1008, 1022, 1060, 1061, 1064, 1069, 1070, 1083, 1085, 1086, 1089, 1098, 1101, 1107, 1110, 1120, 1121, 1123], "do": [13, 27, 31, 39, 42, 44, 49, 57, 58, 61, 62, 77, 82, 84, 88, 90, 96, 112, 116, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 148, 149, 150, 152, 153, 154, 157, 161, 162, 165, 169, 170, 173, 183, 184, 185, 193, 195, 202, 205, 209, 211, 213, 215, 216, 219, 221, 224, 225, 231, 233, 235, 238, 240, 249, 252, 255, 284, 285, 296, 298, 305, 307, 310, 312, 346, 365, 367, 368, 370, 371, 372, 377, 378, 379, 385, 386, 389, 392, 395, 396, 403, 405, 409, 414, 415, 417, 419, 421, 437, 442, 445, 448, 456, 457, 478, 480, 492, 513, 521, 527, 530, 536, 538, 550, 554, 556, 557, 560, 597, 610, 613, 627, 628, 629, 637, 643, 648, 652, 674, 675, 681, 685, 687, 693, 694, 695, 697, 698, 699, 715, 716, 718, 719, 739, 743, 754, 758, 762, 764, 766, 791, 795, 796, 799, 803, 806, 810, 811, 820, 822, 827, 831, 833, 862, 863, 866, 870, 871, 872, 874, 875, 881, 883, 887, 888, 889, 890, 891, 892, 898, 909, 910, 912, 916, 922, 924, 925, 928, 930, 933, 938, 956, 957, 959, 961, 963, 964, 965, 968, 977, 987, 988, 989, 992, 995, 999, 1005, 1006, 1019, 1021, 1040, 1064, 1070, 1071, 1078, 1079, 1086, 1089, 1098, 1105, 1107, 1123], "choos": [13, 27, 132, 133, 144, 157, 165, 530, 766, 863, 870, 872, 955, 988, 995, 1008, 1070, 1077, 1100], "altogeth": [13, 143, 192, 261, 262, 283, 646, 774, 966], "have": [13, 27, 28, 30, 36, 42, 49, 64, 68, 79, 81, 83, 101, 109, 110, 112, 113, 115, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 153, 154, 155, 157, 161, 162, 163, 165, 169, 172, 173, 184, 185, 190, 192, 193, 194, 195, 202, 205, 206, 208, 209, 216, 221, 225, 228, 238, 240, 242, 249, 251, 252, 255, 258, 259, 261, 262, 266, 267, 287, 296, 301, 310, 313, 315, 342, 343, 347, 356, 375, 377, 397, 399, 402, 403, 407, 411, 413, 418, 420, 423, 427, 428, 432, 435, 436, 437, 441, 444, 445, 457, 478, 481, 491, 494, 503, 530, 536, 540, 544, 546, 548, 553, 554, 556, 557, 588, 594, 610, 617, 622, 628, 629, 630, 634, 635, 639, 647, 650, 652, 663, 672, 677, 681, 682, 684, 687, 690, 694, 695, 698, 699, 714, 730, 734, 735, 737, 739, 744, 746, 758, 766, 769, 774, 782, 791, 799, 803, 805, 808, 809, 811, 818, 833, 853, 863, 870, 871, 872, 873, 875, 879, 881, 883, 887, 888, 890, 895, 900, 902, 908, 916, 933, 937, 938, 941, 942, 950, 954, 955, 958, 959, 961, 964, 972, 976, 977, 981, 991, 994, 995, 999, 1006, 1013, 1024, 1028, 1038, 1043, 1059, 1064, 1069, 1071, 1072, 1073, 1077, 1080, 1082, 1086, 1089, 1093, 1098, 1100, 1105, 1107, 1120, 1121], "idea": [13, 14, 132, 133, 193, 206, 215, 225, 258, 260, 261, 262, 277, 280, 287, 401, 625, 647, 685, 693, 766, 863, 898, 908, 928, 952, 963, 987, 995, 1091, 1123], "choosealicens": 13, "appear": [13, 133, 134, 135, 136, 137, 138, 139, 140, 143, 153, 157, 161, 163, 165, 166, 185, 194, 221, 261, 262, 283, 332, 375, 378, 422, 423, 440, 511, 552, 695, 762, 766, 774, 790, 870, 871, 872, 883, 941, 963, 1035, 1036, 1046, 1055, 1081, 1086], "help": [13, 29, 132, 133, 135, 136, 144, 148, 166, 185, 189, 194, 202, 208, 213, 215, 218, 221, 225, 228, 231, 233, 246, 253, 258, 262, 267, 285, 301, 305, 310, 328, 378, 399, 401, 403, 404, 413, 422, 539, 542, 548, 635, 648, 683, 693, 695, 737, 805, 865, 870, 955, 987, 990, 1016, 1019, 1089, 1098, 1105, 1120], "happen": [13, 27, 109, 110, 132, 133, 135, 148, 165, 169, 173, 192, 211, 275, 315, 383, 395, 399, 403, 417, 422, 542, 559, 631, 663, 677, 680, 702, 729, 762, 766, 783, 798, 799, 803, 872, 896, 898, 908, 913, 937, 975, 976, 1015, 1029, 1032, 1046, 1063, 1069, 1098, 1107, 1120], "clone": [13, 60, 76, 108, 112, 115, 125, 135, 136, 139, 160, 162, 165, 182, 194, 195, 211, 238, 240, 270, 277, 280, 310, 315, 478, 481, 555, 739, 766, 767, 870, 954, 955], "jfasch": [13, 39, 42, 60, 105, 112, 113, 115, 129, 130, 136, 137, 138, 143, 144, 148, 152, 161, 162, 163, 166, 169, 182, 192, 202, 205, 208, 209, 211, 213, 218, 221, 228, 231, 233, 238, 240, 246, 249, 251, 252, 253, 258, 259, 260, 262, 263, 266, 267, 272, 276, 277, 280, 284, 288, 309, 310, 315, 318, 420, 422, 423, 425, 426, 428, 429, 431, 433, 442, 478, 492, 493, 494, 495, 513, 555, 615, 693, 694, 695, 739, 741, 766, 792, 793, 794, 797, 798, 801, 803, 808, 811, 822, 827, 828, 829, 845, 848, 850, 851, 855, 857, 859, 870, 873, 881, 882, 883, 888, 894, 896, 897, 898, 919, 924, 940, 941, 942, 943, 952, 954, 955, 956, 957, 958, 961, 963, 964, 967, 991, 1010, 1016, 1019, 1042, 1085, 1086, 1098, 1100], "home": [13, 31, 39, 41, 42, 49, 60, 64, 99, 115, 129, 130, 134, 136, 137, 138, 140, 144, 148, 161, 162, 163, 166, 185, 192, 202, 205, 206, 208, 213, 218, 221, 228, 231, 233, 238, 240, 246, 249, 251, 253, 263, 267, 318, 413, 420, 422, 423, 425, 426, 428, 429, 431, 433, 442, 492, 493, 494, 495, 555, 615, 648, 693, 694, 695, 719, 741, 766, 792, 793, 794, 796, 801, 803, 805, 806, 808, 811, 816, 818, 820, 822, 823, 826, 827, 829, 830, 831, 832, 833, 837, 840, 843, 846, 848, 850, 851, 857, 862, 873, 874, 879, 881, 882, 919, 921, 937, 940, 941, 942, 952, 954, 955, 956, 957, 958, 961, 964, 967, 1016, 1042, 1051, 1085, 1086, 1098, 1100], "built": [13, 28, 112, 132, 133, 135, 136, 139, 144, 161, 166, 168, 169, 177, 178, 190, 193, 202, 208, 213, 216, 218, 219, 221, 225, 233, 242, 246, 249, 251, 266, 275, 284, 345, 349, 373, 394, 420, 428, 431, 432, 456, 478, 591, 648, 704, 709, 735, 739, 741, 766, 870, 872, 883, 941, 942, 943, 948, 956, 961, 964, 968, 984, 999, 1015, 1064, 1070, 1071, 1088, 1098, 1100, 1101, 1116, 1120, 1128], "wonder": [13, 734, 752, 779, 966], "gener": [13, 23, 24, 29, 38, 64, 67, 68, 77, 79, 80, 108, 109, 110, 126, 130, 133, 137, 140, 145, 152, 155, 165, 169, 170, 172, 173, 174, 175, 184, 192, 200, 201, 202, 206, 207, 209, 210, 211, 212, 214, 216, 217, 218, 222, 223, 224, 225, 230, 231, 245, 247, 251, 260, 265, 267, 271, 272, 274, 286, 313, 316, 333, 343, 345, 351, 356, 367, 377, 395, 401, 404, 406, 407, 410, 420, 421, 422, 426, 481, 483, 489, 492, 500, 535, 542, 546, 562, 570, 571, 574, 625, 643, 646, 673, 687, 693, 699, 707, 746, 748, 750, 769, 799, 810, 826, 863, 865, 870, 883, 908, 937, 938, 940, 943, 954, 955, 961, 962, 963, 965, 983, 989, 991, 992, 993, 999, 1003, 1020, 1021, 1022, 1023, 1036, 1062, 1064, 1071, 1073, 1074, 1076, 1077, 1086, 1093, 1098, 1121, 1122, 1129], "content": [13, 27, 38, 48, 49, 56, 62, 165, 172, 173, 174, 185, 193, 211, 213, 221, 243, 249, 302, 377, 380, 382, 495, 538, 588, 596, 684, 768, 771, 792, 793, 794, 808, 811, 813, 814, 848, 851, 859, 871, 875, 898, 940, 995, 1014, 1020, 1033, 1063, 1083, 1100, 1133], "which": [13, 14, 17, 28, 56, 67, 77, 79, 82, 88, 109, 110, 118, 125, 126, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 144, 148, 153, 155, 161, 162, 163, 165, 169, 171, 173, 185, 192, 194, 202, 206, 208, 209, 221, 224, 225, 233, 234, 251, 252, 255, 257, 262, 267, 280, 284, 291, 328, 346, 351, 352, 358, 362, 383, 395, 407, 417, 418, 419, 420, 422, 425, 427, 428, 435, 437, 448, 478, 479, 480, 481, 484, 486, 487, 488, 489, 490, 492, 507, 518, 524, 537, 544, 546, 550, 552, 560, 607, 617, 621, 622, 628, 629, 631, 640, 646, 647, 685, 689, 690, 698, 699, 715, 717, 719, 735, 744, 766, 768, 786, 792, 799, 803, 805, 808, 809, 810, 811, 817, 819, 822, 826, 839, 850, 853, 862, 863, 866, 870, 871, 872, 883, 892, 893, 896, 898, 900, 901, 903, 908, 913, 920, 922, 924, 925, 933, 938, 941, 946, 954, 958, 961, 963, 965, 975, 976, 980, 988, 992, 995, 1004, 1035, 1054, 1056, 1059, 1061, 1077, 1079, 1080, 1082, 1085, 1100, 1105, 1118], "differ": [13, 34, 37, 58, 61, 68, 75, 80, 84, 87, 120, 132, 133, 138, 140, 144, 154, 161, 165, 169, 181, 205, 206, 249, 251, 257, 258, 260, 267, 285, 291, 296, 331, 343, 351, 356, 357, 373, 374, 377, 395, 401, 403, 407, 417, 419, 436, 437, 481, 492, 494, 513, 520, 521, 530, 539, 540, 544, 550, 552, 553, 562, 566, 571, 610, 613, 617, 639, 652, 655, 682, 697, 710, 717, 739, 744, 758, 764, 766, 786, 791, 797, 801, 802, 804, 823, 848, 863, 866, 870, 872, 879, 890, 898, 900, 913, 922, 924, 925, 945, 950, 955, 957, 958, 963, 976, 983, 991, 1004, 1008, 1013, 1014, 1015, 1073, 1082, 1100, 1101, 1121, 1123], "so": [13, 17, 23, 31, 36, 38, 48, 54, 65, 120, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 177, 178, 183, 191, 193, 194, 195, 204, 205, 206, 235, 249, 257, 259, 263, 275, 287, 296, 305, 310, 313, 328, 342, 346, 347, 355, 357, 373, 383, 384, 386, 395, 399, 401, 403, 404, 408, 418, 420, 423, 425, 430, 431, 435, 457, 459, 478, 494, 507, 546, 553, 557, 570, 593, 600, 609, 616, 625, 674, 684, 689, 692, 693, 695, 710, 725, 727, 730, 735, 739, 741, 744, 766, 779, 791, 805, 806, 808, 810, 816, 818, 820, 826, 830, 837, 863, 869, 870, 871, 872, 875, 877, 879, 887, 890, 893, 898, 900, 908, 926, 928, 937, 940, 941, 942, 943, 954, 956, 957, 966, 967, 971, 983, 988, 990, 995, 1012, 1014, 1016, 1018, 1028, 1032, 1038, 1042, 1069, 1072, 1080, 1087, 1090, 1098, 1100, 1104, 1105, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1128, 1131, 1136], "ye": [13, 31, 49, 60, 135, 136, 139, 144, 185, 307, 593, 702, 793, 794, 811, 813, 814, 872, 883, 940, 1008, 1041], "realli": [13, 21, 42, 49, 52, 54, 55, 64, 134, 135, 136, 138, 140, 154, 165, 169, 172, 436, 652, 689, 699, 719, 758, 871, 872, 883, 906, 1064, 1071, 1077], "great": [13, 77, 138, 140, 195, 215, 225, 417, 536, 551, 707, 766, 871, 1118, 1123], "static": [13, 23, 64, 96, 102, 103, 109, 110, 112, 133, 135, 137, 139, 140, 150, 160, 194, 195, 202, 208, 211, 218, 221, 225, 249, 258, 260, 267, 310, 316, 379, 385, 389, 392, 394, 396, 403, 405, 407, 409, 414, 415, 420, 425, 426, 430, 432, 441, 455, 463, 475, 476, 477, 478, 479, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 521, 530, 535, 539, 542, 553, 558, 561, 564, 580, 584, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 637, 646, 675, 677, 679, 680, 684, 695, 698, 704, 709, 716, 718, 719, 725, 744, 762, 766, 768, 862, 908, 911, 913, 915, 924, 930, 937, 941, 942, 943, 945, 946, 947, 948, 950, 1075, 1110, 1113, 1115, 1116, 1117], "It": [13, 21, 38, 42, 44, 54, 58, 61, 77, 121, 132, 133, 134, 135, 138, 139, 140, 143, 144, 153, 155, 157, 161, 162, 166, 171, 172, 185, 194, 195, 202, 208, 211, 218, 221, 225, 233, 238, 240, 249, 252, 255, 258, 284, 323, 324, 340, 351, 355, 373, 378, 401, 403, 417, 435, 440, 445, 448, 457, 459, 481, 484, 485, 492, 493, 539, 619, 631, 648, 649, 685, 695, 719, 730, 766, 793, 794, 805, 808, 823, 862, 863, 871, 872, 893, 898, 900, 901, 903, 916, 920, 925, 941, 942, 952, 957, 962, 964, 975, 983, 987, 988, 1021, 1037, 1042, 1046, 1049, 1055, 1070, 1076, 1088, 1098, 1099, 1118, 1120, 1121, 1123], "let": [13, 17, 41, 58, 61, 62, 133, 134, 135, 138, 139, 140, 143, 148, 155, 156, 157, 162, 163, 195, 209, 213, 215, 221, 225, 252, 255, 257, 259, 262, 277, 280, 399, 407, 417, 419, 421, 428, 431, 435, 437, 439, 444, 457, 463, 480, 491, 492, 494, 497, 513, 527, 537, 538, 550, 554, 556, 557, 607, 613, 619, 625, 635, 652, 680, 684, 689, 693, 735, 739, 758, 766, 774, 801, 810, 823, 828, 863, 870, 871, 883, 896, 898, 899, 913, 922, 924, 940, 942, 952, 955, 956, 962, 964, 968, 1005, 1012, 1014, 1021, 1029, 1051, 1059, 1064, 1071, 1072, 1077, 1080, 1098, 1118], "me": [13, 23, 31, 36, 58, 61, 112, 127, 132, 133, 134, 135, 138, 139, 140, 143, 144, 148, 161, 162, 163, 165, 169, 192, 194, 195, 219, 270, 310, 399, 401, 402, 417, 420, 524, 548, 613, 648, 689, 695, 739, 801, 828, 863, 871, 872, 883, 887, 940, 943, 952, 968, 971, 1012, 1064, 1068, 1099], "focu": [13, 136, 140, 143, 157, 165, 169, 252, 255, 406, 410, 442, 634, 663, 863, 871, 873, 988, 1071, 1092, 1121], "myself": [13, 129, 130, 140, 161, 169, 184, 200, 739, 801, 823, 828, 845], "ey": [13, 31, 36, 218, 221, 231, 253, 999], "toward": [13, 165, 316, 399, 459, 588], "consist": [13, 27, 165, 180, 221, 287, 301, 318, 332, 335, 373, 375, 413, 484, 492, 537, 826, 900, 934, 988, 989, 992, 1033, 1042, 1066, 1087], "won": [13, 143, 144, 221, 251, 296, 330, 397, 422, 491, 493, 539, 689, 695, 734, 746, 871, 883, 890, 943, 965, 1014], "break": [13, 35, 37, 126, 156, 165, 166, 171, 178, 184, 185, 193, 205, 208, 214, 215, 218, 221, 224, 225, 228, 231, 246, 253, 267, 302, 367, 371, 372, 379, 385, 389, 392, 396, 399, 403, 405, 407, 409, 414, 415, 417, 578, 609, 619, 621, 628, 637, 663, 671, 675, 696, 709, 716, 718, 719, 756, 888, 889, 898, 924, 930, 937, 968, 976, 1014, 1077], "move": [13, 53, 62, 98, 112, 117, 121, 130, 134, 144, 162, 170, 173, 184, 195, 211, 236, 239, 248, 249, 260, 269, 270, 294, 295, 310, 313, 417, 418, 431, 475, 484, 513, 538, 539, 546, 547, 548, 549, 551, 597, 643, 663, 675, 687, 691, 694, 696, 697, 700, 707, 708, 709, 715, 716, 718, 719, 735, 768, 790, 793, 794, 795, 796, 829, 830, 831, 832, 835, 836, 837, 838, 840, 846, 862, 863, 887, 888, 925, 958, 995, 1094, 1117, 1118, 1119, 1126, 1127], "around": [13, 24, 36, 58, 61, 97, 112, 113, 133, 134, 135, 140, 144, 154, 165, 169, 193, 219, 230, 237, 238, 240, 260, 291, 356, 431, 445, 447, 456, 481, 537, 633, 636, 638, 688, 690, 718, 719, 766, 771, 898, 913, 934, 937, 958, 964, 980, 984, 986, 1008, 1060, 1064, 1066, 1070, 1071, 1082, 1083, 1086], "last": [13, 58, 61, 112, 129, 133, 134, 135, 150, 155, 165, 166, 172, 184, 185, 192, 200, 202, 205, 208, 209, 218, 221, 231, 246, 251, 253, 267, 301, 307, 314, 316, 383, 401, 565, 567, 568, 569, 570, 574, 577, 666, 669, 670, 671, 717, 719, 766, 826, 829, 832, 848, 857, 859, 862, 890, 895, 903, 912, 917, 919, 924, 939, 950, 961, 962, 963, 964, 968, 972, 976, 977, 983, 984, 989, 997, 1005, 1006, 1010, 1012, 1015, 1016, 1026, 1053, 1059, 1061, 1072, 1077, 1085, 1086, 1099, 1106, 1136], "least": [13, 24, 36, 58, 61, 64, 80, 135, 143, 157, 161, 163, 165, 172, 173, 192, 194, 195, 209, 211, 221, 225, 251, 255, 257, 267, 269, 331, 349, 355, 356, 369, 395, 398, 399, 407, 423, 435, 507, 592, 635, 685, 687, 694, 699, 702, 729, 762, 764, 798, 863, 865, 873, 911, 934, 938, 959, 968, 972, 988, 989, 999, 1022, 1070, 1106], "ha": [13, 21, 24, 27, 28, 42, 44, 52, 55, 62, 77, 109, 110, 120, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 148, 153, 155, 157, 161, 162, 165, 169, 171, 172, 173, 183, 185, 189, 190, 192, 193, 195, 202, 205, 208, 211, 213, 215, 216, 218, 221, 225, 228, 231, 234, 242, 243, 246, 249, 250, 251, 252, 253, 255, 257, 258, 260, 263, 266, 267, 273, 275, 284, 285, 294, 296, 303, 305, 307, 316, 330, 339, 342, 352, 355, 356, 365, 368, 376, 377, 384, 390, 391, 394, 398, 400, 401, 407, 413, 417, 419, 422, 428, 430, 431, 432, 433, 435, 436, 437, 440, 445, 446, 449, 457, 462, 476, 478, 488, 511, 521, 536, 538, 539, 540, 541, 544, 545, 546, 549, 550, 553, 560, 570, 591, 592, 609, 610, 613, 622, 623, 628, 629, 631, 640, 642, 645, 648, 657, 658, 659, 663, 672, 673, 674, 677, 685, 693, 695, 698, 699, 701, 707, 717, 719, 720, 730, 735, 760, 762, 764, 766, 776, 779, 780, 782, 786, 793, 797, 798, 799, 801, 803, 804, 805, 811, 822, 824, 829, 855, 863, 869, 870, 871, 872, 881, 883, 886, 892, 898, 908, 910, 911, 913, 921, 922, 924, 925, 926, 927, 934, 938, 940, 954, 956, 957, 959, 961, 962, 963, 966, 968, 971, 976, 977, 978, 986, 988, 991, 994, 995, 999, 1004, 1005, 1009, 1026, 1046, 1061, 1063, 1064, 1070, 1071, 1072, 1073, 1077, 1085, 1086, 1088, 1090, 1098, 1100, 1105, 1107, 1118, 1120, 1121, 1123, 1126, 1127], "extens": [13, 14, 23, 28, 31, 36, 39, 128, 143, 165, 192, 194, 202, 208, 218, 221, 296, 377, 417, 445, 536, 674, 717, 720, 791, 803, 940, 971, 988, 991, 1093, 1098], "interfac": [13, 52, 55, 71, 72, 73, 77, 79, 81, 84, 105, 129, 130, 133, 150, 152, 153, 160, 169, 195, 209, 211, 219, 223, 241, 242, 249, 258, 276, 291, 299, 300, 310, 311, 312, 316, 319, 328, 329, 417, 423, 424, 429, 434, 435, 436, 437, 440, 441, 447, 455, 459, 461, 462, 483, 487, 489, 513, 535, 560, 608, 610, 632, 674, 681, 682, 698, 699, 719, 862, 863, 868, 870, 872, 906, 940, 962, 1076, 1117, 1122, 1123, 1129, 1132, 1135], "lot": [13, 64, 68, 91, 96, 130, 132, 133, 135, 140, 144, 162, 165, 169, 185, 262, 313, 349, 398, 403, 407, 413, 427, 530, 607, 719, 750, 760, 766, 795, 796, 805, 826, 862, 871, 888, 940, 955, 983, 988, 1010, 1066, 1119], "littl": [13, 27, 43, 135, 137, 140, 143, 144, 153, 165, 193, 202, 208, 209, 211, 218, 221, 243, 249, 260, 328, 378, 406, 407, 418, 547, 550, 553, 609, 615, 695, 698, 722, 863, 865, 871, 919, 941, 1011, 1080], "maintain": [13, 28, 30, 53, 69, 79, 130, 132, 133, 140, 162, 171, 192, 194, 202, 206, 208, 218, 221, 230, 310, 324, 403, 417, 585, 635, 646, 744, 766, 774, 776, 778, 909, 940, 941, 942, 944, 950, 955, 956, 957, 958, 1006, 1069, 1120], "packag": [13, 21, 23, 29, 31, 60, 96, 103, 112, 116, 122, 123, 129, 134, 148, 163, 165, 166, 169, 170, 172, 179, 184, 190, 192, 193, 194, 200, 202, 206, 208, 209, 212, 216, 218, 219, 221, 222, 224, 227, 230, 233, 251, 261, 262, 266, 270, 275, 280, 284, 287, 310, 311, 312, 313, 317, 328, 329, 420, 422, 425, 426, 719, 739, 862, 870, 871, 942, 947, 950, 965, 988, 995, 1017, 1018, 1020, 1021, 1022, 1023, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1070, 1074, 1078, 1079, 1080, 1085, 1086, 1097, 1098, 1099, 1101, 1102, 1107, 1120], "virtual": [13, 29, 68, 79, 105, 106, 113, 129, 135, 138, 140, 160, 165, 169, 180, 184, 200, 216, 219, 222, 233, 238, 240, 242, 249, 258, 259, 260, 261, 262, 266, 277, 280, 283, 284, 287, 317, 328, 329, 432, 436, 438, 441, 442, 447, 449, 455, 459, 464, 466, 467, 468, 471, 472, 473, 474, 475, 476, 483, 493, 533, 535, 560, 607, 608, 609, 632, 674, 682, 693, 695, 699, 719, 725, 797, 802, 805, 864, 870, 872, 881, 890, 906, 924, 934, 988, 991, 1017, 1018, 1019, 1062, 1064, 1065, 1066, 1070, 1078, 1080, 1092, 1095, 1098, 1117, 1124, 1133], "environ": [13, 21, 29, 64, 74, 77, 96, 103, 112, 121, 129, 133, 144, 148, 169, 175, 184, 185, 190, 200, 203, 206, 216, 219, 222, 233, 239, 242, 248, 261, 262, 266, 269, 270, 277, 280, 283, 284, 287, 311, 312, 323, 324, 442, 462, 476, 491, 492, 493, 494, 555, 693, 694, 719, 796, 800, 804, 805, 826, 827, 846, 862, 863, 903, 920, 925, 941, 950, 951, 952, 957, 959, 971, 991, 993, 1017, 1018, 1019, 1062, 1064, 1065, 1066, 1070, 1071, 1078, 1080, 1092, 1093, 1095, 1098, 1099, 1105, 1109, 1111], "repo": [13, 113, 115, 144, 148, 160, 163, 174, 296, 301, 310, 314, 315, 503, 504, 505, 506, 508, 509, 510, 739, 766, 768, 954, 1107], "creat": [13, 17, 21, 24, 38, 41, 43, 53, 58, 60, 61, 62, 76, 98, 100, 101, 108, 112, 113, 116, 119, 126, 129, 133, 134, 135, 137, 140, 143, 144, 148, 150, 152, 153, 154, 169, 170, 171, 172, 173, 174, 185, 190, 198, 203, 208, 209, 211, 216, 218, 221, 225, 230, 233, 238, 239, 240, 248, 249, 257, 260, 261, 262, 266, 267, 269, 270, 272, 277, 280, 284, 287, 310, 315, 334, 411, 413, 419, 420, 433, 435, 437, 440, 441, 442, 455, 456, 457, 461, 463, 464, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 535, 537, 540, 551, 591, 593, 609, 624, 627, 629, 638, 640, 663, 677, 680, 689, 695, 696, 708, 709, 714, 715, 717, 718, 719, 722, 725, 729, 730, 735, 737, 739, 741, 744, 750, 762, 766, 795, 796, 797, 798, 799, 800, 806, 808, 809, 813, 814, 815, 817, 819, 821, 824, 830, 831, 833, 835, 836, 837, 838, 840, 846, 862, 870, 871, 872, 874, 875, 876, 878, 879, 881, 883, 885, 891, 892, 893, 900, 901, 902, 903, 908, 909, 910, 916, 917, 920, 923, 924, 925, 932, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 955, 956, 961, 962, 964, 966, 968, 972, 976, 977, 978, 980, 994, 995, 1004, 1005, 1006, 1015, 1018, 1019, 1020, 1032, 1040, 1041, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1064, 1066, 1067, 1068, 1070, 1073, 1076, 1080, 1089, 1098, 1100, 1101, 1120], "popul": [13, 135, 139, 225, 258, 722], "yourself": [13, 133, 140, 144, 155, 211, 362, 538, 555, 560, 771, 828, 911, 934, 987, 1123], "root": [13, 37, 62, 79, 112, 115, 132, 138, 140, 143, 144, 155, 160, 161, 162, 169, 173, 183, 205, 211, 221, 225, 228, 231, 246, 249, 253, 263, 267, 295, 296, 301, 330, 397, 406, 410, 413, 422, 430, 436, 494, 556, 612, 717, 730, 766, 767, 768, 797, 801, 803, 822, 826, 838, 839, 845, 848, 850, 851, 852, 854, 855, 857, 863, 870, 871, 872, 874, 875, 879, 888, 893, 898, 906, 926, 940, 943, 952, 954, 963, 1042, 1051, 1052, 1089, 1098], "activ": [13, 138, 148, 150, 173, 233, 635, 746, 748, 752, 760, 801, 803, 858, 1018, 1098, 1100], "txt": [13, 32, 41, 43, 112, 128, 135, 151, 152, 156, 159, 160, 161, 162, 163, 192, 194, 199, 202, 211, 212, 221, 233, 243, 277, 280, 301, 302, 342, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 478, 491, 492, 493, 494, 495, 514, 517, 520, 521, 523, 526, 529, 532, 626, 717, 737, 792, 793, 794, 806, 810, 820, 830, 831, 832, 833, 837, 838, 845, 866, 870, 871, 872, 906, 929, 932, 936, 941, 942, 952, 963, 1010, 1033, 1051, 1100, 1101, 1104, 1107, 1109], "fedorish": [13, 739, 883, 1080], "your": [13, 42, 64, 101, 108, 112, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 148, 149, 162, 165, 168, 169, 173, 185, 193, 194, 211, 219, 225, 238, 240, 242, 249, 252, 255, 291, 296, 307, 316, 318, 362, 397, 405, 407, 409, 414, 415, 417, 426, 436, 440, 461, 478, 481, 492, 494, 495, 552, 626, 627, 629, 630, 637, 643, 651, 675, 716, 718, 719, 741, 758, 766, 771, 792, 793, 794, 796, 803, 805, 806, 815, 816, 817, 818, 819, 820, 821, 827, 830, 831, 832, 833, 835, 844, 862, 863, 870, 872, 874, 875, 879, 883, 898, 900, 952, 955, 966, 977, 983, 988, 992, 1033, 1047, 1051, 1052, 1064, 1069, 1080, 1090, 1093, 1098, 1099, 1100, 1107, 1123], "mileag": [13, 238, 240, 1080, 1098], "might": [13, 27, 58, 60, 61, 132, 133, 134, 136, 138, 140, 143, 144, 148, 161, 163, 165, 173, 194, 202, 208, 213, 218, 221, 252, 255, 258, 284, 296, 321, 393, 407, 417, 422, 431, 432, 437, 440, 461, 494, 544, 553, 672, 682, 695, 696, 697, 717, 741, 752, 756, 762, 766, 808, 863, 870, 871, 872, 883, 888, 897, 919, 926, 937, 952, 955, 963, 972, 975, 988, 1066, 1080, 1098, 1101, 1105], "vari": [13, 202, 208, 218, 221, 225, 238, 240, 261, 262, 283, 287, 333, 407, 591, 710, 766, 872, 957, 1076, 1080, 1098, 1118], "dnf": [13, 60, 129, 136, 144, 148, 162, 330, 423, 430, 507, 739, 767, 865, 883, 942, 954, 1080, 1105, 1107], "pandoc": 13, "graphviz": [13, 426, 942], "dia": [13, 205, 263, 848, 1021], "gtest": [13, 43, 64, 112, 160, 161, 162, 163, 330, 435, 436, 437, 439, 440, 442, 444, 457, 459, 460, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 530, 537, 538, 539, 550, 551, 553, 554, 555, 556, 557, 615, 640, 642, 645, 646, 647, 678, 684, 689, 693, 694, 695, 696, 698, 713, 714, 715, 717, 719, 1103], "devel": [13, 129, 144, 162, 423, 425, 430, 739, 1105, 1107], "markdown": [13, 23, 305, 1019], "handl": [13, 21, 29, 45, 73, 127, 133, 153, 165, 169, 170, 172, 174, 180, 193, 195, 200, 202, 206, 209, 210, 218, 223, 230, 242, 249, 259, 266, 267, 277, 280, 310, 315, 317, 323, 324, 331, 371, 378, 383, 399, 403, 423, 483, 513, 535, 550, 560, 593, 597, 619, 628, 629, 630, 663, 665, 692, 695, 707, 708, 718, 719, 725, 729, 748, 760, 796, 799, 800, 862, 870, 885, 887, 888, 889, 890, 891, 892, 893, 895, 898, 900, 901, 903, 911, 917, 920, 923, 925, 928, 934, 937, 965, 983, 988, 989, 1004, 1014, 1062, 1064, 1091, 1117, 1123, 1132], "jupyt": [13, 148, 153, 154, 156, 165, 166, 168, 176, 216, 218, 219, 221, 222, 251, 252, 255, 256, 262, 266, 272, 277, 280, 284, 288, 310, 315, 848, 988, 1066, 1067, 1071, 1128], "notebook": [13, 31, 148, 152, 153, 154, 156, 165, 168, 176, 209, 216, 219, 221, 222, 224, 227, 230, 233, 242, 245, 251, 252, 255, 256, 262, 266, 272, 277, 280, 284, 288, 295, 315, 988, 1066, 1071, 1128], "those": [13, 24, 77, 126, 133, 134, 140, 143, 148, 163, 165, 169, 174, 192, 194, 195, 202, 206, 211, 212, 213, 215, 221, 225, 257, 258, 259, 260, 262, 277, 295, 307, 310, 316, 321, 342, 397, 407, 417, 419, 421, 422, 423, 436, 437, 440, 441, 507, 550, 572, 613, 616, 623, 638, 673, 689, 697, 699, 717, 732, 735, 766, 793, 794, 810, 811, 863, 870, 871, 872, 937, 956, 957, 958, 959, 963, 964, 965, 971, 976, 987, 1028, 1038, 1059, 1069, 1077, 1078, 1083, 1085, 1098, 1120, 1121, 1123], "funki": [13, 17, 135], "graph": [13, 29, 77, 86, 203, 216, 230, 233, 266, 272, 310, 317, 412, 426, 432, 942, 956, 957, 1064, 1070], "histor": [13, 24, 77, 135, 157, 343, 356, 401, 634, 725, 804, 883, 938, 1055, 1110], "baggag": [13, 343, 356, 634, 938, 1055], "convert": [13, 17, 29, 41, 126, 154, 184, 192, 198, 202, 205, 208, 211, 215, 218, 221, 222, 225, 242, 267, 277, 280, 295, 356, 378, 403, 413, 421, 426, 436, 491, 606, 613, 647, 648, 719, 720, 900, 940, 979, 1021, 1023, 1028, 1035, 1038, 1057, 1058, 1059, 1062, 1077], "draw": [13, 130, 173, 284, 318, 353, 489, 687, 723, 727, 735, 756, 779], "svg": [13, 130], "ani": [13, 38, 44, 48, 117, 126, 129, 132, 133, 134, 135, 138, 140, 144, 148, 153, 157, 168, 171, 173, 185, 192, 194, 202, 208, 218, 221, 225, 236, 237, 238, 246, 262, 267, 284, 291, 296, 317, 318, 351, 395, 403, 417, 440, 445, 487, 488, 489, 490, 494, 495, 507, 524, 542, 545, 571, 609, 617, 622, 635, 638, 640, 657, 663, 681, 682, 685, 694, 695, 696, 698, 699, 707, 717, 724, 725, 737, 739, 758, 766, 776, 783, 793, 794, 803, 806, 813, 814, 817, 818, 819, 826, 838, 848, 863, 870, 871, 872, 875, 898, 909, 913, 933, 959, 961, 962, 963, 964, 968, 975, 976, 983, 986, 995, 1000, 1002, 1013, 1014, 1019, 1043, 1045, 1060, 1071, 1087, 1092, 1093, 1105, 1118, 1123], "That": [13, 83, 97, 98, 112, 132, 133, 134, 135, 138, 143, 144, 148, 157, 165, 169, 172, 211, 235, 239, 241, 255, 258, 260, 321, 385, 386, 389, 392, 396, 405, 409, 414, 415, 423, 436, 437, 447, 459, 461, 463, 479, 481, 494, 541, 545, 627, 637, 675, 701, 707, 708, 716, 718, 719, 793, 794, 796, 797, 799, 800, 802, 803, 812, 815, 816, 817, 818, 819, 820, 821, 826, 862, 863, 871, 874, 875, 876, 877, 878, 881, 899, 903, 917, 923, 925, 950, 951, 962, 988, 995, 1054, 1056, 1061, 1090, 1098, 1108, 1118], "sloppili": [13, 896], "track": [13, 136, 140, 148, 172, 192, 202, 208, 218, 221, 694, 739, 766, 767, 771, 803, 975], "opentrain": [13, 22, 28, 117, 130, 170, 177, 195, 318, 329, 1098, 1128], "recip": [13, 38, 125, 129, 133, 134, 311, 312, 397, 562], "sphinx": [14, 17, 23, 38, 64, 129, 130, 145, 316, 720, 1098], "togeth": [14, 24, 42, 49, 103, 105, 109, 110, 123, 140, 143, 144, 148, 153, 163, 165, 169, 173, 185, 194, 211, 238, 240, 257, 258, 260, 275, 284, 287, 318, 328, 374, 407, 408, 484, 494, 513, 535, 553, 554, 556, 557, 707, 709, 730, 743, 766, 793, 794, 852, 853, 871, 872, 902, 916, 940, 946, 950, 952, 955, 959, 1037, 1070, 1090, 1093, 1101, 1103, 1105, 1118, 1120], "form": [14, 29, 135, 140, 153, 157, 181, 202, 208, 209, 218, 221, 258, 260, 329, 394, 410, 449, 457, 459, 498, 499, 511, 609, 720, 766, 771, 774, 798, 848, 872, 999, 1018, 1021, 1054, 1056, 1059, 1060, 1066, 1072, 1093, 1098, 1118], "short": [14, 31, 34, 42, 105, 113, 133, 140, 148, 161, 165, 169, 172, 173, 174, 184, 185, 202, 206, 207, 208, 213, 216, 218, 219, 223, 241, 257, 258, 259, 260, 261, 262, 333, 349, 351, 356, 360, 361, 386, 395, 441, 455, 483, 495, 535, 540, 544, 719, 762, 768, 771, 805, 826, 851, 870, 872, 883, 890, 900, 922, 927, 960, 974, 997, 1000, 1016, 1088, 1098, 1100, 1118], "video": [14, 22, 127, 136, 138, 140, 151, 165, 168, 169, 172, 177, 190, 193, 194, 216, 260, 263, 266, 418, 685, 863, 871, 1064, 1071, 1080], "explain": [14, 62, 64, 96, 127, 132, 138, 144, 157, 165, 169, 171, 195, 206, 211, 213, 215, 216, 224, 225, 262, 295, 325, 328, 397, 407, 527, 806, 826, 829, 863, 872, 928, 1011, 1064, 1098, 1123], "case": [14, 24, 42, 96, 103, 105, 108, 132, 133, 134, 137, 140, 143, 144, 148, 154, 157, 169, 171, 173, 175, 195, 208, 209, 215, 221, 225, 228, 237, 238, 240, 241, 249, 252, 255, 267, 284, 287, 291, 318, 340, 347, 366, 368, 399, 401, 419, 422, 425, 434, 441, 445, 448, 483, 491, 492, 494, 500, 502, 521, 535, 542, 552, 591, 597, 617, 629, 635, 652, 663, 675, 682, 685, 693, 707, 717, 718, 719, 739, 766, 779, 782, 794, 798, 801, 808, 822, 838, 855, 862, 863, 872, 882, 883, 889, 900, 919, 924, 938, 945, 947, 950, 952, 954, 956, 963, 964, 994, 995, 1006, 1010, 1033, 1072, 1088, 1098, 1106, 1121], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 89, 116, 177, 190, 193, 200, 203, 204, 206, 212, 214, 216, 217, 222, 223, 224, 227, 230, 232, 240, 245, 247, 251, 252, 255, 265, 266, 268, 271, 274, 296, 297, 298, 299, 300, 301, 310, 318, 329, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719, 720, 862, 892, 893, 898, 901, 903, 917, 920, 965, 987, 1017, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1070, 1071, 1077, 1080, 1084, 1092, 1095, 1102, 1117, 1118, 1119, 1128], "s5": [16, 23, 129, 934, 938, 1132], "slide": [16, 23, 24, 27, 36, 129, 130, 133, 151, 158, 160, 165, 169, 173, 174, 175, 184, 185, 194, 195, 211, 237, 238, 249, 321, 324, 329, 530, 778, 935, 939, 1036, 1077, 1114, 1115, 1116, 1124, 1125, 1131, 1132, 1134, 1135, 1136], "work": [16, 24, 27, 39, 41, 42, 43, 56, 60, 70, 77, 79, 97, 98, 103, 105, 108, 115, 118, 119, 129, 130, 132, 133, 134, 136, 138, 139, 140, 143, 144, 148, 157, 161, 162, 163, 172, 173, 175, 185, 190, 192, 194, 202, 203, 206, 208, 209, 211, 216, 218, 221, 225, 230, 239, 242, 248, 249, 251, 252, 255, 262, 263, 266, 267, 269, 270, 272, 296, 310, 315, 316, 318, 323, 324, 329, 330, 374, 375, 395, 397, 407, 417, 419, 420, 422, 423, 425, 426, 428, 429, 431, 433, 436, 437, 440, 441, 442, 455, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 530, 535, 555, 584, 591, 624, 626, 628, 636, 638, 640, 683, 689, 693, 694, 695, 699, 701, 708, 715, 718, 719, 720, 729, 734, 744, 746, 750, 764, 766, 771, 774, 788, 792, 793, 794, 795, 796, 799, 800, 801, 803, 805, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 848, 850, 859, 862, 863, 871, 875, 879, 883, 885, 890, 891, 893, 896, 899, 901, 903, 908, 917, 920, 922, 923, 925, 938, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 957, 963, 964, 967, 986, 989, 990, 991, 1010, 1016, 1018, 1019, 1041, 1051, 1052, 1064, 1071, 1080, 1082, 1083, 1085, 1086, 1088, 1098, 1107, 1118, 1123, 1124, 1130], "progress": [16, 129, 329, 720, 828, 1107], "web": [16, 23, 71, 73, 77, 116, 130, 140, 169, 172, 193, 196, 242, 266, 719, 1064, 1071, 1077, 1080], "note": [16, 31, 35, 39, 43, 59, 62, 112, 116, 118, 132, 133, 135, 140, 153, 154, 165, 184, 192, 194, 205, 206, 208, 233, 262, 267, 284, 287, 301, 302, 419, 423, 425, 429, 459, 507, 530, 539, 540, 546, 551, 610, 652, 672, 673, 674, 685, 687, 693, 694, 695, 697, 725, 766, 783, 793, 794, 853, 871, 889, 900, 952, 1005, 1008, 1010, 1014, 1069, 1080, 1082, 1085, 1105], "screencast": [16, 23, 116, 1064], "written": [16, 41, 42, 77, 105, 132, 133, 138, 148, 171, 221, 312, 374, 377, 393, 401, 403, 407, 420, 457, 547, 613, 626, 646, 720, 805, 892, 899, 934, 941, 942, 950, 982, 989, 1019, 1120], "draft": [16, 29, 165, 719, 862, 1016, 1062, 1063, 1078], "convers": [17, 172, 184, 191, 194, 195, 202, 207, 208, 211, 214, 217, 218, 223, 226, 229, 247, 258, 260, 264, 268, 274, 286, 310, 334, 349, 363, 372, 379, 385, 389, 392, 396, 403, 405, 409, 414, 415, 419, 456, 518, 606, 610, 634, 636, 637, 639, 675, 716, 718, 719, 769, 1014, 1031, 1035, 1038, 1049], "old": [17, 29, 130, 133, 135, 138, 163, 173, 205, 206, 221, 253, 263, 267, 329, 352, 391, 412, 417, 440, 513, 566, 573, 578, 593, 625, 631, 634, 639, 640, 681, 699, 710, 723, 729, 739, 758, 863, 871, 927, 1003, 1009, 1021, 1042, 1088, 1119], "latex": [17, 23, 24, 513], "beamer": [17, 23, 24], "To": [17, 29, 44, 60, 77, 101, 116, 132, 133, 135, 137, 148, 157, 161, 165, 180, 192, 202, 208, 218, 221, 222, 225, 229, 237, 238, 240, 242, 262, 277, 280, 284, 291, 343, 346, 401, 413, 437, 482, 495, 591, 605, 616, 632, 634, 675, 691, 714, 718, 719, 739, 743, 754, 766, 795, 801, 862, 863, 870, 871, 876, 878, 891, 900, 956, 965, 979, 1023, 1029, 1052, 1057, 1058, 1059, 1062, 1070, 1077], "put": [17, 57, 68, 79, 113, 126, 132, 133, 134, 161, 169, 284, 287, 291, 419, 423, 427, 428, 491, 535, 621, 645, 681, 707, 735, 743, 756, 758, 783, 863, 871, 900, 925, 940, 955, 958, 963, 1021, 1103], "more": [17, 21, 27, 29, 42, 44, 58, 61, 64, 68, 77, 81, 89, 96, 100, 105, 112, 113, 126, 130, 133, 134, 137, 138, 140, 143, 144, 146, 148, 154, 155, 157, 162, 165, 169, 170, 171, 172, 173, 174, 175, 177, 179, 184, 185, 190, 192, 193, 194, 195, 196, 200, 203, 206, 207, 209, 210, 211, 212, 214, 215, 216, 219, 222, 223, 224, 226, 227, 229, 233, 237, 238, 239, 240, 244, 247, 248, 258, 259, 260, 267, 269, 270, 274, 276, 284, 291, 296, 297, 298, 299, 300, 301, 313, 315, 321, 328, 329, 340, 345, 349, 352, 356, 366, 367, 368, 377, 379, 385, 386, 389, 392, 396, 397, 402, 403, 405, 407, 409, 411, 412, 413, 414, 415, 419, 422, 424, 425, 428, 441, 448, 455, 457, 461, 462, 473, 478, 483, 491, 493, 513, 530, 535, 539, 543, 592, 606, 607, 608, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 634, 637, 644, 645, 656, 663, 672, 675, 676, 684, 685, 687, 689, 691, 692, 694, 695, 698, 700, 708, 709, 716, 717, 718, 719, 722, 725, 737, 739, 744, 750, 752, 754, 758, 760, 762, 766, 792, 797, 802, 826, 829, 859, 863, 865, 869, 870, 871, 872, 883, 889, 892, 895, 898, 909, 911, 922, 926, 928, 934, 938, 940, 941, 942, 950, 952, 956, 957, 958, 964, 966, 968, 972, 973, 974, 975, 979, 982, 983, 987, 988, 990, 994, 995, 1006, 1017, 1020, 1021, 1022, 1023, 1033, 1035, 1036, 1042, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1069, 1070, 1071, 1073, 1074, 1077, 1078, 1080, 1083, 1087, 1092, 1093, 1095, 1097, 1099, 1100, 1102, 1107, 1111, 1118, 1120, 1121, 1128], "precis": [17, 165, 169, 225, 242, 266, 333, 351, 615, 710, 766, 1009, 1064], "restructuredtext": [17, 23, 31, 32, 33, 34, 35, 37, 720], "turn": [17, 74, 109, 110, 133, 135, 138, 143, 144, 165, 169, 185, 194, 211, 257, 310, 407, 422, 423, 459, 484, 485, 642, 657, 822, 863, 870, 871, 872, 940, 942, 946, 956, 964, 969, 970, 980, 982, 1090], "rst2s5": 17, "tool": [17, 31, 60, 67, 112, 140, 144, 149, 165, 173, 175, 185, 195, 221, 239, 248, 263, 268, 269, 286, 310, 313, 315, 328, 329, 330, 375, 410, 412, 413, 417, 609, 663, 681, 719, 790, 796, 797, 810, 862, 872, 883, 886, 941, 942, 950, 954, 988, 989, 992, 1019, 1083, 1092, 1116, 1118, 1120, 1122, 1129], "thi": [17, 24, 28, 29, 30, 38, 39, 42, 43, 44, 49, 52, 53, 56, 58, 60, 61, 62, 64, 68, 76, 77, 83, 84, 88, 89, 96, 103, 105, 108, 109, 110, 112, 113, 116, 123, 127, 130, 132, 133, 134, 136, 137, 138, 139, 148, 150, 152, 153, 155, 157, 159, 160, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 185, 192, 194, 195, 202, 205, 206, 208, 211, 213, 215, 216, 218, 221, 224, 225, 231, 234, 238, 240, 242, 249, 257, 258, 260, 262, 267, 277, 280, 284, 285, 287, 294, 296, 301, 310, 313, 316, 328, 329, 331, 335, 342, 343, 356, 365, 366, 390, 394, 395, 397, 398, 399, 401, 406, 407, 417, 421, 422, 427, 428, 429, 433, 439, 447, 448, 459, 461, 463, 481, 483, 492, 493, 496, 497, 498, 499, 500, 501, 502, 503, 507, 508, 511, 512, 513, 514, 517, 520, 521, 523, 524, 526, 527, 529, 530, 532, 535, 537, 538, 539, 541, 542, 545, 547, 548, 550, 553, 558, 561, 564, 566, 568, 569, 572, 580, 584, 586, 590, 592, 597, 599, 600, 602, 603, 607, 610, 613, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 644, 645, 646, 657, 663, 665, 666, 669, 670, 671, 672, 673, 674, 675, 680, 683, 685, 687, 688, 691, 693, 695, 697, 698, 699, 700, 707, 708, 709, 710, 716, 717, 718, 719, 720, 725, 730, 735, 739, 741, 748, 762, 766, 771, 778, 786, 793, 794, 797, 798, 805, 808, 810, 811, 820, 822, 823, 826, 831, 833, 863, 868, 869, 870, 871, 872, 875, 882, 883, 889, 896, 897, 898, 899, 900, 904, 907, 916, 919, 928, 929, 932, 933, 936, 938, 941, 942, 944, 950, 952, 953, 954, 955, 956, 958, 959, 960, 961, 962, 965, 968, 970, 972, 974, 976, 983, 986, 987, 988, 990, 992, 999, 1002, 1004, 1005, 1006, 1009, 1010, 1012, 1014, 1015, 1016, 1020, 1036, 1051, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1077, 1078, 1079, 1080, 1081, 1082, 1086, 1089, 1092, 1093, 1098, 1100, 1103, 1104, 1105, 1107, 1109, 1110, 1118, 1120, 1121, 1123, 1126, 1127, 1133], "sens": [17, 77, 135, 137, 154, 157, 162, 165, 184, 432, 440, 457, 542, 553, 560, 607, 635, 648, 727, 766, 805, 872, 896, 919, 926, 933, 983, 1013, 1069, 1121], "entir": [17, 24, 30, 79, 109, 110, 126, 130, 133, 134, 135, 138, 144, 148, 157, 162, 169, 172, 190, 193, 194, 202, 216, 219, 222, 225, 237, 238, 240, 242, 252, 259, 262, 266, 272, 277, 280, 284, 288, 347, 376, 380, 387, 390, 395, 403, 411, 419, 437, 643, 674, 694, 766, 793, 794, 799, 823, 828, 837, 845, 863, 870, 872, 875, 881, 898, 909, 942, 971, 975, 989, 994, 995, 1012, 1014, 1033, 1064, 1098, 1101, 1104, 1121], "site": [17, 23, 27, 38, 60, 64, 116, 129, 130, 133, 145, 148, 160, 161, 162, 166, 192, 202, 208, 218, 221, 284, 552, 698, 805, 1068, 1085, 1086, 1093, 1100, 1107], "massag": [17, 31, 123, 144, 162, 238, 240, 720, 870, 942], "itself": [17, 27, 133, 135, 161, 165, 171, 202, 208, 218, 221, 267, 299, 345, 377, 413, 422, 428, 456, 457, 479, 494, 540, 547, 606, 683, 698, 707, 710, 741, 744, 766, 786, 792, 793, 794, 808, 826, 855, 925, 938, 952, 980, 983, 988, 1009, 1049, 1090, 1107], "upon": [17, 27, 68, 96, 135, 136, 165, 169, 173, 180, 219, 251, 258, 277, 280, 399, 417, 445, 497, 513, 552, 570, 693, 710, 739, 872, 938, 1026, 1090, 1098, 1118], "you": [17, 21, 42, 57, 58, 61, 108, 112, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 148, 149, 153, 154, 155, 157, 161, 162, 165, 169, 171, 172, 173, 185, 190, 192, 193, 194, 195, 202, 205, 208, 209, 211, 215, 216, 218, 219, 221, 225, 233, 242, 249, 252, 255, 258, 260, 262, 266, 296, 301, 307, 310, 313, 315, 318, 341, 342, 355, 371, 397, 401, 417, 459, 478, 479, 480, 481, 485, 488, 491, 492, 494, 527, 538, 539, 545, 550, 553, 554, 556, 557, 571, 592, 600, 607, 613, 621, 622, 626, 643, 649, 677, 687, 698, 714, 715, 717, 739, 741, 758, 766, 771, 792, 793, 794, 797, 798, 801, 805, 806, 812, 816, 818, 820, 826, 827, 828, 830, 831, 832, 833, 837, 838, 863, 866, 870, 871, 872, 873, 874, 875, 877, 879, 882, 883, 887, 889, 893, 898, 900, 908, 909, 910, 911, 912, 916, 940, 941, 942, 943, 945, 948, 952, 955, 956, 959, 964, 965, 974, 976, 987, 988, 992, 995, 1008, 1014, 1021, 1030, 1032, 1047, 1051, 1052, 1061, 1064, 1070, 1077, 1080, 1086, 1098, 1099, 1100, 1107, 1110, 1118, 1123], "view": [17, 62, 138, 139, 143, 154, 156, 169, 171, 237, 238, 242, 249, 291, 328, 345, 347, 410, 637, 675, 684, 686, 718, 719, 793, 794, 803, 810, 863, 872, 874, 995, 1063, 1118, 1121, 1123], "state": [17, 44, 112, 129, 140, 145, 165, 173, 195, 202, 205, 208, 218, 219, 221, 350, 367, 399, 417, 484, 485, 489, 490, 537, 643, 677, 707, 724, 762, 783, 797, 855, 865, 909, 913, 924, 925, 962, 968], "rather": [17, 64, 84, 113, 133, 135, 136, 137, 138, 139, 140, 143, 144, 148, 157, 161, 165, 169, 185, 194, 212, 213, 287, 296, 321, 333, 375, 407, 408, 417, 435, 486, 487, 488, 489, 490, 495, 530, 537, 539, 553, 560, 571, 591, 616, 622, 636, 657, 707, 709, 739, 766, 771, 803, 805, 851, 863, 870, 871, 872, 874, 881, 886, 909, 910, 937, 941, 956, 981, 988, 991, 999, 1039, 1040, 1043, 1054, 1056, 1071, 1078, 1100, 1105, 1118, 1120], "huge": [17, 139, 144, 154, 448, 684, 744, 762, 987, 989, 1094], "tabl": [17, 38, 62, 64, 113, 126, 130, 132, 165, 171, 172, 189, 197, 202, 208, 209, 211, 212, 215, 216, 218, 221, 228, 233, 267, 329, 333, 348, 362, 363, 367, 368, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 615, 637, 675, 684, 716, 718, 719, 805, 1012, 1021, 1053, 1055, 1076, 1077], "isnot": 17, "big": [17, 103, 130, 133, 134, 140, 165, 169, 189, 195, 209, 216, 219, 262, 310, 356, 401, 413, 492, 542, 572, 635, 699, 886, 1064, 1076, 1133], "fat": [17, 130, 132, 136, 140, 209, 629, 699, 797, 1076], "sai": [17, 24, 64, 65, 105, 121, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 148, 153, 154, 165, 169, 206, 211, 233, 252, 255, 259, 261, 262, 283, 284, 296, 310, 401, 407, 413, 423, 433, 437, 446, 457, 463, 478, 480, 492, 521, 530, 539, 549, 597, 610, 622, 631, 635, 663, 667, 669, 670, 671, 673, 678, 685, 688, 689, 694, 725, 739, 766, 805, 808, 810, 845, 863, 870, 872, 883, 887, 898, 900, 910, 922, 933, 937, 943, 952, 955, 956, 962, 966, 988, 1004, 1016, 1021, 1051, 1072, 1107, 1121], "file": [17, 27, 29, 33, 34, 35, 37, 39, 43, 46, 49, 52, 53, 54, 55, 67, 77, 79, 84, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 117, 120, 125, 126, 129, 130, 132, 133, 134, 135, 138, 139, 144, 148, 152, 155, 157, 159, 160, 161, 162, 164, 165, 167, 169, 170, 172, 173, 174, 175, 180, 182, 183, 184, 185, 190, 193, 194, 195, 198, 199, 200, 203, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 222, 223, 224, 225, 227, 229, 232, 233, 237, 238, 239, 242, 246, 248, 251, 252, 254, 255, 261, 262, 264, 268, 269, 273, 275, 276, 283, 284, 287, 295, 296, 297, 298, 299, 300, 307, 310, 311, 312, 313, 314, 315, 321, 323, 324, 328, 339, 342, 343, 373, 374, 376, 377, 378, 379, 385, 389, 392, 396, 400, 405, 409, 411, 413, 414, 415, 418, 420, 422, 424, 425, 426, 431, 432, 435, 441, 455, 478, 479, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 514, 517, 520, 522, 523, 526, 529, 532, 535, 540, 542, 554, 555, 556, 557, 563, 615, 619, 626, 629, 637, 652, 675, 681, 685, 695, 708, 716, 717, 718, 719, 722, 727, 728, 732, 733, 735, 736, 743, 744, 747, 757, 762, 768, 770, 773, 775, 781, 782, 784, 787, 790, 791, 792, 795, 796, 798, 799, 800, 802, 803, 805, 806, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 822, 824, 825, 826, 830, 834, 835, 836, 837, 838, 840, 843, 846, 851, 854, 859, 862, 863, 866, 870, 871, 872, 873, 875, 876, 878, 879, 885, 886, 889, 890, 891, 900, 903, 904, 907, 908, 914, 917, 920, 923, 925, 929, 931, 932, 933, 936, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 956, 957, 958, 963, 964, 965, 968, 971, 976, 979, 982, 987, 991, 993, 995, 1006, 1012, 1015, 1016, 1022, 1023, 1033, 1036, 1047, 1048, 1051, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1077, 1078, 1089, 1093, 1098, 1099, 1100, 1101, 1104, 1106, 1109, 1115, 1120, 1122, 1123, 1124, 1131, 1132, 1133, 1135], "rst": [17, 23, 31, 33, 34, 35, 37, 112, 117, 129, 152, 159, 164, 167, 173, 221, 231, 318, 514, 517, 520, 523, 526, 529, 532, 929, 932, 936, 1104, 1109], "render": [17, 39, 138], "dure": [17, 27, 44, 45, 103, 105, 123, 132, 133, 134, 135, 139, 140, 144, 148, 153, 165, 169, 221, 313, 376, 380, 381, 395, 407, 412, 456, 463, 489, 492, 573, 591, 648, 687, 762, 766, 771, 798, 804, 870, 872, 881, 942, 956, 957, 976, 989, 991, 1006, 1090, 1098], "regular": [17, 133, 157, 168, 182, 198, 205, 206, 213, 232, 233, 235, 237, 238, 247, 266, 267, 335, 401, 419, 550, 552, 684, 717, 754, 766, 811, 845, 848, 850, 859, 872, 883, 933, 934, 976, 1006, 1008, 1064], "process": [17, 28, 60, 62, 64, 72, 77, 79, 96, 98, 109, 110, 112, 138, 143, 150, 157, 163, 165, 172, 173, 175, 209, 239, 248, 261, 262, 269, 283, 312, 313, 320, 325, 378, 384, 413, 422, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 702, 708, 717, 718, 719, 728, 733, 736, 738, 743, 747, 749, 752, 753, 756, 757, 758, 759, 761, 763, 766, 770, 771, 772, 775, 777, 780, 781, 783, 784, 786, 787, 793, 794, 795, 796, 797, 800, 801, 802, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 862, 871, 874, 875, 876, 877, 878, 881, 885, 886, 887, 891, 892, 893, 895, 896, 898, 900, 901, 903, 908, 909, 910, 917, 922, 923, 925, 926, 927, 934, 937, 938, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 958, 967, 975, 988, 989, 1043, 1110, 1123, 1132, 1133], "mean": [17, 29, 72, 73, 109, 110, 112, 133, 135, 138, 140, 154, 156, 157, 169, 189, 192, 193, 206, 208, 221, 225, 252, 267, 275, 283, 287, 295, 296, 333, 354, 355, 356, 378, 397, 402, 407, 461, 539, 547, 550, 551, 617, 663, 685, 689, 697, 698, 719, 725, 741, 801, 808, 811, 813, 814, 822, 863, 870, 871, 872, 899, 906, 922, 926, 928, 956, 959, 968, 983, 991, 994, 1008, 1009, 1014, 1042, 1062, 1065, 1069, 1071, 1072, 1078, 1083, 1091, 1105, 1120, 1123], "specif": [17, 62, 136, 202, 208, 209, 218, 221, 267, 273, 284, 296, 330, 378, 395, 407, 437, 484, 487, 489, 492, 638, 681, 695, 717, 725, 739, 762, 766, 792, 802, 863, 870, 872, 886, 892, 908, 909, 934, 940, 952, 963, 971, 972, 1073, 1089, 1098, 1133, 1134], "markup": [17, 38], "class": [17, 21, 29, 41, 43, 54, 57, 62, 68, 69, 72, 73, 84, 91, 96, 105, 106, 107, 109, 110, 112, 113, 140, 151, 152, 153, 155, 160, 169, 170, 171, 172, 174, 176, 177, 189, 193, 195, 202, 205, 206, 208, 209, 213, 217, 219, 220, 223, 225, 228, 231, 233, 235, 237, 238, 240, 245, 246, 250, 252, 253, 255, 259, 260, 261, 262, 264, 265, 266, 267, 271, 273, 283, 284, 285, 287, 291, 296, 298, 304, 305, 312, 313, 314, 321, 347, 393, 417, 419, 427, 435, 436, 437, 438, 439, 441, 442, 444, 445, 449, 455, 456, 457, 459, 460, 462, 463, 464, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 500, 502, 507, 513, 521, 524, 527, 533, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 548, 549, 551, 553, 558, 560, 561, 564, 570, 579, 580, 586, 590, 596, 599, 602, 603, 608, 609, 610, 612, 613, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 639, 640, 641, 642, 643, 644, 645, 648, 652, 657, 659, 660, 661, 663, 665, 666, 669, 670, 671, 672, 673, 674, 675, 677, 678, 680, 682, 689, 691, 694, 695, 698, 699, 700, 707, 708, 709, 713, 714, 715, 716, 718, 719, 721, 863, 870, 871, 872, 904, 906, 907, 961, 963, 965, 971, 972, 973, 974, 975, 978, 979, 984, 985, 986, 987, 989, 992, 994, 995, 1003, 1023, 1050, 1051, 1052, 1057, 1059, 1062, 1077, 1091, 1092, 1098, 1099, 1110, 1118, 1128], "handout": [17, 112], "warn": [17, 31, 39, 129, 144, 185, 195, 246, 258, 307, 318, 343, 367, 398, 399, 401, 422, 436, 491, 493, 537, 541, 592, 636, 648, 719, 735, 741, 744, 803, 862, 871, 892, 903, 917, 939, 963, 1014, 1093], "produc": [17, 107, 153, 155, 194, 208, 395, 407, 412, 663, 669, 671, 707, 709, 883, 913, 914, 932, 940, 943, 956, 969, 970, 1003, 1006, 1008, 1072], "error": [17, 21, 27, 29, 45, 64, 87, 96, 129, 132, 133, 134, 135, 138, 139, 148, 152, 155, 163, 166, 169, 172, 179, 190, 194, 200, 202, 205, 209, 210, 211, 215, 218, 221, 225, 228, 230, 233, 242, 243, 246, 249, 252, 255, 266, 267, 280, 285, 295, 310, 315, 317, 321, 340, 343, 345, 352, 356, 370, 371, 377, 383, 384, 386, 399, 400, 401, 404, 421, 422, 423, 425, 426, 427, 428, 431, 438, 442, 461, 462, 463, 475, 483, 494, 513, 530, 535, 537, 539, 540, 544, 545, 546, 547, 548, 550, 552, 560, 563, 568, 610, 612, 613, 622, 629, 636, 639, 643, 645, 646, 647, 648, 652, 672, 673, 674, 682, 685, 687, 689, 694, 695, 697, 708, 709, 718, 719, 722, 729, 744, 754, 758, 762, 766, 782, 796, 799, 800, 806, 809, 862, 863, 871, 873, 885, 887, 888, 889, 890, 891, 892, 900, 901, 903, 911, 917, 919, 920, 923, 924, 925, 933, 937, 938, 942, 943, 952, 957, 963, 993, 994, 1005, 1006, 1010, 1014, 1016, 1023, 1036, 1062, 1064, 1071, 1093, 1098, 1100, 1105, 1118], "output": [17, 23, 39, 50, 52, 54, 55, 60, 62, 84, 85, 106, 113, 129, 135, 137, 138, 139, 152, 155, 161, 173, 174, 185, 194, 202, 208, 211, 212, 218, 221, 249, 295, 310, 315, 333, 334, 339, 340, 341, 342, 346, 378, 412, 413, 419, 420, 421, 461, 463, 478, 493, 496, 497, 498, 499, 511, 513, 521, 524, 550, 600, 618, 619, 632, 680, 685, 693, 719, 724, 779, 790, 797, 806, 809, 810, 811, 822, 826, 848, 852, 853, 858, 859, 863, 873, 884, 892, 895, 898, 906, 909, 910, 914, 934, 937, 938, 940, 970, 1009, 1014, 1015, 1025, 1026, 1028, 1029, 1030, 1031, 1033, 1038, 1044, 1046, 1048, 1053, 1054, 1055, 1056, 1067, 1070, 1071, 1076, 1080, 1089, 1093, 1106, 1113, 1129], "must": [17, 38, 42, 43, 109, 110, 112, 136, 140, 155, 161, 165, 166, 168, 169, 172, 176, 177, 190, 192, 194, 202, 208, 209, 216, 218, 219, 221, 242, 267, 284, 333, 350, 353, 367, 375, 393, 395, 410, 417, 419, 423, 429, 440, 445, 446, 459, 462, 463, 476, 477, 491, 494, 497, 498, 499, 511, 521, 547, 548, 550, 552, 562, 563, 597, 610, 617, 624, 631, 639, 640, 642, 643, 663, 687, 689, 701, 705, 719, 744, 750, 758, 764, 771, 793, 794, 810, 820, 828, 862, 873, 879, 882, 892, 893, 896, 901, 903, 911, 920, 922, 924, 934, 940, 943, 958, 963, 964, 981, 986, 992, 1005, 1006, 1008, 1009, 1011, 1014, 1043, 1064, 1099, 1110], "role": [17, 38, 64, 136, 140, 413, 494, 863], "somewher": [17, 154, 173, 185, 192, 225, 237, 238, 295, 307, 378, 395, 397, 417, 442, 463, 530, 663, 909, 966, 991, 1077], "top": [17, 28, 31, 33, 34, 37, 38, 49, 132, 133, 135, 136, 148, 154, 156, 157, 173, 175, 202, 208, 211, 218, 221, 420, 769, 778, 863, 883, 922, 924, 963, 971, 993, 1039, 1043, 1118, 1122, 1124, 1129], "insid": [17, 34, 38, 41, 49, 112, 113, 132, 133, 161, 163, 185, 202, 208, 218, 221, 238, 258, 260, 275, 284, 295, 310, 339, 343, 353, 371, 374, 376, 377, 395, 400, 419, 481, 492, 497, 545, 551, 553, 709, 717, 727, 737, 805, 835, 845, 870, 872, 895, 909, 928, 954, 959, 962, 971, 1008, 1014, 1082, 1085, 1089, 1101, 1120, 1123], "ideal": [17, 144, 160, 202, 208, 218, 221, 238, 240, 406, 422, 433, 440, 488, 609, 663, 725, 744, 762, 766, 859, 879, 943, 983, 985], "slideshow": [17, 23, 212, 224, 251, 261, 272, 280, 283, 287, 723, 726, 728, 731, 733, 736, 738, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 770, 772, 775, 777, 781, 784, 787, 1007, 1095, 1102], "manual": [17, 60, 62, 130, 140, 148, 171, 172, 202, 203, 208, 211, 218, 221, 251, 253, 341, 342, 345, 352, 390, 395, 419, 536, 578, 628, 635, 646, 672, 684, 685, 721, 722, 725, 766, 793, 794, 863, 870, 871, 893, 896, 909, 911, 913, 954, 956, 961, 969, 970, 974, 978, 1019], "theme": [17, 64, 302, 995, 1014], "url": [17, 130, 137, 139, 148, 160, 492, 962, 1019], "_static": 17, "ui": [17, 31, 140, 356, 615], "default": [17, 23, 57, 60, 96, 109, 110, 112, 133, 134, 139, 140, 144, 150, 161, 170, 172, 174, 181, 183, 194, 202, 205, 208, 211, 214, 217, 218, 221, 225, 228, 231, 236, 239, 246, 248, 249, 253, 257, 258, 260, 263, 267, 269, 270, 303, 310, 356, 367, 399, 407, 413, 419, 420, 422, 425, 429, 432, 438, 441, 455, 457, 466, 467, 483, 493, 535, 537, 538, 543, 544, 547, 548, 572, 591, 592, 608, 613, 615, 617, 620, 621, 622, 623, 625, 627, 628, 629, 630, 631, 632, 635, 636, 643, 644, 673, 675, 691, 700, 705, 707, 708, 709, 716, 718, 719, 762, 790, 793, 794, 796, 808, 821, 826, 845, 857, 858, 862, 863, 865, 870, 871, 873, 879, 882, 896, 900, 906, 909, 911, 913, 925, 937, 939, 941, 943, 954, 983, 985, 991, 1010, 1012, 1014, 1019, 1055, 1072, 1082, 1085, 1087, 1093, 1098, 1100, 1118], "given": [17, 38, 58, 61, 68, 80, 101, 105, 106, 109, 110, 118, 133, 135, 138, 140, 144, 154, 202, 208, 218, 221, 225, 249, 257, 258, 260, 267, 296, 343, 358, 401, 460, 489, 492, 494, 513, 537, 606, 617, 642, 717, 727, 737, 748, 766, 803, 808, 817, 819, 826, 848, 870, 950, 962, 1049, 1058, 1064, 1066, 1072, 1083, 1086, 1121, 1133], "path": [17, 21, 96, 98, 112, 121, 122, 129, 138, 161, 165, 173, 176, 193, 204, 205, 206, 210, 213, 217, 218, 221, 239, 248, 249, 269, 270, 273, 275, 276, 295, 296, 301, 303, 310, 315, 377, 413, 419, 421, 424, 425, 427, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 535, 560, 692, 708, 718, 719, 730, 744, 756, 766, 792, 793, 794, 795, 796, 799, 800, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 862, 882, 885, 891, 892, 893, 901, 902, 903, 917, 919, 920, 921, 923, 925, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 954, 961, 971, 988, 991, 1052, 1091, 1093, 1098, 1100, 1108, 1120], "commit": [17, 45, 76, 115, 136, 139, 147, 148, 190, 194, 195, 206, 209, 219, 318, 739, 1064, 1073, 1076, 1098, 1130], "place": [17, 54, 112, 121, 130, 134, 135, 137, 138, 139, 140, 148, 153, 162, 166, 189, 205, 211, 221, 257, 258, 333, 349, 371, 378, 395, 418, 427, 431, 435, 459, 461, 475, 494, 507, 552, 566, 568, 569, 580, 591, 599, 602, 603, 613, 632, 698, 701, 709, 714, 717, 719, 744, 766, 795, 816, 817, 818, 819, 870, 871, 879, 925, 955, 957, 966, 996, 1005, 1009, 1011, 1029, 1086, 1100], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 77, 98, 112, 133, 140, 169, 185, 206, 239, 248, 249, 269, 270, 328, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 652, 657, 708, 718, 719, 766, 793, 794, 795, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 862, 870, 882, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 1068, 1069, 1076, 1089], "up": [17, 21, 27, 31, 33, 34, 37, 42, 44, 52, 77, 123, 130, 132, 133, 134, 136, 138, 140, 143, 148, 152, 153, 184, 190, 195, 200, 202, 206, 208, 218, 221, 233, 238, 240, 249, 258, 284, 295, 313, 317, 323, 324, 391, 398, 407, 408, 413, 417, 421, 422, 442, 491, 492, 493, 494, 507, 530, 554, 555, 556, 557, 560, 607, 612, 677, 680, 693, 694, 707, 725, 729, 734, 735, 737, 748, 750, 758, 762, 766, 767, 805, 826, 827, 845, 858, 863, 865, 870, 871, 872, 879, 889, 922, 928, 933, 938, 940, 943, 952, 961, 964, 975, 979, 985, 1008, 1021, 1025, 1042, 1047, 1059, 1064, 1069, 1072, 1080, 1093, 1099, 1105, 1110, 1121], "uri": 17, "well": [17, 41, 64, 133, 135, 138, 139, 140, 144, 157, 161, 169, 192, 194, 221, 257, 259, 267, 275, 284, 296, 356, 378, 407, 417, 445, 485, 491, 494, 495, 518, 538, 542, 553, 567, 635, 642, 649, 672, 685, 695, 699, 791, 810, 826, 859, 866, 871, 872, 883, 896, 898, 916, 940, 942, 955, 963, 964, 967, 971, 974, 978, 981, 984, 995, 999, 1009, 1067, 1069, 1077, 1094, 1120], "blah": [19, 23, 38, 61, 64, 115, 133, 136, 155, 166, 173, 176, 181, 189, 192, 198, 202, 208, 209, 211, 213, 218, 221, 228, 231, 243, 250, 253, 263, 267, 285, 302, 303, 310, 318, 321, 401, 648, 717, 722, 730, 889, 890, 933, 934, 959, 994, 1000, 1019, 1080], "watch": [20, 31, 134, 135, 136, 154, 161, 165, 169, 170, 174, 260, 262, 266, 418, 685, 863, 871, 907, 967, 988, 1090], "w5g8k7a2gbg": 20, "bore": [20, 194, 216, 230, 246, 272, 826, 934, 938, 995, 1064], "good": [20, 27, 29, 42, 96, 112, 130, 132, 133, 134, 135, 140, 148, 157, 165, 169, 172, 190, 193, 194, 202, 206, 211, 212, 213, 215, 216, 219, 225, 240, 242, 252, 255, 258, 260, 266, 267, 291, 329, 352, 356, 397, 401, 403, 411, 412, 417, 440, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 518, 535, 539, 543, 544, 558, 561, 564, 580, 586, 590, 593, 599, 602, 603, 608, 612, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 646, 675, 686, 691, 697, 700, 706, 708, 710, 716, 718, 719, 723, 725, 758, 766, 771, 791, 805, 809, 859, 863, 871, 872, 896, 898, 915, 924, 927, 928, 934, 937, 963, 976, 994, 995, 1006, 1009, 1011, 1014, 1026, 1036, 1063, 1064, 1071, 1090, 1120], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 246], "staticmethod": [21, 246], "member": [21, 34, 37, 42, 56, 62, 109, 110, 112, 148, 154, 155, 156, 166, 171, 193, 211, 223, 236, 251, 258, 267, 314, 386, 395, 402, 439, 481, 483, 486, 489, 513, 527, 535, 537, 538, 540, 541, 542, 543, 549, 553, 554, 556, 558, 591, 592, 596, 617, 620, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 643, 647, 648, 657, 663, 673, 689, 695, 715, 719, 727, 732, 734, 754, 762, 766, 779, 785, 792, 793, 794, 809, 810, 811, 812, 813, 814, 820, 855, 859, 870, 898, 952, 1013, 1089, 1110], "final": [21, 37, 41, 60, 77, 105, 129, 155, 165, 169, 172, 192, 194, 202, 208, 209, 218, 223, 236, 242, 266, 419, 492, 494, 559, 560, 609, 635, 646, 675, 718, 719, 729, 760, 766, 793, 794, 859, 871, 872, 940, 957, 961, 974, 1026, 1042, 1064, 1118], "exec": [21, 29, 140, 165, 174, 205, 219, 220, 228, 235, 247, 251, 253, 261, 262, 263, 267, 274, 283, 287, 719, 854, 859, 892, 895, 916, 940, 965, 1062, 1131], "dict": [21, 152, 165, 166, 170, 181, 183, 184, 189, 192, 206, 207, 208, 209, 212, 214, 217, 218, 219, 223, 229, 243, 246, 253, 263, 267, 273, 278, 285, 302, 305, 310, 635, 961, 964, 976, 977, 986, 1012], "There": [21, 44, 54, 56, 64, 67, 80, 96, 130, 132, 134, 135, 136, 137, 140, 144, 145, 161, 162, 166, 168, 169, 172, 176, 177, 190, 195, 211, 214, 215, 216, 219, 225, 252, 255, 258, 259, 260, 261, 262, 283, 284, 296, 331, 341, 347, 356, 371, 374, 395, 397, 404, 407, 418, 419, 423, 432, 437, 462, 463, 513, 521, 538, 543, 588, 613, 631, 632, 644, 646, 652, 675, 680, 691, 695, 699, 700, 708, 716, 718, 719, 739, 766, 771, 797, 826, 863, 870, 871, 916, 926, 937, 938, 989, 995, 1006, 1064, 1073, 1099, 1105], "half": [21, 35, 133, 134, 135, 195, 403, 422, 764, 805, 871, 924, 961], "heart": [21, 31, 37, 123, 422, 805, 1070], "split": [21, 130, 153, 156, 189, 193, 198, 199, 202, 205, 206, 208, 213, 217, 223, 231, 234, 246, 251, 253, 267, 273, 301, 310, 395, 419, 441, 513, 961, 1070, 1091], "pimp": 21, "elabor": [21, 144, 209, 219, 397, 420, 871], "namespac": [21, 165, 202, 208, 215, 218, 221, 225, 236, 246, 442, 444, 459, 495, 496, 497, 498, 499, 501, 511, 512, 530, 552, 560, 565, 566, 567, 568, 569, 575, 576, 578, 579, 582, 583, 584, 588, 602, 619, 625, 626, 635, 650, 672, 682, 685, 707, 709, 710, 870, 904, 907, 919, 921, 971], "__init__": [21, 62, 129, 152, 153, 164, 166, 169, 171, 189, 192, 193, 205, 206, 208, 215, 218, 221, 225, 231, 234, 243, 246, 253, 263, 267, 285, 419, 961, 962, 963, 971, 976, 977, 978, 980, 981, 982, 983, 984, 985, 1091, 1098], "__all__": [21, 221, 225], "etc": [21, 23, 29, 62, 89, 99, 112, 122, 126, 130, 134, 138, 147, 150, 151, 155, 162, 169, 172, 176, 177, 179, 182, 183, 190, 191, 193, 194, 196, 200, 203, 205, 206, 208, 212, 213, 216, 222, 223, 224, 225, 227, 228, 230, 232, 235, 245, 246, 249, 252, 253, 255, 263, 265, 266, 268, 271, 272, 296, 297, 298, 299, 300, 301, 310, 315, 318, 328, 351, 356, 412, 422, 430, 444, 527, 615, 677, 683, 710, 717, 719, 725, 739, 766, 778, 788, 796, 798, 801, 803, 806, 808, 809, 810, 811, 822, 826, 829, 840, 843, 845, 846, 848, 850, 851, 852, 853, 854, 855, 857, 859, 862, 872, 873, 874, 882, 883, 886, 887, 888, 893, 899, 908, 919, 933, 934, 938, 940, 961, 963, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1010, 1014, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1089, 1092, 1113, 1114, 1122, 1124, 1128, 1129, 1132, 1134], "user": [21, 23, 29, 46, 52, 62, 64, 83, 100, 101, 109, 110, 112, 117, 119, 129, 130, 132, 133, 134, 135, 137, 138, 140, 148, 155, 161, 164, 165, 166, 169, 173, 180, 189, 192, 194, 196, 205, 211, 213, 218, 219, 221, 222, 224, 225, 228, 231, 233, 242, 243, 246, 249, 252, 253, 255, 263, 267, 270, 277, 278, 280, 284, 291, 295, 307, 310, 319, 375, 406, 417, 419, 420, 422, 427, 435, 445, 462, 463, 483, 497, 513, 535, 538, 539, 545, 552, 596, 600, 619, 621, 622, 623, 624, 631, 632, 648, 652, 684, 695, 708, 718, 719, 725, 727, 737, 739, 764, 766, 779, 780, 793, 794, 796, 800, 804, 805, 806, 810, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 826, 850, 854, 857, 862, 863, 864, 871, 873, 879, 886, 891, 892, 893, 896, 898, 901, 903, 908, 917, 920, 921, 923, 925, 926, 937, 940, 954, 956, 957, 958, 961, 978, 979, 1016, 1023, 1025, 1026, 1030, 1042, 1043, 1049, 1054, 1056, 1059, 1061, 1062, 1075, 1080, 1083, 1087, 1090, 1100, 1107, 1118], "import": [21, 29, 62, 64, 121, 129, 135, 140, 143, 153, 154, 155, 156, 165, 166, 169, 171, 172, 177, 181, 183, 184, 185, 193, 197, 198, 199, 204, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 237, 238, 243, 246, 250, 251, 252, 253, 255, 257, 263, 267, 273, 278, 281, 285, 303, 305, 333, 349, 419, 422, 423, 560, 577, 643, 681, 695, 698, 719, 748, 766, 808, 826, 863, 866, 870, 879, 891, 918, 928, 939, 960, 961, 962, 964, 972, 974, 976, 982, 983, 986, 992, 993, 994, 995, 996, 997, 999, 1004, 1008, 1016, 1017, 1018, 1019, 1052, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1072, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1095, 1098, 1099, 1102, 1105, 1123, 1128], "pythonpath": [21, 39, 60, 165, 251, 971, 1019], "goto": [21, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719, 937], "orgi": [21, 427, 639], "perspect": [21, 37, 140, 162], "alwai": [21, 42, 64, 79, 129, 130, 135, 145, 162, 169, 192, 214, 225, 251, 252, 255, 302, 310, 315, 333, 351, 377, 378, 390, 402, 403, 407, 408, 410, 411, 427, 428, 447, 457, 487, 536, 542, 552, 571, 574, 630, 635, 639, 650, 674, 683, 687, 690, 694, 699, 725, 744, 762, 766, 771, 792, 826, 827, 870, 871, 872, 886, 892, 898, 926, 937, 942, 952, 957, 963, 991, 995, 1009, 1064, 1069, 1070, 1071, 1098, 1099, 1118], "valgrind": [21, 96, 160, 194, 328, 405, 409, 410, 412, 414, 415, 442, 507, 517, 519, 527, 530, 545, 680, 693, 694, 719, 1115, 1116], "supervis": [21, 1071], "hack": [21, 52, 58, 61, 96, 127, 130, 148, 156, 160, 165, 169, 170, 194, 195, 209, 211, 219, 230, 237, 238, 239, 240, 248, 260, 261, 269, 270, 277, 280, 284, 291, 310, 314, 318, 319, 321, 328, 329, 377, 420, 441, 442, 455, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 555, 570, 571, 591, 633, 644, 675, 676, 677, 681, 693, 708, 717, 718, 719, 720, 796, 821, 822, 862, 903, 950, 988, 1084, 1090, 1098, 1117, 1118, 1132], "someth": [21, 42, 54, 65, 71, 72, 73, 77, 82, 83, 86, 126, 132, 133, 135, 136, 138, 140, 144, 148, 154, 161, 165, 173, 181, 183, 184, 185, 195, 205, 209, 216, 231, 234, 258, 260, 277, 280, 291, 305, 368, 369, 383, 437, 459, 492, 494, 530, 541, 545, 550, 553, 560, 584, 628, 629, 630, 640, 643, 657, 687, 695, 697, 698, 713, 714, 715, 719, 727, 739, 743, 754, 762, 766, 768, 771, 786, 838, 862, 863, 866, 870, 871, 872, 887, 888, 896, 898, 899, 911, 922, 924, 925, 937, 952, 959, 961, 962, 964, 968, 985, 992, 994, 999, 1009, 1015, 1046, 1071, 1123], "malloc": [21, 160, 390, 391, 404, 519, 752, 886, 938, 940, 1115], "seomth": 21, "cleanup": [21, 133, 152, 321, 536, 612, 648, 692, 938, 961, 1099], "obviou": [21, 56, 140, 148, 154, 215, 225, 252, 255, 307, 378, 397, 419, 494, 536, 643, 652, 693, 699, 892, 934, 959, 995, 1006, 1121], "lead": [21, 109, 110, 133, 135, 139, 140, 157, 194, 221, 225, 249, 267, 287, 337, 345, 355, 427, 617, 629, 766, 792, 805, 871, 924, 933, 934, 952, 979, 1005, 1016, 1026, 1077, 1092], "sever": [21, 86, 112, 133, 193, 194, 375, 444, 449, 623, 634, 764, 822, 863, 963, 989, 1000], "duplic": [21, 41, 48, 96, 153, 166, 211, 219, 229, 251, 295, 337, 339, 400, 401, 444, 503, 511, 524, 545, 552, 563, 641, 698, 719, 773, 809, 862, 898, 901, 903, 920, 1046, 1098, 1100], "when": [21, 28, 30, 42, 62, 64, 74, 79, 109, 110, 120, 121, 130, 132, 133, 134, 135, 138, 140, 148, 150, 162, 165, 171, 194, 195, 202, 206, 208, 209, 211, 218, 219, 221, 224, 225, 238, 240, 249, 257, 258, 260, 267, 275, 296, 301, 310, 321, 328, 335, 343, 345, 351, 356, 367, 374, 378, 393, 398, 399, 400, 401, 402, 407, 417, 419, 422, 425, 429, 432, 433, 436, 437, 441, 461, 463, 494, 495, 539, 541, 542, 545, 553, 575, 591, 606, 607, 610, 612, 617, 619, 624, 628, 630, 635, 638, 640, 642, 643, 646, 663, 677, 682, 685, 690, 694, 695, 698, 702, 705, 707, 709, 717, 734, 737, 744, 748, 760, 762, 764, 766, 780, 799, 801, 805, 808, 810, 822, 826, 848, 859, 871, 872, 879, 883, 887, 888, 892, 895, 896, 914, 916, 922, 925, 926, 928, 933, 937, 938, 940, 942, 957, 961, 962, 963, 968, 972, 975, 981, 983, 988, 991, 994, 995, 997, 999, 1004, 1005, 1006, 1016, 1055, 1072, 1077, 1082, 1093, 1098, 1100, 1107, 1118, 1120, 1121], "void": [21, 41, 43, 54, 57, 106, 135, 136, 144, 176, 194, 206, 310, 332, 333, 335, 339, 341, 343, 347, 353, 357, 371, 373, 374, 375, 376, 378, 381, 383, 384, 387, 390, 391, 393, 394, 400, 401, 404, 420, 427, 436, 437, 438, 442, 444, 448, 457, 466, 467, 471, 472, 475, 476, 477, 479, 491, 493, 494, 495, 518, 530, 537, 539, 540, 541, 542, 545, 546, 547, 548, 549, 550, 552, 553, 560, 566, 570, 579, 592, 606, 609, 610, 613, 615, 616, 625, 627, 635, 636, 641, 645, 648, 649, 663, 665, 666, 668, 669, 670, 671, 673, 674, 677, 678, 679, 680, 681, 682, 684, 685, 687, 692, 693, 694, 695, 697, 699, 702, 704, 707, 709, 727, 730, 737, 744, 746, 748, 750, 752, 760, 762, 771, 776, 780, 786, 803, 823, 884, 888, 889, 890, 892, 902, 909, 911, 913, 915, 919, 924, 930, 933, 934, 937, 938, 940, 952, 956, 958, 1110], "f": [21, 37, 42, 62, 108, 112, 119, 134, 135, 136, 144, 156, 166, 171, 172, 177, 178, 181, 183, 189, 190, 192, 193, 199, 201, 202, 205, 206, 208, 212, 214, 215, 218, 221, 225, 228, 230, 232, 234, 242, 243, 246, 250, 253, 258, 263, 267, 272, 274, 281, 285, 302, 304, 306, 321, 347, 352, 362, 364, 373, 376, 381, 400, 401, 403, 407, 411, 419, 436, 542, 546, 562, 636, 642, 648, 649, 678, 699, 702, 725, 730, 792, 803, 810, 826, 845, 852, 854, 855, 870, 871, 872, 873, 895, 926, 928, 933, 948, 952, 955, 959, 961, 962, 963, 964, 976, 978, 980, 981, 984, 985, 986, 1005, 1006, 1014, 1021, 1026, 1059, 1061, 1064, 1072, 1098, 1128], "alloc": [21, 135, 136, 153, 155, 194, 202, 205, 208, 218, 221, 243, 345, 374, 390, 395, 398, 401, 404, 442, 526, 528, 542, 544, 545, 552, 571, 576, 583, 588, 599, 603, 607, 632, 643, 646, 680, 685, 694, 695, 699, 719, 722, 725, 727, 752, 754, 768, 771, 803, 809, 888, 889, 890, 910, 970, 1021], "variabl": [21, 29, 86, 88, 89, 96, 103, 109, 110, 129, 134, 135, 144, 148, 152, 154, 155, 161, 165, 166, 169, 170, 171, 172, 174, 177, 178, 179, 184, 185, 190, 191, 193, 194, 196, 200, 203, 204, 206, 207, 208, 211, 212, 214, 216, 222, 223, 224, 225, 227, 229, 230, 232, 236, 239, 244, 245, 246, 248, 249, 252, 255, 258, 262, 264, 265, 266, 268, 269, 270, 271, 272, 278, 283, 284, 285, 287, 296, 297, 298, 299, 300, 301, 310, 312, 313, 332, 334, 335, 343, 348, 356, 363, 367, 368, 371, 372, 373, 377, 379, 380, 383, 385, 389, 390, 392, 393, 395, 396, 397, 403, 404, 405, 407, 409, 414, 415, 421, 423, 427, 429, 448, 456, 462, 471, 476, 481, 522, 527, 542, 550, 551, 558, 570, 610, 617, 632, 637, 643, 646, 648, 675, 677, 689, 708, 715, 716, 717, 718, 719, 735, 754, 766, 796, 797, 800, 803, 827, 846, 862, 903, 908, 911, 915, 916, 917, 922, 940, 950, 951, 952, 957, 959, 961, 964, 965, 971, 972, 973, 974, 975, 979, 987, 991, 993, 998, 1002, 1004, 1006, 1007, 1010, 1015, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1071, 1074, 1077, 1078, 1084, 1086, 1091, 1092, 1093, 1119, 1121, 1128, 1134], "filenam": [21, 41, 49, 54, 57, 132, 152, 156, 181, 199, 202, 205, 206, 208, 213, 218, 221, 231, 246, 249, 262, 263, 267, 302, 419, 478, 481, 495, 717, 766, 792, 793, 855, 893, 896, 897, 898, 899, 900, 904, 907, 933, 961, 971, 1016, 1021, 1033, 1042, 1044, 1048, 1054, 1056], "getenv": [21, 476, 921], "fopen": 21, "read": [21, 29, 42, 46, 52, 54, 55, 56, 72, 73, 82, 84, 112, 132, 133, 134, 135, 136, 138, 140, 143, 144, 148, 161, 165, 169, 170, 172, 174, 180, 190, 193, 200, 203, 206, 208, 209, 211, 213, 219, 221, 222, 227, 228, 230, 233, 240, 241, 242, 245, 249, 251, 253, 259, 263, 265, 266, 267, 270, 271, 272, 295, 296, 297, 298, 299, 300, 310, 314, 316, 321, 340, 341, 348, 356, 363, 372, 379, 385, 389, 392, 393, 395, 396, 397, 399, 401, 404, 405, 409, 413, 414, 415, 418, 434, 441, 462, 478, 483, 494, 495, 518, 524, 535, 538, 539, 541, 544, 547, 550, 596, 600, 619, 622, 634, 637, 644, 652, 675, 689, 697, 713, 716, 717, 718, 719, 725, 739, 750, 766, 768, 792, 793, 794, 797, 803, 808, 809, 810, 811, 813, 814, 817, 826, 827, 859, 862, 866, 870, 871, 872, 879, 884, 886, 887, 889, 890, 893, 896, 899, 901, 902, 903, 904, 906, 907, 914, 916, 920, 924, 930, 933, 934, 937, 938, 957, 963, 964, 979, 982, 984, 992, 1000, 1022, 1023, 1033, 1042, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1070, 1072, 1080, 1087, 1091, 1131], "onli": [21, 29, 41, 42, 88, 107, 109, 110, 112, 123, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 148, 153, 154, 161, 165, 169, 171, 172, 190, 192, 195, 202, 205, 208, 211, 212, 213, 215, 218, 219, 221, 222, 224, 225, 230, 232, 233, 234, 245, 246, 249, 251, 252, 258, 262, 265, 267, 271, 272, 275, 284, 301, 304, 318, 325, 335, 341, 343, 344, 345, 347, 352, 353, 355, 360, 367, 368, 371, 373, 375, 376, 377, 378, 394, 395, 399, 400, 401, 402, 403, 412, 417, 419, 420, 422, 423, 426, 431, 432, 436, 437, 438, 440, 448, 456, 457, 459, 461, 462, 463, 475, 476, 491, 492, 495, 498, 499, 513, 524, 537, 538, 539, 540, 542, 544, 546, 547, 550, 552, 553, 559, 573, 575, 591, 592, 596, 606, 607, 609, 613, 617, 621, 622, 629, 631, 635, 642, 646, 648, 652, 657, 663, 673, 677, 680, 684, 685, 689, 690, 694, 695, 701, 703, 705, 707, 709, 719, 722, 724, 727, 730, 735, 746, 752, 762, 766, 771, 774, 779, 783, 791, 792, 793, 794, 801, 804, 808, 810, 811, 816, 822, 826, 827, 848, 855, 863, 864, 865, 870, 871, 872, 873, 883, 888, 889, 892, 894, 895, 896, 900, 902, 906, 908, 911, 916, 919, 922, 924, 925, 926, 927, 933, 934, 937, 938, 940, 941, 952, 956, 957, 961, 962, 963, 966, 972, 976, 978, 981, 983, 984, 989, 990, 991, 992, 994, 995, 996, 997, 999, 1000, 1004, 1009, 1010, 1014, 1016, 1019, 1023, 1028, 1036, 1038, 1039, 1042, 1043, 1047, 1049, 1062, 1064, 1069, 1070, 1071, 1073, 1076, 1085, 1089, 1090, 1098, 1104, 1105, 1107, 1110, 1118, 1120, 1123, 1135], "bullshit": [21, 64, 177, 189, 225, 422, 685, 1128], "everyon": [21, 64, 133, 138, 148, 169, 417, 622, 673, 813, 814, 824, 926], "get": [21, 54, 62, 96, 109, 110, 121, 122, 129, 130, 133, 135, 136, 143, 144, 152, 165, 166, 169, 171, 176, 183, 184, 185, 192, 194, 195, 202, 205, 208, 209, 211, 214, 215, 218, 221, 228, 234, 238, 240, 243, 246, 249, 253, 263, 267, 273, 285, 305, 310, 313, 315, 330, 356, 401, 410, 433, 437, 442, 457, 466, 471, 548, 555, 627, 635, 645, 663, 669, 689, 690, 693, 694, 695, 696, 698, 717, 719, 727, 732, 739, 766, 768, 782, 785, 799, 801, 805, 806, 826, 862, 872, 879, 882, 888, 889, 890, 903, 905, 910, 927, 934, 938, 955, 961, 974, 977, 983, 987, 995, 1012, 1082, 1089, 1100, 1105, 1110, 1123], "point": [21, 33, 35, 37, 39, 60, 88, 96, 105, 108, 112, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 148, 153, 154, 155, 156, 160, 165, 169, 170, 171, 172, 174, 192, 194, 195, 202, 205, 208, 211, 218, 221, 226, 229, 251, 260, 267, 284, 285, 287, 296, 316, 317, 318, 321, 332, 333, 334, 339, 345, 347, 349, 351, 355, 377, 380, 383, 386, 387, 390, 391, 401, 403, 432, 437, 440, 447, 448, 456, 479, 481, 493, 513, 514, 515, 538, 540, 542, 544, 545, 546, 548, 549, 551, 554, 558, 569, 570, 578, 593, 594, 607, 612, 613, 632, 635, 638, 640, 642, 646, 652, 663, 685, 689, 694, 698, 710, 719, 762, 766, 795, 803, 805, 809, 810, 826, 863, 864, 872, 882, 886, 889, 892, 925, 938, 941, 954, 958, 959, 960, 962, 966, 974, 1000, 1004, 1006, 1009, 1071, 1073, 1075, 1077, 1098, 1100, 1107, 1110, 1115, 1119], "unobvi": [21, 766], "best": [21, 30, 38, 47, 56, 133, 134, 135, 144, 157, 214, 343, 375, 397, 404, 407, 408, 417, 496, 540, 545, 609, 674, 687, 707, 754, 756, 758, 762, 764, 803, 826, 848, 864, 871, 872, 908, 922, 926, 954, 968, 974, 1011, 1016, 1018, 1075, 1085], "resourc": [21, 79, 96, 109, 110, 133, 135, 138, 150, 160, 195, 211, 252, 255, 260, 313, 321, 449, 513, 527, 538, 542, 543, 607, 632, 643, 644, 646, 675, 680, 691, 692, 694, 695, 700, 707, 708, 716, 718, 719, 750, 752, 760, 799, 803, 804, 871, 888, 889, 890, 908, 922, 925, 961, 1014], "leaki": 21, "erron": [21, 404, 1026], "worst": [21, 133, 375, 872, 924, 937, 1118, 1121], "extract": [21, 29, 54, 96, 122, 126, 193, 219, 222, 227, 230, 242, 245, 265, 266, 271, 272, 359, 378, 482, 483, 513, 524, 535, 717, 719, 766, 779, 792, 954, 979, 1001, 1023, 1057, 1058, 1059, 1060, 1062, 1070], "common": [21, 24, 125, 133, 190, 206, 207, 219, 225, 230, 378, 387, 418, 493, 571, 698, 717, 791, 863, 864, 872, 896, 933, 963, 968, 969, 970, 986, 995, 996, 1000, 1006, 1010, 1013, 1064, 1072, 1073, 1098, 1121], "hm": [21, 31, 62, 173, 183, 202, 205, 208, 215, 302, 756, 782, 783, 890, 983, 1068, 1100, 1105, 1107], "end": [21, 23, 31, 36, 41, 105, 127, 132, 135, 136, 138, 140, 143, 165, 166, 171, 172, 177, 181, 185, 205, 206, 208, 209, 211, 221, 225, 228, 231, 245, 246, 267, 273, 280, 285, 301, 302, 339, 342, 346, 367, 383, 395, 399, 400, 401, 403, 406, 407, 410, 440, 462, 463, 471, 472, 475, 476, 477, 527, 530, 542, 566, 568, 570, 571, 572, 574, 575, 577, 578, 579, 581, 582, 584, 588, 591, 595, 596, 602, 619, 635, 663, 666, 670, 677, 683, 684, 685, 687, 692, 693, 706, 707, 758, 764, 766, 782, 809, 810, 811, 826, 854, 858, 859, 870, 872, 888, 889, 890, 892, 898, 914, 933, 966, 986, 990, 992, 999, 1002, 1006, 1010, 1014, 1085, 1087, 1089, 1093, 1128, 1131], "sketch": [21, 113, 130, 136, 165, 172, 173, 185, 194, 195, 262, 284, 314, 318, 380, 381, 391, 403, 635, 723, 735, 933], "clearest": 21, "ach": 21, "bad": [21, 42, 129, 132, 135, 142, 157, 165, 190, 196, 212, 213, 215, 224, 225, 240, 261, 262, 283, 291, 356, 399, 403, 417, 559, 625, 675, 686, 693, 718, 719, 734, 746, 771, 774, 883, 884, 909, 911, 915, 916, 937, 956, 961, 963, 976, 977, 988, 995, 1006, 1036, 1064, 1118], "earliest": 21, "noth": [21, 42, 62, 123, 132, 133, 135, 138, 143, 148, 162, 173, 192, 205, 231, 284, 331, 370, 377, 401, 419, 426, 530, 609, 643, 650, 663, 677, 680, 734, 744, 762, 764, 798, 848, 863, 871, 872, 887, 889, 911, 933, 938, 964, 971, 983, 1004, 1006, 1012, 1098, 1105, 1107], "jump": [21, 44, 103, 132, 367, 371, 530, 677, 680, 687, 805, 858, 937, 1072], "outest": 21, "level": [21, 77, 133, 134, 144, 202, 208, 218, 221, 242, 275, 321, 345, 371, 377, 417, 420, 422, 423, 429, 437, 445, 656, 657, 717, 748, 750, 762, 769, 778, 802, 863, 870, 879, 883, 942, 950, 963, 971, 983, 1004, 1014, 1039, 1043, 1073, 1076, 1086, 1093, 1120], "cleanup_stage1": 21, "screenplai": [22, 59, 126, 135, 156, 160, 212, 224, 233, 251, 259, 261, 272, 280, 283, 284, 287, 310, 418, 434, 442, 513, 516, 519, 522, 525, 528, 531, 534, 570, 571, 591, 723, 726, 731, 736, 740, 742, 778, 781, 784, 787, 931, 935, 939, 1007, 1095, 1102, 1106, 1108, 1111], "dies": [23, 141, 142, 147, 150, 151, 152, 160, 166, 176, 177, 181, 189, 196, 213, 215, 221, 222, 225, 310, 315, 328, 1113, 1115, 1116, 1117, 1122, 1128, 1129, 1131, 1135, 1136], "einreichungsunterlagen": 23, "diesem": [23, 142, 176, 1115, 1132], "formular": 23, "projekten": [23, 1129, 1130], "mehrer": [23, 1122], "projektpartn": 23, "muss": [23, 156, 166, 176, 181, 222, 310, 315, 1113, 1115, 1122, 1129], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 141], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 147, 177], "soll": [23, 142, 168, 197, 236, 1112], "punkt": [23, 142, 152, 168, 178, 222], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 142, 151, 165, 168, 176, 181, 225, 236, 359, 367, 485, 657, 663, 748, 906, 907, 924, 1066, 1086], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 194], "uni": 23, "contemporari": 23, "open": [23, 33, 34, 37, 38, 41, 47, 48, 53, 62, 67, 112, 132, 133, 136, 140, 148, 150, 154, 156, 170, 172, 174, 183, 192, 193, 195, 199, 202, 205, 206, 208, 213, 216, 221, 228, 231, 233, 246, 249, 251, 253, 258, 260, 263, 267, 302, 317, 356, 417, 419, 425, 732, 760, 768, 793, 794, 802, 803, 805, 808, 810, 851, 870, 879, 887, 888, 893, 896, 898, 899, 902, 904, 907, 908, 930, 933, 937, 940, 957, 963, 964, 1033, 1059, 1061, 1072, 1091, 1098, 1113, 1130, 1131], "wer": [23, 141], "unser": [23, 169, 177, 1113], "motiv": [23, 28, 96, 805, 824, 922, 969, 970], "300": [23, 152, 154, 166, 202, 205, 208, 213, 215, 221, 225, 228, 246, 267, 273, 302, 333, 335, 337, 353, 377, 565, 566, 567, 568, 569, 571, 572, 573, 574, 588, 739], "zeichen": [23, 215], "lebe": 23, "einerseit": [23, 147], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1130], "andererseit": [23, 147], "haupts\u00e4chlich": [23, 177, 1128], "unternehmen": 23, "halt": [23, 109, 110, 176, 205, 221, 228, 231, 246, 253, 263, 267, 799, 857, 872], "bringen": [23, 1113], "schulungsunterlagen": [23, 1112], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 44, 56, 79, 106, 112, 113, 121, 133, 140, 149, 152, 154, 156, 157, 163, 165, 166, 169, 170, 172, 174, 185, 189, 194, 211, 213, 219, 233, 238, 240, 251, 255, 258, 259, 261, 262, 270, 275, 276, 284, 287, 296, 317, 328, 356, 367, 377, 378, 381, 395, 401, 403, 419, 424, 448, 463, 507, 513, 548, 562, 575, 607, 610, 634, 707, 719, 766, 805, 865, 926, 950, 952, 956, 961, 966, 968, 971, 972, 983, 995, 1009, 1059, 1064, 1066, 1070, 1089, 1098, 1099, 1113, 1120, 1121], "darstellt": 23, "wen": 23, "nutzen": [23, 1131], "400": [23, 130, 135, 152, 166, 176, 205, 208, 250, 267, 285, 419, 588, 1021, 1024], "stellen": [23, 147], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1112], "bereiten": [23, 176], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 883, 986], "gel\u00f6st": [23, 166], "500": [23, 176, 183, 202, 205, 208, 250, 588, 863, 890, 1021, 1024], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1115, 1125, 1134], "aufeinand": [23, 853], "explizit": [23, 150, 160, 166, 176, 236, 263, 1115, 1116, 1132], "abh\u00e4ngigkeitsbeziehungen": [23, 1125], "fehlen": 23, "extrem": [23, 133, 192, 213, 221, 228, 231, 253, 310, 315, 378, 417, 570, 639, 687, 766, 793, 794, 1076, 1113, 1125], "verringert": 23, "zusammenarbeit": [23, 1112], "trainern": 23, "fehlend": [23, 152], "aggregierbarkeit": 23, "bzw": [23, 141, 150, 156, 160, 182, 328, 1122, 1129, 1131], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 166, 933, 1082], "librari": [23, 62, 70, 73, 77, 84, 96, 102, 103, 105, 107, 109, 110, 112, 133, 135, 144, 152, 154, 156, 161, 162, 163, 170, 172, 174, 193, 195, 202, 208, 218, 221, 225, 237, 238, 249, 251, 275, 276, 311, 312, 313, 328, 329, 332, 333, 342, 350, 373, 390, 400, 407, 413, 423, 424, 429, 431, 432, 441, 455, 478, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 495, 502, 521, 535, 536, 580, 586, 590, 598, 599, 600, 602, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 652, 657, 683, 708, 717, 718, 719, 744, 796, 799, 800, 862, 883, 884, 885, 890, 891, 893, 900, 901, 903, 908, 911, 917, 920, 923, 925, 937, 940, 941, 942, 943, 945, 946, 947, 948, 950, 952, 987, 989, 1004, 1006, 1009, 1076, 1094, 1107, 1115, 1117, 1119, 1120, 1131, 1133], "anfangen": 23, "geben": [23, 1116, 1117], "trainingsunterlagen": 23, "ging": [23, 141, 328], "funktioniert": [23, 166, 215], "projektergebni": 23, "basiert": [23, 236, 1113, 1116, 1125, 1132], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 160, 1112, 1122], "eigentlich": [23, 152, 166, 1113, 1116], "kern": 23, "begleitet": [23, 168], "meinem": [23, 142, 151, 177, 854, 1128], "eigenen": [23, 1122, 1129], "quasi": [23, 156, 160], "spin": [23, 707, 769, 803], "off": [23, 132, 134, 135, 138, 143, 154, 165, 185, 228, 356, 359, 398, 406, 407, 422, 428, 429, 484, 485, 490, 530, 610, 663, 698, 760, 771, 797, 822, 850, 863, 870, 872, 898, 907, 916, 926, 933, 992, 1010, 1044, 1069, 1123], "anwendbar": [23, 1135], "klarer": 23, "bezug": [23, 222], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 141, 160, 166, 176, 177, 1112, 1128], "gehen": 23, "folgenden": [23, 160, 328, 854], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1114, 1122, 1129, 1132], "klaren": 23, "mehrwert": 23, "technologi": [23, 205, 924, 940, 1021], "infrastruktur": [23, 1113, 1122, 1129], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 168], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 77, 150, 160, 169, 195, 211, 433, 492, 870, 872, 1090, 1098, 1099, 1134, 1136], "jeglich": [23, 1122], "art": [23, 31, 44, 952, 1121], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 177, 1128], "erm\u00f6glicht": [23, 168, 328], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 147, 1112], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 141, 152, 156, 166, 215, 305, 328, 1113, 1116, 1117, 1122, 1136], "commun": [23, 62, 71, 72, 73, 77, 80, 82, 86, 118, 121, 133, 148, 157, 165, 180, 249, 284, 307, 316, 317, 393, 437, 708, 709, 718, 719, 725, 766, 778, 799, 862, 863, 870, 871, 872, 887, 892, 903, 908, 917, 924, 927, 933, 938, 972, 1060, 1063, 1080, 1118, 1121, 1123, 1132, 1133], "trainerinnen": 23, "kann": [23, 36, 141, 142, 150, 156, 160, 166, 176, 189, 196, 236, 310, 315, 328, 1112, 1113, 1115, 1117, 1122, 1129, 1130, 1131, 1134, 1136], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 150, 152, 166, 305, 854, 1115, 1132, 1134, 1135], "die_der": 23, "adressat_in": 23, "je": [23, 31, 142, 176], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 36, 141, 160, 176, 228, 305, 328, 1112, 1113, 1114, 1122, 1124, 1125, 1131, 1132], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 156, 1122, 1129], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 152, 166, 168, 189, 228, 285, 328, 1113, 1115, 1117], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 177, 222, 1128], "zielgruppen": 23, "beziehung": [23, 160], "zueinand": 23, "stehen": [23, 166, 1134], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 141, 152, 160, 166, 176, 181, 183, 202, 205, 213, 215, 218, 221, 228, 231, 246, 253, 263, 267, 273, 285, 305], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 213, 310, 315, 1122, 1129], "jeweiligen": [23, 1112], "sein": [23, 142, 150, 151, 168, 176, 177, 189, 215, 253, 1113, 1115, 1128, 1129, 1131, 1134, 1135, 1136], "dann": [23, 142, 152, 160, 166, 177, 215, 221, 222, 228, 263, 328, 1113, 1125, 1128, 1136], "einzelnen": 23, "aussieht": [23, 1114], "erst": [23, 160, 176, 189, 215, 222, 228, 246, 285, 305, 1113, 1115], "bestandteil": [23, 1134], "n": [23, 34, 37, 39, 49, 62, 110, 135, 144, 152, 153, 154, 160, 166, 176, 181, 183, 184, 192, 194, 197, 198, 199, 202, 205, 206, 208, 211, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 257, 263, 267, 285, 301, 302, 303, 305, 310, 332, 333, 335, 339, 341, 343, 345, 347, 352, 355, 365, 367, 373, 374, 378, 383, 391, 395, 400, 419, 420, 427, 494, 527, 546, 552, 570, 616, 617, 620, 621, 623, 624, 627, 628, 629, 630, 631, 632, 640, 642, 657, 719, 744, 780, 799, 803, 813, 823, 826, 839, 855, 857, 858, 872, 884, 886, 887, 888, 889, 890, 896, 897, 899, 924, 930, 934, 937, 940, 946, 952, 956, 958, 983, 984, 986, 1001, 1003, 1008, 1009, 1014, 1015, 1059, 1061, 1098, 1110], "l\u00f6sen": 23, "wollen": [23, 36, 181, 328, 1117, 1122, 1125, 1129, 1131], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 49, 53, 60, 125, 136, 139, 148, 252, 255, 371, 412, 413, 739, 766, 768, 778, 870, 872, 999, 1130, 1136], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 56, 101, 106, 112, 135, 147, 148, 160, 162, 169, 170, 173, 193, 206, 211, 223, 242, 258, 260, 280, 309, 310, 315, 427, 431, 436, 438, 442, 444, 449, 459, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 481, 521, 527, 536, 540, 542, 544, 545, 547, 548, 549, 551, 553, 563, 578, 579, 596, 606, 608, 609, 621, 632, 635, 638, 639, 641, 642, 645, 646, 657, 659, 660, 661, 663, 665, 666, 669, 670, 671, 672, 678, 679, 680, 693, 694, 695, 698, 699, 707, 709, 719, 760, 795, 796, 801, 815, 821, 862, 879, 984, 1091, 1093, 1110, 1132], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 198], "land": [23, 425], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 31, 33, 34, 35, 37, 41, 52, 58, 61, 112, 115, 135, 138, 143, 153, 163, 166, 169, 171, 177, 194, 205, 209, 213, 215, 218, 221, 243, 250, 267, 287, 355, 386, 411, 695, 735, 741, 776, 803, 811, 822, 823, 825, 826, 850, 863, 870, 871, 872, 891, 928, 937, 940, 950, 958, 995, 997, 1021, 1072, 1076, 1080, 1093, 1098, 1105, 1121, 1128], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 133, 722, 750], "grupp": [23, 181, 319, 854], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 197, 308, 309, 1112], "fl\u00fcchtling": 23, "posit": [23, 29, 62, 140, 166, 169, 170, 172, 174, 176, 181, 189, 193, 202, 209, 213, 218, 219, 221, 228, 231, 242, 245, 252, 255, 257, 259, 261, 262, 265, 267, 271, 273, 277, 280, 283, 284, 287, 296, 341, 378, 391, 530, 571, 578, 587, 588, 719, 826, 863, 871, 887, 888, 892, 933, 961, 962, 965, 1006, 1007, 1009, 1010, 1011, 1062, 1077, 1085, 1100, 1105], "zielgruppentyp": 23, "350": [23, 205, 208, 253, 267, 1021], "bereitet": 23, "vor": [23, 141, 142, 156, 166, 178, 213, 1125, 1134], "lt": [23, 31, 34, 35, 135, 140, 152, 155, 160, 161, 166, 171, 176, 181, 183, 189, 192, 197, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 304, 305, 306, 483, 500, 502, 535, 580, 586, 590, 599, 602, 603, 632, 719], "zielvorgaben": 23, "basierend": [23, 152, 1112, 1117], "existierendem": 23, "f\u00fchrt": [23, 142, 1132], "jederzeit": [23, 147, 156, 328], "\u00fcberblick": [23, 156, 160, 222, 236, 328, 329, 1112, 1120, 1122, 1128, 1129, 1132, 1134], "behaltend": 23, "behandelten": 23, "fragen": [23, 168, 184, 310, 315, 328, 1112, 1122, 1129], "antworten": [23, 168], "info": [23, 143, 250, 251, 407, 411, 412, 413, 419, 420, 422, 545, 694, 741, 871, 911, 941, 942, 1098], "bed\u00fcrfni": [23, 141], "schulungsagenden": 23, "erstellen": [23, 328, 1117, 1122], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 63, 141, 150, 151, 152, 166, 176, 177, 196, 221, 225, 1122, 1128, 1129, 1136], "erwartet": [23, 142, 166], "w\u00e4hrend": [23, 1112], "einzugehen": [23, 168, 1135], "geplanten": [23, 1112], "verlassen": [23, 788], "birgt": 23, "chao": [23, 824, 995], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 141], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 144, 237, 238, 240, 291, 633, 637, 663, 675, 702, 716, 718, 719, 741, 804, 871, 909, 918, 924, 972], "inklus": [23, 153, 166, 176, 189, 1112, 1117, 1122], "betroffen": 23, "eu": [23, 31], "20000": [23, 132, 208], "erkennung": 23, "abstand": 23, "erfordert": [23, 1122], "vgl": [23, 166, 1132, 1135], "frosch": 23, "wassergla": 23, "selbst": [23, 36, 156, 166, 176, 788, 1112, 1113, 1122, 1125, 1131, 1136], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 291], "besten": [23, 156, 222, 1115], "einsatz": [23, 1113], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1115], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 62, 148, 165, 296, 851, 988, 992, 1071, 1090], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1113, 1131], "neue": [23, 166, 176, 208, 236, 285, 305, 328, 1132], "verliert": [23, 1136], "aufbaubeziehungen": 23, "verlangt": [23, 1112], "grundlag": 23, "folienmateri": 23, "meist": [23, 1131], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 152, 1112], "unm\u00f6glich": 23, "macht": [23, 150, 152, 156, 160, 166, 172, 176, 218, 222, 305, 1115, 1122, 1129, 1136], "artefakttypen": 23, "livehack": [23, 24, 59, 112, 126, 152, 158, 160, 169, 170, 177, 196, 209, 211, 212, 224, 233, 238, 240, 241, 249, 252, 259, 261, 266, 272, 277, 280, 283, 284, 287, 310, 328, 418, 434, 441, 513, 717, 719, 731, 768, 1007, 1095, 1102, 1128], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 141, 166, 177, 183, 1128], "zielt": 23, "darauf": [23, 141, 152, 1112, 1115], "transpar": [23, 29, 36, 750, 752, 802, 1077], "wiederzuverwenden": 23, "sodass": [23, 36, 160, 1131, 1136], "aufgebrochen": 23, "schwer": [23, 156, 166, 328, 1122, 1129, 1134], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 141, 142, 152, 156, 168, 181, 196, 236, 328, 1113, 1115, 1116, 1117, 1129], "dorthin": 23, "m\u00fcssen": [23, 166, 310, 315, 1122, 1129], "unterst\u00fctzt": [23, 1136], "kursf\u00fchrung": [23, 328], "fragt": [23, 142], "unklarheiten": 23, "weist": [23, 141], "etwaig": 23, "verwandt": [23, 1115], "hin": [23, 328], "plausibl": [23, 135], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 177], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 166, 168, 1116, 1117, 1131, 1136], "keinen": [23, 141, 285, 1115], "einfluss": 23, "wahl": [23, 1136], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 150, 1113, 1122], "vorau": 23, "beziehungen": 23, "passt": [23, 176, 177, 1128], "ganz": [23, 141, 142, 151, 152, 156, 166, 168, 182, 183, 197, 214, 215, 328, 1116, 1117, 1131], "gut": [23, 141, 142, 166, 177, 328, 646, 1112, 1128], "y": [23, 110, 115, 144, 153, 154, 156, 183, 192, 198, 199, 205, 206, 208, 209, 221, 231, 234, 243, 246, 253, 263, 267, 273, 356, 362, 380, 383, 386, 387, 391, 403, 407, 419, 481, 491, 537, 538, 539, 540, 542, 544, 545, 546, 547, 548, 549, 551, 553, 555, 556, 563, 570, 578, 617, 638, 639, 640, 642, 657, 659, 660, 661, 678, 689, 698, 734, 735, 766, 767, 799, 813, 826, 828, 839, 845, 870, 871, 872, 946, 954, 960, 1018, 1021, 1069], "algorithmen": [23, 236, 1117], "automatisch": [23, 1132, 1136], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1117], "text": [23, 27, 38, 39, 59, 129, 143, 154, 165, 168, 173, 174, 181, 193, 194, 199, 206, 213, 215, 233, 236, 239, 246, 248, 267, 269, 352, 426, 719, 796, 858, 862, 889, 940, 988, 995, 1001, 1010, 1019, 1042, 1076, 1083, 1088, 1090, 1091, 1125], "restrukturierung": 23, "o": [23, 29, 31, 37, 62, 77, 84, 89, 96, 97, 99, 106, 109, 110, 112, 113, 115, 126, 133, 135, 136, 143, 144, 152, 156, 160, 170, 172, 173, 174, 176, 181, 183, 184, 190, 193, 194, 198, 200, 203, 204, 205, 206, 209, 210, 211, 212, 217, 218, 222, 223, 224, 225, 227, 229, 232, 234, 236, 239, 243, 245, 248, 249, 250, 252, 253, 255, 258, 259, 262, 264, 265, 266, 268, 269, 271, 273, 283, 285, 287, 295, 296, 297, 298, 299, 300, 301, 310, 315, 317, 328, 330, 332, 348, 363, 372, 378, 379, 383, 385, 389, 392, 395, 396, 405, 407, 409, 411, 412, 414, 415, 419, 420, 426, 431, 445, 472, 483, 494, 535, 553, 637, 675, 701, 707, 708, 709, 716, 717, 718, 719, 734, 735, 743, 744, 766, 773, 792, 793, 794, 795, 796, 797, 799, 800, 802, 803, 811, 823, 826, 830, 831, 833, 834, 837, 838, 840, 846, 854, 855, 859, 862, 863, 870, 871, 883, 893, 896, 897, 898, 899, 900, 903, 908, 909, 917, 920, 923, 924, 925, 934, 940, 941, 942, 946, 948, 952, 956, 957, 958, 961, 963, 965, 966, 967, 971, 987, 990, 993, 995, 1001, 1009, 1016, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1077, 1078, 1093, 1098, 1105, 1115, 1122, 1135], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1112], "korrekt": [23, 1115], "vorbereitet": [23, 328], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 147, 1135], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1115, 1132], "aktuel": 23, "inhalt": [23, 166, 168, 198, 311, 788, 1112, 1136], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 154, 156, 1066], "kein": [23, 151, 152, 156, 166, 176, 183, 198, 234, 253, 305, 328, 1130], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 190], "erkl\u00e4ren": [23, 1115], "gew\u00fcnscht": [23, 166], "erreicht": [23, 141, 142, 1129], "hatt": [23, 141, 142, 156, 166, 168], "button": [23, 112, 132, 140, 219, 863], "gew\u00e4hlt": [23, 141, 142], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1131], "bearbeiten": 23, "daher": [23, 1136], "konvertiert": 23, "unten": [23, 142, 156, 166, 1113], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 137], "angab": 23, "quellen": 23, "literatur": [23, 194, 550], "lightweight": [23, 123, 148, 165, 169, 185, 219, 221, 233, 638, 696, 699, 1064, 1076, 1118], "daringfirebal": 23, "project": [23, 24, 29, 30, 37, 41, 52, 58, 61, 64, 67, 105, 112, 115, 123, 129, 133, 134, 138, 139, 140, 145, 152, 154, 156, 162, 165, 169, 172, 179, 184, 193, 212, 216, 219, 222, 249, 252, 259, 266, 314, 315, 321, 323, 328, 329, 399, 406, 410, 418, 420, 421, 422, 425, 426, 428, 430, 433, 434, 435, 441, 481, 482, 491, 494, 554, 556, 557, 701, 719, 766, 805, 861, 863, 865, 870, 871, 882, 900, 940, 941, 942, 955, 956, 1017, 1023, 1050, 1052, 1062, 1063, 1065, 1066, 1070, 1078, 1080, 1095, 1097, 1101, 1102, 1107], "docutil": [23, 31, 33, 34, 35, 37], "sourceforg": 23, "io": [23, 31, 54, 62, 90, 113, 133, 137, 139, 154, 156, 170, 172, 173, 174, 175, 182, 184, 185, 193, 194, 207, 223, 239, 246, 248, 254, 269, 270, 284, 298, 310, 313, 315, 317, 332, 536, 717, 719, 743, 762, 763, 778, 796, 799, 807, 862, 871, 872, 925, 933, 954, 961, 1014, 1114, 1122, 1124, 1129, 1131, 1135], "generatoren": [23, 156, 223, 328], "staticgen": 23, "learn": [23, 29, 64, 67, 69, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 116, 133, 135, 153, 154, 156, 165, 169, 173, 194, 203, 283, 287, 296, 311, 313, 417, 681, 719, 808, 863, 871, 925, 987, 988, 1062, 1066, 1070, 1078, 1100], "moodl": [23, 105, 108, 109, 110, 112, 140, 314, 316, 317, 618, 632, 719, 796, 800, 815, 821, 840, 846, 862, 947, 950], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 156], "hinblick": [23, 1124], "ihnen": [23, 142, 853, 1112, 1122, 1129], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1115], "schw\u00e4chen": [23, 1117], "konkurrierenden": 23, "relevant": [23, 156, 328, 1135], "anbiet": 23, "ziel": [23, 1113, 1129], "allumfassend": 23, "eh": [23, 31, 166, 176, 181, 189, 215, 221, 225, 228, 273], "vielmehr": 23, "bietet": [23, 147, 150, 1131], "beim": [23, 141, 142, 152, 156, 166, 1115], "verfassen": 23, "kernthema": 23, "zwischen": [23, 150, 166, 176, 183, 189, 328, 1115, 1116, 1117, 1129, 1136], "benutz": [23, 1132], "vorgaben": 23, "existiert": [23, 166, 178], "wald": 23, "dass": [23, 141, 142, 150, 152, 156, 160, 166, 177, 181, 183, 197, 310, 315, 328, 1112, 1115, 1116, 1117, 1122, 1128, 1129, 1132, 1136], "beisteuert": 23, "eben": [23, 147, 150, 176], "\u00fcbergreifend": 23, "definiert": [23, 152, 166, 1112, 1115], "ansatz": 23, "mir": [23, 141, 142, 156, 166, 177, 181, 213, 310, 315, 328, 1115, 1128], "verfolgt": [23, 1129], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 129, 196, 212, 224, 328], "licht": 23, "lesen": [23, 150, 151, 152, 166, 178, 310, 315], "einig": [23, 142, 153, 168, 328, 1115, 1122], "plugin": [23, 135, 445, 682, 954], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 96, 100, 105, 108, 109, 110, 112, 115, 133, 135, 148, 169, 185, 195, 211, 227, 229, 237, 238, 240, 243, 249, 255, 258, 291, 310, 395, 401, 410, 413, 445, 483, 491, 580, 599, 603, 632, 635, 675, 683, 702, 718, 719, 744, 767, 771, 796, 799, 800, 862, 864, 870, 872, 879, 883, 884, 887, 891, 898, 901, 903, 920, 928, 938, 943, 950, 951, 955, 993, 1080, 1084, 1100, 1118], "zentral": [23, 129], "ergebni": [23, 218], "niemand": 23, "doc": [23, 36, 38, 64, 137, 139, 152, 153, 155, 185, 193, 200, 202, 208, 217, 218, 221, 225, 228, 243, 286, 295, 307, 310, 315, 318, 319, 330, 530, 722, 737, 743, 746, 826, 848, 906, 1009, 1075], "show": [23, 24, 27, 29, 42, 57, 62, 112, 113, 132, 133, 135, 136, 140, 161, 169, 172, 173, 185, 194, 202, 208, 211, 218, 219, 221, 249, 261, 262, 275, 283, 295, 296, 314, 316, 317, 318, 321, 380, 420, 422, 431, 462, 478, 484, 530, 619, 729, 748, 750, 782, 793, 794, 826, 848, 851, 853, 855, 863, 865, 870, 871, 872, 891, 922, 924, 928, 933, 937, 950, 952, 960, 999, 1016, 1018, 1069, 1070, 1093, 1100, 1107, 1120], "revealj": 23, "option": [23, 77, 113, 127, 133, 134, 135, 139, 143, 148, 152, 157, 173, 185, 209, 221, 225, 233, 236, 237, 238, 246, 251, 255, 267, 275, 276, 284, 287, 291, 310, 330, 339, 340, 356, 367, 368, 407, 420, 423, 424, 432, 433, 439, 466, 494, 719, 735, 786, 790, 793, 794, 802, 854, 872, 873, 875, 883, 896, 900, 934, 942, 998, 1016, 1019, 1093, 1100, 1107, 1115, 1120, 1133], "webslid": 23, "tv": [23, 31, 140], "sicht": [23, 151, 222, 1115], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1115], "600": [23, 202, 208, 588], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 151, 166, 263, 328, 1113, 1117, 1130], "versagen": 23, "implementierung": 23, "solcher": [23, 150, 166], "featur": [23, 29, 41, 45, 54, 55, 77, 79, 112, 113, 138, 140, 150, 161, 166, 169, 170, 172, 174, 179, 184, 193, 202, 208, 211, 218, 219, 221, 222, 224, 225, 264, 291, 312, 328, 329, 405, 409, 414, 415, 417, 418, 420, 609, 634, 637, 644, 651, 662, 676, 686, 687, 691, 695, 700, 708, 715, 716, 718, 719, 758, 766, 863, 871, 872, 892, 924, 934, 941, 942, 958, 972, 973, 974, 975, 979, 982, 989, 1001, 1002, 1017, 1020, 1021, 1022, 1023, 1036, 1047, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1070, 1074, 1078, 1080, 1082, 1092, 1095, 1097, 1098, 1102, 1113, 1115, 1116, 1118, 1122, 1129], "indem": [23, 176, 311, 1122], "foku": [23, 328], "schulbetrieb": 23, "legen": [23, 853], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1125], "fett": [23, 166, 183], "datenbanken": [23, 189, 328], "webserv": [23, 871], "hintergrund": [23, 176], "redaktionel": 23, "arbeit": [23, 156, 1113], "offlin": 23, "laptop": [23, 134, 136, 143, 882], "zug": 23, "erledigen": [23, 1113], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1112], "sinn": [23, 160, 1115], "prinzip": [23, 1132, 1134, 1136], "kostenlo": 23, "genutzt": [23, 150], "weiterentwickelt": [23, 1117, 1122], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 151, 166, 177, 198, 213, 225, 285, 305, 1130], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 166], "sourcecod": [23, 150], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 58, 61, 132, 133, 135, 136, 165, 168, 172, 177, 190, 205, 216, 219, 221, 228, 231, 246, 250, 253, 263, 267, 333, 345, 390, 434, 435, 442, 447, 461, 462, 493, 545, 550, 643, 673, 693, 737, 741, 766, 803, 841, 857, 922, 925, 926, 937, 938, 954, 1021, 1064, 1069, 1082, 1083, 1085, 1086, 1098, 1133], "reih": [23, 147, 160, 168], "direct": [23, 36, 38, 62, 112, 130, 133, 194, 252, 255, 296, 367, 378, 413, 426, 553, 699, 725, 802, 859, 886, 888, 904, 906, 907, 942, 956, 983, 1069, 1077, 1086, 1120, 1123], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 545, 694, 722], "pypi": [23, 116, 129, 165, 169, 184, 200, 216, 242, 1092, 1093, 1098], "installierbar": 23, "paket": [23, 150, 1113], "generiert": [23, 166], "readthedoc": [23, 31, 38], "gehostet": 23, "verf\u00fcgbar": [23, 926, 1125], "obigen": 23, "bisherigen": [23, 1117], "aktuellen": [23, 176], "bereich": [23, 156, 328], "umfeld": 23, "projektantrag": 23, "bisher": [23, 129, 1112], "softwarebasi": 23, "grundlegend": [23, 178, 1117, 1122, 1129, 1131, 1134], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 41, 60, 132, 156, 165, 200, 209, 219, 284, 309, 310, 314, 318, 324, 417, 533, 643, 701, 766, 1098, 1105], "kurz": [23, 141, 142, 166, 168, 177, 182, 197, 222, 1114, 1128, 1131], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1125], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 142, 1134], "projektinhalt": 23, "verdeutlichen": [23, 1113], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 151], "walkner": 23, "1983": [23, 536], "hallein": 23, "master": [23, 60, 115, 136, 139, 148, 311, 312, 762, 766, 855, 867], "scienc": [23, 28, 77, 140, 154, 165, 169, 174, 203, 272, 286, 312, 536, 589, 989, 1068, 1069, 1070, 1071], "salzburg": 23, "consult": [23, 58, 61, 130, 133, 146, 184, 202, 208, 218, 221, 225, 316, 442], "isamberth": 23, "adnet": 23, "2000": [23, 189, 192, 208, 213, 225, 246, 419, 445, 926], "2002": [23, 208, 545, 694], "divers": [23, 157, 1114], "2005": [23, 536], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 168, 169, 190, 193, 208, 216, 242, 249, 257, 266, 1064], "programmiererfahrung": [23, 1122, 1129, 1136], "bash": [23, 98, 112, 130, 140, 149, 173, 183, 185, 205, 213, 221, 228, 231, 239, 246, 248, 249, 253, 260, 263, 267, 269, 310, 311, 312, 315, 317, 329, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 685, 688, 708, 717, 718, 719, 789, 793, 794, 795, 796, 798, 799, 800, 801, 803, 804, 807, 808, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 851, 856, 857, 862, 885, 888, 891, 893, 895, 898, 901, 903, 904, 917, 919, 920, 923, 925, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 954, 961, 1042, 1113, 1124], "davon": [23, 141, 152, 1115, 1134], "teamleit": 23, "m\u00f6chten": [23, 1136], "ggf": 23, "kennenlernen": 23, "knackig": [23, 129], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 854], "millionen": 23, "ihren": [23, 166, 178], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 160, 328, 1112, 1125], "un": [23, 160, 168, 328, 744, 850, 983, 1113], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 142, 176, 177, 328, 1115, 1128], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 152, 156], "mindesten": [23, 152], "vier": [23, 152, 166, 176, 181, 183, 198, 202, 205, 213, 215, 218, 225, 231, 243, 246, 250, 253, 263, 273, 285, 305, 1122, 1135], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 688, 692], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 142], "wenig": [23, 151, 166, 236, 328, 1113], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 166], "erfolg": [23, 1115], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 147, 160, 854], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 166, 177, 1128, 1136], "bekundet": 23, "medien": [23, 1135], "berichtet": 23, "migrat": [23, 160], "zehn": [23, 176], "migrieren": 23, "verwenden": [23, 147, 160, 166, 172, 176, 181, 1135], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 141, 156, 166, 328, 1134], "eingesetzt": [23, 1113, 1130], "basisarbeit": 23, "workflow": [23, 160, 194, 209, 739, 934, 1130], "datenstrukturen": [23, 178, 196, 217, 1117], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1014], "know": [23, 41, 58, 61, 64, 68, 79, 83, 113, 130, 132, 133, 134, 135, 138, 139, 140, 148, 153, 154, 157, 161, 162, 165, 169, 173, 184, 185, 192, 195, 252, 255, 259, 284, 312, 343, 345, 351, 356, 373, 383, 395, 397, 399, 401, 405, 406, 407, 409, 413, 414, 415, 417, 426, 432, 436, 437, 449, 486, 494, 521, 537, 539, 545, 547, 551, 570, 607, 610, 613, 634, 635, 637, 646, 648, 650, 673, 675, 684, 693, 695, 699, 709, 716, 718, 719, 721, 737, 744, 766, 805, 826, 863, 866, 870, 872, 883, 888, 890, 899, 909, 937, 958, 966, 971, 972, 983, 988, 991, 994, 995, 1014, 1021, 1059, 1063, 1098, 1123], "welchem": [23, 152], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 177, 178, 1128], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1114, 1117, 1129, 1131], "200": [23, 129, 130, 152, 154, 166, 183, 185, 192, 199, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 250, 257, 267, 273, 285, 302, 307, 565, 566, 567, 568, 569, 571, 572, 573, 574, 588, 642, 744, 924, 1038], "stunden": 23, "webprogrammierung": 23, "css": [23, 130, 131], "150": [23, 152, 166, 176, 183, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 635], "kreativarbeit": 23, "erreichen": [23, 1129, 1132], "pers\u00f6nlich": [23, 328], "freund": 23, "ebenfal": [23, 1130], "t\u00e4tig": 23, "mich": [23, 141, 156, 176, 184, 328, 1112], "ermutigt": 23, "\u00fcberhaupt": [23, 1122, 1129, 1136], "starten": [23, 1134], "repr\u00e4sent": 23, "post": [23, 65, 92, 129, 133, 135, 137, 138, 139, 140, 143, 194, 209, 258, 343, 357, 441, 537, 863, 932, 934, 937, 1063], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 177, 1115], "projektbeginn": 23, "abschluss": [23, 142, 310], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 140, 803, 870, 879, 886, 925], "sachbearbeiter_in": 23, "social": [23, 44, 437, 444, 448, 461, 462, 463, 466, 472, 475, 476, 477], "media": [23, 77, 150, 766, 871], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 208], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 156], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 208], "frontendprogrammierung": 23, "4500": [23, 208], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 302], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 142, 250], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 310], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 208], "beantragt": 23, "differenz": [23, 228], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 169, 854, 957], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 183, 189, 197, 253], "bleiben": [23, 142, 166, 176, 1122, 1129, 1132], "reich": [23, 166], "nein": [23, 177, 183, 189, 234, 243, 1128], "neben": [23, 156], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 31, 41, 49, 62, 65, 109, 110, 129, 132, 133, 134, 135, 136, 138, 143, 150, 153, 155, 163, 169, 171, 192, 200, 202, 208, 213, 216, 218, 223, 225, 230, 231, 234, 249, 251, 253, 266, 267, 275, 284, 310, 315, 317, 328, 332, 339, 343, 344, 347, 358, 374, 376, 380, 386, 387, 390, 400, 403, 404, 412, 420, 423, 435, 442, 446, 461, 462, 463, 479, 483, 488, 491, 492, 494, 495, 507, 521, 535, 539, 542, 545, 547, 551, 560, 606, 607, 610, 612, 613, 617, 619, 624, 631, 639, 640, 648, 652, 663, 666, 669, 670, 671, 672, 682, 685, 693, 698, 699, 707, 708, 709, 718, 719, 720, 734, 744, 746, 748, 752, 754, 756, 758, 760, 762, 764, 766, 771, 774, 780, 785, 786, 792, 796, 799, 800, 801, 802, 804, 806, 809, 810, 823, 826, 862, 866, 874, 884, 885, 888, 889, 890, 891, 893, 895, 901, 902, 903, 908, 909, 916, 917, 919, 920, 923, 924, 925, 934, 937, 938, 940, 942, 959, 961, 962, 963, 968, 974, 976, 977, 978, 980, 981, 983, 984, 985, 1005, 1006, 1010, 1012, 1015, 1016, 1021, 1039, 1043, 1064, 1069, 1077, 1080, 1085, 1086, 1099, 1100, 1101, 1120, 1124, 1132, 1133, 1135], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 141, 142, 151, 156, 172, 328], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 137, 138, 143, 494, 805, 826, 872, 1068], "group": [23, 29, 100, 101, 112, 126, 148, 153, 165, 170, 172, 181, 184, 185, 192, 198, 205, 213, 222, 225, 231, 234, 246, 260, 267, 270, 273, 310, 323, 324, 328, 339, 364, 407, 408, 483, 513, 719, 766, 793, 794, 796, 799, 800, 801, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 848, 852, 853, 854, 855, 859, 862, 870, 882, 883, 891, 892, 893, 898, 901, 903, 917, 920, 925, 938, 961, 1042, 1098], "wirtschaftkamm": 23, "nehmen": [23, 142, 1114], "larg": [24, 30, 37, 77, 135, 138, 140, 165, 184, 185, 194, 205, 211, 252, 255, 386, 395, 397, 401, 407, 408, 447, 672, 681, 717, 760, 766, 940, 964, 966, 968, 988, 995, 1021, 1042, 1078, 1082, 1086, 1105], "amount": [24, 105, 109, 110, 133, 134, 135, 138, 144, 165, 172, 200, 250, 251, 407, 419, 550, 672, 673, 797, 799, 883, 900, 988], "pdf": [24, 36, 158, 160, 165, 169, 172, 173, 175, 225, 239, 248, 249, 269, 270, 309, 310, 313, 315, 318, 329, 826, 848, 849, 872, 904, 942, 1036, 1114, 1115, 1116, 1124, 1125, 1131, 1132, 1134, 1135, 1136], "Not": [24, 42, 46, 52, 79, 108, 135, 136, 137, 140, 143, 165, 168, 169, 209, 211, 212, 213, 226, 235, 262, 266, 347, 356, 378, 390, 393, 395, 401, 417, 420, 483, 500, 502, 535, 542, 544, 546, 551, 552, 620, 632, 652, 663, 667, 669, 670, 671, 689, 696, 699, 705, 710, 717, 719, 729, 737, 744, 748, 750, 864, 902, 922, 924, 926, 928, 938, 961, 963, 968, 969, 970, 971, 981, 983, 995, 1004, 1009, 1064, 1068, 1073, 1087, 1089, 1106, 1118], "satisfi": [24, 31, 169, 436, 552, 640, 652, 685], "colleagu": [24, 28, 144, 185, 397, 609, 966, 983, 995], "aren": [24, 130, 215, 225, 648, 827, 916, 926], "either": [24, 38, 41, 42, 133, 135, 143, 144, 249, 252, 255, 395, 462, 635, 643, 646, 707, 793, 794, 823, 826, 858, 872, 963, 1030, 1080, 1118], "nobodi": [24, 42, 133, 135, 154, 165, 205, 221, 228, 231, 246, 253, 263, 267, 398, 400, 537, 578, 650, 721, 793, 794, 803, 818, 820, 826, 827, 879, 887, 1016, 1070, 1101, 1107], "doe": [24, 37, 44, 47, 48, 60, 68, 77, 82, 83, 109, 110, 112, 129, 132, 133, 134, 137, 138, 139, 140, 143, 144, 148, 153, 161, 165, 169, 171, 183, 192, 195, 208, 225, 228, 234, 252, 253, 255, 258, 260, 262, 284, 310, 321, 337, 343, 351, 355, 356, 357, 358, 365, 374, 375, 384, 387, 390, 391, 393, 395, 397, 399, 401, 406, 407, 408, 411, 412, 413, 417, 419, 420, 421, 425, 431, 432, 435, 437, 440, 445, 449, 457, 459, 461, 487, 488, 489, 490, 491, 494, 495, 518, 527, 530, 537, 538, 539, 542, 545, 547, 548, 550, 553, 576, 583, 591, 597, 606, 609, 610, 616, 617, 624, 635, 640, 641, 643, 650, 652, 672, 674, 682, 683, 685, 689, 693, 694, 695, 698, 699, 701, 705, 706, 715, 717, 729, 730, 734, 735, 737, 744, 758, 766, 771, 782, 792, 801, 805, 806, 808, 811, 859, 863, 870, 871, 872, 883, 888, 889, 891, 895, 898, 909, 913, 916, 922, 924, 925, 934, 938, 940, 941, 942, 943, 948, 952, 956, 957, 959, 961, 962, 963, 964, 966, 968, 977, 981, 983, 984, 988, 991, 994, 1012, 1013, 1014, 1033, 1041, 1043, 1070, 1072, 1073, 1075, 1082, 1083, 1086, 1087, 1088, 1090, 1093, 1098, 1118, 1120], "even": [24, 29, 58, 61, 77, 121, 133, 134, 135, 140, 144, 154, 155, 165, 169, 172, 173, 177, 179, 184, 190, 192, 193, 195, 196, 205, 209, 212, 213, 216, 219, 222, 224, 225, 227, 230, 231, 242, 252, 255, 266, 267, 285, 374, 383, 397, 403, 407, 435, 440, 536, 544, 547, 593, 640, 682, 685, 692, 701, 717, 719, 758, 766, 803, 822, 863, 871, 888, 889, 922, 924, 925, 941, 960, 972, 983, 1009, 1012, 1023, 1026, 1027, 1062, 1064, 1085, 1093, 1100, 1120, 1128], "tech": [24, 44, 132], "although": [24, 29, 77, 133, 135, 139, 144, 155, 165, 171, 195, 215, 225, 328, 491, 635, 636, 677, 699, 805, 808, 879, 959, 964, 1021, 1070], "gain": [24, 140, 252, 255, 407, 766, 805], "incred": 24, "momentum": 24, "expect": [24, 37, 49, 132, 135, 181, 202, 208, 209, 218, 221, 228, 253, 267, 285, 287, 384, 422, 437, 480, 545, 610, 663, 672, 685, 739, 750, 863, 871, 872, 911, 928, 937, 983, 993, 1006, 1036, 1046, 1069, 1104, 1105, 1108], "context": [24, 29, 58, 61, 109, 110, 133, 154, 157, 169, 172, 174, 176, 183, 214, 218, 219, 221, 225, 228, 234, 242, 246, 251, 261, 262, 263, 266, 273, 277, 280, 283, 284, 287, 328, 394, 456, 457, 471, 539, 545, 673, 694, 717, 719, 728, 733, 736, 738, 743, 746, 747, 748, 749, 752, 753, 757, 758, 759, 761, 762, 763, 770, 771, 772, 774, 775, 776, 777, 780, 781, 784, 786, 787, 799, 803, 862, 863, 886, 926, 937, 938, 965, 974, 1062, 1073], "defin": [24, 52, 113, 126, 136, 153, 155, 170, 172, 174, 176, 181, 189, 192, 193, 195, 202, 206, 208, 211, 215, 218, 221, 225, 233, 235, 246, 257, 267, 284, 285, 291, 305, 316, 337, 342, 347, 352, 353, 356, 373, 374, 375, 376, 377, 378, 391, 399, 400, 401, 403, 407, 420, 421, 426, 427, 428, 445, 449, 457, 478, 479, 491, 513, 521, 538, 539, 540, 542, 544, 545, 547, 548, 551, 552, 553, 560, 563, 584, 588, 609, 616, 635, 636, 645, 646, 647, 648, 649, 652, 672, 677, 681, 690, 693, 698, 699, 725, 727, 739, 803, 823, 863, 864, 872, 883, 890, 908, 930, 940, 942, 956, 958, 962, 964, 966, 978, 983, 995, 1005, 1060, 1073, 1077, 1091, 1110, 1118, 1120, 1123], "solv": [24, 44, 79, 88, 112, 130, 133, 134, 163, 165, 169, 170, 172, 174, 185, 190, 203, 211, 216, 219, 230, 233, 255, 259, 266, 270, 272, 275, 287, 296, 377, 419, 428, 634, 708, 718, 719, 766, 805, 862, 903, 917, 950, 952, 954, 983, 1059, 1064, 1070, 1120, 1121], "provid": [24, 27, 36, 57, 64, 67, 133, 135, 136, 137, 139, 140, 143, 144, 148, 161, 202, 208, 209, 218, 221, 225, 259, 275, 393, 422, 427, 428, 437, 448, 456, 609, 672, 699, 766, 802, 805, 845, 871, 872, 879, 893, 925, 934, 966, 975, 993, 1006, 1069, 1092, 1100, 1120], "depth": [24, 165, 169, 190, 202, 208, 218, 219, 221, 397, 697, 968, 1064, 1068, 1069], "repres": [24, 133, 135, 157, 202, 208, 218, 221, 225, 246, 257, 296, 406, 440, 457, 459, 546, 717, 737, 762, 799, 802, 870, 872, 900, 995, 1021, 1059, 1063, 1082, 1089, 1123], "own": [24, 28, 39, 42, 64, 109, 110, 133, 134, 136, 137, 143, 148, 161, 165, 211, 235, 240, 249, 259, 284, 291, 397, 403, 418, 432, 440, 457, 462, 526, 527, 536, 626, 627, 629, 630, 644, 648, 651, 663, 673, 675, 687, 695, 710, 717, 718, 719, 766, 799, 801, 802, 811, 813, 814, 822, 823, 845, 855, 870, 871, 883, 890, 908, 913, 924, 925, 937, 956, 963, 980, 985, 986, 988, 1071, 1105, 1120, 1121, 1123], "yield": [24, 29, 152, 153, 166, 169, 170, 172, 181, 193, 200, 206, 210, 212, 214, 215, 221, 225, 230, 232, 242, 245, 246, 253, 261, 262, 263, 266, 267, 272, 274, 285, 378, 447, 456, 663, 666, 669, 670, 671, 719, 961, 965, 967, 968, 970, 989, 999, 1020, 1021, 1022, 1023, 1036, 1047, 1062, 1074], "multipl": [24, 34, 35, 58, 61, 75, 105, 109, 110, 133, 134, 136, 150, 165, 169, 172, 192, 193, 194, 206, 208, 225, 260, 284, 333, 335, 339, 340, 343, 352, 354, 357, 366, 373, 377, 395, 400, 413, 418, 425, 457, 471, 484, 539, 552, 610, 617, 630, 657, 663, 685, 687, 694, 702, 705, 709, 710, 717, 719, 735, 737, 743, 747, 748, 756, 757, 758, 766, 768, 770, 771, 774, 775, 781, 784, 787, 799, 802, 803, 806, 808, 813, 814, 859, 862, 871, 892, 908, 913, 933, 946, 983, 994, 995, 1008, 1009, 1014, 1064, 1089, 1091], "artifact": [24, 139, 143, 157, 162, 275, 413, 727, 940, 941, 942, 952, 1107, 1120], "complet": [24, 41, 62, 77, 112, 129, 132, 133, 154, 165, 173, 181, 190, 203, 206, 209, 216, 230, 231, 233, 260, 266, 272, 277, 284, 291, 295, 296, 377, 394, 407, 420, 432, 484, 493, 538, 539, 613, 682, 697, 717, 760, 766, 793, 794, 804, 866, 872, 887, 924, 961, 965, 987, 988, 1064, 1069, 1070, 1072, 1078, 1080, 1092, 1093, 1110, 1118], "prepar": [27, 112, 113, 129, 132, 165, 222, 310, 328, 441, 482, 513, 575, 612, 933, 957, 1060, 1069, 1099], "base": [27, 29, 30, 41, 44, 52, 77, 79, 96, 106, 112, 125, 133, 135, 136, 148, 155, 160, 165, 166, 169, 172, 173, 176, 180, 183, 185, 195, 209, 211, 214, 218, 219, 223, 228, 230, 236, 243, 246, 251, 253, 257, 258, 259, 260, 261, 262, 267, 272, 283, 284, 285, 287, 306, 310, 314, 321, 343, 351, 378, 395, 413, 418, 419, 437, 441, 446, 447, 449, 456, 481, 493, 497, 513, 524, 566, 568, 569, 570, 571, 573, 574, 578, 610, 612, 613, 615, 657, 674, 675, 682, 687, 694, 698, 710, 713, 716, 718, 719, 739, 746, 750, 762, 766, 768, 817, 819, 859, 863, 922, 934, 938, 940, 941, 954, 955, 957, 965, 972, 974, 979, 980, 1020, 1026, 1042, 1062, 1071, 1072, 1086, 1117, 1118, 1121], "exist": [27, 37, 45, 46, 52, 54, 55, 108, 109, 110, 126, 129, 139, 144, 173, 185, 192, 258, 262, 295, 307, 310, 313, 395, 417, 419, 435, 440, 460, 463, 483, 494, 500, 502, 535, 545, 593, 628, 630, 639, 693, 717, 719, 766, 793, 794, 799, 801, 808, 817, 819, 828, 832, 833, 845, 862, 870, 872, 883, 888, 892, 898, 901, 903, 920, 927, 934, 952, 956, 957, 962, 963, 972, 977, 1012, 1014, 1032, 1073, 1081, 1082, 1093, 1098, 1100], "navig": [27, 1089], "through": [27, 33, 37, 60, 72, 77, 103, 130, 132, 133, 135, 140, 144, 148, 161, 165, 169, 171, 174, 185, 193, 194, 195, 200, 206, 219, 259, 261, 262, 277, 280, 283, 317, 321, 328, 347, 367, 386, 406, 410, 423, 432, 463, 485, 488, 554, 556, 557, 606, 607, 610, 613, 635, 650, 652, 677, 685, 689, 695, 699, 737, 764, 797, 805, 853, 863, 871, 872, 881, 934, 937, 938, 963, 968, 971, 986, 988, 991, 1026, 1071, 1091, 1118, 1119, 1123], "deviat": [27, 140, 153, 161, 170, 194, 225, 328, 766], "after": [27, 42, 129, 130, 133, 134, 135, 140, 143, 153, 162, 165, 172, 185, 192, 202, 208, 218, 221, 224, 225, 231, 246, 251, 258, 260, 267, 296, 335, 343, 344, 377, 397, 404, 423, 425, 461, 462, 485, 492, 544, 547, 560, 595, 643, 645, 646, 648, 657, 663, 710, 717, 744, 748, 754, 806, 809, 826, 827, 859, 870, 910, 928, 933, 934, 937, 940, 959, 961, 963, 988, 989, 993, 1029, 1042, 1060, 1068, 1077, 1089, 1099, 1100, 1105], "writeup": [27, 144, 952], "what": [27, 28, 42, 43, 46, 47, 54, 55, 56, 57, 58, 61, 64, 68, 77, 82, 85, 86, 96, 97, 98, 103, 106, 112, 113, 130, 132, 133, 134, 135, 136, 137, 138, 139, 144, 148, 152, 153, 154, 155, 156, 157, 159, 161, 165, 166, 169, 170, 171, 172, 173, 174, 175, 184, 192, 194, 195, 209, 210, 211, 220, 225, 233, 239, 249, 252, 255, 259, 261, 262, 275, 280, 283, 291, 295, 296, 302, 310, 313, 315, 317, 318, 321, 332, 340, 345, 355, 356, 358, 371, 380, 383, 390, 393, 395, 397, 398, 401, 402, 403, 407, 411, 413, 418, 419, 422, 427, 429, 436, 438, 440, 461, 462, 472, 478, 480, 489, 492, 513, 514, 517, 520, 523, 526, 529, 530, 532, 542, 545, 547, 548, 549, 550, 551, 553, 560, 563, 570, 606, 613, 622, 640, 643, 646, 652, 657, 663, 673, 684, 685, 693, 694, 695, 699, 702, 706, 708, 709, 715, 717, 718, 719, 727, 730, 734, 737, 739, 744, 762, 769, 774, 779, 792, 793, 794, 796, 797, 799, 800, 802, 803, 805, 806, 808, 810, 811, 812, 815, 816, 817, 818, 819, 820, 821, 826, 841, 842, 844, 862, 863, 870, 871, 872, 874, 875, 876, 877, 878, 889, 890, 896, 897, 898, 899, 901, 903, 908, 909, 910, 911, 912, 917, 920, 923, 925, 926, 928, 929, 932, 933, 934, 936, 938, 941, 950, 951, 955, 957, 958, 959, 961, 963, 965, 966, 969, 970, 974, 975, 983, 987, 988, 1006, 1012, 1016, 1021, 1024, 1032, 1059, 1063, 1071, 1073, 1080, 1089, 1098, 1100, 1104, 1105, 1107, 1109, 1120, 1123], "collect": [27, 29, 129, 132, 134, 177, 184, 193, 199, 200, 217, 219, 220, 221, 233, 242, 244, 251, 259, 261, 262, 266, 277, 280, 283, 284, 287, 295, 406, 413, 524, 570, 685, 694, 706, 719, 766, 797, 869, 950, 961, 965, 971, 979, 1013, 1019, 1023, 1052, 1057, 1059, 1062, 1063, 1078, 1092, 1093, 1098, 1100, 1128], "question": [27, 29, 31, 34, 35, 37, 101, 112, 135, 140, 148, 153, 165, 169, 171, 193, 194, 195, 205, 206, 208, 209, 211, 231, 310, 317, 324, 352, 381, 387, 399, 418, 421, 425, 429, 482, 546, 606, 613, 701, 705, 719, 744, 758, 774, 793, 794, 796, 815, 821, 845, 862, 870, 872, 883, 887, 903, 922, 923, 956, 964, 965, 968, 973, 1062, 1064], "ask": [27, 133, 138, 140, 148, 165, 168, 169, 234, 266, 310, 317, 417, 436, 437, 459, 478, 530, 542, 553, 674, 696, 822, 877, 879, 983, 1064], "answer": [27, 44, 137, 140, 153, 165, 169, 171, 172, 195, 206, 213, 285, 317, 421, 425, 482, 606, 613, 615, 685, 690, 709, 730, 774, 793, 794, 799, 811, 813, 814, 817, 819, 870, 872, 879, 883, 922, 925, 956, 963, 964, 968, 975, 992, 995, 1064], "cover": [27, 77, 80, 126, 140, 157, 165, 169, 173, 175, 193, 194, 206, 219, 258, 260, 417, 436, 870, 872, 954, 963, 965, 988, 1036, 1059, 1064, 1068, 1069, 1091, 1092, 1098, 1121, 1123], "been": [27, 58, 61, 132, 133, 134, 135, 137, 138, 139, 144, 148, 153, 154, 165, 173, 202, 208, 218, 221, 252, 255, 257, 267, 284, 307, 316, 376, 390, 391, 420, 431, 440, 457, 513, 672, 720, 762, 780, 786, 791, 801, 805, 809, 829, 863, 870, 871, 872, 883, 892, 902, 913, 938, 941, 942, 959, 966, 1004, 1100, 1118, 1120, 1121], "further": [27, 130, 132, 139, 143, 159, 208, 240, 255, 284, 318, 383, 394, 432, 494, 514, 517, 520, 523, 526, 529, 532, 644, 675, 718, 719, 737, 760, 766, 848, 873, 909, 929, 932, 936, 971, 1104, 1109, 1123], "inform": [27, 28, 29, 105, 132, 135, 136, 138, 143, 152, 153, 154, 156, 161, 181, 202, 208, 218, 221, 246, 261, 262, 283, 287, 394, 404, 411, 412, 422, 431, 699, 717, 725, 737, 801, 826, 859, 863, 870, 872, 874, 906, 962, 990, 1064, 1072, 1077, 1093, 1100], "internet": [27, 64, 77, 132, 134, 137, 138, 140, 161, 173, 181, 209, 222, 261, 262, 277, 283, 287, 307, 419, 863, 864, 866, 924, 964, 1121, 1135], "subtract": [27, 202, 225, 257, 354, 457, 471, 685, 825, 925, 975, 983, 995], "known": [27, 129, 134, 145, 185, 202, 208, 218, 221, 238, 240, 258, 275, 307, 353, 355, 367, 374, 401, 407, 572, 737, 826, 955, 1071, 1120, 1121], "calcul": [27, 81, 84, 135, 169, 193, 202, 225, 353, 355, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 456, 486, 491, 493, 637, 642, 675, 702, 716, 718, 719, 908, 925, 966, 968, 1039, 1071, 1076, 1098], "minimum": [27, 62, 225, 657, 766, 961, 1067, 1068, 1069, 1070], "come": [27, 42, 77, 109, 110, 129, 130, 132, 133, 134, 135, 138, 139, 140, 143, 144, 155, 161, 162, 165, 185, 211, 238, 240, 251, 258, 259, 284, 301, 307, 331, 333, 334, 350, 377, 413, 420, 457, 491, 573, 610, 613, 618, 632, 684, 687, 689, 699, 709, 719, 734, 766, 797, 799, 803, 809, 822, 826, 863, 870, 871, 872, 898, 924, 952, 963, 964, 968, 986, 987, 988, 989, 995, 1006, 1014, 1016, 1021, 1026, 1044, 1055, 1072, 1075, 1080, 1094, 1121], "she": [27, 192, 610, 643, 801, 803, 1008, 1016], "who": [27, 29, 44, 130, 133, 137, 140, 144, 163, 165, 211, 221, 246, 277, 328, 403, 407, 417, 422, 445, 462, 494, 615, 685, 695, 739, 766, 774, 793, 794, 801, 805, 811, 822, 863, 871, 872, 887, 898, 940, 957, 959, 965, 987, 1063, 1078, 1090, 1098, 1118, 1121, 1123], "repetit": [27, 246, 826, 1118], "prone": [27, 352, 540, 550, 570, 643, 687, 754, 942, 1010, 1105, 1118], "possibl": [27, 58, 60, 61, 105, 112, 115, 120, 123, 132, 133, 140, 143, 148, 155, 165, 169, 185, 195, 202, 208, 211, 213, 218, 219, 221, 238, 240, 249, 258, 261, 262, 267, 284, 342, 353, 356, 373, 386, 393, 399, 403, 407, 408, 411, 417, 423, 432, 435, 437, 440, 445, 449, 457, 459, 494, 527, 537, 539, 540, 545, 552, 553, 571, 588, 629, 635, 636, 643, 657, 661, 674, 685, 693, 694, 695, 699, 744, 771, 801, 810, 835, 864, 865, 870, 871, 881, 884, 913, 961, 962, 963, 971, 976, 984, 986, 995, 1004, 1009, 1011, 1012, 1014, 1063, 1064, 1073, 1085], "abl": [27, 28, 30, 42, 132, 133, 135, 136, 138, 140, 148, 165, 185, 192, 274, 397, 403, 429, 436, 440, 494, 642, 652, 793, 794, 811, 817, 819, 820, 863, 871, 872, 898, 934, 965, 1076, 1123], "fix": [27, 45, 62, 64, 75, 106, 129, 133, 146, 148, 169, 190, 195, 205, 206, 211, 230, 233, 260, 261, 262, 283, 310, 335, 358, 401, 417, 419, 425, 462, 495, 507, 518, 530, 536, 555, 571, 621, 628, 649, 719, 734, 739, 743, 746, 747, 767, 768, 774, 775, 781, 784, 787, 810, 862, 866, 886, 896, 927, 937, 957, 959, 962, 989, 1021, 1064], "inconsist": [27, 537, 1087], "easi": [27, 67, 121, 133, 135, 136, 137, 138, 139, 140, 144, 153, 154, 157, 169, 215, 225, 356, 371, 397, 413, 635, 652, 694, 746, 748, 752, 764, 771, 805, 870, 871, 872, 899, 916, 934, 943, 957, 983, 987, 995, 1004, 1006, 1070, 1098, 1099, 1123], "plain": [27, 135, 195, 321, 513, 549, 552, 631, 684, 699, 769, 871, 962, 975], "happi": [27, 64, 138, 165, 401, 545, 1069], "clear": [27, 42, 133, 135, 140, 152, 185, 195, 224, 285, 311, 312, 378, 403, 407, 422, 432, 438, 444, 551, 606, 639, 657, 694, 766, 774, 802, 805, 826, 886, 960, 975, 995, 997, 1068, 1069, 1100], "front": [27, 77, 130, 140, 165, 221, 267, 407, 588, 707, 1121], "later": [27, 79, 113, 132, 133, 136, 143, 154, 165, 287, 333, 337, 343, 345, 347, 403, 407, 413, 420, 539, 540, 542, 554, 556, 557, 591, 646, 677, 680, 725, 727, 729, 734, 750, 752, 762, 769, 808, 870, 892, 908, 909, 911, 922, 926, 976, 984, 994, 997, 999, 1077, 1083], "menu": [27, 129, 173, 766, 1113], "mine": [28, 132, 133, 136, 144, 161, 165, 169, 328, 527, 766], "hi": [28, 44, 148, 153, 165, 169, 172, 190, 216, 219, 400, 489, 976, 1064], "data": [28, 29, 48, 69, 72, 77, 88, 107, 109, 110, 133, 134, 135, 136, 140, 143, 152, 154, 156, 165, 169, 170, 174, 182, 184, 189, 199, 202, 203, 208, 209, 211, 218, 221, 225, 231, 246, 250, 251, 252, 253, 255, 258, 260, 261, 262, 267, 272, 275, 277, 280, 286, 312, 313, 328, 342, 356, 363, 372, 379, 385, 386, 389, 391, 392, 396, 401, 405, 406, 408, 409, 414, 415, 418, 425, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 500, 502, 511, 535, 536, 538, 542, 545, 558, 561, 563, 564, 575, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 637, 641, 644, 675, 687, 691, 699, 700, 708, 709, 716, 717, 718, 719, 721, 724, 725, 756, 760, 764, 771, 779, 797, 803, 808, 810, 818, 864, 866, 870, 871, 872, 873, 883, 887, 889, 897, 902, 908, 911, 914, 916, 928, 952, 961, 963, 968, 972, 975, 988, 989, 1000, 1002, 1003, 1004, 1012, 1023, 1051, 1052, 1062, 1066, 1067, 1068, 1070, 1072, 1073, 1077, 1078, 1082, 1083, 1086, 1088, 1089, 1093, 1098, 1119, 1120, 1134], "convinc": [28, 356], "him": [28, 165, 169, 172, 190, 193, 216, 242, 266, 684, 913, 1064], "wai": [28, 42, 49, 58, 61, 62, 64, 79, 80, 123, 129, 130, 132, 135, 140, 144, 145, 148, 154, 157, 161, 166, 168, 169, 171, 172, 173, 176, 177, 185, 190, 193, 205, 206, 211, 214, 215, 216, 218, 219, 223, 225, 233, 237, 238, 251, 252, 255, 259, 261, 262, 283, 284, 298, 302, 352, 356, 360, 361, 371, 377, 393, 394, 395, 403, 419, 420, 427, 437, 439, 440, 444, 460, 462, 481, 491, 495, 507, 513, 521, 537, 538, 545, 550, 553, 591, 593, 619, 625, 636, 652, 673, 683, 695, 699, 722, 735, 744, 758, 760, 766, 793, 794, 802, 808, 810, 813, 814, 863, 871, 872, 883, 890, 898, 924, 927, 937, 938, 942, 948, 952, 963, 975, 980, 986, 989, 990, 993, 1004, 1008, 1009, 1011, 1014, 1016, 1021, 1049, 1064, 1082, 1090, 1098, 1105, 1123], "go": [28, 39, 41, 58, 60, 61, 62, 64, 79, 96, 130, 133, 136, 137, 139, 140, 162, 165, 172, 176, 185, 194, 195, 211, 252, 255, 257, 287, 313, 417, 419, 437, 478, 639, 677, 689, 695, 707, 719, 727, 730, 734, 766, 768, 797, 809, 826, 828, 862, 863, 870, 871, 898, 901, 903, 908, 916, 920, 940, 943, 957, 988, 1022], "relev": [28, 135, 208, 233, 343, 432, 494, 699, 766, 779, 870, 871, 963, 1063, 1079, 1093], "part": [28, 42, 79, 91, 105, 112, 126, 133, 134, 135, 136, 138, 140, 143, 154, 157, 165, 172, 173, 174, 195, 221, 233, 252, 255, 267, 312, 319, 333, 356, 390, 417, 440, 445, 459, 480, 494, 537, 635, 707, 717, 737, 744, 766, 786, 793, 794, 826, 861, 863, 870, 871, 872, 873, 888, 940, 987, 988, 1001, 1006, 1008, 1054, 1056, 1070, 1071, 1082, 1083, 1085, 1086, 1087, 1088, 1108], "natur": [28, 37, 74, 133, 135, 140, 165, 219, 225, 267, 328, 333, 351, 395, 436, 437, 589, 591, 635, 695, 871, 999], "straighforward": 28, "approach": [28, 34, 37, 132, 133, 172, 276, 335, 419, 423, 424, 432, 693, 719, 805, 871, 924, 926, 1081], "would": [28, 56, 103, 106, 132, 134, 135, 137, 138, 144, 153, 155, 162, 165, 169, 171, 184, 195, 208, 221, 225, 260, 262, 367, 386, 393, 395, 406, 407, 421, 422, 425, 432, 435, 493, 507, 511, 545, 549, 551, 553, 600, 607, 616, 640, 646, 685, 695, 707, 715, 766, 769, 793, 794, 817, 819, 822, 848, 871, 872, 882, 883, 899, 908, 916, 937, 956, 957, 961, 963, 964, 984, 995, 999, 1003, 1006, 1012, 1016, 1021, 1042, 1069, 1072, 1082, 1089], "copi": [28, 35, 41, 49, 69, 96, 98, 100, 101, 112, 113, 123, 125, 129, 133, 134, 135, 136, 139, 144, 148, 154, 160, 163, 173, 180, 183, 195, 205, 211, 217, 221, 225, 228, 231, 237, 238, 239, 240, 243, 248, 249, 253, 257, 258, 260, 267, 269, 270, 273, 285, 291, 313, 343, 345, 357, 363, 372, 377, 379, 381, 385, 386, 389, 392, 396, 405, 409, 414, 415, 430, 462, 463, 476, 477, 478, 483, 500, 512, 513, 515, 524, 529, 531, 533, 535, 536, 537, 543, 553, 554, 556, 557, 566, 570, 580, 588, 597, 599, 602, 603, 615, 617, 623, 626, 629, 632, 637, 638, 639, 643, 644, 645, 663, 675, 677, 687, 691, 695, 696, 700, 708, 715, 716, 717, 718, 719, 741, 746, 766, 767, 782, 792, 793, 794, 795, 796, 797, 806, 826, 832, 833, 835, 836, 837, 838, 840, 846, 862, 873, 876, 878, 883, 895, 900, 901, 902, 903, 910, 911, 916, 920, 933, 950, 951, 952, 954, 956, 957, 961, 962, 996, 1011, 1014, 1077, 1081, 1086, 1100, 1105, 1107, 1118, 1130], "dumb": [28, 44, 153, 184, 295, 737, 911, 913], "reason": [28, 60, 120, 135, 148, 154, 165, 194, 213, 307, 390, 397, 399, 401, 407, 410, 423, 435, 554, 556, 557, 591, 635, 678, 697, 734, 750, 762, 766, 817, 819, 916, 924, 925, 938, 952, 957, 995, 1004, 1006, 1069], "ar": [28, 31, 42, 44, 46, 52, 54, 55, 56, 57, 58, 60, 61, 62, 64, 67, 77, 79, 80, 88, 105, 107, 108, 109, 110, 117, 120, 126, 127, 130, 132, 135, 136, 137, 139, 140, 143, 144, 148, 149, 150, 153, 154, 155, 157, 161, 163, 165, 169, 170, 171, 172, 173, 174, 185, 192, 193, 194, 195, 202, 205, 206, 208, 209, 211, 212, 214, 216, 217, 218, 219, 221, 225, 229, 233, 238, 240, 242, 249, 251, 252, 255, 257, 258, 259, 260, 262, 267, 270, 275, 279, 284, 285, 295, 296, 297, 301, 307, 310, 312, 313, 315, 316, 332, 334, 335, 337, 340, 342, 343, 345, 347, 350, 351, 354, 355, 356, 362, 365, 368, 373, 374, 377, 381, 383, 384, 386, 387, 388, 393, 394, 395, 397, 398, 401, 404, 407, 410, 417, 418, 420, 422, 425, 426, 431, 432, 435, 436, 437, 447, 457, 459, 462, 481, 484, 491, 492, 493, 494, 495, 498, 502, 507, 511, 521, 527, 530, 537, 538, 539, 540, 542, 545, 546, 549, 550, 551, 553, 560, 563, 570, 571, 572, 575, 585, 591, 592, 597, 600, 607, 609, 610, 612, 613, 617, 623, 624, 625, 626, 630, 636, 638, 639, 640, 643, 646, 647, 648, 652, 657, 674, 677, 678, 683, 684, 685, 687, 689, 693, 694, 695, 696, 698, 699, 701, 704, 706, 710, 717, 719, 721, 722, 725, 735, 737, 739, 744, 750, 752, 754, 758, 760, 762, 764, 766, 771, 785, 792, 793, 794, 797, 799, 801, 802, 804, 805, 806, 808, 809, 811, 812, 817, 819, 826, 827, 829, 839, 844, 848, 850, 853, 863, 864, 870, 871, 872, 873, 879, 881, 883, 886, 888, 889, 892, 893, 900, 906, 908, 909, 911, 913, 914, 916, 919, 925, 926, 927, 928, 933, 937, 938, 940, 941, 942, 943, 946, 948, 952, 954, 955, 957, 958, 959, 961, 963, 964, 966, 968, 972, 975, 976, 977, 978, 982, 984, 987, 988, 991, 992, 993, 994, 995, 997, 1000, 1004, 1012, 1014, 1015, 1016, 1018, 1026, 1031, 1059, 1063, 1064, 1069, 1070, 1071, 1072, 1073, 1076, 1077, 1078, 1080, 1082, 1083, 1086, 1088, 1089, 1092, 1098, 1100, 1101, 1104, 1105, 1108, 1120, 1121, 1123], "need": [28, 42, 44, 60, 62, 103, 113, 133, 134, 135, 138, 140, 144, 148, 149, 154, 165, 172, 173, 175, 185, 195, 209, 211, 233, 277, 298, 310, 340, 342, 345, 365, 373, 374, 393, 399, 400, 406, 410, 412, 413, 417, 420, 422, 425, 427, 430, 432, 436, 437, 459, 489, 491, 492, 493, 494, 524, 530, 536, 537, 552, 572, 592, 606, 613, 617, 646, 652, 681, 695, 698, 704, 709, 725, 739, 741, 754, 758, 762, 766, 805, 809, 822, 827, 863, 864, 865, 866, 870, 871, 872, 879, 883, 889, 890, 893, 896, 907, 911, 922, 943, 952, 956, 957, 958, 962, 967, 980, 988, 989, 991, 994, 1003, 1008, 1019, 1020, 1069, 1070, 1077, 1092, 1100, 1121], "mechan": [28, 31, 88, 120, 133, 134, 157, 165, 169, 180, 195, 249, 435, 613, 913, 934, 972, 1064, 1093, 1118, 1123, 1133], "where": [28, 52, 88, 108, 112, 118, 119, 129, 132, 133, 134, 135, 136, 138, 140, 143, 148, 153, 154, 161, 162, 165, 166, 169, 192, 193, 194, 195, 202, 205, 208, 209, 211, 218, 221, 225, 233, 242, 249, 267, 275, 284, 310, 315, 316, 351, 355, 365, 373, 374, 376, 377, 378, 391, 395, 406, 408, 418, 428, 441, 448, 479, 481, 492, 507, 513, 530, 549, 610, 613, 617, 635, 693, 694, 698, 760, 764, 766, 778, 808, 809, 823, 826, 829, 850, 855, 863, 870, 871, 872, 879, 884, 890, 892, 895, 898, 899, 915, 925, 926, 933, 937, 938, 941, 952, 956, 957, 964, 966, 968, 971, 993, 995, 1005, 1046, 1064, 1071, 1076, 1098, 1120, 1123], "could": [28, 49, 56, 109, 110, 112, 129, 130, 133, 134, 138, 140, 144, 154, 163, 165, 171, 185, 194, 195, 205, 215, 221, 249, 259, 261, 262, 280, 283, 328, 356, 400, 421, 423, 436, 437, 461, 494, 545, 553, 617, 629, 635, 648, 649, 657, 672, 682, 697, 720, 737, 766, 779, 805, 823, 871, 872, 879, 890, 896, 933, 995, 1046, 1060, 1076, 1086, 1093, 1105, 1118], "exchang": [28, 77, 162, 205, 417, 445, 461, 491, 645, 646, 737, 810, 928, 1021, 1029], "meta": [28, 38, 125, 140, 766, 778, 826], "retriev": [28, 144, 663, 766, 968, 1016], "check": [28, 29, 37, 87, 96, 103, 118, 132, 133, 135, 136, 137, 138, 139, 144, 148, 153, 165, 169, 173, 177, 202, 208, 211, 218, 221, 225, 249, 262, 295, 318, 321, 343, 358, 367, 369, 370, 375, 383, 390, 394, 402, 404, 420, 484, 485, 507, 518, 530, 537, 545, 552, 553, 570, 591, 629, 645, 646, 657, 694, 717, 719, 739, 741, 746, 766, 782, 783, 785, 862, 863, 870, 871, 893, 898, 904, 907, 911, 941, 942, 947, 950, 952, 959, 988, 993, 1006, 1016, 1019, 1023, 1025, 1027, 1043, 1049, 1062, 1093, 1098, 1107, 1118, 1128], "everyth": [28, 41, 42, 97, 112, 126, 133, 139, 140, 157, 165, 169, 173, 184, 192, 210, 211, 239, 248, 249, 252, 255, 269, 270, 284, 287, 321, 328, 345, 365, 368, 393, 407, 413, 417, 478, 536, 537, 539, 546, 550, 555, 560, 610, 652, 681, 685, 701, 708, 717, 718, 719, 735, 744, 764, 768, 771, 796, 799, 800, 802, 803, 827, 848, 862, 863, 864, 870, 871, 872, 889, 891, 892, 903, 916, 917, 923, 925, 928, 938, 960, 966, 971, 975, 1071, 1086, 1131, 1132, 1133, 1135], "clearli": [28, 42, 148, 165, 395, 642, 663, 690, 766, 785, 899, 964, 995, 1016, 1120], "intersphinx": [28, 130], "spinx": 28, "possibli": [29, 76, 84, 133, 165, 419, 553, 629, 643, 652, 657, 672, 684, 694, 706, 707, 811, 848, 871, 919, 954, 1080], "arrang": [29, 83, 109, 110, 137, 280, 494, 699, 799, 859], "subgroup": [29, 34, 37, 513], "refer": [29, 65, 89, 96, 109, 110, 112, 132, 138, 139, 153, 155, 160, 169, 172, 174, 177, 178, 189, 190, 192, 194, 195, 200, 203, 204, 206, 207, 209, 210, 211, 216, 217, 218, 221, 225, 227, 229, 230, 232, 236, 244, 245, 247, 252, 254, 255, 259, 260, 262, 265, 266, 268, 271, 272, 274, 275, 283, 284, 286, 287, 291, 296, 297, 298, 299, 300, 301, 310, 374, 380, 387, 426, 483, 491, 500, 502, 513, 535, 536, 537, 538, 553, 554, 556, 557, 558, 561, 564, 580, 586, 590, 599, 602, 603, 604, 612, 617, 620, 623, 624, 627, 628, 629, 630, 631, 632, 643, 663, 675, 676, 684, 687, 691, 695, 700, 708, 716, 717, 718, 719, 725, 726, 728, 730, 733, 736, 743, 747, 757, 766, 770, 775, 778, 781, 784, 787, 809, 839, 848, 862, 863, 870, 871, 895, 934, 940, 956, 959, 964, 965, 987, 1014, 1015, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078, 1098, 1100, 1118, 1119, 1120, 1128], "veri": [29, 34, 36, 37, 132, 133, 135, 154, 165, 169, 172, 174, 185, 190, 193, 216, 219, 242, 266, 321, 328, 349, 356, 366, 367, 387, 403, 404, 406, 412, 419, 422, 437, 524, 535, 548, 563, 581, 609, 638, 639, 677, 680, 683, 694, 697, 766, 771, 776, 804, 805, 864, 869, 871, 872, 889, 890, 906, 911, 926, 940, 968, 976, 992, 995, 999, 1000, 1006, 1010, 1014, 1019, 1064, 1071, 1072, 1094, 1103, 1110, 1118], "unawar": [29, 148, 165, 172], "simpli": [29, 60, 127, 133, 136, 138, 140, 144, 148, 157, 221, 222, 261, 262, 283, 284, 356, 398, 440, 478, 545, 554, 556, 557, 606, 616, 627, 663, 684, 685, 690, 695, 709, 744, 798, 811, 870, 892, 896, 940, 956, 964], "interest": [29, 134, 135, 148, 154, 165, 173, 310, 422, 437, 963, 965, 1083], "catalog": [29, 1121], "chapter": [29, 41, 113, 185, 194, 202, 208, 218, 221, 222, 513, 826], "subchapt": 29, "cluster_python": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1074, 1077, 1078, 1080, 1084, 1092, 1095, 1097, 1102], "cluster_python_misc": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1017, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1071, 1077, 1078, 1080, 1084, 1092, 1095, 1102], "cluster_python_misc_panda": [29, 719, 1062, 1078, 1084], "panda": [29, 154, 165, 184, 190, 203, 216, 230, 233, 251, 254, 266, 283, 285, 287, 328, 419, 719, 988, 1062, 1064, 1067, 1070, 1078], "cluster_python_misc_ai": [29, 719, 1062, 1065, 1066, 1070, 1071, 1078], "machin": [29, 101, 109, 110, 112, 125, 135, 140, 154, 169, 185, 192, 193, 202, 203, 206, 208, 218, 221, 275, 283, 287, 309, 313, 333, 349, 351, 359, 367, 395, 399, 413, 494, 495, 719, 766, 793, 794, 799, 802, 805, 855, 862, 876, 877, 878, 879, 881, 882, 883, 925, 940, 943, 950, 964, 1062, 1066, 1070, 1078, 1091, 1120], "artifici": [29, 169, 194, 252, 283, 287, 395, 629, 719, 883, 956, 1062, 1066, 1070, 1071, 1078], "intellig": [29, 133, 169, 209, 245, 252, 255, 265, 271, 283, 287, 316, 719, 737, 961, 965, 1062, 1066, 1070, 1071, 1078], "cluster_python_bas": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "fundament": [29, 58, 61, 72, 89, 156, 165, 168, 170, 172, 174, 177, 179, 184, 187, 190, 193, 196, 206, 212, 216, 224, 227, 296, 297, 298, 299, 300, 301, 310, 328, 329, 417, 447, 719, 744, 965, 972, 973, 974, 975, 979, 998, 1007, 1012, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1074, 1077, 1078, 1084, 1092, 1093], "cluster_python_advanc": [29, 719, 965, 972, 973, 974, 975, 979, 1017, 1020, 1021, 1022, 1023, 1036, 1047, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1074, 1078, 1080, 1092, 1095, 1097, 1102], "cluster_python_advanced_oo": [29, 719, 965, 972, 973, 974, 975, 979, 1023, 1050, 1051, 1052, 1057, 1059, 1062, 1092], "object": [29, 62, 69, 72, 73, 77, 89, 96, 102, 103, 105, 106, 107, 109, 110, 112, 113, 126, 148, 150, 153, 155, 160, 165, 172, 181, 183, 184, 189, 192, 193, 195, 198, 200, 202, 205, 206, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 226, 228, 231, 235, 243, 247, 249, 250, 252, 253, 255, 257, 260, 263, 267, 273, 279, 285, 297, 299, 300, 303, 305, 310, 311, 312, 313, 347, 373, 400, 418, 420, 425, 426, 430, 431, 432, 437, 439, 441, 446, 455, 457, 463, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 500, 502, 507, 513, 527, 535, 536, 538, 540, 543, 544, 546, 548, 549, 554, 556, 557, 558, 560, 561, 564, 580, 586, 590, 591, 592, 599, 602, 603, 606, 607, 612, 613, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 635, 643, 644, 646, 647, 657, 663, 675, 677, 679, 680, 684, 685, 690, 691, 693, 695, 696, 699, 700, 706, 708, 709, 713, 714, 716, 717, 718, 719, 809, 862, 940, 941, 942, 945, 946, 947, 948, 950, 956, 959, 961, 962, 964, 965, 968, 972, 973, 974, 975, 976, 978, 980, 982, 983, 985, 987, 988, 989, 995, 1004, 1006, 1012, 1013, 1023, 1050, 1051, 1052, 1057, 1059, 1062, 1069, 1083, 1085, 1087, 1088, 1089, 1092, 1098, 1118, 1119, 1121, 1123], "orient": [29, 69, 72, 73, 77, 96, 112, 113, 153, 172, 184, 193, 195, 200, 206, 209, 212, 223, 224, 233, 235, 247, 252, 255, 258, 260, 297, 299, 300, 310, 311, 312, 345, 418, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 491, 493, 500, 502, 535, 536, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 699, 700, 708, 716, 718, 719, 965, 972, 973, 974, 975, 989, 1023, 1050, 1051, 1052, 1057, 1059, 1062, 1092, 1098, 1119, 1121], "cluster_python_advanced_multithread": [29, 719, 965, 972, 973, 974, 975, 1062], "cluster_python_exercis": [29, 190, 310, 719, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], "cluster_python_exercises_userdb": [29, 719, 1023, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], "databas": [29, 41, 42, 54, 77, 130, 152, 153, 172, 194, 200, 205, 206, 209, 211, 212, 215, 219, 233, 261, 262, 283, 301, 437, 438, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 719, 822, 853, 874, 982, 1021, 1023, 1042, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1078, 1082, 1094, 1110], "seri": [29, 99, 134, 205, 209, 250, 251, 252, 253, 255, 257, 259, 284, 397, 418, 447, 719, 875, 989, 1021, 1023, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1069, 1078, 1083, 1084, 1085, 1087, 1088, 1133], "cluster_python_exercises_csv": [29, 719, 1020, 1021, 1022, 1023, 1062], "csv": [29, 43, 50, 52, 53, 54, 55, 77, 105, 113, 169, 172, 181, 184, 190, 194, 195, 198, 200, 202, 203, 206, 207, 209, 213, 216, 219, 221, 227, 228, 231, 246, 250, 251, 253, 256, 257, 261, 262, 268, 273, 277, 280, 283, 285, 418, 719, 808, 811, 826, 848, 976, 979, 982, 1016, 1023, 1057, 1058, 1059, 1060, 1062, 1064, 1067, 1068, 1069, 1070, 1078], "cluster_python_exercises_legaci": [29, 190, 310, 719, 1023, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062], "legaci": [29, 190, 310, 440, 719, 1023, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062, 1113], "cluster_python_exercises_sensor": [29, 719, 1023, 1050, 1051, 1052, 1062], "sensor": [29, 68, 71, 72, 73, 77, 80, 83, 96, 105, 108, 112, 113, 160, 169, 173, 209, 230, 241, 249, 258, 261, 262, 277, 280, 283, 287, 310, 314, 316, 434, 439, 441, 449, 455, 456, 459, 460, 464, 470, 473, 479, 483, 484, 485, 486, 487, 488, 489, 500, 503, 504, 505, 506, 507, 508, 509, 510, 535, 543, 608, 645, 694, 695, 696, 719, 766, 862, 869, 901, 903, 920, 976, 1023, 1051, 1062, 1129], "And": [29, 96, 98, 101, 102, 103, 105, 112, 113, 133, 134, 135, 137, 140, 163, 169, 172, 192, 195, 200, 202, 211, 213, 222, 230, 237, 238, 239, 241, 242, 244, 245, 247, 248, 251, 255, 265, 266, 268, 269, 271, 276, 285, 418, 424, 430, 434, 441, 443, 455, 469, 483, 484, 485, 486, 487, 488, 489, 490, 493, 496, 500, 512, 513, 535, 543, 565, 573, 578, 588, 591, 599, 603, 632, 644, 675, 676, 677, 686, 691, 698, 700, 708, 716, 717, 718, 719, 789, 795, 796, 799, 800, 804, 808, 816, 818, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 846, 856, 862, 869, 876, 878, 885, 891, 893, 898, 901, 903, 907, 917, 920, 923, 925, 928, 940, 942, 944, 945, 946, 947, 948, 951, 963, 965, 970, 973, 974, 975, 979, 980, 1004, 1020, 1021, 1022, 1023, 1036, 1047, 1057, 1058, 1059, 1062, 1074, 1078, 1084, 1092, 1118], "acquisit": [29, 113, 133, 160, 261, 262, 277, 280, 283, 284, 287, 527, 719, 1019, 1023, 1051, 1052, 1062], "cluster_python_exercises_herdt": [29, 719, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1062], "cluster_python_draft": [29, 719, 1017, 1062], "cluster_python_db": [29, 719, 1020, 1022, 1023, 1062, 1074], "cluster_python_swdev": [29, 719, 1017, 1062, 1065, 1066, 1070, 1078, 1080, 1092, 1095, 1097, 1102], "cluster_python_swdev_pytest": [29, 719, 1062, 1092, 1097], "pytest": [29, 209, 219, 222, 230, 233, 242, 251, 259, 261, 266, 277, 280, 283, 284, 287, 318, 419, 719, 1052, 1060, 1061, 1062, 1092], "python_python_5550_xml_etre": [29, 719, 1062], "xml": [29, 129, 130, 280, 719, 1062, 1078], "elementtre": [29, 233, 719, 1062, 1078], "etre": [29, 233, 719, 1062, 1078], "python_basics_python_0220_for": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1020, 1021, 1022, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1078], "loop": [29, 31, 33, 37, 41, 58, 61, 88, 89, 96, 109, 110, 112, 113, 121, 126, 133, 148, 157, 169, 172, 174, 177, 178, 179, 182, 190, 192, 193, 194, 196, 200, 203, 206, 211, 212, 214, 216, 217, 222, 224, 226, 227, 229, 230, 232, 242, 245, 252, 255, 262, 265, 266, 271, 272, 280, 284, 296, 297, 298, 299, 300, 301, 302, 310, 315, 333, 336, 339, 348, 351, 363, 370, 371, 372, 379, 385, 389, 392, 393, 396, 397, 405, 409, 414, 415, 482, 483, 524, 535, 566, 571, 628, 635, 637, 663, 675, 698, 709, 716, 718, 719, 754, 764, 769, 783, 797, 799, 803, 810, 866, 888, 889, 890, 898, 924, 928, 934, 937, 938, 965, 966, 969, 970, 975, 987, 1020, 1021, 1022, 1023, 1025, 1027, 1033, 1035, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1074, 1078, 1080, 1117, 1118, 1119, 1128], "gt": [29, 31, 34, 35, 52, 54, 55, 71, 72, 73, 86, 89, 122, 152, 155, 166, 171, 176, 183, 189, 190, 192, 197, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 296, 297, 298, 299, 300, 301, 304, 305, 310, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 424, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 651, 675, 676, 686, 691, 700, 708, 716, 718, 719, 723, 726, 728, 731, 733, 736, 738, 742, 743, 745, 747, 749, 751, 757, 759, 761, 763, 770, 772, 775, 777, 781, 784, 787, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 869, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 905, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1074, 1077, 1078, 1080, 1084, 1092, 1095, 1097, 1102, 1103], "python_basics_python_0450_dictionari": [29, 89, 719, 965, 987, 1023, 1036, 1047, 1062], "python_advanced_modul": [29, 719, 965, 1017, 1020, 1021, 1022, 1023, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1074, 1078, 1080, 1092, 1095, 1097, 1102], "python_misc_csv": [29, 719, 1021, 1022, 1023, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1078], "python_basics_python_0500_fil": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1078], "python_basics_python_0150_datatypes_overview_compound": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 1020, 1021, 1022, 1023, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "python_misc_encod": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078], "encod": [29, 42, 89, 152, 169, 170, 172, 174, 190, 193, 200, 202, 205, 208, 209, 212, 218, 219, 221, 227, 229, 232, 246, 250, 251, 253, 266, 267, 274, 284, 285, 287, 295, 296, 297, 298, 299, 300, 301, 315, 419, 719, 965, 987, 995, 1000, 1014, 1021, 1022, 1023, 1033, 1036, 1044, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1072, 1078, 1080], "python_basics_python_0150_datatypes_overview": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "python_basics_python_0320_strings_method": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078], "method": [29, 41, 42, 53, 54, 56, 62, 64, 68, 69, 72, 89, 96, 105, 106, 109, 110, 113, 138, 169, 170, 171, 172, 174, 177, 190, 191, 193, 195, 200, 203, 204, 206, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 227, 230, 232, 242, 245, 247, 251, 252, 255, 257, 259, 260, 261, 262, 265, 266, 268, 271, 272, 274, 277, 280, 283, 284, 286, 287, 296, 297, 298, 299, 300, 301, 310, 314, 315, 391, 417, 437, 439, 441, 445, 455, 462, 463, 481, 483, 488, 493, 494, 495, 500, 502, 507, 513, 526, 528, 535, 536, 537, 540, 549, 561, 563, 564, 580, 586, 590, 596, 599, 602, 603, 606, 607, 608, 609, 612, 617, 618, 620, 623, 624, 627, 628, 629, 630, 631, 632, 635, 644, 657, 674, 675, 678, 682, 691, 699, 700, 708, 709, 713, 714, 716, 717, 718, 719, 727, 729, 734, 735, 744, 746, 756, 768, 779, 911, 961, 962, 965, 968, 972, 976, 977, 978, 979, 980, 984, 987, 992, 1001, 1004, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1073, 1077, 1078, 1083, 1086, 1088, 1091, 1121, 1128, 1135], "python_misc_vscod": [29, 719, 1062, 1078], "visual": [29, 77, 103, 160, 165, 169, 170, 172, 174, 185, 194, 195, 200, 203, 216, 222, 230, 233, 245, 249, 252, 255, 259, 265, 266, 271, 272, 310, 315, 330, 719, 805, 871, 942, 988, 1021, 1062, 1078], "studio": [29, 103, 160, 165, 169, 170, 172, 174, 185, 194, 195, 200, 203, 216, 222, 230, 245, 249, 252, 255, 259, 265, 266, 271, 272, 310, 315, 330, 719, 805, 988, 1062, 1078], "python_misc_import": [29, 719, 1017, 1062, 1065, 1066, 1070, 1078, 1080, 1092, 1095, 1102], "statement": [29, 53, 89, 109, 110, 153, 165, 169, 170, 171, 172, 177, 179, 184, 190, 193, 194, 196, 200, 203, 206, 212, 216, 222, 224, 227, 230, 236, 242, 245, 252, 255, 259, 261, 262, 265, 266, 271, 272, 277, 280, 283, 284, 287, 296, 297, 298, 299, 300, 301, 310, 315, 332, 335, 339, 352, 365, 367, 368, 371, 372, 377, 379, 385, 389, 392, 396, 399, 405, 409, 414, 415, 591, 617, 636, 637, 675, 716, 718, 719, 727, 799, 839, 925, 946, 960, 963, 965, 966, 971, 975, 977, 987, 994, 997, 999, 1006, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1066, 1070, 1074, 1078, 1080, 1092, 1095, 1098, 1102, 1128], "incomplet": [29, 163, 202, 208, 218, 221, 225, 428, 535, 610, 719, 869, 1017, 1062, 1065, 1066, 1070, 1078, 1080, 1092, 1095, 1102, 1103], "python_misc_mqtt": [29, 719, 1062, 1078, 1080], "mqtt": [29, 182, 184, 198, 200, 209, 222, 223, 227, 261, 262, 277, 280, 283, 316, 319, 321, 719, 979, 1019, 1023, 1057, 1060, 1062, 1078], "python_swdev_venv": [29, 719, 1017, 1062, 1065, 1066, 1070, 1078, 1080, 1092, 1102], "python_misc_pandas_index": [29, 719, 1062, 1078, 1084], "python_misc_pandas_iloc": [29, 719, 1062, 1078, 1084], "select": [29, 62, 132, 133, 135, 139, 192, 197, 205, 222, 252, 255, 284, 356, 378, 719, 766, 810, 867, 872, 906, 907, 926, 929, 931, 934, 954, 1021, 1062, 1067, 1076, 1078, 1084, 1086, 1098, 1106, 1133, 1135], "row": [29, 134, 156, 172, 192, 205, 209, 211, 213, 225, 250, 251, 252, 255, 259, 272, 284, 285, 366, 408, 719, 806, 911, 963, 982, 1002, 1021, 1053, 1055, 1062, 1069, 1072, 1076, 1078, 1082, 1083, 1084, 1088], "column": [29, 62, 126, 135, 138, 153, 156, 202, 221, 250, 251, 252, 253, 255, 259, 284, 285, 408, 419, 719, 806, 811, 822, 1021, 1033, 1045, 1062, 1069, 1072, 1078, 1084], "iloc": [29, 252, 253, 255, 257, 259, 284, 419, 719, 1062, 1078, 1082, 1084, 1087], "python_misc_pandas_bas": [29, 719, 1062, 1078, 1084], "datafram": [29, 251, 252, 253, 255, 259, 262, 284, 419, 719, 1062, 1067, 1070, 1078, 1081, 1083, 1084, 1085, 1087, 1088], "python_misc_pandas_loc": [29, 719, 1062, 1078, 1084], "loc": [29, 153, 246, 250, 251, 252, 253, 255, 257, 259, 284, 394, 719, 911, 974, 1062, 1078, 1081, 1082, 1083, 1084, 1085], "python_basics_python_0210_indexing_sl": [29, 89, 719, 987, 1023, 1036, 1047, 1062, 1078, 1084], "python_misc_pandas_mod_col": [29, 719, 1062, 1078, 1084], "ad": [29, 31, 32, 38, 84, 139, 143, 144, 145, 148, 153, 173, 185, 195, 251, 252, 255, 259, 284, 307, 358, 377, 399, 426, 436, 440, 445, 554, 556, 557, 592, 646, 682, 719, 735, 870, 872, 922, 926, 927, 962, 980, 995, 1014, 1062, 1078, 1084, 1085, 1089, 1099], "modifi": [29, 41, 74, 87, 109, 110, 113, 135, 140, 148, 151, 153, 173, 192, 249, 251, 252, 255, 259, 260, 261, 262, 283, 284, 321, 336, 338, 344, 381, 393, 400, 417, 419, 421, 430, 440, 442, 445, 461, 462, 482, 491, 494, 495, 497, 498, 499, 511, 524, 527, 537, 544, 547, 548, 550, 553, 565, 617, 621, 623, 626, 629, 643, 657, 680, 685, 697, 708, 710, 713, 714, 717, 718, 719, 739, 754, 774, 793, 794, 806, 811, 862, 875, 879, 884, 903, 911, 917, 955, 956, 962, 964, 975, 996, 1039, 1043, 1061, 1062, 1078, 1084, 1086, 1130, 1134], "python_misc_pandas_filt": [29, 719, 1062, 1078, 1084], "python_misc_pandas_add_row": [29, 719, 1062, 1078, 1084], "python_misc_ai_linear_regress": [29, 719, 1062, 1065, 1066, 1070, 1078], "linear": [29, 154, 156, 166, 169, 171, 189, 197, 252, 283, 287, 386, 408, 560, 685, 719, 802, 871, 937, 999, 1062, 1065, 1066, 1071, 1078], "regress": [29, 169, 221, 252, 283, 287, 719, 1062, 1065, 1066, 1071, 1078], "python_misc_ai_machine_learning_intro": [29, 719, 1062, 1065, 1066, 1070, 1071, 1078], "concept": [29, 77, 96, 97, 98, 112, 133, 143, 157, 165, 169, 171, 173, 175, 185, 236, 239, 248, 249, 252, 269, 283, 287, 312, 313, 328, 331, 378, 401, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 577, 634, 675, 685, 708, 718, 719, 789, 793, 794, 795, 796, 799, 805, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 907, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 994, 1002, 1012, 1062, 1065, 1066, 1070, 1077, 1078, 1080, 1133], "terminologi": [29, 97, 98, 112, 139, 157, 169, 204, 239, 248, 249, 252, 269, 283, 287, 368, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 550, 708, 718, 719, 789, 793, 794, 795, 796, 799, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 855, 856, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 917, 920, 923, 924, 925, 939, 942, 944, 945, 946, 947, 948, 949, 950, 951, 1062, 1065, 1066, 1070, 1078, 1136], "python_misc_ai_k_mean": [29, 719, 1062, 1065, 1066, 1078], "python_basics_python_0140_vari": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "python_basics_python_0130_syntax_etc": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "syntax": [29, 67, 89, 126, 156, 165, 172, 173, 175, 177, 178, 179, 184, 190, 191, 196, 200, 203, 206, 212, 213, 216, 218, 222, 223, 224, 227, 230, 232, 243, 245, 252, 254, 255, 265, 266, 268, 271, 272, 291, 296, 297, 298, 299, 300, 301, 310, 457, 536, 537, 640, 657, 684, 697, 719, 854, 960, 962, 963, 964, 965, 972, 973, 974, 975, 979, 987, 989, 998, 1006, 1007, 1009, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092, 1118, 1128], "python_basics_python_0250_refs_flat_deep_copi": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078], "mutabl": [29, 89, 165, 169, 170, 172, 174, 177, 178, 184, 190, 191, 200, 203, 204, 206, 207, 208, 209, 214, 216, 217, 220, 223, 227, 229, 230, 232, 235, 245, 247, 252, 254, 255, 259, 261, 262, 264, 265, 266, 268, 271, 272, 274, 283, 284, 286, 287, 296, 297, 298, 299, 300, 301, 310, 685, 719, 965, 987, 996, 1000, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078, 1128], "python_basics_python_0193_whil": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1020, 1021, 1022, 1023, 1025, 1027, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1078], "python_basics_python_0170_if": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 998, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1078], "python_basics_python_0160_boolean": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 998, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1078], "boolean": [29, 57, 83, 89, 153, 154, 170, 172, 174, 177, 178, 179, 190, 196, 200, 203, 204, 206, 207, 208, 212, 214, 216, 217, 222, 223, 224, 226, 227, 229, 230, 245, 252, 255, 265, 266, 271, 272, 296, 297, 298, 299, 300, 301, 310, 315, 339, 362, 378, 719, 913, 965, 987, 995, 998, 999, 1010, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1076, 1078, 1128], "python_basics_python_1000_function_object": [29, 89, 719, 987, 1062], "python_basics_python_0270_funct": [29, 89, 190, 719, 965, 987, 1007, 1020, 1021, 1022, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074], "python_basics_python_0200_sequential_typ": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1020, 1021, 1022, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084], "sequenti": [29, 62, 89, 105, 107, 169, 170, 172, 174, 177, 178, 179, 182, 190, 195, 200, 203, 206, 211, 212, 214, 216, 224, 226, 227, 230, 234, 242, 245, 252, 255, 258, 260, 262, 263, 265, 266, 271, 272, 283, 284, 287, 296, 297, 298, 299, 300, 301, 310, 315, 408, 483, 496, 500, 535, 570, 580, 588, 599, 603, 632, 719, 870, 872, 902, 965, 970, 987, 1020, 1021, 1022, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1128], "python_basics_python_0460_set": [29, 89, 719, 987, 1062], "python_basics_python_0310_strings_format": [29, 89, 190, 719, 987, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1062], "python_basics_python_0300_str": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 987, 1021, 1022, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1077, 1078], "python_basics_python_0225_rang": [29, 89, 190, 719, 965, 987, 1020, 1021, 1022, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1074], "python_basics_python_0120_helloworld": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "world": [29, 77, 89, 126, 129, 130, 133, 138, 144, 163, 172, 176, 177, 179, 183, 190, 194, 196, 198, 200, 202, 203, 206, 208, 211, 212, 213, 215, 216, 222, 223, 224, 225, 227, 228, 230, 233, 245, 246, 252, 255, 265, 266, 271, 272, 285, 296, 297, 298, 299, 300, 301, 305, 310, 343, 348, 352, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 420, 425, 433, 456, 461, 463, 634, 637, 675, 701, 709, 716, 718, 719, 723, 726, 728, 731, 733, 736, 743, 747, 751, 757, 763, 768, 770, 775, 778, 781, 784, 787, 804, 817, 829, 862, 900, 911, 926, 927, 940, 952, 954, 956, 957, 958, 965, 972, 973, 974, 975, 979, 987, 991, 992, 998, 1001, 1003, 1007, 1008, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1069, 1074, 1077, 1078, 1084, 1092, 1114, 1118, 1128], "python_basics_python_0110_blahblah": [29, 89, 190, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092], "blahblah": [29, 89, 172, 177, 179, 190, 196, 200, 203, 206, 212, 216, 222, 223, 224, 226, 227, 229, 230, 232, 245, 252, 255, 265, 266, 271, 272, 296, 297, 298, 299, 300, 301, 310, 719, 965, 972, 973, 974, 975, 979, 987, 998, 1007, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1074, 1077, 1078, 1084, 1092, 1128], "python_basics_instal": [29, 89, 719, 987, 1062], "python_basics_python_0125_run": [29, 89, 190, 310, 719, 987, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], "run": [29, 41, 58, 61, 62, 89, 96, 107, 109, 110, 123, 126, 129, 132, 133, 134, 135, 136, 139, 140, 143, 144, 152, 164, 165, 172, 173, 185, 190, 194, 195, 200, 205, 213, 221, 222, 225, 228, 231, 233, 238, 245, 246, 249, 252, 253, 255, 263, 265, 266, 267, 271, 272, 276, 285, 295, 310, 313, 335, 353, 395, 398, 406, 407, 411, 412, 424, 425, 437, 442, 461, 462, 463, 491, 493, 494, 495, 517, 544, 557, 566, 578, 635, 693, 694, 717, 719, 739, 754, 764, 766, 767, 776, 799, 801, 803, 804, 805, 806, 822, 823, 826, 827, 857, 870, 871, 872, 873, 881, 883, 891, 893, 909, 922, 924, 925, 926, 928, 933, 938, 940, 943, 948, 950, 952, 956, 961, 972, 975, 987, 988, 990, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1066, 1080, 1093, 1099, 1104, 1105, 1110, 1123], "python_basics_python_0139_commandline_argv": [29, 89, 190, 310, 719, 987, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], "argument": [29, 56, 62, 89, 96, 112, 126, 132, 135, 138, 152, 153, 166, 169, 181, 190, 193, 200, 202, 206, 208, 209, 211, 212, 214, 216, 218, 219, 222, 223, 224, 225, 227, 230, 245, 246, 249, 252, 255, 259, 261, 262, 265, 266, 267, 271, 272, 280, 283, 284, 287, 310, 332, 333, 378, 385, 389, 392, 396, 405, 409, 414, 415, 419, 481, 513, 537, 547, 548, 637, 652, 672, 675, 685, 697, 716, 717, 718, 719, 724, 725, 826, 848, 862, 896, 898, 900, 903, 920, 958, 961, 965, 987, 989, 990, 1007, 1015, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1075, 1091, 1098, 1100], "sy": [29, 31, 89, 134, 151, 153, 155, 156, 181, 183, 184, 190, 193, 199, 202, 206, 208, 213, 216, 218, 221, 222, 224, 225, 227, 228, 230, 243, 245, 246, 251, 252, 255, 261, 265, 266, 267, 271, 272, 283, 287, 295, 296, 303, 310, 406, 419, 478, 494, 495, 719, 721, 725, 746, 823, 852, 863, 870, 871, 872, 888, 889, 890, 892, 896, 897, 898, 899, 900, 902, 904, 906, 907, 921, 928, 930, 933, 937, 954, 964, 971, 986, 987, 1006, 1014, 1016, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1035, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1089, 1091, 1098, 1113], "argv": [29, 41, 49, 89, 135, 152, 153, 156, 166, 184, 190, 193, 194, 199, 202, 206, 208, 211, 212, 216, 218, 221, 222, 224, 227, 230, 245, 251, 252, 255, 261, 265, 266, 271, 272, 283, 287, 295, 303, 310, 384, 419, 420, 442, 481, 719, 870, 896, 897, 898, 899, 900, 904, 907, 921, 928, 937, 958, 964, 971, 987, 1016, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1033, 1035, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1105, 1110], "python_basics_python_0400_list": [29, 89, 719, 987, 1062], "python_advanced_stararg": [29, 719, 965, 1062], "keyword": [29, 38, 62, 117, 128, 166, 169, 170, 171, 172, 174, 193, 195, 209, 214, 219, 221, 242, 245, 246, 252, 255, 259, 261, 262, 265, 267, 271, 277, 280, 283, 284, 287, 310, 377, 407, 550, 551, 553, 571, 622, 682, 719, 915, 961, 962, 963, 965, 989, 1005, 1007, 1019, 1062, 1075, 1115, 1117], "python_advanced_iteration_gener": [29, 719, 965, 1062], "comprehens": [29, 62, 67, 153, 154, 166, 169, 172, 178, 192, 193, 194, 201, 206, 207, 209, 210, 211, 214, 217, 223, 226, 242, 245, 247, 254, 259, 265, 266, 271, 272, 283, 284, 286, 287, 680, 719, 737, 754, 762, 965, 970, 1062, 1083], "python_advanced_comprehens": [29, 719, 965, 1062], "python_advanced_closur": [29, 719, 965, 1062], "closur": [29, 58, 61, 62, 152, 165, 169, 177, 178, 193, 206, 209, 219, 252, 255, 284, 679, 719, 962, 965, 1005, 1007, 1062, 1128], "python_advanced_except": [29, 719, 965, 1062], "python_advanced_oo_inherit": [29, 719, 965, 972, 973, 974, 975, 979, 1062, 1092], "inherit": [29, 64, 68, 72, 105, 113, 150, 160, 169, 193, 206, 219, 223, 225, 258, 259, 260, 261, 262, 266, 283, 284, 287, 319, 441, 455, 483, 491, 493, 533, 535, 536, 560, 609, 612, 632, 674, 719, 758, 798, 801, 804, 825, 827, 934, 963, 965, 973, 974, 975, 976, 979, 981, 984, 1062, 1091, 1092, 1134], "python_advanced_decor": [29, 719, 965, 1062], "decor": [29, 58, 61, 153, 165, 168, 169, 184, 193, 209, 219, 233, 434, 441, 455, 469, 483, 535, 719, 961, 965, 976, 983, 984, 986, 1007, 1062, 1064, 1098, 1121], "python_advanced_exec": [29, 719, 965, 1062], "python_advanced_python_1010_generators_yield": [29, 719, 965, 1020, 1021, 1022, 1023, 1036, 1047, 1062, 1074], "python_advanced_context_mgr": [29, 719, 965, 1062], "python_advanced_oo_classes_and_dict": [29, 719, 965, 972, 973, 974, 975, 979, 1023, 1050, 1051, 1052, 1057, 1059, 1062, 1092], "python_advanced_oo_namedtupl": [29, 719, 965, 979, 1023, 1057, 1059, 1062], "namedtupl": [29, 169, 177, 184, 199, 200, 202, 208, 218, 221, 242, 259, 261, 262, 266, 277, 280, 283, 284, 287, 719, 965, 979, 1023, 1057, 1059, 1062, 1082, 1128], "python_advanced_oo_str_repr": [29, 719, 965, 979, 1062], "str": [29, 152, 155, 166, 176, 181, 183, 184, 189, 192, 194, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 242, 243, 245, 246, 250, 251, 252, 253, 255, 257, 259, 261, 262, 263, 265, 266, 267, 271, 273, 277, 278, 280, 281, 283, 284, 285, 287, 295, 301, 304, 305, 306, 310, 383, 401, 419, 468, 473, 554, 555, 556, 557, 672, 684, 719, 963, 965, 977, 979, 980, 983, 992, 994, 995, 1006, 1010, 1014, 1021, 1029, 1031, 1062, 1077, 1083, 1088, 1089], "repr": [29, 183, 202, 208, 218, 221, 225, 228, 231, 242, 245, 246, 252, 255, 259, 261, 262, 265, 266, 267, 271, 277, 278, 280, 283, 284, 287, 719, 963, 965, 979, 980, 1062], "python_advanced_oo_method": [29, 719, 965, 979, 1023, 1050, 1051, 1052, 1062], "python_advanced_oo_properti": [29, 719, 965, 979, 1062], "properti": [29, 39, 153, 169, 193, 206, 223, 225, 242, 246, 259, 261, 262, 266, 276, 277, 280, 283, 284, 287, 314, 423, 424, 425, 430, 433, 719, 965, 979, 1062, 1091, 1104, 1107], "python_advanced_oo_abc": [29, 719, 965, 979, 1062], "abstract": [29, 77, 83, 169, 209, 241, 258, 259, 260, 261, 262, 283, 284, 287, 314, 378, 417, 419, 434, 441, 445, 447, 449, 455, 457, 469, 483, 493, 535, 570, 609, 610, 687, 719, 799, 803, 872, 887, 965, 979, 1062, 1121, 1123], "abc": [29, 31, 152, 166, 169, 171, 176, 181, 183, 189, 192, 194, 198, 202, 205, 208, 209, 213, 215, 218, 221, 225, 228, 231, 234, 242, 243, 246, 253, 259, 261, 262, 263, 267, 273, 277, 280, 283, 284, 285, 287, 297, 305, 419, 493, 562, 583, 600, 602, 719, 965, 979, 995, 1062], "duck": [29, 31, 168, 169, 219, 223, 242, 259, 261, 262, 266, 283, 284, 287, 434, 493, 719, 965, 972, 979, 1062, 1064, 1069, 1118], "python_advanced_oo_constructor": [29, 719, 965, 972, 973, 974, 975, 979, 1062, 1092], "constructor": [29, 42, 52, 55, 69, 96, 109, 110, 112, 113, 160, 166, 172, 192, 193, 195, 206, 211, 219, 223, 242, 245, 247, 252, 255, 258, 259, 260, 261, 262, 263, 265, 266, 271, 277, 280, 283, 284, 287, 312, 313, 314, 387, 441, 455, 481, 483, 486, 489, 493, 494, 513, 522, 528, 535, 536, 537, 543, 560, 591, 607, 608, 617, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 635, 643, 644, 645, 647, 673, 675, 691, 694, 695, 696, 700, 705, 706, 707, 708, 709, 716, 718, 719, 725, 727, 758, 911, 965, 972, 973, 974, 975, 977, 979, 980, 981, 995, 1062, 1091, 1092, 1098, 1110, 1118], "python_advanced_oo_operator_overload": [29, 719, 965, 979, 1062], "overload": [29, 96, 152, 160, 169, 195, 223, 258, 259, 260, 261, 262, 283, 287, 291, 403, 483, 491, 500, 502, 535, 537, 558, 561, 562, 564, 570, 580, 586, 590, 591, 599, 602, 603, 617, 618, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 643, 644, 648, 675, 691, 700, 708, 716, 718, 719, 725, 965, 979, 1062, 1083, 1117], "python_advanced_multithreading_bas": [29, 719, 965, 972, 973, 974, 975, 1062], "python_advanced_multithreading_mutex": [29, 719, 965, 973, 974, 975, 1062], "race": [29, 71, 72, 73, 77, 86, 133, 151, 211, 237, 238, 240, 249, 260, 261, 262, 283, 284, 287, 291, 318, 319, 325, 394, 404, 513, 685, 701, 708, 718, 719, 743, 747, 768, 770, 775, 779, 781, 784, 787, 862, 892, 902, 903, 908, 916, 917, 923, 965, 973, 975, 1062, 1123, 1133, 1134], "condit": [29, 71, 72, 73, 77, 86, 88, 133, 144, 151, 192, 211, 231, 237, 238, 240, 249, 260, 261, 262, 283, 284, 287, 291, 318, 319, 325, 333, 335, 339, 362, 363, 365, 366, 368, 370, 372, 379, 385, 389, 392, 394, 396, 404, 405, 409, 414, 415, 422, 427, 428, 429, 513, 530, 619, 637, 675, 685, 695, 701, 708, 709, 716, 718, 719, 743, 747, 768, 770, 775, 779, 781, 783, 784, 787, 862, 892, 898, 902, 903, 908, 916, 917, 919, 923, 965, 973, 975, 998, 999, 1014, 1062, 1068, 1083, 1123, 1133, 1134], "mutex": [29, 71, 72, 73, 75, 77, 86, 88, 151, 180, 211, 236, 237, 238, 240, 249, 260, 261, 262, 283, 284, 287, 291, 318, 319, 325, 513, 702, 704, 706, 707, 708, 718, 719, 743, 747, 764, 768, 769, 770, 775, 781, 784, 785, 787, 862, 903, 908, 913, 916, 917, 965, 973, 975, 1062, 1118, 1123, 1134], "python_advanced_multithreading_exam_quest": [29, 719, 965, 973, 975, 1062], "exam": [29, 95, 96, 105, 194, 210, 216, 239, 248, 269, 312, 324, 719, 796, 862, 903, 923, 965, 973, 1062, 1063], "python_exercises_userdb_user_json": [29, 719, 1023, 1057, 1058, 1059, 1060, 1062], "json": [29, 77, 84, 91, 112, 130, 166, 172, 182, 196, 200, 201, 209, 210, 218, 221, 222, 226, 229, 235, 244, 277, 279, 280, 282, 284, 287, 330, 719, 979, 1023, 1057, 1058, 1059, 1062, 1080, 1094], "python_exercises_userdb_userdb_modul": [29, 719, 1023, 1057, 1058, 1059, 1060, 1061, 1062], "refactor": [29, 42, 54, 130, 219, 222, 227, 230, 242, 245, 261, 265, 266, 271, 272, 378, 418, 435, 682, 719, 727, 733, 743, 747, 757, 768, 770, 775, 781, 784, 787, 862, 979, 1023, 1057, 1058, 1059, 1060, 1062], "both": [29, 53, 62, 84, 112, 123, 133, 135, 140, 153, 165, 171, 192, 208, 211, 219, 222, 225, 227, 230, 242, 245, 257, 265, 266, 271, 272, 411, 417, 419, 420, 445, 491, 493, 513, 545, 553, 626, 682, 693, 719, 737, 760, 766, 805, 906, 910, 914, 927, 950, 956, 963, 976, 979, 983, 990, 997, 1004, 1008, 1013, 1023, 1026, 1029, 1035, 1057, 1058, 1059, 1060, 1062, 1070, 1098, 1105, 1118], "Into": [29, 96, 211, 216, 219, 222, 227, 230, 242, 245, 251, 265, 266, 271, 272, 348, 363, 372, 378, 379, 385, 389, 392, 396, 405, 409, 413, 414, 415, 482, 483, 535, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 637, 675, 716, 718, 719, 954, 979, 1023, 1057, 1058, 1059, 1060, 1062], "python_exercises_userdb_csvread": [29, 719, 1023, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062], "reader": [29, 130, 205, 219, 222, 227, 230, 242, 245, 265, 266, 271, 272, 400, 419, 442, 719, 810, 976, 979, 1006, 1023, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1062], "python_exercises_userdb_csvdictreader_funct": [29, 719, 1023, 1054, 1057, 1058, 1059, 1060, 1061, 1062], "dictread": [29, 184, 205, 206, 219, 222, 227, 230, 242, 245, 265, 266, 271, 272, 719, 979, 1021, 1023, 1057, 1058, 1059, 1060, 1061, 1062], "python_exercises_userdb_csvreader_funct": [29, 719, 1023, 1056, 1057, 1062], "python_exercises_userdb_user_class_person": [29, 719, 1023, 1057, 1059, 1062], "awai": [29, 62, 76, 83, 132, 133, 134, 138, 157, 173, 194, 200, 208, 242, 245, 265, 266, 271, 277, 280, 299, 431, 694, 719, 805, 826, 937, 961, 979, 1023, 1057, 1062], "raw": [29, 62, 178, 181, 184, 189, 201, 204, 213, 217, 223, 237, 238, 242, 244, 245, 249, 251, 265, 266, 271, 274, 277, 280, 284, 295, 305, 331, 419, 420, 426, 449, 456, 494, 574, 695, 719, 802, 979, 995, 1000, 1016, 1023, 1057, 1062], "python_exercises_userdb_csvdictread": [29, 719, 1023, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1062], "python_exercises_userdb_mqtt_publish_csv": [29, 719, 1023, 1057, 1058, 1062], "publish": [29, 137, 139, 148, 209, 221, 222, 242, 284, 307, 316, 318, 719, 979, 1023, 1057, 1060, 1062, 1064, 1096], "python_exercises_csv_csv_modul": [29, 719, 1021, 1022, 1023, 1062], "python_exercises_csv_csv_db": [29, 719, 1020, 1022, 1023, 1062], "sqlite3": [29, 84, 169, 200, 206, 212, 219, 719, 1022, 1023, 1062, 1073, 1074, 1078], "python_db_sqlite3": [29, 719, 1020, 1022, 1023, 1062, 1074], "dbapi": [29, 169, 200, 212, 719, 1020, 1022, 1023, 1062, 1074], "python_exercises_legacy_dict_keyerror": [29, 719, 1023, 1032, 1036, 1062], "python_exercises_legacy_wc": [29, 190, 719, 1023, 1033, 1036, 1044, 1047, 1048, 1062], "line": [29, 33, 34, 35, 37, 62, 129, 130, 133, 135, 138, 148, 152, 155, 156, 169, 173, 183, 185, 189, 190, 192, 193, 198, 199, 202, 203, 205, 206, 208, 209, 211, 212, 213, 216, 218, 219, 221, 222, 224, 225, 228, 230, 231, 233, 234, 245, 246, 251, 252, 253, 255, 259, 263, 265, 266, 267, 271, 272, 273, 285, 301, 310, 333, 339, 340, 348, 352, 355, 357, 363, 372, 374, 379, 385, 389, 392, 396, 401, 405, 408, 409, 411, 414, 415, 419, 422, 425, 432, 462, 463, 613, 616, 619, 637, 675, 716, 718, 719, 735, 739, 746, 748, 766, 793, 794, 797, 806, 808, 810, 832, 853, 855, 857, 858, 859, 863, 867, 870, 871, 872, 914, 924, 955, 961, 966, 967, 991, 1008, 1012, 1014, 1015, 1016, 1021, 1023, 1036, 1042, 1047, 1061, 1062, 1064, 1067, 1072, 1077, 1099], "word": [29, 42, 64, 126, 133, 153, 161, 165, 169, 172, 179, 184, 190, 194, 200, 203, 211, 212, 216, 219, 221, 222, 224, 227, 229, 230, 237, 238, 240, 245, 252, 259, 265, 266, 267, 271, 272, 284, 291, 310, 315, 340, 393, 435, 440, 513, 613, 691, 700, 708, 718, 719, 806, 808, 855, 927, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1049, 1062], "charact": [29, 135, 151, 176, 181, 185, 190, 194, 198, 205, 211, 221, 228, 231, 249, 252, 267, 273, 333, 334, 340, 348, 351, 357, 358, 363, 372, 379, 385, 389, 392, 395, 396, 400, 402, 405, 409, 414, 415, 600, 637, 675, 716, 717, 718, 719, 728, 733, 736, 743, 747, 757, 760, 768, 770, 775, 781, 782, 784, 787, 806, 808, 826, 848, 862, 870, 925, 975, 994, 1008, 1009, 1010, 1014, 1016, 1023, 1026, 1033, 1036, 1044, 1047, 1062, 1077, 1105], "python_exercises_legacy_python_0350_exercis": [29, 190, 719, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1062], "right": [29, 33, 34, 35, 37, 41, 62, 79, 83, 113, 126, 132, 133, 135, 138, 153, 173, 184, 185, 190, 195, 200, 213, 215, 221, 225, 233, 246, 259, 267, 296, 302, 334, 354, 355, 356, 362, 373, 403, 433, 484, 492, 539, 554, 556, 557, 635, 647, 663, 689, 694, 699, 719, 727, 746, 750, 766, 785, 808, 809, 811, 826, 881, 911, 961, 983, 994, 1000, 1023, 1033, 1036, 1044, 1047, 1048, 1062], "justifi": [29, 153, 165, 190, 200, 221, 267, 334, 701, 719, 988, 1023, 1033, 1036, 1044, 1047, 1048, 1062], "python_exercises_legacy_for_prim": [29, 190, 719, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "prime": [29, 37, 152, 153, 172, 176, 177, 179, 184, 190, 196, 200, 212, 216, 219, 224, 230, 245, 252, 265, 266, 271, 272, 395, 719, 1023, 1033, 1036, 1037, 1039, 1044, 1045, 1046, 1047, 1048, 1062, 1128], "python_exercises_legacy_while_prim": [29, 190, 719, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062], "python_exercises_legacy_python_1011_generators_yield": [29, 719, 1023, 1036, 1062], "fibonacci": [29, 153, 156, 172, 193, 206, 245, 259, 261, 262, 266, 272, 283, 284, 287, 642, 664, 719, 968, 969, 970, 1023, 1036, 1062], "python_exercises_legacy_uniq_gener": [29, 719, 1023, 1036, 1047, 1062], "uniq": [29, 152, 153, 170, 172, 184, 190, 200, 203, 206, 212, 216, 222, 224, 227, 245, 252, 265, 266, 271, 272, 511, 719, 859, 1023, 1033, 1036, 1037, 1044, 1045, 1048, 1062], "python_exercises_legacy_revert": [29, 190, 719, 1023, 1033, 1036, 1044, 1047, 1062], "revert": [29, 133, 190, 719, 744, 762, 924, 983, 1023, 1033, 1036, 1047, 1062], "python_exercises_legacy_cmdline_digit": [29, 190, 310, 719, 1023, 1031, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062], "digit": [29, 126, 152, 153, 172, 179, 184, 190, 200, 203, 212, 216, 221, 222, 224, 225, 227, 229, 230, 245, 252, 265, 266, 267, 271, 272, 284, 295, 315, 341, 350, 719, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062], "python_exercises_legacy_function_prim": [29, 190, 719, 1023, 1033, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "python_exercises_legacy_max_numbers_funct": [29, 190, 719, 1023, 1033, 1036, 1037, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "determin": [29, 101, 112, 126, 132, 156, 161, 163, 171, 172, 177, 179, 184, 190, 196, 200, 202, 203, 206, 212, 216, 222, 224, 227, 229, 230, 245, 252, 265, 266, 271, 272, 613, 647, 648, 685, 719, 774, 796, 815, 816, 817, 818, 819, 820, 821, 858, 862, 871, 889, 926, 927, 957, 1023, 1025, 1026, 1027, 1030, 1033, 1036, 1037, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1093, 1128], "python_exercises_legacy_join_funct": [29, 190, 719, 1023, 1033, 1036, 1037, 1044, 1045, 1047, 1048, 1062], "join": [29, 34, 62, 144, 172, 190, 192, 193, 198, 200, 202, 205, 206, 208, 213, 217, 223, 231, 246, 253, 263, 267, 273, 295, 304, 419, 512, 635, 696, 702, 707, 709, 719, 909, 914, 937, 1023, 1033, 1036, 1044, 1045, 1047, 1048, 1062, 1091, 1098], "python_exercises_legacy_mixed_list_interact": [29, 190, 719, 1023, 1033, 1036, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "interact": [29, 62, 84, 129, 140, 172, 173, 179, 190, 200, 202, 203, 206, 208, 216, 218, 221, 226, 245, 246, 252, 265, 266, 271, 272, 274, 719, 826, 874, 879, 882, 892, 954, 989, 1023, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1062, 1069, 1077], "interpret": [29, 62, 129, 135, 153, 154, 165, 169, 172, 179, 190, 193, 200, 202, 203, 206, 208, 216, 218, 221, 225, 241, 242, 245, 251, 252, 265, 266, 267, 271, 272, 274, 283, 284, 310, 395, 430, 434, 441, 445, 455, 469, 483, 535, 719, 766, 850, 872, 893, 940, 941, 988, 989, 990, 991, 1021, 1023, 1032, 1033, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1064, 1077, 1100, 1121], "python_exercises_legacy_passwd": [29, 719, 1023, 1036, 1047, 1062], "pars": [29, 152, 189, 190, 200, 201, 203, 206, 212, 216, 221, 222, 224, 230, 233, 261, 266, 283, 287, 296, 301, 314, 719, 1017, 1023, 1036, 1047, 1062, 1064, 1089], "passwd": [29, 99, 100, 112, 173, 183, 192, 205, 206, 208, 212, 213, 216, 221, 222, 224, 228, 230, 231, 239, 246, 248, 249, 253, 263, 267, 269, 270, 717, 719, 796, 798, 801, 803, 806, 808, 810, 821, 840, 843, 845, 846, 848, 851, 853, 857, 859, 862, 863, 871, 873, 874, 882, 883, 887, 888, 893, 899, 919, 933, 961, 963, 1010, 1014, 1023, 1036, 1047, 1062, 1093], "python_exercises_legacy_uniq_funct": [29, 190, 719, 1023, 1033, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1062], "python_exercises_legacy_mixed_list_execut": [29, 190, 719, 1023, 1033, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "execut": [29, 43, 62, 107, 109, 110, 112, 126, 129, 133, 135, 143, 144, 148, 153, 160, 165, 172, 179, 185, 190, 200, 202, 203, 206, 208, 216, 218, 221, 245, 252, 265, 266, 271, 272, 275, 276, 295, 296, 303, 310, 332, 333, 367, 369, 373, 395, 400, 404, 413, 421, 424, 425, 437, 456, 459, 466, 473, 478, 492, 521, 545, 560, 663, 717, 719, 764, 766, 792, 793, 794, 801, 803, 808, 813, 814, 822, 826, 873, 882, 911, 924, 938, 940, 941, 942, 943, 946, 950, 952, 956, 958, 964, 968, 972, 975, 988, 998, 999, 1002, 1021, 1023, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062, 1073, 1076, 1106, 1108, 1120, 1131, 1132], "python_exercises_legacy_distil": [29, 190, 719, 1023, 1033, 1036, 1047, 1062], "elimin": [29, 57, 126, 190, 212, 219, 221, 222, 224, 230, 245, 252, 265, 271, 272, 462, 507, 698, 719, 859, 966, 1023, 1036, 1047, 1062], "empti": [29, 37, 41, 47, 49, 133, 136, 143, 151, 171, 173, 190, 202, 205, 212, 213, 219, 221, 222, 224, 225, 228, 230, 231, 234, 245, 246, 251, 252, 253, 263, 265, 267, 271, 272, 305, 339, 391, 530, 539, 540, 544, 554, 556, 572, 573, 591, 609, 629, 635, 684, 694, 695, 707, 717, 719, 729, 766, 793, 794, 806, 810, 820, 857, 866, 879, 913, 933, 971, 1012, 1023, 1036, 1037, 1041, 1047, 1062], "comment": [29, 33, 34, 35, 37, 43, 126, 135, 170, 190, 191, 193, 206, 212, 214, 218, 219, 222, 224, 229, 230, 245, 252, 254, 265, 271, 272, 310, 333, 378, 397, 425, 462, 463, 491, 719, 871, 1009, 1023, 1036, 1047, 1062, 1077, 1091], "python_exercises_legacy_max_numb": [29, 190, 719, 1023, 1033, 1036, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1062], "python_exercises_sensors_sensor_const": [29, 719, 1023, 1050, 1051, 1052, 1062], "python_exercises_sensors_project_setup": [29, 719, 1023, 1050, 1051, 1052, 1062], "setup": [29, 105, 112, 117, 121, 130, 148, 160, 164, 165, 203, 205, 221, 228, 231, 233, 238, 240, 246, 249, 253, 263, 267, 307, 310, 315, 316, 401, 434, 448, 459, 461, 475, 489, 492, 494, 495, 628, 630, 719, 734, 760, 857, 862, 870, 872, 887, 889, 900, 937, 941, 945, 947, 950, 951, 961, 968, 976, 1019, 1023, 1050, 1062, 1099, 1109, 1111], "python_exercises_herdt_while_even_numb": [29, 719, 1023, 1025, 1027, 1062], "python_exercises_herdt_username_password": [29, 719, 1023, 1025, 1027, 1030, 1062], "usernam": [29, 148, 177, 185, 206, 307, 719, 793, 801, 810, 873, 883, 1010, 1023, 1025, 1027, 1042, 1062, 1128], "password": [29, 140, 143, 148, 173, 177, 185, 206, 307, 310, 315, 719, 801, 823, 863, 871, 873, 874, 879, 1023, 1025, 1027, 1042, 1062, 1075, 1128], "python_exercises_herdt_max_numb": [29, 719, 1023, 1025, 1026, 1027, 1028, 1030, 1062], "python_exercises_herdt_swap": [29, 719, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1062], "python_exercises_herdt_greet": [29, 719, 1023, 1025, 1026, 1027, 1030, 1062], "python_exercises_herdt_boolean": [29, 719, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1062], "express": [29, 58, 61, 152, 168, 169, 171, 172, 182, 192, 201, 206, 207, 209, 213, 232, 233, 235, 236, 237, 238, 241, 242, 247, 266, 267, 272, 285, 333, 335, 339, 343, 352, 353, 355, 356, 357, 360, 362, 365, 367, 368, 370, 372, 378, 379, 385, 389, 392, 396, 405, 409, 414, 415, 419, 434, 443, 455, 456, 459, 463, 469, 470, 483, 491, 535, 537, 615, 637, 648, 652, 657, 675, 716, 718, 719, 826, 859, 940, 960, 970, 976, 997, 999, 1006, 1008, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1060, 1061, 1062, 1064, 1085, 1117, 1118, 1119], "python_drafts_argpars": [29, 719, 1017, 1062], "argpars": [29, 209, 230, 261, 283, 287, 296, 719, 1017, 1062], "python_drafts_matplotlib": [29, 719, 1017, 1062], "matplotlib": [29, 165, 184, 203, 204, 216, 230, 231, 233, 235, 266, 285, 319, 719, 960, 1017, 1062, 1064, 1070], "python_swdev_pip": [29, 719, 1017, 1062, 1065, 1066, 1070, 1078, 1080, 1092, 1095, 1102], "python_drafts_setuptool": [29, 719, 1017, 1062], "setuptool": [29, 60, 129, 242, 277, 287, 719, 1017, 1062, 1100], "python_db_dbapi2": [29, 719, 1020, 1022, 1023, 1062, 1074], "python_db_postgr": [29, 719, 1062, 1074], "postgresql": [29, 719, 1062, 1073, 1074], "python_swdev_unittest": [29, 719, 1062, 1092], "unittest": [29, 64, 112, 129, 130, 146, 149, 160, 162, 165, 168, 169, 179, 182, 193, 195, 200, 242, 251, 262, 300, 310, 318, 319, 328, 329, 717, 719, 1006, 1062, 1064, 1092, 1103], "python_swdev_pytest_intro": [29, 719, 1062, 1092, 1097], "By": [29, 50, 52, 133, 135, 140, 144, 148, 160, 166, 202, 208, 209, 211, 218, 219, 221, 222, 226, 230, 233, 237, 238, 240, 242, 251, 259, 261, 262, 266, 277, 280, 283, 284, 287, 291, 318, 350, 377, 400, 403, 620, 621, 623, 624, 627, 629, 631, 632, 675, 676, 716, 718, 719, 735, 808, 857, 870, 906, 925, 941, 952, 976, 983, 1060, 1061, 1062, 1071, 1092, 1097], "As": [30, 45, 67, 79, 112, 130, 133, 135, 140, 144, 150, 162, 165, 169, 200, 213, 275, 313, 330, 368, 399, 402, 478, 480, 494, 545, 550, 552, 553, 630, 739, 766, 792, 801, 870, 871, 879, 881, 898, 926, 934, 956, 962, 983, 988, 992, 1049, 1053, 1066, 1108, 1120], "follow": [30, 38, 42, 77, 105, 106, 108, 123, 132, 133, 135, 136, 137, 138, 140, 148, 153, 157, 161, 162, 165, 169, 173, 174, 185, 202, 208, 218, 219, 221, 225, 234, 238, 240, 257, 258, 260, 266, 267, 307, 329, 331, 334, 351, 352, 365, 368, 395, 397, 399, 401, 406, 407, 410, 418, 420, 425, 435, 436, 439, 440, 456, 457, 459, 460, 461, 462, 463, 481, 484, 485, 488, 489, 491, 492, 493, 494, 495, 507, 513, 539, 554, 555, 556, 557, 610, 617, 619, 624, 626, 627, 630, 631, 634, 652, 685, 713, 714, 717, 727, 729, 735, 766, 792, 793, 794, 799, 801, 803, 805, 817, 819, 820, 826, 830, 838, 839, 863, 870, 871, 872, 893, 896, 897, 898, 899, 908, 925, 934, 938, 940, 946, 948, 950, 952, 954, 955, 956, 959, 963, 964, 968, 975, 994, 1008, 1016, 1021, 1024, 1029, 1033, 1035, 1039, 1042, 1043, 1046, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1086, 1090, 1100, 1121], "version": [30, 60, 132, 136, 138, 139, 140, 143, 146, 148, 149, 161, 162, 163, 165, 172, 181, 183, 192, 193, 202, 206, 208, 212, 218, 221, 228, 233, 236, 245, 251, 257, 258, 259, 260, 267, 303, 318, 378, 417, 418, 420, 421, 423, 430, 433, 530, 627, 629, 630, 677, 681, 693, 714, 739, 741, 758, 766, 767, 782, 826, 870, 871, 941, 942, 952, 954, 955, 957, 988, 989, 995, 1019, 1091, 1093, 1100, 1101, 1107, 1113], "control": [30, 44, 58, 61, 62, 85, 132, 139, 146, 148, 151, 162, 165, 170, 172, 173, 174, 175, 184, 185, 200, 203, 216, 221, 227, 241, 311, 312, 313, 315, 318, 356, 370, 371, 417, 420, 434, 441, 484, 485, 488, 494, 536, 719, 739, 764, 766, 771, 826, 862, 864, 865, 869, 870, 872, 888, 937, 942, 961, 964, 972, 984, 997, 999, 1083, 1099, 1101, 1119, 1129, 1135], "done": [30, 41, 45, 46, 49, 52, 54, 55, 56, 62, 74, 83, 86, 90, 101, 109, 110, 120, 125, 129, 130, 132, 134, 135, 137, 138, 139, 140, 143, 148, 153, 154, 157, 161, 165, 172, 194, 209, 213, 219, 221, 237, 238, 240, 252, 255, 262, 267, 285, 291, 296, 302, 313, 319, 334, 335, 383, 390, 391, 393, 395, 406, 417, 419, 420, 421, 425, 459, 478, 492, 495, 537, 549, 550, 578, 592, 600, 605, 629, 630, 632, 635, 642, 663, 666, 670, 671, 681, 687, 695, 699, 707, 709, 719, 725, 735, 737, 756, 758, 766, 768, 793, 794, 798, 799, 801, 802, 810, 822, 845, 863, 864, 866, 871, 872, 888, 889, 890, 900, 914, 922, 928, 937, 941, 942, 950, 954, 956, 963, 966, 967, 968, 986, 995, 1006, 1014, 1015, 1016, 1019, 1022, 1043, 1076, 1098, 1123], "No": [30, 42, 62, 79, 123, 129, 133, 135, 139, 140, 148, 175, 192, 208, 209, 225, 251, 321, 341, 343, 357, 373, 377, 384, 395, 400, 412, 417, 421, 422, 425, 427, 430, 431, 432, 433, 445, 491, 530, 540, 541, 553, 560, 570, 585, 588, 606, 624, 634, 636, 639, 643, 646, 650, 694, 695, 702, 709, 744, 746, 748, 750, 764, 766, 771, 783, 802, 808, 810, 813, 814, 829, 837, 845, 848, 864, 866, 872, 886, 893, 898, 899, 908, 909, 911, 913, 922, 926, 934, 937, 943, 957, 959, 976, 983, 989, 992, 995, 996, 1004, 1008, 1012, 1014, 1071, 1072, 1076, 1077, 1086, 1089, 1098, 1100, 1106], "proprietari": 30, "accept": [30, 31, 59, 135, 161, 257, 417, 419, 685, 695, 697, 734, 866, 892, 962, 986, 1133, 1135], "proven": [30, 406, 410, 554, 556, 557, 646], "difficult": [30, 67, 192, 362, 380, 530, 752, 764, 926], "unicod": [31, 33, 34, 35, 37, 193, 202, 206, 208, 218, 221, 243, 267, 345, 994, 1000, 1014, 1077, 1091], "sphinxemojicod": 31, "pip": [31, 60, 117, 129, 165, 169, 190, 219, 233, 892, 988, 1018, 1019, 1051, 1064, 1080, 1092, 1093, 1094, 1098, 1100, 1101], "conf": [31, 64, 134, 136, 138, 430, 766, 872, 964], "grimac": 31, "astonish": 31, "rolling_ey": 31, "face_with_raised_eyebrow": 31, "flush": [31, 246, 494, 725, 737], "innoc": [31, 139, 400, 701, 805, 939, 983], "kiss": 31, "kissing_heart": 31, "middle_fing": 31, "metal": [31, 77, 79, 86, 88, 133, 328, 863, 871, 872], "muscl": 31, "nerd": [31, 826], "ok_hand": 31, "penguin": 31, "pig": [31, 395], "point_up": 31, "sleep": [31, 62, 133, 208, 237, 238, 261, 262, 283, 296, 368, 377, 707, 719, 743, 746, 748, 758, 768, 771, 775, 781, 783, 784, 787, 862, 863, 871, 900, 904, 907, 922, 924, 925, 928, 933, 972], "sunglass": 31, "think": [31, 41, 42, 68, 133, 134, 148, 171, 195, 378, 399, 400, 403, 489, 493, 540, 560, 635, 643, 645, 694, 793, 794, 797, 887, 933, 995], "thumbsdown": 31, "thumbsup": 31, "wink": 31, "1_tone1": 31, "1_tone2": 31, "1_tone3": 31, "1_tone4": 31, "1_tone5": 31, "1st_place_med": 31, "2nd_place_med": 31, "3rd_place_med": 31, "8ball": 31, "abacu": 31, "abcd": [31, 183, 189, 205, 225, 267], "ac": [31, 143, 181], "accordion": 31, "adhesive_bandag": 31, "admission_ticket": 31, "adult": [31, 984], "adult_dark_skin_ton": 31, "adult_light_skin_ton": 31, "adult_medium_dark_skin_ton": 31, "adult_medium_light_skin_ton": 31, "adult_medium_skin_ton": 31, "adult_tone1": 31, "adult_tone2": 31, "adult_tone3": 31, "adult_tone4": 31, "adult_tone5": 31, "ae": [31, 143], "aerial_tramwai": 31, "af": [31, 143], "afghanistan": 31, "ai": [31, 169, 1071, 1078], "airplan": [31, 863], "airplane_arriv": 31, "airplane_departur": 31, "airplane_smal": 31, "aland_island": 31, "alarm_clock": 31, "albania": 31, "alemb": 31, "algeria": 31, "alien": 31, "ambul": 31, "american_samoa": 31, "amphora": 31, "anatomical_heart": 31, "anchor": 31, "andorra": 31, "angel": [31, 257], "angel_tone1": 31, "angel_tone2": 31, "angel_tone3": 31, "angel_tone4": 31, "angel_tone5": 31, "anger": 31, "anger_right": 31, "angola": 31, "angri": 31, "anguilla": 31, "anguish": 31, "ant": 31, "antarctica": 31, "antigua_barbuda": 31, "ao": 31, "appl": [31, 940, 1006], "aq": 31, "aquariu": 31, "archeri": 31, "argentina": 31, "ari": [31, 34, 37], "armenia": 31, "arrow_backward": 31, "arrow_double_down": 31, "arrow_double_up": 31, "arrow_down": 31, "arrow_down_smal": 31, "arrow_forward": 31, "arrow_heading_down": 31, "arrow_heading_up": 31, "arrow_left": 31, "arrow_lower_left": 31, "arrow_lower_right": 31, "arrow_right": 31, "arrow_right_hook": 31, "arrow_up": 31, "arrow_up_down": 31, "arrow_up_smal": 31, "arrow_upper_left": 31, "arrow_upper_right": 31, "arrows_clockwis": 31, "arrows_counterclockwis": 31, "articulated_lorri": 31, "artificial_satellit": 31, "artist": 31, "artist_dark_skin_ton": 31, "artist_light_skin_ton": 31, "artist_medium_dark_skin_ton": 31, "artist_medium_light_skin_ton": 31, "artist_medium_skin_ton": 31, "artist_tone1": 31, "artist_tone2": 31, "artist_tone3": 31, "artist_tone4": 31, "artist_tone5": 31, "aruba": 31, "ascens": 31, "astronaut": 31, "astronaut_dark_skin_ton": 31, "astronaut_light_skin_ton": 31, "astronaut_medium_dark_skin_ton": 31, "astronaut_medium_light_skin_ton": 31, "astronaut_medium_skin_ton": 31, "astronaut_tone1": 31, "astronaut_tone2": 31, "astronaut_tone3": 31, "astronaut_tone4": 31, "astronaut_tone5": 31, "athletic_sho": 31, "atm": 31, "atom": [31, 64, 75, 87, 156, 211, 236, 237, 238, 240, 249, 260, 291, 513, 645, 694, 707, 708, 718, 719, 728, 733, 736, 738, 743, 746, 747, 749, 752, 753, 757, 758, 759, 761, 763, 768, 771, 772, 775, 776, 777, 781, 784, 786, 787, 862, 902, 912, 913, 975, 1118], "atom_symbol": 31, "australia": 31, "austria": [31, 133, 328], "auto_rickshaw": 31, "avocado": 31, "aw": 31, "ax": [31, 154, 960], "az": 31, "azerbaijan": 31, "ba": [31, 143], "babi": 31, "baby_bottl": 31, "baby_chick": 31, "baby_symbol": 31, "baby_tone1": 31, "baby_tone2": 31, "baby_tone3": 31, "baby_tone4": 31, "baby_tone5": 31, "back_of_hand": 31, "back_of_hand_tone1": 31, "back_of_hand_tone2": 31, "back_of_hand_tone3": 31, "back_of_hand_tone4": 31, "back_of_hand_tone5": 31, "bacon": 31, "badger": 31, "badminton": 31, "bagel": 31, "baggage_claim": 31, "baguette_bread": 31, "bahama": 31, "bahrain": 31, "balance_scal": 31, "bald": 31, "ballet_sho": 31, "balloon": 31, "ballot_box": 31, "ballot_box_with_ballot": 31, "ballot_box_with_check": 31, "bamboo": 31, "banana": 31, "bangbang": 31, "bangladesh": 31, "banjo": 31, "bank": [31, 419], "bar_chart": 31, "barbado": 31, "barber": 31, "basebal": 31, "basket": 31, "basketbal": 31, "basketball_man": 31, "basketball_play": 31, "basketball_player_tone1": 31, "basketball_player_tone2": 31, "basketball_player_tone3": 31, "basketball_player_tone4": 31, "basketball_player_tone5": 31, "basketball_woman": 31, "bat": [31, 1100], "bath": 31, "bath_tone1": 31, "bath_tone2": 31, "bath_tone3": 31, "bath_tone4": 31, "bath_tone5": 31, "bathtub": 31, "batteri": [31, 88, 165, 310, 863, 987, 988, 989, 1015, 1094], "bb": [31, 125, 136, 870], "bd": [31, 143], "beach": 31, "beach_umbrella": 31, "beach_with_umbrella": 31, "bear": [31, 911, 1087], "bearded_person": 31, "bearded_person_dark_skin_ton": 31, "bearded_person_light_skin_ton": 31, "bearded_person_medium_dark_skin_ton": 31, "bearded_person_medium_light_skin_ton": 31, "bearded_person_medium_skin_ton": 31, "bearded_person_tone1": 31, "bearded_person_tone2": 31, "bearded_person_tone3": 31, "bearded_person_tone4": 31, "bearded_person_tone5": 31, "beaver": 31, "bed": 31, "bee": 31, "beer": [31, 397], "beetl": 31, "belaru": 31, "belgium": 31, "beliz": 31, "bell": [31, 983, 986], "bell_pepp": 31, "bellhop": 31, "bellhop_bel": 31, "benin": 31, "bento": 31, "bermuda": 31, "beverage_box": 31, "bf": [31, 143], "bg": [31, 419], "bh": 31, "bhutan": 31, "bicyclist": 31, "bicyclist_tone1": 31, "bicyclist_tone2": 31, "bicyclist_tone3": 31, "bicyclist_tone4": 31, "bicyclist_tone5": 31, "bike": 31, "biking_man": 31, "biking_woman": 31, "bikini": 31, "billed_cap": 31, "biohazard": 31, "biohazard_sign": 31, "bird": 31, "birthdai": [31, 174, 625], "bison": [31, 144, 746, 870, 954], "bj": 31, "bl": 31, "black_cat": 31, "black_circl": 31, "black_flag": 31, "black_heart": 31, "black_jok": 31, "black_large_squar": 31, "black_medium_small_squar": 31, "black_medium_squar": 31, "black_nib": 31, "black_small_squar": 31, "black_square_button": 31, "blond": 31, "haired_man": 31, "haired_man_dark_skin_ton": 31, "haired_man_light_skin_ton": 31, "haired_man_medium_dark_skin_ton": 31, "haired_man_medium_light_skin_ton": 31, "haired_man_medium_skin_ton": 31, "haired_man_tone1": 31, "haired_man_tone2": 31, "haired_man_tone3": 31, "haired_man_tone4": 31, "haired_man_tone5": 31, "haired_woman": 31, "haired_woman_dark_skin_ton": 31, "haired_woman_light_skin_ton": 31, "haired_woman_medium_dark_skin_ton": 31, "haired_woman_medium_light_skin_ton": 31, "haired_woman_medium_skin_ton": 31, "haired_woman_tone1": 31, "haired_woman_tone2": 31, "haired_woman_tone3": 31, "haired_woman_tone4": 31, "haired_woman_tone5": 31, "blond_haired_person": 31, "blond_haired_person_tone1": 31, "blond_haired_person_tone2": 31, "blond_haired_person_tone3": 31, "blond_haired_person_tone4": 31, "blond_haired_person_tone5": 31, "blonde_man": 31, "blonde_woman": 31, "blossom": 31, "blowfish": 31, "blue_book": 31, "blue_car": 31, "blue_circl": 31, "blue_heart": 31, "blue_squar": 31, "blueberri": 31, "blush": 31, "bm": 31, "bn": 31, "bo": [31, 977], "boar": 31, "boat": 31, "bolivia": 31, "bomb": 31, "bone": 31, "bookmark": [31, 1076], "bookmark_tab": 31, "boom": [31, 663, 680], "boomerang": 31, "boot": [31, 123, 134, 136, 140, 152, 253, 413, 710, 739, 744, 762, 766, 776, 804, 870, 871, 872, 1113], "bosnia_herzegovina": 31, "botswana": 31, "bottle_with_popping_cork": 31, "bouquet": 31, "bouvet_island": 31, "bow": 31, "bow_and_arrow": 31, "bow_tone1": 31, "bow_tone2": 31, "bow_tone3": 31, "bow_tone4": 31, "bow_tone5": 31, "bowing_man": 31, "bowing_woman": 31, "bowl_with_spoon": 31, "bowl": 31, "boxing_glov": 31, "boi": 31, "boy_tone1": 31, "boy_tone2": 31, "boy_tone3": 31, "boy_tone4": 31, "boy_tone5": 31, "bq": 31, "br": [31, 231], "brain": [31, 58, 61], "brazil": 31, "bread": 31, "breast_feed": 31, "breast_feeding_dark_skin_ton": 31, "breast_feeding_light_skin_ton": 31, "breast_feeding_medium_dark_skin_ton": 31, "breast_feeding_medium_light_skin_ton": 31, "breast_feeding_medium_skin_ton": 31, "breast_feeding_tone1": 31, "breast_feeding_tone2": 31, "breast_feeding_tone3": 31, "breast_feeding_tone4": 31, "breast_feeding_tone5": 31, "brick": [31, 132, 145], "bride_with_veil": 31, "bride_with_veil_tone1": 31, "bride_with_veil_tone2": 31, "bride_with_veil_tone3": 31, "bride_with_veil_tone4": 31, "bride_with_veil_tone5": 31, "bridge_at_night": 31, "briefcas": 31, "brief": [31, 411, 826], "british_indian_ocean_territori": 31, "british_virgin_island": 31, "broccoli": 31, "broken_heart": 31, "broom": 31, "brown_circl": 31, "brown_heart": 31, "brown_squar": 31, "brunei": 31, "bt": 31, "bubble_tea": 31, "bucket": [31, 737], "bug": [31, 45, 54, 55, 106, 134, 135, 136, 176, 195, 211, 222, 319, 375, 377, 378, 393, 398, 400, 404, 417, 422, 427, 518, 520, 522, 530, 536, 537, 540, 545, 607, 610, 663, 673, 692, 709, 719, 756, 884, 915, 924, 925, 957, 977, 978, 992, 995], "building_construct": 31, "bulb": 31, "bulgaria": 31, "bullettrain_front": 31, "bullettrain_sid": 31, "burkina_faso": 31, "burrito": 31, "burundi": 31, "bu": [31, 80, 180, 205, 221, 228, 230, 231, 246, 249, 253, 263, 267, 435, 449, 464, 478, 494, 495, 719, 737, 762, 826, 862, 864, 869, 870, 871, 900, 906, 962, 1063, 1122, 1129, 1133, 1135], "business_suit_levit": 31, "busstop": 31, "bust_in_silhouett": 31, "busts_in_silhouett": 31, "butter": 31, "butterfli": 31, "bv": 31, "bw": 31, "bz": 31, "cactu": 31, "cake": 31, "calendar": 31, "calendar_spir": 31, "call_m": 31, "call_me_hand": 31, "call_me_hand_tone1": 31, "call_me_hand_tone2": 31, "call_me_hand_tone3": 31, "call_me_hand_tone4": 31, "call_me_hand_tone5": 31, "call_me_tone1": 31, "call_me_tone2": 31, "call_me_tone3": 31, "call_me_tone4": 31, "call_me_tone5": 31, "cambodia": 31, "camel": 31, "camera": [31, 138, 140, 871], "camera_flash": 31, "camera_with_flash": 31, "cameroon": 31, "camp": 31, "canada": 31, "canary_island": 31, "cancer": 31, "candl": 31, "candi": 31, "canned_food": 31, "cano": 31, "cape_verd": 31, "capital_abcd": 31, "capricorn": 31, "car": [31, 251, 419, 863], "card_box": 31, "card_file_box": 31, "card_index": 31, "card_index_divid": 31, "caribbean_netherland": 31, "carousel_hors": 31, "carpentry_saw": 31, "carrot": 31, "cartwheel": 31, "cartwheel_tone1": 31, "cartwheel_tone2": 31, "cartwheel_tone3": 31, "cartwheel_tone4": 31, "cartwheel_tone5": 31, "cat2": 31, "cat": [31, 135, 139, 173, 185, 239, 248, 249, 251, 269, 270, 295, 296, 395, 419, 494, 719, 724, 729, 746, 766, 782, 793, 794, 796, 797, 806, 808, 810, 838, 845, 853, 854, 856, 857, 859, 862, 863, 870, 871, 872, 873, 897, 899, 900, 904, 928, 934, 937, 1124], "cayman_island": 31, "cd": [31, 60, 119, 136, 137, 139, 140, 143, 144, 148, 161, 162, 195, 205, 225, 233, 238, 240, 296, 310, 315, 420, 492, 495, 555, 739, 741, 766, 767, 790, 792, 793, 794, 797, 803, 811, 816, 818, 826, 850, 863, 870, 871, 879, 892, 941, 942, 954, 955, 1019], "central_african_republ": 31, "ceuta_melilla": 31, "cf": [31, 792, 909], "cg": 31, "ch": 31, "chad": 31, "chain": [31, 126, 132, 143, 153, 215, 232, 397, 771, 919], "chair": [31, 165], "champagn": 31, "champagne_glass": 31, "chart": [31, 179, 194, 203, 216, 230, 233, 266, 272, 1064, 1071], "chart_with_downwards_trend": 31, "chart_with_upwards_trend": 31, "checkered_flag": 31, "chees": 31, "cheese_wedg": 31, "cherri": 31, "cherry_blossom": 31, "chess_pawn": 31, "chestnut": 31, "chicken": 31, "child": [31, 98, 150, 239, 248, 249, 269, 270, 717, 719, 796, 798, 800, 801, 812, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 835, 837, 838, 862, 874, 875, 876, 877, 878, 903, 909, 916, 921, 938, 950, 951, 981, 1089], "child_dark_skin_ton": 31, "child_light_skin_ton": 31, "child_medium_dark_skin_ton": 31, "child_medium_light_skin_ton": 31, "child_medium_skin_ton": 31, "child_tone1": 31, "child_tone2": 31, "child_tone3": 31, "child_tone4": 31, "child_tone5": 31, "children_cross": 31, "chile": 31, "china": 31, "chipmunk": 31, "chocolate_bar": 31, "chopstick": 31, "christmas_island": 31, "christmas_tre": 31, "church": 31, "ci": [31, 1098], "cinema": 31, "circus_t": 31, "city_dusk": 31, "city_sunris": 31, "city_sunset": 31, "cityscap": 31, "ck": 31, "cl": [31, 221, 246, 980, 981], "clamp": 31, "clap": 31, "clap_tone1": 31, "clap_tone2": 31, "clap_tone3": 31, "clap_tone4": 31, "clap_tone5": 31, "clapper": 31, "classical_build": 31, "clinking_glass": 31, "clipboard": 31, "clipperton_island": 31, "clock1030": 31, "clock10": 31, "clock1130": 31, "clock11": 31, "clock1230": 31, "clock12": 31, "clock130": 31, "clock1": 31, "clock230": 31, "clock2": 31, "clock330": 31, "clock3": 31, "clock430": 31, "clock4": 31, "clock530": 31, "clock5": 31, "clock630": 31, "clock6": 31, "clock730": 31, "clock7": 31, "clock830": 31, "clock8": 31, "clock930": 31, "clock9": 31, "clock": [31, 208, 209, 406, 870], "closed_book": 31, "closed_lock_with_kei": 31, "closed_umbrella": 31, "cloud": [31, 100, 140, 185, 209, 309, 310, 313, 638, 640, 879, 1068, 1069, 1093], "cloud_lightn": 31, "cloud_rain": 31, "cloud_snow": 31, "cloud_tornado": 31, "cloud_with_lightn": 31, "cloud_with_lightning_and_rain": 31, "cloud_with_rain": 31, "cloud_with_snow": 31, "cloud_with_tornado": 31, "clown": 31, "clown_fac": 31, "club": [31, 37], "cm": 31, "cn": [31, 143], "coat": 31, "cockroach": 31, "cocktail": 31, "coconut": [31, 257], "cocos_island": 31, "coffe": [31, 136, 610, 870], "coffin": 31, "coin": 31, "cold_fac": 31, "cold_sweat": 31, "colombia": 31, "comet": 31, "comoro": 31, "compass": 31, "compress": [31, 134, 148, 239, 248, 249, 269, 719, 790, 796, 862, 950, 951, 952, 955], "computer_mous": 31, "confetti_bal": 31, "confound": 31, "confus": [31, 133, 137, 165, 194, 352, 360, 406, 553, 563, 639, 650, 1006, 1090], "congo": 31, "congo_brazzavil": 31, "congo_kinshasa": 31, "congratul": 31, "construct": [31, 165, 171, 252, 255, 355, 368, 378, 407, 417, 521, 572, 591, 592, 648, 696, 978, 985, 1002, 1013], "construction_sit": 31, "construction_work": 31, "construction_worker_man": 31, "construction_worker_tone1": 31, "construction_worker_tone2": 31, "construction_worker_tone3": 31, "construction_worker_tone4": 31, "construction_worker_tone5": 31, "construction_worker_woman": 31, "control_knob": 31, "convenience_stor": 31, "cook": [31, 249], "cook_dark_skin_ton": 31, "cook_island": 31, "cook_light_skin_ton": 31, "cook_medium_dark_skin_ton": 31, "cook_medium_light_skin_ton": 31, "cook_medium_skin_ton": 31, "cook_tone1": 31, "cook_tone2": 31, "cook_tone3": 31, "cook_tone4": 31, "cook_tone5": 31, "cooki": [31, 748, 762], "cool": [31, 64, 119, 134, 135, 138, 140, 148, 153, 154, 165, 166, 169, 184, 249, 262, 328, 413, 419, 447, 456, 593, 635, 636, 652, 655, 674, 684, 687, 709, 766, 822, 872, 957, 961, 964, 981, 1000, 1014, 1064, 1071, 1076, 1118], "cop": 31, "cop_tone1": 31, "cop_tone2": 31, "cop_tone3": 31, "cop_tone4": 31, "cop_tone5": 31, "copyright": [31, 35, 144, 185, 202, 208, 218, 221, 246, 303, 307, 545, 694, 990], "corn": 31, "costa_rica": 31, "cote_divoir": 31, "couch": 31, "couch_and_lamp": 31, "coupl": [31, 42, 132, 133, 134, 135, 140, 153, 165, 169, 331, 368, 402, 407, 683, 859, 894, 913], "couple_mm": 31, "couple_with_heart": 31, "couple_with_heart_dark_skin_ton": 31, "couple_with_heart_light_skin_ton": 31, "couple_with_heart_man_man": 31, "couple_with_heart_man_man_dark_skin_ton": 31, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_man_man_light_skin_ton": 31, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_man_man_medium_dark_skin_ton": 31, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 31, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_man_man_medium_light_skin_ton": 31, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 31, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_man_man_medium_skin_ton": 31, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 31, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 31, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_man_man_tone1": 31, "couple_with_heart_man_man_tone1_tone2": 31, "couple_with_heart_man_man_tone1_tone3": 31, "couple_with_heart_man_man_tone1_tone4": 31, "couple_with_heart_man_man_tone1_tone5": 31, "couple_with_heart_man_man_tone2": 31, "couple_with_heart_man_man_tone2_tone1": 31, "couple_with_heart_man_man_tone2_tone3": 31, "couple_with_heart_man_man_tone2_tone4": 31, "couple_with_heart_man_man_tone2_tone5": 31, "couple_with_heart_man_man_tone3": 31, "couple_with_heart_man_man_tone3_tone1": 31, "couple_with_heart_man_man_tone3_tone2": 31, "couple_with_heart_man_man_tone3_tone4": 31, "couple_with_heart_man_man_tone3_tone5": 31, "couple_with_heart_man_man_tone4": 31, "couple_with_heart_man_man_tone4_tone1": 31, "couple_with_heart_man_man_tone4_tone2": 31, "couple_with_heart_man_man_tone4_tone3": 31, "couple_with_heart_man_man_tone4_tone5": 31, "couple_with_heart_man_man_tone5": 31, "couple_with_heart_man_man_tone5_tone1": 31, "couple_with_heart_man_man_tone5_tone2": 31, "couple_with_heart_man_man_tone5_tone3": 31, "couple_with_heart_man_man_tone5_tone4": 31, "couple_with_heart_medium_dark_skin_ton": 31, "couple_with_heart_medium_light_skin_ton": 31, "couple_with_heart_medium_skin_ton": 31, "couple_with_heart_mm": 31, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 31, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 31, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 31, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 31, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_person_person_tone1_tone2": 31, "couple_with_heart_person_person_tone1_tone3": 31, "couple_with_heart_person_person_tone1_tone4": 31, "couple_with_heart_person_person_tone1_tone5": 31, "couple_with_heart_person_person_tone2_tone1": 31, "couple_with_heart_person_person_tone2_tone3": 31, "couple_with_heart_person_person_tone2_tone4": 31, "couple_with_heart_person_person_tone2_tone5": 31, "couple_with_heart_person_person_tone3_tone1": 31, "couple_with_heart_person_person_tone3_tone2": 31, "couple_with_heart_person_person_tone3_tone4": 31, "couple_with_heart_person_person_tone3_tone5": 31, "couple_with_heart_person_person_tone4_tone1": 31, "couple_with_heart_person_person_tone4_tone2": 31, "couple_with_heart_person_person_tone4_tone3": 31, "couple_with_heart_person_person_tone4_tone5": 31, "couple_with_heart_person_person_tone5_tone1": 31, "couple_with_heart_person_person_tone5_tone2": 31, "couple_with_heart_person_person_tone5_tone3": 31, "couple_with_heart_person_person_tone5_tone4": 31, "couple_with_heart_tone1": 31, "couple_with_heart_tone2": 31, "couple_with_heart_tone3": 31, "couple_with_heart_tone4": 31, "couple_with_heart_tone5": 31, "couple_with_heart_woman_man": 31, "couple_with_heart_woman_man_dark_skin_ton": 31, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_man_light_skin_ton": 31, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_man_medium_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_man_medium_light_skin_ton": 31, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_man_medium_skin_ton": 31, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_man_tone1": 31, "couple_with_heart_woman_man_tone1_tone2": 31, "couple_with_heart_woman_man_tone1_tone3": 31, "couple_with_heart_woman_man_tone1_tone4": 31, "couple_with_heart_woman_man_tone1_tone5": 31, "couple_with_heart_woman_man_tone2": 31, "couple_with_heart_woman_man_tone2_tone1": 31, "couple_with_heart_woman_man_tone2_tone3": 31, "couple_with_heart_woman_man_tone2_tone4": 31, "couple_with_heart_woman_man_tone2_tone5": 31, "couple_with_heart_woman_man_tone3": 31, "couple_with_heart_woman_man_tone3_tone1": 31, "couple_with_heart_woman_man_tone3_tone2": 31, "couple_with_heart_woman_man_tone3_tone4": 31, "couple_with_heart_woman_man_tone3_tone5": 31, "couple_with_heart_woman_man_tone4": 31, "couple_with_heart_woman_man_tone4_tone1": 31, "couple_with_heart_woman_man_tone4_tone2": 31, "couple_with_heart_woman_man_tone4_tone3": 31, "couple_with_heart_woman_man_tone4_tone5": 31, "couple_with_heart_woman_man_tone5": 31, "couple_with_heart_woman_man_tone5_tone1": 31, "couple_with_heart_woman_man_tone5_tone2": 31, "couple_with_heart_woman_man_tone5_tone3": 31, "couple_with_heart_woman_man_tone5_tone4": 31, "couple_with_heart_woman_woman": 31, "couple_with_heart_woman_woman_dark_skin_ton": 31, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_woman_light_skin_ton": 31, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_woman_medium_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_woman_medium_light_skin_ton": 31, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 31, "couple_with_heart_woman_woman_medium_skin_ton": 31, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 31, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 31, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 31, "couple_with_heart_woman_woman_tone1": 31, "couple_with_heart_woman_woman_tone1_tone2": 31, "couple_with_heart_woman_woman_tone1_tone3": 31, "couple_with_heart_woman_woman_tone1_tone4": 31, "couple_with_heart_woman_woman_tone1_tone5": 31, "couple_with_heart_woman_woman_tone2": 31, "couple_with_heart_woman_woman_tone2_tone1": 31, "couple_with_heart_woman_woman_tone2_tone3": 31, "couple_with_heart_woman_woman_tone2_tone4": 31, "couple_with_heart_woman_woman_tone2_tone5": 31, "couple_with_heart_woman_woman_tone3": 31, "couple_with_heart_woman_woman_tone3_tone1": 31, "couple_with_heart_woman_woman_tone3_tone2": 31, "couple_with_heart_woman_woman_tone3_tone4": 31, "couple_with_heart_woman_woman_tone3_tone5": 31, "couple_with_heart_woman_woman_tone4": 31, "couple_with_heart_woman_woman_tone4_tone1": 31, "couple_with_heart_woman_woman_tone4_tone2": 31, "couple_with_heart_woman_woman_tone4_tone3": 31, "couple_with_heart_woman_woman_tone4_tone5": 31, "couple_with_heart_woman_woman_tone5": 31, "couple_with_heart_woman_woman_tone5_tone1": 31, "couple_with_heart_woman_woman_tone5_tone2": 31, "couple_with_heart_woman_woman_tone5_tone3": 31, "couple_with_heart_woman_woman_tone5_tone4": 31, "couple_with_heart_ww": 31, "couple_ww": 31, "couplekiss": 31, "couplekiss_man_man": 31, "couplekiss_man_woman": 31, "couplekiss_mm": 31, "couplekiss_woman_woman": 31, "couplekiss_ww": 31, "cow2": 31, "cow": 31, "cowboi": 31, "cowboy_hat_fac": 31, "cp": [31, 98, 112, 134, 136, 139, 173, 175, 239, 248, 249, 269, 270, 310, 315, 719, 766, 793, 794, 795, 796, 797, 826, 830, 831, 833, 834, 837, 838, 840, 846, 862, 870, 882, 893, 954, 1124], "cr": [31, 1014], "crab": 31, "crayon": 31, "credit_card": 31, "crescent_moon": 31, "cricket": 31, "cricket_bat_bal": 31, "cricket_gam": 31, "croatia": 31, "crocodil": 31, "croissant": 31, "cross": [31, 37, 64, 102, 103, 105, 132, 145, 169, 263, 275, 276, 311, 312, 313, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 900, 901, 903, 917, 920, 923, 925, 942, 946, 947, 948, 949, 951, 954, 1120], "crossed_fing": 31, "crossed_flag": 31, "crossed_sword": 31, "crown": 31, "cruise_ship": 31, "cry": [31, 133], "crying_cat_fac": 31, "crystal_bal": 31, "cu": 31, "cuba": 31, "cucumb": 31, "cup_with_straw": 31, "cupcak": 31, "cupid": 31, "curacao": 31, "curling_ston": 31, "curly_hair": 31, "curly_loop": 31, "currency_exchang": 31, "curri": [31, 194], "custard": 31, "cut_of_meat": 31, "cw": 31, "cx": 31, "cy": 31, "cyclon": 31, "cypru": 31, "cz": 31, "czech_republ": 31, "dagger": [31, 37], "dagger_knif": 31, "dancer": 31, "dancer_tone1": 31, "dancer_tone2": 31, "dancer_tone3": 31, "dancer_tone4": 31, "dancer_tone5": 31, "dancing_men": 31, "dancing_women": 31, "dango": 31, "dark_sunglass": 31, "dart": 31, "dash": [31, 33, 34, 37, 579], "date": [31, 130, 136, 144, 148, 165, 171, 201, 233, 249, 251, 323, 324, 419, 767, 959, 1053, 1055, 1059, 1061, 1068, 1073], "deaf_man": 31, "deaf_man_dark_skin_ton": 31, "deaf_man_light_skin_ton": 31, "deaf_man_medium_dark_skin_ton": 31, "deaf_man_medium_light_skin_ton": 31, "deaf_man_medium_skin_ton": 31, "deaf_man_tone1": 31, "deaf_man_tone2": 31, "deaf_man_tone3": 31, "deaf_man_tone4": 31, "deaf_man_tone5": 31, "deaf_person": 31, "deaf_person_dark_skin_ton": 31, "deaf_person_light_skin_ton": 31, "deaf_person_medium_dark_skin_ton": 31, "deaf_person_medium_light_skin_ton": 31, "deaf_person_medium_skin_ton": 31, "deaf_person_tone1": 31, "deaf_person_tone2": 31, "deaf_person_tone3": 31, "deaf_person_tone4": 31, "deaf_person_tone5": 31, "deaf_woman": 31, "deaf_woman_dark_skin_ton": 31, "deaf_woman_light_skin_ton": 31, "deaf_woman_medium_dark_skin_ton": 31, "deaf_woman_medium_light_skin_ton": 31, "deaf_woman_medium_skin_ton": 31, "deaf_woman_tone1": 31, "deaf_woman_tone2": 31, "deaf_woman_tone3": 31, "deaf_woman_tone4": 31, "deaf_woman_tone5": 31, "deciduous_tre": 31, "deer": 31, "denmark": 31, "department_stor": 31, "derelict_hous": 31, "derelict_house_build": 31, "desert": 31, "desert_island": 31, "desktop": [31, 121, 133, 138, 194, 263, 848, 925, 1122, 1129], "desktop_comput": 31, "detective_tone1": 31, "detective_tone2": 31, "detective_tone3": 31, "detective_tone4": 31, "detective_tone5": 31, "dg": 31, "diamond_shape_with_a_dot_insid": 31, "diamond": [31, 33, 37, 193, 206, 1091], "diego_garcia": 31, "digit_eight": 31, "digit_f": 31, "digit_four": 31, "digit_nin": 31, "digit_on": 31, "digit_seven": 31, "digit_six": 31, "digit_thre": 31, "digit_two": 31, "digit_zero": 31, "disappoint": 31, "disappointed_reliev": 31, "disguised_fac": 31, "divid": [31, 34, 35, 37, 225, 1071], "diving_mask": 31, "diya_lamp": 31, "dizzi": 31, "dizzy_fac": 31, "dj": 31, "djibouti": 31, "dk": 31, "dm": 31, "dna": 31, "do_not_litt": 31, "dodo": 31, "dog2": 31, "dog": [31, 395], "dollar": [31, 35], "doll": 31, "dolphin": 31, "dominica": 31, "dominican_republ": 31, "door": [31, 211, 513, 756, 974], "double_vertical_bar": 31, "doughnut": 31, "dove": 31, "dove_of_peac": 31, "dragon": [31, 96, 195, 211, 258, 260, 513, 537, 538, 543, 632, 644, 646, 675, 680, 691, 695, 700, 708, 716, 718, 719, 937], "dragon_fac": 31, "dress": [31, 130], "dromedary_camel": 31, "drool": 31, "drooling_fac": 31, "drop_of_blood": 31, "droplet": 31, "drum": 31, "drum_with_drumstick": 31, "dumpl": 31, "dvd": 31, "dz": 31, "mail": [31, 130, 205, 221, 228, 231, 246, 253, 263, 267, 857, 1077, 1112], "ea": [31, 143], "eagl": [31, 205, 1021], "ear": 31, "ear_of_ric": 31, "ear_tone1": 31, "ear_tone2": 31, "ear_tone3": 31, "ear_tone4": 31, "ear_tone5": 31, "ear_with_hearing_aid": 31, "ear_with_hearing_aid_dark_skin_ton": 31, "ear_with_hearing_aid_light_skin_ton": 31, "ear_with_hearing_aid_medium_dark_skin_ton": 31, "ear_with_hearing_aid_medium_light_skin_ton": 31, "ear_with_hearing_aid_medium_skin_ton": 31, "ear_with_hearing_aid_tone1": 31, "ear_with_hearing_aid_tone2": 31, "ear_with_hearing_aid_tone3": 31, "ear_with_hearing_aid_tone4": 31, "ear_with_hearing_aid_tone5": 31, "earth_africa": 31, "earth_america": 31, "earth_asia": 31, "ec": [31, 96, 143, 185, 307, 310, 315, 318, 327, 719, 795, 796, 826, 862], "ecuador": 31, "ee": [31, 143], "eg": [31, 34, 113], "egg": [31, 60, 1008], "eggplant": 31, "egypt": 31, "eight": [31, 135, 153, 166, 176, 184, 213, 215, 310, 872, 1077], "eight_pointed_black_star": 31, "eight_spoked_asterisk": 31, "eject": 31, "eject_symbol": 31, "el_salvador": 31, "electric_plug": 31, "eleph": 31, "elev": 31, "elf": [31, 141, 144, 176, 192, 202, 425, 521, 909, 940, 941, 957, 991, 1132], "elf_dark_skin_ton": 31, "elf_light_skin_ton": 31, "elf_medium_dark_skin_ton": 31, "elf_medium_light_skin_ton": 31, "elf_medium_skin_ton": 31, "elf_tone1": 31, "elf_tone2": 31, "elf_tone3": 31, "elf_tone4": 31, "elf_tone5": 31, "england": 31, "envelop": [31, 766], "envelope_with_arrow": 31, "equatorial_guinea": 31, "er": [31, 142, 151, 166, 168, 176, 213, 1113, 1114, 1115], "eritrea": 31, "estonia": 31, "et": [31, 96, 545, 694, 886, 941, 942, 983], "ethiopia": 31, "euro": [31, 461, 462, 463, 475, 476, 477], "european_castl": 31, "european_post_offic": 31, "european_union": 31, "evergreen_tre": 31, "exclam": [31, 35], "expecting_woman": 31, "expecting_woman_tone1": 31, "expecting_woman_tone2": 31, "expecting_woman_tone3": 31, "expecting_woman_tone4": 31, "expecting_woman_tone5": 31, "exploding_head": 31, "expressionless": 31, "eye_in_speech_bubbl": 31, "eye_speech_bubbl": 31, "eyeglass": 31, "face_exh": 31, "face_in_cloud": 31, "face_palm": 31, "face_palm_tone1": 31, "face_palm_tone2": 31, "face_palm_tone3": 31, "face_palm_tone4": 31, "face_palm_tone5": 31, "face_vomit": 31, "face_with_cowboy_hat": 31, "face_with_hand_over_mouth": 31, "face_with_head_bandag": 31, "face_with_monocl": 31, "face_with_rolling_ey": 31, "face_with_spiral_ey": 31, "face_with_symbols_over_mouth": 31, "face_with_thermomet": 31, "facepalm": 31, "facepalm_tone1": 31, "facepalm_tone2": 31, "facepalm_tone3": 31, "facepalm_tone4": 31, "facepalm_tone5": 31, "factori": [31, 105, 193, 206, 241, 260, 319, 434, 441, 455, 469, 483, 535, 719, 892, 1091, 1121], "factory_work": 31, "factory_worker_dark_skin_ton": 31, "factory_worker_light_skin_ton": 31, "factory_worker_medium_dark_skin_ton": 31, "factory_worker_medium_light_skin_ton": 31, "factory_worker_medium_skin_ton": 31, "factory_worker_tone1": 31, "factory_worker_tone2": 31, "factory_worker_tone3": 31, "factory_worker_tone4": 31, "factory_worker_tone5": 31, "fairi": 31, "fairy_dark_skin_ton": 31, "fairy_light_skin_ton": 31, "fairy_medium_dark_skin_ton": 31, "fairy_medium_light_skin_ton": 31, "fairy_medium_skin_ton": 31, "fairy_tone1": 31, "fairy_tone2": 31, "fairy_tone3": 31, "fairy_tone4": 31, "fairy_tone5": 31, "falafel": 31, "falkland_island": 31, "fallen_leaf": 31, "famili": [31, 157, 866, 872], "family_man_boi": 31, "family_man_boy_boi": 31, "family_man_girl": 31, "family_man_girl_boi": 31, "family_man_girl_girl": 31, "family_man_man_boi": 31, "family_man_man_boy_boi": 31, "family_man_man_girl": 31, "family_man_man_girl_boi": 31, "family_man_man_girl_girl": 31, "family_man_woman_boi": 31, "family_man_woman_boy_boi": 31, "family_man_woman_girl": 31, "family_man_woman_girl_boi": 31, "family_man_woman_girl_girl": 31, "family_mmb": 31, "family_mmbb": 31, "family_mmg": 31, "family_mmgb": 31, "family_mmgg": 31, "family_mwbb": 31, "family_mwg": 31, "family_mwgb": 31, "family_mwgg": 31, "family_woman_boi": 31, "family_woman_boy_boi": 31, "family_woman_girl": 31, "family_woman_girl_boi": 31, "family_woman_girl_girl": 31, "family_woman_woman_boi": 31, "family_woman_woman_boy_boi": 31, "family_woman_woman_girl": 31, "family_woman_woman_girl_boi": 31, "family_woman_woman_girl_girl": 31, "family_wwb": 31, "family_wwbb": 31, "family_wwg": 31, "family_wwgb": 31, "family_wwgg": 31, "farmer": 31, "farmer_dark_skin_ton": 31, "farmer_light_skin_ton": 31, "farmer_medium_dark_skin_ton": 31, "farmer_medium_light_skin_ton": 31, "farmer_medium_skin_ton": 31, "farmer_tone1": 31, "farmer_tone2": 31, "farmer_tone3": 31, "farmer_tone4": 31, "farmer_tone5": 31, "faroe_island": 31, "fast_forward": 31, "fax": 31, "fear": [31, 251, 900], "feather": 31, "feet": 31, "female_detect": 31, "female_sign": 31, "fencer": 31, "fenc": 31, "ferris_wheel": 31, "ferri": 31, "fi": [31, 896, 904, 919], "field_hockei": 31, "fiji": 31, "file_cabinet": 31, "file_fold": 31, "film_fram": 31, "film_projector": 31, "film_strip": 31, "fingers_cross": 31, "fingers_crossed_tone1": 31, "fingers_crossed_tone2": 31, "fingers_crossed_tone3": 31, "fingers_crossed_tone4": 31, "fingers_crossed_tone5": 31, "finland": 31, "fire": [31, 42, 62, 397], "fire_engin": 31, "fire_extinguish": 31, "firecrack": 31, "firefight": 31, "firefighter_dark_skin_ton": 31, "firefighter_light_skin_ton": 31, "firefighter_medium_dark_skin_ton": 31, "firefighter_medium_light_skin_ton": 31, "firefighter_medium_skin_ton": 31, "firefighter_tone1": 31, "firefighter_tone2": 31, "firefighter_tone3": 31, "firefighter_tone4": 31, "firefighter_tone5": 31, "firework": 31, "first_plac": 31, "first_place_med": 31, "first_quarter_moon": 31, "first_quarter_moon_with_fac": 31, "fish": [31, 33, 1100], "fish_cak": 31, "fishing_pole_and_fish": 31, "fist": 31, "fist_left": 31, "fist_oncom": 31, "fist_rais": 31, "fist_right": 31, "fist_tone1": 31, "fist_tone2": 31, "fist_tone3": 31, "fist_tone4": 31, "fist_tone5": 31, "five": [31, 35, 62, 133, 153, 166, 176, 184, 205, 215, 221, 231, 246, 267, 285, 291, 310, 328, 1021, 1063], "fj": 31, "fk": 31, "flag_ac": 31, "flag_ad": 31, "flag_a": 31, "flag_af": 31, "flag_ag": 31, "flag_ai": 31, "flag_al": 31, "flag_am": 31, "flag_ao": 31, "flag_aq": 31, "flag_ar": 31, "flag_at": 31, "flag_au": 31, "flag_aw": 31, "flag_ax": 31, "flag_az": 31, "flag_ba": 31, "flag_bb": 31, "flag_bd": 31, "flag_b": 31, "flag_bf": 31, "flag_bg": 31, "flag_bh": 31, "flag_bi": 31, "flag_bj": 31, "flag_bl": 31, "flag_black": 31, "flag_bm": 31, "flag_bn": 31, "flag_bo": 31, "flag_bq": 31, "flag_br": 31, "flag_bt": 31, "flag_bv": 31, "flag_bw": 31, "flag_bz": 31, "flag_ca": 31, "flag_cc": 31, "flag_cd": 31, "flag_cf": 31, "flag_cg": 31, "flag_ch": 31, "flag_ci": 31, "flag_ck": 31, "flag_cl": 31, "flag_cm": 31, "flag_cn": 31, "flag_co": 31, "flag_cp": 31, "flag_cr": 31, "flag_cu": 31, "flag_cv": 31, "flag_cw": 31, "flag_cx": 31, "flag_cz": 31, "flag_d": 31, "flag_dg": 31, "flag_dj": 31, "flag_dk": 31, "flag_dm": 31, "flag_do": 31, "flag_dz": 31, "flag_ea": 31, "flag_ec": 31, "flag_e": 31, "flag_eg": 31, "flag_eh": 31, "flag_er": 31, "flag_": 31, "flag_et": 31, "flag_eu": 31, "flag_fi": 31, "flag_fj": 31, "flag_fk": 31, "flag_fm": 31, "flag_fo": 31, "flag_fr": 31, "flag_ga": 31, "flag_gb": 31, "flag_gd": 31, "flag_g": 31, "flag_gf": 31, "flag_gg": 31, "flag_gh": 31, "flag_gi": 31, "flag_gl": 31, "flag_gm": 31, "flag_gn": 31, "flag_gp": 31, "flag_gq": 31, "flag_gr": 31, "flag_gt": 31, "flag_gu": 31, "flag_gw": 31, "flag_hk": 31, "flag_hm": 31, "flag_hn": 31, "flag_hr": 31, "flag_ht": 31, "flag_hu": 31, "flag_ic": 31, "flag_id": 31, "flag_i": 31, "flag_il": 31, "flag_im": 31, "flag_in": 31, "flag_io": 31, "flag_iq": 31, "flag_ir": 31, "flag_it": 31, "flag_j": 31, "flag_jm": 31, "flag_jo": 31, "flag_jp": 31, "flag_k": 31, "flag_kg": 31, "flag_kh": 31, "flag_ki": 31, "flag_km": 31, "flag_kn": 31, "flag_kp": 31, "flag_kr": 31, "flag_kw": 31, "flag_kz": 31, "flag_la": 31, "flag_lb": 31, "flag_lc": 31, "flag_li": 31, "flag_lk": 31, "flag_lr": 31, "flag_l": 31, "flag_lt": 31, "flag_lu": 31, "flag_lv": 31, "flag_ma": 31, "flag_mc": 31, "flag_md": 31, "flag_m": 31, "flag_mf": 31, "flag_mg": 31, "flag_mh": 31, "flag_mk": 31, "flag_ml": 31, "flag_mm": 31, "flag_mn": 31, "flag_mo": 31, "flag_mp": 31, "flag_mq": 31, "flag_mr": 31, "flag_mt": 31, "flag_mu": 31, "flag_mv": 31, "flag_mw": 31, "flag_mx": 31, "flag_mi": 31, "flag_mz": 31, "flag_na": 31, "flag_nc": 31, "flag_n": 31, "flag_nf": 31, "flag_ng": 31, "flag_ni": 31, "flag_nl": 31, "flag_no": 31, "flag_np": 31, "flag_nr": 31, "flag_nu": 31, "flag_nz": 31, "flag_om": 31, "flag_pa": 31, "flag_p": 31, "flag_pf": 31, "flag_pg": 31, "flag_ph": 31, "flag_pk": 31, "flag_pl": 31, "flag_pm": 31, "flag_pn": 31, "flag_pr": 31, "flag_pt": 31, "flag_pw": 31, "flag_pi": 31, "flag_qa": 31, "flag_r": 31, "flag_ro": 31, "flag_ru": 31, "flag_rw": 31, "flag_sa": 31, "flag_sb": 31, "flag_sc": 31, "flag_sd": 31, "flag_s": 31, "flag_sg": 31, "flag_sh": 31, "flag_si": 31, "flag_sj": 31, "flag_sk": 31, "flag_sl": 31, "flag_sm": 31, "flag_sn": 31, "flag_so": 31, "flag_sr": 31, "flag_ss": 31, "flag_st": 31, "flag_sv": 31, "flag_sx": 31, "flag_sz": 31, "flag_ta": 31, "flag_tc": 31, "flag_td": 31, "flag_tf": 31, "flag_tg": 31, "flag_th": 31, "flag_tj": 31, "flag_tk": 31, "flag_tl": 31, "flag_tm": 31, "flag_tn": 31, "flag_to": 31, "flag_tr": 31, "flag_tt": 31, "flag_tv": 31, "flag_tw": 31, "flag_tz": 31, "flag_ua": 31, "flag_ug": 31, "flag_um": 31, "flag_u": 31, "flag_ui": 31, "flag_uz": 31, "flag_va": 31, "flag_vc": 31, "flag_v": 31, "flag_vg": 31, "flag_vi": 31, "flag_vn": 31, "flag_vu": 31, "flag_wf": 31, "flag_whit": 31, "flag_w": 31, "flag_xk": 31, "flag_y": 31, "flag_yt": 31, "flag_za": 31, "flag_zm": 31, "flag_zw": 31, "flag": [31, 47, 133, 135, 150, 161, 172, 202, 208, 211, 215, 218, 221, 246, 249, 260, 262, 276, 303, 422, 423, 424, 429, 432, 618, 632, 709, 719, 725, 734, 748, 771, 774, 776, 864, 866, 895, 896, 897, 899, 913, 934, 938, 999], "flame": [31, 136], "flamingo": 31, "flan": 31, "flashlight": 31, "flatbread": 31, "fleur": 31, "li": [31, 129, 225, 571], "fleur_de_li": 31, "flight_arriv": 31, "flight_departur": 31, "floppy_disk": 31, "flower_playing_card": 31, "fly": [31, 792, 863], "flying_disc": 31, "flying_sauc": 31, "fm": 31, "fo": 31, "fog": 31, "foggi": 31, "fondu": 31, "foot": [31, 68, 371, 828], "foot_dark_skin_ton": 31, "foot_light_skin_ton": 31, "foot_medium_dark_skin_ton": 31, "foot_medium_light_skin_ton": 31, "foot_medium_skin_ton": 31, "foot_tone1": 31, "foot_tone2": 31, "foot_tone3": 31, "foot_tone4": 31, "foot_tone5": 31, "footbal": 31, "footprint": [31, 165, 988], "fork_and_knif": 31, "fork_and_knife_with_pl": 31, "fork_knife_pl": 31, "fortune_cooki": 31, "fountain": 31, "fountain_pen": 31, "four": [31, 34, 64, 132, 137, 153, 165, 166, 169, 176, 183, 184, 192, 208, 213, 215, 225, 228, 231, 242, 246, 249, 263, 266, 267, 273, 310, 766, 832, 1002, 1010, 1063, 1064, 1072, 1098, 1121], "four_leaf_clov": 31, "fox": [31, 395], "fox_fac": 31, "fr": [31, 144], "frame_photo": 31, "frame_with_pictur": 31, "framed_pictur": 31, "franc": 31, "french_bread": 31, "french_guiana": 31, "french_polynesia": 31, "french_southern_territori": 31, "fried_egg": 31, "fried_shrimp": 31, "fri": 31, "frog": 31, "frowning2": 31, "frown": [31, 34, 68, 1118], "frowning_fac": 31, "frowning_man": 31, "frowning_woman": 31, "fuelpump": 31, "full_moon": 31, "full_moon_with_fac": 31, "funeral_urn": 31, "ga": 31, "gabon": 31, "gambia": 31, "game_di": 31, "garlic": 31, "gay_pride_flag": 31, "gb": [31, 894], "gd": 31, "ge": [31, 34], "gear": 31, "gem": 31, "gemini": 31, "geni": 31, "georgia": 31, "germani": [31, 133, 134, 328], "gf": 31, "gg": [31, 34, 37], "gh": [31, 129, 1086], "ghana": 31, "ghost": 31, "gi": [31, 129, 216], "gibraltar": 31, "gift": [31, 169, 200], "gift_heart": 31, "giraff": 31, "girl": 31, "girl_tone1": 31, "girl_tone2": 31, "girl_tone3": 31, "girl_tone4": 31, "girl_tone5": 31, "gl": [31, 34], "glass_of_milk": 31, "globe_with_meridian": 31, "glove": 31, "gm": 31, "gn": 31, "goal": [31, 41, 67, 133, 252, 255, 295, 419, 429, 698, 793, 794, 956, 965], "goal_net": 31, "goat": 31, "goggl": 31, "golf": 31, "golfer": 31, "golfing_man": 31, "golfing_woman": 31, "gorilla": 31, "gp": 31, "gq": 31, "gr": [31, 273, 1077], "grandma": 31, "grandma_tone1": 31, "grandma_tone2": 31, "grandma_tone3": 31, "grandma_tone4": 31, "grandma_tone5": 31, "grape": 31, "great_britain": 31, "greec": 31, "green_appl": 31, "green_book": 31, "green_circl": 31, "green_heart": 31, "green_salad": 31, "green_squar": 31, "greenland": 31, "grenada": 31, "grey_exclam": 31, "grey_quest": 31, "grin": 31, "gu": 31, "guadeloup": 31, "guam": 31, "guard": [31, 195, 211, 427, 706, 707, 709], "guard_tone1": 31, "guard_tone2": 31, "guard_tone3": 31, "guard_tone4": 31, "guard_tone5": 31, "guardsman": 31, "guardsman_tone1": 31, "guardsman_tone2": 31, "guardsman_tone3": 31, "guardsman_tone4": 31, "guardsman_tone5": 31, "guardswoman": 31, "guatemala": 31, "guernsei": 31, "guide_dog": 31, "guinea": 31, "guinea_bissau": 31, "guitar": 31, "gun": 31, "guyana": 31, "gw": 31, "gy": 31, "haircut": 31, "haircut_man": 31, "haircut_tone1": 31, "haircut_tone2": 31, "haircut_tone3": 31, "haircut_tone4": 31, "haircut_tone5": 31, "haircut_woman": 31, "haiti": 31, "hamburg": 31, "hammer": [31, 133, 209, 249, 746, 756], "hammer_and_pick": 31, "hammer_and_wrench": 31, "hammer_pick": 31, "hamster": 31, "hand": [31, 129, 141, 148, 153, 160, 169, 184, 195, 211, 230, 257, 318, 345, 356, 375, 377, 440, 459, 527, 538, 554, 556, 557, 683, 810, 826, 871, 872, 888, 916, 950, 968, 983, 990, 1118, 1124, 1136], "hand_splai": 31, "hand_splayed_tone1": 31, "hand_splayed_tone2": 31, "hand_splayed_tone3": 31, "hand_splayed_tone4": 31, "hand_splayed_tone5": 31, "hand_with_index_and_middle_finger_cross": 31, "hand_with_index_and_middle_fingers_crossed_tone1": 31, "hand_with_index_and_middle_fingers_crossed_tone2": 31, "hand_with_index_and_middle_fingers_crossed_tone3": 31, "hand_with_index_and_middle_fingers_crossed_tone4": 31, "hand_with_index_and_middle_fingers_crossed_tone5": 31, "handbag": 31, "handbal": 31, "handball_tone1": 31, "handball_tone2": 31, "handball_tone3": 31, "handball_tone4": 31, "handball_tone5": 31, "handshak": [31, 707], "handshake_tone1": 31, "handshake_tone2": 31, "handshake_tone3": 31, "handshake_tone4": 31, "handshake_tone5": 31, "hankei": 31, "hash": [31, 165, 171, 172, 183, 189, 202, 208, 209, 212, 216, 218, 221, 225, 246, 253, 267, 310, 430, 766, 1012, 1093], "hatched_chick": 31, "hatching_chick": 31, "head_bandag": 31, "headphon": 31, "headston": 31, "health_work": 31, "health_worker_dark_skin_ton": 31, "health_worker_light_skin_ton": 31, "health_worker_medium_dark_skin_ton": 31, "health_worker_medium_light_skin_ton": 31, "health_worker_medium_skin_ton": 31, "health_worker_tone1": 31, "health_worker_tone2": 31, "health_worker_tone3": 31, "health_worker_tone4": 31, "health_worker_tone5": 31, "hear_no_evil": 31, "heart_decor": 31, "heart_exclam": 31, "heart_ey": 31, "heart_eyes_cat": 31, "heart_on_fir": 31, "heartbeat": 31, "heartpuls": 31, "heavy_check_mark": 31, "heavy_division_sign": 31, "heavy_dollar_sign": 31, "heavy_heart_exclam": 31, "heavy_heart_exclamation_mark_orna": 31, "heavy_minus_sign": 31, "heavy_multiplication_x": 31, "heavy_plus_sign": 31, "hedgehog": 31, "helicopt": 31, "helmet_with_cross": 31, "helmet_with_white_cross": 31, "herb": 31, "hibiscu": 31, "high_bright": 31, "high_heel": 31, "hiking_boot": 31, "hindu_templ": 31, "hippopotamu": 31, "hk": 31, "hn": 31, "hocho": 31, "hockei": 31, "hole": [31, 211, 719, 862, 892, 901, 902, 903, 920, 933], "hondura": 31, "honey_pot": 31, "hong_kong": 31, "hook": [31, 33, 37, 184, 202, 208, 218, 221, 251, 284, 411, 446, 702, 725], "hors": 31, "horse_rac": 31, "horse_racing_tone1": 31, "horse_racing_tone2": 31, "horse_racing_tone3": 31, "horse_racing_tone4": 31, "horse_racing_tone5": 31, "hospit": 31, "hot_dog": 31, "hot_fac": 31, "hot_pepp": 31, "hotdog": 31, "hotel": [31, 138, 328], "hotspr": 31, "hourglass": 31, "hourglass_flowing_sand": 31, "house_abandon": 31, "house_build": 31, "house_with_garden": 31, "hr": 31, "ht": 31, "hu": [31, 301, 302, 319], "hug": 31, "hugging_fac": 31, "hungari": 31, "hush": 31, "hut": 31, "ic": [31, 356, 437, 466, 1117], "ice_cream": 31, "ice_cub": 31, "ice_hockei": 31, "ice_sk": 31, "icecream": 31, "iceland": 31, "id": [31, 41, 45, 106, 109, 110, 135, 138, 148, 152, 155, 165, 166, 176, 183, 189, 202, 205, 208, 215, 218, 219, 221, 228, 231, 235, 243, 246, 253, 259, 263, 267, 273, 278, 285, 305, 426, 461, 462, 463, 475, 476, 477, 494, 730, 762, 764, 786, 793, 794, 799, 801, 810, 811, 812, 822, 829, 850, 852, 853, 864, 870, 872, 879, 898, 908, 950, 977, 988, 1004, 1042, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1070, 1072, 1090, 1134], "ideograph_advantag": 31, "ie": 31, "il": [31, 143], "imp": 31, "inbox_trai": 31, "incoming_envelop": 31, "india": [31, 193, 242, 266, 1064], "indonesia": 31, "infin": [31, 172, 221, 969, 970], "information_desk_person": 31, "information_desk_person_tone1": 31, "information_desk_person_tone2": 31, "information_desk_person_tone3": 31, "information_desk_person_tone4": 31, "information_desk_person_tone5": 31, "\u2139": 31, "information_sourc": 31, "interrobang": 31, "iphon": 31, "iq": 31, "ir": [31, 826], "iran": 31, "iraq": 31, "ireland": 31, "island": 31, "isle_of_man": 31, "israel": [31, 193, 242, 1064], "itali": 31, "izakaya_lantern": 31, "jack_o_lantern": 31, "jamaica": 31, "japan": 31, "japanese_castl": 31, "japanese_goblin": 31, "japanese_ogr": 31, "jean": 31, "jersei": 31, "jigsaw": 31, "jm": 31, "jo": [31, 176, 189, 202, 205, 215, 218, 221, 225, 228, 267, 273], "jordan": 31, "joi": 31, "joy_cat": 31, "joystick": 31, "jp": 31, "judg": 31, "judge_dark_skin_ton": 31, "judge_light_skin_ton": 31, "judge_medium_dark_skin_ton": 31, "judge_medium_light_skin_ton": 31, "judge_medium_skin_ton": 31, "judge_tone1": 31, "judge_tone2": 31, "judge_tone3": 31, "judge_tone4": 31, "judge_tone5": 31, "juggler": 31, "juggler_tone1": 31, "juggler_tone2": 31, "juggler_tone3": 31, "juggler_tone4": 31, "juggler_tone5": 31, "juggl": 31, "juggling_tone1": 31, "juggling_tone2": 31, "juggling_tone3": 31, "juggling_tone4": 31, "juggling_tone5": 31, "kaaba": 31, "kangaroo": 31, "karate_uniform": 31, "kayak": 31, "kazakhstan": 31, "ke": 31, "kenya": 31, "key2": 31, "keyboard": [31, 310, 808, 858], "keycap_ten": 31, "kg": 31, "kh": 31, "ki": [31, 174], "kick_scoot": 31, "kimono": 31, "kiribati": 31, "kiss_dark_skin_ton": 31, "kiss_light_skin_ton": 31, "kiss_man_man_dark_skin_ton": 31, "kiss_man_man_dark_skin_tone_light_skin_ton": 31, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 31, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 31, "kiss_man_man_dark_skin_tone_medium_skin_ton": 31, "kiss_man_man_light_skin_ton": 31, "kiss_man_man_light_skin_tone_dark_skin_ton": 31, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 31, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 31, "kiss_man_man_light_skin_tone_medium_skin_ton": 31, "kiss_man_man_medium_dark_skin_ton": 31, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 31, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 31, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 31, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 31, "kiss_man_man_medium_light_skin_ton": 31, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 31, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 31, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 31, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 31, "kiss_man_man_medium_skin_ton": 31, "kiss_man_man_medium_skin_tone_dark_skin_ton": 31, "kiss_man_man_medium_skin_tone_light_skin_ton": 31, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 31, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 31, "kiss_man_man_tone1": 31, "kiss_man_man_tone1_tone2": 31, "kiss_man_man_tone1_tone3": 31, "kiss_man_man_tone1_tone4": 31, "kiss_man_man_tone1_tone5": 31, "kiss_man_man_tone2": 31, "kiss_man_man_tone2_tone1": 31, "kiss_man_man_tone2_tone3": 31, "kiss_man_man_tone2_tone4": 31, "kiss_man_man_tone2_tone5": 31, "kiss_man_man_tone3": 31, "kiss_man_man_tone3_tone1": 31, "kiss_man_man_tone3_tone2": 31, "kiss_man_man_tone3_tone4": 31, "kiss_man_man_tone3_tone5": 31, "kiss_man_man_tone4": 31, "kiss_man_man_tone4_tone1": 31, "kiss_man_man_tone4_tone2": 31, "kiss_man_man_tone4_tone3": 31, "kiss_man_man_tone4_tone5": 31, "kiss_man_man_tone5": 31, "kiss_man_man_tone5_tone1": 31, "kiss_man_man_tone5_tone2": 31, "kiss_man_man_tone5_tone3": 31, "kiss_man_man_tone5_tone4": 31, "kiss_medium_dark_skin_ton": 31, "kiss_medium_light_skin_ton": 31, "kiss_medium_skin_ton": 31, "kiss_mm": 31, "kiss_person_person_dark_skin_tone_light_skin_ton": 31, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 31, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 31, "kiss_person_person_dark_skin_tone_medium_skin_ton": 31, "kiss_person_person_light_skin_tone_dark_skin_ton": 31, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 31, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 31, "kiss_person_person_light_skin_tone_medium_skin_ton": 31, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 31, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 31, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 31, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 31, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 31, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 31, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 31, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 31, "kiss_person_person_medium_skin_tone_dark_skin_ton": 31, "kiss_person_person_medium_skin_tone_light_skin_ton": 31, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 31, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 31, "kiss_person_person_tone1_tone2": 31, "kiss_person_person_tone1_tone3": 31, "kiss_person_person_tone1_tone4": 31, "kiss_person_person_tone1_tone5": 31, "kiss_person_person_tone2_tone1": 31, "kiss_person_person_tone2_tone3": 31, "kiss_person_person_tone2_tone4": 31, "kiss_person_person_tone2_tone5": 31, "kiss_person_person_tone3_tone1": 31, "kiss_person_person_tone3_tone2": 31, "kiss_person_person_tone3_tone4": 31, "kiss_person_person_tone3_tone5": 31, "kiss_person_person_tone4_tone1": 31, "kiss_person_person_tone4_tone2": 31, "kiss_person_person_tone4_tone3": 31, "kiss_person_person_tone4_tone5": 31, "kiss_person_person_tone5_tone1": 31, "kiss_person_person_tone5_tone2": 31, "kiss_person_person_tone5_tone3": 31, "kiss_person_person_tone5_tone4": 31, "kiss_tone1": 31, "kiss_tone2": 31, "kiss_tone3": 31, "kiss_tone4": 31, "kiss_tone5": 31, "kiss_woman_man": 31, "kiss_woman_man_dark_skin_ton": 31, "kiss_woman_man_dark_skin_tone_light_skin_ton": 31, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 31, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 31, "kiss_woman_man_light_skin_ton": 31, "kiss_woman_man_light_skin_tone_dark_skin_ton": 31, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 31, "kiss_woman_man_light_skin_tone_medium_skin_ton": 31, "kiss_woman_man_medium_dark_skin_ton": 31, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 31, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 31, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 31, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 31, "kiss_woman_man_medium_light_skin_ton": 31, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 31, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 31, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 31, "kiss_woman_man_medium_skin_ton": 31, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 31, "kiss_woman_man_medium_skin_tone_light_skin_ton": 31, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 31, "kiss_woman_man_tone1": 31, "kiss_woman_man_tone1_tone2": 31, "kiss_woman_man_tone1_tone3": 31, "kiss_woman_man_tone1_tone4": 31, "kiss_woman_man_tone1_tone5": 31, "kiss_woman_man_tone2": 31, "kiss_woman_man_tone2_tone1": 31, "kiss_woman_man_tone2_tone3": 31, "kiss_woman_man_tone2_tone4": 31, "kiss_woman_man_tone2_tone5": 31, "kiss_woman_man_tone3": 31, "kiss_woman_man_tone3_tone1": 31, "kiss_woman_man_tone3_tone2": 31, "kiss_woman_man_tone3_tone4": 31, "kiss_woman_man_tone3_tone5": 31, "kiss_woman_man_tone4": 31, "kiss_woman_man_tone4_tone1": 31, "kiss_woman_man_tone4_tone2": 31, "kiss_woman_man_tone4_tone3": 31, "kiss_woman_man_tone4_tone5": 31, "kiss_woman_man_tone5": 31, "kiss_woman_man_tone5_tone1": 31, "kiss_woman_man_tone5_tone2": 31, "kiss_woman_man_tone5_tone3": 31, "kiss_woman_man_tone5_tone4": 31, "kiss_woman_woman_dark_skin_ton": 31, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 31, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 31, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 31, "kiss_woman_woman_light_skin_ton": 31, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 31, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 31, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 31, "kiss_woman_woman_medium_dark_skin_ton": 31, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 31, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 31, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 31, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 31, "kiss_woman_woman_medium_light_skin_ton": 31, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 31, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 31, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 31, "kiss_woman_woman_medium_skin_ton": 31, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 31, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 31, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 31, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 31, "kiss_woman_woman_tone1": 31, "kiss_woman_woman_tone1_tone2": 31, "kiss_woman_woman_tone1_tone3": 31, "kiss_woman_woman_tone1_tone4": 31, "kiss_woman_woman_tone1_tone5": 31, "kiss_woman_woman_tone2": 31, "kiss_woman_woman_tone2_tone1": 31, "kiss_woman_woman_tone2_tone3": 31, "kiss_woman_woman_tone2_tone4": 31, "kiss_woman_woman_tone2_tone5": 31, "kiss_woman_woman_tone3": 31, "kiss_woman_woman_tone3_tone1": 31, "kiss_woman_woman_tone3_tone2": 31, "kiss_woman_woman_tone3_tone4": 31, "kiss_woman_woman_tone3_tone5": 31, "kiss_woman_woman_tone4": 31, "kiss_woman_woman_tone4_tone1": 31, "kiss_woman_woman_tone4_tone2": 31, "kiss_woman_woman_tone4_tone3": 31, "kiss_woman_woman_tone4_tone5": 31, "kiss_woman_woman_tone5": 31, "kiss_woman_woman_tone5_tone1": 31, "kiss_woman_woman_tone5_tone2": 31, "kiss_woman_woman_tone5_tone3": 31, "kiss_woman_woman_tone5_tone4": 31, "kiss_ww": 31, "kissing_cat": 31, "kissing_closed_ey": 31, "kissing_smiling_ey": 31, "kite": 31, "kiwi": 31, "kiwi_fruit": 31, "kiwifruit": 31, "km": [31, 154, 156], "kn": 31, "knife": [31, 725, 892, 1118], "knot": 31, "koala": 31, "koko": 31, "korea": 31, "kosovo": 31, "kp": 31, "kr": 31, "kuwait": 31, "kw": [31, 202, 208, 218, 221], "ky": 31, "kyrgyzstan": 31, "kz": 31, "la": 31, "lab_coat": 31, "label": [31, 38, 39, 57, 154, 156, 203, 216, 230, 233, 266, 272, 367, 372, 379, 385, 389, 392, 396, 399, 405, 409, 414, 415, 636, 637, 675, 716, 718, 719, 746, 1064, 1071, 1083, 1086], "lacross": 31, "ladder": 31, "lady_beetl": 31, "lao": 31, "large_blue_circl": 31, "large_blue_diamond": 31, "large_orange_diamond": 31, "last_quarter_moon": 31, "last_quarter_moon_with_fac": 31, "latin_cross": 31, "latvia": 31, "laugh": 31, "lb": 31, "lc": [31, 170], "leafy_green": 31, "leav": [31, 48, 64, 130, 133, 134, 140, 143, 173, 202, 225, 262, 321, 539, 541, 550, 551, 566, 568, 569, 714, 717, 729, 734, 744, 766, 871, 896, 916, 1004, 1077], "lebanon": 31, "ledger": 31, "left_facing_fist": 31, "left_facing_fist_tone1": 31, "left_facing_fist_tone2": 31, "left_facing_fist_tone3": 31, "left_facing_fist_tone4": 31, "left_facing_fist_tone5": 31, "left_fist": 31, "left_fist_tone1": 31, "left_fist_tone2": 31, "left_fist_tone3": 31, "left_fist_tone4": 31, "left_fist_tone5": 31, "left_luggag": 31, "left_right_arrow": 31, "left_speech_bubbl": 31, "leftwards_arrow_with_hook": 31, "leg": [31, 34], "leg_dark_skin_ton": 31, "leg_light_skin_ton": 31, "leg_medium_dark_skin_ton": 31, "leg_medium_light_skin_ton": 31, "leg_medium_skin_ton": 31, "leg_tone1": 31, "leg_tone2": 31, "leg_tone3": 31, "leg_tone4": 31, "leg_tone5": 31, "lemon": 31, "leo": [31, 301, 302, 319], "leopard": 31, "lesotho": 31, "level_slid": 31, "levit": 31, "levitate_tone1": 31, "levitate_tone2": 31, "levitate_tone3": 31, "levitate_tone4": 31, "levitate_tone5": 31, "liar": 31, "liberia": 31, "libra": 31, "libya": 31, "liechtenstein": 31, "lifter": 31, "lifter_tone1": 31, "lifter_tone2": 31, "lifter_tone3": 31, "lifter_tone4": 31, "lifter_tone5": 31, "light_rail": 31, "linked_paperclip": 31, "lion": 31, "lion_fac": 31, "lip": 31, "lipstick": 31, "lithuania": 31, "lizard": 31, "lk": 31, "llama": 31, "lobster": 31, "lock": [31, 133, 135, 165, 169, 202, 208, 211, 218, 221, 237, 238, 240, 249, 270, 283, 284, 291, 319, 393, 433, 513, 696, 702, 705, 707, 708, 714, 718, 719, 756, 764, 769, 774, 803, 879, 911, 916, 918, 926, 933, 974, 1064, 1118, 1130, 1133], "lock_with_ink_pen": 31, "lollipop": 31, "long_drum": 31, "loud_sound": 31, "loudspeak": 31, "love_hotel": 31, "love_lett": 31, "love_you_gestur": 31, "love_you_gesture_dark_skin_ton": 31, "love_you_gesture_light_skin_ton": 31, "love_you_gesture_medium_dark_skin_ton": 31, "love_you_gesture_medium_light_skin_ton": 31, "love_you_gesture_medium_skin_ton": 31, "love_you_gesture_tone1": 31, "love_you_gesture_tone2": 31, "love_you_gesture_tone3": 31, "love_you_gesture_tone4": 31, "love_you_gesture_tone5": 31, "low_bright": 31, "lower_left_ballpoint_pen": 31, "lower_left_crayon": 31, "lower_left_fountain_pen": 31, "lower_left_paintbrush": 31, "lr": 31, "lu": 31, "luggag": 31, "lung": 31, "luxembourg": 31, "lv": 31, "ly": 31, "lying_fac": 31, "ma": 31, "macau": 31, "macedonia": 31, "madagascar": 31, "mag": 31, "mag_right": 31, "mage": 31, "mage_dark_skin_ton": 31, "mage_light_skin_ton": 31, "mage_medium_dark_skin_ton": 31, "mage_medium_light_skin_ton": 31, "mage_medium_skin_ton": 31, "mage_tone1": 31, "mage_tone2": 31, "mage_tone3": 31, "mage_tone4": 31, "mage_tone5": 31, "magic_wand": 31, "magnet": 31, "mahjong": 31, "mailbox": 31, "mailbox_clos": 31, "mailbox_with_mail": 31, "mailbox_with_no_mail": 31, "malawi": 31, "malaysia": 31, "maldiv": 31, "male_danc": 31, "male_dancer_tone1": 31, "male_dancer_tone2": 31, "male_dancer_tone3": 31, "male_dancer_tone4": 31, "male_dancer_tone5": 31, "male_detect": 31, "male_sign": 31, "mali": 31, "malta": 31, "mammoth": 31, "man_artist": 31, "man_artist_dark_skin_ton": 31, "man_artist_light_skin_ton": 31, "man_artist_medium_dark_skin_ton": 31, "man_artist_medium_light_skin_ton": 31, "man_artist_medium_skin_ton": 31, "man_artist_tone1": 31, "man_artist_tone2": 31, "man_artist_tone3": 31, "man_artist_tone4": 31, "man_artist_tone5": 31, "man_astronaut": 31, "man_astronaut_dark_skin_ton": 31, "man_astronaut_light_skin_ton": 31, "man_astronaut_medium_dark_skin_ton": 31, "man_astronaut_medium_light_skin_ton": 31, "man_astronaut_medium_skin_ton": 31, "man_astronaut_tone1": 31, "man_astronaut_tone2": 31, "man_astronaut_tone3": 31, "man_astronaut_tone4": 31, "man_astronaut_tone5": 31, "man_bald": 31, "man_bald_dark_skin_ton": 31, "man_bald_light_skin_ton": 31, "man_bald_medium_dark_skin_ton": 31, "man_bald_medium_light_skin_ton": 31, "man_bald_medium_skin_ton": 31, "man_bald_tone1": 31, "man_bald_tone2": 31, "man_bald_tone3": 31, "man_bald_tone4": 31, "man_bald_tone5": 31, "man_beard": 31, "man_bik": 31, "man_biking_dark_skin_ton": 31, "man_biking_light_skin_ton": 31, "man_biking_medium_dark_skin_ton": 31, "man_biking_medium_light_skin_ton": 31, "man_biking_medium_skin_ton": 31, "man_biking_tone1": 31, "man_biking_tone2": 31, "man_biking_tone3": 31, "man_biking_tone4": 31, "man_biking_tone5": 31, "man_bouncing_bal": 31, "man_bouncing_ball_dark_skin_ton": 31, "man_bouncing_ball_light_skin_ton": 31, "man_bouncing_ball_medium_dark_skin_ton": 31, "man_bouncing_ball_medium_light_skin_ton": 31, "man_bouncing_ball_medium_skin_ton": 31, "man_bouncing_ball_tone1": 31, "man_bouncing_ball_tone2": 31, "man_bouncing_ball_tone3": 31, "man_bouncing_ball_tone4": 31, "man_bouncing_ball_tone5": 31, "man_bow": 31, "man_bowing_dark_skin_ton": 31, "man_bowing_light_skin_ton": 31, "man_bowing_medium_dark_skin_ton": 31, "man_bowing_medium_light_skin_ton": 31, "man_bowing_medium_skin_ton": 31, "man_bowing_tone1": 31, "man_bowing_tone2": 31, "man_bowing_tone3": 31, "man_bowing_tone4": 31, "man_bowing_tone5": 31, "man_cartwheel": 31, "man_cartwheeling_dark_skin_ton": 31, "man_cartwheeling_light_skin_ton": 31, "man_cartwheeling_medium_dark_skin_ton": 31, "man_cartwheeling_medium_light_skin_ton": 31, "man_cartwheeling_medium_skin_ton": 31, "man_cartwheeling_tone1": 31, "man_cartwheeling_tone2": 31, "man_cartwheeling_tone3": 31, "man_cartwheeling_tone4": 31, "man_cartwheeling_tone5": 31, "man_climb": 31, "man_climbing_dark_skin_ton": 31, "man_climbing_light_skin_ton": 31, "man_climbing_medium_dark_skin_ton": 31, "man_climbing_medium_light_skin_ton": 31, "man_climbing_medium_skin_ton": 31, "man_climbing_tone1": 31, "man_climbing_tone2": 31, "man_climbing_tone3": 31, "man_climbing_tone4": 31, "man_climbing_tone5": 31, "man_construction_work": 31, "man_construction_worker_dark_skin_ton": 31, "man_construction_worker_light_skin_ton": 31, "man_construction_worker_medium_dark_skin_ton": 31, "man_construction_worker_medium_light_skin_ton": 31, "man_construction_worker_medium_skin_ton": 31, "man_construction_worker_tone1": 31, "man_construction_worker_tone2": 31, "man_construction_worker_tone3": 31, "man_construction_worker_tone4": 31, "man_construction_worker_tone5": 31, "man_cook": 31, "man_cook_dark_skin_ton": 31, "man_cook_light_skin_ton": 31, "man_cook_medium_dark_skin_ton": 31, "man_cook_medium_light_skin_ton": 31, "man_cook_medium_skin_ton": 31, "man_cook_tone1": 31, "man_cook_tone2": 31, "man_cook_tone3": 31, "man_cook_tone4": 31, "man_cook_tone5": 31, "man_curly_hair": 31, "man_curly_haired_dark_skin_ton": 31, "man_curly_haired_light_skin_ton": 31, "man_curly_haired_medium_dark_skin_ton": 31, "man_curly_haired_medium_light_skin_ton": 31, "man_curly_haired_medium_skin_ton": 31, "man_curly_haired_tone1": 31, "man_curly_haired_tone2": 31, "man_curly_haired_tone3": 31, "man_curly_haired_tone4": 31, "man_curly_haired_tone5": 31, "man_danc": 31, "man_dancing_tone1": 31, "man_dancing_tone2": 31, "man_dancing_tone3": 31, "man_dancing_tone4": 31, "man_dancing_tone5": 31, "man_dark_skin_tone_beard": 31, "man_detect": 31, "man_detective_dark_skin_ton": 31, "man_detective_light_skin_ton": 31, "man_detective_medium_dark_skin_ton": 31, "man_detective_medium_light_skin_ton": 31, "man_detective_medium_skin_ton": 31, "man_detective_tone1": 31, "man_detective_tone2": 31, "man_detective_tone3": 31, "man_detective_tone4": 31, "man_detective_tone5": 31, "man_elf": 31, "man_elf_dark_skin_ton": 31, "man_elf_light_skin_ton": 31, "man_elf_medium_dark_skin_ton": 31, "man_elf_medium_light_skin_ton": 31, "man_elf_medium_skin_ton": 31, "man_elf_tone1": 31, "man_elf_tone2": 31, "man_elf_tone3": 31, "man_elf_tone4": 31, "man_elf_tone5": 31, "man_facepalm": 31, "man_facepalming_dark_skin_ton": 31, "man_facepalming_light_skin_ton": 31, "man_facepalming_medium_dark_skin_ton": 31, "man_facepalming_medium_light_skin_ton": 31, "man_facepalming_medium_skin_ton": 31, "man_facepalming_tone1": 31, "man_facepalming_tone2": 31, "man_facepalming_tone3": 31, "man_facepalming_tone4": 31, "man_facepalming_tone5": 31, "man_factory_work": 31, "man_factory_worker_dark_skin_ton": 31, "man_factory_worker_light_skin_ton": 31, "man_factory_worker_medium_dark_skin_ton": 31, "man_factory_worker_medium_light_skin_ton": 31, "man_factory_worker_medium_skin_ton": 31, "man_factory_worker_tone1": 31, "man_factory_worker_tone2": 31, "man_factory_worker_tone3": 31, "man_factory_worker_tone4": 31, "man_factory_worker_tone5": 31, "man_fairi": 31, "man_fairy_dark_skin_ton": 31, "man_fairy_light_skin_ton": 31, "man_fairy_medium_dark_skin_ton": 31, "man_fairy_medium_light_skin_ton": 31, "man_fairy_medium_skin_ton": 31, "man_fairy_tone1": 31, "man_fairy_tone2": 31, "man_fairy_tone3": 31, "man_fairy_tone4": 31, "man_fairy_tone5": 31, "man_farm": 31, "man_farmer_dark_skin_ton": 31, "man_farmer_light_skin_ton": 31, "man_farmer_medium_dark_skin_ton": 31, "man_farmer_medium_light_skin_ton": 31, "man_farmer_medium_skin_ton": 31, "man_farmer_tone1": 31, "man_farmer_tone2": 31, "man_farmer_tone3": 31, "man_farmer_tone4": 31, "man_farmer_tone5": 31, "man_feeding_babi": 31, "man_feeding_baby_dark_skin_ton": 31, "man_feeding_baby_light_skin_ton": 31, "man_feeding_baby_medium_dark_skin_ton": 31, "man_feeding_baby_medium_light_skin_ton": 31, "man_feeding_baby_medium_skin_ton": 31, "man_feeding_baby_tone1": 31, "man_feeding_baby_tone2": 31, "man_feeding_baby_tone3": 31, "man_feeding_baby_tone4": 31, "man_feeding_baby_tone5": 31, "man_firefight": 31, "man_firefighter_dark_skin_ton": 31, "man_firefighter_light_skin_ton": 31, "man_firefighter_medium_dark_skin_ton": 31, "man_firefighter_medium_light_skin_ton": 31, "man_firefighter_medium_skin_ton": 31, "man_firefighter_tone1": 31, "man_firefighter_tone2": 31, "man_firefighter_tone3": 31, "man_firefighter_tone4": 31, "man_firefighter_tone5": 31, "man_frown": 31, "man_frowning_dark_skin_ton": 31, "man_frowning_light_skin_ton": 31, "man_frowning_medium_dark_skin_ton": 31, "man_frowning_medium_light_skin_ton": 31, "man_frowning_medium_skin_ton": 31, "man_frowning_tone1": 31, "man_frowning_tone2": 31, "man_frowning_tone3": 31, "man_frowning_tone4": 31, "man_frowning_tone5": 31, "man_geni": 31, "man_gesturing_no": 31, "man_gesturing_no_dark_skin_ton": 31, "man_gesturing_no_light_skin_ton": 31, "man_gesturing_no_medium_dark_skin_ton": 31, "man_gesturing_no_medium_light_skin_ton": 31, "man_gesturing_no_medium_skin_ton": 31, "man_gesturing_no_tone1": 31, "man_gesturing_no_tone2": 31, "man_gesturing_no_tone3": 31, "man_gesturing_no_tone4": 31, "man_gesturing_no_tone5": 31, "man_gesturing_ok": 31, "man_gesturing_ok_dark_skin_ton": 31, "man_gesturing_ok_light_skin_ton": 31, "man_gesturing_ok_medium_dark_skin_ton": 31, "man_gesturing_ok_medium_light_skin_ton": 31, "man_gesturing_ok_medium_skin_ton": 31, "man_gesturing_ok_tone1": 31, "man_gesturing_ok_tone2": 31, "man_gesturing_ok_tone3": 31, "man_gesturing_ok_tone4": 31, "man_gesturing_ok_tone5": 31, "man_getting_face_massag": 31, "man_getting_face_massage_dark_skin_ton": 31, "man_getting_face_massage_light_skin_ton": 31, "man_getting_face_massage_medium_dark_skin_ton": 31, "man_getting_face_massage_medium_light_skin_ton": 31, "man_getting_face_massage_medium_skin_ton": 31, "man_getting_face_massage_tone1": 31, "man_getting_face_massage_tone2": 31, "man_getting_face_massage_tone3": 31, "man_getting_face_massage_tone4": 31, "man_getting_face_massage_tone5": 31, "man_getting_haircut": 31, "man_getting_haircut_dark_skin_ton": 31, "man_getting_haircut_light_skin_ton": 31, "man_getting_haircut_medium_dark_skin_ton": 31, "man_getting_haircut_medium_light_skin_ton": 31, "man_getting_haircut_medium_skin_ton": 31, "man_getting_haircut_tone1": 31, "man_getting_haircut_tone2": 31, "man_getting_haircut_tone3": 31, "man_getting_haircut_tone4": 31, "man_getting_haircut_tone5": 31, "man_golf": 31, "man_golfing_dark_skin_ton": 31, "man_golfing_light_skin_ton": 31, "man_golfing_medium_dark_skin_ton": 31, "man_golfing_medium_light_skin_ton": 31, "man_golfing_medium_skin_ton": 31, "man_golfing_tone1": 31, "man_golfing_tone2": 31, "man_golfing_tone3": 31, "man_golfing_tone4": 31, "man_golfing_tone5": 31, "man_guard": 31, "man_guard_dark_skin_ton": 31, "man_guard_light_skin_ton": 31, "man_guard_medium_dark_skin_ton": 31, "man_guard_medium_light_skin_ton": 31, "man_guard_medium_skin_ton": 31, "man_guard_tone1": 31, "man_guard_tone2": 31, "man_guard_tone3": 31, "man_guard_tone4": 31, "man_guard_tone5": 31, "man_health_work": 31, "man_health_worker_dark_skin_ton": 31, "man_health_worker_light_skin_ton": 31, "man_health_worker_medium_dark_skin_ton": 31, "man_health_worker_medium_light_skin_ton": 31, "man_health_worker_medium_skin_ton": 31, "man_health_worker_tone1": 31, "man_health_worker_tone2": 31, "man_health_worker_tone3": 31, "man_health_worker_tone4": 31, "man_health_worker_tone5": 31, "man_in_business_suit_levit": 31, "man_in_business_suit_levitating_dark_skin_ton": 31, "man_in_business_suit_levitating_light_skin_ton": 31, "man_in_business_suit_levitating_medium_dark_skin_ton": 31, "man_in_business_suit_levitating_medium_light_skin_ton": 31, "man_in_business_suit_levitating_medium_skin_ton": 31, "man_in_business_suit_levitating_tone1": 31, "man_in_business_suit_levitating_tone2": 31, "man_in_business_suit_levitating_tone3": 31, "man_in_business_suit_levitating_tone4": 31, "man_in_business_suit_levitating_tone5": 31, "man_in_lotus_posit": 31, "man_in_lotus_position_dark_skin_ton": 31, "man_in_lotus_position_light_skin_ton": 31, "man_in_lotus_position_medium_dark_skin_ton": 31, "man_in_lotus_position_medium_light_skin_ton": 31, "man_in_lotus_position_medium_skin_ton": 31, "man_in_lotus_position_tone1": 31, "man_in_lotus_position_tone2": 31, "man_in_lotus_position_tone3": 31, "man_in_lotus_position_tone4": 31, "man_in_lotus_position_tone5": 31, "man_in_manual_wheelchair": 31, "man_in_manual_wheelchair_dark_skin_ton": 31, "man_in_manual_wheelchair_light_skin_ton": 31, "man_in_manual_wheelchair_medium_dark_skin_ton": 31, "man_in_manual_wheelchair_medium_light_skin_ton": 31, "man_in_manual_wheelchair_medium_skin_ton": 31, "man_in_manual_wheelchair_tone1": 31, "man_in_manual_wheelchair_tone2": 31, "man_in_manual_wheelchair_tone3": 31, "man_in_manual_wheelchair_tone4": 31, "man_in_manual_wheelchair_tone5": 31, "man_in_motorized_wheelchair": 31, "man_in_motorized_wheelchair_dark_skin_ton": 31, "man_in_motorized_wheelchair_light_skin_ton": 31, "man_in_motorized_wheelchair_medium_dark_skin_ton": 31, "man_in_motorized_wheelchair_medium_light_skin_ton": 31, "man_in_motorized_wheelchair_medium_skin_ton": 31, "man_in_motorized_wheelchair_tone1": 31, "man_in_motorized_wheelchair_tone2": 31, "man_in_motorized_wheelchair_tone3": 31, "man_in_motorized_wheelchair_tone4": 31, "man_in_motorized_wheelchair_tone5": 31, "man_in_steamy_room": 31, "man_in_steamy_room_dark_skin_ton": 31, "man_in_steamy_room_light_skin_ton": 31, "man_in_steamy_room_medium_dark_skin_ton": 31, "man_in_steamy_room_medium_light_skin_ton": 31, "man_in_steamy_room_medium_skin_ton": 31, "man_in_steamy_room_tone1": 31, "man_in_steamy_room_tone2": 31, "man_in_steamy_room_tone3": 31, "man_in_steamy_room_tone4": 31, "man_in_steamy_room_tone5": 31, "man_in_tuxedo": 31, "man_in_tuxedo_dark_skin_ton": 31, "man_in_tuxedo_light_skin_ton": 31, "man_in_tuxedo_medium_dark_skin_ton": 31, "man_in_tuxedo_medium_light_skin_ton": 31, "man_in_tuxedo_medium_skin_ton": 31, "man_in_tuxedo_tone1": 31, "man_in_tuxedo_tone2": 31, "man_in_tuxedo_tone3": 31, "man_in_tuxedo_tone4": 31, "man_in_tuxedo_tone5": 31, "man_judg": 31, "man_judge_dark_skin_ton": 31, "man_judge_light_skin_ton": 31, "man_judge_medium_dark_skin_ton": 31, "man_judge_medium_light_skin_ton": 31, "man_judge_medium_skin_ton": 31, "man_judge_tone1": 31, "man_judge_tone2": 31, "man_judge_tone3": 31, "man_judge_tone4": 31, "man_judge_tone5": 31, "man_juggl": 31, "man_juggling_dark_skin_ton": 31, "man_juggling_light_skin_ton": 31, "man_juggling_medium_dark_skin_ton": 31, "man_juggling_medium_light_skin_ton": 31, "man_juggling_medium_skin_ton": 31, "man_juggling_tone1": 31, "man_juggling_tone2": 31, "man_juggling_tone3": 31, "man_juggling_tone4": 31, "man_juggling_tone5": 31, "man_kneel": 31, "man_kneeling_dark_skin_ton": 31, "man_kneeling_light_skin_ton": 31, "man_kneeling_medium_dark_skin_ton": 31, "man_kneeling_medium_light_skin_ton": 31, "man_kneeling_medium_skin_ton": 31, "man_kneeling_tone1": 31, "man_kneeling_tone2": 31, "man_kneeling_tone3": 31, "man_kneeling_tone4": 31, "man_kneeling_tone5": 31, "man_lifting_weight": 31, "man_lifting_weights_dark_skin_ton": 31, "man_lifting_weights_light_skin_ton": 31, "man_lifting_weights_medium_dark_skin_ton": 31, "man_lifting_weights_medium_light_skin_ton": 31, "man_lifting_weights_medium_skin_ton": 31, "man_lifting_weights_tone1": 31, "man_lifting_weights_tone2": 31, "man_lifting_weights_tone3": 31, "man_lifting_weights_tone4": 31, "man_lifting_weights_tone5": 31, "man_light_skin_tone_beard": 31, "man_mag": 31, "man_mage_dark_skin_ton": 31, "man_mage_light_skin_ton": 31, "man_mage_medium_dark_skin_ton": 31, "man_mage_medium_light_skin_ton": 31, "man_mage_medium_skin_ton": 31, "man_mage_tone1": 31, "man_mage_tone2": 31, "man_mage_tone3": 31, "man_mage_tone4": 31, "man_mage_tone5": 31, "man_mechan": 31, "man_mechanic_dark_skin_ton": 31, "man_mechanic_light_skin_ton": 31, "man_mechanic_medium_dark_skin_ton": 31, "man_mechanic_medium_light_skin_ton": 31, "man_mechanic_medium_skin_ton": 31, "man_mechanic_tone1": 31, "man_mechanic_tone2": 31, "man_mechanic_tone3": 31, "man_mechanic_tone4": 31, "man_mechanic_tone5": 31, "man_medium_dark_skin_tone_beard": 31, "man_medium_light_skin_tone_beard": 31, "man_medium_skin_tone_beard": 31, "man_mountain_bik": 31, "man_mountain_biking_dark_skin_ton": 31, "man_mountain_biking_light_skin_ton": 31, "man_mountain_biking_medium_dark_skin_ton": 31, "man_mountain_biking_medium_light_skin_ton": 31, "man_mountain_biking_medium_skin_ton": 31, "man_mountain_biking_tone1": 31, "man_mountain_biking_tone2": 31, "man_mountain_biking_tone3": 31, "man_mountain_biking_tone4": 31, "man_mountain_biking_tone5": 31, "man_office_work": 31, "man_office_worker_dark_skin_ton": 31, "man_office_worker_light_skin_ton": 31, "man_office_worker_medium_dark_skin_ton": 31, "man_office_worker_medium_light_skin_ton": 31, "man_office_worker_medium_skin_ton": 31, "man_office_worker_tone1": 31, "man_office_worker_tone2": 31, "man_office_worker_tone3": 31, "man_office_worker_tone4": 31, "man_office_worker_tone5": 31, "man_pilot": 31, "man_pilot_dark_skin_ton": 31, "man_pilot_light_skin_ton": 31, "man_pilot_medium_dark_skin_ton": 31, "man_pilot_medium_light_skin_ton": 31, "man_pilot_medium_skin_ton": 31, "man_pilot_tone1": 31, "man_pilot_tone2": 31, "man_pilot_tone3": 31, "man_pilot_tone4": 31, "man_pilot_tone5": 31, "man_playing_handbal": 31, "man_playing_handball_dark_skin_ton": 31, "man_playing_handball_light_skin_ton": 31, "man_playing_handball_medium_dark_skin_ton": 31, "man_playing_handball_medium_light_skin_ton": 31, "man_playing_handball_medium_skin_ton": 31, "man_playing_handball_tone1": 31, "man_playing_handball_tone2": 31, "man_playing_handball_tone3": 31, "man_playing_handball_tone4": 31, "man_playing_handball_tone5": 31, "man_playing_water_polo": 31, "man_playing_water_polo_dark_skin_ton": 31, "man_playing_water_polo_light_skin_ton": 31, "man_playing_water_polo_medium_dark_skin_ton": 31, "man_playing_water_polo_medium_light_skin_ton": 31, "man_playing_water_polo_medium_skin_ton": 31, "man_playing_water_polo_tone1": 31, "man_playing_water_polo_tone2": 31, "man_playing_water_polo_tone3": 31, "man_playing_water_polo_tone4": 31, "man_playing_water_polo_tone5": 31, "man_police_offic": 31, "man_police_officer_dark_skin_ton": 31, "man_police_officer_light_skin_ton": 31, "man_police_officer_medium_dark_skin_ton": 31, "man_police_officer_medium_light_skin_ton": 31, "man_police_officer_medium_skin_ton": 31, "man_police_officer_tone1": 31, "man_police_officer_tone2": 31, "man_police_officer_tone3": 31, "man_police_officer_tone4": 31, "man_police_officer_tone5": 31, "man_pout": 31, "man_pouting_dark_skin_ton": 31, "man_pouting_light_skin_ton": 31, "man_pouting_medium_dark_skin_ton": 31, "man_pouting_medium_light_skin_ton": 31, "man_pouting_medium_skin_ton": 31, "man_pouting_tone1": 31, "man_pouting_tone2": 31, "man_pouting_tone3": 31, "man_pouting_tone4": 31, "man_pouting_tone5": 31, "man_raising_hand": 31, "man_raising_hand_dark_skin_ton": 31, "man_raising_hand_light_skin_ton": 31, "man_raising_hand_medium_dark_skin_ton": 31, "man_raising_hand_medium_light_skin_ton": 31, "man_raising_hand_medium_skin_ton": 31, "man_raising_hand_tone1": 31, "man_raising_hand_tone2": 31, "man_raising_hand_tone3": 31, "man_raising_hand_tone4": 31, "man_raising_hand_tone5": 31, "man_red_hair": 31, "man_red_haired_dark_skin_ton": 31, "man_red_haired_light_skin_ton": 31, "man_red_haired_medium_dark_skin_ton": 31, "man_red_haired_medium_light_skin_ton": 31, "man_red_haired_medium_skin_ton": 31, "man_red_haired_tone1": 31, "man_red_haired_tone2": 31, "man_red_haired_tone3": 31, "man_red_haired_tone4": 31, "man_red_haired_tone5": 31, "man_rowing_boat": 31, "man_rowing_boat_dark_skin_ton": 31, "man_rowing_boat_light_skin_ton": 31, "man_rowing_boat_medium_dark_skin_ton": 31, "man_rowing_boat_medium_light_skin_ton": 31, "man_rowing_boat_medium_skin_ton": 31, "man_rowing_boat_tone1": 31, "man_rowing_boat_tone2": 31, "man_rowing_boat_tone3": 31, "man_rowing_boat_tone4": 31, "man_rowing_boat_tone5": 31, "man_run": 31, "man_running_dark_skin_ton": 31, "man_running_light_skin_ton": 31, "man_running_medium_dark_skin_ton": 31, "man_running_medium_light_skin_ton": 31, "man_running_medium_skin_ton": 31, "man_running_tone1": 31, "man_running_tone2": 31, "man_running_tone3": 31, "man_running_tone4": 31, "man_running_tone5": 31, "man_scientist": 31, "man_scientist_dark_skin_ton": 31, "man_scientist_light_skin_ton": 31, "man_scientist_medium_dark_skin_ton": 31, "man_scientist_medium_light_skin_ton": 31, "man_scientist_medium_skin_ton": 31, "man_scientist_tone1": 31, "man_scientist_tone2": 31, "man_scientist_tone3": 31, "man_scientist_tone4": 31, "man_scientist_tone5": 31, "man_shrug": 31, "man_shrugging_dark_skin_ton": 31, "man_shrugging_light_skin_ton": 31, "man_shrugging_medium_dark_skin_ton": 31, "man_shrugging_medium_light_skin_ton": 31, "man_shrugging_medium_skin_ton": 31, "man_shrugging_tone1": 31, "man_shrugging_tone2": 31, "man_shrugging_tone3": 31, "man_shrugging_tone4": 31, "man_shrugging_tone5": 31, "man_sing": 31, "man_singer_dark_skin_ton": 31, "man_singer_light_skin_ton": 31, "man_singer_medium_dark_skin_ton": 31, "man_singer_medium_light_skin_ton": 31, "man_singer_medium_skin_ton": 31, "man_singer_tone1": 31, "man_singer_tone2": 31, "man_singer_tone3": 31, "man_singer_tone4": 31, "man_singer_tone5": 31, "man_stand": 31, "man_standing_dark_skin_ton": 31, "man_standing_light_skin_ton": 31, "man_standing_medium_dark_skin_ton": 31, "man_standing_medium_light_skin_ton": 31, "man_standing_medium_skin_ton": 31, "man_standing_tone1": 31, "man_standing_tone2": 31, "man_standing_tone3": 31, "man_standing_tone4": 31, "man_standing_tone5": 31, "man_stud": 31, "man_student_dark_skin_ton": 31, "man_student_light_skin_ton": 31, "man_student_medium_dark_skin_ton": 31, "man_student_medium_light_skin_ton": 31, "man_student_medium_skin_ton": 31, "man_student_tone1": 31, "man_student_tone2": 31, "man_student_tone3": 31, "man_student_tone4": 31, "man_student_tone5": 31, "man_superhero": 31, "man_superhero_dark_skin_ton": 31, "man_superhero_light_skin_ton": 31, "man_superhero_medium_dark_skin_ton": 31, "man_superhero_medium_light_skin_ton": 31, "man_superhero_medium_skin_ton": 31, "man_superhero_tone1": 31, "man_superhero_tone2": 31, "man_superhero_tone3": 31, "man_superhero_tone4": 31, "man_superhero_tone5": 31, "man_supervillain": 31, "man_supervillain_dark_skin_ton": 31, "man_supervillain_light_skin_ton": 31, "man_supervillain_medium_dark_skin_ton": 31, "man_supervillain_medium_light_skin_ton": 31, "man_supervillain_medium_skin_ton": 31, "man_supervillain_tone1": 31, "man_supervillain_tone2": 31, "man_supervillain_tone3": 31, "man_supervillain_tone4": 31, "man_supervillain_tone5": 31, "man_surf": 31, "man_surfing_dark_skin_ton": 31, "man_surfing_light_skin_ton": 31, "man_surfing_medium_dark_skin_ton": 31, "man_surfing_medium_light_skin_ton": 31, "man_surfing_medium_skin_ton": 31, "man_surfing_tone1": 31, "man_surfing_tone2": 31, "man_surfing_tone3": 31, "man_surfing_tone4": 31, "man_surfing_tone5": 31, "man_swim": 31, "man_swimming_dark_skin_ton": 31, "man_swimming_light_skin_ton": 31, "man_swimming_medium_dark_skin_ton": 31, "man_swimming_medium_light_skin_ton": 31, "man_swimming_medium_skin_ton": 31, "man_swimming_tone1": 31, "man_swimming_tone2": 31, "man_swimming_tone3": 31, "man_swimming_tone4": 31, "man_swimming_tone5": 31, "man_teach": 31, "man_teacher_dark_skin_ton": 31, "man_teacher_light_skin_ton": 31, "man_teacher_medium_dark_skin_ton": 31, "man_teacher_medium_light_skin_ton": 31, "man_teacher_medium_skin_ton": 31, "man_teacher_tone1": 31, "man_teacher_tone2": 31, "man_teacher_tone3": 31, "man_teacher_tone4": 31, "man_teacher_tone5": 31, "man_technologist": 31, "man_technologist_dark_skin_ton": 31, "man_technologist_light_skin_ton": 31, "man_technologist_medium_dark_skin_ton": 31, "man_technologist_medium_light_skin_ton": 31, "man_technologist_medium_skin_ton": 31, "man_technologist_tone1": 31, "man_technologist_tone2": 31, "man_technologist_tone3": 31, "man_technologist_tone4": 31, "man_technologist_tone5": 31, "man_tipping_hand": 31, "man_tipping_hand_dark_skin_ton": 31, "man_tipping_hand_light_skin_ton": 31, "man_tipping_hand_medium_dark_skin_ton": 31, "man_tipping_hand_medium_light_skin_ton": 31, "man_tipping_hand_medium_skin_ton": 31, "man_tipping_hand_tone1": 31, "man_tipping_hand_tone2": 31, "man_tipping_hand_tone3": 31, "man_tipping_hand_tone4": 31, "man_tipping_hand_tone5": 31, "man_tone1": 31, "man_tone1_beard": 31, "man_tone2": 31, "man_tone2_beard": 31, "man_tone3": 31, "man_tone3_beard": 31, "man_tone4": 31, "man_tone4_beard": 31, "man_tone5": 31, "man_tone5_beard": 31, "man_vampir": 31, "man_vampire_dark_skin_ton": 31, "man_vampire_light_skin_ton": 31, "man_vampire_medium_dark_skin_ton": 31, "man_vampire_medium_light_skin_ton": 31, "man_vampire_medium_skin_ton": 31, "man_vampire_tone1": 31, "man_vampire_tone2": 31, "man_vampire_tone3": 31, "man_vampire_tone4": 31, "man_vampire_tone5": 31, "man_walk": 31, "man_walking_dark_skin_ton": 31, "man_walking_light_skin_ton": 31, "man_walking_medium_dark_skin_ton": 31, "man_walking_medium_light_skin_ton": 31, "man_walking_medium_skin_ton": 31, "man_walking_tone1": 31, "man_walking_tone2": 31, "man_walking_tone3": 31, "man_walking_tone4": 31, "man_walking_tone5": 31, "man_wearing_turban": 31, "man_wearing_turban_dark_skin_ton": 31, "man_wearing_turban_light_skin_ton": 31, "man_wearing_turban_medium_dark_skin_ton": 31, "man_wearing_turban_medium_light_skin_ton": 31, "man_wearing_turban_medium_skin_ton": 31, "man_wearing_turban_tone1": 31, "man_wearing_turban_tone2": 31, "man_wearing_turban_tone3": 31, "man_wearing_turban_tone4": 31, "man_wearing_turban_tone5": 31, "man_white_hair": 31, "man_white_haired_dark_skin_ton": 31, "man_white_haired_light_skin_ton": 31, "man_white_haired_medium_dark_skin_ton": 31, "man_white_haired_medium_light_skin_ton": 31, "man_white_haired_medium_skin_ton": 31, "man_white_haired_tone1": 31, "man_white_haired_tone2": 31, "man_white_haired_tone3": 31, "man_white_haired_tone4": 31, "man_white_haired_tone5": 31, "man_with_chinese_cap": 31, "man_with_chinese_cap_tone1": 31, "man_with_chinese_cap_tone2": 31, "man_with_chinese_cap_tone3": 31, "man_with_chinese_cap_tone4": 31, "man_with_chinese_cap_tone5": 31, "man_with_gua_pi_mao": 31, "man_with_gua_pi_mao_tone1": 31, "man_with_gua_pi_mao_tone2": 31, "man_with_gua_pi_mao_tone3": 31, "man_with_gua_pi_mao_tone4": 31, "man_with_gua_pi_mao_tone5": 31, "man_with_probing_can": 31, "man_with_probing_cane_dark_skin_ton": 31, "man_with_probing_cane_light_skin_ton": 31, "man_with_probing_cane_medium_dark_skin_ton": 31, "man_with_probing_cane_medium_light_skin_ton": 31, "man_with_probing_cane_medium_skin_ton": 31, "man_with_probing_cane_tone1": 31, "man_with_probing_cane_tone2": 31, "man_with_probing_cane_tone3": 31, "man_with_probing_cane_tone4": 31, "man_with_probing_cane_tone5": 31, "man_with_turban": 31, "man_with_turban_tone1": 31, "man_with_turban_tone2": 31, "man_with_turban_tone3": 31, "man_with_turban_tone4": 31, "man_with_turban_tone5": 31, "man_with_veil": 31, "man_with_veil_dark_skin_ton": 31, "man_with_veil_light_skin_ton": 31, "man_with_veil_medium_dark_skin_ton": 31, "man_with_veil_medium_light_skin_ton": 31, "man_with_veil_medium_skin_ton": 31, "man_with_veil_tone1": 31, "man_with_veil_tone2": 31, "man_with_veil_tone3": 31, "man_with_veil_tone4": 31, "man_with_veil_tone5": 31, "man_zombi": 31, "mango": 31, "mans_sho": 31, "mantelpiece_clock": 31, "mantlepiece_clock": 31, "manual_wheelchair": 31, "maple_leaf": 31, "marshall_island": 31, "martial_arts_uniform": 31, "martiniqu": 31, "mask": [31, 154, 225, 359, 762, 813, 814, 825, 908, 937, 939], "massage_man": 31, "massage_tone1": 31, "massage_tone2": 31, "massage_tone3": 31, "massage_tone4": 31, "massage_tone5": 31, "massage_woman": 31, "mate": [31, 219, 818], "mauritania": 31, "mauritiu": 31, "mayott": 31, "mc": [31, 136, 251, 419], "md": [31, 117, 330, 767], "meat_on_bon": 31, "mechanic_dark_skin_ton": 31, "mechanic_light_skin_ton": 31, "mechanic_medium_dark_skin_ton": 31, "mechanic_medium_light_skin_ton": 31, "mechanic_medium_skin_ton": 31, "mechanic_tone1": 31, "mechanic_tone2": 31, "mechanic_tone3": 31, "mechanic_tone4": 31, "mechanic_tone5": 31, "mechanical_arm": 31, "mechanical_leg": 31, "medal": 31, "medal_militari": 31, "medal_sport": 31, "medical_symbol": 31, "mega": [31, 961], "melon": 31, "memo": 31, "men_holding_hands_dark_skin_ton": 31, "men_holding_hands_dark_skin_tone_light_skin_ton": 31, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 31, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 31, "men_holding_hands_dark_skin_tone_medium_skin_ton": 31, "men_holding_hands_light_skin_ton": 31, "men_holding_hands_light_skin_tone_dark_skin_ton": 31, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 31, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 31, "men_holding_hands_light_skin_tone_medium_skin_ton": 31, "men_holding_hands_medium_dark_skin_ton": 31, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 31, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 31, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 31, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 31, "men_holding_hands_medium_light_skin_ton": 31, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 31, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 31, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 31, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 31, "men_holding_hands_medium_skin_ton": 31, "men_holding_hands_medium_skin_tone_dark_skin_ton": 31, "men_holding_hands_medium_skin_tone_light_skin_ton": 31, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 31, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 31, "men_holding_hands_tone1": 31, "men_holding_hands_tone1_tone2": 31, "men_holding_hands_tone1_tone3": 31, "men_holding_hands_tone1_tone4": 31, "men_holding_hands_tone1_tone5": 31, "men_holding_hands_tone2": 31, "men_holding_hands_tone2_tone1": 31, "men_holding_hands_tone2_tone3": 31, "men_holding_hands_tone2_tone4": 31, "men_holding_hands_tone2_tone5": 31, "men_holding_hands_tone3": 31, "men_holding_hands_tone3_tone1": 31, "men_holding_hands_tone3_tone2": 31, "men_holding_hands_tone3_tone4": 31, "men_holding_hands_tone3_tone5": 31, "men_holding_hands_tone4": 31, "men_holding_hands_tone4_tone1": 31, "men_holding_hands_tone4_tone2": 31, "men_holding_hands_tone4_tone3": 31, "men_holding_hands_tone4_tone5": 31, "men_holding_hands_tone5": 31, "men_holding_hands_tone5_tone1": 31, "men_holding_hands_tone5_tone2": 31, "men_holding_hands_tone5_tone3": 31, "men_holding_hands_tone5_tone4": 31, "men_with_bunny_ears_parti": 31, "men_wrestl": 31, "mending_heart": 31, "menorah": 31, "men": [31, 357, 413, 536], "mermaid": 31, "mermaid_dark_skin_ton": 31, "mermaid_light_skin_ton": 31, "mermaid_medium_dark_skin_ton": 31, "mermaid_medium_light_skin_ton": 31, "mermaid_medium_skin_ton": 31, "mermaid_tone1": 31, "mermaid_tone2": 31, "mermaid_tone3": 31, "mermaid_tone4": 31, "mermaid_tone5": 31, "merman": 31, "merman_dark_skin_ton": 31, "merman_light_skin_ton": 31, "merman_medium_dark_skin_ton": 31, "merman_medium_light_skin_ton": 31, "merman_medium_skin_ton": 31, "merman_tone1": 31, "merman_tone2": 31, "merman_tone3": 31, "merman_tone4": 31, "merman_tone5": 31, "merperson": 31, "merperson_dark_skin_ton": 31, "merperson_light_skin_ton": 31, "merperson_medium_dark_skin_ton": 31, "merperson_medium_light_skin_ton": 31, "merperson_medium_skin_ton": 31, "merperson_tone1": 31, "merperson_tone2": 31, "merperson_tone3": 31, "merperson_tone4": 31, "merperson_tone5": 31, "metal_tone1": 31, "metal_tone2": 31, "metal_tone3": 31, "metal_tone4": 31, "metal_tone5": 31, "metro": 31, "mexico": 31, "mf": [31, 205, 1021], "mg": 31, "mh": 31, "microb": 31, "micronesia": 31, "microphone2": 31, "microphon": [31, 138, 140], "microscop": 31, "middle_finger_tone1": 31, "middle_finger_tone2": 31, "middle_finger_tone3": 31, "middle_finger_tone4": 31, "middle_finger_tone5": 31, "military_helmet": 31, "military_med": 31, "milk": 31, "milk_glass": 31, "milky_wai": 31, "minibu": 31, "minidisc": 31, "mirror": 31, "mk": 31, "ml": 31, "mm": [31, 418], "mn": 31, "mo": [31, 527], "mobile_phon": 31, "mobile_phone_off": 31, "moldova": 31, "monaco": 31, "money_mouth": 31, "money_mouth_fac": 31, "money_with_w": 31, "moneybag": 31, "mongolia": 31, "monkei": 31, "monkey_fac": 31, "monorail": 31, "montenegro": 31, "montserrat": 31, "moon": 31, "moon_cak": 31, "morocco": 31, "mortar_board": 31, "mosqu": 31, "mosquito": 31, "mother_christma": 31, "mother_christmas_tone1": 31, "mother_christmas_tone2": 31, "mother_christmas_tone3": 31, "mother_christmas_tone4": 31, "mother_christmas_tone5": 31, "motor_boat": 31, "motor_scoot": 31, "motorbik": 31, "motorboat": 31, "motorcycl": 31, "motorized_wheelchair": 31, "motorwai": 31, "mount_fuji": 31, "mountain": 31, "mountain_bicyclist": 31, "mountain_bicyclist_tone1": 31, "mountain_bicyclist_tone2": 31, "mountain_bicyclist_tone3": 31, "mountain_bicyclist_tone4": 31, "mountain_bicyclist_tone5": 31, "mountain_biking_man": 31, "mountain_biking_woman": 31, "mountain_cablewai": 31, "mountain_railwai": 31, "mountain_snow": 31, "mouse2": 31, "mous": [31, 133, 138, 826, 1002, 1010], "mouse_three_button": 31, "mouse_trap": 31, "movie_camera": 31, "moyai": 31, "mozambiqu": 31, "mp": [31, 37], "mq": [31, 932, 933], "mr": [31, 112, 202, 213, 221, 225, 1026], "mrs_clau": 31, "mrs_claus_tone1": 31, "mrs_claus_tone2": 31, "mrs_claus_tone3": 31, "mrs_claus_tone4": 31, "mrs_claus_tone5": 31, "mt": [31, 319, 936, 937], "mu": [31, 225], "muscle_tone1": 31, "muscle_tone2": 31, "muscle_tone3": 31, "muscle_tone4": 31, "muscle_tone5": 31, "mushroom": 31, "musical_keyboard": 31, "musical_not": 31, "musical_scor": 31, "mute": 31, "mv": [31, 98, 112, 173, 175, 239, 248, 249, 269, 270, 310, 315, 719, 739, 796, 833, 846, 862, 1124], "mw": 31, "mx": 31, "mx_clau": 31, "mx_claus_dark_skin_ton": 31, "mx_claus_light_skin_ton": 31, "mx_claus_medium_dark_skin_ton": 31, "mx_claus_medium_light_skin_ton": 31, "mx_claus_medium_skin_ton": 31, "mx_claus_tone1": 31, "mx_claus_tone2": 31, "mx_claus_tone3": 31, "mx_claus_tone4": 31, "mx_claus_tone5": 31, "myanmar": 31, "mz": 31, "na": [31, 202, 205, 208, 221, 228, 246], "nail_car": 31, "nail_care_tone1": 31, "nail_care_tone2": 31, "nail_care_tone3": 31, "nail_care_tone4": 31, "nail_care_tone5": 31, "name_badg": 31, "namibia": 31, "national_park": 31, "nauru": 31, "nauseated_fac": 31, "nazar_amulet": 31, "nc": [31, 173, 175, 248, 269, 270, 339, 889], "ne": [31, 537, 555, 557, 904], "neckti": 31, "negative_squared_cross_mark": 31, "nepal": 31, "nerd_fac": 31, "nesting_dol": 31, "netherland": [31, 134, 989], "neutral_fac": 31, "new_caledonia": 31, "new_moon": 31, "new_moon_with_fac": 31, "new_zealand": 31, "newspaper2": 31, "newspap": [31, 42], "newspaper_rol": 31, "next_track": 31, "next_track_button": 31, "nf": [31, 205, 221, 228, 231, 246, 253, 263, 267, 883], "ng": [31, 134, 145, 249, 719, 862, 941, 943, 950, 951, 952], "ni": 31, "nicaragua": 31, "niger": 31, "nigeria": 31, "night_with_star": 31, "nine": [31, 153, 166, 176, 184, 202, 213, 310], "ninja_dark_skin_ton": 31, "ninja_light_skin_ton": 31, "ninja_medium_dark_skin_ton": 31, "ninja_medium_light_skin_ton": 31, "ninja_medium_skin_ton": 31, "ninja_tone1": 31, "ninja_tone2": 31, "ninja_tone3": 31, "ninja_tone4": 31, "ninja_tone5": 31, "niue": 31, "nl": [31, 339], "no_bel": 31, "no_bicycl": 31, "no_entri": 31, "no_entry_sign": 31, "no_good": 31, "no_good_man": 31, "no_good_tone1": 31, "no_good_tone2": 31, "no_good_tone3": 31, "no_good_tone4": 31, "no_good_tone5": 31, "no_good_woman": 31, "no_mobile_phon": 31, "no_mouth": 31, "no_pedestrian": 31, "no_smok": 31, "non": [31, 77, 112, 113, 115, 129, 135, 136, 143, 160, 173, 195, 213, 221, 225, 230, 249, 258, 260, 267, 373, 395, 413, 429, 432, 483, 526, 528, 535, 537, 540, 548, 552, 553, 592, 607, 642, 648, 689, 693, 694, 709, 719, 752, 758, 771, 782, 803, 806, 808, 848, 873, 874, 882, 900, 915, 919, 926, 934, 959, 963, 975, 976, 999, 1012, 1032, 1049, 1085, 1086, 1092, 1106, 1121], "potable_wat": 31, "norfolk_island": 31, "north_korea": 31, "northern_mariana_island": 31, "norwai": 31, "nose": 31, "nose_tone1": 31, "nose_tone2": 31, "nose_tone3": 31, "nose_tone4": 31, "nose_tone5": 31, "notebook_with_decorative_cov": 31, "notepad_spir": 31, "np": [31, 156, 183, 251, 285, 419, 1067, 1086], "nr": [31, 181, 225, 725], "nu": 31, "nut_and_bolt": 31, "nz": 31, "o2": [31, 407], "ocean": 31, "octagonal_sign": 31, "octopu": 31, "oden": 31, "office_work": 31, "office_worker_dark_skin_ton": 31, "office_worker_light_skin_ton": 31, "office_worker_medium_dark_skin_ton": 31, "office_worker_medium_light_skin_ton": 31, "office_worker_medium_skin_ton": 31, "office_worker_tone1": 31, "office_worker_tone2": 31, "office_worker_tone3": 31, "office_worker_tone4": 31, "office_worker_tone5": 31, "oil": 31, "oil_drum": 31, "ok": [31, 52, 64, 132, 134, 135, 139, 148, 165, 181, 211, 251, 306, 347, 383, 401, 403, 433, 442, 492, 493, 494, 539, 547, 550, 555, 560, 570, 622, 629, 640, 648, 663, 682, 685, 694, 695, 780, 871, 898, 916, 943, 954, 972, 975, 988, 1105], "ok_hand_tone1": 31, "ok_hand_tone2": 31, "ok_hand_tone3": 31, "ok_hand_tone4": 31, "ok_hand_tone5": 31, "ok_man": 31, "ok_woman": 31, "ok_woman_tone1": 31, "ok_woman_tone2": 31, "ok_woman_tone3": 31, "ok_woman_tone4": 31, "ok_woman_tone5": 31, "old_kei": 31, "older_adult": 31, "older_adult_dark_skin_ton": 31, "older_adult_light_skin_ton": 31, "older_adult_medium_dark_skin_ton": 31, "older_adult_medium_light_skin_ton": 31, "older_adult_medium_skin_ton": 31, "older_adult_tone1": 31, "older_adult_tone2": 31, "older_adult_tone3": 31, "older_adult_tone4": 31, "older_adult_tone5": 31, "older_man": 31, "older_man_tone1": 31, "older_man_tone2": 31, "older_man_tone3": 31, "older_man_tone4": 31, "older_man_tone5": 31, "older_woman": 31, "older_woman_tone1": 31, "older_woman_tone2": 31, "older_woman_tone3": 31, "older_woman_tone4": 31, "older_woman_tone5": 31, "oliv": [31, 197], "om": [31, 673], "om_symbol": 31, "oman": 31, "oncoming_automobil": 31, "oncoming_bu": 31, "oncoming_police_car": 31, "oncoming_taxi": 31, "one_piece_swimsuit": 31, "onion": 31, "open_file_fold": 31, "open_hand": 31, "open_hands_tone1": 31, "open_hands_tone2": 31, "open_hands_tone3": 31, "open_hands_tone4": 31, "open_hands_tone5": 31, "open_mouth": 31, "open_umbrella": 31, "ophiuchu": 31, "orange_book": 31, "orange_circl": 31, "orange_heart": 31, "orange_squar": 31, "orangutan": 31, "orthodox_cross": 31, "otter": 31, "outbox_trai": 31, "owl": 31, "ox": 31, "oyster": 31, "pa": [31, 202, 208, 218, 221, 383, 567, 569, 570], "paella": 31, "page_facing_up": 31, "page_with_curl": 31, "pager": [31, 858], "paintbrush": 31, "pakistan": 31, "palau": 31, "palestinian_territori": 31, "palm_tre": 31, "palms_up_togeth": 31, "palms_up_together_dark_skin_ton": 31, "palms_up_together_light_skin_ton": 31, "palms_up_together_medium_dark_skin_ton": 31, "palms_up_together_medium_light_skin_ton": 31, "palms_up_together_medium_skin_ton": 31, "palms_up_together_tone1": 31, "palms_up_together_tone2": 31, "palms_up_together_tone3": 31, "palms_up_together_tone4": 31, "palms_up_together_tone5": 31, "panama": 31, "pancak": 31, "panda_fac": 31, "paperclip": 31, "papua_new_guinea": 31, "parachut": 31, "paraguai": 31, "parasol_on_ground": 31, "park": 31, "parrot": 31, "part_alternation_mark": 31, "partly_sunni": 31, "partying_fac": 31, "passenger_ship": 31, "passport_control": 31, "pause_button": 31, "paw_print": 31, "pe": 31, "peac": 31, "peace_symbol": 31, "peach": 31, "peacock": 31, "peanut": 31, "pear": 31, "pen": 31, "pen_ballpoint": 31, "pen_fountain": 31, "pencil2": 31, "pencil": 31, "pensiv": 31, "people_holding_hand": 31, "people_holding_hands_dark_skin_ton": 31, "people_holding_hands_dark_skin_tone_light_skin_ton": 31, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 31, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 31, "people_holding_hands_dark_skin_tone_medium_skin_ton": 31, "people_holding_hands_light_skin_ton": 31, "people_holding_hands_light_skin_tone_dark_skin_ton": 31, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 31, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 31, "people_holding_hands_light_skin_tone_medium_skin_ton": 31, "people_holding_hands_medium_dark_skin_ton": 31, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 31, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 31, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 31, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 31, "people_holding_hands_medium_light_skin_ton": 31, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 31, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 31, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 31, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 31, "people_holding_hands_medium_skin_ton": 31, "people_holding_hands_medium_skin_tone_dark_skin_ton": 31, "people_holding_hands_medium_skin_tone_light_skin_ton": 31, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 31, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 31, "people_holding_hands_tone1": 31, "people_holding_hands_tone1_tone2": 31, "people_holding_hands_tone1_tone3": 31, "people_holding_hands_tone1_tone4": 31, "people_holding_hands_tone1_tone5": 31, "people_holding_hands_tone2": 31, "people_holding_hands_tone2_tone1": 31, "people_holding_hands_tone2_tone3": 31, "people_holding_hands_tone2_tone4": 31, "people_holding_hands_tone2_tone5": 31, "people_holding_hands_tone3": 31, "people_holding_hands_tone3_tone1": 31, "people_holding_hands_tone3_tone2": 31, "people_holding_hands_tone3_tone4": 31, "people_holding_hands_tone3_tone5": 31, "people_holding_hands_tone4": 31, "people_holding_hands_tone4_tone1": 31, "people_holding_hands_tone4_tone2": 31, "people_holding_hands_tone4_tone3": 31, "people_holding_hands_tone4_tone5": 31, "people_holding_hands_tone5": 31, "people_holding_hands_tone5_tone1": 31, "people_holding_hands_tone5_tone2": 31, "people_holding_hands_tone5_tone3": 31, "people_holding_hands_tone5_tone4": 31, "people_hug": 31, "people_with_bunny_ears_parti": 31, "people_wrestl": 31, "performing_art": 31, "persever": 31, "person_bald": 31, "person_bik": 31, "person_biking_tone1": 31, "person_biking_tone2": 31, "person_biking_tone3": 31, "person_biking_tone4": 31, "person_biking_tone5": 31, "person_bouncing_bal": 31, "person_bouncing_ball_tone1": 31, "person_bouncing_ball_tone2": 31, "person_bouncing_ball_tone3": 31, "person_bouncing_ball_tone4": 31, "person_bouncing_ball_tone5": 31, "person_bow": 31, "person_bowing_tone1": 31, "person_bowing_tone2": 31, "person_bowing_tone3": 31, "person_bowing_tone4": 31, "person_bowing_tone5": 31, "person_climb": 31, "person_climbing_dark_skin_ton": 31, "person_climbing_light_skin_ton": 31, "person_climbing_medium_dark_skin_ton": 31, "person_climbing_medium_light_skin_ton": 31, "person_climbing_medium_skin_ton": 31, "person_climbing_tone1": 31, "person_climbing_tone2": 31, "person_climbing_tone3": 31, "person_climbing_tone4": 31, "person_climbing_tone5": 31, "person_curly_hair": 31, "person_dark_skin_tone_bald": 31, "person_dark_skin_tone_curly_hair": 31, "person_dark_skin_tone_red_hair": 31, "person_dark_skin_tone_white_hair": 31, "person_doing_cartwheel": 31, "person_doing_cartwheel_tone1": 31, "person_doing_cartwheel_tone2": 31, "person_doing_cartwheel_tone3": 31, "person_doing_cartwheel_tone4": 31, "person_doing_cartwheel_tone5": 31, "person_facepalm": 31, "person_facepalming_tone1": 31, "person_facepalming_tone2": 31, "person_facepalming_tone3": 31, "person_facepalming_tone4": 31, "person_facepalming_tone5": 31, "person_feeding_babi": 31, "person_feeding_baby_dark_skin_ton": 31, "person_feeding_baby_light_skin_ton": 31, "person_feeding_baby_medium_dark_skin_ton": 31, "person_feeding_baby_medium_light_skin_ton": 31, "person_feeding_baby_medium_skin_ton": 31, "person_feeding_baby_tone1": 31, "person_feeding_baby_tone2": 31, "person_feeding_baby_tone3": 31, "person_feeding_baby_tone4": 31, "person_feeding_baby_tone5": 31, "person_fenc": 31, "person_frown": 31, "person_frowning_tone1": 31, "person_frowning_tone2": 31, "person_frowning_tone3": 31, "person_frowning_tone4": 31, "person_frowning_tone5": 31, "person_gesturing_no": 31, "person_gesturing_no_tone1": 31, "person_gesturing_no_tone2": 31, "person_gesturing_no_tone3": 31, "person_gesturing_no_tone4": 31, "person_gesturing_no_tone5": 31, "person_gesturing_ok": 31, "person_gesturing_ok_tone1": 31, "person_gesturing_ok_tone2": 31, "person_gesturing_ok_tone3": 31, "person_gesturing_ok_tone4": 31, "person_gesturing_ok_tone5": 31, "person_getting_haircut": 31, "person_getting_haircut_tone1": 31, "person_getting_haircut_tone2": 31, "person_getting_haircut_tone3": 31, "person_getting_haircut_tone4": 31, "person_getting_haircut_tone5": 31, "person_getting_massag": 31, "person_getting_massage_tone1": 31, "person_getting_massage_tone2": 31, "person_getting_massage_tone3": 31, "person_getting_massage_tone4": 31, "person_getting_massage_tone5": 31, "person_golf": 31, "person_golfing_dark_skin_ton": 31, "person_golfing_light_skin_ton": 31, "person_golfing_medium_dark_skin_ton": 31, "person_golfing_medium_light_skin_ton": 31, "person_golfing_medium_skin_ton": 31, "person_golfing_tone1": 31, "person_golfing_tone2": 31, "person_golfing_tone3": 31, "person_golfing_tone4": 31, "person_golfing_tone5": 31, "person_in_bed_dark_skin_ton": 31, "person_in_bed_light_skin_ton": 31, "person_in_bed_medium_dark_skin_ton": 31, "person_in_bed_medium_light_skin_ton": 31, "person_in_bed_medium_skin_ton": 31, "person_in_bed_tone1": 31, "person_in_bed_tone2": 31, "person_in_bed_tone3": 31, "person_in_bed_tone4": 31, "person_in_bed_tone5": 31, "person_in_lotus_posit": 31, "person_in_lotus_position_dark_skin_ton": 31, "person_in_lotus_position_light_skin_ton": 31, "person_in_lotus_position_medium_dark_skin_ton": 31, "person_in_lotus_position_medium_light_skin_ton": 31, "person_in_lotus_position_medium_skin_ton": 31, "person_in_lotus_position_tone1": 31, "person_in_lotus_position_tone2": 31, "person_in_lotus_position_tone3": 31, "person_in_lotus_position_tone4": 31, "person_in_lotus_position_tone5": 31, "person_in_manual_wheelchair": 31, "person_in_manual_wheelchair_dark_skin_ton": 31, "person_in_manual_wheelchair_light_skin_ton": 31, "person_in_manual_wheelchair_medium_dark_skin_ton": 31, "person_in_manual_wheelchair_medium_light_skin_ton": 31, "person_in_manual_wheelchair_medium_skin_ton": 31, "person_in_manual_wheelchair_tone1": 31, "person_in_manual_wheelchair_tone2": 31, "person_in_manual_wheelchair_tone3": 31, "person_in_manual_wheelchair_tone4": 31, "person_in_manual_wheelchair_tone5": 31, "person_in_motorized_wheelchair": 31, "person_in_motorized_wheelchair_dark_skin_ton": 31, "person_in_motorized_wheelchair_light_skin_ton": 31, "person_in_motorized_wheelchair_medium_dark_skin_ton": 31, "person_in_motorized_wheelchair_medium_light_skin_ton": 31, "person_in_motorized_wheelchair_medium_skin_ton": 31, "person_in_motorized_wheelchair_tone1": 31, "person_in_motorized_wheelchair_tone2": 31, "person_in_motorized_wheelchair_tone3": 31, "person_in_motorized_wheelchair_tone4": 31, "person_in_motorized_wheelchair_tone5": 31, "person_in_steamy_room": 31, "person_in_steamy_room_dark_skin_ton": 31, "person_in_steamy_room_light_skin_ton": 31, "person_in_steamy_room_medium_dark_skin_ton": 31, "person_in_steamy_room_medium_light_skin_ton": 31, "person_in_steamy_room_medium_skin_ton": 31, "person_in_steamy_room_tone1": 31, "person_in_steamy_room_tone2": 31, "person_in_steamy_room_tone3": 31, "person_in_steamy_room_tone4": 31, "person_in_steamy_room_tone5": 31, "person_in_tuxedo": 31, "person_in_tuxedo_tone1": 31, "person_in_tuxedo_tone2": 31, "person_in_tuxedo_tone3": 31, "person_in_tuxedo_tone4": 31, "person_in_tuxedo_tone5": 31, "person_juggl": 31, "person_juggling_tone1": 31, "person_juggling_tone2": 31, "person_juggling_tone3": 31, "person_juggling_tone4": 31, "person_juggling_tone5": 31, "person_kneel": 31, "person_kneeling_dark_skin_ton": 31, "person_kneeling_light_skin_ton": 31, "person_kneeling_medium_dark_skin_ton": 31, "person_kneeling_medium_light_skin_ton": 31, "person_kneeling_medium_skin_ton": 31, "person_kneeling_tone1": 31, "person_kneeling_tone2": 31, "person_kneeling_tone3": 31, "person_kneeling_tone4": 31, "person_kneeling_tone5": 31, "person_lifting_weight": 31, "person_lifting_weights_tone1": 31, "person_lifting_weights_tone2": 31, "person_lifting_weights_tone3": 31, "person_lifting_weights_tone4": 31, "person_lifting_weights_tone5": 31, "person_light_skin_tone_bald": 31, "person_light_skin_tone_curly_hair": 31, "person_light_skin_tone_red_hair": 31, "person_light_skin_tone_white_hair": 31, "person_medium_dark_skin_tone_bald": 31, "person_medium_dark_skin_tone_curly_hair": 31, "person_medium_dark_skin_tone_red_hair": 31, "person_medium_dark_skin_tone_white_hair": 31, "person_medium_light_skin_tone_bald": 31, "person_medium_light_skin_tone_curly_hair": 31, "person_medium_light_skin_tone_red_hair": 31, "person_medium_light_skin_tone_white_hair": 31, "person_medium_skin_tone_bald": 31, "person_medium_skin_tone_curly_hair": 31, "person_medium_skin_tone_red_hair": 31, "person_medium_skin_tone_white_hair": 31, "person_mountain_bik": 31, "person_mountain_biking_tone1": 31, "person_mountain_biking_tone2": 31, "person_mountain_biking_tone3": 31, "person_mountain_biking_tone4": 31, "person_mountain_biking_tone5": 31, "person_playing_handbal": 31, "person_playing_handball_tone1": 31, "person_playing_handball_tone2": 31, "person_playing_handball_tone3": 31, "person_playing_handball_tone4": 31, "person_playing_handball_tone5": 31, "person_playing_water_polo": 31, "person_playing_water_polo_tone1": 31, "person_playing_water_polo_tone2": 31, "person_playing_water_polo_tone3": 31, "person_playing_water_polo_tone4": 31, "person_playing_water_polo_tone5": 31, "person_pout": 31, "person_pouting_tone1": 31, "person_pouting_tone2": 31, "person_pouting_tone3": 31, "person_pouting_tone4": 31, "person_pouting_tone5": 31, "person_raising_hand": 31, "person_raising_hand_tone1": 31, "person_raising_hand_tone2": 31, "person_raising_hand_tone3": 31, "person_raising_hand_tone4": 31, "person_raising_hand_tone5": 31, "person_red_hair": 31, "person_rowing_boat": 31, "person_rowing_boat_tone1": 31, "person_rowing_boat_tone2": 31, "person_rowing_boat_tone3": 31, "person_rowing_boat_tone4": 31, "person_rowing_boat_tone5": 31, "person_run": 31, "person_running_tone1": 31, "person_running_tone2": 31, "person_running_tone3": 31, "person_running_tone4": 31, "person_running_tone5": 31, "person_shrug": 31, "person_shrugging_tone1": 31, "person_shrugging_tone2": 31, "person_shrugging_tone3": 31, "person_shrugging_tone4": 31, "person_shrugging_tone5": 31, "person_stand": 31, "person_standing_dark_skin_ton": 31, "person_standing_light_skin_ton": 31, "person_standing_medium_dark_skin_ton": 31, "person_standing_medium_light_skin_ton": 31, "person_standing_medium_skin_ton": 31, "person_standing_tone1": 31, "person_standing_tone2": 31, "person_standing_tone3": 31, "person_standing_tone4": 31, "person_standing_tone5": 31, "person_surf": 31, "person_surfing_tone1": 31, "person_surfing_tone2": 31, "person_surfing_tone3": 31, "person_surfing_tone4": 31, "person_surfing_tone5": 31, "person_swim": 31, "person_swimming_tone1": 31, "person_swimming_tone2": 31, "person_swimming_tone3": 31, "person_swimming_tone4": 31, "person_swimming_tone5": 31, "person_tipping_hand": 31, "person_tipping_hand_tone1": 31, "person_tipping_hand_tone2": 31, "person_tipping_hand_tone3": 31, "person_tipping_hand_tone4": 31, "person_tipping_hand_tone5": 31, "person_tone1_bald": 31, "person_tone1_curly_hair": 31, "person_tone1_red_hair": 31, "person_tone1_white_hair": 31, "person_tone2_bald": 31, "person_tone2_curly_hair": 31, "person_tone2_red_hair": 31, "person_tone2_white_hair": 31, "person_tone3_bald": 31, "person_tone3_curly_hair": 31, "person_tone3_red_hair": 31, "person_tone3_white_hair": 31, "person_tone4_bald": 31, "person_tone4_curly_hair": 31, "person_tone4_red_hair": 31, "person_tone4_white_hair": 31, "person_tone5_bald": 31, "person_tone5_curly_hair": 31, "person_tone5_red_hair": 31, "person_tone5_white_hair": 31, "person_walk": 31, "person_walking_tone1": 31, "person_walking_tone2": 31, "person_walking_tone3": 31, "person_walking_tone4": 31, "person_walking_tone5": 31, "person_wearing_turban": 31, "person_wearing_turban_tone1": 31, "person_wearing_turban_tone2": 31, "person_wearing_turban_tone3": 31, "person_wearing_turban_tone4": 31, "person_wearing_turban_tone5": 31, "person_white_hair": 31, "person_with_bal": 31, "person_with_ball_tone1": 31, "person_with_ball_tone2": 31, "person_with_ball_tone3": 31, "person_with_ball_tone4": 31, "person_with_ball_tone5": 31, "person_with_blond_hair": 31, "person_with_blond_hair_tone1": 31, "person_with_blond_hair_tone2": 31, "person_with_blond_hair_tone3": 31, "person_with_blond_hair_tone4": 31, "person_with_blond_hair_tone5": 31, "person_with_pouting_fac": 31, "person_with_pouting_face_tone1": 31, "person_with_pouting_face_tone2": 31, "person_with_pouting_face_tone3": 31, "person_with_pouting_face_tone4": 31, "person_with_pouting_face_tone5": 31, "person_with_probing_can": 31, "person_with_probing_cane_dark_skin_ton": 31, "person_with_probing_cane_light_skin_ton": 31, "person_with_probing_cane_medium_dark_skin_ton": 31, "person_with_probing_cane_medium_light_skin_ton": 31, "person_with_probing_cane_medium_skin_ton": 31, "person_with_probing_cane_tone1": 31, "person_with_probing_cane_tone2": 31, "person_with_probing_cane_tone3": 31, "person_with_probing_cane_tone4": 31, "person_with_probing_cane_tone5": 31, "person_with_veil": 31, "person_with_veil_tone1": 31, "person_with_veil_tone2": 31, "person_with_veil_tone3": 31, "person_with_veil_tone4": 31, "person_with_veil_tone5": 31, "peru": 31, "petri_dish": 31, "pf": [31, 136], "pg": [31, 411], "ph": 31, "philippin": 31, "phone": 31, "pick": [31, 77, 126, 136, 143, 194, 421, 494, 922, 952, 957], "pickup_truck": 31, "pie": 31, "pig2": 31, "pig_nos": 31, "pill": 31, "pilot": 31, "pilot_dark_skin_ton": 31, "pilot_light_skin_ton": 31, "pilot_medium_dark_skin_ton": 31, "pilot_medium_light_skin_ton": 31, "pilot_medium_skin_ton": 31, "pilot_tone1": 31, "pilot_tone2": 31, "pilot_tone3": 31, "pilot_tone4": 31, "pilot_tone5": 31, "pinched_fing": 31, "pinched_fingers_dark_skin_ton": 31, "pinched_fingers_light_skin_ton": 31, "pinched_fingers_medium_dark_skin_ton": 31, "pinched_fingers_medium_light_skin_ton": 31, "pinched_fingers_medium_skin_ton": 31, "pinched_fingers_tone1": 31, "pinched_fingers_tone2": 31, "pinched_fingers_tone3": 31, "pinched_fingers_tone4": 31, "pinched_fingers_tone5": 31, "pinching_hand": 31, "pinching_hand_dark_skin_ton": 31, "pinching_hand_light_skin_ton": 31, "pinching_hand_medium_dark_skin_ton": 31, "pinching_hand_medium_light_skin_ton": 31, "pinching_hand_medium_skin_ton": 31, "pinching_hand_tone1": 31, "pinching_hand_tone2": 31, "pinching_hand_tone3": 31, "pinching_hand_tone4": 31, "pinching_hand_tone5": 31, "pineappl": [31, 257], "ping_pong": 31, "pirate_flag": 31, "pisc": 31, "pitcairn_island": 31, "pizza": 31, "pi\u00f1ata": 31, "pk": 31, "pl": 31, "placard": 31, "place_of_worship": 31, "plate_with_cutleri": 31, "play_or_pause_button": 31, "play_paus": 31, "pleading_fac": 31, "plunger": 31, "pm": [31, 37], "pn": 31, "point_down": 31, "point_down_tone1": 31, "point_down_tone2": 31, "point_down_tone3": 31, "point_down_tone4": 31, "point_down_tone5": 31, "point_left": 31, "point_left_tone1": 31, "point_left_tone2": 31, "point_left_tone3": 31, "point_left_tone4": 31, "point_left_tone5": 31, "point_right": 31, "point_right_tone1": 31, "point_right_tone2": 31, "point_right_tone3": 31, "point_right_tone4": 31, "point_right_tone5": 31, "point_up_2": 31, "point_up_2_tone1": 31, "point_up_2_tone2": 31, "point_up_2_tone3": 31, "point_up_2_tone4": 31, "point_up_2_tone5": 31, "point_up_tone1": 31, "point_up_tone2": 31, "point_up_tone3": 31, "point_up_tone4": 31, "point_up_tone5": 31, "poland": 31, "polar_bear": 31, "police_car": 31, "police_offic": 31, "police_officer_tone1": 31, "police_officer_tone2": 31, "police_officer_tone3": 31, "police_officer_tone4": 31, "police_officer_tone5": 31, "policeman": 31, "policewoman": 31, "poo": 31, "poodl": 31, "poop": 31, "popcorn": 31, "portug": 31, "post_offic": 31, "postal_horn": 31, "postbox": 31, "potato": 31, "potted_pl": 31, "pouch": 31, "poultry_leg": 31, "pound": [31, 35], "pound_symbol": 31, "pouting_cat": 31, "pouting_man": 31, "pouting_woman": 31, "pr": [31, 34, 221, 236], "prai": 31, "pray_tone1": 31, "pray_tone2": 31, "pray_tone3": 31, "pray_tone4": 31, "pray_tone5": 31, "prayer_bead": 31, "pregnant_woman": 31, "pregnant_woman_tone1": 31, "pregnant_woman_tone2": 31, "pregnant_woman_tone3": 31, "pregnant_woman_tone4": 31, "pregnant_woman_tone5": 31, "pretzel": 31, "previous_track": 31, "previous_track_button": 31, "princ": 31, "prince_tone1": 31, "prince_tone2": 31, "prince_tone3": 31, "prince_tone4": 31, "prince_tone5": 31, "princess": 31, "princess_tone1": 31, "princess_tone2": 31, "princess_tone3": 31, "princess_tone4": 31, "princess_tone5": 31, "printer": 31, "probing_can": 31, "projector": 31, "p": [31, 37, 62, 112, 113, 129, 133, 134, 138, 139, 145, 161, 173, 175, 176, 192, 205, 221, 225, 251, 253, 343, 377, 383, 386, 387, 390, 391, 395, 466, 491, 492, 494, 495, 537, 539, 542, 547, 548, 549, 550, 551, 553, 555, 556, 570, 578, 638, 641, 642, 645, 647, 650, 659, 660, 661, 663, 665, 666, 669, 670, 671, 677, 679, 680, 689, 693, 698, 709, 714, 717, 730, 766, 785, 793, 794, 803, 826, 828, 845, 848, 855, 865, 873, 882, 889, 900, 909, 924, 937, 952, 959, 961, 1021, 1100, 1124], "pt": [31, 697, 797, 924], "pud": 31, "puerto_rico": 31, "punch": 31, "punch_tone1": 31, "punch_tone2": 31, "punch_tone3": 31, "punch_tone4": 31, "punch_tone5": 31, "purple_circl": 31, "purple_heart": 31, "purple_squar": 31, "purs": 31, "pushpin": 31, "put_litter_in_its_plac": 31, "pw": 31, "qa": 31, "qatar": 31, "rabbit2": 31, "rabbit": 31, "raccoon": 31, "race_car": 31, "racehors": 31, "racing_car": 31, "racing_motorcycl": 31, "radio": 31, "radio_button": 31, "radioact": 31, "radioactive_sign": 31, "rage": 31, "railroad_track": 31, "railway_car": 31, "railway_track": 31, "rainbow": 31, "rainbow_flag": 31, "raised_back_of_hand": 31, "raised_back_of_hand_tone1": 31, "raised_back_of_hand_tone2": 31, "raised_back_of_hand_tone3": 31, "raised_back_of_hand_tone4": 31, "raised_back_of_hand_tone5": 31, "raised_hand": 31, "raised_hand_tone1": 31, "raised_hand_tone2": 31, "raised_hand_tone3": 31, "raised_hand_tone4": 31, "raised_hand_tone5": 31, "raised_hand_with_fingers_splai": 31, "raised_hand_with_fingers_splayed_tone1": 31, "raised_hand_with_fingers_splayed_tone2": 31, "raised_hand_with_fingers_splayed_tone3": 31, "raised_hand_with_fingers_splayed_tone4": 31, "raised_hand_with_fingers_splayed_tone5": 31, "raised_hand_with_part_between_middle_and_ring_fing": 31, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 31, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 31, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 31, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 31, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 31, "raised_hands_tone1": 31, "raised_hands_tone2": 31, "raised_hands_tone3": 31, "raised_hands_tone4": 31, "raised_hands_tone5": 31, "raising_hand": 31, "raising_hand_man": 31, "raising_hand_tone1": 31, "raising_hand_tone2": 31, "raising_hand_tone3": 31, "raising_hand_tone4": 31, "raising_hand_tone5": 31, "raising_hand_woman": 31, "ram": [31, 135, 136, 140, 258, 766, 802, 804, 888], "ramen": 31, "rat": 31, "razor": 31, "re": [31, 37, 62, 135, 140, 172, 181, 184, 185, 195, 198, 205, 206, 208, 213, 215, 221, 225, 231, 233, 234, 243, 246, 250, 266, 267, 273, 310, 315, 373, 419, 420, 429, 437, 462, 492, 539, 545, 663, 685, 735, 771, 780, 785, 827, 916, 937, 952, 956, 961, 966, 985, 1008, 1059, 1064], "receipt": 31, "record_button": 31, "recycl": 31, "red_car": 31, "red_circl": 31, "red_envelop": 31, "red_hair": 31, "red_squar": 31, "regional_indicator_a": 31, "regional_indicator_b": 31, "regional_indicator_c": 31, "regional_indicator_d": 31, "regional_indicator_": 31, "regional_indicator_f": 31, "regional_indicator_g": 31, "regional_indicator_h": 31, "regional_indicator_i": 31, "regional_indicator_j": 31, "regional_indicator_k": 31, "regional_indicator_l": 31, "regional_indicator_m": 31, "regional_indicator_n": 31, "regional_indicator_o": 31, "regional_indicator_p": 31, "regional_indicator_q": 31, "regional_indicator_r": 31, "regional_indicator_t": 31, "regional_indicator_u": 31, "regional_indicator_v": 31, "regional_indicator_w": 31, "regional_indicator_x": 31, "regional_indicator_z": 31, "regist": [31, 35, 37, 133, 143, 151, 176, 180, 208, 221, 267, 296, 359, 393, 444, 472, 493, 495, 502, 722, 729, 737, 744, 750, 762, 853, 870, 886, 890, 991, 1080], "relax": 31, "reliev": [31, 56], "reminder_ribbon": 31, "repeat": [31, 42, 99, 112, 123, 139, 194, 219, 249, 317, 407, 419, 555, 719, 766, 796, 826, 830, 834, 837, 840, 845, 846, 862, 875, 902, 999], "repeat_on": 31, "rescue_worker_helmet": 31, "restroom": 31, "reunion": 31, "reversed_hand_with_middle_finger_extend": 31, "reversed_hand_with_middle_finger_extended_tone1": 31, "reversed_hand_with_middle_finger_extended_tone2": 31, "reversed_hand_with_middle_finger_extended_tone3": 31, "reversed_hand_with_middle_finger_extended_tone4": 31, "reversed_hand_with_middle_finger_extended_tone5": 31, "revolving_heart": 31, "rewind": [31, 302, 685], "rhino": 31, "rhinocero": 31, "ribbon": 31, "rice": 31, "rice_bal": 31, "rice_crack": 31, "rice_scen": 31, "right_anger_bubbl": 31, "right_facing_fist": 31, "right_facing_fist_tone1": 31, "right_facing_fist_tone2": 31, "right_facing_fist_tone3": 31, "right_facing_fist_tone4": 31, "right_facing_fist_tone5": 31, "right_fist": 31, "right_fist_tone1": 31, "right_fist_tone2": 31, "right_fist_tone3": 31, "right_fist_tone4": 31, "right_fist_tone5": 31, "ring": [31, 34, 37, 826], "ringed_planet": 31, "ro": 31, "robot": [31, 221], "robot_fac": 31, "rock": [31, 262, 417, 956, 958, 1094], "rocket": [31, 140], "rofl": 31, "roll_ey": 31, "roll_of_pap": 31, "rolled_up_newspap": 31, "roller_coast": 31, "roller_sk": 31, "rolling_on_the_floor_laugh": 31, "romania": 31, "rooster": 31, "rosett": 31, "rotating_light": 31, "round_pushpin": 31, "rowboat": 31, "rowboat_tone1": 31, "rowboat_tone2": 31, "rowboat_tone3": 31, "rowboat_tone4": 31, "rowboat_tone5": 31, "rowing_man": 31, "rowing_woman": 31, "ru": 31, "rugby_footbal": 31, "runner": [31, 43, 1105, 1136], "runner_tone1": 31, "runner_tone2": 31, "runner_tone3": 31, "runner_tone4": 31, "runner_tone5": 31, "running_man": 31, "running_shirt_with_sash": 31, "running_woman": 31, "russia": [31, 1077], "rw": [31, 60, 62, 134, 135, 144, 152, 221, 231, 426, 717, 722, 730, 797, 808, 811, 822, 825, 845, 848, 863, 870, 871, 872, 874, 883, 894, 897, 898, 906, 934, 940, 941, 942, 952, 954, 955, 991, 1019], "rwanda": 31, "safety_pin": 31, "safety_vest": 31, "sagittariu": 31, "sailboat": 31, "saint_martin": 31, "sake": 31, "salad": 31, "salt": [31, 822], "samoa": 31, "san_marino": 31, "sandal": 31, "sandwich": 31, "santa": 31, "santa_tone1": 31, "santa_tone2": 31, "santa_tone3": 31, "santa_tone4": 31, "santa_tone5": 31, "sao_tome_princip": 31, "sari": 31, "satellit": 31, "satellite_orbit": 31, "saudi": 31, "saudi_arabia": 31, "saudiarabia": 31, "sauropod": 31, "saxophon": 31, "sb": [31, 250], "sc": [31, 34], "scale": [31, 77, 165, 211, 225, 407, 870, 943, 956], "scarf": 31, "school": [31, 225, 478, 513, 1086, 1119], "school_satchel": 31, "scientist": [31, 165, 988, 1069, 1070, 1071, 1078], "scientist_dark_skin_ton": 31, "scientist_light_skin_ton": 31, "scientist_medium_dark_skin_ton": 31, "scientist_medium_light_skin_ton": 31, "scientist_medium_skin_ton": 31, "scientist_tone1": 31, "scientist_tone2": 31, "scientist_tone3": 31, "scientist_tone4": 31, "scientist_tone5": 31, "scissor": 31, "scooter": 31, "scorpion": 31, "scorpiu": 31, "scotland": 31, "scream": [31, 194, 826], "scream_cat": 31, "screwdriv": 31, "scroll": [31, 139, 478], "sd": [31, 205, 221, 225, 228, 231, 246, 253, 263, 267, 766], "se": [31, 542], "seal": 31, "seat": 31, "second_plac": 31, "second_place_med": 31, "secret": [31, 622, 643, 879, 963, 1075], "see_no_evil": 31, "seedl": 31, "selfi": 31, "selfie_tone1": 31, "selfie_tone2": 31, "selfie_tone3": 31, "selfie_tone4": 31, "selfie_tone5": 31, "seneg": 31, "serbia": 31, "service_dog": 31, "seven": [31, 35, 83, 153, 166, 176, 184, 213, 310, 1031, 1042], "sewing_needl": 31, "seychel": 31, "sg": 31, "sh": [31, 60, 140, 144, 233, 739, 793, 794, 811, 872, 894, 904, 1051], "shaking_hand": 31, "shaking_hands_tone1": 31, "shaking_hands_tone2": 31, "shaking_hands_tone3": 31, "shaking_hands_tone4": 31, "shaking_hands_tone5": 31, "shallow_pan_of_food": 31, "shamrock": 31, "shark": 31, "shaved_ic": 31, "sheep": 31, "shelled_peanut": 31, "shield": [31, 133], "shinto_shrin": 31, "ship": [31, 138], "shirt": [31, 42, 130], "shit": [31, 192], "shop": [31, 257], "shopping_bag": 31, "shopping_cart": 31, "shopping_trollei": 31, "shower": 31, "shrimp": 31, "shrug": 31, "shrug_tone1": 31, "shrug_tone2": 31, "shrug_tone3": 31, "shrug_tone4": 31, "shrug_tone5": 31, "shushing_fac": 31, "si": 31, "sick": [31, 441], "sierra_leon": 31, "sign_of_the_horn": 31, "sign_of_the_horns_tone1": 31, "sign_of_the_horns_tone2": 31, "sign_of_the_horns_tone3": 31, "sign_of_the_horns_tone4": 31, "sign_of_the_horns_tone5": 31, "signal_strength": 31, "singapor": 31, "singer": 31, "singer_dark_skin_ton": 31, "singer_light_skin_ton": 31, "singer_medium_dark_skin_ton": 31, "singer_medium_light_skin_ton": 31, "singer_medium_skin_ton": 31, "singer_tone1": 31, "singer_tone2": 31, "singer_tone3": 31, "singer_tone4": 31, "singer_tone5": 31, "sint_maarten": 31, "six": [31, 153, 166, 176, 184, 202, 310, 999], "six_pointed_star": 31, "sj": 31, "sk": 31, "skateboard": 31, "skeleton": [31, 136, 148, 420, 795], "ski": 31, "skier": 31, "skull": 31, "skull_and_crossbon": 31, "skull_crossbon": 31, "skunk": 31, "sl": [31, 302, 924], "sled": 31, "sleeping_accommod": 31, "sleeping_b": 31, "sleepi": 31, "sleuth_or_spi": 31, "sleuth_or_spy_tone1": 31, "sleuth_or_spy_tone2": 31, "sleuth_or_spy_tone3": 31, "sleuth_or_spy_tone4": 31, "sleuth_or_spy_tone5": 31, "slight_frown": 31, "slight_smil": 31, "slightly_frowning_fac": 31, "slightly_smiling_fac": 31, "slot_machin": 31, "sloth": 31, "slovakia": 31, "slovenia": [31, 200], "sm": 31, "small_airplan": 31, "small_blue_diamond": 31, "small_orange_diamond": 31, "small_red_triangl": 31, "small_red_triangle_down": 31, "smile": [31, 34], "smile_cat": 31, "smilei": [31, 62], "smiley_cat": 31, "smiling_face_with_3_heart": 31, "smiling_face_with_tear": 31, "smiling_imp": 31, "smirk": 31, "smirk_cat": 31, "smoke": 31, "sn": 31, "snail": 31, "snake": 31, "sneez": 31, "sneezing_fac": 31, "snow_capped_mountain": 31, "snowboard": 31, "snowboarder_dark_skin_ton": 31, "snowboarder_light_skin_ton": 31, "snowboarder_medium_dark_skin_ton": 31, "snowboarder_medium_light_skin_ton": 31, "snowboarder_medium_skin_ton": 31, "snowboarder_tone1": 31, "snowboarder_tone2": 31, "snowboarder_tone3": 31, "snowboarder_tone4": 31, "snowboarder_tone5": 31, "snowflak": 31, "snowman2": 31, "snowman": 31, "snowman_with_snow": 31, "sob": 31, "soccer": 31, "sock": 31, "softbal": 31, "solomon_island": 31, "somalia": 31, "soon": [31, 134, 135, 140, 542, 629, 766, 872, 924, 938, 1080], "sound": [31, 58, 61, 132, 136, 139, 140, 209, 699, 808, 863, 871, 872, 1099], "south_africa": 31, "south_georgia_south_sandwich_island": 31, "south_sudan": 31, "space_invad": 31, "spade": [31, 37], "spaghetti": [31, 113, 407, 418], "spain": 31, "sparkl": 31, "sparkler": 31, "sparkling_heart": 31, "speak_no_evil": 31, "speaker": 31, "speaking_head": 31, "speaking_head_in_silhouett": 31, "speech_balloon": 31, "speech_left": 31, "speedboat": 31, "spider": 31, "spider_web": 31, "spiral_calendar": 31, "spiral_calendar_pad": 31, "spiral_note_pad": 31, "spiral_notepad": 31, "spong": 31, "spoon": 31, "sports_med": 31, "spy": 31, "spy_tone1": 31, "spy_tone2": 31, "spy_tone3": 31, "spy_tone4": 31, "spy_tone5": 31, "squeeze_bottl": 31, "squid": 31, "sr": [31, 205, 1021], "sri_lanka": 31, "st": [31, 199, 419, 934, 936, 937], "st_barthelemi": 31, "st_helena": 31, "st_kitts_nevi": 31, "st_lucia": 31, "st_pierre_miquelon": 31, "st_vincent_grenadin": 31, "stadium": 31, "star2": 31, "star": [31, 37, 579, 872, 954], "star_and_cresc": 31, "star_of_david": 31, "star_struck": 31, "station": 31, "statue_of_liberti": 31, "steam_locomot": 31, "stethoscop": 31, "stew": 31, "stop_button": 31, "stop_sign": 31, "stopwatch": 31, "straight_rul": 31, "strawberri": 31, "stuck_out_tongu": 31, "stuck_out_tongue_closed_ey": 31, "stuck_out_tongue_winking_ey": 31, "student": [31, 100, 105, 112, 140, 233, 295, 296, 301, 302, 310, 964, 1100], "student_dark_skin_ton": 31, "student_light_skin_ton": 31, "student_medium_dark_skin_ton": 31, "student_medium_light_skin_ton": 31, "student_medium_skin_ton": 31, "student_tone1": 31, "student_tone2": 31, "student_tone3": 31, "student_tone4": 31, "student_tone5": 31, "studio_microphon": 31, "stuffed_flatbread": 31, "stuffed_pita": 31, "sudan": 31, "sun_behind_large_cloud": 31, "sun_behind_rain_cloud": 31, "sun_behind_small_cloud": 31, "sun_with_fac": 31, "sunflow": 31, "sunni": [31, 108, 252, 255, 483, 494, 500, 502, 535, 719, 919, 963], "sunris": 31, "sunrise_over_mountain": 31, "superhero": 31, "superhero_dark_skin_ton": 31, "superhero_light_skin_ton": 31, "superhero_medium_dark_skin_ton": 31, "superhero_medium_light_skin_ton": 31, "superhero_medium_skin_ton": 31, "superhero_tone1": 31, "superhero_tone2": 31, "superhero_tone3": 31, "superhero_tone4": 31, "superhero_tone5": 31, "supervillain": 31, "supervillain_dark_skin_ton": 31, "supervillain_light_skin_ton": 31, "supervillain_medium_dark_skin_ton": 31, "supervillain_medium_light_skin_ton": 31, "supervillain_medium_skin_ton": 31, "supervillain_tone1": 31, "supervillain_tone2": 31, "supervillain_tone3": 31, "supervillain_tone4": 31, "supervillain_tone5": 31, "surfer": 31, "surfer_tone1": 31, "surfer_tone2": 31, "surfer_tone3": 31, "surfer_tone4": 31, "surfer_tone5": 31, "surfing_man": 31, "surfing_woman": 31, "surinam": 31, "sushi": 31, "suspension_railwai": 31, "sv": [31, 461, 462], "swan": 31, "swaziland": 31, "sweat": 31, "sweat_drop": 31, "sweat_smil": 31, "sweden": 31, "sweet_potato": 31, "swimmer": 31, "swimmer_tone1": 31, "swimmer_tone2": 31, "swimmer_tone3": 31, "swimmer_tone4": 31, "swimmer_tone5": 31, "swimming_man": 31, "swimming_woman": 31, "switzerland": 31, "sx": 31, "symbol": [31, 32, 37, 112, 144, 173, 194, 202, 208, 211, 218, 221, 239, 248, 249, 269, 270, 348, 363, 372, 379, 385, 389, 392, 396, 399, 400, 405, 409, 414, 415, 637, 675, 681, 716, 717, 718, 719, 722, 741, 744, 766, 796, 811, 826, 846, 848, 862, 871, 971], "synagogu": 31, "syria": 31, "syring": 31, "sz": [31, 135, 138], "t_rex": 31, "ta": 31, "table_tenni": 31, "taco": 31, "tada": 31, "taiwan": 31, "tajikistan": 31, "takeout_box": 31, "tamal": 31, "tanabata_tre": 31, "tangerin": 31, "tanzania": 31, "tauru": 31, "taxi": 31, "tc": 31, "td": [31, 197], "tea": 31, "teacher": [31, 105, 138, 423, 425, 793, 794, 952], "teacher_dark_skin_ton": 31, "teacher_light_skin_ton": 31, "teacher_medium_dark_skin_ton": 31, "teacher_medium_light_skin_ton": 31, "teacher_medium_skin_ton": 31, "teacher_tone1": 31, "teacher_tone2": 31, "teacher_tone3": 31, "teacher_tone4": 31, "teacher_tone5": 31, "teapot": 31, "technologist": 31, "technologist_dark_skin_ton": 31, "technologist_light_skin_ton": 31, "technologist_medium_dark_skin_ton": 31, "technologist_medium_light_skin_ton": 31, "technologist_medium_skin_ton": 31, "technologist_tone1": 31, "technologist_tone2": 31, "technologist_tone3": 31, "technologist_tone4": 31, "technologist_tone5": 31, "teddy_bear": 31, "telephon": 31, "telephone_receiv": 31, "telescop": 31, "ten": [31, 135, 156, 176, 215, 221, 857], "tenni": 31, "tent": 31, "test_tub": 31, "tf": [31, 228, 792, 961], "tg": 31, "th": [31, 169, 197, 341, 383, 492, 570, 1001, 1010], "thailand": 31, "thermomet": [31, 68, 81, 83, 84, 160, 169, 221, 241, 314, 316, 317, 319, 434, 441, 444, 446, 455, 456, 469, 483, 523, 524, 532, 535, 610, 613, 719, 872], "thermometer_fac": 31, "thinking_fac": 31, "third_plac": 31, "third_place_med": 31, "thong_sand": 31, "thought_balloon": 31, "thread": [31, 58, 61, 64, 82, 88, 90, 138, 150, 151, 160, 165, 169, 180, 202, 208, 209, 211, 218, 221, 236, 237, 238, 240, 249, 258, 260, 284, 291, 320, 323, 324, 325, 413, 442, 459, 473, 536, 677, 685, 694, 696, 703, 705, 708, 709, 718, 719, 748, 758, 764, 778, 786, 862, 884, 903, 911, 913, 914, 916, 918, 922, 923, 925, 936, 937, 938, 974, 975, 1064, 1107, 1117, 1118, 1119, 1121, 1133, 1134, 1135], "three_button_mous": 31, "thumbdown": 31, "thumbdown_tone1": 31, "thumbdown_tone2": 31, "thumbdown_tone3": 31, "thumbdown_tone4": 31, "thumbdown_tone5": 31, "thumbsdown_tone1": 31, "thumbsdown_tone2": 31, "thumbsdown_tone3": 31, "thumbsdown_tone4": 31, "thumbsdown_tone5": 31, "thumbsup_tone1": 31, "thumbsup_tone2": 31, "thumbsup_tone3": 31, "thumbsup_tone4": 31, "thumbsup_tone5": 31, "thumbup": 31, "thumbup_tone1": 31, "thumbup_tone2": 31, "thumbup_tone3": 31, "thumbup_tone4": 31, "thumbup_tone5": 31, "thunder_cloud_and_rain": 31, "thunder_cloud_rain": 31, "ticket": 31, "tiger2": 31, "tiger": 31, "timer": [31, 58, 61, 64, 112, 157, 258, 398, 710, 719, 743, 768, 775, 781, 784, 785, 787, 799, 802, 862, 871, 887, 891, 903, 922, 928, 930, 938, 1132, 1135], "timer_clock": 31, "timor_lest": 31, "tipping_hand_man": 31, "tipping_hand_woman": 31, "tired_fac": 31, "tj": 31, "tk": 31, "tl": [31, 138], "tm": 31, "tn": [31, 173], "togo": 31, "toilet": [31, 211, 513, 756, 974], "tokelau": 31, "tokyo_tow": 31, "tomato": 31, "tone1": 31, "tone2": 31, "tone3": 31, "tone4": 31, "tone5": 31, "tonga": 31, "tongu": [31, 1118], "toolbox": [31, 154], "tooth": 31, "toothbrush": 31, "tophat": 31, "tornado": 31, "tr": [31, 197], "track_next": 31, "track_previ": 31, "trackbal": 31, "tractor": 31, "traffic_light": 31, "train2": 31, "tram": 31, "transgender_flag": 31, "transgender_symbol": 31, "triangular_flag_on_post": 31, "triangular_rul": 31, "trident": 31, "trinidad_tobago": 31, "tristan_da_cunha": 31, "triumph": 31, "trolleybu": 31, "trophi": 31, "tropical_drink": 31, "tropical_fish": 31, "truck": 31, "trumpet": 31, "tt": 31, "tulip": 31, "tumbler_glass": 31, "tunisia": 31, "turkei": 31, "turkmenistan": 31, "turks_caicos_island": 31, "turtl": 31, "tuvalu": 31, "tuxedo_tone1": 31, "tuxedo_tone2": 31, "tuxedo_tone3": 31, "tuxedo_tone4": 31, "tuxedo_tone5": 31, "tw": 31, "twisted_rightwards_arrow": 31, "two_heart": 31, "two_men_holding_hand": 31, "two_women_holding_hand": 31, "tz": 31, "u5272": 31, "u5408": 31, "u55b6": 31, "u6307": 31, "u6708": 31, "u6709": 31, "u6e80": 31, "u7121": 31, "u7533": 31, "u7981": 31, "u7a7a": 31, "ua": [31, 200, 209, 284], "ug": 31, "uganda": 31, "ukrain": 31, "umbrella2": 31, "umbrella": 31, "umbrella_on_ground": 31, "unamus": 31, "underag": 31, "unicorn": 31, "unicorn_fac": 31, "united_arab_emir": 31, "united_n": 31, "united_st": 31, "unlock": [31, 705, 707, 709, 758, 764, 911, 1130], "upside_down": 31, "upside_down_fac": 31, "urn": 31, "uruguai": 31, "us_virgin_island": 31, "uz": 31, "uzbekistan": 31, "v_tone1": 31, "v_tone2": 31, "v_tone3": 31, "v_tone4": 31, "v_tone5": 31, "va": [31, 252, 255], "vampir": 31, "vampire_dark_skin_ton": 31, "vampire_light_skin_ton": 31, "vampire_medium_dark_skin_ton": 31, "vampire_medium_light_skin_ton": 31, "vampire_medium_skin_ton": 31, "vampire_tone1": 31, "vampire_tone2": 31, "vampire_tone3": 31, "vampire_tone4": 31, "vampire_tone5": 31, "vanuatu": 31, "vatican_c": 31, "vc": [31, 115, 139], "ve": [31, 133, 135, 808, 1099], "venezuela": 31, "vertical_traffic_light": 31, "vg": 31, "vh": 31, "vi": 31, "vibration_mod": 31, "video_camera": 31, "video_gam": 31, "vietnam": 31, "violin": 31, "virgo": 31, "vn": 31, "volcano": 31, "volleybal": 31, "vu": 31, "vulcan": 31, "vulcan_salut": 31, "vulcan_tone1": 31, "vulcan_tone2": 31, "vulcan_tone3": 31, "vulcan_tone4": 31, "vulcan_tone5": 31, "waffl": 31, "wale": 31, "walk": [31, 132, 152, 165, 261, 262, 283, 317, 328, 635, 652, 810, 872, 976], "walking_man": 31, "walking_tone1": 31, "walking_tone2": 31, "walking_tone3": 31, "walking_tone4": 31, "walking_tone5": 31, "walking_woman": 31, "wallis_futuna": 31, "waning_crescent_moon": 31, "waning_gibbous_moon": 31, "wastebasket": 31, "water_buffalo": 31, "water_polo": 31, "water_polo_tone1": 31, "water_polo_tone2": 31, "water_polo_tone3": 31, "water_polo_tone4": 31, "water_polo_tone5": 31, "watermelon": [31, 257], "wave": [31, 33, 37, 249, 266], "wave_tone1": 31, "wave_tone2": 31, "wave_tone3": 31, "wave_tone4": 31, "wave_tone5": 31, "waving_black_flag": 31, "waving_white_flag": 31, "wavy_dash": 31, "waxing_crescent_moon": 31, "waxing_gibbous_moon": 31, "wc": [31, 193, 194, 211, 231, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 419, 637, 675, 716, 718, 719, 806, 809, 859, 873, 1048], "weari": 31, "wed": [31, 192], "weight_lift": 31, "weight_lifter_tone1": 31, "weight_lifter_tone2": 31, "weight_lifter_tone3": 31, "weight_lifter_tone4": 31, "weight_lifter_tone5": 31, "weight_lifting_man": 31, "weight_lifting_woman": 31, "western_sahara": 31, "wf": 31, "whale2": 31, "whale": 31, "wheel_of_dharma": 31, "wheelchair": 31, "whiski": 31, "white_check_mark": 31, "white_circl": 31, "white_flag": 31, "white_flow": 31, "white_frowning_fac": 31, "white_hair": 31, "white_heart": 31, "white_large_squar": 31, "white_medium_small_squar": 31, "white_medium_squar": 31, "white_small_squar": 31, "white_square_button": 31, "white_sun_behind_cloud": 31, "white_sun_behind_cloud_with_rain": 31, "white_sun_cloud": 31, "white_sun_rain_cloud": 31, "white_sun_small_cloud": 31, "white_sun_with_small_cloud": 31, "wilted_flow": 31, "wilted_ros": 31, "wind_blowing_fac": 31, "wind_chim": 31, "wind_fac": 31, "wine_glass": 31, "wolf": 31, "woman": 31, "woman_and_man_holding_hands_dark_skin_ton": 31, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 31, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 31, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 31, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 31, "woman_and_man_holding_hands_light_skin_ton": 31, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 31, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 31, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 31, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 31, "woman_and_man_holding_hands_medium_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 31, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 31, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 31, "woman_and_man_holding_hands_medium_light_skin_ton": 31, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 31, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 31, "woman_and_man_holding_hands_medium_skin_ton": 31, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 31, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 31, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 31, "woman_and_man_holding_hands_tone1": 31, "woman_and_man_holding_hands_tone1_tone2": 31, "woman_and_man_holding_hands_tone1_tone3": 31, "woman_and_man_holding_hands_tone1_tone4": 31, "woman_and_man_holding_hands_tone1_tone5": 31, "woman_and_man_holding_hands_tone2": 31, "woman_and_man_holding_hands_tone2_tone1": 31, "woman_and_man_holding_hands_tone2_tone3": 31, "woman_and_man_holding_hands_tone2_tone4": 31, "woman_and_man_holding_hands_tone2_tone5": 31, "woman_and_man_holding_hands_tone3": 31, "woman_and_man_holding_hands_tone3_tone1": 31, "woman_and_man_holding_hands_tone3_tone2": 31, "woman_and_man_holding_hands_tone3_tone4": 31, "woman_and_man_holding_hands_tone3_tone5": 31, "woman_and_man_holding_hands_tone4": 31, "woman_and_man_holding_hands_tone4_tone1": 31, "woman_and_man_holding_hands_tone4_tone2": 31, "woman_and_man_holding_hands_tone4_tone3": 31, "woman_and_man_holding_hands_tone4_tone5": 31, "woman_and_man_holding_hands_tone5": 31, "woman_and_man_holding_hands_tone5_tone1": 31, "woman_and_man_holding_hands_tone5_tone2": 31, "woman_and_man_holding_hands_tone5_tone3": 31, "woman_and_man_holding_hands_tone5_tone4": 31, "woman_artist": 31, "woman_artist_dark_skin_ton": 31, "woman_artist_light_skin_ton": 31, "woman_artist_medium_dark_skin_ton": 31, "woman_artist_medium_light_skin_ton": 31, "woman_artist_medium_skin_ton": 31, "woman_artist_tone1": 31, "woman_artist_tone2": 31, "woman_artist_tone3": 31, "woman_artist_tone4": 31, "woman_artist_tone5": 31, "woman_astronaut": 31, "woman_astronaut_dark_skin_ton": 31, "woman_astronaut_light_skin_ton": 31, "woman_astronaut_medium_dark_skin_ton": 31, "woman_astronaut_medium_light_skin_ton": 31, "woman_astronaut_medium_skin_ton": 31, "woman_astronaut_tone1": 31, "woman_astronaut_tone2": 31, "woman_astronaut_tone3": 31, "woman_astronaut_tone4": 31, "woman_astronaut_tone5": 31, "woman_bald": 31, "woman_bald_dark_skin_ton": 31, "woman_bald_light_skin_ton": 31, "woman_bald_medium_dark_skin_ton": 31, "woman_bald_medium_light_skin_ton": 31, "woman_bald_medium_skin_ton": 31, "woman_bald_tone1": 31, "woman_bald_tone2": 31, "woman_bald_tone3": 31, "woman_bald_tone4": 31, "woman_bald_tone5": 31, "woman_beard": 31, "woman_bik": 31, "woman_biking_dark_skin_ton": 31, "woman_biking_light_skin_ton": 31, "woman_biking_medium_dark_skin_ton": 31, "woman_biking_medium_light_skin_ton": 31, "woman_biking_medium_skin_ton": 31, "woman_biking_tone1": 31, "woman_biking_tone2": 31, "woman_biking_tone3": 31, "woman_biking_tone4": 31, "woman_biking_tone5": 31, "woman_bouncing_bal": 31, "woman_bouncing_ball_dark_skin_ton": 31, "woman_bouncing_ball_light_skin_ton": 31, "woman_bouncing_ball_medium_dark_skin_ton": 31, "woman_bouncing_ball_medium_light_skin_ton": 31, "woman_bouncing_ball_medium_skin_ton": 31, "woman_bouncing_ball_tone1": 31, "woman_bouncing_ball_tone2": 31, "woman_bouncing_ball_tone3": 31, "woman_bouncing_ball_tone4": 31, "woman_bouncing_ball_tone5": 31, "woman_bow": 31, "woman_bowing_dark_skin_ton": 31, "woman_bowing_light_skin_ton": 31, "woman_bowing_medium_dark_skin_ton": 31, "woman_bowing_medium_light_skin_ton": 31, "woman_bowing_medium_skin_ton": 31, "woman_bowing_tone1": 31, "woman_bowing_tone2": 31, "woman_bowing_tone3": 31, "woman_bowing_tone4": 31, "woman_bowing_tone5": 31, "woman_cartwheel": 31, "woman_cartwheeling_dark_skin_ton": 31, "woman_cartwheeling_light_skin_ton": 31, "woman_cartwheeling_medium_dark_skin_ton": 31, "woman_cartwheeling_medium_light_skin_ton": 31, "woman_cartwheeling_medium_skin_ton": 31, "woman_cartwheeling_tone1": 31, "woman_cartwheeling_tone2": 31, "woman_cartwheeling_tone3": 31, "woman_cartwheeling_tone4": 31, "woman_cartwheeling_tone5": 31, "woman_climb": 31, "woman_climbing_dark_skin_ton": 31, "woman_climbing_light_skin_ton": 31, "woman_climbing_medium_dark_skin_ton": 31, "woman_climbing_medium_light_skin_ton": 31, "woman_climbing_medium_skin_ton": 31, "woman_climbing_tone1": 31, "woman_climbing_tone2": 31, "woman_climbing_tone3": 31, "woman_climbing_tone4": 31, "woman_climbing_tone5": 31, "woman_construction_work": 31, "woman_construction_worker_dark_skin_ton": 31, "woman_construction_worker_light_skin_ton": 31, "woman_construction_worker_medium_dark_skin_ton": 31, "woman_construction_worker_medium_light_skin_ton": 31, "woman_construction_worker_medium_skin_ton": 31, "woman_construction_worker_tone1": 31, "woman_construction_worker_tone2": 31, "woman_construction_worker_tone3": 31, "woman_construction_worker_tone4": 31, "woman_construction_worker_tone5": 31, "woman_cook": 31, "woman_cook_dark_skin_ton": 31, "woman_cook_light_skin_ton": 31, "woman_cook_medium_dark_skin_ton": 31, "woman_cook_medium_light_skin_ton": 31, "woman_cook_medium_skin_ton": 31, "woman_cook_tone1": 31, "woman_cook_tone2": 31, "woman_cook_tone3": 31, "woman_cook_tone4": 31, "woman_cook_tone5": 31, "woman_curly_hair": 31, "woman_curly_haired_dark_skin_ton": 31, "woman_curly_haired_light_skin_ton": 31, "woman_curly_haired_medium_dark_skin_ton": 31, "woman_curly_haired_medium_light_skin_ton": 31, "woman_curly_haired_medium_skin_ton": 31, "woman_curly_haired_tone1": 31, "woman_curly_haired_tone2": 31, "woman_curly_haired_tone3": 31, "woman_curly_haired_tone4": 31, "woman_curly_haired_tone5": 31, "woman_dark_skin_tone_beard": 31, "woman_detect": 31, "woman_detective_dark_skin_ton": 31, "woman_detective_light_skin_ton": 31, "woman_detective_medium_dark_skin_ton": 31, "woman_detective_medium_light_skin_ton": 31, "woman_detective_medium_skin_ton": 31, "woman_detective_tone1": 31, "woman_detective_tone2": 31, "woman_detective_tone3": 31, "woman_detective_tone4": 31, "woman_detective_tone5": 31, "woman_elf": 31, "woman_elf_dark_skin_ton": 31, "woman_elf_light_skin_ton": 31, "woman_elf_medium_dark_skin_ton": 31, "woman_elf_medium_light_skin_ton": 31, "woman_elf_medium_skin_ton": 31, "woman_elf_tone1": 31, "woman_elf_tone2": 31, "woman_elf_tone3": 31, "woman_elf_tone4": 31, "woman_elf_tone5": 31, "woman_facepalm": 31, "woman_facepalming_dark_skin_ton": 31, "woman_facepalming_light_skin_ton": 31, "woman_facepalming_medium_dark_skin_ton": 31, "woman_facepalming_medium_light_skin_ton": 31, "woman_facepalming_medium_skin_ton": 31, "woman_facepalming_tone1": 31, "woman_facepalming_tone2": 31, "woman_facepalming_tone3": 31, "woman_facepalming_tone4": 31, "woman_facepalming_tone5": 31, "woman_factory_work": 31, "woman_factory_worker_dark_skin_ton": 31, "woman_factory_worker_light_skin_ton": 31, "woman_factory_worker_medium_dark_skin_ton": 31, "woman_factory_worker_medium_light_skin_ton": 31, "woman_factory_worker_medium_skin_ton": 31, "woman_factory_worker_tone1": 31, "woman_factory_worker_tone2": 31, "woman_factory_worker_tone3": 31, "woman_factory_worker_tone4": 31, "woman_factory_worker_tone5": 31, "woman_fairi": 31, "woman_fairy_dark_skin_ton": 31, "woman_fairy_light_skin_ton": 31, "woman_fairy_medium_dark_skin_ton": 31, "woman_fairy_medium_light_skin_ton": 31, "woman_fairy_medium_skin_ton": 31, "woman_fairy_tone1": 31, "woman_fairy_tone2": 31, "woman_fairy_tone3": 31, "woman_fairy_tone4": 31, "woman_fairy_tone5": 31, "woman_farm": 31, "woman_farmer_dark_skin_ton": 31, "woman_farmer_light_skin_ton": 31, "woman_farmer_medium_dark_skin_ton": 31, "woman_farmer_medium_light_skin_ton": 31, "woman_farmer_medium_skin_ton": 31, "woman_farmer_tone1": 31, "woman_farmer_tone2": 31, "woman_farmer_tone3": 31, "woman_farmer_tone4": 31, "woman_farmer_tone5": 31, "woman_feeding_babi": 31, "woman_feeding_baby_dark_skin_ton": 31, "woman_feeding_baby_light_skin_ton": 31, "woman_feeding_baby_medium_dark_skin_ton": 31, "woman_feeding_baby_medium_light_skin_ton": 31, "woman_feeding_baby_medium_skin_ton": 31, "woman_feeding_baby_tone1": 31, "woman_feeding_baby_tone2": 31, "woman_feeding_baby_tone3": 31, "woman_feeding_baby_tone4": 31, "woman_feeding_baby_tone5": 31, "woman_firefight": 31, "woman_firefighter_dark_skin_ton": 31, "woman_firefighter_light_skin_ton": 31, "woman_firefighter_medium_dark_skin_ton": 31, "woman_firefighter_medium_light_skin_ton": 31, "woman_firefighter_medium_skin_ton": 31, "woman_firefighter_tone1": 31, "woman_firefighter_tone2": 31, "woman_firefighter_tone3": 31, "woman_firefighter_tone4": 31, "woman_firefighter_tone5": 31, "woman_frown": 31, "woman_frowning_dark_skin_ton": 31, "woman_frowning_light_skin_ton": 31, "woman_frowning_medium_dark_skin_ton": 31, "woman_frowning_medium_light_skin_ton": 31, "woman_frowning_medium_skin_ton": 31, "woman_frowning_tone1": 31, "woman_frowning_tone2": 31, "woman_frowning_tone3": 31, "woman_frowning_tone4": 31, "woman_frowning_tone5": 31, "woman_geni": 31, "woman_gesturing_no": 31, "woman_gesturing_no_dark_skin_ton": 31, "woman_gesturing_no_light_skin_ton": 31, "woman_gesturing_no_medium_dark_skin_ton": 31, "woman_gesturing_no_medium_light_skin_ton": 31, "woman_gesturing_no_medium_skin_ton": 31, "woman_gesturing_no_tone1": 31, "woman_gesturing_no_tone2": 31, "woman_gesturing_no_tone3": 31, "woman_gesturing_no_tone4": 31, "woman_gesturing_no_tone5": 31, "woman_gesturing_ok": 31, "woman_gesturing_ok_dark_skin_ton": 31, "woman_gesturing_ok_light_skin_ton": 31, "woman_gesturing_ok_medium_dark_skin_ton": 31, "woman_gesturing_ok_medium_light_skin_ton": 31, "woman_gesturing_ok_medium_skin_ton": 31, "woman_gesturing_ok_tone1": 31, "woman_gesturing_ok_tone2": 31, "woman_gesturing_ok_tone3": 31, "woman_gesturing_ok_tone4": 31, "woman_gesturing_ok_tone5": 31, "woman_getting_face_massag": 31, "woman_getting_face_massage_dark_skin_ton": 31, "woman_getting_face_massage_light_skin_ton": 31, "woman_getting_face_massage_medium_dark_skin_ton": 31, "woman_getting_face_massage_medium_light_skin_ton": 31, "woman_getting_face_massage_medium_skin_ton": 31, "woman_getting_face_massage_tone1": 31, "woman_getting_face_massage_tone2": 31, "woman_getting_face_massage_tone3": 31, "woman_getting_face_massage_tone4": 31, "woman_getting_face_massage_tone5": 31, "woman_getting_haircut": 31, "woman_getting_haircut_dark_skin_ton": 31, "woman_getting_haircut_light_skin_ton": 31, "woman_getting_haircut_medium_dark_skin_ton": 31, "woman_getting_haircut_medium_light_skin_ton": 31, "woman_getting_haircut_medium_skin_ton": 31, "woman_getting_haircut_tone1": 31, "woman_getting_haircut_tone2": 31, "woman_getting_haircut_tone3": 31, "woman_getting_haircut_tone4": 31, "woman_getting_haircut_tone5": 31, "woman_golf": 31, "woman_golfing_dark_skin_ton": 31, "woman_golfing_light_skin_ton": 31, "woman_golfing_medium_dark_skin_ton": 31, "woman_golfing_medium_light_skin_ton": 31, "woman_golfing_medium_skin_ton": 31, "woman_golfing_tone1": 31, "woman_golfing_tone2": 31, "woman_golfing_tone3": 31, "woman_golfing_tone4": 31, "woman_golfing_tone5": 31, "woman_guard": 31, "woman_guard_dark_skin_ton": 31, "woman_guard_light_skin_ton": 31, "woman_guard_medium_dark_skin_ton": 31, "woman_guard_medium_light_skin_ton": 31, "woman_guard_medium_skin_ton": 31, "woman_guard_tone1": 31, "woman_guard_tone2": 31, "woman_guard_tone3": 31, "woman_guard_tone4": 31, "woman_guard_tone5": 31, "woman_health_work": 31, "woman_health_worker_dark_skin_ton": 31, "woman_health_worker_light_skin_ton": 31, "woman_health_worker_medium_dark_skin_ton": 31, "woman_health_worker_medium_light_skin_ton": 31, "woman_health_worker_medium_skin_ton": 31, "woman_health_worker_tone1": 31, "woman_health_worker_tone2": 31, "woman_health_worker_tone3": 31, "woman_health_worker_tone4": 31, "woman_health_worker_tone5": 31, "woman_in_lotus_posit": 31, "woman_in_lotus_position_dark_skin_ton": 31, "woman_in_lotus_position_light_skin_ton": 31, "woman_in_lotus_position_medium_dark_skin_ton": 31, "woman_in_lotus_position_medium_light_skin_ton": 31, "woman_in_lotus_position_medium_skin_ton": 31, "woman_in_lotus_position_tone1": 31, "woman_in_lotus_position_tone2": 31, "woman_in_lotus_position_tone3": 31, "woman_in_lotus_position_tone4": 31, "woman_in_lotus_position_tone5": 31, "woman_in_manual_wheelchair": 31, "woman_in_manual_wheelchair_dark_skin_ton": 31, "woman_in_manual_wheelchair_light_skin_ton": 31, "woman_in_manual_wheelchair_medium_dark_skin_ton": 31, "woman_in_manual_wheelchair_medium_light_skin_ton": 31, "woman_in_manual_wheelchair_medium_skin_ton": 31, "woman_in_manual_wheelchair_tone1": 31, "woman_in_manual_wheelchair_tone2": 31, "woman_in_manual_wheelchair_tone3": 31, "woman_in_manual_wheelchair_tone4": 31, "woman_in_manual_wheelchair_tone5": 31, "woman_in_motorized_wheelchair": 31, "woman_in_motorized_wheelchair_dark_skin_ton": 31, "woman_in_motorized_wheelchair_light_skin_ton": 31, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 31, "woman_in_motorized_wheelchair_medium_light_skin_ton": 31, "woman_in_motorized_wheelchair_medium_skin_ton": 31, "woman_in_motorized_wheelchair_tone1": 31, "woman_in_motorized_wheelchair_tone2": 31, "woman_in_motorized_wheelchair_tone3": 31, "woman_in_motorized_wheelchair_tone4": 31, "woman_in_motorized_wheelchair_tone5": 31, "woman_in_steamy_room": 31, "woman_in_steamy_room_dark_skin_ton": 31, "woman_in_steamy_room_light_skin_ton": 31, "woman_in_steamy_room_medium_dark_skin_ton": 31, "woman_in_steamy_room_medium_light_skin_ton": 31, "woman_in_steamy_room_medium_skin_ton": 31, "woman_in_steamy_room_tone1": 31, "woman_in_steamy_room_tone2": 31, "woman_in_steamy_room_tone3": 31, "woman_in_steamy_room_tone4": 31, "woman_in_steamy_room_tone5": 31, "woman_in_tuxedo": 31, "woman_in_tuxedo_dark_skin_ton": 31, "woman_in_tuxedo_light_skin_ton": 31, "woman_in_tuxedo_medium_dark_skin_ton": 31, "woman_in_tuxedo_medium_light_skin_ton": 31, "woman_in_tuxedo_medium_skin_ton": 31, "woman_in_tuxedo_tone1": 31, "woman_in_tuxedo_tone2": 31, "woman_in_tuxedo_tone3": 31, "woman_in_tuxedo_tone4": 31, "woman_in_tuxedo_tone5": 31, "woman_judg": 31, "woman_judge_dark_skin_ton": 31, "woman_judge_light_skin_ton": 31, "woman_judge_medium_dark_skin_ton": 31, "woman_judge_medium_light_skin_ton": 31, "woman_judge_medium_skin_ton": 31, "woman_judge_tone1": 31, "woman_judge_tone2": 31, "woman_judge_tone3": 31, "woman_judge_tone4": 31, "woman_judge_tone5": 31, "woman_juggl": 31, "woman_juggling_dark_skin_ton": 31, "woman_juggling_light_skin_ton": 31, "woman_juggling_medium_dark_skin_ton": 31, "woman_juggling_medium_light_skin_ton": 31, "woman_juggling_medium_skin_ton": 31, "woman_juggling_tone1": 31, "woman_juggling_tone2": 31, "woman_juggling_tone3": 31, "woman_juggling_tone4": 31, "woman_juggling_tone5": 31, "woman_kneel": 31, "woman_kneeling_dark_skin_ton": 31, "woman_kneeling_light_skin_ton": 31, "woman_kneeling_medium_dark_skin_ton": 31, "woman_kneeling_medium_light_skin_ton": 31, "woman_kneeling_medium_skin_ton": 31, "woman_kneeling_tone1": 31, "woman_kneeling_tone2": 31, "woman_kneeling_tone3": 31, "woman_kneeling_tone4": 31, "woman_kneeling_tone5": 31, "woman_lifting_weight": 31, "woman_lifting_weights_dark_skin_ton": 31, "woman_lifting_weights_light_skin_ton": 31, "woman_lifting_weights_medium_dark_skin_ton": 31, "woman_lifting_weights_medium_light_skin_ton": 31, "woman_lifting_weights_medium_skin_ton": 31, "woman_lifting_weights_tone1": 31, "woman_lifting_weights_tone2": 31, "woman_lifting_weights_tone3": 31, "woman_lifting_weights_tone4": 31, "woman_lifting_weights_tone5": 31, "woman_light_skin_tone_beard": 31, "woman_mag": 31, "woman_mage_dark_skin_ton": 31, "woman_mage_light_skin_ton": 31, "woman_mage_medium_dark_skin_ton": 31, "woman_mage_medium_light_skin_ton": 31, "woman_mage_medium_skin_ton": 31, "woman_mage_tone1": 31, "woman_mage_tone2": 31, "woman_mage_tone3": 31, "woman_mage_tone4": 31, "woman_mage_tone5": 31, "woman_mechan": 31, "woman_mechanic_dark_skin_ton": 31, "woman_mechanic_light_skin_ton": 31, "woman_mechanic_medium_dark_skin_ton": 31, "woman_mechanic_medium_light_skin_ton": 31, "woman_mechanic_medium_skin_ton": 31, "woman_mechanic_tone1": 31, "woman_mechanic_tone2": 31, "woman_mechanic_tone3": 31, "woman_mechanic_tone4": 31, "woman_mechanic_tone5": 31, "woman_medium_dark_skin_tone_beard": 31, "woman_medium_light_skin_tone_beard": 31, "woman_medium_skin_tone_beard": 31, "woman_mountain_bik": 31, "woman_mountain_biking_dark_skin_ton": 31, "woman_mountain_biking_light_skin_ton": 31, "woman_mountain_biking_medium_dark_skin_ton": 31, "woman_mountain_biking_medium_light_skin_ton": 31, "woman_mountain_biking_medium_skin_ton": 31, "woman_mountain_biking_tone1": 31, "woman_mountain_biking_tone2": 31, "woman_mountain_biking_tone3": 31, "woman_mountain_biking_tone4": 31, "woman_mountain_biking_tone5": 31, "woman_office_work": 31, "woman_office_worker_dark_skin_ton": 31, "woman_office_worker_light_skin_ton": 31, "woman_office_worker_medium_dark_skin_ton": 31, "woman_office_worker_medium_light_skin_ton": 31, "woman_office_worker_medium_skin_ton": 31, "woman_office_worker_tone1": 31, "woman_office_worker_tone2": 31, "woman_office_worker_tone3": 31, "woman_office_worker_tone4": 31, "woman_office_worker_tone5": 31, "woman_pilot": 31, "woman_pilot_dark_skin_ton": 31, "woman_pilot_light_skin_ton": 31, "woman_pilot_medium_dark_skin_ton": 31, "woman_pilot_medium_light_skin_ton": 31, "woman_pilot_medium_skin_ton": 31, "woman_pilot_tone1": 31, "woman_pilot_tone2": 31, "woman_pilot_tone3": 31, "woman_pilot_tone4": 31, "woman_pilot_tone5": 31, "woman_playing_handbal": 31, "woman_playing_handball_dark_skin_ton": 31, "woman_playing_handball_light_skin_ton": 31, "woman_playing_handball_medium_dark_skin_ton": 31, "woman_playing_handball_medium_light_skin_ton": 31, "woman_playing_handball_medium_skin_ton": 31, "woman_playing_handball_tone1": 31, "woman_playing_handball_tone2": 31, "woman_playing_handball_tone3": 31, "woman_playing_handball_tone4": 31, "woman_playing_handball_tone5": 31, "woman_playing_water_polo": 31, "woman_playing_water_polo_dark_skin_ton": 31, "woman_playing_water_polo_light_skin_ton": 31, "woman_playing_water_polo_medium_dark_skin_ton": 31, "woman_playing_water_polo_medium_light_skin_ton": 31, "woman_playing_water_polo_medium_skin_ton": 31, "woman_playing_water_polo_tone1": 31, "woman_playing_water_polo_tone2": 31, "woman_playing_water_polo_tone3": 31, "woman_playing_water_polo_tone4": 31, "woman_playing_water_polo_tone5": 31, "woman_police_offic": 31, "woman_police_officer_dark_skin_ton": 31, "woman_police_officer_light_skin_ton": 31, "woman_police_officer_medium_dark_skin_ton": 31, "woman_police_officer_medium_light_skin_ton": 31, "woman_police_officer_medium_skin_ton": 31, "woman_police_officer_tone1": 31, "woman_police_officer_tone2": 31, "woman_police_officer_tone3": 31, "woman_police_officer_tone4": 31, "woman_police_officer_tone5": 31, "woman_pout": 31, "woman_pouting_dark_skin_ton": 31, "woman_pouting_light_skin_ton": 31, "woman_pouting_medium_dark_skin_ton": 31, "woman_pouting_medium_light_skin_ton": 31, "woman_pouting_medium_skin_ton": 31, "woman_pouting_tone1": 31, "woman_pouting_tone2": 31, "woman_pouting_tone3": 31, "woman_pouting_tone4": 31, "woman_pouting_tone5": 31, "woman_raising_hand": 31, "woman_raising_hand_dark_skin_ton": 31, "woman_raising_hand_light_skin_ton": 31, "woman_raising_hand_medium_dark_skin_ton": 31, "woman_raising_hand_medium_light_skin_ton": 31, "woman_raising_hand_medium_skin_ton": 31, "woman_raising_hand_tone1": 31, "woman_raising_hand_tone2": 31, "woman_raising_hand_tone3": 31, "woman_raising_hand_tone4": 31, "woman_raising_hand_tone5": 31, "woman_red_hair": 31, "woman_red_haired_dark_skin_ton": 31, "woman_red_haired_light_skin_ton": 31, "woman_red_haired_medium_dark_skin_ton": 31, "woman_red_haired_medium_light_skin_ton": 31, "woman_red_haired_medium_skin_ton": 31, "woman_red_haired_tone1": 31, "woman_red_haired_tone2": 31, "woman_red_haired_tone3": 31, "woman_red_haired_tone4": 31, "woman_red_haired_tone5": 31, "woman_rowing_boat": 31, "woman_rowing_boat_dark_skin_ton": 31, "woman_rowing_boat_light_skin_ton": 31, "woman_rowing_boat_medium_dark_skin_ton": 31, "woman_rowing_boat_medium_light_skin_ton": 31, "woman_rowing_boat_medium_skin_ton": 31, "woman_rowing_boat_tone1": 31, "woman_rowing_boat_tone2": 31, "woman_rowing_boat_tone3": 31, "woman_rowing_boat_tone4": 31, "woman_rowing_boat_tone5": 31, "woman_run": 31, "woman_running_dark_skin_ton": 31, "woman_running_light_skin_ton": 31, "woman_running_medium_dark_skin_ton": 31, "woman_running_medium_light_skin_ton": 31, "woman_running_medium_skin_ton": 31, "woman_running_tone1": 31, "woman_running_tone2": 31, "woman_running_tone3": 31, "woman_running_tone4": 31, "woman_running_tone5": 31, "woman_scientist": 31, "woman_scientist_dark_skin_ton": 31, "woman_scientist_light_skin_ton": 31, "woman_scientist_medium_dark_skin_ton": 31, "woman_scientist_medium_light_skin_ton": 31, "woman_scientist_medium_skin_ton": 31, "woman_scientist_tone1": 31, "woman_scientist_tone2": 31, "woman_scientist_tone3": 31, "woman_scientist_tone4": 31, "woman_scientist_tone5": 31, "woman_shrug": 31, "woman_shrugging_dark_skin_ton": 31, "woman_shrugging_light_skin_ton": 31, "woman_shrugging_medium_dark_skin_ton": 31, "woman_shrugging_medium_light_skin_ton": 31, "woman_shrugging_medium_skin_ton": 31, "woman_shrugging_tone1": 31, "woman_shrugging_tone2": 31, "woman_shrugging_tone3": 31, "woman_shrugging_tone4": 31, "woman_shrugging_tone5": 31, "woman_sing": 31, "woman_singer_dark_skin_ton": 31, "woman_singer_light_skin_ton": 31, "woman_singer_medium_dark_skin_ton": 31, "woman_singer_medium_light_skin_ton": 31, "woman_singer_medium_skin_ton": 31, "woman_singer_tone1": 31, "woman_singer_tone2": 31, "woman_singer_tone3": 31, "woman_singer_tone4": 31, "woman_singer_tone5": 31, "woman_stand": 31, "woman_standing_dark_skin_ton": 31, "woman_standing_light_skin_ton": 31, "woman_standing_medium_dark_skin_ton": 31, "woman_standing_medium_light_skin_ton": 31, "woman_standing_medium_skin_ton": 31, "woman_standing_tone1": 31, "woman_standing_tone2": 31, "woman_standing_tone3": 31, "woman_standing_tone4": 31, "woman_standing_tone5": 31, "woman_stud": 31, "woman_student_dark_skin_ton": 31, "woman_student_light_skin_ton": 31, "woman_student_medium_dark_skin_ton": 31, "woman_student_medium_light_skin_ton": 31, "woman_student_medium_skin_ton": 31, "woman_student_tone1": 31, "woman_student_tone2": 31, "woman_student_tone3": 31, "woman_student_tone4": 31, "woman_student_tone5": 31, "woman_superhero": 31, "woman_superhero_dark_skin_ton": 31, "woman_superhero_light_skin_ton": 31, "woman_superhero_medium_dark_skin_ton": 31, "woman_superhero_medium_light_skin_ton": 31, "woman_superhero_medium_skin_ton": 31, "woman_superhero_tone1": 31, "woman_superhero_tone2": 31, "woman_superhero_tone3": 31, "woman_superhero_tone4": 31, "woman_superhero_tone5": 31, "woman_supervillain": 31, "woman_supervillain_dark_skin_ton": 31, "woman_supervillain_light_skin_ton": 31, "woman_supervillain_medium_dark_skin_ton": 31, "woman_supervillain_medium_light_skin_ton": 31, "woman_supervillain_medium_skin_ton": 31, "woman_supervillain_tone1": 31, "woman_supervillain_tone2": 31, "woman_supervillain_tone3": 31, "woman_supervillain_tone4": 31, "woman_supervillain_tone5": 31, "woman_surf": 31, "woman_surfing_dark_skin_ton": 31, "woman_surfing_light_skin_ton": 31, "woman_surfing_medium_dark_skin_ton": 31, "woman_surfing_medium_light_skin_ton": 31, "woman_surfing_medium_skin_ton": 31, "woman_surfing_tone1": 31, "woman_surfing_tone2": 31, "woman_surfing_tone3": 31, "woman_surfing_tone4": 31, "woman_surfing_tone5": 31, "woman_swim": 31, "woman_swimming_dark_skin_ton": 31, "woman_swimming_light_skin_ton": 31, "woman_swimming_medium_dark_skin_ton": 31, "woman_swimming_medium_light_skin_ton": 31, "woman_swimming_medium_skin_ton": 31, "woman_swimming_tone1": 31, "woman_swimming_tone2": 31, "woman_swimming_tone3": 31, "woman_swimming_tone4": 31, "woman_swimming_tone5": 31, "woman_teach": 31, "woman_teacher_dark_skin_ton": 31, "woman_teacher_light_skin_ton": 31, "woman_teacher_medium_dark_skin_ton": 31, "woman_teacher_medium_light_skin_ton": 31, "woman_teacher_medium_skin_ton": 31, "woman_teacher_tone1": 31, "woman_teacher_tone2": 31, "woman_teacher_tone3": 31, "woman_teacher_tone4": 31, "woman_teacher_tone5": 31, "woman_technologist": 31, "woman_technologist_dark_skin_ton": 31, "woman_technologist_light_skin_ton": 31, "woman_technologist_medium_dark_skin_ton": 31, "woman_technologist_medium_light_skin_ton": 31, "woman_technologist_medium_skin_ton": 31, "woman_technologist_tone1": 31, "woman_technologist_tone2": 31, "woman_technologist_tone3": 31, "woman_technologist_tone4": 31, "woman_technologist_tone5": 31, "woman_tipping_hand": 31, "woman_tipping_hand_dark_skin_ton": 31, "woman_tipping_hand_light_skin_ton": 31, "woman_tipping_hand_medium_dark_skin_ton": 31, "woman_tipping_hand_medium_light_skin_ton": 31, "woman_tipping_hand_medium_skin_ton": 31, "woman_tipping_hand_tone1": 31, "woman_tipping_hand_tone2": 31, "woman_tipping_hand_tone3": 31, "woman_tipping_hand_tone4": 31, "woman_tipping_hand_tone5": 31, "woman_tone1": 31, "woman_tone1_beard": 31, "woman_tone2": 31, "woman_tone2_beard": 31, "woman_tone3": 31, "woman_tone3_beard": 31, "woman_tone4": 31, "woman_tone4_beard": 31, "woman_tone5": 31, "woman_tone5_beard": 31, "woman_vampir": 31, "woman_vampire_dark_skin_ton": 31, "woman_vampire_light_skin_ton": 31, "woman_vampire_medium_dark_skin_ton": 31, "woman_vampire_medium_light_skin_ton": 31, "woman_vampire_medium_skin_ton": 31, "woman_vampire_tone1": 31, "woman_vampire_tone2": 31, "woman_vampire_tone3": 31, "woman_vampire_tone4": 31, "woman_vampire_tone5": 31, "woman_walk": 31, "woman_walking_dark_skin_ton": 31, "woman_walking_light_skin_ton": 31, "woman_walking_medium_dark_skin_ton": 31, "woman_walking_medium_light_skin_ton": 31, "woman_walking_medium_skin_ton": 31, "woman_walking_tone1": 31, "woman_walking_tone2": 31, "woman_walking_tone3": 31, "woman_walking_tone4": 31, "woman_walking_tone5": 31, "woman_wearing_turban": 31, "woman_wearing_turban_dark_skin_ton": 31, "woman_wearing_turban_light_skin_ton": 31, "woman_wearing_turban_medium_dark_skin_ton": 31, "woman_wearing_turban_medium_light_skin_ton": 31, "woman_wearing_turban_medium_skin_ton": 31, "woman_wearing_turban_tone1": 31, "woman_wearing_turban_tone2": 31, "woman_wearing_turban_tone3": 31, "woman_wearing_turban_tone4": 31, "woman_wearing_turban_tone5": 31, "woman_white_hair": 31, "woman_white_haired_dark_skin_ton": 31, "woman_white_haired_light_skin_ton": 31, "woman_white_haired_medium_dark_skin_ton": 31, "woman_white_haired_medium_light_skin_ton": 31, "woman_white_haired_medium_skin_ton": 31, "woman_white_haired_tone1": 31, "woman_white_haired_tone2": 31, "woman_white_haired_tone3": 31, "woman_white_haired_tone4": 31, "woman_white_haired_tone5": 31, "woman_with_headscarf": 31, "woman_with_headscarf_dark_skin_ton": 31, "woman_with_headscarf_light_skin_ton": 31, "woman_with_headscarf_medium_dark_skin_ton": 31, "woman_with_headscarf_medium_light_skin_ton": 31, "woman_with_headscarf_medium_skin_ton": 31, "woman_with_headscarf_tone1": 31, "woman_with_headscarf_tone2": 31, "woman_with_headscarf_tone3": 31, "woman_with_headscarf_tone4": 31, "woman_with_headscarf_tone5": 31, "woman_with_probing_can": 31, "woman_with_probing_cane_dark_skin_ton": 31, "woman_with_probing_cane_light_skin_ton": 31, "woman_with_probing_cane_medium_dark_skin_ton": 31, "woman_with_probing_cane_medium_light_skin_ton": 31, "woman_with_probing_cane_medium_skin_ton": 31, "woman_with_probing_cane_tone1": 31, "woman_with_probing_cane_tone2": 31, "woman_with_probing_cane_tone3": 31, "woman_with_probing_cane_tone4": 31, "woman_with_probing_cane_tone5": 31, "woman_with_turban": 31, "woman_with_veil": 31, "woman_with_veil_dark_skin_ton": 31, "woman_with_veil_light_skin_ton": 31, "woman_with_veil_medium_dark_skin_ton": 31, "woman_with_veil_medium_light_skin_ton": 31, "woman_with_veil_medium_skin_ton": 31, "woman_with_veil_tone1": 31, "woman_with_veil_tone2": 31, "woman_with_veil_tone3": 31, "woman_with_veil_tone4": 31, "woman_with_veil_tone5": 31, "woman_zombi": 31, "womans_cloth": 31, "womans_flat_sho": 31, "womans_hat": 31, "women_holding_hands_dark_skin_ton": 31, "women_holding_hands_dark_skin_tone_light_skin_ton": 31, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 31, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 31, "women_holding_hands_dark_skin_tone_medium_skin_ton": 31, "women_holding_hands_light_skin_ton": 31, "women_holding_hands_light_skin_tone_dark_skin_ton": 31, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 31, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 31, "women_holding_hands_light_skin_tone_medium_skin_ton": 31, "women_holding_hands_medium_dark_skin_ton": 31, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 31, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 31, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 31, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 31, "women_holding_hands_medium_light_skin_ton": 31, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 31, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 31, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 31, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 31, "women_holding_hands_medium_skin_ton": 31, "women_holding_hands_medium_skin_tone_dark_skin_ton": 31, "women_holding_hands_medium_skin_tone_light_skin_ton": 31, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 31, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 31, "women_holding_hands_tone1": 31, "women_holding_hands_tone1_tone2": 31, "women_holding_hands_tone1_tone3": 31, "women_holding_hands_tone1_tone4": 31, "women_holding_hands_tone1_tone5": 31, "women_holding_hands_tone2": 31, "women_holding_hands_tone2_tone1": 31, "women_holding_hands_tone2_tone3": 31, "women_holding_hands_tone2_tone4": 31, "women_holding_hands_tone2_tone5": 31, "women_holding_hands_tone3": 31, "women_holding_hands_tone3_tone1": 31, "women_holding_hands_tone3_tone2": 31, "women_holding_hands_tone3_tone4": 31, "women_holding_hands_tone3_tone5": 31, "women_holding_hands_tone4": 31, "women_holding_hands_tone4_tone1": 31, "women_holding_hands_tone4_tone2": 31, "women_holding_hands_tone4_tone3": 31, "women_holding_hands_tone4_tone5": 31, "women_holding_hands_tone5": 31, "women_holding_hands_tone5_tone1": 31, "women_holding_hands_tone5_tone2": 31, "women_holding_hands_tone5_tone3": 31, "women_holding_hands_tone5_tone4": 31, "women_with_bunny_ears_parti": 31, "women_wrestl": 31, "women": 31, "wood": 31, "woozy_fac": 31, "world_map": 31, "worm": [31, 430], "worri": [31, 398], "worship_symbol": 31, "wrench": 31, "wrestler": 31, "wrestlers_tone1": 31, "wrestlers_tone2": 31, "wrestlers_tone3": 31, "wrestlers_tone4": 31, "wrestlers_tone5": 31, "wrestl": 31, "wrestling_tone1": 31, "wrestling_tone2": 31, "wrestling_tone3": 31, "wrestling_tone4": 31, "wrestling_tone5": 31, "writing_hand": 31, "writing_hand_tone1": 31, "writing_hand_tone2": 31, "writing_hand_tone3": 31, "writing_hand_tone4": 31, "writing_hand_tone5": 31, "w": [31, 39, 169, 173, 176, 198, 202, 208, 218, 221, 228, 249, 263, 311, 312, 331, 419, 554, 615, 811, 825, 871, 872, 906, 961, 1001, 1014, 1059, 1061, 1089, 1093, 1098], "xk": 31, "yarn": 31, "yawning_fac": 31, "yellow_circl": 31, "yellow_heart": 31, "yellow_squar": 31, "yemen": 31, "yen": [31, 35], "yin_yang": 31, "yo_yo": 31, "yt": 31, "yum": 31, "za": [31, 273, 350], "zambia": 31, "zany_fac": 31, "zap": 31, "zebra": 31, "zimbabw": 31, "zipper_mouth": 31, "zipper_mouth_fac": 31, "zm": 31, "zombi": 31, "zw": 31, "zzz": 31, "sheet": [32, 64, 134, 173, 185, 314, 316, 317, 663, 826, 870, 871], "layout": [32, 129, 150, 219, 223, 395, 408, 1098], "emoji": 32, "sphinxemoji": 32, "mmlalia": 32, "mathml": 32, "alias": [32, 351, 827], "entiti": [32, 133, 359, 373, 400, 417, 437, 445, 552, 735, 924, 1077], "isoamsa": 32, "mathemat": [32, 225, 1013], "arrow": [32, 34, 35, 37, 72, 73, 826, 956], "isoamsr": 32, "relat": [32, 68, 121, 154, 165, 169, 190, 194, 249, 262, 363, 372, 379, 383, 385, 389, 392, 396, 405, 409, 414, 415, 422, 537, 637, 675, 692, 716, 717, 718, 719, 734, 743, 791, 869, 924, 934, 1064, 1098, 1099], "isonum": 32, "binari": [32, 41, 49, 53, 54, 57, 75, 86, 87, 129, 133, 139, 193, 194, 202, 206, 208, 209, 211, 216, 218, 221, 231, 318, 362, 395, 407, 575, 652, 744, 758, 766, 811, 940, 943, 956, 968, 995, 1000, 1077, 1091], "sphinxish": 32, "taken": [33, 34, 35, 37, 39, 72, 73, 132, 136, 137, 144, 193, 397, 429, 494, 503, 550, 705, 769, 791, 801, 826, 940, 991, 1077, 1091], "definit": [33, 34, 35, 37, 106, 129, 133, 135, 136, 138, 140, 153, 162, 165, 166, 171, 185, 192, 194, 258, 260, 276, 310, 331, 332, 333, 363, 372, 375, 378, 379, 385, 389, 392, 396, 402, 403, 404, 405, 407, 408, 409, 414, 415, 422, 424, 428, 436, 437, 459, 481, 521, 539, 540, 541, 546, 547, 553, 554, 556, 565, 568, 569, 591, 617, 626, 637, 647, 663, 675, 677, 690, 694, 698, 716, 718, 719, 744, 766, 827, 871, 872, 940, 959, 966, 972, 977, 988, 992, 1005, 1006, 1009, 1073, 1087, 1105, 1115, 1118], "includ": [33, 34, 35, 37, 43, 106, 125, 135, 140, 144, 148, 150, 161, 165, 172, 184, 185, 194, 195, 202, 206, 208, 209, 211, 218, 221, 225, 246, 260, 267, 276, 307, 318, 332, 333, 335, 339, 341, 343, 374, 375, 390, 395, 398, 400, 404, 411, 420, 421, 423, 424, 425, 427, 432, 435, 436, 437, 438, 439, 440, 442, 444, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 521, 527, 530, 537, 538, 539, 541, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 562, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 615, 619, 624, 625, 626, 627, 628, 629, 630, 631, 634, 635, 636, 638, 640, 642, 645, 646, 647, 648, 650, 652, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 677, 678, 679, 680, 682, 684, 685, 687, 689, 693, 694, 695, 696, 697, 698, 699, 702, 704, 707, 709, 710, 713, 714, 715, 717, 719, 725, 730, 735, 737, 744, 746, 748, 750, 752, 754, 758, 760, 762, 771, 776, 780, 783, 786, 803, 823, 826, 832, 859, 864, 866, 870, 886, 888, 889, 890, 892, 895, 896, 897, 898, 899, 902, 904, 907, 915, 919, 921, 924, 930, 933, 937, 940, 943, 952, 955, 956, 958, 960, 988, 989, 1014, 1015, 1087, 1094, 1100, 1105, 1107, 1110, 1120], "substitut": [33, 34, 35, 37, 105, 185, 221, 267, 307, 401, 417, 421, 652, 883, 1076], "angzarr": 33, "0237c": 33, "angl": [33, 35, 37, 1121], "WITH": [33, 34, 37, 889], "downward": [33, 34, 35, 37, 429], "zigzag": 33, "cirmid": 33, "02aef": 33, "vertic": [33, 34, 35, 37, 352], "circl": [33, 34, 37, 195, 513, 806], "abov": [33, 34, 37, 77, 112, 133, 135, 136, 137, 138, 140, 144, 148, 152, 171, 174, 185, 194, 202, 208, 218, 221, 225, 284, 321, 368, 391, 401, 411, 437, 457, 459, 481, 484, 485, 494, 495, 520, 530, 547, 548, 552, 553, 572, 616, 678, 727, 760, 766, 776, 793, 794, 810, 838, 870, 871, 872, 896, 900, 926, 933, 956, 964, 995, 1009, 1080, 1086, 1098, 1105], "cudarrl": 33, "02938": 33, "side": [33, 153, 175, 249, 258, 347, 356, 397, 459, 491, 530, 554, 556, 557, 707, 746, 750, 805, 826, 874, 964, 997, 1043, 1069, 1071, 1080], "arc": 33, "clockwis": [33, 37], "cudarrr": 33, "02935": 33, "rightward": [33, 34, 35, 37], "THEN": 33, "curv": [33, 34], "cularr": 33, "021b6": [33, 37], "anticlockwis": [33, 37], "semicircl": [33, 37], "cularrp": 33, "0293d": 33, "plu": [33, 34, 35, 37, 64, 134, 140, 202, 208, 218, 221, 234, 368, 495, 521, 553, 555, 557, 766, 892], "curarr": 33, "021b7": [33, 37], "curarrm": 33, "0293c": 33, "minu": [33, 34, 35, 37, 213, 555, 698], "darr": [33, 35], "021a1": 33, "head": [33, 37, 39, 60, 134, 136, 139, 173, 175, 185, 239, 248, 257, 269, 270, 707, 719, 796, 852, 853, 856, 859, 862, 887, 888, 955, 1021], "021d3": [33, 37], "doubl": [33, 34, 35, 37, 195, 211, 215, 221, 318, 333, 351, 352, 353, 356, 375, 395, 404, 436, 442, 447, 449, 456, 465, 467, 468, 473, 474, 475, 476, 477, 478, 481, 489, 491, 493, 494, 495, 506, 537, 539, 545, 547, 548, 552, 556, 588, 615, 639, 642, 645, 648, 652, 657, 658, 659, 660, 673, 692, 693, 695, 698, 707, 766, 826, 870, 964, 984, 1008, 1085], "darr2": 33, "021ca": [33, 37], "pair": [33, 37, 100, 101, 113, 148, 190, 200, 203, 206, 211, 215, 216, 221, 228, 230, 242, 243, 266, 272, 438, 442, 445, 495, 513, 591, 592, 593, 596, 638, 684, 685, 689, 719, 730, 735, 862, 874, 875, 876, 878, 958, 968, 1012, 1064, 1075, 1093], "ddarr": 33, "ddotrahd": 33, "02911": 33, "dot": [33, 34, 35, 37, 137, 411, 426, 431, 848, 942], "stem": [33, 735], "dfisht": 33, "0297f": 33, "down": [33, 34, 37, 132, 133, 136, 161, 238, 276, 316, 337, 378, 423, 424, 435, 442, 484, 491, 492, 493, 494, 513, 555, 588, 613, 635, 652, 677, 694, 719, 734, 735, 766, 812, 858, 865, 872, 940, 943, 1105, 1110], "tail": [33, 37, 134, 173, 175, 185, 239, 248, 269, 270, 707, 719, 754, 796, 853, 856, 859, 862, 1089], "dhar": 33, "02965": 33, "harpoon": [33, 37], "barb": [33, 37], "left": [33, 34, 35, 37, 62, 83, 109, 110, 113, 132, 133, 135, 153, 184, 195, 221, 267, 354, 355, 362, 368, 440, 484, 491, 537, 540, 544, 552, 553, 610, 617, 643, 808, 809, 826, 870, 879, 898, 940, 968, 972, 983, 984, 995, 1009, 1063, 1069, 1087], "besid": [33, 34, 37, 148], "dharl": 33, "021c3": [33, 37], "leftward": [33, 34, 35, 37], "dharr": 33, "021c2": [33, 37], "dlarr": 33, "02199": [33, 37], "south": [33, 37], "west": [33, 37, 142], "drarr": 33, "02198": [33, 37], "east": [33, 37], "duarr": 33, "021f5": [33, 37], "OF": [33, 34, 37, 136, 685], "upward": [33, 35, 37], "duhar": 33, "0296f": [33, 37], "dzigrarr": 33, "027ff": 33, "long": [33, 34, 37, 52, 132, 133, 134, 135, 136, 140, 143, 161, 165, 173, 185, 202, 206, 208, 211, 218, 221, 229, 257, 310, 328, 339, 349, 351, 352, 356, 360, 361, 388, 395, 397, 406, 410, 412, 413, 432, 437, 494, 539, 540, 545, 550, 615, 685, 694, 704, 725, 737, 746, 748, 764, 766, 771, 776, 780, 805, 826, 848, 872, 883, 889, 892, 922, 930, 959, 966, 1006, 1016, 1064, 1071, 1082, 1089, 1118], "squiggl": 33, "erarr": 33, "02971": 33, "equal": [33, 34, 35, 37, 135, 157, 169, 185, 192, 195, 221, 225, 257, 258, 267, 279, 333, 339, 355, 362, 367, 378, 403, 406, 483, 489, 496, 500, 535, 580, 599, 603, 630, 632, 698, 719, 801, 805, 859, 883, 922, 926, 927, 995, 1049, 1105], "sign": [33, 34, 35, 37, 136, 143, 148, 211, 349, 351, 359, 403, 417, 441, 615, 678, 739, 995, 1009, 1069, 1115, 1116], "harr": 33, "021d4": [33, 37], "02194": [33, 37], "harrcir": 33, "02948": 33, "small": [33, 37, 42, 105, 132, 134, 135, 165, 185, 189, 245, 284, 331, 403, 407, 440, 492, 537, 649, 694, 863, 864, 870, 902, 934, 987, 1010, 1076, 1105], "harrw": 33, "021ad": [33, 37], "hoarr": 33, "021ff": 33, "imof": 33, "022b7": 33, "imag": [33, 34, 37, 127, 129, 132, 133, 134, 135, 143, 156, 218, 221, 225, 243, 310, 316, 413, 419, 426, 545, 744, 766, 863, 1066, 1071], "laarr": 33, "021da": [33, 37], "tripl": [33, 34, 37, 58, 61], "larr": [33, 35], "0219e": [33, 37], "larr2": 33, "021c7": [33, 37], "larrbf": 33, "0291f": 33, "bar": [33, 34, 35, 37, 139, 160, 180, 203, 216, 221, 230, 233, 263, 266, 267, 272, 285, 319, 419, 484, 699, 962, 1004, 1064], "TO": [33, 34, 37, 1019], "black": [33, 37, 138, 189, 197, 209, 212, 591, 952], "larrf": 33, "0291d": 33, "larrhk": 33, "021a9": [33, 37], "larrlp": 33, "021ab": [33, 37], "larrpl": 33, "02939": 33, "larrsim": 33, "02973": 33, "tild": [33, 34, 37], "larrtl": 33, "021a2": [33, 37], "latail": 33, "0291b": 33, "02919": 33, "lbarr": 33, "0290e": 33, "0290c": 33, "ldca": 33, "02936": 33, "ldrdhar": 33, "02967": 33, "ldrushar": 33, "0294b": 33, "ldsh": 33, "021b2": 33, "tip": [33, 37, 190, 200, 203, 206, 230, 242, 266, 272, 1064], "lfisht": 33, "0297c": 33, "lhar": 33, "02962": 33, "lhard": 33, "021bd": [33, 37], "lharu": 33, "021bc": [33, 37], "lharul": 33, "0296a": 33, "llarr": 33, "llhard": 33, "0296b": 33, "below": [33, 34, 37, 113, 129, 133, 134, 135, 138, 140, 144, 153, 165, 174, 192, 225, 238, 284, 342, 344, 411, 418, 429, 462, 476, 484, 485, 491, 494, 629, 631, 645, 657, 677, 678, 694, 698, 707, 709, 714, 715, 717, 739, 760, 801, 805, 809, 826, 863, 872, 893, 937, 940, 1105], "loarr": 33, "021fd": 33, "lrarr": 33, "021c6": [33, 37], "lrarr2": 33, "lrhar": 33, "021cb": [33, 37], "lrhar2": 33, "lrhard": 33, "0296d": 33, "lsh": [33, 37], "021b0": [33, 37], "lurdshar": 33, "0294a": 33, "luruhar": 33, "02966": 33, "02905": 33, "021a6": [33, 37], "midcir": 33, "02af0": 33, "mumap": 33, "022b8": [33, 37], "multimap": [33, 37, 258, 513, 590, 599, 603, 632, 719], "nearhk": 33, "02924": 33, "north": [33, 37], "nearr": 33, "021d7": 33, "02197": [33, 37], "nesear": 33, "02928": [33, 37], "AND": [33, 34, 37, 339, 355, 378, 541, 854, 983], "nharr": 33, "021ce": [33, 37], "stroke": [33, 37], "021ae": [33, 37], "nlarr": 33, "021cd": [33, 37], "0219a": [33, 37], "nrarr": 33, "021cf": [33, 37], "0219b": [33, 37], "nrarrc": 33, "02933": 33, "00338": [33, 37], "directli": [33, 39, 129, 148, 234, 259, 296, 435, 552, 621, 737, 750, 762, 769, 780, 872, 882, 886, 940, 963, 983, 991, 1054, 1056, 1083], "slash": [33, 37, 850, 934], "nrarrw": 33, "0219d": [33, 37], "nvharr": 33, "02904": 33, "nvlarr": 33, "02902": 33, "nvrarr": 33, "02903": 33, "nwarhk": 33, "02923": 33, "nwarr": 33, "021d6": 33, "02196": [33, 37], "nwnear": 33, "02927": 33, "olarr": 33, "021ba": [33, 37], "orarr": 33, "021bb": [33, 37], "origof": 33, "022b6": 33, "origin": [33, 34, 37, 60, 62, 115, 130, 136, 138, 143, 148, 154, 166, 198, 202, 208, 211, 213, 218, 221, 246, 257, 262, 266, 267, 269, 270, 272, 276, 284, 288, 292, 377, 393, 437, 440, 491, 538, 546, 547, 548, 576, 627, 628, 630, 631, 689, 693, 696, 698, 709, 739, 766, 767, 790, 793, 794, 809, 823, 961, 1066, 1077, 1100], "raarr": 33, "021db": [33, 37], "rarr": [33, 35], "021a0": [33, 37], "rarr2": 33, "021c9": [33, 37], "rarrap": 33, "02975": 33, "almost": [33, 34, 37, 58, 61, 135, 148, 157, 194, 356, 404, 406, 427, 542, 607, 635, 683, 699, 934], "rarrbf": 33, "02920": 33, "rarrc": 33, "rarrf": 33, "0291e": 33, "rarrhk": 33, "021aa": [33, 37], "rarrlp": 33, "021ac": [33, 37], "rarrpl": 33, "02945": 33, "rarrsim": 33, "02974": 33, "rarrtl": 33, "02916": 33, "021a3": [33, 37], "rarrw": 33, "ratail": 33, "0291c": 33, "0291a": 33, "rbarr": 33, "02910": [33, 37], "0290f": [33, 37], "0290d": [33, 37], "rdca": 33, "02937": 33, "rdldhar": 33, "02969": 33, "rdsh": 33, "021b3": 33, "rfisht": 33, "0297d": 33, "rhar": 33, "02964": 33, "rhard": 33, "021c1": [33, 37], "rharu": 33, "021c0": [33, 37], "rharul": 33, "0296c": 33, "rlarr": 33, "021c4": [33, 37], "rlarr2": 33, "rlhar": 33, "021cc": [33, 37], "rlhar2": 33, "roarr": 33, "021fe": 33, "rrarr": 33, "rsh": [33, 37, 553, 873], "021b1": [33, 37], "ruluhar": 33, "02968": 33, "searhk": 33, "02925": [33, 37], "searr": 33, "021d8": 33, "seswar": 33, "02929": [33, 37], "simrarr": 33, "02972": 33, "slarr": 33, "02190": [33, 35, 37], "srarr": 33, "02192": [33, 35, 37], "swarhk": 33, "02926": [33, 37], "swarr": 33, "021d9": 33, "swnwar": 33, "0292a": 33, "uarr": [33, 35], "0219f": 33, "021d1": [33, 37], "uarr2": 33, "021c8": [33, 37], "uarrocir": 33, "02949": 33, "udarr": 33, "021c5": [33, 37], "udhar": 33, "0296e": [33, 37], "ufisht": 33, "0297e": 33, "uhar": 33, "02963": 33, "uharl": 33, "021bf": [33, 37], "uharr": 33, "021be": [33, 37], "uuarr": 33, "varr": 33, "021d5": [33, 37], "02195": [33, 37], "xharr": 33, "027fa": [33, 37], "027f7": [33, 37], "xlarr": 33, "027f8": [33, 37], "027f5": [33, 37], "xmap": 33, "027fc": [33, 37], "xrarr": 33, "027f9": [33, 37], "027f6": [33, 37], "zigrarr": 33, "021dd": 33, "ap": [34, 896], "02a70": 34, "approxim": [34, 37, 135, 231], "OR": [34, 37, 208, 339, 355, 378, 395, 854, 983], "0224a": [34, 37], "apid": 34, "0224b": 34, "asymp": 34, "02248": [34, 37], "barv": 34, "02ae7": 34, "tack": [34, 37], "overbar": 34, "bcong": 34, "0224c": [34, 37], "bepsi": 34, "003f6": [34, 37], "greek": [34, 37], "revers": [34, 35, 37, 178, 205, 211, 228, 246, 253, 258, 267, 273, 336, 513, 520, 521, 580, 584, 599, 603, 632, 677, 719, 721, 760, 799, 863, 924, 1011, 1044], "lunat": [34, 37], "epsilon": [34, 37], "bowti": 34, "022c8": 34, "bsim": 34, "0223d": [34, 37], "bsime": 34, "022cd": [34, 37], "bsolhsub": 34, "0005c": [34, 35], "02282": [34, 37], "solidu": [34, 35], "subset": [34, 37, 221, 943, 956, 1013], "bump": 34, "0224e": [34, 37], "geometr": [34, 37, 225], "equival": [34, 37, 77, 91, 105, 108, 221, 364, 368, 383, 388, 549, 626, 790, 792, 827, 859, 892, 972, 994, 1004, 1014], "02aae": 34, "bumpi": 34, "0224f": [34, 37], "between": [34, 37, 68, 88, 102, 133, 134, 135, 137, 143, 144, 154, 169, 181, 194, 202, 205, 208, 213, 215, 218, 221, 225, 228, 243, 246, 253, 267, 272, 285, 296, 306, 340, 343, 356, 378, 383, 390, 403, 408, 417, 428, 449, 459, 481, 489, 553, 570, 629, 685, 695, 699, 710, 720, 721, 725, 771, 797, 798, 803, 863, 870, 900, 910, 924, 925, 926, 927, 934, 938, 972, 983, 993, 995, 1006, 1070, 1123], "cire": 34, "02257": [34, 37], "colon": [34, 35, 37, 1042], "02237": [34, 37], "proport": [34, 37, 134], "02a74": 34, "02254": [34, 37], "congdot": 34, "02a6d": 34, "congruent": [34, 37], "csub": 34, "02acf": 34, "close": [34, 53, 138, 144, 153, 165, 183, 192, 193, 206, 213, 237, 238, 240, 263, 267, 291, 383, 417, 422, 495, 513, 663, 691, 700, 708, 718, 719, 809, 870, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 902, 904, 907, 933, 937, 961, 1073, 1091, 1131], "csube": 34, "02ad1": 34, "csup": 34, "02ad0": 34, "superset": [34, 37, 1013, 1117], "csupe": 34, "02ad2": 34, "cuepr": 34, "022de": [34, 37], "cuesc": 34, "022df": [34, 37], "succe": [34, 37, 744, 845, 874, 963], "cupr": 34, "0227c": [34, 37], "dashv": 34, "02ae4": [34, 37], "turnstil": [34, 37], "022a3": [34, 37], "easter": [34, 185], "02a6e": 34, "asterisk": [34, 35, 37], "ecir": 34, "02256": [34, 37], "IN": [34, 37, 137], "ecolon": 34, "02255": [34, 37], "eddot": 34, "02a77": [34, 37], "edot": 34, "02251": [34, 37], "efdot": 34, "02252": [34, 37], "THE": [34, 37, 889], "02a9a": 34, "greater": [34, 35, 37, 105, 112, 260, 355, 483, 489, 497, 500, 535, 677, 719, 752, 995], "than": [34, 35, 37, 42, 64, 67, 105, 112, 113, 129, 133, 134, 138, 140, 143, 144, 148, 165, 169, 172, 176, 185, 192, 195, 202, 208, 213, 215, 218, 221, 225, 252, 255, 260, 284, 287, 296, 355, 356, 375, 377, 406, 407, 408, 419, 420, 422, 428, 435, 483, 491, 497, 500, 535, 539, 551, 554, 556, 557, 622, 635, 646, 672, 685, 709, 719, 722, 737, 752, 758, 762, 766, 826, 851, 855, 863, 871, 881, 882, 889, 892, 909, 937, 941, 956, 957, 972, 977, 994, 995, 1039, 1043, 1073, 1080, 1083, 1100, 1118], "02a96": [34, 37], "slant": [34, 37], "egsdot": 34, "02a98": 34, "el": [34, 181, 192, 228], "02a99": 34, "less": [34, 35, 37, 58, 61, 77, 129, 133, 134, 135, 140, 144, 194, 208, 225, 239, 248, 249, 255, 269, 270, 333, 355, 356, 360, 403, 406, 437, 489, 593, 613, 639, 685, 687, 709, 719, 737, 739, 766, 796, 810, 826, 853, 856, 857, 859, 862, 892, 977, 995, 1014, 1093, 1094, 1107, 1118, 1124], "02a95": [34, 37], "elsdot": 34, "02a97": 34, "equest": 34, "0225f": [34, 37], "equivdd": 34, "02a78": 34, "erdot": 34, "02253": [34, 37], "esdot": 34, "02250": [34, 37], "limit": [34, 37, 62, 133, 134, 150, 172, 202, 208, 218, 221, 267, 356, 398, 591, 635, 766, 803, 908, 927, 969, 970, 995, 1068, 1090], "esim": 34, "02a73": 34, "02242": [34, 37], "fork": [34, 42, 113, 135, 150, 154, 719, 725, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862, 895, 908, 916, 934, 1131], "022d4": [34, 37], "pitchfork": [34, 37], "forkv": 34, "02ad9": 34, "02322": 34, "gap": 34, "02a86": [34, 37], "02267": [34, 37], "gel": 34, "02a8c": [34, 37], "022db": [34, 37], "02a7e": [34, 37], "gescc": 34, "02aa9": 34, "gesdot": 34, "02a80": 34, "gesdoto": 34, "02a82": 34, "gesdotol": 34, "02a84": 34, "gesl": 34, "0fe00": [34, 37], "02a94": 34, "022d9": [34, 37], "02277": [34, 37], "gla": 34, "02aa5": 34, "gle": 34, "02a92": 34, "glj": 34, "02aa4": 34, "overlap": [34, 221, 225, 267, 750, 975], "gsdot": 34, "022d7": [34, 37], "gsim": 34, "02273": [34, 37], "gsime": 34, "02a8e": 34, "similar": [34, 58, 61, 133, 135, 165, 169, 173, 175, 206, 219, 233, 358, 365, 436, 463, 492, 493, 524, 536, 545, 663, 698, 699, 714, 715, 737, 752, 766, 810, 956, 958, 1064], "gsiml": 34, "02a90": 34, "0226b": [34, 37], "gtcc": 34, "02aa7": 34, "gtcir": 34, "02a7a": 34, "gtdot": 34, "gtquest": 34, "02a7c": 34, "mark": [34, 35, 37, 192, 233, 311, 312, 352, 374, 674, 682, 782, 972, 974, 1093], "gtrarr": 34, "02978": 34, "homtht": 34, "0223b": 34, "homothet": 34, "lap": 34, "02a85": [34, 37], "lat": 34, "02aab": 34, "larger": [34, 67, 77, 165, 172, 195, 212, 225, 275, 404, 407, 419, 457, 537, 554, 556, 737, 786, 808, 870, 872, 937, 957, 970, 1120], "late": [34, 133, 135, 258, 260, 698, 699, 872, 928, 972, 989, 1006, 1121], "02aad": 34, "ldot": 34, "022d6": [34, 37], "le": [34, 457], "02266": [34, 37], "02a8b": [34, 37], "022da": [34, 37], "02a7d": [34, 37], "lescc": 34, "02aa8": 34, "lesdot": 34, "02a7f": 34, "lesdoto": 34, "02a81": 34, "lesdotor": 34, "02a83": 34, "lesg": 34, "02a93": 34, "lg": [34, 273, 1077], "02276": [34, 37], "lge": 34, "02a91": 34, "ll": [34, 37, 58, 61, 112, 132, 133, 134, 136, 138, 140, 143, 148, 149, 161, 163, 173, 175, 189, 218, 221, 249, 252, 255, 478, 492, 554, 556, 557, 766, 792, 863, 872, 883, 898, 945, 948, 954, 987, 1080], "022d8": 34, "lsim": 34, "02272": [34, 37], "lsime": 34, "02a8d": 34, "lsimg": 34, "02a8f": 34, "0226a": [34, 37], "ltcc": 34, "02aa6": 34, "ltcir": 34, "02a79": 34, "ltdot": 34, "ltlarr": 34, "02976": 34, "ltquest": 34, "02a7b": 34, "ltrie": 34, "022b4": [34, 37], "normal": [34, 37, 87, 121, 133, 135, 140, 148, 151, 156, 165, 225, 395, 422, 427, 432, 551, 553, 782, 798, 803, 924, 938, 991, 1070, 1083, 1098, 1110], "mcomma": 34, "02a29": 34, "comma": [34, 35, 171, 184, 205, 285, 1072], "mddot": 34, "0223a": 34, "mid": 34, "02223": [34, 37], "mlcp": 34, "02adb": 34, "transvers": 34, "intersect": [34, 37, 189, 213, 285, 1013], "model": [34, 113, 236, 251, 257, 260, 394, 995, 1067, 1070, 1089], "022a7": 34, "mstpo": 34, "0223e": 34, "invert": [34, 35, 62, 165, 906], "lazi": [34, 202, 208, 218, 221, 347, 694], "02abb": 34, "0227a": [34, 37], "prap": 34, "02ab7": [34, 37], "prcue": 34, "pre": [34, 135, 165, 194, 357, 539, 541, 545, 591, 592, 593, 643, 684, 685, 826, 988, 1003, 1076], "02ab3": 34, "02aaf": [34, 37], "singl": [34, 35, 37, 43, 58, 61, 62, 83, 105, 109, 110, 112, 115, 133, 135, 153, 192, 193, 202, 206, 208, 214, 215, 218, 221, 225, 249, 333, 339, 351, 352, 364, 410, 413, 417, 419, 422, 448, 461, 546, 600, 674, 685, 693, 695, 706, 725, 735, 737, 799, 801, 802, 803, 826, 831, 832, 833, 835, 851, 863, 871, 875, 911, 922, 924, 925, 934, 937, 941, 943, 946, 952, 956, 957, 958, 971, 1008, 1009, 1016, 1031, 1037, 1070, 1077, 1085, 1088, 1091, 1093, 1098, 1099, 1106], "prsim": 34, "0227e": [34, 37], "prurel": 34, "022b0": 34, "ratio": [34, 225], "02236": 34, "rtrie": 34, "022b5": [34, 37], "AS": [34, 37, 889], "rtriltri": 34, "029ce": 34, "triangl": [34, 37, 513], "samalg": 34, "02210": [34, 37], "coproduct": [34, 37], "02abc": 34, "0227b": [34, 37], "scap": 34, "02ab8": [34, 37], "sccue": 34, "0227d": [34, 37], "sce": 34, "02ab4": 34, "02ab0": [34, 37], "scsim": 34, "0227f": [34, 37], "sdote": 34, "02a66": 34, "sfrown": 34, "simg": 34, "02a9e": 34, "02aa0": 34, "siml": 34, "02a9d": 34, "02a9f": 34, "smid": 34, "02323": 34, "smt": 34, "02aaa": 34, "smaller": [34, 211, 225, 333, 395, 404, 419, 958], "smte": 34, "02aac": 34, "spar": [34, 251, 419], "02225": [34, 37], "parallel": [34, 37, 58, 61, 71, 72, 73, 77, 90, 139, 162, 165, 169, 171, 206, 261, 262, 283, 427, 707, 719, 756, 758, 766, 769, 802, 810, 911, 922, 925, 972, 974, 975, 1059, 1064, 1122, 1123, 1130, 1134], "sqsub": 34, "0228f": [34, 37], "squar": [34, 35, 37, 62, 153, 166, 176, 192, 198, 205, 208, 213, 215, 221, 225, 234, 246, 260, 267, 285, 445, 556, 966, 1015, 1018, 1085], "sqsube": 34, "02291": [34, 37], "sqsup": 34, "02290": [34, 37], "sqsupe": 34, "02292": [34, 37], "ssmile": 34, "sub": [34, 209, 221, 267, 440, 457, 537, 962, 1001, 1010, 1016, 1107], "022d0": [34, 37], "sube": 34, "02ac5": [34, 37], "subedot": 34, "02ac3": 34, "submult": 34, "02ac1": 34, "subplu": 34, "02abf": 34, "subrarr": 34, "02979": 34, "subsim": 34, "02ac7": 34, "subsub": 34, "02ad5": 34, "subsup": 34, "02ad3": 34, "sup": [34, 896], "022d1": [34, 37], "supdsub": 34, "02ad8": 34, "supe": 34, "02ac6": [34, 37], "supedot": 34, "02ac4": 34, "suphsol": 34, "02283": [34, 37], "0002f": [34, 35], "suphsub": 34, "02ad7": 34, "suplarr": 34, "0297b": 34, "supmult": 34, "02ac2": 34, "supplu": 34, "02ac0": 34, "supsim": 34, "02ac8": 34, "supsub": 34, "02ad4": 34, "supsup": 34, "02ad6": 34, "thkap": 34, "thksim": 34, "0223c": [34, 37], "topfork": 34, "02ada": 34, "tee": [34, 810], "trie": 34, "0225c": [34, 37], "delta": [34, 37, 148, 198], "twixt": 34, "0226c": [34, 37], "vbar": 34, "02aeb": 34, "02ae8": 34, "underbar": 34, "vbarv": 34, "02ae9": 34, "vdash": 34, "022ab": 34, "022a9": 34, "022a8": [34, 37], "022a2": [34, 37], "vdashl": 34, "02ae6": 34, "veebar": 34, "022bb": 34, "xor": [34, 983], "vltri": 34, "022b2": [34, 37], "vprop": 34, "0221d": [34, 37], "vrtri": 34, "022b3": [34, 37], "vvdash": 34, "022aa": 34, "\u00bd": 35, "\u00bc": 35, "\u215b": 35, "\u00be": 35, "\u215c": 35, "\u215d": 35, "\u215e": 35, "_": [35, 38, 62, 153, 154, 189, 202, 205, 206, 208, 215, 218, 221, 228, 231, 243, 267, 302, 350, 419, 549, 672, 756, 826, 928, 954, 972, 974], "\u00b5": 35, "\u03c9": 35, "\u00aa": 35, "\u00ba": 35, "\u00b9": 35, "\u00b2": 35, "\u00b3": 35, "amp": [35, 205], "00026": 35, "ampersand": [35, 648], "apo": 35, "00027": 35, "apostroph": 35, "ast": [35, 457], "0002a": 35, "brvbar": 35, "000a6": 35, "broken": [35, 393, 394, 663, 758, 771, 976, 1042, 1072], "bsol": 35, "cent": 35, "000a2": 35, "0003a": 35, "0002c": 35, "commat": 35, "00040": 35, "commerci": [35, 140, 744, 805], "AT": 35, "000a9": 35, "curren": 35, "000a4": 35, "currenc": [35, 251, 419], "02193": [35, 37], "deg": 35, "000b0": 35, "degre": [35, 436, 447, 478, 589, 872, 989], "000f7": [35, 37], "00024": 35, "0003d": 35, "excl": 35, "00021": 35, "frac12": 35, "000bd": 35, "vulgar": 35, "fraction": [35, 225, 296], "ONE": [35, 636], "frac14": 35, "000bc": 35, "quarter": 35, "frac18": 35, "0215b": 35, "eighth": 35, "frac34": 35, "000be": 35, "frac38": 35, "0215c": 35, "frac58": 35, "0215d": 35, "frac78": 35, "0215e": 35, "0003e": 35, "horbar": 35, "02015": 35, "horizont": [35, 352], "hyphen": 35, "02010": 35, "iexcl": 35, "000a1": 35, "iquest": 35, "000bf": 35, "laquo": 35, "000ab": 35, "quotat": [35, 37], "lcub": 35, "0007b": [35, 37], "curli": [35, 37], "bracket": [35, 37, 992], "ldquo": 35, "0201c": [35, 37], "lowbar": 35, "0005f": 35, "low": [35, 113, 129, 176, 205, 225, 242, 345, 377, 413, 417, 422, 445, 468, 481, 484, 485, 489, 693, 695, 748, 762, 802, 870, 926, 942, 1021, 1120], "lpar": 35, "00028": 35, "parenthesi": 35, "lsqb": 35, "0005b": [35, 37], "lsquo": 35, "02018": [35, 37], "0003c": 35, "micro": [35, 202, 208, 218, 221], "000b5": 35, "middot": 35, "000b7": [35, 37], "middl": [35, 37, 38, 62, 143, 154, 209, 225, 277, 280, 397, 417, 484, 513, 744, 863, 873, 879, 940, 974], "nbsp": 35, "000a0": [35, 37], "NO": [35, 37, 144, 185, 307, 616, 872, 937], "space": [35, 37, 62, 77, 98, 109, 110, 112, 129, 133, 134, 135, 140, 153, 156, 180, 194, 221, 239, 246, 248, 249, 267, 269, 270, 301, 312, 313, 321, 340, 359, 361, 380, 441, 446, 455, 459, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 544, 553, 588, 708, 718, 719, 727, 764, 779, 793, 794, 795, 796, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862, 871, 874, 875, 876, 877, 878, 885, 889, 890, 891, 892, 893, 901, 903, 908, 916, 917, 919, 920, 923, 925, 933, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 972, 975, 1009], "000ac": 35, "NOT": [35, 37, 163, 339, 378, 423, 462, 463, 476, 477, 737, 854, 1083], "num": [35, 138, 152, 153, 166, 176, 192, 206, 208, 213, 215, 221, 225, 243, 246, 285, 383, 568, 570, 652, 653, 654, 655, 664, 684, 854, 859, 967, 1072], "00023": 35, "ohm": 35, "02126": 35, "ordf": 35, "000aa": 35, "feminin": 35, "ordin": [35, 221, 228, 231, 267, 273, 1077], "indic": [35, 184, 202, 208, 213, 218, 221, 257, 591, 727], "ordm": 35, "000ba": 35, "masculin": 35, "para": 35, "000b6": 35, "pilcrow": 35, "percnt": 35, "00025": 35, "percent": [35, 225], "period": [35, 83, 150, 173, 411, 544, 710, 776, 863, 871, 890, 900, 922, 924, 937, 1093], "0002e": 35, "full": [35, 151, 196, 200, 246, 356, 371, 399, 404, 507, 518, 553, 657, 694, 707, 805, 810, 871, 913, 919, 964, 983, 1016, 1072, 1080], "stop": [35, 127, 138, 194, 221, 258, 260, 262, 267, 285, 295, 422, 462, 476, 760, 863, 938, 963, 1086, 1105], "0002b": 35, "plusmn": 35, "000b1": [35, 37], "000a3": 35, "quest": 35, "0003f": 35, "quot": [35, 153, 201, 204, 208, 215, 221, 229, 352, 791, 854, 855, 873, 1008], "00022": 35, "raquo": 35, "000bb": 35, "rcub": 35, "0007d": [35, 37], "rdquo": 35, "0201d": [35, 37], "reg": 35, "000ae": [35, 37], "rpar": 35, "00029": 35, "rsqb": 35, "0005d": [35, 37], "rsquo": 35, "02019": [35, 37], "sect": 35, "000a7": 35, "section": [35, 37, 87, 133, 137, 138, 139, 148, 157, 170, 194, 219, 252, 255, 258, 328, 521, 539, 621, 706, 756, 758, 826, 869, 870, 886, 940, 941, 942, 944, 950, 956, 957, 958, 1098], "semi": [35, 253, 287, 449, 693, 908, 959], "0003b": 35, "semicolon": [35, 422, 1072], "shy": 35, "000ad": 35, "soft": [35, 130, 317, 764], "sol": 35, "sung": 35, "0266a": 35, "sup1": 35, "000b9": 35, "superscript": 35, "sup2": 35, "000b2": 35, "sup3": 35, "000b3": 35, "000d7": 35, "trade": 35, "02122": 35, "02191": [35, 37], "verbar": 35, "0007c": [35, 37], "000a5": 35, "lorem": 36, "ipsum": 36, "h\u00f6dlmoser": 36, "anywai": [36, 42, 52, 60, 132, 134, 135, 144, 163, 165, 185, 194, 195, 221, 359, 407, 413, 417, 423, 539, 545, 554, 556, 557, 635, 643, 646, 650, 684, 685, 695, 758, 766, 805, 826, 916, 972, 1083, 1098], "hmm": [36, 130, 139, 152, 163, 524, 657, 937], "annoi": [36, 42, 296, 419, 635, 1098], "thing": [36, 39, 41, 42, 48, 99, 126, 132, 133, 135, 136, 137, 138, 139, 140, 144, 153, 157, 161, 164, 165, 169, 173, 185, 202, 208, 209, 211, 218, 221, 231, 284, 299, 357, 373, 377, 401, 407, 410, 417, 441, 445, 513, 520, 521, 537, 539, 546, 551, 553, 575, 635, 657, 674, 698, 707, 717, 725, 730, 762, 766, 791, 805, 810, 859, 863, 864, 891, 896, 919, 924, 940, 952, 956, 957, 963, 977, 991, 1014, 1105, 1123], "thin": [36, 37], "border": 36, "anfrag": [36, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "dauer": [36, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "tage": [36, 158, 160, 168, 327, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1129, 1131, 1132, 1134, 1135, 1136], "sysprog": [36, 129, 130, 249, 329, 719, 773, 778, 862, 903, 904, 907, 1131, 1132, 1134, 1135], "catcher": 36, "somehow": [36, 41, 117, 134, 287, 551, 774, 1093, 1094], "einf\u00fchrungskur": [36, 1114, 1131, 1132, 1134, 1135], "richtet": [36, 1116, 1131], "kennen": [36, 311, 1131], "lernen": [36, 1131], "zusammenh\u00e4ng": [36, 1131], "grundpfeil": [36, 1131], "erkl\u00e4rt": [36, 153, 156, 160, 1115, 1131, 1135, 1136], "bild": [36, 156, 1131], "orientieren": [36, 1131], "zurechtfinden": [36, 311, 1131], "somedai": 36, "better": [36, 56, 60, 64, 127, 129, 130, 134, 138, 144, 145, 155, 165, 166, 168, 169, 171, 172, 173, 176, 177, 190, 194, 200, 202, 203, 205, 206, 211, 212, 213, 215, 216, 219, 222, 225, 230, 234, 242, 249, 262, 266, 272, 336, 348, 356, 363, 372, 377, 378, 379, 385, 389, 392, 396, 397, 405, 407, 409, 414, 415, 418, 422, 427, 428, 433, 435, 513, 540, 548, 562, 575, 592, 615, 627, 630, 635, 637, 675, 687, 698, 716, 718, 719, 766, 845, 871, 872, 892, 908, 911, 937, 938, 966, 977, 995, 1009, 1021, 1060, 1061, 1064, 1069, 1071, 1076, 1082, 1098, 1107], "yet": [36, 77, 123, 133, 140, 143, 153, 155, 222, 223, 233, 246, 284, 374, 407, 435, 444, 457, 459, 494, 495, 507, 513, 606, 709, 766, 783, 793, 794, 871, 879, 883, 937, 964, 994, 1021, 1088, 1098, 1107], "redefin": 36, "wrap": [36, 62, 192, 230, 284, 456, 695, 701, 766, 1089], "look": [36, 41, 42, 44, 58, 61, 64, 81, 88, 101, 112, 113, 126, 127, 132, 133, 134, 135, 136, 138, 140, 143, 148, 153, 161, 165, 169, 172, 184, 190, 194, 219, 249, 252, 255, 258, 259, 277, 280, 284, 295, 328, 391, 399, 407, 413, 417, 419, 422, 423, 430, 478, 493, 494, 507, 524, 550, 562, 574, 626, 639, 663, 695, 701, 702, 720, 725, 735, 762, 766, 793, 794, 798, 802, 805, 816, 818, 823, 830, 838, 853, 864, 870, 871, 879, 896, 906, 933, 934, 957, 961, 971, 988, 991, 1029, 1033, 1042, 1064, 1071, 1072, 1083, 1100, 1118, 1121], "mdbootstrap": 36, "jqueri": 36, "icon": 36, "longrightarrow": 37, "rightarrow": 37, "doubleleftrightarrow": 37, "02220": 37, "applyfunct": 37, "02061": 37, "applic": [37, 62, 77, 93, 118, 133, 138, 150, 163, 185, 280, 284, 287, 307, 328, 403, 406, 413, 494, 571, 574, 642, 683, 804, 864, 871, 883, 908, 1071], "approx": [37, 1052, 1098], "approxeq": 37, "assign": [37, 96, 153, 154, 155, 160, 166, 176, 183, 191, 202, 205, 208, 211, 213, 217, 218, 223, 225, 229, 253, 257, 258, 260, 285, 310, 316, 317, 339, 356, 362, 363, 372, 379, 385, 386, 389, 392, 396, 401, 403, 405, 409, 414, 415, 449, 456, 462, 463, 471, 476, 477, 539, 540, 543, 550, 606, 615, 622, 632, 636, 637, 639, 643, 650, 673, 675, 680, 689, 695, 715, 716, 718, 719, 870, 872, 911, 922, 925, 927, 1004, 1015, 1086, 1088], "backcong": 37, "backepsilon": 37, "backprim": 37, "02035": 37, "backsim": 37, "backsimeq": 37, "backslash": [37, 352, 850, 1008], "02216": 37, "barwedg": 37, "02305": 37, "02235": 37, "bernoulli": 37, "0212c": 37, "bigcap": 37, "022c2": 37, "bigcirc": 37, "025ef": 37, "bigcup": 37, "022c3": 37, "union": [37, 189, 197, 213, 285, 395, 712, 1013, 1119], "bigodot": 37, "02a00": 37, "bigoplu": 37, "02a01": 37, "bigotim": 37, "02a02": 37, "bigsqcup": 37, "02a06": 37, "bigstar": 37, "02605": 37, "bigtriangledown": 37, "025bd": 37, "white": [37, 257, 341], "bigtriangleup": 37, "025b3": 37, "biguplu": 37, "02a04": 37, "bigve": 37, "022c1": 37, "logic": [37, 135, 299, 347, 363, 372, 377, 379, 385, 389, 392, 396, 401, 405, 409, 414, 415, 442, 459, 637, 675, 716, 718, 719, 1083], "bigwedg": 37, "022c0": 37, "bkarow": 37, "blacklozeng": 37, "029eb": 37, "lozeng": 37, "blacksquar": 37, "025aa": 37, "blacktriangl": 37, "025b4": 37, "blacktriangledown": 37, "025be": 37, "blacktriangleleft": 37, "025c2": 37, "blacktriangleright": 37, "025b8": 37, "bot": [37, 1098], "022a5": 37, "boxminu": 37, "0229f": 37, "boxplu": 37, "0229e": 37, "boxtim": 37, "022a0": 37, "breve": 37, "002d8": 37, "bullet": [37, 135, 1071], "02022": 37, "bumpeq": 37, "capitaldifferentiald": 37, "02145": 37, "struck": 37, "ital": 37, "d": [37, 84, 96, 106, 112, 133, 134, 135, 136, 152, 155, 163, 166, 171, 176, 181, 183, 189, 192, 195, 198, 199, 203, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 249, 253, 262, 263, 266, 267, 273, 281, 285, 302, 304, 305, 310, 333, 340, 341, 343, 347, 374, 378, 407, 417, 419, 433, 440, 445, 539, 545, 552, 606, 607, 612, 613, 615, 619, 645, 682, 694, 695, 707, 709, 739, 760, 774, 790, 793, 794, 803, 805, 809, 810, 823, 826, 827, 848, 852, 854, 859, 865, 870, 871, 872, 884, 889, 937, 940, 962, 964, 990, 996, 1001, 1003, 1004, 1008, 1009, 1012, 1032], "caylei": 37, "0212d": 37, "letter": [37, 64, 350, 994], "cedilla": 37, "000b8": 37, "centerdot": 37, "checkmark": 37, "02713": 37, "circeq": 37, "circlearrowleft": 37, "circlearrowright": 37, "circledast": 37, "0229b": 37, "circledcirc": 37, "0229a": 37, "circleddash": 37, "0229d": 37, "circledot": 37, "02299": 37, "circledr": 37, "024c8": 37, "latin": [37, 212, 273], "circleminu": 37, "02296": 37, "circleplu": 37, "02295": 37, "circletim": 37, "02297": 37, "clockwisecontourintegr": 37, "02232": 37, "contour": 37, "closecurlydoublequot": 37, "closecurlyquot": 37, "clubsuit": 37, "02663": 37, "suit": [37, 43, 96, 129, 169, 238, 242, 318, 395, 404, 435, 436, 437, 439, 440, 442, 444, 457, 459, 460, 478, 491, 492, 493, 494, 495, 554, 555, 556, 557, 646, 647, 684, 693, 694, 713, 714, 715, 717, 1099, 1106, 1121, 1136], "coloneq": 37, "complement": [37, 105, 356], "02201": 37, "complex": [37, 68, 133, 144, 148, 165, 171, 191, 208, 213, 215, 221, 225, 229, 231, 246, 253, 267, 310, 331, 374, 386, 401, 710, 870, 871, 895, 911, 934, 995, 1004, 1111, 1121], "02102": 37, "02261": 37, "ident": [37, 217, 267, 279, 530, 983, 985, 1004], "contourintegr": 37, "0222e": 37, "counterclockwisecontourintegr": 37, "02233": 37, "cupcap": 37, "0224d": 37, "curlyeqprec": 37, "curlyeqsucc": 37, "curlyve": 37, "022ce": 37, "curlywedg": 37, "022cf": 37, "curvearrowleft": 37, "curvearrowright": 37, "dbkarow": 37, "ddagger": 37, "02021": 37, "ddotseq": 37, "02207": 37, "nabla": 37, "diacriticalacut": 37, "000b4": 37, "acut": 37, "accent": 37, "diacriticaldot": 37, "002d9": 37, "diacriticaldoubleacut": 37, "002dd": 37, "diacriticalgrav": 37, "00060": 37, "grave": 37, "diacriticaltild": 37, "002dc": 37, "022c4": 37, "diamondsuit": 37, "02666": 37, "differentiald": 37, "02146": 37, "digamma": 37, "003dd": 37, "div": [37, 407, 457], "divideontim": 37, "022c7": 37, "doteq": 37, "doteqdot": 37, "dotequ": 37, "dotminu": 37, "02238": 37, "dotplu": 37, "02214": 37, "dotsquar": 37, "022a1": 37, "doublebarwedg": 37, "02306": 37, "doublecontourintegr": 37, "0222f": 37, "surfac": [37, 165, 802, 870, 871, 1069, 1071], "doubledot": 37, "000a8": 37, "diaeresi": 37, "doubledownarrow": 37, "doubleleftarrow": 37, "021d0": 37, "doubleleftte": 37, "doublelongleftarrow": 37, "doublelongleftrightarrow": 37, "doublelongrightarrow": 37, "doublerightarrow": 37, "021d2": 37, "doublerightte": 37, "doubleuparrow": 37, "doubleupdownarrow": 37, "doubleverticalbar": 37, "downarrow": 37, "downarrowuparrow": 37, "downdownarrow": 37, "downharpoonleft": 37, "downharpoonright": 37, "downleftvector": 37, "downrightvector": 37, "downte": 37, "022a4": 37, "downteearrow": 37, "021a7": 37, "drbkarow": 37, "02208": 37, "emptyset": 37, "02205": 37, "eqcirc": 37, "eqcolon": 37, "eqsim": 37, "eqslantgtr": 37, "eqslantless": 37, "equaltild": 37, "equilibrium": 37, "02203": 37, "THERE": [37, 541], "02130": 37, "exponential": 37, "02147": 37, "fallingdotseq": 37, "foral": [37, 1015], "02200": 37, "FOR": [37, 144, 166, 173], "fouriertrf": 37, "02131": 37, "geq": 37, "02265": 37, "geqq": 37, "geqslant": 37, "ggg": 37, "gnapprox": 37, "02a8a": 37, "gneq": 37, "02a88": 37, "gneqq": 37, "02269": 37, "BUT": 37, "greaterequ": 37, "greaterequalless": 37, "greaterfullequ": 37, "greaterless": 37, "greaterslantequ": 37, "greatertild": 37, "gtrapprox": 37, "gtrdot": 37, "gtreqless": 37, "gtreqqless": 37, "gtrless": 37, "gtrsim": 37, "gvertneqq": 37, "hacek": 37, "002c7": 37, "caron": 37, "hbar": 37, "0210f": 37, "planck": 37, "constant": [37, 194, 202, 208, 211, 212, 213, 218, 221, 225, 263, 284, 339, 347, 348, 353, 363, 367, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 480, 587, 637, 648, 675, 685, 687, 716, 718, 719], "heartsuit": 37, "02665": 37, "hilbertspac": 37, "0210b": 37, "h": [37, 41, 43, 96, 112, 113, 135, 140, 156, 159, 161, 166, 172, 176, 181, 194, 195, 202, 205, 206, 213, 215, 225, 238, 249, 260, 291, 332, 333, 335, 339, 341, 343, 351, 374, 375, 377, 383, 390, 398, 400, 404, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 442, 444, 447, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 514, 520, 521, 523, 524, 527, 530, 532, 537, 538, 539, 540, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 615, 624, 625, 626, 627, 628, 629, 630, 631, 640, 642, 645, 646, 647, 663, 664, 667, 678, 681, 684, 685, 689, 693, 694, 695, 696, 698, 707, 709, 713, 714, 715, 717, 725, 730, 734, 735, 737, 744, 746, 748, 750, 752, 754, 758, 760, 762, 771, 776, 779, 780, 783, 785, 786, 792, 803, 810, 823, 826, 848, 854, 864, 866, 870, 886, 888, 889, 890, 892, 893, 895, 896, 897, 898, 899, 902, 904, 907, 921, 924, 928, 930, 932, 933, 937, 938, 940, 941, 942, 943, 948, 952, 955, 956, 958, 1001, 1016, 1093, 1100, 1105, 1107, 1110], "hksearow": 37, "hkswarow": 37, "hookleftarrow": 37, "hookrightarrow": 37, "hslash": 37, "humpdownhump": 37, "humpequ": 37, "iiiint": 37, "02a0c": 37, "quadrupl": 37, "iiint": 37, "0222d": 37, "02111": 37, "imaginaryi": 37, "02148": 37, "imaglin": 37, "02110": 37, "imagpart": 37, "impli": [37, 699, 1093], "02124": 37, "0222b": 37, "interc": 37, "022ba": 37, "intercal": 37, "intprod": 37, "02a3c": 37, "interior": 37, "invisiblecomma": 37, "02063": 37, "invis": [37, 463], "invisibletim": 37, "02062": 37, "langl": 37, "02329": 37, "laplacetrf": 37, "02112": 37, "lbrace": 37, "lbrack": 37, "leftanglebracket": 37, "leftarrow": 37, "leftarrowbar": 37, "021e4": 37, "leftarrowrightarrow": 37, "leftarrowtail": 37, "leftceil": 37, "02308": 37, "ceil": [37, 193, 206, 225, 1091], "leftdoublebracket": 37, "0301a": 37, "leftdownvector": 37, "leftfloor": 37, "0230a": 37, "leftharpoondown": 37, "leftharpoonup": 37, "leftleftarrow": 37, "leftrightarrow": 37, "leftrightharpoon": 37, "leftrightsquigarrow": 37, "leftte": 37, "leftteearrow": 37, "021a4": 37, "leftthreetim": 37, "022cb": 37, "semidirect": 37, "lefttriangl": 37, "lefttriangleequ": 37, "leftupvector": 37, "leftvector": 37, "leq": 37, "02264": 37, "leqq": 37, "leqslant": 37, "lessapprox": 37, "lessdot": 37, "lesseqgtr": 37, "lesseqqgtr": 37, "lessequalgreat": 37, "lessfullequ": 37, "lessgreat": 37, "lessgtr": 37, "lesssim": 37, "lessslantequ": 37, "lesstild": 37, "llcorner": 37, "0231e": 37, "bottom": [37, 180, 284, 478, 491, 764, 826, 845, 863, 963], "corner": [37, 194, 257, 328, 340, 420, 432, 491, 707], "lleftarrow": 37, "lmoustach": 37, "023b0": 37, "upper": [37, 166, 189, 213, 215, 221, 231, 246, 253, 267, 295, 304, 333, 337, 353, 377, 925, 1025], "lower": [37, 135, 189, 202, 208, 213, 218, 221, 225, 231, 246, 267, 295, 304, 333, 337, 353, 377, 437, 581, 926, 934, 983, 1088], "lnapprox": 37, "02a89": 37, "lneq": 37, "02a87": 37, "lneqq": 37, "02268": 37, "longleftarrow": 37, "longleftrightarrow": 37, "longmapsto": 37, "looparrowleft": 37, "looparrowright": 37, "lowerleftarrow": 37, "lowerrightarrow": 37, "025ca": 37, "lrcorner": 37, "0231f": 37, "lvertneqq": 37, "maltes": 37, "02720": 37, "mapsto": 37, "measuredangl": 37, "02221": 37, "measur": [37, 96, 113, 135, 225, 258, 262, 284, 403, 410, 456, 460, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 535, 613, 719, 725, 792, 801, 892, 933, 957, 1069, 1071], "mellintrf": 37, "02133": 37, "minusplu": 37, "02213": 37, "napprox": 37, "02249": 37, "0266e": 37, "music": [37, 135, 263], "02115": 37, "nearrow": 37, "negativemediumspac": 37, "0200b": 37, "width": [37, 202, 208, 211, 212, 218, 221, 243, 251, 267, 333, 356, 445, 530, 554, 863, 934, 1009, 1072, 1122, 1129], "negativethickspac": 37, "negativethinspac": 37, "negativeverythinspac": 37, "nestedgreatergreat": 37, "nestedlessless": 37, "nexist": 37, "02204": 37, "ngeq": 37, "02271": 37, "neither": [37, 153, 435, 462, 476, 646, 811, 813, 814, 896, 1005], "nor": [37, 153, 209, 462, 476, 546, 646, 811, 813, 814, 863, 883, 896, 1005], "ngeqq": 37, "ngeqslant": 37, "ngtr": 37, "0226f": 37, "nleftarrow": 37, "nleftrightarrow": 37, "nleq": 37, "02270": 37, "nleqq": 37, "nleqslant": 37, "nless": 37, "0226e": 37, "nonbreakingspac": 37, "notcongru": 37, "02262": 37, "notdoubleverticalbar": 37, "02226": 37, "notel": 37, "02209": 37, "notequ": 37, "02260": 37, "notequaltild": 37, "notexist": 37, "notgreat": 37, "notgreaterequ": 37, "notgreaterfullequ": 37, "notgreatergreat": 37, "notgreaterless": 37, "02279": 37, "notgreaterslantequ": 37, "notgreatertild": 37, "02275": 37, "nothumpdownhump": 37, "notlefttriangl": 37, "022ea": 37, "notlefttriangleequ": 37, "022ec": 37, "notless": 37, "notlessequ": 37, "notlessgreat": 37, "02278": 37, "notlessless": 37, "notlessslantequ": 37, "notlesstild": 37, "02274": 37, "notpreced": 37, "02280": 37, "notprecedesequ": 37, "notprecedesslantequ": 37, "022e0": 37, "notreverseel": 37, "0220c": 37, "notrighttriangl": 37, "022eb": 37, "notrighttriangleequ": 37, "022ed": 37, "notsquaresubsetequ": 37, "022e2": 37, "notsquaresupersetequ": 37, "022e3": 37, "notsubset": 37, "020d2": 37, "notsubsetequ": 37, "02288": 37, "notsucce": 37, "02281": 37, "notsucceedsequ": 37, "notsucceedsslantequ": 37, "022e1": 37, "notsuperset": 37, "notsupersetequ": 37, "02289": 37, "nottild": 37, "02241": 37, "nottildeequ": 37, "02244": 37, "asymptot": 37, "nottildefullequ": 37, "02247": 37, "actual": [37, 41, 42, 47, 60, 135, 138, 143, 148, 165, 192, 202, 208, 211, 218, 221, 225, 252, 255, 257, 287, 313, 437, 447, 606, 613, 635, 693, 725, 863, 871, 895, 938, 961, 977, 986, 1019, 1067, 1069, 1071, 1090, 1105], "nottildetild": 37, "notverticalbar": 37, "02224": 37, "nparallel": 37, "nprec": 37, "npreceq": 37, "nrightarrow": 37, "nshortmid": 37, "nshortparallel": 37, "nsimeq": 37, "nsubset": 37, "nsubseteq": 37, "nsubseteqq": 37, "nsucc": 37, "nsucceq": 37, "nsupset": 37, "nsupseteq": 37, "nsupseteqq": 37, "ntriangleleft": 37, "ntrianglelefteq": 37, "ntriangleright": 37, "ntrianglerighteq": 37, "nwarrow": 37, "oint": 37, "opencurlydoublequot": 37, "opencurlyquot": 37, "orderof": 37, "02134": 37, "partiald": 37, "02202": 37, "partial": [37, 259, 744, 1068], "differenti": [37, 68, 629, 697, 766, 811, 870, 995, 1063, 1077], "plusminu": 37, "poincareplan": 37, "0210c": 37, "prec": 37, "precapprox": 37, "preccurlyeq": 37, "precedesequ": 37, "precedesslantequ": 37, "precedestild": 37, "preceq": 37, "precnapprox": 37, "02ab9": 37, "precneqq": 37, "02ab5": 37, "precnsim": 37, "022e8": 37, "precsim": 37, "02119": 37, "propto": 37, "quaternion": 37, "0210d": 37, "questeq": 37, "rangl": 37, "0232a": 37, "0211a": 37, "q": [37, 112, 173, 225, 377, 383, 537, 555, 556, 570, 698, 803, 826, 858, 933, 1093], "rbrace": 37, "rbrack": 37, "0211c": 37, "realin": 37, "0211b": 37, "realpart": 37, "real": [37, 72, 124, 140, 143, 148, 151, 153, 169, 190, 203, 208, 209, 216, 218, 221, 225, 230, 233, 243, 251, 257, 266, 272, 284, 296, 357, 406, 413, 427, 433, 439, 456, 478, 486, 487, 488, 489, 490, 494, 536, 537, 542, 657, 672, 690, 693, 727, 766, 803, 804, 826, 863, 871, 883, 924, 1010, 1064, 1067, 1069, 1099, 1118, 1121], "0211d": 37, "reverseel": 37, "0220b": 37, "reverseequilibrium": 37, "reverseupequilibrium": 37, "rightanglebracket": 37, "rightarrowbar": 37, "021e5": 37, "rightarrowleftarrow": 37, "rightarrowtail": 37, "rightceil": 37, "02309": 37, "rightdoublebracket": 37, "0301b": 37, "rightdownvector": 37, "rightfloor": 37, "0230b": 37, "rightharpoondown": 37, "rightharpoonup": 37, "rightleftarrow": 37, "rightleftharpoon": 37, "rightrightarrow": 37, "rightsquigarrow": 37, "rightte": 37, "rightteearrow": 37, "rightthreetim": 37, "022cc": 37, "righttriangl": 37, "righttriangleequ": 37, "rightupvector": 37, "rightvector": 37, "risingdotseq": 37, "rmoustach": 37, "023b1": 37, "rrightarrow": 37, "searrow": 37, "setminu": 37, "shortdownarrow": 37, "shortleftarrow": 37, "shortmid": 37, "shortparallel": 37, "shortrightarrow": 37, "shortuparrow": 37, "simeq": 37, "02243": 37, "smallcircl": 37, "02218": 37, "smallsetminu": 37, "spadesuit": 37, "02660": 37, "sqrt": [37, 193, 206, 537, 539, 547, 548, 556, 642, 657, 658, 659, 660, 661, 698, 1091], "0221a": 37, "sqsubset": 37, "sqsubseteq": 37, "sqsupset": 37, "sqsupseteq": 37, "025a1": 37, "squareintersect": 37, "02293": 37, "cap": [37, 205, 1021], "squaresubset": 37, "squaresubsetequ": 37, "squaresuperset": 37, "squaresupersetequ": 37, "squareunion": 37, "02294": 37, "cup": [37, 263], "022c6": 37, "straightepsilon": 37, "003f5": 37, "straightphi": 37, "003d5": 37, "phi": 37, "subseteq": 37, "02286": 37, "subseteqq": 37, "subsetequ": 37, "subsetneq": 37, "0228a": 37, "subsetneqq": 37, "02acb": 37, "succ": 37, "succapprox": 37, "succcurlyeq": 37, "succeedsequ": 37, "succeedsslantequ": 37, "succeedstild": 37, "succeq": 37, "succnapprox": 37, "02aba": 37, "succneqq": 37, "02ab6": 37, "succnsim": 37, "022e9": 37, "succsim": 37, "suchthat": 37, "02211": 37, "summat": 37, "supersetequ": 37, "02287": 37, "supset": 37, "supseteq": 37, "supseteqq": 37, "supsetneq": 37, "0228b": 37, "supsetneqq": 37, "02acc": 37, "swarrow": 37, "therefor": [37, 123, 133], "02234": 37, "thickapprox": 37, "thicksim": 37, "thinspac": 37, "02009": 37, "tildeequ": 37, "tildefullequ": 37, "02245": 37, "tildetild": 37, "toea": 37, "tosa": 37, "025b5": 37, "triangledown": 37, "025bf": 37, "triangleleft": 37, "025c3": 37, "trianglelefteq": 37, "triangleq": 37, "triangleright": 37, "025b9": 37, "trianglerighteq": 37, "tripledot": 37, "020db": 37, "combin": [37, 84, 107, 109, 110, 136, 154, 185, 241, 362, 373, 378, 395, 403, 434, 443, 455, 469, 483, 535, 570, 609, 687, 719, 748, 806, 808, 810, 826, 848, 859, 896, 897, 899, 946, 999, 1014, 1030, 1083, 1118], "twoheadleftarrow": 37, "twoheadrightarrow": 37, "ulcorn": 37, "0231c": 37, "unionplu": 37, "0228e": 37, "multiset": 37, "uparrow": 37, "uparrowdownarrow": 37, "updownarrow": 37, "upequilibrium": 37, "upharpoonleft": 37, "upharpoonright": 37, "upperleftarrow": 37, "upperrightarrow": 37, "upsilon": 37, "003c5": 37, "upte": 37, "upteearrow": 37, "021a5": 37, "upuparrow": 37, "urcorn": 37, "0231d": 37, "varepsilon": 37, "003b5": 37, "varkappa": 37, "003f0": 37, "kappa": 37, "varnoth": 37, "varphi": 37, "003c6": 37, "varpi": 37, "003d6": 37, "varpropto": 37, "varrho": 37, "003f1": 37, "rho": 37, "varsigma": 37, "003c2": 37, "sigma": [37, 225], "varsubsetneq": 37, "variant": [37, 177, 193, 206, 236, 237, 238, 291, 333, 349, 466, 530, 683, 687, 689, 712, 744, 1091, 1125, 1128], "varsubsetneqq": 37, "varsupsetneq": 37, "varsupsetneqq": 37, "vartheta": 37, "003d1": 37, "theta": 37, "vartriangleleft": 37, "vartriangleright": 37, "vee": 37, "02228": 37, "vert": 37, "02016": 37, "verticalbar": 37, "verticaltild": 37, "02240": 37, "wreath": 37, "verythinspac": 37, "0200a": 37, "hair": 37, "wedg": 37, "02227": 37, "wp": 37, "02118": 37, "wr": 37, "zeetrf": 37, "02128": 37, "restructured text": 38, "cheat sheet": 38, "restructur": 38, "guid": [38, 117, 138, 148, 169, 194, 330, 410, 488, 640, 737, 752, 805], "author": [38, 136, 143, 221, 553, 739, 870, 1019, 1073], "overridden": [38, 356, 607, 674, 1098], "titl": [38, 39, 129, 139, 203, 216, 221, 230, 233, 266, 267, 272, 980, 1064, 1069], "favorit": [38, 165, 169, 172, 190, 194, 216, 219, 296, 766, 872, 924, 988, 1064], "__": [38, 150, 152, 160, 267, 688, 692, 984], "ref": [38, 112, 148, 237, 238, 635, 650, 694, 714], "uniqu": [38, 148, 195, 237, 238, 240, 291, 494, 513, 695, 707, 714, 716, 718, 719, 872, 886, 900, 959, 1012, 1016, 1086], "across": [38, 42, 133, 140, 150, 202, 208, 218, 221, 251, 260, 284, 328, 356, 376, 400, 435, 440, 459, 522, 698, 709, 717, 793, 794, 805, 823, 870, 872, 892, 900, 934, 995, 1006, 1073], "tree": [38, 41, 99, 101, 112, 123, 125, 134, 136, 139, 144, 148, 161, 162, 169, 193, 206, 209, 212, 216, 249, 277, 280, 386, 408, 413, 425, 457, 492, 494, 591, 594, 719, 741, 744, 758, 768, 791, 793, 794, 796, 810, 826, 827, 834, 838, 840, 846, 855, 862, 871, 876, 878, 883, 903, 911, 920, 943, 948, 968, 980, 1071, 1089, 1091, 1098, 1100], "next": [38, 41, 62, 97, 112, 129, 134, 135, 140, 148, 153, 155, 166, 171, 173, 181, 185, 192, 198, 202, 205, 206, 208, 211, 213, 215, 218, 221, 225, 231, 237, 238, 243, 246, 253, 263, 267, 273, 285, 295, 302, 316, 350, 368, 370, 391, 419, 457, 461, 475, 485, 494, 530, 567, 643, 656, 663, 665, 687, 756, 766, 785, 810, 826, 858, 870, 872, 892, 902, 922, 941, 967, 968, 971, 999, 1002, 1069, 1106], "_dummi": 38, "dummi": [38, 139, 316, 317, 746, 785, 1105], "One": [38, 42, 58, 61, 62, 75, 79, 81, 96, 105, 133, 135, 144, 161, 172, 193, 211, 232, 233, 258, 296, 310, 321, 337, 377, 390, 399, 402, 411, 413, 418, 424, 429, 435, 494, 513, 521, 536, 555, 560, 570, 575, 640, 674, 699, 709, 766, 771, 797, 799, 802, 810, 826, 870, 871, 872, 896, 908, 913, 924, 925, 933, 938, 943, 975, 999, 1072, 1073, 1077, 1082, 1120, 1134], "a_footnot": 38, "footer": 38, "block": [38, 97, 109, 110, 132, 133, 134, 135, 173, 175, 193, 200, 202, 206, 208, 218, 221, 230, 233, 242, 263, 266, 284, 295, 310, 315, 319, 333, 335, 353, 372, 378, 379, 385, 389, 392, 396, 404, 405, 407, 409, 414, 415, 442, 542, 545, 637, 663, 675, 694, 705, 706, 707, 708, 709, 716, 717, 718, 719, 752, 768, 778, 782, 796, 797, 799, 800, 802, 803, 848, 862, 871, 895, 902, 903, 908, 913, 917, 918, 923, 925, 933, 934, 937, 939, 961, 963, 989, 992, 999, 1002, 1064], "rubric": 38, "nbsphinx": 39, "capabl": [39, 77, 133, 134, 140, 704, 766, 792, 855, 863, 871, 924, 1090, 1121], "nice": [39, 130, 133, 150, 173, 195, 260, 412, 413, 433, 481, 548, 635, 785, 792, 865, 871, 922, 985, 1021, 1069, 1071, 1080, 1086, 1101], "few": [39, 133, 134, 135, 136, 139, 140, 165, 169, 202, 331, 401, 652, 766, 804, 963, 967, 1099, 1123], "keep": [39, 42, 109, 110, 134, 135, 148, 157, 169, 172, 176, 192, 225, 296, 321, 345, 401, 407, 408, 617, 657, 758, 766, 771, 790, 805, 808, 864, 916, 952, 955, 975, 992, 1069, 1070, 1118], "mind": [39, 133, 134, 334, 701, 992], "though": [39, 42, 44, 52, 67, 132, 133, 138, 140, 143, 144, 148, 149, 154, 161, 165, 169, 171, 172, 190, 193, 195, 206, 208, 209, 211, 216, 219, 233, 242, 251, 252, 255, 266, 287, 296, 337, 347, 356, 368, 373, 435, 436, 437, 440, 449, 457, 459, 492, 493, 494, 513, 537, 539, 540, 544, 547, 550, 553, 554, 556, 557, 570, 571, 606, 613, 635, 643, 645, 652, 657, 663, 680, 684, 689, 694, 695, 698, 705, 720, 721, 725, 744, 758, 797, 804, 805, 808, 811, 845, 859, 863, 870, 871, 872, 882, 890, 892, 919, 924, 926, 928, 934, 943, 961, 963, 964, 967, 972, 974, 981, 983, 991, 995, 1008, 1033, 1064, 1071, 1072, 1085, 1093, 1094, 1098, 1100, 1118, 1121], "toplevel": [39, 43, 108, 112, 161, 194, 243, 421, 423, 427, 428, 429, 431, 478, 739, 767, 792, 961, 1107], "begin": [39, 41, 42, 115, 132, 133, 143, 171, 192, 193, 205, 208, 221, 225, 237, 238, 242, 259, 267, 327, 333, 341, 353, 356, 377, 383, 400, 401, 403, 433, 440, 530, 540, 553, 566, 568, 570, 571, 572, 574, 575, 577, 578, 579, 581, 582, 583, 584, 588, 591, 602, 635, 650, 663, 666, 670, 677, 683, 684, 687, 701, 792, 826, 850, 858, 884, 892, 968, 992, 1014, 1064, 1099], "deeper": [39, 134, 165, 252, 255, 422, 919], "trail": [39, 137, 221, 263, 267, 285, 301, 302], "underscor": [39, 350, 964, 971, 984, 994], "ipynb": [39, 152, 172, 182, 184, 221, 231, 252, 256, 262, 266, 272, 277, 280, 284, 288, 1066, 1070], "labels_": [39, 154, 156], "result": [39, 77, 126, 135, 144, 150, 152, 172, 176, 192, 202, 208, 211, 218, 221, 225, 234, 243, 263, 267, 340, 356, 391, 398, 400, 401, 407, 437, 462, 466, 553, 581, 642, 648, 657, 685, 737, 882, 928, 956, 968, 983, 997, 1003, 1015, 1072], "cluster": [39, 156, 1066, 1071], "membership": [39, 154, 171, 172, 214, 449, 996, 1013], "input": [39, 67, 85, 153, 154, 155, 156, 166, 169, 172, 174, 196, 202, 208, 211, 218, 221, 224, 225, 246, 249, 310, 315, 339, 340, 346, 370, 378, 401, 406, 418, 496, 497, 498, 499, 511, 550, 600, 619, 642, 717, 737, 792, 810, 841, 859, 863, 873, 889, 892, 904, 906, 907, 914, 970, 985, 1014, 1026, 1030, 1031, 1043, 1046, 1049, 1055, 1058, 1066, 1067, 1070, 1071, 1129], "sequenc": [39, 105, 108, 126, 153, 154, 156, 166, 172, 193, 195, 204, 206, 207, 208, 211, 214, 218, 221, 225, 243, 258, 260, 267, 273, 332, 386, 437, 483, 498, 499, 500, 535, 580, 599, 603, 619, 632, 640, 687, 719, 925, 968, 969, 970, 986, 995, 996, 1001, 1003, 1006, 1010, 1011, 1034, 1046, 1077, 1091, 1121], "bring": [39, 44, 113, 126, 133, 135, 143, 144, 165, 169, 172, 175, 211, 249, 252, 255, 258, 260, 284, 287, 318, 323, 324, 328, 513, 552, 591, 615, 626, 634, 762, 766, 778, 870, 871, 872, 941, 988, 1036, 1059, 1077, 1118, 1121], "bigplan": [39, 156, 1066], "686": [39, 154, 208, 954], "unknown": [39, 251, 419, 722, 871, 977], "cmd": [39, 139, 760, 785, 1100], "color": [39, 138, 156, 848, 1066, 1093], "tmp": [39, 115, 129, 134, 136, 139, 176, 189, 192, 208, 213, 221, 225, 228, 231, 233, 238, 240, 243, 246, 253, 263, 267, 273, 342, 384, 407, 420, 425, 426, 433, 494, 495, 615, 692, 744, 766, 788, 792, 797, 806, 810, 811, 824, 825, 826, 828, 830, 831, 833, 835, 838, 845, 848, 849, 854, 875, 882, 893, 894, 896, 897, 899, 924, 930, 961, 962, 963, 968, 976, 977, 983, 984, 1005, 1006, 1010, 1014, 1020, 1076, 1085, 1086, 1099, 1100], "craft": [40, 45, 46, 50, 52, 54, 55, 219, 261, 262, 417, 462, 699, 719, 720], "tar": [41, 60, 108, 112, 120, 129, 144, 173, 175, 239, 248, 249, 269, 270, 413, 719, 766, 788, 789, 791, 796, 862, 948, 950, 951, 952, 954, 955, 961, 1019, 1100, 1124], "xz": [41, 60, 136, 144, 249, 406, 948, 952, 954, 955], "push": [41, 76, 115, 137, 139, 148, 151, 194, 209, 219, 276, 316, 378, 423, 424, 435, 459, 707, 719, 766, 908, 926, 1039, 1043, 1098], "cmakelist": [41, 43, 112, 159, 160, 161, 162, 163, 194, 211, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 478, 491, 492, 493, 494, 495, 514, 517, 520, 521, 523, 526, 529, 532, 626, 929, 932, 936, 941, 942, 1104, 1107, 1109], "src": [41, 133, 134, 136, 194, 208, 238, 240, 246, 316, 345, 357, 407, 431, 432, 442, 478, 481, 491, 492, 493, 494, 496, 555, 572, 693, 694, 792, 810, 854, 1014, 1019, 1098], "load": [41, 42, 52, 55, 62, 74, 87, 132, 143, 144, 151, 152, 156, 172, 180, 181, 197, 198, 202, 208, 218, 221, 225, 228, 234, 243, 260, 261, 262, 278, 281, 283, 284, 393, 413, 425, 708, 718, 719, 722, 723, 725, 726, 728, 731, 733, 734, 736, 741, 743, 746, 747, 751, 757, 760, 762, 763, 766, 768, 770, 775, 778, 781, 784, 787, 802, 862, 871, 872, 903, 911, 917, 940, 957, 1064, 1082, 1123, 1132, 1134], "store": [41, 56, 62, 74, 87, 105, 132, 134, 151, 153, 161, 162, 192, 195, 202, 260, 261, 262, 283, 284, 341, 393, 437, 619, 663, 677, 680, 687, 708, 718, 719, 732, 766, 805, 818, 862, 879, 903, 911, 917, 941, 959, 963, 964, 968, 1012, 1042, 1076, 1093, 1134], "search": [41, 50, 52, 105, 126, 128, 129, 133, 154, 157, 163, 165, 171, 172, 181, 192, 193, 195, 198, 202, 205, 206, 208, 211, 212, 213, 216, 218, 221, 234, 243, 246, 250, 253, 258, 263, 267, 273, 275, 377, 404, 407, 419, 483, 494, 496, 500, 535, 580, 585, 599, 603, 620, 632, 719, 744, 808, 826, 858, 919, 941, 954, 971, 1000, 1070, 1091, 1098, 1120], "payload": [41, 727, 754, 864, 866], "primari": [41, 133, 144, 165, 251, 252, 255, 411, 764, 793, 794, 801, 803, 1042], "insert": [41, 62, 108, 127, 132, 148, 152, 169, 171, 176, 206, 208, 211, 213, 215, 221, 225, 228, 246, 267, 273, 285, 310, 374, 391, 395, 411, 438, 444, 466, 472, 483, 500, 501, 502, 513, 530, 535, 571, 572, 585, 595, 596, 620, 628, 629, 630, 632, 639, 646, 648, 663, 684, 715, 717, 719, 744, 750, 760, 762, 766, 826, 870, 883, 914, 924, 996, 1011, 1012, 1020, 1076, 1098], "const": [41, 57, 69, 96, 106, 108, 109, 110, 112, 160, 195, 211, 258, 260, 291, 345, 353, 357, 375, 377, 383, 391, 403, 405, 407, 409, 414, 415, 420, 436, 438, 439, 440, 442, 444, 459, 460, 466, 467, 468, 471, 472, 473, 475, 476, 477, 483, 487, 491, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 511, 512, 513, 521, 526, 528, 530, 535, 537, 538, 539, 540, 542, 544, 545, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 563, 564, 570, 574, 576, 577, 578, 579, 580, 586, 590, 592, 595, 596, 599, 602, 603, 606, 609, 610, 613, 615, 616, 617, 620, 621, 624, 625, 627, 628, 629, 630, 631, 632, 639, 641, 642, 643, 644, 645, 646, 647, 648, 657, 658, 659, 660, 661, 663, 665, 666, 669, 670, 671, 672, 673, 675, 677, 678, 679, 680, 682, 683, 685, 687, 691, 693, 694, 695, 696, 697, 700, 708, 709, 713, 714, 715, 716, 717, 718, 719, 722, 725, 730, 746, 748, 752, 760, 762, 776, 780, 786, 884, 892, 896, 897, 898, 899, 902, 904, 907, 909, 911, 913, 921, 927, 930, 933, 934, 938, 958, 976, 1052, 1075, 1110, 1116, 1117], "care": [41, 45, 47, 79, 132, 133, 135, 138, 140, 165, 173, 205, 301, 333, 356, 365, 367, 383, 407, 408, 431, 462, 463, 538, 552, 570, 613, 684, 685, 689, 698, 713, 720, 744, 756, 758, 766, 771, 792, 793, 794, 871, 879, 883, 895, 908, 916, 942, 964, 988, 992, 1004, 1011, 1014, 1015, 1021, 1044, 1068, 1076, 1089, 1100], "dump": [41, 133, 152, 181, 197, 198, 208, 221, 225, 228, 234, 243, 278, 281, 284, 442, 461, 462, 545, 550, 673, 693, 804, 937, 938], "db": [41, 49, 143, 169, 194, 195, 196, 200, 206, 219, 234, 423, 437, 438, 444, 466, 472, 627, 628, 629, 630, 631, 699, 1020], "pull": [41, 43, 49, 62, 76, 112, 113, 137, 148, 185, 194, 195, 209, 295, 318, 419, 423, 435, 552, 739, 766, 968, 971, 1088], "paramet": [41, 57, 62, 109, 110, 132, 135, 140, 150, 153, 160, 161, 165, 170, 171, 172, 174, 176, 184, 185, 189, 192, 193, 194, 195, 202, 206, 208, 211, 212, 214, 217, 218, 221, 228, 231, 252, 253, 255, 257, 296, 301, 310, 332, 341, 343, 347, 358, 362, 377, 378, 383, 385, 386, 389, 392, 396, 397, 403, 405, 409, 414, 415, 418, 420, 425, 481, 491, 497, 513, 527, 537, 539, 542, 546, 549, 550, 553, 557, 562, 563, 617, 623, 637, 640, 647, 663, 675, 677, 682, 695, 707, 716, 718, 719, 724, 725, 732, 746, 769, 774, 779, 782, 785, 786, 806, 808, 871, 886, 909, 919, 934, 942, 955, 959, 964, 978, 981, 986, 993, 1009, 1016, 1021, 1031, 1037, 1039, 1043, 1049, 1058, 1069, 1072, 1075, 1082, 1085, 1086, 1088, 1091, 1114, 1115], "stdin": [41, 185, 193, 202, 208, 211, 218, 221, 303, 310, 342, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719, 792, 808, 809, 841, 892, 1012, 1014, 1015, 1026, 1077, 1089, 1124], "entri": [41, 130, 134, 135, 139, 197, 208, 332, 432, 448, 591, 593, 613, 754, 792, 805, 809, 810, 811, 848, 854, 886, 892, 906, 957, 964, 1012, 1075, 1107], "o_creat": [41, 719, 862, 892, 893, 897, 901, 903, 920, 933], "o_trunc": [41, 47, 892], "o_wronli": [41, 719, 862, 892, 893, 895, 896, 897, 901, 902, 903, 904, 907, 920, 933], "0666": [41, 825, 896, 897, 933], "assert": [41, 45, 169, 193, 206, 218, 221, 235, 251, 284, 286, 419, 442, 584, 625, 628, 630, 636, 709, 890, 902, 904, 907, 933, 937, 938, 976, 1052, 1059, 1060, 1061, 1091, 1098, 1104, 1105, 1107, 1115], "ing": [41, 898], "mode": [41, 100, 112, 136, 148, 150, 185, 193, 202, 205, 206, 208, 218, 221, 225, 228, 246, 249, 253, 267, 270, 284, 407, 483, 535, 708, 718, 719, 725, 758, 764, 792, 793, 794, 796, 799, 800, 803, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 826, 862, 865, 872, 886, 891, 892, 893, 901, 903, 917, 920, 923, 925, 933, 934, 989, 991, 1091, 1093], "binaryus": 41, "hton": [41, 889], "arpa": [41, 889], "inet": [41, 150, 889], "again": [41, 98, 112, 132, 133, 135, 138, 140, 144, 148, 149, 161, 165, 169, 171, 172, 173, 185, 194, 219, 224, 233, 239, 242, 248, 249, 266, 269, 272, 310, 311, 312, 315, 316, 321, 328, 329, 378, 419, 441, 445, 455, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 530, 535, 537, 539, 552, 553, 557, 567, 646, 657, 699, 707, 708, 714, 717, 718, 719, 786, 789, 793, 794, 795, 796, 799, 800, 807, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 856, 862, 872, 879, 882, 885, 887, 889, 890, 891, 893, 898, 901, 903, 904, 913, 917, 919, 920, 923, 925, 934, 942, 944, 945, 946, 947, 948, 949, 950, 951, 961, 981, 986, 1004, 1009, 1014, 1064, 1082, 1085, 1118], "od": [41, 221], "hardwir": [41, 62, 113, 727, 888, 981], "enter": [41, 109, 110, 166, 173, 202, 207, 208, 218, 221, 230, 231, 233, 234, 251, 284, 285, 295, 310, 315, 335, 530, 553, 612, 646, 652, 663, 695, 744, 766, 782, 799, 822, 924, 925, 999, 1051], "joerg": [41, 49, 115, 152, 166, 167, 169, 170, 172, 174, 181, 185, 189, 192, 198, 205, 208, 211, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 260, 262, 263, 267, 273, 278, 285, 304, 307, 402, 429, 437, 444, 478, 494, 496, 512, 550, 584, 596, 615, 625, 626, 627, 628, 630, 647, 793, 794, 801, 803, 808, 822, 838, 851, 857, 882, 919, 977, 978, 980, 981, 982, 984, 985, 993, 1015, 1019, 1042, 1059, 1072, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "huber": [41, 215, 221, 1072], "caro": [41, 205, 215, 218, 225, 228, 231, 234, 243, 246, 253, 267, 285, 437, 444, 496, 512, 584, 596, 628, 630, 980, 982, 1002, 1053, 1055, 1059, 1061, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "johanna": [41, 205, 215, 218, 225, 228, 246, 253, 267, 285, 437, 496, 512, 584, 596, 1002, 1053, 1055, 1059, 1061, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "bodi": [41, 49, 54, 109, 110, 139, 332, 333, 335, 339, 368, 378, 407, 497, 530, 539, 540, 544, 547, 617, 635, 636, 639, 698, 968, 1099], "compil": [41, 42, 64, 102, 103, 107, 109, 110, 112, 134, 135, 144, 153, 160, 161, 162, 181, 195, 198, 211, 218, 234, 243, 246, 249, 250, 258, 267, 273, 275, 318, 330, 343, 352, 353, 362, 365, 367, 374, 375, 384, 386, 393, 396, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 414, 415, 419, 423, 426, 428, 431, 432, 435, 441, 455, 457, 462, 463, 476, 477, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 521, 527, 530, 535, 537, 540, 542, 546, 548, 552, 563, 591, 610, 617, 622, 624, 635, 636, 637, 638, 640, 642, 643, 645, 646, 648, 650, 652, 657, 660, 663, 672, 673, 675, 681, 684, 685, 687, 689, 693, 694, 716, 718, 719, 734, 735, 750, 862, 870, 941, 942, 945, 946, 947, 948, 950, 964, 989, 994, 1006, 1008, 1105, 1107, 1115, 1116, 1118, 1119, 1120, 1131], "still": [41, 53, 60, 121, 127, 132, 133, 134, 135, 143, 144, 153, 154, 155, 195, 205, 211, 249, 251, 301, 321, 330, 381, 393, 419, 422, 428, 481, 503, 524, 527, 545, 546, 567, 573, 606, 621, 646, 663, 680, 684, 689, 693, 694, 696, 697, 698, 729, 734, 766, 769, 809, 823, 845, 870, 871, 872, 922, 924, 926, 937, 959, 967, 970, 976, 989, 992, 995, 1019, 1055, 1078, 1086, 1107, 1115], "funni": [41, 43, 49, 99, 112, 165, 249, 440, 719, 796, 834, 840, 846, 862, 941], "temp": [41, 43, 221, 319, 693, 694, 695], "got": [41, 44, 133, 143, 195, 267, 377, 649, 892, 965], "overwritten": [41, 46, 52, 54, 55, 572, 719, 893, 971], "suspect": [41, 135, 137], "inmem": 41, "loos": [41, 42, 169, 185, 331, 356, 403, 756], "foolishli": 41, "main": [41, 49, 62, 106, 126, 135, 138, 139, 144, 172, 194, 206, 218, 219, 221, 238, 249, 257, 260, 262, 275, 277, 280, 284, 310, 330, 332, 333, 335, 339, 341, 343, 344, 358, 373, 374, 375, 377, 381, 393, 400, 404, 407, 408, 411, 413, 419, 420, 422, 426, 442, 456, 461, 462, 463, 478, 479, 481, 489, 491, 493, 494, 513, 521, 524, 527, 541, 545, 546, 548, 550, 552, 553, 555, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 619, 624, 625, 626, 627, 628, 629, 630, 631, 635, 640, 650, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 677, 679, 680, 682, 685, 687, 693, 694, 696, 697, 698, 699, 702, 707, 709, 717, 727, 734, 735, 737, 766, 803, 805, 823, 870, 872, 873, 886, 888, 889, 890, 896, 897, 898, 899, 904, 907, 908, 910, 914, 919, 921, 924, 925, 930, 933, 934, 937, 940, 948, 952, 958, 972, 975, 990, 1054, 1056, 1105, 1110, 1123], "chang": [41, 44, 76, 79, 112, 113, 132, 135, 137, 138, 139, 140, 143, 144, 148, 156, 169, 185, 194, 225, 233, 317, 356, 393, 395, 399, 402, 403, 407, 417, 420, 435, 480, 486, 491, 492, 494, 495, 546, 571, 628, 682, 707, 717, 739, 744, 792, 801, 803, 805, 823, 832, 835, 850, 863, 865, 870, 871, 882, 886, 907, 937, 940, 955, 971, 995, 1004, 1043, 1054, 1056, 1059, 1082, 1086, 1101, 1118], "errorhandl": 41, "just": [41, 45, 62, 68, 83, 107, 123, 132, 133, 134, 135, 136, 137, 139, 140, 144, 148, 155, 157, 161, 165, 172, 195, 206, 209, 234, 275, 284, 298, 339, 358, 383, 386, 395, 413, 417, 422, 432, 437, 478, 481, 491, 493, 494, 495, 518, 537, 538, 539, 545, 548, 549, 550, 553, 572, 600, 607, 613, 617, 621, 635, 642, 646, 648, 649, 663, 678, 681, 695, 697, 699, 717, 724, 729, 737, 739, 746, 750, 756, 758, 766, 782, 805, 826, 829, 830, 859, 863, 871, 872, 887, 889, 890, 896, 897, 899, 908, 909, 919, 926, 934, 952, 959, 962, 963, 966, 968, 986, 987, 993, 994, 995, 1002, 1006, 1014, 1015, 1069, 1070, 1077, 1082, 1083, 1087, 1088, 1094, 1098, 1110, 1120], "silent": [41, 64, 215, 225, 639, 870], "truncat": [41, 221, 267, 333, 354, 456, 808, 892, 1014], "faschingb": 41, "echo": [41, 134, 185, 221, 249, 296, 494, 619, 739, 748, 766, 793, 794, 797, 798, 806, 810, 820, 829, 832, 836, 845, 863, 865, 870, 871, 872, 873, 893, 895, 904, 906, 907, 919, 922, 928, 937, 1100], "success": [41, 162, 202, 208, 218, 221, 394, 423, 652, 705, 744, 748, 838, 1030], "failur": [41, 42, 202, 208, 218, 221, 233, 238, 267, 295, 403, 413, 419, 433, 491, 495, 1098, 1099, 1106, 1107, 1110], "renam": [41, 49, 56, 62, 65, 98, 112, 126, 192, 239, 248, 249, 269, 270, 530, 682, 719, 734, 735, 796, 833, 846, 862, 958, 1076], "most": [42, 43, 56, 58, 61, 64, 86, 129, 132, 133, 135, 136, 139, 144, 155, 157, 163, 165, 169, 171, 193, 202, 205, 208, 209, 218, 219, 221, 225, 231, 251, 253, 267, 287, 295, 331, 339, 368, 371, 378, 393, 395, 401, 406, 407, 411, 412, 422, 436, 449, 492, 552, 553, 591, 643, 687, 692, 695, 701, 744, 752, 766, 771, 791, 793, 794, 797, 804, 828, 859, 863, 870, 872, 884, 892, 898, 911, 926, 934, 937, 938, 940, 961, 962, 963, 968, 975, 976, 977, 983, 984, 992, 994, 995, 996, 999, 1002, 1005, 1006, 1010, 1012, 1015, 1016, 1021, 1063, 1064, 1073, 1077, 1081, 1085, 1086, 1092, 1094, 1098, 1099, 1105, 1120, 1121, 1123], "somebodi": [42, 140, 148, 161, 195, 345, 402, 423, 521, 545, 597, 657, 663, 674, 705, 756, 774, 928], "concis": [42, 132, 165, 169, 219, 311, 312, 422, 766, 1064], "longer": [42, 148, 928, 989, 1118], "necessari": [42, 60, 126, 134, 140, 144, 153, 162, 176, 192, 195, 252, 255, 287, 335, 345, 377, 417, 419, 423, 435, 481, 540, 544, 612, 638, 639, 673, 683, 695, 707, 762, 766, 801, 870, 872, 873, 888, 926, 937, 957, 984, 991, 995, 1019, 1076, 1098], "gosh": [42, 129, 356, 401, 403, 597, 680, 916, 961, 962, 968, 995], "hungarian": [42, 397], "notat": [42, 160, 200, 216, 221, 226, 267, 397, 710, 871, 977], "userdb": [42, 46, 47, 50, 52, 53, 55, 56, 195, 197, 211, 219, 266, 277, 280, 620, 628, 629, 630, 632, 719, 1053, 1054, 1055, 1056, 1061], "bolt": [42, 195], "onto": [42, 58, 61, 143, 154, 195, 211, 284, 459, 541, 618, 632, 695, 719, 766, 851, 863, 871, 890, 922, 945, 952], "unclear": [42, 484, 938], "semant": [42, 48, 80, 133, 157, 237, 238, 240, 258, 388, 402, 403, 457, 538, 591, 597, 636, 643, 675, 691, 694, 695, 696, 697, 700, 708, 716, 718, 719, 725, 730, 758, 937, 938, 995, 1073, 1118], "backingstor": [42, 52, 55, 719], "mangl": [42, 192, 193, 206, 223, 989, 1091], "prefix": [42, 60, 129, 144, 202, 206, 208, 218, 221, 267, 303, 549, 579, 635, 766, 952, 954, 961, 983, 984, 1009, 1016, 1100], "m_": 42, "enough": [42, 136, 140, 157, 165, 215, 225, 258, 267, 321, 345, 436, 612, 870, 883, 911, 941, 963, 980, 988, 1009, 1077, 1082, 1089, 1092, 1099, 1120], "take": [42, 47, 85, 101, 109, 110, 126, 127, 132, 133, 134, 137, 138, 139, 140, 143, 148, 150, 153, 154, 156, 161, 165, 166, 171, 172, 173, 193, 206, 211, 213, 221, 225, 231, 255, 295, 296, 301, 310, 340, 377, 380, 397, 399, 406, 408, 412, 413, 417, 418, 420, 435, 436, 459, 460, 462, 463, 481, 491, 494, 507, 513, 527, 539, 546, 550, 553, 555, 593, 617, 635, 640, 647, 648, 657, 685, 687, 693, 697, 707, 729, 756, 766, 792, 793, 794, 870, 900, 928, 952, 958, 962, 966, 988, 1004, 1005, 1021, 1028, 1031, 1033, 1037, 1038, 1039, 1042, 1043, 1044, 1046, 1048, 1058, 1063, 1071, 1072, 1077, 1082, 1091, 1093, 1100], "dogmat": [42, 211, 328, 1077], "switch": [42, 44, 53, 57, 58, 61, 109, 110, 112, 134, 138, 140, 152, 153, 194, 202, 208, 218, 219, 221, 296, 297, 299, 316, 319, 322, 352, 366, 370, 372, 379, 385, 389, 392, 394, 396, 405, 409, 412, 414, 415, 419, 422, 435, 449, 483, 484, 485, 535, 596, 636, 637, 675, 716, 718, 719, 746, 764, 771, 780, 783, 785, 799, 803, 863, 866, 924, 957, 1115, 1119], "bool": [42, 49, 52, 54, 55, 176, 183, 205, 208, 211, 213, 215, 218, 221, 228, 231, 246, 250, 251, 253, 257, 267, 427, 429, 496, 497, 501, 503, 508, 537, 539, 553, 554, 555, 556, 557, 575, 578, 584, 593, 640, 652, 653, 654, 655, 663, 666, 670, 677, 707, 709, 719, 779, 786, 924, 930, 937, 995, 1021, 1083, 1088], "wear": [42, 130, 134], "incorrect": [42, 202, 208, 218, 221, 225, 356, 375, 1089], "metaphor": 42, "But": [42, 133, 134, 135, 138, 149, 185, 194, 284, 339, 345, 374, 377, 383, 386, 399, 401, 407, 417, 536, 537, 545, 550, 551, 552, 570, 588, 606, 607, 645, 648, 684, 693, 697, 699, 719, 748, 750, 766, 776, 793, 794, 848, 862, 870, 871, 872, 879, 893, 901, 903, 908, 916, 920, 943, 957, 959, 980, 983, 989, 1069, 1072, 1083], "support": [42, 77, 134, 136, 140, 144, 153, 157, 169, 181, 183, 202, 205, 208, 213, 215, 218, 221, 225, 228, 243, 246, 253, 285, 306, 375, 399, 413, 419, 536, 537, 539, 643, 695, 699, 713, 717, 722, 758, 848, 870, 871, 872, 882, 934, 940, 968, 976, 983, 989, 1006, 1019, 1069, 1071, 1086, 1105], "copy_process": 42, "law": [42, 185, 307, 350, 395, 963, 1088], "tdd": [42, 112, 164, 169, 179, 219, 261, 277, 280, 284, 329, 1098], "until": [42, 54, 96, 97, 98, 101, 104, 109, 110, 112, 121, 123, 133, 135, 137, 139, 184, 193, 205, 224, 242, 262, 367, 373, 398, 401, 495, 555, 619, 663, 669, 707, 709, 734, 754, 764, 774, 776, 782, 799, 803, 810, 826, 838, 845, 887, 888, 889, 890, 913, 927, 934, 938, 967, 968, 989, 997, 999, 1064], "fail": [42, 43, 129, 133, 135, 143, 144, 148, 160, 165, 195, 221, 238, 270, 295, 321, 420, 423, 433, 442, 491, 622, 643, 645, 652, 657, 717, 719, 744, 766, 845, 862, 872, 893, 898, 901, 903, 918, 919, 920, 937, 957, 961, 963, 972, 1014, 1030, 1086, 1099, 1100, 1104, 1106, 1108], "suffici": [42, 148, 153, 165, 296, 544, 572, 613, 617, 628, 636, 739, 848, 938, 986, 988, 1016, 1099], "pass": [42, 43, 47, 54, 56, 57, 62, 109, 110, 153, 161, 165, 170, 171, 172, 174, 181, 192, 194, 198, 202, 208, 211, 213, 215, 218, 221, 225, 228, 231, 233, 234, 238, 243, 246, 251, 252, 255, 263, 267, 285, 295, 321, 341, 343, 345, 356, 377, 381, 384, 386, 403, 433, 435, 440, 442, 481, 491, 492, 493, 494, 496, 497, 537, 547, 548, 554, 555, 556, 557, 566, 617, 623, 647, 677, 685, 690, 694, 697, 713, 714, 715, 732, 769, 810, 870, 896, 899, 910, 919, 942, 959, 961, 962, 963, 964, 976, 977, 978, 980, 986, 1004, 1006, 1014, 1016, 1052, 1063, 1081, 1098, 1105], "current": [42, 98, 108, 112, 119, 121, 134, 135, 136, 138, 140, 143, 144, 148, 173, 195, 202, 208, 218, 221, 239, 246, 248, 249, 267, 269, 270, 302, 321, 324, 329, 378, 411, 419, 435, 437, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 535, 625, 629, 694, 695, 708, 718, 719, 735, 766, 774, 788, 792, 793, 794, 795, 796, 799, 800, 801, 803, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 848, 850, 862, 871, 885, 891, 892, 893, 901, 903, 908, 910, 917, 920, 923, 924, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 962, 967, 988, 991, 999, 1002, 1124], "initi": [42, 44, 62, 109, 110, 112, 115, 132, 133, 136, 140, 148, 150, 160, 165, 169, 174, 180, 189, 193, 194, 204, 205, 206, 221, 225, 228, 231, 236, 246, 253, 258, 260, 263, 267, 280, 333, 335, 342, 386, 391, 401, 405, 409, 411, 414, 415, 437, 439, 457, 462, 463, 476, 477, 481, 483, 484, 485, 486, 487, 488, 491, 513, 527, 530, 535, 539, 540, 541, 543, 548, 550, 552, 554, 556, 571, 572, 573, 578, 591, 596, 617, 622, 624, 625, 626, 631, 632, 646, 657, 675, 683, 694, 695, 697, 709, 716, 718, 719, 724, 727, 729, 730, 737, 744, 752, 762, 766, 793, 794, 802, 827, 857, 871, 872, 887, 890, 908, 911, 924, 933, 934, 940, 975, 978, 1008, 1069, 1073, 1091, 1118, 1123], "mess": [42, 133, 219, 238, 240, 291, 637, 675, 718, 719, 995, 1008, 1099], "roughli": [42, 64, 135, 140, 284, 406, 791, 924, 933], "took": [42, 132, 139, 169, 1029], "our": [42, 52, 58, 61, 69, 76, 103, 112, 115, 134, 135, 137, 139, 144, 148, 155, 169, 184, 185, 194, 195, 209, 211, 249, 260, 262, 310, 403, 406, 417, 428, 436, 440, 445, 457, 461, 478, 489, 494, 628, 631, 739, 746, 766, 870, 871, 896, 899, 924, 934, 938, 940, 952, 955, 958, 964, 1061, 1069, 1072], "craftsmanship": [42, 44], "anoth": [42, 62, 77, 132, 133, 134, 135, 139, 140, 143, 144, 148, 155, 157, 162, 165, 171, 172, 195, 202, 208, 211, 218, 223, 225, 231, 246, 249, 252, 255, 258, 284, 347, 365, 366, 380, 388, 400, 407, 418, 435, 436, 439, 444, 459, 462, 463, 476, 477, 481, 486, 495, 547, 550, 551, 553, 635, 640, 663, 687, 695, 699, 709, 754, 766, 792, 793, 794, 799, 808, 810, 822, 859, 870, 872, 882, 883, 897, 911, 913, 925, 933, 938, 955, 958, 959, 962, 963, 980, 987, 995, 1011, 1015, 1020, 1072, 1080, 1086, 1089, 1098, 1121], "If": [42, 44, 46, 52, 54, 55, 56, 88, 112, 132, 133, 134, 135, 138, 139, 140, 148, 149, 157, 165, 202, 208, 215, 218, 221, 225, 233, 238, 240, 249, 255, 267, 284, 310, 315, 356, 365, 395, 407, 427, 429, 435, 485, 491, 492, 507, 537, 542, 606, 613, 629, 630, 643, 648, 694, 698, 699, 707, 709, 719, 739, 744, 758, 766, 771, 783, 792, 801, 805, 808, 826, 827, 835, 838, 862, 863, 870, 871, 872, 873, 879, 893, 901, 903, 911, 916, 920, 933, 955, 956, 968, 976, 978, 988, 995, 1003, 1005, 1016, 1041, 1069, 1072, 1086, 1099, 1118], "isol": [42, 53, 163, 165, 169, 219, 233, 870, 924, 925, 975, 1064, 1076, 1093, 1109, 1111], "wrong": [42, 77, 133, 135, 258, 356, 378, 397, 613, 699, 739, 896, 911, 925, 959, 963, 975, 994, 1058, 1069], "oracl": [42, 1073], "conduct": [42, 1098], "serious": 42, "safeti": [42, 211, 399, 402, 405, 409, 414, 415, 418, 513, 636, 706, 719, 725, 863, 937, 938, 961], "architectur": [42, 107, 130, 140, 192, 327, 351, 378, 395, 418, 699, 727, 863, 890, 940, 941, 950, 952, 1121], "treat": [42, 80, 225, 343, 373, 808], "them": [42, 62, 65, 109, 110, 126, 130, 132, 133, 135, 138, 139, 140, 143, 144, 148, 153, 154, 155, 162, 165, 169, 170, 172, 174, 190, 192, 195, 206, 230, 233, 242, 262, 272, 284, 373, 395, 426, 437, 441, 457, 493, 554, 556, 557, 610, 617, 619, 622, 635, 685, 699, 766, 792, 798, 799, 805, 808, 833, 845, 872, 879, 924, 925, 934, 937, 940, 941, 952, 957, 962, 963, 964, 965, 986, 988, 1010, 1042, 1045, 1064, 1070, 1077, 1088, 1105], "carefulli": [42, 135, 148, 403, 462, 652, 1070], "independ": [42, 62, 213, 225, 345, 378, 550, 850, 864, 872, 942], "self": [42, 58, 61, 62, 133, 134, 144, 152, 153, 160, 166, 169, 171, 189, 192, 193, 205, 206, 208, 215, 218, 219, 223, 225, 231, 234, 246, 253, 263, 267, 273, 285, 411, 419, 537, 539, 643, 645, 646, 680, 693, 699, 705, 727, 758, 762, 921, 957, 961, 962, 963, 972, 976, 977, 980, 981, 982, 983, 984, 985, 995, 1085, 1086, 1091, 1099, 1104, 1105, 1107, 1118], "valid": [42, 132, 135, 143, 221, 224, 267, 321, 376, 383, 399, 403, 562, 570, 594, 629, 643, 680, 683, 709, 779, 994, 995, 1009, 1010, 1026, 1031, 1085, 1086, 1093], "first": [42, 52, 60, 62, 86, 123, 130, 132, 135, 136, 138, 139, 140, 144, 148, 153, 163, 165, 172, 192, 205, 206, 213, 215, 219, 221, 225, 249, 251, 262, 267, 284, 295, 301, 307, 331, 339, 362, 377, 378, 383, 391, 407, 408, 419, 420, 421, 422, 423, 425, 426, 427, 428, 430, 431, 433, 483, 524, 530, 535, 537, 543, 545, 549, 568, 569, 570, 574, 593, 596, 628, 630, 635, 657, 664, 665, 684, 685, 687, 713, 714, 715, 719, 733, 736, 743, 747, 757, 766, 768, 770, 775, 781, 784, 787, 804, 805, 806, 811, 822, 826, 832, 848, 850, 853, 857, 859, 862, 863, 870, 871, 889, 893, 913, 921, 924, 927, 933, 941, 942, 956, 957, 958, 959, 963, 964, 968, 975, 977, 981, 989, 990, 991, 992, 994, 995, 1004, 1005, 1008, 1014, 1015, 1021, 1044, 1053, 1059, 1061, 1070, 1072, 1080, 1099, 1105, 1118, 1123], "debug": [42, 133, 134, 162, 192, 202, 208, 218, 221, 272, 276, 310, 315, 328, 378, 404, 407, 411, 412, 413, 421, 423, 424, 440, 518, 663, 680, 719, 724, 746, 748, 808, 826, 892, 916, 937, 1014, 1093, 1116, 1119, 1124, 1133], "fact": [42, 52, 133, 134, 165, 284, 375, 383, 407, 417, 766, 811, 896, 934, 1073], "hard": [42, 69, 77, 84, 112, 123, 133, 135, 138, 139, 144, 149, 154, 161, 165, 172, 194, 209, 215, 225, 239, 248, 249, 269, 270, 284, 356, 375, 404, 417, 445, 521, 717, 719, 766, 796, 802, 805, 846, 848, 862, 865, 871, 952, 961, 963, 983, 1000, 1014, 1066, 1087, 1118, 1134], "principl": [42, 52, 53, 82, 105, 113, 129, 135, 144, 259, 260, 261, 262, 418, 441, 442, 719, 766, 870, 872, 883, 943, 1072], "mayb": [42, 44, 56, 57, 60, 62, 77, 112, 123, 126, 133, 134, 135, 138, 139, 148, 161, 165, 192, 208, 209, 259, 260, 261, 262, 277, 313, 316, 318, 319, 420, 439, 440, 441, 473, 526, 527, 597, 645, 715, 871, 955, 977, 1107], "overview": [42, 97, 112, 129, 140, 157, 173, 175, 190, 194, 206, 239, 240, 248, 252, 255, 258, 260, 269, 270, 286, 324, 328, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 555, 651, 662, 675, 686, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 826, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 874, 875, 876, 877, 878, 885, 886, 889, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951, 955, 987, 1064, 1118, 1119, 1121, 1123], "respons": [42, 52, 55, 88, 118, 132, 143, 148, 196, 417, 459, 473, 481, 539, 547, 695, 719, 762, 774, 871, 872, 895, 924, 925, 991, 1071, 1123], "googl": [43, 128, 133, 140, 142, 154, 157, 160, 161, 165, 166, 169, 190, 195, 330, 492, 693, 694, 855, 989, 1064, 1105, 1107, 1136], "cloner": 43, "init": [43, 115, 132, 134, 150, 154, 231, 238, 240, 341, 368, 466, 467, 489, 492, 520, 537, 555, 573, 721, 729, 734, 754, 756, 768, 802, 854, 938], "cpp": [43, 49, 96, 112, 144, 159, 169, 194, 195, 211, 238, 249, 258, 260, 330, 421, 422, 423, 428, 435, 436, 437, 439, 440, 442, 444, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 482, 484, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 537, 538, 539, 540, 541, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 615, 619, 624, 625, 626, 627, 628, 629, 630, 631, 635, 640, 642, 645, 646, 647, 650, 652, 657, 663, 672, 673, 674, 677, 678, 679, 680, 681, 682, 684, 685, 687, 689, 693, 694, 695, 696, 697, 698, 707, 709, 713, 714, 715, 717, 870, 900, 904, 907, 919, 921, 924, 940], "assert_eq": [43, 435, 437, 440, 444, 457, 484, 485, 491, 494, 495, 496, 497, 498, 499, 501, 503, 504, 505, 508, 509, 510, 511, 512, 530, 537, 538, 539, 550, 551, 553, 554, 555, 556, 557, 615, 640, 642, 645, 646, 647, 678, 689, 693, 694, 695, 696, 698, 713, 714, 715, 717, 1105, 1110], "test_f": [43, 459, 494, 495, 717, 1110], "simplefixtur": 43, "public": [43, 54, 100, 101, 106, 112, 130, 143, 148, 185, 193, 206, 234, 239, 248, 249, 257, 263, 269, 270, 307, 310, 315, 391, 427, 428, 429, 431, 436, 438, 442, 444, 447, 448, 449, 459, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 481, 494, 495, 507, 521, 527, 536, 537, 538, 540, 541, 542, 544, 545, 546, 547, 548, 549, 551, 552, 553, 560, 563, 578, 579, 596, 606, 607, 609, 610, 612, 613, 621, 622, 627, 629, 630, 635, 638, 639, 640, 641, 642, 645, 646, 648, 657, 659, 660, 661, 663, 665, 666, 669, 670, 671, 672, 673, 674, 678, 679, 680, 682, 693, 694, 695, 698, 699, 707, 709, 717, 719, 730, 734, 795, 796, 801, 815, 821, 862, 874, 875, 876, 877, 878, 883, 984, 989, 1091, 1110], "myfirstsuit": 43, "test_find": 43, "wtf": [43, 52, 112, 171, 202, 207, 208, 211, 213, 231, 270, 530, 545, 719, 862, 887, 891, 903, 937, 939, 962], "tallk": 43, "morph": [43, 62, 160, 169, 194, 195, 260, 515, 527, 530, 533, 539, 635, 687, 768, 966], "fixtur": [43, 160, 169, 261, 262, 277, 283, 284, 287, 318, 448, 459, 495, 719, 1103, 1136], "trivial": [43, 133, 144, 275, 357, 373, 530, 547, 643, 648, 699, 771, 779, 872, 888, 924, 1120], "tempfil": [43, 961], "crap": [43, 134, 209, 251, 403, 419, 422, 597, 636, 872, 937], "null": [43, 62, 134, 135, 136, 151, 176, 192, 205, 221, 228, 231, 246, 253, 263, 267, 332, 345, 352, 380, 391, 401, 406, 419, 494, 550, 649, 724, 730, 737, 762, 797, 806, 808, 809, 826, 841, 848, 890, 895, 902, 909, 911, 913, 915, 921, 924, 925, 930, 933, 937], "deriv": [43, 106, 155, 209, 221, 297, 321, 495, 513, 539, 609, 610, 612, 613, 674, 682, 963, 976, 1110], "seminar": [44, 116], "psycho": 44, "rule": [44, 134, 140, 165, 215, 221, 225, 258, 291, 318, 333, 352, 354, 355, 356, 371, 377, 395, 406, 407, 408, 410, 418, 420, 445, 457, 462, 563, 609, 643, 646, 650, 652, 672, 698, 699, 805, 826, 887, 963, 986, 994, 995, 1005, 1014, 1077, 1125], "dont": [44, 225, 417, 739], "scenario": [44, 135, 148, 157, 165, 169, 340, 461, 613, 707, 925, 926, 933], "robert": [44, 445], "martin": [44, 417, 418, 445], "someon": [44, 165, 206, 221, 228, 231, 262, 317, 552, 707, 758, 823, 829, 850, 872, 896, 940, 988], "mistak": [44, 133, 139, 140, 190, 206, 230, 870, 1064, 1077], "kill": [44, 134, 135, 211, 826, 880, 909, 928, 937, 938, 967, 1124], "peopl": [44, 62, 130, 133, 135, 137, 138, 140, 148, 153, 165, 194, 228, 328, 417, 445, 463, 652, 766, 805, 972, 988, 1016, 1071, 1073], "polit": [44, 685], "thei": [44, 54, 64, 77, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 153, 155, 157, 161, 173, 195, 202, 206, 208, 211, 218, 221, 225, 267, 275, 321, 347, 353, 373, 401, 404, 407, 413, 417, 418, 422, 431, 436, 437, 457, 462, 463, 491, 493, 513, 530, 540, 545, 571, 575, 607, 635, 636, 639, 646, 647, 694, 695, 701, 725, 739, 758, 766, 791, 801, 805, 827, 863, 870, 871, 872, 883, 908, 937, 938, 943, 958, 968, 976, 983, 986, 1036, 1059, 1066, 1069, 1070, 1077, 1080, 1083, 1098, 1104, 1120, 1123], "regul": 44, "ethic": 44, "everi": [44, 52, 58, 61, 62, 77, 88, 109, 110, 126, 133, 139, 169, 192, 221, 262, 342, 399, 413, 417, 440, 445, 461, 480, 481, 550, 560, 612, 634, 636, 641, 717, 737, 750, 766, 791, 799, 801, 803, 804, 820, 827, 829, 871, 886, 921, 924, 937, 938, 957, 959, 968, 1004, 1022, 1033, 1044, 1070, 1105, 1120], "particular": [44, 132, 144, 165, 386, 411, 437, 461, 513, 717, 812, 987, 988], "electr": 44, "seem": [44, 121, 132, 134, 135, 154, 259, 436, 870, 872, 937, 1120], "adher": [44, 808], "immedi": [44, 62, 133, 134, 139, 140, 211, 252, 255, 258, 260, 296, 378, 588, 702, 707, 748, 758, 762, 863, 913, 922, 925, 927, 1008, 1105], "survei": [44, 154], "had": [44, 132, 134, 135, 139, 140, 144, 148, 153, 165, 169, 198, 200, 219, 347, 386, 457, 524, 536, 621, 635, 760, 793, 794, 805, 830, 870, 883, 954, 988, 995, 1014, 1083, 1087], "life": [44, 129, 140, 145, 148, 151, 153, 161, 542, 672, 693, 708, 718, 719, 766, 805, 862, 903, 917, 923, 989, 1010, 1067], "accomplish": [44, 56, 77, 173, 259, 261, 262, 403, 418, 870], "befor": [44, 129, 133, 134, 136, 137, 138, 140, 143, 148, 153, 169, 172, 176, 194, 221, 237, 238, 240, 261, 262, 267, 283, 284, 285, 291, 335, 343, 344, 353, 373, 422, 494, 524, 530, 569, 595, 610, 636, 648, 663, 675, 680, 681, 691, 695, 696, 701, 702, 707, 709, 710, 717, 718, 719, 730, 744, 754, 760, 766, 792, 828, 863, 872, 911, 926, 928, 940, 963, 968, 986, 1029, 1054, 1056, 1060, 1069, 1082, 1086, 1089, 1099, 1100, 1106], "formal": [44, 143, 157, 194, 195, 284, 287, 484, 1099], "googletest": [44, 64, 96, 160, 162, 163, 195, 238, 240, 275, 433, 442, 478, 491, 493, 494, 555, 693, 694, 695, 719, 720, 1105, 1107, 1120], "messag": [44, 128, 130, 138, 139, 148, 151, 157, 163, 171, 172, 198, 202, 205, 208, 218, 221, 228, 231, 246, 253, 261, 262, 263, 267, 298, 310, 315, 418, 421, 423, 442, 547, 563, 622, 652, 657, 677, 679, 680, 689, 699, 707, 719, 741, 766, 799, 803, 808, 862, 884, 903, 913, 917, 992, 1006, 1016, 1058, 1100, 1104, 1106, 1132, 1133, 1134], "saniti": [44, 409, 414, 415, 418, 422, 426, 552, 637, 675, 716, 718, 719], "perform": [44, 133, 139, 148, 150, 172, 191, 192, 221, 262, 316, 357, 360, 383, 390, 395, 403, 406, 407, 410, 413, 414, 415, 421, 530, 570, 588, 591, 613, 634, 648, 690, 719, 750, 928, 945, 955, 956, 1014, 1098, 1116, 1119], "delici": [44, 52], "fearlessli": [44, 52], "backlog": 44, "Or": [44, 133, 240, 291, 402, 418, 521, 649, 675, 686, 718, 719, 857, 883, 893, 919, 994, 1008, 1085, 1089], "Will": [44, 133, 166, 225, 296, 727, 940, 1006, 1093, 1107, 1113, 1132], "high": [45, 52, 113, 154, 194, 208, 225, 417, 445, 468, 481, 485, 489, 693, 695, 710, 748, 760, 764, 776, 785], "speed": [45, 52, 123, 128, 133, 202, 206, 208, 218, 221, 225, 408, 698, 760, 766, 926, 928, 1068, 1069], "hype": 45, "we": [45, 49, 58, 60, 61, 67, 113, 115, 123, 132, 133, 135, 136, 137, 138, 139, 140, 144, 148, 149, 152, 153, 154, 155, 156, 157, 161, 162, 165, 169, 170, 171, 172, 173, 175, 184, 185, 192, 193, 194, 195, 199, 202, 205, 206, 208, 209, 211, 238, 240, 242, 249, 252, 255, 257, 259, 261, 262, 280, 284, 287, 296, 313, 316, 317, 321, 332, 347, 358, 365, 373, 386, 395, 397, 401, 403, 406, 411, 418, 420, 428, 429, 435, 436, 437, 440, 442, 444, 447, 456, 457, 461, 462, 478, 479, 480, 481, 489, 492, 493, 494, 524, 530, 539, 551, 575, 606, 610, 627, 628, 629, 630, 631, 635, 646, 657, 663, 689, 690, 695, 698, 709, 727, 730, 734, 735, 739, 741, 744, 762, 766, 768, 774, 782, 793, 794, 808, 809, 823, 829, 830, 845, 863, 870, 871, 872, 879, 883, 888, 889, 890, 896, 897, 898, 899, 911, 924, 933, 950, 954, 955, 956, 964, 983, 988, 1014, 1016, 1020, 1022, 1051, 1058, 1059, 1060, 1064, 1069, 1070, 1071, 1072, 1079, 1080, 1086, 1089, 1106, 1107, 1123], "did": [45, 134, 135, 137, 139, 140, 143, 144, 152, 161, 165, 172, 257, 397, 401, 417, 442, 480, 628, 697, 699, 714, 739, 744, 766, 805, 863, 874, 883, 964, 1118], "consequ": [45, 132, 133, 252, 255, 377, 398, 401, 402, 445, 896, 983, 1083, 1118], "unsign": [45, 206, 211, 349, 351, 359, 388, 391, 395, 403, 449, 464, 479, 493, 494, 495, 545, 615, 616, 625, 673, 707, 709, 722, 725, 730, 737, 746, 748, 750, 756, 762, 771, 776, 780, 892, 933, 934, 1115, 1116], "introduc": [45, 57, 77, 96, 194, 211, 219, 260, 275, 399, 407, 419, 435, 440, 462, 480, 481, 482, 483, 513, 535, 621, 719, 785, 937, 966, 992, 1006, 1071, 1120], "throw": [45, 137, 140, 211, 437, 461, 462, 466, 472, 473, 475, 476, 477, 495, 513, 591, 629, 671, 692, 695, 706, 709, 1110], "notfounderror": 45, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 45, "cluster_clean_cod": [45, 46, 50, 52, 54, 55, 719], "cluster_clean_code_bug": [45, 46, 52, 54, 55, 719], "clean_code_bugs_find_error": [45, 46, 52, 719], "twice": [46, 52, 54, 55, 56, 133, 339, 378, 400, 420, 643, 646, 705, 719, 786, 826, 863, 879, 911, 956], "crash": [46, 52, 62, 109, 110, 131, 133, 134, 135, 138, 190, 192, 202, 208, 218, 221, 328, 368, 375, 461, 545, 572, 617, 693, 719, 924, 938, 1064], "found": [46, 52, 107, 108, 120, 129, 132, 144, 153, 165, 198, 202, 205, 208, 211, 213, 215, 218, 221, 231, 246, 253, 267, 275, 285, 296, 310, 404, 413, 423, 425, 433, 471, 475, 476, 477, 483, 494, 496, 500, 501, 502, 530, 535, 575, 578, 581, 591, 595, 596, 620, 628, 630, 632, 640, 714, 719, 737, 798, 801, 808, 855, 872, 940, 943, 952, 957, 963, 971, 980, 1010, 1042, 1068, 1071, 1108, 1120], "clean_code_bugs_overwrite_store_content_on_read": [46, 52, 54, 55, 719], "clean_code_bugs_overwrite_existing_fil": [46, 52, 54, 55, 719], "explicitli": [47, 134, 135, 139, 165, 205, 215, 225, 258, 355, 356, 374, 412, 418, 462, 539, 542, 550, 591, 640, 643, 646, 699, 797, 925, 934, 962, 972, 991, 1077, 1085], "solut": [47, 64, 112, 138, 140, 148, 149, 157, 159, 165, 184, 194, 195, 200, 203, 206, 211, 216, 222, 238, 241, 252, 261, 262, 266, 272, 291, 377, 378, 381, 400, 403, 421, 434, 461, 483, 513, 535, 541, 542, 562, 599, 601, 603, 610, 624, 632, 647, 652, 657, 683, 699, 719, 827, 828, 845, 908, 913, 926, 927, 943, 968, 1004, 1035, 1047, 1077, 1121], "force_overwrit": 47, "descriptor": [47, 133, 157, 189, 221, 225, 246, 267, 285, 317, 542, 725, 746, 782, 802, 808, 809, 866, 888, 889, 890, 934], "mani": [48, 52, 55, 58, 61, 88, 113, 133, 135, 139, 140, 157, 162, 165, 181, 192, 213, 223, 228, 249, 253, 257, 258, 260, 266, 285, 296, 317, 321, 345, 357, 359, 368, 383, 397, 399, 404, 419, 420, 432, 433, 436, 439, 444, 447, 486, 513, 560, 570, 589, 591, 610, 622, 634, 635, 643, 663, 684, 689, 697, 705, 719, 725, 727, 744, 752, 758, 762, 766, 792, 802, 803, 805, 806, 859, 871, 889, 890, 909, 919, 922, 937, 938, 940, 950, 959, 961, 963, 968, 977, 987, 992, 995, 998, 1002, 1010, 1014, 1016, 1020, 1069, 1071, 1072, 1073, 1077, 1086, 1105, 1118, 1121], "overwrit": [48, 108, 461, 462, 475, 483, 500, 502, 535, 545, 591, 593, 622, 719, 766, 828, 833, 845, 897, 1012], "present": [48, 60, 130, 136, 140, 144, 148, 153, 166, 221, 267, 275, 284, 429, 541, 762, 766, 801, 872, 883, 902, 963, 1046, 1086, 1120], "continu": [49, 52, 62, 88, 98, 105, 109, 110, 126, 134, 143, 144, 156, 165, 166, 169, 178, 183, 184, 185, 214, 219, 225, 231, 241, 307, 371, 372, 378, 379, 385, 389, 392, 396, 401, 405, 409, 414, 415, 417, 419, 422, 423, 440, 554, 556, 557, 617, 637, 645, 675, 714, 715, 716, 717, 718, 719, 863, 865, 869, 875, 898, 899, 937, 938, 943, 954, 961, 968, 972, 1005, 1008, 1026, 1071, 1086, 1105], "expected_cont": 49, "fill": [49, 135, 136, 148, 170, 221, 222, 267, 359, 635, 639, 684, 694, 737, 762, 766, 832, 889, 966], "strategi": [49, 205, 393, 871, 1021, 1098], "hurri": [49, 378], "read_fil": 49, "compar": [49, 112, 193, 195, 206, 221, 262, 267, 356, 398, 412, 413, 422, 491, 537, 694, 874, 909, 1006, 1011, 1035, 1039, 1069, 1091], "binaryfil": 49, "doesn": [49, 135, 138, 246, 373, 375, 378, 393, 407, 689, 725, 786, 793, 794, 828, 832, 845, 941, 952, 1008], "belong": [49, 162, 165, 345, 365, 391, 418, 513, 537, 551, 553, 811, 819, 898, 979, 993], "test_write_csv": 49, "test_read_csv": [49, 1061], "ah": [49, 58, 61, 139, 155, 192, 194, 208, 592, 940, 1016, 1080], "altern": [50, 52, 54, 55, 62, 64, 67, 77, 82, 132, 133, 140, 166, 185, 211, 272, 352, 429, 537, 546, 560, 571, 574, 643, 692, 698, 719, 766, 805, 826, 866, 870, 872, 884, 892, 898, 909, 915, 933, 940, 988, 1008, 1011, 1085, 1089, 1093, 1100, 1110, 1113, 1129, 1130, 1132, 1135], "cluster_clean_code_featur": [50, 52, 54, 55, 719], "clean_code_features_csv": [50, 52, 54, 55, 719], "clean_code_features_other_index": [50, 52, 719], "establish": [52, 70, 173, 185, 249, 261, 262, 283, 287, 307, 417, 766, 924, 1121], "were": [52, 126, 133, 135, 139, 148, 165, 169, 328, 377, 433, 536, 545, 546, 572, 639, 678, 793, 794, 872, 899, 954, 962, 986, 995, 1014, 1019, 1077, 1083, 1118], "occas": [52, 88, 134, 694], "ourselv": [52, 165, 863], "gather": [52, 140, 172, 261, 262, 283, 284, 287, 295, 411, 413, 1048], "wreak": [52, 109, 110, 393, 617], "havoc": [52, 109, 110, 393, 617], "shoehorn": 52, "violat": [52, 133, 417, 445, 673, 695, 780, 924, 938], "nearli": [52, 165, 171, 395, 916], "solid": [52, 129, 145, 258, 260, 418, 445, 1116, 1117, 1131, 1132, 1134, 1135], "chanc": [52, 133, 135, 170, 397, 417, 721, 766, 891, 1123], "cluster_clean_code_refactor": [52, 54, 55, 719], "clean_code_refactoring_backingstore_monolith": [52, 54, 55, 719], "clean_code_refactoring_store_enum_switch": [52, 54, 55, 719], "clean_code_refactoring_backingstore_interfac": [52, 55, 719], "clean_code_refactoring_pass_store_in_ctor": [52, 55, 719], "now": [53, 60, 132, 133, 134, 135, 136, 137, 139, 140, 148, 152, 161, 171, 181, 198, 205, 211, 215, 225, 233, 253, 257, 278, 296, 297, 310, 373, 386, 401, 406, 431, 437, 444, 457, 462, 484, 485, 492, 551, 575, 578, 584, 588, 596, 639, 690, 695, 710, 724, 744, 766, 774, 776, 782, 798, 801, 863, 870, 871, 872, 898, 899, 907, 952, 954, 959, 962, 977, 980, 1004, 1059, 1069, 1071, 1089, 1099, 1118], "violatin": 53, "respect": [53, 58, 61, 64, 126, 134, 148, 195, 257, 259, 302, 349, 397, 417, 462, 480, 539, 546, 609, 643, 694, 695, 797, 805, 870, 924, 938, 983], "mainli": [54, 133, 169, 258, 267, 591, 717, 906, 966], "bugfix": 54, "ongo": [54, 926], "scene": [54, 940, 983], "pleas": [54, 112, 134, 135, 138, 140, 144, 161, 165, 169, 170, 172, 173, 174, 175, 185, 211, 238, 240, 249, 270, 301, 343, 377, 407, 495, 552, 554, 555, 556, 557, 805, 863, 871, 872, 887, 916, 934, 942, 943, 988, 1090], "wait": [54, 71, 72, 73, 77, 82, 86, 122, 133, 134, 135, 136, 137, 139, 180, 284, 296, 607, 635, 702, 710, 719, 743, 758, 764, 768, 771, 774, 776, 799, 802, 810, 862, 863, 889, 891, 895, 907, 919, 922, 925, 932, 934, 937, 1012, 1080, 1105, 1123, 1131], "unnecessarili": [54, 68, 934], "conflict": [54, 74, 76, 260, 261, 262, 283, 343, 394, 546, 636, 708, 718, 719, 722, 725, 735, 862, 871, 903, 911, 917, 937, 971, 1101], "rip": [54, 136, 419, 478, 924, 1079], "detail": [54, 83, 130, 135, 138, 143, 147, 148, 160, 166, 180, 191, 192, 194, 195, 202, 208, 218, 222, 223, 225, 229, 251, 262, 310, 417, 422, 445, 482, 492, 494, 542, 694, 744, 826, 870, 872, 926, 958, 1066, 1107, 1116], "instanc": [54, 56, 106, 109, 110, 140, 181, 189, 193, 202, 205, 206, 213, 215, 220, 223, 225, 228, 243, 246, 253, 267, 285, 306, 321, 435, 440, 448, 459, 461, 462, 463, 475, 476, 477, 480, 493, 606, 617, 624, 629, 677, 680, 727, 732, 735, 933, 934, 961, 963, 977, 978, 980, 983, 1006, 1091], "its": [54, 56, 58, 61, 64, 83, 86, 107, 109, 110, 127, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 150, 155, 157, 161, 162, 163, 165, 185, 192, 193, 195, 202, 206, 208, 218, 221, 225, 234, 249, 251, 252, 255, 258, 260, 267, 284, 301, 312, 343, 365, 376, 378, 393, 395, 397, 404, 406, 428, 436, 440, 459, 462, 463, 478, 479, 480, 481, 486, 491, 494, 536, 537, 538, 540, 542, 547, 577, 617, 635, 647, 657, 683, 702, 717, 730, 739, 744, 766, 771, 793, 794, 797, 799, 803, 808, 813, 814, 826, 827, 848, 850, 871, 874, 875, 882, 892, 893, 898, 913, 919, 922, 924, 925, 926, 934, 956, 961, 963, 966, 971, 976, 980, 986, 994, 1004, 1006, 1011, 1015, 1021, 1069, 1071, 1090, 1091, 1098, 1100, 1118, 1120, 1121, 1123], "replac": [54, 62, 96, 138, 183, 194, 202, 205, 206, 208, 209, 211, 218, 221, 253, 267, 284, 295, 337, 352, 393, 419, 482, 483, 535, 568, 569, 628, 635, 663, 680, 694, 709, 717, 719, 769, 872, 912, 924, 938, 962], "symptom": [56, 143], "mismatch": [56, 519], "appar": [56, 60, 62, 64, 65, 135, 137, 138, 140, 144, 194, 205, 257, 422, 436, 607, 652, 663, 695, 734, 870, 928, 1077], "onc": [56, 132, 134, 135, 138, 139, 140, 143, 148, 153, 154, 295, 313, 335, 360, 369, 377, 407, 420, 436, 437, 438, 442, 447, 459, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 492, 494, 552, 570, 571, 625, 666, 677, 687, 705, 717, 727, 730, 762, 863, 872, 914, 937, 938, 957, 963, 964, 965, 999, 1020, 1029, 1042, 1073, 1076, 1100], "sync": [56, 134, 205, 221, 228, 231, 246, 253, 263, 267, 393, 397, 766, 857], "imho": [56, 674], "forbidden": [57, 395], "accord": [57, 62, 112, 132, 135, 221, 626, 810, 826, 859, 863, 871, 872], "uncl": [57, 328], "bob": [57, 221, 328, 417], "enum": [57, 194, 195, 352, 367, 405, 409, 414, 415, 419, 422, 637, 675, 716, 718, 719, 725, 727, 735, 924, 1118], "instead": [57, 62, 113, 126, 132, 133, 134, 135, 153, 154, 162, 194, 211, 213, 221, 251, 267, 295, 316, 321, 358, 407, 435, 478, 481, 495, 557, 573, 629, 631, 648, 652, 694, 695, 709, 734, 735, 744, 797, 826, 848, 871, 913, 933, 940, 942, 952, 958, 989, 1035, 1047, 1059, 1083, 1105], "born": [58, 61, 804, 989], "bound": [58, 61, 62, 211, 215, 246, 258, 273, 394, 404, 409, 414, 415, 519, 547, 549, 551, 648, 719, 804, 808, 864, 925, 928, 981, 1002, 1025, 1085], "employe": [58, 61, 160, 192, 980], "year": [58, 61, 132, 133, 134, 135, 139, 144, 165, 205, 211, 253, 257, 417, 536, 620, 621, 623, 624, 627, 628, 629, 630, 631, 632, 634, 681, 719, 1021], "emploi": [58, 61, 134, 144, 169, 378, 766], "configur": [58, 60, 61, 62, 67, 72, 77, 81, 83, 84, 85, 103, 112, 113, 118, 119, 132, 134, 135, 138, 140, 163, 173, 239, 248, 249, 258, 269, 270, 276, 277, 280, 284, 310, 316, 420, 424, 425, 427, 428, 440, 442, 447, 484, 485, 486, 494, 719, 739, 746, 766, 780, 796, 797, 798, 801, 810, 846, 859, 862, 863, 871, 883, 890, 904, 906, 934, 941, 942, 954, 964, 1034, 1072, 1076, 1085, 1093, 1121], "pattern": [58, 61, 81, 105, 113, 129, 130, 146, 149, 168, 169, 195, 198, 221, 260, 318, 327, 329, 417, 434, 435, 436, 437, 439, 440, 442, 444, 445, 446, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 483, 535, 698, 699, 719, 720, 826, 855, 922, 969, 970, 1105, 1125], "led": [58, 61, 71, 72, 73, 77, 90, 151, 173, 249, 296, 319, 484, 719, 725, 863, 871], "hei": [58, 61, 133, 173, 225, 552, 553, 801, 887, 1009, 1077], "reinvent": [58, 61, 193, 242, 1064], "wheel": [58, 61, 113, 117, 129, 768, 803, 898, 1093], "admit": [58, 61, 140], "notori": [58, 61], "fun": [58, 61, 133, 138, 191, 193, 229, 258, 328, 441, 678, 766, 805, 863, 870, 871, 968, 980, 992, 1008, 1063, 1064, 1092, 1099, 1118], "live": [58, 61, 69, 96, 97, 112, 113, 130, 134, 138, 156, 160, 165, 169, 174, 185, 193, 194, 195, 196, 209, 211, 219, 230, 237, 238, 239, 240, 242, 248, 250, 251, 258, 259, 260, 261, 262, 266, 269, 270, 284, 291, 310, 314, 318, 319, 321, 328, 329, 330, 390, 407, 419, 420, 425, 441, 446, 455, 457, 459, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 570, 571, 591, 633, 644, 675, 676, 677, 694, 708, 717, 718, 719, 720, 730, 766, 796, 799, 800, 805, 821, 822, 862, 903, 971, 988, 1021, 1064, 1090, 1099, 1117, 1118, 1132], "session": [58, 61, 129, 138, 140, 158, 165, 169, 173, 177, 202, 208, 218, 221, 233, 237, 238, 240, 251, 259, 316, 768, 797, 798, 880, 891, 1052, 1064, 1090, 1098, 1128], "simpl": [58, 61, 71, 73, 74, 77, 85, 120, 129, 133, 137, 138, 140, 143, 144, 148, 153, 157, 160, 161, 165, 169, 172, 195, 211, 213, 215, 221, 225, 277, 280, 331, 332, 339, 378, 380, 394, 397, 404, 419, 420, 421, 422, 423, 427, 428, 430, 440, 538, 545, 546, 584, 612, 620, 621, 623, 624, 627, 628, 629, 630, 631, 632, 652, 685, 695, 704, 719, 725, 739, 746, 758, 766, 768, 776, 802, 855, 863, 864, 870, 871, 900, 906, 908, 911, 926, 934, 937, 941, 942, 943, 948, 964, 968, 988, 989, 997, 1016, 1064, 1070, 1072, 1088, 1104, 1105], "thu": [58, 61, 133, 134, 135, 171, 362, 437, 739, 744, 786, 793, 896, 1076, 1123], "techniqu": [58, 61, 68, 69, 70, 397, 407, 493, 617, 866], "usag": [58, 61, 64, 79, 105, 113, 135, 140, 185, 195, 206, 219, 233, 258, 260, 261, 283, 296, 316, 328, 378, 403, 404, 411, 422, 426, 432, 441, 442, 455, 481, 482, 483, 535, 545, 552, 553, 571, 606, 608, 612, 613, 632, 634, 646, 657, 663, 677, 684, 719, 768, 803, 826, 855, 858, 873, 904, 907, 922, 958, 963, 966, 1016, 1058, 1060, 1093, 1100, 1107, 1118], "At": [58, 61, 133, 134, 137, 140, 144, 148, 165, 169, 195, 205, 209, 211, 245, 342, 371, 375, 407, 435, 693, 758, 959, 976, 1064], "flow": [58, 61, 134, 165, 170, 172, 173, 174, 175, 179, 184, 185, 200, 203, 216, 227, 311, 312, 313, 315, 351, 371, 379, 385, 389, 392, 396, 405, 407, 409, 414, 415, 637, 675, 684, 716, 718, 719, 937, 972, 997, 999, 1006, 1083, 1119], "event": [58, 61, 62, 85, 136, 157, 193, 202, 206, 208, 218, 221, 249, 261, 262, 413, 663, 707, 719, 734, 735, 743, 768, 769, 781, 782, 783, 784, 787, 799, 803, 862, 866, 891, 903, 906, 922, 925, 926, 930, 934, 975, 1080, 1089, 1091, 1123, 1132, 1134, 1135], "save": [58, 61, 62, 84, 129, 132, 133, 145, 153, 156, 202, 208, 218, 221, 252, 255, 258, 359, 361, 635, 666, 669, 670, 671, 810, 828, 882, 891, 928, 957, 961, 967, 977, 1010, 1069, 1100, 1118], "schedul": [58, 61, 62, 64, 98, 109, 110, 112, 133, 150, 173, 175, 239, 248, 249, 269, 323, 324, 435, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 748, 758, 764, 771, 786, 793, 794, 795, 796, 800, 802, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 908, 917, 919, 920, 924, 928, 942, 944, 945, 946, 947, 948, 949, 950, 951, 1076, 1113, 1123, 1124, 1134], "overhead": [58, 61, 407, 413, 524, 533, 698, 699], "usual": [58, 61, 83, 107, 112, 133, 134, 140, 143, 148, 153, 163, 165, 225, 259, 275, 333, 373, 374, 400, 413, 417, 423, 425, 430, 435, 449, 457, 463, 492, 537, 553, 594, 648, 683, 684, 698, 707, 710, 717, 725, 737, 739, 744, 754, 760, 762, 766, 780, 782, 786, 802, 804, 808, 827, 863, 864, 871, 892, 906, 924, 925, 940, 941, 942, 943, 952, 961, 962, 963, 964, 968, 971, 974, 975, 981, 983, 985, 986, 988, 991, 997, 1002, 1063, 1070, 1071, 1077, 1100, 1101, 1107, 1120], "exhibit": [58, 61, 211, 629, 872, 893, 898], "glitch": [58, 61, 135, 140, 871, 872], "caus": [58, 61, 133, 136, 148, 202, 208, 218, 221, 225, 872, 919, 924, 1086], "hiccup": [58, 61, 140, 251, 942], "twist": [58, 61, 750], "amazingli": [58, 61, 810], "submiss": 59, "submit": [59, 108, 760], "linuxtag": [59, 172, 868], "pure": [60, 68, 140, 310, 373, 446, 609, 635, 674, 699, 805, 995, 1118], "local": [60, 133, 134, 136, 139, 148, 161, 165, 166, 173, 174, 178, 194, 195, 209, 211, 212, 218, 221, 224, 225, 246, 249, 261, 263, 272, 275, 283, 284, 287, 296, 310, 343, 347, 371, 373, 390, 428, 432, 441, 455, 457, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 535, 542, 560, 643, 646, 648, 677, 719, 739, 766, 771, 793, 794, 798, 848, 862, 870, 872, 873, 874, 875, 881, 883, 889, 900, 908, 950, 952, 959, 962, 1007, 1093, 1120, 1121, 1134], "easili": [60, 127, 134, 140, 296, 352, 371, 404, 417, 436, 609, 685, 748, 764, 892, 922, 928, 958, 971, 1003, 1118], "guess": [60, 215, 225, 251, 397, 402, 652, 879, 934], "autotool": [60, 144], "portabl": [60, 157, 345, 407, 702, 908, 915, 934, 938, 995, 1073], "archiv": [60, 102, 103, 112, 144, 145, 173, 175, 239, 248, 249, 269, 413, 426, 432, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 719, 796, 826, 862, 942, 945, 947, 948, 950, 951, 952, 957, 961, 1093], "m4": 60, "macro": [60, 211, 276, 337, 348, 351, 363, 372, 379, 385, 389, 392, 396, 399, 405, 409, 414, 415, 423, 424, 428, 429, 432, 637, 675, 681, 716, 718, 719, 735, 754, 768, 808, 886, 892, 898, 908, 942, 1014, 1105, 1110, 1115, 1119], "stock": [60, 205, 206, 1020, 1021], "sudo": [60, 100, 112, 129, 136, 138, 140, 148, 162, 173, 211, 239, 248, 249, 258, 260, 269, 270, 423, 430, 507, 719, 796, 821, 823, 862, 863, 871, 872, 926, 954, 1100], "pwd": [60, 108, 161, 238, 240, 310, 315, 426, 492, 494, 555, 741, 744, 793, 794, 803, 848, 850, 863, 941, 942, 955, 957, 1098], "pub": [60, 136, 173, 739, 879, 1058], "lib": [60, 112, 129, 138, 144, 172, 192, 195, 205, 221, 228, 231, 246, 253, 260, 263, 267, 425, 491, 744, 756, 762, 766, 857, 872, 937, 941, 943, 952, 954, 1093, 1100], "remot": [60, 101, 103, 136, 138, 140, 148, 185, 194, 241, 296, 434, 455, 469, 483, 535, 719, 739, 766, 767, 771, 792, 795, 862, 871, 873, 876, 877, 878, 881, 889, 952, 964, 1121, 1122, 1129], "v0": 60, "v1": [60, 251, 442, 457, 639], "v2": [60, 62, 140, 160, 251, 442, 457, 639], "autotooleri": 60, "autogen": 60, "step": [60, 62, 132, 133, 139, 140, 144, 148, 169, 208, 211, 212, 238, 240, 253, 257, 262, 285, 333, 335, 337, 353, 377, 419, 422, 439, 482, 492, 530, 555, 560, 693, 766, 793, 794, 940, 948, 1085, 1086, 1099], "noconfigur": 60, "suppress": [60, 139, 185, 411, 436, 545, 694, 845, 1093], "absorb": [60, 126, 171, 416, 418, 646, 1021], "Be": [60, 96, 211, 258, 260, 296, 350, 383, 492, 513, 538, 543, 605, 632, 644, 646, 675, 677, 680, 691, 700, 708, 716, 718, 719, 792, 937, 952], "awar": [60, 296, 394, 427, 926], "enabl": [60, 132, 138, 165, 173, 194, 202, 208, 218, 221, 249, 259, 356, 407, 433, 440, 462, 518, 764, 766, 771, 818, 863, 867, 871, 883, 926, 950, 954, 964, 1123], "mkdir": [60, 99, 112, 119, 134, 139, 143, 161, 162, 238, 240, 249, 310, 315, 492, 494, 495, 555, 717, 719, 766, 793, 794, 795, 796, 830, 831, 832, 833, 834, 837, 838, 840, 846, 862, 879, 883, 933, 952, 954, 955, 961], "dist": [60, 117, 698, 1019], "406332": 60, "apr": [60, 62, 192, 202, 231, 303, 941, 942, 955], "transfer": [60, 133, 195, 198, 275, 296, 413, 495, 545, 646, 737, 766, 779, 780, 792, 793, 794, 853, 873, 879, 882, 1080, 1118, 1120], "scp": [60, 96, 100, 112, 119, 144, 173, 239, 248, 249, 269, 270, 494, 495, 719, 739, 793, 794, 862, 873, 874, 875, 876, 878, 883, 900, 950, 951, 952], "192": [60, 166, 173, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 316, 739, 801, 883, 1135], "168": [60, 166, 173, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 316, 739, 801, 883, 952, 1135], "82": [60, 143, 152, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 1021, 1068, 1069], "prerequisit": [60, 103, 211, 739, 870, 991], "apt": [60, 144, 148, 162, 211, 258, 260, 507, 746, 865, 870, 872, 883, 942, 954, 1100, 1105], "python3": [60, 62, 85, 117, 129, 144, 153, 166, 172, 192, 202, 208, 218, 221, 225, 918, 928, 954, 964, 991, 1085, 1086, 1093, 1100], "along": [60, 134, 140, 193, 206, 328, 377, 447, 717, 811, 919, 940, 971, 1091], "omit": [60, 62, 139, 148, 153, 202, 208, 218, 221, 222, 225, 314, 358, 395, 407, 419, 439, 613, 635, 682, 744, 760, 809, 870, 871, 872, 879, 895, 896, 900, 911, 961, 964, 1016, 1098], "bind": [60, 134, 236, 258, 260, 355, 362, 593, 635, 648, 675, 699, 700, 702, 708, 718, 719, 866, 940, 972, 976, 995, 1006, 1083, 1118, 1133, 1135], "cxx": [60, 130, 420, 435, 436, 437, 438, 439, 440, 442, 444, 447, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 941, 942], "xf": [60, 144, 792, 954], "ld_library_path": [60, 425, 957], "gpiod": [60, 62, 746], "py3": [60, 117, 129, 1019], "aarch64": [60, 144, 952], "multi": [62, 1070, 1077], "chmod": [62, 140, 310, 793, 794, 811, 816, 818, 820, 823, 875, 879], "snippet": [62, 153, 172, 295, 600, 871, 964], "subdirectori": [62, 139, 148, 160, 162, 185, 276, 420, 424, 425, 478, 492, 719, 741, 792, 793, 794, 806, 816, 818, 835, 850, 854, 871, 872, 952, 1052, 1105], "stuff": [62, 69, 77, 99, 112, 132, 135, 139, 148, 153, 165, 169, 172, 185, 194, 195, 216, 230, 249, 251, 272, 296, 314, 413, 419, 521, 568, 717, 719, 725, 734, 766, 796, 826, 834, 840, 846, 862, 870, 900, 961, 963, 1019, 1059, 1064, 1066, 1098], "stuff_complet": 62, "strace": [62, 96, 133, 135, 328, 724, 729, 782, 889, 895, 908, 924, 933, 1131], "pid": [62, 133, 135, 136, 412, 785, 798, 802, 804, 908, 924, 927, 933, 937, 938], "4677": 62, "11hello": 62, "clock_gettime64": 62, "clock_monoton": [62, 710, 890, 924], "tv_sec": [62, 924], "164646": 62, "tv_nsec": [62, 924], "833862215": 62, "_newselect": 62, "tv_usec": 62, "500000": [62, 865, 871, 1069], "unfinish": [62, 135], "4679": 62, "resum": [62, 665, 666, 669, 670, 671, 762, 924], "timeout": [62, 705, 707, 709, 889, 1093], "mi": [62, 213], "845864201": 62, "4678": [62, 208], "fd": [62, 143, 205, 249, 495, 725, 870, 884, 888, 889, 890, 892, 896, 897, 898, 899, 902, 904, 907, 930, 933, 937, 1021], "fourth": 62, "involv": [62, 77, 133, 136, 140, 143, 195, 249, 261, 262, 283, 316, 393, 401, 407, 413, 478, 545, 547, 636, 737, 766, 863, 941, 950, 952], "occasion": [62, 121, 148, 165, 194, 211, 403, 417, 427, 629, 766, 810, 988, 1002, 1063, 1078], "due": [62, 140, 165, 435, 699, 1093], "weird": [62, 249, 403, 673, 725, 750, 919, 937], "gil": [62, 165, 169, 261, 262, 283, 284, 287, 1064], "jitter": [62, 926, 928], "heavi": [62, 157, 165, 445, 872, 988, 1123], "usr": [62, 133, 134, 138, 144, 153, 156, 161, 163, 185, 192, 193, 202, 205, 208, 218, 221, 225, 228, 231, 246, 251, 253, 263, 267, 307, 310, 420, 422, 423, 425, 426, 430, 652, 685, 695, 739, 766, 792, 798, 810, 822, 854, 857, 870, 872, 918, 928, 937, 940, 941, 942, 943, 952, 955, 957, 964, 967, 991, 1052, 1067, 1080, 1093, 1100, 1107], "env": [62, 129, 134, 156, 251, 918, 928, 991, 1018, 1052, 1067, 1080], "hello_left": 62, "hello_right": 62, "rjust": [62, 153, 221, 267], "hello_middl": 62, "center": [62, 156, 198, 213, 215, 221, 225, 246, 253, 267, 285, 304, 411, 491], "t1": [62, 152, 215, 225, 246, 250, 267, 909], "t2": [62, 152, 208, 215, 225, 246, 909], "t3": 62, "async": [62, 133, 165, 169, 202, 208, 218, 219, 221, 284, 663, 916, 939, 1064, 1133], "await": [62, 284], "epoll_wait": 62, "201": [62, 136, 166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 285], "multiplex": [62, 871, 890, 924, 1135], "create_task": 62, "sysf": [62, 112, 113, 130, 180, 249, 297, 298, 494, 719, 722, 723, 768, 862, 863, 870, 872, 903, 904, 907, 1122, 1129], "unmaintain": [62, 239, 248, 249, 942, 1006, 1115], "immun": [62, 552, 710], "hotplug": [62, 870], "reset": [62, 132, 442, 444, 694, 695, 696, 717, 1086, 1134], "pullup": 62, "pulldown": 62, "rpi": [62, 115, 144, 296, 766, 767, 870], "hope": [62, 133, 135, 138, 140, 144], "major": [62, 138, 151, 202, 208, 218, 221, 258, 260, 417, 421, 552, 725, 732, 797, 925, 989, 995, 1010], "releas": [62, 136, 162, 276, 378, 424, 695, 706, 707, 709, 719, 725, 739, 863, 870, 913, 918, 954, 957, 989, 1099, 1130], "ton": [62, 693, 805, 867, 892, 924, 928, 1118], "bartosz": 62, "golaszewski": 62, "dev": [62, 99, 133, 134, 144, 150, 151, 161, 162, 205, 211, 221, 228, 231, 246, 249, 253, 258, 260, 263, 267, 316, 406, 425, 489, 719, 721, 722, 724, 730, 737, 746, 760, 762, 766, 779, 796, 797, 806, 808, 809, 826, 840, 843, 846, 848, 862, 865, 870, 871, 872, 895, 902, 922, 925, 928, 930, 933, 934, 954, 1105, 1107, 1123], "gpiochip0": [62, 746, 906], "ioctl": [62, 249, 399, 732, 734, 760, 768, 769, 774, 780, 866, 870], "crw": [62, 730, 797, 848, 870, 871, 872], "254": [62, 154, 205, 208, 213, 215, 218, 225, 228, 246, 253, 263, 267, 273], "request": [62, 92, 97, 113, 134, 135, 138, 195, 197, 222, 228, 284, 418, 437, 459, 473, 642, 643, 646, 647, 724, 768, 892, 907, 1098], "request_lin": 62, "consum": [62, 113, 135, 138, 155, 205, 284, 411, 428, 457, 707, 709, 791, 799, 806, 913, 914, 925, 930, 932, 934, 937, 964, 986, 995, 1021, 1076, 1123], "mytest": 62, "config": [62, 96, 113, 122, 123, 129, 134, 136, 138, 144, 152, 246, 263, 267, 314, 321, 330, 494, 695, 719, 739, 767, 848, 870, 871, 872, 879, 954, 964, 1093], "lineset": 62, "set_valu": [62, 709], "all_io": 62, "transform": [62, 65, 153, 168, 169, 172, 174, 184, 189, 190, 192, 193, 200, 211, 213, 216, 219, 242, 249, 251, 260, 266, 284, 291, 295, 407, 498, 499, 511, 513, 566, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 663, 687, 719, 950, 970, 1014, 1047, 1064], "ntime": [62, 974], "task": [62, 76, 148, 190, 203, 216, 230, 233, 236, 266, 272, 314, 317, 319, 320, 323, 324, 325, 328, 719, 793, 794, 811, 853, 862, 870, 873, 888, 903, 909, 922, 923, 925, 926, 1064, 1098], "interv": [62, 88, 113, 172, 202, 208, 209, 218, 221, 225, 246, 284, 314, 479, 481, 494, 495, 635, 709, 710, 890, 900, 924, 928], "none": [62, 117, 129, 132, 133, 138, 143, 152, 154, 166, 176, 183, 184, 193, 198, 199, 202, 205, 208, 214, 215, 218, 221, 225, 228, 234, 243, 246, 250, 251, 253, 263, 267, 273, 285, 305, 397, 398, 419, 422, 542, 628, 630, 889, 906, 934, 961, 964, 986, 1012, 1019, 1089, 1105], "itertool": [62, 230, 232, 284, 968], "cram": [62, 126, 163, 734, 924, 961, 1077], "goe": [62, 64, 84, 136, 138, 153, 258, 407, 442, 507, 610, 630, 639, 689, 730, 766, 808, 809, 895, 922, 928, 938, 941, 948, 991, 994, 1014], "stuff_raw": 62, "mod": [62, 221, 246, 266, 744], "sidewai": [62, 169, 172, 227, 323, 324, 969, 970], "numpi": [62, 165, 169, 184, 203, 209, 216, 251, 257, 285, 287, 419, 988, 1063, 1067, 1070, 1078, 1082, 1093, 1100], "transpos": [62, 826], "col": 62, "tolist": 62, "outsid": [62, 221, 446, 459, 539, 547, 552, 694, 695, 756, 827, 909, 925, 964], "instanti": [62, 192, 314, 437, 448, 462, 463, 476, 477, 478, 481, 563, 592, 610, 631, 657, 663, 685, 698, 699, 976, 977, 1067], "coro": [62, 663, 665, 666, 668, 669, 670, 671], "cannot": [62, 109, 110, 129, 133, 134, 135, 140, 144, 155, 156, 162, 163, 165, 172, 192, 225, 252, 255, 296, 373, 374, 377, 378, 397, 399, 401, 404, 407, 425, 428, 440, 463, 491, 530, 539, 542, 544, 547, 548, 571, 606, 607, 609, 610, 612, 613, 617, 636, 639, 642, 648, 674, 684, 685, 689, 695, 697, 707, 709, 762, 766, 771, 786, 803, 808, 811, 822, 837, 845, 881, 925, 934, 956, 957, 958, 962, 964, 976, 981, 988, 996, 997, 1003, 1004, 1014, 1083, 1085, 1086, 1098, 1123], "stuff_raw2": 62, "05": [62, 96, 112, 136, 143, 148, 192, 227, 250, 257, 268, 277, 280, 309, 327, 426, 1068], "runtimeerror": [62, 156, 192, 246, 295, 961, 963], "reus": [62, 148, 154, 956, 1006], "alreadi": [62, 79, 112, 133, 134, 136, 144, 155, 157, 165, 169, 225, 252, 255, 390, 401, 407, 439, 459, 461, 472, 475, 494, 511, 591, 719, 725, 739, 746, 754, 764, 766, 769, 786, 862, 870, 871, 872, 879, 892, 893, 895, 900, 901, 903, 920, 955, 961, 988, 1014, 1093, 1098, 1100, 1107], "bare": [62, 77, 79, 86, 88, 107, 115, 133, 328, 863, 871], "create_coro": 62, "ctor": [62, 160, 169, 218, 267, 491, 513, 521, 538, 541, 542, 545, 555, 557, 592, 615, 639, 640, 642, 646, 647, 672, 680, 695, 785], "nest": [62, 129, 193, 206, 215, 225, 232, 236, 253, 263, 341, 370, 371, 397, 657, 709, 713, 771, 961, 1004, 1091], "_blink": 62, "coro_cr": 62, "creator": [62, 127, 144], "create_factory_for_blink": 62, "blinkfunc": 62, "blink_func": 62, "stuff_decorator_stage1": 62, "stage1": 62, "stararg": [62, 962, 965, 986], "func": [62, 192, 202, 208, 218, 221, 252, 266, 497, 566, 635, 650, 657, 698, 962, 966], "becom": [62, 67, 77, 88, 91, 133, 135, 161, 173, 252, 255, 275, 277, 280, 356, 386, 388, 395, 398, 419, 435, 439, 478, 639, 694, 695, 696, 766, 803, 822, 855, 871, 872, 879, 922, 925, 926, 961, 967, 997, 1099, 1105, 1120, 1121], "obsolet": [62, 165, 988], "prog": [62, 206, 295], "demo": [62, 96, 97, 112, 133, 156, 160, 165, 168, 170, 173, 174, 177, 185, 192, 200, 203, 206, 209, 211, 216, 222, 239, 242, 245, 248, 249, 269, 270, 310, 328, 420, 421, 425, 426, 430, 433, 481, 489, 619, 696, 719, 796, 799, 800, 821, 822, 862, 891, 933, 942, 988, 1070, 1104, 1124, 1128], "opposit": [62, 137, 371, 872, 925, 1077], "futur": [62, 112, 113, 140, 205, 225, 237, 238, 240, 249, 291, 301, 323, 324, 395, 459, 629, 663, 705, 707, 708, 718, 719, 776, 1118], "steig": [63, 141], "normalweg": 63, "w\u00e4r": 63, "umst\u00e4nden": [63, 1113, 1117, 1132], "renat": 63, "beschreibung": [63, 177, 179, 187, 190, 193, 194, 196, 212, 224, 854], "bergfex": 63, "reden": 63, "sie": [63, 141, 147, 152, 156, 213, 218, 285, 305, 311, 328, 788, 853, 1112, 1114, 1115, 1116, 1122, 1132, 1134, 1135, 1136], "tagen": [63, 1122], "wir": [63, 151, 156, 160, 166, 168, 176, 177, 182, 196, 215, 221, 228, 281, 328, 596, 1113, 1128, 1129], "w\u00fcrden": 63, "denk": [63, 141, 197, 1132], "beiden": [63, 152, 166, 213, 221, 228], "h\u00fctten": [63, 142], "schlafen": 63, "hochk\u00f6nig": 64, "cite": [64, 140, 154, 165, 287], "complain": [64, 135, 144, 148, 162, 357, 530, 545, 546, 741, 769, 879], "subrepo": 64, "whole": [64, 212, 224, 225, 227, 230, 233, 242, 245, 284, 295, 419, 648, 657, 699, 741, 744, 766, 811, 893, 962, 1033, 1121], "subtitl": 64, "fight": [64, 805], "against": [64, 135, 144, 185, 193, 205, 206, 377, 419, 423, 427, 478, 494, 710, 739, 741, 746, 750, 758, 801, 898, 943, 948, 958, 972, 1030, 1091, 1098, 1123], "fake": [64, 870], "simplest": [64, 171, 233, 420, 437, 570, 577, 684, 705, 771, 801, 855, 919, 952, 990, 995, 1098, 1106], "unprofession": [64, 137], "populist": 64, "gtest_discover_test": 64, "robust": 64, "sentenc": 64, "implicitli": [64, 189, 194, 205, 384, 434, 542, 550, 640, 648, 729, 896, 961, 993, 1077], "gtest_add_test": 64, "scan": [64, 202, 225, 228, 870, 872], "primit": [64, 133, 177, 178, 258, 970, 1118, 1128], "sort": [64, 84, 105, 107, 120, 133, 160, 166, 174, 178, 193, 195, 205, 206, 211, 213, 215, 216, 221, 229, 243, 246, 253, 258, 267, 273, 407, 408, 411, 412, 422, 513, 571, 589, 599, 603, 632, 673, 677, 685, 698, 707, 709, 719, 806, 810, 848, 859, 872, 963, 1011, 1012, 1066, 1091, 1093], "port": [64, 129, 130, 135, 140, 145, 205, 239, 248, 269, 270, 284, 296, 328, 719, 799, 805, 853, 862, 873, 878, 882, 900, 1021, 1076, 1080, 1093, 1122, 1129], "trap": [64, 134, 195, 390, 395, 413, 541, 1117, 1119], "hehe": [64, 165, 172], "html_sidebar": 64, "rtd": [64, 130], "linkcheck": 64, "admonit": 64, "matrix": [64, 154, 156, 257, 317, 319, 408], "thoma": [64, 127], "cokela": 64, "ablog": 64, "couldn": [64, 140, 144, 169, 172, 1002], "figur": [64, 112, 119, 125, 130, 138, 139, 154, 209, 960], "piec": [64, 77, 126, 134, 397, 513, 565, 871, 902], "especi": [64, 85, 91, 113, 134, 138, 157, 165, 249, 310, 328, 330, 356, 367, 397, 417, 639, 741, 872], "feed": [64, 83, 130, 1069], "blog_baseurl": 64, "nicer": [64, 926], "pour": [64, 435, 792], "tag": [64, 136, 138, 141, 142, 166, 182, 184, 226, 422, 430, 739, 954, 957, 1130], "resolv": [65, 76, 144, 148, 202, 205, 208, 211, 218, 221, 228, 231, 246, 253, 263, 267, 374, 400, 549, 883, 940, 943, 1068, 1069], "buildenviron": 65, "resolve_refer": 65, "builder": [65, 205, 1021], "get_and_resolve_doctre": 65, "apply_post_transform": 65, "addnod": 65, "docstr": [65, 129, 189, 192, 202, 208, 214, 226, 229, 232, 254, 286, 310, 992], "emit": [65, 83, 462, 463, 808], "doctre": 65, "increasingli": 67, "whose": [67, 144, 202, 208, 218, 221, 257, 267, 323, 324, 457, 527, 630, 631, 863, 964, 1098, 1105], "mainten": [67, 352, 378, 397, 957], "easier": [67, 79, 84, 91, 154, 195, 419, 445, 550, 634, 766, 1118], "never": [67, 109, 110, 133, 134, 135, 140, 153, 215, 221, 225, 267, 285, 356, 377, 393, 404, 407, 417, 435, 457, 536, 617, 695, 805, 863, 886, 911, 941], "simpler": [67, 144, 195, 259, 262, 335, 394, 428, 574, 762, 766, 871, 883], "wors": [67, 121, 136, 221, 403, 419, 657, 888, 1101], "makefil": [67, 96, 195, 238, 240, 420, 431, 735, 739, 767, 768, 945, 948, 950, 957, 958], "everytbodi": 68, "runtim": [68, 133, 144, 166, 170, 194, 218, 221, 332, 353, 401, 411, 412, 425, 430, 461, 462, 475, 489, 524, 533, 573, 591, 592, 635, 677, 684, 698, 699, 909, 940, 976, 994, 1006, 1070, 1071], "dispatch": [68, 284, 524, 533, 609, 612, 613], "hell": [68, 185, 219, 403, 436, 649, 680, 702, 756, 791, 916, 1077], "destructor": [68, 69, 96, 105, 113, 195, 211, 232, 258, 260, 312, 313, 441, 455, 483, 493, 507, 513, 522, 528, 535, 536, 537, 538, 543, 545, 560, 608, 609, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 648, 675, 691, 700, 706, 708, 716, 718, 719, 727, 758, 771, 783, 1110], "opportun": [68, 140, 143, 153, 165, 184, 407, 626, 977, 1121], "shoot": [68, 828], "oneself": [68, 1123], "encapsul": [69, 72, 193, 206, 211, 258, 260, 284, 296, 417, 437, 441, 455, 481, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 513, 535, 536, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 644, 675, 691, 700, 708, 716, 718, 719, 735, 768, 934, 989, 1091, 1119], "hide": [69, 194, 206, 262, 989], "fanci": [69, 1009, 1070, 1090], "whatnot": [69, 209, 707, 766, 863, 871, 889, 919], "boost": [70, 211, 430, 433, 513, 663, 927, 1136], "feel": [70, 133, 135, 144, 165, 530, 627, 629, 630, 635, 908, 926, 988], "cluster_ecpropos": [71, 72, 73, 86, 719], "cluster_ecproposal_ec1": [71, 72, 73, 86, 719], "cluster_ecproposal_ec1_mt": [71, 72, 73, 86, 719], "cluster_ecproposal_ec1_linux": [71, 72, 73, 719], "cluster_ecproposal_ec1_cxx": [71, 72, 73, 86, 719], "cluster_ecproposal_ec2": [71, 73, 719], "cluster_ecproposal_ec2_python": [71, 73, 719], "ecproposal_ec1_git": [71, 72, 73, 719], "ecproposal_ec1_mt_exercise_mt_race_fix": [71, 72, 73, 86, 719], "ex": [71, 72, 73, 77, 86, 121, 193, 206, 507, 524, 685, 719, 811, 826, 1091, 1100], "avoid": [71, 72, 73, 77, 86, 133, 140, 148, 225, 343, 378, 456, 491, 493, 503, 537, 541, 592, 719, 764, 855, 871, 1119], "ecproposal_ec1_mt_exercise_mt_rac": [71, 72, 73, 86, 719], "ecproposal_ec1_mt_lock": [71, 72, 73, 86, 719], "semaphor": [71, 72, 73, 75, 77, 86, 88, 128, 157, 158, 180, 202, 208, 218, 221, 328, 707, 719, 758, 913, 1123, 1133], "ecproposal_ec1_cxx_build": [71, 72, 73, 86, 719], "ecproposal_ec1_mt_wait": [71, 72, 73, 86, 719], "ecproposal_ec1_linux_exercise_sensor": [71, 72, 73, 719], "temperatur": [71, 72, 73, 77, 81, 90, 93, 96, 112, 169, 202, 249, 284, 316, 319, 334, 336, 338, 436, 442, 447, 468, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 495, 506, 524, 535, 613, 645, 719, 766, 862, 869, 901, 903, 920, 976, 1052, 1067, 1068, 1069, 1070], "ecproposal_ec1_linux_dev_mgmt": [71, 72, 73, 719], "ecproposal_ec1_cxx_ifac": [71, 72, 73, 719], "ecproposal_ec1_linux_bas": [71, 72, 73, 719], "ecproposal_ec1_linux_gpio": [71, 72, 73, 719], "ecproposal_ec1_linux_exercise_led_displai": [71, 72, 73, 719], "displai": [71, 72, 73, 77, 138, 202, 208, 218, 221, 246, 249, 251, 253, 258, 263, 267, 319, 411, 484, 719, 801, 848, 857, 870, 924, 1100], "ecproposal_ec1_linux_exercise_avg_sensor": [71, 72, 73, 719], "averag": [71, 72, 73, 77, 83, 84, 169, 205, 209, 225, 260, 284, 440, 456, 486, 493, 719, 928, 1021], "ecproposal_ec1_cxx_unittest": [71, 72, 73, 719], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [71, 72, 73, 719], "ecproposal_ec1_cxx_oo_bas": [71, 72, 73, 719], "ecproposal_ec2_python_flask": [71, 73, 719], "ecproposal_ec2_python_web_sensor": [71, 73, 719], "ecproposal_ec2_python_exercise_avg_displai": [71, 73, 719], "ecproposal_ec2_python_exercise_sensor": [71, 73, 719], "ecproposal_ec2_python_bas": [71, 73, 719], "qualiti": [72, 140, 194, 257, 871, 1092], "assur": 72, "characterist": 72, "polymorph": [73, 105, 112, 192, 193, 206, 258, 260, 262, 277, 280, 419, 441, 455, 483, 535, 608, 612, 613, 632, 693, 698, 719, 1091, 1118, 1121], "concurr": [73, 165, 169, 219, 685, 756, 972, 1064], "increment": [74, 151, 194, 208, 211, 234, 257, 335, 339, 343, 363, 372, 379, 383, 385, 389, 392, 396, 405, 409, 414, 415, 513, 530, 637, 675, 716, 718, 719, 798, 910, 911, 912, 933, 934, 972], "lossi": 74, "access": [75, 77, 87, 109, 110, 130, 134, 135, 136, 138, 140, 153, 163, 173, 180, 192, 202, 205, 208, 211, 218, 221, 228, 231, 246, 249, 253, 263, 267, 277, 296, 310, 313, 315, 347, 386, 407, 408, 446, 462, 487, 488, 489, 490, 513, 536, 548, 550, 553, 554, 556, 557, 571, 596, 610, 617, 620, 623, 624, 627, 628, 629, 630, 631, 632, 646, 663, 678, 682, 694, 719, 724, 734, 737, 743, 754, 762, 766, 768, 784, 799, 802, 811, 813, 814, 837, 862, 872, 881, 882, 888, 892, 896, 898, 902, 906, 910, 924, 925, 933, 938, 959, 964, 971, 972, 975, 994, 1001, 1003, 1016, 1032, 1068, 1085, 1100, 1123], "flavor": [75, 86, 133, 420, 684, 689], "stash": 76, "suffic": [76, 140, 345, 395], "purpos": [76, 77, 79, 113, 126, 134, 138, 144, 165, 184, 202, 208, 218, 221, 233, 246, 313, 341, 419, 431, 538, 570, 610, 699, 766, 799, 808, 871, 893, 898, 919, 940, 958, 988, 1069, 1099, 1122, 1129], "unifi": [77, 172, 563], "intention": [77, 194, 267, 650], "power": [77, 88, 132, 134, 149, 154, 194, 211, 311, 312, 313, 331, 343, 344, 386, 395, 766, 776, 783, 797, 863, 867, 870, 871, 872, 891, 906, 924, 928, 965, 983, 987, 989, 995, 1000, 1012, 1087], "being": [77, 80, 121, 133, 136, 137, 143, 157, 165, 171, 192, 221, 225, 284, 310, 356, 383, 400, 436, 439, 524, 548, 591, 693, 695, 699, 701, 707, 717, 748, 762, 766, 801, 883, 898, 924, 971, 978, 988, 991, 1068, 1107, 1110, 1123], "address": [77, 98, 105, 109, 110, 112, 133, 135, 136, 137, 140, 173, 180, 185, 192, 194, 195, 211, 213, 239, 248, 249, 260, 269, 270, 307, 312, 313, 321, 374, 376, 385, 389, 392, 395, 396, 404, 405, 409, 414, 415, 435, 441, 446, 449, 455, 457, 459, 464, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 535, 545, 550, 637, 647, 648, 675, 689, 708, 716, 718, 719, 746, 750, 762, 764, 793, 794, 795, 796, 799, 800, 802, 806, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862, 864, 866, 871, 872, 874, 875, 876, 877, 878, 883, 885, 889, 891, 893, 900, 901, 903, 908, 916, 917, 919, 920, 923, 925, 933, 940, 942, 944, 945, 946, 947, 948, 949, 950, 951, 957, 972, 975, 1068, 1069, 1088, 1098], "crucial": [77, 133, 157, 410, 572], "mmu": [77, 133, 737, 780, 803, 924], "sophist": [77, 202, 436, 457, 494, 631], "permiss": [77, 96, 99, 100, 101, 112, 168, 169, 173, 175, 185, 192, 208, 228, 239, 248, 263, 266, 269, 284, 296, 305, 310, 311, 312, 313, 315, 483, 535, 621, 708, 717, 718, 719, 725, 766, 793, 794, 796, 799, 800, 803, 809, 812, 816, 817, 818, 819, 820, 822, 823, 824, 828, 840, 843, 845, 846, 848, 862, 863, 871, 873, 876, 878, 879, 882, 883, 888, 891, 892, 893, 896, 898, 899, 901, 903, 917, 920, 923, 925, 926, 938, 963, 1064, 1093, 1100, 1124, 1133], "nativ": [77, 96, 103, 112, 132, 138, 140, 166, 202, 238, 240, 258, 317, 719, 766, 862, 941, 945, 947, 950, 1073, 1076, 1082], "varieti": [77, 413, 802, 940, 1121], "storag": [77, 138, 143, 420, 648, 766, 802, 863, 871, 888, 908, 1134], "underli": [77, 193, 200, 216, 225, 266, 310, 315, 685, 872, 1064, 1069, 1073], "platform": [77, 140, 193, 202, 206, 208, 218, 221, 225, 233, 251, 303, 312, 330, 746, 766, 871, 872, 906, 924, 1052, 1091, 1098, 1100], "offer": [77, 133, 143, 184, 259, 371, 548, 552], "popular": [77, 144, 157, 161, 366, 643, 791, 872, 924, 940, 956, 982, 1066, 1072, 1080, 1094, 1121], "often": [77, 88, 132, 133, 134, 135, 165, 215, 225, 252, 255, 275, 352, 362, 383, 422, 437, 449, 563, 685, 766, 826, 902, 968, 988, 1002, 1120, 1121], "appropri": [77, 120, 126, 133, 143, 148, 153, 185, 225, 352, 366, 378, 493, 699, 762, 870, 882, 933, 1070, 1076, 1121], "prototyp": [77, 296, 343, 435, 497, 530, 646, 766, 863, 871, 884, 961, 1076], "higher": [77, 133, 144, 202, 208, 218, 221, 717, 764, 863, 925, 927, 934, 942, 950, 1076, 1120], "fulli": [77, 137, 140, 144, 169, 399, 494, 934], "distribut": [77, 138, 143, 148, 160, 165, 185, 195, 213, 225, 307, 435, 481, 489, 702, 737, 766, 804, 805, 926, 988], "en": [77, 138, 150, 160, 221, 249, 615], "vogu": 77, "serial": [77, 132, 133, 143, 173, 208, 209, 221, 799, 801, 1122, 1129], "groundwork": 77, "lai": 77, "instruct": [77, 132, 136, 140, 163, 194, 249, 258, 260, 407, 478, 694, 709, 912, 924, 955, 1052], "consolid": [77, 165], "makeri": 77, "everybodi": [77, 138, 259, 399, 445, 539, 578, 621, 797, 991, 995, 1098, 1118], "clarifi": 77, "earli": [77, 132, 165, 169, 174, 259, 771, 783, 798, 926, 959, 976, 1014, 1120], "matter": [77, 132, 137, 138, 140, 148, 165, 171, 173, 337, 381, 413, 420, 427, 437, 537, 538, 550, 553, 639, 678, 685, 695, 697, 741, 766, 768, 811, 822, 864, 870, 872, 883, 963, 988, 1089, 1100, 1110, 1121], "rewrit": [77, 79, 133, 419], "translat": [77, 90, 91, 153, 166, 184, 221, 225, 228, 231, 267, 684, 1031], "flask": [77, 92, 130, 169, 172, 962], "network": [77, 109, 110, 119, 128, 129, 130, 133, 140, 150, 151, 173, 175, 180, 205, 221, 228, 231, 242, 246, 248, 249, 253, 263, 267, 269, 284, 312, 328, 329, 413, 446, 719, 720, 743, 783, 799, 801, 802, 804, 862, 865, 866, 871, 872, 873, 883, 887, 888, 891, 892, 903, 922, 1129, 1133], "oppos": [79, 112, 132, 172, 206, 213, 223, 258, 378, 422, 427, 524, 850, 864, 871, 879, 913, 926, 933, 938, 957, 983, 994, 995, 1077, 1085], "ahead": [79, 148, 417, 978], "optimz": 79, "donald": [79, 406], "knuth": [79, 406], "prematur": [79, 406, 410], "optim": [79, 134, 246, 258, 393, 409, 410, 414, 415, 422, 719, 750, 1076, 1117, 1119], "evil": [79, 211, 347, 397, 406, 410, 422, 550], "knowledg": [80, 84, 252, 255, 258, 494, 628, 630, 766, 864, 872, 965, 987, 1092], "onewir": [80, 84, 96, 105, 112, 249, 260, 310, 313, 482, 483, 535, 719, 862, 869, 870, 901, 903, 920], "protocol": [80, 125, 138, 171, 172, 182, 204, 207, 209, 210, 214, 217, 220, 223, 232, 245, 247, 252, 255, 261, 262, 264, 265, 268, 271, 283, 284, 286, 287, 316, 319, 351, 359, 446, 459, 724, 853, 864, 866, 870, 872, 873, 881, 882, 902, 961, 965, 969, 976], "aspect": [80, 165, 169, 195, 219, 258, 260, 442, 797, 870, 872, 1064, 1092, 1098, 1123], "regard": [80, 140, 165, 296, 826, 988, 995, 1094, 1098], "filesystem": [80, 84, 105, 112, 132, 135, 144, 173, 175, 185, 236, 310, 315, 494, 718, 719, 766, 792, 871, 883, 899, 906, 924, 943, 1098, 1124, 1129, 1131, 1135], "hwmon": [80, 84, 316, 319], "composit": [81, 105, 113, 169, 195, 241, 259, 260, 277, 434, 441, 455, 469, 483, 535, 719, 968, 1121], "mock": [81, 112, 113, 259, 261, 262, 283, 287, 297, 299, 483, 484, 485, 486, 488, 524, 535, 719, 1105], "pin": [83, 249, 296, 863, 867, 870, 871], "light": [83, 143, 805, 987, 1098], "linearli": [83, 225, 577, 802], "cold": [83, 184], "hot": [83, 135, 408, 411, 748], "queri": [83, 996], "said": [83, 109, 110, 135, 148, 165, 252, 255, 262, 457, 570, 617, 701, 707, 727, 863, 871, 872, 883, 910, 925, 968, 988, 1008, 1077, 1090], "ds18s20": [84, 316, 1098], "datasheet": [84, 118, 762, 863, 872], "lm73": [84, 249, 316, 319, 719, 862, 869, 872], "ti": [84, 132, 417, 495, 539, 696], "hoc": [84, 195, 377], "report": [84, 132, 135, 136, 148, 150, 152, 321, 403, 413, 536, 884, 919, 1105, 1107], "experi": [84, 121, 140, 165, 417, 422, 521, 871, 872, 1099], "subsystem": [85, 96, 97, 102, 103, 112, 151, 173, 180, 185, 222, 238, 240, 242, 248, 249, 258, 260, 261, 277, 283, 719, 744, 762, 776, 796, 800, 802, 862, 863, 870, 871, 872, 906, 922, 963, 1098, 1122, 1123, 1129], "deprec": [85, 262, 604, 892, 906, 1118], "foremost": 86, "osen": [86, 88, 143, 701, 717, 924], "recurs": [86, 87, 169, 193, 202, 208, 218, 221, 705, 758, 771, 810, 811, 826, 838, 848, 855, 875, 882, 919, 1000, 1004, 1118], "mother": [87, 107, 149, 211, 513, 981, 1118], "protect": [87, 133, 135, 185, 193, 205, 258, 260, 358, 377, 475, 476, 536, 539, 550, 606, 608, 609, 632, 707, 719, 750, 758, 764, 803, 845, 871, 912, 913, 924, 972, 975, 984, 1110, 1123], "critic": [87, 133, 143, 413, 706, 756, 758, 1093], "kind": [87, 133, 135, 143, 148, 153, 165, 169, 202, 208, 209, 218, 219, 221, 233, 249, 261, 262, 283, 287, 442, 494, 542, 589, 639, 648, 693, 707, 797, 863, 870, 871, 972, 1064, 1090, 1092, 1123], "poll": [88, 139, 150, 758, 760, 783, 906, 911, 913, 930, 934, 1122, 1129, 1133, 1135], "second": [88, 132, 135, 136, 140, 152, 165, 171, 192, 198, 202, 206, 208, 218, 221, 225, 251, 253, 296, 331, 341, 395, 411, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 471, 475, 476, 477, 481, 484, 494, 530, 545, 593, 595, 596, 635, 664, 665, 684, 695, 696, 709, 710, 713, 714, 715, 776, 803, 808, 811, 871, 890, 893, 900, 924, 933, 937, 941, 942, 956, 957, 958, 1008, 1016, 1093, 1105, 1118], "readi": [88, 132, 863, 1098], "rare": [88, 138, 155, 169, 420, 430, 492, 494, 545, 643, 694, 848, 870, 887, 999, 1003, 1016, 1099], "btw": [88, 137, 143, 165, 171, 185, 192, 212, 215, 310, 394, 735, 801, 1053, 1055], "increas": [88, 135, 407, 863, 926, 928, 956, 1121], "tight": [88, 157, 351, 709, 769, 1089], "bui": [88, 133, 436], "bigger": [88, 133, 165, 407, 1070], "avail": [88, 132, 133, 135, 136, 138, 144, 148, 157, 161, 165, 185, 194, 202, 208, 218, 221, 275, 283, 284, 287, 329, 421, 423, 428, 432, 437, 462, 463, 663, 699, 705, 709, 739, 766, 771, 798, 822, 863, 867, 870, 871, 922, 925, 926, 943, 954, 959, 964, 971, 995, 1013, 1014, 1063, 1072, 1089, 1093, 1100, 1101, 1120, 1123], "intro": [92, 112, 113, 130, 160, 184, 194, 203, 216, 217, 230, 233, 252, 255, 260, 266, 272, 284, 535, 635, 643, 663, 687, 719, 862, 886, 903, 905, 907, 1064, 1119, 1121, 1133], "rout": [92, 169, 962], "jinja2": 92, "ss2022": [95, 719, 795, 796, 862], "ws2022": 95, "lab": [95, 105, 112, 310], "vo": [96, 105, 112, 316], "ku": [96, 104, 105, 112], "g1": [96, 719, 795, 796, 862], "g2": [96, 310, 719, 795, 796, 862], "08": [96, 98, 104, 112, 136, 143, 144, 145, 199, 202, 227, 231, 257, 327, 431, 863, 870, 872, 894, 955, 1068], "cont": [96, 112, 203, 266], "command": [96, 98, 112, 129, 132, 137, 143, 173, 185, 190, 200, 202, 208, 209, 216, 218, 221, 230, 233, 239, 241, 248, 249, 266, 269, 270, 296, 310, 315, 328, 378, 399, 410, 422, 432, 433, 434, 441, 455, 459, 469, 483, 492, 535, 545, 694, 708, 718, 719, 766, 792, 793, 794, 795, 796, 799, 800, 801, 803, 804, 805, 806, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 828, 829, 830, 831, 833, 834, 835, 837, 838, 840, 841, 842, 844, 846, 854, 859, 862, 871, 872, 873, 874, 875, 882, 886, 891, 893, 901, 903, 917, 919, 920, 923, 924, 925, 926, 940, 941, 948, 952, 956, 1016, 1064, 1093, 1100, 1107, 1121], "wsl": [96, 97, 102, 103, 112, 222, 242, 248, 261, 277, 283, 719, 796, 800, 862, 943, 950, 951, 955], "homework": [96, 101, 104, 112, 135], "ssh": [96, 100, 101, 112, 113, 115, 130, 140, 144, 173, 205, 221, 228, 231, 239, 246, 248, 253, 263, 267, 269, 296, 309, 310, 316, 317, 323, 324, 328, 494, 495, 719, 792, 793, 794, 801, 848, 857, 862, 863, 871, 874, 875, 900, 950, 951, 952, 1122, 1124, 1129], "sshf": [96, 100, 112, 239, 248, 249, 269, 270, 317, 719, 862, 873, 878, 943, 952], "toolchain": [96, 102, 103, 105, 107, 112, 128, 145, 160, 162, 249, 328, 419, 420, 426, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 535, 708, 718, 719, 767, 796, 799, 800, 862, 885, 891, 893, 900, 901, 903, 917, 920, 923, 925, 942, 943, 944, 945, 948, 956, 957, 958, 989, 1113, 1115, 1116, 1117, 1125, 1131, 1133], "bashrc": [96, 103, 112, 132, 144, 205, 239, 248, 249, 263, 269, 270, 719, 796, 798, 846, 848, 862, 882, 952, 954], "studi": [96, 103, 194, 237, 238, 240, 241, 249, 291, 434, 441, 635, 675, 718, 719, 862, 945, 947, 950], "ds18b20": [96, 112, 249, 310, 719, 862, 869, 900], "slave": [96, 112, 249, 719, 862, 867, 869, 900], "redirect": [96, 99, 112, 134, 137, 173, 175, 185, 202, 208, 218, 221, 239, 248, 249, 269, 295, 310, 315, 719, 793, 794, 795, 796, 810, 830, 831, 833, 834, 837, 838, 840, 846, 859, 862, 892, 1014, 1114, 1124, 1131], "pipe": [96, 133, 138, 140, 153, 173, 175, 185, 239, 248, 249, 251, 269, 295, 310, 315, 717, 719, 796, 803, 808, 848, 853, 862, 892, 936, 937, 938, 952, 1014, 1114, 1124, 1131], "06": [96, 105, 112, 143, 174, 218, 237, 250, 257, 274, 277, 280, 309, 327, 419, 430, 513, 717, 991, 1068], "past": [96, 133, 137, 138, 195, 211, 383, 568, 570, 574, 577, 581, 646, 739, 741, 805, 1059, 1063, 1115], "2p": [96, 103], "3p": [96, 103], "5p": [96, 103], "pointer": [96, 107, 112, 113, 136, 160, 236, 302, 311, 312, 313, 328, 341, 343, 345, 386, 387, 389, 390, 392, 394, 395, 396, 405, 409, 414, 415, 449, 494, 507, 524, 529, 531, 536, 537, 539, 547, 554, 556, 565, 569, 573, 577, 578, 581, 587, 591, 604, 637, 644, 645, 646, 673, 675, 680, 682, 684, 689, 694, 696, 699, 700, 708, 714, 715, 716, 718, 719, 725, 732, 737, 748, 754, 783, 786, 884, 910, 938, 1014, 1115, 1116, 1117, 1118, 1119, 1121], "exit": [96, 112, 129, 133, 135, 163, 184, 202, 208, 211, 218, 221, 243, 249, 284, 303, 328, 332, 384, 426, 433, 442, 545, 612, 692, 694, 719, 729, 734, 768, 862, 872, 888, 889, 890, 892, 893, 898, 900, 903, 904, 920, 930, 937, 938, 957, 963, 971, 972, 990, 993, 1006, 1016, 1026, 1043, 1093, 1100], "statu": [96, 112, 129, 134, 136, 148, 202, 208, 211, 218, 221, 233, 243, 249, 328, 332, 384, 422, 426, 433, 612, 717, 719, 768, 782, 862, 893, 898, 900, 903, 920, 924, 937, 957, 993, 1019, 1078], "yai": [96, 129, 205, 213, 215, 228, 234, 253, 263, 578, 629, 635, 919], "ol": [96, 112, 211, 258, 260, 267, 319, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 539, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 687, 691, 697, 700, 708, 716, 718, 719, 859, 934, 1009, 1014, 1036], "randomsensor": [96, 113, 442, 447, 456, 468, 482, 483, 489, 493, 503, 504, 505, 506, 508, 509, 535, 693, 694, 695, 696, 719, 976], "rectangl": [96, 126, 445, 513, 542, 558, 632, 719], "mystr": [96, 159, 211], "point3d": [96, 558, 632, 719], "cuboid": [96, 558, 632, 719], "hierarchi": [98, 105, 109, 110, 169, 170, 172, 174, 192, 193, 206, 209, 221, 239, 248, 249, 269, 270, 280, 321, 408, 435, 436, 437, 440, 441, 455, 456, 460, 462, 483, 493, 535, 719, 796, 799, 800, 801, 812, 815, 816, 817, 818, 819, 820, 821, 826, 832, 838, 845, 862, 874, 875, 876, 877, 878, 903, 921, 950, 951, 1091], "parent": [98, 108, 109, 110, 135, 148, 150, 239, 248, 249, 269, 270, 717, 719, 746, 796, 798, 799, 800, 801, 802, 811, 812, 815, 816, 817, 818, 819, 820, 821, 829, 830, 831, 832, 833, 835, 837, 838, 839, 850, 862, 874, 875, 876, 877, 878, 903, 909, 950, 951], "login": [98, 112, 113, 138, 140, 173, 185, 239, 309, 310, 719, 793, 794, 796, 797, 798, 800, 802, 803, 804, 812, 815, 816, 817, 818, 819, 820, 821, 827, 862, 863, 871, 874, 875, 876, 877, 878, 879, 881, 883, 900, 950, 951, 1042, 1113, 1122, 1129], "bourn": [98, 112, 149, 173, 175, 239, 248, 249, 269, 310, 311, 312, 315, 328, 329, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 717, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 856, 862, 885, 891, 893, 901, 903, 904, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "verifi": [99, 101, 112, 121, 143, 149, 161, 173, 185, 249, 321, 530, 548, 719, 796, 801, 830, 833, 834, 837, 840, 846, 862, 875, 876, 878, 1030, 1067, 1070, 1093], "joke": [99, 133], "mostli": [99, 219, 328, 333, 339, 351, 367, 397, 406, 551, 592, 694, 699, 734, 802, 805, 826, 892, 919, 922, 943, 1120], "size": [99, 108, 132, 134, 135, 152, 154, 160, 202, 203, 208, 211, 216, 218, 221, 225, 230, 233, 249, 266, 267, 272, 310, 341, 358, 363, 372, 379, 383, 385, 389, 390, 392, 395, 396, 398, 403, 404, 405, 407, 409, 414, 415, 437, 438, 444, 483, 495, 496, 500, 501, 502, 503, 504, 508, 509, 512, 518, 530, 535, 537, 541, 545, 550, 554, 556, 557, 570, 571, 572, 573, 578, 583, 584, 588, 592, 594, 595, 600, 602, 629, 631, 637, 640, 641, 646, 657, 658, 659, 661, 675, 685, 694, 698, 699, 707, 716, 717, 718, 719, 725, 737, 752, 762, 782, 791, 796, 797, 803, 810, 840, 843, 846, 848, 854, 858, 862, 866, 871, 892, 894, 933, 934, 940, 957, 960, 1064, 1077], "secur": [100, 112, 136, 138, 140, 185, 205, 211, 239, 248, 269, 309, 719, 793, 794, 799, 801, 804, 822, 826, 862, 863, 871, 873, 874, 875, 876, 877, 881, 892, 900, 950, 951, 957, 959, 991, 1021], "account": [100, 109, 110, 112, 138, 140, 160, 165, 169, 170, 205, 211, 221, 228, 231, 246, 250, 251, 253, 263, 267, 310, 315, 340, 413, 419, 617, 635, 739, 870, 883, 988, 1068], "authent": [100, 112, 173, 185, 194, 239, 248, 249, 269, 270, 307, 310, 719, 793, 794, 862, 873, 874, 875, 876, 877, 878, 883, 1030], "ownership": [100, 112, 160, 195, 249, 270, 284, 483, 503, 507, 513, 535, 648, 690, 693, 694, 708, 718, 719, 793, 794, 796, 799, 800, 803, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 862, 891, 892, 893, 901, 903, 917, 920, 923, 925, 1118, 1121], "setuid": [100, 112, 173, 239, 248, 249, 269, 270, 719, 796, 801, 821, 862], "send": [100, 112, 115, 130, 133, 144, 169, 170, 172, 173, 174, 175, 208, 209, 228, 230, 231, 249, 270, 310, 315, 459, 790, 806, 822, 865, 866, 870, 879, 889, 937, 939, 1060, 1077], "quick": [101, 112, 165, 172, 190, 194, 200, 209, 216, 230, 242, 272, 462, 699, 853, 863, 1064, 1090], "credenti": [101, 112, 140, 233, 719, 794, 795, 796, 801, 815, 816, 817, 818, 819, 820, 821, 862, 879, 908, 961], "share": [101, 102, 105, 109, 110, 112, 115, 128, 133, 135, 140, 144, 148, 157, 158, 160, 161, 163, 166, 185, 195, 202, 205, 208, 218, 221, 225, 228, 231, 236, 237, 238, 240, 246, 249, 253, 263, 267, 276, 291, 307, 328, 329, 373, 400, 401, 407, 413, 420, 424, 431, 432, 436, 448, 493, 513, 521, 635, 696, 698, 699, 707, 709, 716, 718, 719, 744, 748, 764, 771, 795, 796, 799, 805, 815, 818, 819, 821, 857, 862, 871, 895, 908, 910, 916, 922, 928, 940, 943, 950, 952, 972, 975, 1107, 1122, 1123, 1131, 1133], "adjust": [101, 123, 127, 719, 766, 862, 871, 876, 878, 934, 941], "ubuntu": [102, 134, 140, 144, 148, 160, 161, 162, 163, 173, 238, 240, 249, 328, 719, 805, 862, 865, 883, 942, 943, 950, 951, 955, 1100, 1105], "zoom": [102, 103, 112, 140, 149, 165, 249, 263, 328, 420, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 719, 848, 862, 942, 945, 946, 947, 948, 950, 1112], "recap": [103, 112, 169, 173, 182, 211, 258, 259, 286, 310, 531, 970], "endeavor": 103, "hoop": [103, 805, 937], "doze": [103, 139, 194, 195, 208, 310, 317, 395, 717, 805, 850, 1008, 1014, 1100], "pictur": [103, 130, 133, 154, 165, 169, 262, 263, 407, 413, 492, 778, 826, 828, 848, 863, 882, 886, 1133], "fit": [103, 144, 149, 154, 156, 351, 356, 436, 560, 635, 657, 725, 766, 863, 1067, 1069, 1078], "theori": [105, 169, 380, 407, 1069], "Of": [105, 112, 113, 135, 138, 168, 169, 219, 237, 238, 240, 242, 249, 258, 260, 291, 441, 455, 483, 493, 535, 568, 608, 619, 632, 716, 718, 719, 795, 810, 857, 862, 900, 903, 905, 970, 1064, 1077, 1121], "ece20": [105, 108, 478, 494, 555, 793, 794, 801], "uml": [105, 113, 241, 259, 261, 262, 441, 455, 483, 493, 535, 719], "foundat": [105, 216, 246, 441, 455, 483, 535, 719, 766, 1129], "adapt": [105, 113, 136, 169, 241, 259, 434, 441, 443, 444, 455, 459, 469, 473, 483, 535, 699, 719, 871, 872, 1121], "syllabu": [105, 318], "vote": 105, "beurteilungsschema": 105, "grade": [105, 108, 112, 113, 314, 324, 1098], "total": [105, 108, 135, 144, 148, 152, 205, 221, 231, 238, 406, 411, 419, 433, 442, 457, 491, 492, 493, 494, 545, 555, 694, 848, 850, 863, 870, 871, 872, 883, 906, 934, 941, 942, 943, 952, 955, 1019, 1021, 1105], "compos": [105, 115, 149, 211, 284, 345, 437, 616, 766, 954, 957, 966, 980, 1026, 1077], "practic": [105, 206, 215, 219, 225, 380, 417, 570, 609, 646, 681, 688, 870, 896, 938, 1072, 1091, 1118, 1121], "theoret": [105, 312, 331, 702], "semest": [105, 108, 314, 316], "addition": [105, 132, 135, 356, 440, 457], "deliv": [105, 133, 866, 937, 938], "variou": [105, 135, 211, 237, 238, 693, 707, 709, 766, 798, 1123], "weight": [105, 156, 165, 402, 760, 872, 988], "decid": [105, 134, 135, 140, 165, 219, 406, 436, 497, 511, 575, 762, 766, 786, 870, 971, 988], "excerpt": [105, 169, 172, 312, 313, 1021, 1078], "w1": [105, 112, 249, 478, 494, 495, 900], "soup": [105, 130, 420, 422, 423, 425, 426, 428, 429, 431, 433, 435, 436, 437, 438, 439, 440, 442, 444, 447, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 491, 493, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 615, 695, 904, 907, 964, 967, 1016, 1098, 1107], "armv8": [105, 144, 249, 495, 941, 954, 955], "rpi4": [105, 144, 249, 495, 941, 954, 955], "gnueabihf": [105, 144, 249, 495, 766, 941, 952, 954, 955], "shape": [105, 126, 154, 156, 195, 257, 258, 483, 513, 535, 555, 635, 719, 766, 892, 1069, 1072, 1082], "algorithm": [105, 134, 143, 154, 202, 208, 216, 218, 221, 229, 231, 237, 238, 258, 267, 407, 483, 500, 524, 531, 535, 562, 573, 575, 576, 578, 579, 582, 583, 599, 602, 603, 632, 677, 685, 687, 698, 702, 719, 1043, 1066, 1070], "find_if": [105, 107, 195, 211, 258, 291, 577, 580, 599, 603, 620, 629, 632, 698, 719], "customiz": [105, 258, 580, 599, 603, 632, 719], "binary_search": [105, 107, 195, 211, 258, 580, 599, 603, 632, 719], "associ": [105, 144, 162, 170, 172, 174, 190, 195, 249, 252, 255, 258, 260, 354, 355, 363, 368, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 483, 484, 500, 502, 535, 570, 599, 603, 632, 635, 637, 663, 675, 716, 718, 719, 725, 732, 790, 864, 892, 964, 994, 995, 996, 1012, 1014, 1071, 1121], "hour": [105, 138, 140, 165, 169, 202, 224, 242, 253, 266, 316, 1026, 1064, 1071], "sent": [105, 133, 134, 173, 278, 413, 459, 806, 914, 934, 938, 1080], "015": 105, "voluntari": 105, "odd": [105, 112, 225, 260, 395, 483, 497, 500, 535, 719, 871, 966, 968], "char": [106, 135, 151, 194, 211, 221, 267, 333, 340, 345, 346, 349, 351, 352, 353, 356, 357, 370, 375, 378, 383, 384, 391, 395, 401, 402, 404, 420, 438, 442, 472, 476, 481, 495, 496, 527, 542, 545, 546, 550, 560, 600, 615, 616, 630, 646, 648, 673, 680, 697, 722, 725, 730, 746, 748, 760, 786, 870, 884, 888, 889, 892, 896, 897, 898, 899, 902, 904, 907, 921, 924, 930, 933, 934, 937, 958, 1003, 1009, 1075, 1105, 1110], "cout": [106, 113, 144, 421, 427, 442, 456, 461, 462, 463, 475, 476, 477, 478, 481, 489, 493, 494, 521, 539, 541, 546, 548, 552, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 616, 619, 626, 629, 635, 640, 650, 652, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 677, 679, 680, 682, 683, 685, 687, 696, 697, 698, 699, 707, 709, 710, 809, 870, 904, 907, 919, 921, 933, 937, 1105], "endl": [106, 144, 421, 442, 456, 461, 462, 463, 475, 476, 477, 478, 481, 489, 493, 494, 521, 539, 541, 546, 548, 552, 553, 560, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 616, 619, 626, 629, 635, 650, 652, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 677, 679, 680, 682, 683, 685, 687, 696, 697, 698, 699, 707, 709, 710, 870, 904, 907, 919, 921, 933, 937, 1105], "constitut": 106, "_id": 106, "objectcontain": 106, "add_object": 106, "_contain": [106, 685], "push_back": [106, 466, 467, 530, 571, 572, 573, 578, 581, 584, 588, 592, 639, 640, 643, 648, 707, 937, 1110], "fragment": [106, 408, 968, 1105], "iostream": [106, 202, 208, 218, 221, 442, 456, 461, 462, 463, 471, 475, 476, 477, 478, 481, 489, 493, 521, 539, 541, 546, 548, 552, 553, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 578, 579, 582, 583, 584, 588, 592, 593, 594, 595, 596, 602, 606, 607, 610, 612, 613, 619, 625, 626, 627, 628, 629, 630, 635, 640, 650, 653, 654, 655, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 677, 679, 680, 682, 685, 687, 696, 697, 698, 699, 707, 709, 717, 870, 904, 907, 911, 919, 921, 933, 937, 938, 1105], "my_vector": 106, "sysroot": [107, 144, 941, 955], "intel": [107, 118, 122, 136, 719, 940], "header": [107, 129, 161, 195, 211, 236, 266, 275, 276, 377, 378, 379, 385, 389, 392, 396, 400, 405, 409, 414, 415, 419, 424, 425, 426, 431, 432, 442, 563, 637, 652, 657, 675, 681, 716, 718, 719, 810, 867, 872, 941, 943, 952, 1021, 1054, 1058, 1059, 1061, 1069, 1072, 1120], "match": [107, 132, 139, 168, 181, 198, 205, 206, 208, 213, 221, 231, 233, 234, 243, 246, 266, 267, 273, 284, 375, 419, 494, 648, 652, 672, 685, 689, 801, 810, 883, 943, 963, 1009, 1064, 1105], "linker": [107, 109, 110, 128, 160, 275, 374, 400, 407, 411, 412, 423, 430, 552, 563, 766, 940, 943, 946, 950, 957, 1115, 1116, 1117, 1120, 1125, 1131], "uniquifi": [108, 260, 483, 500, 535, 719], "lookup": [108, 153, 170, 183, 202, 208, 213, 218, 221, 235, 267, 402, 457, 483, 500, 502, 535, 650, 719, 976, 1005, 1012, 1042, 1077, 1086, 1135], "leak": [108, 135, 390, 404, 442, 462, 463, 483, 500, 502, 503, 519, 527, 530, 535, 536, 542, 607, 681, 692, 694, 719, 964], "sure": [108, 132, 133, 134, 135, 136, 138, 139, 140, 143, 144, 173, 185, 192, 209, 211, 251, 307, 401, 436, 437, 440, 459, 462, 463, 492, 518, 615, 689, 714, 766, 871, 872, 893, 897, 952, 964, 1121], "gz": [108, 129, 766, 767, 790, 791, 792, 1019, 1100], "whatev": [108, 132, 133, 135, 140, 156, 171, 231, 296, 413, 459, 538, 638, 663, 717, 831, 833, 883, 888, 924, 926, 994, 1061, 1069, 1076, 1077, 1100], "quiz": [109, 110, 112, 618, 632, 719, 796, 800, 815, 821, 840, 846, 862, 947, 950], "servic": [109, 110, 129, 138, 139, 140, 173, 205, 221, 228, 231, 246, 253, 263, 267, 413, 419, 702, 758, 764, 769, 799, 802, 853, 872, 881, 883, 890, 926, 993], "owner": [109, 110, 134, 173, 310, 315, 695, 725, 766, 799, 813, 814, 822, 848, 883, 911], "dimension": [109, 110, 154, 657, 799, 1069, 1070], "identifi": [109, 110, 134, 143, 202, 208, 218, 221, 267, 356, 378, 399, 401, 411, 626, 724, 764, 799, 870, 872, 1010, 1071], "pthread": [109, 110, 133, 144, 150, 202, 208, 218, 221, 701, 707, 799, 908, 913, 916, 924, 938, 943], "timeslic": [109, 110, 133, 799, 922, 927], "suspend": [109, 110, 133, 134, 663, 665, 705, 762, 797, 799, 810, 913, 938], "favor": [109, 110, 799, 925, 1118], "fair": [109, 110, 133, 764, 799, 925, 927], "ensur": [109, 110, 221, 437, 485, 799], "evenli": [109, 110, 213, 799], "cpu": [109, 110, 132, 133, 136, 140, 143, 166, 176, 180, 260, 321, 325, 393, 394, 406, 408, 413, 571, 702, 709, 719, 737, 750, 764, 771, 776, 786, 797, 799, 802, 806, 862, 870, 871, 872, 886, 903, 911, 913, 923, 924, 925, 926, 927, 974, 991, 1123], "infinit": [109, 110, 133, 153, 172, 202, 206, 208, 211, 213, 218, 221, 229, 262, 266, 368, 386, 393, 799, 803, 922, 925, 968, 969, 970, 999, 1034], "illus": [109, 110, 799, 803, 922, 925, 1123], "action": [109, 110, 143, 172, 228, 420, 426, 538, 617, 825, 826, 887, 892, 924, 937, 939, 1071, 1093], "undefin": [109, 110, 194, 349, 356, 383, 426, 544, 552, 576, 583, 588, 612, 617, 648, 677, 937], "behavior": [109, 110, 133, 135, 138, 170, 192, 194, 221, 356, 576, 583, 588, 617, 648, 665, 799, 893, 897, 938, 941, 961, 966, 983], "declar": [109, 110, 193, 194, 206, 211, 332, 348, 363, 372, 377, 379, 385, 386, 389, 392, 393, 396, 399, 400, 401, 405, 407, 409, 414, 415, 420, 540, 550, 610, 617, 626, 627, 637, 648, 657, 673, 675, 695, 716, 718, 719, 872, 892, 896, 898, 899, 925, 1091, 1107], "promis": [109, 110, 135, 237, 238, 240, 249, 291, 343, 401, 459, 527, 539, 548, 617, 663, 665, 666, 669, 670, 707, 708, 718, 719, 937, 989, 1118], "caller": [109, 110, 135, 211, 343, 345, 381, 387, 411, 413, 550, 617, 629, 646, 695, 697, 702, 705, 758, 769, 909, 913, 964, 1043], "uniniti": [109, 110, 404, 530, 537, 539, 540, 541, 544, 617, 721], "guarante": [109, 110, 133, 171, 202, 221, 395, 440, 617, 730, 737, 871, 872, 925, 926, 934, 961], "contigu": [109, 110, 408, 571, 588, 617, 752, 902, 1085], "vec": [109, 110, 537, 539, 546, 553, 554, 555, 556, 557, 617], "ss2023": 111, "ws2023": 111, "firstnam": [112, 113, 166, 192, 205, 213, 215, 218, 221, 225, 228, 231, 233, 234, 243, 246, 253, 267, 273, 278, 285, 296, 301, 437, 438, 466, 472, 481, 482, 495, 550, 596, 622, 626, 628, 630, 647, 793, 794, 830, 831, 833, 835, 838, 964, 977, 978, 980, 981, 982, 984, 985, 993, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1072, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "lastnam": [112, 113, 166, 195, 205, 211, 213, 215, 218, 221, 225, 228, 231, 233, 234, 246, 253, 267, 273, 278, 285, 296, 301, 437, 438, 466, 472, 481, 482, 495, 550, 596, 620, 622, 626, 629, 632, 647, 719, 793, 794, 830, 831, 833, 835, 838, 964, 977, 978, 980, 981, 982, 984, 985, 993, 1053, 1054, 1055, 1056, 1059, 1060, 1061, 1072, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "bouncem": [112, 113, 494, 495, 793, 794], "procf": [112, 173, 175, 249, 719, 804, 862, 903, 920, 1122, 1129], "umask": [112, 239, 248, 249, 269, 270, 310, 315, 719, 796, 821, 845, 862, 896, 908], "diff": [112, 189, 208, 537, 539, 983, 1124], "raspi": [112, 129, 263, 310, 316, 719, 743, 766, 767, 768, 770, 775, 781, 784, 787, 862, 864, 865, 866, 867, 870, 871, 872, 954, 955], "spirit": [112, 371], "readm": [112, 117, 152, 258, 260, 870, 871], "modular": [112, 165, 170, 172, 200, 219, 251, 312, 313, 343, 420, 940, 967], "plc": 112, "sallok": 112, "constantsensor_nopoli": [112, 113, 483, 489, 535, 719], "randomsensor_nopoli": [112, 113, 483, 535, 719], "ece21": 112, "labexam": 112, "hysteresis_nopoli": [112, 113, 483, 484, 535, 719], "upload": [112, 139, 826, 1019, 1092], "j": [112, 130, 138, 144, 181, 196, 198, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 267, 273, 285, 357, 360, 377, 401, 408, 457, 550, 639, 650, 698, 776, 792, 948, 952, 968, 1077, 1083], "bz2": [112, 134, 413, 766, 788, 791, 961], "influenc": [112, 941, 1118], "felber": 112, "vscode": [112, 163, 316, 330, 848], "folder": [112, 139], "comprehend": [112, 219, 356, 362, 937], "workspacefold": 112, "suppli": [112, 135, 173, 495, 497, 541, 725, 766, 782, 801, 863, 867, 870, 872, 887, 896, 1025], "cpprefer": [112, 575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 596, 615], "averagingsensor_nopoli": [112, 113, 483, 535, 719], "toolcas": [112, 258, 260, 652], "mocksensor_nopoli": [112, 113, 483, 484, 485, 486, 535, 719], "specifi": [112, 133, 150, 221, 233, 267, 351, 419, 428, 481, 484, 489, 492, 541, 621, 635, 650, 674, 685, 766, 826, 883, 896, 900, 926, 938, 991, 1006, 1014, 1018, 1035, 1054, 1056, 1085, 1087, 1093], "hint": [112, 148, 221, 233, 262, 334, 437, 497, 507, 511, 622, 793, 794, 806, 875, 924], "target_link_librari": [112, 161, 423, 425, 426, 427, 428, 432, 478, 514, 517, 523, 529, 532, 936, 941, 942, 1104, 1107, 1109], "inter": [112, 133, 151, 157, 925, 1122, 1129, 1132, 1134], "likewis": [112, 208, 524, 555, 792, 811, 882, 898, 948, 1069, 1107], "ledstripedisplay_nopoli": [112, 113, 483, 535, 719], "avg": [113, 221, 400, 439, 456, 467, 486, 493], "random": [113, 151, 153, 169, 181, 193, 205, 206, 209, 213, 215, 218, 221, 226, 228, 231, 253, 262, 305, 310, 353, 440, 442, 447, 456, 482, 493, 503, 504, 505, 506, 508, 509, 510, 540, 693, 797, 872, 883, 902, 930, 964, 976, 999, 1071, 1080, 1091], "hysteresi": [113, 319, 485], "stdout": [113, 152, 185, 189, 193, 202, 208, 218, 221, 231, 239, 246, 248, 249, 269, 270, 284, 295, 303, 305, 310, 314, 316, 606, 719, 790, 792, 796, 807, 808, 851, 854, 857, 862, 892, 937, 964, 1014, 1016, 1021, 1026, 1030, 1033, 1048, 1080, 1089, 1124], "logger": [262, 280, 284, 287, 699], "sink": [113, 261, 262, 277, 280, 283, 287], "lifetim": [113, 134, 192, 194, 211, 223, 348, 363, 372, 379, 385, 389, 390, 392, 396, 405, 409, 414, 415, 449, 542, 625, 637, 648, 675, 716, 718, 719, 959], "averagingsensor": [113, 439, 467], "overrid": [113, 129, 193, 206, 221, 236, 436, 442, 444, 449, 464, 466, 467, 468, 470, 471, 473, 495, 609, 610, 674, 675, 718, 719, 961, 976, 1091, 1110], "collabor": [140, 150, 157, 162, 169, 242], "necessarili": [284, 383, 413, 570, 717, 752, 766, 803, 883, 981, 1100, 1107], "checkout": [115, 125, 136, 148, 162, 739, 766, 767, 1130], "dir": [115, 166, 185, 193, 206, 215, 218, 225, 243, 246, 266, 267, 285, 295, 303, 384, 419, 420, 426, 431, 811, 941, 942, 954, 977, 1091, 1093, 1100], "wo": [115, 141, 151, 152, 160, 166, 168, 328, 1115, 1116, 1134], "sinc": [115, 144, 150, 195, 201, 232, 306, 407, 410, 539, 547, 548, 578, 591, 634, 635, 663, 684, 689, 695, 710, 717, 766, 870, 883, 890, 896, 899, 911, 926, 933, 994, 1119], "jf": [115, 126, 140, 177, 178, 236, 253, 310, 315, 329, 459, 473, 741, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1123, 1128], "aon": 115, "client": [115, 138, 140, 151, 196, 200, 228, 242, 417, 445, 446, 459, 698, 699, 866, 879, 881, 889, 934, 1076, 1093], "biz": 115, "svn": [115, 129, 149, 195, 328, 329], "recommend": [115, 144, 165, 173, 185, 218, 407, 560, 591, 766, 826, 871, 1019, 1073, 1081], "lokalen": 115, "fetch": [115, 134, 148, 766, 909, 937], "myremot": 115, "orig": [115, 136, 183], "stia": 115, "improv": [116, 407, 410, 422, 678, 693, 717, 959], "stack": [116, 154, 155, 156, 163, 177, 178, 196, 202, 205, 208, 218, 221, 228, 231, 246, 253, 263, 267, 401, 407, 457, 541, 572, 692, 799, 803, 871, 896, 908, 1128], "hang": [116, 176, 537, 769, 792], "seo": [116, 778], "blog": [116, 129, 133, 136, 143, 148, 697], "i2": [116, 118, 123, 228, 263, 719], "audio": [116, 121, 135, 140, 719, 1122], "kontron": [116, 125, 719], "smarc": [116, 125, 719], "proper": [117, 133, 161, 393, 741, 766, 898, 983], "manifest": [117, 952, 1101], "cfg": [117, 125], "author_email": 117, "classifi": [117, 1019, 1066], "tox": 117, "ini": [117, 138, 152, 318, 321, 1098], "travi": 117, "yml": 117, "upgrad": [117, 121, 122, 152, 719, 1093, 1100], "zip": [117, 125, 129, 193, 213, 219, 233, 246, 826, 832, 848], "zipfil": [117, 193], "99": [117, 143, 152, 166, 176, 183, 189, 192, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315, 411, 927, 1003, 1038, 1068], "999": [117, 205, 208, 221, 228, 231, 246, 253, 263, 267], "whl": [117, 129, 1019, 1093], "uninstal": [117, 425, 1093, 1098], "pypa": 117, "sampleproject": 117, "devicetre": [118, 871], "connect": [118, 133, 140, 153, 173, 185, 206, 249, 278, 307, 315, 316, 391, 709, 797, 859, 863, 864, 871, 872, 881, 886, 892, 906, 1073, 1075, 1080, 1093, 1121, 1133, 1135], "signal": [118, 129, 130, 158, 260, 328, 411, 709, 719, 737, 758, 803, 862, 863, 871, 903, 908, 916, 924, 925, 930, 934, 1124, 1131, 1132, 1135], "audio_mck": 118, "i2s0_ck": 118, "i2s0_lrck": 118, "i2s0_sdout": 118, "alsa": [118, 136], "tlv320dac3203irg": 118, "tlv320dac3203": 118, "drive": [118, 251, 397, 485, 871, 892, 1071], "suggest": [118, 132, 133, 135, 137, 139, 140, 148, 157, 165, 172, 173, 174, 175, 219, 238, 240, 258, 260, 371, 988, 1016, 1098], "tlv320aic32x4": 118, "compat": [118, 138, 154, 257, 546, 636, 652, 717, 722, 741, 943, 989, 1012, 1077, 1093, 1094], "tlv320aic31xxsw": 118, "tlv320aic31xx": 118, "wget": [119, 138, 140, 144, 263, 952, 954], "cdimag": 119, "amd64": [119, 185, 307, 351], "iso": [119, 193, 211, 212, 228, 231, 251, 273, 285, 331, 419, 536, 552, 790], "netinst": 119, "img": [119, 154, 156, 406, 766, 870], "qcow2": 119, "virtualdebian": 119, "30g": [119, 140], "kvm": [119, 136], "hda": 119, "cdrom": 119, "2048": [119, 143, 208], "nic": 119, "sic": [119, 144], "box": [119, 123, 165, 863, 870, 988], "order": [120, 126, 132, 138, 139, 143, 144, 153, 165, 166, 169, 171, 202, 208, 213, 219, 223, 225, 228, 258, 275, 336, 362, 373, 395, 407, 422, 437, 456, 511, 513, 520, 522, 585, 631, 717, 721, 737, 750, 766, 855, 863, 870, 872, 888, 927, 952, 968, 988, 1036, 1046, 1120], "deliveri": [120, 124, 133, 936, 939], "outcom": [121, 169, 174, 260, 766, 825, 826, 948, 1020], "dirti": [121, 122, 135, 149, 377, 442, 719], "forget": [121, 126, 133, 134, 135, 209, 342, 345, 390, 419, 1073, 1079, 1099, 1118], "graphic": [121, 412, 801, 802, 871], "plug": [121, 134, 136, 441], "monitor": [121, 136, 150], "4k": [121, 135, 924, 933], "dual": [121, 123], "gnome": [121, 133, 138, 205, 221, 228, 231, 246, 253, 263, 267, 413, 766, 801, 857, 925], "applianc": [121, 135, 413], "automat": [121, 135, 137, 139, 140, 148, 183, 185, 189, 195, 202, 208, 218, 221, 225, 258, 260, 347, 356, 383, 400, 403, 407, 419, 448, 449, 538, 541, 606, 610, 648, 677, 722, 737, 766, 870, 872, 899, 961, 1014, 1021, 1026], "x11": 121, "wayland": [121, 138], "benchmark": 121, "glxgear": 121, "su": [121, 954], "pect": 121, "cluster_project_xxx": [122, 719], "project_xxx_hardware_bringup": [122, 719], "bringup": [122, 123, 719], "project_xxx_dirty_upgrad": [122, 719], "project_xxx_wait_hardwar": [122, 719], "project_xxx_debian_config": [122, 719], "project_xxx_yocto_kernel": [122, 719], "bsp": [122, 719], "project_xxx_audio_chip": [122, 719], "chip": [122, 151, 205, 719, 863, 867, 870, 888, 890, 924, 1021], "project_xxx_debian_kernel_packag": [122, 719], "finish": [122, 165, 184, 702, 719, 776, 975], "shot": [123, 140, 371, 635, 709, 717], "dac": 123, "massacr": [123, 152, 211, 310, 371, 377, 403, 427, 635, 971], "distro": [123, 425, 995, 1107], "bootload": [123, 132, 143, 413, 802, 870, 872], "oldconfig": [123, 134, 739, 746, 766, 767], "qemu": [123, 205, 221, 228, 231, 246, 253, 263, 267], "grub": [123, 143], "stabl": [123, 140, 144, 417, 744, 766, 805, 924, 956, 958, 1019, 1094], "yoctoproject": 125, "v5": [125, 136], "bsp_smarc": 125, "sxal4_smarc": 125, "sxal_r1": 125, "0_combin": 125, "sxal4_5": 125, "sxal4": 125, "inc": [125, 136, 257, 394, 431, 432, 704, 911, 974], "filesextrapaths_prepend": 125, "thisdir": 125, "linux_vers": 125, "linux_version_extens": 125, "linux_kernel_typ": 125, "kbranch": 125, "kmeta": 125, "lic_files_chksum": 125, "md5": 125, "bbea815ee2795b2f4230826c0c6b8814": 125, "srcrev_machine_pn": 125, "3604bc07c035939266d78d65084c6cd54ffc6d56": 125, "srcrev_meta_pn": 125, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 125, "src_uri": 125, "bareclon": 125, "cach": [125, 129, 134, 260, 263, 393, 407, 412, 413, 571, 588, 848, 925, 1093, 1100, 1116], "destsuffix": 125, "scc": 125, "pv": 125, "srcpv": 125, "include_patch": 125, "patch": [125, 144, 145, 926, 954, 1113], "compatible_machin": 125, "therebi": [126, 165, 643, 857, 937, 983, 1021], "made": [126, 127, 132, 133, 134, 136, 139, 140, 144, 148, 185, 200, 225, 249, 284, 310, 342, 380, 381, 383, 386, 417, 437, 441, 457, 463, 663, 750, 766, 797, 798, 803, 863, 870, 896, 902, 907, 925, 943, 968, 975, 985, 1021, 1069], "special": [126, 133, 180, 213, 215, 221, 225, 249, 332, 384, 445, 456, 459, 462, 463, 507, 530, 535, 648, 650, 704, 715, 792, 803, 808, 864, 886, 892, 914, 938, 957, 962, 981, 983, 991, 1000, 1002, 1006, 1066, 1071, 1103, 1123, 1124], "node": [126, 138, 143, 153, 391, 411, 428, 591, 722, 725, 729, 735, 744, 956, 1080, 1098], "simplifi": 126, "fine": [126, 135, 140, 169, 422, 423, 538, 650, 652, 746, 776, 883, 887, 955, 972, 984, 993, 999, 1014, 1077], "grain": [126, 140, 419, 422, 776, 984, 999], "surround": [126, 636, 677, 689], "cut": [126, 154, 172, 185, 225, 239, 248, 269, 270, 356, 391, 719, 756, 796, 810, 856, 859, 862, 872], "linewis": 126, "wherev": [126, 335], "obs studio": 127, "video edit": 127, "screen record": 127, "These": [127, 135, 137, 138, 202, 208, 218, 221, 422, 435, 739, 766, 870, 942], "offici": [127, 169, 170, 173, 174, 175, 180, 535, 954, 1103], "jonathan": [127, 311, 312, 1113], "himself": [127, 872], "paus": [127, 135, 924, 937], "bit": [127, 132, 133, 135, 138, 140, 143, 144, 165, 166, 169, 176, 195, 206, 208, 209, 215, 239, 242, 248, 249, 252, 255, 269, 270, 305, 310, 315, 321, 333, 339, 345, 351, 356, 363, 372, 379, 380, 385, 389, 392, 395, 396, 405, 409, 414, 415, 478, 492, 553, 637, 672, 675, 685, 695, 716, 718, 719, 762, 766, 785, 796, 797, 821, 823, 825, 862, 863, 864, 866, 871, 873, 896, 924, 941, 950, 960, 1000, 1064, 1077, 1113, 1118], "meanwhil": 127, "freez": [127, 1093, 1101], "frame": [127, 138, 150, 172, 202, 208, 218, 221, 251, 257, 390, 403, 407, 457, 648, 864, 865, 1082], "photo": 127, "length": [127, 189, 192, 202, 208, 218, 221, 250, 257, 267, 419, 491, 542, 554, 615, 737, 750, 762, 864, 866, 892, 902, 934, 1069, 1077, 1081, 1088], "grab": [127, 863, 871], "neil": 128, "patel": 128, "insight": [128, 132, 422, 952, 1092], "consol": [128, 185, 801, 804, 859, 1043, 1124], "crawlabl": 128, "dn": [128, 137, 140, 205, 221, 228, 231, 246, 253, 263, 267, 1135], "domain": [128, 129, 139, 140, 145, 403, 417, 429, 925, 1063, 1066, 1133, 1135], "ipc": [128, 129, 130, 133, 327, 329, 717, 719, 862, 903, 931, 1133], "queue": [128, 129, 134, 143, 144, 151, 157, 177, 178, 180, 209, 237, 238, 240, 249, 261, 262, 283, 284, 287, 291, 459, 708, 718, 719, 760, 768, 786, 799, 803, 862, 903, 913, 917, 1128, 1132, 1133, 1134], "pydbu": 129, "openh": [129, 130, 151, 192], "traceback": [129, 155, 202, 208, 218, 221, 231, 251, 253, 267, 961, 962, 963, 968, 976, 977, 983, 984, 1005, 1006, 1010, 1012, 1015, 1016, 1077, 1085, 1086, 1099], "recent": [129, 132, 135, 140, 155, 163, 202, 208, 218, 221, 231, 251, 253, 267, 331, 766, 845, 961, 962, 963, 968, 976, 977, 983, 984, 1005, 1006, 1010, 1012, 1015, 1016, 1077, 1085, 1086, 1099], "oh_test": 129, "easysuit": 129, "oh_dbus_easysuit": 129, "easysuite_error": 129, "error_suit": 129, "dbusheatingerror": 129, "modulenotfounderror": [129, 246, 251, 963], "research": [129, 132, 133, 246, 1070], "pygobject": 129, "714": [129, 208], "kb": [129, 135, 1100], "venv": [129, 166, 192, 202, 208, 218, 219, 221, 233, 263, 317, 318, 848, 1018, 1051, 1064, 1079, 1085, 1086, 1092, 1098, 1100, 1101], "standalon": [129, 395, 648, 937, 1105], "ss_9wmug": 129, "__env_pip__": 129, "ignor": [129, 150, 162, 221, 267, 321, 357, 377, 407, 429, 437, 635, 650, 663, 685, 724, 808, 871, 896, 938, 961, 1093], "9lrqmi4l": 129, "overlai": [129, 766, 870, 871], "locat": [129, 130, 134, 139, 144, 165, 202, 208, 218, 221, 225, 275, 310, 328, 380, 393, 401, 407, 435, 457, 550, 570, 646, 694, 741, 766, 870, 871, 872, 892, 910, 934, 941, 961, 1068, 1085, 1120], "pycairo": 129, "cwd": [129, 492, 717, 792, 803, 829, 848, 850, 854, 942], "821": [129, 208], "py2": 129, "344": [129, 208, 221, 253, 267, 285], "517": [129, 208, 253], "tmpabab356k_in_process": 129, "build_wheel": 129, "tmpt1yod7mc": 129, "o4u45fjc": 129, "pycairo_33865a19ad6b4a719885f07926efe16d": 129, "bdist_wheel": [129, 1019], "build_pi": 129, "x86_64": [129, 136, 138, 185, 192, 307, 330, 356, 494, 555, 739, 744, 943, 952], "cairo": 129, "pyi": 129, "build_ext": 129, "pkg": 129, "perhap": [129, 225, 735, 1072], "pkg_config_path": 129, "gobject": 129, "introspect": [129, 924], "cp39": 129, "linux_x86_64": 129, "lib64": [129, 161, 166, 192, 202, 208, 218, 221, 225, 413, 423, 425, 430, 940, 943, 957, 964, 1085, 1086, 1093, 1107], "_vendor": 129, "pep517": 129, "in_process": 129, "_in_process": 129, "tmpf2wjv23h": 129, "4rtfumdz": 129, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 129, "pygtkcompat": 129, "generictreemodel": 129, "_signalhelp": 129, "_propertyhelp": 129, "_ossighelp": 129, "_option": 129, "_gtktemplat": 129, "_error": [129, 466], "_constant": 129, "keysym": 129, "pango": 129, "gio": 129, "gdkpixbuf": 129, "gdk": 129, "glib": 129, "gimarshallingtest": 129, "tmp56g_ixbz": 129, "bvay4iv4": 129, "pygobject_6777f13e15934fb2b13139399b143557": 129, "todo": [129, 174, 209, 237, 238, 323, 324, 493, 635, 720], "summari": [129, 170, 442, 545, 694, 1098], "explan": [132, 135, 161, 165, 172, 195, 226, 286, 310, 411, 432, 513, 766, 797, 863, 871, 898, 928, 933, 1067, 1070, 1100], "pseudo": [135, 153], "gmunden": [141, 328], "beliv": [], "style": [113, 129, 133, 138, 202, 208, 211, 218, 221, 260, 403, 418, 419, 513, 538, 539, 544, 578, 612, 615, 626, 635, 640, 671, 687, 712, 734, 783, 906, 992, 1033, 1058, 1069], "c1": [129, 143, 440, 554, 639], "w3school": 129, "howto": [129, 130, 737], "howto_css_image_transpar": 129, "asp": 129, "titelseit": 129, "mitt": 129, "howto_js_read_mor": 129, "subdir": [129, 717, 961], "gegen": [129, 1113], "clutter": [129, 162], "404": [129, 139, 208, 215, 253, 267, 285], "prio": [129, 171, 926, 927, 933], "beagleboard": [129, 134, 145], "repair": [129, 145, 205], "nand": [129, 145], "40w": [129, 145], "fedora": [129, 138, 144, 145, 148, 162, 249, 507, 719, 723, 726, 728, 731, 733, 736, 743, 745, 746, 747, 751, 757, 763, 767, 770, 775, 781, 784, 787, 822, 826, 862, 865, 942, 943, 950, 951, 952, 955, 1080, 1105], "suck": [129, 130, 145], "disk": [129, 132, 133, 136, 140, 145, 406, 802, 803, 823, 852, 887, 888, 957, 1014, 1113], "contact": [129, 1120], "ssl": [129, 140, 1093], "certif": [129, 140, 143, 190, 219, 1091, 1093], "070": [129, 635], "fortgeschritten": [129, 329, 1115], "700": [129, 208, 588, 696, 879], "lf": [129, 192, 473, 1014], "descr": [129, 213], "050": [129, 635, 936, 937], "080": [129, 615, 635], "020": [129, 208, 249, 615, 635, 932, 933, 936, 937], "060": [129, 130, 169, 318, 635], "_hidden": 129, "010": [129, 635, 825, 929, 930, 932, 933, 936, 937], "190": [129, 166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "propos": [129, 403, 481], "030": [129, 635, 645, 695, 932, 933, 936, 937], "040": [129, 635, 932, 933, 936, 937], "central": [130, 162, 195, 284, 287, 331, 375, 435, 717, 957, 1002, 1014, 1121], "rstjinja": 130, "misc": [129, 130, 152, 153, 513, 735, 779, 1117], "105": [130, 152, 166, 176, 181, 183, 189, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 928], "110": [130, 137, 152, 166, 176, 183, 189, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305, 475, 476, 635, 825, 932, 933], "cxx_class_templ": [130, 535, 719], "cxx_dynamic_memori": [130, 535, 719], "cxx_global_initi": [130, 535, 719], "cxx_inheritance_virtu": [130, 535, 719], "cxx_ownership_raii": [130, 535, 719], "cxx_stl_container_intro": [130, 535, 719], "cxx_templates_vs_interfac": [130, 535, 719], "maj": [130, 723], "min": [130, 246, 723, 1069], "cdev": [130, 722, 723, 725, 729, 730, 735], "fop": [130, 723, 730], "devtmpf": [130, 722, 723, 768], "dynam": [130, 160, 168, 169, 202, 208, 218, 219, 221, 264, 328, 392, 396, 405, 409, 414, 415, 425, 456, 493, 524, 533, 535, 542, 607, 609, 612, 613, 632, 637, 646, 675, 699, 716, 718, 719, 723, 728, 733, 736, 738, 743, 747, 757, 761, 763, 768, 770, 775, 781, 784, 787, 792, 803, 862, 911, 913, 922, 940, 941, 980, 994, 1015, 1064, 1119, 1123], "sysprog_ev": 130, "sysprog_ipc": 130, "sysprog_sign": 130, "unittest_gtest_bas": [130, 719, 1103], "unittest_gtest_fixtur": [130, 719, 1103], "brows": [130, 132, 148, 805, 871], "blender": 130, "corda": 130, "figclass": 130, "homebrain": [130, 251, 263, 848, 849], "literalinclud": 130, "within": [130, 135, 211, 221, 267, 328, 484, 485, 489, 494, 539, 610, 673, 730, 863, 975, 992, 1004, 1088], "045": [130, 249], "tex": 130, "055": 130, "056": 130, "910": [130, 208, 848], "glt": 130, "virtmem": 130, "fart": 130, "ungern": 130, "lost": [130, 140, 205, 211, 404, 513, 635, 694, 879, 913, 916, 933, 975, 1098, 1099, 1105], "he": [130, 134, 148, 156, 165, 169, 172, 185, 190, 193, 195, 216, 219, 242, 261, 262, 266, 283, 648, 650, 685, 688, 881, 914, 927, 938, 980, 1008, 1064, 1090], "subscrib": [130, 209, 221], "friend": [132, 133, 180, 201, 237, 238, 240, 249, 260, 291, 413, 476, 553, 708, 709, 718, 719, 737, 758, 863, 1107], "alia": [132, 137, 185, 211, 389, 392, 396, 405, 409, 414, 415, 423, 637, 675, 716, 718, 719, 826, 827, 954], "rm": [132, 134, 138, 139, 173, 175, 310, 315, 873, 883, 1100], "rf": [132, 134, 826, 836, 1100], "creativ": [132, 210], "variat": [132, 697, 771, 808], "thereof": [132, 249, 257, 440, 557, 980], "happili": [132, 133, 211, 403, 552], "stage3": 132, "decad": [132, 140, 157, 766, 870, 872, 883, 962, 1121], "busybox": [132, 133], "initramf": [132, 791], "resid": [132, 135], "flash": [132, 135, 140, 413, 804, 863, 924], "correct": [132, 140, 144, 172, 192, 194, 205, 310, 356, 393, 397, 398, 405, 408, 409, 414, 415, 417, 445, 513, 545, 610, 612, 613, 645, 690, 693, 701, 719, 809, 813, 814, 838, 870, 871, 872, 925, 967, 975, 1069, 1093], "eras": [132, 472, 530, 591, 696, 713, 823], "hit": [132, 134, 135, 154, 157, 195, 717, 826, 855, 858, 1093], "sole": 132, "liter": [132, 155, 171, 176, 183, 193, 201, 202, 206, 213, 218, 221, 225, 228, 237, 238, 246, 253, 267, 285, 291, 302, 306, 310, 337, 345, 352, 401, 456, 471, 491, 635, 648, 766, 938, 995, 1008, 1012, 1091], "told": [132, 135, 423, 462, 863], "reboot": [132, 134, 151, 766, 827, 870, 871, 872], "fatal": [132, 160, 421, 431, 766, 1106], "saw": [132, 135, 165, 194, 321, 358, 539, 896, 898], "termin": [113, 132, 134, 138, 152, 163, 185, 231, 233, 249, 252, 255, 258, 260, 262, 332, 335, 339, 342, 345, 352, 364, 370, 393, 413, 419, 431, 435, 461, 462, 494, 513, 542, 663, 669, 696, 702, 782, 801, 804, 808, 809, 810, 826, 848, 858, 859, 892, 910, 914, 919, 924, 936, 937, 938, 993, 995, 999, 1014, 1026, 1043, 1071, 1077, 1080, 1129], "115200": 132, "8n1": 132, "remaind": [132, 133, 136, 138, 161, 165, 249, 744, 766, 863, 871, 942], "recov": [132, 152], "fauxpa": 132, "annot": [132, 193, 242, 282, 412, 536, 1064], "beagl": 132, "omap": 132, "rom": 132, "stage": [132, 148, 194, 1071], "processor": [132, 133, 192, 193, 206, 351, 395, 588, 699, 766, 771, 908, 925, 940, 1091], "sram": 132, "dram": 132, "latter": [132, 135, 924, 964, 1004, 1071], "abil": [132, 635], "press": [132, 746, 783, 826, 863], "wrote": [132, 135, 318, 1118], "board": [132, 134, 766, 870], "ones": [132, 148, 155, 157, 221, 259, 267, 339, 407, 871, 872, 997, 1081], "revis": [132, 136, 139, 236, 536, 634, 1118], "slightli": [132, 144, 165, 194, 211, 212, 513, 992], "season": 132, "c4": [132, 143], "valuabl": [132, 411, 793, 794, 956, 958, 964], "c3": [132, 136, 143], "angstrom": 132, "mlo": 132, "ift": 132, "fdisk": [132, 1113], "obvoiusli": 132, "fat32": [132, 766], "fat16": 132, "partit": [132, 133, 134, 221, 267, 766], "mount": [132, 134, 249, 316, 722, 766, 797, 906, 933, 934, 943, 952, 954], "sector": [132, 205, 1021], "intend": [132, 138, 139, 140, 150, 185, 202, 208, 218, 221, 422, 739, 871, 898, 899, 1019], "slot": [132, 902, 983], "partli": [132, 134, 399], "meaning": [132, 140, 748], "hold": [132, 134, 153, 169, 171, 172, 192, 219, 333, 345, 365, 437, 567, 622, 629, 680, 685, 699, 707, 730, 764, 768, 769, 863, 870, 926, 964, 977, 999, 1047, 1069], "scr": 132, "omap3": 132, "mmc1": 132, "arch": [132, 136, 746, 766, 767, 870], "mach": [132, 194, 199, 215], "omap2": 132, "omap3beagl": 132, "Near": 132, "notic": [132, 133, 135, 148, 202, 208, 218, 221, 403, 422, 423, 480, 715, 806, 910, 912, 972, 1086], "offset": [132, 737, 895, 957], "128k": 132, "0x80000": 132, "byte": [132, 135, 148, 150, 152, 202, 208, 218, 221, 228, 231, 246, 267, 273, 295, 310, 333, 341, 351, 352, 383, 386, 395, 398, 404, 408, 442, 537, 542, 545, 550, 557, 570, 694, 780, 797, 803, 826, 857, 864, 870, 887, 888, 889, 892, 894, 896, 897, 898, 899, 922, 925, 930, 933, 937, 989, 995, 1000, 1014, 1077], "reli": [132, 165, 684, 776, 995], "ecc": [132, 136], "nandecc": 132, "hw": 132, "80000": 132, "0x0": [132, 870], "0x60000": 132, "unlik": [132, 185, 236, 699, 706, 863, 1003, 1082, 1123], "intermedi": [132, 153, 440, 940, 989], "nevertheless": [132, 133, 140, 252, 255, 766], "0x20000": 132, "fatload": 132, "80200000": 132, "20392": 132, "131072": [132, 724], "40000": 132, "0x40000": 132, "60000": 132, "incarn": [132, 140, 377, 683], "choic": [132, 133, 134, 157, 193, 206, 225, 407, 417, 427, 492, 540, 609, 694, 870, 924, 952, 1080, 1091], "finger": [132, 143, 407, 805, 863], "sw": [132, 490], "0x1e0000": 132, "1e0000": 132, "0x240000": 132, "275928": 132, "1966080": 132, "prompt": [132, 140, 143, 153, 185, 196, 224, 233, 798, 826, 828, 871, 879, 989, 990, 1026, 1030, 1043, 1049, 1100], "280000": 132, "400000": [132, 871, 1069], "month": [133, 195, 205, 253, 257, 352], "met": [133, 399, 872], "microcontrol": [133, 368, 863, 871, 924], "clue": 133, "minim": [133, 135, 144, 153, 401, 407, 560, 848, 952, 963], "vxwork": 133, "ce": [133, 143, 954], "quit": [133, 135, 138, 260, 378, 393, 395, 613, 628, 767, 826, 827, 858, 863, 871, 914, 937, 952], "blob": [133, 249, 260, 330, 513, 766], "presenc": [133, 135, 429, 1123], "disabl": [133, 136, 138, 144, 202, 208, 218, 221, 378, 758, 764, 769, 771, 926, 1093, 1113], "probabl": [133, 139, 165, 225, 255, 302, 428, 433, 538, 643, 766, 778, 826, 872, 924, 1000, 1014, 1077, 1080], "term": [133, 135, 157, 185, 225, 258, 260, 307, 407, 550, 553, 617, 695, 698, 799, 872, 891, 925, 937, 1069, 1105], "sooner": [133, 148, 403, 769], "chose": [133, 144, 211, 629, 850, 883, 952], "opinion": [133, 144, 165, 219, 717, 805, 972], "stori": [133, 134, 135, 139, 140, 144, 161, 162, 194, 257, 388, 521, 539, 553, 741, 744, 767, 805, 866, 883], "unless": [133, 215, 221, 225, 267, 607, 640, 792, 848, 909, 995, 1014, 1085], "hire": 133, "cheap": [133, 135, 420, 550, 643, 648, 684, 685, 771, 1118], "misl": 133, "posix": [133, 135, 158, 701, 708, 710, 718, 719, 803, 862, 892, 903, 909, 913, 915, 923, 931, 1014, 1132, 1133], "tell": [133, 134, 135, 138, 139, 140, 148, 162, 209, 400, 571, 792, 872, 940], "pitfal": [133, 217, 237, 238, 240, 291, 310, 571, 650, 675, 676, 677, 695, 718, 719, 863, 1118], "seen": [133, 135, 140, 153, 166, 194, 343, 362, 400, 435, 445, 737, 762, 791, 911, 1071, 1075, 1110], "didn": [133, 134, 135, 144, 165, 169, 185, 195, 219, 766, 845, 897, 1014, 1016, 1064, 1068], "rtoss": 133, "commonli": [133, 202, 225, 252, 255, 449, 710, 717, 752, 786, 828, 892, 940, 1089], "tear": [133, 238, 442, 491, 492, 493, 494, 555, 694, 735, 940, 1105], "notif": [133, 138, 157, 707, 867, 938], "dread": 133, "segment": [133, 135, 375, 484, 550, 673, 693, 924, 934], "fault": [133, 135, 323, 324, 375, 550, 693, 924], "arriv": [133, 758, 783, 922, 937], "handler": [133, 202, 208, 218, 221, 260, 267, 280, 411, 746, 748, 776, 908, 924, 936, 939], "pai": [133, 257, 406, 429, 797], "attent": [133, 189, 205, 213, 341, 362, 364, 393, 412, 422, 572, 577, 646, 677, 680, 758, 926, 961, 1087, 1110], "safe": [133, 202, 208, 209, 218, 221, 231, 403, 643, 685, 687, 695, 709, 879, 884, 908, 911, 916, 939], "pthread_": 133, "defer": [133, 417, 764, 786], "trick": [133, 190, 200, 203, 206, 230, 242, 266, 272, 378, 1064], "asynchron": [133, 202, 208, 218, 221, 296, 887, 904, 907, 937, 938], "sigwait": [133, 937], "sigwaitinfo": 133, "sigtimedwait": 133, "caught": [133, 202, 208, 218, 221, 410, 560], "synchron": [133, 205, 211, 221, 228, 231, 246, 253, 261, 262, 263, 267, 283, 284, 287, 702, 708, 718, 719, 857, 862, 887, 903, 909, 910, 917, 923, 924, 934, 936, 939, 1123], "dedic": [113, 133, 134, 165, 170, 219, 249, 252, 255, 403, 419, 734, 804, 805, 870, 871, 872, 906, 908, 942, 960, 971, 1004, 1121], "signalfd": [133, 892, 930, 1132, 1133], "Its": [133, 135, 138, 491, 855, 925], "emb": 133, "among": [133, 157, 165, 202, 208, 218, 221, 400, 694, 811, 870, 892, 898, 922, 938, 988, 1072, 1073, 1098, 1121], "epol": [133, 906, 930, 934, 1133, 1135], "err": [133, 172, 192, 257, 494, 591, 730, 760, 762, 797, 864, 866, 870, 983, 1086], "naiv": [133, 153, 208, 211, 275, 395, 428, 437, 529, 531, 545, 612, 693, 715, 774, 908, 928, 939, 969, 970, 1071, 1076, 1110, 1120], "intra": 133, "oss": 133, "synchronis": [133, 908, 1134], "pthread_mutex_init": [133, 707, 911], "critical_sect": 133, "closest": [133, 643], "pendant": [133, 530, 725], "expir": [133, 776, 890, 922, 924, 938], "sometim": [133, 148, 225, 367, 383, 407, 544, 634, 797, 804, 897, 909, 954, 960, 991, 1098], "api": [133, 140, 157, 180, 194, 221, 321, 325, 719, 722, 729, 737, 744, 748, 760, 862, 903, 915, 923, 926, 934, 1019, 1075, 1094, 1122, 1123], "setitim": 133, "timer_cr": [133, 924], "drawback": [133, 377, 394, 399, 404, 448, 571, 879], "unfortun": [133, 134, 157, 194, 462, 863, 871, 1082], "straightforward": [133, 212, 657, 695, 734, 966, 983, 1001, 1069], "nanosleep": [133, 709, 924], "timerfd_cr": [133, 890, 892, 1132, 1133], "conjunct": 133, "emul": [133, 238, 240, 258, 395, 404, 410], "stupid": [133, 135, 192, 208, 211, 213, 352, 377, 383, 401, 407, 417, 643, 698, 783, 845, 887, 968, 1014], "screw": [133, 597], "otherwis": [133, 134, 219, 221, 225, 262, 267, 301, 356, 367, 393, 403, 553, 591, 648, 677, 684, 699, 705, 737, 750, 758, 766, 774, 793, 794, 879, 908, 913, 919, 934, 963, 992, 995, 1012, 1014, 1033, 1044, 1110], "millisecond": [133, 202, 208, 218, 221, 696, 710, 774, 871], "etern": 133, "nowadai": [133, 135, 137, 138, 194, 261, 262, 283, 333, 351, 741, 776, 801, 804, 892, 938, 1077], "imagin": [133, 135, 397, 402, 403, 435, 448, 766, 805, 822, 863, 872, 911, 938], "moder": [133, 140, 200], "tri": [133, 134, 135, 144, 148, 154, 165, 213, 321, 492, 622, 705, 717, 863, 872, 925, 1118], "achiev": [133, 192, 225, 613, 922, 975], "albeit": [133, 457, 683, 919, 1000, 1118], "lose": [133, 184, 195, 215, 218, 221, 231, 999], "wealth": 133, "socket": [133, 151, 172, 242, 717, 719, 799, 802, 862, 887, 891, 892, 903, 934, 938, 1093, 1132, 1133, 1135], "arbitrari": [133, 154, 221, 225, 337, 353, 371, 407, 422, 560, 587, 588, 640, 698, 710, 725, 867, 892, 896, 924, 964, 1000, 1014, 1042], "uart": [133, 399, 799], "mention": [133, 134, 161, 165, 169, 195, 219, 261, 262, 283, 284, 480, 494, 678, 778, 871, 959, 1064, 1080], "previous": [133, 202, 208, 218, 221, 225, 938, 1118], "regardless": [133, 378, 871], "surpris": [133, 135, 249, 401, 606, 959, 983], "anyon": [133, 527, 737], "alon": [133, 134, 135, 148, 258, 260, 407, 411, 652, 1004, 1071, 1123], "advantag": [133, 399, 550], "consid": [133, 135, 165, 169, 193, 202, 208, 218, 219, 221, 225, 249, 267, 371, 398, 399, 407, 459, 613, 826, 870, 925, 980, 988, 1064, 1092, 1093, 1120], "regularli": [133, 404], "buffer": [133, 221, 246, 261, 262, 267, 283, 287, 339, 468, 473, 648, 782, 810, 884, 887, 888, 889, 890, 898, 937, 1014], "ttys0": 133, "stream": [133, 138, 140, 180, 206, 221, 246, 536, 553, 810, 864, 922, 968, 1089, 1091, 1135], "eventfd": [133, 892, 930, 1132, 1133], "complic": [133, 134, 143, 172, 215, 225, 349, 368, 407, 432, 563, 646, 652, 672, 725, 762, 864, 872, 937, 940, 968, 1080, 1120, 1123], "infrastructur": [133, 412, 722, 934], "unregist": [133, 444], "callback": [133, 169, 202, 208, 218, 221, 319, 663, 776, 785, 1080], "comfort": [133, 185, 313, 687, 870, 1089], "excit": 133, "hundr": [133, 135, 140, 243, 246, 892], "panel": 133, "deal": [133, 209, 401, 547, 766, 872, 993, 1066, 1077, 1118, 1123], "touch": [133, 139, 165, 202, 208, 218, 221, 419, 811, 820, 825, 870, 893, 899, 1123], "stai": [133, 157, 169, 200, 937], "harder": [133, 699, 873], "buggi": [133, 545, 673, 685, 924], "examin": [133, 135, 403, 553, 694, 826, 919], "debugg": [133, 202, 208, 218, 219, 221, 440, 1116, 1131], "gdb": [133, 185, 328, 1116], "remain": [133, 134, 144, 153, 166, 213, 221, 267, 498, 499, 511, 540, 588, 594, 625, 631, 636, 698, 706, 748, 879, 927, 938, 940, 1039, 1042, 1043, 1046, 1054, 1056, 1072, 1107], "spidev": 133, "bluntli": 133, "whether": [133, 153, 221, 225, 246, 257, 267, 342, 406, 497, 542, 575, 717, 762, 871, 1043, 1049, 1093], "deadlin": 133, "howev": [133, 143, 162, 225, 436, 739, 741, 863, 906, 908], "sched_setschedul": [133, 150, 927], "pthread_attr_setschedparam": [133, 927], "runnabl": [133, 764, 925, 926, 927], "prioriti": [133, 150, 221, 758, 764, 766, 768, 803, 925, 926, 934, 1134], "anymor": [133, 139, 144, 157, 194, 211, 419, 423, 552, 646, 648, 657, 681, 694, 695, 699, 801, 870, 913, 924, 926, 957, 995, 997, 1086], "potenti": [133, 420, 550, 657, 705, 883, 963, 975, 1020], "harm": [133, 371, 399, 695, 697, 963], "polici": [133, 138, 150, 419, 435, 609, 613, 744, 925, 926, 1134], "sched_fifo": [133, 926, 927, 1113], "sched_rr": [133, 135, 927, 1113], "round": [133, 200, 205, 215, 225, 241, 246, 434, 441, 442, 444, 446, 455, 456, 469, 483, 535, 719, 927, 1134], "robin": [133, 200, 927, 1134], "manner": [133, 377, 766, 870], "troubl": 133, "trigger": [133, 321, 748, 752, 870, 983, 1073], "certain": [133, 165, 172, 398, 403, 461, 484, 485, 663, 685, 762, 797, 810, 913, 940, 988], "circumst": [133, 925], "deadlock": [133, 513, 705, 706, 758, 771, 911, 925, 926], "inspect": [133, 135, 202, 208, 218, 221, 239, 248, 259, 269, 284, 719, 796, 862, 883], "deploy": [133, 165, 169, 190, 276, 424, 430, 719, 741, 1064], "uclibc": 133, "minut": [133, 139, 140, 165, 169, 172, 209, 872, 1064, 1080], "investig": 133, "spend": [133, 140, 154, 165, 169, 190, 193, 216, 242, 266, 406, 1064], "todai": [134, 185, 193, 209, 242, 259, 275, 319, 345, 1064, 1120, 1123], "browser": [134, 140, 152, 163, 196], "significantli": [134, 937], "decreas": [134, 135, 395, 826, 928], "week": [134, 149, 397], "forth": [134, 408, 797, 870, 883, 995], "spare": 134, "volum": 134, "undertak": 134, "indirectli": [134, 694], "pocket": 134, "purchas": [134, 225], "corsair": 134, "120": [134, 152, 166, 176, 183, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 554, 635, 932, 933], "receiv": [134, 153, 208, 211, 249, 278, 343, 459, 550, 648, 725, 737, 758, 766, 826, 863, 866, 872, 879, 887, 892, 914, 922, 937, 938, 961, 964, 1014, 1045, 1060, 1077], "overhaul": 134, "reserv": [134, 140, 157, 169, 205, 221, 246, 267, 350, 572, 730, 762, 822, 927, 1021], "fresh": 134, "livecd": 134, "ssd": [134, 406, 888], "vanish": 134, "gone": [134, 155, 205, 663, 695, 746, 769, 827, 916], "nowher": [134, 273, 505], "depart": 134, "unusu": 134, "cope": 134, "bet": 134, "themselv": [134, 377, 417, 457], "aggress": 134, "harddisk": 134, "treatment": [134, 225, 826, 957], "proud": 134, "120g": 134, "fresher": 134, "plenti": [134, 136, 411], "4g": [134, 135], "shouldn": [134, 635, 766, 1012], "hibern": 134, "fstab": 134, "room": [134, 140, 169, 284, 437, 588, 760, 872, 1077, 1121], "swapon": 134, "sda1": 134, "swapoff": 134, "overal": 134, "mitig": [134, 760], "temporari": [134, 143, 160, 202, 208, 211, 218, 221, 261, 262, 283, 287, 422, 494, 495, 643, 647, 648, 663, 677, 685, 717, 810, 940, 966, 1047], "perfect": [134, 140, 148, 194, 242, 291, 331, 588, 644, 675, 698, 718, 719, 966, 1019, 1064, 1096, 1118], "portag": [134, 766, 855], "openoffic": 134, "tmpdir": [134, 259, 419, 494, 717, 961, 1059, 1061, 1098], "gcc": [134, 135, 161, 181, 183, 202, 208, 218, 221, 303, 330, 332, 356, 373, 377, 395, 398, 399, 401, 411, 412, 420, 422, 521, 704, 766, 767, 803, 823, 888, 889, 890, 896, 897, 898, 899, 908, 911, 941, 952, 954, 955, 956, 957, 958, 990, 1107, 1113], "500m": 134, "2g": 134, "6g": 134, "throwawai": 134, "1tb": 134, "sdc1": [134, 797], "mnt": [134, 797, 805, 934], "emerg": 134, "umount": 134, "runnung": 134, "logfil": [134, 172, 808, 859], "offend": [134, 136, 138, 148, 462, 924], "candid": [134, 153, 194, 407, 652, 672, 685, 963, 1035], "destin": [134, 358, 425, 530, 571, 646, 882, 889], "app": [134, 138, 924, 1076], "admin": [134, 140, 310, 877, 881], "cron": [134, 809, 993], "rc": [134, 863], "grep": [134, 138, 144, 173, 175, 185, 239, 248, 269, 270, 719, 785, 790, 796, 801, 803, 808, 810, 822, 853, 856, 859, 862, 870, 872, 873, 909, 919, 924, 1080, 1122, 1124, 1129], "tune": [134, 135, 144, 407, 793, 794, 816, 818, 820, 827, 875, 992], "rotat": [134, 863, 888], "exce": [134, 169, 727, 924, 934], "20m": [134, 863, 922], "compresscmd": 134, "bzip2": [134, 144, 173, 175, 791, 792, 954], "compressopt": 134, "compressext": 134, "missingok": 134, "sharedscript": 134, "postrot": 134, "reload": [134, 173], "endscript": 134, "adjac": [134, 317, 694, 737], "sda": [134, 870, 872], "cfq": 134, "noop": [134, 865], "believ": [134, 140, 863, 872, 900], "r5": 134, "menuconfig": [134, 144, 766, 870, 954], "xorg": [134, 138], "hardcod": [134, 314, 513, 725, 729, 1030], "emerge_log_dir": 134, "unionf": 134, "fuse": [134, 136, 873, 883], "persist": [134, 150, 347, 351, 359, 429, 827, 871], "held": [135, 277, 280, 328, 724, 758, 771], "compani": [135, 138, 139, 140, 175, 185, 225, 251, 262, 277, 417, 435, 436, 805, 1019, 1066], "z\u00fcrich": [135, 327], "hardcor": 135, "attitud": [135, 140, 259], "began": 135, "dive": [135, 252, 255, 1078], "inevit": [135, 328, 687], "came": [135, 202, 206, 208, 218, 221, 823, 829, 870, 995, 1047, 1118], "mb": [135, 804], "heap": [135, 390, 442, 542, 545, 597, 677, 694, 727, 752], "128": [135, 138, 152, 166, 176, 183, 189, 192, 198, 202, 205, 208, 211, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 406, 550, 870, 898, 955, 1077], "dead": [135, 144, 407], "attempt": [135, 140, 163, 221, 329, 643, 645, 1093], "reject": [135, 148], "proof": [135, 157, 395, 406, 410, 440, 524], "evid": 135, "fortun": [135, 140, 407, 419, 648, 1069], "overnight": [135, 200], "night": [135, 169], "instinct": 135, "defens": [135, 349, 350], "grow": [135, 571, 803, 956], "growth": [135, 205, 1021], "cumbersom": [135, 137, 172, 548, 571, 639, 683, 722, 908, 934, 1105], "handi": [135, 1129], "tricki": 135, "alloca": 135, "essenti": [135, 162, 211, 258, 260, 625], "stdio": [135, 194, 206, 332, 333, 335, 339, 341, 343, 374, 400, 420, 546, 552, 803, 823, 870, 888, 889, 890, 892, 893, 896, 897, 898, 899, 911, 924, 930, 933, 937, 938, 940, 943, 952, 956, 958, 1014], "unistd": [135, 398, 495, 527, 823, 870, 886, 888, 889, 890, 892, 895, 896, 897, 898, 899, 902, 904, 907, 921, 924, 930, 933, 937], "stdlib": [135, 390, 404, 870, 888, 889, 890, 921, 930, 937], "size_t": [135, 390, 403, 438, 518, 527, 530, 573, 578, 584, 588, 594, 615, 629, 641, 646, 657, 658, 659, 660, 661, 713, 714, 715, 717, 725, 752, 884, 892, 902, 934, 937], "stack_growth": 135, "argc": [135, 384, 442, 481, 870, 896, 897, 898, 899, 904, 907, 921, 937, 958, 1105, 1110], "mem": [135, 151, 527, 730], "fprintf": [135, 365, 378, 884, 924, 958], "stderr": [135, 184, 193, 202, 208, 218, 221, 231, 239, 248, 249, 269, 270, 303, 310, 365, 378, 422, 719, 796, 807, 808, 862, 884, 892, 924, 958, 993, 1006, 1014, 1124], "atoi": [135, 900], "printf": [135, 144, 194, 206, 332, 333, 335, 341, 343, 347, 373, 374, 377, 378, 400, 420, 546, 552, 803, 823, 886, 890, 930, 937, 938, 940, 952, 956, 958, 1003, 1009], "getpid": [135, 937], "memset": [135, 889, 924, 933, 937], "24299": 135, "vsz": 135, "rss": 135, "3944": [135, 208], "986": [135, 205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "188": [135, 166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 243, 246, 253, 263, 267, 273, 285], "320": [135, 208, 218, 221, 246, 253, 267, 273, 285], "exact": [135, 185, 225, 307, 371, 682, 699, 739, 741, 1093], "glibc": [135, 746, 952, 954, 955, 1113], "presum": 135, "assum": [135, 221, 225, 267, 401, 548, 709, 744, 826, 870, 872, 883, 955, 1024, 1100], "writabl": [135, 401, 811, 826, 898], "eater": [135, 928], "1k": 135, "furthermor": 135, "188k": 135, "anyth": [135, 139, 140, 165, 192, 208, 212, 235, 257, 258, 317, 417, 428, 432, 449, 484, 559, 628, 648, 713, 714, 715, 863, 875, 883, 887, 893, 922, 956, 961, 962, 963, 1006, 1014, 1069, 1086, 1090], "proce": [135, 143, 222, 255, 316, 494], "million": [135, 171, 435, 613, 766, 966], "24908": 135, "4800": [135, 208], "1200": [135, 208, 588, 1086], "1044": [135, 208], "1376": [135, 208], "grown": [135, 138], "reflect": [135, 766, 925, 955, 956, 983], "greedi": 135, "10000000": [135, 208, 359, 910, 966, 974], "24960": 135, "8mb": 135, "barrier": [135, 393, 694, 709, 750], "ulimit": [135, 803], "8192": [135, 208, 378, 803], "8000000": 135, "25018": 135, "11632": [135, 208], "2908": [135, 208], "7876": [135, 208], "8236": [135, 208], "demand": [135, 138, 155, 255, 401, 766, 817, 819, 968, 1003], "magic": [135, 137, 384, 419, 663, 725, 766, 968, 1098], "hood": [135, 940], "bother": [135, 883, 887], "pthread_attr_setstacks": 135, "2mb": 135, "rlimit_stack": 135, "pthread_creat": [135, 909, 924], "nthread": 135, "act": [135, 192, 502, 572, 872, 883, 886, 938, 974], "shut": [135, 734, 766], "sit": [135, 211, 316, 447, 810, 870, 871, 881, 883, 887, 937, 1080], "stack_limit": 135, "thread_func": 135, "arg": [135, 152, 166, 192, 193, 202, 206, 208, 218, 219, 221, 225, 231, 246, 267, 285, 420, 725, 909, 961, 965, 986, 993, 1016, 1091, 1107, 1113], "pthread_attr_t": [135, 909, 927], "attr": [135, 150, 909, 911, 913, 927, 933, 934], "pthread_attr_init": 135, "ld": [135, 426, 430, 521, 539, 612, 744, 766, 793, 794, 811, 824, 848, 930, 940, 941, 952, 957], "strerror": [135, 208, 884, 893, 924, 937], "p_attr": 135, "pthread_t": [135, 909, 924, 927], "rv": [135, 181, 243], "31524": 135, "825840": 135, "206460": 135, "819936": 135, "1404": [135, 208], "800mb": 135, "writeabl": [135, 822, 845], "worth": [135, 766, 872, 992, 1063, 1118, 1133], "physic": [135, 138, 173, 180, 261, 262, 283, 287, 408, 613, 750, 802, 871, 890, 894, 924, 925], "eaten": 135, "field": [135, 138, 140, 152, 157, 163, 199, 206, 213, 221, 231, 234, 251, 253, 257, 267, 302, 321, 334, 801, 806, 825, 859, 1010, 1021, 1042, 1071, 1072], "alleg": 135, "wast": [135, 143, 144, 403, 690, 707, 1077], "moment": [135, 169, 403, 435, 437, 631, 680], "carri": [135, 140, 155, 399, 431, 440, 457, 717, 870, 927, 940, 963], "771": [135, 208], "766604": 135, "aha": [135, 155, 166, 295, 729, 746, 871, 1077, 1105], "hasn": [135, 138, 139, 148, 760, 783, 994], "effect": [135, 139, 160, 311, 312, 347, 397, 407, 459, 606, 721, 750, 822, 827, 870, 882, 883, 925, 939, 964, 976, 997, 1043, 1071, 1092, 1100], "4096": [135, 152, 208, 717, 793, 794, 863, 870, 871, 872, 883, 906, 933], "1026": [135, 208], "invalid": [135, 176, 183, 213, 218, 219, 221, 225, 228, 246, 253, 260, 267, 285, 306, 321, 404, 462, 473, 476, 530, 545, 628, 629, 630, 643, 646, 652, 693, 695, 709, 724, 913, 1016], "insist": [135, 165, 552, 1107], "pthread_stack_min": 135, "16384": [135, 140, 208, 870, 871, 872], "1125": 135, "7840": [135, 208], "1960": [135, 208], "1936": [135, 208], "risk": [135, 435, 863, 871, 881, 926, 991], "512": [135, 208, 253, 285, 408, 803], "513": [135, 208, 253, 694], "2212": [135, 208], "4210920": 135, "1052730": 135, "4205016": 135, "4576": [135, 208], "misunderstand": [135, 703], "obvious": [135, 136, 138, 144, 156, 333, 397, 401, 428, 457, 521, 547, 553, 591, 606, 607, 635, 646, 680, 684, 689, 717, 764, 766, 779, 802, 803, 809, 823, 871, 872, 882, 898, 899, 926, 938, 940, 956, 977, 980, 1120], "overcommit": 135, "kept": [135, 140, 165, 171, 378, 393, 803, 864, 940, 968], "plai": [135, 143, 185, 395, 413, 766, 863, 981, 984, 1071], "stutter": 135, "4353": 135, "red": [135, 136, 181, 183, 189, 197, 209, 212, 225, 257, 303, 591, 863, 990, 1080], "chili": 135, "pepper": 135, "overli": [135, 809, 967], "adob": 135, "riddanc": 135, "8462": [135, 208], "3284640": 135, "821160": 135, "3278736": 135, "3064580": 135, "lie": [135, 685], "constraint": [135, 143, 652, 655, 657, 872], "800": [135, 176, 208, 588, 1024], "4000000": 135, "11338": [135, 208], "900": [135, 208, 588], "12156": [135, 208], "shrink": [135, 571], "inadvert": 135, "3mb": 135, "nois": 135, "henc": [135, 140, 494, 548, 592, 888, 892, 940], "14386": [135, 208], "child_stack": 135, "0x7f5813f22ff0": 135, "clone_vm": 135, "clone_f": 135, "clone_fil": 135, "clone_sigha": 135, "14413": 135, "mmap": [135, 932, 934, 1132], "8392704": 135, "prot_read": [135, 933], "prot_writ": [135, 933], "map_priv": [135, 933], "map_anonym": 135, "map_stack": 135, "0x7fd14f9af000": 135, "mprotect": 135, "0x7fd14f1ae000": 135, "prot_non": 135, "placehold": [135, 463, 495, 650, 699, 872], "addit": [135, 153, 165, 192, 221, 224, 295, 354, 401, 422, 456, 457, 471, 493, 539, 551, 557, 628, 766, 803, 879, 983, 995, 1011, 1013, 1093], "proc": [135, 205, 221, 228, 231, 246, 253, 263, 267, 729, 746, 748, 750, 766, 767, 892, 909, 933, 937, 1131], "7fd14f1af000": 135, "7fd14f9af000": 135, "00000000": 135, "7fd14f9b0000": 135, "topmost": [135, 1098], "redund": [135, 378, 407], "smap": 135, "7fd14f1ae000": 135, "pss": 135, "shared_clean": 135, "shared_dirti": 135, "private_clean": 135, "private_dirti": 135, "referenc": [135, 153, 176, 284, 287, 434, 552, 694, 695, 696, 900, 1107], "anonym": [135, 437, 739, 933], "anonhugepag": 135, "kernelpages": 135, "mmupages": 135, "miss": [135, 154, 161, 163, 165, 181, 208, 213, 218, 225, 284, 287, 310, 367, 412, 413, 421, 423, 431, 493, 524, 545, 636, 672, 741, 744, 890, 924, 942, 965], "shallow": [135, 205, 217, 638], "extent": [135, 165, 172, 185, 307, 398, 403, 766, 940, 988], "8k": [135, 810], "swamp": 135, "panic": [135, 148, 774, 826], "meaningless": 135, "global": [135, 136, 154, 160, 165, 169, 174, 178, 181, 194, 202, 205, 208, 211, 212, 218, 221, 224, 235, 238, 246, 258, 261, 263, 267, 272, 276, 283, 287, 305, 310, 356, 373, 379, 385, 389, 392, 396, 400, 403, 405, 409, 410, 414, 415, 423, 424, 429, 442, 448, 457, 491, 492, 493, 494, 535, 542, 555, 637, 675, 678, 693, 694, 704, 716, 718, 719, 735, 872, 908, 911, 915, 916, 918, 940, 961, 964, 972, 974, 1007, 1021, 1064, 1093, 1101, 1105], "dig": [135, 137], "thorough": [135, 144, 987, 1071, 1090, 1133], "counter": [135, 218, 335, 341, 342, 351, 407, 412, 413, 537, 646, 933], "delai": [135, 202, 208, 218, 221, 871], "substanti": 135, "overcom": [135, 284, 310, 397], "beforehand": 135, "mlock": [135, 1132], "mlockal": [135, 1132], "contradictori": 135, "lengthi": 135, "felt": 135, "lucki": [135, 545], "agre": [135, 165, 169, 316, 445, 925, 1070], "glad": 135, "outdat": [136, 144, 766, 1093], "halfwai": 136, "procedur": [136, 144, 343, 687, 863, 1021], "thunderbolt": 136, "hdmi": 136, "unplug": 136, "oop": [136, 1117], "feb": [136, 181, 183, 185, 307, 352, 848, 906, 952], "derefer": [136, 550], "0000000000000080": 136, "supervisor": 136, "error_cod": 136, "0x0000": 136, "pgd": 136, "p4d": 136, "0000": [136, 221, 267, 872], "smp": [136, 185, 192, 307], "pti": 136, "281": [136, 205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 267, 273, 285], "comm": 136, "kworker": 136, "taint": 136, "fc31": 136, "asustek": 136, "zenbook": 136, "ux391ua": 136, "bio": 136, "204": [136, 166, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 267, 273, 285, 442], "workqueu": [136, 719, 743, 768, 781, 784, 862], "ucsi_connector_chang": 136, "typec_ucsi": 136, "0010": 136, "ucsi_displayport_remove_partn": 136, "0xa": 136, "0x20": [136, 756], "c7": [136, 143, 1093], "83": [136, 143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 767, 1068, 1069], "5b": [136, 143], "e9": [136, 143], "6d": [136, 143, 334, 335], "f3": [136, 143], "3d": [136, 143, 154], "fb": [136, 143], "2e": [136, 143, 639], "0f": [136, 143], "1f": [136, 143], "84": [136, 143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 1068, 1069], "90": [136, 143, 152, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 419, 1068, 1069, 1098], "85": [136, 143, 152, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 941, 942, 1068, 1069, 1105], "ff": [136, 143, 328, 872], "8b": 136, "78": [136, 143, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 491, 1068, 1069], "c6": 136, "rsp": [136, 205, 1021], "0018": 136, "ffff9daa002d3df8": 136, "eflag": 136, "00010202": 136, "rax": 136, "0000000000000008": 136, "rbx": 136, "ffff901f4ce35710": 136, "rcx": 136, "0000000000003c7d": 136, "rdx": 136, "0000000000003c7c": 136, "rsi": [136, 826], "0000000000000001": 136, "rdi": 136, "rbp": 136, "0000000000000000": [136, 958], "r08": 136, "ffffffffbc7dbe60": 136, "r09": 136, "ffff9daa002d3cf0": 136, "r10": 136, "ffff901f54951a18": 136, "r11": 136, "ffff901f56a68a78": 136, "r12": 136, "r13": 136, "r14": 136, "ffff901f4ce35860": 136, "r15": 136, "ffff901f4ce355d8": 136, "ffff901f56a00000": 136, "knlg": 136, "cr0": 136, "0000000080050033": 136, "cr2": 136, "cr3": 136, "000000028fbbc003": 136, "cr4": 136, "00000000003606f0": 136, "trace": [136, 155, 202, 208, 218, 221, 422, 756], "ucsi_unregister_altmod": 136, "0x77": 136, "0x90": [136, 756], "ucsi_unregister_partn": 136, "0x13": 136, "0x30": [136, 359], "0x247": 136, "0x340": 136, "process_one_work": 136, "0x1b5": 136, "0x360": 136, "worker_thread": 136, "0x50": 136, "0x3c0": 136, "kthread": 136, "0xf9": 136, "0x130": 136, "kthread_park": 136, "ret_from_fork": 136, "0x35": 136, "0x40": [136, 871], "cdc_ether": 136, "usbnet": 136, "r8152": 136, "mii": 136, "rc_cec": 136, "typec_displayport": 136, "uinput": 136, "rfcomm": 136, "ccm": 136, "xt_checksum": 136, "xt_masquerad": 136, "nf_nat_tftp": 136, "nf_conntrack_tftp": 136, "tun": [136, 141, 156, 160, 176, 183, 222, 1115, 1116, 1117], "bridg": 136, "stp": 136, "llc": 136, "nf_conntrack_netbios_n": 136, "nf_conntrack_broadcast": 136, "xt_ct": 136, "ip6t_reject": 136, "nf_reject_ipv6": 136, "ip6t_rpfilt": 136, "ipt_reject": 136, "nf_reject_ipv4": 136, "xt_conntrack": 136, "ebtable_nat": 136, "ebtable_brout": 136, "ip6table_nat": 136, "ip6table_mangl": 136, "ip6table_raw": 136, "ip6table_secur": 136, "iptable_nat": 136, "nf_nat": 136, "iptable_mangl": 136, "iptable_raw": 136, "iptable_secur": 136, "nf_conntrack": 136, "nf_defrag_ipv6": 136, "nf_defrag_ipv4": 136, "libcrc32c": 136, "ip_set": 136, "nfnetlink": 136, "ebtable_filt": 136, "ebtabl": 136, "ip6table_filt": 136, "ip6_tabl": 136, "iptable_filt": 136, "cmac": 136, "bnep": 136, "sunrpc": 136, "vfat": [136, 766, 797], "snd_hda_codec_hdmi": 136, "snd_soc_skl": 136, "snd_soc_sst_ipc": 136, "snd_soc_sst_dsp": 136, "snd_hda_ext_cor": 136, "x86_pkg_temp_therm": 136, "intel_powerclamp": 136, "snd_soc_acpi_intel_match": 136, "coretemp": 136, "snd_soc_acpi": 136, "kvm_intel": 136, "snd_soc_cor": 136, "snd_hda_codec_realtek": 136, "snd_hda_codec_gener": 136, "snd_compress": 136, "ledtrig_audio": 136, "ac97_bu": 136, "snd_pcm_dmaengin": 136, "iwlmvm": 136, "snd_hda_intel": 136, "snd_intel_dspcfg": 136, "irqbypass": 136, "snd_hda_codec": 136, "uvcvideo": 136, "mac80211": 136, "btusb": 136, "itco_wdt": 136, "btrtl": 136, "crct10dif_pclmul": 136, "videobuf2_vmalloc": 136, "itco_vendor_support": 136, "videobuf2_memop": 136, "mei_hdcp": 136, "btbcm": 136, "btintel": 136, "crc32_pclmul": 136, "intel_rapl_msr": 136, "snd_hda_cor": 136, "videobuf2_v4l2": 136, "libarc4": 136, "ghash_clmulni_intel": 136, "videobuf2_common": 136, "snd_hwdep": 136, "intel_cst": 136, "bluetooth": [136, 1122, 1135], "snd_seq": 136, "asus_nb_wmi": 136, "iwlwifi": 136, "videodev": 136, "snd_seq_devic": 136, "intel_uncor": 136, "asus_wmi": 136, "snd_pcm": 136, "intel_rapl_perf": 136, "cdc_acm": 136, "sparse_keymap": 136, "wmi_bmof": 136, "ecdh_gener": 136, "cfg80211": 136, "intel_wmi_thunderbolt": 136, "pcspkr": 136, "snd_timer": 136, "snd": 136, "i2c_i801": 136, "soundcor": 136, "joydev": 136, "idma64": 136, "intel_xhci_usb_role_switch": 136, "mei_m": 136, "ucsi_acpi": 136, "processor_thermal_devic": 136, "intel_rapl_common": 136, "mei": [136, 208], "intel_soc_dts_iosf": 136, "intel_pch_therm": 136, "typec": 136, "int3403_therm": 136, "int340x_thermal_zon": 136, "int3400_therm": 136, "acpi_thermal_rel": 136, "acpi_pad": 136, "binfmt_misc": 136, "ip_tabl": 136, "rfkill": 136, "i915": 136, "i2c_algo_bit": 136, "drm_kms_helper": 136, "hid_multitouch": 136, "drm": 136, "nvme": 136, "crc32c_intel": 136, "nvme_cor": 136, "serio_raw": 136, "wmi": 136, "i2c_hid": 136, "76d248e576fee192": 136, "deferenc": 136, "dp": 136, "ness": [136, 172, 257], "ucsi": 136, "displayport": 136, "linu": [136, 758, 766], "struct": [136, 160, 194, 195, 211, 378, 383, 389, 390, 391, 392, 395, 396, 399, 401, 403, 405, 409, 414, 415, 437, 442, 459, 494, 495, 539, 540, 545, 547, 549, 550, 570, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 635, 637, 638, 639, 640, 647, 663, 666, 668, 669, 670, 671, 675, 680, 698, 699, 709, 716, 717, 718, 719, 725, 727, 730, 732, 734, 735, 737, 750, 754, 756, 758, 760, 762, 768, 769, 774, 776, 779, 783, 785, 786, 864, 866, 870, 889, 890, 902, 913, 924, 927, 933, 934, 937, 938, 1119], "typec_altmod": 136, "alt": [136, 166, 826, 854, 1115, 1122, 1129], "ucsi_dp": 136, "typec_altmode_get_drvdata": 136, "271": [136, 205, 208, 213, 215, 221, 246, 253, 267, 273], "bugzilla": 136, "1785972": 136, "upstream": [136, 139, 144, 148, 744], "john": [136, 407], "stebbin": 136, "roundtrip": 136, "wiki": [136, 150, 261, 262, 283, 287, 739, 766], "explod": [136, 741, 1003], "jwboyer": [136, 739], "f31": 136, "quiet": [136, 169, 1093], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 136, "josh": 136, "boyer": 136, "fedoraproject": [136, 739], "mon": 136, "rpmdevtool": [136, 739], "koji": 136, "rpmdev": 136, "setuptre": 136, "spec": [136, 221, 739, 762], "srpm": 136, "unam": [136, 739, 744, 762, 766, 767], "correspond": [136, 148, 221, 332, 375, 871, 948, 956, 995, 1031, 1066, 1093], "kenrel": 136, "ivh": [136, 138], "crypto": 136, "ccp": 136, "sha": 136, "drop": [136, 148, 284, 438, 457, 466, 687, 694, 696, 785, 933, 938], "edit": [136, 138, 139, 148, 180, 185, 221, 249, 331, 491, 739, 766, 871, 1019, 1090, 1131], "zips": 136, "ko": [136, 735, 744, 766], "endif": [136, 375, 377, 378, 420, 422, 427, 428, 521, 530, 539, 545, 547, 548, 588, 646, 647, 693, 709, 940, 956, 958, 1107], "buildid": [136, 739, 941], "primary_target": 136, "825": [136, 208], "asoc": 136, "patch601": 136, "patch999": 136, "roedel": [136, 492, 495, 942, 955, 1051, 1100], "patienc": [136, 165, 988], "oldpackag": 136, "uefi": [136, 143], "footnot": [136, 138, 139, 140, 143, 144, 149, 156, 162, 165, 168, 252, 255, 436, 463, 507, 554, 556, 557, 570, 600, 619, 735, 737, 798, 805, 820, 870, 871, 872, 893, 896, 956, 988, 991, 1021, 1055, 1070, 1118, 1121], "previou": [137, 153, 284, 478, 530, 546, 628, 826, 858, 898, 965, 967, 987, 989, 1033, 1092], "serv": [113, 137, 139, 368, 1070, 1099, 1133], "market": [137, 140, 205, 249, 257, 1021], "intent": [137, 139, 143, 144, 440, 695, 699, 739, 896, 898, 899], "remark": 137, "organ": [137, 162, 373, 408, 419, 447, 588, 802, 888, 955], "numer": [137, 154, 170, 172, 174, 208, 218, 221, 225, 257, 267, 422, 594, 883], "enforc": [137, 195, 395, 417, 552, 725, 872], "cname": [137, 139], "propag": [137, 349, 407, 423, 431, 432, 613, 663, 873], "1100": [137, 202, 208, 225, 588], "3600": [137, 208], "185": [137, 166, 183, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "199": [137, 166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 285, 766, 1021], "109": [137, 152, 166, 176, 181, 183, 189, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315], "153": [137, 152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 317], "111": [137, 152, 154, 166, 176, 183, 189, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305], "108": [137, 152, 166, 176, 183, 189, 192, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305], "strip": [137, 156, 165, 199, 201, 202, 205, 213, 217, 218, 223, 225, 231, 234, 246, 253, 263, 267, 273, 310, 319, 940, 941, 943, 952, 971, 1044, 1089], "breviti": 137, "fqdn": 137, "qualifi": [137, 401, 547, 548, 685], "surf": 137, "consequenti": [137, 140, 143, 171, 797, 870, 960, 981, 1107], "microsoft team": 138, "chrome": 138, "google chrom": 138, "confer": [138, 140, 169, 193, 216, 242], "virtual classroom": 138, "classroom": [138, 140], "remote train": 138, "dr": [138, 955], "chromium": [138, 173], "frequent": [138, 140, 148, 165, 225, 851, 871, 988, 1009], "meet": [138, 140, 165, 395, 810, 952, 965], "face": [138, 140, 165, 215, 225, 701], "travel": [138, 826], "corona": [138, 140, 165], "viru": [138, 140], "conferenc": 138, "dramat": 138, "march": 138, "spent": [138, 406, 710, 962, 1070], "weston": 138, "shown": [138, 171, 301, 848, 934, 1077], "invest": [138, 140, 144, 225], "smooth": 138, "layer": [138, 238, 240, 258, 725, 797, 871, 883, 893, 902], "cornercas": 138, "hover": 138, "sharer": 138, "gdm": [138, 205, 221, 228, 231, 246, 253, 263, 267, 801, 857], "daemon": [138, 185, 205, 221, 228, 231, 246, 253, 263, 267, 413, 801, 804, 851, 852, 855, 857, 873, 881, 886, 888, 918, 974], "uncom": [138, 462, 463, 657, 870], "waylanden": 138, "defaultsess": 138, "deb": [138, 270], "5153": 138, "thank": [138, 219, 246, 649, 685, 748, 908, 1069], "marjan": 138, "javorka": 138, "fashion": 138, "efl": [138, 785, 873, 924], "61762": 138, "1670": [138, 208], "80": [138, 143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 411, 484, 848, 924, 954, 966, 1021, 1068, 1069, 1098], "947213": 138, "61764": 138, "98775": 138, "zygot": 138, "sandbox": [138, 165, 169, 219, 233, 251, 1064, 1100, 1101], "61800": 138, "239615": 138, "gpu": 138, "sharedarraybuff": 138, "sparerendererforsiteperprocess": 138, "prefer": [138, 215, 225, 351, 407, 449, 553, 640, 648, 652, 758, 810, 1016], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 138, "token": [138, 195, 211, 337, 377, 801, 914, 1019, 1115], "4327801531638606376": 138, "61825": 138, "420846": 138, "autoplai": 138, "gestur": 138, "12993561460135093079": 138, "asar": 138, "agent": [138, 879, 1071], "mozilla": [138, 263, 848], "applewebkit": 138, "537": [138, 208], "khtml": 138, "gecko": 138, "microsoftteam": 138, "preview": [138, 223, 276, 424, 719], "3497": 138, "safari": 138, "webview": 138, "preload": 138, "preload_notif": 138, "fff": 138, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 138, "raster": 138, "v8_context_snapshot_data": 138, "v8_natives_data": 138, "101": [138, 152, 166, 176, 183, 189, 198, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 999, 1068, 1069], "msteam": 138, "notificationsmanag": 138, "61973": 138, "790018": 138, "432557619363765409": 138, "mainwindow": 138, "62033": 138, "1259666": 138, "5585537623314398260": 138, "pluginhost": 138, "wish": [138, 140, 148, 169, 411, 420, 559, 626, 707, 987, 1082, 1083, 1100], "insan": [138, 277, 797], "killal": [138, 928, 938], "63500": 138, "298385": 138, "63502": 138, "blood": 138, "pressur": [138, 202], "rise": [138, 485, 748, 906, 907, 924], "wipe": 138, "logout": 138, "pop": [138, 151, 213, 215, 228, 243, 253, 263, 273, 285, 378, 707, 986, 1011], "desir": [138, 202, 208, 218, 221, 352, 356, 367, 489, 539, 541, 547, 629, 764, 897, 899, 1071], "morn": [138, 174, 184, 202, 211, 213, 219, 1026], "webassembli": 138, "blow": 138, "water": [138, 257], "tab": [138, 139, 152, 221, 249, 267, 301, 352, 766, 826, 1008, 1033, 1124], "firefox": [138, 413, 909, 938, 1076], "dom": [138, 197], "gave": [138, 140, 153, 165, 868, 1069], "3987": 138, "132": [138, 152, 154, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "plagu": 138, "rememb": [138, 139, 154, 161, 171, 192, 362, 395, 445, 571, 572, 606, 609, 646, 647, 695, 762, 766, 808, 823, 826, 845, 870, 879, 881, 962, 1028, 1038], "invent": [138, 345, 377, 437, 459, 460, 1120, 1121], "game": [138, 205, 221, 228, 231, 246, 253, 263, 267, 284, 822, 886, 1002], "pornwatch": 138, "teamview": 138, "webpag": 139, "properli": [139, 631, 709, 766, 952], "retrospect": 139, "jekyl": 139, "bend": [139, 489], "companion": [139, 257], "pollut": [139, 378, 401, 407, 440, 636, 942], "distinguish": [139, 546, 699, 798, 952], "handwritten": [139, 237, 238, 240, 291, 545, 645, 675, 676, 677, 693, 718, 719], "remind": 139, "pile": [139, 148, 447, 938], "incomprehens": [139, 219, 609, 1118], "blame": [139, 872], "technic": [139, 140, 162, 432, 436, 536, 591, 635, 968, 1077, 1110], "nojekyl": 139, "eof": [139, 189, 192, 211, 212, 228, 302, 339, 340, 341, 342, 355, 619, 768, 782, 888, 889, 892, 898, 930, 937, 990], "doctyp": 139, "constel": 139, "machineri": [139, 261, 262, 283, 287], "eventu": [139, 148, 410, 906, 955], "click": [139, 140], "danc": [139, 494, 786, 956], "cri": [139, 698], "backup": [139, 173, 420, 795, 797, 879, 1082], "haven": [139, 140, 165, 513, 863, 870], "subdomain": 139, "afterthough": 139, "preserv": [139, 150, 171, 228, 395, 793, 794, 828, 882, 1089], "_build": 139, "restor": [139, 148, 155, 202, 208, 218, 221, 739, 938, 961], "shini": 139, "nervous": 139, "marketinges": [139, 249], "familiar": [139, 165, 221, 312, 313, 702, 871, 988], "big blue button": 140, "strongli": [140, 202, 208, 218, 221, 252, 255, 493, 591, 637, 675, 716, 718, 719, 1118], "shame": 140, "pursu": 140, "moreov": 140, "focus": 140, "teach": [140, 165, 328], "trust": [140, 143, 205, 261, 262, 283, 643, 879, 881, 1021, 1093, 1110], "benefit": [140, 252, 255, 258, 260, 401, 1059], "beat": [140, 215, 225, 1063], "talent": [140, 328], "whiteboard": [140, 933], "chat": 140, "wide": [140, 144, 333, 334, 798, 879, 934, 940], "breakout": [140, 870], "stabil": [140, 442, 872, 1094], "thousand": [140, 246, 797], "curiou": [140, 1064], "curious": 140, "licens": [140, 246, 429, 722, 990, 1019], "lgpl": 140, "blindsid": 140, "govern": [140, 752, 892], "html5": 140, "exception": [140, 872], "modern": [140, 144, 146, 157, 160, 165, 172, 194, 216, 423, 697, 719, 726, 728, 733, 736, 743, 747, 757, 768, 770, 775, 781, 784, 787, 862, 940, 959, 989, 1064, 1090, 1119, 1121], "heavili": [140, 162, 165, 249, 251, 328, 493, 688, 766, 863, 872, 988], "webrtc": 140, "pain": [140, 766, 943, 952], "death": [140, 192, 938], "firewal": [140, 173, 881], "busi": [140, 284, 417, 427, 552, 771, 783, 795, 830, 832, 837, 838], "indefinit": [140, 625], "vm": [140, 313], "encrypt": [140, 801, 822, 873, 881, 882, 883, 1042, 1080], "bbb": [140, 152, 213, 231], "provis": 140, "gcp": 140, "expertis": [140, 494], "n1": [140, 166, 225], "accordingli": [140, 173, 481, 491, 494, 524, 870, 872, 957, 992, 995, 1089], "500gb": 140, "10gb": 140, "spars": [140, 215, 225, 555, 557, 762], "mandatori": [140, 872, 989], "issuanc": 140, "udp": [140, 864, 866, 1133, 1135], "32768": 140, "clickabl": 140, "7443": 140, "755": [140, 208, 310, 811, 991], "xenial": 140, "220": [140, 166, 181, 192, 202, 205, 208, 213, 215, 221, 225, 228, 243, 246, 253, 263, 267, 273, 285], "hostnam": [140, 1093], "certbot": 140, "greenlight": 140, "letsencrypt": 140, "minor": [140, 144, 202, 208, 218, 221, 251, 725, 732, 797], "docker": [140, 144], "bundl": [140, 163, 1076, 1093], "rake": 140, "succesfulli": 140, "screenshot": [140, 163, 310], "tryout": [140, 872], "kid": [140, 185, 203, 296], "layman": 140, "knew": [140, 169, 650, 957], "reproduc": [140, 143, 259, 404, 872], "thought": [140, 378, 690, 766, 1077], "fred": [140, 864, 964], "dixon": 140, "leader": 140, "aka": [140, 185, 208, 211, 213, 233, 513, 697], "canva": 140, "bradlei": 140, "schreffler": 140, "upfront": 140, "far": [140, 165, 173, 194, 200, 208, 211, 251, 347, 362, 383, 384, 386, 397, 401, 406, 431, 560, 570, 635, 698, 744, 808, 872, 966, 988, 1069, 1118], "exhaust": [140, 922, 925, 968], "heard": 140, "tast": [140, 337, 553, 609, 635, 678, 698], "era": 140, "budget": [140, 189], "advertis": [140, 688], "viabl": 140, "shout": [140, 677, 680], "loud": [140, 356, 571, 639, 677, 683, 684], "traunse": 141, "hike": [141, 142, 169], "bergsteigen": [141, 142], "climb": [141, 142, 169, 200], "klettern": [141, 142], "outdoor": [141, 142], "donnerstag": 141, "geistigen": 141, "ersch\u00f6pfung": 141, "k\u00f6rperlich": 141, "erfahren": [141, 142, 328, 1116], "dazu": [141, 150, 151, 156, 160, 177, 310, 315, 328, 1114, 1128, 1136], "ausgesucht": [141, 142], "zwar": [141, 1113, 1117, 1129], "lo": [141, 142, 183, 221, 257, 489, 746, 976], "gmundner": [141, 169], "h\u00fctte": [141, 142, 169], "n\u00e4chsten": 141, "naturfreundesteig": 141, "zusammenfassung": [141, 147], "wunsch": 141, "vollend": 141, "erf\u00fcllt": 141, "unversichert": 141, "unmarkiert": 141, "leicht": [141, 177, 1113, 1128, 1134, 1135], "panik": 141, "geraten": 141, "h\u00e4nde": [141, 142], "braucht": [141, 142], "fingern\u00e4gel": 141, "z\u00e4hne": 141, "mitunt": [141, 142, 1125], "verkoffert": 141, "augen": [141, 228], "offenhalten": 141, "jeder": [141, 1112, 1115, 1116, 1135], "spur": 141, "folgen": [141, 177, 178, 1115, 1128], "fr\u00fcher": [141, 222], "umdrehen": 141, "sackgass": 141, "erweist": 141, "vielleicht": [141, 166, 177, 228, 1117, 1128], "weggehen": 141, "stirnlamp": 141, "mitnehmen": 141, "war": [141, 151, 156, 158, 166, 177, 181, 328, 417, 1113, 1115, 1117, 1128, 1134, 1135], "sch\u00f6nsten": 141, "jemal": 141, "zuletzt": 141, "traumhaften": 141, "gegend": 141, "immer": [141, 142, 156, 160, 166, 168, 181, 253, 1113, 1117, 1124, 1134], "griffweit": 141, "erscheint": 141, "paar": [141, 151, 166, 168, 176, 183, 215, 310, 315, 1113, 1136], "eindr\u00fcck": 141, "m\u00fcder": 141, "abklatsch": 141, "erinnerungen": 141, "hirn": 141, "eingebrannt": 141, "einstieg": [141, 177, 1128], "traunsteinstra\u00df": 141, "hundert": [141, 152, 225], "meter": 141, "s\u00fcdlich": 141, "hoisn": [141, 169], "wirt": [141, 169], "markiert": [141, 142], "wanderweg": [141, 142], "wegweisern": [141, 142], "bergauf": [141, 142], "kupp": 141, "klamm": 141, "einsteigt": 141, "bergab": 141, "touristisch": 141, "erschlossen": 141, "trifft": 141, "familien": 141, "kindern": [141, 1129], "rechter": 141, "felsstock": 141, "adlerhorst": 141, "sieht": [141, 152, 156, 166], "rau": [141, 215], "touristenzon": 141, "rauf": 141, "schart": 141, "durchschnaufen": 141, "einstellen": 141, "gen\u00fcsslich": 141, "h\u00f6henmet": 141, "verspeisen": 141, "steinmanderl": 141, "verfehlen": 141, "erkennbar": [141, 152, 1131], "kamm": 141, "r\u00fcber": 141, "traunsteinfelsen": 141, "erstreckt": [141, 142], "sch\u00f6nste": 141, "teil": [141, 151, 160, 168, 1113, 1115], "meditativ": 141, "wundersch\u00f6n": [141, 142], "steil": 141, "voll": 141, "zecken": 141, "schon": [141, 142, 151, 166, 168, 176, 206, 328, 1115, 1117, 1122, 1129, 1131, 1134], "bl\u00fcht": 141, "rinnen": 141, "leichtest": [141, 152], "dahin": [141, 1113], "wieder": [141, 166, 168, 176, 181, 183, 197, 1115, 1129], "vertun": 141, "manderl": 141, "aufstellen": 141, "nachwelt": 141, "nemesi": 141, "bergverr\u00fcckten": 141, "gleich": [141, 152, 166, 176, 177, 181, 183, 215, 263, 305, 1113, 1128, 1135], "schl\u00fcsselstel": 141, "quert": 141, "latschen": 141, "\u00f6fter": [141, 142], "festhalten": 141, "gel\u00e4nd": 141, "einsam": 141, "bohrhaken": 141, "verrotteten": 141, "schuhband": 141, "festh\u00e4lt": 141, "runterfallen": 141, "glaub": [141, 150, 151], "stell": [141, 166, 197], "umgehen": [141, 1122], "querung": 141, "hierher": 141, "st\u00fcck": 141, "reinzum\u00fcnden": 141, "scheint": [141, 150], "gibt": [141, 142, 147, 150, 152, 153, 156, 166, 177, 178, 189, 215, 305, 1112, 1113, 1114, 1115, 1117, 1122, 1128, 1134], "foto": [141, 828], "mittendrin": 141, "besch\u00e4ftigt": 141, "hose": 141, "kacken": 141, "gesagt": [141, 156, 166, 176, 328, 1113], "manderln": 141, "aufnahmen": 141, "zunehmenden": 141, "sonnenuntergang": 141, "unvergesslich": 141, "nacht": [141, 142], "geworden": 141, "halten": [141, 142], "zumindest": [141, 166, 1115], "hinauf": 141, "stund": [141, 853, 1136], "gekostet": 141, "exklus": [141, 166, 176], "schneck": 141, "j\u00e4gerbrot": 141, "schein": 141, "ausstieg": 141, "hernlersteig": 141, "m\u00fcndet": 141, "gmundnerh\u00fctt": 141, "gem\u00fctlich": [141, 142], "nett": [141, 142, 156, 267, 328, 1122, 1129], "wirtsleut": 141, "h\u00fcttenruh": 141, "ansitzen": 141, "schweinsbraten": 141, "reinkommt": 141, "k\u00fcche": 141, "geputzt": 141, "backerbsen": 141, "morgen": [141, 221, 225], "hochnebel": 141, "blick": [141, 142, 1114], "flugzeug": 141, "gipfel": [141, 142], "dolin": 141, "nebel": 141, "dabei": [141, 152, 156, 192, 328, 1112], "verziehen": 141, "r\u00fcckweg": 141, "hoisnwirt": 141, "miesweg": 141, "karibik": 141, "steiner alpen": 142, "kamni\u0161ke alp": 142, "kamni\u0161ko savinjskih alp": 142, "alten": [142, 1117], "tradit": [142, 205, 208, 403, 418, 554, 556, 557, 559, 579, 808, 872, 1011, 1042, 1132], "bleiburg": [142, 200], "k\u00e4rnten": [142, 328], "umliegenden": 142, "bergen": 142, "interessantesten": 142, "2558m": [142, 200], "steiner": 142, "alpen": 142, "davor": [142, 184], "gekannt": 142, "nun": [142, 160, 166, 189, 196, 221, 596], "gesehen": [142, 166, 172, 206], "steht": [142, 166, 176, 177, 1125, 1128], "fest": 142, "n\u00e4chste": [142, 160], "jahr": [142, 166], "\u00fcberschreitung": 142, "soweit": [142, 1122, 1129], "h\u00f6chst": 142, "interessant": [142, 1114], "steinhaufen": 142, "unge\u00fcbt": 142, "verloren": [142, 181, 184], "h\u00f6henangst": 142, "schauen": [142, 177, 1128], "helm": 142, "schaden": 142, "schottersurf": 142, "kommen": [142, 147, 215, 310, 315, 328, 854], "ihr": [142, 147, 151, 156, 166, 788, 1112, 1114, 1116, 1117, 1122, 1129, 1135], "artikel": [142, 150], "rein": [142, 152, 177, 1128, 1129], "ins": [142, 151, 328, 704, 1113, 1129], "eisenkappel": 142, "seebergsattel": 142, "openstreetmap": 142, "klein": [142, 151, 152, 156, 1113, 1115, 1116], "dorf": 142, "uhren": 142, "stehengeblieben": 142, "scheinen": 142, "parkplatz": 142, "geparkt": 142, "wissend": 142, "hinten": 142, "tal": 142, "beginnt": [142, 176, 1136], "ahnen": 142, "stetig": 142, "verzagen": 142, "eingang": [142, 1113], "kar": 142, "pl\u00f6tzlich": 142, "freundlich": 142, "vorhanden": [142, 1122, 1129], "fr\u00fchst\u00fcck": 142, "lager": [142, 257], "respektvol": 142, "erklimmenden": 142, "zieht": 142, "haltend": 142, "wand": 142, "wiederum": [142, 166], "gilt": [142, 156, 197, 328], "mittlerweil": [142, 1113, 1130], "akzeptiert": 142, "deswegen": [142, 176, 181, 1115], "schliesslich": [142, 1113], "stehend": 142, "denn": [142, 166, 176, 1134, 1136], "hinaufkomm": 142, "passiert": [142, 166, 183], "anf\u00e4ngern": 142, "geschehen": 142, "jung": [142, 328], "izola": 142, "slowenien": 142, "stellten": 142, "ankam": 142, "ob": [142, 150, 176, 1117, 1136], "beantwortet": 142, "adoptivs\u00f6hn": 142, "gewonnen": 142, "nachbarberg": 142, "ko\u010dna": 142, "sichtlich": 142, "spa\u00df": [142, 222, 1131], "abstieg": 142, "erweitert": 142, "rund": 142, "fertig": [142, 176, 193, 221, 656, 663], "empfehl": [142, 1113], "runterzugehen": 142, "raufgekommen": 142, "ostseitigen": 142, "westseitig": 142, "sch\u00f6ner": [142, 166], "langen": 142, "grat": 142, "felst\u00fcrm": 142, "daf\u00fcr": [142, 160, 166, 176, 177, 1113], "anstrengend": 142, "200m": 142, "pulverhangerl": 142, "zur\u00fcck": [142, 166, 178, 1122, 1129], "wohlverdient": 142, "la\u0161ko": 142, "geschmack": 142, "schroff": 142, "selektiv": 142, "jedermann": 142, "kett": 142, "2000m": 142, "umschlossen": 142, "gletschergeformten": 142, "karen": 142, "steilen": 142, "w\u00e4nden": 142, "ost": 142, "richtung": [142, 1124], "schlafm\u00f6glichkeiten": 142, "biwak": 142, "einladung": 142, "\u00fcberquerung": 142, "dringend": 142, "f\u00e4llig": [142, 328], "fu\u00dfnoten": [142, 1112], "belieben": 142, "gummi": 142, "reifen": 142, "fahren": 142, "mehrplatzlag": 142, "reserviert": 142, "h\u00fcttenschl\u00e4fer": 142, "ohrenst\u00f6psel": 142, "f\u00e4lle": 142, "eingetreten": 142, "fassen": [142, 221], "typ": [142, 178, 189, 199, 854, 1076], "geschnarcht": 142, "geschrien": 142, "modules sign": 143, "secure boot": 143, "shim": 143, "dell xps 13": 143, "unresolv": [143, 741, 744, 940], "upset": [143, 688], "tendenc": 143, "vendor": [143, 144, 433, 435, 494, 762, 766, 870, 900], "efi": 143, "implementor": [143, 237, 238, 240, 291, 637, 675, 684, 718, 719, 725, 1098, 1118], "shine": 143, "stuck": 143, "cryptographi": 143, "third": [143, 180, 192, 221, 267, 423, 551, 553, 664, 665, 744, 746, 811, 853, 896], "parti": [143, 148, 441, 553, 737, 744, 892, 933, 1080], "signatur": [143, 189, 221, 225, 246, 267, 539, 635, 682, 698, 699, 934], "openssl": [143, 822], "req": 143, "x509": 143, "newkei": 143, "rsa": [143, 879], "keyout": 143, "xps13": 143, "priv": [143, 760], "outform": 143, "36500": [143, 494], "subj": 143, "passphras": [143, 173, 879], "expiri": 143, "0x2": 143, "97": [143, 152, 166, 176, 181, 183, 189, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 411, 1068], "e5": 143, "ef": 143, "88": [143, 152, 166, 176, 181, 183, 189, 192, 194, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315, 413, 1008, 1068, 1069, 1105], "3a": 143, "b3": 143, "9c": 143, "1b": 143, "a4": 143, "d7": 143, "sha256withrsaencrypt": 143, "issuer": [143, 437], "sep": [143, 144, 172, 192, 205, 208, 213, 221, 225, 228, 246, 267, 285, 419, 616, 848, 870, 872, 883, 940], "gmt": 143, "aug": [143, 208, 863, 871], "2121": 143, "subject": [143, 420, 727, 764, 1098], "rsaencrypt": 143, "modulu": [143, 202, 208, 218, 221], "b5": 143, "2d": [143, 195, 553, 1009], "5c": 143, "6f": [143, 928], "b0": 143, "95": [143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 1068, 1069], "f6": 143, "9e": 143, "9d": 143, "0d": 143, "bc": [143, 746, 870], "f5": 143, "6e": 143, "fe": [143, 419], "94": [143, 152, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 462, 463, 1068], "2b": [143, 872], "e6": 143, "b2": 143, "a0": [143, 871], "f8": 143, "7d": 143, "1c": 143, "2c": 143, "9f": 143, "4d": [143, 1009], "86": [143, 152, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 1068, 1069], "e3": [143, 456], "dd": [143, 797, 826, 1113], "7b": 143, "3f": 143, "aa": 143, "b8": 143, "a5": [143, 871], "d5": 143, "0b": 143, "81": [143, 152, 154, 166, 176, 181, 183, 189, 192, 194, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 942, 966, 1068, 1069], "d1": [143, 215, 278, 610], "e8": 143, "dc": [143, 437], "c5": 143, "d2": [143, 215, 278, 610], "c2": [143, 440, 554, 639], "0a": [143, 339], "a1": [143, 205, 250, 1021], "e1": [143, 193, 206, 456, 636, 1091], "89": [143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 411, 870, 871, 872, 942, 1068, 1069], "4c": 143, "4a": 143, "77": [143, 166, 174, 176, 181, 183, 185, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 307, 310, 315, 1068, 1069], "a9": 143, "68": [143, 166, 171, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 302, 305, 848, 1068, 1069], "b6": 143, "a8": 143, "9b": 143, "d8": 143, "7f": [143, 872], "e2": [143, 193, 206, 456, 636, 1091], "a3": 143, "79": [143, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315, 1068, 1069], "f4": 143, "96": [143, 152, 166, 176, 181, 183, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 411, 941, 942, 1068, 1069], "4f": [143, 1009], "1d": 143, "7e": 143, "4e": 143, "0e": 143, "d9": 143, "8c": 143, "d3": [143, 610], "c8": 143, "f7": 143, "8e": 143, "d6": 143, "3b": 143, "1e": 143, "4b": [143, 872, 928], "5e": [143, 995], "5f": 143, "7c": 143, "expon": [143, 995], "65537": 143, "0x10001": 143, "x509v3": 143, "98": [143, 152, 166, 176, 183, 189, 192, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 536, 573, 942], "0c": [143, 872], "keyid": 143, "c0": 143, "8f": 143, "b1": 143, "b7": 143, "9a": 143, "fa": 143, "7a": 143, "df": [143, 169, 285, 419], "a6": 143, "c9": 143, "76": [143, 166, 176, 181, 183, 189, 192, 194, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315, 430, 431, 695, 1021, 1068, 1069], "f0": 143, "b4": 143, "f9": 143, "eb": 143, "f1": 143, "6c": [143, 872], "2f": [143, 335, 1009], "5a": 143, "e0": 143, "d0": 143, "93": [143, 152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 305, 1068], "8d": 143, "2a": 143, "fc": [143, 436, 437], "1a": 143, "b9": 143, "cb": [143, 600], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 143, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 143, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 143, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 143, "wl72mzqr": 143, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 143, "hmszvaowukuzi2kflrpvc": 143, "79gwnr4": 143, "jc": 143, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 143, "valspcvotvjdokib4eyxnavjbdjdldd": 143, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 143, "nb3kgq7zt5ym": 143, "b8ce2f": 143, "ettmprmfi94x": 143, "7i5tuqrbsylistict": 143, "rf1kw6": 143, "zuzvmwyow9cyzwc5rar": 143, "ys0exg3v": 143, "hyjl7vaxa23rb": 143, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 143, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 143, "dz1idzapbgnvhrmbaf8ebtadaqh": 143, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 143, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 143, "xra": 143, "kdtflvc7uuvwtp": 143, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 143, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 143, "yqfvxbjphkw": 143, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 143, "ahemjzbycfiiq65b5x": 143, "y7aq": 143, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 143, "rk": 143, "b3lljngstu2g": 143, "mokutil": 143, "mokmanag": 143, "bloodi": [143, 937, 1077], "fan": [143, 165, 169, 195, 219, 1064], "highest": [143, 202, 208, 218, 221, 267, 362, 407, 871, 927], "rate": [143, 165, 225, 284, 399, 785, 924], "melt": 143, "7390": [143, 208], "cross develop": 144, "raspberry pi": [144, 863, 864, 865, 866, 867, 870, 871, 872], "crosstool-ng": 144, "c++": [144, 146, 1117, 1118, 1119, 1121], "sadli": [144, 195, 401, 735, 870, 904, 907, 941, 963], "linaro": [144, 719, 862, 950, 951], "libstdc": [144, 952, 954], "unsatisfi": 144, "libpthread": [144, 943], "feedback": [144, 160, 163, 172, 173, 174], "thankfulli": 144, "gperf": [144, 954], "flex": [144, 746, 870, 954], "texinfo": [144, 954], "help2man": [144, 954], "libtool": [144, 954], "ncurs": [144, 739], "unzip": [144, 767, 954], "rsync": [144, 954], "diffutil": 144, "libncurses5": [144, 954], "gawk": [144, 954], "util": [144, 151, 172, 434, 440, 459, 473, 588, 643, 646, 648, 954, 961, 1093], "ct": [144, 954], "zlib": [144, 954], "extra": [144, 166, 176, 202, 368, 429, 521, 692, 766], "prior": [144, 792, 808, 833, 870, 940, 956, 1010], "bootstrap": [144, 954, 1100], "latest": [144, 722, 737, 743, 1093], "yann": 144, "morin": 144, "warranti": [144, 185, 307], "merchant": 144, "chosen": [144, 422, 863, 870, 872, 898, 902, 922, 926, 1070, 1083], "rpi3": 144, "armv7": 144, "rpi2": 144, "23179": 144, "libc": [144, 940, 957], "glibc_2": [144, 940], "ldd": [144, 423, 425, 957], "0xb6e06000": 144, "invok": [144, 174, 193, 206, 296, 301, 437, 539, 551, 610, 640, 919, 941, 978, 990, 991, 1016, 1091], "rpt2": 144, "rpi1": 144, "deb10u1": 144, "quirk": [144, 863], "werror": [144, 343, 356, 399, 422, 734, 735, 1107], "behind": [144, 184, 356, 407, 437, 459, 569, 766, 881, 940, 983, 1081], "glibcxx_3": 144, "libgcc_": 144, "downgrad": 144, "cmake_find_root_path": [144, 941], "cmake_sysroot": [144, 941], "viewpoint": 144, "bye": [144, 663, 667, 669, 670, 671, 1077], "relocat": 144, "pack": [144, 148, 194, 492, 513, 792, 826, 864, 866], "fragil": 144, "sdk": 144, "buildroot": 144, "encount": [144, 173, 221, 225, 871, 872, 898], "ct_prefix": 144, "categori": [145, 157, 419, 1066], "crosstool": [145, 249, 719, 862, 941, 943, 950, 951, 952], "1399": 145, "dell": 145, "xp": [145, 417], "grintovec": [145, 200], "plan\u0161arsko": 145, "jezero": 145, "\u010de\u0161ka": [145, 200], "ko\u010da": [145, 200], "traunstein": [145, 169, 328], "zierlersteig": [145, 169], "bigbluebutton": [145, 149, 1112], "deploi": [145, 173, 310, 315, 435, 756, 793, 794, 871, 872, 877, 879, 883], "consumpt": 145, "buildmanag": 146, "embeddedentwicklung": 146, "anpassungen": 146, "paketen": 146, "rootfilesystem": [146, 943], "dient": 147, "vermarktung": 147, "referenz": [147, 236], "kursteilnehm": [147, 328], "beendigung": 147, "entstandenen": 147, "zur\u00fcckgreifen": 147, "finden": [147, 151, 160, 1112], "sofern": 147, "kund": [147, 160], "w\u00fcnscht": 147, "abstufungen": 147, "\u00f6ffentlichkeit": [147, 1129], "besprochen": 147, "hierbei": 147, "anwendung": [147, 1134], "g\u00e4nzlich": 147, "abgesehen": 147, "ausdr\u00fccklich": 147, "zustimmt": 147, "namen": [147, 166, 176, 225, 285, 854, 1136], "individuen": 147, "prinzipiel": 147, "erw\u00e4hnt": [147, 160], "erlaubni": 147, "sollten": [147, 215, 253], "vorgehen": [147, 233, 1129, 1136], "anbietet": 147, "nie": [147, 156, 168, 328, 1117], "zug\u00e4nglich": 147, "onlinekursen": 147, "m\u00f6glichkeit": [147, 150, 168, 1115, 1134, 1135], "\u00fcbungsmateri": 147, "zustimmen": 147, "einzeln": [147, 160], "keinesfal": 147, "ver\u00f6ffentlicht": 147, "verschiedenst": 147, "m\u00f6glichkeiten": [147, 160, 1131, 1134], "entstanden": [147, 160, 168], "nichtsdestotrotz": [147, 1115], "verf\u00fcgung": [147, 166, 1117, 1134], "accompani": [148, 169, 258, 260, 1067, 1123], "privaci": [148, 165, 169, 170], "guidelin": [148, 165, 284, 872], "certainli": [148, 898], "redhat": [148, 270, 413], "gitk": [148, 826], "traine": [148, 175], "visibl": [148, 174, 194, 260, 296, 343, 345, 347, 371, 373, 404, 405, 409, 414, 415, 479, 628, 719, 737, 870, 872, 934, 1005, 1033, 1073], "suppos": [148, 169, 225, 295, 459, 744, 766, 783, 805, 863, 911, 1058, 1098], "respositori": [148, 160], "user1": 148, "user2": 148, "user3": 148, "untrack": 148, "beast": 148, "similarli": 148, "unstag": 148, "accident": [148, 550, 682, 750, 793, 794, 833, 897, 1005], "7434a5b": 148, "100755": 148, "cowork": 148, "employ": [148, 417], "favourit": 148, "forward": [148, 211, 237, 238, 239, 248, 269, 270, 291, 348, 363, 372, 378, 379, 385, 389, 392, 396, 405, 409, 414, 415, 600, 637, 644, 675, 685, 716, 718, 719, 766, 826, 850, 858, 862, 863, 873, 878, 1118], "enumer": [148, 154, 156, 166, 172, 177, 178, 182, 184, 190, 191, 193, 214, 218, 223, 229, 243, 247, 264, 267, 286, 352, 399, 419, 636, 727, 762, 872, 1128], "unpack": [148, 152, 172, 178, 182, 184, 189, 193, 197, 202, 205, 210, 214, 215, 221, 226, 228, 232, 233, 244, 249, 251, 254, 263, 267, 285, 295, 310, 689, 766, 792, 864, 866, 870, 941, 948, 954, 955, 994, 1012, 1118], "869": [148, 208], "124": [148, 152, 166, 173, 176, 183, 189, 192, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 1021], "kib": 148, "a4b9666": 148, "bf5bb75": 148, "went": [148, 169], "retri": [148, 884, 983, 1093], "noon": [148, 926, 1014], "lack": [148, 397, 422, 494, 628, 630, 872, 952], "unavoid": 148, "her": [148, 152, 177, 221, 224, 630, 801, 822, 1030, 1072, 1128], "confid": 148, "merg": [148, 194, 768, 926, 1012, 1130], "gentl": [149, 1119], "histori": [149, 157, 193, 211, 237, 238, 240, 242, 291, 356, 633, 637, 639, 675, 716, 718, 719, 725, 768, 797, 803, 854, 1064, 1070, 1076, 1120, 1124, 1131], "tinker": 149, "solder": 149, "sysv": [150, 941], "grace": [150, 262, 702], "sigterm": [150, 937, 938], "sigkil": 150, "beeinflussen": 150, "shutdown": [150, 205, 221, 228, 231, 246, 253, 263, 267, 318, 744, 857, 934, 972], "herausgefunden": [150, 156, 328], "nachfolgend": [150, 1113], "manpag": 150, "verhindern": 150, "genehm": 150, "systemd": [150, 205, 221, 228, 231, 246, 253, 263, 267, 766, 804, 857, 872, 937, 1113], "inhibit": [150, 635, 673], "children": [150, 411], "vererbt": 150, "attributen": 150, "setprior": 150, "execv": [150, 895, 940], "sched_reset_on_fork": 150, "ORed": 150, "privileg": [150, 205, 221, 228, 231, 246, 253, 263, 267, 822, 857], "playback": 150, "prevent": [150, 153, 202, 208, 211, 218, 221, 249, 393, 399, 403, 803, 892, 897, 926, 937, 963, 975, 1005], "evad": 150, "rlimit_rttim": 150, "getr": 150, "anstel": 150, "prozessen": 150, "teilen": 150, "prozess": [150, 311, 1122, 1124, 1131, 1132, 1135], "startenden": 150, "gestarteten": 150, "weitergegeben": 150, "ausser": [150, 177, 305, 1128], "unterbunden": 150, "pthread_attr_setinheritsch": 150, "pthread_inherit_sch": 150, "pthread_explicit_sch": 150, "newli": [150, 399], "sowa": [150, 156, 328, 1113], "\u00e4hnlich": [150, 181], "wikipedia": [150, 211, 407, 550, 872, 883, 927, 959, 1077], "filter_driv": 150, "offenbar": [150, 166, 328, 1115], "miser": [150, 588], "netzwerkdrivern": 150, "hoher": 150, "interruptlast": 150, "verbessern": 150, "n\u00f6tig": [150, 1124], "diesbez\u00fcglich": 150, "\u00fcberlegt": 150, "schaltet": 150, "netzwerkdriv": 150, "30107": 150, "linuxfound": 150, "workgroup": 150, "napi": [150, 180, 760], "implementationen": 150, "libmodbu": 150, "freemodbu": 150, "konfiguriert": [150, 151], "jumbo": 150, "jumbo_fram": 150, "mtu": [150, 865], "1500": [150, 208], "eth0": 150, "9000": [150, 208], "ifconfig": [150, 760], "abgelegt": 150, "konfigur": [150, 152], "ifac": [150, 462, 476, 699], "vorsicht": [150, 176, 854], "routern": 150, "fragmentieren": 150, "tracerout": 150, "netzwerkverbindung": 150, "g\u00fcte": 150, "wissen": [150, 328, 1115, 1122], "sar": 150, "sysstat": 150, "schmerzvol": 150, "netter": 150, "ausprogrammiert": 151, "konflikt": [151, 1130], "parallelen": [151, 1134], "demonstr": [151, 153, 173, 245, 489, 538, 1066, 1070, 1110], "mutter": [151, 328, 329, 1134], "aller": [151, 160, 328, 329, 1113, 1134], "danach": [151, 1112], "hilf": [151, 176, 310, 315, 1124], "gefixt": 151, "kommunk": 151, "variablen": [151, 152, 177, 178, 181, 184, 189, 217, 235, 236, 302, 305, 311, 1114, 1124, 1125, 1128], "frontal": 151, "vorgef\u00fchrt": 151, "diskuss": [151, 160, 182, 328], "dank": [151, 156, 328, 1113], "beispielcod": 151, "h\u00e4ndisch": [151, 1116], "zweier": [151, 177, 1128], "bewundern": 151, "k\u00f6nnt": 151, "euch": 151, "erinnern": [151, 328], "blinken": 151, "liess": 151, "irgendwo": [151, 225], "hatten": [151, 156, 328], "edg": [151, 195, 748, 906, 907], "kleinen": 151, "empf": 151, "unbedingt": [151, 166, 1113], "beispielprogramm": 151, "horcht": 151, "gesprochen": 151, "ausf\u00fchrlich": [151, 236], "schamlos": 151, "eigenwerbung": 151, "\u00fcberbleibsel": 151, "ehemaligen": 151, "socketcan": [151, 864, 865], "absorbiert": 151, "worden": [151, 160, 1113], "enth\u00e4lt": [151, 166], "schnuckelig": 151, "aufzeichnen": 151, "replai": [151, 865], "folien": [151, 160, 168, 1112], "freitag": [151, 1113], "kerneldrivertag": 151, "sorri": [151, 157, 805], "emanuel": 151, "beispieldriv": 151, "han": 151, "findet": 151, "angeboten": [151, 1112], "promin": [151, 692, 762], "implementiert": [151, 166, 197, 1122, 1136], "gute": [151, 168, 1122, 1129], "anfang": [151, 152, 160], "mcp2515": [151, 766], "angesprochen": [151, 168], "fortgeschrittener": [151, 168], "einpflegt": 151, "agiert": 151, "mcp251x": 151, "at91": 151, "soc": [151, 870, 871, 872, 906], "deinem": 151, "stecker": 151, "verbaut": 151, "at91_can": 151, "lacht": 151, "zeilenweisen": 152, "nutzdaten": [152, 205], "extrahieren": [152, 179], "wollend": [152, 1129], "spalt": 152, "offensichtlich": [152, 1116], "separiert": 152, "felder": 152, "antwort": [152, 253], "stdtype": 152, "gscheitesten": 152, "aufeinanderfolgend": 152, "whitespac": [152, 213, 221, 267, 341, 1010, 1033, 1089], "nimmt": [152, 177, 189, 213, 215, 221, 253, 1115, 1128], "tupl": [152, 165, 170, 172, 174, 178, 182, 184, 190, 191, 193, 197, 200, 203, 204, 206, 207, 209, 210, 214, 216, 217, 218, 223, 226, 229, 230, 232, 242, 244, 247, 250, 251, 254, 264, 266, 268, 272, 273, 285, 295, 310, 466, 968, 986, 987, 994, 995, 1000, 1009, 1012, 1041, 1064, 1085, 1086, 1118], "weiss": [152, 156, 166, 285, 1131, 1136], "rauskommen": 152, "aaa": [152, 213, 225, 231, 267], "tbbb": 152, "tccc": 152, "feld0": 152, "feld1": 152, "feld2": 152, "ccc": [152, 231], "optional": [152, 1115], "splittet": 152, "bearbeitet": [152, 1135], "manuel": [152, 176, 181], "ddd": 152, "eee": 152, "maxsplit": [152, 221, 267, 419], "restfield": 152, "len": [152, 153, 154, 156, 166, 176, 181, 183, 184, 189, 192, 193, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 274, 285, 302, 305, 419, 762, 866, 967, 980, 993, 995, 1001, 1003, 1010, 1012, 1014, 1015, 1059, 1077, 1081, 1085, 1088], "10101010": 152, "switchnumb": 152, "rsplit": [152, 221, 267, 419, 1010], "l1": [152, 155, 166, 183, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 457], "l2": [152, 155, 166, 183, 189, 192, 197, 202, 205, 208, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285], "\u00e4nderung": [152, 166, 1136], "87": [152, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 1021, 1068, 1069], "zeigen": [152, 853], "dasselb": 152, "objekt": [152, 166, 176, 267], "140070310441600": 152, "ver\u00e4ndert": 152, "91": [152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 1068, 1069], "140070371015728": 152, "92": [152, 153, 176, 181, 183, 185, 189, 192, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 310, 315, 850, 1068, 1069], "attributeerror": [152, 166, 202, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 963, 976, 977, 984], "gottseidank": 152, "alternativ": 152, "aufruf": [152, 166, 172, 176, 221, 306], "paaren": 152, "keyerror": [152, 155, 166, 176, 183, 192, 202, 205, 208, 213, 215, 218, 221, 228, 231, 243, 246, 253, 263, 267, 273, 285, 305, 963, 1012, 1086], "nix": [152, 153, 166, 184, 192, 213, 215, 218, 243, 263, 305, 495], "umstaendlich": 152, "102": [152, 166, 176, 181, 183, 189, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 305, 310, 315], "103": [152, 166, 176, 183, 189, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305], "104": [152, 154, 166, 176, 181, 183, 189, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 1021], "106": [152, 166, 176, 181, 183, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305, 848], "setdefault": [152, 193, 213, 228, 243, 246, 253, 263, 267, 273, 285, 1012], "107": [152, 166, 176, 181, 183, 185, 189, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 305, 307, 406], "meinvoelligsinnlosertyp": 152, "sinnlose_addit": 152, "sinnlobj": 152, "112": [152, 166, 173, 176, 181, 183, 189, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 250, 253, 263, 267, 273, 285, 305, 848], "113": [152, 166, 176, 181, 183, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 250, 253, 263, 267, 273, 285, 442], "__main__": [152, 156, 166, 171, 189, 192, 202, 205, 206, 208, 213, 215, 218, 221, 225, 228, 231, 234, 246, 253, 263, 267, 273, 285, 305, 310, 964, 967, 971, 977, 985, 1093, 1099], "0x7f64a8934890": 152, "114": [152, 154, 166, 176, 183, 189, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "115": [152, 166, 176, 181, 183, 189, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "116": [152, 166, 176, 183, 189, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "nochwenigersinnvol": 152, "der_absolute_unsinn": 152, "super": [152, 168, 169, 176, 190, 192, 193, 208, 216, 219, 223, 242, 246, 257, 266, 456, 961, 963, 980, 1064, 1071], "unsinn": 152, "uebertreibs_jetzt_bitt": 152, "117": [152, 166, 176, 183, 189, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "118": [152, 166, 176, 183, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 848, 1021], "0x7f64a894a790": 152, "119": [152, 166, 176, 183, 185, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 307], "121": [152, 154, 166, 176, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "1335": 152, "122": [152, 154, 166, 176, 181, 183, 189, 192, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 942], "819508": 152, "123": [152, 166, 176, 183, 184, 189, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 352, 865, 1021, 1028, 1099], "uptim": 152, "timedelta": [152, 171, 198, 200, 253], "358": [152, 208, 253, 267, 285, 413], "125": [152, 176, 181, 183, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "irgendwann_einmal_gewesen": 152, "834972": 152, "126": [152, 166, 176, 181, 183, 189, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "datetime_from_batteri": 152, "840837": 152, "127": [152, 166, 176, 181, 183, 189, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 881, 889], "846889": 152, "woher": [152, 215], "ausschauen": 152, "sinnlo": [152, 215], "sinnlos": [152, 189, 267], "repraesent": 152, "129": [152, 166, 176, 183, 185, 192, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 307], "130": [152, 166, 176, 183, 198, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 257, 263, 267, 273, 285, 635, 739, 1008], "completedprocess": [152, 221, 231], "returncod": [152, 221, 231], "erfolgreich": 152, "beendet": [152, 1134], "schau": 152, "du": [152, 166, 221, 228, 234, 889, 894], "verwendest": 152, "anzuzeigen": 152, "cell": [152, 165, 863, 988, 1069], "gesendet": 152, "ausf\u00fchrt": 152, "krieg": 152, "131": [152, 166, 176, 183, 192, 198, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 685], "capture_output": [152, 231], "ndrwxrwxr": [152, 231], "mar": [152, 221, 352, 793, 794, 797, 811, 823, 845, 848, 850, 874, 888, 898, 940, 943, 952], "2607": 152, "33768": 152, "ndrwxr": 152, "xr": [152, 430, 793, 794, 811, 813, 814, 822, 823, 848, 863, 870, 871, 872, 940, 952, 954, 955, 991], "switchzeug": 152, "keiner": [152, 166, 285, 1117], "seinen": [152, 166], "formuliert": [152, 160], "logisch": [152, 176], "irgendwa": [152, 198, 213, 215], "konverti": 152, "musst": 152, "dich": 152, "festlegen": 152, "133": [152, 166, 176, 183, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "stdout_as_utf8": 152, "utf": [152, 193, 202, 205, 206, 208, 212, 218, 221, 231, 253, 267, 273, 285, 995, 1014, 1061, 1091], "134": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 694], "135": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "drwxrwxr": [152, 231, 848, 906, 941, 942, 943, 952, 954], "drwxr": [152, 793, 794, 811, 848, 863, 870, 871, 872, 952, 954], "136": [152, 154, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 431], "fuer": [152, 213, 218, 225], "listdir": [152, 259, 263, 317, 419], "ipynb_checkpoint": [152, 231], "gitignor": [152, 420, 942], "137": [152, 163, 166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "rekurs": 152, "iterieren": [152, 156, 166, 181, 189], "dirpath": 152, "dirnam": [152, 205, 208, 259, 419, 494, 717, 1098], "checkpoint": [152, 202, 208, 218, 221], "itg": 152, "scope": [152, 160, 166, 177, 178, 181, 212, 224, 237, 238, 240, 249, 261, 272, 283, 287, 291, 310, 347, 353, 457, 507, 527, 540, 542, 551, 636, 677, 689, 692, 707, 708, 718, 719, 962, 1007, 1118, 1128, 1132], "getter": [152, 548, 596], "setter": [152, 192, 984], "fibo": [152, 153, 172, 192, 206, 663, 665, 967], "listcomprehens": 152, "generatorexpress": [152, 153], "switchdb": 152, "schema": [152, 233, 537, 1020], "michi": 152, "pyexec": 152, "ifadminstatu": 152, "ifdescr": 152, "iflastchang": 152, "snmpenginetim": 152, "ifoperstatu": 152, "fein": [152, 176], "helferlein": 152, "hochtrabend": 152, "nennt": 152, "funktional": 152, "138": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 1021], "139": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "140": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 263, 267, 273, 285, 635], "l_quadrat": 152, "141": [152, 166, 176, 183, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 352, 848], "kompliziert": [152, 166, 218, 221, 243, 1113, 1132], "anm": 152, "versionen": [152, 222], "aufgebaut": 152, "rausnehmen": 152, "konfigurationsfil": 152, "configpars": 152, "142": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 250, 263, 267, 273, 285, 883, 928], "143": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "liste_als_str": 152, "144": [152, 166, 176, 183, 192, 199, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 431], "145": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 1082], "herbert": 152, "146": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "heraussen": 152, "147": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 801], "148": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 554], "149": [152, 166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "151": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 317], "152": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 317], "mein_dict": 152, "gerhard": 152, "175": [152, 166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 267, 273, 285], "154": [152, 166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285, 848], "dict_as_json_str": 152, "155": [152, 166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 317], "gelesenes_dict_von_json": 152, "nahm": 153, "woch": [153, 173, 328, 329, 1113], "anspruch": 153, "platz": 153, "gesammelten": 153, "notizen": 153, "schnell": [153, 156, 176, 197, 222, 1116], "sachen": [153, 179], "is_prim": [153, 176, 179, 184, 1043], "divisor": [153, 184, 717, 1035], "unmodifi": [153, 166, 202, 213, 440, 491, 537, 551, 870, 872, 963, 976, 1046], "randomnumb": 153, "howmani": 153, "randrang": [153, 181, 205, 213, 215, 218, 221, 225, 228, 231, 253, 305, 964, 999], "prev": [153, 756], "cur": [153, 273, 357], "fibonum": 153, "tend": [153, 252, 255, 262, 407, 739, 805, 955], "input_list_str": 153, "input_list": [153, 228, 1046], "__n": 153, "__lt__": [153, 215, 218, 221, 225, 243, 246, 267, 285], "rh": [153, 202, 206, 221, 345, 387, 403, 457, 471, 537, 551, 553, 677], "__le__": [153, 215, 218, 221, 225, 243, 246, 267, 285, 983], "__eq__": [153, 215, 218, 221, 225, 243, 246, 267, 285, 983], "__iadd__": 153, "iadd": 153, "__add__": [153, 218, 221, 225, 243, 267, 285, 983], "new_numb": [153, 208], "__radd__": [153, 218, 225, 243, 983], "radd": 153, "lh": [153, 202, 206, 345, 387, 403, 457, 471, 527, 537, 551, 553, 677, 797], "makesnosens": 153, "__number": 153, "input_numb": 153, "numnber": 153, "list_of_squar": 153, "shorter": [153, 971, 982, 1014, 1063], "compehens": 153, "effort": [153, 225, 259, 400, 401, 418, 871], "local_assign": 153, "read_global_vari": 153, "enclos": [153, 221, 370], "local_shadows_glob": 153, "explicit_global_assign": 153, "creation": [153, 262, 284, 701, 703, 708, 718, 719, 825, 862, 892, 903, 908, 917, 923, 934, 943, 1005, 1014, 1015, 1100], "captur": [153, 236, 237, 238, 240, 260, 291, 295, 310, 675, 676, 679, 718, 719, 863, 959, 1118], "create_funct": 153, "inner_funct": 153, "whic": 153, "f_one": 153, "f_two": 153, "launch": [153, 169], "somewhat": [153, 194, 407, 440], "discov": [153, 165, 172], "area": [153, 162, 195, 225, 762, 871, 1129, 1135], "scikit": [154, 156, 203, 1100], "manipul": [154, 422, 571, 694, 717, 764, 870, 883, 892, 927, 939, 1002, 1020], "appreci": [154, 205, 805, 1021], "beauti": [154, 168, 169, 172, 190, 192, 193, 200, 211, 215, 216, 219, 225, 242, 266, 310, 383, 513, 571, 908, 965, 1014, 1021, 1064], "spectral": [154, 1066], "mat": 154, "scipi": [154, 156, 184, 203, 1100], "loadmat": [154, 156], "sklearn": [154, 156, 1067, 1069, 1100], "pixel": 154, "rgb": [154, 156, 319], "dimens": [154, 156, 1069, 1121], "xkcd": 154, "schafer": [154, 165, 168, 169, 172, 190, 193, 200, 203, 206, 216, 219, 230, 233, 242, 266, 272, 310, 315, 1064, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1101], "keith": [154, 165, 169, 190, 203, 216, 230, 233, 266, 272, 1064], "galli": [154, 165, 169, 190, 203, 216, 230, 233, 266, 272, 1064], "sci": 154, "kit": [154, 319], "spyder": [154, 165, 988], "pycharm": [154, 165, 259, 988], "retain": [154, 376, 1006], "invoc": [154, 457], "comparison": [154, 171, 194, 208, 211, 221, 229, 267, 352, 356, 362, 513, 677, 997, 1039], "misfeatur": 154, "png": [154, 156, 426, 942, 1066], "imgfil": 154, "veggi": [154, 156, 1066], "pillow": [154, 156], "welcom": 154, "cooper": [154, 702], "477x686": 154, "imgarrai": [154, 156], "ndim": [154, 1069], "477": [154, 208, 253], "dtype": [154, 156, 250, 253, 257, 1069, 1082, 1083, 1085, 1086, 1087, 1088], "uint8": 154, "255": [154, 189, 205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 285, 919], "172": [154, 166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 402], "nrow": [154, 156], "ncol": [154, 156], "reshap": [154, 156, 190, 203, 216, 230, 233, 266, 272, 1064, 1067, 1069], "irrelev": [154, 171, 176, 209, 352, 394, 417, 811, 995, 1077], "colorspac": 154, "mpl_toolkit": 154, "mplot3d": 154, "axes3d": 154, "pyplot": [154, 183, 202, 231, 234, 285, 960, 1018, 1069], "plt": [154, 183, 202, 231, 234, 285, 960, 1018, 1069], "fig": 154, "add_subplot": 154, "set_xlabel": 154, "set_ylabel": 154, "set_zlabel": 154, "ndindex": 154, "scatter": [154, 737], "rgb_linear": 154, "n_cluster": [154, 156], "copy_x": 154, "max_it": 154, "n_init": 154, "n_job": 154, "precompute_dist": 154, "random_st": [154, 1067, 1069], "tol": 154, "verbos": [154, 161, 422, 695, 792, 826, 828, 999, 1093], "cluster_cent": 154, "int32": [154, 403], "327222": 154, "cluster_centers_": [154, 156], "20529747": 154, "50360681": 154, "3796182": 154, "94408609": 154, "75471018": 154, "53133237": 154, "226": [154, 166, 185, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285, 307], "64913628": 154, "76939951": 154, "92569235": 154, "71464963": 154, "47333306": 154, "60640492": 154, "8888303": 154, "92275244": 154, "84313209": 154, "157": [154, 166, 176, 183, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "30685398": 154, "43988931": 154, "03959132": 154, "225": [154, 166, 205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 267, 273, 426, 1021], "55934051": 154, "182": [154, 166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 263, 267, 273, 285], "98255893": 154, "3232048": 154, "241": [154, 205, 208, 213, 215, 218, 221, 228, 231, 246, 263, 267, 273, 1021], "37322907": 154, "159": [154, 166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "54158234": 154, "51775529": 154, "idx": [154, 156, 221], "cube": 154, "concaten": [154, 156, 193, 205, 206, 213, 221, 267, 304, 352, 418, 851, 1000, 1008, 1091], "axi": [154, 156, 257, 1085, 1086], "reduced_img": [154, 156], "fromarrai": [154, 156], "float": [155, 166, 170, 172, 174, 176, 183, 184, 189, 192, 202, 205, 206, 208, 211, 213, 215, 218, 221, 226, 229, 243, 246, 251, 263, 267, 273, 284, 286, 305, 306, 333, 334, 335, 339, 349, 351, 352, 356, 386, 395, 400, 419, 447, 456, 562, 563, 652, 870, 928, 938, 976, 994, 1009, 1016, 1021, 1115, 1119], "franziska": [155, 156], "baseexcept": [155, 192, 221, 225, 246, 963], "callabl": [155, 169, 205, 218, 228, 231, 246, 253, 263, 267, 274, 635, 677, 699, 707, 977, 978, 1015], "forev": [155, 377, 378], "rescu": [155, 213, 550, 571, 693, 695, 766, 961], "pooh": [155, 563], "hex": [155, 166, 176, 183, 198, 208, 218, 231, 243, 246, 253, 263, 273, 305, 321, 494, 872, 1009], "0x7f03d41165f0": 155, "nonexist": 155, "react": [155, 170, 172, 174, 275, 399, 560, 870, 887, 963, 1120], "ensu": 155, "catch": [155, 195, 211, 234, 260, 295, 321, 466, 483, 500, 502, 535, 561, 564, 580, 586, 590, 595, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 663, 671, 709, 719, 938], "jessa": [155, 176, 183, 205, 234, 285], "verdammt": [155, 310], "ipython": [155, 192, 202, 208, 218, 221, 246, 263, 848], "bd3a1af9b474": 155, "issubclass": [155, 192, 208, 221, 246], "rais": [155, 156, 170, 172, 174, 192, 193, 202, 206, 208, 209, 213, 215, 218, 219, 221, 225, 233, 234, 267, 284, 295, 321, 961, 968, 974, 984, 1010, 1012, 1085, 1086, 1091], "bummer": [155, 208, 709, 1008], "peter": [155, 178, 215, 225, 301, 302, 1001], "paul": [155, 301, 302, 1001], "mari": [155, 1001], "pet": 155, "perfectli": [155, 211], "bloh": [155, 192], "blech": [155, 263, 648, 1080], "range_iter": [155, 166, 181, 198, 205, 213, 215, 218, 221, 231, 243, 246, 253, 263], "0x7f03d402e570": 155, "stopiter": [155, 166, 181, 192, 198, 202, 205, 208, 213, 215, 218, 221, 225, 231, 243, 246, 253, 263, 267, 273, 285, 663, 671, 963, 968], "beantwortung": [156, 328], "herrschaft": [156, 328], "gestellt": [156, 166, 328, 1117], "schulungsr\u00e4umen": [156, 328], "platzhirsch": [156, 328], "schlagen": [156, 328], "spass": [156, 328, 1122, 1124, 1129], "unglaublich": [156, 328], "lustig": [156, 177, 328, 1113, 1124], "vermittelt": [156, 328, 1134], "gelernt": [156, 328, 1122], "anwend": [156, 328], "beachten": [156, 177, 328, 1128], "zudem": [156, 328], "kursleit": [156, 328], "sympathisch": [156, 328], "kompet": [156, 328], "w\u00fcrde": [156, 166, 328], "weiterempfehlen": [156, 328], "wiederholen": [156, 328], "christoph": [156, 198, 328], "jemand": [156, 328], "lassen": [156, 166, 177, 328, 1116, 1122, 1128, 1132, 1136], "bevor": [156, 1122, 1129, 1136], "anf\u00e4ngerthemen": 156, "vorbei": [156, 215, 221, 1125], "herumzureiten": 156, "gehackt": [156, 196], "zeug": [156, 285, 1131], "chef": 156, "vorgespr\u00e4ch": 156, "\u00fcbungsbeispiel": [156, 166], "mitgegeben": 156, "ausgehend": [156, 177, 328], "spektralbild": 156, "sagt": [156, 213], "verwend": [156, 189, 328], "clusteringalgorithmu": 156, "kategorisieren": 156, "abgebildeten": 156, "st\u00fccke": [156, 160], "erkennen": [156, 1117], "hab": 156, "erlaubt": [156, 166, 1113], "kursvorbereitung": 156, "appet": 156, "reduzieren": 156, "farbredukt": 156, "farben": 156, "bilddaten": 156, "interoperiert": 156, "nahtlo": [156, 1122, 1129], "zufal": [156, 182, 1116], "alpha": [156, 221, 267, 1019], "ausgangsbild": 156, "abzuschneiden": 156, "restoren": 156, "algorithmu": [156, 176, 221, 225, 228], "reduc": [156, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 435, 637, 675, 716, 718, 719, 872, 1066], "acht": [156, 176, 177, 221, 253, 273, 1128], "\u00fcberschaubar": 156, "ausdrucksst\u00e4rk": 156, "bemerkbar": 156, "wegschneiden": 156, "pil": 156, "kmean": 156, "nrgba": 156, "disregard": [156, 356], "arbitrarili": [156, 725, 898, 902, 961], "linear_rgb": 156, "rgba": 156, "ergeben": 156, "testprogramm": 156, "imndata": 156, "teilzeitmitarbeiterin": 156, "studiert": 156, "folgendem": [156, 198, 1136], "bekackten": 156, "inputformat": 156, "parsen": [156, 181], "zwischendurch": 156, "gruppenarbeit": 156, "h2o": 156, "dat": 156, "mass": [156, 262], "0000000e": 156, "2662399e": 156, "5994910e": 156, "4391972e": 156, "0048070e": 156, "0078250e": 156, "hessian": 156, "hartre": 156, "bohr": 156, "kamu": 156, "05054e": 156, "61610e": 156, "00000e": 156, "20781e": 156, "08051e": 156, "83024e": 156, "06829e": 156, "42629e": 156, "65256e": 156, "52600e": 156, "69570e": 156, "91733e": 156, "04388e": 156, "34292e": 156, "04780e": 156, "63758e": 156, "19019e": 156, "41217e": 156, "11622e": 156, "21912e": 156, "11752e": 156, "04198e": 156, "36702e": 156, "14839e": 156, "71613e": 156, "96373e": 156, "40456e": 156, "21369e": 156, "24236e": 156, "60956e": 156, "84350e": 156, "29686e": 156, "92365e": 156, "einigen": [156, 177, 328], "runden": [156, 166], "nachdenken": 156, "einigerma\u00dfen": 156, "zufrieden": 156, "load_dat": 156, "matrix_lin": 156, "readlin": [156, 183, 185, 192, 193, 205, 206, 212, 221, 228, 253, 263, 302, 826, 1014, 1091], "vergeigt": 156, "matrix_el": 156, "unnecessari": [156, 347, 377], "triangular": 156, "max": [156, 166, 184, 189, 202, 208, 211, 213, 215, 218, 223, 228, 246, 361, 377, 513, 562, 803, 864, 1069], "row_no": 156, "__name__": [156, 192, 193, 206, 215, 221, 225, 246, 263, 267, 303, 310, 962, 964, 967, 971, 1091], "bildverarbeitung": 156, "ahnung": [156, 198], "beeeeeep": 157, "broad": [157, 436, 1071, 1118, 1119], "responsibl": [157, 925, 1098], "sane": [157, 321, 803, 1072, 1098], "interfer": [157, 407, 420, 871], "paradigm": [157, 802, 810, 863, 871, 1133], "breakag": [157, 746], "nontrivi": [157, 165, 169, 312, 988, 1092], "inappropri": [157, 334, 339, 440, 724], "conclus": [157, 165, 172, 764], "awkward": 157, "encourag": [157, 725], "hear": 157, "predat": [157, 729, 855, 934], "transport": [157, 209, 211, 492, 709, 1060, 1080], "doubt": [157, 202, 208, 218, 221, 225, 694, 995], "schulungsbeschreibung": [158, 1112], "drehbuch": 158, "workshop": 158, "infolgedessen": 158, "virtuel": [158, 222, 1122, 1132, 1133], "konzipiert": [158, 168, 328], "add_subdirectori": [159, 427, 431, 932, 1107], "group1": 159, "group2": 159, "montag": [160, 168, 169, 190, 194, 1113], "vorbereitung": [160, 328, 1115], "mitbringen": 160, "teilzunehmen": 160, "stattfinden": [160, 236], "folgt": 160, "hierzu": 160, "privatheitsrichtlinien": 160, "bauanleitung": 160, "ausprobieren": 160, "willkommen": 160, "schulungsbeschreibungen": 160, "raii": [160, 262, 535, 719], "stl": [160, 319, 383, 496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512, 535, 536, 574, 578, 600, 602, 603, 617, 632, 643, 719, 1117, 1118, 1119], "scott": [160, 642, 697], "meyer": [160, 445, 697], "primer": [160, 1105], "sonstig": 160, "argh": [160, 378, 629, 657, 963, 1093, 1105], "kursanforderung": 160, "erg\u00e4nzend": 160, "lasst": 160, "testgetrieben": 160, "testcas": [160, 1099], "aufgab": [160, 166, 196, 1125], "hacken": 160, "diskutieren": 160, "niederschrift": 160, "geschehenen": 160, "geh\u00f6renden": 160, "privaten": 160, "verl\u00e4uft": 160, "ansehen": 160, "clonen": 160, "wann": [160, 168], "zugeh\u00f6rigen": 160, "entspricht": 160, "unbetr\u00e4chtlich": 160, "gcc5": 160, "laufen": [160, 1113], "darau": [160, 168], "installationsanleitung": 160, "benutzung": [160, 310, 315], "zuerst": [160, 1136], "aggreg": [160, 408, 419, 537, 778, 1082, 1105], "klassen": [160, 166, 172, 311, 1117], "konstruktoren": [160, 184, 236, 311, 1117], "methoden": [160, 166, 178, 305, 1117], "referenzen": [160, 166, 177, 178, 236, 1117, 1128], "klass": [160, 189, 285], "\u00e4quival": 160, "\u00fcbergab": 160, "langsam": [160, 166, 215], "ausbauen": 160, "dynmem": 160, "demonstrieren": 160, "alloziert": [160, 166, 183], "delet": [160, 172, 202, 221, 236, 246, 267, 305, 404, 435, 438, 477, 494, 503, 507, 519, 527, 542, 545, 604, 607, 612, 635, 645, 646, 647, 675, 680, 692, 693, 694, 695, 718, 719, 744, 774, 803, 1073, 1100, 1117, 1118], "konstruktor": 160, "destruktor": 160, "vermeiden": [160, 166, 1134], "dtor": [160, 435, 521, 607, 612, 643, 646, 680], "ausflug": [160, 176, 217], "capac": [160, 588], "\u00fcbung": [160, 177, 178, 1128], "handgestrickt": 160, "fallen": [160, 1116, 1117], "lustvol": 160, "erleiden": 160, "teufel": [160, 1116], "smart": [160, 236, 258, 311, 312, 313, 328, 417, 494, 604, 644, 645, 675, 695, 700, 708, 716, 718, 719, 1118, 1121], "shared_ptr": [160, 195, 211, 237, 238, 240, 258, 260, 291, 449, 513, 604, 635, 644, 675, 690, 696, 697, 700, 708, 716, 718, 719, 1118], "unique_ptr": [160, 195, 211, 237, 238, 240, 258, 260, 291, 435, 442, 449, 475, 476, 513, 604, 643, 644, 675, 690, 693, 700, 708, 715, 716, 718, 719, 1118], "demonstriert": 160, "vorgriff": 160, "sortieren": [160, 1117], "employeerecord": 160, "parametrisierbarem": 160, "koordinatentyp": 160, "102ff": 160, "arten": [160, 1115], "containern": 160, "pointerarithmetik": 160, "wiederholung": [160, 177, 184, 220, 1128], "iteratoren": [160, 223], "laufzeitverhalten": [160, 178], "verbesserungen": 160, "gegen\u00fcb": [160, 1115], "6ff": 160, "lambda": [160, 192, 193, 206, 208, 211, 223, 236, 243, 260, 263, 268, 285, 419, 513, 578, 650, 675, 680, 685, 687, 699, 702, 707, 718, 719, 959, 1117, 1118, 1119], "gegen\u00fcberstellung": 160, "sort_algorithm_reverse_lambda": 160, "vererbung": [160, 1117], "fallstudi": 160, "livegehackt": 160, "angebunden": 160, "komplex": [160, 213, 215, 221, 228, 253, 1134], "aufbauen": 160, "vergleichbaren": 160, "anbinden": 160, "wurden": [160, 168], "eigen": [160, 179, 1117, 1122, 1129, 1134, 1135], "kapitel": [160, 310, 315, 1115], "behandelt": [160, 1112], "vorbeigehen": 160, "dcmake_cxx_flag": 161, "dcmake_install_prefix": [161, 425], "libgtest": [161, 162, 258, 260, 1105, 1107], "claim": [161, 345, 554, 556, 557, 801, 894], "simlp": 161, "concret": [161, 169, 195, 258, 435, 442, 447, 462, 524, 610, 612, 707, 976, 1071], "find_packag": [161, 163, 1107], "add_execut": [161, 420, 426, 432, 478, 514, 517, 520, 523, 526, 529, 532, 626, 929, 936, 941, 942, 1104, 1107, 1109], "add_test": [161, 433, 517, 1104, 1107], "emphasi": [161, 291], "ultim": [161, 192, 212, 545, 710, 871], "luke": [161, 221, 1107], "thetoplevel": 161, "findgtest": [161, 163, 1107], "gtest_root": 161, "dgtest_root": 161, "paranoidli": 161, "bitrot": [162, 1107], "var": [162, 166, 205, 221, 228, 231, 246, 253, 263, 267, 471, 766, 798, 828, 848, 853, 854, 857, 954], "libgmock": [162, 258, 260], "gmock": [162, 1105], "dcmake_build_typ": [162, 422], "loudli": [162, 545, 769, 879], "flathub": 163, "appstream": 163, "visualstudio": [163, 222, 330], "flatpakref": 163, "stone": 163, "snap": 163, "hate": [163, 539], "textual": [163, 165, 492], "findpackagehandlestandardarg": 163, "gtest_librari": 163, "gtest_include_dir": 163, "gtest_main_librari": 163, "378": [163, 205, 208, 215, 253, 1021], "_fphsa_failure_messag": 163, "197": [163, 166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 246, 263, 267, 273, 285], "find_package_handle_standard_arg": 163, "occur": [163, 225, 337, 352, 357, 358, 404, 428, 511, 705, 764, 826, 855, 925, 1009, 1010, 1014, 1123], "gessmann": 163, "cpoint_demo": 163, "cmakefil": [163, 420, 426, 431, 941, 942], "cmakeoutput": 163, "sigh": [163, 195, 494, 697, 1055], "jail": 163, "dict_extensions_suit": 164, "thing_suit": 164, "xsv": 164, "dict_extens": 164, "wednesdai": [165, 173, 255], "thursdai": [165, 169], "publicli": [165, 527], "freedom": [165, 407, 613], "spontan": 165, "cost": 165, "agil": [165, 179, 417, 1092], "methodologi": 165, "formul": [165, 261, 419, 652, 710, 889, 1121], "diadact": [165, 988], "anaconda": [165, 259, 988], "dictat": [165, 275, 356, 395, 934, 988, 989, 1073, 1090, 1093, 1120], "volumin": [165, 988], "nodepad": [165, 988], "configurabilti": [165, 1090], "eclips": [165, 988, 1080], "pydev": [165, 988], "seemingli": [165, 169, 940, 988, 1064], "strang": [165, 870, 988], "emac": [165, 185, 263, 826, 848, 940, 988, 1090], "immutabilii": 165, "crisi": 165, "slept": 165, "lunch": 165, "squeez": 165, "Such": [165, 240, 244, 644, 675, 685, 691, 700, 708, 716, 718, 719, 940, 1098], "takeawai": 165, "nonverb": 165, "antenna": 165, "Being": [165, 809, 850, 872, 1004], "stubborn": 165, "greybeard": 165, "distutil": 165, "azur": 165, "devop": [165, 987], "heavyweight": [165, 316, 699], "reach": [165, 213, 619, 694, 725, 730, 797, 898, 1009], "afternoon": 165, "simplic": [165, 457, 797, 864, 887, 961], "paral": 165, "imposs": [165, 225, 403, 439, 663, 674, 764, 916], "expand": [165, 221, 267, 377, 378, 869, 898, 940, 942], "entertain": [165, 169, 190, 193, 216, 242, 266, 1064], "david": [165, 168, 169, 177, 190, 193, 216, 242, 257, 261, 262, 266, 283, 287, 311, 312, 643, 692], "beazlei": [165, 168, 169, 177, 190, 193, 216, 242, 261, 262, 266, 283, 287, 311, 312], "freelanc": 165, "raymond": [165, 168, 169, 172, 176, 177, 190, 193, 200, 216, 219, 242, 266], "hetting": [165, 168, 169, 172, 176, 177, 190, 193, 200, 216, 219, 242, 266], "bias": 165, "humor": [165, 870, 1009], "emphas": [165, 172, 194, 530, 721, 729, 746, 1093], "dissect": [165, 169, 257, 680, 968, 1064], "multiprocess": [165, 169, 219, 261, 262, 1064, 1122, 1129, 1133], "truli": [165, 169, 1064], "chri": [165, 169, 190, 1064], "wilcox": [165, 169, 190, 1064], "frontier": [165, 169, 242, 266, 1064], "whop": [165, 169, 242, 266, 955, 1064, 1071], "simul": [165, 316, 317, 494], "covid": 165, "apart": [165, 225, 262, 370, 636, 864, 966], "ipykernel_launch": [166, 218, 221], "57bd7d77": 166, "6e54": 166, "4dcd": 166, "b7a8": 166, "452f82f88569": 166, "welt": [166, 176, 189, 305, 328, 1113, 1134], "doku": [166, 176, 243], "aeh": 166, "__doc__": [166, 189, 192, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 267, 285, 303, 305, 964, 992, 1015], "interaktiven": 166, "modu": 166, "formatierung": [166, 176, 236], "\u00fcbernimmt": 166, "nachdem": [166, 176], "welch": [166, 206], "hamma": 166, "bieten": [166, 1132], "sech": [166, 176, 189, 221, 228, 253, 267], "zurueck": [166, 225, 263], "objektidentit\u00e4t": [166, 184], "0x7fe9d8578dc0": 166, "referenzieren": 166, "wechselt": 166, "zeigt": [166, 176, 1129], "identit\u00e4t": 166, "0x7fe9c4454d90": 166, "listen": [166, 172, 177, 178, 182, 217, 236, 310, 750, 865, 881, 1080, 1128, 1133, 1135], "ausdrucksstark": 166, "trotzdem": [166, 1122, 1129], "lesbar": [166, 215], "beid": [166, 181, 197, 1136], "modifizieren": 166, "modifik": 166, "sichtbar": [166, 328], "gerechnet": 166, "valueerror": [166, 176, 192, 198, 205, 213, 215, 218, 221, 225, 228, 231, 234, 246, 253, 267, 285, 963, 1010], "typeerror": [166, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 285, 304, 962, 963, 976, 983, 1006, 1015, 1086], "gel\u00f6scht": 166, "retten": 166, "uff": 166, "140641996429568": 166, "\u00e4ndern": [166, 178, 1136], "erzeugt": [166, 176], "operanden": 166, "unver\u00e4ndert": 166, "new_l": [166, 221, 996], "140641996429632": 166, "hurra": [166, 183, 246], "killerfeatur": 166, "abcabc": [166, 205], "sequentiel": [166, 176, 215, 220, 1117], "suche": 166, "Suche": [166, 178, 189, 197, 215], "umst\u00e4ndlich": [166, 176], "andrea": [166, 167, 225, 656, 663], "pfeifer": 166, "gefundener_us": 166, "glauben": 166, "klammern": 166, "begrenz": 166, "interpretiert": 166, "overriden": 166, "ausdruck": 166, "evaluierungsreihenfolg": 166, "9223372036854775808": 166, "einstellig": 166, "schreibt": [166, 854, 1136], "datenmengen": 166, "abzulegen": 166, "sucht": 166, "solchen": [166, 176], "vorstellungsvermoegen": 166, "milliarden": 166, "sebastian": 166, "hugo": [166, 208], "machma": 166, "behandeln": 166, "nichtvorhandensein": 166, "ausnahm": 166, "regel": 166, "mim": 166, "victor": 166, "festzustellen": 166, "evaluiert": 166, "aufgerufen": 166, "operand": [166, 183, 202, 205, 231, 354, 355, 356, 362, 553, 554, 556, 557, 652, 685, 983, 997], "bereit": [166, 177, 1112, 1117, 1128], "gesamtergebni": 166, "jaja": [166, 221], "rechten": 166, "sparen": 166, "potschert": [166, 178, 181, 184, 208, 215, 228], "berechnung": [166, 215], "summ": [166, 189, 215, 221, 225, 228, 253, 278], "einzig": [166, 463, 477, 1131, 1134], "iteriert": [166, 176], "bildet": [166, 221], "primitiveren": 166, "intelligenteren": 166, "0x7fe9c43c3c90": 166, "letzt": [166, 181, 226], "schleif": [166, 177, 178, 182, 1128], "jede": [166, 310, 315, 1112, 1135, 1136], "selb": [166, 176], "k\u00fcrzer": 166, "vergleicht": 166, "objektidentit\u00e4ten": 166, "objektinhalt": 166, "modifiziert": 166, "kopieren": [166, 310, 315, 1117], "vermeintlich": 166, "modifiktionen": 166, "sch\u00fctzen": 166, "l3": [166, 183, 215, 221, 231, 243, 253, 263, 273, 457], "kopi": [166, 215], "klar": [166, 176, 1113], "geschachtelt": [166, 177, 178, 1128], "gleicher": 166, "referenziert": [166, 176], "erachtet": 166, "ersparst": 166, "kopien": 166, "ran": [166, 238, 425, 442, 491, 492, 493, 494, 555, 694, 957, 1105], "parametern": [166, 189], "beliebigen": [166, 854], "definieren": 166, "vergleichbar": 166, "unterst\u00fctzen": 166, "ihn": [166, 225], "\u00e4pfel": 166, "birnen": 166, "verglichen": 166, "hingegen": [166, 176, 1131], "php": [166, 196, 212, 697], "falschem": 166, "uebergeben": 166, "vergleich": [166, 189, 197, 226, 236], "aepfeln": 166, "140641996137808": 166, "add_to_list": 166, "__defaults__": [166, 215, 225, 246, 267, 1006], "meine_list": [166, 176], "defaultwert": 166, "benutzt": [166, 1122], "allerhand": 166, "seiteneffekten": 166, "aufpassen": 166, "ewig": 166, "existierend": 166, "unf\u00e4ll": 166, "wechselwirkungen": 166, "eventuellen": 166, "globalen": [166, 176], "156": [166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "erzwingt": 166, "158": [166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 250, 263, 267, 273, 285], "160": [166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 243, 246, 257, 263, 267, 273, 285, 424, 719], "gesucht": 166, "genauer": 166, "n\u00e4chst\u00e4u\u00dferen": 166, "162": [166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "nirgend": 166, "163": [166, 176, 183, 199, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "gibtsnetglob": 166, "gibtsnet": 166, "164": [166, 176, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "nameerror": [166, 181, 215, 221, 246, 267, 273, 963, 1005], "aufgabenstellung": 166, "kandidat": 166, "ersten": [166, 168, 181, 273, 302, 1114, 1134, 1136], "unsportlich": 166, "zweiten": [166, 168, 273], "unnachhaltig": 166, "dritten": [166, 273], "gelegenheit": 166, "gab": [166, 168], "erz\u00e4hlen": [166, 1115], "165": [166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 1021], "seq": [166, 184, 246, 756, 928, 966], "fromkei": [166, 212, 217, 229], "166": [166, 176, 183, 205, 208, 213, 215, 221, 225, 228, 243, 246, 263, 267, 273, 285], "167": [166, 176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "xxx": [166, 183, 205, 213, 215, 221, 231, 253, 285, 304, 306, 386, 462], "kksvjhbsk": 166, "sgkysdudsvvc": 166, "dict_kei": [166, 234, 263, 1012], "diesmal": 166, "169": [166, 176, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 263, 267, 273, 285], "170": [166, 183, 192, 199, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "irgendein": [166, 198], "171": [166, 183, 185, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285, 307], "sonst": [166, 176, 213, 215, 228], "kategori": 166, "number_str": 166, "173": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 857], "ihm": [166, 168, 177], "174": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 263, 267, 273, 285, 848], "176": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 267, 273, 285], "177": [166, 183, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "178": [166, 183, 192, 205, 208, 213, 215, 221, 225, 228, 234, 243, 246, 263, 267, 273, 285], "179": [166, 173, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "180": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 419, 750], "181": [166, 183, 205, 208, 213, 215, 221, 225, 228, 243, 246, 253, 263, 267, 273, 285, 419], "heisst": [166, 178, 182, 183, 1116, 1122], "sequenz": 166, "kopiert": 166, "unterschi": [166, 183, 189, 213], "sobald": [166, 168], "183": [166, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "\u00fcbergeben": 166, "184": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285], "it1": 166, "it2": 166, "multipli": [166, 193, 206, 225, 267, 642, 1091], "n2": [166, 225], "combined_iter": 166, "186": [166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "schlecht": 166, "simplen": 166, "transformationen": 166, "generieren": 166, "quadratzahlen": [166, 215], "187": [166, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285], "quadrat": 166, "naeherung": 166, "performant": 166, "gen_squar": 166, "189": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 263, 267, 273, 285], "syntaktisch": [166, 189], "191": [166, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 234, 243, 246, 263, 267, 273, 285], "genexpr": [166, 192, 285], "0x7fe9c43f2900": 166, "193": [166, 183, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "194": [166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 267, 273, 285], "195": [166, 183, 205, 208, 213, 215, 218, 221, 225, 228, 234, 246, 267, 273, 285], "indent": [166, 181, 199, 206, 212, 221, 222, 365, 986, 989, 999, 1089], "196": [166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 243, 246, 253, 263, 267, 273, 285], "userlist": 166, "nochwa": [166, 215, 253], "dropdown": 166, "dropdownlist": 166, "fehleranf\u00e4llig": 166, "198": [166, 183, 192, 205, 208, 213, 215, 218, 221, 225, 228, 234, 246, 253, 263, 267, 273, 285], "202": [166, 183, 192, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 267, 273, 285, 419, 442], "203": [166, 183, 192, 194, 205, 208, 213, 215, 218, 221, 225, 228, 243, 246, 267, 273, 285], "205": [166, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "206": [166, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 267, 273, 285], "207": [166, 192, 205, 208, 213, 215, 221, 225, 228, 231, 246, 267, 273], "208": [166, 205, 208, 213, 215, 221, 225, 228, 231, 246, 267, 273, 285], "209": [166, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 267, 273, 285], "user_a": 166, "user_b": 166, "n\u00e4herung": 166, "nackten": [166, 1115], "210": [166, 192, 205, 208, 213, 215, 221, 225, 228, 246, 253, 267, 273, 285], "hantiert": [166, 1116], "anderem": [166, 1122, 1129], "211": [166, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273], "reviewten": 166, "funktionsaufruf": [166, 228], "sonder": 166, "stackoverflowprogrammierung": 166, "entgegenwirken": 166, "ausholen": 166, "212": [166, 192, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 267, 273, 285], "veloc": [166, 192, 306, 1006], "length_m": [166, 192, 306, 1006], "time_": [166, 192, 306, 1006], "213": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 267, 273], "spiel": 166, "214": [166, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 267, 273, 285], "liegen": 166, "positionel": 166, "215": [166, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 267, 273], "param": [166, 176, 189, 206, 234, 267, 648, 697, 698, 871, 927], "216": [166, 192, 205, 208, 213, 215, 221, 225, 228, 243, 246, 253, 267, 273, 285], "217": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "218": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "219": [166, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "entpacken": 166, "positionellen": 166, "221": [166, 192, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285], "kwarg": [166, 192, 219, 221, 225, 246, 267, 961, 965, 986], "explizi": 166, "rauskletzeln": 166, "222": [166, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 263, 267, 273, 426], "223": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 267, 273, 285, 1077], "celebrate_another_birthdai": 166, "224": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 267, 273], "227": [166, 205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "228": [166, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 267, 273, 285], "zeiterfassung": 167, "__pycache__": [167, 193, 206, 1091], "supp": 167, "cpython": [167, 192, 202, 208, 218, 221], "pyc": 167, "dienstag": 168, "anleitung": 168, "offen": [168, 328, 1112], "vorwissen": [168, 1117], "konkreten": [168, 328], "aufgabenstellungen": 168, "dienstgeb": 168, "mitgebracht": 168, "quickstart": [168, 1123], "vorgetragen": 168, "wenngleich": [168, 328, 1122, 1132, 1134, 1135], "un\u00fcblichen": 168, "reihenfolg": [168, 1113], "verbrachten": 168, "firmenprojekt": 168, "entspringenden": 168, "festgehalten": 168, "empfehlungen": 168, "weitergehen": 168, "k\u00f6nnte": [168, 1136], "idiomat": [168, 169, 172, 190, 193, 200, 216, 219, 242, 266, 1064], "lieblingsphras": 168, "bringt": [168, 1115, 1134], "forgiv": [168, 169, 266, 1064], "eafp": [168, 169, 266, 1064], "begriff": [168, 182], "viertelstund": 168, "regex": [168, 181, 206, 208, 233, 234, 243, 266, 273, 1008, 1064], "unumg\u00e4nglich": [168, 1130], "textuel": 168, "analysieren": 168, "hero": [168, 169, 190, 193, 216, 242, 266, 1064], "unterhaltsamen": 168, "keynot": [168, 169, 190, 193, 216, 219, 242, 266, 1064], "konferenz": 168, "pydata": [168, 169, 190, 193, 216, 242, 266, 1064], "chicago": [168, 169, 190, 193, 216, 242, 266, 1064], "witzig": 168, "kommt": [168, 183, 193, 196, 222, 1125, 1134, 1136], "selten": 168, "l\u00e4nge": 168, "ganzen": [168, 177, 1128], "abend": 168, "totalschaden": 168, "\u00fcbertragen": 168, "jedem": 168, "angemeldet": 168, "experienc": [169, 258, 260, 287, 328, 992, 1123], "machinelearn": 169, "fuzzi": [169, 208], "improvis": 169, "shall": 169, "jango": 169, "rush": 169, "strong": [169, 219, 355, 1071, 1073], "claus": [169, 172, 202, 208, 218, 223, 245, 657, 966, 999, 1002], "whet": [169, 252], "appetit": [169, 252], "get_temperatur": [169, 221, 284, 436, 439, 440, 442, 447, 449, 459, 460, 465, 467, 468, 470, 473, 474, 478, 481, 486, 487, 488, 489, 493, 494, 495, 506, 524, 645, 693, 694, 695, 696, 976, 1052], "__dict__": [169, 189, 192, 193, 205, 206, 215, 218, 221, 225, 234, 246, 263, 267, 285, 977, 983, 1091], "con": [169, 851, 957], "fiction": 169, "get_temperature_celsiu": 169, "competitor": 169, "eana": 169, "get_temperature_fahrenheit": 169, "eanaadapt": 169, "unserthermomet": 169, "revisit": [169, 211, 219, 242, 260, 284, 570], "shift": [169, 210, 395, 407, 539, 588, 871, 983], "visitor": 169, "gang": [169, 1121], "idiom": [169, 536, 673], "classic": [169, 394, 445, 536, 758, 1121], "travers": [169, 408, 681, 693, 963, 968, 1004], "convolut": 169, "__call__": [169, 215, 225, 246, 267, 273, 962], "__str__": [169, 192, 193, 206, 215, 218, 221, 225, 243, 246, 267, 284, 285, 321, 963, 1091], "__repr__": [169, 215, 218, 221, 225, 243, 246, 267, 285], "poor": [169, 211, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719, 756, 863, 893, 938], "deleg": [169, 545, 675, 718, 719, 1118], "deck": [169, 194, 513], "sensordata": 169, "sensordata_test": 169, "historydata": 169, "slowli": [169, 530, 635, 748, 863], "csvreport": 169, "csv2sqlite3": 169, "frontend": [169, 546, 940, 958, 1094], "flaskerl": 169, "reiter": [169, 190, 209, 211, 216, 219, 318, 547, 1064], "phrase": [169, 172, 190, 213, 215, 216, 219, 221, 246, 793, 794, 981, 1064], "impress": [169, 393], "brought": [169, 407, 972], "cloth": 169, "extraordinari": 169, "mondai": [170, 172, 174, 175, 200, 249, 255, 258, 260], "preliminari": [170, 172, 173, 174, 175], "homogen": [170, 328], "versu": [170, 172, 174], "immut": [170, 172, 174, 176, 177, 184, 191, 193, 204, 205, 206, 208, 214, 220, 223, 229, 235, 244, 252, 254, 255, 268, 285, 305, 377, 987, 994, 995, 996, 1000, 1091, 1128], "datastructur": [170, 194, 212, 1000], "exercise4": 170, "uh2ebfw8oym": [170, 174], "f26namfjggw": 170, "5qqq3yzbkp8": 170, "ugharkscop9uthgcoaec": 170, "pairwis": [171, 205, 552], "vale": 171, "bewar": [171, 356, 870, 938, 1069, 1071], "cheaper": [171, 407, 554, 556, 557, 635], "memorywis": 171, "johann": 171, "syntact": [171, 192, 364, 507, 547, 635, 687], "sugar": [171, 635, 687], "allow": [171, 172, 192, 221, 350, 417, 622, 695, 717, 748, 771, 1026, 1098, 1118], "retval": [171, 403, 593, 909], "dlc": 171, "msg1": 171, "readabl": [171, 215, 225, 259, 343, 374, 378, 398, 399, 400, 407, 417, 419, 478, 592, 613, 628, 636, 639, 674, 685, 687, 693, 698, 699, 801, 811, 817, 822, 826, 848, 873, 940, 966, 985, 1006, 1014, 1016, 1035], "0x7f41f5ff26a0": 171, "msglist": 171, "0x7f41f5ff4160": 171, "0x7f41f5ff41c0": 171, "291130": 171, "now_timestamp": 171, "1603884859": 171, "3412576": 171, "fromtimestamp": 171, "341258": 171, "372": [171, 208, 215, 253], "45259": 171, "microsecond": [171, 398, 803], "programmverweis": 172, "xy": [172, 215, 218, 253, 555, 1004], "zab": 172, "eventcodefil": 172, "definedlisaev": 172, "event_id": 172, "bla": 172, "blubb": 172, "verbessert": 172, "stringformatierung": 172, "ctype": 172, "headerfil": [172, 854], "lst": [172, 208, 808, 1113], "callbackfunc": 172, "datetim": [172, 193, 199, 200, 201, 206, 254, 257, 1021], "observ": [172, 241, 259, 295, 434, 441, 455, 458, 469, 483, 535, 719, 969, 970, 1076, 1121], "longish": 172, "resurrect": [172, 420, 826], "outputsequ": 172, "resist": 172, "uncondition": [172, 769, 963], "suitabl": [172, 221, 267, 739, 863, 912, 976, 985], "analysi": [172, 407, 1066, 1069, 1082], "cp1252": [172, 1058, 1059, 1061], "csvlog": 172, "csv_reader": 172, "recv": [172, 173, 866], "tuesdai": [173, 255, 270], "246": [173, 205, 208, 213, 215, 218, 221, 228, 246, 263, 267, 273, 1077], "corpor": [173, 246], "commandin": [173, 175], "comress": [173, 175], "gzip": [173, 175, 239, 248, 269, 270, 719, 766, 789, 791, 792, 796, 862, 950, 951, 1124], "diagnos": [173, 175, 311, 312, 1122, 1129], "netstat": [173, 175, 248, 269, 270, 1080, 1122, 1129], "netcat": [173, 175, 248, 269, 270], "subshel": [173, 175, 185], "telnetd": 173, "insecur": [173, 879], "proto": 173, "foreign": [173, 249, 378], "34490": 173, "56062": 173, "sshd": [173, 205, 221, 228, 231, 246, 253, 263, 267, 798, 802, 804, 857, 873, 883], "systemctl": [173, 954, 1080], "freedesktop": 173, "systemd1": 173, "quickli": [173, 260, 275, 287, 313, 377, 437, 871, 1120], "unprivileg": 173, "putti": [173, 185, 307], "puttygen": 173, "id_rsa": [173, 879], "authorized_kei": [173, 879], "trivia": 173, "hoorai": [173, 218, 231, 253, 999], "idiot": 173, "blinker": 173, "briana": 173, "mac": [173, 190, 206, 826, 990, 1064, 1101], "wakeup": [174, 211, 321, 325, 707, 719, 762, 862, 871, 890, 903, 913, 923, 925], "patrick": 174, "1996": [174, 208], "wagna": 174, "gernot": 174, "1982": [174, 208], "birthplac": 174, "txt2json": 174, "equip": [175, 249, 318, 863, 1122, 1129], "wobei": 176, "deppert": [176, 189, 305], "sidestep": 176, "builtin_function_or_method": [176, 246, 273], "sozusagen": 176, "genauso": [176, 1112], "aufrufen": [176, 854], "zaehler": 176, "initialwert": 176, "zaehlen": 176, "naechsten": 176, "schleifendurchlauf": 176, "locker": [176, 764], "mein_integ": 176, "1024": [176, 208, 797, 803, 826, 888], "sch\u00fctzt": 176, "passen": [176, 243], "gehandhabt": 176, "1267650600228229401496703205376": [176, 202, 205, 213, 225, 231, 253], "hoch": 176, "rechnen": [176, 310, 315], "tut": [176, 285, 305, 1115], "ausschliesslich": [176, 1124], "ganzzahldivis": 176, "ganzzahligen": 176, "resultat": 176, "gleichen": [176, 1122, 1135], "vorrang": 176, "ghi": [176, 215], "viert": 176, "nwelt": 176, "nwie": 176, "linefe": [176, 185, 206, 213, 339, 340, 1008, 1014, 1044, 1089], "bedeutung": [176, 1117, 1124], "unangetastet": 176, "glump": 176, "nebenlaeufigkeitsdemo": 176, "ebenlaeufigkeitsdemo": 176, "l\u00f6sung": [176, 189, 198, 328, 865], "formatierungsm\u00f6glichkeit": 176, "pfx_var1": 176, "pfx_var2": 176, "ausgab": [176, 1115], "notwendig": [176, 1114, 1130, 1131], "abzubrechen": 176, "ignorieren": [176, 177, 183, 1128], "gefunden": [176, 246, 854], "value1": [176, 1024], "501": [176, 208, 1024], "value2": [176, 1024], "799": [176, 205, 208, 1021, 1024], "value3": [176, 1024], "sprachen": [176, 177, 1115, 1128], "neg": [176, 221, 225, 356, 398, 403, 615, 744, 857, 1105], "indiz": 176, "erscheinen": 176, "komisch": 176, "bequem": 176, "mapping_t": 176, "f\u00fcnf": [176, 1122], "sieben": [176, 189, 215, 593], "neun": 176, "explicit": [176, 195, 202, 206, 215, 223, 225, 353, 362, 390, 403, 407, 420, 462, 463, 476, 477, 513, 539, 541, 542, 566, 592, 635, 636, 645, 652, 657, 665, 672, 677, 692, 695, 737, 892, 906, 938, 958, 959, 989, 992, 995, 1072, 1085], "implicit": [176, 202, 215, 225, 343, 349, 353, 518, 634, 636, 652, 826, 895, 981, 995], "primzahlen": 176, "checken": 176, "primzahl": [176, 177, 1128], "checkenden": 176, "zahl": [176, 183, 189, 214, 215, 218, 228, 305], "probier": 176, "gach": [176, 215], "teiler": 176, "teiler_kandidaten": 176, "prim": 176, "gleichema\u00dfen": 176, "vollst\u00e4ndigkeit": 176, "halber": 176, "startend": [176, 215], "schrittweit": 176, "0x7f24f2ac0e50": 176, "ablegen": 176, "0x7f24f2ac0e70": 176, "arschlangsam": 176, "num_comparison": 176, "datenstruktur": [176, 197], "suchen": [176, 197, 853, 1117, 1124], "einf\u00fcgen": [176, 1122], "optimiert": [176, 189], "perfekt": 176, "einitreten": 176, "himmi": 176, "list_reverseiter": [176, 205, 228, 253], "0x7f24ec31d190": 176, "bricht": 176, "beinhart": 176, "liefert": [176, 1124], "lieber": 176, "zweit": [176, 189, 215, 246, 285, 305, 1122], "po": [176, 215, 221, 225, 246, 251, 263, 267, 419, 495, 588, 615], "wirklichkeit": 176, "ordin\u00e4r": 176, "alternativen": 176, "fruit": 176, "gemma": 176, "divisor_candid": 176, "161": [176, 183, 205, 208, 213, 215, 218, 221, 225, 228, 231, 243, 246, 263, 267, 273, 285], "wegen": 176, "dogma": 176, "zugewiesen": 176, "meine_vari": 176, "eine_vari": [176, 253, 263], "angelegt": 176, "streng": 176, "obigem": 176, "dazusagen": 176, "noch_eine_globale_vari": 176, "increment_diese_vari": 176, "offiziel": [177, 179, 187, 190, 193, 194, 196, 212, 224], "leitfaden": 177, "kommentar": [177, 178, 189, 253, 305, 1128], "platziert": [177, 197], "hackereien": 177, "gleicherma\u00dfen": 177, "sogenannten": 177, "semantik": [177, 178, 1128], "sprach": [177, 178, 1115, 1116, 1117, 1128, 1129, 1136], "standarddatentypen": [177, 178, 1128], "literal": [177, 178, 236, 1128], "python2": [177, 215, 1128], "endg\u00fcltig": [177, 1128], "rausl\u00f6schen": [177, 1128], "konstanten": [177, 178, 1128], "typen": [177, 183, 1124, 1128, 1134], "operatoren": [177, 178, 854, 1117, 1128], "angeschnitten": [177, 1128], "vertiefung": [177, 193, 1128], "nocheinm": [177, 328, 1128], "ausdr\u00fcck": [177, 178, 236, 1128], "operatorrangfolgen": [177, 178, 1128], "grundlegenden": [177, 311, 1124, 1128], "sprachelementen": [177, 1128], "rede": [177, 1128], "syntaxdiagramm": [177, 1128], "gespritzt": [177, 1128], "gesamt": [177, 1128], "sperrig": [177, 1128], "n\u00fctzt": [177, 1128], "menschlich": [177, 1128], "abzubilden": [177, 1128], "tabel": [177, 1128], "anweisungen": [177, 178, 1128], "gro\u00dfen": [177, 1128], "fisch": [177, 1128], "instruktiv": [177, 1128], "bedingungen": [177, 178, 1114, 1128], "verzweigungen": [177, 178, 1128], "bedingt": [177, 178, 1115, 1128], "anweisung": [177, 178, 1128], "formulierungen": [177, 1128], "mehrfach": [177, 178, 1128], "fallauswahl": [177, 178, 1128], "benutzereingaben": [177, 1128], "\u00fcberpr\u00fcfen": [177, 1128], "schleifenkonstrukt": [177, 1128], "weitgehend": [177, 1128], "unserem": [177, 1128], "vehikel": [177, 1128], "hilfreich": [177, 1124, 1128], "klarstellung": [177, 1128], "fu\u00dfgesteuert": [177, 178, 1128], "z\u00e4hlergesteuert": [177, 178, 1128], "auslassen": [177, 1128], "kopfgesteuert": [177, 178, 1128], "gewinnt": [177, 1128], "konsol": [177, 1128], "anzeigen": [177, 1124, 1128], "voraussetzung": [177, 1128], "ausblick": [177, 1128], "schnell\u00fcbersicht": [177, 178, 1128], "sprunganweisungen": [177, 178, 1128], "endlosschleifen": [177, 178, 1128], "naja": [177, 1128], "reinschauen": [177, 1128], "mager": [177, 1128], "ausgelassen": [177, 1128], "eindimensional": [177, 178, 1128], "gefolgt": [177, 215, 1128], "zeichenketten": [177, 178, 1128], "tupel": [177, 178, 181, 1128], "besonder": [177, 178, 1128], "stapel": [177, 178, 1128], "schlangen": [177, 178, 1128], "tempo": [177, 1128], "schauma": [177, 183, 1128], "fallt": [177, 1128], "gscheit": [177, 184, 1128], "gemeinsam": [177, 1112, 1114, 1128, 1131], "dr\u00fcber": [177, 1128], "vielzahl": [177, 1128, 1132, 1135], "l\u00f6sungsm\u00f6glichkeiten": [177, 1128], "eingegangen": [177, 1112, 1128, 1132], "pythonischst": [177, 1128], "bestritten": [177, 1128], "unterprogramm": [177, 178, 1128], "parameter\u00fcbergab": [177, 178, 1128], "r\u00fcckgabewert": [177, 178, 1128], "inner": [177, 178, 198, 419, 962, 1128], "standardbibliotheken": [177, 178, 1128], "funktionalit\u00e4ten": [177, 178, 1128], "berechnet": [177, 213, 221, 1128], "satz": 177, "gepr\u00e4gt": 177, "konferenzen": 177, "definitiv": 177, "sehenswert": 177, "anf\u00e4nger": [177, 1131], "hochinteress": 177, "sprachelement": 178, "elementar": 178, "beliebig": [178, 213, 1129], "gro\u00df": [178, 1134], "vergleichsoperatoren": 178, "strichrechnung": 178, "modulo": [178, 189, 202, 208, 213, 221, 305, 354, 983, 995], "un\u00e4rer": 178, "negat": [178, 202, 225, 855, 983, 995, 1013], "konvertierungen": [178, 1115], "pr\u00e4zendenzregeln": 178, "vertauschen": [178, 189, 305], "kontrollstrukturen": [178, 214, 1115], "verzweigung": 178, "schleifen": [178, 236, 1114], "versuch": [178, 190], "hybrid": [178, 609], "supergscheit": 178, "prozeduren": 178, "funktionen": [178, 182, 236, 311, 1114, 1115, 1117, 1125], "funktionspoint": 178, "funktionsobjekt": 178, "primzahlenbeispiel": 178, "laufzeitfehl": 178, "lokal": [178, 189, 235, 236, 1135], "zuweisen": 178, "fehlerfal": 178, "anschliessend": 179, "interaktiv": 179, "uebungen": 179, "idealerweis": [179, 253], "ueblichen": 179, "negoti": 180, "deiniti": [180, 744, 1123], "unload": [180, 746, 760, 762, 1123], "synchronizt": 180, "spinlock": [180, 719, 743, 758, 764, 768, 770, 774, 775, 781, 784, 785, 787, 862, 926, 1123], "rcu": 180, "halv": 180, "softirq": 180, "tasklet": [180, 764], "irss": 180, "kmalloc": [180, 719, 728, 733, 736, 737, 738, 743, 747, 756, 757, 761, 763, 770, 775, 778, 781, 784, 787, 862], "dma": [180, 719, 743, 761, 763, 805, 862, 887, 888, 889, 1123], "coher": [180, 737], "20201125": [181, 183], "unbekannten": 181, "lookup_t": [181, 184, 305], "12345": [181, 213, 225, 253, 1099], "noch_eine_list": 181, "gesamte_list": 181, "vorl\u00e4ufig": 181, "letz": 181, "indented_text": 181, "nebenbei": [181, 183, 305], "eine_zum_sterben_verurteilte_vari": 181, "ein_set": 181, "sequenzen": 181, "grottenlangsam": 181, "subscript": [181, 215, 219, 285, 383, 570, 591, 595, 1085], "multiple_return_valu": 181, "xyz": [181, 183, 189, 208, 215, 246], "mein_formatierter_str": 181, "my_rang": [181, 221, 267, 273], "retlist": 181, "zeichenkett": 181, "funktionieren": [181, 1117, 1135], "my_list": [181, 192, 234], "airms_eth": 181, "simplizistisch": 181, "bl\u00f6d": 181, "phase": [181, 461, 475, 934, 968], "i_oder_v": 181, "iv": 181, "rms_eth": 181, "vorcompilieren": 181, "acirms_eth": 181, "my_regex": 181, "zeilennumm": 181, "dazuhaben": 181, "meine_zu_sendenden_daten": 181, "345": [181, 202, 208, 221, 253, 285], "234": [181, 205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 263, 267, 273, 285, 305], "meine_zu_sendenden_daten_in_string_form": 181, "ueblicherweis": 181, "ueber": 181, "verschickt": 181, "empfangen": [181, 196], "geschrieben": [181, 1135], "empfaeng": 181, "empfangenen": 181, "natuerlich": 181, "zurueckkonvertieren": 181, "meine_empfangenen_daten_python_form": 181, "gegangen": [181, 234], "wurscht": [181, 221, 854], "returnwerten": 182, "containerdatentypen": 182, "untypisiert": 182, "zeilen": [183, 225, 1124], "neiner": 183, "nund": [183, 202], "nb": 183, "stoppt": 183, "newlin": [183, 185, 198, 221, 246, 263, 301, 332, 339, 352, 992, 1008], "ndrin": 183, "drin": [183, 184, 189, 225, 253, 263, 305, 310], "zuviel": [183, 1117], "mischt": 183, "unsupport": [183, 205, 231, 983], "140546731085392": 183, "0x7fd395fb0e50": 183, "0x7fd3900395b0": 183, "new_t": [183, 996], "0x7fd390052800": 183, "667": [183, 205, 208, 228, 234, 530], "2923750584022716461": 183, "529344067295497451": 183, "unhash": [183, 243, 253, 267], "fuenf": [183, 205, 215, 243, 253, 267, 285, 305], "verschluckt": 183, "6000000": 183, "elementen": [183, 197], "nonetyp": [183, 193, 207, 208, 263, 273, 285], "_io": [183, 202, 205, 208, 218, 221, 253, 267, 302, 768], "textiowrapp": [183, 202, 205, 208, 218, 221, 253, 267, 302, 961], "oi": 183, "456": [183, 184, 208, 215, 253, 352], "hansi": [183, 221, 225, 228], "linspac": 183, "11111111": 183, "22222222": 183, "33333333": 183, "44444444": 183, "55555556": 183, "66666667": 183, "77777778": 183, "88888889": 183, "sin": 183, "8961922": 183, "79522006": 183, "19056796": 183, "96431712": 183, "66510151": 183, "37415123": 183, "99709789": 183, "51060568": 183, "54402111": 183, "plot": [183, 202, 231, 234, 285, 960, 1018, 1070, 1071], "line2d": [183, 231, 234, 285], "0x7fd35cd3ef40": 183, "splev": 183, "splrep": 183, "spline": 183, "represent": [183, 202, 221, 681, 776, 870, 871], "spl": 183, "evalu": [183, 202, 207, 213, 223, 335, 355, 360, 362, 370, 377, 378, 456, 457, 470, 471, 642, 652, 809, 826, 963, 997, 999, 1006, 1105], "x2": [183, 225], "y2": 183, "0x7fd341a486d0": 183, "speicher": [184, 1115, 1122, 1129], "sch\u00fctze": 184, "gemischten": 184, "operationen": [184, 1134], "interpol": [184, 225, 1069], "lag": 184, "gib": [184, 263], "depp": [184, 213], "ret_l": 184, "uniq_l": 184, "read_excel": [184, 1069], "invit": [185, 609], "effici": [185, 230, 284, 367, 406, 408, 410, 571, 575, 585, 588, 690, 810, 857, 859, 968, 1071, 1082, 1085, 1123], "expans": [185, 854, 855, 1114], "ecdsa": [185, 307], "fingerprint": [185, 307, 874, 925], "sha256": [185, 307, 874], "in22o4vcd400x0bb4flcb5": [185, 307], "vqnrvkvoirgfqq6mapo": [185, 307], "perman": [185, 307], "individu": [185, 307, 359, 417], "sat": [185, 307], "straight": [185, 657, 1086], "startung": 185, "standpoint": 185, "suboptim": [185, 234], "pwned": 185, "hidden": [185, 448, 643, 739, 940], "clumsi": [185, 211, 212, 252, 255, 433, 437, 537, 545, 553, 566, 593, 635, 698, 960, 961, 977, 978, 1085, 1118], "clumsier": 185, "dumpbin": 185, "hmoe": 185, "frcoll": 185, "bunch": [185, 699, 793, 952, 976], "oom": [185, 205, 221, 228, 231, 246, 253, 263, 267, 967], "killer": [185, 205, 221, 228, 231, 246, 253, 263, 267, 1001], "amoc": 185, "snapshot": [185, 677, 710, 804, 952], "tinkernut": 185, "raspberi": 185, "awesom": [185, 1098], "tunnel": [185, 251, 873, 881, 892], "centric": [185, 1123], "virtualbox": [185, 805], "cygwin": [185, 238, 240, 258, 805], "assort": 185, "nano": 185, "univers": [185, 260, 494, 892, 989, 1123], "scripe": 185, "voellig": 189, "wohl": [189, 273, 1115, 1136], "selbsterklaerend": 189, "printet": 189, "builtin": [189, 195, 202, 208, 209, 218, 221, 225, 246, 267, 284, 285, 826, 964], "accur": [189, 221, 225, 246, 267, 412], "__weakref__": [189, 205, 215, 218, 221, 225, 234, 246, 267, 285], "weak": [189, 221, 225, 246, 267, 285, 696, 1071], "_abc": [189, 202, 208, 218, 221], "_1": [189, 698, 699], "a123": 189, "vernichten": 189, "laufzeit": 189, "140032702361168": 189, "refcount": [189, 694, 696, 961, 1118], "dezim": 189, "oktal": 189, "0o755": [189, 225, 305], "493": [189, 208, 225], "0b11": [189, 225, 228], "sql": [189, 200, 212, 1073, 1076], "0b11111111": 189, "ordnung": 189, "uhrzeit": 189, "vormittag": 189, "6666666666666666": [189, 225], "nda": [189, 243], "python_dir": 189, "jan": [189, 218, 221, 301, 302, 319, 352, 730, 822, 848, 906, 940, 954, 991], "lowercas": [189, 221, 267, 826, 873, 1009, 1026, 1031], "140032636418048": 189, "ein_iterierbares_d": 189, "extraw\u00fcrschtl": 189, "sex": [189, 202, 224, 225, 1026], "diver": 189, "translation_t": [189, 225, 228, 231], "bag": [189, 237, 238, 240, 291, 420, 430, 716, 718, 719, 934, 996], "green": [189, 225, 459, 494, 495, 555, 863], "blue": [189, 197, 205, 225, 1021], "mengenoperationen": 189, "set1": 189, "set2": 189, "symm_diff": 189, "lisa": 189, "eugeni": [189, 192], "okan": 189, "mcguir": 189, "sinner": 189, "vornam": [189, 197, 198], "nachnam": [189, 197, 198], "persnr": 189, "personalnumm": 189, "5000": [189, 202, 208, 980], "4000": [189, 208], "3000": [189, 202, 208, 228, 267], "15000": [189, 208], "uppercas": [189, 221, 267, 826, 1009, 1026], "verfuegbar": 189, "restlichen": 189, "gehaelt": 189, "konstant": [189, 197, 220], "unexpect": [189, 397], "pcap": [190, 210, 216, 1063], "certifi": 190, "math": [190, 193, 203, 205, 206, 208, 216, 225, 230, 233, 266, 272, 537, 539, 989, 1064, 1091], "statist": [190, 203, 216, 225, 230, 233, 266, 272, 411, 928, 1048, 1064, 1069, 1098], "undo": [190, 826, 1064], "brad": [190, 1064], "traversi": [190, 1064], "evaluierung": 191, "eval": [191, 219, 220, 229, 247, 261, 262, 267, 274, 283, 286, 287, 985], "openfil": 192, "hanld": 192, "soemth": [192, 780], "zf": 192, "namelist": 192, "zipdemo": 192, "extracted_nam": 192, "isinst": [192, 193, 206, 208, 221, 234, 246, 983, 1086, 1091], "superclass": [192, 193, 206, 221, 1091], "subclass": [192, 193, 206, 221, 225, 963, 980, 1091], "class1": 192, "class2": 192, "salari": 192, "selina": 192, "orgl": 192, "8010": [192, 208, 419], "birth": [192, 218, 231, 537, 717, 1053, 1054, 1055, 1056, 1059, 1060, 1061], "1622102062": 192, "4778333": 192, "019427776336669922": 192, "009679079055786133": 192, "daniel": [192, 195, 301, 302, 319], "ortner": 192, "num_employe": 192, "__first": 192, "__last": 192, "__address": 192, "_person__first": 192, "_person__last": 192, "_person__address": 192, "_first": 192, "_last": 192, "_address": 192, "do_debug": 192, "val": [192, 221, 698, 871], "ueberhaupt": 192, "l_float": 192, "0x7fd9881b04a0": 192, "functool": [192, 259], "wrapper": [192, 221, 231, 236, 273, 440, 638, 663, 886, 934, 962, 983, 1066], "komplexen": 192, "testfil": 192, "nzeil": [192, 221], "seek": [192, 267, 302], "nth_fibo": 192, "accomod": 192, "0x7fd9801cec10": 192, "0x7fd9801b8d60": 192, "0x7fd9801b4900": 192, "0x7fd98014cd40": 192, "gen": [192, 267], "sequenceno": 192, "kv_pair": 192, "permissionerror": [192, 208, 228, 246, 263, 963], "deni": [192, 208, 228, 263, 462, 476, 809, 845, 873, 881, 893, 898, 899, 963, 1093], "eacc": 192, "filenotfounderror": [192, 208, 246, 963], "64bit": 192, "utc": 192, "python_implement": [192, 193, 206, 1091], "python_version_tupl": [192, 193, 206, 1091], "python39": 192, "dynload": 192, "isfil": [192, 295, 419], "isdir": [192, 419], "my_path": 192, "hopefulli": 192, "the_except": 192, "__class__": [192, 215, 218, 221, 225, 234, 243, 246, 267, 285], "__bases__": [192, 193, 206, 223, 1091], "distrust": 192, "guido": [192, 1088], "incompet": 192, "precondit": [192, 795], "abdefg": 192, "beg": [192, 378, 964], "bdefg": 192, "stringifi": 192, "0x7ffa9c2ac3a0": 192, "formatstr": 192, "ding": [192, 222, 933], "formatierter_str": 192, "oserror": [193, 221, 246, 963], "errno": [193, 206, 208, 228, 263, 403, 744, 893, 908, 937, 938, 955, 963, 1091, 1093], "assertionerror": [193, 218, 234, 246, 285, 963, 976, 1098, 1099], "jjjj": [193, 323, 324, 416], "line_count": 193, "aud": 193, "qualifii": [193, 206, 1091], "trunc": [193, 206, 1091], "hypot": [193, 206, 1091], "seed": [193, 206, 225, 489, 1091], "ascii": [193, 206, 221, 228, 231, 246, 267, 273, 339, 342, 345, 351, 994, 995, 1008, 1014, 1072, 1091], "codepoint": [193, 206, 1091], "escap": [193, 206, 221, 243, 332, 1072, 1091], "ord": [193, 206, 225, 246, 1003, 1091], "chr": [193, 206, 246, 1091], "isxxx": [193, 206, 1091], "rfind": [193, 206, 221, 267, 273, 1010, 1091], "grammar": [193, 206, 1091], "compon": [113, 193, 206, 410, 850, 925, 1091], "instrospect": [193, 206, 1091], "hasattr": [193, 206, 221, 234, 246, 977, 983, 1091], "__module__": [193, 205, 206, 215, 218, 221, 225, 234, 246, 267, 285, 1091], "bytearrai": [193, 206, 221, 246, 1091], "histogram": [193, 194, 211, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 523, 524, 532, 637, 675, 716, 718, 719], "defaultdict": [193, 219, 220, 244], "make_histogram": [193, 524, 533], "fileobj": 193, "stringio": [193, 221], "8859": [193, 211, 212, 228, 231, 251, 273, 285, 419], "pycon": [193, 219, 242, 266, 1064], "2017": [193, 219, 242, 545, 643, 694, 1064], "metaprogram": [193, 220, 242, 652, 976, 1064, 1119], "contract": [193, 195, 242, 1064], "evolut": [193, 242, 826, 1064], "unauthor": [193, 242, 1064], "biographi": [193, 242, 1064], "lesson": [193, 242, 307, 313, 418, 681, 956, 1064], "evolv": [193, 242, 678, 1064], "assembli": [193, 242, 266, 940, 942, 1064, 1120], "revolv": [193, 219, 1064, 1070], "mro": [193, 219, 223, 1064], "cpa": 194, "fahr": [194, 333, 335], "tomorrow": [194, 209, 317, 318], "correctli": [194, 284, 296, 395, 870, 893, 1016, 1072], "consecut": [194, 358, 687, 859], "becam": [194, 280], "44ff": 194, "gig": 194, "upcom": 194, "msi": 194, "wswitch": [194, 399, 636, 735], "wall": [194, 208, 209, 356, 406, 422, 710, 734, 735, 1107], "77ff": 194, "skip": [194, 221, 302, 420, 422, 741, 871, 941, 942, 963, 1100], "89ff": 194, "alongsid": [194, 760], "num_us": 194, "199ff": 194, "204ff": 194, "208ff": 194, "220ff": 194, "222ff": 194, "db_get_user_at_index": 194, "298ff": 194, "strcpy": [194, 211, 345, 391, 527, 542, 545, 646, 680, 866, 924], "strlen": [194, 345, 370, 398, 542, 545, 646, 680, 904, 907, 937], "bahavior": 194, "dest": [194, 345], "strtol": 194, "stringif": [194, 1115], "db_error_str": 194, "sexi": [194, 916], "caleb": 194, "discret": [195, 225, 284, 405, 409, 414, 415, 637, 675, 716, 718, 719], "bleed": 195, "rect": [195, 386, 513], "sphere": [195, 513], "preprocessor": [195, 211, 352, 379, 385, 389, 392, 396, 401, 405, 409, 414, 415, 634, 637, 675, 716, 718, 719, 940, 1105, 1119], "julia": 195, "yesterdai": [195, 211, 219, 259], "distanc": [195, 539, 547, 548, 568, 685, 698], "has_lastnam": 195, "botton": 195, "mingw": [195, 238, 240, 258, 317, 330, 805], "resembl": 195, "tortur": 195, "functor": [195, 237, 238, 240, 291, 579, 675, 676, 718, 719], "rudimentarili": [195, 993, 1067], "gotten": 195, "recourc": 195, "outright": [195, 251, 393, 968, 999], "geniu": [195, 251, 570, 968, 999], "cycl": [195, 230, 417, 419, 663, 694, 708, 718, 719, 862, 863, 871, 903, 917, 923], "livehackingli": 195, "zuordnung": [196, 212, 224], "bissl": 196, "commandlineargument": [196, 1114], "stoff": 196, "summenbeispiel": 196, "showcas": 196, "datenbank": 196, "formulieren": 196, "verbindung": [196, 1112, 1122, 1129, 1135], "schicken": [196, 1112], "schickman": 196, "muessen": 196, "verwandlen": 196, "fractal": [196, 212], "schatzi": 197, "zeitkomplexit\u00e4t": 197, "foreach": 197, "assozi": [197, 1117], "color_transl": 197, "gelb": 197, "yellow": 197, "hashtabl": [197, 1086], "englisch": [197, 1112], "sack": 197, "my_color": 197, "her_color": 197, "pink": 197, "gr\u00fcn": 197, "beig": 197, "vereiningungsmeng": 197, "schnittmeng": 197, "symmetrisch": 197, "differenzmeng": 197, "sei": 197, "gewesen": 197, "waer": [197, 273], "1037190666": [197, 213, 215, 221, 225, 228, 231, 234, 437, 444, 461, 462, 463, 475, 476, 477, 596, 977], "6666010185": 197, "schwarzbauer": 197, "json_string_fuer_den_brows": 197, "response_dict": 197, "svnr": [197, 205, 208, 215, 221, 225, 228, 231, 233, 234, 273, 438, 444, 466, 472, 977, 1081], "pprint": [197, 199, 206, 208, 243, 964, 1072], "formatieren": 197, "endlich": 197, "transfer_string_in_php_am_serv": 197, "u00f6rg": 197, "transfer_string_in_js_am_brows": 197, "response_dict_am_brows": 197, "verwandeln": [197, 1131], "schlussendlich": 197, "geeignet": [197, 1113], "platzieren": 197, "meine_t": 197, "sozialversicherungsnumm": 197, "simmer": 198, "mein_str": 198, "sq": [198, 205, 208, 215, 225, 246, 267, 285], "docu": 198, "nmehrzeilig": 198, "nvon": 198, "mehrzeilig": 198, "deppertem": 198, "irrelevant": 198, "quargel": [198, 199], "190666": 198, "inkorrekt": 198, "geburtsdatum": 198, "endswith": [198, 213, 215, 221, 231, 246, 250, 253, 267, 273, 1010], "sss": 198, "isalpha": [198, 202, 213, 215, 221, 225, 246, 267, 273, 1010], "isidentifi": [198, 202, 215, 221, 231, 246, 267, 273, 1010], "islow": [198, 221, 231, 246, 267, 1010], "arg1": 198, "arg2": 198, "arg3": 198, "abcblah": 198, "blahabcbcabcc": 198, "lah": 198, "rstrip": [198, 202, 206, 213, 217, 218, 221, 231, 246, 263, 267, 273, 301, 310], "lstrip": [198, 213, 217, 221, 246, 267, 273, 310], "wieviel": [198, 1122, 1129], "995237": 198, "datestr": 198, "dt": [198, 766, 870], "strptime": [198, 199, 200, 206], "uuid": 198, "msg_aussi": 198, "sea": [198, 213, 246, 306, 656], "oida": [198, 215, 218, 267, 422], "msgid": 198, "uuid4": 198, "timestamp": [198, 208, 228, 257, 261, 262, 283, 285, 287, 419, 699, 727, 828, 848, 882, 933], "345654325678": 198, "json_aussi": 198, "6563515ef0824d42b459389cefd09127": 198, "json_eini": 198, "sender": [198, 938], "msg_eini": 198, "sauberestextfil": 199, "12345678": 199, "2270": [199, 208], "20333": 199, "360": [199, 208, 285], "91011121": 199, "30333": 199, "36756788": 199, "1112": [199, 208], "1244": [199, 208], "31333": 199, "45011121": 199, "44444": 199, "340": [199, 208, 215, 221, 253, 267], "sauber": 199, "read_sauberes_text_fil": 199, "item1": 199, "item13": 199, "werk": 199, "lort": 199, "charg": [199, 441, 448, 461, 462, 463, 475, 476, 477], "sonderbestandsnumm": 199, "materialkurztext": 199, "lagerplatz": 199, "verfueg_bestand": 199, "bme": 199, "we_datum": 199, "verf\u00fcg": 199, "bestand": 199, "datum": [199, 1071], "api2": 200, "opc": [200, 209, 284], "rrdtool": 200, "rrd": 200, "subprocess": [200, 216, 221, 230, 232, 242, 266, 295, 310, 315, 1064], "commmon": [202, 378], "140576769461632": 202, "simplicit": 202, "inputfil": [202, 419], "450": [202, 208, 215, 250, 253], "paragraph": [202, 432], "highli": [202, 328, 494], "pathnam": [202, 208, 218, 221, 725, 892, 896, 1008], "displayhook": [202, 208, 218, 221, 303], "excepthook": [202, 208, 218, 221, 303], "uncaught": [202, 208, 218, 221, 513], "systemexit": [202, 208, 218, 221, 243, 246, 303, 963], "behav": [202, 208, 211, 218, 221, 492, 513, 639, 694, 695, 714, 782, 808, 928], "last_typ": [202, 208, 218, 221, 303], "last_valu": [202, 208, 218, 221, 303, 663, 666, 669, 670, 671], "last_traceback": [202, 208, 218, 221, 303], "builtin_module_nam": [202, 208, 218, 221, 303], "pertain": [202, 208, 218, 221], "exec_prefix": [202, 208, 218, 221, 303], "float_info": [202, 208, 218, 221, 303], "float_repr_styl": [202, 208, 218, 221, 303], "hash_info": [202, 208, 218, 221, 303], "hexvers": [202, 208, 218, 221, 303], "int_info": [202, 208, 218, 221, 303], "maxsiz": [202, 208, 218, 221, 303], "largest": [202, 208, 218, 221, 395], "maxunicod": [202, 208, 218, 221, 303], "thread_info": [202, 208, 218, 221, 303], "version_info": [202, 208, 218, 221, 303], "__stdin__": [202, 208, 218, 221, 303], "__stdout__": [202, 208, 218, 221, 303], "__stderr__": [202, 208, 218, 221, 303], "__displayhook__": [202, 208, 218, 221, 303], "__excepthook__": [202, 208, 218, 221, 303], "screen": [202, 208, 218, 221, 802, 808, 826], "exc_info": [202, 208, 218, 221, 303], "getdlopenflag": [202, 208, 218, 221, 303], "dlopen": [202, 208, 218, 221, 1132], "getprofil": [202, 208, 218, 221, 303], "profil": [202, 208, 218, 221, 328, 406, 412, 415, 719, 766, 798, 1116, 1119], "getrefcount": [202, 208, 218, 221, 228, 303], "getrecursionlimit": [202, 208, 218, 221, 303], "getsizeof": [202, 208, 218, 221, 243, 246, 303], "gettrac": [202, 208, 218, 221, 303], "setdlopenflag": [202, 208, 218, 221, 303], "setprofil": [202, 208, 218, 221, 303], "setrecursionlimit": [202, 208, 218, 221, 303], "settrac": [202, 208, 218, 221, 303], "__breakpointhook__": [202, 208, 218, 221, 303], "breakpointhook": [202, 208, 218, 221, 303], "breakpoint": [202, 208, 218, 221, 246], "exctyp": [202, 208, 218, 221], "__unraisablehook__": [202, 208, 218, 221, 303], "unraisablehook": [202, 208, 218, 221, 303], "unrais": [202, 208, 218, 221], "exc_typ": [202, 208, 218, 221, 961], "exc_valu": [202, 208, 218, 221, 961], "exc_traceback": [202, 208, 218, 221, 961], "err_msg": [202, 208, 218, 221], "addaudithook": [202, 208, 218, 221, 303], "audit": [202, 208, 218, 221, 303], "call_trac": [202, 208, 218, 221, 303], "afterward": [202, 208, 218, 221, 357, 407, 544, 694, 695, 696, 709, 762, 934, 1099], "older": [202, 208, 218, 221, 791, 934], "get_asyncgen_hook": [202, 208, 218, 221, 303], "firstit": [202, 208, 218, 221], "get_coroutine_origin_tracking_depth": [202, 208, 218, 221, 303], "coroutin": [202, 208, 218, 221, 291, 665, 666, 668, 669, 670, 671, 675, 718, 719, 1064], "getallocatedblock": [202, 208, 218, 221, 303], "getdefaultencod": [202, 208, 218, 221, 267, 303], "getfilesystemencodeerror": [202, 208, 218, 221, 303], "getfilesystemencod": [202, 208, 218, 221, 303], "getswitchinterv": [202, 208, 218, 221, 303], "setswitchinterv": [202, 208, 218, 221, 303], "is_fin": [202, 208, 218, 221, 303], "set_asyncgen_hook": [202, 208, 218, 221, 303], "set_coroutine_origin_tracking_depth": [202, 208, 218, 221, 303], "cr_origin": [202, 208, 218, 221], "rtld_global": [202, 208, 218, 221], "rtld_xxx": [202, 208, 218, 221], "rtld_lazi": [202, 208, 218, 221], "frequenc": [202, 208, 218, 221, 225, 261, 262, 283, 287, 296, 321, 325, 719, 862, 863, 871, 903, 923, 925], "uninterrupt": [202, 208, 218, 221, 758], "workload": [202, 208, 218, 221], "typic": [202, 208, 218, 221, 249, 259, 275, 287, 378, 418, 422, 439, 463, 492, 619, 737, 786, 811, 941, 986, 996, 1118, 1120], "005": [202, 208, 218, 221], "abiflag": [202, 208, 218, 221, 303], "api_vers": [202, 208, 218, 221, 303], "1013": [202, 208, 218, 221], "ipyk": 202, "base_exec_prefix": [202, 208, 218, 221, 303], "base_prefix": [202, 208, 218, 221, 303], "_ast": [202, 208, 218, 221], "_codec": [202, 208, 218, 221], "_collect": [202, 208, 218, 221], "_f": [202, 208, 218, 221], "byteord": [202, 208, 218, 221, 243, 303, 864], "foundati": [202, 208, 218, 221], "emati": [202, 208, 218, 221], "ipykernel": [202, 208, 218, 221, 246], "zmqshelldisplayhook": [202, 208, 218, 221], "dont_write_bytecod": [202, 208, 218, 221, 303], "opt": [202, 208, 218, 221, 384], "ation": [202, 208, 218, 221], "7976931348623157e": [202, 208, 218, 221], "308": [202, 208, 215, 218, 221, 263, 273, 285], "max_": [202, 208, 218, 221], "epsilo": [202, 208, 218, 221], "2305843009213693": [202, 208, 218, 221], "iphash2": [202, 208, 218, 221], "50922736": 202, "cache_tag": [202, 208, 218, 221], "xv": [202, 208, 218, 221], "bits_per_digit": [202, 208, 218, 221], "sizeof_digit": [202, 208, 218, 221], "syntaxerror": [202, 213, 218, 225, 246, 963], "eol": [202, 225], "9223372036854775807": [202, 208, 218, 221], "1114111": [202, 208, 218, 221], "meta_path": [202, 208, 218, 221, 303], "_frozen_importlib": [202, 208, 218, 221, 246], "builtinimport": [202, 208, 218, 221, 246], "_fro": [202, 208, 218, 221], "homepa": 202, "path_hook": [202, 208, 218, 221, 303], "zipimport": [202, 208, 218, 221], "filefind": [202, 208, 218, 221], "path_importer_cach": [202, 208, 218, 221, 303], "jfa": [202, 208, 218, 221], "platlibdir": [202, 208, 218, 221, 303], "ps1": [202, 208, 218, 221, 303, 1100], "ps2": [202, 208, 218, 221, 303], "ps3": [202, 208, 218, 221, 303], "pycache_prefix": [202, 208, 218, 221, 303], "outstream": [202, 208, 218, 221], "versio": [202, 208, 218, 221], "202103": 202, "releaselev": [202, 208, 218, 221], "warnopt": [202, 208, 218, 221, 303], "isdigit": [202, 213, 221, 225, 246, 253, 267, 273, 1010], "pp": [202, 253, 383, 570], "list_of_str": 202, "tensorflow": 203, "kesselfal": 203, "rettenbachklamm": 203, "hochtor": 203, "hochschwab": 203, "_a": [205, 221, 246], "_123": 205, "140575811317328": 205, "140575811316208": 205, "0xffffffff": [205, 206, 356], "4294967296": [205, 213], "0x48": [205, 870], "330": [205, 208, 221, 246, 253, 267, 285], "332": [205, 208, 221, 253, 267, 285], "333": [205, 208, 221, 253, 267, 306], "334": [205, 208, 221, 253], "dstr": 205, "777": [205, 208], "aliv": [205, 376, 916, 959], "bcd": 205, "dusan": 205, "alex": [205, 219, 981], "mist": [205, 253], "span": [205, 231, 234, 236, 243, 267, 333, 352, 376, 741], "141592653589793": [205, 208], "roll": [205, 224, 245, 261, 262, 999, 1115], "dice": [205, 224, 245, 261, 262, 999], "win": [205, 221, 231, 857, 924, 999], "rnd": [205, 228], "convention": 205, "wise": [205, 249, 401, 545, 617, 648, 717, 719, 734, 744, 764, 862, 903, 963], "resultset": [205, 208, 1076], "sbin": [205, 221, 228, 231, 246, 253, 263, 267, 798, 802, 804, 851, 857, 888, 898], "nologin": [205, 221, 228, 231, 246, 253, 263, 267, 851, 857, 888, 898], "adm": [205, 221, 228, 231, 246, 253, 263, 267, 852, 855, 857], "lp": [205, 221, 228, 231, 246, 253, 263, 267, 857], "spool": [205, 221, 228, 231, 246, 253, 263, 267, 857], "lpd": [205, 221, 228, 231, 246, 253, 263, 267, 857], "ftp": [205, 221, 228, 231, 246, 253, 263, 267, 853, 954], "65534": [205, 221, 228, 231, 246, 253, 263, 267], "apach": [205, 221, 228, 231, 246, 253, 263, 267], "httpd": [205, 221, 228, 231, 246, 253, 263, 267], "coredump": [205, 221, 228, 231, 246, 253, 263, 267, 857, 937], "997": [205, 208, 221, 228, 231, 246, 253, 263, 267], "dumper": [205, 221, 228, 231, 246, 253, 263, 267, 857], "998": [205, 208, 221, 228, 231, 246, 253, 263, 267], "996": [205, 208, 221, 228, 231, 246, 253, 263, 267], "timesync": [205, 221, 228, 231, 246, 253, 263, 267, 857], "995": [205, 208, 221, 228, 231, 246, 253, 263, 267], "tss": [205, 221, 228, 231, 246, 253, 263, 267], "tpm": [205, 221, 228, 231, 246, 253, 263, 267], "dbu": [205, 221, 228, 231, 246, 253, 263, 267, 804], "polkitd": [205, 221, 228, 231, 246, 253, 263, 267, 804], "994": [205, 208, 221, 228, 231, 246, 253, 263, 267], "avahi": [205, 221, 228, 231, 246, 253, 263, 267, 804], "mdn": [205, 221, 228, 231, 246, 253, 263, 267], "unbound": [205, 221, 228, 231, 246, 253, 263, 267, 995], "992": [205, 208, 221, 228, 231, 246, 253, 263, 267], "dnsmasq": [205, 221, 228, 231, 246, 253, 263, 267, 804], "991": [205, 208, 221, 228, 231, 246, 253, 263, 267], "dhcp": [205, 221, 228, 231, 246, 253, 263, 267], "nm": [205, 221, 228, 231, 246, 253, 263, 267, 413, 546, 766, 952, 958], "openconnect": [205, 221, 228, 231, 246, 253, 263, 267], "993": [205, 208, 221, 228, 231, 246, 253, 263, 267], "989": [205, 208, 221, 228, 231, 246, 253, 263, 267], "networkmanag": [205, 221, 228, 231, 246, 253, 263, 267, 413, 804], "usbmuxd": [205, 221, 228, 231, 246, 253, 263, 267], "gluster": [205, 221, 228, 231, 246, 253, 263, 267], "988": [205, 208, 221, 228, 231, 246, 253, 263, 267], "glusterf": [205, 221, 228, 231, 246, 253, 263, 267], "rtkit": [205, 221, 228, 231, 246, 253, 263, 267], "realtimekit": [205, 221, 228, 231, 246, 253, 263, 267], "pipewir": [205, 221, 228, 231, 246, 253, 263, 267], "987": [205, 208, 221, 228, 231, 246, 253, 263, 267], "geoclu": [205, 221, 228, 231, 246, 253, 263, 267], "990": [205, 208, 221, 228, 231, 246, 253, 263, 267], "chroni": [205, 221, 228, 231, 246, 253, 263, 267], "984": [205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "saslauth": [205, 221, 228, 231, 246, 253, 263, 267], "saslauthd": [205, 221, 228, 231, 246, 253, 263, 267], "radvd": [205, 221, 228, 231], "rpc": [205, 221, 228, 231, 246, 253, 263, 267], "rpcbind": [205, 221, 228, 231, 246, 253, 263, 267], "openvpn": [205, 221, 228, 231, 246, 253, 263, 267], "982": [205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "981": [205, 208, 221, 228, 231], "spawn": [205, 221, 228, 231, 246, 253, 263, 267, 284], "colord": [205, 221, 228, 231, 246, 253, 263, 267], "985": [205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "rpcuser": [205, 221, 228, 231, 246, 253, 263, 267], "abrt": [205, 221, 228, 231, 246, 253, 263, 267, 804, 857], "flatpak": [205, 221, 228, 231, 246, 253, 263, 267, 270, 857], "979": [205, 208, 221, 228, 231], "helper": [205, 221, 225, 228, 231, 246, 253, 263, 267, 351, 545, 609, 657, 698, 760, 857, 1089, 1093], "983": [205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "978": [205, 208, 221, 228, 231, 246, 253, 263, 267, 857], "vboxadd": [205, 221, 228, 231, 246, 253, 263, 267, 857], "tcpdump": [205, 221, 228, 231, 246, 253, 263, 267, 857], "mosquitto": [205, 209, 221, 228, 231, 246, 253, 263, 267, 1058, 1080], "974": [205, 208, 221, 228, 231], "broker": [205, 209, 221, 228, 231, 246, 253, 263, 267, 284, 804, 1058], "doit": [205, 442], "mappingproxi": [205, 221, 234], "229": [205, 208, 213, 215, 221, 225, 228, 246, 253, 263, 267, 273, 285], "230": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "231": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 267, 273, 461, 462, 463, 475, 476, 477], "232": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 267, 273], "233": [205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 263, 267, 273], "inputlist": [205, 966], "ret": [205, 208, 213, 419, 657, 930, 966, 1011], "235": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "236": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 267, 273, 285, 404], "237": [205, 208, 213, 215, 221, 225, 228, 231, 246, 263, 267, 273], "238": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "239": [205, 208, 213, 215, 221, 225, 228, 246, 253, 263, 267, 273, 285], "240": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 263, 267, 273], "242": [205, 208, 213, 215, 218, 221, 228, 231, 246, 263, 267, 273, 285], "243": [205, 208, 213, 215, 221, 228, 231, 246, 263, 267, 273, 285], "244": [205, 208, 213, 215, 218, 221, 228, 231, 246, 267, 273, 285], "245": [205, 208, 213, 215, 228, 246, 263, 267, 273, 285], "247": [205, 208, 213, 215, 221, 225, 228, 246, 263, 267, 273], "248": [205, 208, 213, 215, 218, 225, 228, 246, 253, 263, 267, 273, 285], "249": [205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 267, 273, 285], "250": [205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 257, 263, 267, 273, 855], "251": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 285], "252": [205, 208, 213, 215, 218, 225, 228, 246, 253, 263, 267, 273, 285, 1077], "253": [205, 208, 213, 215, 218, 221, 228, 231, 246, 253, 267, 273], "256": [205, 208, 213, 215, 221, 228, 231, 246, 253, 263, 267, 273, 342, 550, 1066, 1077], "257": [205, 208, 213, 215, 218, 221, 225, 228, 231, 246, 253, 263, 267, 273], "258": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273], "0x7fda5444e6a0": 205, "259": [205, 208, 213, 215, 218, 221, 228, 246, 253, 263, 267, 273], "260": [205, 208, 213, 215, 218, 221, 228, 246, 253, 263, 267, 273, 285], "261": [205, 208, 213, 215, 221, 225, 231, 246, 253, 263, 267, 273], "262": [205, 208, 213, 215, 221, 231, 246, 253, 263, 267, 273, 285], "263": [205, 208, 213, 215, 221, 225, 228, 231, 246, 253, 263, 267, 273, 285], "264": [205, 208, 213, 215, 218, 221, 228, 231, 246, 253, 267, 273, 285], "265": [205, 208, 213, 215, 221, 228, 246, 253, 267, 273, 285], "266": [205, 208, 213, 215, 218, 221, 225, 231, 246, 267, 273], "267": [205, 208, 213, 215, 218, 221, 228, 231, 246, 253, 267, 273, 285], "268": [205, 208, 213, 215, 221, 228, 231, 246, 253, 267, 273], "269": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 942], "270": [205, 208, 213, 215, 221, 225, 228, 246, 253, 263, 267, 273, 285], "other_map": 205, "272": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273, 285], "273": [205, 208, 213, 215, 221, 225, 246, 253, 267, 273, 485, 503, 504, 505, 506, 508, 509, 976], "274": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 263, 267, 273], "140575811316304": 205, "275": [205, 208, 213, 215, 221, 225, 228, 246, 253, 263, 267, 273, 285], "276": [205, 208, 213, 215, 218, 228, 246, 253, 263, 267, 273, 285], "277": [205, 208, 213, 215, 218, 221, 225, 228, 246, 263, 267, 273], "278": [205, 208, 213, 215, 221, 228, 246, 253, 267, 273, 285], "279": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 267, 273, 285], "280": [205, 208, 213, 215, 218, 221, 225, 246, 253, 267, 273, 285, 941, 942], "140575692459008": 205, "282": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 267, 273, 285], "283": [205, 208, 213, 215, 218, 221, 225, 228, 246, 267, 273], "284": [205, 208, 213, 215, 221, 225, 228, 246, 250, 273, 285], "elementwis": 205, "285": [205, 208, 213, 215, 218, 221, 246, 253, 267, 273, 285], "286": [205, 208, 213, 215, 218, 221, 225, 246, 267, 273, 285], "287": [205, 208, 213, 215, 218, 221, 225, 228, 246, 253, 273, 285], "140575692438848": 205, "288": [205, 208, 213, 215, 221, 225, 228, 246, 253, 267, 273, 285], "140575692448960": 205, "289": [205, 208, 213, 215, 221, 246, 253, 267, 273, 285], "290": [205, 208, 213, 215, 221, 246, 253, 267, 273], "292": [205, 208, 213, 221, 225, 246, 253, 263, 267], "293": [205, 208, 213, 215, 221, 246, 253, 263, 267, 273], "295": [205, 208, 213, 215, 221, 225, 246, 253, 263, 267], "296": [205, 208, 213, 215, 221, 246, 253, 263, 267, 273], "298": [205, 208, 213, 221, 225, 246, 253, 263, 267, 273], "deep": [205, 217, 285, 652, 657, 928], "301": [205, 208, 213, 218, 221, 225, 246, 253, 263, 267, 273, 285], "302": [205, 208, 215, 221, 225, 246, 253, 267, 273, 285, 1021], "deepcopi": [205, 215, 228, 253, 273, 285, 1004], "303": [205, 208, 215, 218, 221, 253, 267, 273, 285, 942], "304": [205, 208, 215, 218, 221, 225, 285], "305": [205, 208, 218, 221, 246, 263, 267, 273, 285], "314": [205, 208, 215, 218, 221, 246, 253, 263, 267, 273], "315": [205, 208, 221, 246, 267, 273], "rdr": [205, 206, 419, 442, 1072], "delimit": [205, 206, 221, 250, 251, 267, 566, 852, 992, 1072], "fund_nam": [205, 206, 1021], "fund_isin": [205, 206, 1021], "fund_tick": [205, 206, 1021], "as_of_d": [205, 206, 1021], "fund_in_univers": [205, 206, 1021], "fund_of_fund": [205, 206, 1021], "fund_holdings_count": [205, 206, 1021], "fund_holding_funds_count": [205, 206, 1021], "american": [205, 211, 618, 632, 719, 1021, 1077], "fund": [205, 1021], "balanc": [205, 209, 386, 1021], "us0240711020": [205, 1021], "abalx": [205, 1021], "20210103": [205, 1021], "084": [205, 1021], "dodg": [205, 1021], "cox": [205, 1021], "us2562011047": [205, 1021], "dodbx": [205, 1021], "410": [205, 208, 253, 267, 1021], "us2562191062": [205, 1021], "dodgx": [205, 1021], "franklin": [205, 1021], "incom": [205, 221, 284, 1021, 1080], "us3534963000": [205, 1021], "fkinx": [205, 1021], "america": [205, 1021], "us3998741066": [205, 1021], "agthx": [205, 1021], "price": [205, 225, 412, 435, 1021], "us7414791092": [205, 1021], "prgfx": [205, 1021], "fidel": [205, 1021], "puritan": [205, 1021], "us3163451079": [205, 1021], "fpurx": [205, 1021], "contrafund": [205, 1021], "us3160711095": [205, 1021], "fcntx": [205, 1021], "363": [205, 208, 253, 267, 285, 1021], "us77954m1053": [205, 1021], "prwcx": [205, 1021], "westburi": [205, 1021], "us6804141090": [205, 1021], "owlsx": [205, 1021], "us1401931035": [205, 1021], "caibx": [205, 1021], "582": [205, 208, 1021], "harbor": [205, 1021], "institut": [205, 206, 448, 463, 1021, 1091], "us4115115044": [205, 1021], "hacax": [205, 1021], "us77954q1067": [205, 1021], "trbcx": [205, 1021], "dreyfu": [205, 1021], "treasuri": [205, 1021], "cash": [205, 1021], "inst": [205, 1021], "us2619411083": [205, 1021], "dirxx": [205, 1021], "blackrock": [205, 1021], "us09251t5092": [205, 1021], "malox": [205, 1021], "us3163453059": [205, 1021], "flpsx": [205, 1021], "liquid": [205, 1021], "us09248u5517": [205, 1021], "tttxx": [205, 1021], "dfa": [205, 1021], "portfolio": [205, 225, 1021], "us2332038841": [205, 1021], "dfgbx": [205, 1021], "feder": [205, 1021], "herm": [205, 1021], "us60934n6821": [205, 1021], "utixx": [205, 1021], "oakmark": [205, 1021], "investor": [205, 225, 1021], "us4138382027": [205, 1021], "oakix": [205, 1021], "asset": [205, 1021], "us00767h4939": [205, 1021], "787": [205, 208, 1021], "fpa": [205, 1021], "crescent": [205, 1021], "us30254t7596": [205, 1021], "fpacx": [205, 1021], "us3534968058": [205, 1021], "fcisx": [205, 1021], "us5529836943": [205, 1021], "meiix": [205, 1021], "goldman": [205, 1021], "sach": [205, 1021, 1136], "instrument": [205, 410, 412, 870, 1021], "us38142b5003": [205, 1021], "ftixx": [205, 1021], "schwab": [205, 1021], "us8085098551": [205, 1021], "swppx": [205, 1021], "508": [205, 208, 253, 285, 1021], "templeton": [205, 1021], "bond": [205, 1021], "advisor": [205, 1021], "us8802084009": [205, 1021], "tgbax": [205, 1021], "us32008f6060": [205, 1021], "sgiix": [205, 1021], "ishar": [205, 1021], "etf": [205, 1021], "us4642872000": [205, 1021], "ivv": [205, 1021], "507": [205, 208, 285, 1021], "vanguard": [205, 1021], "admir": [205, 1021], "us9229087104": [205, 1021], "vfiax": [205, 1021], "510": [205, 208, 285, 1021], "us9229087286": [205, 1021], "vtsax": [205, 1021], "370": [205, 208, 253, 267, 1021], "spdr": [205, 1021], "midcap": [205, 1021], "us78467y1073": [205, 1021], "mdy": [205, 1021], "dow": [205, 1021], "jone": [205, 311, 312, 1021], "industri": [205, 766, 1021], "us78467x1090": [205, 1021], "health": [205, 1021], "us81369y2090": [205, 1021], "xlv": [205, 1021], "discretionari": [205, 1021], "us81369y4070": [205, 1021], "xly": [205, 1021], "energi": [205, 1021], "us81369y5069": [205, 1021], "xle": [205, 1021], "financi": [205, 1021], "us81369y6059": [205, 1021], "xlf": [205, 1021], "us81369y8030": [205, 1021], "xlk": [205, 1021], "invesco": [205, 1021], "qqq": [205, 1021], "us46090e1038": [205, 1021], "us2562061034": [205, 1021], "dodfx": [205, 1021], "msci": [205, 1021], "eaf": [205, 1021], "us4642874659": [205, 1021], "efa": [205, 1021], "897": [205, 208, 1021], "jpmorgan": [205, 1021], "sec": [205, 433, 924, 1021, 1093], "mny": [205, 1021], "mkt": [205, 1021], "us4812a28358": [205, 1021], "jtsxx": [205, 1021], "eql": [205, 1021], "wght": [205, 1021], "us46137v3574": [205, 1021], "us4812a03757": [205, 1021], "cjtxx": [205, 1021], "us00143w8753": [205, 1021], "odvyx": [205, 1021], "dividend": [205, 1021], "us78464a7634": [205, 1021], "sdy": [205, 1021], "equiti": [205, 1021], "us2332033719": [205, 1021], "dfiex": [205, 1021], "888": [205, 208, 1021], "edgewood": [205, 1021], "us0075w07594": [205, 1021], "egfix": [205, 1021], "prudenti": [205, 1021], "us00767h7585": [205, 1021], "r6": [205, 1021], "us55273h3536": [205, 1021], "meikx": [205, 1021], "327": [205, 208, 221, 246, 253, 263], "328": [205, 208, 215, 221, 253], "geschieht": [206, 328, 853], "wunder": 206, "groesser": 206, "jave": 206, "shorthand": [206, 343, 845, 977], "lin": 206, "lout": 206, "faster": [206, 225, 284, 395, 407, 928, 934], "outputlist": 206, "getus": [206, 1042], "userdatabas": [206, 1042], "userid": [206, 218], "groupid": 206, "loginshel": 206, "userrecord": 206, "dens": [206, 215, 225], "pratic": 206, "_fix_float_numb": 206, "fieldnam": [206, 1072], "_fix_bool": 206, "elif": [206, 213, 341, 378, 419, 983, 998, 999], "_fix_dat": 206, "read_stock": [206, 1021], "csvfile": [206, 976], "converted_record": 206, "csvname": [206, 251, 419], "dbname": [206, 1075], "stmt": 206, "predefin": [206, 898, 933, 938, 1091, 1111], "circuit": [207, 213, 223, 871, 997, 1122, 1129], "windows_path": [208, 213], "festplatt": [208, 1132], "eue": [208, 285, 305], "lehrer": 208, "50923504": 208, "202107": 208, "140106795875920": 208, "140106669190640": 208, "669": [208, 225], "140106669191024": 208, "0j": 208, "copied_l": [208, 215], "140106669249856": 208, "copied_t": 208, "tuple_containing_one_el": 208, "tran": 208, "satan": [208, 218], "queen": [208, 228, 1053, 1055, 1059, 1061, 1072], "10000000000": [208, 263, 305], "prod": 208, "resultset_to_local_db": 208, "my_local_db": 208, "basenam": 208, "normalized_path": 208, "normpath": [208, 215, 971], "291": [208, 213, 221, 246, 263, 273, 285, 411], "294": [208, 213, 221, 246, 263, 267, 273], "297": [208, 213, 215, 221, 225, 267], "299": [208, 213, 218, 221, 225, 246, 253, 263, 267, 273], "306": [208, 218, 225, 246, 263, 267, 273, 285], "307": [208, 215, 221, 246, 263, 267, 273, 285], "309": [208, 215, 218, 221, 253, 263, 267, 273, 285], "310": [208, 215, 218, 221, 267, 273, 285, 356], "311": [208, 215, 246, 267, 273], "312": [208, 215, 221, 246, 253, 263, 273], "313": [208, 215, 221, 253, 267, 273], "316": [208, 215, 218, 221, 246, 267, 285], "317": [208, 215, 218, 246, 253, 263, 267, 285], "318": [208, 218, 221, 253, 267], "319": [208, 215, 218, 221, 246, 263, 267, 285], "321": [208, 218, 221, 253, 263, 267, 273, 285], "322": [208, 218, 221, 253, 273, 285], "323": [208, 215, 218, 221, 246, 267, 273, 285], "324": [208, 218, 221, 246, 263, 267, 273, 285, 494], "325": [208, 215, 221, 253, 263, 273], "326": [208, 215, 221, 246, 263, 273, 285], "329": [208, 221, 246, 253, 285], "331": [208, 215, 221, 246, 267], "335": [208, 215, 221, 253, 267], "336": [208, 215, 221, 267, 426], "337": [208, 221, 253, 267], "338": [208, 215, 253, 267], "339": [208, 215, 221, 267], "341": [208, 215, 221, 253, 267, 285], "342": [208, 215, 221, 253, 273], "343": [208, 221, 253, 267, 285], "346": [208, 221, 267, 285, 592, 593, 594, 595], "347": [208, 253, 267, 285], "348": [208, 221, 285], "349": [208, 221, 267, 285, 406], "351": [208, 215, 221, 267], "352": [208, 215, 221, 253, 267], "353": [208, 215, 221, 253, 267], "354": [208, 221, 267, 440], "355": [208, 253, 267], "356": [208, 228, 267, 285], "357": [208, 253, 267, 285], "359": [208, 267], "361": [208, 267, 285], "362": [208, 253, 267, 285], "364": [208, 267], "365": [208, 285], "366": [208, 253, 267], "367": [208, 267, 285], "368": [208, 267], "369": [208, 253, 267], "371": [208, 253], "373": [208, 215, 253, 285], "374": [208, 215, 267, 285], "375": [208, 215, 225, 253, 267, 285, 406], "376": [208, 253, 267, 285], "377": [208, 215, 253, 267, 285], "379": [208, 253, 267, 285], "380": [208, 253, 267, 285], "381": [208, 215, 253, 267], "382": [208, 253, 267, 285], "383": [208, 215, 253, 257, 285], "384": [208, 253, 267, 285], "385": [208, 253, 267, 285], "386": [208, 253, 267, 285], "387": 208, "388": [208, 253, 267, 285], "389": [208, 285], "390": [208, 267, 285], "391": [208, 253, 285], "392": [208, 253], "393": [208, 215, 253, 267, 285], "394": [208, 215, 253, 267, 285], "395": [208, 215, 253, 267, 285], "396": [208, 215, 253, 811], "397": [208, 215, 267, 285], "398": [208, 215, 267], "399": [208, 215, 267, 285], "401": [208, 215, 253, 267], "402": [208, 253, 285], "403": [208, 215, 267, 285], "405": [208, 267], "406": [208, 215, 253, 267, 285], "407": [208, 253, 267, 285], "408": [208, 215, 253, 267, 285], "409": [208, 215, 253, 267, 285], "411": [208, 215, 253, 267], "412": [208, 267], "413": [208, 215, 253, 267], "414": [208, 215, 253, 267, 285], "415": [208, 267, 285], "416": [208, 215, 253, 285], "417": [208, 215, 253, 267], "418": [208, 215, 253, 285], "419": [208, 215, 253, 267, 285], "420": [208, 215, 253, 267, 285], "421": [208, 215, 253, 267, 285], "422": [208, 215], "423": [208, 253, 267, 285], "424": [208, 215, 253, 267], "425": [208, 253], "426": [208, 285], "427": [208, 215, 253, 285], "428": [208, 215, 253, 285], "429": [208, 253, 285], "430": [208, 215, 253, 285], "431": [208, 253, 285], "432": [208, 215, 253, 285], "433": [208, 253, 285], "434": [208, 253], "435": 208, "436": [208, 253, 285], "437": [208, 215, 253, 285], "438": [208, 215, 285], "439": [208, 253], "440": [208, 215, 253], "441": [208, 215, 253], "442": [208, 215, 253], "443": [208, 215, 285], "444": [208, 215, 285], "445": [208, 215, 285], "446": [208, 253], "447": [208, 215, 253, 285], "448": [208, 253], "449": [208, 215], "451": [208, 215, 285], "452": [208, 215, 253], "453": [208, 215, 285], "454": [208, 215, 253], "455": [208, 215], "457": 208, "458": [208, 253], "459": 208, "460": [208, 253], "461": [208, 253], "462": [208, 253], "463": 208, "464": [208, 253], "465": [208, 253, 257], "466": [208, 253], "467": [208, 253], "468": [208, 253], "469": [208, 253, 695], "470": [208, 253], "471": [208, 253], "472": [208, 253], "473": 208, "474": [208, 253], "475": [208, 253], "476": [208, 253], "478": 208, "479": [208, 253], "480": [208, 253], "481": [208, 253], "482": [208, 253], "483": [208, 253], "484": 208, "485": 208, "486": [208, 253], "487": [208, 253], "488": [208, 253], "489": 208, "490": [208, 848], "491": 208, "492": 208, "494": [208, 253], "495": 208, "496": 208, "497": [208, 253], "498": [208, 253], "499": 208, "502": [208, 253], "503": 208, "504": [208, 253], "505": [208, 221, 253], "506": [208, 253], "509": [208, 285], "511": [208, 285], "514": 208, "515": [208, 253, 694], "516": [208, 253], "518": [208, 253], "519": 208, "520": [208, 253], "521": [208, 253], "522": 208, "523": 208, "524": [208, 253], "525": [208, 253], "526": 208, "527": 208, "528": 208, "529": 208, "530": 208, "531": [208, 253], "532": 208, "533": 208, "534": 208, "535": 208, "536": [208, 848], "538": 208, "539": 208, "540": 208, "541": 208, "542": 208, "543": 208, "544": 208, "545": 208, "546": 208, "547": 208, "548": [208, 257], "549": 208, "550": 208, "551": 208, "552": 208, "553": 208, "554": [208, 850], "555": 208, "556": 208, "557": 208, "558": 208, "559": 208, "560": 208, "561": 208, "562": 208, "563": 208, "564": 208, "565": 208, "566": 208, "567": 208, "568": 208, "569": 208, "570": 208, "571": 208, "572": 208, "573": 208, "574": 208, "575": 208, "576": 208, "577": 208, "578": 208, "579": 208, "580": 208, "581": 208, "583": 208, "584": 208, "585": 208, "586": 208, "587": 208, "588": 208, "589": 208, "590": 208, "591": 208, "592": 208, "593": 208, "594": 208, "595": 208, "596": [208, 954], "597": 208, "598": 208, "599": 208, "601": 208, "602": 208, "603": 208, "604": 208, "605": 208, "606": 208, "607": 208, "608": 208, "609": 208, "610": [208, 848], "611": 208, "612": [208, 811], "613": 208, "614": 208, "615": 208, "616": 208, "617": 208, "618": 208, "619": 208, "620": 208, "621": 208, "622": 208, "623": 208, "624": 208, "625": [208, 225], "626": 208, "627": 208, "628": 208, "629": 208, "630": 208, "631": 208, "632": 208, "633": 208, "634": 208, "635": 208, "636": 208, "637": 208, "638": 208, "639": 208, "640": [208, 545], "641": 208, "642": 208, "643": 208, "644": [208, 991], "645": 208, "646": 208, "647": 208, "648": 208, "649": 208, "650": 208, "651": 208, "652": 208, "653": 208, "654": 208, "655": 208, "656": 208, "657": 208, "658": 208, "659": 208, "660": 208, "661": [208, 964], "662": 208, "663": 208, "665": 208, "668": [208, 995], "670": 208, "671": 208, "672": 208, "673": 208, "674": 208, "675": 208, "676": 208, "677": 208, "678": 208, "679": 208, "680": 208, "681": 208, "682": [208, 848], "683": 208, "684": 208, "685": 208, "687": 208, "688": 208, "689": 208, "690": 208, "691": 208, "692": 208, "693": 208, "694": 208, "695": 208, "696": 208, "697": 208, "698": [208, 848, 888], "699": 208, "701": 208, "702": 208, "703": [208, 261, 262, 283], "704": 208, "705": 208, "706": 208, "707": 208, "708": [208, 221], "709": 208, "710": [208, 545], "711": 208, "712": 208, "713": 208, "715": [208, 619], "716": 208, "717": 208, "718": 208, "719": 208, "720": 208, "721": 208, "722": 208, "723": 208, "724": 208, "725": 208, "726": 208, "727": 208, "728": 208, "729": 208, "730": [208, 250], "731": 208, "732": 208, "733": 208, "734": 208, "735": 208, "736": 208, "737": 208, "738": 208, "739": 208, "740": 208, "741": 208, "742": 208, "743": 208, "744": 208, "745": 208, "746": [208, 942], "747": 208, "748": 208, "749": 208, "750": 208, "751": 208, "752": 208, "753": 208, "754": 208, "756": 208, "757": 208, "758": 208, "759": 208, "760": 208, "761": 208, "762": 208, "763": 208, "764": 208, "765": 208, "766": 208, "767": 208, "768": 208, "769": 208, "770": 208, "772": 208, "773": 208, "774": 208, "775": 208, "776": 208, "778": 208, "779": 208, "780": 208, "781": 208, "782": [208, 257], "783": 208, "784": 208, "785": 208, "786": 208, "788": 208, "789": [208, 215], "790": 208, "791": [208, 694], "792": 208, "793": 208, "794": 208, "795": 208, "796": 208, "797": 208, "798": 208, "801": [208, 250], "802": 208, "803": 208, "804": 208, "805": 208, "806": 208, "807": 208, "808": 208, "809": 208, "810": 208, "811": 208, "812": 208, "813": 208, "814": 208, "815": [208, 225], "816": [208, 231], "817": 208, "818": 208, "819": 208, "820": 208, "822": 208, "823": 208, "824": 208, "826": 208, "827": 208, "828": [208, 257], "829": 208, "830": 208, "831": 208, "832": 208, "833": 208, "834": 208, "835": 208, "836": 208, "837": 208, "838": 208, "839": 208, "840": 208, "841": 208, "842": 208, "843": 208, "844": 208, "845": 208, "846": 208, "847": 208, "848": 208, "849": 208, "850": 208, "851": 208, "852": 208, "853": 208, "854": 208, "855": 208, "856": 208, "857": 208, "858": 208, "859": 208, "860": 208, "861": 208, "862": 208, "863": 208, "864": 208, "865": 208, "866": 208, "867": 208, "868": 208, "870": 208, "871": 208, "872": 208, "873": 208, "874": [208, 442], "875": 208, "876": 208, "877": 208, "878": 208, "879": [208, 406], "880": 208, "881": 208, "882": 208, "883": 208, "884": 208, "885": 208, "886": 208, "887": 208, "889": 208, "890": 208, "891": 208, "892": 208, "893": 208, "894": 208, "895": 208, "896": 208, "898": 208, "899": 208, "901": 208, "902": [208, 848], "903": 208, "904": 208, "905": 208, "906": 208, "907": 208, "908": 208, "909": 208, "911": 208, "912": 208, "913": 208, "914": 208, "915": 208, "916": 208, "917": [208, 257], "918": 208, "919": 208, "920": 208, "921": 208, "922": 208, "923": 208, "924": 208, "925": 208, "926": 208, "927": 208, "928": 208, "929": 208, "930": 208, "931": 208, "932": 208, "933": 208, "934": 208, "935": 208, "936": 208, "937": 208, "938": 208, "939": 208, "940": 208, "941": 208, "942": 208, "943": 208, "944": 208, "945": 208, "946": 208, "947": 208, "948": 208, "949": 208, "950": 208, "951": 208, "952": 208, "953": 208, "954": 208, "955": 208, "956": 208, "957": 208, "958": 208, "959": 208, "960": 208, "961": 208, "962": 208, "963": 208, "964": 208, "965": [208, 1085, 1086], "966": [208, 1085, 1086], "967": [208, 1085, 1086], "968": [208, 1085, 1086], "969": [208, 1085, 1086], "970": 208, "971": 208, "972": 208, "973": 208, "975": 208, "976": [208, 246, 253, 263, 267], "977": [208, 246, 253, 263, 267, 857], "timeaxi": 208, "myrang": 208, "1002": [208, 592, 593, 594, 595, 811], "1004": 208, "1006": 208, "1008": 208, "1010": 208, "1012": 208, "1014": 208, "1016": 208, "1018": 208, "1020": [208, 793, 794, 801], "1022": 208, "1028": 208, "1030": 208, "1032": 208, "1034": 208, "1036": 208, "1038": 208, "1040": 208, "1042": [208, 928], "1046": 208, "1048": 208, "1050": 208, "1052": 208, "1054": 208, "1056": 208, "1058": 208, "1060": 208, "1062": 208, "1064": 208, "1066": 208, "1068": [208, 257], "1070": [208, 257], "1072": [208, 257], "1074": 208, "1076": 208, "1078": 208, "1080": 208, "1082": 208, "1084": 208, "1086": 208, "1088": 208, "1090": 208, "1092": 208, "1094": 208, "1096": 208, "1098": 208, "1102": 208, "1104": 208, "1106": 208, "1108": 208, "1110": 208, "1114": 208, "1116": 208, "1118": 208, "1120": 208, "1122": 208, "1124": 208, "1126": 208, "1128": 208, "1130": 208, "1132": 208, "1134": 208, "1136": 208, "1138": 208, "1140": 208, "1142": 208, "1144": 208, "1146": 208, "1148": 208, "1150": 208, "1152": [208, 1086], "1154": [208, 1086], "1156": 208, "1158": 208, "1160": 208, "1162": 208, "1164": 208, "1166": 208, "1168": 208, "1170": 208, "1172": 208, "1174": 208, "1176": 208, "1178": 208, "1180": 208, "1182": 208, "1184": 208, "1186": 208, "1188": 208, "1190": 208, "1192": 208, "1194": 208, "1196": 208, "1198": 208, "1202": [208, 1086], "1204": [208, 1086], "1206": 208, "1208": 208, "1210": 208, "1212": 208, "1214": 208, "1216": 208, "1218": 208, "1220": 208, "1222": 208, "1224": 208, "1226": 208, "1228": 208, "1230": 208, "1232": 208, "1236": 208, "1238": 208, "1240": 208, "1242": 208, "1246": 208, "1248": 208, "1250": 208, "1252": 208, "1254": [208, 461, 462, 463, 475, 476, 477], "1256": 208, "1258": 208, "1260": [208, 426], "1262": 208, "1264": 208, "1266": 208, "1268": 208, "1270": 208, "1272": 208, "1274": 208, "1276": 208, "1278": 208, "1280": 208, "1282": 208, "1284": 208, "1286": 208, "1288": 208, "1290": 208, "1292": 208, "1294": 208, "1296": 208, "1298": 208, "1300": 208, "1302": 208, "1304": 208, "1306": 208, "1308": 208, "1310": 208, "1312": 208, "1314": 208, "1316": 208, "1318": 208, "1320": 208, "1322": 208, "1324": 208, "1326": 208, "1328": 208, "1330": 208, "1332": 208, "1334": 208, "1336": 208, "1338": 208, "1340": 208, "1342": 208, "1344": 208, "1346": 208, "1348": 208, "1350": 208, "1352": [208, 898], "1354": 208, "1356": 208, "1358": 208, "1360": 208, "1362": 208, "1364": 208, "1366": 208, "1368": 208, "1370": 208, "1372": 208, "1374": 208, "1378": 208, "1380": 208, "1382": 208, "1384": 208, "1386": 208, "1388": 208, "1390": 208, "1392": [208, 442], "1394": 208, "1396": 208, "1398": 208, "1400": 208, "1402": 208, "1406": 208, "1408": 208, "1410": 208, "1412": 208, "1414": 208, "1416": [208, 1009], "1418": 208, "1420": 208, "1422": 208, "1424": 208, "1426": 208, "1428": 208, "1430": 208, "1432": 208, "1434": 208, "1436": 208, "1438": 208, "1440": 208, "1442": 208, "1444": 208, "1446": 208, "1448": 208, "1450": [208, 1085], "1452": [208, 1085], "1454": [208, 1085], "1456": 208, "1458": 208, "1460": 208, "1462": 208, "1464": 208, "1466": 208, "1468": 208, "1470": 208, "1472": 208, "1474": 208, "1476": 208, "1478": 208, "1480": 208, "1482": 208, "1484": 208, "1486": 208, "1488": 208, "1490": 208, "1492": 208, "1494": 208, "1496": 208, "1498": 208, "1502": 208, "1504": 208, "1506": 208, "1508": 208, "1510": 208, "1512": 208, "1514": 208, "1516": 208, "1518": [208, 1085], "1520": [208, 1085], "1522": [208, 1085], "1524": 208, "1526": 208, "1528": 208, "1530": 208, "1532": 208, "1534": 208, "1536": [208, 940], "1538": 208, "1540": 208, "1542": 208, "1544": 208, "1546": 208, "1548": 208, "1550": 208, "1552": 208, "1554": 208, "1556": 208, "1558": [208, 809], "1560": 208, "1562": 208, "1564": 208, "1566": 208, "1568": 208, "1570": 208, "1572": 208, "1574": 208, "1576": 208, "1578": 208, "1580": 208, "1582": 208, "1584": 208, "1586": 208, "1588": 208, "1590": 208, "1592": 208, "1594": 208, "1596": 208, "1598": 208, "1600": 208, "1602": 208, "1604": [208, 934], "1606": 208, "1608": 208, "1610": 208, "1612": 208, "1614": 208, "1616": 208, "1618": 208, "1620": 208, "1622": 208, "1624": 208, "1626": 208, "1628": 208, "1630": 208, "1632": 208, "1634": [208, 461, 462], "1636": 208, "1638": 208, "1640": 208, "1642": 208, "1644": 208, "1646": 208, "1648": 208, "1650": 208, "1652": 208, "1654": 208, "1656": 208, "1658": 208, "1660": 208, "1662": 208, "1664": 208, "1666": 208, "1668": 208, "1672": 208, "1674": 208, "1676": 208, "1678": 208, "1680": 208, "1682": 208, "1684": 208, "1686": 208, "1688": [208, 941, 942], "1690": 208, "1692": 208, "1694": 208, "1696": 208, "1698": 208, "1700": 208, "1702": 208, "1704": 208, "1706": [208, 952], "1708": 208, "1710": 208, "1712": 208, "1714": 208, "1716": 208, "1718": 208, "1722": 208, "1724": 208, "1726": 208, "1728": 208, "1730": 208, "1732": 208, "1734": 208, "1736": 208, "1738": 208, "1740": 208, "1742": 208, "1744": 208, "1746": 208, "1748": 208, "1750": 208, "1752": 208, "1754": 208, "1756": 208, "1758": 208, "1760": 208, "1762": 208, "1764": [208, 267], "1766": 208, "1768": 208, "1770": 208, "1772": 208, "1774": 208, "1776": 208, "1778": 208, "1780": 208, "1782": 208, "1784": 208, "1786": 208, "1788": 208, "1790": 208, "1792": 208, "1794": 208, "1796": 208, "1798": 208, "1800": [208, 940], "1802": 208, "1804": 208, "1806": 208, "1808": 208, "1810": 208, "1812": 208, "1814": 208, "1816": 208, "1818": 208, "1820": 208, "1822": 208, "1824": 208, "1826": 208, "1828": 208, "1830": 208, "1832": 208, "1834": 208, "1836": 208, "1838": 208, "1840": 208, "1842": 208, "1844": 208, "1846": 208, "1848": 208, "1850": 208, "1852": 208, "1854": 208, "1856": 208, "1858": 208, "1860": 208, "1862": 208, "1864": 208, "1866": 208, "1868": 208, "1870": 208, "1872": 208, "1874": 208, "1876": 208, "1878": 208, "1880": 208, "1882": 208, "1884": 208, "1886": 208, "1888": 208, "1890": 208, "1892": 208, "1894": 208, "1896": 208, "1898": 208, "1900": [208, 218, 1053, 1055, 1059, 1061], "1902": 208, "1904": 208, "1906": 208, "1908": 208, "1910": 208, "1912": 208, "1914": 208, "1916": 208, "1918": 208, "1920": 208, "1922": 208, "1924": 208, "1926": 208, "1928": 208, "1930": 208, "1932": 208, "1934": 208, "1938": 208, "1940": 208, "1942": 208, "1944": 208, "1946": 208, "1948": 208, "1950": 208, "1952": 208, "1954": [208, 1019], "1956": [208, 989], "1958": 208, "1962": 208, "1964": 208, "1968": [208, 371], "1970": [208, 710], "1972": 208, "1974": 208, "1976": 208, "1978": [208, 331], "1980": [208, 536, 940], "1984": 208, "1986": [208, 1053, 1055, 1059, 1061], "1988": [208, 331, 445], "1990": [208, 536], "1992": 208, "1994": 208, "2004": 208, "2024": 208, "2026": 208, "2028": 208, "2030": 208, "2032": 208, "2034": 208, "2036": 208, "2038": 208, "2040": 208, "2042": 208, "2044": 208, "2046": 208, "2050": 208, "2052": 208, "2054": 208, "2056": 208, "2058": 208, "2060": 208, "2062": 208, "2064": 208, "2066": 208, "2068": 208, "2070": 208, "2072": 208, "2074": 208, "2076": 208, "2078": 208, "2080": 208, "2082": 208, "2084": 208, "2086": 208, "2088": 208, "2090": 208, "2092": 208, "2094": 208, "2096": 208, "2098": 208, "2100": 208, "2102": 208, "2104": 208, "2106": 208, "2108": 208, "2110": 208, "2112": 208, "2114": 208, "2116": 208, "2118": 208, "2120": 208, "2122": 208, "2124": 208, "2126": 208, "2128": 208, "2130": 208, "2132": 208, "2134": 208, "2136": 208, "2138": 208, "2140": 208, "2142": 208, "2144": 208, "2146": 208, "2148": 208, "2150": 208, "2152": 208, "2154": 208, "2156": 208, "2158": 208, "2160": 208, "2162": 208, "2164": 208, "2166": 208, "2168": 208, "2170": 208, "2172": 208, "2174": 208, "2176": 208, "2178": 208, "2180": 208, "2182": 208, "2184": 208, "2186": 208, "2188": 208, "2190": 208, "2192": 208, "2194": 208, "2196": 208, "2198": 208, "2200": 208, "2202": 208, "2204": 208, "2206": 208, "2208": 208, "2210": 208, "2214": 208, "2216": 208, "2218": 208, "2220": 208, "2222": 208, "2224": 208, "2226": 208, "2228": 208, "2230": 208, "2232": 208, "2234": 208, "2236": 208, "2238": 208, "2240": 208, "2242": 208, "2244": 208, "2246": 208, "2248": 208, "2250": 208, "2252": 208, "2254": 208, "2256": 208, "2258": 208, "2260": 208, "2262": 208, "2264": 208, "2266": 208, "2268": 208, "2272": 208, "2274": 208, "2276": 208, "2278": 208, "2280": 208, "2282": 208, "2284": 208, "2286": 208, "2288": 208, "2290": 208, "2292": 208, "2294": 208, "2296": 208, "2298": 208, "2300": 208, "2302": 208, "2304": 208, "2306": 208, "2308": 208, "2310": 208, "2312": 208, "2314": 208, "2316": 208, "2318": 208, "2320": 208, "2322": 208, "2324": 208, "2326": 208, "2328": 208, "2330": 208, "2332": [208, 848], "2334": 208, "2336": 208, "2338": 208, "2340": 208, "2342": 208, "2344": 208, "2346": 208, "2348": 208, "2350": 208, "2352": 208, "2354": 208, "2356": 208, "2358": 208, "2360": 208, "2362": 208, "2364": 208, "2366": 208, "2368": 208, "2370": 208, "2372": 208, "2374": 208, "2376": 208, "2378": 208, "2380": 208, "2382": 208, "2384": 208, "2386": 208, "2388": 208, "2390": 208, "2392": 208, "2394": 208, "2396": 208, "2398": 208, "2400": 208, "2402": 208, "2404": 208, "2406": 208, "2408": 208, "2410": 208, "2412": 208, "2414": 208, "2416": 208, "2418": 208, "2420": 208, "2422": 208, "2424": 208, "2426": 208, "2428": 208, "2430": 208, "2432": 208, "2434": 208, "2436": 208, "2438": 208, "2440": 208, "2442": 208, "2444": 208, "2446": 208, "2448": 208, "2450": 208, "2452": 208, "2454": 208, "2456": 208, "2458": 208, "2460": [208, 685], "2462": 208, "2464": 208, "2466": 208, "2468": 208, "2470": 208, "2472": 208, "2474": 208, "2476": 208, "2478": 208, "2480": 208, "2482": 208, "2484": 208, "2486": 208, "2488": 208, "2490": 208, "2492": 208, "2494": 208, "2496": 208, "2498": 208, "2500": 208, "2502": 208, "2504": 208, "2506": 208, "2508": 208, "2510": 208, "2512": 208, "2514": 208, "2516": 208, "2518": 208, "2520": 208, "2522": 208, "2524": 208, "2526": 208, "2528": 208, "2530": 208, "2532": 208, "2534": 208, "2536": 208, "2538": 208, "2540": 208, "2542": 208, "2544": 208, "2546": 208, "2548": 208, "2550": 208, "2552": 208, "2554": 208, "2556": 208, "2558": 208, "2560": 208, "2562": 208, "2564": 208, "2566": 208, "2568": 208, "2570": 208, "2572": 208, "2574": 208, "2576": 208, "2578": 208, "2580": 208, "2582": 208, "2584": 208, "2586": 208, "2588": 208, "2590": 208, "2592": 208, "2594": 208, "2596": 208, "2598": 208, "2600": 208, "2602": 208, "2604": 208, "2606": 208, "2608": 208, "2610": 208, "2612": 208, "2614": 208, "2616": 208, "2618": 208, "2620": 208, "2622": 208, "2624": 208, "2626": 208, "2628": 208, "2630": 208, "2632": 208, "2634": 208, "2636": 208, "2638": 208, "2640": [208, 267], "2642": 208, "2644": 208, "2646": 208, "2648": 208, "2650": 208, "2652": 208, "2654": 208, "2656": 208, "2658": 208, "2660": 208, "2662": 208, "2664": 208, "2666": 208, "2668": 208, "2670": 208, "2672": 208, "2674": 208, "2676": 208, "2678": 208, "2680": 208, "2682": 208, "2684": 208, "2686": 208, "2688": 208, "2690": 208, "2692": 208, "2694": 208, "2696": 208, "2698": 208, "2700": 208, "2702": 208, "2704": 208, "2706": 208, "2708": 208, "2710": 208, "2712": 208, "2714": 208, "2716": 208, "2718": 208, "2720": 208, "2722": 208, "2724": 208, "2726": 208, "2728": 208, "2730": [208, 263], "2732": 208, "2734": 208, "2736": 208, "2738": 208, "2740": 208, "2742": 208, "2744": 208, "2746": [208, 848, 874, 898], "2748": [208, 228, 246, 253, 285], "2750": 208, "2752": 208, "2754": 208, "2756": 208, "2758": 208, "2760": 208, "2762": 208, "2764": 208, "2766": 208, "2768": 208, "2770": 208, "2772": 208, "2774": 208, "2776": 208, "2778": 208, "2780": 208, "2782": 208, "2784": 208, "2786": 208, "2788": 208, "2790": 208, "2792": 208, "2794": 208, "2796": 208, "2798": 208, "2800": [208, 251, 419], "2802": [208, 419], "2804": 208, "2806": 208, "2808": 208, "2810": 208, "2812": 208, "2814": 208, "2816": 208, "2818": 208, "2820": 208, "2822": 208, "2824": 208, "2826": 208, "2828": [208, 413], "2830": 208, "2832": 208, "2834": 208, "2836": 208, "2838": 208, "2840": 208, "2842": 208, "2844": 208, "2846": 208, "2848": 208, "2850": 208, "2852": 208, "2854": 208, "2856": 208, "2858": 208, "2860": 208, "2862": 208, "2864": 208, "2866": 208, "2868": 208, "2870": 208, "2872": 208, "2874": 208, "2876": 208, "2878": 208, "2880": 208, "2882": 208, "2884": 208, "2886": 208, "2888": 208, "2890": 208, "2892": 208, "2894": 208, "2896": 208, "2898": 208, "2900": 208, "2902": 208, "2904": 208, "2906": 208, "2910": 208, "2912": 208, "2914": 208, "2916": 208, "2918": 208, "2920": 208, "2922": 208, "2924": 208, "2926": 208, "2928": 208, "2930": 208, "2932": 208, "2934": 208, "2936": 208, "2938": 208, "2940": 208, "2942": 208, "2944": 208, "2946": 208, "2948": 208, "2950": 208, "2952": 208, "2954": 208, "2956": 208, "2958": 208, "2960": 208, "2962": 208, "2964": 208, "2966": 208, "2968": 208, "2970": 208, "2972": 208, "2974": 208, "2976": 208, "2978": 208, "2980": 208, "2982": 208, "2984": 208, "2986": 208, "2988": 208, "2990": 208, "2992": 208, "2994": 208, "2996": 208, "2998": 208, "3002": 208, "3004": 208, "3006": 208, "3008": 208, "3010": 208, "3012": 208, "3014": 208, "3016": 208, "3018": 208, "3020": 208, "3022": 208, "3024": 208, "3026": 208, "3028": 208, "3030": 208, "3032": 208, "3034": 208, "3036": 208, "3038": 208, "3040": 208, "3042": 208, "3044": 208, "3046": 208, "3048": 208, "3050": 208, "3052": 208, "3054": 208, "3056": 208, "3058": 208, "3060": 208, "3062": 208, "3064": 208, "3066": 208, "3068": 208, "3070": 208, "3072": 208, "3074": 208, "3076": 208, "3078": 208, "3080": 208, "3082": 208, "3084": 208, "3086": 208, "3088": 208, "3090": 208, "3092": 208, "3094": 208, "3096": 208, "3098": 208, "3100": 208, "3102": 208, "3104": 208, "3106": 208, "3108": 208, "3110": [208, 257], "3112": 208, "3114": 208, "3116": 208, "3118": 208, "3120": 208, "3122": 208, "3124": 208, "3126": 208, "3128": 208, "3130": 208, "3132": 208, "3134": 208, "3136": 208, "3138": 208, "3140": 208, "3142": 208, "3144": 208, "3146": 208, "3148": 208, "3150": 208, "3152": 208, "3154": 208, "3156": 208, "3158": 208, "3160": 208, "3162": 208, "3164": 208, "3166": 208, "3168": 208, "3170": 208, "3172": 208, "3174": 208, "3176": 208, "3178": 208, "3180": 208, "3182": 208, "3184": 208, "3186": 208, "3188": 208, "3190": 208, "3192": 208, "3194": 208, "3196": 208, "3198": 208, "3200": 208, "3202": 208, "3204": 208, "3206": 208, "3208": 208, "3210": 208, "3212": 208, "3214": 208, "3216": 208, "3218": 208, "3220": 208, "3222": 208, "3224": 208, "3226": 208, "3228": 208, "3230": 208, "3232": 208, "3234": 208, "3236": 208, "3238": 208, "3240": 208, "3242": 208, "3244": 208, "3246": 208, "3248": 208, "3250": 208, "3252": 208, "3254": 208, "3256": 208, "3258": 208, "3260": 208, "3262": 208, "3264": 208, "3266": 208, "3268": 208, "3270": 208, "3272": 208, "3274": 208, "3276": 208, "3278": 208, "3280": 208, "3282": 208, "3284": 208, "3286": 208, "3288": 208, "3290": 208, "3292": 208, "3294": 208, "3296": 208, "3298": 208, "3300": 208, "3302": 208, "3304": 208, "3306": 208, "3308": 208, "3310": 208, "3312": 208, "3314": 208, "3316": 208, "3318": 208, "3320": 208, "3322": 208, "3324": 208, "3326": 208, "3328": 208, "3330": 208, "3332": 208, "3334": 208, "3336": 208, "3338": 208, "3340": 208, "3342": 208, "3344": 208, "3346": 208, "3348": 208, "3350": 208, "3352": 208, "3354": 208, "3356": 208, "3358": 208, "3360": 208, "3362": 208, "3364": 208, "3366": 208, "3368": 208, "3370": 208, "3372": 208, "3374": 208, "3376": 208, "3378": 208, "3380": 208, "3382": 208, "3384": 208, "3386": 208, "3388": 208, "3390": 208, "3392": 208, "3394": 208, "3396": 208, "3398": 208, "3400": 208, "3402": 208, "3404": 208, "3406": 208, "3408": 208, "3410": 208, "3412": 208, "3414": 208, "3416": 208, "3418": 208, "3420": 208, "3422": 208, "3424": 208, "3426": 208, "3428": 208, "3430": 208, "3432": 208, "3434": 208, "3436": 208, "3438": 208, "3440": 208, "3442": 208, "3444": 208, "3446": 208, "3448": 208, "3450": 208, "3452": 208, "3454": 208, "3456": 208, "3458": 208, "3460": 208, "3462": 208, "3464": 208, "3466": 208, "3468": 208, "3470": 208, "3472": 208, "3474": 208, "3476": 208, "3478": 208, "3480": 208, "3482": 208, "3484": 208, "3486": 208, "3488": 208, "3490": 208, "3492": 208, "3494": 208, "3496": 208, "3498": 208, "3500": 208, "3502": 208, "3504": 208, "3506": 208, "3508": 208, "3510": 208, "3512": 208, "3514": 208, "3516": 208, "3518": 208, "3520": 208, "3522": 208, "3524": 208, "3526": 208, "3528": 208, "3530": 208, "3532": 208, "3534": 208, "3536": 208, "3538": 208, "3540": 208, "3542": 208, "3544": 208, "3546": 208, "3548": 208, "3550": 208, "3552": 208, "3554": 208, "3556": 208, "3558": 208, "3560": 208, "3562": 208, "3564": 208, "3566": 208, "3568": 208, "3570": 208, "3572": 208, "3574": 208, "3576": 208, "3578": 208, "3580": 208, "3582": 208, "3584": 208, "3586": 208, "3588": 208, "3590": 208, "3592": 208, "3594": 208, "3596": 208, "3598": 208, "3602": 208, "3604": 208, "3606": 208, "3608": 208, "3610": 208, "3612": 208, "3614": 208, "3616": 208, "3618": 208, "3620": [208, 1086], "3622": [208, 1086], "3624": [208, 1086], "3626": 208, "3628": 208, "3630": 208, "3632": 208, "3634": 208, "3636": 208, "3638": 208, "3640": 208, "3642": 208, "3644": 208, "3646": 208, "3648": 208, "3650": 208, "3652": 208, "3654": 208, "3656": 208, "3658": 208, "3660": 208, "3662": 208, "3664": 208, "3666": 208, "3668": 208, "3670": 208, "3672": 208, "3674": 208, "3676": 208, "3678": 208, "3680": 208, "3682": 208, "3684": 208, "3686": 208, "3688": 208, "3690": 208, "3692": 208, "3694": 208, "3696": 208, "3698": 208, "3700": 208, "3702": 208, "3704": 208, "3706": 208, "3708": 208, "3710": 208, "3712": 208, "3714": 208, "3716": 208, "3718": 208, "3720": 208, "3722": [208, 895], "3724": 208, "3726": 208, "3728": 208, "3730": 208, "3732": 208, "3734": 208, "3736": 208, "3738": 208, "3740": 208, "3742": 208, "3744": 208, "3746": 208, "3748": 208, "3750": 208, "3752": 208, "3754": 208, "3756": 208, "3758": 208, "3760": 208, "3762": 208, "3764": 208, "3766": 208, "3768": 208, "3770": [208, 257], "3772": 208, "3774": 208, "3776": 208, "3778": 208, "3780": 208, "3782": 208, "3784": 208, "3786": 208, "3788": 208, "3790": 208, "3792": 208, "3794": 208, "3796": 208, "3798": 208, "3800": 208, "3802": 208, "3804": 208, "3806": 208, "3808": 208, "3810": 208, "3812": 208, "3814": 208, "3816": 208, "3818": 208, "3820": 208, "3822": 208, "3824": 208, "3826": 208, "3828": 208, "3830": 208, "3832": 208, "3834": 208, "3836": 208, "3838": 208, "3840": 208, "3842": 208, "3844": 208, "3846": 208, "3848": 208, "3850": 208, "3852": 208, "3854": 208, "3856": 208, "3858": 208, "3860": 208, "3862": 208, "3864": 208, "3866": 208, "3868": 208, "3870": 208, "3872": 208, "3874": [208, 1086], "3876": [208, 1086], "3878": [208, 1086], "3880": 208, "3882": 208, "3884": 208, "3886": 208, "3888": 208, "3890": 208, "3892": 208, "3894": 208, "3896": 208, "3898": 208, "3900": 208, "3902": 208, "3904": 208, "3906": 208, "3908": 208, "3910": 208, "3912": 208, "3914": 208, "3916": 208, "3918": 208, "3920": 208, "3922": 208, "3924": 208, "3926": 208, "3928": 208, "3930": 208, "3932": 208, "3934": 208, "3936": 208, "3938": 208, "3940": 208, "3942": 208, "3946": 208, "3948": 208, "3950": 208, "3952": 208, "3954": 208, "3956": 208, "3958": 208, "3960": 208, "3962": 208, "3964": 208, "3966": 208, "3968": 208, "3970": 208, "3972": 208, "3974": 208, "3976": 208, "3978": 208, "3980": 208, "3982": 208, "3984": 208, "3986": 208, "3988": 208, "3990": 208, "3992": 208, "3994": 208, "3996": 208, "3998": 208, "4002": 208, "4004": 208, "4006": 208, "4008": 208, "4010": 208, "4012": 208, "4014": 208, "4016": 208, "4018": 208, "4020": 208, "4022": 208, "4024": 208, "4026": 208, "4028": 208, "4030": 208, "4032": 208, "4034": 208, "4036": 208, "4038": 208, "4040": 208, "4042": 208, "4044": 208, "4046": 208, "4048": 208, "4050": 208, "4052": 208, "4054": 208, "4056": 208, "4058": 208, "4060": 208, "4062": 208, "4064": 208, "4066": 208, "4068": 208, "4070": 208, "4072": 208, "4074": 208, "4076": 208, "4078": 208, "4080": 208, "4082": 208, "4084": 208, "4086": 208, "4088": 208, "4090": 208, "4092": 208, "4094": 208, "4098": 208, "4100": 208, "4102": 208, "4104": 208, "4106": 208, "4108": 208, "4110": 208, "4112": 208, "4114": 208, "4116": 208, "4118": 208, "4120": 208, "4122": 208, "4124": 208, "4126": 208, "4128": 208, "4130": 208, "4132": 208, "4134": 208, "4136": 208, "4138": 208, "4140": 208, "4142": 208, "4144": 208, "4146": 208, "4148": 208, "4150": 208, "4152": 208, "4154": 208, "4156": 208, "4158": 208, "4160": 208, "4162": 208, "4164": 208, "4166": 208, "4168": 208, "4170": 208, "4172": 208, "4174": 208, "4176": 208, "4178": 208, "4180": 208, "4182": 208, "4184": 208, "4186": 208, "4188": 208, "4190": 208, "4192": 208, "4194": 208, "4196": 208, "4198": 208, "4200": 208, "4202": 208, "4204": 208, "4206": 208, "4208": 208, "4210": 208, "4212": 208, "4214": 208, "4216": 208, "4218": 208, "4220": 208, "4222": 208, "4224": 208, "4226": 208, "4228": 208, "4230": 208, "4232": 208, "4234": 208, "4236": 208, "4238": 208, "4240": 208, "4242": 208, "4244": 208, "4246": 208, "4248": 208, "4250": 208, "4252": 208, "4254": 208, "4256": 208, "4258": 208, "4260": 208, "4262": 208, "4264": 208, "4266": 208, "4268": 208, "4270": 208, "4272": 208, "4274": 208, "4276": 208, "4278": 208, "4280": 208, "4282": 208, "4284": 208, "4286": 208, "4288": 208, "4290": 208, "4292": 208, "4294": 208, "4296": 208, "4298": 208, "4300": 208, "4302": 208, "4304": 208, "4306": 208, "4308": 208, "4310": 208, "4312": 208, "4314": 208, "4316": 208, "4318": 208, "4320": 208, "4322": 208, "4324": 208, "4326": 208, "4328": 208, "4330": 208, "4332": 208, "4334": 208, "4336": 208, "4338": 208, "4340": 208, "4342": 208, "4344": 208, "4346": 208, "4348": 208, "4350": 208, "4352": 208, "4354": 208, "4356": 208, "4358": 208, "4360": 208, "4362": 208, "4364": 208, "4366": 208, "4368": 208, "4370": 208, "4372": 208, "4374": 208, "4376": 208, "4378": 208, "4380": 208, "4382": 208, "4384": 208, "4386": 208, "4388": 208, "4390": 208, "4392": 208, "4394": 208, "4396": 208, "4398": 208, "4400": 208, "4402": 208, "4404": 208, "4406": 208, "4408": 208, "4410": 208, "4412": 208, "4414": 208, "4416": 208, "4418": 208, "4420": 208, "4422": 208, "4424": 208, "4426": 208, "4428": 208, "4430": 208, "4432": 208, "4434": 208, "4436": 208, "4438": 208, "4440": 208, "4442": 208, "4444": 208, "4446": 208, "4448": 208, "4450": 208, "4452": 208, "4454": 208, "4456": 208, "4458": 208, "4460": 208, "4462": 208, "4464": 208, "4466": 208, "4468": 208, "4470": 208, "4472": 208, "4474": 208, "4476": 208, "4478": 208, "4480": 208, "4482": 208, "4484": 208, "4486": 208, "4488": 208, "4490": 208, "4492": 208, "4494": 208, "4496": 208, "4498": 208, "4502": 208, "4504": 208, "4506": 208, "4508": 208, "4510": 208, "4512": 208, "4514": 208, "4516": 208, "4518": 208, "4520": 208, "4522": 208, "4524": 208, "4526": 208, "4528": 208, "4530": 208, "4532": 208, "4534": 208, "4536": 208, "4538": 208, "4540": 208, "4542": 208, "4544": 208, "4546": 208, "4548": 208, "4550": 208, "4552": 208, "4554": 208, "4556": 208, "4558": 208, "4560": 208, "4562": 208, "4564": 208, "4566": 208, "4568": 208, "4570": 208, "4572": 208, "4574": 208, "4578": 208, "4580": 208, "4582": 208, "4584": 208, "4586": 208, "4588": 208, "4590": 208, "4592": 208, "4594": 208, "4596": 208, "4598": 208, "4600": 208, "4602": 208, "4604": 208, "4606": 208, "4608": 208, "4610": 208, "4612": 208, "4614": 208, "4616": 208, "4618": 208, "4620": 208, "4622": 208, "4624": 208, "4626": 208, "4628": [208, 221], "4630": [208, 413], "4632": 208, "4634": 208, "4636": 208, "4638": 208, "4640": 208, "4642": 208, "4644": 208, "4646": 208, "4648": 208, "4650": 208, "4652": 208, "4654": 208, "4656": 208, "4658": 208, "4662": 208, "4664": 208, "4666": 208, "4668": 208, "4670": 208, "4672": 208, "4674": 208, "4676": 208, "4680": 208, "4682": 208, "4684": 208, "4686": 208, "4688": 208, "4690": 208, "4692": 208, "4694": 208, "4696": 208, "4698": 208, "4700": 208, "4702": 208, "4704": 208, "4706": 208, "4708": 208, "4710": 208, "4712": 208, "4714": 208, "4716": 208, "4718": 208, "4720": 208, "4722": 208, "4724": 208, "4726": 208, "4728": 208, "4730": 208, "4732": 208, "4734": 208, "4736": 208, "4738": 208, "4740": 208, "4742": 208, "4744": 208, "4746": 208, "4748": 208, "4750": 208, "4752": 208, "4754": 208, "4756": 208, "4758": 208, "4760": 208, "4762": 208, "4764": 208, "4766": 208, "4768": 208, "4770": 208, "4772": 208, "4774": 208, "4776": 208, "4778": 208, "4780": 208, "4782": 208, "4784": 208, "4786": 208, "4788": 208, "4790": 208, "4792": 208, "4794": 208, "4796": 208, "4798": 208, "4802": 208, "4804": 208, "4806": 208, "4808": 208, "4810": 208, "4812": 208, "4814": 208, "4816": 208, "4818": 208, "4820": 208, "4822": 208, "4824": 208, "4826": 208, "4828": 208, "4830": 208, "4832": 208, "4834": 208, "4836": 208, "4838": 208, "4840": 208, "4842": 208, "4844": 208, "4846": 208, "4848": 208, "4850": 208, "4852": 208, "4854": 208, "4856": 208, "4858": 208, "4860": 208, "4862": 208, "4864": 208, "4866": [208, 218], "4868": 208, "4870": 208, "4872": 208, "4874": 208, "4876": 208, "4878": 208, "4880": 208, "4882": [208, 811], "4884": 208, "4886": 208, "4888": 208, "4890": 208, "4892": 208, "4894": 208, "4896": 208, "4898": 208, "4900": 208, "4902": 208, "4904": 208, "4906": 208, "4908": 208, "4910": 208, "4912": 208, "4914": 208, "4916": 208, "4918": 208, "4920": 208, "4922": 208, "4924": 208, "4926": [208, 221], "4928": 208, "4930": 208, "4932": 208, "4934": 208, "4936": 208, "4938": 208, "4940": 208, "4942": 208, "4944": 208, "4946": 208, "4948": 208, "4950": [208, 225], "4952": 208, "4954": 208, "4956": 208, "4958": 208, "4960": 208, "4962": 208, "4964": 208, "4966": 208, "4968": 208, "4970": 208, "4972": 208, "4974": 208, "4976": 208, "4978": 208, "4980": 208, "4982": 208, "4984": 208, "4986": 208, "4988": 208, "4990": 208, "4992": 208, "4994": 208, "4996": 208, "4998": 208, "5002": 208, "5004": 208, "5006": 208, "5008": 208, "5010": 208, "5012": 208, "5014": 208, "5016": 208, "5018": 208, "5020": 208, "5022": 208, "5024": 208, "5026": 208, "5028": 208, "5030": 208, "5032": 208, "5034": 208, "5036": 208, "5038": 208, "5040": 208, "5042": 208, "5044": 208, "5046": 208, "5048": 208, "5052": 208, "5054": 208, "5056": 208, "5058": 208, "5060": 208, "5062": 208, "5064": 208, "5066": 208, "5068": 208, "5070": 208, "5072": 208, "5074": 208, "5076": 208, "5078": 208, "5080": [208, 848], "5082": 208, "5084": 208, "5086": 208, "5088": 208, "5090": 208, "5092": 208, "5094": 208, "5096": 208, "5098": 208, "5100": 208, "5102": 208, "5104": 208, "5106": 208, "5108": 208, "5110": 208, "5112": 208, "5114": 208, "5116": 208, "5118": 208, "5120": 208, "5122": 208, "5124": 208, "5126": 208, "5128": 208, "5130": 208, "5132": 208, "5134": 208, "5136": 208, "5138": 208, "5140": 208, "5142": 208, "5144": 208, "5146": 208, "5148": 208, "5150": 208, "5152": 208, "5154": 208, "5156": 208, "5158": 208, "5160": 208, "5162": 208, "5164": 208, "5166": 208, "5168": 208, "5170": 208, "5172": 208, "5174": 208, "5176": 208, "5178": 208, "5180": 208, "5182": 208, "5184": 208, "5186": 208, "5188": 208, "5190": 208, "5192": 208, "5194": 208, "5196": 208, "5198": 208, "5200": 208, "5202": 208, "5204": 208, "5206": 208, "5208": 208, "5210": 208, "5212": 208, "5214": 208, "5216": 208, "5218": 208, "5220": 208, "5222": 208, "5224": 208, "5226": 208, "5228": 208, "5230": 208, "5232": 208, "5234": 208, "5236": 208, "5238": 208, "5240": 208, "5242": 208, "5244": 208, "5246": 208, "5248": 208, "5250": 208, "5252": 208, "5254": 208, "5256": 208, "5258": 208, "5260": 208, "5262": 208, "5264": 208, "5266": 208, "5268": 208, "5270": 208, "5272": 208, "5274": 208, "5276": 208, "5278": 208, "5280": 208, "5282": 208, "5284": 208, "5286": 208, "5288": 208, "5290": 208, "5292": 208, "5294": 208, "5296": 208, "5298": 208, "5300": 208, "5302": 208, "5304": 208, "5306": 208, "5308": 208, "5310": 208, "5312": 208, "5314": 208, "5316": 208, "5318": 208, "5320": 208, "5322": 208, "5324": 208, "5326": 208, "5328": 208, "5330": 208, "5332": 208, "5334": 208, "5336": 208, "5338": 208, "5340": 208, "5342": 208, "5344": 208, "5346": 208, "5348": 208, "5350": 208, "5352": 208, "5354": 208, "5356": 208, "5358": 208, "5360": 208, "5362": [208, 251, 419], "5364": 208, "5366": 208, "5368": 208, "5370": 208, "5372": 208, "5374": 208, "5376": 208, "5378": 208, "5380": 208, "5382": 208, "5384": 208, "5386": 208, "5388": 208, "5390": 208, "5392": 208, "5394": 208, "5396": 208, "5398": 208, "5400": 208, "5402": 208, "5404": 208, "5406": 208, "5408": 208, "5410": [208, 413], "5412": 208, "5414": 208, "5416": 208, "5418": 208, "5420": 208, "5422": 208, "5424": 208, "5426": 208, "5428": 208, "5430": 208, "5432": 208, "5434": 208, "5436": 208, "5438": 208, "5440": 208, "5442": 208, "5444": 208, "5446": 208, "5448": 208, "5450": 208, "5452": 208, "5454": 208, "5456": 208, "5458": 208, "5460": 208, "5462": 208, "5464": 208, "5466": 208, "5468": 208, "5470": 208, "5472": 208, "5474": 208, "5476": 208, "5478": 208, "5480": 208, "5482": 208, "5484": 208, "5486": 208, "5488": 208, "5490": 208, "5492": 208, "5494": 208, "5496": 208, "5498": 208, "5500": 208, "5502": 208, "5504": 208, "5506": 208, "5508": 208, "5510": 208, "5512": 208, "5514": 208, "5516": 208, "5518": 208, "5520": 208, "5522": 208, "5524": 208, "5526": 208, "5528": 208, "5530": 208, "5532": 208, "5534": 208, "5536": 208, "5538": 208, "5540": 208, "5542": 208, "5544": 208, "5546": 208, "5548": 208, "5550": 208, "5552": 208, "5554": 208, "5556": 208, "5558": 208, "5560": 208, "5562": 208, "5564": 208, "5566": 208, "5568": 208, "5570": 208, "5572": 208, "5574": 208, "5576": 208, "5578": 208, "5580": 208, "5582": 208, "5584": 208, "5586": 208, "5588": 208, "5590": 208, "5592": 208, "5594": 208, "5596": 208, "5598": 208, "5600": 208, "5602": 208, "5604": 208, "5606": 208, "5608": 208, "5610": 208, "5612": 208, "5614": 208, "5616": 208, "5618": 208, "5620": 208, "5622": 208, "5624": 208, "5626": 208, "5628": 208, "5630": 208, "5632": 208, "5634": 208, "5636": 208, "5638": 208, "5640": 208, "5642": 208, "5644": 208, "5646": 208, "5648": 208, "5650": 208, "5652": 208, "5654": 208, "5656": 208, "5658": 208, "5660": 208, "5662": 208, "5664": 208, "5666": 208, "5668": 208, "5670": 208, "5672": 208, "5674": 208, "5676": 208, "5678": [208, 881], "5680": 208, "5682": 208, "5684": 208, "5686": 208, "5688": 208, "5690": 208, "5692": 208, "5694": 208, "5696": 208, "5698": 208, "5700": 208, "5702": 208, "5704": 208, "5706": 208, "5708": 208, "5710": 208, "5712": 208, "5714": 208, "5716": 208, "5718": 208, "5720": 208, "5722": 208, "5724": 208, "5726": 208, "5728": 208, "5730": 208, "5732": 208, "5734": 208, "5736": 208, "5738": 208, "5740": 208, "5742": 208, "5744": 208, "5746": 208, "5748": 208, "5750": 208, "5752": 208, "5754": 208, "5756": 208, "5758": 208, "5760": 208, "5762": 208, "5764": 208, "5766": 208, "5768": 208, "5770": 208, "5772": 208, "5774": 208, "5776": 208, "5778": 208, "5780": 208, "5782": 208, "5784": 208, "5786": 208, "5788": 208, "5790": 208, "5792": 208, "5794": 208, "5796": 208, "5798": 208, "5800": 208, "5802": 208, "5804": 208, "5806": 208, "5808": 208, "5810": 208, "5812": 208, "5814": 208, "5816": 208, "5818": 208, "5820": 208, "5822": 208, "5824": 208, "5826": 208, "5828": 208, "5830": 208, "5832": [208, 218], "5834": 208, "5836": 208, "5838": 208, "5840": 208, "5842": 208, "5844": 208, "5846": 208, "5848": 208, "5850": 208, "5852": 208, "5854": 208, "5856": 208, "5858": 208, "5860": 208, "5862": 208, "5864": 208, "5866": 208, "5868": 208, "5870": 208, "5872": 208, "5874": 208, "5876": 208, "5878": 208, "5880": 208, "5882": 208, "5884": 208, "5886": 208, "5888": 208, "5890": 208, "5892": 208, "5894": 208, "5896": 208, "5898": 208, "5900": 208, "5902": 208, "5904": 208, "5906": 208, "5908": 208, "5910": 208, "5912": 208, "5914": 208, "5916": 208, "5918": 208, "5920": 208, "5922": 208, "5924": 208, "5926": 208, "5928": 208, "5930": 208, "5932": 208, "5934": 208, "5936": 208, "5938": 208, "5940": 208, "5942": 208, "5944": 208, "5946": 208, "5948": 208, "5950": 208, "5952": 208, "5954": 208, "5956": 208, "5958": 208, "5960": 208, "5962": 208, "5964": 208, "5966": 208, "5968": 208, "5970": 208, "5972": 208, "5974": 208, "5976": 208, "5978": 208, "5980": 208, "5982": 208, "5984": 208, "5986": 208, "5988": 208, "5990": 208, "5992": 208, "5994": 208, "5996": 208, "5998": 208, "6000": [208, 980], "6002": 208, "6004": 208, "6006": 208, "6008": 208, "6010": 208, "6012": 208, "6014": 208, "6016": 208, "6018": 208, "6020": 208, "6022": 208, "6024": 208, "6026": 208, "6028": 208, "6030": 208, "6032": 208, "6034": 208, "6036": 208, "6038": 208, "6040": 208, "6042": 208, "6044": 208, "6046": 208, "6048": 208, "6050": 208, "6052": 208, "6054": 208, "6056": 208, "6058": 208, "6060": 208, "6062": 208, "6064": 208, "6066": 208, "6068": 208, "6070": 208, "6072": 208, "6074": 208, "6076": 208, "6078": 208, "6080": 208, "6082": 208, "6084": 208, "6086": 208, "6088": 208, "6090": 208, "6092": 208, "6094": 208, "6096": 208, "6098": 208, "6100": 208, "6102": 208, "6104": 208, "6106": 208, "6108": 208, "6110": 208, "6112": 208, "6114": 208, "6116": 208, "6118": 208, "6120": 208, "6122": 208, "6124": 208, "6126": 208, "6128": 208, "6130": 208, "6132": 208, "6134": 208, "6136": 208, "6138": 208, "6140": 208, "6142": 208, "6144": 208, "6146": 208, "6148": 208, "6150": 208, "6152": 208, "6154": 208, "6156": 208, "6158": 208, "6160": 208, "6162": 208, "6164": 208, "6166": 208, "6168": 208, "6170": 208, "6172": 208, "6174": 208, "6176": 208, "6178": 208, "6180": 208, "6182": 208, "6184": 208, "6186": 208, "6188": 208, "6190": 208, "6192": 208, "6194": 208, "6196": 208, "6198": 208, "6200": 208, "6202": 208, "6204": 208, "6206": 208, "6208": 208, "6210": 208, "6212": 208, "6214": 208, "6216": 208, "6218": 208, "6220": 208, "6222": 208, "6224": 208, "6226": 208, "6228": 208, "6230": 208, "6232": 208, "6234": 208, "6236": 208, "6238": 208, "6240": 208, "6242": 208, "6244": 208, "6246": 208, "6248": 208, "6250": 208, "6252": 208, "6254": 208, "6256": 208, "6258": 208, "6260": 208, "6262": 208, "6264": 208, "6266": 208, "6268": 208, "6270": 208, "6272": 208, "6274": 208, "6276": 208, "6278": 208, "6280": 208, "6282": 208, "6284": 208, "6286": 208, "6288": 208, "6290": 208, "6292": 208, "6294": 208, "6296": 208, "6298": 208, "6300": 208, "6302": 208, "6304": 208, "6306": 208, "6308": 208, "6310": 208, "6312": 208, "6314": 208, "6316": 208, "6318": 208, "6320": 208, "6322": 208, "6324": 208, "6326": 208, "6328": 208, "6330": 208, "6332": 208, "6334": 208, "6336": 208, "6338": 208, "6340": 208, "6342": 208, "6344": 208, "6346": 208, "6348": 208, "6350": 208, "6352": 208, "6354": 208, "6356": 208, "6358": 208, "6360": 208, "6362": 208, "6364": 208, "6366": 208, "6368": 208, "6370": 208, "6372": 208, "6374": 208, "6376": 208, "6378": 208, "6380": 208, "6382": 208, "6384": 208, "6386": 208, "6388": 208, "6390": 208, "6392": 208, "6394": 208, "6396": 208, "6398": 208, "6400": 208, "6402": 208, "6404": 208, "6406": 208, "6408": 208, "6410": 208, "6412": 208, "6414": 208, "6416": 208, "6418": 208, "6420": 208, "6422": 208, "6424": 208, "6426": 208, "6428": 208, "6430": 208, "6432": 208, "6434": 208, "6436": 208, "6438": 208, "6440": 208, "6442": 208, "6444": 208, "6446": 208, "6448": 208, "6450": 208, "6452": 208, "6454": 208, "6456": 208, "6458": 208, "6460": 208, "6462": 208, "6464": 208, "6466": 208, "6468": 208, "6470": 208, "6472": 208, "6474": 208, "6476": 208, "6478": 208, "6480": 208, "6482": 208, "6484": 208, "6486": 208, "6488": 208, "6490": 208, "6492": 208, "6494": 208, "6496": 208, "6498": 208, "6500": 208, "6502": 208, "6504": 208, "6506": 208, "6508": 208, "6510": 208, "6512": 208, "6514": 208, "6516": 208, "6518": 208, "6520": 208, "6522": 208, "6524": 208, "6526": 208, "6528": 208, "6530": 208, "6532": 208, "6534": 208, "6536": 208, "6538": 208, "6540": 208, "6542": 208, "6544": 208, "6546": 208, "6548": 208, "6550": 208, "6552": 208, "6554": 208, "6556": 208, "6558": 208, "6560": 208, "6562": 208, "6564": 208, "6566": 208, "6568": 208, "6570": 208, "6572": 208, "6574": 208, "6576": 208, "6578": 208, "6580": 208, "6582": 208, "6584": 208, "6586": 208, "6588": 208, "6590": 208, "6592": 208, "6594": 208, "6596": 208, "6598": 208, "6600": 208, "6602": 208, "6604": 208, "6606": 208, "6608": 208, "6610": 208, "6612": 208, "6614": 208, "6616": 208, "6618": 208, "6620": 208, "6622": 208, "6624": 208, "6626": 208, "6628": 208, "6630": 208, "6632": 208, "6634": 208, "6636": 208, "6638": 208, "6640": 208, "6642": 208, "6644": 208, "6646": 208, "6648": 208, "6650": 208, "6652": 208, "6654": 208, "6656": 208, "6658": 208, "6660": 208, "6662": 208, "6664": 208, "6666": 208, "6668": 208, "6670": 208, "6672": 208, "6674": 208, "6676": 208, "6678": 208, "6680": 208, "6682": 208, "6684": 208, "6686": 208, "6688": 208, "6690": 208, "6692": 208, "6694": 208, "6696": 208, "6698": 208, "6700": 208, "6702": 208, "6704": 208, "6706": 208, "6708": 208, "6710": 208, "6714": 208, "6716": [208, 231], "6718": 208, "6720": 208, "6722": 208, "6724": 208, "6726": 208, "6728": 208, "6730": 208, "6732": 208, "6734": 208, "6736": 208, "6738": 208, "6740": 208, "6742": 208, "6744": 208, "6746": 208, "6748": 208, "6750": 208, "6752": 208, "6754": 208, "6756": 208, "6758": 208, "6760": 208, "6762": 208, "6764": 208, "6766": 208, "6768": 208, "6770": 208, "6772": 208, "6774": 208, "6776": 208, "6778": 208, "6780": 208, "6782": 208, "6784": 208, "6786": 208, "6788": 208, "6790": 208, "6792": 208, "6794": 208, "6796": 208, "6798": 208, "6800": 208, "6802": 208, "6804": 208, "6806": 208, "6808": 208, "6810": 208, "6812": 208, "6814": 208, "6816": 208, "6818": 208, "6820": 208, "6822": 208, "6824": 208, "6826": 208, "6828": 208, "6830": 208, "6832": 208, "6834": 208, "6836": 208, "6838": 208, "6840": 208, "6842": 208, "6844": 208, "6846": 208, "6848": 208, "6850": 208, "6852": 208, "6854": 208, "6856": 208, "6858": [208, 257], "6860": 208, "6862": 208, "6864": 208, "6866": 208, "6868": 208, "6870": 208, "6872": 208, "6874": 208, "6876": 208, "6878": 208, "6880": 208, "6882": 208, "6884": 208, "6886": 208, "6888": 208, "6890": 208, "6892": 208, "6894": 208, "6896": 208, "6898": 208, "6900": 208, "6902": 208, "6904": 208, "6906": 208, "6908": 208, "6910": 208, "6912": 208, "6914": 208, "6916": 208, "6918": 208, "6920": 208, "6922": 208, "6924": 208, "6926": 208, "6928": 208, "6930": 208, "6932": 208, "6934": 208, "6936": 208, "6938": 208, "6940": 208, "6942": 208, "6944": 208, "6946": 208, "6948": 208, "6950": 208, "6952": 208, "6954": 208, "6956": 208, "6958": 208, "6960": 208, "6962": 208, "6964": 208, "6966": 208, "6968": 208, "6970": 208, "6972": 208, "6974": 208, "6976": 208, "6978": 208, "6980": 208, "6982": 208, "6984": 208, "6986": 208, "6988": 208, "6990": 208, "6992": 208, "6994": 208, "6996": 208, "6998": 208, "7000": 208, "7002": 208, "7004": 208, "7006": 208, "7008": 208, "7010": 208, "7012": 208, "7014": 208, "7016": 208, "7018": 208, "7020": 208, "7022": 208, "7024": 208, "7026": 208, "7028": 208, "7030": 208, "7032": 208, "7034": 208, "7036": 208, "7038": 208, "7040": 208, "7042": 208, "7044": 208, "7046": 208, "7048": 208, "7050": 208, "7052": 208, "7054": 208, "7056": 208, "7058": 208, "7060": 208, "7062": 208, "7064": 208, "7066": 208, "7068": 208, "7070": 208, "7072": 208, "7074": 208, "7076": 208, "7078": 208, "7080": 208, "7082": 208, "7084": 208, "7086": 208, "7088": 208, "7090": 208, "7092": 208, "7094": 208, "7096": 208, "7098": 208, "7100": 208, "7102": 208, "7104": 208, "7106": 208, "7108": 208, "7110": 208, "7112": 208, "7114": 208, "7116": 208, "7118": 208, "7120": 208, "7122": 208, "7124": 208, "7126": 208, "7128": 208, "7130": 208, "7132": 208, "7134": 208, "7136": 208, "7138": 208, "7140": 208, "7142": 208, "7144": 208, "7146": 208, "7148": 208, "7150": 208, "7152": 208, "7154": 208, "7156": 208, "7158": 208, "7160": 208, "7162": 208, "7164": 208, "7166": 208, "7168": 208, "7170": 208, "7172": 208, "7174": 208, "7176": 208, "7178": 208, "7180": 208, "7182": 208, "7184": 208, "7186": 208, "7188": 208, "7190": 208, "7192": 208, "7194": 208, "7196": 208, "7198": 208, "7200": 208, "7202": 208, "7204": 208, "7206": 208, "7208": 208, "7210": 208, "7212": 208, "7214": 208, "7216": 208, "7218": 208, "7220": 208, "7222": 208, "7224": 208, "7226": 208, "7228": 208, "7230": 208, "7232": 208, "7234": 208, "7236": 208, "7238": 208, "7240": 208, "7242": 208, "7244": 208, "7246": 208, "7248": 208, "7250": 208, "7252": 208, "7254": 208, "7256": 208, "7258": 208, "7260": 208, "7262": 208, "7264": 208, "7266": 208, "7268": 208, "7270": 208, "7272": 208, "7274": 208, "7276": 208, "7278": 208, "7280": 208, "7282": 208, "7284": 208, "7286": 208, "7288": 208, "7290": 208, "7292": 208, "7294": 208, "7296": 208, "7298": 208, "7300": 208, "7302": 208, "7304": 208, "7306": 208, "7308": 208, "7310": 208, "7312": 208, "7314": 208, "7316": 208, "7318": 208, "7320": 208, "7322": 208, "7324": 208, "7326": 208, "7328": 208, "7330": 208, "7332": 208, "7334": 208, "7336": 208, "7338": 208, "7340": 208, "7342": 208, "7344": 208, "7346": 208, "7348": 208, "7350": 208, "7352": 208, "7354": 208, "7356": 208, "7358": 208, "7360": 208, "7362": 208, "7364": 208, "7366": 208, "7368": 208, "7370": 208, "7372": 208, "7374": 208, "7376": 208, "7378": 208, "7380": 208, "7382": 208, "7384": 208, "7386": 208, "7388": 208, "7392": 208, "7394": 208, "7396": 208, "7398": 208, "7400": 208, "7402": 208, "7404": 208, "7406": 208, "7408": 208, "7410": 208, "7412": 208, "7414": 208, "7416": 208, "7418": 208, "7420": 208, "7422": 208, "7424": 208, "7426": 208, "7428": 208, "7430": 208, "7432": 208, "7434": 208, "7436": 208, "7438": 208, "7440": 208, "7442": 208, "7444": 208, "7446": 208, "7448": 208, "7450": 208, "7452": 208, "7454": 208, "7456": 208, "7458": 208, "7460": 208, "7462": 208, "7464": 208, "7466": 208, "7468": 208, "7470": 208, "7472": 208, "7474": 208, "7476": 208, "7478": 208, "7480": 208, "7482": 208, "7484": 208, "7486": 208, "7488": 208, "7490": 208, "7492": 208, "7494": 208, "7496": 208, "7498": 208, "7500": 208, "7502": 208, "7504": 208, "7506": 208, "7508": 208, "7510": 208, "7512": 208, "7514": 208, "7516": 208, "7518": 208, "7520": 208, "7522": 208, "7524": 208, "7526": 208, "7528": 208, "7530": 208, "7532": 208, "7534": 208, "7536": 208, "7538": 208, "7540": 208, "7542": 208, "7544": 208, "7546": 208, "7548": 208, "7550": 208, "7552": 208, "7554": 208, "7556": 208, "7558": 208, "7560": 208, "7562": 208, "7564": 208, "7566": 208, "7568": 208, "7570": 208, "7572": 208, "7574": 208, "7576": 208, "7578": 208, "7580": 208, "7582": 208, "7584": 208, "7586": 208, "7588": 208, "7590": 208, "7592": 208, "7594": 208, "7596": 208, "7598": 208, "7600": 208, "7602": 208, "7604": 208, "7606": 208, "7608": 208, "7610": 208, "7612": 208, "7614": 208, "7616": 208, "7618": 208, "7620": 208, "7622": 208, "7624": 208, "7626": 208, "7628": 208, "7630": 208, "7632": 208, "7634": 208, "7636": 208, "7638": 208, "7640": 208, "7642": 208, "7644": 208, "7646": 208, "7648": 208, "7650": 208, "7652": 208, "7654": 208, "7656": 208, "7658": 208, "7660": 208, "7662": 208, "7664": 208, "7666": 208, "7668": 208, "7670": 208, "7672": 208, "7674": 208, "7676": 208, "7678": 208, "7680": 208, "7682": 208, "7684": 208, "7686": 208, "7688": 208, "7690": 208, "7692": 208, "7694": 208, "7696": 208, "7698": 208, "7700": 208, "7702": 208, "7704": 208, "7706": 208, "7708": 208, "7710": 208, "7712": 208, "7714": 208, "7716": 208, "7718": 208, "7720": 208, "7722": 208, "7724": 208, "7726": 208, "7728": 208, "7730": 208, "7732": 208, "7734": 208, "7736": 208, "7738": 208, "7740": 208, "7742": 208, "7744": 208, "7746": 208, "7748": 208, "7750": 208, "7752": 208, "7754": 208, "7756": 208, "7758": 208, "7760": 208, "7762": 208, "7764": 208, "7766": 208, "7768": 208, "7770": 208, "7772": 208, "7774": 208, "7776": 208, "7778": 208, "7780": 208, "7782": 208, "7784": 208, "7786": 208, "7788": 208, "7790": 208, "7792": 208, "7794": 208, "7796": 208, "7798": 208, "7800": 208, "7802": 208, "7804": 208, "7806": 208, "7808": 208, "7810": 208, "7812": 208, "7814": 208, "7816": 208, "7818": 208, "7820": 208, "7822": 208, "7824": 208, "7826": 208, "7828": 208, "7830": 208, "7832": 208, "7834": 208, "7836": 208, "7838": 208, "7842": 208, "7844": 208, "7846": 208, "7848": 208, "7850": 208, "7852": 208, "7854": 208, "7856": 208, "7858": 208, "7860": 208, "7862": 208, "7864": 208, "7866": 208, "7868": 208, "7870": 208, "7872": 208, "7874": 208, "7878": 208, "7880": 208, "7882": 208, "7884": 208, "7886": 208, "7888": 208, "7890": 208, "7892": 208, "7894": 208, "7896": 208, "7898": 208, "7900": 208, "7902": 208, "7904": 208, "7906": 208, "7908": 208, "7910": 208, "7912": 208, "7914": 208, "7916": 208, "7918": 208, "7920": 208, "7922": 208, "7924": 208, "7926": 208, "7928": 208, "7930": 208, "7932": 208, "7934": 208, "7936": 208, "7938": 208, "7940": 208, "7942": 208, "7944": 208, "7946": 208, "7948": 208, "7950": 208, "7952": 208, "7954": 208, "7956": 208, "7958": 208, "7960": 208, "7962": 208, "7964": 208, "7966": 208, "7968": 208, "7970": 208, "7972": 208, "7974": 208, "7976": 208, "7978": 208, "7980": 208, "7982": 208, "7984": 208, "7986": 208, "7988": 208, "7990": 208, "7992": 208, "7994": 208, "7996": 208, "7998": 208, "8002": 208, "8004": 208, "8006": 208, "8008": 208, "8012": 208, "8014": 208, "8016": 208, "8018": 208, "8022": 208, "8024": 208, "8026": 208, "8028": 208, "8030": 208, "8032": 208, "8034": 208, "8036": 208, "8038": 208, "8040": 208, "8042": 208, "8044": 208, "8046": 208, "8048": 208, "8050": 208, "8052": 208, "8054": 208, "8056": 208, "8058": 208, "8060": 208, "8062": 208, "8064": 208, "8066": 208, "8068": 208, "8070": 208, "8072": 208, "8074": 208, "8076": 208, "8078": 208, "8080": 208, "8082": 208, "8084": 208, "8086": 208, "8088": 208, "8090": 208, "8092": 208, "8094": 208, "8096": 208, "8098": 208, "8100": 208, "8102": [208, 941, 942], "8104": 208, "8106": 208, "8108": 208, "8110": 208, "8112": 208, "8114": 208, "8116": 208, "8118": 208, "8120": 208, "8122": 208, "8124": 208, "8126": 208, "8128": 208, "8130": 208, "8132": 208, "8134": 208, "8136": 208, "8138": 208, "8140": 208, "8142": 208, "8144": 208, "8146": 208, "8148": 208, "8150": 208, "8152": 208, "8154": 208, "8156": 208, "8158": 208, "8160": 208, "8162": 208, "8164": 208, "8166": 208, "8168": 208, "8170": 208, "8172": 208, "8174": 208, "8176": 208, "8178": 208, "8180": 208, "8182": 208, "8184": 208, "8186": 208, "8188": 208, "8190": 208, "8194": 208, "8196": 208, "8198": 208, "8200": 208, "8202": 208, "8204": 208, "8206": 208, "8208": 208, "8210": 208, "8212": 208, "8214": 208, "8216": 208, "8218": 208, "8220": 208, "8222": 208, "8224": 208, "8226": 208, "8228": 208, "8230": 208, "8232": 208, "8234": 208, "8238": 208, "8240": 208, "8242": 208, "8244": 208, "8246": 208, "8248": 208, "8250": 208, "8252": 208, "8254": 208, "8256": 208, "8258": 208, "8260": [208, 766], "8262": 208, "8264": 208, "8266": 208, "8268": 208, "8270": 208, "8272": 208, "8274": 208, "8276": 208, "8278": 208, "8280": 208, "8282": 208, "8284": 208, "8286": 208, "8288": 208, "8290": 208, "8292": 208, "8294": 208, "8296": 208, "8298": 208, "8300": 208, "8302": 208, "8304": 208, "8306": 208, "8308": 208, "8310": 208, "8312": 208, "8314": 208, "8316": 208, "8318": 208, "8320": 208, "8322": 208, "8324": 208, "8326": 208, "8328": 208, "8330": 208, "8332": 208, "8334": 208, "8336": 208, "8338": 208, "8340": 208, "8342": 208, "8344": 208, "8346": 208, "8348": 208, "8350": 208, "8352": 208, "8354": 208, "8356": 208, "8358": 208, "8360": 208, "8362": 208, "8364": 208, "8366": 208, "8368": 208, "8370": 208, "8372": 208, "8374": 208, "8376": 208, "8378": 208, "8380": 208, "8382": 208, "8384": 208, "8386": 208, "8388": 208, "8390": 208, "8392": 208, "8394": 208, "8396": 208, "8398": 208, "8400": 208, "8402": 208, "8404": 208, "8406": 208, "8408": 208, "8410": 208, "8412": 208, "8414": 208, "8416": 208, "8418": 208, "8420": 208, "8422": 208, "8424": 208, "8426": 208, "8428": 208, "8430": 208, "8432": 208, "8434": 208, "8436": 208, "8438": 208, "8440": 208, "8442": 208, "8444": 208, "8446": 208, "8448": 208, "8450": 208, "8452": 208, "8454": 208, "8456": 208, "8458": 208, "8460": 208, "8464": 208, "8466": 208, "8468": 208, "8470": 208, "8472": 208, "8474": 208, "8476": 208, "8478": 208, "8480": 208, "8482": 208, "8484": 208, "8486": 208, "8488": 208, "8490": 208, "8492": 208, "8494": 208, "8496": 208, "8498": 208, "8500": 208, "8502": 208, "8504": 208, "8506": 208, "8508": 208, "8510": 208, "8512": 208, "8514": 208, "8516": 208, "8518": 208, "8520": 208, "8522": 208, "8524": 208, "8526": 208, "8528": 208, "8530": 208, "8532": 208, "8534": 208, "8536": 208, "8538": 208, "8540": 208, "8542": 208, "8544": 208, "8546": 208, "8548": 208, "8550": 208, "8552": 208, "8554": 208, "8556": 208, "8558": 208, "8560": 208, "8562": 208, "8564": 208, "8566": 208, "8568": 208, "8570": 208, "8572": 208, "8574": 208, "8576": 208, "8578": 208, "8580": 208, "8582": 208, "8584": 208, "8586": 208, "8588": 208, "8590": 208, "8592": 208, "8594": 208, "8596": 208, "8598": 208, "8600": 208, "8602": 208, "8604": 208, "8606": 208, "8608": 208, "8610": 208, "8612": 208, "8614": 208, "8616": 208, "8618": 208, "8620": 208, "8622": 208, "8624": 208, "8626": 208, "8628": 208, "8630": 208, "8632": 208, "8634": 208, "8636": 208, "8638": 208, "8640": 208, "8642": 208, "8644": 208, "8646": 208, "8648": 208, "8650": 208, "8652": 208, "8654": 208, "8656": 208, "8658": 208, "8660": 208, "8662": 208, "8664": 208, "8666": 208, "8668": 208, "8670": 208, "8672": 208, "8674": 208, "8676": 208, "8678": 208, "8680": 208, "8682": 208, "8684": 208, "8686": 208, "8688": 208, "8690": 208, "8692": 208, "8694": 208, "8696": 208, "8698": 208, "8700": 208, "8702": 208, "8704": 208, "8706": 208, "8708": 208, "8710": 208, "8712": 208, "8714": 208, "8716": 208, "8718": 208, "8720": 208, "8722": 208, "8724": 208, "8726": 208, "8728": 208, "8730": 208, "8732": 208, "8734": 208, "8736": 208, "8738": 208, "8740": 208, "8742": 208, "8744": 208, "8746": 208, "8748": 208, "8750": 208, "8752": 208, "8754": 208, "8756": 208, "8758": 208, "8760": 208, "8762": 208, "8764": 208, "8766": 208, "8768": 208, "8770": 208, "8772": 208, "8774": 208, "8776": 208, "8778": 208, "8780": 208, "8782": 208, "8784": 208, "8786": 208, "8788": 208, "8790": 208, "8792": 208, "8794": 208, "8796": 208, "8798": 208, "8800": 208, "8802": 208, "8804": 208, "8806": 208, "8808": 208, "8810": 208, "8812": 208, "8814": 208, "8816": 208, "8818": 208, "8820": 208, "8822": 208, "8824": 208, "8826": 208, "8828": 208, "8830": 208, "8832": 208, "8834": 208, "8836": 208, "8838": 208, "8840": 208, "8842": 208, "8844": 208, "8846": 208, "8848": 208, "8850": 208, "8852": 208, "8854": 208, "8856": 208, "8858": 208, "8860": 208, "8862": 208, "8864": 208, "8866": 208, "8868": 208, "8870": 208, "8872": 208, "8874": 208, "8876": 208, "8878": 208, "8880": 208, "8882": 208, "8884": 208, "8886": 208, "8888": 208, "8890": 208, "8892": 208, "8894": 208, "8896": 208, "8898": 208, "8900": 208, "8902": 208, "8904": 208, "8906": 208, "8908": 208, "8910": 208, "8912": 208, "8914": 208, "8916": 208, "8918": 208, "8920": 208, "8922": 208, "8924": 208, "8926": 208, "8928": 208, "8930": 208, "8932": 208, "8934": 208, "8936": 208, "8938": 208, "8940": 208, "8942": 208, "8944": 208, "8946": 208, "8948": 208, "8950": 208, "8952": 208, "8954": 208, "8956": 208, "8958": 208, "8960": 208, "8962": 208, "8964": 208, "8966": 208, "8968": 208, "8970": 208, "8972": 208, "8974": 208, "8976": 208, "8978": 208, "8980": 208, "8982": 208, "8984": 208, "8986": 208, "8988": 208, "8990": 208, "8992": 208, "8994": 208, "8996": 208, "8998": 208, "9002": 208, "9004": 208, "9006": 208, "9008": 208, "9010": 208, "9012": 208, "9014": 208, "9016": 208, "9018": 208, "9020": 208, "9022": 208, "9024": 208, "9026": 208, "9028": 208, "9030": 208, "9032": 208, "9034": 208, "9036": 208, "9038": 208, "9040": 208, "9042": 208, "9044": 208, "9046": 208, "9048": 208, "9050": 208, "9052": 208, "9054": 208, "9056": 208, "9058": 208, "9060": 208, "9062": 208, "9064": 208, "9066": 208, "9068": 208, "9070": 208, "9072": 208, "9074": 208, "9076": 208, "9078": 208, "9080": 208, "9082": 208, "9084": 208, "9086": 208, "9088": 208, "9090": 208, "9092": 208, "9094": 208, "9096": 208, "9098": 208, "9100": 208, "9102": 208, "9104": 208, "9106": 208, "9108": 208, "9110": 208, "9112": 208, "9114": 208, "9116": 208, "9118": 208, "9120": 208, "9122": 208, "9124": 208, "9126": 208, "9128": 208, "9130": 208, "9132": 208, "9134": 208, "9136": 208, "9138": 208, "9140": 208, "9142": 208, "9144": 208, "9146": 208, "9148": 208, "9150": 208, "9152": 208, "9154": 208, "9156": 208, "9158": 208, "9160": 208, "9162": 208, "9164": 208, "9166": 208, "9168": 208, "9170": 208, "9172": 208, "9174": 208, "9176": 208, "9178": 208, "9180": 208, "9182": 208, "9184": 208, "9186": 208, "9188": 208, "9190": 208, "9192": 208, "9194": 208, "9196": 208, "9198": 208, "9200": 208, "9202": 208, "9204": 208, "9206": 208, "9208": 208, "9210": 208, "9212": 208, "9214": 208, "9216": 208, "9218": 208, "9220": 208, "9222": 208, "9224": 208, "9226": 208, "9228": 208, "9230": 208, "9232": 208, "9234": 208, "9236": 208, "9238": 208, "9240": 208, "9242": 208, "9244": 208, "9246": 208, "9248": 208, "9250": 208, "9252": 208, "9254": 208, "9256": 208, "9258": 208, "9260": 208, "9262": 208, "9264": 208, "9266": 208, "9268": 208, "9270": 208, "9272": 208, "9274": 208, "9276": 208, "9278": 208, "9280": 208, "9282": 208, "9284": 208, "9286": 208, "9288": 208, "9290": 208, "9292": 208, "9294": 208, "9296": 208, "9298": 208, "9300": 208, "9302": 208, "9304": 208, "9306": 208, "9308": 208, "9310": 208, "9312": 208, "9314": 208, "9316": 208, "9318": 208, "9320": 208, "9322": 208, "9324": 208, "9326": 208, "9328": 208, "9330": 208, "9332": 208, "9334": 208, "9336": 208, "9338": 208, "9340": 208, "9342": 208, "9344": 208, "9346": 208, "9348": 208, "9350": 208, "9352": 208, "9354": 208, "9356": 208, "9358": 208, "9360": 208, "9362": 208, "9364": 208, "9366": 208, "9368": 208, "9370": 208, "9372": 208, "9374": 208, "9376": 208, "9378": 208, "9380": 208, "9382": 208, "9384": 208, "9386": 208, "9388": 208, "9390": 208, "9392": 208, "9394": [208, 826], "9396": 208, "9398": 208, "9400": 208, "9402": 208, "9404": 208, "9406": 208, "9408": 208, "9410": 208, "9412": 208, "9414": 208, "9416": 208, "9418": 208, "9420": 208, "9422": 208, "9424": 208, "9426": 208, "9428": 208, "9430": 208, "9432": 208, "9434": 208, "9436": 208, "9438": 208, "9440": 208, "9442": 208, "9444": 208, "9446": 208, "9448": 208, "9450": 208, "9452": 208, "9454": 208, "9456": 208, "9458": 208, "9460": 208, "9462": 208, "9464": 208, "9466": 208, "9468": 208, "9470": 208, "9472": 208, "9474": 208, "9476": 208, "9478": 208, "9480": 208, "9482": 208, "9484": 208, "9486": 208, "9488": 208, "9490": 208, "9492": 208, "9494": 208, "9496": 208, "9498": 208, "9500": 208, "9502": 208, "9504": 208, "9506": 208, "9508": 208, "9510": 208, "9512": 208, "9514": 208, "9516": 208, "9518": 208, "9520": 208, "9522": 208, "9524": 208, "9526": 208, "9528": 208, "9530": 208, "9532": 208, "9534": 208, "9536": 208, "9538": 208, "9540": 208, "9542": 208, "9544": 208, "9546": 208, "9548": 208, "9550": 208, "9552": 208, "9554": 208, "9556": 208, "9558": 208, "9560": 208, "9562": 208, "9564": 208, "9566": 208, "9568": 208, "9570": 208, "9572": 208, "9574": 208, "9576": 208, "9578": 208, "9580": 208, "9582": 208, "9584": 208, "9586": 208, "9588": 208, "9590": 208, "9592": 208, "9594": 208, "9596": 208, "9598": 208, "9600": 208, "9602": 208, "9604": 208, "9606": 208, "9608": 208, "9610": 208, "9612": 208, "9614": 208, "9616": 208, "9618": 208, "9620": 208, "9622": 208, "9624": 208, "9626": 208, "9628": 208, "9630": 208, "9632": 208, "9634": 208, "9636": 208, "9638": 208, "9640": 208, "9642": 208, "9644": 208, "9646": 208, "9648": 208, "9650": 208, "9652": 208, "9654": 208, "9656": 208, "9658": 208, "9660": 208, "9662": 208, "9664": 208, "9666": 208, "9668": 208, "9670": 208, "9672": 208, "9674": 208, "9676": 208, "9678": 208, "9680": 208, "9682": 208, "9684": 208, "9686": 208, "9688": 208, "9690": 208, "9692": 208, "9694": 208, "9696": 208, "9698": 208, "9700": 208, "9702": 208, "9704": 208, "9706": 208, "9708": 208, "9710": 208, "9712": 208, "9714": 208, "9716": 208, "9718": 208, "9720": 208, "9722": 208, "9724": 208, "9726": 208, "9728": 208, "9730": 208, "9732": 208, "9734": 208, "9736": 208, "9738": 208, "9740": 208, "9742": 208, "9744": 208, "9746": 208, "9748": 208, "9750": 208, "9752": 208, "9754": 208, "9756": 208, "9758": 208, "9760": 208, "9762": 208, "9764": 208, "9766": 208, "9768": [208, 218], "9770": 208, "9772": 208, "9774": 208, "9776": 208, "9778": 208, "9780": 208, "9782": 208, "9784": 208, "9786": 208, "9788": 208, "9790": 208, "9792": 208, "9794": 208, "9796": 208, "9798": 208, "9800": 208, "9802": 208, "9804": 208, "9806": 208, "9808": 208, "9810": 208, "9812": 208, "9814": 208, "9816": 208, "9818": 208, "9820": 208, "9822": 208, "9824": 208, "9826": 208, "9828": 208, "9830": 208, "9832": 208, "9834": 208, "9836": 208, "9838": 208, "9840": 208, "9842": 208, "9844": 208, "9846": 208, "9848": 208, "9850": 208, "9852": 208, "9854": 208, "9856": 208, "9858": 208, "9860": 208, "9862": 208, "9864": 208, "9866": 208, "9868": 208, "9870": 208, "9872": 208, "9874": 208, "9876": 208, "9878": 208, "9880": 208, "9882": 208, "9884": 208, "9886": 208, "9888": 208, "9890": 208, "9892": 208, "9894": 208, "9896": 208, "9898": 208, "9900": 208, "9902": 208, "9904": 208, "9906": 208, "9908": 208, "9910": 208, "9912": 208, "9914": 208, "9916": 208, "9918": 208, "9920": 208, "9922": 208, "9924": 208, "9926": 208, "9928": 208, "9930": 208, "9932": 208, "9934": 208, "9936": 208, "9938": 208, "9940": 208, "9942": 208, "9944": 208, "9946": 208, "9948": 208, "9950": 208, "9952": 208, "9954": 208, "9956": 208, "9958": 208, "9960": 208, "9962": 208, "9964": 208, "9966": 208, "9968": 208, "9970": 208, "9972": 208, "9974": 208, "9976": 208, "9978": 208, "9980": 208, "9982": 208, "9984": 208, "9986": 208, "9988": 208, "9990": 208, "9992": 208, "9994": 208, "9996": 208, "9998": 208, "10002": 208, "10004": 208, "10006": 208, "10008": 208, "10010": 208, "10012": 208, "10014": 208, "10016": 208, "10018": 208, "10020": 208, "10022": 208, "10024": 208, "10026": 208, "10028": 208, "10030": 208, "10032": 208, "10034": 208, "10036": 208, "10038": 208, "10040": 208, "10042": 208, "10044": 208, "10046": 208, "10048": 208, "10050": 208, "10052": 208, "10054": 208, "10056": 208, "10058": 208, "10060": 208, "10062": 208, "10064": 208, "10066": 208, "10068": 208, "10070": 208, "10072": 208, "10074": 208, "10076": 208, "10078": 208, "10080": 208, "10082": 208, "10084": 208, "10086": 208, "10088": 208, "10090": 208, "10092": 208, "10094": 208, "10096": 208, "10098": 208, "10100": 208, "10102": 208, "10104": 208, "10106": 208, "10108": 208, "10110": 208, "10112": 208, "10114": 208, "10116": 208, "10118": 208, "10120": 208, "10122": 208, "10124": 208, "10126": 208, "10128": 208, "10130": 208, "10132": 208, "10134": 208, "10136": 208, "10138": 208, "10140": 208, "10142": 208, "10144": 208, "10146": 208, "10148": 208, "10150": 208, "10152": 208, "10154": 208, "10156": 208, "10158": 208, "10160": 208, "10162": 208, "10164": 208, "10166": 208, "10168": 208, "10170": 208, "10172": 208, "10174": 208, "10176": 208, "10178": 208, "10180": 208, "10182": 208, "10184": 208, "10186": 208, "10188": 208, "10190": 208, "10192": 208, "10194": 208, "10196": 208, "10198": 208, "10200": 208, "10202": 208, "10204": 208, "10206": 208, "10208": 208, "10210": 208, "10212": 208, "10214": 208, "10216": 208, "10218": 208, "10220": 208, "10222": 208, "10224": 208, "10226": [208, 257], "10228": 208, "10230": 208, "10232": 208, "10234": 208, "10236": 208, "10238": 208, "10240": 208, "10242": 208, "10244": 208, "10246": 208, "10248": 208, "10250": 208, "10252": 208, "10254": 208, "10256": 208, "10258": 208, "10260": 208, "10262": 208, "10264": 208, "10266": 208, "10268": 208, "10270": 208, "10272": 208, "10274": 208, "10276": 208, "10278": 208, "10280": 208, "10282": 208, "10284": 208, "10286": 208, "10288": 208, "10290": 208, "10292": 208, "10294": 208, "10296": 208, "10298": 208, "10300": 208, "10302": 208, "10304": 208, "10306": 208, "10308": 208, "10310": 208, "10312": 208, "10314": 208, "10316": 208, "10318": 208, "10320": 208, "10322": 208, "10324": 208, "10326": 208, "10328": 208, "10330": 208, "10332": 208, "10334": 208, "10336": 208, "10338": 208, "10340": 208, "10342": 208, "10344": 208, "10346": 208, "10348": 208, "10350": 208, "10352": 208, "10354": 208, "10356": 208, "10358": 208, "10360": 208, "10362": 208, "10364": 208, "10366": 208, "10368": 208, "10370": 208, "10372": 208, "10374": 208, "10376": 208, "10378": 208, "10380": 208, "10382": 208, "10384": 208, "10386": 208, "10388": 208, "10390": 208, "10392": 208, "10394": 208, "10396": 208, "10398": 208, "10400": 208, "10402": 208, "10404": 208, "10406": 208, "10408": 208, "10410": 208, "10412": 208, "10414": 208, "10416": 208, "10418": 208, "10420": 208, "10422": 208, "10424": 208, "10426": 208, "10428": 208, "10430": 208, "10432": 208, "10434": 208, "10436": 208, "10438": 208, "10440": 208, "10442": 208, "10444": 208, "10446": 208, "10448": 208, "10450": 208, "10452": 208, "10454": 208, "10456": 208, "10458": 208, "10460": 208, "10462": 208, "10464": 208, "10466": 208, "10468": 208, "10470": 208, "10472": 208, "10474": 208, "10476": 208, "10478": 208, "10480": 208, "10482": 208, "10484": 208, "10486": 208, "10488": 208, "10490": 208, "10492": 208, "10494": 208, "10496": 208, "10498": 208, "10500": 208, "10502": 208, "10504": 208, "10506": 208, "10508": 208, "10510": 208, "10512": 208, "10514": 208, "10516": 208, "10518": 208, "10520": 208, "10522": 208, "10524": 208, "10526": 208, "10528": 208, "10530": 208, "10532": 208, "10534": 208, "10536": 208, "10538": 208, "10540": 208, "10542": 208, "10544": 208, "10546": 208, "10548": 208, "10550": 208, "10552": [208, 952], "10554": 208, "10556": 208, "10558": 208, "10560": 208, "10562": 208, "10564": 208, "10566": 208, "10568": 208, "10570": 208, "10572": 208, "10574": 208, "10576": 208, "10578": 208, "10580": 208, "10582": 208, "10584": 208, "10586": 208, "10588": 208, "10590": 208, "10592": 208, "10594": 208, "10596": 208, "10598": 208, "10600": 208, "10602": 208, "10604": 208, "10606": 208, "10608": 208, "10610": 208, "10612": 208, "10614": 208, "10616": 208, "10618": 208, "10620": 208, "10622": 208, "10624": 208, "10626": 208, "10628": 208, "10630": 208, "10632": 208, "10634": 208, "10636": 208, "10638": 208, "10640": 208, "10642": 208, "10644": 208, "10646": 208, "10648": 208, "10650": 208, "10652": 208, "10654": 208, "10656": 208, "10658": 208, "10660": 208, "10662": 208, "10664": 208, "10666": 208, "10668": 208, "10670": 208, "10672": 208, "10674": 208, "10676": 208, "10678": 208, "10680": 208, "10682": 208, "10684": 208, "10686": 208, "10688": 208, "10690": 208, "10692": 208, "10694": 208, "10696": 208, "10698": 208, "10700": 208, "10702": 208, "10704": 208, "10706": 208, "10708": 208, "10710": 208, "10712": 208, "10714": 208, "10716": 208, "10718": 208, "10720": 208, "10722": 208, "10724": 208, "10726": 208, "10728": 208, "10730": 208, "10732": 208, "10734": 208, "10736": 208, "10738": 208, "10740": 208, "10742": 208, "10744": 208, "10746": 208, "10748": 208, "10750": 208, "10752": 208, "10754": 208, "10756": 208, "10758": 208, "10760": 208, "10762": 208, "10764": 208, "10766": 208, "10768": 208, "10770": 208, "10772": 208, "10774": 208, "10776": 208, "10778": 208, "10780": 208, "10782": 208, "10784": 208, "10786": 208, "10788": 208, "10790": 208, "10792": 208, "10794": 208, "10796": 208, "10798": 208, "10800": 208, "10802": 208, "10804": 208, "10806": 208, "10808": 208, "10810": 208, "10812": 208, "10814": 208, "10816": 208, "10818": 208, "10820": 208, "10822": 208, "10824": 208, "10826": 208, "10828": 208, "10830": 208, "10832": 208, "10834": 208, "10836": 208, "10838": 208, "10840": 208, "10842": 208, "10844": 208, "10846": 208, "10848": 208, "10850": 208, "10852": 208, "10854": 208, "10856": 208, "10858": 208, "10860": 208, "10862": 208, "10864": 208, "10866": 208, "10868": 208, "10870": 208, "10872": 208, "10874": 208, "10876": 208, "10878": 208, "10880": 208, "10882": 208, "10884": 208, "10886": 208, "10888": 208, "10890": 208, "10892": 208, "10894": 208, "10896": 208, "10898": 208, "10900": 208, "10902": 208, "10904": 208, "10906": 208, "10908": 208, "10910": 208, "10912": 208, "10914": 208, "10916": 208, "10918": 208, "10920": 208, "10922": 208, "10924": 208, "10926": 208, "10928": 208, "10930": 208, "10932": 208, "10934": 208, "10936": 208, "10938": 208, "10940": 208, "10942": 208, "10944": 208, "10946": 208, "10948": 208, "10950": 208, "10952": 208, "10954": 208, "10956": 208, "10958": 208, "10960": 208, "10962": 208, "10964": 208, "10966": 208, "10968": 208, "10970": 208, "10972": 208, "10974": 208, "10976": 208, "10978": 208, "10980": 208, "10982": 208, "10984": 208, "10986": 208, "10988": 208, "10990": 208, "10992": 208, "10994": 208, "10996": 208, "10998": 208, "11000": 208, "11002": 208, "11004": 208, "11006": 208, "11008": 208, "11010": 208, "11012": 208, "11014": 208, "11016": 208, "11018": 208, "11020": 208, "11022": 208, "11024": 208, "11026": 208, "11028": 208, "11030": 208, "11032": 208, "11034": 208, "11036": 208, "11038": 208, "11040": 208, "11042": 208, "11044": 208, "11046": 208, "11048": 208, "11050": 208, "11052": 208, "11054": 208, "11056": 208, "11058": 208, "11060": 208, "11062": 208, "11064": 208, "11066": 208, "11068": 208, "11070": 208, "11072": 208, "11074": 208, "11076": 208, "11078": 208, "11080": 208, "11082": 208, "11084": 208, "11086": 208, "11088": 208, "11090": 208, "11092": 208, "11094": 208, "11096": 208, "11098": 208, "11100": 208, "11102": 208, "11104": 208, "11106": 208, "11108": 208, "11110": 208, "11112": 208, "11114": 208, "11116": 208, "11118": 208, "11120": 208, "11122": 208, "11124": 208, "11126": 208, "11128": 208, "11130": 208, "11132": 208, "11134": 208, "11136": 208, "11138": 208, "11140": 208, "11142": 208, "11144": 208, "11146": 208, "11148": 208, "11150": 208, "11152": 208, "11154": 208, "11156": 208, "11158": 208, "11160": 208, "11162": 208, "11164": 208, "11166": 208, "11168": 208, "11170": 208, "11172": 208, "11174": 208, "11176": 208, "11178": 208, "11180": 208, "11182": 208, "11184": 208, "11186": 208, "11188": 208, "11190": 208, "11192": 208, "11194": 208, "11196": 208, "11198": 208, "11200": 208, "11202": 208, "11204": 208, "11206": 208, "11208": 208, "11210": 208, "11212": 208, "11214": 208, "11216": 208, "11218": 208, "11220": 208, "11222": 208, "11224": 208, "11226": 208, "11228": 208, "11230": 208, "11232": 208, "11234": 208, "11236": 208, "11238": 208, "11240": 208, "11242": 208, "11244": 208, "11246": 208, "11248": 208, "11250": 208, "11252": 208, "11254": 208, "11256": 208, "11258": 208, "11260": 208, "11262": 208, "11264": 208, "11266": 208, "11268": 208, "11270": 208, "11272": 208, "11274": 208, "11276": 208, "11278": 208, "11280": 208, "11282": 208, "11284": 208, "11286": 208, "11288": 208, "11290": 208, "11292": 208, "11294": 208, "11296": 208, "11298": 208, "11300": 208, "11302": 208, "11304": 208, "11306": 208, "11308": 208, "11310": 208, "11312": 208, "11314": 208, "11316": 208, "11318": 208, "11320": 208, "11322": 208, "11324": 208, "11326": 208, "11328": 208, "11330": 208, "11332": 208, "11334": 208, "11336": 208, "11340": 208, "11342": 208, "11344": 208, "11346": 208, "11348": [208, 257], "11350": 208, "11352": 208, "11354": 208, "11356": 208, "11358": 208, "11360": 208, "11362": 208, "11364": 208, "11366": 208, "11368": 208, "11370": 208, "11372": 208, "11374": 208, "11376": 208, "11378": 208, "11380": 208, "11382": 208, "11384": 208, "11386": 208, "11388": 208, "11390": 208, "11392": 208, "11394": 208, "11396": 208, "11398": 208, "11400": 208, "11402": 208, "11404": 208, "11406": 208, "11408": 208, "11410": 208, "11412": 208, "11414": 208, "11416": 208, "11418": 208, "11420": 208, "11422": 208, "11424": 208, "11426": 208, "11428": 208, "11430": 208, "11432": 208, "11434": 208, "11436": 208, "11438": 208, "11440": 208, "11442": 208, "11444": 208, "11446": 208, "11448": 208, "11450": 208, "11452": 208, "11454": 208, "11456": 208, "11458": 208, "11460": 208, "11462": 208, "11464": 208, "11466": 208, "11468": 208, "11470": 208, "11472": 208, "11474": 208, "11476": 208, "11478": 208, "11480": 208, "11482": 208, "11484": 208, "11486": 208, "11488": 208, "11490": 208, "11492": 208, "11494": 208, "11496": 208, "11498": 208, "11500": 208, "11502": 208, "11504": 208, "11506": 208, "11508": 208, "11510": 208, "11512": 208, "11514": 208, "11516": 208, "11518": 208, "11520": 208, "11522": 208, "11524": 208, "11526": 208, "11528": 208, "11530": 208, "11532": 208, "11534": 208, "11536": 208, "11538": 208, "11540": 208, "11542": 208, "11544": 208, "11546": 208, "11548": 208, "11550": 208, "11552": 208, "11554": 208, "11556": 208, "11558": 208, "11560": 208, "11562": 208, "11564": 208, "11566": 208, "11568": 208, "11570": 208, "11572": 208, "11574": 208, "11576": 208, "11578": 208, "11580": 208, "11582": 208, "11584": 208, "11586": 208, "11588": 208, "11590": 208, "11592": 208, "11594": 208, "11596": 208, "11598": 208, "11600": 208, "11602": 208, "11604": 208, "11606": 208, "11608": 208, "11610": 208, "11612": 208, "11614": 208, "11616": 208, "11618": 208, "11620": 208, "11622": 208, "11624": 208, "11626": 208, "11628": 208, "11630": 208, "11634": 208, "11636": 208, "11638": 208, "11640": 208, "11642": 208, "11644": 208, "11646": 208, "11648": 208, "11650": 208, "11652": 208, "11654": 208, "11656": 208, "11658": 208, "11660": 208, "11662": 208, "11664": 208, "11666": 208, "11668": 208, "11670": 208, "11672": 208, "11674": 208, "11676": 208, "11678": 208, "11680": 208, "11682": 208, "11684": 208, "11686": 208, "11688": 208, "11690": 208, "11692": 208, "11694": 208, "11696": 208, "11698": 208, "11700": 208, "11702": 208, "11704": 208, "11706": 208, "11708": 208, "11710": 208, "11712": 208, "11714": 208, "11716": 208, "11718": 208, "11720": 208, "11722": 208, "11724": 208, "11726": 208, "11728": 208, "11730": 208, "11732": 208, "11734": 208, "11736": 208, "11738": 208, "11740": 208, "11742": 208, "11744": 208, "11746": 208, "11748": 208, "11750": 208, "11752": 208, "11754": 208, "11756": 208, "11758": 208, "11760": 208, "11762": 208, "11764": 208, "11766": 208, "11768": 208, "11770": 208, "11772": 208, "11774": 208, "11776": 208, "11778": 208, "11780": 208, "11782": 208, "11784": 208, "11786": 208, "11788": 208, "11790": 208, "11792": 208, "11794": 208, "11796": 208, "11798": 208, "11800": 208, "11802": 208, "11804": 208, "11806": 208, "11808": 208, "11810": 208, "11812": 208, "11814": 208, "11816": 208, "11818": 208, "11820": 208, "11822": 208, "11824": 208, "11826": 208, "11828": 208, "11830": 208, "11832": 208, "11834": 208, "11836": 208, "11838": 208, "11840": 208, "11842": 208, "11844": 208, "11846": 208, "11848": 208, "11850": 208, "11852": 208, "11854": 208, "11856": 208, "11858": 208, "11860": 208, "11862": 208, "11864": 208, "11866": 208, "11868": 208, "11870": 208, "11872": 208, "11874": 208, "11876": 208, "11878": 208, "11880": 208, "11882": 208, "11884": 208, "11886": 208, "11888": 208, "11890": 208, "11892": 208, "11894": 208, "11896": 208, "11898": 208, "11900": 208, "11902": 208, "11904": 208, "11906": 208, "11908": 208, "11910": 208, "11912": 208, "11914": 208, "11916": 208, "11918": 208, "11920": 208, "11922": 208, "11924": 208, "11926": 208, "11928": 208, "11930": 208, "11932": 208, "11934": 208, "11936": 208, "11938": 208, "11940": 208, "11942": 208, "11944": 208, "11946": 208, "11948": 208, "11950": 208, "11952": 208, "11954": 208, "11956": 208, "11958": 208, "11960": 208, "11962": 208, "11964": 208, "11966": 208, "11968": 208, "11970": 208, "11972": 208, "11974": 208, "11976": 208, "11978": 208, "11980": 208, "11982": 208, "11984": 208, "11986": 208, "11988": 208, "11990": 208, "11992": 208, "11994": 208, "11996": 208, "11998": 208, "12000": 208, "12002": 208, "12004": 208, "12006": 208, "12008": 208, "12010": 208, "12012": 208, "12014": 208, "12016": 208, "12018": 208, "12020": 208, "12022": 208, "12024": 208, "12026": 208, "12028": 208, "12030": 208, "12032": 208, "12034": 208, "12036": 208, "12038": 208, "12040": 208, "12042": 208, "12044": 208, "12046": 208, "12048": 208, "12050": 208, "12052": 208, "12054": 208, "12056": 208, "12058": 208, "12060": 208, "12062": 208, "12064": 208, "12066": 208, "12068": 208, "12070": 208, "12072": 208, "12074": 208, "12076": 208, "12078": 208, "12080": 208, "12082": 208, "12084": 208, "12086": 208, "12088": 208, "12090": 208, "12092": 208, "12094": 208, "12096": 208, "12098": 208, "12100": 208, "12102": 208, "12104": 208, "12106": 208, "12108": 208, "12110": 208, "12112": 208, "12114": 208, "12116": 208, "12118": 208, "12120": 208, "12122": 208, "12124": 208, "12126": 208, "12128": 208, "12130": 208, "12132": 208, "12134": 208, "12136": 208, "12138": 208, "12140": 208, "12142": 208, "12144": 208, "12146": 208, "12148": 208, "12150": 208, "12152": 208, "12154": 208, "12158": 208, "12160": 208, "12162": 208, "12164": 208, "12166": 208, "12168": 208, "12170": 208, "12172": 208, "12174": 208, "12176": 208, "12178": 208, "12180": 208, "12182": 208, "12184": 208, "12186": 208, "12188": 208, "12190": 208, "12192": 208, "12194": 208, "12196": 208, "12198": 208, "12200": 208, "12202": 208, "12204": 208, "12206": 208, "12208": 208, "12210": 208, "12212": 208, "12214": 208, "12216": 208, "12218": 208, "12220": 208, "12222": 208, "12224": 208, "12226": 208, "12228": 208, "12230": 208, "12232": 208, "12234": 208, "12236": 208, "12238": 208, "12240": 208, "12242": 208, "12244": 208, "12246": 208, "12248": 208, "12250": 208, "12252": 208, "12254": 208, "12256": 208, "12258": 208, "12260": 208, "12262": 208, "12264": 208, "12266": 208, "12268": 208, "12270": 208, "12272": 208, "12274": 208, "12276": 208, "12278": 208, "12280": 208, "12282": 208, "12284": 208, "12286": 208, "12288": 208, "12290": 208, "12292": 208, "12294": 208, "12296": 208, "12298": 208, "12300": 208, "12302": 208, "12304": 208, "12306": 208, "12308": 208, "12310": 208, "12312": 208, "12314": 208, "12316": 208, "12318": 208, "12320": 208, "12322": 208, "12324": 208, "12326": 208, "12328": 208, "12330": 208, "12332": 208, "12334": 208, "12336": 208, "12338": 208, "12340": 208, "12342": 208, "12344": 208, "12346": 208, "12348": 208, "12350": 208, "12352": 208, "12354": 208, "12356": 208, "12358": 208, "12360": 208, "12362": 208, "12364": 208, "12366": 208, "12368": 208, "12370": 208, "12372": 208, "12374": 208, "12376": 208, "12378": 208, "12380": 208, "12382": 208, "12384": 208, "12386": 208, "12388": 208, "12390": 208, "12392": 208, "12394": 208, "12396": 208, "12398": 208, "12400": 208, "12402": 208, "12404": 208, "12406": 208, "12408": 208, "12410": 208, "12412": 208, "12414": 208, "12416": 208, "12418": 208, "12420": 208, "12422": 208, "12424": 208, "12426": 208, "12428": 208, "12430": 208, "12432": 208, "12434": 208, "12436": 208, "12438": 208, "12440": 208, "12442": 208, "12444": 208, "12446": 208, "12448": 208, "12450": 208, "12452": 208, "12454": 208, "12456": 208, "12458": 208, "12460": 208, "12462": 208, "12464": 208, "12466": 208, "12468": 208, "12470": 208, "12472": 208, "12474": 208, "12476": 208, "12478": 208, "12480": 208, "12482": 208, "12484": 208, "12486": 208, "12488": 208, "12490": 208, "12492": 208, "12494": 208, "12496": 208, "12498": 208, "12500": 208, "12502": 208, "12504": 208, "12506": 208, "12508": 208, "12510": 208, "12512": 208, "12514": 208, "12516": 208, "12518": 208, "12520": 208, "12522": 208, "12524": 208, "12526": 208, "12528": 208, "12530": 208, "12532": 208, "12534": 208, "12536": 208, "12538": 208, "12540": 208, "12542": 208, "12544": 208, "12546": 208, "12548": 208, "12550": 208, "12552": 208, "12554": 208, "12556": 208, "12558": 208, "12560": 208, "12562": 208, "12564": 208, "12566": 208, "12568": 208, "12570": 208, "12572": 208, "12574": 208, "12576": 208, "12578": 208, "12580": 208, "12582": 208, "12584": 208, "12586": 208, "12588": 208, "12590": 208, "12592": 208, "12594": 208, "12596": 208, "12598": 208, "12600": 208, "12602": 208, "12604": 208, "12606": 208, "12608": 208, "12610": 208, "12612": 208, "12614": 208, "12616": 208, "12618": 208, "12620": 208, "12622": 208, "12624": 208, "12626": 208, "12628": 208, "12630": 208, "12632": 208, "12634": 208, "12636": 208, "12638": 208, "12640": 208, "12642": 208, "12644": 208, "12646": 208, "12648": 208, "12650": 208, "12652": 208, "12654": 208, "12656": 208, "12658": 208, "12660": 208, "12662": 208, "12664": 208, "12666": 208, "12668": 208, "12670": 208, "12672": 208, "12674": 208, "12676": 208, "12678": 208, "12680": 208, "12682": 208, "12684": 208, "12686": 208, "12688": 208, "12690": 208, "12692": 208, "12694": 208, "12696": 208, "12698": 208, "12700": 208, "12702": 208, "12704": 208, "12706": 208, "12708": 208, "12710": 208, "12712": 208, "12714": 208, "12716": 208, "12718": 208, "12720": 208, "12722": 208, "12724": 208, "12726": 208, "12728": 208, "12730": 208, "12732": 208, "12734": 208, "12736": 208, "12738": 208, "12740": 208, "12742": 208, "12744": 208, "12746": 208, "12748": 208, "12750": 208, "12752": 208, "12754": 208, "12756": 208, "12758": 208, "12760": 208, "12762": 208, "12764": 208, "12766": 208, "12768": 208, "12770": 208, "12772": 208, "12774": 208, "12776": 208, "12778": 208, "12780": 208, "12782": 208, "12784": 208, "12786": 208, "12788": 208, "12790": 208, "12792": 208, "12794": 208, "12796": 208, "12798": 208, "12800": 208, "12802": 208, "12804": 208, "12806": 208, "12808": 208, "12810": 208, "12812": 208, "12814": 208, "12816": 208, "12818": 208, "12820": 208, "12822": 208, "12824": 208, "12826": 208, "12828": 208, "12830": 208, "12832": 208, "12834": 208, "12836": 208, "12838": 208, "12840": 208, "12842": 208, "12844": 208, "12846": 208, "12848": 208, "12850": 208, "12852": 208, "12854": 208, "12856": 208, "12858": 208, "12860": 208, "12862": 208, "12864": 208, "12866": 208, "12868": 208, "12870": 208, "12872": 208, "12874": 208, "12876": 208, "12878": 208, "12880": 208, "12882": 208, "12884": 208, "12886": 208, "12888": 208, "12890": 208, "12892": 208, "12894": 208, "12896": 208, "12898": 208, "12900": 208, "12902": 208, "12904": 208, "12906": 208, "12908": 208, "12910": 208, "12912": 208, "12914": 208, "12916": 208, "12918": 208, "12920": 208, "12922": 208, "12924": 208, "12926": 208, "12928": 208, "12930": 208, "12932": 208, "12934": 208, "12936": 208, "12938": 208, "12940": 208, "12942": 208, "12944": 208, "12946": 208, "12948": 208, "12950": 208, "12952": 208, "12954": 208, "12956": 208, "12958": 208, "12960": 208, "12962": 208, "12964": 208, "12966": 208, "12968": 208, "12970": 208, "12972": 208, "12974": 208, "12976": 208, "12978": 208, "12980": 208, "12982": 208, "12984": 208, "12986": 208, "12988": 208, "12990": 208, "12992": 208, "12994": 208, "12996": 208, "12998": 208, "13000": 208, "13002": 208, "13004": 208, "13006": 208, "13008": 208, "13010": 208, "13012": 208, "13014": 208, "13016": 208, "13018": 208, "13020": 208, "13022": 208, "13024": 208, "13026": 208, "13028": 208, "13030": 208, "13032": 208, "13034": 208, "13036": 208, "13038": 208, "13040": 208, "13042": 208, "13044": 208, "13046": 208, "13048": 208, "13050": 208, "13052": 208, "13054": 208, "13056": 208, "13058": 208, "13060": 208, "13062": 208, "13064": 208, "13066": 208, "13068": 208, "13070": 208, "13072": 208, "13074": 208, "13076": 208, "13078": 208, "13080": 208, "13082": 208, "13084": 208, "13086": 208, "13088": 208, "13090": 208, "13092": 208, "13094": 208, "13096": 208, "13098": 208, "13100": 208, "13102": 208, "13104": 208, "13106": 208, "13108": 208, "13110": 208, "13112": 208, "13114": 208, "13116": 208, "13118": 208, "13120": 208, "13122": 208, "13124": 208, "13126": 208, "13128": 208, "13130": 208, "13132": 208, "13134": 208, "13136": 208, "13138": 208, "13140": 208, "13142": 208, "13144": 208, "13146": 208, "13148": 208, "13150": 208, "13152": 208, "13154": 208, "13156": 208, "13158": 208, "13160": 208, "13162": 208, "13164": 208, "13166": 208, "13168": 208, "13170": 208, "13172": 208, "13174": 208, "13176": 208, "13178": 208, "13180": 208, "13182": 208, "13184": 208, "13186": 208, "13188": 208, "13190": 208, "13192": 208, "13194": 208, "13196": 208, "13198": 208, "13200": 208, "13202": 208, "13204": 208, "13206": 208, "13208": 208, "13210": 208, "13212": 208, "13214": 208, "13216": 208, "13218": 208, "13220": 208, "13222": 208, "13224": 208, "13226": 208, "13228": 208, "13230": 208, "13232": 208, "13234": 208, "13236": 208, "13238": 208, "13240": 208, "13242": 208, "13244": 208, "13246": 208, "13248": 208, "13250": 208, "13252": 208, "13254": 208, "13256": 208, "13258": 208, "13260": 208, "13262": 208, "13264": 208, "13266": 208, "13268": 208, "13270": 208, "13272": 208, "13274": 208, "13276": 208, "13278": 208, "13280": 208, "13282": 208, "13284": 208, "13286": 208, "13288": 208, "13290": 208, "13292": 208, "13294": 208, "13296": 208, "13298": 208, "13300": 208, "13302": 208, "13304": 208, "13306": 208, "13308": 208, "13310": 208, "13312": 208, "13314": 208, "13316": 208, "13318": 208, "13320": 208, "13322": 208, "13324": 208, "13326": 208, "13328": 208, "13330": 208, "13332": 208, "13334": 208, "13336": 208, "13338": 208, "13340": 208, "13342": 208, "13344": 208, "13346": 208, "13348": 208, "13350": 208, "13352": 208, "13354": 208, "13356": 208, "13358": 208, "13360": 208, "13362": 208, "13364": 208, "13366": 208, "13368": 208, "13370": 208, "13372": 208, "13374": 208, "13376": 208, "13378": 208, "13380": 208, "13382": 208, "13384": 208, "13386": 208, "13388": 208, "13390": 208, "13392": 208, "13394": 208, "13396": 208, "13398": 208, "13400": 208, "13402": 208, "13404": 208, "13406": 208, "13408": 208, "13410": 208, "13412": 208, "13414": 208, "13416": 208, "13418": 208, "13420": 208, "13422": 208, "13424": 208, "13426": 208, "13428": 208, "13430": 208, "13432": 208, "13434": 208, "13436": 208, "13438": 208, "13440": 208, "13442": 208, "13444": 208, "13446": 208, "13448": 208, "13450": 208, "13452": 208, "13454": 208, "13456": 208, "13458": 208, "13460": 208, "13462": 208, "13464": 208, "13466": 208, "13468": 208, "13470": 208, "13472": 208, "13474": 208, "13476": 208, "13478": 208, "13480": 208, "13482": 208, "13484": 208, "13486": 208, "13488": 208, "13490": 208, "13492": 208, "13494": 208, "13496": 208, "13498": 208, "13502": 208, "13504": 208, "13506": 208, "13508": 208, "13510": 208, "13512": 208, "13514": 208, "13516": 208, "13518": 208, "13520": 208, "13522": 208, "13524": 208, "13526": 208, "13528": 208, "13530": 208, "13532": 208, "13534": 208, "13536": 208, "13538": 208, "13540": 208, "13542": 208, "13544": 208, "13546": 208, "13548": 208, "13550": 208, "13552": 208, "13554": 208, "13556": 208, "13558": 208, "13560": 208, "13562": 208, "13564": 208, "13566": 208, "13568": 208, "13570": 208, "13572": 208, "13574": 208, "13576": 208, "13578": 208, "13580": 208, "13582": 208, "13584": 208, "13586": 208, "13588": 208, "13590": 208, "13592": 208, "13594": 208, "13596": 208, "13598": 208, "13600": 208, "13602": 208, "13604": 208, "13606": 208, "13608": 208, "13610": 208, "13612": 208, "13614": 208, "13616": 208, "13618": 208, "13620": 208, "13622": 208, "13624": 208, "13626": 208, "13628": 208, "13630": 208, "13632": 208, "13634": 208, "13636": 208, "13638": 208, "13640": 208, "13642": 208, "13644": 208, "13646": 208, "13648": 208, "13650": 208, "13652": 208, "13654": 208, "13656": 208, "13658": 208, "13660": 208, "13662": 208, "13664": 208, "13666": 208, "13668": 208, "13670": 208, "13672": 208, "13674": 208, "13676": 208, "13678": 208, "13680": 208, "13682": 208, "13684": 208, "13686": 208, "13688": 208, "13690": 208, "13692": 208, "13694": 208, "13696": 208, "13698": 208, "13700": 208, "13702": 208, "13704": 208, "13706": 208, "13708": 208, "13710": 208, "13712": 208, "13714": 208, "13716": 208, "13718": 208, "13720": 208, "13722": 208, "13724": 208, "13726": 208, "13728": 208, "13730": 208, "13732": 208, "13734": 208, "13736": 208, "13738": 208, "13740": 208, "13742": 208, "13744": 208, "13746": 208, "13748": 208, "13750": 208, "13752": 208, "13754": 208, "13756": 208, "13758": 208, "13760": 208, "13762": 208, "13764": 208, "13766": 208, "13768": 208, "13770": 208, "13772": 208, "13774": 208, "13776": 208, "13778": 208, "13780": 208, "13782": 208, "13784": 208, "13786": 208, "13788": 208, "13790": 208, "13792": 208, "13794": 208, "13796": 208, "13798": 208, "13800": 208, "13802": 208, "13804": 208, "13806": 208, "13808": 208, "13810": 208, "13812": 208, "13814": 208, "13816": 208, "13818": 208, "13820": 208, "13822": 208, "13824": 208, "13826": 208, "13828": 208, "13830": 208, "13832": 208, "13834": 208, "13836": 208, "13838": 208, "13840": 208, "13842": 208, "13844": 208, "13846": 208, "13848": 208, "13850": 208, "13852": 208, "13854": 208, "13856": 208, "13858": 208, "13860": 208, "13862": 208, "13864": 208, "13866": 208, "13868": 208, "13870": 208, "13872": 208, "13874": 208, "13876": 208, "13878": 208, "13880": 208, "13882": 208, "13884": 208, "13886": 208, "13888": 208, "13890": 208, "13892": 208, "13894": 208, "13896": 208, "13898": 208, "13900": 208, "13902": 208, "13904": 208, "13906": 208, "13908": 208, "13910": 208, "13912": 208, "13914": 208, "13916": 208, "13918": 208, "13920": 208, "13922": 208, "13924": 208, "13926": 208, "13928": 208, "13930": 208, "13932": 208, "13934": 208, "13936": 208, "13938": 208, "13940": 208, "13942": 208, "13944": 208, "13946": 208, "13948": 208, "13950": 208, "13952": 208, "13954": 208, "13956": 208, "13958": 208, "13960": [208, 909], "13962": 208, "13964": 208, "13966": 208, "13968": 208, "13970": 208, "13972": 208, "13974": 208, "13976": 208, "13978": 208, "13980": 208, "13982": 208, "13984": 208, "13986": 208, "13988": 208, "13990": 208, "13992": 208, "13994": 208, "13996": 208, "13998": 208, "14000": 208, "14002": 208, "14004": 208, "14006": 208, "14008": 208, "14010": 208, "14012": 208, "14014": 208, "14016": 208, "14018": 208, "14020": 208, "14022": 208, "14024": 208, "14026": 208, "14028": 208, "14030": 208, "14032": 208, "14034": 208, "14036": 208, "14038": 208, "14040": 208, "14042": 208, "14044": 208, "14046": 208, "14048": 208, "14050": 208, "14052": 208, "14054": 208, "14056": 208, "14058": 208, "14060": 208, "14062": 208, "14064": 208, "14066": 208, "14068": 208, "14070": 208, "14072": 208, "14074": 208, "14076": 208, "14078": 208, "14080": 208, "14082": 208, "14084": 208, "14086": 208, "14088": 208, "14090": 208, "14092": 208, "14094": 208, "14096": 208, "14098": 208, "14100": 208, "14102": 208, "14104": 208, "14106": 208, "14108": 208, "14110": 208, "14112": 208, "14114": 208, "14116": 208, "14118": 208, "14120": 208, "14122": 208, "14124": 208, "14126": 208, "14128": 208, "14130": 208, "14132": 208, "14134": 208, "14136": 208, "14138": 208, "14140": 208, "14142": 208, "14144": 208, "14146": 208, "14148": 208, "14150": 208, "14152": 208, "14154": 208, "14156": 208, "14158": 208, "14160": 208, "14162": 208, "14164": 208, "14166": 208, "14168": 208, "14170": 208, "14172": 208, "14174": 208, "14176": 208, "14178": 208, "14180": 208, "14182": 208, "14184": 208, "14186": 208, "14188": 208, "14190": 208, "14192": 208, "14194": 208, "14196": 208, "14198": 208, "14200": 208, "14202": 208, "14204": 208, "14206": 208, "14208": 208, "14210": 208, "14212": 208, "14214": 208, "14216": 208, "14218": 208, "14220": 208, "14222": 208, "14224": 208, "14226": 208, "14228": 208, "14230": 208, "14232": 208, "14234": 208, "14236": 208, "14238": 208, "14240": 208, "14242": 208, "14244": 208, "14246": 208, "14248": 208, "14250": 208, "14252": 208, "14254": 208, "14256": 208, "14258": 208, "14260": 208, "14262": 208, "14264": 208, "14266": 208, "14268": 208, "14270": 208, "14272": 208, "14274": 208, "14276": 208, "14278": 208, "14280": 208, "14282": 208, "14284": 208, "14286": 208, "14288": 208, "14290": 208, "14292": 208, "14294": 208, "14296": 208, "14298": 208, "14300": 208, "14302": 208, "14304": 208, "14306": 208, "14308": 208, "14310": 208, "14312": 208, "14314": 208, "14316": 208, "14318": 208, "14320": 208, "14322": 208, "14324": 208, "14326": 208, "14328": 208, "14330": 208, "14332": 208, "14334": 208, "14336": 208, "14338": 208, "14340": 208, "14342": 208, "14344": 208, "14346": 208, "14348": 208, "14350": 208, "14352": 208, "14354": 208, "14356": 208, "14358": 208, "14360": 208, "14362": 208, "14364": 208, "14366": 208, "14368": 208, "14370": 208, "14372": 208, "14374": 208, "14376": 208, "14378": 208, "14380": 208, "14382": 208, "14384": 208, "14388": 208, "14390": 208, "14392": 208, "14394": 208, "14396": 208, "14398": 208, "14400": 208, "14402": 208, "14404": 208, "14406": 208, "14408": 208, "14410": 208, "14412": 208, "14414": 208, "14416": 208, "14418": 208, "14420": 208, "14422": 208, "14424": 208, "14426": 208, "14428": 208, "14430": 208, "14432": 208, "14434": 208, "14436": 208, "14438": 208, "14440": 208, "14442": 208, "14444": 208, "14446": 208, "14448": 208, "14450": 208, "14452": 208, "14454": 208, "14456": 208, "14458": 208, "14460": 208, "14462": 208, "14464": 208, "14466": 208, "14468": 208, "14470": 208, "14472": 208, "14474": 208, "14476": 208, "14478": 208, "14480": 208, "14482": 208, "14484": 208, "14486": 208, "14488": 208, "14490": 208, "14492": 208, "14494": 208, "14496": 208, "14498": 208, "14500": 208, "14502": 208, "14504": 208, "14506": 208, "14508": 208, "14510": 208, "14512": 208, "14514": 208, "14516": 208, "14518": 208, "14520": 208, "14522": 208, "14524": 208, "14526": 208, "14528": 208, "14530": 208, "14532": 208, "14534": 208, "14536": 208, "14538": 208, "14540": 208, "14542": 208, "14544": 208, "14546": 208, "14548": 208, "14550": 208, "14552": 208, "14554": 208, "14556": 208, "14558": 208, "14560": 208, "14562": 208, "14564": 208, "14566": 208, "14568": 208, "14570": 208, "14572": 208, "14574": 208, "14576": 208, "14578": 208, "14580": 208, "14582": 208, "14584": 208, "14586": 208, "14588": 208, "14590": 208, "14592": 208, "14594": 208, "14596": 208, "14598": 208, "14600": 208, "14602": 208, "14604": 208, "14606": 208, "14608": 208, "14610": 208, "14612": 208, "14614": 208, "14616": 208, "14618": 208, "14620": 208, "14622": 208, "14624": 208, "14626": 208, "14628": 208, "14630": 208, "14632": 208, "14634": 208, "14636": 208, "14638": 208, "14640": 208, "14642": 208, "14644": 208, "14646": 208, "14648": 208, "14650": 208, "14652": 208, "14654": 208, "14656": 208, "14658": 208, "14660": 208, "14662": 208, "14664": 208, "14666": 208, "14668": 208, "14670": 208, "14672": 208, "14674": 208, "14676": 208, "14678": 208, "14680": 208, "14682": 208, "14684": 208, "14686": 208, "14688": 208, "14690": 208, "14692": 208, "14694": 208, "14696": 208, "14698": 208, "14700": 208, "14702": 208, "14704": 208, "14706": 208, "14708": 208, "14710": 208, "14712": 208, "14714": 208, "14716": 208, "14718": 208, "14720": 208, "14722": 208, "14724": 208, "14726": 208, "14728": 208, "14730": 208, "14732": 208, "14734": 208, "14736": 208, "14738": 208, "14740": 208, "14742": 208, "14744": 208, "14746": 208, "14748": 208, "14750": 208, "14752": 208, "14754": 208, "14756": 208, "14758": 208, "14760": 208, "14762": 208, "14764": 208, "14766": 208, "14768": 208, "14770": 208, "14772": 208, "14774": 208, "14776": 208, "14778": 208, "14780": 208, "14782": 208, "14784": 208, "14786": 208, "14788": 208, "14790": 208, "14792": 208, "14794": 208, "14796": 208, "14798": 208, "14800": 208, "14802": 208, "14804": 208, "14806": 208, "14808": 208, "14810": 208, "14812": 208, "14814": 208, "14816": 208, "14818": 208, "14820": 208, "14822": 208, "14824": 208, "14826": 208, "14828": 208, "14830": 208, "14832": 208, "14834": 208, "14836": 208, "14838": 208, "14840": 208, "14842": 208, "14844": 208, "14846": 208, "14848": 208, "14850": 208, "14852": 208, "14854": 208, "14856": 208, "14858": 208, "14860": 208, "14862": 208, "14864": 208, "14866": 208, "14868": 208, "14870": 208, "14872": 208, "14874": 208, "14876": 208, "14878": 208, "14880": 208, "14882": [208, 536], "14884": 208, "14886": 208, "14888": 208, "14890": 208, "14892": 208, "14894": 208, "14896": 208, "14898": 208, "14900": 208, "14902": 208, "14904": 208, "14906": 208, "14908": 208, "14910": 208, "14912": 208, "14914": 208, "14916": 208, "14918": 208, "14920": 208, "14922": 208, "14924": 208, "14926": 208, "14928": 208, "14930": 208, "14932": 208, "14934": 208, "14936": 208, "14938": 208, "14940": 208, "14942": 208, "14944": 208, "14946": 208, "14948": 208, "14950": 208, "14952": 208, "14954": 208, "14956": 208, "14958": 208, "14960": 208, "14962": 208, "14964": 208, "14966": 208, "14968": 208, "14970": 208, "14972": 208, "14974": 208, "14976": 208, "14978": 208, "14980": 208, "14982": 208, "14984": 208, "14986": 208, "14988": 208, "14990": [208, 257], "14992": 208, "14994": 208, "14996": 208, "14998": 208, "15002": 208, "15004": 208, "15006": 208, "15008": 208, "15010": 208, "15012": 208, "15014": 208, "15016": 208, "15018": 208, "15020": 208, "15022": 208, "15024": 208, "15026": 208, "15028": 208, "15030": 208, "15032": 208, "15034": 208, "15036": 208, "15038": 208, "15040": 208, "15042": 208, "15044": 208, "15046": 208, "15048": 208, "15050": 208, "15052": 208, "15054": 208, "15056": 208, "15058": 208, "15060": 208, "15062": 208, "15064": 208, "15066": 208, "15068": 208, "15070": 208, "15072": 208, "15074": 208, "15076": 208, "15078": 208, "15080": 208, "15082": 208, "15084": 208, "15086": 208, "15088": 208, "15090": 208, "15092": 208, "15094": 208, "15096": 208, "15098": 208, "15100": 208, "15102": 208, "15104": 208, "15106": 208, "15108": 208, "15110": 208, "15112": 208, "15114": 208, "15116": 208, "15118": 208, "15120": 208, "15122": 208, "15124": 208, "15126": 208, "15128": 208, "15130": 208, "15132": 208, "15134": 208, "15136": 208, "15138": 208, "15140": 208, "15142": 208, "15144": 208, "15146": 208, "15148": 208, "15150": 208, "15152": 208, "15154": 208, "15156": 208, "15158": 208, "15160": 208, "15162": 208, "15164": 208, "15166": 208, "15168": 208, "15170": 208, "15172": 208, "15174": 208, "15176": 208, "15178": 208, "15180": 208, "15182": 208, "15184": 208, "15186": 208, "15188": 208, "15190": 208, "15192": 208, "15194": 208, "15196": 208, "15198": 208, "15200": 208, "15202": 208, "15204": 208, "15206": 208, "15208": 208, "15210": 208, "15212": 208, "15214": 208, "15216": 208, "15218": 208, "15220": 208, "15222": 208, "15224": 208, "15226": 208, "15228": 208, "15230": 208, "15232": 208, "15234": 208, "15236": 208, "15238": 208, "15240": 208, "15242": 208, "15244": [208, 954], "15246": 208, "15248": 208, "15250": 208, "15252": 208, "15254": 208, "15256": 208, "15258": 208, "15260": 208, "15262": 208, "15264": 208, "15266": 208, "15268": 208, "15270": 208, "15272": 208, "15274": 208, "15276": 208, "15278": 208, "15280": 208, "15282": 208, "15284": 208, "15286": 208, "15288": 208, "15290": 208, "15292": 208, "15294": 208, "15296": 208, "15298": 208, "15300": 208, "15302": 208, "15304": 208, "15306": 208, "15308": 208, "15310": 208, "15312": 208, "15314": 208, "15316": 208, "15318": 208, "15320": 208, "15322": 208, "15324": 208, "15326": 208, "15328": 208, "15330": 208, "15332": 208, "15334": 208, "15336": 208, "15338": 208, "15340": 208, "15342": 208, "15344": 208, "15346": 208, "15348": 208, "15350": 208, "15352": 208, "15354": 208, "15356": 208, "15358": 208, "15360": 208, "15362": 208, "15364": 208, "15366": 208, "15368": 208, "15370": 208, "15372": 208, "15374": 208, "15376": 208, "15378": 208, "15380": 208, "15382": 208, "15384": 208, "15386": 208, "15388": 208, "15390": 208, "15392": 208, "15394": 208, "15396": 208, "15398": 208, "15400": 208, "15402": 208, "15404": 208, "15406": 208, "15408": 208, "15410": 208, "15412": 208, "15414": 208, "15416": 208, "15418": 208, "15420": 208, "15422": 208, "15424": 208, "15426": 208, "15428": 208, "15430": 208, "15432": 208, "15434": 208, "15436": 208, "15438": 208, "15440": 208, "15442": 208, "15444": 208, "15446": 208, "15448": 208, "15450": 208, "15452": 208, "15454": 208, "15456": 208, "15458": 208, "15460": 208, "15462": 208, "15464": 208, "15466": 208, "15468": 208, "15470": 208, "15472": 208, "15474": 208, "15476": 208, "15478": 208, "15480": 208, "15482": 208, "15484": 208, "15486": 208, "15488": 208, "15490": 208, "15492": 208, "15494": 208, "15496": 208, "15498": 208, "15500": 208, "15502": 208, "15504": 208, "15506": 208, "15508": 208, "15510": 208, "15512": 208, "15514": 208, "15516": 208, "15518": 208, "15520": 208, "15522": 208, "15524": 208, "15526": 208, "15528": 208, "15530": 208, "15532": 208, "15534": 208, "15536": 208, "15538": 208, "15540": 208, "15542": 208, "15544": 208, "15546": 208, "15548": 208, "15550": 208, "15552": 208, "15554": 208, "15556": 208, "15558": 208, "15560": 208, "15562": 208, "15564": 208, "15566": 208, "15568": 208, "15570": 208, "15572": 208, "15574": 208, "15576": 208, "15578": 208, "15580": 208, "15582": 208, "15584": 208, "15586": 208, "15588": 208, "15590": 208, "15592": 208, "15594": 208, "15596": 208, "15598": 208, "15600": 208, "15602": 208, "15604": 208, "15606": 208, "15608": 208, "15610": 208, "15612": 208, "15614": 208, "15616": 208, "15618": 208, "15620": 208, "15622": 208, "15624": 208, "15626": 208, "15628": 208, "15630": 208, "15632": 208, "15634": 208, "15636": 208, "15638": 208, "15640": 208, "15642": 208, "15644": 208, "15646": 208, "15648": 208, "15650": 208, "15652": 208, "15654": 208, "15656": 208, "15658": 208, "15660": 208, "15662": 208, "15664": 208, "15666": 208, "15668": 208, "15670": 208, "15672": 208, "15674": 208, "15676": 208, "15678": 208, "15680": 208, "15682": 208, "15684": 208, "15686": 208, "15688": 208, "15690": 208, "15692": 208, "15694": 208, "15696": 208, "15698": 208, "15700": 208, "15702": 208, "15704": 208, "15706": 208, "15708": 208, "15710": 208, "15712": 208, "15714": 208, "15716": 208, "15718": 208, "15720": 208, "15722": 208, "15724": 208, "15726": 208, "15728": 208, "15730": 208, "15732": 208, "15734": 208, "15736": 208, "15738": 208, "15740": 208, "15742": 208, "15744": 208, "15746": 208, "15748": 208, "15750": 208, "15752": 208, "15754": 208, "15756": 208, "15758": 208, "15760": 208, "15762": 208, "15764": 208, "15766": 208, "15768": 208, "15770": 208, "15772": 208, "15774": 208, "15776": 208, "15778": 208, "15780": 208, "15782": 208, "15784": 208, "15786": 208, "15788": 208, "15790": 208, "15792": 208, "15794": 208, "15796": 208, "15798": 208, "15800": 208, "15802": 208, "15804": 208, "15806": 208, "15808": 208, "15810": 208, "15812": 208, "15814": 208, "15816": 208, "15818": 208, "15820": 208, "15822": 208, "15824": 208, "15826": 208, "15828": 208, "15830": 208, "15832": 208, "15834": 208, "15836": 208, "15838": 208, "15840": 208, "15842": 208, "15844": 208, "15846": 208, "15848": 208, "15850": 208, "15852": 208, "15854": 208, "15856": 208, "15858": 208, "15860": 208, "15862": 208, "15864": 208, "15866": 208, "15868": 208, "15870": 208, "15872": 208, "15874": 208, "15876": 208, "15878": 208, "15880": 208, "15882": 208, "15884": 208, "15886": 208, "15888": 208, "15890": 208, "15892": 208, "15894": 208, "15896": 208, "15898": 208, "15900": 208, "15902": 208, "15904": 208, "15906": 208, "15908": 208, "15910": 208, "15912": 208, "15914": 208, "15916": 208, "15918": 208, "15920": 208, "15922": 208, "15924": 208, "15926": 208, "15928": 208, "15930": 208, "15932": 208, "15934": 208, "15936": 208, "15938": 208, "15940": 208, "15942": 208, "15944": 208, "15946": 208, "15948": 208, "15950": 208, "15952": 208, "15954": 208, "15956": 208, "15958": 208, "15960": 208, "15962": 208, "15964": 208, "15966": 208, "15968": 208, "15970": 208, "15972": 208, "15974": 208, "15976": 208, "15978": 208, "15980": 208, "15982": 208, "15984": 208, "15986": 208, "15988": 208, "15990": 208, "15992": 208, "15994": 208, "15996": 208, "15998": 208, "16000": 208, "16002": 208, "16004": 208, "16006": 208, "16008": 208, "16010": 208, "16012": 208, "16014": 208, "16016": 208, "16018": 208, "16020": 208, "16022": 208, "16024": 208, "16026": 208, "16028": 208, "16030": 208, "16032": 208, "16034": 208, "16036": 208, "16038": 208, "16040": 208, "16042": 208, "16044": 208, "16046": 208, "16048": 208, "16050": 208, "16052": 208, "16054": 208, "16056": 208, "16058": 208, "16060": 208, "16062": 208, "16064": 208, "16066": 208, "16068": 208, "16070": 208, "16072": 208, "16074": 208, "16076": 208, "16078": 208, "16080": 208, "16082": 208, "16084": 208, "16086": 208, "16088": 208, "16090": 208, "16092": 208, "16094": 208, "16096": 208, "16098": 208, "16100": 208, "16102": 208, "16104": 208, "16106": 208, "16108": 208, "16110": 208, "16112": 208, "16114": 208, "16116": 208, "16118": 208, "16120": 208, "16122": 208, "16124": 208, "16126": 208, "16128": 208, "16130": 208, "16132": 208, "16134": 208, "16136": 208, "16138": 208, "16140": 208, "16142": 208, "16144": 208, "16146": 208, "16148": 208, "16150": 208, "16152": 208, "16154": 208, "16156": 208, "16158": 208, "16160": 208, "16162": 208, "16164": 208, "16166": 208, "16168": 208, "16170": 208, "16172": 208, "16174": 208, "16176": 208, "16178": 208, "16180": 208, "16182": 208, "16184": 208, "16186": 208, "16188": 208, "16190": 208, "16192": 208, "16194": 208, "16196": 208, "16198": 208, "16200": 208, "16202": 208, "16204": 208, "16206": 208, "16208": 208, "16210": 208, "16212": 208, "16214": 208, "16216": 208, "16218": 208, "16220": 208, "16222": 208, "16224": 208, "16226": 208, "16228": 208, "16230": 208, "16232": 208, "16234": 208, "16236": 208, "16238": 208, "16240": 208, "16242": 208, "16244": 208, "16246": 208, "16248": 208, "16250": 208, "16252": 208, "16254": 208, "16256": 208, "16258": 208, "16260": 208, "16262": 208, "16264": 208, "16266": 208, "16268": 208, "16270": 208, "16272": 208, "16274": 208, "16276": 208, "16278": 208, "16280": 208, "16282": 208, "16284": 208, "16286": 208, "16288": 208, "16290": 208, "16292": 208, "16294": 208, "16296": 208, "16298": 208, "16300": 208, "16302": 208, "16304": 208, "16306": 208, "16308": 208, "16310": 208, "16312": 208, "16314": 208, "16316": 208, "16318": 208, "16320": 208, "16322": 208, "16324": 208, "16326": 208, "16328": 208, "16330": 208, "16332": 208, "16334": 208, "16336": 208, "16338": 208, "16340": 208, "16342": 208, "16344": 208, "16346": 208, "16348": 208, "16350": 208, "16352": 208, "16354": 208, "16356": 208, "16358": 208, "16360": 208, "16362": 208, "16364": 208, "16366": 208, "16368": 208, "16370": 208, "16372": 208, "16374": 208, "16376": 208, "16378": 208, "16380": 208, "16382": 208, "16386": 208, "16388": 208, "16390": 208, "16392": 208, "16394": 208, "16396": 208, "16398": 208, "16400": 208, "16402": 208, "16404": 208, "16406": 208, "16408": 208, "16410": 208, "16412": 208, "16414": 208, "16416": 208, "16418": 208, "16420": 208, "16422": 208, "16424": 208, "16426": 208, "16428": 208, "16430": 208, "16432": 208, "16434": 208, "16436": 208, "16438": 208, "16440": 208, "16442": 208, "16444": 208, "16446": 208, "16448": 208, "16450": 208, "16452": 208, "16454": 208, "16456": 208, "16458": 208, "16460": 208, "16462": 208, "16464": 208, "16466": 208, "16468": 208, "16470": 208, "16472": 208, "16474": 208, "16476": 208, "16478": 208, "16480": 208, "16482": 208, "16484": 208, "16486": 208, "16488": 208, "16490": 208, "16492": 208, "16494": 208, "16496": 208, "16498": 208, "16500": 208, "16502": 208, "16504": 208, "16506": 208, "16508": 208, "16510": 208, "16512": 208, "16514": 208, "16516": 208, "16518": 208, "16520": 208, "16522": 208, "16524": 208, "16526": 208, "16528": 208, "16530": 208, "16532": 208, "16534": 208, "16536": 208, "16538": 208, "16540": 208, "16542": 208, "16544": 208, "16546": 208, "16548": 208, "16550": 208, "16552": 208, "16554": 208, "16556": 208, "16558": 208, "16560": 208, "16562": 208, "16564": 208, "16566": 208, "16568": 208, "16570": 208, "16572": 208, "16574": 208, "16576": 208, "16578": 208, "16580": 208, "16582": 208, "16584": 208, "16586": 208, "16588": 208, "16590": 208, "16592": 208, "16594": 208, "16596": 208, "16598": 208, "16600": 208, "16602": 208, "16604": 208, "16606": 208, "16608": 208, "16610": 208, "16612": 208, "16614": 208, "16616": 208, "16618": 208, "16620": 208, "16622": 208, "16624": 208, "16626": 208, "16628": 208, "16630": 208, "16632": 208, "16634": 208, "16636": 208, "16638": 208, "16640": 208, "16642": 208, "16644": 208, "16646": 208, "16648": 208, "16650": 208, "16652": 208, "16654": 208, "16656": 208, "16658": 208, "16660": 208, "16662": 208, "16664": 208, "16666": 208, "16668": 208, "16670": 208, "16672": 208, "16674": 208, "16676": 208, "16678": 208, "16680": 208, "16682": 208, "16684": 208, "16686": 208, "16688": 208, "16690": 208, "16692": 208, "16694": 208, "16696": 208, "16698": 208, "16700": 208, "16702": 208, "16704": 208, "16706": 208, "16708": 208, "16710": 208, "16712": 208, "16714": 208, "16716": 208, "16718": 208, "16720": 208, "16722": 208, "16724": 208, "16726": 208, "16728": 208, "16730": 208, "16732": 208, "16734": 208, "16736": 208, "16738": 208, "16740": 208, "16742": 208, "16744": 208, "16746": 208, "16748": 208, "16750": 208, "16752": 208, "16754": 208, "16756": 208, "16758": 208, "16760": 208, "16762": 208, "16764": 208, "16766": 208, "16768": 208, "16770": 208, "16772": 208, "16774": 208, "16776": 208, "16778": 208, "16780": 208, "16782": 208, "16784": 208, "16786": 208, "16788": 208, "16790": 208, "16792": 208, "16794": 208, "16796": 208, "16798": 208, "16800": 208, "16802": 208, "16804": 208, "16806": 208, "16808": 208, "16810": 208, "16812": 208, "16814": 208, "16816": 208, "16818": 208, "16820": 208, "16822": 208, "16824": 208, "16826": 208, "16828": 208, "16830": 208, "16832": 208, "16834": 208, "16836": 208, "16838": 208, "16840": 208, "16842": 208, "16844": 208, "16846": 208, "16848": 208, "16850": 208, "16852": 208, "16854": 208, "16856": 208, "16858": 208, "16860": 208, "16862": 208, "16864": 208, "16866": 208, "16868": 208, "16870": 208, "16872": 208, "16874": 208, "16876": 208, "16878": 208, "16880": 208, "16882": 208, "16884": 208, "16886": 208, "16888": 208, "16890": 208, "16892": 208, "16894": 208, "16896": 208, "16898": 208, "16900": 208, "16902": 208, "16904": 208, "16906": 208, "16908": 208, "16910": 208, "16912": 208, "16914": 208, "16916": 208, "16918": 208, "16920": 208, "16922": 208, "16924": 208, "16926": 208, "16928": 208, "16930": 208, "16932": 208, "16934": 208, "16936": 208, "16938": 208, "16940": 208, "16942": 208, "16944": 208, "16946": 208, "16948": 208, "16950": 208, "16952": 208, "16954": 208, "16956": 208, "16958": 208, "16960": 208, "16962": 208, "16964": 208, "16966": 208, "16968": 208, "16970": 208, "16972": 208, "16974": 208, "16976": 208, "16978": 208, "16980": 208, "16982": 208, "16984": 208, "16986": 208, "16988": 208, "16990": 208, "16992": 208, "16994": 208, "16996": 208, "16998": 208, "17000": 208, "17002": 208, "17004": 208, "17006": 208, "17008": 208, "17010": 208, "17012": 208, "17014": 208, "17016": 208, "17018": 208, "17020": 208, "17022": 208, "17024": 208, "17026": 208, "17028": 208, "17030": 208, "17032": 208, "17034": 208, "17036": 208, "17038": 208, "17040": 208, "17042": 208, "17044": 208, "17046": 208, "17048": 208, "17050": 208, "17052": 208, "17054": 208, "17056": 208, "17058": 208, "17060": 208, "17062": 208, "17064": 208, "17066": 208, "17068": 208, "17070": 208, "17072": 208, "17074": 208, "17076": 208, "17078": 208, "17080": 208, "17082": 208, "17084": 208, "17086": 208, "17088": 208, "17090": 208, "17092": 208, "17094": 208, "17096": 208, "17098": 208, "17100": 208, "17102": 208, "17104": 208, "17106": 208, "17108": 208, "17110": 208, "17112": 208, "17114": 208, "17116": 208, "17118": 208, "17120": 208, "17122": 208, "17124": 208, "17126": [208, 257], "17128": 208, "17130": 208, "17132": 208, "17134": 208, "17136": 208, "17138": 208, "17140": 208, "17142": 208, "17144": 208, "17146": 208, "17148": 208, "17150": 208, "17152": 208, "17154": 208, "17156": 208, "17158": 208, "17160": 208, "17162": 208, "17164": 208, "17166": 208, "17168": 208, "17170": 208, "17172": 208, "17174": 208, "17176": 208, "17178": 208, "17180": 208, "17182": 208, "17184": 208, "17186": 208, "17188": 208, "17190": 208, "17192": 208, "17194": 208, "17196": 208, "17198": 208, "17200": 208, "17202": 208, "17204": 208, "17206": 208, "17208": 208, "17210": 208, "17212": 208, "17214": 208, "17216": 208, "17218": 208, "17220": 208, "17222": 208, "17224": 208, "17226": 208, "17228": 208, "17230": 208, "17232": 208, "17234": 208, "17236": 208, "17238": 208, "17240": 208, "17242": 208, "17244": 208, "17246": 208, "17248": 208, "17250": 208, "17252": 208, "17254": 208, "17256": 208, "17258": 208, "17260": 208, "17262": 208, "17264": 208, "17266": 208, "17268": 208, "17270": 208, "17272": 208, "17274": 208, "17276": 208, "17278": 208, "17280": 208, "17282": 208, "17284": 208, "17286": 208, "17288": 208, "17290": 208, "17292": 208, "17294": 208, "17296": 208, "17298": 208, "17300": 208, "17302": 208, "17304": 208, "17306": 208, "17308": 208, "17310": 208, "17312": 208, "17314": 208, "17316": 208, "17318": 208, "17320": 208, "17322": 208, "17324": 208, "17326": 208, "17328": 208, "17330": 208, "17332": 208, "17334": 208, "17336": 208, "17338": 208, "17340": 208, "17342": 208, "17344": 208, "17346": 208, "17348": 208, "17350": 208, "17352": 208, "17354": 208, "17356": 208, "17358": 208, "17360": 208, "17362": 208, "17364": 208, "17366": 208, "17368": 208, "17370": 208, "17372": 208, "17374": 208, "17376": 208, "17378": 208, "17380": 208, "17382": 208, "17384": 208, "17386": 208, "17388": 208, "17390": 208, "17392": 208, "17394": 208, "17396": 208, "17398": 208, "17400": 208, "17402": 208, "17404": 208, "17406": 208, "17408": 208, "17410": 208, "17412": 208, "17414": 208, "17416": 208, "17418": 208, "17420": 208, "17422": 208, "17424": 208, "17426": 208, "17428": 208, "17430": 208, "17432": 208, "17434": 208, "17436": 208, "17438": 208, "17440": 208, "17442": 208, "17444": 208, "17446": 208, "17448": 208, "17450": 208, "17452": 208, "17454": 208, "17456": 208, "17458": 208, "17460": 208, "17462": 208, "17464": 208, "17466": 208, "17468": 208, "17470": 208, "17472": 208, "17474": 208, "17476": 208, "17478": 208, "17480": 208, "17482": 208, "17484": 208, "17486": 208, "17488": 208, "17490": 208, "17492": 208, "17494": 208, "17496": 208, "17498": 208, "17500": 208, "17502": 208, "17504": 208, "17506": 208, "17508": 208, "17510": 208, "17512": 208, "17514": 208, "17516": 208, "17518": 208, "17520": 208, "17522": 208, "17524": 208, "17526": 208, "17528": 208, "17530": 208, "17532": 208, "17534": 208, "17536": 208, "17538": 208, "17540": 208, "17542": 208, "17544": 208, "17546": 208, "17548": 208, "17550": 208, "17552": 208, "17554": 208, "17556": 208, "17558": 208, "17560": 208, "17562": 208, "17564": 208, "17566": 208, "17568": 208, "17570": 208, "17572": 208, "17574": 208, "17576": 208, "17578": 208, "17580": 208, "17582": 208, "17584": 208, "17586": 208, "17588": 208, "17590": 208, "17592": 208, "17594": 208, "17596": 208, "17598": 208, "17600": 208, "17602": 208, "17604": 208, "17606": 208, "17608": 208, "17610": 208, "17612": 208, "17614": 208, "17616": 208, "17618": 208, "17620": 208, "17622": 208, "17624": 208, "17626": 208, "17628": 208, "17630": 208, "17632": 208, "17634": 208, "17636": 208, "17638": 208, "17640": 208, "17642": 208, "17644": 208, "17646": 208, "17648": 208, "17650": 208, "17652": 208, "17654": 208, "17656": 208, "17658": 208, "17660": 208, "17662": 208, "17664": 208, "17666": 208, "17668": 208, "17670": 208, "17672": 208, "17674": 208, "17676": 208, "17678": 208, "17680": 208, "17682": 208, "17684": 208, "17686": 208, "17688": 208, "17690": 208, "17692": 208, "17694": 208, "17696": 208, "17698": 208, "17700": 208, "17702": 208, "17704": 208, "17706": 208, "17708": 208, "17710": 208, "17712": 208, "17714": 208, "17716": 208, "17718": 208, "17720": 208, "17722": 208, "17724": 208, "17726": 208, "17728": 208, "17730": 208, "17732": 208, "17734": 208, "17736": 208, "17738": 208, "17740": 208, "17742": 208, "17744": 208, "17746": 208, "17748": 208, "17750": 208, "17752": 208, "17754": 208, "17756": 208, "17758": 208, "17760": 208, "17762": 208, "17764": 208, "17766": 208, "17768": 208, "17770": 208, "17772": 208, "17774": 208, "17776": 208, "17778": 208, "17780": 208, "17782": 208, "17784": 208, "17786": 208, "17788": 208, "17790": 208, "17792": 208, "17794": 208, "17796": 208, "17798": 208, "17800": 208, "17802": 208, "17804": 208, "17806": 208, "17808": 208, "17810": 208, "17812": 208, "17814": 208, "17816": 208, "17818": 208, "17820": 208, "17822": 208, "17824": 208, "17826": 208, "17828": 208, "17830": 208, "17832": 208, "17834": 208, "17836": 208, "17838": 208, "17840": 208, "17842": 208, "17844": 208, "17846": 208, "17848": 208, "17850": 208, "17852": 208, "17854": 208, "17856": 208, "17858": 208, "17860": 208, "17862": 208, "17864": 208, "17866": 208, "17868": 208, "17870": 208, "17872": 208, "17874": 208, "17876": 208, "17878": 208, "17880": 208, "17882": 208, "17884": 208, "17886": 208, "17888": 208, "17890": 208, "17892": 208, "17894": 208, "17896": 208, "17898": 208, "17900": 208, "17902": 208, "17904": 208, "17906": 208, "17908": 208, "17910": 208, "17912": 208, "17914": 208, "17916": 208, "17918": 208, "17920": 208, "17922": 208, "17924": 208, "17926": 208, "17928": 208, "17930": 208, "17932": 208, "17934": 208, "17936": 208, "17938": 208, "17940": 208, "17942": 208, "17944": 208, "17946": 208, "17948": 208, "17950": 208, "17952": 208, "17954": 208, "17956": 208, "17958": 208, "17960": 208, "17962": 208, "17964": 208, "17966": 208, "17968": 208, "17970": 208, "17972": 208, "17974": 208, "17976": 208, "17978": 208, "17980": 208, "17982": 208, "17984": 208, "17986": 208, "17988": 208, "17990": 208, "17992": 208, "17994": 208, "17996": 208, "17998": 208, "18000": [208, 872], "18002": 208, "18004": 208, "18006": 208, "18008": 208, "18010": 208, "18012": 208, "18014": 208, "18016": 208, "18018": 208, "18020": 208, "18022": 208, "18024": 208, "18026": 208, "18028": 208, "18030": 208, "18032": 208, "18034": 208, "18036": 208, "18038": 208, "18040": 208, "18042": 208, "18044": 208, "18046": 208, "18048": 208, "18050": 208, "18052": 208, "18054": 208, "18056": 208, "18058": 208, "18060": 208, "18062": 208, "18064": 208, "18066": 208, "18068": 208, "18070": 208, "18072": 208, "18074": 208, "18076": 208, "18078": 208, "18080": 208, "18082": 208, "18084": 208, "18086": 208, "18088": 208, "18090": 208, "18092": 208, "18094": 208, "18096": 208, "18098": 208, "18100": 208, "18102": 208, "18104": 208, "18106": 208, "18108": 208, "18110": 208, "18112": 208, "18114": 208, "18116": 208, "18118": 208, "18120": 208, "18122": 208, "18124": 208, "18126": 208, "18128": 208, "18130": 208, "18132": 208, "18134": 208, "18136": 208, "18138": 208, "18140": 208, "18142": 208, "18144": 208, "18146": 208, "18148": 208, "18150": 208, "18152": 208, "18154": 208, "18156": 208, "18158": 208, "18160": 208, "18162": 208, "18164": 208, "18166": 208, "18168": 208, "18170": 208, "18172": 208, "18174": 208, "18176": 208, "18178": 208, "18180": 208, "18182": 208, "18184": 208, "18186": 208, "18188": 208, "18190": 208, "18192": 208, "18194": 208, "18196": 208, "18198": 208, "18200": 208, "18202": 208, "18204": 208, "18206": 208, "18208": 208, "18210": 208, "18212": 208, "18214": 208, "18216": 208, "18218": 208, "18220": 208, "18222": 208, "18224": 208, "18226": 208, "18228": 208, "18230": 208, "18232": 208, "18234": 208, "18236": 208, "18238": 208, "18240": 208, "18242": 208, "18244": 208, "18246": 208, "18248": 208, "18250": 208, "18252": 208, "18254": 208, "18256": 208, "18258": 208, "18260": 208, "18262": 208, "18264": 208, "18266": 208, "18268": 208, "18270": 208, "18272": 208, "18274": 208, "18276": 208, "18278": 208, "18280": 208, "18282": 208, "18284": 208, "18286": 208, "18288": 208, "18290": 208, "18292": 208, "18294": 208, "18296": 208, "18298": 208, "18300": 208, "18302": 208, "18304": 208, "18306": 208, "18308": 208, "18310": 208, "18312": 208, "18314": 208, "18316": 208, "18318": 208, "18320": 208, "18322": 208, "18324": 208, "18326": 208, "18328": 208, "18330": 208, "18332": 208, "18334": 208, "18336": 208, "18338": 208, "18340": 208, "18342": 208, "18344": 208, "18346": 208, "18348": 208, "18350": 208, "18352": 208, "18354": 208, "18356": 208, "18358": 208, "18360": 208, "18362": 208, "18364": 208, "18366": 208, "18368": 208, "18370": 208, "18372": 208, "18374": 208, "18376": 208, "18378": 208, "18380": 208, "18382": 208, "18384": [208, 940], "18386": 208, "18388": 208, "18390": 208, "18392": 208, "18394": 208, "18396": 208, "18398": 208, "18400": 208, "18402": 208, "18404": 208, "18406": 208, "18408": 208, "18410": 208, "18412": 208, "18414": 208, "18416": 208, "18418": 208, "18420": 208, "18422": 208, "18424": 208, "18426": 208, "18428": 208, "18430": 208, "18432": 208, "18434": 208, "18436": 208, "18438": 208, "18440": 208, "18442": 208, "18444": 208, "18446": 208, "18448": 208, "18450": 208, "18452": 208, "18454": 208, "18456": 208, "18458": 208, "18460": 208, "18462": 208, "18464": 208, "18466": 208, "18468": 208, "18470": 208, "18472": 208, "18474": 208, "18476": 208, "18478": 208, "18480": 208, "18482": 208, "18484": 208, "18486": 208, "18488": 208, "18490": 208, "18492": 208, "18494": 208, "18496": 208, "18498": 208, "18500": 208, "18502": 208, "18504": 208, "18506": 208, "18508": 208, "18510": 208, "18512": 208, "18514": 208, "18516": 208, "18518": 208, "18520": 208, "18522": 208, "18524": 208, "18526": 208, "18528": 208, "18530": 208, "18532": 208, "18534": 208, "18536": 208, "18538": 208, "18540": 208, "18542": 208, "18544": 208, "18546": 208, "18548": 208, "18550": 208, "18552": 208, "18554": 208, "18556": 208, "18558": 208, "18560": 208, "18562": 208, "18564": 208, "18566": 208, "18568": 208, "18570": 208, "18572": 208, "18574": 208, "18576": 208, "18578": 208, "18580": 208, "18582": 208, "18584": 208, "18586": 208, "18588": 208, "18590": 208, "18592": 208, "18594": 208, "18596": 208, "18598": 208, "18600": 208, "18602": 208, "18604": 208, "18606": 208, "18608": 208, "18610": 208, "18612": 208, "18614": 208, "18616": 208, "18618": 208, "18620": 208, "18622": 208, "18624": 208, "18626": 208, "18628": 208, "18630": 208, "18632": 208, "18634": 208, "18636": 208, "18638": 208, "18640": 208, "18642": 208, "18644": 208, "18646": 208, "18648": 208, "18650": 208, "18652": 208, "18654": 208, "18656": 208, "18658": 208, "18660": 208, "18662": 208, "18664": 208, "18666": 208, "18668": 208, "18670": 208, "18672": 208, "18674": 208, "18676": 208, "18678": 208, "18680": 208, "18682": 208, "18684": 208, "18686": 208, "18688": 208, "18690": 208, "18692": 208, "18694": 208, "18696": 208, "18698": 208, "18700": 208, "18702": 208, "18704": 208, "18706": 208, "18708": 208, "18710": 208, "18712": 208, "18714": 208, "18716": 208, "18718": 208, "18720": 208, "18722": 208, "18724": 208, "18726": 208, "18728": 208, "18730": 208, "18732": 208, "18734": 208, "18736": 208, "18738": 208, "18740": 208, "18742": 208, "18744": 208, "18746": 208, "18748": 208, "18750": 208, "18752": 208, "18754": 208, "18756": 208, "18758": 208, "18760": 208, "18762": 208, "18764": 208, "18766": 208, "18768": 208, "18770": 208, "18772": 208, "18774": 208, "18776": 208, "18778": 208, "18780": 208, "18782": 208, "18784": 208, "18786": 208, "18788": 208, "18790": 208, "18792": 208, "18794": 208, "18796": 208, "18798": 208, "18800": 208, "18802": 208, "18804": 208, "18806": 208, "18808": 208, "18810": 208, "18812": 208, "18814": 208, "18816": 208, "18818": 208, "18820": 208, "18822": 208, "18824": 208, "18826": 208, "18828": 208, "18830": 208, "18832": 208, "18834": 208, "18836": 208, "18838": 208, "18840": 208, "18842": 208, "18844": 208, "18846": 208, "18848": 208, "18850": 208, "18852": 208, "18854": 208, "18856": 208, "18858": 208, "18860": 208, "18862": 208, "18864": 208, "18866": 208, "18868": 208, "18870": 208, "18872": 208, "18874": 208, "18876": 208, "18878": 208, "18880": 208, "18882": 208, "18884": 208, "18886": 208, "18888": 208, "18890": 208, "18892": 208, "18894": 208, "18896": 208, "18898": 208, "18900": 208, "18902": 208, "18904": 208, "18906": 208, "18908": 208, "18910": 208, "18912": 208, "18914": 208, "18916": 208, "18918": 208, "18920": 208, "18922": 208, "18924": 208, "18926": 208, "18928": 208, "18930": 208, "18932": 208, "18934": 208, "18936": 208, "18938": 208, "18940": 208, "18942": 208, "18944": 208, "18946": 208, "18948": 208, "18950": 208, "18952": 208, "18954": 208, "18956": 208, "18958": 208, "18960": 208, "18962": 208, "18964": 208, "18966": 208, "18968": 208, "18970": 208, "18972": 208, "18974": 208, "18976": 208, "18978": 208, "18980": 208, "18982": 208, "18984": 208, "18986": 208, "18988": 208, "18990": 208, "18992": 208, "18994": 208, "18996": 208, "18998": 208, "19000": 208, "19002": 208, "19004": 208, "19006": 208, "19008": 208, "19010": 208, "19012": 208, "19014": 208, "19016": 208, "19018": 208, "19020": 208, "19022": 208, "19024": 208, "19026": 208, "19028": 208, "19030": 208, "19032": 208, "19034": 208, "19036": 208, "19038": 208, "19040": 208, "19042": 208, "19044": 208, "19046": 208, "19048": 208, "19050": 208, "19052": 208, "19054": 208, "19056": 208, "19058": 208, "19060": 208, "19062": 208, "19064": 208, "19066": 208, "19068": 208, "19070": 208, "19072": 208, "19074": 208, "19076": 208, "19078": 208, "19080": 208, "19082": 208, "19084": 208, "19086": 208, "19088": 208, "19090": 208, "19092": 208, "19094": 208, "19096": 208, "19098": 208, "19100": 208, "19102": 208, "19104": 208, "19106": 208, "19108": 208, "19110": 208, "19112": 208, "19114": 208, "19116": 208, "19118": 208, "19120": 208, "19122": 208, "19124": 208, "19126": 208, "19128": 208, "19130": 208, "19132": 208, "19134": 208, "19136": 208, "19138": 208, "19140": 208, "19142": 208, "19144": 208, "19146": 208, "19148": 208, "19150": 208, "19152": 208, "19154": 208, "19156": 208, "19158": 208, "19160": 208, "19162": 208, "19164": 208, "19166": 208, "19168": 208, "19170": 208, "19172": 208, "19174": 208, "19176": 208, "19178": 208, "19180": 208, "19182": 208, "19184": 208, "19186": 208, "19188": 208, "19190": 208, "19192": 208, "19194": 208, "19196": 208, "19198": 208, "19200": 208, "19202": 208, "19204": 208, "19206": 208, "19208": 208, "19210": 208, "19212": 208, "19214": 208, "19216": 208, "19218": 208, "19220": 208, "19222": 208, "19224": 208, "19226": 208, "19228": 208, "19230": 208, "19232": 208, "19234": 208, "19236": 208, "19238": 208, "19240": 208, "19242": 208, "19244": 208, "19246": 208, "19248": 208, "19250": 208, "19252": 208, "19254": 208, "19256": 208, "19258": 208, "19260": 208, "19262": 208, "19264": 208, "19266": 208, "19268": 208, "19270": 208, "19272": 208, "19274": 208, "19276": 208, "19278": 208, "19280": 208, "19282": 208, "19284": 208, "19286": 208, "19288": 208, "19290": 208, "19292": 208, "19294": 208, "19296": 208, "19298": 208, "19300": 208, "19302": 208, "19304": 208, "19306": 208, "19308": 208, "19310": 208, "19312": 208, "19314": 208, "19316": 208, "19318": 208, "19320": 208, "19322": 208, "19324": 208, "19326": 208, "19328": 208, "19330": 208, "19332": 208, "19334": 208, "19336": 208, "19338": 208, "19340": 208, "19342": 208, "19344": 208, "19346": 208, "19348": 208, "19350": 208, "19352": 208, "19354": 208, "19356": 208, "19358": 208, "19360": 208, "19362": 208, "19364": 208, "19366": 208, "19368": 208, "19370": 208, "19372": 208, "19374": 208, "19376": 208, "19378": 208, "19380": 208, "19382": 208, "19384": 208, "19386": 208, "19388": 208, "19390": 208, "19392": 208, "19394": 208, "19396": 208, "19398": 208, "19400": 208, "19402": 208, "19404": 208, "19406": 208, "19408": 208, "19410": 208, "19412": 208, "19414": 208, "19416": 208, "19418": 208, "19420": 208, "19422": 208, "19424": 208, "19426": 208, "19428": 208, "19430": 208, "19432": 208, "19434": 208, "19436": 208, "19438": 208, "19440": 208, "19442": 208, "19444": 208, "19446": 208, "19448": 208, "19450": 208, "19452": 208, "19454": 208, "19456": 208, "19458": 208, "19460": 208, "19462": 208, "19464": 208, "19466": 208, "19468": 208, "19470": 208, "19472": 208, "19474": 208, "19476": 208, "19478": 208, "19480": 208, "19482": 208, "19484": 208, "19486": 208, "19488": 208, "19490": 208, "19492": 208, "19494": 208, "19496": 208, "19498": 208, "19500": 208, "19502": 208, "19504": 208, "19506": 208, "19508": 208, "19510": 208, "19512": 208, "19514": 208, "19516": 208, "19518": 208, "19520": 208, "19522": 208, "19524": 208, "19526": 208, "19528": 208, "19530": 208, "19532": 208, "19534": 208, "19536": 208, "19538": 208, "19540": 208, "19542": 208, "19544": 208, "19546": 208, "19548": 208, "19550": 208, "19552": 208, "19554": 208, "19556": 208, "19558": 208, "19560": 208, "19562": 208, "19564": 208, "19566": 208, "19568": 208, "19570": 208, "19572": 208, "19574": 208, "19576": 208, "19578": 208, "19580": 208, "19582": 208, "19584": 208, "19586": 208, "19588": 208, "19590": 208, "19592": 208, "19594": 208, "19596": 208, "19598": 208, "19600": 208, "19602": 208, "19604": 208, "19606": 208, "19608": 208, "19610": 208, "19612": 208, "19614": 208, "19616": 208, "19618": 208, "19620": 208, "19622": 208, "19624": 208, "19626": 208, "19628": 208, "19630": 208, "19632": 208, "19634": 208, "19636": 208, "19638": 208, "19640": 208, "19642": 208, "19644": 208, "19646": 208, "19648": 208, "19650": 208, "19652": 208, "19654": 208, "19656": 208, "19658": 208, "19660": 208, "19662": 208, "19664": 208, "19666": 208, "19668": 208, "19670": 208, "19672": 208, "19674": 208, "19676": 208, "19678": 208, "19680": 208, "19682": 208, "19684": 208, "19686": 208, "19688": 208, "19690": 208, "19692": 208, "19694": 208, "19696": 208, "19698": 208, "19700": 208, "19702": 208, "19704": 208, "19706": 208, "19708": 208, "19710": 208, "19712": 208, "19714": 208, "19716": 208, "19718": 208, "19720": 208, "19722": 208, "19724": 208, "19726": 208, "19728": 208, "19730": 208, "19732": 208, "19734": 208, "19736": 208, "19738": 208, "19740": 208, "19742": 208, "19744": 208, "19746": 208, "19748": 208, "19750": 208, "19752": 208, "19754": 208, "19756": 208, "19758": 208, "19760": 208, "19762": 208, "19764": 208, "19766": 208, "19768": 208, "19770": 208, "19772": 208, "19774": 208, "19776": 208, "19778": 208, "19780": 208, "19782": 208, "19784": 208, "19786": 208, "19788": 208, "19790": 208, "19792": 208, "19794": 208, "19796": 208, "19798": 208, "19800": 208, "19802": 208, "19804": 208, "19806": 208, "19808": 208, "19810": 208, "19812": 208, "19814": 208, "19816": 208, "19818": 208, "19820": 208, "19822": 208, "19824": 208, "19826": 208, "19828": 208, "19830": 208, "19832": 208, "19834": 208, "19836": 208, "19838": 208, "19840": 208, "19842": 208, "19844": 208, "19846": 208, "19848": 208, "19850": 208, "19852": 208, "19854": 208, "19856": 208, "19858": 208, "19860": 208, "19862": 208, "19864": 208, "19866": 208, "19868": 208, "19870": 208, "19872": 208, "19874": 208, "19876": 208, "19878": 208, "19880": 208, "19882": 208, "19884": 208, "19886": 208, "19888": 208, "19890": 208, "19892": 208, "19894": 208, "19896": 208, "19898": 208, "19900": 208, "19902": 208, "19904": 208, "19906": 208, "19908": 208, "19910": 208, "19912": 208, "19914": 208, "19916": 208, "19918": 208, "19920": 208, "19922": 208, "19924": 208, "19926": 208, "19928": 208, "19930": 208, "19932": 208, "19934": 208, "19936": 208, "19938": 208, "19940": 208, "19942": 208, "19944": 208, "19946": 208, "19948": 208, "19950": 208, "19952": 208, "19954": 208, "19956": 208, "19958": 208, "19960": 208, "19962": 208, "19964": 208, "19966": 208, "19968": 208, "19970": 208, "19972": 208, "19974": 208, "19976": 208, "19978": 208, "19980": 208, "19982": 208, "19984": 208, "19986": 208, "19988": 208, "19990": 208, "19992": 208, "19994": 208, "19996": 208, "19998": 208, "l_to_send": 208, "json_to_send": 208, "json_receiv": 208, "l_receiv": 208, "sine": [208, 249, 266], "140106668681968": 208, "wallclock_axi": 208, "1638538131": 208, "1975703": 208, "2978473": 208, "3981225": 208, "498449": 208, "5987027": 208, "698947": 208, "7996597": 208, "899947": 208, "1638538132": 208, "0001943": 208, "1010473": 208, "0b10110": 208, "0x16": [208, 756], "0b1011": [208, 243], "bit_3": 208, "0b00001": 208, "0b1": [208, 225], "0b1000": [208, 225], "0b11110": 208, "bitwis": [208, 362, 395, 892, 896, 983], "num1": [208, 225], "0b110101101": 208, "num2": [208, 225], "0b101110100": 208, "0b100100100": 208, "0b111111101": 208, "0b1010": 208, "0b10100": [208, 225], "1fuzzi2fuzzi3fuzzi4": 208, "0b11011001": 208, "abcdef": [208, 215, 221, 225], "cde": 208, "lexic": [208, 422, 717], "indexerror": [208, 225, 228, 246, 285, 310, 963, 1016, 1085], "auer": 208, "aue": 208, "zerodivisionerror": [208, 221, 246, 963], "lst1": 208, "lst2": 208, "toc": 209, "treeset": 209, "searchabl": [209, 212], "iot": [209, 249], "diesel": 209, "vibrat": 209, "lighter": 209, "sensorrandom": 209, "sensorsin": 209, "sensorconst": 209, "decoupl": [113, 209, 435, 924], "wild": [209, 211, 216, 251], "yesterai": 209, "deseri": [209, 221], "decod": [209, 221, 228, 231, 267, 273, 284, 287, 1014, 1060], "swallow": [209, 797, 963], "walkthrough": [209, 211, 216, 1133], "1h": 209, "exchangeformat": 209, "test_mqtt_format": 209, "parser": [209, 221, 275, 321, 649, 1016, 1120], "mosquitto_sub": [209, 1080], "writer": [209, 725, 810], "deserializeerror": 209, "dangl": [209, 365, 536, 550], "fahrenheit": [211, 333, 335, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 436, 637, 675, 716, 718, 719], "nonconst": [211, 548], "getchar": [211, 339, 341, 346, 355], "dry": 211, "verif": [211, 1069], "umlaut": [211, 212, 295, 995, 1077], "\u00f6": [211, 231, 1077], "canari": 211, "asid": [211, 373, 374, 386, 648, 925], "brainfuck": 211, "nok": [211, 685, 919], "singli": [211, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "typedef": [211, 389, 392, 396, 405, 409, 414, 415, 635, 637, 675, 683, 699, 716, 718, 719, 786, 934], "commonplac": [211, 1123], "boundari": [211, 221, 267, 395, 709, 864], "neighborhood": 211, "norm": [211, 1077], "signed": [211, 349, 398], "unsigned": 211, "excurs": [211, 439, 1063], "pointerarith": 211, "lower_bound": [211, 258, 291, 575, 580, 599, 603, 632, 719], "for_each": [211, 258, 580, 599, 603, 632, 683, 719], "diagram": [211, 439, 457, 459, 779, 863, 870, 872], "search_by_lastnam": [211, 628, 629, 630], "const_iter": [211, 530, 574, 577, 578, 579, 581, 596, 635, 650, 683, 684], "calloper": [211, 513], "exc": [211, 513], "ostream": [211, 513, 539, 699, 1105], "paint": [211, 618, 632, 719], "reverse_copi": [211, 258, 513, 580, 599, 603, 632, 719], "cin": [211, 582, 600, 602, 618, 632, 719], "accumul": [211, 513], "raci": [211, 513], "wsl2": [211, 238, 240, 258, 260, 317], "libsqlite3": [211, 423], "libboost": 211, "libgtk": 211, "prosaic": 211, "roman": 211, "mad": [211, 397], "wxwidget": 211, "lieb": [212, 273], "gr\u00fc\u00dfe": [212, 273], "utf8": 212, "distil": [212, 272, 296, 961, 1033], "4j": 213, "unlimitxdeadbeef": [213, 215, 221, 267, 273, 305, 494], "3735928559": [213, 215, 221, 225, 267, 273, 305], "0b10010011": 213, "ippi": 213, "0b0101": 213, "0101": 213, "teifl": 213, "fun1": 213, "fun2": 213, "ipykernel_165524": 213, "729327466": 213, "nsecond": [213, 1008], "rline": 213, "carriag": [213, 352, 1008], "neuer": 213, "ordner": 213, "euer": 213, "regex_str": [213, 231], "calim": 213, "yaaai": 213, "needl": [213, 1002, 1010], "haystack": [213, 1002, 1010], "finit": [213, 262, 367, 855], "haystack_s": 213, "0x7fe07c0cdf90": 213, "list_iter": [213, 231, 285], "0x7fe07c0cd7f0": 213, "unicode_code_point": 213, "l_new": 213, "ijk": 213, "mengenlehr": 213, "s1": [213, 221, 225, 228, 231, 246, 253, 263, 273, 285, 439, 456, 486, 545, 639, 645, 693, 1013], "s2": [213, 221, 225, 228, 231, 246, 253, 263, 273, 285, 439, 456, 486, 545, 639, 645, 693, 1013], "gunnar": 213, "liam": 213, "maximumum": 213, "variable2": 213, "maximum2": 213, "mrmr": 213, "einser": 213, "square_numb": [213, 1011], "squares_gener": 213, "other_d": [213, 246], "nove": 213, "isspac": [213, 215, 218, 221, 246, 267, 1010], "buchhaltung": [213, 826, 848, 849], "startswith": [213, 221, 250, 251, 253, 267, 419, 1010, 1083], "buch": [213, 1115], "oooo": 213, "isupp": [213, 221, 231, 267, 1010], "zz": 213, "traurig": 213, "substr": [213, 215, 221, 231, 246, 253, 267, 285, 1105], "gid": [213, 221, 717, 793, 794, 801, 803, 811, 883, 898, 1042], "count_byt": 213, "nbyte": 213, "2691": [213, 717, 822], "miscellanea": [214, 886], "brace": [214, 221, 267, 339, 362, 365, 377, 437, 530, 539, 571, 573, 578, 591, 592, 635, 675, 684, 716, 718, 719, 992, 995], "hour_of_dai": 214, "ein_str": 215, "ein_anderer_str": 215, "fghjgfgh": 215, "dfghgfgh": 215, "do_someth": [215, 234, 305, 368, 370, 378, 393, 407, 692, 992], "komplett": 215, "returnwert": [215, 1115], "sinnloser": 215, "weis": [215, 1136], "vorgenommen": 215, "obacht": 215, "140672599989840": 215, "140672464974720": 215, "hoechst": [215, 253], "rechnern": 215, "100000": [215, 231, 648, 871, 1069], "": [215, 231], "exponenti": [215, 995, 1009], "__annotations__": [215, 225, 246, 267, 281, 964], "__closure__": [215, 225, 246, 267], "__code__": [215, 225, 246, 267], "__delattr__": [215, 218, 221, 225, 243, 246, 267, 285], "__dir__": [215, 218, 225, 243, 246, 267, 285], "__format__": [215, 218, 221, 225, 243, 246, 267, 285], "__ge__": [215, 218, 221, 225, 243, 246, 267, 285, 983], "__get__": [215, 225, 246, 267], "__getattribute__": [215, 218, 221, 225, 243, 246, 267, 285], "__globals__": [215, 225, 246, 267], "__gt__": [215, 218, 221, 225, 243, 246, 267, 285], "__hash__": [215, 218, 221, 225, 243, 246, 267, 285], "__init_subclass__": [215, 218, 225, 243, 246, 267, 285], "__kwdefaults__": [215, 225, 246, 267], "__ne__": [215, 218, 221, 225, 243, 246, 267, 285, 983], "__new__": [215, 218, 221, 225, 243, 246, 267, 285], "__qualname__": [215, 225, 246, 267], "__reduce__": [215, 218, 221, 225, 243, 246, 267, 285], "__reduce_ex__": [215, 218, 225, 243, 246, 267, 285], "__setattr__": [215, 218, 221, 225, 243, 246, 267, 285], "__sizeof__": [215, 218, 221, 225, 243, 246, 267, 285], "__subclasshook__": [215, 218, 225, 243, 246, 267, 285], "karteikart": 215, "my_formatted_person": 215, "123425041997": 215, "caros_str": 215, "joergs_str": 215, "0x7ff0dc48b490": 215, "next_po": 215, "tim": [215, 225, 301, 302], "ugli": [215, 225, 239, 248, 249, 262, 269, 270, 334, 339, 513, 719, 791, 796, 821, 822, 862, 961, 962], "flat": [215, 225, 386, 412, 413, 933, 934], "puriti": [215, 225], "silenc": [215, 225, 378, 809], "ambigu": [215, 225, 365, 400, 401, 402, 549, 649, 826], "refus": [215, 225, 234, 429, 739, 792, 863, 879, 938], "temptat": [215, 225], "dutch": [215, 225], "honk": [215, 225], "wahr": 215, "falsch": [215, 228, 1122], "kriegt": 215, "nachkommastellen": 215, "moeglichkeit": 215, "f_str": 215, "punkt_po": 215, "nachkomma_str": 215, "praezedenz": 215, "wandel": 215, "vorn": 215, "anhaengen": 215, "wuenschen": 215, "wuerd": 215, "appendleft": 215, "extendleft": 215, "relem": 215, "popleft": 215, "sorted_l": 215, "sorted_t": 215, "sorted_": 215, "subtext": 215, "ssissippi": 215, "140672464726576": 215, "copied_text": 215, "140672464784832": 215, "140672464784064": 215, "140672599989872": 215, "140672464751872": 215, "140672464768512": 215, "140672464594880": 215, "jkl": 215, "suesser": [215, 221, 228, 231, 234, 250], "sechser_gewuerfelt": 215, "n_tri": [215, 218, 253, 999], "versag": [215, 253], "eva": [215, 267, 1002], "xrang": [215, 1003], "0x7ff0dc48bed0": 215, "hann": 215, "gruess": 215, "gott": [215, 246, 328], "fill_in_us": 215, "scho": 215, "my_db": 215, "uniq_dict": 215, "konfigurierbaren": 215, "startwert": 215, "ausgibt": 215, "sqnum": 215, "0x7ff014b01820": 215, "xslx": 215, "yz": 215, "lret": 215, "ochwa": 215, "followup": [216, 277, 280, 480, 1053], "unbalanc": 216, "geospati": 216, "gdal": 216, "sweigart": [216, 230, 272, 1064], "datenypen": 217, "libarari": 217, "chainmap": 217, "dequ": [217, 707], "suchalgorithmen": 217, "51139385": 218, "77397a312b47": 218, "50924272": [218, 221], "20210728": [218, 221, 990], "eine_komplizierte_funkt": 218, "endeffekt": 218, "zusammenzuzaehlen": 218, "tarnt": 218, "vergeblich": 218, "komplexitaet": 218, "zahl_als_str": 218, "bledsinn": 218, "try_no": 218, "blahblahblah": 218, "cxyxyyyyxi": 218, "table_str": 218, "table_dict": 218, "139769175732912": 218, "139769175738624": 218, "satan_str": 218, "satan_int": 218, "result_of_print": 218, "result_of_evald_print": 218, "code_str": [218, 228], "compiled_cod": 218, "woswasi": [218, 225], "0x7f1e91eb42f0": 218, "philipp": [218, 225, 228, 246, 253, 267, 285, 437, 512, 584, 596, 628, 630, 1053, 1055, 1059, 1061, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "lastnma": 218, "0x7f1e8c0fe2e0": 218, "__abs__": [218, 225, 243], "__and__": [218, 225, 285, 983], "__bool__": [218, 225, 243], "__ceil__": [218, 225, 243], "__divmod__": [218, 225, 243], "__float__": [218, 225, 243, 267], "__floor__": [218, 225, 243], "__floordiv__": [218, 225, 243, 983], "__getnewargs__": [218, 221, 225, 243, 267], "__index__": [218, 225], "__int__": [218, 225, 243, 267, 284], "__invert__": [218, 225], "__lshift__": [218, 225, 983], "__mod__": [218, 221, 225, 243, 267, 983], "__mul__": [218, 221, 225, 243, 267, 983], "__neg__": [218, 225, 243], "__or__": [218, 225, 285, 983], "__pos__": [218, 225, 243], "__pow__": [218, 225, 243, 983], "__rand__": [218, 225, 285], "__rdivmod__": [218, 225, 243], "__rfloordiv__": [218, 225, 243], "__rlshift__": [218, 225], "__rmod__": [218, 221, 225, 243, 267], "__rmul__": [218, 221, 225, 243, 267], "__ror__": [218, 225, 285], "__round__": [218, 225, 243], "__rpow__": [218, 225, 243], "__rrshift__": [218, 225, 983], "__rshift__": [218, 225, 983], "__rsub__": [218, 225, 243, 285, 983], "__rtruediv__": [218, 225, 243], "__rxor__": [218, 225, 285], "__sub__": [218, 225, 243, 285, 983], "__truediv__": [218, 225, 243, 983], "__trunc__": [218, 225, 243], "__xor__": [218, 225, 285, 983], "as_integer_ratio": [218, 225, 243], "bit_length": [218, 225], "conjug": [218, 225, 243], "denomin": [218, 225], "from_byt": [218, 225], "to_byt": [218, 225], "0x7f1e8c0b3130": 218, "int_list": 218, "0x7f1e8c0fe340": 218, "0x7f1e8c0fe760": 218, "u1": 218, "u2": 218, "type_of_us": 218, "scrambl": 218, "hansj\u00f6rg": [218, 419], "gr\u00f6jsnah": 218, "class_str": 218, "1997": [218, 228, 989, 1053, 1055, 1059, 1061], "0x7f1e8c1c2e50": 218, "joleckmi": 218, "predecessor": [219, 227, 233, 277, 280], "cmdline": 219, "excess": [219, 368], "provocantli": 219, "udemi": [219, 223], "pybai": [219, 1064], "suchzeit": 220, "everywher": [220, 235, 398, 413, 429, 639, 778, 916, 1002], "d_as_str": 221, "received_d": 221, "1939": 221, "145415": 221, "bytes_or_buff": [221, 267], "expos": [221, 267, 527, 613, 797, 863, 871, 872, 906], "strict": [221, 241, 267, 285, 434, 448, 455, 469, 483, 535, 719, 1013, 1094], "__contains__": [221, 267, 285], "format_spec": [221, 246, 267], "getattr": [221, 225, 246, 267, 977], "__getitem__": [221, 267, 1085, 1086], "__iter__": [221, 267, 285, 968], "__len__": [221, 267, 285], "casefold": [221, 267], "caseless": [221, 267], "fillchar": [221, 267], "pad": [221, 267, 1009], "occurr": [221, 267, 342], "codec": [221, 228, 231, 267, 273, 1077], "scheme": [113, 221, 267, 284, 287, 551, 959, 963], "unicodeencodeerror": [221, 228, 231, 246, 267, 273, 963, 1077], "xmlcharrefreplac": [221, 267], "register_error": [221, 267], "suffix": [221, 267], "expandtab": [221, 246, 267], "tabsiz": [221, 267], "lowest": [221, 267, 362, 368, 926, 927, 1014], "format_map": [221, 267], "isalnum": [221, 267, 1010], "alphabet": [221, 267, 342, 397, 419, 810, 1077], "isascii": [221, 267], "007f": [221, 267], "isdecim": [221, 267], "iskeyword": [221, 231, 267], "isnumer": [221, 267], "isprint": [221, 267, 342, 370], "printabl": [221, 267, 342, 963], "istitl": [221, 267], "uncas": [221, 267], "pq": [221, 267], "ljust": [221, 267], "removeprefix": [221, 267], "removesuffix": [221, 267], "rindex": [221, 267, 1010], "rpartit": [221, 267], "discard": [221, 267, 285, 401, 547, 548, 685, 808, 809], "splitlin": [221, 267], "keepend": [221, 267], "swapcas": [221, 267], "titlecas": [221, 267], "lookuperror": [221, 246, 267, 963], "untouch": [221, 267, 766], "zfill": [221, 267], "maketran": [221, 267], "usabl": [221, 267, 361, 440, 491, 646, 873], "numerischen": 221, "ecma": 221, "3rd": [221, 725], "interchang": [221, 617, 699, 1077], "marshal": 221, "pickl": [221, 225], "simplejson": 221, "foo": [221, 253, 263, 267, 285, 507, 648, 681, 699, 963, 1004], "baz": 221, "u1234": 221, "sort_kei": 221, "getvalu": 221, "compact": [221, 368], "mydict": 221, "obj": [221, 246, 475, 734, 735, 744, 977, 985, 1085, 1086], "x08ar": 221, "as_complex": 221, "dct": 221, "__complex__": 221, "object_hook": 221, "2j": 221, "parse_float": 221, "encode_complex": 221, "serializ": 221, "1j": 221, "jsonencod": 221, "iterencod": 221, "scanner": 221, "jsondecodeerror": 221, "jsondecod": 221, "msg": [221, 234, 353, 438, 442, 930, 932, 933, 937, 959, 962, 963], "unformat": 221, "lineno": [221, 228], "colno": 221, "delattr": [221, 225, 246], "setattr": [221, 225, 246, 977], "__setstate__": [221, 225], "with_traceback": [221, 225], "tb": [221, 225], "__traceback__": [221, 225], "__cause__": [221, 225], "__context__": [221, 225], "__suppress_context__": [221, 225], "parse_int": 221, "parse_const": 221, "object_pairs_hook": 221, "nan": [221, 253, 1069, 1081], "num_str": 221, "_w": 221, "0x7f99fff1bb70": 221, "raw_decod": 221, "extran": 221, "skipkei": 221, "ensure_ascii": 221, "check_circular": 221, "allow_nan": 221, "recogn": [221, 563, 872, 1121], "sensibl": 221, "circular": 221, "recursionerror": [221, 246, 963], "compliant": [221, 976], "item_separ": 221, "key_separ": 221, "_one_shot": 221, "chunk": [221, 310, 398, 760, 898, 1066, 1077], "bigobject": 221, "mysocket": 221, "fp": 221, "inf": 221, "complianc": 221, "ippolito": 221, "redivi": 221, "140299267714496": 221, "140299267930496": 221, "schweissparameter_aussi": 221, "strom_ma": 221, "200004": 221, "spannung_v": 221, "aufs_kabel": 221, "maschine_112": 221, "kabel": [221, 225], "vom_kabel": 221, "schweissparameter_eini": 221, "strom_a": 221, "hal": 221, "2c445fb3": 221, "6ca4": 221, "b9d9": 221, "7cfbbff55326": 221, "doesnt_exist": 221, "_a666": 221, "140299402960464": 221, "0b10000000000000000000000000000000000000000000000000000000000000000": [221, 225, 246, 263], "140299327492352": 221, "func_fals": 221, "func_tru": 221, "sex_opt": 221, "140298898107648": 221, "t_mit_einem_el": 221, "supi": 221, "squares_map": 221, "squares_set": 221, "numtri": 221, "even_numb": [221, 285], "mississppi": 221, "xxxx": 221, "nbin": [221, 228, 253, 267], "ndaemon": [221, 228, 253, 267], "nadm": [221, 228, 253, 267], "nlp": [221, 228, 253, 267], "nsync": [221, 228, 253, 267], "nshutdown": [221, 228, 253, 267], "nhalt": [221, 228, 253, 267], "nmail": [221, 228, 253, 267], "noper": [221, 228, 253, 267], "ngame": [221, 228, 253, 267], "nftp": [221, 228, 253, 267], "nnobodi": [221, 228, 253, 267], "napach": [221, 228, 253, 267], "nsystemd": [221, 228, 253, 267], "ntss": [221, 228, 253, 267], "ndbu": [221, 228, 253, 267], "npolkitd": [221, 228, 253, 267], "navahi": [221, 228, 253, 267], "nunbound": [221, 228, 253, 267], "ndnsmasq": [221, 228, 253, 267], "nnm": [221, 228, 253, 267], "nusbmuxd": [221, 228, 253, 267], "ngluster": [221, 228, 253, 267], "nrtkit": [221, 228, 253, 267], "npipewir": [221, 228, 253, 267], "ngeoclu": [221, 228, 253, 267], "nchroni": [221, 228, 253, 267], "nsaslauth": [221, 228, 253, 267], "nradvd": [221, 228], "nrpc": [221, 228, 253, 267], "nqemu": [221, 228, 253, 267], "nopenvpn": [221, 228, 253, 267], "ncolord": [221, 228, 253, 267, 888], "nrpcuser": [221, 228, 253, 267], "nabrt": [221, 228, 253, 267], "nflatpak": [221, 228, 253, 267], "ngdm": [221, 228, 253, 267], "ngnome": [221, 228, 253, 267], "nvboxadd": [221, 228, 253, 267], "nsshd": [221, 228, 253, 267], "ntcpdump": [221, 228, 253, 267], "njfasch": [221, 228, 253, 267], "nmosquitto": [221, 228, 253, 267], "nsomeon": [221, 228], "1001": [221, 228, 231, 592, 593, 594, 595, 811, 823, 854, 883], "move_to_end": 221, "thermometera": 221, "thermometerb": 221, "get_average_temperatur": 221, "th_list": 221, "ipykernel_9164": 221, "859664274": 221, "2942790015": 221, "0x7fac83797be0": 221, "basisklass": 221, "level2_1": 221, "l21": 221, "level2_2": 221, "level3": 221, "jedi": 221, "blueey": 221, "droid": 221, "r2d2": 221, "derivednoctor": 221, "dnoctor": 221, "derivedctorcallingsup": 221, "derivedctorcallingbasector": 221, "__firstnam": 221, "__lastnam": 221, "_user__firstnam": 221, "_user__lastnam": 221, "lightsab": 221, "padawan": 221, "arithmeticerror": [221, 246, 963], "waaah": 221, "abgebrannt": 221, "puh": 221, "intakt": 221, "is_even": [221, 225, 652, 653, 654, 655], "0x7fac81f52df0": 221, "0x7fac81cb5700": 221, "progamm": 221, "tumpfback": 221, "och": 221, "umpfback": 221, "rt": [221, 719, 743, 747, 757, 768, 770, 775, 778, 781, 784, 787, 862], "wholefil": 221, "notepad": 222, "betreiben": [222, 1122, 1129, 1130], "unterschiedlichen": 222, "sinnvol": 222, "umgebungen": 222, "unausweichlich": 222, "installationsverzeichni": 222, "verzeichniss": [222, 1124], "ausf\u00fchren": 222, "hernimmt": 222, "wei\u00df": 222, "rennt": 222, "ordereddict": 223, "__mro__": 223, "successor": [224, 362], "repeatedli": [224, 592, 1076], "kantenlaeng": 225, "ipykernel_101004": 225, "2437887948": 225, "0x10": [225, 228, 426], "0b1111111111111111111111111111111111111111111111111111111111111111": [225, 246, 263, 267], "1267650600228229401496703205381": 225, "735611673": 225, "ndigit": [225, 246, 341], "0b101": 225, "0b100": [225, 228], "register_statu": 225, "0b1001000": 225, "0b00001000": 225, "strom": 225, "liegt_strom_an": 225, "0b00111110": 225, "ever": [225, 285, 417, 426, 457, 805, 871, 994, 1118], "deadbeef": [225, 494, 865], "gross": 225, "doktor": 225, "jawui": 225, "akademik": 225, "ndef": 225, "tdef": [225, 246], "geh": 225, "hochkomplex": 225, "verendet": 225, "euler": 225, "sche": 225, "dokumentiern": 225, "koennt": 225, "varianc": 225, "fmean": 225, "geometric_mean": 225, "harmonic_mean": 225, "harmon": 225, "median": 225, "median_low": 225, "median_high": 225, "median_group": 225, "50th": 225, "percentil": 225, "multimod": 225, "quantil": 225, "centr": 225, "nearest": [225, 460, 1071], "doctest": 225, "ellipsi": [225, 246], "8333333333": 225, "8333": 225, "spread": 225, "pvarianc": 225, "pstdev": 225, "stdev": [225, 926, 928], "38961843444": 225, "recalcul": 225, "statisticserror": 225, "normaldist": 225, "x1": 225, "unchang": [225, 636, 957], "jointli": 225, "rescal": 225, "cdf": 225, "cumul": [225, 411], "inv_cdf": 225, "invers": [225, 325, 417, 435, 442, 730, 925, 926, 1134], "coeffici": 225, "ovl": 225, "agreement": 225, "densiti": 225, "8035050657330205": 225, "dx": 225, "quartil": 225, "decil": 225, "zscore": 225, "score": 225, "from_sampl": 225, "readonli": 225, "dataset": [225, 1067, 1069, 1082, 1084, 1086, 1088], "subcontrari": 225, "reciproc": 225, "quantiti": [225, 257, 1071], "earn": 225, "5625": 225, "midpoint": 225, "estim": 225, "nomin": 225, "taught": [225, 987, 1123], "aabbbbbbbbcc": 225, "aabbbbccddddeeffffgg": 225, "986893273527251": 225, "0th": 225, "100th": 225, "xbar": 225, "0810874155219827": 225, "3720238095238095": 225, "01875": 225, "gesamter_gruss": 225, "excelsheet": 225, "hinters": 225, "gabali": 225, "helen": 225, "fischer": 225, "sssklndkfgv": 225, "fosvh": 225, "worl": [225, 228, 1001], "lowr": 225, "dlrow": [225, 1001], "olleh": [225, 1001], "even_numbers_fun": 225, "even_numbers_gen": 225, "evennum": 225, "even_filt": 225, "tausend": 225, "1234250497": [225, 228, 231, 234, 437, 444, 596], "1234250597": 225, "users_json_str": 225, "liest": 225, "kontrah": 225, "verwandelt": 225, "gelesenes_ding_wieder_als_dict": 225, "schatz": 225, "erich": 225, "koxi": 225, "hatkeinenwert": 225, "fn": [225, 402, 419, 717, 1088], "ul": [225, 356], "ln": [225, 402], "1st": [226, 1107], "einschub": 226, "filterketten": 226, "datensatz": 226, "letzten": 226, "recapitul": 227, "naeherungsverfahren": 228, "addieren": 228, "140606563548752": 228, "wirklich": [228, 1113], "0o10": 228, "teilbar": 228, "00001": 228, "abd": [228, 562], "i1": [228, 263], "140606428182128": 228, "140606428182896": 228, "2345010101": 228, "elizabeth": [228, 1053, 1055, 1059, 1061, 1072], "1901": 228, "evi": 228, "maxim": [228, 417, 872], "wuerfeln": 228, "freuen": 228, "sechser": 228, "faellt": 228, "jammern": 228, "versuch_numm": 228, "versuchen": 228, "jammert": 228, "hlo": [228, 1001], "output_list": [228, 1046], "nullt": 228, "34567654567": 228, "gsd": 228, "another_t": 228, "symmetisch": 228, "netzwerkkommunik": 228, "request_to_send": 228, "request_str_to_send": 228, "1651046407": 228, "3633313": 228, "cabl": [228, 797], "request_str_from_c": 228, "request_from_c": 228, "1651046335": 228, "8477345": 228, "139909434561408": 228, "139909544402512": 228, "139909544402544": 228, "139909543772528": 228, "139909433666288": 228, "roo": [228, 267, 857], "xf6": [228, 231, 273, 995, 1077], "joerg_latin": 228, "xf6rg": [228, 231, 273, 285, 1077], "j\u0456rg": [228, 231, 273, 1077], "cyclic": 230, "140616191009600": 231, "140616191012720": 231, "140116274372176": 231, "0x7f6f5cc2de50": 231, "0x7f6f5cc2df30": 231, "18446744073709551617": 231, "multi_dict": 231, "ipykernel_189565": 231, "1743780635": 231, "140115753096128": 231, "ntri": 231, "bytes_joerg": 231, "bytes_joerg_iso_latin_1": 231, "bytes_joerg_utf_32": 231, "xff": [231, 273], "xfe": [231, 273], "x00": [231, 273, 870], "x00j": [231, 273], "x00r": [231, 273], "x00g": [231, 273], "bytes_joerg_utf_16": 231, "xfej": 231, "bytes_joerg_utf_8": 231, "xc3": [231, 267, 273, 995, 1077], "xb6rg": [231, 267, 273, 1077], "iso_latin_1": 231, "russian": 231, "bytes_received_by_russian": 231, "2435": 231, "010d": 231, "0000000666": 231, "ssi": 231, "garbag": [231, 412, 419, 435, 694, 706, 872, 899, 961], "ipykernel_4000": 231, "3227798639": 231, "ahja": 231, "24000": 231, "24500": 231, "25000": 231, "25500": 231, "26000": 231, "26500": 231, "__del__": 231, "whe": 231, "13397": 231, "116985": 231, "120725": 231, "118110": 231, "0x7fe3a392aa30": 231, "test_person_bas": 233, "pluggi": [233, 251, 1052, 1098], "rootdir": [233, 251, 766, 1052, 1098], "test_persondb_bas": 233, "test_pytest_demo": 233, "xfail": [233, 1098], "test_persondb": 233, "test_duplicate_svnr": 233, "test_update_sunnycas": 233, "test_update_notexist": 233, "test_update_exact_dupl": 233, "former": [233, 1004], "persondb": 233, "sqlite": [233, 423, 1020, 1073], "ics_demand": 233, "maco": [233, 310, 315], "woe": 233, "homebrew": 233, "brew": 233, "flaviocop": 233, "str_mit_666": 234, "140240419976192": 234, "140240419593568": 234, "aclass": 234, "almostempti": 234, "beenther": 234, "kuckucksei": 234, "chirp": 234, "some_bullshit": 234, "bad_thing_happen": 234, "do_some_bullshit": 234, "boah": 234, "python_cod": 234, "a_global_vari": 234, "globale_vari": 234, "140240513015376": 234, "140240513014256": 234, "140240419270768": 234, "140240419271792": 234, "storesanintegerandmodifiesit": 234, "the_int": 234, "my_int": 234, "saiami": 234, "storesalistandmodifiesit": 234, "the_list": 234, "append_someth": 234, "salami": 234, "compute_squar": 234, "satanicerror": 234, "jess": 234, "invalidsvnr": 234, "rex_lin": 234, "json_str": [234, 1060], "python_l": 234, "0x7f8c0551f490": 234, "behandlung": 236, "kurzer": 236, "reicht": [236, 1113], "unwichtig": 236, "weggelassen": 236, "\u00fc": [236, 1077], "jeden": 236, "teilnehmer\u00fcbung": 236, "kernsprach": 236, "rvalu": [236, 258, 291, 538, 643, 675, 685, 691, 694, 695, 696, 697, 700, 708, 716, 718, 719, 1117, 1118, 1119], "constexpr": [236, 237, 238, 258, 260, 675, 685, 709, 718, 719, 1118], "uniform": [236, 237, 238, 240, 291, 417, 437, 539, 571, 591, 592, 635, 675, 684, 716, 718, 719, 976, 1118], "initialisierung": [236, 1134], "infer": 236, "speichermodel": 236, "atomar": [236, 1116, 1134], "standardbibliothek": 236, "regu\u00e4r": 236, "trait": [236, 291], "zufallszahlen": 236, "zeitbibliothek": 236, "sprachsyntax": 236, "deduct": [236, 650, 652], "erweiterungen": 236, "ge\u00e4ndert": 236, "definitionen": 236, "bibliothek": 236, "zusatzvari": 236, "constinit": 236, "modularisierung": [236, 311, 1115], "versionierung": 236, "routinen": 236, "synchronisierung": 236, "werkzeug": [236, 1115, 1122, 1124, 1129, 1132], "kalend": [236, 1112], "zeitzonen": 236, "zus\u00e4tz": 236, "chrono": [236, 237, 238, 240, 249, 291, 442, 635, 696, 707, 708, 712, 718, 719], "initializer_list": [237, 238, 240, 291, 438, 439, 466, 467, 635, 637, 675, 718, 719], "handwrit": [237, 238, 240, 291, 675, 691, 718, 719], "weak_ptr": [237, 238, 240, 291, 691, 716, 718, 719], "boilerpl": [237, 238, 240, 276, 291, 424, 675, 676, 677, 695, 718, 719, 942, 1114], "condition_vari": [237, 238, 240, 249, 291, 708, 718, 719, 1118], "emplace_back": [237, 238, 571], "cref": [237, 238], "interoper": [238, 240, 258, 260], "wazoo": [238, 240, 258, 260], "anviron": [238, 240], "submodul": [238, 240, 492, 555], "chdir": [238, 240], "gtest_main": [238, 442, 491, 493, 494, 514, 517, 529, 555, 693, 694, 1104, 1109], "dummy_suit": 238, "sticki": [239, 248, 249, 269, 270, 310, 315, 719, 796, 821, 862], "insod": 240, "lvalu": [240, 643, 644, 647, 675, 685, 691, 695, 700, 708, 716, 718, 719], "afterword": [240, 644, 675, 718, 719], "ain": [240, 417, 991], "singleton": [241, 434, 435, 441, 455, 469, 483, 535, 719, 1121], "inflex": [241, 337, 434, 448, 455, 461, 462, 469, 483, 535, 719], "flexibl": [241, 428, 434, 448, 455, 469, 483, 535, 581, 719, 909, 924, 940, 941, 942, 957, 958, 1009, 1113], "proxi": [241, 259, 261, 262, 283, 287, 316, 434, 441, 443, 444, 455, 469, 483, 535, 719, 1093, 1121], "serverthread": [241, 459, 473], "heat": [241, 434, 441, 485, 494, 719, 872, 1068, 1069], "my_si": [243, 971], "function_returns_two_valu": 243, "140134238766608": 243, "sizeof": [243, 341, 351, 362, 383, 390, 391, 395, 398, 518, 530, 542, 570, 636, 698, 866, 884, 888, 889, 890, 896, 897, 898, 899, 924, 930, 933, 937, 1003], "__getformat__": 243, "__setformat__": 243, "fromhex": 243, "0b0010": 243, "0b1001": 243, "key_list": 243, "key_tupl": 243, "evil_list": 243, "evil_list_2": 243, "neinem": 243, "nviel": 243, "doze_path": [243, 246], "compiled_regex": 243, "l_json": 243, "l_json_sent": 243, "received_data": 243, "0x7f73869f06c0": 243, "create_avg_item": 243, "sensor1": [243, 442], "ninetynin": 243, "koppel": 245, "netzwerk": [245, 311, 1122, 1132, 1135], "condens": [245, 418], "nprint": 246, "noption": 246, "nfile": 246, "nsep": 246, "nend": 246, "nflush": 246, "forcibli": 246, "didact": [246, 328, 331, 554, 556, 557, 1121], "fullnam": [246, 253, 980, 984], "nerst": 246, "nzweit": [246, 305], "andere_list": 246, "neue_list": 246, "140323934455312": 246, "140323934455344": 246, "140323934455376": 246, "140323852147712": 246, "140323933649904": 246, "140323833601584": 246, "frozenset": [246, 263, 284], "__builtins__": [246, 267, 964], "gr\u00fc\u00df": 246, "nocheinprogramm": 246, "ocheinprogramm": 246, "dfghgfdfghj": 246, "jhghgh": 246, "matchstr": 246, "compiled_match": 246, "tprint": 246, "num_ss": 246, "isi": [246, 496, 512, 1081], "strippeditem": 246, "yet_another_d": 246, "s3": [246, 253, 456], "s4": 246, "isdisjoint": [246, 253, 285, 1013], "nnoteworthi": 246, "nil": 246, "__package__": [246, 303, 964], "__loader__": [246, 303, 964], "__spec__": [246, 303, 964], "modulespec": 246, "loader": [246, 407, 425, 430, 940, 957, 1132], "__build_class__": 246, "__import__": 246, "dont_inherit": 246, "_feature_vers": 246, "divmod": 246, "raw_input": 246, "ipkernel": 246, "ipythonkernel": 246, "0x7f9fb16abcd0": 246, "class_or_tupl": 246, "aiter": 246, "async_iter": 246, "anext": 246, "oct": [246, 848, 870, 872, 963], "pow": [246, 547, 548, 698], "exp": [246, 471], "notimpl": [246, 285, 983], "memoryview": 246, "__debug__": 246, "stopasynciter": [246, 963], "generatorexit": [246, 963], "keyboardinterrupt": [246, 262, 963], "importerror": [246, 963], "environmenterror": [246, 1093], "ioerror": [246, 1099], "eoferror": [246, 963], "notimplementederror": [246, 963], "unboundlocalerror": [246, 963], "indentationerror": [246, 963], "taberror": [246, 963], "unicodeerror": [246, 963], "unicodedecodeerror": [246, 963], "unicodetranslateerror": [246, 963], "floatingpointerror": [246, 963], "overflowerror": [246, 963], "systemerror": [246, 963], "referenceerror": [246, 963], "memoryerror": [246, 963], "buffererror": [246, 963], "userwarn": [246, 963], "encodingwarn": [246, 963], "deprecationwarn": [246, 963], "pendingdeprecationwarn": [246, 963], "syntaxwarn": [246, 963], "runtimewarn": [246, 963], "futurewarn": [246, 963, 1081], "importwarn": [246, 963], "unicodewarn": [246, 963], "byteswarn": [246, 963], "resourcewarn": [246, 963], "connectionerror": [246, 963], "blockingioerror": [246, 963], "brokenpipeerror": [246, 963], "childprocesserror": [246, 963], "connectionabortederror": [246, 963], "connectionrefusederror": [246, 963], "connectionreseterror": [246, 963], "fileexistserror": [246, 963], "isadirectoryerror": [246, 963], "notadirectoryerror": [246, 963], "interruptederror": [246, 963], "processlookuperror": [246, 963], "timeouterror": [246, 963], "closefd": 246, "beopen": 246, "1995": [246, 445, 1053, 1055, 1059, 1061], "nation": [246, 870], "1991": [246, 989], "sticht": 246, "centrum": 246, "amsterdam": [246, 989], "credit": [246, 737, 990], "cwi": 246, "cnri": 246, "zope": 246, "cast": [246, 362, 518, 606, 613, 725], "execfil": 246, "_pydev_imp": 246, "_pydev_execfil": 246, "glob": [246, 394, 854, 911, 959, 974, 1105], "runfil": 246, "_pydev_bundl": 246, "pydev_umd": 246, "wdir": 246, "__ipython__": 246, "exclud": [246, 413, 540], "transient": 246, "display_id": 246, "get_ipython": 246, "interactiveshel": 246, "zmqshell": 246, "zmqinteractiveshel": 246, "0x7f9fb1516200": 246, "config_fil": 246, "srcdir": 246, "dstdir": 246, "dst": [246, 357, 407, 496, 537, 556, 565, 566, 572, 1014], "untrust": 249, "lan": 249, "programmat": [249, 463, 863, 871, 919, 939, 1089], "stty": 249, "termio": 249, "ioctl_tti": 249, "setseri": 249, "tty": [249, 797, 852, 924, 930, 954], "tty_io": 249, "bidirection": 249, "nake": 249, "tiocgseri": 249, "tiocsseri": 249, "async_low_lat": 249, "cfmakeraw": 249, "ttyusb0": [249, 797], "low_lat": 249, "serial_struct": 249, "bidir": 249, "advantec": 249, "nonetheless": [249, 252, 255, 284, 652, 1105], "mycat": 249, "mimick": [249, 693], "pwm": [249, 258, 719, 766, 862, 863, 869, 906, 1122, 1129], "pca9685": [113, 249, 719, 862, 863, 869], "make_realtim": 249, "interfaceri": 249, "cif": 249, "samba": 249, "automationadmin": 249, "gsc": 249, "pd": [250, 251, 253, 257, 285, 419, 1067, 1069, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "read_csv": [250, 251, 257, 285, 419, 1067, 1069], "txn": 250, "iso8859": 250, "time_book": [250, 251, 419], "time_valuta": [250, 251, 419], "at66666666666666": 250, "bezahlung": [250, 251, 253, 419], "kart": [250, 251, 253, 419], "eur": [250, 251, 419], "95111243": [250, 419], "abbuchung": [250, 419], "onlinebank": [250, 419], "gutschrift": 250, "000000144919": 250, "339099446722187": 250, "000": [250, 285, 419, 825, 863], "card_pay": 250, "filt": 250, "9325008697": 250, "339099446790254": 250, "og": [250, 407], "237811001182": 250, "auszahlung": 250, "200075787001": 250, "tzb": 250, "anl": 250, "347159strom": 250, "200004871820": 250, "200004876265": 250, "200004848862": 250, "200004871863": 250, "dauerauftrag": 250, "qsnng6xau": 250, "00121672661": 250, "120016487112": [250, 419], "bx": 250, "000009219": 250, "entgelt": 250, "nichtdurchf\u00fchrung": 250, "032300005522384": 250, "saldo": 250, "messtechnik": 250, "602674240071": 250, "0004325259000023": 250, "oeamtc": 250, "mitgliedschaft": 250, "re_liv": 250, "billa": [250, 253, 419], "rew": 250, "dankt": [250, 251, 253, 419], "pipe_stag": 251, "max_colwidth": 251, "max_column": 251, "max_row": 251, "039": 251, "consolut": 251, "insuffici": [251, 649], "categor": [251, 418, 1071], "fuction": 251, "filt_uncat": 251, "uncat_row": 251, "unspecif": [251, 321, 744], "useless": [251, 643, 701, 810, 857, 913, 985], "food": [251, 257], "luxuri": 251, "categorize_card_pay": 251, "jet": 251, "uncertainti": 251, "categorize_v1": 251, "categorize_v2": 251, "secondari": 251, "test_categori": [251, 419], "test_bas": [251, 1052], "000009258": 251, "k002": [251, 419], "impos": [252, 255], "hurt": [252, 255, 356], "strength": [252, 255, 383, 987], "overengin": [252, 255, 356, 417, 418, 1113, 1121], "140480285361680": 253, "0xffffffffffffffff": [253, 273], "0x10000000000000000": [253, 273], "140479638276224": 253, "140480203220736": 253, "140480210406176": 253, "7940943354778932823": 253, "0x7fc4189e7c90": 253, "28800": 253, "237988": 253, "produce_dai": 253, "374557": 253, "l_mal_2": 253, "140480285361712": 253, "140479638477760": 253, "140479638427520": 253, "l4": 253, "l5": 253, "140480202528192": 253, "140479638428736": 253, "140480203212992": 253, "l6": 253, "140479598069936": 253, "is_old": 253, "ipykernel_370861": 253, "4290492544": 253, "abc123": 253, "0x7fc4189e5030": 253, "yyi": 253, "lichtenberg": [253, 437, 596, 628, 630, 1053, 1055, 1059, 1061, 1081, 1082, 1083, 1085, 1086, 1087, 1088], "persons2": [253, 1081, 1082], "set_index": [253, 1086], "sort_valu": 253, "inplac": [253, 257, 879, 1082], "flt": [253, 1083], "isin": [253, 1083], "reset_index": 253, "dropna": 253, "value_count": [253, 257], "int64": [253, 257, 1088], "conversiosn": 254, "9am": 255, "woven": [255, 259], "pipelin": [255, 328, 791, 806, 809, 810, 859, 873, 952], "accountid": 257, "accountdescript": 257, "accountparentid": 257, "storeid": 257, "storedescript": 257, "locationid": 257, "locationdescript": 257, "productid": 257, "productdescript": 257, "sales_managerid": 257, "dateyear": 257, "datequart": 257, "datemonth": 257, "datedai": 257, "categoryvers": 257, "categorycategori": 257, "categorytyp": 257, "valueunit": 257, "original_sales_pric": 257, "sale": 257, "st43": 257, "franchescini": 257, "ct14": 257, "salem": 257, "pd23": 257, "ipa": 257, "sm1": 257, "20144": 257, "201412": 257, "1779": 257, "763910": 257, "usd": 257, "st35": 257, "pd2": 257, "pepsi": 257, "sm4": 257, "201410": 257, "957113": 257, "st98": 257, "walter": 257, "pd24": 257, "amber": 257, "20142": 257, "201406": 257, "449395": 257, "st188": 257, "arrowhead": 257, "ct1": 257, "pd19": 257, "sm8": 257, "20164": 257, "201611": 257, "078689": 257, "st107": 257, "spire": 257, "ct5": 257, "san": 257, "jose": 257, "pd15": 257, "juic": 257, "sm5": 257, "20154": 257, "201512": 257, "303679": 257, "quantity_sold": 257, "sold": 257, "st4": 257, "gstore": 257, "ct13": 257, "portland": 257, "pd26": 257, "wine": 257, "000000": [257, 1069], "1069": 257, "st49": 257, "bai": 257, "depot": 257, "ct4": 257, "sacramento": 257, "pd27": 257, "20151": 257, "201501": 257, "592904": 257, "discount": 257, "st36": 257, "pricelow": 257, "arena": 257, "ct10": 257, "reno": 257, "pd22": 257, "sm3": 257, "20162": 257, "201605": 257, "4351": 257, "045830": 257, "1071": 257, "st7": 257, "street": [257, 832], "pd16": 257, "7905": 257, "590606": 257, "pd12": 257, "lemonad": 257, "20153": 257, "201507": 257, "1073": 257, "modified_model": 257, "sales_managerdescript": 257, "janet": 257, "buri": 257, "nanci": 257, "miller": 257, "setp": 257, "nan_field": 257, "bitfield": 257, "bitfi": 257, "nan_column": 257, "gabriel": [257, 681], "walton": 257, "carl": 257, "jjjjj": 257, "ref_t": 257, "datetime64": 257, "damn": 257, "ref_2015_12_04": 257, "flt_before_2015_12_04": 257, "rows_before_2015_12_04": 257, "st119": 257, "ct2": 257, "francisco": 257, "pd11": 257, "orang": [257, 1006], "pulp": 257, "sm7": 257, "kiran": 257, "raj": 257, "201503": 257, "226847": 257, "13627": 257, "793342": 257, "3427": 257, "896898": 257, "15569": 257, "353983": 257, "float64": [257, 1069], "1957": 257, "740301": 257, "572676": 257, "686587": 257, "289381": 257, "flt_product_pd2": 257, "flt_2015": 257, "flt_only_sold": 257, "flt_combin": 257, "st139": 257, "farlo": 257, "ct15": 257, "eugen": 257, "sm11": 257, "jame": 257, "frank": 257, "201511": 257, "st178": 257, "rai": 257, "ct8": 257, "beverli": 257, "hill": 257, "201508": 257, "facet": [258, 260, 591], "rich": [258, 260, 1082, 1092], "toolset": [258, 260, 609], "conceptu": [258, 260, 408, 737, 744, 882], "undergon": [258, 260], "revolut": [258, 260], "odr": [258, 681], "explor": [258, 871], "rodata": [258, 957], "unspecifi": [258, 362, 449, 521, 937, 938], "bookkeep": [259, 418], "fewer": 259, "love": [259, 1059], "closer": 259, "augment": [259, 766, 1078], "test_blah": 259, "monkeypatch": [259, 261, 262, 277, 283, 284, 287], "contextlib": 259, "chatgpt": 260, "ludwig": 260, "registri": [260, 502], "memleak": 260, "jason": [261, 262, 283], "brownle": [261, 262, 283], "contriv": [261, 262, 283, 440, 964, 999], "subthread": [261, 262], "introductori": [261, 262, 283, 719, 862, 903, 1070, 1071, 1118], "mindset": [261, 262, 283, 287, 766], "develp": 261, "datalogg": [262, 284], "10am": 262, "reopen": 262, "drei_millionen_int": 263, "3_000_000": 263, "odd_numb": [263, 968], "odd_numbers_func": 263, "ret_num": 263, "0x7f32ccc4c610": 263, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [263, 305], "139855258515840": 263, "139856078033344": 263, "139856078226432": 263, "139856160540176": 263, "i3": 263, "i4": 263, "nope": [263, 919], "0101010101010": 263, "bash_logout": [263, 848], "bash_profil": [263, 848], "thunderbird": [263, 828, 848], "gnupg": [263, 848], "hst": 263, "gitconfig": [263, 848], "pki": [263, 848], "mplayer": 263, "daham": 263, "20230403": 263, "222915": 263, "bash_histori": [263, 848], "python_histori": [263, 848], "lesshst": [263, 848], "139855258795072": 263, "139855260513728": 263, "139856085569920": 263, "doppelt": 263, "gemoppelt": 263, "trag": 263, "exakt": 263, "paarweis": 263, "read_lines_of_fil": 263, "0x7f32c7d8d390": 263, "nohead": [266, 1058, 1059, 1061], "userdb_csv": [266, 1059, 1060, 1061], "interleav": 266, "dosometh": 267, "0x7fe7fbf80df0": 267, "140634424624656": 267, "140634424623536": 267, "0o644": 267, "0b01110101": 267, "setting_blah": 267, "setting_foo": 267, "config_context": 267, "140634341074320": 267, "140634424624688": 267, "140634341076688": 267, "140634341077776": 267, "140634343012864": 267, "140634341099856": 267, "ipykernel_61373": 267, "1125713270": 267, "1234567876543234567654321234565432123456": 267, "140634281233520": 267, "140634341798400": 267, "140634341995008": 267, "140634341576640": 267, "140634341773312": 267, "140634281802304": 267, "global_vari": 267, "bar2": 267, "bar3": 267, "bar4": 267, "bar5": 267, "bar6": 267, "0x7fe7f869b7d0": 267, "0x7fe7f869b920": 267, "0x7fe7f869bbc0": 267, "punctuat": 267, "abcabcabcabcabc": 267, "rex": 267, "cba": [267, 600], "another_d": 267, "rb": 267, "30000": 267, "coreutil": 270, "autopoint": 270, "rpm": [270, 430], "fcntl": [270, 870, 888, 892, 896, 897, 898, 899, 904, 907, 930, 933, 937], "luciano": [272, 311, 312, 1064], "ramalho": [272, 311, 312, 1064], "140640823526928": 273, "0x7fe97e53c610": 273, "140640823526960": 273, "140640741310912": 273, "140640741034048": 273, "140640741341184": 273, "wasjetzt": 273, "140640722624768": 273, "140640722715136": 273, "l1_copi": 273, "my_funky_gener": 273, "meine_dumme_sequenz": 273, "0x7fe9785083a0": 273, "0x7fe98c21bce0": 273, "greeter": [273, 421, 422, 423, 427, 428, 956], "0x7fe9796976d0": 273, "140640740502720": 273, "140640722823952": 273, "140640741119552": 273, "l_copi": 273, "140640741312256": 273, "140640722734080": 273, "140640722760768": 273, "140640722739712": 273, "140640741402496": 273, "owher": 273, "0000042": [273, 1009], "bled": 273, "xfc": [273, 995, 1077], "xdfe": [273, 1077], "gr\u045c\u043fe": [273, 1077], "\u795d\u597d": 273, "big5": [273, 1077], "xaf": 273, "xac": 273, "xa6n": 273, "unterschrift": 273, "illeg": [273, 399, 1077], "multibyt": [273, 345, 1077], "xe7": [273, 1077], "xa5": [273, 1077], "x9d": [273, 1077], "xe5": [273, 1077], "xbd": [273, 1077], "incorpor": [275, 1120], "tradition": [275, 685, 865, 986, 1120], "lexer": [275, 1120], "aris": [275, 448, 1120], "compili": [275, 1120], "rant": [276, 424, 719, 1087], "blacklist": [276, 423, 424, 429, 432, 719], "acquaint": [277, 280], "data_to_send": 278, "data_receiv": 278, "user_receiv": [278, 1060], "140048588115008": 278, "140048588341376": 278, "d_str": [281, 615], "uebertragen": 281, "d_str_receiv": 281, "d_receiv": 281, "ala": [284, 287, 462, 553, 822, 888, 928, 1093], "print_": 285, "0x7f29ccf2a920": [], "dos_path": [285, 305], "vernuenftigen": 285, "__class_getitem__": 285, "__iand__": 285, "__ior__": 285, "__isub__": 285, "__ixor__": 285, "difference_upd": 285, "intersection_upd": 285, "issubset": 285, "issuperset": 285, "symmetric_differ": 285, "symmetric_difference_upd": 285, "hallohallohallohallohallo": 285, "broader": 291, "nodiscard": 291, "fallthrough": [291, 937], "noexcept": [291, 438, 472, 643, 646, 648, 663, 665, 666, 668, 669, 670, 671, 685, 695, 709], "string_view": 291, "commmandlin": 295, "omg": [295, 377, 725, 1099], "checker": [296, 301, 310], "horribl": 296, "gpio25": [296, 867], "embarass": 296, "winscp": 296, "cluster_ece19": [296, 297, 298, 299, 300, 301, 310, 719], "ece19": [296, 297, 298, 299, 301, 309, 310, 316, 317, 321, 719], "ece19_file_read": [296, 297, 298, 299, 300, 301, 310, 719], "ece19_blinklicht": [296, 297, 298, 299, 300, 310, 719], "ece19_blinklicht_oo": [297, 298, 299, 300, 310, 719], "ece19_blinklicht_unittest": [299, 300, 310, 719], "ece19_blinklicht_abc": [299, 300, 310, 719], "blinklicht": [300, 310, 315, 719], "1910420003": [301, 302], "corinna": [301, 302], "baumgartn": [301, 302, 319], "1910420002": [301, 302], "anzhelika": [301, 302, 310], "chernykh": [301, 302, 310, 319], "1910420005": [301, 302], "simon": [301, 302], "1910420006": [301, 302], "matthia": [301, 302, 319], "kappel": [301, 302, 319], "1810420009": [301, 302], "kolter": [301, 302], "1920420033": [301, 302], "kornberg": [301, 302, 319, 322], "1910420007": [301, 302], "lui": [301, 302, 319], "kraker": [301, 302, 319, 322], "1810420010": [301, 302], "leonid": [301, 302], "kudriaschov": [301, 302], "1910420008": [301, 302], "michael": [301, 302, 311, 312], "1910420010": [301, 302], "sonja": [301, 302, 319], "luka": [301, 302, 319, 322], "1910420013": [301, 302], "behnaz": [301, 302], "mehrabadi": [301, 302, 319], "1910420014": [301, 302], "moser": [301, 302, 319], "1910420015": [301, 302], "moritz": [301, 302], "nagelschmi": [301, 302, 319], "1910420018": [301, 302], "bianca": [301, 302], "reimer": [301, 302], "1910420020": [301, 302], "schmid": [301, 302, 319], "1910420021": [301, 302], "sch\u00fcttler": [301, 302], "1910420022": [301, 302], "schweiger": [301, 302, 319], "1910420024": [301, 302], "sinabel": [301, 302], "1910420025": [301, 302], "slovik": [301, 302, 319], "1910420026": [301, 302], "s\u00f6l": [301, 302, 319], "1910420027": [301, 302], "stangl": [301, 302, 319], "1910420028": [301, 302], "felix": [301, 302, 319], "themessl": [301, 302, 319], "1920420035": [301, 302], "astrid": [301, 302], "vogel": [301, 302, 319], "1810420029": [301, 302], "florian": [301, 302, 319], "zwittnigg": [301, 302], "matricul": [301, 964], "studentdb": 301, "greatli": [301, 403, 1118], "matnr": 301, "rid": [301, 401, 442, 768, 785], "zuweisung": 302, "n1910420002": 302, "n1910420005": 302, "n1910420006": 302, "n1810420009": 302, "n1920420033": 302, "n1910420007": 302, "n1810420010": 302, "n1910420008": 302, "n1910420010": 302, "n1910420013": 302, "n1910420014": 302, "n1910420015": 302, "n1910420018": 302, "n1910420020": 302, "n1910420021": 302, "n1910420022": 302, "n1910420024": 302, "n1910420025": 302, "n1910420026": 302, "n1910420027": 302, "n1910420028": 302, "n1920420035": 302, "n1810420029": 302, "n666": 302, "5g": 302, "n19": 302, "10420013": 302, "n181": 302, "0420029": 302, "20210324": 303, "orig_si": 303, "__interactivehook__": 303, "_base_execut": 303, "_clear_type_cach": 303, "_current_fram": 303, "_debugmallocstat": 303, "_framework": 303, "_getfram": 303, "_git": 303, "_home": 303, "_xoption": 303, "flo": 304, "ted": 304, "rainer": 304, "rg": 304, "some_numb": [305, 992], "auszuspucken": 305, "eine_neue_vari": 305, "klassisch": 305, "140705292246608": 305, "register_cont": 305, "0b11010001110101000": 305, "107432": 305, "erzwungen": 305, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 305, "groesst": 305, "darstellbar": 305, "ein_string_der_aussieht_wie_ein_integ": 305, "ein_integ": 305, "ver\u00e4ndernd": 305, "say_hello": [306, 981], "333333333333336": 306, "disclos": [307, 879], "formalit\u00e4ten": 309, "summer": [309, 310, 316], "daili": [309, 809], "organiz": 310, "shortcut": [310, 387, 826, 858, 995, 1124], "baustein": [310, 315], "navigieren": [310, 315], "sitzen": [310, 315], "nat\u00fcrlich": [310, 315, 328, 1112], "verstehen": [310, 315, 328, 1125], "pr\u00fcfung": [310, 315], "trocken": [310, 315], "pfade": [310, 315, 1113, 1124], "symbolisch": [310, 315, 853], "verschieben": [310, 315], "textfil": [310, 315], "113ff": [310, 315], "ansatzweis": [310, 315], "durchgegangen": [310, 315], "133ff": [310, 315], "durchgemacht": [310, 315], "wirkungsweis": [310, 315], "verstanden": [310, 315, 1115], "verkn\u00fcpfen": [310, 315], "aufw\u00e4rmen": 310, "fremden": 310, "fragerund": 310, "tire": [310, 315], "transact": [310, 315], "wertebereich": 310, "vpn": [310, 873], "gitlab": 310, "sidenot": 310, "stackoverflow": [310, 315, 393], "swoop": [310, 436], "hashbang": 310, "student1": 310, "student2": 310, "student3": 310, "undescript": 310, "contribut": [310, 940], "crlf": 310, "bang": [310, 430], "trial": [310, 943, 952, 1071], "relationship": [310, 449, 482, 524, 606, 699, 909, 942, 956, 972, 976, 1070], "systemkonzept": [311, 328, 1131], "adressr\u00e4um": [311, 328, 1122], "ger\u00e4t": 311, "destruktoren": [311, 1117], "containertempl": 311, "ausz\u00fcg": 311, "labor\u00fcbungen": 311, "absolventinnen": 311, "absolventen": 311, "entwicklungsplatform": 311, "zielplattform": [311, 1117], "dortigen": 311, "betriebssystemkonzept": [311, 1122, 1129], "verinnerlichen": 311, "eckpfeil": [311, 1117], "ansteuern": 311, "merkmal": 311, "nichttrivial": 311, "kerrisk": [311, 312], "handbook": [311, 312], "corbet": [311, 312, 1113], "allessandro": [311, 312], "rubini": [311, 312], "greg": [311, 312], "kroah": [311, 312], "hartman": [311, 312], "richard": [311, 312, 940], "steven": [311, 312, 407], "stephen": [311, 312], "rago": [311, 312], "brian": [311, 312, 331, 1115], "cookbook": [311, 312, 1105], "lutz": [311, 312], "integriert": 311, "\u00fcbungsanteil": 311, "informatik": 311, "einzelpr\u00fcfung": 311, "schriftlich": 311, "vorlesung": 311, "graduat": 312, "copver": 312, "warm": 313, "briefli": [314, 863], "filethermomet": 314, "ue": 316, "arduino": [316, 318, 863, 871, 1080], "homedirectori": [316, 854], "vbox": 316, "subnet": 316, "announc": [317, 428, 429, 606, 870, 871], "mgmt": 317, "64ff": 317, "readdir": [317, 717], "ow": [317, 461, 462, 463, 475, 476, 477], "readlink": 317, "tracker": [318, 319], "thermometers_docu": 318, "toctre": 318, "execconfig": 318, "wacom": [318, 380, 381], "schuettler": 319, "acquir": [284, 319, 709, 771, 913, 918, 927], "zwittnig": 319, "simu": 319, "kudriaschow": 319, "hysteres": 319, "impl": 319, "marku": 319, "stepper": 319, "motor": [319, 719, 862, 869], "wasserfal": 319, "influxdb": 319, "grafana": 319, "nachmittag": 319, "multitask": [320, 325, 708, 718, 719, 862, 903, 917, 923, 925, 926, 928, 1129], "latenc": [321, 325, 709, 719, 764, 862, 903, 923, 925], "gotcha": [321, 325, 610, 719, 862, 883, 903, 923, 925, 933], "type_from_ini": 321, "ece19error": 321, "configfil": [321, 964], "prettier": [321, 552], "support_address": 321, "invalidtypeerror": 321, "newcom": [323, 324], "individualtrain": 327, "baden": 327, "w\u00fcrttemberg": 327, "beginnend": 327, "kursnotizen": 327, "qualivis": 327, "logbuch": 328, "kursteilnehmern": 328, "zustandegekommen": 328, "zukommen": 328, "potentiellen": 328, "zuk\u00fcnftigen": 328, "eindruck": [328, 1112], "zukommt": 328, "publizieren": 328, "einverst\u00e4ndni": 328, "richtlinien": 328, "thalheim": 328, "mixtur": [328, 571], "gr\u00e4felf": 328, "wel": 328, "regensburg": 328, "pr\u00e4sent": 328, "inhous": [328, 1066, 1112], "linuxcampu": 328, "sch\u00f6nen": 328, "aktiv": 328, "mitgestaltet": 328, "kursabschluss": 328, "dran": 328, "provok": 328, "kam": 328, "anmeldung": 328, "zustand": 328, "freiheiten": 328, "gestanden": 328, "zusatzaufgab": 328, "gef\u00fchrt": [328, 1112], "einschr\u00e4nkungen": [328, 1130], "eintagesworkshop": 328, "leuten": 328, "kenn": 328, "einhergehend": 328, "l\u00f6sungen": [328, 1112, 1113], "darauffolgend": 328, "vertiefen": 328, "ausgew\u00e4hlten": 328, "bereichen": 328, "dbapi2": [328, 1076], "objektorientierung": 328, "r\u00e4umen": 328, "zweit\u00e4gig": 328, "gemisch": 328, "kursen": 328, "ziemlich": 328, "eingemacht": 328, "bestellt": 328, "neugier": 328, "leichtfertig": 328, "tief": 328, "hinabgestiegen": 328, "feiner": 328, "internen": 328, "forschungsprojekt": 328, "gebracht": 328, "diesen": [328, 1132], "zusammenschnitt": 328, "workshopcharakt": [328, 1136], "angegraut": 328, "bewusst": [328, 1134], "verwendung": 328, "wunderbar": 328, "automatisieren": 328, "zurerst": 328, "shellbenutzung": 328, "betriebssystemen": [328, 1124, 1129, 1131], "angeordnet": 328, "ge\u00fcbt": 328, "herk\u00f6mmlichen": [328, 1117], "auffrischung": 328, "eingerostet": 328, "neuigkeiten": 328, "align": [328, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719, 864, 866, 933, 1009, 1116, 1119], "querbeet": 328, "aufbauend": 328, "zuvor": 328, "grundkur": 328, "wichtigsten": 328, "neuerungen": [328, 1117], "tobak": 328, "lieblingsschulungen": 328, "basiswissen": 328, "hoeri": 328, "bastelwoch": 328, "betrachtung": 328, "realtimef\u00e4higkeit": 328, "xenomai": [328, 1113], "fad": 328, "auszugsweis": 328, "richtig": [328, 1132], "n\u00e4chten": 328, "schulungstagen": 328, "kurzweil": 328, "beschert": 328, "einf\u00fchrungscharakt": 328, "kernelprogrammierung": 328, "auftrag": 328, "hardwarenah": [328, 1122, 1129], "ausgew\u00e4ht": 328, "kernelstruktur": 328, "crosscompil": 328, "newer": [329, 720, 883, 956, 1121], "msys2": 330, "5595": 330, "17619": 330, "pacman": 330, "mingw64": 330, "w64": 330, "x64": 330, "medium": [330, 420, 697, 938, 1135], "swlh": 330, "2b2e66352456": 330, "kernighan": [331, 1115, 1116], "denni": [331, 371, 570, 1115], "ritchi": [331, 371, 570, 1115, 1116], "ansi": 331, "iec": [331, 536], "9899": 331, "c11": 331, "pdp": [331, 345], "ken": 331, "thompson": 331, "tabul": [332, 340], "celsiu": [333, 334, 436, 447, 478, 870, 872], "brutal": [333, 352, 356, 377, 635, 652, 926], "ordinari": [333, 553, 607, 657, 750, 758, 829, 906, 986, 993], "everytim": [335, 353, 870], "ascend": [336, 1086], "unread": [337, 355, 412, 698, 941, 942, 962, 1006], "putchar": 339, "caution": [339, 545, 792, 866], "obscur": [339, 347, 492, 613, 783, 892, 934], "alright": [339, 365], "inequ": [339, 553], "word1": [340, 512], "word2": [340, 512], "word3": [340, 512], "word4": 340, "word5": 340, "unixen": [340, 717, 934, 1100, 1113], "nonsens": [341, 359, 378, 538, 542, 545, 635, 694, 829, 924, 961, 1070, 1110], "illustr": [341, 964], "countchar": 341, "nwhite": 341, "nother": 341, "stat": [341, 717, 888, 896, 897, 898, 899, 924, 930, 933, 937, 1098], "nonprint": [342, 370], "decis": [342, 417, 497, 544, 560, 694, 863, 926, 966, 1071, 1121], "conveni": [342, 426, 792, 872, 937, 957, 1069], "xxxxxxxxxxxxxxxxxxxxxxxxx": 342, "xxxxxxxxxxxxxxxxxx": 342, "subroutin": [343, 411], "outer": [343, 370], "wimplicit": [343, 734], "hygien": 343, "dear": 343, "assembl": [345, 940], "contradict": [345, 640], "640k": 345, "a_str": 345, "strncpy": 345, "maxlen": [345, 346], "strcat": 345, "strncat": 345, "strcmp": [345, 646, 647], "strncmp": 345, "another_str": 345, "nonsensi": 346, "read_lin": 346, "longest": 346, "confin": [347, 964], "cluster_c": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 675, 691, 700, 708, 716, 718, 719], "cluster_c_introduct": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 675, 691, 700, 708, 716, 718, 719], "c_introduction_exercise_fahrenheit_float": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_variables_and_arithmetic_express": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_introduct": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_instal": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 637, 644, 675, 691, 700, 708, 716, 718, 719], "c_introduction_exercise_fahrenheit_cpp": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_cpp_symbolic_const": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_exercise_wc": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_character_io": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_arrai": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_hello_world": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_exercise_string_read_lin": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_character_arrai": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_exercise_power_declar": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_for_loop": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_funct": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_exercise_fahrenheit_for": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_exercise_histogram": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_introduction_external_variables_and_scop": [348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "z0": 350, "abbrevi": [351, 652, 655, 657, 661], "char_bit": 351, "x86": [351, 430, 940, 957], "stdint": [351, 870, 890, 933], "int8_t": 351, "uint8_t": [351, 449, 464, 636, 870], "int16_t": 351, "uint16_t": 351, "int32_t": 351, "uint32_t": 351, "int64_t": 351, "uint64_t": [351, 388, 494, 664, 665, 699, 890, 933], "052": 352, "0x2a": 352, "0b010010": 352, "42l": 352, "456f": 352, "456l": 352, "x61": 352, "alert": [352, 395, 401, 695, 995, 1003, 1012, 1014], "backspac": [352, 826, 1008], "formfe": 352, "ooo": 352, "octal": [352, 995, 1008, 1009], "xhh": 352, "some_funct": 353, "some_vari": 353, "1415926535897932": 353, "some_nonsensical_numb": 353, "legal": [355, 399, 545, 643, 896, 938], "truth": [355, 893, 919], "eleg": [355, 698], "blank": 355, "num_lf": 355, "narrow": [356, 1071], "4294967295u": 356, "wsign": [356, 398], "wconvers": 356, "4294967296u": 356, "unscrupul": 356, "0x100000000": 356, "weaker": 356, "stronger": [356, 976, 1083], "1l": 356, "1u": 356, "losslessli": 356, "1ul": 356, "wtype": [356, 398], "wextra": [356, 398], "pedant": 356, "anti": [356, 771, 908], "sloppi": 356, "advic": [356, 995], "immens": [356, 938], "hazard": 356, "messi": [356, 427], "subtl": [357, 377, 400, 492, 989], "copy_and_omit": 357, "0x4b": 359, "01001011": 359, "0x0c": 359, "00001100": 359, "0x08": 359, "00001000": 359, "0x4f": 359, "01001111": 359, "0x47": 359, "01000111": 359, "0x03": 359, "00000011": 359, "0x80": 359, "00110000": 359, "001": [285, 359], "0x4c": [359, 756], "01001100": 359, "0xb3": 359, "10110011": 359, "arr": [360, 639], "unari": [362, 995], "strongest": [362, 995], "intuit": [362, 410], "danger": [362, 380, 538, 766, 916, 937, 1004, 1118], "decrement": [363, 372, 379, 383, 385, 389, 392, 396, 405, 409, 414, 415, 588, 637, 675, 694, 716, 718, 719, 725], "cluster_c_types_operators_express": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_variable_nam": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_introduct": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_type_convers": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_relational_logical_oper": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_arithmetic_oper": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_datatypes_s": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_exercise_string_reduc": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_increment_decrement_oper": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_bit_oper": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_const": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_assignment_operators_and_express": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_declar": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_precedence_and_order_of_evalu": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_types_operators_expressions_conditional_express": [363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "doabl": 368, "cond": [368, 913], "expr": [285, 368, 378, 826], "precedenceof": 368, "innermost": [370, 607, 612], "concern": [370, 371, 419, 725, 802, 872, 963, 1120], "edsger": 371, "dijkstra": 371, "plea": 371, "manifold": 371, "judici": [371, 407, 1120], "do_complicated_stuff": 371, "cleanup_mess": 371, "cluster_c_program_flow": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_break_and_continu": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_loops_do_whil": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_goto_and_label": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_else_if": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_if_els": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_statements_and_block": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_loops_while_and_for": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_flow_switch": [372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "vice": 373, "versa": 373, "g_lobal": [374, 375, 377], "print_g": [374, 375], "linkag": 375, "percept": [375, 802], "disciplin": [375, 397, 407, 417, 1070], "convent": [375, 419, 782, 826, 848, 886, 963, 978], "ifndef": [375, 377, 378, 420, 427, 521, 539, 545, 547, 548, 646, 647, 693, 940, 956, 958], "g_h": 375, "programx": 376, "cautious": 377, "c99": [377, 1116], "slow": [377, 408, 412, 588, 872, 883], "have_c_h": 377, "clash": [377, 400], "include_onc": 377, "newbi": [377, 639], "hurdl": 377, "ifdef": [378, 435, 588], "defined": 378, "unequ": 378, "tempt": 378, "horror": 378, "do_much": 378, "do_thi": [378, 699], "do_that": [378, 699], "do_less": 378, "__pragma": 378, "4127": 378, "warn_if": 378, "statem": 378, "function_help": 378, "function_quit": 378, "function_": 378, "inject_viru": 378, "doomed_process": 378, "win32": [378, 1134], "foreign_mem": 378, "virtualallocex": 378, "mem_commit": 378, "page_execut": 378, "page_readwrit": 378, "infect": 378, "__file__": [378, 964, 1098], "__line__": 378, "smell": [378, 432], "pest": 378, "cluster_c_functions_and_program_structur": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_header_fil": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_external_vari": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_c_preprocessor": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_static_vari": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_bas": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_functions_and_program_structure_c_preprocessor_advanc": [379, 385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "dereferenc": [380, 648, 683, 687], "35129": 380, "calle": [381, 411, 413, 550, 959], "tablet": 381, "excang": 382, "pa1": 383, "pa2": 383, "cluster_c_pointers_and_arrai": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_pointers_and_arrays_exercise_swap": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_pointers_and_arrays_pointers_and_function_argu": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_pointers_and_arrays_pointers_and_arrai": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_pointers_and_arrays_pointers_and_address": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_pointers_and_arrays_command_line_argu": [385, 389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "scalar": [386, 401, 1012], "fantasi": [386, 863, 865], "p1": [386, 491, 537, 539, 545, 551, 553, 555, 556, 640], "p2": [386, 491, 537, 539, 545, 551, 553, 556, 640], "laid": 386, "makepoint": 387, "addpoint": [387, 403], "addtopoint": 387, "pid_t": [388, 909, 927, 938], "cluster_c_structur": [389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_structures_bas": [389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_structures_typedef": [389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_structures_structures_and_funct": [389, 392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "dealloc": [390, 528, 680, 727, 754, 760], "ptr": [390, 513, 645, 693, 694, 695, 696], "do_something_with": [390, 638, 684], "list_init": 391, "list_destroi": 391, "list_insert": 391, "list_remov": 391, "list_count": 391, "list_print": 391, "keylen": 391, "cluster_c_memori": [392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_memory_exercise_linked_list": [392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_memory_malloc": [392, 396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "corollari": [393, 395, 701, 972], "reorder": [393, 709, 750], "use_count": [393, 394, 694, 696, 714], "use_resourc": [393, 394], "do_something_with_shared_resourc": [393, 394], "conceiv": [393, 989], "completion_flag": 393, "out_word": 393, "in_word": 393, "unforese": 393, "volatil": [394, 396, 405, 409, 414, 415, 637, 675, 703, 716, 718, 719, 776, 938, 1116, 1119], "instr": [394, 412, 911, 974], "pthread_mutex_t": [394, 707, 758, 911, 913], "use_count_mutex": 394, "pthread_mutex_initi": [394, 911], "pthread_mutex_lock": [394, 707, 911, 913], "pthread_mutex_unlock": [394, 707, 911, 913], "expens": [394, 401, 537, 550, 553, 643, 648, 684, 685, 694, 771, 908, 1118], "fetch_and_add": [394, 911], "__sync_fetch_and_add": [394, 704, 911, 912], "sheer": [394, 540], "neglig": 395, "penalti": 395, "memcpi": 395, "freeli": 395, "rearrang": [395, 587], "anim": 395, "pragma": [395, 436, 438, 442, 447, 459, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 494, 552, 666, 717], "textit": 395, "bogu": [395, 407, 548, 646, 647, 673, 872, 938], "__pad0": 395, "__pad1": 395, "bloat": [395, 983], "misalign": 395, "intrins": [396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "cluster_c_advanced_language_featur": [396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_advanced_language_features_atom": [396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_advanced_language_features_volatil": [396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "c_advanced_language_features_align": [396, 405, 409, 414, 415, 637, 675, 716, 718, 719], "matur": 397, "odditi": 397, "rectifi": 397, "fortran": 397, "lazy": [397, 678], "meant": [397, 937], "shortcom": [397, 462, 623, 628, 631], "holidai": 397, "handcraft": [397, 445, 999], "clariti": [398, 402, 895], "baud": 399, "idl": 399, "writing_request": 399, "reading_respons": 399, "wait_retri": 399, "protocol_engin": [399, 403], "deduc": [399, 635, 638, 663], "obligatori": 399, "anyhow": 399, "forgot": 399, "unambigu": [399, 635], "protocol_error": 399, "eat": [399, 407], "unintend": 401, "wwrite": 401, "max_bucket": 401, "unus": [401, 436, 491, 493, 537, 541, 552, 591, 592, 645, 744, 803, 919, 933], "pj": 401, "pointe": 401, "ppi": 401, "height": [402, 445, 554], "beman": 402, "daw": 402, "obfusc": 403, "ssize_t": [403, 495, 725, 884, 888, 889, 890, 892, 896, 897, 898, 899, 902, 904, 907, 930, 933, 934, 937], "send_fram": 403, "eng": 403, "send_sum": 403, "v_int32": 403, "spectacular": 403, "adequ": 403, "unix_error": 403, "app_error": 403, "unix_error_cr": 403, "unix_error_ok": 403, "uerr": 403, "app_error_cr": 403, "app_os_error": 403, "impact": [403, 407], "enhanc": [403, 799], "beyond": [404, 892], "consider": [404, 826], "slowdown": 404, "0x400552": 404, "0x51bb072": 404, "0x4c28c6d": 404, "vg_replace_malloc": [404, 545], "0x400545": 404, "loss": [404, 874], "rec": [404, 1054, 1056], "uncov": 404, "readabilti": [405, 409, 414, 415, 637, 675, 716, 718, 719], "explict": [405, 409, 414, 415, 719], "cluster_c_program_san": [405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_sanity_integral_typ": [405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_sanity_introduct": [405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_sanity_stat": [405, 409, 414, 415, 719], "c_program_sanity_discrete_valu": [405, 409, 414, 415, 637, 675, 716, 718, 719], "c_program_sanity_struct_initi": [405, 409, 414, 415, 719], "c_program_sanity_const": [405, 409, 414, 415, 719], "c_program_sanity_explicit_type_safeti": [405, 409, 414, 415, 719], "c_program_sanity_valgrind": [405, 409, 414, 415, 719], "hotspot": [406, 410], "checksum": [406, 874, 922], "externel": 406, "sha1sum": [406, 922, 925, 928], "8g": 406, "0m38": 406, "0m3": 406, "0m0": 406, "perceiv": 406, "daze": 406, "mp3": 406, "018": 406, "mult": 407, "rumour": 407, "uncondit": 407, "slower": [284, 407, 803], "finlin": 407, "o3": [407, 422], "heurist": 407, "o1": 407, "magnitud": [407, 408], "overus": [407, 449, 977, 1118], "spill": 407, "fira": 407, "rtfm": [407, 1010, 1105], "compromis": [407, 417, 445], "transit": [407, 432], "fmove": 407, "outweigh": 407, "thrash": [407, 925, 1116], "understood": [407, 417, 494, 699, 766, 1120], "misnom": [407, 1014], "o0": [407, 422, 1107], "unagress": 407, "chew": [407, 709], "agress": 407, "muchnik": 407, "levin": 407, "nearbi": 408, "bounc": [408, 785], "4x3": 408, "rectangular": 408, "cluster_c_perform": [409, 414, 415, 719], "c_performance_computebound": [409, 414, 415, 719], "c_performance_introduct": [409, 414, 415, 719], "c_performance_memori": [409, 414, 415, 719], "bust": 410, "haul": 410, "cheater": 410, "fallibl": 410, "supplement": 410, "gprof": [410, 412, 413, 414, 415, 719, 1116], "callgrind": [410, 413, 414, 415, 719, 1116], "oprofil": [410, 414, 415, 719, 1116], "gmon": 411, "spot": 411, "38000000": 411, "find_dupl": [411, 413], "percentag": 411, "criterion": [411, 578], "37000000": 411, "luck": [411, 870, 961, 963], "gprof2dot": 411, "tjpeg": 411, "predict": [412, 413, 1067, 1069, 1070], "sluggishli": 412, "16761": 412, "callgrind_annot": 412, "atstart": 412, "callgrind_control": 412, "nmi": 413, "ophelp": 413, "operf": 413, "oprofile_data": 413, "opreport": 413, "opannot": 413, "oparch": 413, "opgprof": 413, "Their": 413, "2085": 413, "2505": 413, "maskabl": 413, "callgraph": 413, "pxe": 413, "vmlinux": [413, 741], "debuginfo": 413, "userland": [413, 725], "routin": [413, 419, 524, 717, 758, 764, 769, 890, 926, 958, 1058, 1060], "analyz": 413, "jcf": [413, 766, 792], "jxf": [413, 766, 792], "gdf": 413, "op2calltre": 413, "oprof": 413, "applet": 413, "viewabl": [413, 426], "kcachegrind": 413, "cluster_c_profil": [414, 415, 719], "c_profiling_oprofil": [414, 415, 719], "c_profiling_callgrind": [414, 415, 719], "c_profiling_gprof": [414, 415, 719], "c_profiling_introduct": [414, 415, 719], "worker": [417, 643], "consensu": [417, 440], "consent": [417, 984], "male": [417, 1026], "prcess": 417, "obei": [417, 419], "liskov": 417, "segreg": 417, "antipattern": [417, 445], "gonna": 417, "indecis": [417, 1121], "road": 417, "manufactur": [417, 872], "pcb": [417, 870], "bom": 417, "requiremenet": 417, "yyyi": 418, "testabl": [418, 1099], "yagni": 418, "fraunhof": 418, "make_categori": 419, "outputfil": 419, "to_datetim": 419, "make_float": 419, "orpheum": 419, "goingout": 419, "hervi": 419, "sport": 419, "card": [419, 766, 795, 830, 832, 837, 838], "to_csv": 419, "read_from_csv": 419, "write_to_csv": 419, "clean_data": 419, "csvname_or_list_thereof": 419, "concat": [419, 1081], "workaround": [419, 636, 639, 739, 1098], "burden": [419, 552, 966, 1099], "read_from_dir": 419, "re_yyyy_mm": 419, "inputdir": 419, "libreoffic": 419, "monolith": [419, 940], "factor": [419, 734, 735, 766], "test_data_clean": 419, "test_make_float": 419, "1999": 419, "test_date_convers": 419, "at666666666666666666": 419, "000009173": 419, "bawaatwwxxx": 419, "at211420020010848041": 419, "ausgleich": 419, "firmenkonto": 419, "test_input": 419, "read_from_csv_singl": 419, "read_from_csv_multipl": 419, "deliber": 419, "test_read_csv_singl": 419, "000009284": 419, "2371": 419, "000009283": 419, "at613400000005077508": 419, "world4you": 419, "writelin": [419, 1014, 1059, 1061], "test_read_csv_multipl": 419, "lines_2023_02": 419, "lines_2023_01": 419, "000009229": 419, "4111": 419, "bp": 419, "tankstel": 419, "000009228": 419, "at081400086210003454": 419, "\u00f6sterreichisch": 419, "gesundheitskass": 419, "_write_csv": 419, "read_from_csv_dir": 419, "test_read_csv_dir": 419, "testutil": 419, "write_csv": 419, "test_category_csv": 419, "000009168": 419, "000009169": 419, "2801": 419, "strassenbahn": 419, "eas": [419, 1076], "finer": 419, "refact": 419, "str_categori": 419, "cardunknown": 419, "flughafen": 419, "wien": 419, "test_more_of_it": 419, "000009153": 419, "parken": 419, "fl": 419, "inputread": 419, "recursivecsvinputread": 419, "singlecsvinputread": 419, "compositeinputread": 419, "input_abc": 419, "abstractmethod": [419, 976], "multiplecsvinputread": 419, "test_input_abc": 419, "cmake_minimum_requir": [420, 942, 1107], "identif": [420, 870, 941, 942], "abi": [420, 430, 744, 746, 886, 941, 942], "hello_nam": [420, 426], "hello_name_h": 420, "democonfig": [421, 423, 427, 428, 429], "libhello": [421, 422, 423, 425, 428, 431], "configure_fil": 421, "demo_version_major": 421, "demo_version_minor": 421, "cmake_current_binary_dir": 421, "demo_major": 421, "demo_minor": 421, "include_directori": [421, 432], "overkil": 421, "cmake_cxx_standard": [422, 1107], "dndebug": 422, "cmake_": 422, "_compiler_id": 422, "IF": [422, 427, 428, 429], "g3": [422, 1107], "strequal": 422, "cmake_c_compiler_id": 422, "cmake_c_flag": [422, 1107], "cmake_cxx_compiler_id": 422, "cmake_cxx_flag": [422, 1107], "howdi": [422, 546, 677, 679, 680, 806, 810, 896, 897, 899, 981], "bullshithowdi": 422, "fatal_error": 422, "send_error": 422, "attract": [422, 639], "findsqlite3": 423, "sqlite3_include_dir": 423, "sqlite3_librari": 423, "typo": [423, 977, 978], "sqlite3_vers": 423, "sqlite3_found": 423, "olden": 423, "0x00007f76ae011000": 423, "libz": 423, "0x00007f76adef7000": 423, "cluster_cmak": [424, 719], "cmake_bas": [424, 719], "cmake_instal": [424, 719, 941, 942], "cmake_shared_libraries_preview": [424, 719], "cmake_librari": [424, 719], "cmake_optional_code_problem": [424, 719], "cmake_configure_fil": [424, 719], "cmake_test": [424, 719], "cmake_external_depend": [424, 719], "cmake_optional_code_approach_1": [424, 719], "cmake_targets_properti": [424, 719], "cmake_optional_code_approach_2": [424, 719], "cmake_structur": [424, 719], "cmake_cxx_and_r": [424, 719], "cmake_install_prefix": 425, "set_properti": [425, 430], "dbuild_shared_lib": [425, 430], "ON": [425, 428, 429, 430, 484, 485, 490, 924], "readelf": [425, 940, 952, 957], "0x0000000000000001": [425, 957], "0x000000000000001d": 425, "0x00007f773aefe000": 425, "ldconfig": [425, 1113], "sonam": [425, 430], "add_librari": [426, 428, 430, 432, 478, 523, 532, 941, 942], "0x29": 426, "collect2": [426, 612, 957], "acycl": [426, 942, 956], "dag": 426, "jul": [426, 430], "tpng": [426, 942], "descend": [427, 428, 429, 431, 478, 827, 934], "use_blacklist": [427, 428], "macro_use_blacklist": [427, 429], "demo_use_blacklist": [427, 428], "namegreet": 427, "_blacklist": 427, "implic": [427, 750, 822, 883], "sayhello": 427, "is_forbidden": 427, "_name": [427, 468, 471, 475, 476, 477], "goodby": [427, 938], "use_backlist": 427, "condition": 427, "duse_blacklist": [428, 429], "target_compile_opt": [428, 432], "target_include_directori": [428, 429, 431, 432], "manyfold": 429, "target_compile_definit": [429, 432], "lightli": 429, "symlink": [430, 717, 870, 1100, 1124], "build_shared_lib": 430, "qf": 430, "libboost_regex": 430, "lrwxrwxrwx": [430, 848, 870, 871, 872, 906, 940], "rwxr": [430, 811, 813, 814, 823, 940, 952, 991], "289264": 430, "temporarili": [430, 927, 940], "project_vers": 430, "makefile2": 431, "compile_definit": 432, "dname": 432, "compile_opt": 432, "widest": 432, "asymmetr": 432, "enable_test": 433, "toplavel": 433, "set_tests_properti": [433, 1104, 1107], "pass_regular_express": 433, "ctest": 433, "cdash": 433, "kitwar": 433, "socialdb": [434, 437, 441, 466, 472], "i2csensor_vendor1": [435, 464], "0x37": 435, "suddenli": [435, 766, 806, 1072], "vener": [435, 456, 538, 553, 681], "damag": [435, 1086], "slip": 435, "cascad": 435, "i2csensor": [435, 449, 464], "create_i2c_sensor": 435, "i2csensorfactori": 435, "speak": [435, 853, 871, 968, 993], "vendor1": [435, 464], "abstract_factory_suit": 435, "instantiate_vendor1": 435, "i2csensorfactory_vendor1": 435, "i2c_factory_vendor1": 435, "i2c_sensor": 435, "assert_tru": [435, 490, 491, 496, 501, 503, 508, 537, 539, 554, 555, 556, 557, 640, 694, 695, 717, 1105], "dynamic_cast": [435, 462, 476], "a_sensor": [435, 645], "vendor2": [435, 464], "instantiate_vendor2": 435, "i2csensorfactory_vendor2": [435, 464], "i2c_factory_vendor2": 435, "i2csensor_vendor2": [435, 464], "pu": 435, "tinto": 435, "fahrenheitsensor": [436, 465], "get_temperature_f": [436, 465], "formula": 436, "adapter_suit": 436, "constantfahrenheitsensor": 436, "assert_float_eq": [436, 439, 440, 442, 459, 460, 486, 487, 488, 489, 491, 494, 495, 506, 537, 539, 556, 642, 645], "fahrenheitsensor_adapt": [436, 465], "adapter__is_a__sensor": 436, "adapter__knows__an_a_sensor": 436, "variablefahrenheitsensor": 436, "initial_valu": 436, "_valu": [436, 471], "change_temperatur": [436, 486, 494, 495], "adapter__definitely_knows__a_sensor__hel": 436, "multitud": 437, "socialdbcommand": [437, 466], "command_suit": 437, "2345110695": [437, 596], "socialdbinsertcommand": [437, 466], "3456060486": [437, 596], "insert_by_bas": 437, "socialdbfindcommand": [437, 466], "socialdbdropcommand": [437, 466], "notfound": [437, 438, 466, 628, 629, 630], "assert_throw": [437, 444, 717], "notinsert": [437, 438, 466], "bulkinsert": 437, "bulk_insert": 437, "socialdbbulkinsertcommand": [437, 466], "bic": 437, "std_initializer_list": 437, "bulk_insert__std_initializer_list": 437, "_msg": 438, "c_str": [438, 473, 495, 641, 646, 647, 937], "_db": 438, "hypthet": 439, "composite_suit": 439, "constantsensor": [113, 439, 442, 447, 459, 460, 468, 480, 487, 493, 503, 504, 505, 506, 508, 509, 645, 693, 694, 695, 696, 976, 1052], "cs1": 439, "cs2": 439, "recompil": [440, 957], "decorator_suit": 440, "average_with_base_sensor": 440, "decoratedsensor": [440, 468], "propon": 440, "diagnost": 440, "decorated_sensor_const_added_function": 440, "decorated_sensor_random_added_function": 440, "decorated_sensor_const__is_a__sensor": 440, "decorated_sensor_random__is_a__sensor": 440, "assert_g": [440, 489, 506], "assert_l": [440, 489, 506], "average_with_decorated_sensor": 440, "mtqueue": [441, 459], "devis": 441, "notifi": [441, 707, 887, 934, 1080], "cluster_cxx03": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 598, 599, 600, 602, 603, 605, 608, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cluster_cxx03_data_encapsul": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cluster_cxx03_inheritance_oo": [441, 455, 483, 493, 535, 608, 632, 719], "cluster_linux": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 723, 726, 728, 731, 733, 736, 738, 740, 742, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 770, 772, 775, 777, 781, 784, 787, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 868, 869, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 905, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "cluster_linux_bas": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "cluster_linux_basics_shel": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "cluster_linux_basics_intro": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "cluster_linux_toolchain": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "cluster_cxx_design_pattern": [441, 455, 483, 535, 719], "cluster_cxx": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 719], "cluster_cxx_exercis": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 719], "cluster_cxx_exercises_design_pattern": [441, 455, 483, 535, 719], "cxx03_introduct": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_data_encapsulation_ctor_dtor": [441, 455, 483, 493, 535, 543, 608, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_data_encapsulation_ctor_custom": [441, 455, 483, 486, 489, 493, 535, 543, 608, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_data_encapsulation_ctor_default": [441, 455, 483, 493, 535, 543, 608, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_data_encapsulation_c": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_data_encapsulation_classes_object": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 500, 502, 535, 543, 558, 561, 564, 580, 586, 590, 599, 602, 603, 608, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_inheritance_oo_interfac": [441, 455, 483, 493, 535, 608, 632, 719], "cxx03_inheritance_oo_virtual_method": [441, 455, 483, 493, 535, 608, 632, 719], "cxx03_inheritance_oo_polymorph": [441, 455, 483, 493, 535, 608, 632, 719], "cxx03_inheritance_oo_virtual_destructor": [441, 455, 483, 493, 535, 608, 632, 719], "cxx03_inheritance_oo_bas": [441, 455, 483, 493, 535, 608, 632, 719], "cxx03_inheritance_oo_destructor": [441, 455, 483, 493, 535, 608, 632, 719], "linux_basics_shell_cwd": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 793, 794, 795, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_basics_shell_path": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 793, 794, 795, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_basics_shell_commandlin": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_basics_intro_process": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 793, 794, 795, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_basics_shell_file_dir_create_rm": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 793, 794, 795, 796, 799, 800, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 846, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_basics_intro_overview": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 789, 793, 794, 795, 796, 799, 800, 807, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 856, 862, 874, 875, 876, 877, 878, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_toolchain_cmake_loc": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 719, 862, 942, 950], "linux_toolchain_static_librari": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 719, 862, 942, 945, 947, 948, 950], "linux_toolchain_bas": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925, 942, 944, 945, 946, 947, 948, 949, 950, 951], "linux_toolchain_separate_compil": [441, 455, 483, 484, 485, 486, 487, 488, 489, 490, 493, 535, 719, 862, 942, 945, 946, 947, 948, 950], "cxx_design_patterns_adapt": [441, 455, 483, 535, 719], "cxx_design_patterns_uml": [441, 455, 483, 535, 719], "cxx_design_patterns_sensor_hierarchi": [441, 455, 483, 535, 719], "cxx_design_patterns_heating_screenplai": [441, 719], "cxx_design_patterns_observ": [441, 455, 483, 535, 719], "cxx_design_patterns_proxi": [441, 455, 483, 535, 719], "cxx_design_patterns_oo_principl": [441, 719], "cxx_design_patterns_singleton": [441, 455, 483, 535, 719], "cxx_design_patterns_decor": [441, 455, 483, 535, 719], "cxx_design_patterns_abstract_factori": [441, 455, 483, 535, 719], "cxx_design_patterns_composit": [441, 455, 483, 535, 719], "cxx_exercises_design_patterns_proxy_round": [441, 455, 483, 535, 719], "cxx_design_patterns_interpret": [441, 455, 483, 535, 719], "cxx_design_patterns_command": [441, 455, 483, 535, 719], "cxx_exercises_sensor_interfac": [441, 455, 483, 493, 535, 719], "sensorread": 442, "chrono_liter": [442, 635, 707, 709, 710], "demologg": 442, "cerr": [442, 481, 560, 629, 699, 709, 870, 904, 907], "demovaluestor": 442, "_store": 442, "namedsensor": 442, "_sensor": [442, 449, 467, 468, 470, 473, 474, 695], "_logger": 442, "_value_stor": 442, "sensora": 442, "sensorb": 442, "sensorc": 442, "200000": [442, 871, 1069], "this_thread": [442, 635, 696, 707, 709], "sleep_for": [442, 635, 696, 707, 709], "12597": 442, "valuestor": 442, "2895": 442, "158243": 442, "cassert": [442, 584, 625, 628, 630, 636, 709], "boss": 442, "v3": 442, "abort": [442, 461, 462, 545, 673, 884], "meantim": [442, 887], "mocklogg": 442, "lines_log": 442, "mockvaluestor": 442, "sensorreader_suit": 442, "sensor2": 442, "141320": 442, "memcheck": [442, 545, 694], "detector": [442, 545, 694], "myobserv": 444, "socialdb_observ": [444, 472], "newcitizenobserv": [444, 472], "new_citizen": 444, "_new_citizen_svnr": 444, "new_citizen_ad": [444, 472], "observer_suit": 444, "register_on": 444, "register_new_citizen_notif": [444, 472], "register_mani": 444, "observer1": 444, "observer2": 444, "register_dupl": 444, "observeralreadyregist": [444, 472], "unregister_new_citizen_notif": [444, 472], "unregister_not_regist": 444, "observernotregist": [444, 472], "addict": [445, 805, 826, 1090, 1099], "bertrand": 445, "barbara": 445, "liskow": 445, "polish": 445, "be_sick": 448, "insur": [448, 461, 462, 463, 475, 476, 477], "teardown": [448, 495, 961, 1099, 1109, 1111], "purest": 449, "lightest": 449, "pidcontrol": 449, "_switch": 449, "cluster_cxx_exercises_design_patterns_solut": [455, 483, 535, 719], "cxx_exercises_design_patterns_interpreter_and_adapt": [455, 483, 535, 719], "cxx_exercises_design_patterns_interpreter_bas": [455, 483, 535, 719], "cxx_exercises_design_patterns_command": [455, 483, 535, 719], "cxx_exercises_design_patterns_observ": [455, 483, 535, 719], "cxx_exercises_design_patterns_abstract_factori": [455, 483, 535, 719], "cxx_exercises_design_patterns_composit": [455, 483, 535, 719], "cxx_exercises_design_patterns_proxy_remot": [455, 483, 535, 719], "cxx_exercises_design_patterns_adapt": [455, 483, 535, 719], "cxx_exercises_design_patterns_singleton_inflex": [455, 483, 535, 719], "cxx_exercises_design_patterns_singleton_flex": [455, 483, 535, 719], "cxx_exercises_design_patterns_singleton_flexible_strict": [455, 483, 535, 719], "cxx_exercises_design_patterns_decor": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_abstract_factori": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_proxy_remot": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_singleton_inflex": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_interpreter_bas": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_adapt": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_decor": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_observ": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_command": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_composit": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_proxy_round": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_singleton_flex": [455, 483, 535, 719], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [455, 483, 535, 719], "cla": 456, "sensorvalu": [456, 470], "roundingsensor": [456, 460, 474], "r1": [456, 557, 648], "r2": [456, 557, 648], "r3": 456, "sensorvalueexpress": [456, 470], "e1_e2": 456, "e1_e2_e3": 456, "num_measur": 456, "v_avg": 456, "v_ass": 456, "combinatin": 457, "interpreter_suit": 457, "e_lh": 457, "e_rh": 457, "e_add": 457, "e_sub": 457, "mul": 457, "e_mul": 457, "e_div": 457, "arithemet": 457, "arith": [457, 529, 530, 566, 567, 568, 569, 574], "combined_arith": 457, "l7": 457, "a_7_plus_3": 457, "s_3_minus_1": 457, "variable_not_set": 457, "analogi": [457, 481, 872, 934, 974], "assignment_valu": 457, "variable_assign": 457, "ass": 457, "variable_used_as_express": 457, "ass_v1": 457, "ass_v2": 457, "reachabl": [459, 694, 870, 872], "remoteadapt": [459, 473], "packet": [284, 459, 760, 866, 889, 922], "response_promis": 459, "_adapt": 459, "_queue": [459, 707], "_thread": 459, "fulfil": [459, 494], "proxy_remote_suit": 459, "_c": 459, "remotesensoradapt": [459, 473], "remotesensor": [459, 473], "remote_sensor__is_a__sensor": 459, "somth": 459, "simplist": 459, "fullfil": 460, "proxy_round_suit": 460, "round_down": 460, "round_up": 460, "rouding_sensor__is_a__sensor": 460, "advis": [461, 1060], "hypothet": [461, 493, 494, 544, 863], "fee": 461, "socialinsur": [461, 462, 463, 477], "oegk": [461, 462], "startup": [461, 462, 463, 475, 798, 934, 940, 972], "set_inst": [461, 462, 475], "make_uniqu": [461, 475, 715], "debt": [461, 462, 463, 475, 476, 477], "runtime_error": [461, 462, 473, 475, 476, 477, 495, 709], "socinsur": [462, 476], "inisur": 462, "reimplement": [462, 631], "compiabl": [462, 476], "iface_inst": [462, 476], "svs_instanc": [462, 476], "oegk_inst": [462, 476], "another_inst": [462, 463, 476, 477], "1485": [462, 463], "unset": [462, 913], "sozialversicherung": [463, 477], "unrealist": 463, "adapte": 465, "_adapte": 465, "_svnr": 466, "_firstnam": [466, 596, 984], "_lastnam": [466, 596, 984], "_result": 466, "_command": 466, "get_if": 466, "decoratedconstantsensor": 468, "sstream": [468, 473, 555, 557], "iomanip": 468, "ostringstream": [468, 473, 554, 555, 556, 557], "decoratedrandomsensor": 468, "_variabl": 471, "_lh": 471, "_rh": 471, "_context": 471, "_var": 471, "_exp": 471, "stdexcept": [471, 473, 475, 476, 477, 495, 717], "_new_citizen_observ": 472, "num_eras": 472, "_server": 473, "cstdio": 473, "num_item": 473, "sscanf": 473, "cmath": [474, 539, 547, 548, 556, 642, 658, 659, 660, 661, 698], "_instanc": [475, 476, 477], "nullptr": [475, 476, 494, 505, 509, 635, 645, 646, 693, 694, 695, 707, 709, 714, 715, 907, 1118], "_databas": [475, 476, 477], "0l": [475, 476], "cstdlib": [476, 495], "ssocinsur": 476, "toi": [478, 635, 938], "02131d959eaa": [478, 494, 495, 900], "millidegre": 478, "parameteriz": [479, 1066], "loop_and_measur": 479, "niter": 479, "w1sensor": [479, 480, 481, 482, 494], "counterpart": 480, "stod": 481, "uniform_real_distribut": [481, 489, 693], "default_random_engin": [481, 489, 693], "random_devic": [481, 489, 693], "_distribut": [481, 693], "_engin": [481, 693, 1086], "_x": [481, 539, 540, 542, 544, 546, 547, 548, 549, 551, 553, 563, 578, 642, 657, 659, 660, 661], "_y": [481, 539, 540, 542, 544, 546, 547, 548, 549, 551, 553, 563, 578, 642, 657, 659, 660, 661], "spit": [481, 1072], "cluster_cxx_exercises_fh_sensor_first_tri": [483, 535, 719], "cluster_cxx_exercises_stl": [483, 500, 502, 535, 719], "cluster_cxx_exercises_stl_sensor_repositori": [483, 500, 502, 535, 719], "cluster_cxx03_functions_and_method": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 617, 618, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cluster_cxx03_stl": [483, 500, 502, 535, 580, 586, 590, 598, 599, 600, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cluster_cxx03_stl_algorithm": [483, 500, 535, 580, 599, 602, 603, 632, 719], "cluster_cxx03_stl_associative_contain": [483, 500, 502, 535, 590, 599, 603, 632, 719], "cluster_cxx03_except": [483, 500, 502, 535, 561, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cluster_cxx03_templ": [483, 500, 502, 535, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cluster_linux_basics_permiss": [483, 535, 708, 718, 719, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 862, 891, 893, 901, 903, 917, 920, 923, 925], "cluster_linux_sysprog": [483, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 905, 917, 920, 923, 925], "cluster_linux_sysprog_fileio": [483, 535, 708, 718, 719, 796, 799, 800, 862, 891, 893, 901, 903, 917, 920, 923, 925], "cluster_linux_sysprog_bas": [483, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925], "cxx_exercises_sensor_random_nopoli": [483, 489, 535, 719], "cxx_exercises_sensor_const_nopoli": [483, 487, 489, 535, 719], "cxx03_data_encapsulation_initializer_list": [483, 486, 489, 535, 543, 632, 719], "cxx_exercises_sensor_w1_factori": [483, 535, 719], "cxx_exercises_sensor_w1": [483, 535, 719], "cxx_exercises_sensor_avg_nopoli": [483, 486, 535, 719], "cxx_exercises_sensor_mock_nopoli": [483, 484, 485, 486, 488, 535, 719], "linux_sysprog_fileio_exercise_w1_sensor": [483, 535, 719, 862, 901, 903, 920], "cxx_exercises_switch_mock_nopoli": [483, 484, 485, 490, 535, 719], "cxx_exercises_hysteresis_nopoli": [483, 485, 535, 719], "cxx_exercises_display_led_stripe_nopoli": [483, 484, 535, 719], "cxx_exercises_oo_shap": [483, 535, 719], "cxx03_functions_and_methods_const": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 623, 624, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_functions_and_methods_oper": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx03_functions_and_methods_method": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_functions_and_methods_stat": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [483, 535, 719], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [483, 535, 719], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [483, 535, 719], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [483, 535, 719], "cxx_exercises_stl_filter_greater_10": [483, 500, 535, 719], "cxx_exercises_stl_vector": [483, 500, 535, 719], "cxx03_stl_vector_copy_etc": [483, 500, 535, 599, 603, 632, 719], "cxx_exercises_stl_filter_odd": [483, 500, 535, 719], "cxx_exercises_stl_map": [483, 500, 502, 535, 719], "cxx03_stl_associative_containers_map": [483, 500, 502, 535, 590, 599, 603, 632, 719], "cxx_exercises_stl_uniq": [483, 500, 535, 719], "cxx_exercises_stl_filter_gener": [483, 500, 535, 719], "cxx_exercises_stl_algo": [483, 500, 535, 719], "cxx03_stl_algorithm_find": [483, 500, 535, 580, 599, 603, 632, 719], "cxx03_stl_algorithm_copi": [483, 500, 535, 580, 599, 603, 632, 719], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_insert_sunni": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_memory_leak": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_remove_not_found": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_lookup_not_found": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_lookup_sunni": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_remove_sunni": [483, 500, 502, 535, 719], "cxx_exercises_stl_sensor_repository_size_const": [483, 500, 502, 535, 719], "cxx03_functions_and_methods_overload": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 617, 618, 620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_functions_and_methods_thi": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 623, 624, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_functions_and_methods_refer": [483, 500, 502, 535, 558, 561, 564, 580, 586, 590, 599, 602, 603, 620, 623, 624, 627, 628, 629, 630, 631, 632, 644, 675, 691, 700, 708, 716, 718, 719], "cxx03_stl_basic": [483, 500, 502, 535, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx03_templates_class_templ": [483, 500, 502, 535, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx03_stl_associative_containers_bas": [483, 500, 502, 535, 590, 599, 603, 632, 719], "cxx03_exceptions_try_catch": [483, 500, 502, 535, 561, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx03_exceptions_bas": [483, 500, 502, 535, 561, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "cxx03_templates_function_templ": [483, 500, 502, 535, 564, 580, 586, 590, 599, 602, 603, 620, 627, 628, 629, 630, 631, 632, 719], "linux_basics_shell_l": [483, 535, 708, 718, 719, 793, 794, 795, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 830, 833, 834, 837, 838, 840, 841, 842, 843, 844, 846, 862, 891, 893, 901, 903, 917, 920, 923, 925], "linux_basics_permissions_bas": [483, 535, 708, 718, 719, 796, 799, 800, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 862, 891, 893, 901, 903, 917, 920, 923, 925], "linux_sysprog_fileio_bas": [483, 535, 708, 718, 719, 796, 799, 800, 862, 891, 893, 901, 903, 917, 920, 923, 925], "linux_sysprog_basics_groupnod": [483, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925], "linux_sysprog_basics_errorhandl": [483, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925], "linux_sysprog_basics_syscal": [483, 535, 708, 718, 719, 796, 799, 800, 862, 885, 891, 893, 901, 903, 917, 920, 923, 925], "mockswitch_nopoli": [484, 485, 490], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 484, "nopoli": [484, 485, 486, 487, 488, 489, 490], "stripe": 484, "display_led_stripe_nopoly_suit": 484, "somewhere_in_the_middl": 484, "sw0": 484, "sw1": 484, "sw2": 484, "sw3": 484, "sw4": 484, "sw5": 484, "sw6": 484, "sw7": 484, "display_led_stripe_nopoly_suite__below_rang": 484, "below_rang": 484, "display_led_stripe_nopoly_suite__above_rang": 484, "above_rang": 484, "display_led_stripe_nopoly_suite__mov": 484, "movement": [484, 863], "set_temperatur": [484, 485, 486, 488], "display_led_stripe_nopoly_suite__vari": 484, "variation_2_switch": 484, "variation_interval_not_from_0": 484, "thermostat": 485, "threshold": 485, "nop_when_within_rang": 485, "hysteresis_suit": 485, "hyst": 485, "falls_below_rang": 485, "rises_above_rang": 485, "rises_above_range_when_on": 485, "sensor_avg_nopoly_suit": 486, "sensor_const_nopoly_suit": 487, "subsequ": 488, "sensor_mock_nopoly_suit": 488, "sensor_random_suit": [489, 493, 494], "uniformli": 489, "rd": 489, "obtain": [489, 706, 1014], "rng": 489, "tailor": 489, "switch_mock_suit": 490, "initial_st": [490, 1110], "set_on_off": 490, "initial_failur": 491, "failit": 491, "point_suit": [491, 555], "ctor_and_gett": 491, "coordin": [491, 537, 539, 546, 547, 657, 888], "ctor_and_getters_const": 491, "default_ctor": [491, 554, 555, 556, 557], "equal_method": 491, "p3": 491, "p4": [491, 826], "assert_fals": [491, 496, 501, 503, 508, 537, 554, 555, 556, 557, 717], "equal_method_const": 491, "operator_equ": 491, "operator_equals_const": 491, "move_method": 491, "operator_plus_equ": 491, "add_method": 491, "new_p": 491, "add_method_const": 491, "operator_plu": [491, 554, 555, 556], "operator_plus_const": 491, "radiu": 491, "circle_suit": 491, "ctor_and_getters_using_operator_equ": 491, "14159": 491, "53981634": 491, "area_const": 491, "square_suit": 491, "bottom_left": [491, 557], "side_length": 491, "shape_suit": 491, "circle_is_a_shap": 491, "square_is_a_shap": 491, "area_is_shape_functionality__circl": 491, "area_is_shape_functionality__squar": 491, "human": [492, 494, 699, 826, 848, 940, 985, 1071], "ineffici": [492, 615, 783, 902], "epath": 492, "bag_copy_suit": [492, 713], "find_by_int_ok": [492, 713, 714, 715], "find_by_int_nok": [492, 713, 714, 715], "remove_by_int_ok": [492, 713, 714, 715], "bag_unique_suit": [492, 715], "bag_shared_suit": [492, 714], "insert_const_ref": [492, 714], "insert_mov": [492, 714], "unrel": [493, 524, 533, 699, 924, 934, 963, 980, 1078], "tyo": 493, "sensor_const_suit": [493, 494], "is_a_sensor": [493, 494], "5731": 493, "aptli": 494, "23062": 494, "w1sensorfactori": 494, "find_by_address": 494, "sensor_w1_factory_suit": 494, "fstream": [494, 717], "tmpdir_fixtur": 494, "device_dir": 494, "create_directori": 494, "ofstream": [494, 717], "42459": 494, "temp_milli": [494, 495], "w1_fs_root": 494, "sensor_factori": 494, "0x02131d959eaa": 494, "assert_n": [494, 530, 553, 554, 689, 714, 715], "horizon": 494, "0x012345678901": 494, "w1_sensor_suit": [494, 495], "test_read_sensor": [494, 495], "36700": 494, "basedir": 494, "0x2131d959eaa": 494, "dcmake_toolchain_fil": [495, 941, 955], "20687": 495, "write_temperatur": 495, "thaht": 495, "filename_pattern": 495, "xxxxxx": 495, "mkstemp": 495, "unlink": [495, 932, 934], "to_str": [495, 615], "off_t": [495, 892, 902, 907, 933], "lseek": [495, 902, 907, 933], "seek_set": [495, 892, 907, 933], "nwritten": [495, 896, 897, 898, 899, 904, 907, 933, 937], "algo": [496, 529, 530, 565, 566], "copy_into_vector": 496, "stl_exercises_suit": [496, 497, 498, 499, 501, 503, 504, 505, 506, 508, 509, 510, 511, 512], "required_cont": 496, "find_in_vector": 496, "my_vec": [496, 512], "wladimir": 496, "sort_in_plac": 496, "required_output": [496, 497, 498, 499, 511], "orig_input": [496, 497, 498, 499, 511], "alement": 497, "is_odd": 497, "filter_greater_10": 498, "filter_odd": 499, "map_insert": 501, "my_map": [501, 591, 592, 593, 594, 595], "map_insert_simpl": 501, "insert_check_dupl": 501, "map_insert_check_dupl": 501, "insert_remove_by_kei": 501, "map_insert_remove_by_kei": 501, "map_remove_by_kei": 501, "map_find": 501, "sensorrepositori": [502, 503, 504, 505, 506, 507, 508, 509, 510], "decript": 502, "sensor_repository_insert_dupl": 503, "add_sensor": [503, 504, 505, 506, 508, 509], "ofen": [503, 504, 505, 506, 508, 509], "weltraum": [503, 504, 505, 506, 508, 509], "mond": [503, 508], "sucess": 503, "sensor_repository_insert": 504, "sensor_repository_lookup_neg": 505, "get_sensor": [505, 506, 509], "sensor_repository_lookup_posit": 506, "complaint": 507, "ish": 507, "sensor_repository_remove_nonexist": 508, "remove_sensor": [508, 509], "sensor_repository_remov": 509, "sensor_repository_size_const": 510, "vector_append": 512, "vector_join": 512, "joined_cont": 512, "userdb_map": 513, "userdb_vector": 513, "dan": 513, "sak": 513, "cppcon": [513, 640, 642, 643, 656, 663, 681, 692], "transcrib": 513, "mallocfre": 518, "arrayofinteg": 518, "memoryleak": 518, "arrayboundswrit": 518, "newdelet": 518, "singleinteg": 518, "deletemismatch": 518, "thing1": [520, 521], "thing2": [520, 521], "global_str": 521, "__have_thing_h__": 521, "_content": 521, "denstruct": 521, "destruct": [521, 542, 612, 643, 693, 808], "essenc": [521, 1105], "collaps": 524, "thoroughli": [524, 870], "_mem": [527, 673], "determinist": [527, 692, 706, 961, 1012], "maybeown": 527, "pointerarithmet": 530, "bugp": 530, "105ff": 530, "num_el": 530, "another_arrai": 530, "yet_another_arrai": 530, "108ff": 530, "basics_cxx03": 530, "basics_cxx11": 530, "cbegin": [530, 583, 602, 639, 650], "my_copi": 530, "naivecopi": 530, "cend": [530, 583, 602, 639], "algocopi": 530, "backinsert": 530, "back_insert_iter": [530, 571], "nah": [530, 1107], "insertfind": 530, "make_pair": [530, 593, 596, 684], "erasebyposit": 530, "erasebykei": 530, "domin": 536, "bjarn": 536, "stroustrup": 536, "1985": 536, "2003": [536, 1118], "unif": 536, "point_c_suit": [537, 539], "struct_initi": 537, "point_init_default": 537, "c_default_constructor_init": 537, "point_create_default": 537, "c_default_constructor_cr": 537, "point_creat": [537, 539], "c_constructor": [537, 539], "eq": [537, 553, 555, 557], "point_equ": 537, "point_not_equ": 537, "eq_n": 537, "point_mov": [537, 539, 547, 549], "point_add": 537, "point_sub": 537, "add_sub": 537, "point_dist": 537, "point_ab": [537, 539], "hyp": [537, 539, 547], "unwant": [537, 588, 684, 744, 963, 984, 1008], "cpp_copy_suit": 538, "generated_copy_ctor": 538, "copy1": [538, 694], "copy2": [538, 694], "copy3": 538, "copyabl": 538, "manual_copy_suit": 538, "copy_ctor": [538, 693], "assignment_oper": 538, "earlier": 539, "point_h": [539, 547, 548], "point_cpp_suit": 539, "constructor_coordin": 539, "inaccessibil": 539, "move_op_pluseq": 539, "whenev": [540, 547, 557, 643], "sth": 541, "dirty_stack": 541, "use_uniniti": 541, "onward": [541, 545, 552], "nw": 542, "memberwis": 542, "_c_str": [542, 545, 646], "cxx03_data_encapsulation_copy_bas": [543, 632, 719], "cxx03_data_encapsulation_object_copi": [543, 632, 644, 675, 691, 700, 708, 716, 718, 719], "string_h": [545, 646], "cstring": [545, 646, 647, 680], "tcach": [545, 673], "221601": 545, "julian": [545, 694], "seward": [545, 694], "libvex": [545, 694], "rerun": [545, 694], "realloc": [545, 588], "0x484465b": 545, "1103": 545, "0x401210": 545, "0x401194": 545, "0x4dc8c80": 545, "0x401188": 545, "0x484222f": 545, "0x4011c5": 545, "0x40116f": 545, "freed": [545, 725, 895, 961], "destroi": [545, 607, 629, 648, 665, 680, 695, 706, 756], "221807": 545, "twostr": 545, "twotwostr": 545, "s21": 545, "s22": 545, "segfault": [545, 780, 938], "paraamet": 546, "__pretty_function__": 546, "0000000000401176": 546, "_z1fi": 546, "00000000004011a0": 546, "_z1fpc": 546, "demangl": 546, "anywher": [547, 959], "fab": [547, 548], "distance_origin": [547, 548, 698], "prohibit": 547, "hid": 547, "standardes": 547, "d_orig": 548, "fpermiss": [548, 685], "arrog": 548, "goodi": [548, 864], "pascal": 550, "uninitil": 550, "pass_by_copi": 550, "references_suit": 550, "voila": [550, 870, 928, 941, 942, 952, 983], "tediou": [550, 889, 942, 1016], "pass_by_point": 550, "pass_by_refer": 550, "pass_by_const_point": 550, "const_point": 550, "pass_by_const_refer": 550, "const_refer": 550, "pass_by_copy_expens": 550, "copy_expens": 550, "pass_by_const_reference_cheap": 550, "const_reference_cheap": 550, "addend": [551, 678, 698], "straightforwardli": [551, 1021], "add_point": 551, "static_suit": 551, "global_funct": 551, "static_method": 551, "bss": 552, "definition1": 552, "definition2": 552, "forbid": 552, "trickeri": 552, "points_equ": 553, "oddli": 553, "operators_suit": 553, "equals_glob": 553, "difficulti": 553, "equals_object": 553, "vector_addition_glob": 553, "vector_addition_object": 553, "point_plus_equ": 553, "combo": [554, 556], "cuboid_suit": 554, "front_bottom_left": 554, "point_whl_ctor": 554, "operator_eq_n": [554, 555, 556, 557], "operator_pluseq": [554, 555, 556], "operator_minuseq": [554, 556], "operator_minu": [554, 556], "operator_ostream": [554, 555, 556, 557], "buf": [554, 555, 556, 557, 884, 892, 902], "entirei": [554, 556, 557], "starting_point": 555, "implementation_in_cpp_fil": 555, "rectangle_suit": [555, 557], "pluseq": 555, "operator_unary_minu": [555, 556], "minus_p": [555, 556], "point3d_suit": 556, "coordinates_ctor": 556, "071067812": 556, "69041576": 556, "top_right": 557, "top_left": 557, "bottom_right": 557, "rational": [557, 591], "operator_plus_equal_vec": 557, "plus_vec": 557, "cxx03_functions_and_methods_exercise_class_cuboid": [558, 632, 719], "cxx03_functions_and_methods_exercise_class_point3d": [558, 632, 719], "cxx03_functions_and_methods_exercise_class_rectangl": [558, 632, 719], "cxx03_functions_and_methods_exercise_class_point": [558, 632, 719], "cxx03_functions_and_methods_static_member_vari": [558, 632, 719], "dothat": [559, 560], "dothi": [559, 560], "dothos": [559, 560], "dammit": [559, 560, 639], "thisexcept": 560, "thatexcept": 560, "thrown": [560, 937], "myexcept": 560, "error_detect": 560, "granular": [560, 737, 924], "typenam": [562, 563, 645, 652, 653, 654, 655, 657, 659, 660, 661, 666, 687, 693, 697, 707, 709], "a_begin": [566, 568], "a_end": [566, 568], "src_begin": [566, 570], "src_end": [566, 570], "dst_begin": [566, 570], "decai": 567, "zeroth": 567, "unflex": 571, "shrink_to_fit": 571, "prealloc": [571, 572], "gool": [573, 640], "cplusplu": [575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 596], "int_arrai": [575, 577, 581, 584], "binarili": 575, "is_el": 575, "original_begin": 576, "original_end": 576, "copy_run": 576, "original_run": 576, "int_array_c": 577, "match_666": 578, "match_42": 578, "x_equals_666": 578, "x_equals_4": 578, "x_equal": 578, "_criterion": 578, "yesno": [578, 793, 794], "output_stern": 579, "output_bindestrich": 579, "output_with_prefix": 579, "_prefix": 579, "cxx03_stl_algorithm_binary_search": [580, 599, 603, 632, 719], "cxx03_stl_algorithm_sort": [580, 599, 603, 632, 719], "cxx03_stl_algorithm_lower_bound": [580, 599, 603, 632, 719], "cxx03_stl_algorithm_reverse_copi": [580, 599, 602, 603, 632, 719], "cxx03_stl_algorithm_revers": [580, 599, 602, 603, 632, 719], "cxx03_stl_algorithm_for_each": [580, 599, 603, 632, 719], "cxx03_stl_algorithm_find_if": [580, 599, 603, 632, 719], "reversed_": [583, 602], "less_revers": 584, "greater_than": 584, "cluster_cxx03_stl_sequential_contain": [586, 599, 603, 632, 719], "cxx03_stl_sequential_containers_bas": [586, 599, 603, 632, 719], "cxx03_stl_sequential_containers_vector": [586, 599, 603, 632, 719], "cxx03_stl_sequential_containers_list": [586, 599, 603, 632, 719], "liek": 588, "logarithm": 588, "mein_int_arrai": 588, "insert_po": 588, "new_elems_as_vector": 588, "elems_to_insert": 588, "cxx03_stl_associative_containers_multimap": [590, 599, 603, 632, 719], "realiz": [591, 1012], "parameter": [591, 697, 702, 948, 962], "keytyp": [591, 635], "valuetyp": [591, 635], "some_map": 591, "key_typ": [591, 592], "mapped_typ": [591, 592], "value_typ": [591, 592], "emplac": 591, "collis": 591, "zweiundvierzig": 591, "out_of_rang": [591, 595], "mymap": [592, 593, 594, 595], "sechshundersechsundsechzig": 592, "kv": 592, "pre11": [592, 593], "einundfuenfzig": [592, 593, 594, 595], "vierundfuenfzig": [592, 593, 594, 595], "dreihundertsechsundvierzig": [592, 593, 594, 595], "tausendein": [592, 593, 594, 595], "tausendzwei": [592, 593, 594, 595], "retval_7": 593, "retval_2": 593, "n_remov": 594, "found_value_1001": 595, "found_value_666": 595, "found_valu": 595, "joerg_svnr": 596, "caro_svnr": 596, "johanna_svnr": 596, "philipp_svnr": 596, "datenzwilling_von_joerg": 596, "faschingzwil": 596, "meine_map": 596, "datenzwil": 596, "equal_rang": 596, "found_rang": 596, "svnr_notexist": 596, "1234567": 596, "memory_resourc": 597, "cluster_cxx03_stl_alloc": [598, 599, 603, 632, 719], "cxx03_stl_allocator_bas": [598, 599, 603, 632, 719], "cluster_cxx03_stl_exercis": [599, 600, 602, 603, 632, 719], "cluster_cxx03_stl_exercises_reverse_str": [599, 600, 602, 603, 632, 719], "cxx03_stl_exercises_reverse_string_exercis": [599, 600, 602, 603, 632, 719], "cxx03_stl_exercises_reverse_string_solut": [599, 602, 603, 632, 719], "auto_ptr": [604, 643, 1118], "cluster_cxx03_dynamic_memori": [605, 632, 719], "cxx03_dynamic_memory_todo": [605, 632, 719], "inher": [606, 607, 610, 612, 613, 926, 1014], "novirtu": [606, 607, 613], "mantra": [607, 791], "spoiler": [607, 972], "cxx03_inheritance_oo_private_protect": [608, 632, 719], "derived1": 610, "derived2": 610, "countless": 610, "derived3": 610, "unimpl": [610, 976], "polymorp": 612, "strictli": [612, 870, 871, 972], "indirect": [613, 699, 803, 957], "cluster_cxx03_standard_library_miscellanea": [614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 719], "cxx03_standard_library_miscellanea_str": [614, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 719], "string_suit": 615, "another_hello": 615, "greeting1": 615, "greeting2": 615, "convert_to_signed_integ": 615, "stol": 615, "stoll": 615, "numstr": 615, "stoi": [615, 904, 907], "convert_to_unsigned_integ": 615, "stoull": 615, "stoui": 615, "stoul": 615, "convert_from_someth": 615, "basic_str": [615, 697], "i_str": 615, "ui_str": 615, "666000": 615, "sprintf": [615, 904, 907, 937, 938], "print_char": 616, "cluster_cxx03_exercises_misc": [616, 617, 618, 619, 632, 719], "cxx03_exercises_misc_american_flag": [616, 618, 632, 719], "cxx03_exercises_misc_fh_moodle_quiz": [617, 618, 632, 719], "cxx03_exercises_misc_sum_integers_from_stdin": [618, 619, 632, 719], "ctrl": [619, 938, 990], "cluster_cxx03_exercises_userdb": [620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_userdb_search_notfound_except": [620, 629, 632, 719], "cxx03_exercises_userdb_userdb_search_find_if": [620, 628, 629, 632, 719], "cxx03_exercises_userdb_user_simple_method": [620, 621, 623, 624, 625, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_user_const_memb": [620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_userdb_search": [620, 628, 629, 630, 632, 719], "cxx03_exercises_userdb_userdb_insert": [620, 627, 628, 629, 630, 632, 719], "cxx03_exercises_userdb_user_access_method": [620, 621, 623, 624, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_user_ctor": [620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_user_const": [620, 623, 624, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_userdb_vector_bas": [620, 627, 628, 629, 630, 631, 632, 719], "cxx03_exercises_userdb_user_default_ctor": [620, 627, 628, 629, 630, 631, 632, 719], "architecton": 622, "celebr": 625, "trittsich": [625, 626], "age_by_n_year": 625, "user_init": 626, "userdb_insert": 627, "doesnotexist": [628, 630], "isvalid": [628, 629, 630], "unnatur": 629, "_user": [629, 768], "thereaft": 629, "wrinkl": 629, "usernotfound": 629, "unreach": [629, 881], "userdb_search_by_lastnam": 630, "undetect": 630, "userdb_init": 631, "cluster_cxx11": [633, 637, 644, 651, 662, 675, 676, 686, 691, 700, 708, 716, 718, 719], "cluster_cxx11_introduct": [633, 637, 675, 716, 718, 719], "cxx11_introduction_overview_livehack": [633, 718, 719], "cxx11_introduction_histori": [633, 637, 675, 716, 718, 719], "ugliest": 634, "todo_list": 635, "tdl": 635, "desc": 635, "key_value_pair": 635, "up_1_to_10": 635, "down_1000_to_980": 635, "090": 635, "todo_item": 635, "make_shar": [635, 696, 714], "todolist": 635, "nocopi": 635, "add_item": 635, "_list": 635, "evangelist": 635, "cstdint": [636, 665], "wchar_t": 636, "cluster_cxx11_new_language_featur": [637, 644, 651, 662, 675, 676, 686, 691, 700, 708, 716, 718, 719], "cluster_cxx11_new_language_features_brace_initi": [637, 675, 716, 718, 719], "cxx11_new_language_features_strongly_typed_enum": [637, 675, 716, 718, 719], "cxx11_new_language_features_auto": [637, 675, 716, 718, 719], "cxx11_new_language_features_brace_initialization_mess": [637, 675, 718, 719], "cxx11_new_language_features_brace_initialization_intro": [637, 675, 716, 718, 719], "cxx11_new_language_features_brace_initialization_implementor_view": [637, 675, 718, 719], "pointcloud": [638, 640], "_point": 638, "data_": [639, 641], "memoriz": 639, "brace_initialization_suit": 640, "explicit_ctor_cal": 640, "initlist_ctor_cal": 640, "explicit_ctor": 640, "initlist_ctor": 640, "disabigu": 640, "nightmar": [640, 643, 957], "size_": 641, "constexpr_suit": 642, "basic_const_is_constexpr": 642, "constexpr_function_request": 642, "constexpr_function_not_request": 642, "constexpr_recursive_funct": 642, "6765": 642, "constexpr_ctor": 642, "schurr": 642, "olsen": [643, 692], "nicolai": [643, 685, 688], "josutti": [643, 685, 688], "smartptr": [644, 675, 693, 694, 718, 719], "cluster_cxx11_new_language_features_move_pf": [644, 675, 691, 700, 708, 716, 718, 719], "cluster_cxx11_smart_point": [644, 675, 691, 700, 708, 716, 718, 719], "cxx11_perfect_forward": [644, 675, 718, 719], "cxx11_new_language_features_move_pf_overview": [644, 675, 691, 700, 708, 716, 718, 719], "cxx11_new_language_features_miscellan": [644, 675, 691, 700, 708, 716, 718, 719], "cxx11_new_language_features_move_pf_afterword": [644, 675, 718, 719], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [644, 675, 718, 719], "cxx11_new_language_features_move_pf_livehack_string_mov": [644, 675, 718, 719], "cxx11_smart_pointers_unique_ptr": [644, 675, 691, 700, 708, 716, 718, 719], "cxx11_smart_pointers_introduct": [644, 675, 691, 700, 708, 716, 718, 719], "_p": [645, 693], "handwritten_suit": [645, 693], "explicit_mov": [645, 693], "assert_double_eq": [645, 693, 694], "create_constant_sensor": [645, 695], "prove": [645, 805], "return_by_copi": 645, "another_sensor": 645, "assigne": 645, "dubiou": 645, "bugfre": 646, "string_move_suit": 646, "make_a_string_from": 646, "ret_": 646, "move_return": 646, "move_assign": 646, "assig": 646, "person_h": 647, "person_suit": 647, "contructor": 647, "outliv": [648, 959], "rvr": 648, "ado": [650, 909, 1073], "mytyp": 650, "spellabl": 650, "0x7ffcd604846c": 650, "0x7ffcd6048468": 650, "iref": 650, "0x7ffffefe2b54": 650, "0x7ffffefe2b50": 650, "0x7ffc59ebd7bc": 650, "ciref": 650, "0x7ffc23e46284": 650, "0x7ffe4a148064": 650, "0x7ffc528e013c": 650, "cluster_cxx11_new_language_features_concept": [651, 675, 718, 719], "cxx11_new_language_features_concepts_link": [651, 675, 718, 719], "cxx11_new_language_features_concepts_intro": [651, 675, 718, 719], "cxx11_new_language_features_concepts_writing_concept": [651, 675, 718, 719], "conceptless": 652, "4ul": [652, 653], "4l": [652, 653], "satisfact": 652, "is_integral_v": 652, "_tp": [652, 685, 695], "hendrik": 656, "niemey": 656, "hypotenus": [657, 658, 659, 660, 661], "sumsq": [657, 658, 659, 660, 661], "point2d": [657, 659, 660, 661], "dozen": 657, "ruin": 657, "5l": 657, "same_a": 657, "commone_reference_with": 657, "common_reference_with": [657, 661], "has_siz": [660, 661], "index_returns_doubl": 661, "cluster_cxx11_new_language_features_coroutin": [662, 675, 718, 719], "cxx11_new_language_features_coroutines_intro": [662, 675, 718, 719], "stackless": 663, "asio": 663, "co_return": [663, 667, 668, 669, 670, 671], "hello_inst": [663, 667, 668, 669, 670, 671], "promise_typ": [663, 665, 666, 668, 669, 670, 671], "get_return_object": [663, 665, 666, 668, 669, 670, 671], "suspend_alwai": [663, 665, 666, 668, 669, 670, 671], "initial_suspend": [663, 665, 666, 668, 669, 670, 671], "final_suspend": [663, 665, 666, 668, 669, 670, 671], "return_void": [663, 666, 668, 669, 670, 671], "unhandled_except": [663, 665, 666, 668, 669, 670, 671], "suspend_nev": [663, 665, 666, 670], "coroutine_handl": [663, 665, 666, 669, 670, 671], "from_promis": [663, 665, 666, 669, 670, 671], "_coro": [663, 665], "yield_valu": [663, 665, 666, 669, 670, 671], "sentinel": [663, 666, 670, 671, 685], "_promis": [663, 666, 669, 670, 671], "glue": 663, "deciph": 663, "diagrammat": 663, "wei": 663, "co_yield": [664, 665, 666, 667, 669, 670, 671], "_elem": 665, "ed": [666, 669, 670, 671, 855, 892], "lackingdefaultconstructor": 672, "ldc": 672, "hasdefaultconstructor": 672, "hmpf": 672, "hdc": 672, "ownsmemori": 673, "om_copi": 673, "incontin": 674, "leaf": [674, 845], "method1": 674, "method2": 674, "cluster_cxx11_new_language_features_rang": [675, 686, 718, 719], "cluster_cxx11_new_language_features_lambda": [675, 676, 718, 719], "cxx11_smart_pointers_introduction_livehack": [675, 691, 718, 719], "cxx11_new_language_features_structured_bind": [675, 718, 719], "cxx11_new_language_features_range_based_for": [675, 716, 718, 719], "cxx11_new_language_features_delegating_ctor": [675, 718, 719], "cxx11_new_language_features_range_based_for_map": [675, 718, 719], "cxx11_new_language_features_default": [675, 718, 719], "cxx11_new_language_features_delet": [675, 718, 719], "cxx11_new_language_features_modul": [675, 718, 719], "cxx11_new_language_features_overrid": [675, 718, 719], "cxx11_new_language_features_fin": [675, 718, 719], "cxx11_new_language_features_constexpr": [675, 718, 719], "cxx11_new_language_features_livehack_smartptr_mov": [675, 718, 719], "cxx11_new_language_features_ranges_intro": [675, 686, 718, 719], "cxx11_new_language_features_ranges_good_bad": [675, 686, 718, 719], "cxx11_new_language_features_ranges_link": [675, 686, 718, 719], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [675, 676, 718, 719], "cxx11_new_language_features_lambda_lambda_is_functor": [675, 676, 718, 719], "cxx11_new_language_features_lambda_lambda_captur": [675, 676, 718, 719], "cxx11_new_language_features_lambda_lambda": [675, 676, 718, 719], "elsewher": [677, 766, 966], "lamda": 677, "print_messag": [677, 679, 680], "create_print_funct": [677, 679, 680], "constantli": [678, 783, 925], "mere": 678, "catur": 678, "akin": 678, "lambda_capture_suit": 678, "explicit_by_copi": 678, "lambda_capure_suit": 678, "explicit_by_refer": 678, "dubio": 678, "explicit_mix": 678, "initialized_captur": 678, "all_by_refer": 678, "all_by_copi": 678, "all_by_copy_except": 678, "this_captur": 678, "_i": [678, 698], "add_to_yourself_and_guarantee_programmers_job_secur": 678, "print_message_func": [679, 680], "_messag": [679, 680], "piti": 680, "mpp": 681, "precompil": [681, 766, 940], "speedup": 681, "rei": 681, "bori": 681, "kolpackov": 681, "abandon": 681, "inde": 683, "range_based_for_suit": 684, "map_pre_11": 684, "map_bas": 684, "map_basic_const_auto_refer": 684, "ific": [684, 689], "map_unpack_copi": 684, "map_unpack_refer": 684, "map_unpack_const_refer": 684, "min_el": 685, "forward_rang": [685, 687], "drop_view": 685, "filter_view": 685, "ref_view": 685, "ranges_util": 685, "view_interfac": 685, "_deriv": 685, "sized_sentinel_for": 685, "decltyp": 685, "__cust": 685, "declval": 685, "__cust_access": 685, "__begin": 685, "_s_size": 685, "_m_deriv": 685, "forward_iter": 685, "coll": 685, "2nd": [685, 1107], "__cxx11": [685, 697], "_vp": 685, "__simple_view": 685, "random_access_rang": [685, 687], "sized_rang": 685, "pretend": 685, "comitte": [685, 688], "lazili": 687, "first_two_drop": 687, "first_two_dropped_next_two_taken": 687, "oldstyl": 687, "inspir": 687, "refin": 687, "input_rang": 687, "bidirectional_rang": 687, "backward": [687, 741, 826, 858, 863, 989, 1094], "contiguous_rang": 687, "tristan": 688, "brindl": 688, "cppnorth": 688, "l0bhzp6hmdm": 688, "nico": 688, "accu": 688, "rust": [688, 940], "parrai": 689, "decompos": 689, "structured_binding_suit": 689, "struct_copi": 689, "struct_refer": 689, "struct_const_refer": 689, "tuple_copi": 689, "make_tupl": 689, "affect": 689, "tuple_refer": 689, "tuple_const_refer": 689, "array_copi": 689, "array_refer": 689, "array_const_refer": 689, "suspici": 689, "designwis": 690, "uptr": 690, "cxx11_smart_pointers_weak_ptr": [691, 716, 718, 719], "cxx11_smart_pointers_shared_ptr": [691, 700, 708, 716, 718, 719], "cxx11_smart_pointers_closing_word": [691, 700, 708, 718, 719], "myclass": [692, 694], "unwind": 692, "yoky6hzlkx": 692, "steal": [693, 926], "cxx11_unique_ptr_sensors_h": 693, "_temp": 693, "basic_const": 693, "raw_": 693, "raw_s_ref": 693, "copy_ctor_bad": 693, "assignment_operator_bad": 693, "gtest_filt": [693, 694, 1105], "reveal": [693, 959], "vtabl": 693, "autoptr": 693, "copy_ctor_good_autoptr_styl": 693, "unexpectedli": 693, "assignment_operator_good_autoptr_styl": 693, "destiat": 693, "excus": 694, "shared_ptr_suit": 694, "rs1": [694, 695], "rs2": [694, 695], "rand1": [694, 695, 696], "rand2": [694, 695, 696], "cann": 694, "basic_make_shar": 694, "set_refer": 694, "_ref": 694, "cyclic_refer": 694, "303549": 694, "unique_ptr_suit": 695, "threw": 695, "ownership_error": 695, "cxx11": 695, "unique_ptr_suite_ownership_error_test": 695, "testbodi": 695, "_dp": 695, "default_delet": 695, "verbose_ctor": 695, "make_unique_auto": 695, "tranfer": 695, "create_random_sensor": 695, "implicit_ownership_transf": 695, "holdsasensor": 695, "taking_ownership_in_own_cod": 695, "sompil": 695, "raw1": 695, "tie": 696, "unti": 696, "weak_ptr_suit": 696, "borrowed_sensor": 696, "another_refer": 696, "sensor_ref": 696, "measurement_thread": 696, "rvref": 697, "lo_funct": 697, "adventur": 697, "grimm": 697, "jaud": 697, "factset": 697, "570f242261f8": 697, "suffer": [698, 871], "origin_dist": 698, "criteria": [698, 810, 1094], "predic": 698, "void_funct": 698, "bind_suit": 698, "plain_void_funct": 698, "one_parameter_funct": 698, "plain_one_parameter_funct": 698, "minus_hardcod": 698, "_1_minus_2": 698, "minus_swap_paramet": 698, "second_minus_first": 698, "_2": [698, 699], "minus_hardcode_first_paramet": 698, "_42_minus_param": 698, "funcfunc": 698, "tradeoff": [698, 771], "oneimplement": 699, "anotherimplement": 699, "do_much_work": 699, "c_using_on": 699, "c_using_anoth": 699, "explanatori": 699, "trampolin": 699, "rtti": 699, "pod": 699, "metaphys": 699, "ostreamlogg": 699, "databaselogg": 699, "logfunc_t": 699, "funcptrlogg": 699, "somebusinessclasswithneedforlog": 699, "successfulli": [699, 786, 801, 1093, 1100], "do_stupid_log": 699, "ostream_logg": 699, "database_logg": 699, "funcptr_logg": 699, "busy_logging_to_ostream": 699, "busy_logging_to_databas": 699, "busy_logging_to_funcptr": 699, "foo_func": 699, "explos": 699, "cluster_cxx11_functions_funct": [700, 708, 718, 719], "cxx11_functions_functions_bind": [700, 708, 718, 719], "cxx11_functions_functions_funct": [700, 708, 718, 719], "msdn": 701, "devil": 701, "singlethread": 701, "god": 701, "paralleliz": 702, "cancel": [702, 916], "interlockedincr": 704, "mutual": [705, 974], "try_lock": 705, "try_lock_for": 705, "unavail": 705, "try_lock_until": 705, "time_point": [705, 710], "do_something_errorpron": 706, "do_more_of_it": 706, "wake": [707, 748, 758, 889, 913, 922, 928], "waiter": [707, 758, 783, 913], "stop_wait": 707, "wait_for": [707, 709], "wait_until": [707, 709], "notify_on": 707, "notify_al": 707, "broadcast": [707, 864, 871, 913, 938, 1135], "thunder": 707, "herd": 707, "condvar": 707, "threadsafequeu": 707, "maxelem": 707, "_maxelem": 707, "dur": [707, 709], "scoped_lock": [707, 709], "_lock": [707, 709], "pop_front": 707, "2m": [707, 709, 863], "1m": [707, 791, 863], "consumer1": 707, "consumer2": 707, "pthread_cond_init": [707, 913], "_not_empti": 707, "_not_ful": 707, "pthread_cond_wait": [707, 913], "pthread_cond_sign": [707, 913], "pthread_cond_t": [707, 913], "unique_lock": 707, "cluster_cxx11_multithread": [708, 718, 719], "cluster_linux_sysprog_posix_thread": [708, 718, 719, 862, 903, 917, 923], "cluster_linux_sysprog_schedul": [708, 718, 719, 862, 903, 917, 923, 925], "cluster_linux_sysprog_blocking_io": [708, 718, 719, 796, 799, 800, 862, 891, 903, 917, 923, 925], "cxx11_multithreading_chrono": [708, 718, 719], "cxx11_multithreading_thread": [708, 718, 719], "cxx11_multithreading_introduct": [708, 718, 719], "linux_sysprog_posix_threads_lifecycl": [708, 718, 719, 862, 903, 917, 923], "cxx11_multithreading_atom": [708, 718, 719], "cxx11_multithreading_race_condit": [708, 718, 719], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [708, 718, 719, 862, 903, 917, 923], "cxx11_multithreading_promise_futur": [708, 718, 719], "cxx11_multithreading_mutex": [708, 718, 719], "linux_sysprog_posix_threads_mutex": [708, 718, 719, 862, 903, 917, 923], "cxx11_multithreading_condition_vari": [708, 718, 719], "linux_sysprog_posix_threads_condition_vari": [708, 718, 719, 862, 903, 917], "cxx11_multithreading_scoped_lock": [708, 718, 719], "linux_sysprog_posix_threads_bas": [708, 718, 719, 862, 903, 917, 923], "linux_sysprog_scheduling_bas": [708, 718, 719, 862, 903, 917, 923, 925], "linux_sysprog_posix_threads_exercise_mutex": [708, 718, 719, 862, 903, 917], "linux_sysprog_blocking_io_blocking_io": [708, 718, 719, 796, 799, 800, 862, 891, 903, 917, 923, 925], "get_futur": 709, "set_except": 709, "exception_ptr": 709, "shared_futur": 709, "uncoordin": 709, "ten_million_years_": 709, "answer_poll_interval_m": 709, "answer_valid": 709, "chew_answ": 709, "timespec": [709, 913, 924, 934], "reaction": [709, 881, 963], "answer_computation_tim": 709, "answer_poll_interv": 709, "ten_million_year": 709, "lockguard": 709, "_answer_valid": 709, "_answer": 709, "_data": [709, 954], "binary_semaphor": 709, "__cplusplu": 709, "202001l": 709, "_notifi": 709, "answer_promis": 709, "answer_futur": 709, "make_exception_ptr": 709, "epoch": [710, 933], "time_t": 710, "notion": 710, "system_clock": 710, "monoton": [710, 774, 776], "ntp": 710, "steady_clock": 710, "timepoint": 710, "steadili": 710, "high_resolution_clock": 710, "brand": 710, "spent_milli": 710, "duration_cast": 710, "bagcopi": 713, "find_by_int": [713, 714, 715], "remove_by_int": [713, 714, 715], "nremov": [713, 714, 715], "bagshar": 714, "item2": [714, 715], "weakref": 714, "sharedref": 714, "baguniqu": 715, "constbag": 715, "cluster_cxx11_exercis": [716, 718, 719], "cxx11_exercises_bag_uniqu": [716, 718, 719], "cxx11_exercises_bag_copi": [716, 718, 719], "cxx11_exercises_bag_shar": [716, 718, 719], "withing": 717, "filesystem_suit": 717, "cd_to_tmpdir_fixtur": 717, "path_compose_compar": 717, "path_compose_compare_2": 717, "is_absolut": 717, "is_rel": 717, "path_abs_rel": 717, "abspath": 717, "relpath": 717, "parent_path": 717, "remove_filenam": 717, "replace_filenam": 717, "replace_extens": 717, "path_component_access": 717, "filename_part": 717, "dir_part": 717, "path_iter": 717, "current_directori": 717, "cwd_chdir": 717, "current_path": 717, "create_directory_error": 717, "filesystem_error": 717, "create_directory_singl": 717, "is_regular_fil": 717, "create_directory_multipl": 717, "is_directori": 717, "is_block_fil": 717, "is_character_fil": 717, "is_empti": 717, "is_fifo": 717, "is_oth": 717, "is_socket": 717, "is_symlink": 717, "greatest": 717, "nov": [717, 756, 822, 848, 870, 954, 990, 1019], "inod": [717, 725, 732], "919153": 717, "0644": [717, 811, 825], "system_u": 717, "object_r": 717, "passwd_file_t": 717, "s0": 717, "111282886": 717, "0100": 717, "737858445": 717, "743858359": 717, "file_s": 717, "hard_link_count": 717, "last_write_tim": 717, "ext4": [717, 766], "btrf": 717, "ntf": 717, "directory_iter": 717, "subdir1": 717, "subdir2": 717, "file1": [717, 735, 851], "file2": [717, 735, 851], "dirit": 717, "recursive_directory_iter": 717, "cxx11_filesystem": [718, 719], "cluster_unittest": [719, 1103], "cluster_linux_sysprog_process": [719, 862, 903], "cluster_linux_sysprog_intro_hw": [719, 862, 903, 905], "cluster_linux_toolchain_exercis": [719, 862, 945, 946, 947, 948, 949, 950], "cluster_linux_toolchain_raspi": [719, 862, 945, 947, 950, 951], "cluster_linux_toolchain_cross": [719, 862, 944, 945, 947, 949, 950, 951], "cluster_linux_basics_permissions_exercis": [719, 796, 812, 815, 816, 817, 818, 819, 820, 821, 862], "cluster_linux_basics_shell_exercis": [719, 793, 794, 795, 796, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 846, 862], "cluster_linux_basics_shell_exercises_l": [719, 796, 840, 841, 842, 843, 844, 846, 862], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [719, 793, 794, 795, 796, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 846, 862], "cluster_linux_basics_text_tool": [719, 796, 856, 862], "cluster_linux_basics_io_redir_pip": [719, 796, 807, 862], "cluster_linux_basics_exercis": [719, 793, 794, 795, 796, 862], "cluster_linux_basics_archiving_compress": [719, 789, 796, 862, 950, 951], "cluster_linux_ssh": [719, 862, 874, 875, 876, 877, 878, 950, 951], "cluster_linux_ssh_exercis": [719, 862, 874, 875, 876, 877, 878], "cluster_linux_hardwar": [719, 862, 868, 869], "cluster_linux_hardware_can": [719, 862, 868, 869], "cluster_linux_kernel": [719, 723, 726, 728, 731, 733, 736, 738, 740, 742, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 770, 772, 775, 777, 781, 784, 787, 862], "unittest_gtest_cmak": [719, 1103], "linux_sysprog_ev": [719, 862, 903], "linux_sysprog_ipc": [719, 862, 903], "linux_sysprog_sign": [719, 862, 903], "linux_sysprog_posix_threads_mutex_trylock": [719, 862, 903, 917], "trylock": [719, 862, 903, 911, 917], "islock": [719, 862, 903, 911, 917], "linux_sysprog_posix_threads_last_warn": [719, 862, 903, 917], "linux_sysprog_posix_threads_miscellan": [719, 862, 903, 917], "linux_sysprog_posix_threads_exercise_condition_vari": [719, 862, 903, 917], "linux_sysprog_scheduling_realtim": [719, 862, 903, 923, 925], "linux_sysprog_scheduling_wakeup_lat": [719, 862, 903, 923, 925], "linux_sysprog_scheduling_exam_quest": [719, 862, 903, 923, 925], "linux_sysprog_scheduling_processes_and_thread": [719, 862, 903, 923, 925], "linux_sysprog_scheduling_realtime_api": [719, 862, 903, 923], "linux_sysprog_blocking_io_blocking_io_tim": [719, 862, 891, 903], "linux_sysprog_blocking_io_blocking_io_fil": [719, 796, 799, 800, 862, 891, 903], "linux_sysprog_blocking_io_blocking_io_network": [719, 862, 891, 903], "linux_sysprog_process_tre": [719, 862, 903], "linux_sysprog_process_commandlin": [719, 862, 903], "linux_basics_intro_process_tre": [719, 796, 800, 812, 815, 816, 817, 818, 819, 820, 821, 862, 874, 875, 876, 877, 878, 903, 950, 951], "linux_basics_intro_environ": [719, 796, 800, 846, 862, 903, 950, 951], "linux_sysprog_intro_hw_sysfs_gpio": [719, 862, 903, 905], "linux_sysprog_intro_hw_get": [719, 862, 903, 905], "linux_sysprog_intro_hw_watch": [719, 862, 903, 905], "linux_sysprog_fileio_example_o_excl": [719, 862, 901, 903, 920], "o_excl": [719, 862, 892, 893, 901, 903, 920, 933], "linux_sysprog_fileio_example_o_creat": [719, 862, 901, 903, 920], "linux_sysprog_fileio_example_o_wronli": [719, 862, 901, 903, 920], "linux_sysprog_fileio_dupl": [719, 862, 901, 903, 920], "linux_sysprog_fileio_basics_exercise_copi": [719, 862, 893, 901, 903, 920], "linux_sysprog_fileio_example_o_rdonli": [719, 862, 901, 903, 920], "o_rdonli": [719, 724, 862, 888, 892, 893, 896, 899, 900, 901, 903, 904, 907, 920, 930, 933, 937], "linux_sysprog_fileio_basics_exercise_hol": [719, 862, 901, 903, 920], "linux_sysprog_fileio_misc": [719, 862, 901, 903, 920], "linux_sysprog_fileio_fileio_group": [719, 862, 901, 903, 920], "linux_toolchain_cmake_cross": [719, 862, 950], "linux_toolchain_shared_librari": [719, 862, 950], "linux_toolchain_exercises_cross_build": [719, 862, 945, 947, 950], "linux_toolchain_raspi_toolchain_setup": [719, 862, 945, 947, 950, 951], "linux_toolchain_exercises_fh_moodle_quiz": [719, 862, 946, 947, 950], "linux_toolchain_exercises_native_build": [719, 862, 947, 948, 950], "linux_toolchain_exercises_raspberry_toolchain": [719, 862, 947, 949, 950], "linux_toolchain_cross_bas": [719, 862, 944, 945, 947, 949, 950, 951], "linux_toolchain_raspi_docker_fedora_wsl": [719, 862, 950, 951], "linux_toolchain_raspi_detail": [719, 862, 950, 951], "linux_basics_archiving_compression_tar": [719, 789, 796, 862, 950, 951], "linux_ssh_scp": [719, 862, 874, 875, 876, 878, 950, 951], "linux_ssh_bas": [719, 862, 874, 875, 876, 877, 878, 950, 951], "linux_toolchain_raspi_linaro_pi": [719, 862, 950, 951], "defunct": [719, 862, 950, 951], "linux_basics_intro_login": [719, 796, 800, 812, 815, 816, 817, 818, 819, 820, 821, 862, 874, 875, 876, 877, 878, 950, 951], "linux_basics_intro_fh_moodle_quiz": [719, 796, 799, 800, 862], "linux_basics_intro_demo_everything_is_a_fil": [719, 796, 799, 800, 862], "linux_basics_intro_wsl": [719, 796, 800, 862], "linux_basics_permissions_umask": [719, 796, 821, 862], "linux_basics_permissions_fh_moodle_quiz": [719, 796, 813, 821, 862], "linux_basics_permissions_setuid": [719, 796, 821, 862], "linux_basics_permissions_sticki": [719, 796, 821, 862], "linux_basics_permissions_setuid_livedemo": [719, 796, 821, 862], "linux_basics_permissions_fh_moodle_quiz_nocheat": [719, 796, 814, 821, 862], "linux_basics_permissions_exercises_private_directory_quest": [719, 796, 815, 817, 821, 862], "linux_basics_permissions_exercises_private_directori": [719, 796, 815, 816, 817, 821, 862], "linux_basics_permissions_exercises_credenti": [719, 796, 812, 815, 816, 817, 818, 819, 820, 821, 862], "linux_basics_permissions_exercises_shared_fil": [719, 796, 815, 820, 821, 862], "linux_basics_permissions_exercises_public_directory_quest": [719, 796, 815, 819, 821, 862], "linux_basics_permissions_exercises_public_directori": [719, 796, 815, 818, 819, 821, 862], "linux_basics_shell_cp": [719, 793, 794, 795, 796, 830, 831, 833, 834, 837, 838, 840, 846, 862], "linux_basics_shell_link": [719, 796, 846, 862], "linux_basics_shell_configfil": [719, 796, 846, 862], "linux_basics_shell_mv": [719, 796, 846, 862], "linux_basics_shell_fh_moodle_quiz": [719, 796, 839, 846, 862], "linux_basics_shell_exercises_ls_etc_passwd_s": [719, 796, 840, 842, 843, 846, 862], "linux_basics_shell_exercises_ls_dev_typ": [719, 796, 840, 841, 843, 846, 862], "linux_basics_shell_exercises_ls_home_permiss": [719, 796, 840, 843, 844, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [719, 796, 830, 834, 837, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [719, 796, 830, 834, 837, 838, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [719, 793, 794, 795, 796, 830, 831, 832, 833, 834, 837, 838, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [719, 793, 794, 795, 796, 830, 831, 832, 833, 834, 835, 837, 838, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [719, 796, 830, 833, 834, 837, 838, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [719, 796, 830, 831, 834, 837, 838, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [719, 796, 834, 836, 840, 846, 862], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [719, 796, 834, 837, 840, 846, 862], "linux_basics_text_tools_cut": [719, 796, 856, 862], "linux_basics_text_tools_head_tail": [719, 796, 856, 862], "linux_basics_text_tools_cat": [719, 796, 856, 862], "linux_basics_text_tools_overview": [719, 796, 856, 862], "linux_basics_text_tools_grep": [719, 796, 856, 862], "linux_basics_text_tools_less": [719, 796, 856, 862], "linux_basics_text_tools_find": [719, 796, 856, 862], "linux_basics_text_tools_exercis": [719, 796, 856, 862], "linux_basics_io_redir_pipes_io_redir": [719, 796, 807, 862], "linux_basics_io_redir_pipes_exercis": [719, 796, 807, 862], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [719, 796, 807, 862], "linux_basics_io_redir_pipes_pip": [719, 796, 807, 862], "linux_basics_exercises_fh_ss2022_exam_01_g2": [719, 794, 795, 796, 862], "linux_basics_exercises_fh_ss2022_exam_01_g1": [719, 793, 795, 796, 862], "linux_basics_archiving_compression_overview": [719, 789, 796, 862, 950, 951], "linux_basics_archiving_compression_gzip": [719, 789, 796, 862, 950, 951], "linux_basics_archiving_compression_exercis": [719, 789, 796, 862], "linux_ssh_key_pair": [719, 862, 874, 875, 876, 877, 878], "linux_ssh_portforward": [719, 862, 878], "linux_ssh_sshf": [719, 862, 878], "linux_ssh_link": [719, 862, 878], "linux_ssh_exercises_copy_fil": [719, 862, 874, 875, 876, 878], "linux_ssh_exercises_pubkei": [719, 862, 874, 875, 876, 877, 878], "linux_ssh_exercises_copy_tre": [719, 862, 875, 876, 878], "linux_hardware_pwm": [719, 862, 869], "linux_hardware_brushless_motor": [719, 862, 869], "brushless": [719, 862, 869], "linux_hardware_i2c": [719, 862, 869], "linux_hardware_w1": [719, 862, 869], "linux_hardware_can_program": [719, 862, 868, 869], "linux_hardware_can_intro": [719, 862, 868, 869], "linux_hardware_can_interfac": [719, 862, 868, 869], "linux_hardware_can_hardwar": [719, 862, 868, 869], "linux_kernel_interrupt_cod": [719, 743, 747, 770, 775, 781, 784, 787, 862], "linux_kernel_raspi_kernel_build": [719, 743, 747, 767, 770, 775, 781, 784, 787, 862], "linux_kernel_mutex_cod": [719, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_interrupt": [719, 743, 747, 749, 761, 763, 770, 775, 781, 784, 787, 862], "linux_kernel_multiple_devic": [719, 733, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_mutex": [719, 743, 747, 757, 759, 770, 775, 781, 784, 787, 862], "linux_kernel_process_vs_atom": [719, 728, 733, 736, 738, 743, 747, 749, 753, 757, 759, 761, 763, 765, 770, 772, 775, 777, 781, 784, 787, 862], "linux_kernel_cdev_refactor": [719, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_cdev_first_function": [719, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_modules_hello_world": [719, 723, 726, 728, 731, 733, 736, 743, 745, 747, 751, 757, 763, 770, 775, 781, 784, 787, 862], "linux_kernel_fedora_module_build": [719, 723, 726, 728, 731, 733, 736, 742, 743, 745, 747, 751, 757, 763, 770, 775, 781, 784, 787, 862], "linux_kernel_fedora_kernel_build": [719, 723, 726, 728, 731, 733, 736, 740, 742, 743, 745, 747, 751, 757, 763, 770, 775, 781, 784, 787, 862], "linux_kernel_spinlock_cod": [719, 743, 770, 775, 781, 784, 787, 862], "linux_kernel_spinlock": [719, 743, 770, 772, 775, 781, 784, 787, 862], "linux_kernel_iomemori": [719, 743, 751, 763, 862], "linux_kernel_cdev_manu": [719, 723, 726, 728, 731, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_pci": [719, 743, 763, 862], "linux_kernel_dma": [719, 738, 743, 761, 763, 862], "linux_kernel_kmalloc": [719, 728, 733, 736, 738, 743, 747, 757, 761, 763, 770, 775, 781, 784, 787, 862], "linux_kernel_cdev_auto": [719, 723, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_usermem": [719, 743, 781, 784, 862], "linux_kernel_workqueu": [719, 743, 781, 784, 787, 862], "linux_kernel_timer_cod": [719, 743, 775, 781, 784, 787, 862], "linux_kernel_stub_sysprog_dup": [719, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "dup": [719, 725, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 809, 862, 895, 934], "stub": [719, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862, 953], "linux_kernel_waitqueu": [719, 743, 784, 862], "linux_kernel_cdev_file_oper": [719, 726, 728, 733, 736, 743, 747, 757, 770, 775, 781, 784, 787, 862], "linux_kernel_tim": [719, 743, 775, 777, 781, 784, 787, 862], "linux_kernel_netdev": [719, 743, 761, 862], "linux_kernel_list": [719, 728, 733, 736, 743, 747, 755, 757, 770, 775, 781, 784, 787, 862], "doubli": [719, 728, 732, 733, 736, 743, 747, 756, 757, 768, 770, 775, 781, 784, 787, 862], "interconnect": 720, "device_cr": [721, 722, 725], "cdev_init": [721, 729, 730], "cdev_add": [721, 729, 730], "unhappi": 721, "device_destroi": 721, "my_class": 721, "my_driv": [721, 724, 734, 735, 746, 756, 762, 768, 774, 785], "mknod": [721, 729, 730], "character devic": [722, 725, 730, 1123], "relatim": 722, "register_chrdev_region": [722, 729, 730], "alloc_chrdev_region": [722, 730], "htmldoc": 722, "chrdev": 722, "dev_t": [722, 730], "baseminor": 722, "highlight": 722, "bug_on": 722, "module_licens": [722, 744], "openat": [724, 888], "at_fdcwd": [724, 888], "0x7f3d11330000": 724, "einval": [724, 729, 744, 782], "enotti": 724, "file_oper": [725, 729, 730, 768], "citizenship": 725, "__user": [725, 780], "loff_t": 725, "unlocked_ioctl": 725, "my_op": 725, "this_modul": 725, "my_open": 725, "my_read": 725, "my_writ": 725, "my_ioctl": [725, 756], "mode_t": [725, 892, 896, 934], "filp": [725, 768, 782], "vf": 725, "swiss": [725, 892, 1118], "armi": [725, 892, 1118], "my_ioctl_request": [725, 727], "my_request_such": 725, "my_request_such_and_such": 725, "laden": [725, 1132], "endod": 725, "_iow": 725, "_ior": 725, "_ioc": 725, "_ioc_non": 725, "_ioc_read": 725, "_ioc_typecheck": 725, "_ioc_writ": 725, "_iowr": 725, "my_ev": [727, 734, 735, 774, 779], "my_event_typ": 727, "my_event_ioctl": 727, "jiffi": [727, 768, 774], "my_event_list": [727, 734, 735, 756], "list_head": [727, 754, 756, 779], "num_ev": 727, "my_event_list_init": 727, "my_event_list_destroi": 727, "my_event_list_add": [727, 756, 769, 774, 785], "my_ioctl_add_ev": 727, "printk": [727, 744, 746, 785], "unregister_chrdev_region": [729, 730], "caveat": [729, 768, 871], "register_chrdev": 729, "unregister_chrdev": 729, "kern_err": 729, "cdev_del": [729, 730], "my_driver_henkel": 729, "kmem": 730, "opaqu": 730, "majmin": 730, "mkdev": 730, "drivernam": 730, "my_fop": 730, "my_cdev": 730, "devicefil": 730, "ndevic": 732, "module_param": 732, "my_devic": [732, 734, 735, 746, 762, 774], "private_data": [732, 762, 768], "kbuild": [734, 735], "torn": [734, 1110], "ccflag": [734, 735], "container_of": [735, 786], "file3": 735, "distinct": [735, 802, 886, 1013], "my_device_init": 735, "my_device_destroi": [735, 774], "everyt": 737, "vmalloc": 737, "ioremap": [737, 750], "iommu": 737, "pysic": 737, "dma_addr_t": 737, "alloc_pag": 737, "gfp_mask": 737, "get_free_pag": 737, "__get_free_pag": 737, "2order": 737, "__get_dma_pag": 737, "zone": 737, "__free_pag": 737, "free_pag": 737, "addr": [737, 750, 762, 866, 871, 889, 933, 1098], "dma_handl": 737, "cpu_addr": [737, 762], "dma_alloc_coher": 737, "gfp": [737, 752, 778], "dma_free_coher": 737, "pci_dev": [737, 762], "gfp_kernel": [737, 752, 769], "gfp_atom": [737, 752], "dma_bidirect": 737, "dma_to_devic": 737, "dma_from_devic": 737, "dma_map_singl": 737, "dma_mapping_error": 737, "fuck": 737, "dma_unmap_singl": 737, "dma_map_pag": 737, "dma_unmap_pag": 737, "dma_address": 737, "sglist": 737, "sg_run": 737, "dma_map_sg": 737, "for_each_sg": 737, "hw_address": 737, "sg_dma_address": 737, "hw_len": 737, "sg_dma_len": 737, "dma_unmap_sg": 737, "nent": 737, "unmap": [737, 762], "recreat": [737, 838, 956], "dma_sync_single_for_cpu": 737, "dma_sync_sg_for_cpu": 737, "mel": [737, 752], "gorman": [737, 752], "incredibli": 737, "transcript": [739, 766, 1063], "building_a_custom_kernel": 739, "fc33": [739, 744], "extravers": [739, 767], "cleanli": 739, "uncommit": 739, "j6": 739, "fedpkg": 739, "pesign": 739, "grubbi": 739, "33rd": 739, "f33": 739, "builddep": 739, "libexec": [739, 952], "symver": [741, 744], "modpost": [741, 744], "module_src": 741, "kernel_build": 741, "install_mod_path": [741, 766], "modules_instal": [741, 766, 870], "fedora_kernel_build": 743, "fedora_module_build": 743, "modules_hello_world": 743, "cdev_manu": 743, "process_vs_atom": 743, "stub_sysprog_dup": 743, "cdev_auto": 743, "cdev_file_oper": 743, "cdev_first_function": 743, "cdev_refactor": 743, "multiple_devic": 743, "mutex_cod": 743, "raspi_kernel_build": 743, "interrupt_cod": 743, "spinlock_cod": 743, "timer_cod": 743, "iomemori": 743, "usermem": 743, "netdev": 743, "waitqueu": [743, 1123], "ldd3": [743, 754], "reilli": [743, 855], "probe": [744, 870, 871, 872], "hello_init": 744, "kern_debug": 744, "hello_exit": 744, "module_init": 744, "module_exit": 744, "exot": 744, "currect": [744, 839], "lsmod": [744, 870, 871, 872], "insmod": 744, "modprob": [744, 766, 767, 865, 870, 871, 872], "rmmod": [744, 774], "dep": 744, "softdep": 744, "rebuilt": 744, "depmod": [744, 762], "cross_compil": [746, 766, 767], "libssl": [746, 870], "gpio_request": 746, "gpio_fre": 746, "gpio_direction_input": 746, "gpio_direction_output": 746, "gpio_to_irq": 746, "my_device_activate_gpio": 746, "_destroi": 746, "3f200000": 746, "pinctrl": 746, "bcm2835": [746, 867], "request_irq": [746, 748, 762], "free_irq": [746, 748, 762], "priorit": [748, 764, 864, 922, 934], "preempt_rt": [748, 758, 1113], "mainlin": [748, 766, 926, 1113], "irqreturn_t": [748, 762], "irq_handl": [748, 762], "irq": [748, 762, 764, 768, 924], "opqu": 748, "irq_non": 748, "irq_wake_thread": 748, "irq_handler_t": 748, "irqf_shar": [748, 762], "irqf_trigger_ris": 748, "irqf_trigger_fal": 748, "irqf_trigger_high": 748, "irqf_trigger_low": 748, "iomem": 750, "ioport": 750, "request_mem_region": 750, "0x20200000": 750, "release_mem_region": 750, "asm": [750, 955], "iounmap": 750, "ioread8": 750, "ioread16": 750, "ioread32": 750, "iowrite8": 750, "u8": 750, "iowrite16": 750, "u16": 750, "iowrite32": 750, "u32": 750, "kmalloc kfre": 752, "dynamic memori": 752, "slab": 752, "gfp_t": [752, 769, 785], "kzalloc": 752, "kfree": 752, "scarc": 752, "discourag": 752, "stolen": [754, 863], "some_list": 754, "init_list_head": 754, "some_data": 754, "list_add": 754, "list_add_tail": 754, "new_payload": 754, "existing_payload": 754, "prepend": [754, 766, 798, 1001], "list_for_each": 754, "list_entri": 754, "cursor": [754, 826, 1073], "run_payload": 754, "list_empti": 754, "list_first_entri": 754, "list_del": [754, 756], "a_payload": 754, "inject": [756, 769, 774, 1076], "opfer": 756, "corrupt": 756, "ffff91285ae68f00": 756, "ffff9128406cec00": 756, "list_debug": 756, "0x70": [756, 871], "0xb0": 756, "0xdd": 756, "ksys_ioctl": 756, "0x82": 756, "0xc0": 756, "__x64_sys_ioctl": 756, "do_syscall_64": 756, "0x4d": 756, "entry_syscall_64_after_hwfram": 756, "0x44": 756, "0xa9": 756, "unprotect": [756, 768, 984], "nevent": [756, 779], "my_device_list": 756, "preemptibl": [758, 926], "preemption": [758, 764, 771, 871, 922, 925, 926], "holder": [758, 982], "mutex_init": 758, "mutex_destroi": 758, "mutex_lock": 758, "mutex_lock_interrupt": 758, "eintr": [758, 884, 937, 938], "mutex_lock_interruptible_nest": 758, "mutex_trylock": 758, "eagain": [758, 768, 782], "mutex_unlock": 758, "torvald": [758, 766], "trickl": 758, "rtmutex": 758, "rt_mutex": 758, "net_devic": 760, "alloc_netdev": 760, "sizeof_priv": 760, "netdev_priv": 760, "funcion": 760, "ethernet": 760, "etherdevic": 760, "alloc_etherdev": 760, "free_netdev": 760, "register_netdev": 760, "unregister_netdev": 760, "devinc": 760, "hard_start_xmit": 760, "sk_buff": 760, "skb": 760, "transmiss": [760, 889, 1060], "tx_timeout": 760, "quota": [760, 792], "stead": 760, "do_ioctl": 760, "ifreq": [760, 866], "ifr": [760, 866], "netif_start_queu": 760, "netif_stop_queu": 760, "netif_wake_queu": 760, "udevd": 762, "pci_device_id": 762, "my_id": 762, "pci_devic": 762, "0xdead": 762, "0xbeef": 762, "0xbeee": 762, "module_device_t": 762, "my_prob": 762, "my_remov": 762, "my_suspend": 762, "pm_message_t": 762, "my_resum": 762, "my_shutdown": 762, "pci_driv": 762, "id_tabl": 762, "my_init": 762, "pci_register_driv": 762, "my_exit": [762, 971], "pci_unregister_driv": 762, "subsystem_vendor": 762, "subsystem_devic": 762, "u64": [762, 776], "dma_mask": 762, "device_count_resourc": 762, "pci_enable_devic": 762, "pdev": 762, "wizardri": 762, "pci_request_region": 762, "pci_set_mast": 762, "pci_clear_mast": 762, "pci_set_dma_mask": 762, "pci_set_drvdata": 762, "ioread": 762, "iowrit": 762, "pci_resource_len": 762, "bar_no": 762, "__iomem": 762, "pci_iomap": 762, "pci_iounmap": 762, "pci_alloc_consist": 762, "os_devic": 762, "_o": 762, "dma_addr": 762, "pci_free_consist": 762, "_size": 762, "_cpu_addr": 762, "t_os_dma_addr__get_n": 762, "_dma_addr": 762, "_os_devic": 762, "dma_bit_mask": 762, "pci_set_consistent_dma_mask": 762, "config_debug_atomic_sleep": [764, 769], "cross compil": 766, "educ": 766, "raspberrypi": [766, 767, 870, 942, 949], "borrow": 766, "pi2": 766, "1gb": 766, "canon": [766, 883], "workstat": 766, "boil": 766, "hf": 766, "armv6j": 766, "hardfloat": 766, "gnueabi": 766, "objcopi": 766, "raspberry_pi": 766, "local_overlai": 766, "ebuild": 766, "binutil": [766, 767], "repo_nam": 766, "9999": 766, "sourcedir": 766, "builddir": 766, "buildparam": 766, "kconfig": 766, "zconf": 766, "raspbian": 766, "bootdir": 766, "bootf": 766, "rootf": 766, "kernel7": 766, "Then": [766, 881, 1080], "assimil": 766, "bcmrpi_defconfig": 766, "bcm2709_defconfig": 766, "config_localvers": 766, "config_ikconfig": 766, "eveytim": 766, "config_can_mcp251x": 766, "config_sensors_lm73": 766, "zimag": [766, 767, 870], "dtb": [766, 767, 870], "j3": 766, "mkknlimg": 766, "te": 766, "superus": 766, "jtf": 766, "bcm2709": 766, "smi": 766, "ft5406": 766, "can1": [766, 865], "v7": [766, 767], "ipv4": [766, 1135], "xfrm4_mode_beet": 766, "inet_lro": 766, "esp4": 766, "xfrm4_mode_transport": 766, "udp_tunnel": 766, "sdb": 766, "57344": 766, "sdb1": 766, "4162560": 766, "sdb2": 766, "enjoi": 766, "ec2aa3d2": 766, "eee7": 766, "454e": 766, "d145df5ddcba": 766, "agnost": 766, "urg": 766, "rasperri": [767, 870, 872, 1122, 1129], "patchlevel": 767, "sublevel": 767, "_morph": [768, 778], "my_driver_hello": 768, "my_driver_cdev_manu": 768, "my_driver_cdev_dynamic_major": 768, "my_driver_cdev_file_oper": 768, "my_driver_cdev_first_function": 768, "my_driver_cdev_refactor": 768, "my_driver_multiple_devic": 768, "my_driver_mutex": 768, "my_driver_interrupt": 768, "my_driver_spinlock_atom": 768, "my_driver_time_tim": 768, "my_driver_workqueu": 768, "my_driver_usermem": 768, "copy_": 768, "my_driver_waitqueu": 768, "nonblock": [768, 782, 934, 1135], "spinlock_t": [769, 771], "isr": [769, 926, 1123], "spin_unlock": [769, 771], "reenabl": 769, "uniprocessor": 771, "multiprocessor": 771, "spin_lock_init": 771, "spin_lock": 771, "spin_trylock": 771, "irqflag": 771, "spin_lock_irqsav": 771, "spin_unlock_irqrestor": 771, "pend": [774, 803, 926, 939], "my_inject_deferred_ev": 774, "my_device_add_deferred_ev": 774, "del_timer_sync": [774, 776], "paranoia": 774, "symmetri": 774, "my_device_add_ev": 774, "my_inject_ev": 774, "tick": 776, "config_hz": 776, "friendli": [776, 1014, 1083, 1087], "hz": 776, "hrtimer": 776, "jiffies_to_msec": 776, "jiffies_to_usec": 776, "jiffies_to_nsec": 776, "msecs_to_jiffi": 776, "usecs_to_jiffi": 776, "timespec64_to_jiffi": 776, "timespec64": 776, "jiffies_to_timespec64": 776, "timer_list": 776, "my_tim": 776, "timerfunc": 776, "timer_setup": 776, "add_tim": 776, "del_tim": 776, "0520": 778, "0521": 778, "0525": 778, "0532": 778, "0710": 778, "preempt": [778, 922, 926], "caption": 778, "backlink": 778, "my_event_nod": 779, "my_get_one_ev": [779, 782], "my_device_get_one_ev": 779, "my_event_get_one_ev": 779, "efault": [779, 780], "uaccess": 780, "copy_to_us": 780, "copy_from_us": 780, "enosi": 782, "timerfd": [782, 890, 930], "f_flag": 782, "wait_queue_head_t": 783, "wq": [783, 785, 786], "init_waitqueue_head": 783, "sched": 783, "wait_ev": 783, "wait_event_interrupt": 783, "wait_event_timeout": 783, "timeout_jiffi": 783, "wait_event_interruptible_timeout": 783, "wake_up": 783, "wake_up_interrupt": 783, "task_interrupt": 783, "create_workqueu": [785, 786], "destroy_workqueu": [785, 786], "eo": 785, "rtprio": 785, "work_struct": [785, 786], "init_work": [785, 786], "chrt": [785, 926], "postpon": [287, 786], "workqueue_struct": 786, "work_func_t": 786, "queue_work": 786, "packen": 788, "gunzip": 790, "zgrep": 790, "zcat": 790, "zless": 790, "intact": [790, 1039, 1043], "viro": 791, "cpio": 791, "cleaner": 791, "archivformat": 791, "lzma": 791, "430mb": 791, "95mb": 791, "74mb": 791, "5m": [791, 863], "64mb": 791, "togeht": 792, "ceph": 792, "gfs2": 792, "zcf": 792, "decompress": [792, 952], "zxf": 792, "ztf": 792, "dirt": 792, "livingroom": 792, "grumbl": 792, "reat": 792, "tract": 792, "ell": [792, 826], "vv": 792, "supplementari": [793, 794, 801, 803], "1021": [793, 794, 801], "somefil": [793, 794, 832], "chgrp": [793, 794, 811, 818, 820], "fellow": [793, 794], "picki": [793, 794, 976], "ttyusb1": 797, "stick": [797, 801], "2006854": 797, "sdc": 797, "2006823": 797, "deserv": [797, 855, 916, 942], "trash": [797, 826], "burn": [797, 872], "1mib": 797, "1mibf": 797, "0m": [797, 848, 924], "mkf": 797, "entropi": 797, "my_vari": 798, "1034184": 798, "1035812": 798, "ancestor": [798, 804, 882], "decriptor": [799, 898], "getti": 801, "kerbero": [801, 803], "gnome3": 801, "agetti": 801, "cleartext": [801, 822], "shadow": [801, 822, 898, 1005, 1042], "brute": [801, 879, 942], "crack": 801, "attack": [801, 879, 957, 1076, 1121], "hierarch": 802, "peripher": [802, 1122, 1129], "grand": 802, "ten_integ": 803, "unfair": [803, 926], "dialout": [803, 898], "seg": 803, "kbyte": 803, "62715": 803, "819200": 803, "pstree": 804, "modemmanag": 804, "journ": 804, "abrtd": 804, "auditd": 804, "bluetoothd": 804, "cupsd": 804, "lau": 804, "firewalld": 804, "fwupd": 804, "constrain": [113, 804], "tini": [804, 940], "enemi": 805, "guidanc": 805, "outlook": [113, 805], "dicdat": 805, "acknowledg": [805, 863], "seamless": [805, 1089], "vmware": 805, "exampk": 805, "altruism": 805, "mkfifo": [806, 810], "stdin_fileno": [808, 892, 902, 938, 1014], "stdout_fileno": [808, 888, 889, 892, 898, 924, 933, 937, 938, 1014], "stderr_fileno": [808, 892, 1014], "religi": 808, "fed": 808, "filefor": 808, "sudoer": 809, "weekli": 809, "compet": [810, 871], "award": [810, 857], "plumber": 810, "sniff": 810, "fifo": [810, 892, 1134], "rendezv": 810, "unnam": 810, "chown": [811, 823, 954], "useradd": [811, 954], "groupadd": 811, "usermod": 811, "groupmod": 811, "teammember42": 811, "manfromthestreet": 811, "jun": [811, 942], "triplet": 811, "1003": 811, "110100100": 811, "110000000": 811, "0600": 811, "111101101": 811, "0755": 811, "bitmask": [811, 822, 938], "1317": 822, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 822, "0g2rqr9cnydnqq5unt": 822, "wpu8jyzeuxktapl0": 822, "burnout": 822, "retyp": 822, "rwsr": [822, 823], "32712": 822, "rwxrwxrwx": 822, "4755": [822, 823], "uid_t": 823, "getuid": 823, "geteuid": 823, "rwxrwxr": [823, 888, 940, 941, 942], "24456": 823, "drwxrwxrwt": 824, "0022": 825, "strain": 826, "injuri": 826, "diseas": 826, "outout": 826, "20k": 826, "olevel": 826, "debugopt": 826, "expr1": 826, "expr2": 826, "daystart": 826, "regextyp": 826, "synopsi": 826, "findu": 826, "til": 826, "findutil": 826, "pression": 826, "print0": 826, "keystrok": 826, "noob": [826, 987], "pos1": 826, "misconfigur": 826, "esc": 826, "freak": 826, "cvsserver": 826, "gitview": 826, "oesterreich": 826, "clearanc": 826, "e7d76d19": 826, "dd3d": 826, "4d52": 826, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 826, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 826, "gif": [826, 1077], "einkommensteuerbescheid1": 826, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 826, "einkommensteuervorauszahlungsbescheid1": 826, "immobilienbewertung": 826, "etw": 826, "confirm": 826, "ova": 826, "umsatzsteuerbescheid1": [826, 848, 849], "h0020211105124337": 826, "vk9vst311192021_0022021": 826, "img_": 828, "jpg": 828, "bilder": 828, "121751": 829, "op": [829, 1015], "garbage1": [830, 831, 833, 837, 838], "garbage2": [830, 831, 833, 837, 838], "diretori": 832, "sweetheart": [832, 838, 845, 919], "citi": 832, "mqueue": [841, 933], "leavel": 845, "hintingx": 848, "1048576": 848, "drwx": [848, 850], "36817": 848, "umsatzsteuerbescheid": 849, "finanzamt": 849, "abgab": 849, "neighbor": [850, 1071], "enat": 851, "dereferenzieren": 853, "50k": [853, 854], "rekursiv": 854, "eintr\u00e4g": 854, "unterhalb": 854, "gefiltert": 854, "un\u00fcblich": 854, "gebr\u00e4uchlich": 854, "geh\u00f6ren": 854, "mmin": 854, "h\u00f6chsten": 854, "gefundenem": 854, "eintrag": 854, "heissen": 854, "beginnen": 854, "versteht": 854, "vergessen": 854, "j\u00fcnger": 854, "verkn\u00fcpft": 854, "metacharact": [854, 873], "gr\u00f6\u00dfer": 854, "lobal": 855, "egular": 855, "xpression": 855, "rint": 855, "sed": [855, 1122, 1129], "tream": 855, "itor": 855, "verb": 855, "insensit": [855, 1088], "entor": 855, "perlr": 855, "perlretut": 855, "perlrequick": 855, "jeffrei": 855, "friedl": 855, "philosopi": 859, "toether": 859, "hc": 859, "325324": 859, "xarg": 859, "bitbak": 861, "behan": 861, "webster": 861, "drone": 863, "electronic speed control": 863, "vehicl": 863, "rack": 863, "recognit": [863, 1071], "flight": 863, "wire": [863, 873, 952], "fritz": [863, 871], "brigh": 863, "heinrich": 863, "pwmchip0": [863, 871], "pwm0": [863, 871], "duty_cycl": [863, 871], "polar": 863, "uevent": [863, 870, 871, 872, 906], "puls": [863, 1122, 1129], "cheapest": 863, "quicrun": 863, "16bl30": 863, "brake": 863, "voltag": [863, 870], "11v": 863, "conclud": [863, 871], "lipo": 863, "madli": 863, "transmitt": 863, "throttl": 863, "neutral": [863, 1073], "chop": 863, "kindli": [863, 1077], "mechatron": 863, "50hz": 863, "duti": [863, 871], "nanosecond": [863, 871, 890], "20000000": [863, 974], "oscil": 863, "10bl60": 863, "000n": 863, "1500000": [863, 928], "2000000": 863, "1550000": 863, "1600000": 863, "acceler": 863, "1650000": 863, "1700000": 863, "1750000": 863, "1800000": 863, "1850000": 863, "1900000": 863, "1950000": 863, "logist": [863, 1071], "hobbi": 863, "can bu": [864, 865, 866, 867], "sinowatz": [864, 964], "donat": 864, "volkswagen": 864, "traffic": 864, "octet": 864, "arbitr": 864, "can_fram": [864, 866], "canid_t": [864, 866], "can_id": [864, 866], "eff": [864, 866], "rtr": [864, 866], "__u8": [864, 866], "can_dlc": [864, 866], "__attribute__": [864, 866], "can0": [865, 866], "noarp": 865, "qdisc": 865, "qlen": 865, "bitrat": 865, "relic": 865, "cansend": 865, "candump": 865, "canplay": 865, "cangen": 865, "snif": 865, "loopback": 865, "pf_can": 866, "sockaddr_can": 866, "sock_raw": 866, "can_raw": 866, "ifr_nam": 866, "siocgifindex": 866, "can_famili": 866, "af_can": 866, "can_ifindex": 866, "ifr_ifindex": 866, "sockaddr": [866, 889], "can_socket": 866, "packt": 866, "frame_layout": 866, "ib3x8": 866, "frame_s": 866, "calcsiz": 866, "recvfrom": 866, "sendto": 866, "lnxpp": 867, "can2udp": 867, "openwrt": 867, "asymmetrisch": 867, "mosi": 867, "miso": 867, "sclk": 867, "broadcom": 867, "ce0": 867, "3v": [867, 870], "5v": [867, 870], "transceiv": 867, "inter intergrated circuit": 870, "lm-sensor": 870, "handwork": [870, 872], "texa": 870, "maker": 870, "dtparam": [870, 871, 872], "i2c_arm": [870, 871, 872], "gpio2": 870, "gpio3": 870, "i2c_bcm2835": [870, 871, 872], "fe804000": [870, 872, 906], "i2c_dev": [870, 871], "sot": 870, "7v": 870, "rail": 870, "capacitor": 870, "idc": 870, "gnd": [870, 872], "vdd": 870, "smbdat": 870, "smbclk": 870, "unconnect": 870, "0x49": 870, "0x4a": 870, "jumper": 870, "3v3": [870, 872], "scl": [870, 872], "probl": 870, "i2c_slav": 870, "0x0703": 870, "o_rdwr": [870, 892, 899, 933], "msb_lsb": 870, "msb": 870, "lsb": [870, 941], "65535": 870, "dev_fd": 870, "perror": [870, 884, 888, 889, 890, 896, 897, 898, 899, 904, 907, 924, 930, 933, 937], "libncurs": 870, "bcm2711_defconfig": 870, "prebuilt": 870, "v7l": 870, "semiconductor": 870, "j4": 870, "kernel7l": 870, "new_devic": [870, 872], "0048": 870, "modalia": 870, "preinstal": 870, "hwmon0": 870, "thermal": 870, "thermal_zone0": 870, "hwmon1": [870, 872], "hwmon2": 870, "temp1_input": [870, 872], "temp1_max": 870, "temp1_max_alarm": 870, "temp1_min": 870, "temp1_min_alarm": 870, "update_interv": 870, "milli": [870, 872], "22000": 870, "randomli": [870, 872], "nomenclatur": 870, "pulse width modul": 871, "resistor": 871, "bright": 871, "potentiomet": [113, 871], "ssop": 871, "ground": [113, 871, 872], "0b1000000": 871, "buse": [871, 872], "i2cdetect": [871, 872], "charactr": 871, "pca": 871, "simultan": [871, 937], "peculiar": 871, "pca9685a": 871, "nxp": 871, "dtoverlai": [871, 872], "pwm_pca9685": 871, "regmap_i2c": 871, "3f804000": 871, "0040": [871, 906], "butt": [871, 952], "npwm": 871, "unexport": [871, 906], "intercept": [871, 963], "dim": 871, "300000": [871, 1069], "fade": 871, "800000": [871, 1069], "600000": [871, 1069], "50000": 871, "apolog": 871, "kenel": 871, "devlop": 871, "pleasur": 871, "cornerston": 872, "unstabl": 872, "parasit": 872, "bitbang": 872, "gpiopin": 872, "profession": 872, "addon": 872, "pinout": 872, "01144fe43baa": 872, "w1_bus_master8": 872, "w1_bus_master1": 872, "breadboard": [872, 1122, 1129], "amaz": 872, "400000000000": 872, "800000000000": 872, "behalf": [872, 886, 940], "ad0": 872, "ad1": 872, "ad2": 872, "vcc": 872, "0x18": 872, "0b0011000": 872, "shortli": [872, 963], "execstart": 872, "36864": 872, "w1_bus_master2": 872, "w1_bus_master3": 872, "w1_bus_master4": 872, "w1_bus_master5": 872, "w1_bus_master6": 872, "w1_bus_master7": 872, "busno": 872, "abtract": 872, "prepackag": 872, "afford": 872, "alarm": [872, 936, 939], "conv_tim": 872, "w1_slave_driv": 872, "eeprom": 872, "ext_pow": 872, "w1_slave": 872, "22750": 872, "crc": 872, "rpi_volt": 872, "isa": 872, "in0": 872, "cpu_therm": 872, "temp1": 872, "w1_slave_temp": 872, "reliabl": 872, "radiou": 872, "disappear": 872, "0c4000000000": 872, "0x28": 872, "dalla": [872, 900], "02131d9920aa": 872, "5d": 872, "011432f138f9": 872, "misbehavior": 872, "instabl": 872, "pump": 872, "nuclear": 872, "plant": 872, "ssh-keygen": [873, 879], "password authent": [873, 879], "key based authent": [873, 879], "remote login": [873, 879], "unencrypt": 873, "rlogin": 873, "telnet": 873, "nsa": 873, "primarili": [873, 966, 1085], "sftp": 873, "portno": 873, "unabl": 873, "propaget": 873, "sha256sum": 874, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 874, "mitm": 879, "uncomfort": 879, "keygen": 879, "safeguard": 879, "unrespons": 880, "port forward": 881, "portforward": 881, "secure copi": [881, 882], "hmmm": 881, "whateer": 881, "mydocu": 882, "recus": 882, "mobil": 882, "bandwidth": 882, "mediat": 882, "realist": [287, 882], "descriptiotn": 882, "file system": 883, "network file system": 883, "smb": 883, "crawl": 883, "debianish": 883, "mountpoint": 883, "grant": 883, "idmap": 883, "errnum": 884, "strerror_r": 884, "buflen": 884, "cleanest": 884, "_r": 884, "reentrant": 884, "syscal": 886, "getaddrinfo": 886, "ri": 888, "nbytes_read": [888, 889, 890], "24608": 888, "1024root": 888, "nager": 888, "698nager": 888, "gatewai": 889, "peer": [889, 892], "netinet": 889, "af_inet": 889, "sock_stream": 889, "sockaddr_in": 889, "sin_famili": 889, "sin_port": 889, "inet_aton": 889, "sin_addr": 889, "ipproto_ip": 889, "sa_famili": 889, "inet_addr": 889, "10hallo": 889, "16thi": 889, "ong": 889, "14ong": 889, "timerfd_settim": 890, "itimerspec": [890, 924], "nasti": [891, 924], "ingenu": 892, "smae": 892, "o_append": 892, "o_cloexec": 892, "sigpip": [892, 938], "whenc": 892, "seek_cur": 892, "seek_end": 892, "occupi": [892, 894, 895], "status": 893, "srcfile": 893, "dstfile": 893, "1073741825": 894, "0k": 894, "texttt": 895, "dup2": 895, "oldfd": 895, "newfd": 895, "o_": 895, "bytes_to_writ": [896, 897, 899], "wxr": 896, "o_tmpfil": 896, "speci": 896, "pli": 896, "nread": [898, 904, 907, 930, 933, 937], "thats": [898, 899], "litter": 899, "misspel": 899, "24625": 900, "24562": 900, "pread": 902, "pwrite": 902, "readv": 902, "writev": 902, "uio": 902, "iovec": 902, "iov": 902, "iovcnt": 902, "preadv": 902, "pwritev": 902, "ftruncat": [902, 933, 934], "filedescriptor": 902, "gpio26": [904, 906, 907], "subtre": 906, "fe200000": 906, "gpiochip488": 906, "gpiochip504": 906, "active_low": 906, "fd_set": [907, 930], "exc_fd": 907, "fd_zero": [907, 930], "nreadi": 907, "fd_isset": [907, 930], "eek": 907, "intens": 908, "ppid": 908, "tid": 908, "tsd": 908, "spezif": 908, "_reentrant": 908, "lpthread": [908, 924, 943], "start_routin": 909, "pthread_exit": 909, "pthread_cancel": 909, "pthread_attr_setdetachst": 909, "detachst": 909, "pthread_create_detach": 909, "pthread_detach": 909, "pthread_self": 909, "pthread_equ": 909, "30650": 909, "13961": 909, "correl": 909, "gettid": 909, "pthread_mutexattr_t": [911, 927], "pthread_mutex_destroi": 911, "pthread_mutex_trylock": 911, "global_mutex": 911, "pthread_mutexattr_settyp": 911, "pthread_mutex_norm": 911, "pthread_mutex_errorcheck": 911, "pthread_mutex_recurs": 911, "pthread_mutex_default": 911, "pthread_cond_destroi": 913, "pthread_cond_broadcast": 913, "parlanc": 913, "set_autoreset_ev": 913, "ev": 913, "is_set": 913, "wait_autoreset_ev": 913, "acquiriert": 913, "autoreset": 913, "spuriou": 913, "woken": 913, "pthread_condattr_t": 913, "pthread_cond_initi": 913, "pthread_cond_timedwait": 913, "abstim": 913, "use_glob": 915, "pthread_once_t": 915, "global_onc": 915, "pthread_once_init": 915, "init_glob": 915, "pthread_onc": 915, "once_control": 915, "init_routin": 915, "pthread_key_cr": 915, "__thread": 915, "pthread_atfork": 916, "legales": 916, "lock_rac": 918, "succeed": [918, 1105], "foreground": [919, 972], "huh": 919, "paradox": 919, "setenv": 921, "putenv": 921, "unsetenv": 921, "clearenv": 921, "customvar": 921, "timesl": 922, "starv": 922, "throughput": 922, "sha1": [922, 925, 941], "voluntarili": [922, 925], "lrt": 924, "app_statu": 924, "tick_count": 924, "update_statu": 924, "sigact": [924, 937, 938], "sa_handl": [924, 937, 938], "sigrtmin": 924, "sigev": [924, 934], "sev": 924, "sigev_notifi": 924, "sigev_sign": 924, "sigev_signo": 924, "timer_t": 924, "tspec": 924, "nsec": 924, "timer_settim": 924, "diverg": 924, "show_statu": 924, "freerto": [924, 927], "syncron": 924, "update_status_func": 924, "initial_t": 924, "interval_t": 924, "show_status_func": 924, "update_task": 924, "show_task": 924, "231765": 924, "225819": 924, "5635": 924, "lwp": 924, "231766": 924, "231767": 924, "tracer": 924, "restart_syscal": 924, "clock_nanosleep": 924, "clock_realtim": 924, "500000000": 924, "033": 924, "7m": 924, "flash_func": 924, "is_revers": 924, "flash_task": 924, "flasher": 924, "indepen": 924, "toggl": 924, "fore": [924, 974], "particularli": 925, "suscept": 925, "renic": 926, "din": 926, "44300": 926, "echtzeitbetrieb": 926, "betrieb": 926, "rechensystem": 926, "verarbeitung": 926, "anfallend": 926, "st\u00e4ndig": 926, "derart": 926, "betriebsbereit": 926, "da\u00df": 926, "verarbeitungsergebniss": 926, "innerhalb": [926, 1135], "vorgegebenen": 926, "zeitspann": 926, "000014": 926, "013914m": 926, "91410827636698u": 926, "000002": [926, 928], "002382m": 926, "3820173632900326u": 926, "intrus": 926, "controversi": 926, "sched_oth": 927, "relinquish": 927, "sched_param": 927, "sched_getschedul": 927, "sched_prior": 927, "pthread_setschedparam": 927, "pthread_getschedparam": 927, "predefini": 927, "pthread_attr_setschedpolici": 927, "spoken": 927, "pthread_mutexattr_setprotocol": 927, "pthread_prio_inherit": 927, "pthread_prio_protect": 927, "risen": 927, "pthread_mutexattr_setprioceil": 927, "000105": 928, "105247m": 928, "24749755859354u": 928, "000015": 928, "014643m": 928, "64260525619006u": 928, "10m": [284, 928], "105u": 928, "000067": 928, "067263m": 928, "2626495361326u": 928, "000003": 928, "002883m": 928, "8827592917392217u": 928, "ondemand": 928, "governor": 928, "cpufreq": 928, "scaling_governor": 928, "cpuinfo_cur_freq": 928, "067036m": 928, "03615188598611u": 928, "000001": 928, "001257m": 928, "2571678380193383u": 928, "000065": 928, "065188m": 928, "188407897949u": 928, "002376m": 928, "3758434034066656u": 928, "001042": 928, "042438m": 928, "4375534057617u": 928, "000017": 928, "017123m": 928, "123423079175748u": 928, "000143": 928, "142646m": 928, "6458358764593u": 928, "000005": 928, "004995m": 928, "994855006705264u": 928, "_syse": 930, "exit_failur": 930, "consume_fd": 930, "random_fd": 930, "tty_fd": 930, "nfd": 930, "ttys4": 930, "in_fd": 930, "eof_detect": 930, "shm": [932, 933, 934], "099": 932, "sem": [932, 933, 934], "shared memori": 933, "message queu": 933, "mman": 933, "fstat": 933, "st_size": 933, "map_fail": 933, "shm_open": [933, 934], "tmpf": [933, 934], "resiz": 933, "4095": 933, "weigh": 933, "map_shar": 933, "counter_loc": 933, "sem_t": [933, 934], "sem_open": 933, "sem_fail": 933, "sem_wait": 933, "sem_post": 933, "mq_attr": [933, 934], "mq_maxmsg": [933, 934], "mq_msgsize": [933, 934], "mqd_t": [933, 934], "mq_open": 933, "mq_send": 933, "mq_receiv": 933, "shm_unlink": 934, "overtak": 934, "mq_overview": 934, "oflag": 934, "mq_flag": 934, "mqde": 934, "msg_ptr": 934, "msg_len": 934, "msg_prio": 934, "sevp": 934, "disturb": [934, 937], "elegantli": 934, "qsize": 934, "signo": 934, "notify_pid": 934, "goiven": 934, "sem_overview": 934, "sem_trywait": 934, "sem_timedwait": 934, "abs_timeout": 934, "shm_close": 934, "shm_overview": 934, "035": [936, 937], "051": [936, 937], "segv": [937, 938], "mortem": [937, 1063], "core_pattern": 937, "termination_handl": 937, "sigint": [937, 938], "sig_atomic_t": [937, 938], "term_act": 937, "alarm_handl": 937, "alarm_act": 937, "sigset_t": [937, 939], "termination_sign": 937, "sigemptyset": [937, 938], "sigaddset": [937, 938], "sigquit": 937, "sigprocmask": [937, 938], "sig_block": 937, "impolit": 937, "sig": [937, 938], "consume_pip": 937, "pipenam": 937, "puzzl": 937, "pthread_sigmask": [937, 938], "sigtstp": 938, "sigalrm": [938, 939], "sigchld": 938, "abnorm": 938, "sigabrt": 938, "sigsegv": 938, "sigbu": 938, "sigil": 938, "sigfp": 938, "unblock": 938, "oldset": 938, "sigpend": 938, "sigfillset": 938, "signum": 938, "sigdelset": 938, "sigismemb": 938, "sigsetop": 938, "recept": 938, "sa_mask": 938, "sa_flag": 938, "oldact": 938, "sig_ign": 938, "sig_dfl": 938, "sighandler_t": 938, "_exit": 938, "barebon": 939, "louder": 939, "stallman": 940, "risc": 940, "llvm": 940, "24360": 940, "hello_h": [940, 956, 958], "24416": 940, "linkabl": [940, 1076, 1132], "0000000000401040": 940, "_start": 940, "0000000000401000": 940, "_init": 940, "00000000004011b8": 940, "_fini": 940, "crt": 940, "crt1": 940, "crti": 940, "crtn": 940, "0000000000404000": 940, "_global_offset_table_": 940, "reloc": 940, "1762320": 940, "0000000000401126": 940, "1224008": 940, "greetdemo": 941, "cmake_system_nam": 941, "toolchain_base_dir": [941, 955], "cmake_c_compil": 941, "cmake_cxx_compil": 941, "find_xxx": 941, "cmake_find_root_path_mode_program": 941, "cmake_find_root_path_mode_librari": 941, "cmake_find_root_path_mode_includ": 941, "toolchian": 941, "cmake_toolchain_fil": 941, "libgreet": [941, 942, 948, 957, 958], "13921": [941, 942], "cmakecach": [941, 942], "26192": [941, 942], "27920": [941, 942], "8503": [941, 942], "eabi5": 941, "armhf": 941, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 941, "debug_info": 941, "armv7l": 943, "challeng": 943, "metadistribut": 943, "miniumum": 943, "realiti": 943, "rasberri": 945, "clickabout": 950, "workabl": 952, "tarbal": 952, "lastest": 952, "x86_64_arm": 952, "precompos": 952, "uncompress": 952, "73812": 952, "1107168": 952, "1481768": 952, "1968456": 952, "1091864": 952, "1030432": 952, "1221816": 952, "lynxbe": 954, "y3p9kn7mjei": 954, "cli": 954, "containerd": 954, "dockerhub": 954, "hub": 954, "sh_18_04": 954, "78683068": 954, "1292296": 954, "70mb": 955, "73018472": 955, "auxvec": 955, "bitsperlong": 955, "bpf_perf_ev": 955, "rapidli": 956, "phoni": [956, 957, 958], "origaniz": 957, "relink": 957, "0x2e20": 957, "vdso": 957, "0x00007fffe9fa7000": 957, "0x00007f75ca289000": 957, "0x00007f75ca46d000": 957, "r_x86_64_32": 957, "fpic": 957, "whom": 958, "hello_flex": 958, "hello_flexible_h": 958, "cq": 958, "lisp": 959, "create_f": 959, "print_it": [], "sytax": 960, "432x288": 960, "shutil": 961, "tarfil": 961, "temporarydirectori": 961, "tmpd": 961, "tarnam": 961, "expandvar": 961, "contrain": 961, "__enter__": 961, "__exit__": 961, "openforread": 961, "ipykernel_20884": 961, "2037535577": 961, "myprint": 961, "my_arg": [285, 961], "orig_print": 961, "exc_val": 961, "exc_tb": 961, "myarg": 961, "total_ord": 962, "ipykernel_20903": [], "2840657929": 962, "a_vari": 963, "fallback": [963, 983], "baseexceptiongroup": 963, "exceptiongroup": 963, "subtyp": 963, "maybe_fail": 963, "ipykernel_20922": 963, "104829323": 963, "lone": 963, "4008457068": 963, "mysubsystemerror": 963, "reallybaderror": 963, "someothererror": 963, "definitelybad": 963, "evenwors": 963, "collapsingtheworld": 963, "errorcod": 963, "__cached__": 964, "_frozen_importlib_extern": 964, "sourcefileload": 964, "0x7f903d721510": 964, "blindli": 964, "ansibl": 964, "matno": 964, "conffil": 964, "confcod": 964, "confdict": 964, "6741": 964, "object ori": [965, 1121], "keyword argu": 965, "starstararg": [965, 986], "for loop": 965, "iterator protocol": 965, "operator overload": 965, "drawn": 966, "cnt": 966, "inputrang": 966, "disgust": 966, "gentli": 966, "smarter": 966, "nolimit": 967, "fibo_numb": 967, "jerki": 967, "max_numb": 967, "satisfactori": 967, "python_1010_generators_yield": 967, "glossari": 968, "ipykernel_20944": 968, "4235178104": 968, "breadth": 968, "coverag": 970, "subnamespac": 971, "mysupermodul": 971, "mysuperfunct": 971, "subpackage1": 971, "module1": 971, "module2": 971, "subpackage2": 971, "disambigu": 971, "increment_background": [972, 974], "background_integ": 972, "foreground_integ": 972, "runn": 972, "backgroundincrement": 972, "uncool": 972, "14784035": 974, "quack": 976, "mockup": 976, "69299498603747": 976, "00606724933406": 976, "524346766886126": 976, "03566730123493": 976, "139889985749804": 976, "__next__": 976, "brokensensor": 976, "gettemperatur": 976, "ipykernel_20963": 976, "2792400554": 976, "71536506": 976, "152158437": 976, "1134347102": 976, "refect": 977, "ipykernel_20983": 977, "1242235954": 977, "4119786358": 977, "emp": 980, "add_employe": 980, "mgr": 980, "isold": [980, 981, 1081], "haubentauch": [980, 981, 984, 1081], "parentcl": 980, "funnili": 980, "make_child": 981, "parent1": 981, "parent2": 981, "vvv": 981, "father": 981, "vvvvvv": 981, "tabular": 982, "someclass": 982, "persons_from_csv": 982, "person_dict": 982, "operators object oriented program": 983, "behaivor": 983, "number2": 983, "int2": 983, "ipykernel_21075": 983, "3709071117": 983, "151628379": 983, "whistl": [983, 986], "symmetr": [983, 1013], "commut": 983, "452733317": 983, "summar": 983, "ipykernel_21111": 984, "2144392361": 984, "attrnam": 984, "meier": 984, "3124626440": 984, "1226798660": 984, "expicitli": 985, "0x7f280a4b33d0": 985, "my_print": [285, 986], "toolkit": 987, "marker": 989, "eighti": 989, "monti": 989, "incompat": [989, 995, 1003, 1014], "benevol": 989, "bdfl": [989, 1073], "overse": 989, "januari": 989, "dropbox": 989, "awk": 991, "knob": 992, "sensit": 994, "throughout": 994, "0o01234": 995, "14159265359": [995, 1009], "3e12": 995, "afterthought": 995, "\u00e4\u00f6\u00fc": 995, "xa4": 995, "xb6": 995, "xbc": 995, "xe4": 995, "compel": 995, "codebas": 995, "ancient": 995, "sequencish": 999, "sixtim": 999, "seen_sixey": 999, "blahblahblahblahblah": 1000, "aah": 1001, "a_list": 1001, "a_tupl": 1001, "hlow": 1001, "hlowrd": 1001, "straw": [1002, 1010], "heritag": 1003, "140294625429008": 1004, "140294625429040": 1004, "140294625429264": 1004, "140294315084416": 1004, "140294315293280": 1004, "ipykernel_21241": 1005, "723444260": 1005, "globvar": 1005, "nonloc": [284, 1005], "parameterizab": 1006, "ipykernel_21261": 1006, "3939188879": 1006, "3571579993": 1006, "program_exit": 1006, "exitstatu": 1006, "spam": [1008, 1071], "dec": 1008, "x58": 1008, "07d": 1009, "0x": 1009, "5x": 1009, "0x2f": 1009, "4x": 1009, "0x002f": 1009, "5o": 1009, "0o31": 1009, "04d": 1009, "0042": 1009, "05d": 1009, "00042": 1009, "thistl": 1010, "thorn": 1010, "ipykernel_21315": 1010, "677815794": 1010, "annoy": 1010, "sqn": 1011, "defval": 1012, "iterkei": 1012, "keyiter": 1012, "0x7ff2e8753418": 1012, "unord": 1013, "tunabl": 1014, "shoudn": 1014, "0x7fca2c785b70": 1015, "tof": 1015, "outputfilenam": 1016, "argumentpars": 1016, "add_argu": 1016, "parse_arg": 1016, "ou": 1016, "ylabel": [1018, 1069], "xmin": 1018, "xmax": 1018, "ymin": 1018, "ymax": 1018, "twine": 1019, "lotsa": [1019, 1093], "long_descript": 1019, "long_description_content_typ": 1019, "froniu": [], "rene": [], "allerstorf": [], "beta": 1019, "osi": 1019, "approv": 1019, "package_dir": 1019, "python_requir": 1019, "install_requir": 1019, "paho": [1019, 1080], "pyproject": 1019, "toml": 1019, "backend": 1019, "build_meta": 1019, "yadda": 1019, "sdist": 1019, "python_course_2022_11_07": 1019, "12549": 1019, "BE": 1019, "mydb": 1020, "hardli": 1021, "femal": 1026, "miracl": [1029, 1046], "previouslin": 1033, "ifi": 1046, "uniqifi": 1047, "sensor_const": 1052, "test_sensor_const": 1052, "ii": [1053, 1055, 1059, 1061, 1072], "user_record": [1054, 1056], "read_csv_head": [1054, 1061], "read_csv_nohead": [1056, 1060, 1061], "csvfilenam": 1058, "test_noheader_person": 1059, "read_noheader_person": 1059, "test_must_not_use_global_variables_as_return_object": 1059, "filename1": 1059, "noheader1": 1059, "filename2": 1059, "noheader2": 1059, "users1": 1059, "users2": 1059, "test_header_person": 1059, "read_header_person": 1059, "test_user_json_person": 1059, "userdb_json": [1059, 1060], "test_person_to_json": 1059, "joerg_sent": 1059, "to_json_person": 1059, "joerg_receiv": 1059, "from_json_person": 1059, "envis": [1060, 1119], "user_json": 1060, "to_json": 1060, "test_user_json": 1060, "test_user_to_json": 1060, "user_s": 1060, "json_user_s": 1060, "from_json": 1060, "test_nohead": 1061, "test_head": 1061, "lectur": [1063, 1133], "unsupervis": [1066, 1071], "conveyor": 1066, "belt": 1066, "linear_regress": [1067, 1070], "model_select": [1067, 1069], "train_test_split": [1067, 1069], "linear_model": [1067, 1069], "linearregress": [1067, 1069], "history_data": [1067, 1068, 1069, 1070], "inputfeatur": [1067, 1069], "outputfeatur": [1067, 1069], "input_train": [1067, 1069], "input_test": [1067, 1069], "output_train": [1067, 1069], "output_test": [1067, 1069], "test_siz": [1067, 1069], "output_predict": [1067, 1069], "visualcross": 1068, "york": [1068, 1069], "wind": [1068, 1069], "chill": [1068, 1069], "precipit": [1068, 1069], "snow": [1068, 1069], "gust": [1068, 1069], "humid": [1068, 1069], "rain": 1068, "cloudi": 1068, "995833": 1069, "688889": 1069, "287500": 1069, "327273": 1069, "012222": 1069, "690278": 1069, "470769": 1069, "369444": 1069, "513421": 1069, "946106": 1069, "574023": 1069, "313256": 1069, "994536": 1069, "070695": 1069, "025980": 1069, "302423": 1069, "214825": 1069, "665492": 1069, "900000": 1069, "700000": 1069, "090000": 1069, "050000": 1069, "377500": 1069, "750000": 1069, "950000": 1069, "650000": 1069, "330000": 1069, "325000": 1069, "850000": 1069, "425000": 1069, "825000": 1069, "715000": 1069, "470000": 1069, "970000": 1069, "multidimension": 1069, "xlabel": 1069, "coef_": 1069, "80189231": 1069, "intercept_": 1069, "95355086": 1069, "609608": 1069, "571879": 1069, "736988": 1069, "170933": 1069, "798254": 1069, "189739": 1069, "180394": 1069, "449230": 1069, "661530": 1069, "057745": 1069, "850176": 1069, "284120": 1069, "685067": 1069, "weather": [1070, 1071], "ndarrai": [1070, 1086], "splice": [1070, 1071], "cute": 1070, "paper": 1070, "aspir": [1070, 1098], "dilig": 1071, "bite": 1071, "forecast": 1071, "agi": 1071, "asi": 1071, "forest": 1071, "predictor": 1071, "accuraci": 1071, "classif": 1071, "unlabel": 1071, "reinforc": 1071, "reward": 1071, "bay": 1071, "sepp": 1072, "tupleunpack": 1072, "spell": 1072, "redundantli": 1072, "quotechar": 1072, "spreadsheet": 1072, "odbc": 1073, "mysql": 1073, "informix": 1073, "berkeleydb": 1073, "mongodb": 1073, "rollback": 1073, "initd": 1075, "psycopg": 1075, "libpq": 1075, "conninfo": 1075, "psycopg2": 1075, "localhost": [1075, 1080], "schwammerldb": 1075, "android": 1076, "schwammerln": 1076, "giftig": 1076, "geniessbar": 1076, "dbm": 1076, "steinpilz": 1076, "roehren": 1076, "speisetaeubl": 1076, "lamellen": 1076, "speitaeubl": 1076, "eierschwammerl": 1076, "teufelsroehrl": 1076, "overcod": 1077, "512119": 1077, "european": 1077, "steroid": 1077, "htmlhelp": 1077, "charset": 1077, "latin1": 1077, "chines": 1077, "enc": 1077, "0xfc": 1077, "0xdf": 1077, "0xf6": 1077, "\u00df": 1077, "cyril": 1077, "received_enc": 1077, "lg_enc": 1077, "bye_enc": 1077, "artificial intellig": 1078, "postgr": 1078, "mssql": 1078, "data sci": 1078, "ecosystem": 1078, "antp": 1080, "1883": 1080, "53767": 1080, "tcp6": 1080, "mosquitto_pub": 1080, "easiest": 1080, "message_receiv": 1080, "userdata": 1080, "on_messag": 1080, "loop_forev": 1080, "mosqitto_pub": 1080, "styrian": 1080, "esp": 1080, "666608091972": 1081, "ignore_index": 1081, "new_person": 1081, "saskia": 1081, "456710042003": 1081, "irrevers": 1082, "ipykernel_21693": [], "3315724720": 1085, "maybe_cal": [1085, 1086], "apply_if_cal": [1085, 1086], "_getitem_axi": [1085, 1086], "_is_scalar_access": [1085, 1086], "1519": 1085, "_validate_integ": 1085, "1521": 1085, "_ix": 1085, "len_axi": 1085, "_get_axi": 1085, "1451": 1085, "1453": 1085, "rangeindex": 1086, "get_loc": 1086, "toler": 1086, "3621": 1086, "casted_kei": 1086, "_lib": 1086, "pyx": 1086, "indexengin": 1086, "hashtable_class_help": 1086, "pxi": 1086, "pyobjecthasht": 1086, "get_item": 1086, "ipykernel_21718": [], "1471010945": 1086, "thru": 1086, "1201": 1086, "_validate_kei": 1086, "_get_label": 1086, "1203": 1086, "_get_slice_axi": 1086, "slice_obj": 1086, "1151": 1086, "5667": 1086, "1153": 1086, "1155": 1086, "_handle_lowerdim_multi_index_axis0": 1086, "tup": 1086, "drop_level": 1086, "new_index": 1086, "3875": 1086, "3877": 1086, "3623": 1086, "3625": 1086, "listlik": 1086, "_check_indexing_error": 1086, "sort_index": 1086, "multiindex": 1086, "contrari": 1087, "lower_email": 1088, "rentner": 1088, "is_palindrom": 1088, "facto": [1089, 1114], "subel": 1089, "attrib": 1089, "getroot": 1089, "examtop": 1091, "package manag": 1092, "project manag": [1092, 1120], "unit test": 1092, "virtual environ": 1092, "affin": 1092, "witch": 1093, "gnore": 1093, "ackup": 1093, "bort": 1093, "cert": 1093, "pem": 1093, "pythonhost": 1093, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1093, "cp38": 1093, "manylinux2010_x86_64": 1093, "ext": 1093, "argcomplet": 1093, "asn1crypto": 1093, "ensurepip": [1094, 1100], "test_project": 1098, "test_soup": 1098, "test_task": 1098, "stringent": 1098, "discoveri": 1098, "syndrom": [1098, 1099, 1105], "test_person_point": 1098, "deselect": 1098, "tweak": 1098, "test_": 1098, "test_simpl": 1098, "test_trivi": 1098, "test_trivial_but_fail": 1098, "___________________________": 1098, "____________________________": 1098, "test_stat": 1098, "implementation_point": 1098, "implementor1": 1098, "implementor2": 1098, "documentation_point": 1098, "integration_point": 1098, "implementation_perc": 1098, "documentation_perc": 1098, "integration_perc": 1098, "total_perc": 1098, "total_point": 1098, "gathered_point": 1098, "test_another_task_aspect": 1098, "pathlib": 1098, "test_ini_file_pars": 1098, "my_test_fil": 1098, "mytestcas": 1099, "runtest": 1099, "assertequ": 1099, "texttestrunn": 1099, "__db": 1099, "create_databas": 1099, "fill_test_data": 1099, "remove_databas": 1099, "testfeature1": 1099, "testfeature2": 1099, "testsuit": 1099, "addtest": 1099, "testload": 1099, "loadtestsfromtestcas": 1099, "testsometh": 1099, "failif": 1099, "failunless": 1099, "failunlessequ": 1099, "failifequ": 1099, "failunlessalmostequ": 1099, "failunlessrais": 1099, "env_dir": 1100, "my_venv": 1100, "csh": 1100, "easy_instal": 1100, "pip3": 1100, "powershel": 1100, "joblib": 1100, "threadpoolctl": 1100, "deactiv": 1100, "my_recreated_venv": 1100, "persuad": 1100, "will_fail": [1104, 1107], "initgoogletest": [1105, 1110], "run_all_test": [1105, 1110], "lgtest": [1105, 1107], "onesuit": 1105, "test1": 1105, "test2": 1105, "anothersuit": 1105, "postive_pattern": 1105, "negative_pattern": 1105, "gtest_list_test": 1105, "faildemo": 1105, "failisfat": 1105, "assertdemo": 1105, "assertisfat": 1105, "expect_": 1105, "expectdemo": 1105, "expectisnonfat": 1105, "expect_tru": 1105, "expect_eq": 1105, "0x58": 1105, "0x55": 1105, "assert_": 1106, "repoqueri": 1107, "dpkg": 1107, "listfil": 1107, "joergfaschingbau": 1107, "cmake_compiler_is_gnucc": 1107, "predef": [1109, 1110], "predefinedtestenviron": 1110, "paranoidtest": 1110, "untechn": 1110, "thefixtur": 1110, "testthatmodifiesst": 1110, "complexfixtur": 1110, "first_n": 1110, "sometest": 1110, "egal": 1112, "welcher": 1112, "schulungstyp": 1112, "problemlo": 1112, "verifiziert": 1112, "formlos": 1112, "anliegen": 1112, "umgehend": 1112, "setzen": 1112, "besprechen": 1112, "gestaltung": 1112, "schl\u00fcssigkeit": 1112, "chronologisch": 1112, "gehaltenen": 1112, "querzulesen": 1112, "roter": 1112, "faden": 1112, "ablaufen": 1112, "\u00e4nderungen": 1112, "kursgeschehen": 1112, "passieren": 1112, "detailliert": 1112, "kosten": 1112, "terminen": 1112, "inhouseschulungen": 1112, "buchenden": 1112, "terminisiert": 1112, "zustandekommt": 1112, "zeitlich": 1112, "\u00f6rtlich": 1112, "flexibel": [1112, 1113], "zul\u00e4sst": 1112, "besond": 1112, "onlineschulungen": 1112, "erwiesen": 1112, "dedizierten": 1112, "implementieren": [1112, 1117], "instruktionen": [1112, 1116], "datenschutzrichtlinien": 1112, "genug": 1112, "durchweg": 1112, "wahlweis": 1112, "offenen": 1112, "anmelden": 1112, "inhouseschulung": 1112, "exklusiv": 1112, "\u00fcblicherweis": 1112, "firmenstandort": 1112, "basteln": [1112, 1129], "schwierig": 1112, "z\u00fcgig": 1113, "uhr": 1113, "punktlandung": 1113, "mbr": 1113, "bootet": 1113, "nachs\u00e4tz": 1113, "wahllos": 1113, "reinen": [1113, 1129], "gebastelt": 1113, "leichtfertigerweis": 1113, "richtigerweis": 1113, "multilib": 1113, "ausgestattet": [1113, 1122, 1129, 1136], "l\u00e4uft": 1113, "seltsamerweis": 1113, "dar\u00fcber": 1113, "zeitersparnisgr\u00fcnden": 1113, "hinweggeholfen": 1113, "vorcompilierten": 1113, "statisch": [1113, 1131], "gelinkten": 1113, "christof": 1113, "sourcen": 1113, "crosszucompilieren": 1113, "gescheitert": 1113, "ungl\u00fccklichen": 1113, "umstand": 1113, "schulungsrechn": 1113, "neu": 1113, "aufzusetzen": 1113, "kompil": 1113, "verschwunden": 1113, "buildscript": 1113, "konnt": 1113, "kreativen": 1113, "wiederhergestellt": 1113, "v\u00f6llig": 1113, "sinnfrei": 1113, "distributionen": 1113, "compilieren": [1113, 1115], "architekturen": 1113, "versucht": [1113, 1114, 1116], "richtigen": 1113, "leben": [1113, 1129], "anzuwenden": 1113, "leut": 1113, "anzusehen": 1113, "wort": [1113, 1115], "gefallen": 1113, "hart": 1113, "garantien": 1113, "durchau": 1113, "gerechtfertigt": 1113, "gesch\u00fctz": 1113, "auffahren": 1113, "enthaltenen": 1113, "n\u00fctzen": 1113, "stichwort": [1113, 1122, 1129], "mittelweg": 1113, "diffundieren": 1113, "aufruft": 1113, "startet": 1113, "ausgekl\u00fcgelt": 1113, "funktionsweis": 1113, "jeher": 1113, "kennt": [1113, 1135], "gewaltig": 1113, "geschichtsbelastet": 1113, "tr\u00e4gt": 1113, "intelligent": [1113, 1122, 1129], "trotz": 1113, "behauptungen": 1113, "gar": 1113, "lieblingsseit": 1113, "linuxthemen": 1113, "zentrisch": 1113, "bourne shel": [1114, 1124], "\u00fcbel": 1114, "sprechen": [1114, 1122, 1129], "vollst\u00e4ndig": 1114, "shellprogrammierung": 1114, "ruf": 1114, "schmutzigen": 1114, "stattdessen": 1114, "hauch": 1114, "pervers": 1114, "\u00e4sthetik": 1114, "verpassen": 1114, "geschicht": 1114, "kram": 1114, "environmentvariablen": 1114, "kontrollkonstrukt": [1114, 1115], "hauptteil": 1114, "stringmanipul": 1114, "obskur": 1114, "konstrukt": [1114, 1124], "auskommt": 1114, "umgang": [1114, 1124], "vorausgesetzt": [1114, 1116, 1117, 1125, 1131, 1132, 1134, 1135], "bibel": 1115, "hinzuf\u00fcgen": 1115, "erfind": 1115, "tickt": 1115, "wozu": 1115, "grenzen": 1115, "vorlag": 1115, "didaktik": 1115, "erg\u00e4nzt": 1115, "kontext": 1115, "heutigen": 1115, "dienen": 1115, "sprachkern": 1115, "unterrichten": 1115, "standardlibrari": 1115, "zugunsten": 1115, "bequemeren": 1115, "verzichten": 1115, "sprachdesign": 1115, "geachtet": 1115, "isoliert": 1115, "abseit": [1115, 1117, 1135], "mitbringt": 1115, "h\u00e4lt": 1115, "eignet": 1115, "hervorragend": [1115, 1122, 1130, 1135], "systemprogrammierung": 1115, "weglassen": 1115, "programmiert": [1115, 1117], "dementsprechend": [1115, 1135], "sinngem\u00e4ss": 1115, "aufgeteilt": 1115, "manipulieren": [1115, 1124], "maschineninstruktionen": 1115, "ausgef\u00fchrt": [1115, 1116], "geschwindigkeitsvorteil": 1115, "interpretierten": 1115, "nachteil": 1115, "verst\u00e4ndni": [1115, 1124, 1134], "speicherverwaltung": [1115, 1117, 1132], "integral": 1115, "zusammengesetzt": 1115, "speicherlayout": 1115, "wenigst": 1115, "worin": 1115, "programmstrukturierung": 1115, "deklar": 1115, "beliebtest": 1115, "unmeng": 1115, "flexibilit\u00e4t": [1115, 1132], "einbringen": 1115, "unbeliebtest": 1115, "fehlerm\u00f6glichkeiten": 1115, "verkettet": 1115, "fehlerszenarien": [1115, 1135], "absturz": 1115, "dahinsiechen": 1115, "debugginghilfen": 1115, "typumwandlungen": 1115, "hauptkritikpunkt": 1115, "sorglos": 1115, "integertypen": 1115, "breit": [1115, 1122], "regelwerk": 1115, "historisch": 1115, "aufarbeitung": 1115, "historischem": 1115, "ballast": 1115, "compileroptionen": 1115, "pr\u00e4prozessor": [1115, 1116], "leid": 1115, "grundz\u00fcgen": 1115, "gezeigt": [1115, 1124, 1129], "compilierung": 1115, "heutzutag": 1115, "wegzudenken": [1115, 1122], "damal": [1115, 1117], "programmen": [1115, 1116, 1131], "separat": 1115, "verbinden": 1115, "spielt": 1115, "archivieren": 1115, "linken": 1115, "programmgesundheit": 1115, "bedeutungen": 1115, "optimierungsm\u00f6glichkeiten": 1115, "memoryfehlern": 1115, "verwalten": 1115, "formatiert": 1115, "_und_": 1115, "komfort": 1115, "m\u00e4chtige": [1115, 1132], "jedoch": [1115, 1122, 1129, 1135], "weit": 1115, "fehlerimmunit\u00e4t": 1115, "allein": 1115, "verdienen": 1115, "erw\u00e4hnung": 1115, "stringbearbeitung": 1115, "heutig": 1115, "eigenwillig": 1115, "f\u00fclle": 1115, "erleichtern": 1115, "lauern": [1115, 1134], "gefahren": [1115, 1134, 1135], "sprachumfang": 1116, "angeht": 1116, "compiliert": 1116, "maschinencod": 1116, "pointern": 1116, "sofort": 1116, "beipflichten": 1116, "einmal": [1116, 1131, 1132, 1136], "beinharten": 1116, "typenkonvertierungen": 1116, "aufgesessen": 1116, "beleuchtet": [1116, 1134], "beschrittenen": 1116, "dunklen": 1116, "ecken": 1116, "widmet": 1116, "intensiv": 1116, "fehlersuch": 1116, "erkl\u00e4rungen": 1116, "sprachdefinit": 1116, "greifbar": 1116, "verdacht": 1116, "manch": 1116, "typkonversionen": 1116, "l\u00fccken": 1116, "typensystem": [1116, 1117], "techniken": [1116, 1122], "typensicherheit": 1116, "dunkl": 1116, "unn\u00f6tig": 1116, "programmhygien": 1116, "wege": 1116, "sauberen": 1116, "weisen": 1116, "optimierungstechniken": 1116, "anwenden": 1116, "optimierung": 1116, "erschweren": 1116, "lesbarkeit": 1116, "memoryzugriff": 1116, "ur": 1116, "beziehungsweis": 1116, "hardwareunterst\u00fctzung": 1116, "Ins": 1116, "kenntniss": [1116, 1117, 1125, 1131, 1132, 1134, 1135], "urspr\u00fcnglich": 1117, "erfunden": 1117, "leichter": 1117, "handhabbar": 1117, "erm\u00f6glichen": [1117, 1132], "ressourcenverwaltung": 1117, "kontrolliert": 1117, "mainstream": 1117, "einzug": 1117, "hie\u00df": 1117, "treffend": 1117, "seitdem": 1117, "vereinzelt": 1117, "soviel": 1117, "dampflokomot": 1117, "stellt": [1117, 1135], "vielfalt": 1117, "sprachkonstrukt": 1117, "genial": 1117, "gewagt": 1117, "behaupten": 1117, "anbelangt": 1117, "sprachmittel": 1117, "wichtigst": 1117, "n\u00e4mlich": 1117, "reichlich": [1117, 1122, 1129], "umstieg": 1117, "erw\u00e4gen": 1117, "embeddedbetriebssystem": 1117, "einsetzen": 1117, "vielerort": 1117, "m\u00f6glich": [1117, 1122], "datenkapselung": 1117, "objekten": 1117, "fallstrick": 1117, "korrektheit": 1117, "100ste": 1117, "strukturiert": 1117, "fehlerbehandlung": 1117, "generisch": 1117, "mechanismen": [1117, 1132, 1134, 1136], "mehrfachvererbung": 1117, "teilweis": 1117, "kapiteln": 1117, "unterschied": 1117, "erl\u00e4utert": [1117, 1122], "c++ 11": 1118, "enjoy": 1118, "overrrid": 1118, "coolest": 1118, "optinion": 1118, "oneshot": 1118, "communict": 1118, "unlearn": 1118, "inventor": 1119, "weren": 1120, "intricaci": 1120, "interdepend": 1120, "rudimentari": 1120, "graviti": 1121, "vocabulari": 1121, "confront": 1121, "reusab": 1121, "nicknam": 1121, "zentrum": [1122, 1129], "vollwertig": 1122, "selben": 1122, "betriessystemkonzept": 1122, "jahrzehnten": 1122, "bew\u00e4hrt": 1122, "automot": 1122, "sektor": 1122, "vertreten": 1122, "altbew\u00e4hrten": 1122, "konsequ": [1122, 1132], "ausbaut": 1122, "hardwareschnittstellen": 1122, "echtzeitf\u00e4higkeit": 1122, "dahint": 1122, "rundet": 1122, "hardwarebastelworkshop": 1122, "embeddedprogrammier": [1122, 1129], "l\u00e4nger": [1122, 1129], "normalen": [1122, 1129], "dateisystem": [1122, 1129], "versagt": [1122, 1129], "teuer": [1122, 1129], "erkauft": [1122, 1129], "elektronik": [1122, 1129], "testen": [1122, 1129, 1136], "hostsoftwar": [1122, 1129], "architekten": [1122, 1129], "plattformzusammensetzung": [1122, 1129], "entscheiden": [1122, 1129, 1136], "rechtfertigen": [1122, 1129], "logik": [1122, 1129], "steck": [1122, 1129], "beantworten": [1122, 1129, 1136], "eingeladen": [1122, 1129], "l\u00f6tmateri": [1122, 1129], "mitzubringen": [1122, 1129], "bastelei": 1122, "erfolgt": 1122, "vorhandenen": [1122, 1129, 1136], "minicomputern": 1122, "prototypen": 1122, "desktopbetriebssystem": [1122, 1129], "verh\u00e4ltniss": [1122, 1129], "512mb": [1122, 1129], "m\u00fchsam": [1122, 1129], "produktivsystem": [1122, 1129], "ohnehin": [1122, 1129], "unangebracht": [1122, 1129], "anf\u00e4ng": [1122, 1129], "filesystemen": [1122, 1129], "durchzuf\u00fchren": 1122, "filedeskriptoren": [1122, 1124], "getrennt": 1122, "abl\u00e4uf": 1122, "adressraum": 1122, "sorgfalt": 1122, "bloss": 1122, "gef\u00e4chert": 1122, "gewissen": 1122, "szenarien": 1122, "steuerungen": 1122, "gef\u00e4hrlich": 1122, "umfangreich": 1122, "hauptthema": 1122, "dennoch": 1122, "n\u00fctzlich": 1122, "haub": 1122, "schalten": [1122, 1129], "ausg\u00e4ngen": [1122, 1129], "abfragen": [1122, 1129], "eing\u00e4ngen": [1122, 1129], "sowohl": [1122, 1129], "dumm": [1122, 1129], "ereignisgesteuert": [1122, 1129], "mikrocontrollern": [1122, 1129], "aufgaben": [1122, 1129], "temperaturmessung": [1122, 1129], "expandierung": [1122, 1129], "ausgelagert": [1122, 1129, 1132], "dediziert": [1122, 1129], "angesteuert": [1122, 1129], "gegeben": [1122, 1129, 1131, 1132], "driverframework": 1122, "netzwerkstack": [1122, 1129], "einpasst": [1122, 1129], "schnittstellen": [1122, 1132], "implementationssprachen": 1122, "hardwareerfahrung": [1122, 1129], "linux kernel": 1123, "kernel driv": [1123, 1133], "wait queu": 1123, "block devic": 1123, "interrupt handl": 1123, "dose": 1123, "curios": 1123, "userpac": 1123, "massiv": 1123, "vital": 1123, "einblick": 1124, "gingen": 1124, "vieler": 1124, "demosess": 1124, "vertrackt": 1124, "entmystifiziert": 1124, "gef\u00fcrchteten": 1124, "erlernt": 1124, "inbetriebsetz": 1124, "hardwareingenieur": 1124, "angehend": 1124, "administratoren": 1124, "editieren": 1124, "bl\u00e4ttern": 1124, "textdateien": 1124, "schnittstel": 1124, "kombinationen": 1124, "kombin": 1124, "abschweifen": 1124, "programmierkenntniss": 1124, "zwingend": [1124, 1131], "make gnu": 1125, "gnu mak": 1125, "build manag": 1125, "seiner": [1125, 1132, 1136], "m\u00e4chtigen": 1125, "daran": 1125, "wendet": 1125, "interessiert": 1125, "gr\u00f6\u00dfere": 1125, "gebaut": 1125, "komplizierten": 1125, "griff": 1125, "regeln": 1125, "selbstdefiniert": 1125, "gewiss": [1125, 1130, 1132], "fertigkeit": 1125, "hemmenhofen": 1129, "gleichnamigen": 1129, "gerufen": 1129, "produktivem": 1129, "n\u00e4herzubringen": 1129, "spielekonsumenten": 1129, "kinder": 1129, "enden": 1129, "erstem": 1129, "breiteren": 1129, "drauf": 1129, "vorhandensein": 1129, "basisinfrastruktur": 1129, "vielem": 1129, "hervorragenden": 1129, "gestandenen": 1129, "obwohl": [1129, 1132], "sprachunabh\u00e4ngig": 1129, "brauchen": 1129, "computerspielen": 1129, "spielerischen": 1129, "f\u00fchren": 1129, "w\u00e4hlt": 1129, "lm": 1129, "netzwerkprotokol": [1129, 1135], "behaupt": 1130, "allen": 1130, "gro\u00dfkopferten": 1130, "kommerziellen": 1130, "systemen": 1130, "perforc": 1130, "etabliert": 1130, "erh\u00e4ltlich": 1130, "nachfolg": 1130, "abgel\u00f6st": 1130, "prim\u00e4r": 1130, "publikum": 1130, "sekund\u00e4r": 1130, "versionieren": 1130, "arbeitsweis": 1130, "bereinigung": 1130, "strategien": 1130, "programmierern": 1130, "vertrautheit": 1130, "vorteil": [1130, 1131], "umsteig": 1131, "\u00e4rgerni": 1131, "schl\u00e4gt": 1131, "ausgekl\u00fcgeltst": 1131, "systemcal": [1131, 1132, 1135], "sogenannt": 1131, "inspizieren": 1131, "grundprinzip": [1131, 1135], "sammlung": [1131, 1132], "ausf\u00fchrbar": 1131, "bedient": 1131, "handhabung": 1131, "gew\u00f6hnungsbed\u00fcrftig": 1131, "filedescriptoren": 1131, "lowlevel": 1131, "tiefen": 1132, "steigen": 1132, "alltagsprogrammier": 1132, "normalerweis": 1132, "verborgen": 1132, "hochperformant": 1132, "anwendungen": 1132, "modernen": [1132, 1134], "bertriebssystemen": 1132, "sogenanntem": 1132, "virtuellen": 1132, "speicherbereich": 1132, "instanzen": 1132, "desselben": 1132, "hauptspeich": 1132, "speicherzugriff": 1132, "schutzmechanismen": 1132, "miteinand": 1132, "kommunizieren": [1132, 1135], "semaphoren": 1132, "steinalt": 1132, "\u00fcberlebt": 1132, "keinesweg": 1132, "fehlerfrei": 1132, "benutzen": 1132, "verpasst": 1132, "beruht": 1132, "ladbar": 1132, "ressourcenschonung": 1132, "wasserdichten": 1132, "upgradepfad": 1132, "grundkenntni": [1132, 1134, 1135], "memory manag": 1133, "tcp-ip": 1133, "unverst\u00e4ndlich": 1134, "ungeachtet": 1134, "effizient": 1134, "propagiert": 1134, "soliden": 1134, "unbedacht": 1134, "handeln": 1134, "lebenszyklu": 1134, "gestartet": 1134, "versuchung": 1134, "gewalt": 1134, "terminieren": 1134, "konsequenzen": 1134, "joinabl": 1134, "detach": 1134, "eigenschaften": 1134, "racecondit": 1134, "vermeidung": 1134, "\u00fcberal": 1134, "vermutet": 1134, "integeroperationen": 1134, "kommunikationsmechanismen": 1134, "werkzeugkasten": 1134, "kommunikationskan\u00e4l": 1134, "niemal": 1134, "reihen": 1134, "traditionellen": 1134, "aufgenommen": 1134, "codebasi": 1134, "verzweigt": 1134, "ansehnlich": 1134, "realtimef\u00e4higkeiten": 1134, "priorit\u00e4ten": 1134, "f\u00fcgt": 1135, "benutzend": 1135, "programmierparadigma": 1135, "dar": 1135, "beschr\u00e4nkt": 1135, "streamverbindungen": 1135, "verbindungsaufnahm": 1135, "datagramm": 1135, "verbindungslos": 1135, "adressfamilien": 1135, "auffassung": 1135, "adress": 1135, "endpoint": 1135, "nummern": 1135, "adressen": 1135, "verbindungen": 1135, "hilfsfunktionen": 1135, "adresskonvertierung": 1135, "ipv6": 1135, "\u00e4quivalent": 1135, "ungleich": 1135, "ressourcenschonend": 1135, "pfadnamen": 1135, "bedienbar": 1135, "mittlerweis": 1135, "eingepasst": 1135, "angenehm": 1135, "umzugehen": 1135, "widmen": 1135, "verbundenen": 1135, "auszusetzen": 1135, "reagiert": 1135, "gelesen": 1135, "eventgetrieben": 1135, "knopfdruck": 1136, "abnimmt": 1136, "zahlreichen": 1136, "abgeklopft": 1136, "angst": 1136, "kaputtmachen": 1136, "konstruktiv": 1136, "einfachheit": 1136, "klarzumachen": 1136, "umzusetzen": 1136, "anstatt": 1136, "auszustatten": 1136, "gedanken": 1136, "erkannt": 1136, "entscheidung": 1136, "verbockt": 1136, "softwareentwickl": 1136, "jedwed": 1136, "stabilen": 1136, "abliefern": 1136, "entscheidungstr\u00e4g": 1136, "vorgesetzt": 1136, "schl\u00fcssige": 1136, "kan\u00e4l": 1136, "etablieren": 1136, "unittestframework": 1136, "tragen": 1136, "schwerf\u00e4llig": 1136, "halben": 1136, "\u00fcbrige": 1136, "zurechtzufinden": 1136, "vortragend": 1136, "aufgrund": 1136, "aufwarten": 1136, "beibringen": 1136, "\u00fcppigen": 1136, "verbergen": 1136, "pr\u00e4ferierten": 1136, "vortragenden": 1136, "frozendict": [284, 285], "0x7f0b165fdf00": 285, "139685905188368": 285, "139685905188400": 285, "0x7f0b14487be0": 285, "fasschingbau": 285, "139685602274352": 285, "139685561461616": 285, "139685561690240": 285, "139685561316032": 285, "139685595970464": 285, "139685561151488": 285, "30000000": 285, "my_iter": 285, "aaarghhh": 286, "even_squar": 285, "squares_fun": 285, "squares_gen": 285, "0x7f0aefb94f20": 285, "0x7f0aefb955b0": 285, "squares_list": 285, "foobar": 285, "expresss": 286, "filesensor": 284, "csvsink": 284, "acquisitionloop": 284, "expr_str": 285, "sergei": 284, "millcelsiu": 284, "acquisition_loop_util": 284, "ont": 284, "write_measur": 284, "transmit": 284, "datatim": 284, "read_measur": 284, "fourier": 284, "fft": 284, "011": 284, "ifft": 284, "ipykernel_70222": 1085, "ipykernel_70250": 1086, "test_acquisition_loop": 284, "test_mock_csv_sink": 284, "mymockedth": 284, "create_print": 959, "print_blah": 959, "print_someth": 959, "ipykernel_80010": [], "ipykernel_80436": 962, "skiprow": 285, "hz2": 285, "hz3_5": 285, "000566": 285, "000729": 285, "132363": 285, "229977": 285, "260597": 285, "444942": 285, "385433": 285, "638212": 285, "502710": 285, "796519": 285, "936250": 285, "972326": 285, "974442": 285, "999992": 285, "995683": 285, "973719": 285, "999245": 285, "895850": 285, "985202": 285, "768778": 285, "arang": 285, "002": 285, "003": 285, "004": 285, "0x7f0ad44b8f70": 285, "0x7f0ad23371f0": 285, "aachen": 328, "herzogenrath": 328, "mocksensor": 113, "reusabl": 113, "ledstripedisplai": 113, "mockswitch": 113}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 826], "googl": 0, "map": [0, 7, 181, 186, 189, 192, 195, 211, 221, 285, 305, 501, 502, 530, 591, 592, 683, 684, 737, 883], "streetview": 0, "curriculum": [1, 72, 73], "vita": 1, "\u00fcber": [2, 166, 176, 181, 189, 197], "mich": [2, 183], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 130], "angebot": 5, "In": [5, 31, 44, 64, 138, 140, 141, 143, 173, 176, 237, 238, 240, 259, 261, 284, 291, 328, 419, 421, 427, 428, 489, 494, 496, 537, 541, 552, 553, 554, 555, 556, 557, 582, 639, 643, 647, 677, 678, 684, 697, 744, 793, 794, 801, 857, 907, 940, 942, 956, 963, 1004, 1118], "hous": 5, "schulungen": [5, 1112], "zu": [5, 23, 159, 176], "meiner": 5, "person": [5, 234, 448, 647], "schwerpunk": 5, "c": [5, 7, 66, 67, 68, 69, 70, 96, 106, 107, 109, 110, 112, 130, 144, 159, 160, 176, 186, 194, 195, 211, 236, 237, 238, 240, 241, 249, 258, 260, 291, 292, 293, 313, 319, 328, 337, 377, 378, 415, 422, 427, 434, 441, 483, 489, 500, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 545, 546, 550, 551, 552, 564, 570, 572, 617, 632, 634, 635, 636, 639, 640, 672, 673, 677, 684, 685, 693, 702, 707, 718, 866, 886, 904, 907, 1009, 1115, 1116, 1117, 1118, 1119, 1121], "python": [5, 8, 11, 58, 59, 61, 62, 89, 94, 126, 153, 156, 165, 166, 168, 169, 170, 172, 174, 176, 179, 181, 184, 190, 191, 193, 196, 198, 200, 203, 204, 205, 206, 207, 209, 210, 212, 215, 216, 219, 222, 224, 227, 229, 230, 231, 232, 233, 235, 237, 238, 240, 242, 243, 244, 245, 246, 247, 252, 254, 255, 259, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 310, 313, 315, 328, 635, 663, 677, 684, 866, 868, 965, 968, 972, 987, 988, 989, 991, 993, 995, 1003, 1014, 1017, 1062, 1063, 1064, 1077, 1078, 1080, 1090, 1092, 1093, 1094, 1095, 1126, 1127], "linux": [5, 78, 79, 80, 96, 109, 110, 112, 133, 138, 146, 148, 149, 151, 158, 173, 175, 180, 185, 239, 248, 249, 269, 270, 313, 315, 328, 330, 743, 795, 796, 799, 805, 862, 864, 868, 869, 870, 872, 885, 903, 926, 1113, 1123, 1124, 1131, 1132, 1133, 1134, 1135], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 58, 59, 61, 62, 77, 126, 128, 149, 185, 194, 238, 240, 248, 277, 280, 312, 418, 1063, 1120, 1123], "materi": [6, 24, 28, 30, 156, 158, 173, 194, 309, 324, 325, 329, 418, 1062, 1063, 1084], "einleitung": [7, 186], "datatyp": [7, 176, 181, 183, 186, 189, 198, 202, 205, 208, 213, 215, 221, 225, 228, 230, 231, 243, 245, 246, 252, 253, 255, 263, 265, 266, 267, 271, 272, 273, 283, 285, 287, 305, 333, 383, 386, 966, 995, 996, 1000], "number": [7, 186, 189, 192, 213, 225, 228, 305, 663, 722, 729, 730, 893, 967, 983, 986, 995, 1003, 1004, 1025, 1028, 1038, 1039, 1081, 1085, 1086, 1110], "integ": [7, 166, 176, 181, 186, 189, 213, 215, 225, 228, 234, 246, 253, 273, 285, 305, 351, 398, 403, 619, 974, 995, 1004], "string": [7, 152, 153, 159, 166, 176, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 230, 231, 234, 243, 246, 250, 253, 267, 273, 285, 302, 304, 305, 332, 345, 346, 352, 358, 422, 600, 601, 602, 615, 646, 647, 995, 1008, 1009, 1010, 1045, 1088, 1091], "compound": [7, 176, 186, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 263, 267, 273, 285, 386, 996], "list": [7, 11, 23, 152, 153, 166, 176, 183, 186, 189, 192, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 391, 422, 489, 513, 530, 544, 587, 635, 648, 685, 727, 754, 755, 756, 778, 848, 960, 963, 966, 967, 976, 996, 1004, 1011, 1040, 1041, 1091, 1093], "arrai": [7, 154, 176, 186, 332, 341, 345, 383, 385, 395, 408, 518, 570, 572, 580, 624, 639, 650, 689], "javascript": [7, 186, 225], "std": [7, 106, 186, 195, 211, 237, 238, 240, 291, 437, 496, 501, 502, 512, 530, 553, 554, 555, 556, 557, 565, 571, 572, 573, 574, 584, 591, 592, 602, 615, 628, 631, 635, 638, 640, 647, 683, 684, 685, 689, 691, 694, 695, 696, 698, 699, 704, 705, 706, 707, 709, 710, 711, 714, 717], "vector": [7, 106, 186, 496, 512, 530, 537, 553, 571, 572, 573, 574, 588, 631, 640, 685, 919], "java": [7, 186], "dictionari": [7, 152, 166, 176, 181, 183, 186, 189, 197, 198, 202, 205, 208, 213, 215, 218, 221, 225, 228, 231, 234, 243, 246, 253, 263, 267, 273, 285, 305, 960, 964, 977, 996, 1012, 1032, 1059], "kei": [7, 143, 186, 234, 305, 594, 595, 826, 877, 879], "valu": [7, 62, 171, 186, 257, 258, 305, 343, 399, 556, 904, 926, 997], "set": [7, 37, 62, 171, 176, 181, 186, 189, 197, 198, 202, 205, 208, 213, 215, 221, 225, 228, 231, 243, 246, 253, 263, 267, 273, 285, 822, 823, 938, 960, 996, 1013, 1051, 1076, 1086], "mathematisch": [7, 186], "mengen": [7, 176, 186], "while": [7, 153, 166, 176, 186, 205, 213, 215, 218, 221, 228, 231, 253, 368, 369, 764, 769, 770, 999, 1025, 1049], "function": [7, 42, 140, 153, 171, 176, 186, 189, 192, 195, 198, 202, 205, 213, 215, 221, 225, 230, 231, 234, 237, 238, 240, 242, 246, 253, 259, 267, 277, 278, 280, 283, 284, 285, 287, 291, 310, 343, 345, 350, 377, 379, 381, 382, 387, 419, 420, 479, 513, 537, 546, 551, 553, 558, 562, 578, 635, 642, 645, 646, 647, 648, 657, 687, 699, 700, 727, 728, 790, 884, 886, 924, 959, 961, 962, 964, 966, 967, 986, 1003, 1005, 1006, 1007, 1015, 1037, 1039, 1043, 1046, 1054, 1056, 1088], "basic": [8, 62, 69, 89, 132, 144, 153, 165, 170, 172, 173, 174, 175, 179, 180, 184, 185, 194, 203, 206, 209, 216, 222, 227, 230, 233, 239, 245, 248, 252, 255, 262, 265, 266, 267, 269, 270, 271, 272, 273, 274, 277, 280, 283, 284, 285, 287, 305, 328, 373, 377, 380, 386, 413, 420, 436, 437, 491, 494, 559, 564, 567, 570, 571, 573, 577, 580, 591, 597, 606, 642, 650, 684, 689, 693, 694, 695, 696, 717, 729, 730, 731, 792, 795, 796, 799, 809, 848, 859, 864, 873, 885, 892, 900, 908, 940, 962, 963, 1016, 1018, 1052, 1071, 1082, 1083, 1104, 1105, 1106, 1124, 1127], "2021": [8, 11, 111, 177, 179, 182, 184, 185, 187, 190, 193, 194, 195, 196, 200, 203, 205, 206, 208, 209, 211, 302, 303, 310, 313, 314, 315, 316, 317, 318, 319, 328], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 126, 130, 140, 149, 154, 169, 170, 172, 173, 174, 175, 177, 179, 180, 184, 187, 190, 193, 194, 195, 196, 200, 203, 212, 216, 219, 222, 224, 227, 230, 233, 242, 245, 252, 255, 329, 1063, 1069], "inform": [8, 38, 118, 128, 140, 165, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 184, 187, 190, 193, 194, 195, 196, 200, 203, 212, 216, 219, 222, 224, 227, 230, 233, 242, 245, 252, 255, 301, 310, 413, 697, 993, 1063], "\u00fcberblick": [8, 177, 187, 196, 212, 224, 1117], "log": [8, 104, 117, 134, 169, 170, 173, 174, 182, 184, 185, 187, 190, 194, 196, 200, 203, 212, 224, 233, 310, 323, 324, 793, 794, 801], "tag": [8, 160, 179, 183, 187, 190, 196, 212, 224, 225], "1": [8, 19, 23, 36, 72, 77, 96, 106, 112, 135, 138, 150, 158, 160, 165, 169, 170, 172, 173, 174, 176, 177, 179, 184, 185, 187, 190, 194, 195, 196, 200, 203, 206, 209, 212, 216, 224, 249, 252, 255, 258, 259, 260, 261, 262, 266, 270, 272, 277, 283, 284, 287, 309, 311, 312, 319, 326, 328, 331, 332, 333, 335, 339, 343, 352, 354, 355, 356, 357, 361, 362, 365, 368, 374, 375, 376, 377, 378, 381, 383, 387, 391, 393, 395, 398, 399, 400, 401, 403, 404, 406, 407, 413, 427, 437, 440, 442, 478, 540, 542, 549, 560, 563, 570, 572, 653, 658, 699, 704, 710, 713, 714, 725, 730, 737, 748, 758, 826, 865, 866, 872, 881, 895, 908, 909, 911, 913, 915, 916, 927, 934, 938, 941, 942, 958, 966, 971, 992, 994, 995, 1001, 1004, 1009, 1010, 1012, 1013, 1014, 1015, 1077, 1088, 1089, 1091, 1113], "2": [8, 19, 23, 36, 73, 77, 96, 106, 112, 135, 138, 160, 165, 166, 169, 170, 172, 173, 174, 176, 179, 183, 184, 185, 187, 190, 194, 195, 196, 200, 203, 205, 206, 209, 212, 216, 224, 249, 252, 255, 258, 259, 260, 261, 262, 266, 270, 277, 283, 284, 287, 324, 326, 328, 331, 332, 333, 335, 339, 343, 352, 354, 355, 356, 357, 361, 362, 365, 368, 374, 375, 377, 378, 381, 383, 387, 391, 393, 395, 398, 399, 400, 401, 403, 404, 406, 407, 413, 428, 437, 440, 442, 478, 527, 540, 542, 549, 560, 563, 570, 572, 654, 659, 699, 704, 710, 713, 714, 730, 737, 758, 826, 865, 866, 872, 881, 895, 908, 909, 911, 913, 915, 916, 927, 934, 938, 941, 942, 954, 958, 966, 971, 992, 994, 995, 1001, 1003, 1004, 1010, 1012, 1013, 1014, 1015, 1073, 1075, 1076, 1077, 1088, 1089, 1091], "live": [8, 41, 43, 44, 152, 155, 177, 187, 190, 200, 249, 535, 575, 576, 578, 579, 582, 583, 584, 596, 635, 646, 679, 680, 707, 709, 797, 823, 887, 905], "hack": [8, 41, 43, 44, 152, 155, 177, 187, 190, 200, 249, 252, 256, 259, 262, 535, 575, 576, 578, 579, 582, 583, 584, 596, 635, 646, 679, 680, 707, 709, 824, 905], "jupyt": [8, 9, 39, 177, 178, 182, 183, 184, 187, 188, 190, 191, 200, 201, 203, 204, 206, 207, 210, 212, 214, 217, 220, 223, 226, 229, 231, 232, 235, 244, 247, 250, 254, 263, 264, 268, 274, 279, 282, 285, 286, 289, 290, 305, 1069, 1070], "notebook": [8, 9, 39, 172, 177, 178, 182, 183, 184, 187, 188, 190, 191, 193, 200, 201, 203, 204, 206, 207, 208, 210, 212, 214, 217, 220, 223, 226, 229, 231, 232, 235, 244, 247, 250, 254, 263, 264, 268, 274, 279, 282, 285, 286, 289, 290, 305, 310, 1067, 1069, 1070], "link": [8, 23, 38, 117, 136, 154, 165, 168, 170, 172, 174, 177, 179, 184, 185, 187, 196, 200, 203, 206, 212, 219, 230, 233, 266, 272, 315, 317, 391, 393, 642, 656, 663, 681, 688, 692, 743, 754, 755, 805, 826, 847, 865, 872, 880, 956, 957, 988, 1018, 1019, 1064, 1080, 1082, 1083, 1085, 1086, 1087, 1088, 1096, 1101], "programmierung": [9, 11, 152, 177, 178, 187, 188, 196, 212, 214, 224, 226, 328], "grundlagen": [9, 11, 165, 176, 177, 178, 187, 188, 190, 191, 196, 200, 204, 207, 210, 212, 214, 224, 226, 229, 232, 235, 244, 247, 268, 328], "detail": [10, 77, 185, 189, 221, 228, 260, 305, 327, 403, 481, 571, 994], "content": [11, 24, 36, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 148, 157, 161, 162, 192, 312, 416, 518, 521, 527, 530, 536, 618, 695, 795, 815, 828, 834, 840, 843, 860, 868, 869, 876, 885, 901, 903, 905, 920, 930, 933, 947, 967, 1022, 1023, 1027, 1036, 1050, 1057, 1105, 1107, 1110, 1118, 1121, 1123], "anhand": [11, 176, 196, 212, 224, 328, 1124], "von": [11, 23, 147, 152, 156, 159, 166, 176, 183, 196, 197, 212, 224, 305, 328, 1124], "12": [11, 23, 44, 156, 175, 176, 180, 187, 195, 208, 209, 211, 242, 310, 315, 319, 321, 328, 1091], "und": [11, 23, 146, 150, 166, 176, 177, 181, 183, 187, 189, 192, 196, 212, 215, 221, 224, 228, 234, 311, 328, 353, 362, 1117, 1128], "13": [11, 23, 40, 44, 143, 165, 176, 177, 187, 240, 249, 252, 253, 255, 328], "4": [11, 23, 106, 135, 160, 169, 172, 176, 184, 185, 187, 190, 194, 195, 212, 224, 249, 319, 328, 333, 391, 395, 401, 437, 440, 542, 660, 966, 1091], "templat": [12, 194, 211, 260, 291, 500, 513, 514, 515, 516, 532, 533, 534, 562, 563, 564, 570, 603, 649, 652, 657, 659, 687], "descript": [12, 58, 61, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 448, 535, 543, 558, 561, 564, 600, 605, 614, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 633, 675, 676, 700, 708, 712, 716, 718, 860, 868, 869, 923], "sidebar": [12, 36], "metadata": [12, 237, 238, 240, 848], "about": [13, 106, 130, 149, 208, 213, 225, 243, 246, 252, 256, 273, 280, 430, 640, 677, 855, 956, 1008, 1011, 1012, 1013], "thi": [13, 31, 36, 117, 135, 140, 141, 143, 144, 154, 163, 549, 563, 678, 785, 864, 887, 940, 957, 964, 966], "site": [13, 28, 31, 117, 137, 139, 163], "licens": 13, "gplv3": 13, "github": [13, 113, 137, 139, 169, 170, 182, 190, 310, 478, 492, 1064], "sphinx": [13, 39, 65, 139], "instal": [13, 60, 136, 140, 144, 148, 161, 162, 165, 190, 194, 195, 275, 310, 315, 330, 425, 741, 883, 938, 949, 954, 955, 988, 1018, 1019, 1051, 1064, 1080, 1098, 1100, 1105, 1107, 1120], "instruct": [13, 394, 704, 911, 941, 958], "pip": [13, 266], "venv": [13, 266], "work": [13, 17, 64, 96, 112, 116, 121, 135, 169, 200, 238, 240, 257, 258, 259, 260, 317, 411, 412, 413, 492, 563, 717, 785, 786, 822, 825, 829, 954], "progress": [13, 17, 116], "more": [13, 135, 153, 166, 205, 208, 213, 221, 225, 228, 230, 242, 243, 245, 246, 249, 251, 252, 255, 261, 262, 265, 266, 271, 272, 273, 280, 283, 287, 310, 333, 339, 362, 378, 380, 394, 404, 420, 430, 432, 542, 552, 555, 562, 575, 581, 635, 677, 678, 682, 699, 774, 803, 804, 805, 809, 810, 855, 882, 924, 961, 963, 965, 1008, 1011, 1012, 1013, 1063, 1072, 1098, 1110], "opentrain": [14, 23], "draft": [15, 860, 1017], "topic": [15, 21, 72, 73, 97, 98, 100, 101, 102, 103, 129, 165, 169, 172, 193, 194, 195, 206, 211, 230, 233, 249, 252, 255, 258, 259, 283, 287, 291, 292, 300, 314, 318, 319, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 441, 484, 485, 486, 487, 488, 489, 490, 493, 535, 543, 558, 561, 564, 580, 586, 590, 598, 603, 605, 608, 614, 632, 633, 637, 644, 651, 662, 675, 676, 686, 691, 700, 708, 712, 716, 718, 719, 720, 743, 863, 878, 896, 898, 917, 923, 944, 950, 951, 966, 971, 979, 1017, 1066, 1070, 1074, 1078, 1080, 1084, 1097, 1103], "miscellan": [16, 115, 126, 130, 149, 153, 173, 202, 213, 215, 221, 231, 237, 238, 242, 246, 249, 258, 261, 262, 267, 272, 273, 283, 284, 287, 291, 513, 535, 614, 618, 649, 712, 902, 913, 915, 1010, 1078, 1091], "s5": [17, 18, 130], "integr": [17, 639, 655], "web": [17, 92, 93, 131], "slide": [17, 18, 30, 44, 153, 313, 325, 934, 938], "implement": [17, 221, 284, 296, 302, 442, 449, 459, 464, 474, 475, 476, 477, 481, 489, 494, 495, 539, 540, 545, 551, 553, 611, 635, 646, 724, 727, 746, 782, 961, 967, 983, 1042], "note": [17, 36, 60, 115, 148, 296, 435, 811], "todo": [17, 130, 159, 162, 173, 179, 297, 298, 299, 316, 418, 513, 514, 517, 520, 523, 526, 529, 532, 723, 727, 735, 767, 929, 932, 936, 1079, 1104, 1109], "test": [18, 36, 41, 42, 43, 44, 49, 70, 144, 165, 195, 219, 230, 233, 242, 251, 252, 255, 256, 257, 261, 262, 275, 277, 280, 283, 284, 287, 318, 324, 328, 419, 433, 442, 462, 478, 492, 494, 495, 555, 727, 746, 779, 871, 900, 952, 955, 1019, 1052, 1059, 1060, 1061, 1069, 1098, 1099, 1103, 1105, 1107, 1110, 1120, 1136], "level": [19, 407], "head": [19, 36, 754, 857, 1072], "imag": [19, 154, 173, 954], "screencast": [20, 127], "written": [21, 112, 538, 541], "new": [21, 129, 195, 211, 237, 238, 240, 291, 328, 481, 518, 634, 635, 675, 711, 746, 779, 1081], "write": [21, 41, 49, 57, 132, 481, 518, 545, 657, 672, 695, 724, 892, 899, 984, 1014, 1020, 1089], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 189, 197], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 96, 106, 112, 135, 160, 169, 170, 172, 173, 174, 175, 176, 179, 184, 185, 190, 194, 195, 196, 198, 200, 205, 206, 209, 212, 216, 224, 231, 249, 252, 255, 258, 260, 261, 262, 266, 270, 272, 283, 284, 285, 287, 328, 333, 383, 387, 391, 395, 401, 403, 404, 406, 407, 437, 440, 442, 478, 542, 655, 714, 895, 911, 915, 916, 966, 995, 1003, 1009, 1014, 1091], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 242, 328, 792], "anschlussf\u00f6rderung": 23, "die": [23, 52, 141, 159, 197, 1125], "besonder": [23, 176], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 160, 166, 176, 328, 1116], "da": [23, 156, 166, 183, 192, 225], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 135, 153, 160, 165, 166, 168, 176, 194, 195, 197, 249, 319, 328, 391, 401, 437, 440, 661, 793, 794, 1091], "l\u00f6sung": [23, 166], "beschreibung": 23, "der": [23, 176, 181, 197, 311, 328, 1113], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 176, 213, 231, 233, 496, 498, 499, 503, 591, 593, 594, 1000], "ein": [23, 166, 197, 1124, 1129], "nachhaltigen": 23, "impact": 23, "nach": [23, 233], "projektend": 23, "6": [23, 113, 176, 177, 197, 198, 231, 328, 391, 401, 437, 440, 1009, 1128], "umfeldanalys": 23, "wa": [23, 165, 181, 624], "ist": [23, 166], "stand": 23, "technik": 23, "method": [23, 189, 192, 202, 213, 215, 218, 221, 231, 246, 258, 267, 273, 285, 302, 304, 312, 491, 527, 539, 546, 547, 548, 551, 553, 555, 558, 610, 613, 621, 625, 693, 694, 695, 696, 697, 725, 760, 762, 776, 981, 983, 1009, 1010, 1011, 1099], "wissen": 23, "welch": 23, "ander": [23, 152, 311], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 141, 181, 197], "genannten": 23, "problemen": 23, "gibt": [23, 176], "e": [23, 410, 694], "schon": 23, "7": [23, 169, 176, 177, 197, 328, 391, 401, 1128], "alleinstellungsmerkm": 23, "8": [23, 176, 177, 196, 197, 328, 391, 401, 872, 1077, 1128], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 169, 170, 176, 177, 197, 328, 391, 401, 966, 1113, 1128], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 176, 202, 215, 228, 231, 246, 253, 267, 273, 285, 328, 1004], "projektbereich": 23, "angaben": 23, "zur": [23, 147, 166, 176], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 152, 197], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 184, 242, 272, 643], "risiken": 23, "erfolgskriterien": 23, "am": [23, 166, 225, 328], "angestrebt": 23, "jahr": 23, "10": [23, 44, 98, 99, 113, 119, 150, 153, 158, 169, 172, 176, 211, 212, 239, 240, 241, 242, 243, 257, 280, 281, 283, 284, 286, 310, 314, 315, 316, 320, 328, 391, 498, 793, 794], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 44, 113, 151, 156, 174, 175, 176, 205, 206, 211, 236, 240, 242, 245, 246, 280, 287, 288, 289, 290, 317, 318, 328, 391, 513, 636, 639, 672, 673, 684, 693, 718], "projekttermin": 23, "termin": [23, 797, 909, 972], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 181, 197], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 176], "finanziert": 23, "durch": [23, 166], "sonderprei": 23, "14": [23, 44, 156, 165, 176, 177, 180, 194, 236, 328, 1091], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 156, 165, 176, 328], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 183, 189], "haben": [23, 166], "sie": [23, 166], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 195, 219, 233, 245, 246, 328, 966, 1113], "datenschutz": 23, "screenplai": [24, 62, 295, 419, 515, 518, 521, 524, 527, 530, 533, 565, 566, 567, 568, 569, 572, 573, 574, 592, 593, 594, 595, 721, 724, 729, 734, 739, 741, 779, 782, 785, 930, 933, 937, 1005, 1093, 1100, 1105, 1107, 1110], "The": [24, 38, 42, 44, 60, 99, 131, 144, 176, 192, 195, 198, 205, 222, 231, 234, 249, 257, 259, 261, 267, 270, 277, 280, 283, 284, 287, 291, 331, 339, 340, 377, 378, 393, 400, 401, 410, 411, 415, 416, 425, 493, 494, 546, 570, 591, 592, 614, 634, 635, 643, 648, 650, 652, 677, 695, 698, 709, 762, 792, 801, 802, 809, 826, 829, 840, 843, 846, 848, 857, 859, 863, 879, 881, 883, 884, 886, 892, 900, 904, 919, 921, 928, 940, 942, 943, 952, 953, 961, 962, 964, 968, 972, 980, 983, 987, 989, 991, 998, 1003, 1009, 1051, 1072, 1079, 1088, 1099, 1120], "problem": [24, 375, 397, 420, 421, 429, 435, 436, 437, 440, 446, 493, 494, 636, 648, 652, 672, 673, 682, 698, 722, 756, 803, 822, 881, 883, 887, 942, 957, 958, 962, 976, 1071, 1094, 1101], "And": [24, 41, 60, 62, 144, 240, 243, 246, 249, 252, 257, 258, 259, 260, 261, 262, 267, 270, 272, 275, 277, 280, 283, 284, 287, 291, 351, 395, 419, 420, 422, 425, 426, 431, 432, 433, 439, 442, 448, 456, 457, 462, 470, 476, 491, 538, 539, 545, 550, 566, 570, 571, 572, 574, 592, 607, 608, 612, 615, 640, 646, 648, 650, 663, 680, 683, 684, 685, 687, 688, 693, 705, 707, 709, 714, 730, 788, 792, 793, 794, 798, 801, 807, 809, 845, 857, 859, 864, 868, 874, 875, 886, 899, 921, 949, 950, 952, 954, 955, 956, 957, 959, 964, 968, 969, 972, 976, 977, 978, 983, 984, 985, 986, 1050, 1051, 1052, 1060, 1072, 1077, 1082, 1083, 1085, 1086, 1087, 1098, 1120], "me": [24, 137, 898], "open": [24, 121, 146, 262, 445, 724, 725, 889, 892, 895, 897, 934, 961, 1014], "sourc": [24, 39, 136, 146, 162, 420, 438, 722, 725, 727, 730, 732, 735, 739, 744, 746, 756, 758, 766, 769, 774, 893, 942, 1019, 1077], "walk": [24, 249, 310], "through": [24, 249, 310], "us": [25, 26, 27, 28, 29, 30, 31, 37, 41, 134, 138, 140, 144, 154, 155, 161, 163, 173, 192, 194, 195, 208, 211, 336, 338, 341, 356, 371, 393, 403, 411, 412, 421, 423, 437, 440, 457, 478, 578, 602, 623, 631, 643, 647, 648, 684, 698, 709, 858, 870, 871, 872, 908, 924, 941, 942, 952, 953, 959, 961, 964, 967, 977, 986, 1093, 1099, 1100], "case": [25, 26, 27, 28, 29, 30, 194, 367, 371, 442, 504, 506, 509, 683, 684, 893, 897, 898, 899, 951, 959, 986, 1099, 1105], "custom": [25, 121, 124, 137, 300, 539, 540, 554, 560, 584, 638, 1086, 1088, 1105], "subtract": [25, 537], "known": [25, 132], "calcul": [26, 192, 360, 439, 984], "minimum": [26, 744], "durat": 26, "trainer": [27, 148], "editor": [27, 185], "end": [27, 649], "user": [27, 41, 45, 195, 197, 328, 541, 620, 625, 626, 627, 628, 629, 630, 730, 798, 799, 801, 802, 803, 811, 812, 823, 883, 963, 1053, 1055, 1057, 1058, 1060, 1093], "audienc": [27, 1120], "from": [28, 29, 37, 39, 41, 42, 44, 56, 99, 119, 125, 144, 154, 162, 163, 171, 211, 221, 249, 252, 257, 266, 284, 328, 346, 368, 374, 416, 419, 562, 565, 606, 615, 619, 645, 646, 685, 734, 739, 780, 785, 870, 882, 900, 924, 933, 940, 982, 1019, 1059, 1063, 1064, 1069, 1071, 1113], "other": [28, 37, 51, 192, 261, 273, 312, 643, 744, 766, 811, 971], "menu": 29, "choos": 29, "show": 30, "plain": [30, 578, 606, 607, 635], "text": [30, 270, 377, 853, 856, 859, 1014, 1089], "file": [30, 41, 47, 154, 156, 192, 202, 205, 221, 228, 230, 231, 245, 249, 253, 263, 265, 266, 267, 270, 271, 272, 301, 302, 317, 375, 419, 421, 427, 442, 521, 552, 724, 725, 726, 734, 766, 793, 794, 797, 815, 820, 821, 827, 828, 831, 832, 833, 841, 845, 848, 849, 853, 856, 858, 874, 882, 883, 887, 888, 892, 893, 894, 895, 896, 897, 898, 899, 901, 902, 906, 930, 934, 940, 941, 955, 961, 990, 1014, 1019, 1020, 1021, 1042, 1044, 1053, 1055, 1072, 1105], "emoji": 31, "code": [31, 40, 42, 44, 106, 163, 164, 166, 167, 190, 206, 259, 261, 262, 275, 328, 397, 407, 417, 418, 419, 421, 427, 428, 429, 434, 438, 514, 517, 520, 523, 526, 529, 532, 562, 647, 695, 727, 728, 732, 733, 734, 735, 736, 746, 747, 756, 757, 768, 769, 770, 774, 775, 898, 929, 932, 936, 956, 957, 958, 1059, 1060, 1061, 1064, 1067, 1070, 1077, 1090, 1100, 1104, 1109, 1120], "sphinxemoji": 31, "setup": [31, 62, 77, 108, 136, 140, 162, 169, 170, 172, 173, 174, 195, 245, 251, 252, 255, 258, 260, 262, 265, 266, 270, 271, 272, 433, 491, 493, 863, 871, 879, 890, 954, 955, 988, 1051, 1052, 1100, 1110], "most": [31, 37, 62, 650, 1093], "here": [31, 134, 442, 882], "all": [31, 37, 52, 62, 189, 192, 211, 257, 287, 328, 609, 635, 643, 678, 698, 785, 803, 940, 956, 974, 1062], "recip": 32, "isoamsa": 33, "txt": [33, 34, 35, 37], "ad": [33, 34, 35, 137, 956, 1081, 1088], "mathemat": [33, 34, 35], "symbol": [33, 34, 35, 337, 352, 413, 847, 940], "arrow": 33, "isoamsr": 34, "relat": [34, 149, 252, 255, 355], "isonum": 35, "binari": [35, 457, 1014], "oper": [35, 153, 166, 176, 189, 205, 208, 211, 218, 221, 225, 228, 242, 257, 277, 305, 339, 354, 355, 356, 359, 360, 362, 363, 368, 380, 491, 513, 538, 539, 545, 553, 593, 693, 701, 707, 724, 725, 726, 808, 887, 924, 983, 993, 995, 997, 1013, 1083, 1091], "layout": [36, 221, 386], "page": [36, 93, 137, 139, 737, 826, 858, 886], "admonit": 36, "i": [36, 44, 134, 135, 152, 192, 202, 208, 213, 218, 221, 228, 230, 231, 263, 267, 270, 272, 302, 314, 339, 365, 412, 418, 436, 491, 510, 537, 544, 606, 612, 613, 648, 650, 673, 677, 682, 685, 694, 698, 702, 706, 739, 750, 771, 786, 797, 801, 802, 807, 808, 809, 822, 832, 845, 872, 882, 883, 884, 887, 888, 889, 890, 891, 892, 895, 897, 899, 901, 902, 919, 922, 940, 957, 959, 964, 1014, 1071, 1085, 1091, 1110], "an": [36, 137, 208, 261, 276, 283, 287, 306, 310, 328, 424, 429, 539, 648, 663, 727, 845, 871, 882, 887, 924, 957, 968, 977, 1004, 1006, 1100, 1118], "tip": 36, "hint": [36, 459, 489], "import": [36, 144, 152, 192, 202, 211, 310, 544, 938, 963, 971, 1079], "attent": [36, 1006], "caution": [36, 613], "error": [36, 42, 144, 208, 261, 262, 283, 284, 287, 378, 403, 437, 559, 569, 570, 654, 657, 808, 872, 884, 893, 897, 898, 899, 976, 1032], "danger": [36, 345, 706, 823], "blech": 36, "titl": 36, "blah": 36, "kursdaten": [36, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "local": [36, 38, 96, 112, 115, 153, 176, 376, 408, 425, 446, 879, 882, 915, 942, 1005, 1100], "bleh": 36, "To": [36, 38, 41, 43, 52, 130, 228, 257, 441, 442, 457, 478, 604, 615, 635, 639, 648, 650, 652, 663, 677, 685, 693, 695, 697, 698, 709, 737, 778, 780, 793, 794, 874, 875, 882, 942, 952, 954, 959, 961, 962, 982, 983, 1060, 1081, 1082, 1088], "do": [36, 41, 130, 192, 234, 369, 406, 425, 436, 635, 756, 778, 793, 794, 809, 940], "mmlalia": 37, "mathml": 37, "alias": 37, "entiti": [37, 909], "restructuredtext": 38, "cheat": [38, 310], "sheet": [38, 310], "further": [38, 118, 157, 193, 194, 216, 301, 310, 407, 643, 697, 993], "document": [38, 139, 189, 205, 285, 305, 575, 576, 577, 578, 579, 581, 582, 583, 584, 587, 588, 591, 596, 730, 746, 748, 752, 754, 776, 780, 783, 793, 794, 797, 801, 808, 809, 810, 811, 826, 827, 828, 829, 845, 848, 849, 882, 884, 886, 888, 889, 890, 892, 895, 896, 897, 898, 899, 902, 940, 941, 992, 1016, 1026, 1089, 1098, 1105], "extern": [38, 275, 296, 374, 423, 552, 741, 742, 871, 957, 1027, 1120], "section": 38, "refer": [38, 130, 133, 176, 202, 205, 208, 215, 228, 231, 237, 238, 240, 243, 246, 250, 253, 258, 261, 267, 273, 285, 343, 381, 408, 550, 644, 647, 648, 650, 677, 678, 680, 689, 694, 696, 697, 714, 715, 773, 1004], "That": [38, 234, 237, 238, 240, 257, 284, 291, 382, 440, 537, 544, 635, 638, 648, 677, 695, 696, 766, 801, 872, 882, 887, 888, 891, 959, 986, 1107], "we": [38, 41, 44, 52, 417, 419, 756, 785, 952, 1105], "anoth": [38, 221, 417, 924, 956], "contain": [38, 211, 231, 257, 260, 513, 529, 530, 531, 570, 571, 585, 586, 589, 590, 591, 635, 639, 687, 754, 954], "abov": 38, "footnot": 38, "sphinxish": 39, "run": [39, 119, 138, 433, 492, 555, 774, 863, 888, 889, 890, 954, 955, 991, 1067, 1070, 1098], "seminar": 40, "clean": [40, 42, 44, 199, 259, 261, 262, 328, 418, 419], "2022": [40, 97, 98, 99, 100, 101, 102, 103, 211, 212, 213, 216, 219, 222, 224, 227, 230, 233, 236, 239, 240, 241, 242, 243, 245, 246, 320, 321, 322, 328], "04": [40, 103, 138, 211, 222, 224, 227, 260, 261, 262, 263, 264, 310, 328, 954], "agenda": [40, 169, 170, 172, 173, 174, 175, 180, 184, 185, 222, 227, 239, 248, 252, 255, 261, 265, 269, 271, 275, 277, 283, 287, 291, 323, 324, 1120], "timelin": 40, "befor": [41, 62, 121, 154, 277, 280, 693, 1105], "formal": [41, 339], "unit": [41, 42, 44, 70, 165, 195, 233, 242, 252, 255, 318, 478, 494, 555, 1052, 1103], "initi": [41, 202, 237, 238, 240, 291, 341, 353, 402, 489, 520, 521, 522, 537, 544, 555, 592, 615, 635, 637, 638, 639, 640, 684, 706, 760, 771, 783, 913, 915], "structur": [41, 42, 126, 130, 153, 216, 237, 238, 240, 242, 264, 275, 286, 290, 291, 371, 379, 386, 389, 395, 431, 478, 513, 684, 689, 709, 734, 762, 958, 971, 1098, 1105, 1120], "snippet": [41, 43, 49], "userdb": [41, 45, 48, 49, 54, 57, 194, 513, 627, 631], "bin": 41, "binaryfil": 41, "cpp": [41, 427, 478, 481, 653, 654, 655, 658, 659, 660, 661, 664, 665, 667, 668, 669, 670, 671], "extend": [41, 189, 555, 980], "read": [41, 48, 49, 57, 192, 199, 301, 302, 312, 346, 407, 419, 442, 643, 685, 724, 782, 888, 892, 898, 900, 1014, 1020, 1021, 1053, 1054, 1055, 1056, 1069, 1089], "iter": [41, 155, 166, 171, 176, 181, 183, 189, 192, 197, 198, 202, 205, 208, 213, 215, 218, 221, 230, 231, 242, 243, 245, 246, 252, 255, 259, 263, 265, 266, 267, 271, 272, 284, 285, 302, 570, 571, 594, 635, 663, 670, 683, 684, 685, 717, 754, 966, 968, 969, 970, 982, 1002, 1003, 1012], "bug": [41, 46, 52, 356, 521, 685], "faschingbau": [41, 137], "As": [41, 440, 457, 648, 687, 872, 906, 940, 977, 1107], "last": [41, 356, 377, 378, 407, 560, 563, 699, 916, 938, 1105], "name": [41, 42, 202, 205, 221, 350, 388, 546, 635, 766, 810, 828, 934, 1005, 1016], "wrap": [41, 165, 403, 635, 962], "up": [41, 135, 165, 199, 242, 260, 261, 283, 315, 403, 635, 977], "what": [41, 44, 48, 52, 140, 143, 208, 218, 365, 406, 417, 541, 610, 629, 635, 647, 648, 677, 698, 735, 756, 766, 782, 786, 801, 809, 827, 866, 879, 882, 883, 887, 888, 891, 895, 927, 940, 952, 956, 964, 968, 972, 1015, 1085, 1088], "have": [41, 44, 417, 756, 952, 957], "messag": [42, 133, 134, 416, 422, 914, 933, 934, 1080, 1105], "book": [42, 44, 180, 230, 272, 331, 416, 1064], "survei": [42, 417], "comment": [42, 189, 213, 228, 253, 305, 992, 1033], "format": [42, 49, 192, 198, 213, 273, 1009, 1061], "object": [42, 166, 171, 208, 215, 221, 225, 233, 234, 242, 245, 246, 258, 259, 261, 262, 265, 266, 271, 277, 278, 280, 283, 284, 287, 298, 417, 435, 440, 520, 521, 522, 537, 539, 542, 545, 547, 551, 553, 608, 610, 624, 639, 642, 645, 648, 694, 934, 957, 958, 963, 971, 977, 979, 981, 1015, 1082, 1086, 1091], "data": [42, 113, 153, 155, 181, 190, 216, 230, 233, 242, 266, 283, 284, 285, 287, 351, 395, 398, 419, 543, 547, 570, 689, 801, 915, 982, 1050, 1064, 1069, 1071], "handl": [42, 208, 211, 221, 233, 252, 255, 260, 261, 262, 283, 284, 287, 321, 429, 437, 559, 884, 963, 1016], "boundari": [42, 1077], "class": [42, 166, 192, 211, 215, 218, 221, 234, 242, 258, 263, 277, 280, 422, 440, 447, 448, 465, 466, 478, 481, 495, 514, 515, 516, 539, 546, 547, 552, 554, 555, 556, 557, 563, 578, 606, 607, 626, 635, 636, 638, 646, 647, 679, 693, 722, 962, 976, 977, 980, 981, 982, 983], "switch": [43, 113, 367, 399, 490], "googletest": [43, 161, 492, 1103], "git": [43, 76, 113, 115, 136, 144, 148, 190, 194, 195, 249, 310, 315, 328, 739, 1064], "submodul": 43, "establish": [43, 44, 955], "demo": [43, 251, 252, 259, 423, 442, 679, 694, 797, 823, 887, 922, 926], "straightforward": [43, 166], "main": [43, 384, 475, 476, 477, 956], "convers": [43, 189, 205, 213, 215, 221, 225, 228, 246, 257, 263, 267, 273, 285, 305, 356, 383, 607, 615, 995, 1009], "fix": [43, 136, 144, 237, 238, 240, 257, 291, 302, 545, 663, 709, 756, 757, 769, 770], "shortcom": 43, "softwar": [44, 162, 259, 417, 418, 872, 945, 948, 1122], "A": [44, 62, 113, 133, 144, 211, 237, 238, 240, 252, 256, 257, 258, 259, 261, 266, 291, 328, 334, 343, 373, 400, 418, 419, 422, 436, 456, 470, 478, 481, 491, 496, 511, 537, 552, 553, 562, 571, 601, 612, 613, 626, 635, 640, 648, 677, 680, 693, 696, 698, 793, 794, 797, 811, 822, 845, 849, 882, 884, 888, 889, 890, 893, 896, 897, 898, 899, 906, 919, 924, 927, 940, 953, 954, 957, 958, 959, 962, 967, 986, 989, 1051, 1077, 1082, 1085, 1088, 1089, 1098], "craft": [44, 259, 418], "09": [44, 138, 193, 203, 211, 277, 278, 279, 280, 281, 282, 328], "00": 44, "15": [44, 176, 182, 219, 252, 255, 265, 266, 267, 310, 317, 322, 328, 793, 794], "introductori": [44, 249, 663, 905], "word": [44, 228, 377, 378, 407, 410, 560, 563, 690, 699, 826, 1031, 1048], "engin": [44, 230, 872], "disciplin": 44, "coffe": 44, "break": [44, 176, 213, 370, 999, 1002], "project": [44, 108, 113, 137, 153, 194, 195, 209, 233, 238, 240, 242, 258, 260, 261, 262, 275, 277, 280, 283, 284, 287, 316, 317, 318, 322, 324, 417, 419, 478, 483, 492, 493, 555, 1051, 1092, 1098, 1120, 1123], "enter": [44, 62, 205, 570, 613, 648, 674, 683, 697, 769, 858, 926, 956, 964, 976, 977, 1072, 1077, 1082], "framework": 44, "lunch": 44, "cornerston": 44, "45": 44, "keep": [44, 138, 828], "small": 44, "23": [44, 174, 200, 216, 222, 240, 248, 258, 269, 270, 328], "59": 44, "extrem": 44, "program": [44, 49, 62, 92, 149, 165, 171, 192, 195, 211, 221, 233, 234, 242, 245, 249, 259, 261, 262, 265, 266, 267, 271, 277, 280, 283, 284, 287, 317, 328, 332, 333, 335, 371, 372, 373, 379, 405, 410, 415, 417, 422, 442, 475, 476, 477, 481, 537, 698, 727, 779, 811, 822, 823, 864, 866, 885, 900, 903, 904, 907, 919, 929, 937, 940, 972, 979, 988, 989, 991, 993, 1040, 1052, 1063, 1090, 1091, 1119, 1131, 1132, 1133, 1134, 1135], "session": 44, "find": [45, 118, 136, 154, 437, 496, 577, 595, 713, 854, 1107], "crash": [45, 136], "If": [45, 48, 541, 635, 650, 782, 896, 897, 963, 1088], "Not": [45, 62, 64, 144, 225, 234, 503, 505, 508, 577, 613, 629, 635, 657, 672, 673, 685, 694, 756, 782, 822, 893, 896, 897, 898, 899, 919, 940, 957, 967, 1082, 1105], "found": [45, 505, 508, 577, 629, 1107], "state": [45, 134, 194, 663, 769, 771], "exist": [47, 64, 130, 503, 893, 896, 897, 899, 980, 1088], "ar": [47, 133, 134, 213, 215, 228, 278, 403, 419, 541, 547, 635, 663, 924, 934, 962, 971, 983, 1087, 1107], "overwritten": 47, "done": [48, 441, 604, 698], "twice": 48, "altern": [49, 644], "output": [49, 154, 166, 301, 433, 616, 808, 966, 1069, 1105], "csv": [49, 205, 222, 230, 233, 242, 245, 265, 266, 267, 271, 272, 287, 419, 1020, 1021, 1022, 1053, 1054, 1055, 1056, 1061, 1072], "frontend": 49, "featur": [50, 52, 62, 245, 261, 262, 263, 265, 266, 271, 283, 287, 396, 419, 675, 965, 980, 999, 1069, 1071], "search": [51, 575, 577, 578, 581, 591, 595, 615, 628, 629, 630, 855, 957, 1010, 1093], "By": [51, 161, 225, 257, 343, 550, 594, 625, 628, 630, 652, 663, 674, 677, 678, 680, 685, 689, 697, 713, 714, 715, 963, 996, 1085, 1086, 1087, 1098], "index": [51, 176, 194, 213, 225, 273, 408, 661, 866, 1001, 1086, 1093, 1094, 1095], "backlog": 52, "need": [52, 302, 442, 657, 659, 924, 1072], "chang": [52, 811, 822, 829], "Or": [52, 419, 427, 428, 442, 646, 685, 886, 977, 1082], "Will": 52, "refactor": [52, 55, 419, 495, 734, 735, 736, 774, 1054, 1056, 1061], "after": [52, 169, 200, 369, 785, 801, 980], "backingstor": [53, 54, 56], "ha": [53, 54, 660], "too": [53, 54, 413, 428, 635, 679, 702], "mani": [53, 54, 221, 407, 429, 685, 848, 928], "respons": [53, 54, 197, 445], "interfac": [53, 68, 85, 113, 173, 221, 260, 297, 428, 432, 442, 445, 449, 457, 468, 475, 476, 491, 493, 523, 524, 525, 532, 533, 534, 609, 725, 797, 865, 866, 869, 871, 976, 1073], "load": [56, 154, 394, 430, 744, 745, 870, 912, 974], "constructor": [56, 171, 221, 237, 238, 240, 246, 291, 491, 521, 527, 538, 539, 540, 541, 542, 544, 545, 554, 555, 556, 557, 624, 639, 640, 641, 646, 648, 672, 692, 693, 978], "bool": 57, "realli": [57, 635, 697], "submiss": [58, 61, 108], "pointless": [58, 59, 61, 62, 983], "blink": [58, 59, 61, 62, 310], "With": [58, 59, 61, 62, 96, 112, 163, 194, 241, 257, 259, 261, 283, 287, 328, 412, 420, 441, 456, 470, 492, 563, 645, 698, 792, 793, 794, 855, 858, 863, 868, 894, 957, 1005, 1085, 1087, 1099, 1100, 1103], "asyncio": [58, 59, 61, 62], "libgpiod": [58, 59, 60, 61, 62], "raspberri": [58, 59, 61, 62, 144, 173, 296, 328, 746, 767, 863, 867, 870, 945, 949, 951, 953, 1129], "pi": [58, 59, 60, 61, 62, 144, 173, 328, 746, 766, 767, 863, 870, 952, 953, 1129], "biographi": [58, 61], "abstract": [58, 61, 242, 277, 280, 435, 450, 464, 802, 888, 889, 890, 976], "fedora": [60, 136, 143, 739, 740, 741, 742, 954], "prepar": [60, 136, 154, 169, 170, 172, 173, 174, 175, 185, 194, 209, 219, 238, 240, 248, 478, 555, 766], "tarbal": [60, 144], "On": [60, 62, 194, 228, 230, 252, 256, 257, 261, 283, 287, 330, 492, 494, 539, 570, 571, 575, 581, 684, 709, 809, 888, 889, 890, 895, 900, 904, 927, 954, 1019], "build": [60, 67, 134, 136, 144, 161, 162, 195, 213, 420, 422, 430, 478, 492, 554, 555, 556, 557, 734, 739, 740, 741, 742, 744, 766, 767, 870, 888, 889, 890, 900, 941, 942, 945, 948, 952, 953, 954, 956, 957, 958, 1012, 1107, 1125], "present": 62, "start": [62, 211, 237, 238, 240, 328, 442, 645, 657, 957, 1080, 1105], "point": [62, 225, 228, 491, 537, 539, 547, 553, 555, 556, 557, 563, 645, 657, 709, 793, 794, 952, 995], "greet": [62, 284, 1026], "multipl": [62, 171, 378, 419, 420, 732, 733, 734, 828, 882, 940, 961, 963, 1000, 1082, 1085, 1099], "background": [62, 138, 140, 536, 634], "thread": [62, 133, 135, 144, 261, 262, 319, 513, 635, 701, 702, 707, 908, 909, 910, 915, 917, 924, 927, 972], "charact": [62, 332, 339, 342, 345, 352, 721, 722, 723, 724, 725, 726, 729, 730, 731, 1048], "devic": [62, 80, 96, 112, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 734, 756, 760, 761, 762, 797, 870, 872, 930], "base": [62, 144, 213, 221, 237, 238, 240, 242, 277, 280, 291, 440, 606, 607, 635, 648, 663, 683, 684, 958, 963, 976], "gpio": [62, 85, 151, 173, 296, 297, 298, 299, 310, 746, 747, 870, 872, 904, 905, 906], "entir": [62, 257, 739, 741, 826, 882], "matrix": 62, "off": [62, 194], "bring": [62, 115, 315, 609], "togeth": [62, 425, 609, 828], "modular": [62, 211, 373], "plai": [62, 663], "bit": [62, 266, 359, 811, 822, 824, 989, 991], "row": [62, 257, 1081, 1085, 1086, 1087], "coroutin": [62, 240, 662, 663], "enough": [62, 537, 613], "sequenc": [62, 202, 205, 213, 245, 252, 255, 265, 266, 271, 272, 352, 511, 575, 581, 967, 1000, 1008], "loop": [62, 153, 155, 166, 176, 181, 213, 215, 225, 228, 231, 237, 238, 240, 259, 261, 283, 287, 291, 335, 368, 369, 407, 479, 683, 907, 968, 999, 1002], "forev": 62, "strip": [62, 198, 215, 221, 302], "down": [62, 428], "factori": [62, 435, 450, 464, 494], "turn": [62, 967], "Into": [62, 255, 277, 280, 283, 346, 442, 479, 496, 572, 626, 635, 679, 1054, 1056, 1061], "anti": [62, 707, 709], "clumsi": [62, 709], "decor": [62, 192, 242, 252, 255, 259, 261, 262, 277, 283, 284, 287, 440, 454, 468, 962], "wrapper": 62, "final": [62, 221, 237, 238, 240, 291, 674, 801, 805, 963], "playground": 62, "cycl": [62, 909], "fast": [62, 171], "forward": [62, 240, 344, 408, 697, 881], "ani": [62, 257, 436, 491, 919], "cancel": 62, "goodby": 62, "hochk\u00f6nig": 63, "k\u00f6nigsjodl": 63, "klettersteig": 63, "tour": [63, 242, 635], "werfen": 63, "ostpreussenh\u00fctt": 63, "matrashau": 63, "blog": [64, 130], "articl": [64, 140, 141, 143, 144], "yet": [64, 221], "revisit": [64, 335, 403, 646], "post": [64, 145, 154, 933], "pending_xref": 65, "cmake": [67, 161, 162, 194, 249, 275, 276, 328, 420, 422, 424, 428, 478, 492, 900, 941, 942, 955, 1107, 1108, 1120], "oo": [69, 107, 113, 166, 192, 195, 211, 218, 221, 230, 233, 237, 238, 240, 242, 252, 255, 258, 260, 277, 280, 284, 291, 319, 445, 482, 491, 513, 972], "graph": [71, 72, 73, 411, 413, 618, 719, 767, 1022, 1023, 1027, 1036, 1050, 1057], "embed": [72, 73, 77, 95, 96, 106, 107, 111, 112, 114, 151, 160, 249, 258, 260, 293, 309, 311, 312, 324, 326, 328, 1121, 1122], "comput": [72, 73, 77, 95, 106, 107, 111, 114, 307, 309, 311, 312, 324, 326, 406, 407, 491, 793, 794, 802], "current": [72, 73, 440, 717, 829], "depend": [72, 73, 162, 275, 277, 296, 297, 298, 299, 301, 423, 424, 426, 427, 431, 441, 445, 455, 478, 483, 500, 502, 513, 521, 580, 586, 590, 598, 600, 603, 608, 616, 617, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 637, 644, 651, 662, 686, 691, 743, 744, 793, 794, 795, 799, 813, 814, 815, 834, 839, 840, 843, 876, 878, 885, 891, 893, 901, 903, 905, 917, 920, 942, 944, 946, 947, 950, 951, 957, 972, 974, 1020, 1021, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1041, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1066, 1070, 1074, 1077, 1080, 1084, 1097, 1103, 1120], "ex": [74, 75, 81, 82, 83, 84, 90, 91], "race": [74, 75, 87, 703, 756, 757, 764, 910, 911, 974], "condit": [74, 75, 87, 361, 369, 378, 703, 707, 756, 757, 764, 910, 911, 913, 914, 974], "avoid": [75, 87], "goal": [75, 81, 82, 83, 84, 86, 87, 88, 90, 118, 120, 121, 123, 154, 258, 260, 1118, 1121], "outcom": [75, 81, 82, 83, 84, 172, 280, 312], "introduct": [76, 79, 153, 237, 238, 240, 252, 255, 259, 260, 270, 275, 276, 291, 313, 328, 331, 348, 406, 410, 424, 441, 449, 536, 633, 639, 683, 692, 701, 716, 746, 766, 800, 963, 1098, 1118, 1120, 1131], "2019": [77, 153, 156, 328], "overview": [77, 149, 249, 261, 262, 285, 291, 325, 329, 645, 652, 663, 687, 693, 707, 709, 717, 737, 791, 802, 828, 859, 870, 871, 872, 873, 908, 940, 962, 1066, 1070], "knowledg": [77, 1120], "transfer": [77, 695], "unix": [79, 109, 110, 157, 315, 331, 393, 403, 439, 991], "hardwar": [80, 83, 84, 121, 124, 249, 393, 867, 869, 870, 872, 905, 1122], "manag": [80, 135, 183, 213, 233, 242, 252, 255, 258, 259, 261, 277, 280, 283, 284, 287, 317, 318, 322, 417, 545, 605, 693, 776, 777, 942, 961, 980, 1092, 1122], "averag": [81, 82, 90, 439, 467], "sensor": [81, 82, 84, 90, 91, 93, 260, 284, 435, 436, 440, 442, 447, 465, 467, 468, 474, 478, 480, 481, 482, 493, 494, 495, 502, 693, 870, 872, 900, 1050, 1052], "parallel": 82, "led": [83, 113, 310], "temperatur": [83, 84, 91, 113, 478, 481, 870, 872, 900], "displai": [83, 90, 113], "sysf": [85, 173, 296, 310, 871, 905, 906], "gpiod": 85, "multithread": [86, 151, 211, 237, 238, 240, 249, 283, 284, 287, 291, 318, 325, 707, 708, 937, 972, 973, 975, 1134], "semaphor": [87, 133, 709, 933, 934], "mutex": [87, 133, 394, 705, 709, 756, 757, 758, 759, 771, 772, 911, 912, 927, 974], "commun": [88, 230, 459, 707, 913, 934], "wait": [88, 124, 707, 709, 782, 783, 784, 913, 933], "someth": [88, 166, 537, 635, 709, 782, 783, 784, 1002], "simpl": [92, 171, 433, 537, 547, 562, 613, 625, 769, 771, 797, 811, 940, 957, 962, 982, 1012, 1089, 1098], "2020": [95, 138, 158, 160, 165, 166, 168, 169, 170, 172, 174, 175, 180, 328], "ss2022": [96, 104, 793, 794], "block": [96, 112, 364, 560, 887, 888, 889, 890, 891, 938, 1091], "remot": [96, 112, 115, 446, 459, 473, 793, 794, 874, 875, 879, 882, 883], "cross": [96, 107, 112, 144, 249, 746, 766, 941, 943, 944, 945, 950, 952, 953, 955, 1113], "develop": [96, 107, 112, 165, 180, 194, 197, 219, 230, 233, 249, 252, 254, 255, 258, 259, 260, 261, 262, 283, 284, 287, 293, 313, 328, 743, 943, 944, 950, 1121, 1122, 1123, 1136], "03": [97, 98, 99, 100, 101, 102, 182, 185, 190, 209, 211, 219, 222, 239, 252, 253, 255, 258, 259, 275, 310, 328, 632, 635, 636], "08": [97, 200, 203, 211, 224, 328], "homework": [97, 98, 99, 100, 103], "until": 99, "21": [99, 100, 222, 303, 310, 328], "exercis": [99, 108, 126, 148, 153, 154, 166, 169, 170, 174, 182, 183, 185, 194, 195, 205, 211, 228, 233, 237, 238, 240, 242, 245, 249, 253, 258, 260, 261, 265, 266, 271, 272, 273, 277, 280, 283, 284, 287, 291, 300, 302, 310, 316, 334, 336, 338, 340, 342, 344, 346, 358, 382, 391, 435, 436, 437, 439, 440, 441, 443, 444, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 511, 512, 513, 543, 554, 555, 556, 557, 558, 599, 600, 601, 608, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 697, 713, 714, 715, 788, 795, 806, 812, 815, 816, 818, 820, 830, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 853, 874, 875, 876, 877, 893, 894, 900, 934, 938, 945, 947, 948, 949, 950, 979, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061], "creat": [99, 115, 127, 132, 136, 139, 161, 162, 492, 635, 702, 786, 792, 793, 794, 811, 816, 818, 820, 828, 832, 834, 845, 877, 894, 896, 897, 899, 933, 934, 952, 954, 959, 1051, 1069, 1071], "copi": [99, 166, 215, 250, 358, 496, 530, 538, 545, 550, 565, 571, 572, 576, 583, 635, 646, 648, 673, 678, 680, 684, 689, 693, 694, 713, 780, 828, 830, 831, 834, 874, 875, 882, 893, 1004, 1082], "move": [99, 237, 238, 240, 258, 291, 491, 537, 553, 644, 645, 646, 647, 648, 693, 695, 714, 746, 826, 833, 834, 849], "remov": [99, 231, 428, 508, 509, 591, 594, 713, 834, 837, 845, 934], "l": [99, 843, 848], "command": [99, 437, 452, 466, 744, 811, 822, 826, 843, 848, 863, 954], "22": [101, 172, 179, 184, 271, 272, 273, 287, 288, 289, 290, 328, 1091], "24": [101, 113, 179, 211, 241, 261, 262, 263, 264, 283, 284, 286, 287, 288, 289, 290, 328], "ku": 101, "28": [102, 153, 170, 211, 259, 316, 328], "01": [103, 108, 203, 209, 211, 212, 213, 242, 248, 310, 320, 321, 328, 793, 794], "ws2022": [105, 106, 107], "plan": [105, 113, 222, 313], "evolut": 105, "fh": [106, 107, 114, 478, 479, 480, 481, 482, 554, 555, 556, 557, 617, 799, 813, 814, 839, 946], "joanneum": [106, 107, 114], "2023": [106, 107, 108, 109, 110, 113, 240, 248, 249, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 293, 328], "question": [106, 107, 121, 192, 325, 419, 433, 478, 617, 799, 813, 814, 817, 819, 839, 925, 946, 975, 1091], "inherit": [106, 152, 192, 221, 242, 277, 280, 449, 523, 524, 525, 606, 607, 608, 611, 635, 895, 972, 980], "memori": [106, 135, 157, 183, 383, 386, 390, 392, 394, 401, 408, 507, 517, 518, 519, 545, 604, 605, 737, 750, 751, 752, 753, 779, 780, 781, 799, 803, 933, 934, 1122, 1132], "leak": [106, 507, 518, 545, 695], "ye": [107, 1077], "No": [107, 134, 173, 457, 635, 652, 698, 963, 1088, 1105], "lab": 108, "exam": [108, 109, 110, 112, 193, 206, 208, 219, 310, 325, 491, 793, 794, 795, 925, 975, 1091], "17": [108, 205, 206, 208, 212, 213, 219, 236, 243, 249, 265, 266, 267, 328, 552], "ss2023": [109, 110, 112], "06": [109, 110, 193, 194, 211, 240, 271, 272, 273, 310, 328], "30": [109, 110, 151, 160, 170, 175, 222, 328], "handout": 109, "concept": [109, 110, 240, 270, 291, 651, 652, 655, 656, 657, 660, 661, 687, 800, 1071], "toolchain": [109, 110, 144, 195, 275, 766, 940, 941, 946, 947, 949, 950, 951, 952, 953, 954, 955, 1120], "solv": [110, 912, 1071, 1094, 1101], "finish": [112, 120, 129, 195, 785], "ws2023": 113, "orient": [171, 221, 234, 242, 245, 246, 259, 261, 262, 265, 266, 271, 277, 280, 283, 284, 287, 298, 417, 537, 608, 979, 1091], "graz": [114, 156, 158, 165, 203, 328], "branch": [115, 365], "upstream": 115, "track": [115, 956], "submit": [115, 785, 786], "appli": [115, 136, 1088], "patch": [115, 136], "packag": [117, 120, 138, 144, 161, 242, 259, 277, 283, 303, 766, 945, 948, 971, 1019, 1091, 1092, 1093, 1094, 1095, 1096, 1100], "pypi": [117, 190, 230, 1019, 1064, 1094, 1096], "audio": [118, 122], "chip": [118, 871], "bringup": [118, 121, 872], "get": [119, 132, 162, 213, 709, 754, 779, 904], "debian": [119, 120], "kernel": [119, 120, 121, 125, 134, 136, 180, 328, 413, 730, 739, 740, 741, 742, 743, 744, 758, 760, 766, 767, 799, 802, 867, 870, 1123], "config": [119, 766], "within": 119, "qemu": 119, "extract": [119, 125, 192, 479, 1054, 1056, 1061, 1069], "boot": [119, 132, 143, 328, 802], "etc": [120, 181, 189, 192, 221, 231, 234, 267, 842, 870, 898, 992, 1042], "yocto": [121, 125, 861], "everyth": [121, 149, 208, 425, 797, 808, 887], "like": [121, 291, 537, 919], "i2": 122, "kontron": 122, "smarc": 122, "modul": [122, 166, 190, 192, 230, 231, 243, 259, 266, 283, 284, 303, 310, 413, 428, 492, 681, 734, 739, 741, 742, 744, 745, 760, 766, 871, 971, 1061, 1064, 1072, 1091, 1099, 1107], "dirti": 123, "upgrad": 123, "path": [123, 144, 192, 202, 208, 215, 431, 717, 798, 850, 952, 957, 1051, 1107], "step": [123, 437, 440, 442, 478, 570, 663, 713, 714, 941, 942, 956, 976, 1001], "intel": 125, "bsp": 125, "improv": 126, "beginn": [126, 190, 202, 225, 230, 242, 266, 1063, 1064], "split": [126, 152, 215, 221, 302, 1010, 1069], "openshot": 127, "seo": [128, 129], "sitemap": 128, "meta": [128, 129], "stack": [129, 135, 176, 197, 390, 648], "hang": 129, "dbu": [129, 442], "perturb": [], "encod": [228, 230, 231, 242, 252, 272, 273, 310, 1077], "soup": [], "misc": [], "context_manag": [], "abc": 976, "stuff": [129, 310, 403, 802, 836], "extens": 130, "rest": [130, 192, 287, 892], "style": [130, 366, 417, 537, 639, 693, 711, 1009], "convert": [130, 153, 257, 982, 1060], "rst": 130, "exampl": [130, 215, 221, 225, 306, 339, 343, 378, 380, 400, 403, 439, 478, 563, 588, 639, 640, 658, 659, 660, 661, 687, 696, 790, 808, 810, 811, 859, 883, 887, 892, 895, 913, 938, 961, 976, 996, 1006, 1009, 1010, 1011, 1012, 1033, 1075, 1083, 1088, 1098, 1099], "add": [130, 251, 429, 433, 491, 727, 774, 785, 937, 980, 1081], "miss": [130, 242, 639, 896], "past": [130, 378], "learn": [131, 252, 312, 1065, 1071], "beagleboard": 132, "how": [132, 135, 143, 165, 195, 213, 347, 386, 411, 412, 413, 547, 685, 695, 809, 822, 825, 968, 1071], "repair": 132, "nand": 132, "also": [132, 384, 797, 802, 803, 808, 809, 888, 889, 890, 892, 919, 922, 926, 928, 1007, 1071], "40w": 132, "x": [132, 195, 527], "loader": 132, "u": [132, 883], "bootabl": 132, "mmc": 132, "sd": [132, 173], "card": [132, 173, 251, 794], "port": [133, 881], "There": [133, 213, 417, 545, 701, 782, 872, 882, 887, 898, 899], "": [133, 148, 173, 359, 383, 417, 537, 629, 635, 638, 698, 730, 735, 754, 766, 782, 811, 827, 879, 927, 940, 968, 972, 1015], "alwai": [133, 213, 233, 673, 897], "better": [133, 334, 419, 776, 986, 1077], "wai": [133, 192, 213, 221, 407, 928, 972, 991], "process": [133, 135, 154, 249, 270, 764, 765, 798, 799, 803, 804, 919, 920, 921, 924, 928], "signal": [133, 157, 393, 707, 913, 936, 937, 938, 939], "aren": 133, "t": [133, 190, 685, 1064], "queue": [133, 176, 707, 783, 914, 933, 934], "timer": [133, 774, 776, 777, 890, 924], "poll": [133, 707, 709], "event": [133, 727, 746, 756, 774, 775, 779, 907, 913, 929, 931], "dispatch": 133, "interrupt": [133, 746, 747, 748, 749, 762, 771, 907, 924], "realtim": [133, 135, 321, 325, 328, 758, 926, 927, 1113, 1122], "save": [134, 695], "solid": [134, 417], "disk": [134, 173, 797], "life": [134, 696, 909], "gentoo": [134, 766], "rant": [134, 154, 422, 942], "swap": [134, 228, 382, 698, 809, 1029], "tmpf": 134, "instanc": [134, 192, 218, 221], "syslog": 134, "var": 134, "mountpoint": 134, "logrot": 134, "o": [134, 192, 202, 208, 215, 216, 221, 228, 230, 231, 263, 267, 270, 272, 302, 339, 750, 807, 808, 809, 832, 845, 887, 888, 889, 890, 891, 892, 901, 902, 922, 1014, 1091], "schedul": [134, 270, 320, 321, 325, 799, 803, 909, 922, 923, 925, 926, 927], "ram": 134, "thing": [134, 195, 216, 237, 238, 240, 291], "left": [134, 359, 550], "why": [135, 136, 144, 213, 417, 445, 537, 540, 544, 545, 692, 698, 739, 785, 810, 864, 871, 879, 883, 908, 961, 1006], "p": 135, "suck": [135, 746], "count": [135, 694, 773, 809, 1048], "consumpt": 135, "conclus": [135, 771, 863, 871], "pthread": 135, "experi": 135, "100": 135, "default": [135, 166, 213, 215, 237, 238, 240, 291, 306, 491, 539, 541, 542, 554, 555, 556, 557, 624, 672, 693, 825, 938, 1006, 1086], "eat": 135, "limit": [135, 967], "than": [135, 498, 983], "my": [135, 138, 234, 332, 333, 419, 734, 805, 822], "system": [135, 208, 249, 270, 317, 328, 349, 413, 610, 701, 815, 821, 883, 885, 886, 887, 892, 903, 921, 924, 927, 993, 1093, 1113, 1131, 1132, 1133, 1134, 1135], "could": [135, 696], "take": [135, 384, 695, 986], "doe": [135, 563, 809, 822, 825, 893, 896, 897], "differ": [135, 166, 383, 568, 570, 828, 882], "It": [136, 165, 257, 314, 383, 609, 822, 883, 896, 897, 940], "rpm": [136, 138, 163, 739], "prerequisit": [136, 144, 162, 261, 283, 287, 312, 741, 1019], "rpmbuild": 136, "directori": [136, 161, 162, 317, 419, 420, 492, 717, 793, 794, 811, 816, 817, 818, 819, 828, 829, 830, 837, 844, 845, 848, 849, 854, 882, 893, 941, 942, 961, 1098], "download": [136, 182, 184, 310, 315, 329, 495, 952, 955, 1112], "For": [136, 138, 144, 222, 225, 249, 252, 254, 255, 258, 260, 293, 328, 340, 465, 539, 550, 635, 663, 684, 709, 801, 887, 952, 953, 954, 964, 982, 1051, 1121], "domain": [137, 157, 255, 710], "configur": [137, 139, 144, 421, 827, 865, 870, 872, 907], "subdomain": 137, "www": 137, "apex": 137, "microsoft": 138, "team": 138, "screen": [138, 858], "share": [138, 425, 430, 690, 694, 697, 714, 793, 794, 820, 933, 934, 956, 957, 1132], "x11": 138, "reviv": 138, "meh": 138, "updat": 138, "annoy": 138, "re": [138, 963], "regist": [138, 407], "itself": 138, "autostart": 138, "browser": [138, 197], "recommend": [138, 169, 312, 1099, 1120], "deploi": 139, "gener": [139, 143, 153, 162, 166, 171, 198, 205, 208, 213, 215, 221, 240, 242, 246, 252, 255, 259, 261, 262, 266, 273, 275, 283, 284, 285, 287, 368, 497, 538, 541, 545, 663, 664, 666, 667, 672, 719, 872, 879, 906, 941, 942, 966, 967, 968, 969, 970, 995, 1034, 1047, 1120], "public": [139, 192, 432, 539, 793, 794, 818, 819, 879], "repo": [139, 161], "jfasch": [139, 823], "home": [139, 798, 828, 844, 883], "time": [139, 148, 152, 257, 423, 710, 774, 775, 803, 915, 1026], "deploy": [139, 275, 425, 766, 1120], "bigbluebutton": 140, "onlin": [140, 149, 1112], "tl": 140, "dr": 140, "host": [140, 185, 766, 954], "check": [140, 433, 457, 811, 872, 913, 949, 1010, 1030], "els": [140, 208, 215, 221, 231, 261, 283, 287, 341, 365, 366, 367, 544, 559, 849, 866, 879, 963, 999, 1002], "traunstein": 141, "via": [113, 141, 142, 307, 872], "zierlersteig": 141, "kaltenbachwildni": 141, "anstieg": 141, "auf": [141, 182], "zierlerberg": 141, "rinn": 141, "abstieg": 141, "grintovec": 142, "plan\u0161arsko": 142, "jezero": 142, "\u010de\u0161ka": 142, "ko\u010da": 142, "anreis": 142, "hinauf": 142, "runter": 142, "zusammenfassung": 142, "brick": 143, "1399": 143, "dell": 143, "xp": 143, "happen": 143, "virtualbox": 143, "secur": [143, 173, 249, 270, 307, 878, 882], "enrol": 143, "machin": [143, 173, 194, 252, 307, 874, 875, 900, 1065, 1071], "owner": [143, 811], "mok": 143, "pair": [143, 635, 877, 879], "stage": 143, "reboot": 143, "diagnost": [143, 870], "crosstool": [144, 953, 954], "ng": [144, 953, 954], "prebuilt": [144, 1088], "clone": [144, 148, 161, 492], "repositori": [144, 148, 324, 492, 502], "releas": [144, 422, 748, 758, 974], "glibc": 144, "version": [144, 419, 422, 425, 635, 663, 896], "gcc": [144, 394, 407, 940], "simplest": [144, 663, 668, 706, 960, 983, 1099, 1105], "stdio": 144, "h": [144, 666, 858], "iostream": 144, "distribut": [144, 1019], "afterword": [144, 643], "schulung": [146, 166], "entwicklung": 146, "beratung": 146, "richtlinien": 147, "ver\u00f6ffentlichung": 147, "kursmateri": 147, "window": [148, 185, 202, 258, 260, 330, 805], "workflow": [148, 195], "conflict": [148, 912, 974], "individu": 149, "languag": [149, 165, 195, 211, 237, 238, 240, 245, 265, 266, 271, 328, 396, 415, 675, 919, 965, 987, 989], "qualivis": [150, 328], "z\u00fcrich": [150, 328], "2013": [150, 328, 1113], "fragen": [150, 183], "antworten": 150, "kursnotizen": 151, "2015": [151, 328], "userspac": [151, 725, 727, 779, 780, 781, 870, 871, 907], "can": [151, 172, 195, 230, 384, 436, 440, 491, 550, 635, 695, 864, 865, 866, 868], "bu": [151, 172, 442, 865, 868, 872], "driver": [151, 180, 251, 328, 743, 744, 762, 870, 1123], "beispiel": [151, 166, 225, 854], "heizungssteuerung": 151, "k\u00f6nnen": [152, 176, 189], "viel": 152, "mutabl": [152, 155, 166, 176, 183, 189, 202, 205, 213, 215, 218, 221, 228, 231, 234, 246, 253, 263, 267, 273, 285, 1004, 1006], "immut": [152, 155, 166, 183, 189, 202, 213, 218, 221, 228, 234, 243, 250, 253, 267, 548, 1004], "kann": [152, 197], "man": [152, 197, 826], "nicht": [152, 166, 176], "oft": 152, "genug": 152, "wiederholen": 152, "hart": 152, "indizieren": 152, "weich": 152, "nettfragen": 152, "shortcut": [152, 982, 1012], "objektorientiert": 152, "date": [152, 198, 257, 315], "delta": 152, "datetim": [152, 171, 192, 198, 253], "bissl": 152, "potschert": [152, 176], "schreiben": [152, 176], "scho": 152, "formen": 152, "represent": [152, 985], "__str__": [152, 980, 985], "subprocess": [152, 231], "enumer": [152, 176, 181, 183, 189, 192, 213, 221, 228, 246, 263, 285], "zip": [152, 192], "comprehens": [152, 176, 198, 205, 208, 213, 215, 221, 225, 246, 252, 253, 255, 285, 960, 966, 1011, 1091], "exec": [152, 218, 234, 242, 246, 273, 964], "eval": [152, 153, 189, 218, 228, 246, 273, 285], "umgebend": 152, "context": [152, 213, 252, 255, 259, 764, 765, 785, 961, 964], "eigen": 152, "json": [152, 174, 181, 197, 198, 208, 225, 228, 234, 242, 243, 278, 281, 1060], "individualtrain": [153, 168, 328], "tage": [153, 328], "beginnend": [153, 328], "inhalt": [153, 156, 937, 1115], "51": 153, "58": 153, "94": [153, 166], "121": 153, "famou": [153, 410], "overload": [153, 211, 221, 242, 277, 513, 539, 546, 553, 693, 983, 985], "getter": [153, 491, 547], "setter": 153, "listcomprehens": 153, "express": [153, 166, 181, 198, 205, 231, 234, 246, 361, 363, 439, 457, 471, 642, 855, 966, 1024, 1083], "global": [153, 166, 176, 234, 284, 347, 353, 374, 376, 390, 427, 520, 521, 522, 551, 552, 553, 884, 959, 1005], "scope": [153, 176, 284, 706, 709, 959, 1005], "variabl": [153, 176, 189, 192, 202, 205, 213, 221, 228, 231, 243, 263, 267, 305, 333, 347, 350, 353, 374, 376, 382, 401, 457, 521, 548, 552, 678, 707, 798, 884, 913, 914, 921, 994, 1005, 1029], "closur": [153, 176, 242, 259, 261, 262, 277, 283, 287, 677, 959, 961, 1091], "between": [153, 556, 1069], "walkthrough": 154, "reduc": [154, 358], "eight": 154, "color": 154, "pil": 154, "numpi": [154, 156, 183, 190, 230, 233, 252, 255, 266, 272, 284, 328, 1064, 1069], "cluster": 154, "excurs": [154, 230, 677], "matplotlib": [154, 183, 202, 234, 272, 1018, 1069], "now": [154, 166], "come": [154, 190, 425, 619, 940, 1064], "let": 154, "kmean": 154, "result": [154, 411, 1076], "properti": [154, 192, 221, 431, 432, 984], "center": 154, "restor": 154, "alpha": 154, "back": [154, 588, 1060], "rgba": 154, "random": [155, 192, 225, 230, 468, 481, 489, 1084], "type": [155, 181, 205, 208, 218, 221, 228, 237, 238, 240, 242, 243, 257, 259, 277, 280, 281, 285, 291, 306, 349, 351, 352, 356, 363, 388, 398, 403, 422, 432, 541, 570, 591, 592, 635, 636, 639, 650, 652, 689, 737, 746, 841, 848, 911, 961, 963, 976, 983, 1006, 1071], "except": [155, 192, 208, 211, 218, 221, 233, 234, 242, 252, 255, 259, 260, 277, 280, 321, 513, 560, 561, 629, 678, 685, 709, 963, 1091], "demonstr": 155, "dict": [155, 205, 213, 215, 221, 228, 982], "access": [155, 194, 341, 394, 395, 539, 547, 555, 621, 717, 750, 779, 780, 781, 977, 984, 1011, 1012], "indic": [155, 183], "slice": [155, 166, 181, 192, 215, 221, 225, 246, 267, 273, 803, 1001, 1085, 1087], "protocol": [155, 166, 181, 202, 205, 208, 213, 215, 218, 221, 231, 246, 259, 263, 267, 285, 663, 863, 927, 968, 970], "standardthemen": 156, "hauptthema": 156, "numerik": 156, "lesen": [156, 176], "mat": 156, "l\u00f6sen": 156, "uni": 156, "\u00fcbung": [156, 159, 176], "propos": 157, "posix": [157, 707, 908, 917, 930, 932, 933, 934, 935], "ipc": [157, 158, 328, 930, 932, 933, 934, 935, 1132], "virtual": [157, 230, 251, 523, 524, 525, 610, 612, 613, 737, 799, 803, 865, 933, 1051, 1100, 1101, 1102, 1132], "socket": [157, 866, 889], "applic": [157, 924], "your": [157, 250, 251, 398, 657, 812], "compani": 157, "thought": 157, "handgestrickt": 159, "um": 159, "fallen": 159, "lustvol": 159, "erleiden": 159, "programmier": 160, "baden": [160, 328], "w\u00fcrttemberg": [160, 328], "kursinform": 160, "kursaufbau": 160, "kursverlauf": [160, 168], "hand": 161, "our": [161, 872], "privat": [161, 192, 221, 432, 539, 611, 673, 793, 794, 816, 817], "makefil": [162, 492, 734, 744, 941, 942, 956], "argh": 163, "visual": [163, 190, 206, 411, 426, 1064, 1090, 1100], "studio": [163, 190, 206, 1064, 1090, 1100], "flatpak": 163, "issu": [163, 959], "m": 163, "bei": [165, 176, 328], "firma": [165, 328], "environ": [165, 230, 238, 240, 249, 251, 258, 259, 260, 317, 798, 921, 988, 1051, 1100, 1101, 1102, 1110], "driven": [165, 194, 219, 230, 233, 261, 262, 283, 284, 287, 328, 929, 1136], "dai": [165, 169, 170, 172, 173, 174, 184, 185, 194, 195, 200, 203, 205, 206, 209, 216, 249, 252, 255, 258, 259, 260, 261, 262, 266, 270, 272, 277, 283, 284, 287, 684, 1026, 1118], "advanc": [165, 169, 172, 181, 184, 193, 209, 219, 222, 233, 242, 245, 255, 261, 262, 263, 264, 265, 266, 271, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 328, 396, 1063, 1064, 1126], "18": [166, 168, 194, 213, 233, 245, 246, 260, 276, 310, 328, 954, 1091], "19": [166, 168, 172, 206, 222, 309, 310, 324, 326, 328], "sy": [166, 192, 797, 993], "multilin": [166, 198, 202, 305, 1008], "docstr": [166, 213, 225, 228, 231, 253, 285, 305], "datentypen": [166, 176, 183, 196, 212, 224], "ausflug": [166, 215], "variablen": [166, 176, 183, 196, 212, 215, 224, 234], "deren": 166, "unterbau": 166, "zuweisung": 166, "mit": [166, 176, 181, 194, 328, 854, 1113, 1129], "hilf": 166, "tupl": [166, 171, 176, 181, 183, 189, 192, 202, 205, 208, 213, 215, 221, 225, 228, 231, 237, 238, 240, 243, 246, 253, 263, 267, 291, 304, 305, 635, 684, 689, 996, 1004, 1072], "unpack": [166, 171, 176, 181, 183, 192, 208, 213, 225, 231, 237, 238, 240, 243, 253, 291, 304, 305, 635, 684, 952, 1072], "unendlich": 166, "breit": 166, "divis": [166, 176], "floor": [166, 176], "konvertierung": 166, "konstruktoren": [166, 183], "welchen": 166, "typ": [166, 176], "typen": 166, "besser": 166, "laufzeitverhalten": [166, 176], "geeigneter": 166, "datenstrukturen": [166, 176, 177, 197, 215, 1128], "boolean": [166, 176, 202, 205, 213, 215, 221, 225, 228, 355, 439, 997, 1024, 1083], "short": [166, 205, 221, 355, 449, 746], "circuit": [166, 205, 221, 355], "evalu": [166, 205, 221], "warum": [166, 176], "sind": [166, 176], "mehr": [166, 181], "rang": [166, 171, 176, 183, 192, 198, 202, 205, 213, 215, 218, 225, 228, 231, 237, 238, 240, 243, 253, 267, 273, 284, 291, 569, 570, 635, 663, 683, 684, 685, 686, 687, 688, 966, 1003, 1018], "foli": 166, "161": 166, "shallow": [166, 215, 1004], "deep": [166, 215, 1004], "dem": [166, 1129], "deepcopi": 166, "funktionen": [166, 176, 177, 181, 1128], "first": [166, 195, 332, 482, 698, 727, 728, 762, 1100], "gotcha": [166, 744, 774, 928], "paramet": [166, 213, 215, 259, 306, 345, 381, 384, 387, 401, 419, 423, 648, 652, 687, 698, 766, 896, 941, 1006, 1076], "90": 166, "ff": 166, "lokal": [166, 176, 234], "92": 166, "uniq": [166, 1046, 1047], "punkt": [166, 176], "zusammengefasst": 166, "hier": 166, "sch\u00f6nere": 166, "al": [166, 176, 225], "comprens": 166, "125": 166, "lesbarkeit": 166, "perform": [166, 189, 409, 685], "review": [166, 195], "pprint": 166, "praktisch": 166, "debug": [166, 422, 764, 962], "datentransform": 166, "127ff": 166, "complet": [166, 513, 826], "collect": [166, 215, 218, 243, 940, 982, 1082, 1096], "namedtupl": [166, 982], "parameter\u00fcbergab": [166, 176], "variabel": 166, "lang": 166, "argumentlisten": 166, "erst": 166, "klass": 166, "weiterf\u00fchrend": [168, 190], "workspac": [169, 170, 172, 174], "core": [169, 206, 249, 941], "special": [169, 850], "tutori": [169, 172, 184, 190, 200, 230, 233, 266, 1064], "parti": [169, 200], "v": [171, 176, 183, 189, 192, 213, 218, 221, 225, 228, 234, 250, 253, 263, 267, 278, 304, 305, 343, 352, 364, 367, 371, 373, 422, 425, 532, 533, 534, 548, 694, 702, 744, 764, 765, 771, 772, 886, 922, 992, 995, 1003, 1014, 1093], "return": [171, 234, 387, 645, 646, 648, 663], "addit": [172, 537, 553, 615, 980], "brought": 172, "thoma": 172, "cloud": [173, 307], "particip": 173, "desk": 173, "interlud": [173, 746], "bloodi": 173, "wild": [173, 222, 277, 280, 283], "watchdog": 173, "support": [173, 185, 638, 762], "25": [174, 184, 193, 200, 211, 216, 227, 269, 270, 277, 278, 279, 282, 328], "grundlegend": [176, 177, 1128], "sprachelement": [176, 177, 1128], "syntax": [176, 183, 189, 221, 231, 253, 267, 305, 678, 687, 992], "semantik": 176, "einr\u00fcckung": 176, "ihren": 176, "\u00e4ndern": 176, "kommentar": 176, "sprach": 176, "standarddatentypen": 176, "elementar": [176, 177, 1128], "beliebig": 176, "gro\u00df": 176, "vergleichsoperatoren": 176, "pr\u00e4zedenz": 176, "vor": 176, "strichrechnung": 176, "modulo": 176, "un\u00e4rer": 176, "negat": [176, 1083], "erzwingen": 176, "auch": 176, "zeichenketten": 176, "raw": [176, 183, 198, 202, 215, 221, 243, 273, 977, 1008, 1059], "f": [176, 198, 213, 231, 273, 1009], "konvertierungen": 176, "pr\u00e4zendenzregeln": 176, "literal": 176, "primit": [176, 701, 966], "konstanten": 176, "operatoren": 176, "ausdr\u00fcck": 176, "operatorrangfolgen": 176, "\u00fcbungen": [176, 1112], "zwei": 176, "vertauschen": 176, "kontrollstrukturen": [176, 177, 196, 212, 213, 224, 1128], "anweisungen": 176, "folgen": 176, "bedingungen": 176, "verzweigungen": 176, "bedingt": 176, "anweisung": 176, "verzweigung": [176, 177, 1128], "geschachtelt": 176, "mehrfach": 176, "fallauswahl": 176, "schleifen": [176, 177, 1128], "z\u00e4hlergesteuert": 176, "kopfgesteuert": 176, "schleif": [176, 181], "fu\u00dfgesteuert": 176, "jf": 176, "continu": [176, 211, 213, 252, 260, 262, 284, 370, 999, 1002], "sequenti": [176, 181, 213, 225, 577, 578, 585, 586, 966, 1000], "schnell\u00fcbersicht": 176, "sprunganweisungen": 176, "endlosschleifen": 176, "ben\u00f6tigt": 176, "Suche": 176, "eindimensional": 176, "record": [176, 1058, 1060], "tupel": 176, "listen": [176, 181, 215, 305], "sort": [176, 228, 496, 575, 580, 581, 584, 1086], "revers": [176, 582, 583, 600, 601, 602, 983], "stapel": 176, "schlangen": 176, "versuch": 176, "zur\u00fcck": 176, "hybrid": 176, "supergscheit": 176, "methoden": [176, 177, 1128], "prozeduren": [176, 177, 1128], "funktionspoint": 176, "so": [176, 189, 192, 202, 234, 258, 417, 537, 635, 648, 650, 677, 1085], "heisst": [176, 181], "funktionsobjekt": 176, "primzahlenbeispiel": 176, "funktion": 176, "laufzeitfehl": 176, "existiert": 176, "zuweisen": 176, "fehlerfal": 176, "peter": 176, "unterprogramm": 176, "wert": 176, "referenzen": 176, "r\u00fcckgabewert": 176, "oder": [176, 311, 1113], "inner": [176, 959], "standardbibliotheken": 176, "built": [176, 259, 541, 639, 744, 963], "funktionalit\u00e4ten": 176, "struktur": 177, "herdt": [177, 1128], "kapitel": [177, 1128], "recap": [113, 181, 194, 195, 209, 242, 262, 277, 280, 284, 285, 530, 692, 940, 966], "ganz": [181, 213], "kurz": 181, "mehreren": 181, "returnwerten": 181, "bzw": [181, 311], "containerdatentypen": 181, "untypisiert": 181, "l\u00f6schen": 181, "begriff": 181, "zufal": 181, "regular": [181, 194, 195, 231, 234, 246, 855], "hallo": 183, "speicher": 183, "sch\u00fctze": 183, "ich": 183, "davor": 183, "aber": 183, "gemischten": 183, "wiederholung": [183, 218], "objektidentit\u00e4t": 183, "statement": [183, 192, 364, 378, 959, 961, 974, 992, 998, 1076, 1079], "operationen": 183, "verloren": 183, "interpol": 183, "mittel": [183, 189], "scipi": 183, "shell": [185, 249, 270, 307, 328, 798, 809, 811, 827, 839, 840, 846, 878, 895, 904, 919, 1114], "script": [185, 270, 328, 873, 904, 971, 990, 1114], "29": [185, 259, 310, 318, 328], "ssh": [185, 249, 270, 307, 315, 873, 876, 877, 878, 879, 880, 881, 882, 883], "assign": [189, 215, 221, 228, 305, 360, 457, 538, 544, 545, 645, 646, 648, 693, 959, 994, 1001, 1005, 1081], "fun": [189, 228, 242, 994], "arithmet": [189, 194, 213, 225, 305, 333, 354, 383, 457, 471, 530, 553, 566, 567, 571, 574, 983, 995], "complex": [189, 228, 305, 1110], "nur": 189, "sum": [189, 619], "weiter": 189, "dynamisch": 189, "evaluierung": 189, "05": [113, 190, 193, 224, 230, 233, 236, 239, 265, 266, 267, 269, 270, 302, 303, 310, 328], "scienc": [190, 216, 230, 233, 266, 283, 284, 285, 287, 1064], "don": [190, 685, 1064], "batteri": [190, 305, 1010, 1064], "confer": [190, 266, 1064], "talk": [190, 266, 864, 870, 871, 1064], "zipfil": 192, "One": [192, 231, 257, 302, 359, 378, 417, 419, 552, 685, 698, 779, 864, 882, 915, 940, 956], "member": [192, 221, 539, 544, 545, 547, 552, 621, 622, 639], "attribut": [192, 218, 234, 291, 803, 906, 977, 984, 1089], "protect": [192, 611, 685, 756], "posit": [192, 537, 957, 986, 1016], "keyword": [192, 213, 237, 238, 240, 291, 306, 400, 401, 959, 986, 1006], "argument": [192, 213, 221, 242, 277, 306, 384, 893, 919, 962, 986, 993, 1006, 1016], "mix": [192, 205, 273, 678, 1040, 1041], "yield": [192, 208, 213, 231, 259, 273, 966, 969], "filter": [192, 221, 250, 251, 257, 285, 497, 498, 499, 685, 1083], "nonetyp": [192, 205], "none": [192, 213], "recurs": [192, 386, 545, 642, 717, 828], "fibonacci": [192, 663, 665, 967, 1034], "sever": 192, "same": [192, 521, 546, 552, 677, 1005, 1099], "oserror": 192, "errno": [192, 884], "platform": [192, 870], "assert": [192, 234, 285], "assertionerror": 192, "27": [193, 211, 227, 277, 278, 279, 282, 328], "predefin": [193, 378, 1110], "stream": [193, 737, 808, 1014], "pcap": [193, 206, 208, 219, 1091], "syllabu": [193, 206, 1091], "programmieren": [194, 328], "tool": [194, 267, 270, 285, 312, 791, 856, 859, 870, 1125], "massacr": 194, "group": [194, 195, 209, 242, 249, 261, 262, 277, 280, 283, 284, 287, 316, 348, 363, 372, 379, 385, 389, 392, 396, 405, 409, 414, 415, 535, 543, 558, 561, 564, 605, 614, 633, 675, 676, 700, 708, 712, 716, 718, 803, 811, 820, 860, 868, 869, 923], "kick": 194, "encapsul": [194, 403, 543, 709], "flow": [194, 224, 230, 245, 252, 255, 265, 266, 271, 272, 372], "pointer": [194, 195, 211, 237, 238, 240, 258, 260, 291, 380, 381, 383, 385, 401, 513, 530, 545, 549, 550, 566, 567, 568, 570, 571, 574, 594, 635, 650, 690, 691, 692, 693, 695], "standard": [194, 206, 211, 215, 230, 258, 260, 266, 351, 398, 422, 500, 560, 570, 603, 614, 616, 643, 808, 892, 1014, 1064, 1107], "librari": [194, 206, 211, 230, 258, 260, 266, 345, 420, 425, 426, 430, 500, 560, 570, 603, 614, 643, 886, 957, 958, 1064, 1132], "stl": [194, 513, 529, 530, 531, 562, 570, 571, 599], "07": [195, 211, 242, 275, 276, 310, 314, 328], "kid": 195, "recapitul": 195, "some": [195, 213, 218, 257, 260, 270, 678, 709], "jump": [195, 383], "complic": [195, 462, 956], "Be": [195, 436, 440, 441, 545, 550, 604, 696, 701], "toolbox": 195, "databas": [195, 287, 620, 744, 1020, 1022, 1057, 1073, 1074, 1076], "gtest": [195, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111], "smart": [195, 211, 237, 238, 240, 260, 291, 513, 690, 691, 692, 693], "polymorph": [113, 195, 484, 485, 486, 487, 488, 489, 490, 493, 610, 699], "datenbank": 197, "showcas": 197, "full": 197, "kommt": 197, "db": 197, "aufgab": 197, "formulieren": 197, "damit": 197, "dies": 197, "http": [197, 285], "verbindung": 197, "client": [197, 473, 1080], "schicken": 197, "jetzt": 197, "schickman": 197, "weg": 197, "vom": [197, 328], "server": [197, 1080], "php": 197, "j": 197, "empfangen": 197, "nun": 197, "muessen": 197, "verwandlen": 197, "liter": [198, 305, 457, 709, 710], "quot": [198, 202, 228, 1072], "friend": [198, 705], "sinc": [198, 231, 237, 238, 240, 291, 552, 1009], "pars": [198, 993, 1016, 1042], "sap": [199, 252, 254, 255, 256, 257, 294, 328], "export": 199, "requir": [199, 230, 277, 280, 312, 423, 435, 456, 459, 478, 479, 480, 484, 485, 486, 487, 488, 489, 490, 657, 893, 900, 1020, 1021, 1042, 1051, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061], "solut": [199, 375, 397, 420, 429, 435, 436, 437, 440, 441, 446, 455, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 545, 572, 602, 639, 641, 648, 672, 673, 682, 803, 822, 881, 883, 887, 956, 958, 974, 1101], "terminologi": [202, 270, 800, 938, 1071], "31": [203, 211, 219, 328], "numer": 203, "ai": 203, "mountain": 203, "over": [205, 213, 215, 717, 872, 1002, 1003], "io": [205, 221, 249, 253, 406, 750, 751, 806, 906], "common": [205, 407, 419, 585, 967, 976], "wtf": [205, 890, 938], "creativ": [208, 792, 980], "shift": [208, 359, 553], "sampl": [208, 698, 768, 823, 1021, 1042, 1063, 1091, 1098, 1123], "hmmm": 209, "02": [113, 211, 216, 230, 249, 322, 328, 805], "undefin": [211, 1005], "behavior": [211, 687], "again": [211, 259, 270, 547, 634, 846, 983, 1114], "26": [211, 241, 248, 261, 262, 263, 264, 283, 284, 286, 310, 328], "repeat": [211, 838], "quickli": 211, "algorithm": [211, 228, 252, 260, 291, 383, 496, 513, 530, 565, 566, 570, 571, 580, 584, 1069, 1071], "functor": [211, 513, 578, 677, 679, 680, 698], "unifi": 211, "model": [211, 1069, 1071], "uml": [211, 449], "todai": [211, 959], "associ": [211, 362, 449, 589, 590], "dynam": [211, 242, 261, 262, 263, 283, 287, 291, 390, 517, 518, 519, 571, 604, 605, 722, 752, 753, 957, 977, 986], "alloc": [211, 407, 527, 572, 597, 598, 605, 737, 760, 902, 966], "week": 211, "zahl": 213, "miscellanea": 213, "brace": [213, 237, 238, 240, 291, 637, 638, 639, 640, 1083], "singl": [213, 420, 445, 882, 940, 1105], "hour_of_dai": 213, "membership": [213, 1000], "best": 213, "intro": [215, 249, 310, 529, 530, 531, 906, 960], "doc": [215, 285], "ident": [215, 278], "datenypen": 215, "libarari": 215, "chainmap": 215, "dequ": 215, "suchalgorithmen": 215, "pitfal": [215, 258, 261, 306, 541, 610, 635, 663, 680], "fromkei": [215, 228], "join": [215, 221, 1010, 1037], "lstrip": [215, 302], "rstrip": [215, 302], "sequentiel": 218, "konstant": 218, "suchzeit": 218, "metaprogram": 218, "everywher": [218, 234, 545, 964], "defaultdict": [218, 243], "hello": [221, 231, 332, 667, 744, 745, 990], "world": [221, 332, 339, 744, 745, 990], "blahblah": [221, 225, 228, 231, 570, 989], "mqtt": [221, 284, 287, 1058, 1080], "commandlin": [221, 249, 287, 296, 301, 384, 412, 419, 826, 881, 904, 938, 993, 1016], "lifetim": [221, 347, 376, 680, 694, 702, 1073], "preview": [221, 430], "explicit": [221, 341, 537, 549, 640, 678, 680, 693, 706, 974], "max": 221, "iteratoren": 221, "generatoren": 221, "ordereddict": 221, "duck": [221, 237, 238, 240, 277, 280, 291, 976], "resolut": 221, "order": [221, 521, 963, 983], "mro": 221, "super": 221, "__bases__": 221, "__mro__": 221, "self": [221, 545, 978], "call": [221, 377, 381, 407, 411, 413, 513, 769, 886, 892, 921, 927, 986], "mangl": [221, 546], "udemi": 221, "claus": [221, 261, 283, 287, 963], "lambda": [221, 237, 238, 240, 267, 291, 635, 676, 677, 678, 679, 698, 1091], "oppos": 221, "20": [222, 236, 240, 258, 260, 271, 272, 273, 291, 302, 310, 328, 954], "part": [222, 1107], "discuss": [224, 261, 262, 316, 341, 343, 707, 769, 774, 782], "chart": 224, "interact": [225, 273, 990, 1041], "1st": 225, "explan": [225, 285], "preced": [225, 228, 362, 995], "float": [225, 228, 285, 995], "einschub": 225, "vergleich": 225, "filterketten": 225, "zen": 225, "datensatz": 225, "notat": 225, "letzt": 225, "letzten": 225, "infinit": [228, 967], "long": [228, 635], "comparison": [228, 537, 584, 717, 791, 983, 995], "digit": [228, 310, 1031], "english": [228, 312, 1031], "determin": [228, 812, 1028, 1038, 1039], "maximum": [228, 1028, 1038, 1039], "two": [228, 382, 475, 476, 537, 556, 640, 934, 1028, 1029, 1038, 1039], "out": [228, 261, 262, 442, 540, 569, 570, 928, 942, 959, 1001], "duplic": [228, 420, 562, 895], "control": [113, 230, 245, 252, 255, 265, 266, 271, 272, 442, 663, 863, 871], "nest": [231, 373, 386], "onli": [231, 257, 383, 650, 698, 739, 1033], "itertool": 231, "chain": [231, 769], "destructor": [231, 521, 527, 542, 607, 612, 692], "prient": 233, "next": [233, 406, 671, 1105], "standesregist": 233, "sqlite3": [233, 423, 1020, 1076], "xml": [233, 1089], "tree": [233, 739, 766, 804, 830, 837, 875, 882, 921], "projektabschlusstag": 233, "id": [234, 262, 803, 823, 883, 909, 921, 1113], "anyth": 234, "defin": [234, 429, 541, 678, 963], "own": [234, 419, 647, 657, 803], "lookup": [234, 505, 506], "vorbesprechung": 236, "legend": 236, "neuerungen": 236, "seit": 236, "2011": [236, 237, 238, 240, 328], "ausblick": 236, "thank": [237, 238, 240, 291], "you": [237, 238, 240, 291, 650], "readablil": [237, 238, 240, 291], "writabl": [237, 238, 240, 291, 893], "err": [237, 238, 240, 291, 594, 684], "bind": [237, 238, 240, 291, 684, 689, 697, 698, 1076], "auto": [237, 238, 240, 291, 635, 650, 683, 684, 913, 1099], "without": [237, 238, 240, 291, 551, 572, 646, 902], "simpli": [237, 238, 240, 291, 883], "deserv": [237, 238, 240, 291], "ag": [237, 238, 240, 291, 625], "overrid": [237, 238, 240, 291, 682], "delet": [237, 238, 240, 291, 518, 587, 673, 826], "strongli": [237, 238, 240, 291, 636], "enum": [237, 238, 240, 291, 399, 636, 734], "deleg": [237, 238, 240, 291, 641], "nullptr": [237, 238, 240, 291, 649], "rvalu": [237, 238, 240, 644, 647, 648], "skeleton": [238, 240, 258, 260, 555, 793, 794], "perfect": [240, 357, 399, 697], "view": [240, 638, 685, 687, 688, 730, 792], "design": [113, 241, 259, 261, 262, 277, 280, 328, 345, 402, 417, 441, 445, 455, 608, 1121], "architectur": [241, 328, 417, 635, 674, 766], "pattern": [241, 259, 261, 262, 328, 441, 455, 967, 1121], "mondai": 241, "tuesdai": 241, "wednesdai": 241, "forc": [242, 356], "front": [242, 261, 283, 977], "seri": [242, 245, 265, 266, 271, 272, 513, 1050, 1057, 1082], "piec": 242, "go": [242, 895, 1072], "kickoff": [242, 261, 262, 277, 280, 284, 287], "livehack": [242, 251, 419, 442, 644, 729, 1005, 1093, 1100], "Such": [243, 615, 648], "noob": 245, "wsl": [249, 258, 260, 805, 954], "quick": 249, "permiss": [249, 270, 811, 813, 814, 815, 821, 825, 844, 875], "uart": [249, 797], "susi": 249, "untold": [249, 252, 258, 259, 262], "whet": [250, 251], "appetit": [250, 251], "panda": [250, 252, 253, 255, 257, 259, 272, 284, 1069, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088], "regex": 250, "pipelin": 251, "categori": 251, "payment": 251, "select": [251, 257, 259, 863, 870, 930, 1082, 1083, 1085, 1087, 1105], "uncategor": 251, "dataset": [252, 256, 257, 1068, 1070], "origin": [252, 255, 562, 679, 680, 776, 1072], "automat": [252, 255, 275, 353, 376, 672, 1120], "cleanup": [252, 255, 774, 785], "conversiosn": 253, "outlook": [255, 291], "specif": [255, 915, 1052], "usecas": 257, "drop": [257, 437, 685], "column": [257, 1082, 1083, 1085, 1086, 1087, 1088], "nan": 257, "datafram": [257, 1069, 1082, 1086], "isna": 257, "to_datetim": 257, "dated": 257, "workabl": 257, "usag": [257, 262, 386, 390, 413, 429, 433, 478, 493, 539, 576, 577, 583, 610, 638, 642, 650, 694, 695, 696, 725, 769, 809, 848, 865, 872, 896, 940, 1018], "modifi": [257, 394, 401, 478, 912, 974, 1004, 1088], "increas": 257, "price": 257, "Of": [257, 266, 277, 280, 420, 491, 537, 569, 570, 610, 648, 680, 685, 695, 697, 707, 713, 714, 715, 793, 794, 801, 893, 904, 928, 942, 963, 966, 986, 1082, 1088], "particular": 257, "store": [257, 394, 442, 912, 974], "readabl": [257, 397, 709, 898], "combin": [257, 360, 456, 457, 470], "prefer": [258, 260], "ubuntu": [258, 260, 954], "under": [258, 260, 828, 888, 961], "unsupport": 258, "heavi": [258, 260, 802], "weight": [258, 260], "resourc": [258, 312, 545, 605, 693, 706, 762], "r": [258, 845, 882], "littl": [258, 368, 419, 989], "concurr": 258, "far": [258, 702, 1071], "fact": [259, 748, 810, 977, 980], "fixtur": [259, 494, 717, 1098, 1099, 1109, 1110, 1111], "omin": [259, 962], "warm": 260, "resolv": 260, "cont": 260, "d": [260, 442], "insid": [261, 262, 547, 552, 647, 648], "construct": [261, 283, 287, 982, 999], "emphasi": [261, 283, 287], "recoveri": [261, 262, 283, 284, 287], "broader": 261, "sens": 261, "morn": [262, 266, 270, 272, 284], "pytest": [262, 1097, 1098], "awaken": 266, "bash": [270, 328, 846, 1114], "bourn": [270, 846, 1114], "inspect": [270, 853, 856], "wakeup": [270, 272, 926, 928], "redirect": [270, 806, 807, 808, 809, 832, 845, 895], "pipe": [270, 687, 792, 806, 807, 809, 810, 857, 859], "archiv": [270, 788, 789, 791, 792, 954, 955, 958], "compress": [270, 788, 789, 791, 792], "network": [270, 459, 760, 761, 864, 889, 1135], "least": [270, 1105], "day2": 272, "interpret": [273, 411, 443, 456, 457, 470, 471, 1041], "len": 273, "abl": 273, "callabl": [273, 698], "summer": [277, 280, 313], "sandbox": [277, 280], "equal": [278, 491, 537, 553, 554, 555, 556, 557, 577, 983], "spoiler": 280, "annot": 281, "multiprocess": 283, "idea": 283, "toolcas": [284, 291, 653, 654, 655], "constexpr": [291, 642], "constinit": 291, "constev": 291, "semant": [291, 644, 645, 646, 647, 648, 934], "erasur": 291, "versu": [291, 957], "static": [291, 376, 400, 491, 551, 552, 956, 957, 958, 981], "begin": [293, 331, 685], "checker": 295, "blinklicht": [296, 297, 298, 299], "electron": [296, 863], "aspect": 296, "circuitri": 296, "header": [296, 375, 421, 427, 552, 870, 1053], "pinout": [296, 870], "unittest": [299, 1099, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1136], "ece19": 300, "g2": [302, 794], "big": [302, 328, 754], "swoop": 302, "size": [302, 351, 510, 660, 842], "chunk": 302, "line": [302, 346, 378, 540, 809, 826, 992, 1033, 1044, 1048], "str": [302, 985], "byte": 304, "btw": 305, "wertebereich": 305, "sidenot": [306, 1006], "pure": [306, 610, 612, 1006], "beauti": [306, 413, 797, 872, 1006], "login": [307, 801, 873], "formalit\u00e4ten": 308, "ec": [309, 324, 326, 793, 794], "daili": 310, "org": [285, 310], "pass": [310, 550], "fail": [310, 897, 1098, 1105, 1107], "reiter": 310, "argpars": [310, 993, 1016], "onc": 310, "deutsch": [311, 328], "lehrinhalt": 311, "lernergebniss": 311, "lv": 311, "empfohlen": [311, 1114, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "verpflichtend": 311, "fachliteratur": 311, "lernressourcen": 311, "instrument": 311, "art": 311, "vermittlung": 311, "voraussetzungen": 311, "begleitbedingungen": 311, "pr\u00fcfungsmethod": 311, "beurteilungskriterien": 311, "mode": [312, 422, 811, 863, 896, 990, 1014], "deliveri": [312, 937, 938], "co": 312, "requisit": 312, "assess": 312, "criteria": [312, 922], "whose": 314, "fault": 314, "newcom": 315, "task": [316, 924], "jjjj": 318, "futur": [319, 709], "sidewai": [319, 552, 698, 709, 962, 967], "bisher": 328, "gehalten": 328, "entwickl": 328, "fortgeschritten": [328, 1116], "wiener": 328, "neustadt": 328, "einf\u00fchrung": [328, 1115, 1117, 1124], "ober\u00f6sterreich": 328, "pictur": [328, 754], "obersteiermark": 328, "korn": 328, "salzburg": 328, "ausgew\u00e4hlt": 328, "themen": 328, "2018": 328, "raum": 328, "n\u00fcrnberg": 328, "oberb\u00fcren": 328, "schweiz": 328, "2017": 328, "m\u00fcnchen": [328, 1113], "lowlevel": 328, "refresh": 328, "programmiererstandpunkt": 328, "2016": 328, "wien": 328, "workshop": 328, "bodenseo": 328, "hemmenhofen": 328, "bodense": 328, "systemnah": 328, "2014": 328, "mathia": 328, "kettner": 328, "siemen": 328, "braunschweig": 328, "intermedi": [328, 468, 959, 976], "scratch": [328, 1113], "lpd": 328, "hannov": 328, "unter": 328, "k\u00f6ln": 328, "projektverwaltung": 328, "subvers": [328, 1130], "lka": 328, "niedersachsen": 328, "konfigur": 328, "gnu": [328, 411, 940, 1125], "make": [328, 425, 492, 634, 673, 750, 793, 794, 941, 942, 1125], "2012": 328, "hamburg": 328, "fehlerdiagnos": 328, "polizei": 328, "stia": 328, "admont": 328, "bi": 328, "2010": 328, "softwareentwicklung": 328, "darmstadt": 328, "ulm": 328, "bundeswehr": 328, "wildflecken": 328, "cool": [331, 1009], "gui": 331, "Their": [331, 351], "hobbi": 331, "histori": [331, 536, 634, 730, 934, 959, 989, 1068], "second": [333, 335], "fahrenheit": [334, 336, 338, 465], "tabl": [334, 336, 338, 491, 983], "simplif": 335, "constant": [337, 352, 377, 407, 468], "preprocessor": [337, 377, 378], "macro": [338, 377, 378, 427, 725, 746], "outsid": 339, "cat": [339, 851], "poor": [339, 340], "wc": 340, "definit": [341, 343, 345, 353, 371, 373, 374, 377, 429, 552, 635, 725, 926, 1003], "memset": 341, "histogram": 342, "nonsens": 343, "signatur": 343, "declar": [343, 344, 373, 374, 375, 552], "mistak": 345, "stdin": [346, 859, 873], "variant": [351, 440, 446, 635, 711, 934], "qualifi": 351, "width": [351, 383, 557, 570, 871, 1001], "escap": [352, 1008], "logic": 355, "implicit": [356, 695], "sign": 356, "truncat": [356, 902], "propag": 356, "unsign": 356, "compil": [356, 373, 378, 394, 395, 420, 421, 422, 538, 541, 545, 674, 695, 746, 766, 940, 943, 952, 956], "warn": [356, 362, 378, 916, 938], "cast": 356, "increment": [357, 570, 663, 974], "decrement": [357, 570], "confus": [357, 995, 1083], "manipul": [359, 695, 902, 938], "bitwis": [359, 1083], "AND": 359, "OR": 359, "xor": 359, "right": [359, 1045], "invert": [359, 1082], "complement": 359, "summari": [362, 537, 698, 766, 792, 957, 977, 1085, 1087], "true": [365, 440, 550, 1086], "fals": 365, "truth": 365, "option": [365, 412, 427, 428, 429, 792, 826, 828, 848, 855, 870, 882, 1072], "matter": 366, "distinct": 367, "purpos": [368, 906], "closer": 368, "comma": 368, "infam": 368, "idiom": 368, "bodi": 369, "goto": 371, "label": [371, 1087], "monolith": [373, 420, 442, 495], "separ": [373, 374, 420, 442, 707, 850, 956], "visibl": [376, 400], "includ": [284, 377, 431, 1010], "replac": [377, 480], "inlin": [377, 407, 540, 552], "guard": 377, "rule": [378, 417, 538, 541, 552, 640, 648, 685, 804], "span": 378, "stringif": [378, 985], "token": 378, "address": [380, 737, 780, 803, 870, 924, 1083], "arbitrari": [383, 570, 962, 986], "see": [384, 797, 802, 803, 808, 809, 888, 889, 890, 892, 919, 922, 926, 928, 1007, 1071], "struct": [386, 387, 402, 537, 626, 689], "typedef": 388, "alia": 388, "singli": 391, "volatil": [393, 827], "lie": 393, "valid": 393, "handler": [393, 937, 938], "intrins": 394, "atom": [394, 704, 709, 764, 765, 769, 770, 785, 911], "builtin": 394, "align": 395, "unalign": 395, "pad": 395, "saniti": [397, 405, 419], "readabilti": 397, "shoot": 397, "offens": 397, "unobvi": 397, "ambigu": [397, 403, 640], "smell": 397, "know": 398, "size_t": 398, "discret": 399, "tradit": [399, 417, 986], "approach": [399, 427, 428, 429], "wishlist": 399, "close": [399, 445, 690, 934], "somewhat": 400, "contriv": 400, "hoorai": 400, "correct": [401, 548, 682], "const": [401, 510, 527, 547, 548, 550, 622, 623, 635, 650, 684, 689], "non": [401, 484, 485, 486, 487, 488, 489, 490, 527, 547, 1105], "good": [402, 427, 428, 537, 552, 570, 639, 648, 657, 658, 685, 687], "old": [402, 552, 570, 635, 648, 657, 658, 687], "c99": 402, "explict": 403, "safeti": [403, 419], "scheme": 403, "artifici": [403, 1065], "valgrind": [404, 518], "action": [404, 938], "optim": [406, 407, 408], "bound": [406, 407, 518, 922], "unnecessari": 407, "peephol": 407, "subexpress": 407, "elimin": [407, 695, 1033], "strength": 407, "reduct": 407, "fold": 407, "invari": 407, "unrol": 407, "tail": [407, 857], "cpu": [407, 803, 922, 928], "cach": [408, 429, 685], "multidimension": 408, "thrash": 408, "profil": [410, 411, 413, 414], "donald": 410, "knuth": 410, "toni": 410, "hoar": 410, "larri": 410, "wall": 410, "practic": 410, "brian": 410, "w": 410, "kernighan": 410, "rob": 410, "pike": 410, "gprof": 411, "flat": 411, "callgrind": 412, "analysi": 412, "per": [412, 734, 774, 1110], "kcachegrind": 412, "oprofil": 413, "much": [413, 428, 679, 961], "wide": 413, "offlin": 413, "graphic": 413, "accomplish": 417, "disclaim": [417, 805], "principl": [417, 445], "yagni": 417, "uncl": 418, "bob": 418, "typic": [419, 804, 908, 924], "bookkeep": 419, "effort": 419, "spaghetti": 419, "request": [419, 725, 727, 746, 748, 906], "concaten": [419, 1081], "input": [419, 808, 966, 1069], "yyyi": 419, "mm": 419, "where": [419, 425, 802, 940], "testabl": 419, "explicitli": [419, 678, 695], "categor": 419, "net": 419, "place": [419, 496, 541, 582, 793, 794, 1004], "overengin": [419, 552], "boilerpl": [420, 679, 762], "execut": [420, 426, 811, 957, 963, 971, 991, 1040, 1105, 1107], "consist": [420, 737], "paus": 422, "diagram": 422, "cmake_build_typ": 422, "k": [422, 1066], "printf": [422, 539], "popular": [422, 798], "find_packag": 423, "prefix": [425, 962], "target": [425, 426, 428, 431, 432, 494, 900, 941, 1120], "runpath": 425, "abi": 425, "blacklist": [427, 428], "flag": [427, 616, 752, 892, 1009], "libhello": 427, "bad": [427, 428, 685, 735], "push": 428, "target_compile_definit": 428, "backlist": 428, "availablil": 428, "use_blacklist": 429, "normal": 430, "subdirectori": 431, "reorgan": 431, "i2c": [435, 870, 872], "subhierarchi": 435, "instanti": [435, 442, 591, 652, 732], "adapt": [436, 442, 451, 456, 458, 465, 470, 698], "must": [436, 899], "adapte": 436, "asensor": 436, "real": [113, 436, 544, 635, 696, 823], "measur": [436, 479, 710, 926, 928], "motiv": [437, 440, 456, 457, 553, 636, 639, 641, 650, 652, 677, 683, 786, 968, 978, 984], "insert": [437, 503, 504, 587, 588, 591, 592, 593, 627, 697, 713, 714, 754], "bulk": 437, "6a": 437, "initializer_list": [437, 638, 640], "socialdb": 438, "composit": [439, 449, 453, 467, 717], "filesystem": [439, 717, 934], "thermomet": [439, 459, 460, 473, 474, 493], "aggreg": [440, 449, 639], "conret": 440, "realiz": 440, "situat": [440, 883], "constantsensor": 440, "decoratedconstantsensor": 440, "randomsensor": [440, 481], "decoratedrandomsensor": 440, "verifi": [440, 838, 872, 874, 1069], "still": [440, 635, 961, 966], "hold": [440, 982], "studi": [442, 683, 684, 951], "heat": 442, "pull": 442, "logger": [113, 442], "dbuslogg": 442, "dbusvaluestor": 442, "either": 442, "stop": [442, 693], "help": [442, 826, 858, 1093, 1100], "observ": [444, 472, 968], "which": [445, 899, 940], "liskov": 445, "substitut": [445, 550], "segreg": 445, "invers": [445, 927], "proxi": [446, 456, 459, 460, 470, 473, 474], "foundat": 447, "hierarchi": [447, 560, 804, 963], "hypothet": [447, 983], "singleton": [448, 461, 462, 463, 475, 476, 477], "connector": 449, "uniniti": [457, 550], "round": [460, 474], "flexibl": [461, 462, 475, 476], "strict": [462, 476], "inflex": [463, 477], "i2csensorfactori": 464, "concret": [464, 475, 476], "i2csensorfactory_vendor1": 464, "stub": [473, 773], "socialinsur": [475, 476], "oegk": [475, 476], "sv": [475, 476], "introduc": [478, 539, 685], "relationship": [478, 612, 613, 1069], "onewir": [478, 494, 495, 872, 900], "firstnam": 478, "lastnam": [478, 628, 630], "w1sensor": [478, 495], "answer": [478, 677], "try": [482, 560, 693, 963], "ledstripedisplay_nopoli": 484, "cover": [484, 485, 486, 487, 488, 489, 490, 493], "hysteresis_nopoli": 485, "averagingsensor_nopoli": 486, "constantsensor_nopoli": 487, "mocksensor_nopoli": 488, "randomsensor_nopoli": 489, "mock": 490, "shape": [491, 826], "procedur": 491, "circl": 491, "area": [491, 557], "squar": 491, "massag": 492, "sub": 492, "notfound": 494, "find_is_const": 494, "isol": [494, 1073, 1110], "realiti": 494, "pc": 494, "greater": 498, "odd": 499, "overwrit": 503, "sunni": [504, 506, 509, 893, 897, 898, 899], "uniquifi": 511, "transcript": 513, "malloc": 518, "free": 518, "mismatch": [518, 883], "across": 521, "ownership": [526, 527, 528, 695, 811], "raii": [526, 527, 528, 706], "dealloc": 527, "naiv": [530, 551, 602, 782, 937, 967, 1082], "ol": [537, 684], "look": [537, 888, 889, 890], "distanc": [537, 556], "length": 537, "manual": [538, 541, 545, 698, 826, 886, 904, 907, 968], "specifi": [539, 893], "otherwis": 539, "lifecycl": 542, "dragon": [545, 701], "memberwis": 545, "straighforward": 545, "correctli": 545, "underli": [546, 636], "mechan": 546, "just": 546, "pollut": 548, "hidden": [549, 848], "cannot": 550, "easili": 550, "odr": 552, "litt": 552, "defnit": 552, "ostream": [553, 554, 555, 556, 557], "cout": 553, "cuboid": 554, "upon": [554, 556, 557], "point3d": [554, 556], "surfac": 554, "volum": [554, 954], "unari": [555, 556], "rectangl": [556, 557], "coordin": [556, 557], "absolut": [556, 717, 850, 1063], "height": 557, "catch": [560, 963], "throw": 560, "spirit": [570, 694, 695, 696], "pre": [572, 639], "destin": [572, 893], "back_insert_iter": 572, "binary_search": 575, "intellig": [575, 581, 970, 1065], "find_if": [578, 628], "customiz": 578, "for_each": 579, "lower_bound": 581, "reverse_copi": [583, 602], "characterist": [585, 588], "modif": [588, 956], "fill": [591, 1076], "definin": 592, "subscript": 593, "eras": 594, "multimap": 596, "deriv": [606, 607], "larger": [610, 958, 966], "want": [610, 635, 646, 650, 673, 734, 739, 897, 980], "substr": [615, 1010], "paint": 616, "american": 616, "onto": 616, "moodl": [617, 799, 813, 814, 839, 946], "quiz": [617, 799, 813, 814, 839, 946], "cin": 619, "n": 625, "year": 625, "transform": [626, 698, 714, 966], "wrong": [629, 709, 893], "great": [634, 924], "around": [635, 663], "school": 635, "item": [635, 697, 713, 714, 715, 961, 967], "inevit": 635, "union": [635, 711], "consider": [635, 924], "uniform": 637, "implementor": 638, "direct": [638, 737], "inconsist": 639, "heap": 639, "refus": 639, "narrow": 639, "mess": [640, 1077], "realist": [640, 964, 1098], "int": [640, 919], "nicolai": 640, "josutti": 640, "complain": 640, "said": 643, "guidelin": 643, "well": 643, "smartptr": 645, "lvalu": [648, 697], "wish": [648, 976], "theori": 648, "Ones": 648, "sai": [650, 828], "decai": 650, "chosen": 652, "rescu": [652, 677, 699, 942, 962, 983, 1088], "syntact": [652, 962], "variat": [652, 684, 689, 766], "conceptless": [653, 654], "fulfil": 657, "has_siz": 657, "index_returns_doubl": 657, "func": 658, "ret": 661, "doubl": 661, "foreword": 663, "prototyp": 663, "examp": 663, "explain": 663, "drive": [663, 863], "anatomi": [663, 744], "resum": 663, "suspens": 663, "caller": 663, "co_yield": 663, "mimick": 663, "fibo": 664, "suspend": [669, 670, 671], "decis": [674, 922], "cleanli": 674, "captur": [677, 678, 680], "care": 677, "handwritten": [679, 680], "proggi": 679, "morph": 679, "possibl": 680, "temporari": [680, 961, 1098], "made": 680, "veri": [284, 682, 1089], "hard": [682, 847], "aris": 682, "gool": 684, "prevent": [684, 695], "accident": [684, 714], "dangl": 685, "easi": [685, 702], "constraint": 685, "dogmat": 685, "sigh": 685, "storag": [687, 915], "abbrevi": 687, "avail": [687, 725], "compat": 689, "unique_ptr": [691, 694, 695], "shared_ptr": [691, 694, 714], "handwrit": 693, "ctor": 693, "auto_ptr": 693, "mayb": 693, "uniqu": [694, 715], "But": [694, 897], "juggl": 694, "make_shar": 694, "cyclic": 694, "chanc": 695, "leakag": 695, "keystrok": 695, "make_uniqu": 695, "acknowledg": 695, "prove": 695, "weak_ptr": [696, 714], "borrow": 696, "invalid": 696, "univers": 697, "dual": 697, "bag": [697, 713, 714, 715], "null": 698, "pointlessli": 698, "hardcod": [698, 730], "placehold": 698, "classic": 699, "upsid": 699, "technic": 699, "downsid": 699, "joinabl": 702, "detach": [702, 909], "cornercas": 702, "recursive_mutex": 705, "timed_mutex": 705, "recursive_timed_mutex": 705, "lock": [706, 709, 758, 771], "unlock": [706, 771], "consid": 706, "acquisit": [706, 1050], "lock_guard": 706, "condition_vari": 707, "safe": [707, 938], "predic": [707, 913], "concern": 707, "promis": 709, "chrono": [709, 710], "utterli": 709, "becom": [709, 958], "readi": 709, "minim": 709, "pro": 709, "clock": 710, "sleep": [710, 764, 769, 770], "rel": [717, 850, 971], "compon": 717, "creation": [717, 798, 909, 910], "create_directori": 717, "entri": 717, "classif": 717, "is_xxx": 717, "directory_entri": 717, "modern": [721, 722, 723, 1118], "slideshow": [722, 725, 727, 730, 732, 735, 737, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 769, 771, 774, 776, 780, 783, 786, 934, 938, 1006, 1094, 1101], "hook": 724, "necessari": 724, "ioctl": [724, 725, 727, 746, 779, 892], "vtabl": 725, "kernelspac": 725, "_io": [725, 746], "major": [729, 730], "minor": [729, 730], "space": [730, 780, 799, 802, 803, 924], "hair": 734, "pretti": 734, "wswitch": 734, "dma": [737, 738, 762], "physic": 737, "scatterlist": 737, "sync": 737, "when": 739, "explod": 739, "loadabl": 744, "init": [744, 762, 804, 1113], "exit": [744, 873, 909, 919], "unload": 744, "raspi": [746, 747, 883], "legaci": [746, 1036], "api": [746, 776, 908, 927], "my_activate_gpio": 746, "servic": [748, 804, 1080], "routin": [748, 762], "reserv": 750, "kmalloc": [752, 753, 769], "doubli": [754, 755], "node": [754, 895], "empti": [754, 845, 977, 1033], "consequ": 756, "rt": [758, 759], "mutual": [758, 771], "exclus": [758, 771], "registr": 760, "layer": 760, "util": [760, 865], "pci": [762, 763], "foremost": 762, "probe": 762, "bar": 762, "rasperri": 766, "crossdev": 766, "artifact": [766, 1066], "bootload": 766, "jjj": 767, "mainten": 768, "spinlock": [769, 771, 772], "spin_lock": 769, "irq": 769, "spin_lock_irqsav": 769, "spin_unlock_irqrestor": 769, "ah": [769, 1077], "bulletproof": 771, "dup": 773, "fork": 773, "timestamp": [284, 774], "defer": [774, 785], "jiffi": 776, "wheel": [776, 1019], "get_one_ev": 779, "copy_to_us": 779, "noth": 782, "o_nonblock": 782, "wake": 783, "workqueu": [785, 786, 787], "did": 785, "destroi": [786, 1100], "gzip": 790, "tar": 792, "etiquett": 792, "Being": 792, "g1": 793, "lot": [793, 794], "precondit": [793, 794], "credenti": [793, 812], "backup": [793, 794, 828], "busi": 794, "ok": [797, 919], "serial": 797, "pseudo": 797, "partit": 797, "proc": 797, "authent": [801, 879], "prompt": 801, "verif": [801, 1052], "success": 801, "imperson": 801, "uid": [803, 822, 823], "parent": [804, 921], "child": 804, "subsystem": 805, "0": [805, 919, 1073, 1113], "stdout": [809, 859, 873, 895], "stderr": 809, "trick": [809, 1008], "teacher": 811, "constel": 811, "root": [811, 823], "octal": 811, "tune": [811, 926, 1072], "setuid": [822, 823], "passwd": [822, 842, 898, 1042], "sudo": 822, "password": [822, 1030], "chmod": [822, 991], "toi": 822, "effect": [823, 938, 977], "ugli": 824, "sticki": 824, "umask": 825, "edit": 826, "tabul": 826, "filenam": 826, "bashrc": [827, 828], "cp": 828, "similar": 828, "its": [828, 1072], "pwd": 829, "cd": 829, "mkdir": [835, 845], "funni": 836, "dev": 841, "touch": 845, "rm": 845, "rmdir": 845, "renam": 849, "mv": 849, "somewher": 849, "cut": [852, 1001], "durchsuchen": 854, "optionen": 854, "verkn\u00fcpfungen": 854, "grep": 855, "less": [858, 959, 983], "brushless": 863, "motor": 863, "speed": 863, "esc": 863, "fwd": 863, "rev": 863, "calibr": 863, "datagram": [284, 864], "exchang": 864, "packet": 864, "vcan": 865, "frame": [866, 1081], "mcp2515": 867, "schemat": 867, "solder": 867, "spi": 867, "lm73": 870, "slave": [870, 872], "master": [870, 872], "enabl": [870, 872], "bcm2835": 870, "datasheet": 870, "connect": [870, 889, 1076], "i2cdetect": 870, "detect": 870, "hwmon": [870, 872], "monitor": [870, 872], "pwm": [113, 871], "pca9685": 871, "puls": 871, "wire": [871, 872], "ds18b20": 872, "alter": 872, "w1": 872, "attach": 872, "pin": [872, 906], "ds2482": 872, "800": 872, "channel": 872, "announc": 872, "hotplug": 872, "lm": 872, "caveat": [872, 1073], "topologi": 872, "symptom": 872, "statu": [873, 909, 919], "adjust": [875, 952], "wear": 879, "admin": 879, "hat": 879, "scp": 882, "sshf": 883, "mount": 883, "logdata": 883, "unmount": 883, "fusermount": 883, "umount": 883, "helper": [884, 1083], "simplic": [888, 889, 890], "watch": 888, "strace": 888, "supervis": 888, "descriptor": [892, 895, 902], "filedescriptor": 892, "offset": [892, 902], "lseek": 892, "hole": 894, "o_creat": 896, "bogu": 896, "o_excl": 897, "alreadi": 897, "o_rdonli": 898, "even": [898, 899, 1025], "o_wronli": 899, "writeabl": 899, "implicitli": 899, "scatter": 902, "gather": 902, "retriev": 904, "wise": 905, "legal": 908, "pthread_join": 909, "synchron": [911, 937], "win32": 913, "reset": 913, "trylock": 918, "islock": 918, "argc": 919, "char": 919, "argv": [919, 993], "procf": 921, "pid": 921, "ppid": 921, "getpid": 921, "getppid": 921, "multitask": 922, "fair": [922, 926], "runnabl": [922, 928], "bare": 924, "metal": 924, "hm": 924, "awai": [924, 1059], "stabil": 924, "latenc": [926, 928], "nice": 926, "inexact": 926, "immedi": 926, "preempt_rt": 926, "polici": 927, "prioriti": 927, "runn": 927, "frequenc": 928, "scale": 928, "mysteri": 928, "remain": 928, "sysprog": [929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939], "mmap": 933, "segment": 933, "produc": [933, 967], "consum": 933, "mq_open": 934, "send": [934, 938], "receiv": [284, 934], "mq_send": 934, "mq_receiv": 934, "mq_close": 934, "mq_unlink": 934, "notif": 934, "mq_notifi": 934, "mqueue": 934, "sem_open": 934, "sem_wait": 934, "sem_post": 934, "sem_clos": 934, "sem_unlink": 934, "barebon": 937, "alarm": 937, "louder": 937, "innoc": 937, "sigalrm": 937, "programmat": 938, "mask": 938, "pend": 938, "sigset_t": 938, "async": 938, "seem": 940, "nm": 940, "agnost": 941, "goodi": 942, "nativ": [943, 948], "sysroot": [943, 952], "linaro": 952, "defunct": 952, "patienc": 952, "against": [952, 957, 983], "docker": 954, "autoconf": 954, "71": 954, "zoom": 956, "rememb": 956, "reloc": 957, "independ": 957, "pic": 957, "runtim": 957, "def": 959, "reach": 959, "theoret": 959, "nonloc": 959, "hood": 961, "monkeypatch": 961, "print": [961, 986], "contextlib": 961, "contextmanag": 961, "involv": 961, "prefixprint": 961, "sugar": 962, "arg": [284, 962], "kwarg": [284, 962], "functool": [962, 983], "rais": 963, "regardless": 963, "coverag": 966, "infin": 967, "form": 971, "daemon": 972, "mother": 974, "acquir": 974, "late": 976, "abtract": 976, "Its": 977, "interrelationship": 979, "salari": 980, "introspect": 980, "isinst": 980, "issubclass": 980, "classmethod": 981, "staticmethod": 981, "_make": 982, "_asdict": 982, "dunder": 983, "compar": 983, "incompat": 983, "lotsa": 983, "magic": 983, "__gt__": 983, "term": 983, "__lt__": 983, "total_ord": 983, "them": 983, "readonli": 984, "repr": 985, "__repr__": 985, "suppli": 986, "ultim": 986, "fundament": 987, "guido": 989, "van": 989, "rossum": 989, "hash": 991, "bang": 991, "she": 991, "doze": 991, "registri": 991, "indent": 992, "cosmet": 993, "rudimentari": 993, "python2": 995, "unicod": 995, "esoter": 999, "delimit": 1008, "interv": 1016, "axi": 1018, "setuptool": 1019, "manifest": 1019, "publish": [1019, 1058, 1080], "usernam": 1030, "prime": [1035, 1043, 1049], "strategi": 1042, "revert": 1044, "justifi": 1045, "activ": 1051, "dictread": [1053, 1054, 1072], "cp1252": [1053, 1055], "reader": [1055, 1056, 1072], "nohead": 1055, "both": 1061, "interrel": 1062, "product": 1063, "david": 1064, "beazlei": 1064, "raymond": 1064, "hetting": 1064, "mean": 1066, "linear": [1067, 1069, 1070], "regress": [1067, 1069, 1070], "weather": 1068, "ndarrai": 1069, "plot": 1069, "splice": 1069, "mankind": 1071, "god": 1071, "insan": 1072, "scsv": 1072, "dbapi": [1073, 1075, 1076], "transact": 1073, "postgresql": 1075, "postgr": 1075, "cursor": 1076, "queri": 1076, "ascii": 1077, "iso": 1077, "latin": 1077, "8859": 1077, "lieb": 1077, "gr\u00fc\u00dfe": 1077, "j\u00f6rg": 1077, "\u795d\u597d": 1077, "utf": 1077, "decod": 1077, "incomplet": 1079, "broker": 1080, "subscrib": 1080, "payload": 1080, "append": 1081, "deprec": 1081, "bitmap": 1083, "neat": 1083, "iloc": [1085, 1086], "Then": 1085, "inplac": 1086, "loc": [1086, 1087], "hiccup": 1087, "inclus": 1087, "lowercas": 1088, "email": 1088, "normalized_email": 1088, "ing": 1088, "elementtre": 1089, "etre": 1089, "sax": 1089, "dom": 1089, "34": 1091, "invoc": 1093, "subcommand": 1093, "upload": 1096, "pythonpath": 1098, "mark": 1098, "expect": [1098, 1107], "recogn": 1099, "meat": 1099, "freez": 1100, "recreat": 1100, "fatal": 1105, "failur": 1105, "assert_": 1105, "suit": 1105, "teardown": 1110, "organisatorisch": 1112, "buchung": 1112, "kursablauf": 1112, "kursgestaltung": 1112, "unterlagen": 1112, "grub": 1113, "97": 1113, "bauen": 1113, "prozess": 1113, "verschieden": 1113, "zielpublikum": [1114, 1116, 1117, 1122, 1124, 1129, 1130, 1136], "kursinhalt": [1114, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "vorkenntniss": [1114, 1116, 1117, 1122, 1124, 1125, 1129, 1130, 1131, 1132, 1134, 1135, 1136], "three": 1118, "prior": 1120, "beispielen": 1124, "mutter": 1125, "aller": 1125, "woch": 1129, "svn": 1130, "leftov": 284, "yesterdai": 284, "flip": [], "sketch": [], "aaarghhh": 285, "expresss": 285, "ifi": 284, "udp": 284, "compositesink": 284, "sink": 284, "mind": 962, "vo": 113, "collabor": 113, "necessarili": 113, "organiz": 113, "boil": 113, "pot": 113}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [130, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [94, "python"], [310, "python"], [315, "python"]], "Linux": [[5, "linux"], [78, "linux"], [148, "linux"], [862, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [418, "course-material"], [1063, "course-material"]], "Einleitung": [[7, "Einleitung"], [186, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [183, "Datatypes"], [186, "Datatypes"], [189, "Datatypes"], [202, "Datatypes"], [205, "Datatypes"], [213, "Datatypes"], [215, "Datatypes"], [221, "Datatypes"], [225, "Datatypes"], [228, "Datatypes"], [231, "Datatypes"], [245, "datatypes"], [252, "datatypes"], [255, "datatypes"], [263, "Datatypes"], [265, "datatypes"], [266, "datatypes"], [267, "Datatypes"], [271, "datatypes"], [272, "datatypes"], [305, "Datatypes"], [995, "datatypes"]], "Numbers": [[7, "Numbers"], [186, "Numbers"], [189, "Numbers"], [213, "Numbers"], [305, "Numbers"], [995, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [186, "Integer-Numbers"], [995, "integer-numbers"]], "Strings": [[7, "Strings"], [183, "Strings"], [186, "Strings"], [189, "Strings"], [198, "Strings"], [202, "Strings"], [202, "id3"], [205, "Strings"], [213, "Strings"], [225, "Strings"], [243, "Strings"], [246, "Strings"], [246, "id1"], [246, "id3"], [253, "Strings"], [305, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [186, "Compound-Datatypes"], [198, "Compound-Datatypes"], [202, "Compound-Datatypes"], [205, "Compound-Datatypes"], [208, "Compound-Datatypes"], [213, "Compound-Datatypes"], [215, "Compound-Datatypes"], [221, "Compound-Datatypes"], [225, "Compound-Datatypes"], [228, "Compound-Datatypes"], [231, "Compound-Datatypes"], [243, "Compound-Datatypes"], [267, "Compound-Datatypes"], [273, "Compound-Datatypes"], [996, "compound-datatypes"], [285, "Compound-Datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [186, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [186, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [186, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [186, "while"], [205, "while"], [221, "while"], [253, "while"]], "Functions": [[7, "Functions"], [42, "functions"], [186, "Functions"], [189, "Functions"], [202, "Functions"], [213, "Functions"], [215, "Functions"], [221, "Functions"], [225, "Functions"], [230, "functions"], [246, "Functions"], [253, "Functions"], [267, "Functions"], [283, "functions"], [343, "functions"], [343, "id1"], [1007, "functions"], [287, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [169, null], [170, null], [172, null], [173, null], [174, null], [175, null], [177, null], [179, null], [180, null], [184, null], [187, null], [190, null], [193, null], [194, null], [195, null], [196, null], [200, null], [203, null], [212, null], [216, null], [219, null], [222, null], [224, null], [227, null], [230, null], [233, null], [242, null], [245, null], [252, null], [255, null]], "\u00dcberblick": [[8, "uberblick"], [177, "uberblick"], [187, "uberblick"], [196, "uberblick"], [212, "uberblick"], [224, "uberblick"]], "Log": [[8, "log"], [117, "log"], [169, "log"], [170, "log"], [173, "log"], [174, "log"], [182, "log"], [184, "log"], [185, "log"], [187, "log"], [190, "log"], [194, "log"], [196, "log"], [200, "log"], [203, "log"], [212, "log"], [224, "log"], [233, "log"]], "Tag 1": [[8, "tag-1"], [160, "tag-1"], [179, "tag-1"], [187, "tag-1"], [190, "tag-1"], [196, "tag-1"], [212, "tag-1"], [224, "tag-1"]], "Tag 2": [[8, "tag-2"], [160, "tag-2"], [179, "tag-2"], [187, "tag-2"], [190, "tag-2"], [196, "tag-2"], [212, "tag-2"], [224, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [177, "live-hacking-jupyter-notebook"], [187, "live-hacking-jupyter-notebook"], [190, "live-hacking-jupyter-notebook"], [200, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [38, "links"], [117, "links"], [154, "Links"], [165, "links"], [170, "links"], [172, "links"], [174, "links"], [177, "links"], [184, "links"], [185, "links"], [187, "links"], [196, "links"], [200, "links"], [203, "links"], [206, "links"], [212, "links"], [219, "links"], [230, "links"], [233, "links"], [266, "links"], [272, "links"], [315, "links"], [393, "links"], [642, "links"], [663, "links"], [681, "links"], [692, "links"], [805, "links"], [826, "links"], [865, null], [872, "links"], [988, null], [1018, null], [1080, "links"], [1101, "links"], [1082, "links"], [1083, "links"], [1085, "links"], [1086, "links"], [1087, "links"], [1088, "links"], [743, "links"], [1019, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [178, "programmierung-grundlagen-jupyter-notebook"], [188, "programmierung-grundlagen-jupyter-notebook"], [214, "programmierung-grundlagen-jupyter-notebook"], [226, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [77, "details"], [327, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [128, null], [130, null], [132, null], [133, null], [134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [148, null], [157, null], [161, "contents"], [162, null], [416, "contents"], [518, null], [521, null], [527, null], [530, null], [618, "id1"], [795, "id1"], [815, "id1"], [834, "id1"], [840, "id1"], [843, "id1"], [860, "id1"], [868, "id1"], [869, "id1"], [876, "id1"], [885, "id1"], [901, "id1"], [903, "id1"], [905, "id1"], [920, "id1"], [930, null], [933, null], [947, "id1"], [967, null], [1022, "id1"], [1023, "id1"], [1027, "id1"], [1036, "id1"], [1050, "id1"], [1057, "id1"], [1105, null], [1107, null], [1110, null], [1118, "contents"], [1121, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [328, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [310, "github"]], "Sphinx": [[13, "sphinx"], [65, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [116, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [115, "miscellaneous"], [126, "miscellaneous"], [153, "miscellaneous"], [173, "miscellaneous"], [237, "miscellaneous"], [238, "miscellaneous"], [258, "miscellaneous"], [272, "miscellaneous"], [283, "miscellaneous"], [291, "miscellaneous"], [513, "miscellaneous"], [513, "id1"], [649, "miscellaneous"], [902, "miscellaneous"], [915, "miscellaneous"], [284, "miscellaneous"], [712, "miscellaneous"], [287, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [296, "implementation-notes"]], "Todo": [[17, "id1"], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [130, null], [159, "id1"], [162, "id2"], [162, "id3"], [418, "todo"], [514, "id1"], [517, "id1"], [520, "id1"], [523, "id1"], [526, "id1"], [529, "id1"], [532, "id1"], [723, "id1"], [727, "id1"], [735, "id2"], [929, "id1"], [932, "id1"], [936, "id1"], [1104, "id1"], [1109, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Emoji Codes (sphinxemoji)": [[31, "emoji-codes-sphinxemoji"]], "Setup": [[31, "setup"], [245, "setup"], [252, "setup"], [255, "setup"], [265, "setup"], [266, "setup"], [270, "setup"], [271, "setup"], [272, "setup"], [863, "setup"], [988, "setup"], [1100, "setup"]], "Most Used Here In This Site": [[31, "most-used-here-in-this-site"]], "All Codes": [[31, "all-codes"]], "Recipes": [[32, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[33, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[34, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[35, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[36, "layout-test-page"]], "Admonitions": [[36, "admonitions"]], "Admonition": [[36, "admonition"]], "This is an .. admonition::": [[36, null]], "Tip": [[36, "tip"]], "Note": [[36, "note"]], "Hint": [[36, "hint"]], "Important": [[36, "important"]], "Attention": [[36, "attention"]], "Caution": [[36, "caution"]], "Error": [[36, "error"]], "Danger": [[36, "danger"]], "Sidebar": [[36, "sidebar"]], "Blech Sidebar Title Blah": [[36, null]], "Sidebar \u201cKursdaten\u201d": [[36, "sidebar-kursdaten"]], "Kursdaten": [[36, null], [1114, null], [1115, null], [1116, null], [1117, null], [1122, null], [1124, null], [1125, null], [1129, null], [1130, null], [1131, null], [1132, null], [1134, null], [1135, null], [1136, null]], "Local Content": [[36, "local-content"]], "Local Heading 1": [[36, "local-heading-1"], [36, "id3"]], "Local Heading 1.1": [[36, "local-heading-1-1"], [36, "id4"]], "Local Heading 1.2": [[36, "local-heading-1-2"], [36, "id5"]], "Local Heading 2": [[36, "local-heading-2"], [36, "id6"]], "Sidebar with Local Content": [[36, "sidebar-with-local-content"]], "Bleh Content Blah": [[36, null]], "To Do": [[36, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[37, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[37, "id1"]], "All": [[37, "id2"]], "reStructuredText Cheat Sheet": [[38, "restructuredtext-cheat-sheet"]], "Further Information": [[38, "further-information"], [118, "further-information"], [193, "further-information"], [194, "further-information"], [216, "further-information"], [301, "further-information"], [310, "further-information"], [697, "further-information"]], "Local Documents": [[38, "local-documents"]], "External Links": [[38, "external-links"]], "Section References": [[38, "section-references"]], "Section That We Refer To": [[38, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[38, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[38, "footnotes"]], "Sphinxish": [[39, "sphinxish"]], "Jupyter Notebooks": [[39, "jupyter-notebooks"]], "Running Sphinx From Source": [[39, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[40, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[40, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[41, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[41, "initial-structure"]], "Snippets": [[41, null], [41, null], [41, null], [41, null], [41, null], [41, null], [43, null], [43, null], [49, null], [49, null]], "User": [[41, "user"]], "UserDB": [[41, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[41, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[41, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[41, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[41, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[41, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[42, "clean-code-messages-from-the-book"]], "Survey": [[42, null], [417, null]], "Names": [[42, "names"]], "Comments": [[42, "comments"]], "Formatting": [[42, "formatting"]], "Objects and Data Structures": [[42, "objects-and-data-structures"]], "Error Handling": [[42, "error-handling"], [884, "error-handling"]], "Boundaries": [[42, "boundaries"]], "Unit Tests": [[42, "unit-tests"], [494, "unit-tests"]], "Classes": [[42, "classes"], [192, "Classes"], [277, "classes"]], "Live Hacking: Switch To googletest": [[43, "live-hacking-switch-to-googletest"]], "Git Submodule": [[43, "git-submodule"]], "Establish Tests: Demo": [[43, "establish-tests-demo"]], "Straightforward main() Conversion": [[43, "straightforward-main-conversion"]], "Fix Shortcomings": [[43, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[44, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[44, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[44, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[44, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[44, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[44, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[44, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[44, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[44, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[44, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[44, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[45, "userdb-find-crashes-if-user-not-found"]], "State": [[45, "state"]], "Bugs": [[46, "bugs"], [52, "bugs"]], "Existing Files Are Overwritten": [[47, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[48, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[49, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[49, "write-csv-test"]], "Write CSV: Frontend Program": [[49, "write-csv-frontend-program"], [49, "id1"]], "Read CSV: Test": [[49, "read-csv-test"]], "Features": [[50, "features"]], "Search By Other Indexes": [[51, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[52, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[52, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[53, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[54, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[54, "backingstore"]], "Refactoring": [[55, "refactoring"], [495, "refactoring"], [774, "refactoring"]], "Load From BackingStore in Constructor": [[56, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[57, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[58, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [61, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[58, "biography"], [61, "biography"]], "Abstract": [[58, "abstract"], [61, "abstract"]], "Description": [[58, "description"], [61, "description"], [448, "description"], [600, "description"], [616, "description"], [619, "description"], [621, "description"], [622, "description"], [623, "description"], [624, "description"], [625, "description"], [626, "description"], [627, "description"], [628, "description"], [630, "description"], [631, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[60, "installation-notes"]], "libgpiod": [[60, "libgpiod"]], "Fedora: Prepare Tarballs": [[60, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[60, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[63, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[63, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[63, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[64, "blog"], [130, "blog"]], "Articles": [[64, "articles"]], "In the Works": [[64, "in-the-works"]], "Not Yet in the Works": [[64, "not-yet-in-the-works"]], "Revisit Existing Posts": [[64, "revisit-existing-posts"]], "pending_xref": [[65, "pending-xref"]], "C++": [[66, "c"], [109, "c"], [110, "c"], [130, "c"]], "C++: Building with CMake": [[67, "c-building-with-cmake"]], "C++: Interfaces": [[68, "c-interfaces"]], "C++: OO Basics": [[69, "c-oo-basics"]], "C++: Unit Testing": [[70, "c-unit-testing"]], "Graph": [[71, "graph"], [618, "graph"], [767, "graph"], [1022, "graph"], [1023, "graph"], [1027, "graph"], [1036, "graph"], [1050, "graph"], [1057, "graph"]], "Embedded Computing 1": [[72, "embedded-computing-1"], [77, "embedded-computing-1"]], "Current Curriculum": [[72, "current-curriculum"], [73, "current-curriculum"]], "Topics": [[72, "topics"], [73, "topics"], [97, "topics"], [98, "topics"], [100, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [165, "topics"], [165, "id2"], [193, "topics"], [230, "topics"], [233, null], [314, "topics"], [318, "topics"], [415, "topics"], [543, "topics"], [580, "topics"], [586, "topics"], [590, "topics"], [598, "topics"], [603, "topics"], [608, "topics"], [632, "topics"], [633, "topics"], [637, "topics"], [644, "topics"], [651, "topics"], [662, "topics"], [675, "topics"], [676, "topics"], [686, "topics"], [691, "topics"], [716, "topics"], [718, "topics"], [720, "topics"], [878, "topics"], [896, null], [898, null], [898, null], [944, "topics"], [950, "topics"], [951, "topics"], [971, null], [979, "topics"], [1074, "topics"], [1084, "topics"], [1097, "topics"], [129, "topics"], [348, "topics"], [363, "topics"], [372, "topics"], [379, "topics"], [385, "topics"], [389, "topics"], [392, "topics"], [396, "topics"], [405, "topics"], [409, "topics"], [414, "topics"], [535, "topics"], [558, "topics"], [561, "topics"], [564, "topics"], [605, "topics"], [614, "topics"], [700, "topics"], [708, "topics"], [712, "topics"], [917, "topics"], [923, "topics"], [1103, "topics"]], "Dependency Graph": [[72, "dependency-graph"], [73, "dependency-graph"]], "Embedded Computing 2": [[73, "embedded-computing-2"], [77, "embedded-computing-2"]], "EX: Race Conditions": [[74, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[75, "ex-avoiding-race-condition"]], "Goals": [[75, "goals"], [81, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [86, "goals"], [87, "goals"], [88, "goals"], [90, "goals"]], "Outcome": [[75, "outcome"], [81, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [172, "outcome"]], "Git Introduction": [[76, "git-introduction"]], "Embedded Computing 2019": [[77, "embedded-computing-2019"]], "Overview": [[77, "overview"], [645, "overview"], [693, "overview"], [707, "overview"], [709, "overview"], [717, "overview"], [791, "overview"], [802, "overview"], [859, "overview"], [870, "overview"], [871, "overview"], [872, "overview"], [872, "id1"], [873, "overview"], [908, "overview"]], "Knowledge Transferred": [[77, "knowledge-transferred"]], "Course Setup": [[77, "course-setup"]], "Introduction to Linux and Unix": [[79, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[80, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[81, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[82, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[83, "ex-led-temperature-display"]], "Hardware": [[83, "hardware"], [84, "hardware"]], "EX: Temperature Sensors": [[84, "ex-temperature-sensors"], [91, "ex-temperature-sensors"]], "GPIO": [[85, "gpio"]], "sysfs Interface": [[85, "sysfs-interface"]], "gpiod Interface": [[85, "gpiod-interface"]], "Multithreading": [[86, "multithreading"], [151, "multithreading"], [211, "multithreading"], [237, "multithreading"], [238, "multithreading"], [240, "multithreading"], [283, "multithreading"], [291, "multithreading"], [318, "multithreading"], [325, "multithreading"], [937, "multithreading"], [973, "multithreading"], [284, "multithreading"], [708, "multithreading"], [287, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[87, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[88, "communication-waiting-for-something"]], "Python Basics": [[89, "python-basics"]], "EX: Averaging Sensor, Display": [[90, "ex-averaging-sensor-display"]], "Simple Web Programming": [[92, "simple-web-programming"]], "Sensors Web Pages": [[93, "sensors-web-pages"]], "Embedded Computing 2020": [[95, "embedded-computing-2020"]], "SS2022": [[96, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[96, "block-1-linux-and-working-with-remote-embedded-devices"], [112, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[96, "block-2-c-on-linux-local-and-cross-development"], [112, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[96, "block-3-c"], [112, "block-3-c"]], "2022-03-08": [[97, "id1"]], "Homework": [[97, "homework"], [98, "homework"], [100, "homework"], [103, "homework"]], "2022-03-10": [[98, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[99, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[99, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[99, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[100, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[101, "ku"]], "2022-03-28": [[102, "id1"]], "2022-04-01": [[103, "id1"]], "SS2022: Logs": [[104, "ss2022-logs"]], "WS2022": [[105, "ws2022"]], "Plan: Evolution": [[105, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[106, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[106, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[106, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[106, "question-3-memory-leak"]], "Question 4: std::vector": [[106, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[107, "cross-development"], [249, "cross-development"], [943, "cross-development"], [944, "cross-development"]], "C++, OO": [[107, "c-oo"]], "Lab Exam 2023-01-17": [[108, "lab-exam-2023-01-17"]], "Project Setup": [[108, "project-setup"], [493, "project-setup"], [1051, "project-setup"]], "Exercises": [[108, "exercises"], [148, "exercises"], [153, "exercises"], [185, "exercises"], [195, "exercises"], [195, "id1"], [195, "id3"], [253, "Exercises"], [258, "exercises"], [277, "exercises"], [277, "id1"], [280, "exercises"], [446, "exercises"], [448, "exercises"], [455, "exercises"], [483, "exercises"], [500, "exercises"], [502, "exercises"], [543, "exercises"], [608, "exercises"], [632, "exercises"], [950, "exercises"], [979, "exercises"], [1023, "exercises"], [284, "exercises"], [558, "exercises"]], "Exam Submission": [[108, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[109, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[109, "unix-linux-concepts"], [110, "unix-linux-concepts"]], "Toolchain": [[109, "toolchain"], [110, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[110, "ss2023-exam-2023-06-30-solved"]], "Embedded Computing 2021": [[111, "embedded-computing-2021"]], "SS2023": [[112, "ss2023"]], "Finish: Written Exam": [[112, "finish-written-exam"]], "Embedded Computing (FH Joanneum Graz)": [[114, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[115, "git-notes"]], "Bring Local Branch Upstream": [[115, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[115, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[115, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[117, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[118, "audio-chip-bringup"]], "Goal": [[118, "goal"], [120, "goal"], [121, "goal"], [123, "goal"], [258, "goal"], [260, "goal"], [1118, "goal"], [1121, "goal"]], "Findings": [[118, "findings"]], "Get Debian 10 Kernel Config": [[119, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[119, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[119, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[120, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[121, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[121, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[122, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[123, "dirty-upgrade-path"]], "Steps": [[123, "steps"]], "Wait for Customer Hardware": [[124, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[125, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[126, "python-training-improvements"]], "Beginner Course": [[126, "beginner-course"]], "Exercise Structure": [[126, "exercise-structure"]], "Split Exercises": [[126, "split-exercises"]], "Creating Screencasts": [[127, "creating-screencasts"]], "OpenShot": [[127, "openshot"]], "SEO": [[128, "seo"]], "Sitemap": [[128, "sitemap"]], "Meta Information": [[128, "meta-information"]], "Courses": [[128, "courses"]], "Miscellaneous To Do": [[130, "miscellaneous-to-do"]], "Extensions": [[130, "extensions"]], "reST Todos": [[130, "rest-todos"]], "Styling": [[130, "styling"]], "Convert to RST/S5": [[130, "convert-to-rst-s5"]], "Examples": [[130, "examples"], [439, "examples"], [639, "examples"], [687, "examples"], [790, "examples"], [892, null]], "Convert Existing Content": [[130, "convert-existing-content"]], "Add Missing": [[130, "add-missing"]], "Structure": [[130, "structure"], [478, "structure"]], "References, Past Trainings": [[130, "references-past-trainings"]], "About": [[130, "about"]], "Learning The Web": [[131, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[132, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[132, "basics"], [203, "basics"], [230, "basics"], [245, "basics"], [265, "basics"], [266, "basics"], [266, "id1"], [271, "basics"], [272, "basics"], [272, "id1"], [305, "Basics"], [373, "basics"], [559, "basics"], [571, "basics"], [591, "basics"], [689, "basics"], [792, "basics"], [908, "basics"], [1016, "basics"]], "Getting X-Loader and U-Boot": [[132, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[132, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[132, "repairing-the-nand"]], "Writing X-Loader to NAND": [[132, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[132, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[133, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[133, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[133, "signals-aren-t-messages"]], "References": [[133, null], [133, null], [133, null], [205, "References"], [208, "References"], [550, "references"]], "Message Queues aren\u2019t Message Queues": [[133, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[133, "semaphores-and-mutexes"]], "Timers": [[133, "timers"]], "Polling": [[133, "polling"]], "Event Dispatching": [[133, "event-dispatching"]], "Interrupts": [[133, "interrupts"], [749, "interrupts"]], "Realtime": [[133, "realtime"], [926, "realtime"], [1113, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[134, "saving-solid-state-disk-life-gentoo"]], "Rant": [[134, "rant"], [154, "Rant"], [942, null]], "No Swap": [[134, "no-swap"]], "tmpfs instances here and there": [[134, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[134, "syslog-var-log-messages"]], "Mountpoint for messages": [[134, "mountpoint-for-messages"]], "Logrotate": [[134, "logrotate"]], "Kernel I/O Scheduler": [[134, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[134, "use-ram-for-the-kernel-build"]], "Things that are left": [[134, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[135, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[135, "process-stack-management"]], "Conclusion": [[135, "conclusion"], [135, "id1"], [863, "conclusion"], [871, "conclusion"]], "Thread (pthread) Stack Management": [[135, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[135, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[135, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[135, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[135, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[135, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[135, "how-does-this-work"]], "Realtime is different": [[135, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[136, "patching-and-building-the-fedora-kernel"]], "Why?": [[136, "why"], [879, "why"], [961, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[136, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[136, null], [136, null]], "Prepare the RPM Build": [[136, "prepare-the-rpm-build"]], "Install Prerequisites": [[136, "install-prerequisites"]], "Setup rpmbuild Directory": [[136, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[136, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[136, "apply-the-patch"]], "Build the Kernel RPMs": [[136, "build-the-kernel-rpms"]], "Install Kernel": [[136, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[137, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[137, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[137, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[138, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[138, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[138, "rpm-package-meh"]], "Updated on 2020-04-09": [[138, null]], "Annoyance #1: Keeps Running in Background": [[138, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[138, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[138, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[139, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[139, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[139, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[139, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[140, "using-bigbluebutton-for-online-training"]], "In this Article": [[140, null], [141, null], [143, null]], "TL;DR": [[140, "tl-dr"]], "Background Information": [[140, "background-information"]], "Hosting Setup": [[140, "hosting-setup"]], "BigBlueButton Installation": [[140, "bigbluebutton-installation"]], "Functionality Check": [[140, "functionality-check"]], "What Else?": [[140, "what-else"], [866, "what-else"], [879, "what-else"]], "Traunstein via Zierlersteig": [[141, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[141, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[141, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[141, "die-rinne"]], "Abstieg": [[141, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[142, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[142, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[142, "ceska-koca"]], "Hinauf": [[142, "hinauf"]], "Runter": [[142, "runter"]], "Zusammenfassung": [[142, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[143, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[143, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[143, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[143, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[143, "generate-key-pair"]], "Stage Key for Enrollment": [[143, "stage-key-for-enrollment"]], "Reboot, Brick": [[143, "reboot-brick"]], "Diagnostics": [[143, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[144, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [953, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[144, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[144, "installing-crosstool-ng"]], "Prerequisites": [[144, "prerequisites"], [1019, "prerequisites"]], "Installing From Cloned Git Repository": [[144, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[144, "installing-from-release-tarball"]], "PATH, And Basic Test": [[144, "path-and-basic-test"]], "Configure Toolchain Build": [[144, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[144, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[144, "important-glibc-version"]], "The Error": [[144, "the-error"], [144, "id4"]], "The Fix": [[144, "the-fix"], [144, "id5"]], "Important: GCC Version": [[144, "important-gcc-version"]], "Toolchain Build/Install": [[144, "toolchain-build-install"]], "Test": [[144, "test"], [746, "test"]], "Simplest: C, <stdio.h>": [[144, "simplest-c-stdio-h"]], "C++, <iostream>": [[144, "c-iostream"]], "C++, <thread>": [[144, "c-thread"]], "Packaging/Distributing The Toolchain": [[144, "packaging-distributing-the-toolchain"]], "Afterword": [[144, "afterword"]], "Posts": [[145, "posts"]], "Linux und Open Source": [[146, "linux-und-open-source"]], "Schulung": [[146, "schulung"]], "Entwicklung": [[146, "entwicklung"]], "Beratung": [[146, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[147, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[148, "installing-git"]], "Windows": [[148, "windows"]], "Workflow": [[148, "workflow"]], "Cloning the Repository": [[148, "cloning-the-repository"]], "Exercise Time": [[148, "exercise-time"]], "Conflicts": [[148, "conflicts"]], "Trainer\u2019s Notes": [[148, "trainer-s-notes"]], "Courses: Overview": [[149, "courses-overview"]], "Online Trainings": [[149, null]], "Individual Trainings": [[149, null]], "Everything About Linux": [[149, "everything-about-linux"]], "Programming Languages": [[149, "programming-languages"]], "Miscellaneous but Related": [[149, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[150, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[150, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[151, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[151, "gpios-in-userspace"]], "CAN Bus": [[151, "can-bus"], [172, "can-bus"]], "Driver Beispiele": [[151, "driver-beispiele"]], "Heizungssteuerung": [[151, "heizungssteuerung"]], "Live Hacking": [[152, "Live-Hacking"], [575, "live-hacking"], [576, "live-hacking"], [578, "live-hacking"], [579, "live-hacking"], [582, "live-hacking"], [583, "live-hacking"], [584, "live-hacking"], [596, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[152, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[152, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[152, "Dictionaries"], [181, "Dictionaries"], [253, "Dictionaries"], [267, "Dictionaries"], [305, "Dictionaries"], [1012, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[152, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[152, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[152, "Shortcuts"]], "Objektorientierte Programmierung": [[152, "Objektorientierte-Programmierung"]], "Inheritance": [[152, "Inheritance"], [192, "Inheritance"], [980, "inheritance"]], "Date and Time and Time Deltas - datetime": [[152, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[152, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[152, "String-Representations:-__str__()"]], "subprocess": [[152, "subprocess"], [231, "subprocess"]], "enumerate(), zip()": [[152, "enumerate(),-zip()"]], "List Comprehension": [[152, "List-Comprehension"], [176, "List-Comprehension"], [215, "List-Comprehension"], [966, "list-comprehension"], [1011, "list-comprehension"], [285, "List-Comprehension"]], "exec(), eval()": [[152, "exec(),-eval()"]], "Umgebender Context": [[152, "Umgebender-Context"]], "Eigener Context": [[152, "Eigener-Context"]], "json": [[152, "json"], [228, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[153, "python-individualtraining-5-tage-beginnend-28-10-2019"], [328, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[153, null], [156, null], [937, null], [1115, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[153, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[153, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[153, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[153, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[153, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[153, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[153, "operator-overloading"], [211, "operator-overloading"], [221, "Operator-Overloading"], [242, "operator-overloading"], [277, "operator-overloading"], [513, "operator-overloading"], [539, "operator-overloading"], [553, "operator-overloading"], [983, "operator-overloading"]], "Getters and Setters": [[153, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[153, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[153, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[153, "closures-between-local-and-global"]], "Project": [[153, "project"], [113, "project"]], "Goals of this Training": [[154, "Goals-of-this-Training"]], "Exercise": [[154, "Exercise"], [195, "exercise"], [237, "exercise"], [237, "id1"], [238, "exercise"], [240, "exercise"], [249, "exercise"], [258, "exercise"], [280, "exercise"], [291, "exercise"], [310, "exercise"], [316, "exercise"], [435, "exercise"], [436, "exercise"], [437, "exercise"], [439, "exercise"], [440, "exercise"], [443, "exercise"], [444, "exercise"], [629, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[154, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[154, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[154, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[154, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[154, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[154, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[154, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[154, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[154, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[154, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[155, "Random-Live-Hacking"]], "Data Types": [[155, "Data-Types"], [285, "Data-Types"]], "Mutable, Immutable": [[155, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[155, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[155, "Indices-and-Slicing"]], "for loops": [[155, "for-loops"]], "Iterator protocol": [[155, "Iterator-protocol"], [218, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[156, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[156, null], [158, null], [309, null]], "Standardthemen": [[156, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[156, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[156, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[156, "losen-einer-uni-ubung"]], "Proposal": [[157, "proposal"]], "Signals": [[157, "signals"]], "Posix IPC (and Virtual Memory)": [[157, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[157, "unix-domain-sockets"]], "Application in your Company": [[157, "application-in-your-company"]], "Further Thoughts": [[157, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[158, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[159, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[160, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[160, null]], "Kursaufbau": [[160, "kursaufbau"]], "Kursverlauf": [[160, "kursverlauf"], [168, "kursverlauf"]], "Tag 3": [[160, "tag-3"], [179, "tag-3"], [190, "tag-3"], [212, "tag-3"], [224, "tag-3"]], "Tag 4": [[160, "tag-4"], [190, "tag-4"], [212, "tag-4"], [224, "tag-4"]], "Tag 5": [[160, "tag-5"]], "Installing googletest By Hand": [[161, "installing-googletest-by-hand"]], "Clone googletest Repo": [[161, "clone-googletest-repo"]], "Create Build Directory": [[161, "create-build-directory"], [162, "create-build-directory"], [492, "create-build-directory"]], "CMake, Build and Install": [[161, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[161, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[162, "software-setup-build"]], "Getting the Source": [[162, "getting-the-source"]], "Install Prerequisites and Dependencies": [[162, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[162, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[163, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[163, "flatpak"]], "Issues": [[163, "issues"]], "RPM From M$": [[163, "rpm-from-m"]], "Code": [[164, "code"], [167, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[165, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[165, null], [168, null]], "Environment": [[165, "environment"], [798, "environment"]], "Unit Testing and Test Driven Development": [[165, "unit-testing-and-test-driven-development"]], "Python Installation": [[165, "python-installation"], [988, "python-installation"]], "Programming Environment": [[165, "programming-environment"], [249, "programming-environment"], [988, "programming-environment"]], "Day 1: Language Basics": [[165, "day-1-language-basics"]], "Day 2: Advanced Topics": [[165, "day-2-advanced-topics"]], "Wrap-Up": [[165, "wrap-up"]], "How Was It?": [[165, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[166, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[166, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[166, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[166, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[166, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[166, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[166, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[166, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[166, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[166, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[166, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[166, "list-und-Mutability"]], "Tuple und Immutability": [[166, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[166, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[166, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[166, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[166, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[166, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[166, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[166, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[166, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[166, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[166, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[166, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[166, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[166, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[166, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[166, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[166, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[166, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[166, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[166, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[166, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[166, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[166, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[166, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[168, "python-individualtraining-18-5-2020-19-5-2020"], [328, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[168, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[169, "python-advanced-7-9-2020-10-9-2020"], [328, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[169, "preparation"], [170, "preparation"], [172, "preparation"], [173, "preparation"], [174, "preparation"], [175, "preparation"], [555, "preparation"]], "Workspace Setup": [[169, "workspace-setup"], [170, "workspace-setup"], [172, "workspace-setup"], [174, "workspace-setup"]], "Github for Exercises": [[169, "github-for-exercises"], [170, "github-for-exercises"]], "Agenda": [[169, "agenda"], [170, "agenda"], [172, "agenda"], [173, "agenda"], [174, "agenda"], [175, "agenda"], [180, "agenda"], [184, "agenda"], [185, "agenda"], [222, "agenda"], [227, "agenda"], [239, "agenda"], [248, "agenda"], [269, "agenda"], [277, "agenda"], [1120, "agenda"]], "Advanced Core Python Topics": [[169, "advanced-core-python-topics"]], "Special Topics": [[169, "special-topics"]], "Day 1": [[169, "day-1"], [170, "day-1"], [172, "day-1"], [173, "day-1"], [174, "day-1"], [184, "day-1"], [185, "day-1"], [194, "day-1"], [195, "day-1"], [200, "day-1"], [203, "day-1"], [206, "day-1"], [209, "day-1"], [216, "day-1"], [258, "day-1"], [259, "day-1"], [260, "day-1"], [266, "day-1"], [270, "day-1"], [272, "day-1"], [277, "day-1"], [284, "day-1"]], "Day 2": [[169, "day-2"], [170, "day-2"], [172, "day-2"], [173, "day-2"], [174, "day-2"], [184, "day-2"], [185, "day-2"], [194, "day-2"], [195, "day-2"], [200, "day-2"], [203, "day-2"], [205, "Day-2"], [206, "day-2"], [209, "day-2"], [216, "day-2"], [249, "day-2"], [258, "day-2"], [260, "day-2"], [266, "day-2"], [270, "day-2"], [277, "day-2"], [284, "day-2"]], "Day 3": [[169, "day-3"], [170, "day-3"], [172, "day-3"], [173, "day-3"], [174, "day-3"], [184, "day-3"], [185, "day-3"], [194, "day-3"], [195, "day-3"], [200, "day-3"], [205, "Day-3"], [206, "day-3"], [209, "day-3"], [216, "day-3"], [249, "day-3"], [252, "day-3"], [258, "day-3"], [260, "day-3"], [266, "day-3"], [270, "day-3"], [272, "day-3"], [284, "day-3"]], "Day 4": [[169, "day-4"], [172, "day-4"], [184, "day-4"], [185, "day-4"], [194, "day-4"], [195, "day-4"], [249, "day-4"]], "Recommended Tutorials": [[169, "recommended-tutorials"]], "After Work Party": [[169, "after-work-party"], [200, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[170, "python-basics-28-9-2020-30-9-2020"], [328, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[171, "Iterables"]], "set constructor": [[171, "set-constructor"]], "Fast vs.\u00a0Simple": [[171, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[171, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[171, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[171, "Object-Oriented-Programming"], [221, "Object-Oriented-Programming"], [234, "Object-Oriented-Programming"], [245, "object-oriented-programming"], [259, "object-oriented-programming"], [261, "object-oriented-programming"], [262, "object-oriented-programming"], [265, "object-oriented-programming"], [266, "object-oriented-programming"], [271, "object-oriented-programming"], [277, "object-oriented-programming"], [280, "object-oriented-programming"], [283, "object-oriented-programming"], [417, "object-oriented-programming"], [979, "object-oriented-programming"], [284, "object-oriented-programming"], [287, "object-oriented-programming"]], "datetime": [[171, "datetime"], [198, "datetime"], [253, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[172, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[172, "additional-topics-brought-in-by-thomas"]], "Notebook": [[172, "notebook"], [193, "notebook"], [208, "Notebook"], [310, "notebook"]], "Tutorials": [[172, "tutorials"], [200, "tutorials"]], "Linux on Raspberry Pi": [[173, "linux-on-raspberry-pi"]], "Cloud Machine": [[173, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[173, "raspberry-on-participant-s-desks"]], "Basic security": [[173, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[173, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[173, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[173, "in-the-wild-watchdog"]], "TODO": [[173, "todo"], [297, "todo"], [298, "todo"], [299, "todo"], [1079, "todo"]], "Support Material": [[173, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[174, "python-basics-23-11-2020-25-11-2020"], [328, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[174, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[175, "linux-basics-30-11-2020-3-12-2020"], [328, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[176, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[176, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[176, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[176, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[176, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[176, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[176, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[176, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[176, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[176, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[176, "Floor-Division"]], "Modulo Operator: %": [[176, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[176, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[176, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[176, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[176, "Raw-Strings"], [198, "Raw-Strings"], [215, "Raw-Strings"], [221, "Raw-Strings"], [243, "Raw-Strings"], [273, "Raw-Strings"], [1008, "raw-strings"]], "f-Strings": [[176, "f-Strings"]], "Konvertierungen": [[176, "Konvertierungen"]], "Boolean": [[176, "Boolean"], [202, "Boolean"], [205, "Boolean"], [213, "Boolean"], [215, "Boolean"], [225, "Boolean"], [228, "Boolean"], [997, "boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[176, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[176, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[176, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[176, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[176, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[176, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[176, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[176, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[176, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[176, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[176, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[176, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[176, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[176, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[176, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[176, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[176, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[176, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[176, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[176, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[176, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[176, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[176, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[176, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[176, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[176, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[176, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[176, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[176, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[176, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[176, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[176, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[176, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[176, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[176, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[176, "Liste"]], "Set": [[176, "Set"], [197, "Set"], [198, "Set"], [202, "Set"], [202, "id1"], [205, "Set"], [208, "Set"], [208, "id1"], [215, "Set"], [228, "Set"], [231, "Set"], [243, "Set"], [246, "Set"], [246, "id5"], [253, "Set"], [263, "Set"], [267, "Set"], [285, "Set"]], "8.2 Arrays": [[176, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[176, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[176, "8.4-Records"]], "8.5 Zeichenketten": [[176, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[176, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[176, "sorted,-reversed"]], "8.7 Dictionaries": [[176, "8.7-Dictionaries"]], "(jf) Records in Python": [[176, "(jf)-Records-in-Python"]], "8.8 Mengen": [[176, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[176, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[176, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[176, "\u00dcbung-1"]], "Versuch 1: in und index()": [[176, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[176, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[176, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[176, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[176, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[176, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[176, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[176, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[176, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[176, "Lokale-Variable"]], "Globale Variable (lesen)": [[176, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[176, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[176, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[176, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[176, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[176, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[176, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[176, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[176, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[176, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[176, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[177, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[177, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[177, "herdt-kapitel-6-grundlegende-sprachelemente"], [1128, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[177, "herdt-kapitel-7-kontrollstrukturen"], [1128, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[177, "verzweigung"], [1128, "verzweigung"]], "Schleifen": [[177, "schleifen"], [1128, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[177, "herdt-kapitel-8-elementare-datenstrukturen"], [1128, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[177, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1128, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[179, "python-basics-22-2-2021-24-2-2021"], [328, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[179, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[180, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[180, "books"], [230, "books"], [272, "books"], [1064, "books"]], "Python Advanced": [[181, "Python-Advanced"]], "Data Types Recap": [[181, "Data-Types-Recap"]], "Sequential Datatypes": [[181, "Sequential-Datatypes"], [213, "Sequential-Datatypes"], [225, "Sequential-Datatypes"], [1000, "sequential-datatypes"], [1000, "id1"]], "Slicing etc.": [[181, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[181, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[181, "Sets"], [181, "id1"], [189, "Sets"], [1013, "sets"]], "for Schleife, ganz kurz": [[181, "for-Schleife,-ganz-kurz"]], "Tuple": [[181, "Tuple"], [205, "Tuple"], [208, "Tuple"], [215, "Tuple"], [228, "Tuple"], [231, "Tuple"], [243, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[181, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[181, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[181, "Listen"], [215, "Listen"], [305, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[181, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[181, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[181, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[181, "Iterable:-Der-Begriff"]], "Zufall": [[181, "Zufall"]], "Regular Expressions": [[181, "Regular-Expressions"], [234, "Regular-Expressions"], [246, "Regular-Expressions"], [855, "regular-expressions"]], "enumerate()": [[181, "enumerate()"], [189, "enumerate()"], [192, "enumerate()"], [228, "enumerate()"], [246, "enumerate()"], [263, "enumerate()"], [285, "enumerate()"]], "JSON": [[181, "JSON"], [198, "JSON"], [208, "JSON"], [234, "JSON"], [243, "JSON"], [278, "JSON"], [281, "JSON"]], "2021-03-15": [[182, "id1"]], "Exercises (auf Github)": [[182, "exercises-auf-github"]], "Jupyter Notebook": [[182, "jupyter-notebook"], [184, "jupyter-notebook"], [201, "jupyter-notebook"], [203, "jupyter-notebook"], [206, "jupyter-notebook"], [212, "jupyter-notebook"], [217, "jupyter-notebook"], [220, "jupyter-notebook"], [223, "jupyter-notebook"], [305, "Jupyter-Notebook"], [1070, "jupyter-notebook"]], "Download": [[182, null], [184, null]], "Hallo Jupyter Notebook": [[183, "Hallo-Jupyter-Notebook"]], "Syntax": [[183, "Syntax"], [253, "Syntax"], [305, "Syntax"], [305, "id1"]], "Raw strings": [[183, "Raw-strings"]], "Variablen": [[183, "Variablen"], [215, "Variablen"]], "Tuple Unpacking": [[183, "Tuple-Unpacking"], [225, "Tuple-Unpacking"], [243, "Tuple-Unpacking"], [253, "Tuple-Unpacking"], [304, "Tuple-Unpacking"], [305, "Tuple-Unpacking"], [305, "id2"]], "Speicher, Memory Management": [[183, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[183, "Mutable-vs.\u00a0Immutable"], [234, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[183, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[183, "Aber!!!!"]], "Dictionary": [[183, "Dictionary"], [189, "Dictionary"], [197, "Dictionary"], [198, "Dictionary"], [202, "Dictionary"], [202, "id2"], [205, "Dictionary"], [208, "Dictionary"], [208, "id2"], [215, "Dictionary"], [228, "Dictionary"], [231, "Dictionary"], [243, "Dictionary"], [246, "Dictionary"], [246, "id4"], [253, "Dictionary"], [263, "Dictionary"], [267, "Dictionary"], [273, "Dictionary"], [285, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[183, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[183, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[183, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[183, "for-und-range()"]], "Objektidentit\u00e4t": [[183, "Objektidentit\u00e4t"]], "Das with Statement": [[183, "Das-with-Statement"], [192, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[183, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[183, "String-Operationen"]], "enumerate(), und verlorene Indices": [[183, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[183, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[183, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[184, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[184, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[185, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[185, null]], "Course Preparation": [[185, "course-preparation"], [238, "course-preparation"], [240, "course-preparation"], [248, "course-preparation"]], "SSH": [[185, "ssh"], [315, "ssh"]], "Linux and/or Shell on Windows Host": [[185, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[185, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[187, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[189, "Syntax-etc."], [221, "Syntax-etc."], [267, "Syntax-etc."], [992, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[189, "Comments-vs.\u00a0Documentation"]], "Variables": [[189, "Variables"], [202, "Variables"], [205, "Variables"], [221, "Variables"], [231, "Variables"], [263, "Variables"], [267, "Variables"], [305, "Variables"], [994, "variables"]], "Assignment Fun": [[189, "Assignment-Fun"], [228, "Assignment-Fun"], [994, "assignment-fun"]], "Assignment Details": [[189, "Assignment-Details"], [221, "Assignment-Details"], [228, "Assignment-Details"], [305, "Assignment-Details"], [994, "assignment-details"]], "Operators": [[189, "Operators"], [225, "Operators"]], "Integer Arithmetic": [[189, "Integer-Arithmetic"]], "String Methods": [[189, "String-Methods"], [304, "String-Methods"]], "Datatype Conversions": [[189, "Datatype-Conversions"], [213, "Datatype-Conversions"], [215, "Datatype-Conversions"], [221, "Datatype-Conversions"], [225, "Datatype-Conversions"], [228, "Datatype-Conversions"], [246, "Datatype-Conversions"], [263, "Datatype-Conversions"], [267, "Datatype-Conversions"], [273, "Datatype-Conversions"], [305, "Datatype-Conversions"], [995, "datatype-conversions"], [285, "Datatype-Conversions"]], "Strings k\u00f6nnen alles!": [[189, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[189, "Complex-Datatypes"], [305, "Complex-Datatypes"]], "List (mutable)": [[189, "List-(mutable)"], [202, "List-(mutable)"]], "extend()? Iterable?": [[189, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[189, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[189, "in-Operator"], [228, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[189, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[189, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[189, "sum()"]], "map()": [[189, "map()"], [192, "map()"]], "list() function": [[189, "list()-function"]], "Performance: in Operator, und list und set": [[189, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[189, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[190, "python-grundlagen-2021-05-03-2021-05-05"], [328, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[190, "weiterfuhrende-information"]], "Visual Studio Code": [[190, "visual-studio-code"], [206, "visual-studio-code"], [1064, "visual-studio-code"]], "Python Beginner Tutorials": [[190, "python-beginner-tutorials"], [230, "python-beginner-tutorials"], [1064, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[190, "numpy-and-data-science-tutorials"], [230, "numpy-and-data-science-tutorials"], [233, "numpy-and-data-science-tutorials"], [266, "numpy-and-data-science-tutorials"], [1064, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[190, "pypi-installing-modules-that-don-t-come-as-batteries"], [1064, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[190, "git-and-github"], [1064, "git-and-github"]], "Conference Talks": [[190, "conference-talks"], [266, "conference-talks"], [1064, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[191, "python-grundlagen-jupyter-notebook"], [204, "python-grundlagen-jupyter-notebook"], [207, "python-grundlagen-jupyter-notebook"], [210, "python-grundlagen-jupyter-notebook"], [229, "python-grundlagen-jupyter-notebook"], [232, "python-grundlagen-jupyter-notebook"], [235, "python-grundlagen-jupyter-notebook"], [244, "python-grundlagen-jupyter-notebook"], [247, "python-grundlagen-jupyter-notebook"], [268, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[192, "import-zipfile"]], "Read Contents \u2026": [[192, "Read-Contents-\u2026"]], "Extract One Member": [[192, "Extract-One-Member"]], "All in One, Using with": [[192, "All-in-One,-Using-with"]], "Functionality: Methods": [[192, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[192, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[192, "Instance-Attributes"]], "Class Attributes": [[192, "Class-Attributes"]], "Public, Protected, Private": [[192, "Public,-Protected,-Private"]], "Properties": [[192, "Properties"], [221, "Properties"], [432, "properties"], [984, "properties"]], "Functions, Positional and Keyword Arguments": [[192, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[192, "Positional-Arguments"]], "Keyword Arguments": [[192, "Keyword-Arguments"], [213, "Keyword-Arguments"], [306, "Keyword-Arguments"], [1006, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[192, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[192, "The-range()-Function"], [198, "The-range()-Function"], [205, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[192, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[192, "Iterable"], [208, "Iterable"]], "list(), and iterable?": [[192, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[192, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[192, "Decorators,-etc."]], "NoneType and None": [[192, "NoneType-and-None"]], "File I/O": [[192, "File-I/O"], [221, "File-I/O"], [228, "File-I/O"], [231, "File-I/O"], [263, "File-I/O"], [267, "File-I/O"], [302, "File-I/O"], [901, "file-i-o"], [1014, "file-i-o"]], "Iteration, yield, Recursion": [[192, "Iteration,-yield,-Recursion"]], "Recursion": [[192, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[192, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[192, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[192, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[192, "zip()"]], "filter(), and several other methods to do the same": [[192, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[192, "OSError,-errno"]], "The platform Module, sys.path": [[192, "The-platform-Module,-sys.path"]], "os.path": [[192, "os.path"], [208, "os.path"], [215, "os.path"]], "Exceptions und so (assert())": [[192, "Exceptions-und-so-(assert())"]], "AssertionError": [[192, "AssertionError"]], "Random Questions": [[192, "Random-Questions"]], "Slicing": [[192, "Slicing"], [215, "Slicing"], [221, "Slicing"], [246, "Slicing"], [267, "Slicing"], [1085, "slicing"]], "OO": [[192, "OO"], [260, "oo"], [319, "oo"], [513, "oo"]], "String Formatting": [[192, "String-Formatting"], [198, "String-Formatting"], [1009, "string-formatting"]], "import datetime": [[192, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[193, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[193, "predefined-streams"]], "PCAP Exam Syllabus": [[193, "pcap-exam-syllabus"], [206, "pcap-exam-syllabus"]], "2021-06-09": [[193, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[194, "programmieren-mit-c-2021-06-14-2021-06-18"], [328, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[194, "preparation-tools"]], "State machine": [[194, "state-machine"]], "Regular Course Topics": [[194, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[194, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[194, "regular-course-material"], [194, "id1"]], "Group Project Kick-Off :-)": [[194, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[194, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[194, "group-project-use-case-driven-course-flow"]], "Day 5": [[194, "day-5"], [195, "day-5"], [249, "day-5"]], "Pointer Recap": [[194, "pointer-recap"]], "On With Group Project": [[194, "on-with-group-project"]], "C++ Basics": [[194, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[194, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[195, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[195, "setup-for-the-new-kids"]], "Recapitulate some C": [[195, "recapitulate-some-c"]], "Group project review": [[195, "group-project-review"]], "Jump into C++": [[195, "jump-into-c"]], "Regular Topics": [[195, "regular-topics"], [195, "id2"], [195, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[195, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[195, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[195, "finish-first-user-database-functionality"]], "Unit Testing": [[195, "unit-testing"], [252, "unit-testing"], [255, "unit-testing"], [318, "unit-testing"]], "GTest Installation": [[195, "gtest-installation"]], "Git Workflows": [[195, "git-workflows"]], "Day X": [[195, "day-x"]], "Smart Pointers, Recap": [[195, "smart-pointers-recap"]], "std::map": [[195, "std-map"], [591, "std-map"]], "OO, and Polymorphism": [[195, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[196, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [328, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[196, "variablen-und-datentypen"], [212, "variablen-und-datentypen"], [224, "variablen-und-datentypen"]], "Kontrollstrukturen": [[196, "kontrollstrukturen"], [212, "kontrollstrukturen"], [213, "Kontrollstrukturen"], [224, "kontrollstrukturen"]], "Datenstrukturen": [[197, "Datenstrukturen"]], "List": [[197, "List"], [198, "List"], [205, "List"], [208, "List"], [228, "List"], [231, "List"], [243, "List"], [246, "List"], [273, "List"], [1093, "list"], [285, "List"]], "Iteration": [[197, "Iteration"], [197, "id1"], [198, "Iteration"], [198, "id1"], [208, "Iteration"], [231, "Iteration"], [243, "Iteration"], [285, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[197, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[197, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[197, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[197, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[197, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[197, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[198, "Iterable?"]], "List Comprehension, Generator Expression": [[198, "List-Comprehension,-Generator-Expression"]], "Literals": [[198, "Literals"], [457, "literals"]], "Quoting?": [[198, "Quoting?"], [202, "Quoting?"]], "Multiline Strings": [[198, "Multiline-Strings"], [202, "Multiline-Strings"], [1008, "multiline-strings"]], "Functionality": [[198, "Functionality"], [790, "functionality"]], "strip() and friends": [[198, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[198, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[198, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[199, "read-a-cleaned-up-sap-export"]], "Requirement": [[199, "requirement"], [456, "requirement"], [478, "requirement"], [479, "requirement"], [480, "requirement"], [484, "requirement"], [485, "requirement"], [486, "requirement"], [487, "requirement"], [488, "requirement"], [489, "requirement"], [893, "requirement"], [900, "requirement"], [1020, "requirement"], [1021, "requirement"], [1042, "requirement"], [1053, "requirement"], [1054, "requirement"], [1055, "requirement"], [1056, "requirement"], [1058, "requirement"], [1059, "requirement"], [1060, "requirement"], [1061, "requirement"]], "Solution": [[199, "solution"], [435, "solution"], [437, "solution"], [440, "solution"], [1101, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[200, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[202, "Initial-Terminology"]], "Sequence": [[202, "Sequence"]], "Tuple (immutable)": [[202, "Tuple-(immutable)"]], "References, (Im)mutability": [[202, "References,-(Im)mutability"], [215, "References,-(Im)mutability"], [228, "References,-(Im)mutability"], [231, "References,-(Im)mutability"], [246, "References,-(Im)mutability"], [253, "References,-(Im)mutability"], [267, "References,-(Im)mutability"], [273, "References,-(Im)mutability"], [273, "id1"], [1004, "references-im-mutability"], [285, "References,-(Im)mutability"]], "Iteration, for, and range()": [[202, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[202, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[202, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[202, "List-and-Tuple"]], "matplotlib": [[202, "matplotlib"], [234, "matplotlib"]], "File I/O, and Strings": [[202, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[202, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[202, "Miscellaneous-String-Methods"], [213, "Miscellaneous-String-Methods"], [215, "Miscellaneous-String-Methods"], [221, "Miscellaneous-String-Methods"], [231, "Miscellaneous-String-Methods"], [246, "Miscellaneous-String-Methods"], [267, "Miscellaneous-String-Methods"], [273, "Miscellaneous-String-Methods"], [1010, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[203, "python-basics-2021-08-31-2021-09-01"], [328, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[203, "numerics-and-ai"]], "Mountains near Graz": [[203, "mountains-near-graz"]], "2021-11-17": [[205, "2021-11-17"]], "Enter Tuples": [[205, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[205, "Datatype-Conversions,-Type-Names"]], "NoneType": [[205, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[205, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[205, "Exercise:-Mixed-List"]], "Python Documentation": [[205, "Python-Documentation"]], "for": [[205, "for"], [267, "for"], [305, "for"]], "Iteration over Compound Datatypes": [[205, "Iteration-over-Compound-Datatypes"], [215, "Iteration-over-Compound-Datatypes"]], "File IO": [[205, "File-IO"], [221, "File-IO"], [249, "file-io"], [253, "File-IO"]], "Generators, Iterator Protocol, for": [[205, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[205, "Common-Sequence-Operation"]], "Comprehensions": [[205, "Comprehensions"], [208, "Comprehensions"], [221, "Comprehensions"], [253, "Comprehensions"], [285, "Comprehensions"]], "List, Iterable? WTF?": [[205, "List,-Iterable?-WTF?"]], "Dict and iterable": [[205, "Dict-and-iterable"]], "More on Lists": [[205, "More-on-Lists"], [213, "More-on-Lists"], [228, "More-on-Lists"]], "More on Dictionaries": [[205, "More-on-Dictionaries"], [213, "More-on-Dictionaries"]], "References, Mutability": [[205, "References,-Mutability"]], "CSV": [[205, "CSV"], [222, "csv"], [230, "csv"], [267, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[206, "python-basics-2021-11-17-2021-11-19"], [328, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[206, "python-core-topics"]], "Python Standard Library": [[206, "python-standard-library"]], "More About Strings": [[208, "More-About-Strings"], [225, "More-About-Strings"], [273, "More-About-Strings"], [1008, "more-about-strings"]], "List, Tuple": [[208, "List,-Tuple"], [263, "List,-Tuple"], [267, "List,-Tuple"]], "Tuple Unpacking: What Else": [[208, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[208, "Iterator-Protocol"], [215, "Iterator-Protocol"], [246, "Iterator-Protocol"], [263, "Iterator-Protocol"], [267, "Iterator-Protocol"]], "yield": [[208, "yield"], [231, "yield"]], "Everything is an Object of a Type": [[208, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[208, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[208, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[208, "2021-12-17"]], "Shift Operators": [[208, "Shift-Operators"]], "PCAP Sample Exam": [[208, "PCAP-Sample-Exam"]], "System Errors": [[208, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[209, "python-advanced-2021-12-01-2021-12-03"], [328, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[209, "basics-recap"], [262, "basics-recap"]], "Group Project Preparation": [[209, "group-project-preparation"]], "Hmmm?": [[209, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[211, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [328, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[211, "id1"]], "2021-12-07": [[211, "id2"]], "2021-12-08": [[211, "id3"]], "2021-12-09": [[211, "id4"]], "2022-01-24": [[211, "id5"]], "Undefined Behavior": [[211, "undefined-behavior"]], "Modularization": [[211, "modularization"], [373, "modularization"]], "2022-01-25": [[211, "id6"]], "C++ and OO (Classes)": [[211, "c-and-oo-classes"]], "Modularization (again)": [[211, "modularization-again"]], "2022-01-26": [[211, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[211, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[211, "classes-continued"]], "2022-01-27": [[211, "id8"]], "2022-01-28": [[211, "id9"]], "Standard Template Library: Container Templates": [[211, "standard-template-library-container-templates"]], "2022-01-31": [[211, "id10"]], "2022-02-01": [[211, "id11"]], "Algorithms": [[211, "algorithms"], [580, "algorithms"]], "Functors": [[211, "functors"]], "Unified Modeling Language (UML)": [[211, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[211, "exercise-using-all-from-today"]], "2022-02-02": [[211, "id12"]], "Associative Container: std::map": [[211, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[211, "exceptions-and-exception-handling"]], "2022-02-03": [[211, "id13"]], "2022-02-04": [[211, "id14"]], "C++11: A New Language": [[211, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[211, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[211, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[212, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [328, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[213, "2022-01-17"]], "Variables and Datatypes": [[213, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[213, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[213, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[213, "Integer-Numbers:-Arithmetic"], [225, "Integer-Numbers:-Arithmetic"], [995, "integer-numbers-arithmetic"]], "Some Methods": [[213, "Some-Methods"]], "String Formatting: f-Strings": [[213, "String-Formatting:-f-Strings"]], "More about Strings": [[213, "More-about-Strings"]], "if": [[213, "if"], [253, "if"]], "2022-01-18": [[213, "2022-01-18"]], "Miscellanea": [[213, "Miscellanea"]], "Braces: Single Element Tuples?": [[213, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[213, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[213, "while-Loops"], [215, "while-Loops"], [228, "while-Loops"], [999, "while-loops"], [999, "id1"]], "break and continue": [[213, "break-and-continue"], [370, "break-and-continue"], [370, "id1"], [999, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[213, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[213, "Sequence-Membership"], [1000, "sequence-membership"]], "list (mutable)": [[213, "list-(mutable)"]], "tuple (immutable)": [[213, "tuple-(immutable)"]], "dict (mutable)": [[213, "dict-(mutable)"]], "set (mutable)": [[213, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[213, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[213, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[213, "Default-Parameters"], [215, "Default-Parameters"], [306, "Default-Parameters"], [1006, "default-parameters"]], "List Comprehensions": [[213, "List-Comprehensions"], [225, "List-Comprehensions"]], "Iteration over Dictionaries": [[213, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[213, "Building-Dictionaries"], [1012, "building-dictionaries"]], "More on Sets": [[213, "More-on-Sets"]], "with: Context Managers": [[213, "with:-Context-Managers"]], "Strings Intro": [[215, "Strings-Intro"]], "Doc Strings": [[215, "Doc-Strings"]], "Object Identity": [[215, "Object-Identity"]], "Integers": [[215, "Integers"], [225, "Integers"], [228, "Integers"], [246, "Integers"], [253, "Integers"], [273, "Integers"]], "Variablen? Datenypen?": [[215, "Variablen?-Datenypen?"]], "Objects, Classes": [[215, "Objects,-Classes"]], "Python Standard Libarary Examples": [[215, "Python-Standard-Libarary-Examples"]], "collections": [[215, "collections"]], "ChainMap": [[215, "ChainMap"]], "deque": [[215, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[215, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[215, "Slice-Assignment"], [1001, "slice-assignment"]], "Lists are mutable": [[215, "Lists-are-mutable"]], "Shallow copy and deep copy": [[215, "Shallow-copy-and-deep-copy"]], "else": [[215, "else"], [221, "else"]], "for Loops, range()": [[215, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[215, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[215, "dict.fromkeys()"], [228, "dict.fromkeys()"]], "Generators": [[215, "Generators"], [221, "Generators"], [261, "generators"], [262, "generators"], [266, "generators"], [283, "generators"], [287, "generators"]], "join, split": [[215, "join,-split"]], "strip, lstrip, rstrip": [[215, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[216, "python-basics-2022-02-23-2022-02-25"], [328, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[216, "data-structures"]], "OS Things": [[216, "os-things"]], "Data Science": [[216, "data-science"], [284, "data-science"], [285, "Data-Science"]], "Wiederholung": [[218, "Wiederholung"]], "Mutable/Immutable": [[218, "Mutable/Immutable"]], "Attribute": [[218, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[218, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[218, "Exceptions"], [234, "Exceptions"], [259, "exceptions"], [513, "exceptions"], [560, "exceptions"], [561, "exceptions"]], "for vs.\u00a0while, range()": [[218, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[218, "String-Methods-(some)"]], "eval()": [[218, "eval()"], [228, "eval()"], [285, "eval()"]], "exec()": [[218, "exec()"], [234, "exec()"]], "Dictionary Iteration": [[218, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[218, "Classes,-Attributes,-OO"]], "Types and Instances": [[218, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[218, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[218, "OO-Everywhere"]], "Dictionary Operations": [[218, "Dictionary-Operations"]], "collections.defaultdict": [[218, "collections.defaultdict"], [243, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[219, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[219, "id1"]], "2022-03-16": [[219, "id2"]], "Test Driven Development": [[219, "test-driven-development"], [261, "test-driven-development"], [283, "test-driven-development"], [284, "test-driven-development"]], "2022-03-17": [[219, "id3"]], "2022-03-31": [[219, "id4"]], "PCAP exam preparation": [[219, "pcap-exam-preparation"]], "Hello World": [[221, "Hello-World"], [332, "hello-world"], [990, "hello-world"]], "Blahblah": [[221, "Blahblah"], [570, "blahblah"], [989, "blahblah"]], "Object Oriented?": [[221, "Object-Oriented?"]], "MQTT": [[221, "MQTT"], [1080, "mqtt"], [287, "mqtt"]], "Commandline Arguments": [[221, "Commandline-Arguments"], [384, "commandline-arguments"], [384, "id1"]], "Object Lifetime": [[221, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[221, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[221, "More-String-Methods"], [221, "id1"]], "Dictionary Preview": [[221, "Dictionary-Preview"]], "list: Mutable": [[221, "list:-Mutable"]], "list(): explicit constructor": [[221, "list():-explicit-constructor"]], "tuple: Immutable": [[221, "tuple:-Immutable"]], "dict: Mutable": [[221, "dict:-Mutable"]], "set: Mutable": [[221, "set:-Mutable"]], "List comprehension": [[221, "List-comprehension"]], "DIctionary Comprehension": [[221, "DIctionary-Comprehension"]], "Set Comprehension": [[221, "Set-Comprehension"], [960, "set-comprehension"], [285, "Set-Comprehension"]], "max": [[221, "max"]], "for, enumerate()": [[221, "for,-enumerate()"]], "Iteratoren, Generatoren": [[221, "Iteratoren,-Generatoren"]], "Generatoren": [[221, "Generatoren"]], "split und join": [[221, "split-und-join"]], "strip()": [[221, "strip()"]], "dict vs.\u00a0OrderedDict": [[221, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[221, "Duck-Typing"], [976, "duck-typing"]], "Interfaces": [[221, "Interfaces"], [609, "interfaces"], [609, "id1"]], "Implementation Inheritance": [[221, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[221, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[221, "__bases__"]], "__mro__": [[221, "__mro__"]], "Object Layout (self)": [[221, "Object-Layout-(self)"]], "More from OO": [[221, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[221, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[221, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[221, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[221, "Exception-Handling"], [252, "exception-handling"], [255, "exception-handling"], [260, "exception-handling"], [321, "exception-handling"], [963, "exception-handling"]], "Order of except Clauses": [[221, "Order-of-except-Clauses"]], "finally": [[221, "finally"]], "lambda": [[221, "lambda"]], "map(), filter()": [[221, "map(),-filter()"], [285, "map(),-filter()"]], "Generators, Iteration Protocol": [[221, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[221, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[222, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [328, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[222, "basics"]], "2022-03-30: Basics": [[222, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[222, "advanced"]], "Plan For The Wild Part": [[222, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[224, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [328, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[224, "discussion-flow-charts"]], "BlahBlah": [[225, "BlahBlah"], [228, "BlahBlah"], [231, "BlahBlah"]], "Interactive": [[225, "Interactive"]], "For Beginners": [[225, "For-Beginners"]], "Not For Beginners?": [[225, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[225, "Strings,-1st-Explanation"]], "Operator Precedence": [[225, "Operator-Precedence"], [228, "Operator-Precedence"], [995, "operator-precedence"]], "Floating Point Numbers": [[225, "Floating-Point-Numbers"], [995, "floating-point-numbers"]], "Docstrings": [[225, "Docstrings"], [231, "Docstrings"], [305, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[225, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[225, "Random-Numbers"]], "Indexing and Slicing": [[225, "Indexing-and-Slicing"], [273, "Indexing-and-Slicing"], [1001, "indexing-and-slicing"]], "for Loops": [[225, "for-Loops"], [335, "for-loops"], [1002, "for-loops"]], "range()": [[225, "range()"], [253, "range()"]], "Filterketten": [[225, "Filterketten"]], "Zen": [[225, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[225, "Compound-Datatypes-By-Example:-List,-Tuple"], [996, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[225, "Compound-Datatypes-By-Example:-Dictionary"], [996, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[225, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[225, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[225, "Compound-Datatypes-By-Example:-Set"], [996, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[225, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[227, "python-basics-2022-04-25-2022-04-27"], [328, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[228, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[228, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[228, "Variables-and-Types"]], "Swap": [[228, "Swap"]], "Integers are Infinitely long": [[228, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[228, "Floating-Point-Comparison"]], "Mutability/Immutability": [[228, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[228, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[228, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1028, "exercise-determine-maximum-of-two-numbers"], [1038, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[228, "Ranges"], [686, "ranges"]], "Exercise: Sort out Duplicates": [[228, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[228, "Algorithmic-Complexity"]], "More On Dictionaries": [[228, "More-On-Dictionaries"]], "More On Sets": [[228, "More-On-Sets"]], "eval(), json": [[228, "eval(),-json"]], "Encoding": [[228, "Encoding"], [252, "encoding"], [273, "Encoding"], [310, "encoding"], [1077, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[230, "python-2022-05-02-2022-05-05"], [328, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[230, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[230, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[230, "excursion-can-communication-oo-modules"]], "Modules": [[230, "modules"], [243, "Modules"], [310, "modules"], [681, "modules"], [971, "modules"], [284, "modules"]], "CSV, Functions": [[230, "csv-functions"]], "PyPI, Virtual Environments": [[230, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[230, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[230, "more-on-datatypes"]], "Random Topics": [[230, "random-topics"]], "Standard Library": [[230, "standard-library"]], "Hello Jupyter Notebook": [[231, "Hello-Jupyter-Notebook"]], "Syntax etc": [[231, "Syntax-etc"]], "Mutability": [[231, "Mutability"], [263, "Mutability"]], "Removing Elements": [[231, "Removing-Elements"], [591, "removing-elements"]], "Nested Lists?": [[231, "Nested-Lists?"]], "while loops, and else": [[231, "while-loops,-and-else"]], "for loops (and else)": [[231, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[231, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[231, "Encoding,-and-String"]], "Regular Expression": [[231, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[231, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[231, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[231, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[231, "itertools.chain()"]], "Destructor?": [[231, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[231, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[233, "python-advanced-2022-05-16-2022-05-18"], [328, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[233, "project-management"], [317, "project-management"], [318, "project-management"], [322, "project-management"], [284, "project-management"]], "Unit Testing, Test Driven Development": [[233, "unit-testing-test-driven-development"]], "Object Priented Programming": [[233, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[233, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[233, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[233, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[233, "xml-element-tree"]], "Projektabschlusstag": [[233, "projektabschlusstag"]], "Basic Python": [[233, "basic-python"], [1127, "basic-python"]], "Assert": [[234, "Assert"]], "The id() function": [[234, "The-id()-function"]], "class Person": [[234, "class-Person"]], "Functions That Do Not Return Anything": [[234, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[234, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[234, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[234, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[234, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[234, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[236, "vorbesprechung-2022-05-11"]], "Legende": [[236, "legende"]], "Neuerungen in C++ seit 2011": [[236, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[236, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[236, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[236, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[237, "c-a-new-language-starting-in-2011"], [238, "c-a-new-language-starting-in-2011"]], "Metadata": [[237, "metadata"], [238, "metadata"], [240, "metadata"], [848, "metadata"]], "Introduction": [[237, "introduction"], [238, "introduction"], [240, "introduction"], [259, "introduction"], [260, "introduction"], [291, "introduction"], [331, "introduction"], [410, "introduction"], [441, "introduction"], [536, "introduction"], [633, "introduction"], [692, "introduction"], [716, "introduction"], [766, "introduction"], [963, "introduction"], [348, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[237, "pythonicity-thank-you-readablility-and-writability"], [238, "pythonicity-thank-you-readablility-and-writability"], [240, "pythonicity-thank-you-readablility-and-writability"], [291, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[237, "range-based-for-loops"], [238, "range-based-for-loops"], [240, "range-based-for-loops"], [291, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[237, "tuple-unpacking-err-structured-binding"], [238, "tuple-unpacking-err-structured-binding"], [240, "tuple-unpacking-err-structured-binding"], [291, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[237, "duck-typing-err-auto-without-a-duck"], [238, "duck-typing-err-auto-without-a-duck"], [240, "duck-typing-err-auto-without-a-duck"], [291, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[237, "things-that-simply-deserved-fixing-since-ages"], [238, "things-that-simply-deserved-fixing-since-ages"], [240, "things-that-simply-deserved-fixing-since-ages"], [291, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[237, "brace-initialization"], [238, "brace-initialization"], [240, "brace-initialization"], [291, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[237, "new-oo-keywords-override-final-default-delete"], [238, "new-oo-keywords-override-final-default-delete"], [240, "new-oo-keywords-override-final-default-delete"], [291, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[237, "strongly-typed-enum"], [238, "strongly-typed-enum"], [240, "strongly-typed-enum"], [291, "strongly-typed-enum"], [636, "strongly-typed-enum"]], "Delegating Constructor": [[237, "delegating-constructor"], [238, "delegating-constructor"], [240, "delegating-constructor"], [291, "delegating-constructor"], [641, "delegating-constructor"]], "nullptr": [[237, "nullptr"], [238, "nullptr"], [240, "nullptr"], [291, "nullptr"], [649, "nullptr"]], "Smart Pointers": [[237, "smart-pointers"], [238, "smart-pointers"], [240, "smart-pointers"], [260, "smart-pointers"], [513, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[237, "moving-rvalue-references"], [238, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[237, "functions-std-bind-std-function-lambdas"], [238, "functions-std-bind-std-function-lambdas"], [240, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[238, "work-environment"], [240, "work-environment"], [258, "work-environment"], [259, "work-environment"], [260, "work-environment"], [317, "work-environment"]], "Skeleton Project": [[238, "skeleton-project"], [240, "skeleton-project"], [555, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[239, "linux-basics-2022-10-03-2022-10-05"], [328, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[240, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [328, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[240, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[240, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[240, "coroutines-and-c-23-generators"]], "Ranges And Views": [[240, "ranges-and-views"]], "Concepts": [[240, "concepts"], [291, "concepts"], [651, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[241, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [328, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[241, "monday"]], "Tuesday": [[241, "tuesday"]], "Wednesday": [[241, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[242, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[242, "up-front-project-management"], [261, "up-front-project-management"], [283, "up-front-project-management"]], "Object Oriented Programming: Classes": [[242, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[242, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[242, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[242, "exercise-series-csv-json"]], "Iteration, Generators": [[242, "iteration-generators"]], "Going Dynamic: type(), exec()": [[242, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[242, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[242, "group-project-kickoff"], [262, "group-project-kickoff"], [284, "group-project-kickoff"], [287, "group-project-kickoff"]], "Data Structures Recap": [[242, "data-structures-recap"]], "Miscellaneous Livehacking": [[242, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[242, "function-arguments-closures-decorators"], [277, "function-arguments-closures-decorators"]], "Exceptions, with": [[242, "exceptions-with"], [277, "exceptions-with"], [280, "exceptions-with"]], "Package Management": [[242, "package-management"]], "Videos": [[242, "videos"]], "Beginner": [[242, "beginner"], [266, "beginner"]], "Advanced": [[242, "advanced"], [266, "advanced"]], "Fun": [[242, "fun"]], "Python (2022-10-17)": [[243, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[243, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[243, "Variables,-Types"]], "Immutable? References?": [[243, "Immutable?-References?"]], "And range()?": [[243, "And-range()?"]], "More About Dictionaries": [[243, "More-About-Dictionaries"], [243, "id1"], [246, "More-About-Dictionaries"], [273, "More-About-Dictionaries"], [1012, "more-about-dictionaries"]], "More About Lists": [[243, "More-About-Lists"], [246, "More-About-Lists"], [273, "More-About-Lists"], [1011, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[245, "python-2022-11-16-2022-11-18"], [246, "Python-(2022-11-16---2022-11-18)"], [328, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[245, "control-flow-sequences-iteration"], [252, "control-flow-sequences-iteration"], [255, "control-flow-sequences-iteration"], [265, "control-flow-sequences-iteration"], [266, "control-flow-sequences-iteration"], [271, "control-flow-sequences-iteration"], [272, "control-flow-sequences-iteration"], [272, "id2"]], "More Datatypes": [[245, "more-datatypes"], [252, "more-datatypes"], [255, "more-datatypes"], [265, "more-datatypes"], [266, "more-datatypes"], [266, "id2"], [271, "more-datatypes"], [272, "more-datatypes"], [333, "more-datatypes"]], "Exercise Series: CSV Files": [[245, "exercise-series-csv-files"], [265, "exercise-series-csv-files"], [266, "exercise-series-csv-files"], [271, "exercise-series-csv-files"], [272, "exercise-series-csv-files"]], "Advanced Language Features": [[245, "advanced-language-features"], [265, "advanced-language-features"], [266, "advanced-language-features"], [271, "advanced-language-features"], [396, "advanced-language-features"]], "Noob Exercises": [[245, "noob-exercises"]], "Object Oriented": [[246, "Object-Oriented"]], "Lists and Tuples": [[246, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[246, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[246, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[246, "And-Lists?-Mutable!"]], "Tuples?": [[246, "Tuples?"]], "set": [[246, "set"]], "More About Sets": [[246, "More-About-Sets"], [273, "More-About-Sets"], [1013, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[246, "Comprehensions-(List,-Dictionary,-Set)"], [960, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[246, "Generator-Expressions"]], "eval and exec": [[246, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[248, "linux-basics-2023-01-23-2023-01-26"], [328, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[249, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [328, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[249, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[249, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[249, "day-1-overview"]], "Introductory Live Hacking": [[249, "introductory-live-hacking"]], "The Shell": [[249, "the-shell"]], "Processes Quick Walk-Through": [[249, "processes-quick-walk-through"]], "Permissions": [[249, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[249, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[249, "uart"]], "SUSI": [[249, "susi"]], "Secure Shell (SSH)": [[249, "secure-shell-ssh"]], "Miscellaneous Hardware": [[249, "miscellaneous-hardware"]], "Group Exercise": [[249, "group-exercise"]], "Untold": [[249, "untold"], [259, "untold"], [262, "untold"]], "More From The Commandline": [[249, "more-from-the-commandline"]], "Multithreading (And C++)": [[249, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[250, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[250, "Filter-in-Pandas"]], "Copy vs Reference": [[250, "Copy-vs-Reference"]], "Immutable": [[250, "Immutable"]], "String": [[250, "String"]], "Regex": [[250, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[251, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[251, "pipeline-driver"]], "Virtual Environment Setup": [[251, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[251, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[251, "filter-select-uncategorized"]], "More Categories": [[251, "more-categories"]], "Testing": [[251, "testing"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[252, "python-for-sap-developers-2023-03-13-2023-03-15"], [328, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[252, "day-1-basics"]], "Demo": [[252, "demo"]], "Day 2 (Basics, Continued)": [[252, "day-2-basics-continued"]], "Pandas": [[252, "pandas"], [253, "Pandas"], [255, "pandas"], [259, "pandas"], [1084, "pandas"], [284, "pandas"]], "Hacking About On A SAP Test Dataset": [[252, "hacking-about-on-a-sap-test-dataset"], [256, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[252, "untold-from-original-agenda"]], "OO Introduction": [[252, "oo-introduction"], [255, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[252, "context-managers-automatic-cleanup"], [255, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[252, "iteration-generators-comprehensions"], [255, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[252, "decorators-and-related-topics"], [255, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[252, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[253, "2023-03-13"]], "Comment vs Docstring": [[253, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[253, "Mutable?-Immutable?"]], "Lists": [[253, "Lists"], [253, "id2"], [267, "Lists"]], "Tuples": [[253, "Tuples"]], "DataType Conversiosn": [[253, "DataType-Conversiosn"]], "String, File IO Exercise": [[253, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[254, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[255, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[255, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[255, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[255, "day-3-domain-specifics"]], "NumPy": [[255, "numpy"], [284, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[257, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[257, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[257, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[257, "DataFrame.all()-(and-any())"]], "Column Selection": [[257, "Column-Selection"]], "Dropping Columns": [[257, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[257, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[257, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[257, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[257, "Conversion"]], "Usage: A Filter": [[257, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[257, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[257, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[258, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[258, "preferred-ubuntu-under-windows-wsl"], [260, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[258, "unsupported-environments"]], "Skeleton Project Setup": [[258, "skeleton-project-setup"], [260, "skeleton-project-setup"]], "Classes, Objects, Methods": [[258, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[258, "heavy-weight-oo-muscle"], [260, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[258, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[258, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[258, "a-little-concurrency"]], "Untold So Far": [[258, "untold-so-far"]], "C++ Standard Library": [[258, "c-standard-library"]], "Miscellaneous Topics": [[258, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[259, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[259, "clean-code"], [261, "clean-code"], [262, "clean-code"]], "Demo Hacking": [[259, "demo-hacking"]], "Python Development: Select Topics": [[259, "python-development-select-topics"]], "Built-In Types: Facts": [[259, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[259, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[259, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[259, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[259, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[259, "decorators-the-ominous"]], "Modules And Packages": [[259, "modules-and-packages"], [283, "modules-and-packages"]], "Design Patterns": [[259, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[260, "c-for-embedded-developers-2023-04-18-2023-04-20"], [328, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[260, "some-details"]], "Standard Template Library": [[260, "standard-template-library"], [603, "standard-template-library"]], "Warm-Up": [[260, "warm-up"]], "Sensor Exercise, Resolved": [[260, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[260, "oo-cont-d"]], "Smart Pointers (Continued)": [[260, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[260, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[260, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[261, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[261, "day-1-python-inside-out"], [262, "day-1-python-inside-out"]], "Exercise Prerequisites": [[261, "exercise-prerequisites"], [283, "exercise-prerequisites"]], "References And Other Pitfalls": [[261, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[261, "looping-constructs-with-an-emphasis-on-the-else-clause"], [283, "looping-constructs-with-an-emphasis-on-the-else-clause"], [287, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[261, "closures-decorators-and-more"], [262, "closures-decorators-and-more"], [283, "closures-decorators-and-more"], [287, "closures-decorators-and-more"]], "Dynamic Features": [[261, "dynamic-features"], [262, "dynamic-features"], [263, "Dynamic-Features"], [283, "dynamic-features"], [287, "dynamic-features"]], "Error Handling And Recovery": [[261, "error-handling-and-recovery"], [262, "error-handling-and-recovery"], [283, "error-handling-and-recovery"], [284, "error-handling-and-recovery"], [287, "error-handling-and-recovery"]], "Miscellaneous Threading": [[261, "miscellaneous-threading"], [262, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[261, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[261, "group-project-discussion"]], "Design Patterns Overview": [[261, "design-patterns-overview"], [262, "design-patterns-overview"]], "Day 3: Group Project": [[261, "day-3-group-project"], [262, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[262, "python-advanced-2023-04-24-2023-04-26"], [328, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[262, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[262, "morning-opening"]], "Object Oriented Programming (Continued)": [[262, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[262, "project-setup-ide-usage"]], "Continue Hacking": [[262, "continue-hacking"]], "Test Driven Development, pytest": [[262, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[263, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[263, "is-vs.\u00a0=="]], "Compound DataTypes": [[263, "Compound-DataTypes"]], "class": [[263, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[264, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[265, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[266, "python-basics-2023-05-15-2023-05-17"], [267, "Python-Basics-(2023-05-15---2023-05-17)"], [328, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[266, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[266, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[266, "modules-from-standard-library"], [1064, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[267, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[267, "The-range-Function"], [1003, "the-range-function"]], "Lambda, And Functional Programming Tools": [[267, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[269, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[270, "linux-basics-2023-05-23-2023-05-25"], [328, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[270, "introduction-concepts-and-terminology"], [800, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[270, "the-shell-bash-bourne-again-shell"], [270, "id1"], [846, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[270, "tools-inspecting-text-files"], [856, "tools-inspecting-text-files"]], "File System Permissions": [[270, "file-system-permissions"], [270, "id2"], [821, "file-system-permissions"]], "Morning Wakeup": [[270, "morning-wakeup"], [272, "morning-wakeup"]], "I/O Redirection And Pipes": [[270, "i-o-redirection-and-pipes"], [807, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[270, "archiving-and-compression"], [789, "archiving-and-compression"], [791, "archiving-and-compression"]], "Networking": [[270, "networking"]], "Processes And Scheduling": [[270, "processes-and-scheduling"]], "SSH: Secure Shell": [[270, "ssh-secure-shell"], [878, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[270, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[271, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[272, "python-basics-2023-06-20-2023-06-22"], [273, "Python-Basics-(2023-06-20---2023-06-22)"], [328, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[272, "day2"]], "File I/O, And Encoding": [[272, "file-i-o-and-encoding"]], "Python Videos": [[272, "python-videos"]], "NumPy, Pandas, Matplotlib": [[272, "numpy-pandas-matplotlib"]], "DataTypes": [[273, "DataTypes"]], "(Im)mutable?": [[273, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[273, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[273, "len(),-range(),-for"]], "Generators, yield": [[273, "Generators,-yield"]], "Other -ables: Callable": [[273, "Other--ables:-Callable"]], "exec() (and eval())": [[273, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[273, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[274, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[275, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[275, "toolchain-introduction"], [1120, "toolchain-introduction"]], "Project Structure, Dependencies": [[275, "project-structure-dependencies"], [1120, "project-structure-dependencies"]], "External Dependencies": [[275, "external-dependencies"], [423, "external-dependencies"], [1120, "external-dependencies"]], "Code Generators": [[275, "code-generators"], [1120, "code-generators"]], "Automatic Testing": [[275, "automatic-testing"], [1120, "automatic-testing"]], "Installation And Deployment": [[275, "installation-and-deployment"], [1120, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[276, "cmake-an-introduction-2023-07-18"], [328, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[277, "python-advanced-2023-09-25-2023-09-27"], [278, "Python-Advanced-(2023-09-25---2023-09-27)"], [328, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[277, "recap-of-python-basics-course-before-summer"], [280, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[277, "project-management-requirements-sandboxing-testing"], [280, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[277, "into-the-wild-group-project-kickoff"], [280, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[277, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [280, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[277, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[278, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[278, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[279, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [282, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[280, "python-advanced-2023-10-09-2023-10-11"], [328, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[280, "classes-basics"]], "Classes: More": [[280, "classes-more"]], "Spoiler: Group Project Outcome": [[280, "spoiler-group-project-outcome"]], "More About Functions": [[280, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[281, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[281, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[283, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[283, "day-1-basic-python"], [287, "day-1-basic-python"]], "Datatypes, Datatypes": [[283, "datatypes-datatypes"], [287, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[283, "day-2-advanced-python-features"]], "Multiprocessing": [[283, "multiprocessing"]], "Day 3: Into The Wild": [[283, "day-3-into-the-wild"]], "Data Science Topics": [[283, "data-science-topics"], [287, "data-science-topics"]], "Group Project: An Idea": [[283, "group-project-an-idea"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[286, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: C++: Advanced Topics": [[291, "agenda-c-advanced-topics"]], "constexpr, constinit, consteval": [[291, "constexpr-constinit-consteval"]], "Smart Pointers, And Move Semantics": [[291, "smart-pointers-and-move-semantics"]], "Types, Functions, Type Erasure, Toolcase": [[291, "types-functions-type-erasure-toolcase"]], "Functions (std::function<>, Lambdas)": [[291, "functions-std-function-lambdas"]], "Type Erasure": [[291, "type-erasure"]], "C++ Toolcase": [[291, "c-toolcase"]], "Dynamic Versus Static Typing: Templates": [[291, "dynamic-versus-static-typing-templates"]], "Outlook In >=20": [[291, "outlook-in-20"]], "Attributes And The Like": [[291, "attributes-and-the-like"]], "<algorithm> Overview": [[291, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[291, "miscellaneous-miscellaneous"]], "C++: Advanced Topics": [[292, "c-advanced-topics"]], "C++ For Embedded Developers (Beginning of 2023)": [[293, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[294, "python-sap"]], "Screenplay Checker": [[295, "screenplay-checker"]], "GPIO: Blinklicht": [[296, "gpio-blinklicht"]], "Commandline": [[296, "commandline"], [301, "commandline"], [826, "commandline"]], "sysfs GPIO": [[296, "sysfs-gpio"]], "Electronic Aspect": [[296, "electronic-aspect"]], "External Circuitry": [[296, "external-circuitry"]], "Raspberry Header Pinout": [[296, "raspberry-header-pinout"]], "Dependencies": [[296, "dependencies"], [297, "dependencies"], [298, "dependencies"], [299, "dependencies"], [301, "dependencies"], [424, "dependencies"], [441, "dependencies"], [455, "dependencies"], [483, "dependencies"], [500, "dependencies"], [502, "dependencies"], [513, "dependencies"], [580, "dependencies"], [586, "dependencies"], [590, "dependencies"], [598, "dependencies"], [600, "dependencies"], [603, "dependencies"], [608, "dependencies"], [616, "dependencies"], [617, "dependencies"], [619, "dependencies"], [621, "dependencies"], [622, "dependencies"], [623, "dependencies"], [624, "dependencies"], [625, "dependencies"], [626, "dependencies"], [627, "dependencies"], [628, "dependencies"], [629, "dependencies"], [630, "dependencies"], [631, "dependencies"], [637, "dependencies"], [644, "dependencies"], [651, "dependencies"], [662, "dependencies"], [686, "dependencies"], [691, "dependencies"], [793, "dependencies"], [794, "dependencies"], [795, "dependencies"], [799, "dependencies"], [813, "dependencies"], [814, "dependencies"], [815, "dependencies"], [834, "dependencies"], [839, "dependencies"], [840, "dependencies"], [843, "dependencies"], [876, "dependencies"], [878, "dependencies"], [885, "dependencies"], [891, "dependencies"], [893, "dependencies"], [901, "dependencies"], [903, "dependencies"], [905, "dependencies"], [920, "dependencies"], [944, "dependencies"], [946, "dependencies"], [947, "dependencies"], [950, "dependencies"], [951, "dependencies"], [972, "dependencies"], [974, "dependencies"], [1020, "dependencies"], [1021, "dependencies"], [1024, "dependencies"], [1025, "dependencies"], [1026, "dependencies"], [1028, "dependencies"], [1029, "dependencies"], [1030, "dependencies"], [1031, "dependencies"], [1032, "dependencies"], [1033, "dependencies"], [1037, "dependencies"], [1038, "dependencies"], [1039, "dependencies"], [1040, "dependencies"], [1041, "dependencies"], [1043, "dependencies"], [1044, "dependencies"], [1045, "dependencies"], [1046, "dependencies"], [1047, "dependencies"], [1048, "dependencies"], [1049, "dependencies"], [1051, "dependencies"], [1052, "dependencies"], [1053, "dependencies"], [1054, "dependencies"], [1055, "dependencies"], [1056, "dependencies"], [1058, "dependencies"], [1059, "dependencies"], [1060, "dependencies"], [1061, "dependencies"], [1074, "dependencies"], [1077, "dependencies"], [1080, "dependencies"], [1084, "dependencies"], [1097, "dependencies"], [917, "dependencies"], [1103, "dependencies"]], "GPIO: Blinklicht Interface": [[297, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[298, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[299, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[300, "ece19-exercises-and-custom-topics"]], "Reading a File": [[301, "reading-a-file"], [888, "reading-a-file"]], "Output": [[301, "output"]], "2021-05-20 (G2)": [[302, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[302, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[302, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[302, "Reading-File-Line-by-Line"]], "Iterating a File": [[302, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[302, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[302, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[302, "str.split()"]], "2021-05-21": [[303, "2021-05-21"], [310, "id11"]], "Modules and Packages": [[303, "Modules-and-Packages"], [971, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[304, "Strings-vs.\u00a0Bytes"]], "Batteries": [[305, "Batteries"]], "Key Value Map": [[305, "Key-Value-Map"]], "Comments vs Documentation": [[305, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[305, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[305, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[305, "Arithmetic-Operators"], [354, "arithmetic-operators"], [983, "arithmetic-operators"]], "Wertebereich von Integers": [[305, "Wertebereich-von-Integers"]], "An Example": [[306, "An-Example"], [1006, "an-example"]], "Sidenote: Pure Beauty": [[306, "Sidenote:-Pure-Beauty"], [1006, "sidenote-pure-beauty"]], "Parameters and Types": [[306, "Parameters-and-Types"], [1006, "parameters-and-types"]], "Pitfalls": [[306, "Pitfalls"]], "Cloud Computer, SSH Login": [[307, "cloud-computer-ssh-login"]], "Machine, Logins": [[307, "machine-logins"]], "Login via Secure Shell (SSH)": [[307, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[308, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[309, "embedded-computing-1-ece-19"]], "Daily Log": [[310, "daily-log"]], "2021-03-04": [[310, "id1"]], "2021-03-05": [[310, "id2"]], "Cheat Sheets": [[310, null]], "2021-03-18": [[310, "id3"]], "2021-03-26": [[310, "id4"]], "2021-04-15": [[310, "id5"]], "2021-04-21": [[310, "id6"]], "Git Intro": [[310, "git-intro"]], "Download and Installation": [[310, null], [315, null]], "2021-04-29": [[310, "id7"]], "2021-05-10": [[310, "id8"]], "Org Stuff": [[310, "org-stuff"]], "Python: Functions": [[310, "python-functions"]], "2021-05-12": [[310, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[310, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[310, "id10"]], "Reiterating on Exercise": [[310, "reiterating-on-exercise"]], "import argparse": [[310, "import-argparse"]], "Exercise digit (Once More)": [[310, "exercise-digit-once-more"]], "2021-06-01": [[310, "id12"]], "sysfs GPIO: Blinking an LED": [[310, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[310, "id13"]], "Embedded Computing 1 (Deutsch)": [[311, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[311, "lehrinhalte"]], "Lernergebnisse der LV": [[311, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[311, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[311, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[311, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[311, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[312, "embedded-computing-1-english"]], "Course Content": [[312, "course-content"]], "Learning Outcome": [[312, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[312, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[312, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[312, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[312, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[313, "plan-for-summer-2021"]], "Linux Introduction": [[313, "linux-introduction"]], "Slides": [[313, null], [313, null], [313, null]], "C/C++ Development": [[313, "c-c-development"]], "Python Development": [[313, "python-development"]], "2021-10-07": [[314, "id1"]], "Whose Fault It Is": [[314, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[315, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[315, "linux-unix"]], "Git": [[315, "git"]], "2021-10-28": [[316, "id1"]], "Group Project": [[316, "group-project"]], "Discussion of Tasks": [[316, "discussion-of-tasks"]], "TODOs": [[316, "todos"]], "2021-11-15": [[317, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[317, "systems-programming-files-directories-links"]], "2021-11-29": [[318, "id1"]], "jjjj": [[318, "jjjj"]], "2021-12-1{4,5}": [[319, "id1"]], "Future Topics": [[319, "future-topics"]], "Threading": [[319, "threading"]], "C++ Sideways": [[319, "c-sideways"]], "2022-01-10": [[320, "id1"]], "Scheduling": [[320, "scheduling"], [922, "scheduling"], [923, "scheduling"]], "2022-01-12": [[321, "id1"]], "Scheduling and Realtime": [[321, "scheduling-and-realtime"], [325, "scheduling-and-realtime"]], "2022-02-15": [[322, "id1"]], "Agenda/Log": [[323, "agenda-log"], [324, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[324, "embedded-computing-2-ece-19"]], "Project Repository": [[324, "project-repository"]], "Test Material": [[324, "test-material"]], "Exam Material Overview": [[325, "exam-material-overview"]], "Questions": [[325, "questions"], [325, "id1"], [617, "questions"], [799, "questions"], [813, "questions"], [814, "questions"], [839, "questions"], [946, "questions"]], "Slide Material": [[325, "slide-material"], [325, "id2"]], "Embedded Computing 1+2, ECE 19": [[326, "embedded-computing-1-2-ece-19"]], "Training Material: Overview and Download": [[329, "training-material-overview-and-download"]], "Installation": [[330, "installation"], [883, "installation"], [1018, "installation"], [1080, "installation"], [1105, "installation"]], "On Windows": [[330, "on-windows"]], "On Linux": [[330, "on-linux"]], "The Book (1)": [[331, "the-book-1"]], "The Book (2)": [[331, "the-book-2"]], "The Beginning": [[331, "the-beginning"]], "Cool Guys and Their Hobby": [[331, "cool-guys-and-their-hobby"]], "History of UNIX": [[331, "history-of-unix"]], "My First Program (1)": [[332, "my-first-program-1"]], "My First Program (2)": [[332, "my-first-program-2"]], "Character Arrays - Strings": [[332, "character-arrays-strings"]], "Variables and Arithmetic": [[333, "variables-and-arithmetic"]], "My Second Program (1)": [[333, "my-second-program-1"]], "My Second Program (2)": [[333, "my-second-program-2"]], "My Second Program (3)": [[333, "my-second-program-3"]], "My Second Program (4)": [[333, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[334, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[335, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[335, "for-loop-simplification-2"]], "Second Program, revisited": [[335, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[336, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[337, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[337, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[338, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[339, "character-i-o"]], "The Outside World": [[339, "the-outside-world"]], "cat for the Poor (1)": [[339, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[339, "cat-for-the-poor-2"]], "More Examples \u2026": [[339, "more-examples"]], "More Examples - if": [[339, "more-examples-if"]], "if, Formally": [[339, "if-formally"]], "Operators, Formally": [[339, "operators-formally"]], "Exercise: wc For The Poor": [[340, "exercise-wc-for-the-poor"]], "Arrays": [[341, "arrays"]], "Array Definition, Explicit Initialization": [[341, "array-definition-explicit-initialization"]], "Array Access": [[341, "array-access"]], "Discussion: Initialization": [[341, "discussion-initialization"]], "Discussion: if, else": [[341, "discussion-if-else"]], "Array Initializer": [[341, "array-initializer"]], "Discussion: Initializer": [[341, "discussion-initializer"]], "Initialization using memset()": [[341, "initialization-using-memset"]], "Discussion: memset()": [[341, "discussion-memset"]], "Exercise: Character Histogram": [[342, "exercise-character-histogram"]], "A Nonsensical Example": [[343, "a-nonsensical-example"]], "Function Signature": [[343, "function-signature"]], "Discussion": [[343, "discussion"]], "Definition vs. Declaration (1)": [[343, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[343, "definition-vs-declaration-2"]], "By Value / By Reference": [[343, "by-value-by-reference"]], "Exercise: Forward Declaration": [[344, "exercise-forward-declaration"]], "Character Arrays": [[345, "character-arrays"]], "Strings: Mistake by Design?": [[345, "strings-mistake-by-design"]], "Strings: Definition": [[345, "strings-definition"]], "Strings: Library Functions": [[345, "strings-library-functions"]], "Strings as Parameters": [[345, "strings-as-parameters"]], "Strings: Dangers": [[345, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[346, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[347, "lifetime-of-variables"]], "Lifetime": [[347, "lifetime"]], "Global Variables": [[347, "global-variables"], [521, "global-variables"]], "Global Variables: How?": [[347, "global-variables-how"]], "Type System": [[349, "type-system"]], "Variable Names": [[350, "variable-names"]], "Variable- and Function Names": [[350, "variable-and-function-names"]], "Data Types, Sizes": [[351, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[351, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[351, "integer-variants-qualifiers"]], "Widths": [[351, "widths"]], "Constants": [[352, "constants"]], "Constants and Types": [[352, "constants-and-types"]], "Character Constants: Escape Sequences": [[352, "character-constants-escape-sequences"]], "String Constants": [[352, "string-constants"]], "Character vs. String Constants": [[352, "character-vs-string-constants"]], "Symbolic Constants (1)": [[352, "symbolic-constants-1"]], "Symbolic Constants (2)": [[352, "symbolic-constants-2"]], "Variable Definitions": [[353, "variable-definitions"]], "Definitions und Initialization": [[353, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[353, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[353, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[354, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[354, "arithmetic-operators-2"]], "Relational and Logical Operators": [[355, "relational-and-logical-operators"]], "Relational Operators (1)": [[355, "relational-operators-1"]], "Relational Operators (2)": [[355, "relational-operators-2"]], "Logical (Boolean) Operators": [[355, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[355, "boolean-operators-short-circuit"]], "Type Conversions": [[356, "type-conversions"]], "Implicit Type Conversions": [[356, "implicit-type-conversions"]], "Sign Bugs": [[356, "sign-bugs"]], "Truncation": [[356, "truncation"]], "Sign Propagation": [[356, "sign-propagation"]], "Conversion Using Operators": [[356, "conversion-using-operators"]], "Conversion and unsigned (1)": [[356, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[356, "conversion-and-unsigned-2"]], "Compiler Warnings": [[356, "compiler-warnings"]], "Last Warning": [[356, "last-warning"], [916, "last-warning"]], "Forced Conversion - Cast": [[356, "forced-conversion-cast"]], "Increment, Decrement": [[357, "increment-decrement"]], "Confusion: ++, --": [[357, "confusion"]], "Confused to perfection (1)": [[357, "confused-to-perfection-1"]], "Confused to perfection (2)": [[357, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[358, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[359, "bit-operators"]], "Bit Manipulation": [[359, "bit-manipulation"]], "Bitwise AND and OR": [[359, "bitwise-and-and-or"]], "Bitwise XOR": [[359, "bitwise-xor"]], "Shift Left": [[359, "shift-left"]], "Shift Right": [[359, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[359, "inverting-one-s-complement"]], "Assignment with Calculation": [[360, "assignment-with-calculation"]], "Combined Operators": [[360, "combined-operators"]], "?: - Conditional Expression": [[361, "conditional-expression"]], "?: - Conditional Expression (1)": [[361, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[361, "conditional-expression-2"]], "Precedence, Associativity": [[362, "precedence-associativity"]], "Summary: Operators": [[362, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[362, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[362, "operators-precedence-und-associativity-2"]], "More Warnings": [[362, "more-warnings"]], "Statements and Blocks": [[364, "statements-and-blocks"]], "Statement vs. Block": [[364, "statement-vs-block"]], "if - else": [[365, "if-else"]], "Branches": [[365, "branches"]], "True or False? What is Truth?": [[365, "true-or-false-what-is-truth"]], "else is optional (1)": [[365, "else-is-optional-1"]], "else is optional (2)": [[365, "else-is-optional-2"]], "else - if": [[366, "else-if"]], "Style Matters": [[366, "style-matters"]], "switch": [[367, "switch"], [367, "id1"]], "Case Distinctions": [[367, "case-distinctions"]], "if - else if vs. switch": [[367, "if-else-if-vs-switch"]], "Loops: while and for": [[368, "loops-while-and-for"]], "while: general purpose loop": [[368, "while-general-purpose-loop"]], "From while to for (1)": [[368, "from-while-to-for-1"]], "From while to for (2)": [[368, "from-while-to-for-2"]], "for, a Little Closer": [[368, "for-a-little-closer"]], "Comma Operator": [[368, "comma-operator"]], "for: Infamous Idioms": [[368, "for-infamous-idioms"]], "Loops: do - while": [[369, "loops-do-while"]], "do - while: Condition After Body": [[369, "do-while-condition-after-body"]], "goto and Labels": [[371, "goto-and-labels"]], "Structured Programming vs. goto": [[371, "structured-programming-vs-goto"]], "goto: Definition": [[371, "goto-definition"]], "goto: Use Cases": [[371, "goto-use-cases"]], "Nesting": [[373, "nesting"]], "Declaration vs. Definition": [[373, "declaration-vs-definition"]], "A Monolithic Program": [[373, "a-monolithic-program"]], "Separate Compilation": [[373, "separate-compilation"]], "Extern/Global Variables": [[374, "extern-global-variables"]], "Variables: Declaration and Definition": [[374, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[374, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[374, "variables-separating-declaration-from-definition-2"]], "Header Files": [[375, "header-files"]], "Declarations: Problems (1)": [[375, "declarations-problems-1"]], "Declarations: Problems (2)": [[375, "declarations-problems-2"]], "Declarations: Solutions": [[375, "declarations-solutions"]], "Static Variables": [[376, "static-variables"]], "Lifetime and Visibility (1)": [[376, "lifetime-and-visibility-1"]], "Automatic Variables": [[376, "automatic-variables"]], "Local static Variable": [[376, "local-static-variable"]], "Global static Variable": [[376, "global-static-variable"]], "Global Variable": [[376, "global-variable"], [1005, "global-variable"]], "C Preprocessor: Basics": [[377, "c-preprocessor-basics"]], "#include": [[377, "include"]], "Macros: Text Replacement": [[377, "macros-text-replacement"]], "Macros: Constant Definition": [[377, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[377, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[377, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[377, "include-guards-1"]], "Include Guards (2)": [[377, "include-guards-2"]], "The C Preprocessor: Last Words": [[377, "the-c-preprocessor-last-words"], [378, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[378, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[378, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[378, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[378, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[378, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[378, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[378, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[378, "stringification-1"]], "Stringification (2)": [[378, "stringification-2"]], "Token Pasting (1)": [[378, "token-pasting-1"]], "Token Pasting (2)": [[378, "token-pasting-2"]], "Warnings and Errors": [[378, "warnings-and-errors"]], "Predefined Macros (1)": [[378, "predefined-macros-1"]], "Pointers and Addresses": [[380, "pointers-and-addresses"]], "Pointers: Basics": [[380, "pointers-basics"]], "Pointer: Operators": [[380, "pointer-operators"]], "More Examples": [[380, "more-examples"]], "Pointers as Function Parameters": [[381, "pointers-as-function-parameters"]], "Call by Reference (1)": [[381, "call-by-reference-1"]], "Call by Reference (2)": [[381, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[382, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[383, "pointers-and-arrays"], [385, "pointers-and-arrays"]], "It\u2019s Only Memory": [[383, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[383, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[383, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[383, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[383, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[383, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[383, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[383, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[383, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[383, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[384, null], [797, null], [802, null], [802, null], [803, null], [803, null], [803, null], [808, null], [809, null], [892, null], [919, null], [922, null], [926, null], [928, null], [1007, null]], "main() Can Take Parameters": [[384, "main-can-take-parameters"]], "struct: Basics": [[386, "struct-basics"]], "struct: Compound Datatypes": [[386, "struct-compound-datatypes"]], "struct: How?": [[386, "struct-how"]], "Usage": [[386, "usage"], [576, "usage"], [583, "usage"]], "Nested Structures": [[386, "nested-structures"]], "Memory Layout": [[386, "memory-layout"]], "Recursive Structures?": [[386, "recursive-structures"]], "struct: Functions": [[387, "struct-functions"]], "Parameters and Return (1)": [[387, "parameters-and-return-1"]], "Parameters and Return (2)": [[387, "parameters-and-return-2"]], "Parameters and Return (3)": [[387, "parameters-and-return-3"]], "typedef: Type Alias": [[388, "typedef-type-alias"]], "Alias for Type Names": [[388, "alias-for-type-names"]], "Dynamic Memory": [[390, "dynamic-memory"], [390, "id1"]], "Stack and Global Memory": [[390, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[390, "dynamic-memory-usage"]], "Singly Linked List": [[391, "singly-linked-list"]], "Exercises (1)": [[391, "exercises-1"]], "Exercises (2)": [[391, "exercises-2"]], "Exercises (3)": [[391, "exercises-3"]], "Exercises (4)": [[391, "exercises-4"]], "Exercises (5)": [[391, "exercises-5"]], "Exercises (6)": [[391, "exercises-6"]], "Exercises (7)": [[391, "exercises-7"]], "Exercises (8)": [[391, "exercises-8"]], "Exercises (9)": [[391, "exercises-9"]], "Exercises (10)": [[391, "exercises-10"]], "Exercises (11)": [[391, "exercises-11"]], "Volatile": [[393, "volatile"]], "volatile: The Lie (1)": [[393, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[393, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[393, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[393, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[394, "compiler-intrinsics"]], "Atomic Memory Access": [[394, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[394, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[394, "load-modify-store-mutex"]], "Atomic Instructions": [[394, "atomic-instructions"], [911, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[394, "more-gcc-builtins"]], "Alignment": [[395, "alignment"]], "Data Alignment": [[395, "data-alignment"]], "Data Alignment, Compilers": [[395, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[395, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[395, "unaligned-data-access-2"]], "Padding (1)": [[395, "padding-1"]], "Padding (2)": [[395, "padding-2"]], "Padding (3)": [[395, "padding-3"]], "Padding (4)": [[395, "padding-4"]], "Structure Alignment (1)": [[395, "structure-alignment-1"]], "Structure Alignment (2)": [[395, "structure-alignment-2"]], "And Arrays? (1)": [[395, "and-arrays-1"]], "And Arrays? (2)": [[395, "and-arrays-2"]], "And Arrays? (3)": [[395, "and-arrays-3"]], "Sanity and Readabilty": [[397, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[397, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[397, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[397, "shooting-offenses"]], "Ambiguity": [[397, "ambiguity"]], "Readability": [[397, "readability"]], "Code Smells": [[397, "code-smells"]], "Know Your Integers": [[398, "know-your-integers"]], "Standard Data Types: size_t (1)": [[398, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[398, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[399, "discrete-values-enum"], [399, "id1"]], "Discrete Values": [[399, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[399, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[399, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[399, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[399, "discrete-values-enum-and-switch"], [399, "id2"]], "Discrete Values - Close to Perfection": [[399, "discrete-values-close-to-perfection"]], "Visibility - static": [[400, "visibility-static"]], "Visibility": [[400, "visibility"]], "A Somewhat Contrived Example (1)": [[400, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[400, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[400, "the-static-keyword-hooray"]], "Correctness - const": [[401, "correctness-const"]], "Non-Modifiable Memory (1)": [[401, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[401, "non-modifiable-memory-2"]], "The const Keyword (1)": [[401, "the-const-keyword-1"]], "The const Keyword (2)": [[401, "the-const-keyword-2"]], "const Variables": [[401, "const-variables"]], "const Parameters (1)": [[401, "const-parameters-1"]], "const Parameters (2)": [[401, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[401, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[401, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[401, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[401, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[401, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[401, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[401, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[401, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[401, "pointers-pointers-pointers-9"]], "Struct Initialization": [[402, "struct-initialization"]], "Good Old Struct Initialization": [[402, "good-old-struct-initialization"]], "C99 Designated Initializer": [[402, "c99-designated-initializer"]], "Explict Type Safety": [[403, "explict-type-safety"]], "Integer Types Are Ambiguous": [[403, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[403, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[403, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[403, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[403, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[403, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[403, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[403, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[403, "wrap-up-artificial-type-safety"]], "valgrind": [[404, "valgrind"]], "Valgrind": [[404, "id1"]], "Valgrind in Action (1)": [[404, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[404, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[404, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[404, "valgrind-more"]], "Optimization": [[406, "optimization"]], "Optimization - Introduction": [[406, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[406, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[406, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[406, "compute-bound-or-io-bound-3"]], "What to do Next?": [[406, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[407, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[407, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[407, "unnecessary-optimizations"]], "Inlining (1)": [[407, "inlining-1"]], "Inlining (2)": [[407, "inlining-2"]], "Inlining (3)": [[407, "inlining-3"]], "Register Allocation (1)": [[407, "register-allocation-1"]], "Register Allocation (2)": [[407, "register-allocation-2"]], "Peephole Optimization": [[407, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[407, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[407, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[407, "peephole-optimization-constant-folding"]], "Loop Invariants": [[407, "loop-invariants"]], "Loop Unrolling": [[407, "loop-unrolling"]], "Tail Call Optimization": [[407, "tail-call-optimization"]], "CPU Optimization, Last Words": [[407, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[407, "gcc-optimization-levels"]], "Further Reading": [[407, "further-reading"]], "Optimizations: Memory Optimizations": [[408, "optimizations-memory-optimizations"]], "Memory: Caches": [[408, "memory-caches"]], "Locality of reference": [[408, "locality-of-reference"]], "Multidimensional Arrays": [[408, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[408, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[408, "multidimensional-arrays-forward-indexing"]], "Profiling - Famous Words": [[410, "profiling-famous-words"]], "Donald E. Knuth": [[410, null]], "Tony Hoare": [[410, null]], "Larry Wall": [[410, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[410, null]], "Profiling - Introduction": [[410, "profiling-introduction"]], "GNU Profiler - gprof": [[411, "gnu-profiler-gprof"]], "gprof - How it Works": [[411, "gprof-how-it-works"]], "Using gprof": [[411, "using-gprof"]], "gprof: Flat Profile": [[411, "gprof-flat-profile"]], "gprof: Call Graph": [[411, "gprof-call-graph"]], "gprof: Interpreting The Results": [[411, "gprof-interpreting-the-results"]], "gprof: Visualization": [[411, "gprof-visualization"]], "callgrind": [[412, "callgrind"]], "callgrind - How it Works": [[412, "callgrind-how-it-works"]], "callgrind - How it is Used": [[412, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[412, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[412, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[412, "callgrind-useful-options"]], "oprofile": [[413, "oprofile"]], "oprofile - How it Works": [[413, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[413, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[413, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[413, "oprofile-too-much-information"]], "oprofile - Call Graph": [[413, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[413, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[413, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[413, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[413, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[413, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[413, "oprofile-graphical-beauty"]], "The C Programming Language": [[415, "the-c-programming-language"]], "Group Description": [[415, "group-description"], [543, "group-description"], [633, "group-description"], [675, "group-description"], [676, "group-description"], [716, "group-description"], [718, "group-description"], [860, "group-description"], [868, "group-description"], [869, "group-description"], [348, "group-description"], [363, "group-description"], [372, "group-description"], [379, "group-description"], [385, "group-description"], [389, "group-description"], [392, "group-description"], [396, "group-description"], [405, "group-description"], [409, "group-description"], [414, "group-description"], [535, "group-description"], [558, "group-description"], [561, "group-description"], [564, "group-description"], [605, "group-description"], [614, "group-description"], [700, "group-description"], [708, "group-description"], [712, "group-description"], [923, "group-description"]], "Messages From The Book": [[416, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[417, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[417, "rules-why-rules"]], "Coding Style": [[417, "coding-style"]], "Disclaimer": [[417, null]], "Design Principles: SOLID": [[417, "design-principles-solid"]], "Another One: YAGNI": [[417, "another-one-yagni"]], "Architecture": [[417, "architecture"]], "Project Management: Traditional": [[417, "project-management-traditional"]], "Project Management: Software": [[417, "project-management-software"]], "So What?": [[417, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[418, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[418, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[419, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[419, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[419, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[419, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[419, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[419, "where-are-we-questions"]], "Testability: Input Cleaning": [[419, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[419, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[419, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[419, "testability-reading-input-from-directory"]], "Testability: Categorization": [[419, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[419, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[419, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[420, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[420, "single-monolithic-executable"]], "Building With CMake": [[420, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[420, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[420, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[420, "problem-duplicate-compilation"]], "Problem: More Functionality": [[420, "problem-more-functionality"]], "Solution: Libraries": [[420, "solution-libraries"], [958, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[421, "configured-header-files"]], "Problem": [[421, "problem"], [429, "problem"], [435, "problem"], [436, "problem"], [437, "problem"], [440, "problem"], [446, "problem"], [494, "problem"], [756, "problem"], [887, "problem"]], "Configured Files": [[421, "configured-files"]], "Use In Compiled Code": [[421, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[422, "c-debug-release-cmake-programming-rants"]], "Pause": [[422, "pause"]], "Class Diagram": [[422, "class-diagram"]], "C++ Standard Version": [[422, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[422, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[422, "compiler-type"]], "Strings And Lists": [[422, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[422, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[422, "message-popular-modes"]], "FIND_PACKAGE()": [[423, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[423, "find-package-required"]], "SQLite3 Parameters": [[423, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[423, "using-sqlite3-parameters"]], "Demo Time": [[423, "demo-time"]], "CMake: An Introduction": [[424, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[425, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[425, "prefix-where-everything-comes-together"]], "Installing Targets": [[425, "installing-targets"]], "Doing The Installation (make install)": [[425, "doing-the-installation-make-install"]], "And Shared Libraries?": [[425, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[425, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[425, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[426, "libraries-and-dependencies"]], "Libraries And Executables": [[426, "libraries-and-executables"]], "Targets And Dependencies": [[426, "targets-and-dependencies"]], "Visualizing Dependencies": [[426, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[427, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[427, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[427, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[427, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[427, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[427, "good-or-bad"], [428, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[428, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[428, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[428, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[428, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[429, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[429, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[429, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[429, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[430, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[430, "normal-libraries"]], "Building Shared Libraries": [[430, "building-shared-libraries"]], "More About Loading": [[430, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[431, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[431, "reorganization"]], "Dependencies, And Target Properties": [[431, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[432, "targets-properties-and-more"]], "Target Types": [[432, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[432, "properties-private-public-interface"]], "Running Tests": [[433, "running-tests"], [1098, "running-tests"]], "Setup And Usage": [[433, "setup-and-usage"]], "Add Simple Test": [[433, "add-simple-test"]], "Checking Test Output": [[433, "checking-test-output"]], "Questionability": [[433, "questionability"]], "C++ Code": [[434, "c-code"]], "Abstract Factory": [[435, "abstract-factory"]], "I2C Sensor Subhierarchy": [[435, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[435, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[435, "solution-factory-objects"]], "Requirements": [[435, "requirements"], [459, "requirements"], [490, "requirements"]], "Notes": [[435, "notes"]], "Adapter": [[436, "adapter"]], "Solution: Adaptation": [[436, "solution-adaptation"]], "Basic Adaptation": [[436, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[436, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[436, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[436, "adapter-is-doing-real-measurements"]], "Command": [[437, "command"]], "Motivation": [[437, "motivation"], [440, "motivation"], [456, "motivation"], [457, "motivation"], [553, "motivation"], [650, "motivation"], [652, "motivation"], [677, "motivation"], [683, "motivation"], [978, "motivation"], [984, "motivation"]], "Step 1: Basic insert()": [[437, "step-1-basic-insert"]], "Step 2: Basic find()": [[437, "step-2-basic-find"]], "Step 3: drop()": [[437, "step-3-drop"]], "Step 4: Handle find() Errors": [[437, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[437, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[437, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[437, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[438, "socialdb-source-code"]], "Composite": [[439, "composite"]], "Unix Filesystem": [[439, "unix-filesystem"]], "Boolean Expressions": [[439, "boolean-expressions"]], "Thermometers, And Average Calculation": [[439, "thermometers-and-average-calculation"]], "Decorator": [[440, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[440, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[440, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[440, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[440, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[440, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[440, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[440, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[440, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[441, "design-patterns-with-c"]], "Topics/Exercises": [[441, "topics-exercises"]], "Solutions": [[441, "solutions"], [455, "solutions"], [469, "solutions"]], "To Be Done": [[441, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[442, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[442, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[442, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[442, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[442, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[442, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[442, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[442, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[442, "stop-here-need-help"]], "Tests": [[442, "tests"], [462, "tests"]], "Interpreter": [[443, "interpreter"]], "Observer": [[444, "observer"]], "OO Design Principles": [[445, "oo-design-principles"]], "Principles: Why? Which?": [[445, "principles-why-which"]], "Single Responsibility": [[445, "single-responsibility"]], "Open/Closed": [[445, "open-closed"]], "Liskov Substitution": [[445, "liskov-substitution"]], "Interface Segregation": [[445, "interface-segregation"]], "Dependency Inversion": [[445, "dependency-inversion"]], "Proxy": [[446, "proxy"]], "Solution: Proxy": [[446, "solution-proxy"]], "Local Variant": [[446, "local-variant"]], "Remote Variant": [[446, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[447, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[447, "hypothetical"]], "Class Hierarchy": [[447, "class-hierarchy"]], "Singleton": [[448, "singleton"]], "And class Person?": [[448, "and-class-person"]], "UML Short Introduction": [[449, "uml-short-introduction"]], "Interface": [[449, "interface"]], "Interface Implementation, Inheritance": [[449, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[449, "connectors-association-aggregation-composition"]], "Association": [[449, "association"]], "Aggregation": [[449, "aggregation"]], "Composition": [[449, "composition"]], "Exercise: Abstract Factory": [[450, "exercise-abstract-factory"]], "Exercise: Adapter": [[451, "exercise-adapter"], [458, "exercise-adapter"]], "Exercise: Command": [[452, "exercise-command"]], "Exercise: Composite": [[453, "exercise-composite"]], "Exercise: Decorator": [[454, "exercise-decorator"]], "Exercises: Design Patterns": [[455, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[456, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[457, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[457, "expression-interface"]], "Arithmetic (Binary) Expressions": [[457, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[457, "check-combined-arithmetic-expressions"]], "And Variables?": [[457, "and-variables"]], "No Uninitialized Variables!!": [[457, "no-uninitialized-variables"]], "Assigning To Variables": [[457, "assigning-to-variables"]], "Using Variables As Expressions": [[457, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[459, "exercise-proxy-remote-thermometer"]], "Network Communication": [[459, "network-communication"]], "Implementation Hints": [[459, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[460, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[461, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[462, "exercise-singleton-flexible-and-strict"]], "Complications": [[462, "complications"]], "Exercise: Singleton (Inflexible)": [[463, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[464, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[464, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[464, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[464, "i2csensorfactory-vendor1"], [464, "id1"]], "Solution: Adapter": [[465, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[465, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[466, "solution-command"]], "Command Classes": [[466, "command-classes"]], "Solution: Composite": [[467, "solution-composite"]], "Averaging (Composite) Sensor": [[467, "averaging-composite-sensor"]], "Solution: Decorator": [[468, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[468, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[468, "decorated-constant-sensor"]], "Decorated Random Sensor": [[468, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[470, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[471, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[472, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[473, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[473, "client-proxy-thermometer"]], "Remote Stub": [[473, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[474, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[474, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[475, "solution-singleton-flexible"]], "Main Program": [[475, "main-program"], [476, "main-program"], [477, "main-program"]], "SocialInsurance Interface": [[475, "socialinsurance-interface"], [476, "socialinsurance-interface"]], "Two Concrete Implementations": [[475, "two-concrete-implementations"], [476, "two-concrete-implementations"]], "OEGK": [[475, "oegk"], [476, "oegk"]], "SVS": [[475, "svs"], [476, "svs"]], "Solution: Singleton (Flexible And Strict)": [[476, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[477, "solution-singleton-inflexible"]], "Singleton Implementation": [[477, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[478, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[478, "github-project"]], "CMake Build": [[478, "cmake-build"], [900, "cmake-build"]], "Dependencies/Usage Relationships": [[478, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[478, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[478, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[478, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[478, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[479, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[480, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[481, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[481, "new-sensor-class-randomsensor"]], "Implementation Details": [[481, "implementation-details"]], "New Program: random-temperature.cpp": [[481, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[482, "fh-sensor-oo-first-try"]], "C++ Exercises": [[483, "c-exercises"]], "Exercise Projects": [[483, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[484, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[484, "topics-covered"], [485, "topics-covered"], [486, "topics-covered"], [487, "topics-covered"], [488, "topics-covered"], [489, "topics-covered"], [490, "topics-covered"], [493, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[485, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[486, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[487, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[488, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[489, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[489, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[489, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[490, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[491, "oo-basics-interfaces-shapes"]], "Exercise Table": [[491, "exercise-table"]], "Setup, Exam Procedure": [[491, "setup-exam-procedure"]], "Point": [[491, "point"]], "Point: Constructor and Getter Methods": [[491, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[491, "point-default-constructor"]], "Point: Static Method: equal()": [[491, "point-static-method-equal"]], "Point: operator==()": [[491, "point-operator"]], "Point: Method: move()": [[491, "point-method-move"]], "Point: operator+=()": [[491, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[491, "point-static-method-add"]], "Point: operator+()": [[491, "point-suite-operator-plus"]], "Circle": [[491, "circle"]], "Circle: Constructor": [[491, "circle-constructor"]], "Circle: operator==()": [[491, "circle-operator"]], "Circle: Method: area()": [[491, "circle-method-area"]], "Square": [[491, "square"]], "Square: Constructor": [[491, "square-constructor"]], "Square: operator==()": [[491, "square-operator"]], "Square: Method: area()": [[491, "square-method-area"]], "Interface: Shape": [[491, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[491, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[491, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[492, "working-on-exercise-projects"]], "Clone Github Repository": [[492, "clone-github-repository"]], "Massage googletest Sub-Module": [[492, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[492, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[492, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[492, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[493, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[493, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[493, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[494, "exercise-onewire-sensor-factory"]], "Implementation": [[494, "implementation"]], "Fixture": [[494, "fixture"], [717, "fixture"]], "basic": [[494, "basic"]], "notfound": [[494, "notfound"]], "find_is_const": [[494, "find-is-const"]], "Testing In Isolation": [[494, "testing-in-isolation"]], "Testing In Reality": [[494, "testing-in-reality"]], "On The PC": [[494, "on-the-pc"]], "On The Target": [[494, "on-the-target"]], "Exercise: OneWire Sensor Class": [[495, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[495, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[495, "test-monolithic-implementation"]], "class W1Sensor": [[495, "class-w1sensor"]], "Exercise: Algorithms": [[496, "exercise-algorithms"]], "Copy Into std::vector": [[496, "copy-into-std-vector"]], "Find Element In std::vector": [[496, "find-element-in-std-vector"]], "Sort In-Place": [[496, "sort-in-place"]], "Sort Into A Copy": [[496, "sort-into-a-copy"]], "Exercise: Generic Filter": [[497, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[498, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[499, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[500, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[501, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[502, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[503, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[504, "insert-sunny-case"]], "Lookup - Not Found": [[505, "lookup-not-found"]], "Lookup - Sunny Case": [[506, "lookup-sunny-case"]], "Memory Leaks?": [[507, "memory-leaks"]], "Remove - Not Found": [[508, "remove-not-found"]], "Remove - Sunny Case": [[509, "remove-sunny-case"]], ".size() Is const": [[510, "size-is-const"]], "Exercise: Uniquify A Sequence": [[511, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[512, "exercise-std-vector"]], "C++: TODO List": [[513, "c-todo-list"]], "Structural": [[513, "structural"]], "STL, Containers and Algorithms": [[513, "stl-containers-and-algorithms"]], "Templates/Overloading": [[513, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[513, "functors-overloading-the-function-call-operator"]], "Threads": [[513, "threads"]], "C++ >= 11": [[513, "c-11"]], "UserDB Exercise": [[513, "userdb-exercise"]], "Complete Transcription of C++11": [[513, "complete-transcription-of-c-11"]], "Exercise series": [[513, "exercise-series"]], "Code: C++: Class Templates": [[514, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[515, "screenplay-c-class-templates"]], "C++: Class Templates": [[516, "c-class-templates"]], "Code: C++: Dynamic Memory": [[517, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[518, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[518, "c-malloc-free"]], "valgrind: Memory Leak": [[518, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[518, "valgrind-array-bounds-write"]], "C++: new, delete": [[518, "c-new-delete"]], "C++: new, delete on Arrays": [[518, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[518, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[519, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[520, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[521, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[521, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[521, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[521, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[522, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[523, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[524, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[525, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[526, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[527, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[527, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[527, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[527, "ownership-2-x-non-const"]], "Ownership: const Method": [[527, "ownership-const-method"]], "Ownership: 2 x const": [[527, "ownership-2-x-const"]], "C++: Ownership/RAII": [[528, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[529, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[530, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[530, "pointer-arithmetics-recap"]], "Container: std::vector": [[530, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[530, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[530, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[530, "container-std-list"]], "Container: std::map": [[530, "container-std-map"]], "C++: STL Containers (Intro)": [[531, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[532, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[533, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[534, "c-templates-vs-interfaces"]], "Background": [[536, "background"]], "History": [[536, "history"], [959, "history"]], "Content": [[536, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[537, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[537, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[537, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[537, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[537, "comparison-functions-in-equality"]], "Moving Points": [[537, "moving-points"]], "Vector Addition and Subtraction": [[537, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[537, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[537, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[537, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[538, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[538, "compiler-generated-copy-constructor"]], "Rule": [[538, null], [541, null], [640, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[538, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[539, "classes-and-objects"]], "Introducing C++: class point": [[539, "introducing-c-class-point"]], "Access Specifiers: public And private": [[539, "access-specifiers-public-and-private"]], "Default Constructor": [[539, "default-constructor"], [541, "default-constructor"], [554, "default-constructor"], [555, "default-constructor"], [556, "default-constructor"], [557, "default-constructor"]], "Custom Constructor: Usage": [[539, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[539, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[539, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[539, "methods-operations-on-an-object"]], "And printf()?!": [[539, "and-printf"]], "Custom Constructor": [[540, "custom-constructor"], [554, "custom-constructor"]], "Constructors: why? (1)": [[540, "constructors-why-1"]], "Constructors: why? (2)": [[540, "constructors-why-2"]], "Constructors: Implementation - Inline": [[540, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[540, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[541, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[541, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[541, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[541, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[542, "more-constructors-destructors"]], "Default Constructor (1)": [[542, "default-constructor-1"]], "Default Constructor (2)": [[542, "default-constructor-2"]], "Object Lifecycle - Destructor": [[542, "object-lifecycle-destructor"]], "Destructors (1)": [[542, "destructors-1"]], "Destructors (2)": [[542, "destructors-2"]], "Destructors (3)": [[542, "destructors-3"]], "Destructors (4)": [[542, "destructors-4"]], "Data Encapsulation": [[543, "data-encapsulation"]], "Constructors: Member Initialization": [[544, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[544, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[544, "real-initialization-initializer-list"]], "Why Is That Important?": [[544, "why-is-that-important"]], "Why Else Is That Important?": [[544, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[545, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[545, "copy-in-c"]], "Copy Constructor": [[545, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[545, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[545, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[545, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[545, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[545, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[545, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[545, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[545, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[545, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[546, "overloading"]], "Functions in C": [[546, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[546, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[546, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[546, "overloading-class-methods-just-the-same"]], "Methods": [[547, "methods"], [694, "methods"], [695, "methods"], [696, "methods"], [981, "methods"]], "Objects - Data and Methods": [[547, "objects-data-and-methods"]], "class point Again": [[547, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[547, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[547, "how-are-members-accessed-inside-methods"]], "const Methods": [[547, "const-methods"], [548, "const-methods"]], "Non const Methods": [[547, "non-const-methods"]], "const": [[548, "const"]], "const: Immutable Variable": [[548, "const-immutable-variable"]], "const Correctness vs. Pollution": [[548, "const-correctness-vs-pollution"]], "this": [[549, "this"]], "Hidden Pointer: this (1)": [[549, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[549, "hidden-pointer-this-2"]], "Explicit this Pointer": [[549, "explicit-this-pointer"]], "Pass By Copy/Reference": [[550, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[550, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[550, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[550, "copy-reference-c-pointers"]], "C++: True References": [[550, "c-true-references"]], "And const? Pointers?": [[550, "and-const-pointers"]], "const References": [[550, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[550, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[551, "static-methods"]], "Methods without Object": [[551, "methods-without-object"]], "Naive Implementation: Global Function": [[551, "naive-implementation-global-function"]], "C++: static Method": [[551, "c-static-method"]], "static Member Variables": [[552, "static-member-variables"]], "Good Old C: extern Global Variables": [[552, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[552, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[552, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[552, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[552, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[552, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[553, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[553, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[553, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[553, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[553, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[553, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[553, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[553, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[554, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[554, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[554, "in-equality"], [555, "in-equality"], [556, "in-equality"], [557, "in-equality"]], "+=": [[554, "id2"], [555, "id1"], [556, "id2"], [557, "id2"]], "-=": [[554, "id4"], [556, "id4"]], "+": [[554, "id6"], [555, "id2"], [556, "id6"], [557, "id3"]], "-": [[554, "id8"], [556, "id8"]], "<< (std::ostream)": [[554, "std-ostream"], [555, "std-ostream"], [556, "std-ostream"], [557, "std-ostream"]], "Surface": [[554, "surface"]], "Volume": [[554, "volume"]], "Exercise (FH): class point": [[555, "exercise-fh-class-point"]], "Initial Build": [[555, "initial-build"]], "Initial Test Run": [[555, "initial-test-run"]], "Extending class point: More Unit Tests": [[555, "extending-class-point-more-unit-tests"]], "Access Methods": [[555, "access-methods"]], "Unary -": [[555, "unary"], [556, "unary"]], "Exercise (FH): class point3d": [[556, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[556, "building-class-rectangle-upon-class-point"], [557, "building-class-rectangle-upon-class-point"]], "Coordinates": [[556, "coordinates"], [557, "coordinates"]], "Absolute Value": [[556, "absolute-value"]], "Distance Between Two Points": [[556, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[557, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[557, "width-height-area"]], "Error Handling: if - else if - else": [[559, "error-handling-if-else-if-else"]], "try - catch": [[560, "try-catch"]], "try - Block": [[560, "try-block"]], "catch - Block": [[560, "catch-block"]], "Standard Library: Exception-Hierarchy": [[560, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[560, "custom-exceptions-1"]], "Custom Exceptions (2)": [[560, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[560, "throwing-exceptions-throw"]], "Last Words": [[560, "last-words"], [563, "last-words"]], "Function Templates": [[562, "function-templates"]], "Origin: Duplicated Code": [[562, "origin-duplicated-code"]], "A simple Function-Template": [[562, "a-simple-function-template"]], "More Templates from the STL": [[562, "more-templates-from-the-stl"]], "Class Templates": [[563, "class-templates"]], "Does This Work With Classes?": [[563, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[563, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[563, "example-point-as-a-class-template-2"]], "Screenplay: std::copy<>() From <algorithm>": [[565, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[566, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[567, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[568, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[569, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[570, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[570, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[570, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[570, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[570, "pointer-difference"]], "Step Width? (1)": [[570, "step-width-1"]], "Step Width? (2)": [[570, "step-width-2"]], "And Arbitrary Data Types?": [[570, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[570, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[570, "stl-algorithms"]], "STL Containers": [[570, "stl-containers"]], "std::vector (And std::copy())": [[571, "std-vector-and-std-copy"]], "Dynamicity Details": [[571, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[571, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[571, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[572, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[572, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[572, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[572, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[572, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[573, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[574, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[575, null], [576, null], [577, null], [578, null], [579, null], [581, null], [582, null], [583, null], [584, null], [587, null], [588, null], [591, null], [596, null], [730, null], [730, null], [746, null], [748, "documentation"], [748, null], [752, "documentation"], [754, null], [754, null], [754, null], [780, "documentation"], [783, "documentation"], [793, null], [794, null], [797, null], [801, null], [801, null], [808, null], [809, null], [810, null], [810, null], [810, null], [811, null], [826, null], [826, null], [826, null], [827, null], [828, null], [829, null], [845, null], [845, null], [845, null], [848, null], [849, null], [882, null], [884, null], [886, null], [888, null], [889, null], [890, null], [892, null], [892, null], [892, null], [892, null], [892, null], [892, null], [895, null], [896, null], [897, null], [898, null], [898, null], [899, null], [902, null], [902, null], [902, null], [902, null], [940, null], [940, null], [941, null], [1016, null], [1026, null], [1105, "documentation"]], "binary_search<>: On Sorted Sequence": [[575, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[575, "more-intelligent-search"], [581, "more-intelligent-search"]], "copy<>": [[576, "copy"]], "find<>: Sequential Search, by Equality": [[577, "find-sequential-search-by-equality"]], "Basic Usage": [[577, "basic-usage"], [696, "basic-usage"], [848, "basic-usage"], [1018, "basic-usage"]], "Not Found?": [[577, "not-found"]], "find_if<>: Sequential Search, Customizable": [[578, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[578, "if-using-a-plain-function"]], "if, Using a Functor Class": [[578, "if-using-a-functor-class"]], "for_each<>": [[579, "for-each"]], "Basic Algorithms": [[580, "basic-algorithms"]], "Sorted Arrays": [[580, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[581, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[582, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[583, "reverse-copy-copying-and-reversing"]], "sort<>": [[584, "sort"]], "Algorithm: std::sort": [[584, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[584, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[585, "sequential-containers"], [586, "sequential-containers"]], "Common Characteristics": [[585, "common-characteristics"]], "list<>": [[587, "list"]], "Insertion and Deletion": [[587, "insertion-and-deletion"]], "vector<>": [[588, "vector"]], "Characteristics": [[588, "characteristics"]], "Modification at the Back": [[588, "modification-at-the-back"]], "Insertion": [[588, "insertion"]], "Example": [[588, "example"], [1033, "example"]], "Associative Containers": [[589, "associative-containers"], [590, "associative-containers"]], "Type Instantiation": [[591, "type-instantiation"]], "Filling The Container": [[591, "filling-the-container"]], "Inserting Elements": [[591, "inserting-elements"]], "Searching": [[591, "searching"], [615, "searching"]], "Screenplay: std::map Initialization And Inserting": [[592, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[592, "definining-the-type"]], "Initialization": [[592, "initialization"], [615, "initialization"]], "Screenplay: Inserting Elements": [[593, "screenplay-inserting-elements"]], "Subscript Operator": [[593, "subscript-operator"]], "insert()": [[593, "insert"]], "Screenplay: Removing (Erasing) Elements": [[594, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[594, "by-pointer-err-iterator"]], "By Key": [[594, "by-key"]], "Screenplay: Searching": [[595, "screenplay-searching"]], "find(key)": [[595, "find-key"]], "[key]": [[595, "key"]], "at(key)": [[595, "at-key"]], "multimap<>": [[596, "multimap"]], "Allocator Basics": [[597, "allocator-basics"]], "Allocators": [[598, "allocators"]], "STL: Exercises": [[599, "stl-exercises"]], "Exercise: Reverse a String": [[600, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[601, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[602, "solution-reverse-a-string"]], "Naive": [[602, "naive"]], "Using std::reverse<>": [[602, "using-std-reverse"]], "Using std::reverse_copy<>": [[602, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[604, "dynamic-memory-to-be-done"]], "Inheritance Basics": [[606, "inheritance-basics"]], "Plain (Base) Class": [[606, "plain-base-class"], [607, "plain-base-class"]], "Inheriting (Deriving) From Base": [[606, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[606, "derived-is-a-base"]], "Destructors And Inheritance": [[607, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[607, "derived-class-and-destructor"]], "And Base Class Conversion?": [[607, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[608, "inheritance-and-object-oriented-design"]], "Bringing It All Together": [[609, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[610, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[610, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[610, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[610, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[611, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[612, "virtual-destructors"]], "Is-A Relationships And Destructors": [[612, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[612, "pure-virtual-destructor"]], "Virtual Methods": [[613, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[613, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[613, "enter-virtual"]], "Caution: virtual": [[613, "caution-virtual"]], "std::string": [[615, "std-string"]], "Addition, And Such": [[615, "addition-and-such"]], "Conversion From String": [[615, "conversion-from-string"]], "Conversion To String": [[615, "conversion-to-string"]], "Substrings": [[615, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[616, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[617, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[618, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[619, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[620, "exercises-user-database"]], "Exercise: Access Methods for Members": [[621, "exercise-access-methods-for-members"]], "Exercise: const Members": [[622, "exercise-const-members"]], "Exercise: Use const": [[623, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[624, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[625, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[626, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[627, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[628, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[629, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[629, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[630, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[631, "exercise-use-std-vector-in-userdb"]], "C++ 03": [[632, "c-03"]], "History, Background": [[634, "history-background"]], "Make C++ Great Again": [[634, "make-c-great-again"]], "The \u201cNew\u201d C++": [[634, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[635, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[635, "c-03-to-do-list-version"]], "Real Container Initialization": [[635, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[635, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[635, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[635, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[635, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[635, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[635, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[635, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[635, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[635, "inevitable-threads"]], "Unions? std::variant!": [[635, "unions-std-variant"]], "Wrapping All That Into A Class": [[635, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[635, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[635, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[636, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[636, "c-03-enum-types-problems"]], "C++11 enum class": [[636, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[636, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[637, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[638, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[638, "std-initializer-list"]], "Direct Usage": [[638, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[638, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[639, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[639, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[639, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[639, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[639, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[639, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[639, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[639, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[639, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[639, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[640, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[640, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[640, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[640, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[640, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[640, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[641, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[641, "delegating-constructor-solution"]], "constexpr": [[642, "constexpr"]], "Basic Usage: Expressions": [[642, "basic-usage-expressions"]], "constexpr Functions": [[642, "constexpr-functions"]], "Recursive constexpr": [[642, "recursive-constexpr"]], "constexpr Objects": [[642, "constexpr-objects"]], "Afterword, Further Reading": [[643, "afterword-further-reading"]], "Uses In The Standard Library": [[643, "uses-in-the-standard-library"]], "Other Uses": [[643, "other-uses"]], "All Said \u27f6 Guidelines": [[643, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[643, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[644, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[644, "alternative-livehacking"]], "Starting Point": [[645, "starting-point"], [62, "starting-point"]], "SmartPtr With Move Semantics": [[645, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[645, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[645, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[646, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[646, "copy-semantics-revisited"]], "class String, Without Copy": [[646, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[646, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[646, "move-constructor-move"]], "Implementing Move Constructor": [[646, "implementing-move-constructor"]], "And Move Assignment?": [[646, "and-move-assignment"]], "Implementing Move Assignment": [[646, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[647, "using-move-semantics-in-own-code"]], "Using String: class Person": [[647, "using-string-class-person"]], "What?": [[647, "what"], [809, "what"]], "Using Rvalue References Inside Function: std::move": [[647, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Such": [[648, "lvalues-rvalues-and-such"]], "Return Object Problem: Reference To Stack-Based Object": [[648, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[648, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[648, "move-semantics-wish-list"]], "Theory: Lvalues": [[648, "theory-lvalues"]], "Theory: Rvalues": [[648, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[648, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[648, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[648, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[648, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[648, "enter-move-constructor-and-move-assignment"]], "Rules": [[648, null]], "Templates end with \u201c>>\u201d": [[649, "templates-end-with"]], "auto": [[650, "auto"]], "Most Basic Usage": [[650, "most-basic-usage"]], "auto Is Only The Basic Type": [[650, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[650, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[650, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[650, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[650, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[652, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[652, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[652, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[652, "concepts-to-the-rescue"]], "Syntactic Variations": [[652, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[653, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[654, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[655, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[656, "concepts-links"]], "Writing Your Own Concepts": [[657, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[657, "starting-point-good-old-function"]], "Need Template": [[657, "need-template"]], "Error: Requirement Not Fulfilled": [[657, "error-requirement-not-fulfilled"]], "Concept: has_size": [[657, "concept-has-size"]], "Concept: index_returns_double": [[657, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[658, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[659, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[660, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[661, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[662, "coroutines"]], "Coroutines: An Overview": [[663, "coroutines-an-overview"]], "Foreword": [[663, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[663, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[663, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[663, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[663, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[663, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[663, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[663, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[663, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[663, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[663, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[663, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[664, "fibo-generator-cpp"]], "fibonacci.cpp": [[665, "fibonacci-cpp"]], "generator.h": [[666, "generator-h"]], "generator-hello.cpp": [[667, "generator-hello-cpp"]], "simplest.cpp": [[668, "simplest-cpp"]], "suspend.cpp": [[669, "suspend-cpp"]], "suspend-iter.cpp": [[670, "suspend-iter-cpp"]], "suspend-next.cpp": [[671, "suspend-next-cpp"]], "= default": [[672, "default"]], "Problem: Default Constructor Not Automatically Generated": [[672, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[672, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[672, "c-11-solution-default"]], "= delete": [[673, "delete"]], "Problem: Copy Is Not Always Wanted": [[673, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[673, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[673, "c-11-solution-delete-copy"]], "final": [[674, "final"]], "Architectural Decisions": [[674, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[674, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[675, "new-language-features"]], "Lambda": [[676, "lambda"], [677, "lambda"]], "Lambda To The Rescue": [[677, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[677, "excursion-python-closures"]], "Same In C++: Capturing": [[677, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[677, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[677, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[677, "more-about-capturing"]], "Lambda: More Capturing": [[678, "lambda-more-capturing"]], "More Capture Syntax": [[678, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[678, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[678, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[678, "mixed-explicit-capture"]], "Define Variables In Capture": [[678, "define-variables-in-capture"]], "Capturing All By Reference": [[678, "capturing-all-by-reference"]], "Capturing All By Copy": [[678, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[678, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[678, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[679, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[679, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[679, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[680, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[680, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[680, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[680, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[680, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[682, "override"]], "Correct Overriding \u2026": [[682, "correct-overriding"]], "\u2026 Is Very Hard": [[682, "is-very-hard"]], "More Problems Arise": [[682, "more-problems-arise"]], "Solution: override": [[682, "solution-override"]], "Range Based for Loops: Introduction": [[683, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[683, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[683, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[683, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[684, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[684, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[684, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[684, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[684, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[684, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[685, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[685, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[685, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[685, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[685, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[685, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[685, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[685, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[685, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[687, "ranges-overview"]], "Ranges?": [[687, "ranges"]], "Containers And Views (Storage Behavior)": [[687, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[687, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[687, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[687, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[687, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[687, "available-ranges-concepts"]], "Ranges And Views: Links": [[688, "ranges-and-views-links"]], "Structured Binding": [[689, "structured-binding"]], "Variations, Compatible Data Types": [[689, "variations-compatible-data-types"]], "struct: By Copy": [[689, "struct-by-copy"]], "struct: Reference": [[689, "struct-reference"]], "struct: By const Reference": [[689, "struct-by-const-reference"]], "std::tuple: By Copy": [[689, "std-tuple-by-copy"]], "std::tuple: By Reference": [[689, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[689, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[689, "arrays-by-copy"]], "Arrays: By Reference": [[689, "arrays-by-reference"]], "Arrays: By const Reference": [[689, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[690, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[690, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[691, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[692, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[692, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[693, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[693, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[693, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[693, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[693, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[693, "explicit-move-method-maybe"]], "Stop!!!": [[693, "stop"]], "std::shared_ptr": [[694, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[694, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[694, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[694, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[694, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[694, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[694, "demo-basic-usage"]], "Demo: std::make_shared": [[694, "demo-std-make-shared"]], "Demo: Cyclic References": [[694, "demo-cyclic-references"]], "std::unique_ptr": [[695, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[695, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[695, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[695, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[695, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[695, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[695, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[695, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[695, "manipulating-pointer-content"]], "std::weak_ptr": [[696, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[696, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[696, "a-real-life-example"]], "Perfect Forwarding": [[697, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[697, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[697, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[697, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[697, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[698, "std-bind"]], "Why? What\u2019s The Problem?": [[698, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[698, "sample-program-all-done-manually"]], "Sideway: std::transform": [[698, "sideway-std-transform"]], "Sample Program: Using std::transform": [[698, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[698, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[698, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[698, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[698, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[698, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[698, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[698, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[698, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[698, "summary"], [766, "summary"], [766, "id1"], [1085, "summary"], [1087, "summary"]], "std::function": [[699, "std-function"]], "Classic Polymorphism": [[699, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[699, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[699, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[699, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[699, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[699, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[699, "std-function-last-words"]], "Threads Introduction": [[701, "threads-introduction"]], "Operating System Primitives": [[701, "operating-system-primitives"]], "There Be Dragons": [[701, "there-be-dragons"]], "Threads in C++": [[702, "threads-in-c"]], "Creating Threads is Far Too Easy": [[702, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[702, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[702, "cornercases-in-thread-lifetime"]], "Race Conditions": [[703, "race-conditions"], [764, "race-conditions"]], "std::atomic": [[704, "std-atomic"]], "Atomic Instructions (1)": [[704, "atomic-instructions-1"]], "Atomic Instructions (2)": [[704, "atomic-instructions-2"]], "std::mutex And Friends": [[705, "std-mutex-and-friends"]], "std::mutex": [[705, "std-mutex"]], "std::recursive_mutex": [[705, "std-recursive-mutex"]], "std::timed_mutex": [[705, "std-timed-mutex"]], "std::recursive_timed_mutex": [[705, "std-recursive-timed-mutex"]], "Scoped Locking": [[706, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[706, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[706, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[706, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[707, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[707, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[707, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[707, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[707, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[707, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[709, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[709, "overview-std-promise"]], "Overview: std::future": [[709, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[709, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[709, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[709, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[709, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[709, "pro-readability-encapsulate"]], "Atomics On Structures?": [[709, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[709, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[709, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[709, "and-exceptions"]], "std::chrono": [[710, "std-chrono"], [710, "id1"]], "Clock Domains": [[710, "clock-domains"]], "Measuring Time (1)": [[710, "measuring-time-1"]], "Measuring Time (2)": [[710, "measuring-time-2"]], "Sleeping, and Literals": [[710, "sleeping-and-literals"]], "New-Style Union: std::variant": [[711, "new-style-union-std-variant"]], "Exercise: Bag Of Items, By Copy": [[713, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[713, "step-1-insert-find"]], "Step 2: Remove": [[713, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[714, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[714, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[714, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[714, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[715, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[717, "std-filesystem"]], "Paths: Composition, Comparison": [[717, "paths-composition-comparison"]], "Absolute and Relative Paths": [[717, "absolute-and-relative-paths"], [850, "absolute-and-relative-paths"]], "Path Component Access": [[717, "path-component-access"]], "Iterating Over Path Components": [[717, "iterating-over-path-components"]], "Current Working Directory": [[717, "current-working-directory"], [829, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[717, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[717, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[717, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[717, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[717, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[717, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[717, "recursive-directory-iteration"]], "C++ 11": [[718, "c-11"]], "Generated Topic Graph": [[719, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[721, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[722, "modern-character-devices-slideshow"]], "Source": [[722, null], [725, null], [727, null], [730, null], [732, null], [735, null], [744, null], [746, null], [756, null], [758, null], [769, null], [774, null]], "Character Devices: Problems": [[722, "character-devices-problems"]], "Dynamic Device Numbers": [[722, "dynamic-device-numbers"]], "Device Classes": [[722, "device-classes"]], "Devices": [[722, "devices"]], "Modern Character Devices": [[723, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[724, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[724, "hooks-necessary"]], "Implement open(), read(), write()": [[724, "implement-open-read-write"]], "ioctl()": [[724, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[725, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[725, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[725, "available-methods"]], "open(): Userspace": [[725, "open-userspace"]], "open(): Kernelspace": [[725, "open-kernelspace"]], "ioctl(): Userspace": [[725, "ioctl-userspace"]], "ioctl(): Kernelspace": [[725, "ioctl-kernelspace"]], "ioctl(): Requests": [[725, "ioctl-requests"]], "_IO*() Macros": [[725, "io-macros"]], "_IO*() Macros: Usage": [[725, "io-macros-usage"]], "File Operations on Character Devices": [[726, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[727, "coding-first-functionality-slideshow"]], "Implement Event List": [[727, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[727, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[727, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[728, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[729, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[729, "major-and-minor-numbers"]], "Character Device": [[729, "character-device"]], "Character Device Basics (Slideshow)": [[730, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[730, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[730, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[730, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[730, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[730, "character-device-1"]], "Character Device (2)": [[730, "character-device-2"]], "And User Space?": [[730, "and-user-space"]], "Character Device Basics": [[731, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[732, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[732, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[733, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[734, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[734, "build-module-from-multiple-files"]], "Per-Device Structure": [[734, "per-device-structure"]], "Want My Hair Pretty": [[734, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[734, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[735, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[735, "what-s-bad"]], "Coding: Refactoring": [[736, "coding-refactoring"]], "DMA (Slideshow)": [[737, "dma-slideshow"]], "Address Types": [[737, "address-types"]], "Physical Memory Allocation": [[737, "physical-memory-allocation"]], "DMA Mappings: Overview": [[737, "dma-mappings-overview"]], "Consistent DMA Mappings": [[737, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[737, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[737, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[737, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[737, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[737, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[737, "streaming-mappings-syncing"]], "DMA": [[738, "dma"]], "Building a Fedora Kernel (Screenplay)": [[739, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[739, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[739, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[739, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[740, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[741, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[741, "prerequisite-build-entire-kernel"]], "Build Modules": [[741, "build-modules"]], "Install Modules": [[741, "install-modules"]], "Fedora: Building External Kernel Modules": [[742, "fedora-building-external-kernel-modules"]], "Module Loading, Hello World (Slideshow)": [[744, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[744, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[744, "built-in-vs-loadable-module"]], "Minimum Module Source": [[744, "minimum-module-source"]], "Gotchas: init() and exit()": [[744, "gotchas-init-and-exit"]], "Module Build": [[744, "module-build"]], "Minimum Makefile, Building": [[744, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[744, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[744, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[745, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[746, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[746, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[746, "cross-compilation"]], "Cross Compilation Sucks": [[746, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[746, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[746, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[746, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[746, "interlude-io-macros"]], "Request GPIO": [[746, "request-gpio"]], "Request Interrupt": [[746, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[747, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[748, "interrupts-slideshow"]], "Interrupt Facts": [[748, "interrupt-facts"]], "Interrupt Service Routine": [[748, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[748, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[750, "io-memory-slideshow"]], "I/O Memory": [[750, "i-o-memory"]], "I/O Memory: Reservation": [[750, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[750, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[750, "accessing-i-o-memory"]], "IO Memory": [[751, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[752, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[752, "dynamic-memory-kmalloc"], [753, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[752, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[754, "doubly-linked-lists-slideshow"]], "Big Picture": [[754, "big-picture"]], "List Head": [[754, "list-head"]], "Insert a Node": [[754, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[754, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[754, "emptying-a-list"]], "Doubly Linked Lists": [[755, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[756, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[756, "what-do-we-have"]], "Consequences of Not Protecting": [[756, "consequences-of-not-protecting"]], "Protect Event List": [[756, "protect-event-list"]], "Protect Device List": [[756, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[757, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[758, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[758, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[758, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[758, "mutex-locking-1"]], "Mutex: Locking (2)": [[758, "mutex-locking-2"]], "Mutex: Releasing": [[758, "mutex-releasing"]], "Realtime Mutex": [[758, "realtime-mutex"]], "Mutex (and RT Mutex)": [[759, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[760, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[760, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[760, "module-initialization-device-registration"]], "Device Methods": [[760, "device-methods"]], "Kernel Networking Layer Utilities": [[760, "kernel-networking-layer-utilities"]], "Network Devices": [[761, "network-devices"]], "PCI (Slideshow)": [[762, "pci-slideshow"]], "First and Foremost": [[762, "first-and-foremost"]], "PCI Driver Methods": [[762, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[762, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[762, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[762, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[762, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[762, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[762, "dma-support-routines"]], "PCI": [[763, "pci"]], "Process vs.Atomic Context (Slideshow)": [[764, "process-vs-atomic-context-slideshow"]], "Process Context": [[764, "process-context"]], "Atomic Context": [[764, "atomic-context"]], "Atomic vs. Process Context": [[764, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[764, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[765, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[766, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[766, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[766, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[766, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[766, "other-toolchains"]], "Kernel Source": [[766, "kernel-source"]], "Kernel Compilation": [[766, "kernel-compilation"]], "Parameters for the Build": [[766, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[766, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[766, "building-the-kernel-artifacts"]], "Packaging": [[766, "packaging"], [1019, "packaging"]], "Bootloader Artifacts": [[766, "bootloader-artifacts"]], "Module Tree": [[766, "module-tree"]], "Deployment": [[766, "deployment"]], "Variation": [[766, "variation"]], "Raspberry Pi: Building the Kernel": [[767, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[767, "todo-jjj"]], "Sample Code Maintenance": [[768, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[769, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[769, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[769, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[769, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[769, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[770, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[771, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[771, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[771, "spinlock-initialization"]], "Simple Lock/Unlock": [[771, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[771, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[771, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[772, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[773, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[774, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[774, "per-event-timestamp"]], "Discussion: Deferred Events": [[774, "discussion-deferred-events"]], "Add Timer": [[774, "add-timer"]], "Gotcha: Cleanup Running Timer": [[774, "gotcha-cleanup-running-timer"]], "More Gotchas": [[774, "more-gotchas"]], "Coding: Timed Event": [[775, "coding-timed-event"]], "Timer Management (Slideshow)": [[776, "timer-management-slideshow"]], "Original Timer API": [[776, "original-timer-api"]], "jiffies": [[776, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[776, "timer-wheel-methods"]], "Better Documentation": [[776, "better-documentation"]], "Timer Management": [[777, "timer-management"]], "To Do List": [[778, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[779, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[779, "new-ioctl-get-one-event"]], "Getting One Event": [[779, "getting-one-event"]], "copy_to_user()": [[779, "copy-to-user"]], "Userspace Test Program": [[779, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[780, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[780, "address-spaces"]], "Copying To and From Userspace": [[780, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[781, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[782, "waiting-for-something-screenplay"]], "read() Not Implemented": [[782, "read-not-implemented"]], "Implementing read() Naively": [[782, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[782, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[782, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[783, "waiting-for-something-slideshow"]], "Waiting for Something": [[783, "waiting-for-something"], [784, "waiting-for-something"]], "Wait Queues: Initializing": [[783, "wait-queues-initializing"]], "Wait Queue: Waiting": [[783, "wait-queue-waiting"]], "Wait Queue: Waking": [[783, "wait-queue-waking"]], "Workqueue (Screenplay)": [[785, "workqueue-screenplay"]], "Add Workqueue": [[785, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[785, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[785, "cleanup-why-we-did-this-after-all"]], "Finish": [[785, "finish"]], "Workqueue (Slideshow)": [[786, "workqueue-slideshow"]], "Workqueue: Motivation": [[786, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[786, "creating-destroying-a-workqueue"]], "What is Work?": [[786, "what-is-work"]], "Submitting Work": [[786, "submitting-work"]], "Workqueue": [[787, "workqueue"]], "Exercises: Archiving And Compression": [[788, "exercises-archiving-and-compression"]], "gzip": [[790, "gzip"]], "Compression Tools: Comparison": [[791, "compression-tools-comparison"]], "tar": [[792, "tar"]], "Creating And Viewing Archives": [[792, "creating-and-viewing-archives"]], "(De)Compression": [[792, "de-compression"]], "Etiquette": [[792, "etiquette"]], "Option Summary": [[792, "option-summary"]], "Being Creative With The Pipe": [[792, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[793, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[793, "precondition-logged-in-to-remote-exam-computer"], [794, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[793, "create-exam-skeleton-5-points"], [794, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[793, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[793, "public-place-10-points"], [794, "public-place-10-points"]], "Private Place (10 Points)": [[793, "private-place-10-points"], [794, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[793, "shared-file-in-public-place-10-points"], [794, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[793, "make-a-backup-of-exam-01-15-points"], [794, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[794, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[794, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[795, "exercises-exams-linux-basics"]], "Linux Basics": [[796, "linux-basics"]], "Everything Is A File (Live Demo)": [[797, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[797, "simple-is-beautiful"]], "Ok: a File is a File": [[797, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[797, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[797, "pseudo-terminals"]], "Disks and Partitions": [[797, "disks-and-partitions"]], "/proc and /sys": [[797, "proc-and-sys"]], "Pseudo Devices": [[797, "pseudo-devices"]], "Environment (Variables)": [[798, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[798, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[798, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[798, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[799, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[799, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[799, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[801, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[801, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[801, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[801, "and-after-successful-authentication"]], "Impersonation": [[801, "impersonation"]], "Logged In, Finally": [[801, "logged-in-finally"]], "User Space, Kernel Space?": [[802, "user-space-kernel-space"]], "User Space: Abstractions": [[802, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[802, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[802, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[803, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[803, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[803, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[803, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[803, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[803, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[803, "process-attributes-groups"]], "Processes: More Attributes": [[803, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[804, "process-hierarchy-parent-child-process"]], "More Process Rules": [[804, "more-process-rules"]], "Typical Process Tree": [[804, "typical-process-tree"]], "Services, init": [[804, "services-init"]], "Windows Subsystem for Linux (WSL)": [[805, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[805, null]], "More Links": [[805, "more-links"]], "My $0.02": [[805, "my-0-02"]], "WSL, Finally": [[805, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[806, "exercises-io-redirection-pipes"]], "I/O Redirection": [[808, "i-o-redirection"]], "Standard I/O Streams": [[808, "standard-i-o-streams"]], "I/O Redirection Operators": [[808, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[808, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[808, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[808, "example-standard-error-redirection"]], "Example: Everything Redirection": [[808, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[809, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[809, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[809, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[809, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[809, "more-tricks"]], "Pipes": [[810, "pipes"]], "Why Pipes?": [[810, "why-pipes"]], "Pipe Facts": [[810, "pipe-facts"]], "Pipe Examples": [[810, "pipe-examples"]], "More Pipe Examples": [[810, "more-pipe-examples"]], "Named Pipes": [[810, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[811, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[811, "owner-and-permissions"]], "A Simple Example": [[811, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[811, null]], "Permission Check: User": [[811, "permission-check-user"]], "Permission Check: Group": [[811, "permission-check-group"]], "Permission Check: Others": [[811, "permission-check-others"]], "Programs: Execute Permissions": [[811, "programs-execute-permissions"]], "Directory Permissions": [[811, "directory-permissions"]], "Permission Bits, octal": [[811, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[811, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[811, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[812, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[813, "fh-moodle-quiz-permissions"], [814, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[815, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[816, "exercise-create-private-directory"]], "Question: Private Directory": [[817, "question-private-directory"]], "Exercise: Create Public Directory": [[818, "exercise-create-public-directory"]], "Question: Public Directory": [[819, "question-public-directory"]], "Exercise: Create Group-Shared File": [[820, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[822, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[822, "problem-change-my-password"]], "Solution: Set-UID Bit": [[822, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[822, "set-uid-how-does-it-work"]], "Command: chmod": [[822, "command-chmod"]], "Set-UID Is Not A Toy!": [[822, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[823, "setuid-live-demo"]], "Real and Effective User ID": [[823, "real-and-effective-user-id"]], "Sample Program": [[823, "sample-program"]], "Set-UID jfasch?": [[823, "set-uid-jfasch"]], "Set-UID root? Danger!": [[823, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[824, "ugly-hack-sticky-bit"]], "Sticky Bit": [[824, "sticky-bit"]], "Default Permissions: umask": [[825, "default-permissions-umask"]], "Default Permissions - umask": [[825, "id1"]], "umask: How Does it Work?": [[825, "umask-how-does-it-work"]], "Shape (1)": [[826, "shape-1"]], "Shape (2)": [[826, "shape-2"]], "Options": [[826, "options"], [855, "options"]], "Help and Manual": [[826, "help-and-manual"]], "Man Pages: Navigation": [[826, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[826, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[826, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[826, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[826, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[826, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[827, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[827, "what-s-volatile"]], "Copying: cp": [[828, "copying-cp"]], "Option Overview": [[828, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[828, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[828, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[828, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[828, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[828, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[829, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[829, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[830, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[831, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[832, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[833, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[834, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[835, "exercise-mkdir"]], "Exercise: Funny Stuff": [[836, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[837, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[838, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[839, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[840, "the-shell-exercises"]], "Exercise: File Types in /dev": [[841, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[842, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[843, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[844, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[845, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[845, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[845, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[845, "creating-an-empty-file-touch"]], "Removing A File: rm": [[845, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[845, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[847, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[848, "directory-listings-the-ls-command"]], "Many Options": [[848, "many-options"]], "Hidden Files": [[848, "hidden-files"]], "File Types": [[848, "file-types"]], "Moving and Renaming: mv": [[849, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[849, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[849, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[849, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[850, "path-separator"]], "Relative Paths": [[850, "relative-paths"]], "Absolute Paths": [[850, "absolute-paths"]], "Special Paths": [[850, "special-paths"]], "cat": [[851, "cat"], [851, "id1"]], "cut": [[852, "cut"], [852, "id1"]], "Exercises: Inspecting Text Files": [[853, "exercises-inspecting-text-files"]], "find": [[854, "find"]], "Directories durchsuchen mit find": [[854, "directories-durchsuchen-mit-find"]], "find: Optionen": [[854, "find-optionen"]], "find: Beispiele": [[854, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[854, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[854, "find-verknupfungen-beispiele"]], "grep": [[855, "grep"]], "Searching With grep": [[855, "searching-with-grep"]], "More About Regular Expressions": [[855, "more-about-regular-expressions"]], "head And tail": [[857, "head-and-tail"]], "head": [[857, "head"]], "tail": [[857, "tail"]], "head And tail In The Pipe": [[857, "head-and-tail-in-the-pipe"]], "less": [[858, "less"]], "Paging Files Using less": [[858, "paging-files-using-less"]], "Help Screen (Enter With h)": [[858, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[859, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[859, "stdin-stdout-examples"]], "Pipe: Examples": [[859, "pipe-examples"]], "Basics Text Tools": [[859, "basics-text-tools"]], "Drafts": [[860, "drafts"]], "Yocto": [[861, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[863, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[863, null]], "Electronic Speed Controller (ESC)": [[863, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[863, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[863, "the-command-protocol-and-calibration"]], "Driving the Motor": [[863, "driving-the-motor"]], "CAN/Linux Basics": [[864, "can-linux-basics"]], "Why This Talk?": [[864, "why-this-talk"]], "Network Programming: Datagram Exchange": [[864, "network-programming-datagram-exchange"]], "And CAN?": [[864, "and-can"]], "One CAN Network Packet \u2026": [[864, "one-can-network-packet"]], "CAN Interfaces": [[865, "can-interfaces"]], "CAN-Interface: Configuration": [[865, "can-interface-configuration"]], "CAN Utils": [[865, "can-utils"]], "CAN Utils: Usage (1)": [[865, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[865, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[865, "vcan-virtual-can-bus"]], "Programming": [[866, "programming"]], "CAN Programming": [[866, "can-programming"]], "CAN in C - Socket, Interface Index": [[866, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[866, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[866, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[866, "can-in-c-frames-2"]], "CAN in Python - Frames": [[866, "can-in-python-frames"]], "Hardware, Kernel": [[867, "hardware-kernel"]], "MCP2515: Schematic": [[867, "mcp2515-schematic"]], "MCP2515: Soldering": [[867, "mcp2515-soldering"]], "MCP2515: SPI": [[867, "mcp2515-spi"]], "MCP2515: Raspberry": [[867, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[868, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[869, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[870, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[870, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[870, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[870, null]], "Enable Userspace I2C": [[870, "enable-userspace-i2c"]], "Slave Device: LM73": [[870, "slave-device-lm73"]], "Datasheet etc.": [[870, null]], "Optional: Address Selection": [[870, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[870, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[870, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[870, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[870, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[870, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[870, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[870, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[871, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[871, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[871, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[871, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[871, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[872, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[872, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[872, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[872, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[872, null]], "Wiring: Attach DS2482-800 via I2C": [[872, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[872, "configure-software"]], "Enable I2C, and Check": [[872, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[872, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[872, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[872, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[872, "over-engineering-beauty"]], "Hardware Bringup": [[872, "hardware-bringup"]], "Device Usage": [[872, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[872, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[872, "using-the-device"]], "As a Generic OneWire Device": [[872, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[872, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[872, "lm-sensors"]], "OneWire Caveats": [[872, "onewire-caveats"]], "Bus Topology": [[872, "bus-topology"]], "Error Symptoms": [[872, "error-symptoms"]], "SSH: Basics": [[873, "ssh-basics"]], "Login": [[873, "login"]], "Exit Status, stdin, stdout: Scripting": [[873, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[874, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[875, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[876, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[877, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[879, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[879, "local-setup-key-generation"]], "Key Pair?": [[879, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[879, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[880, "ssh-links"]], "SSH: Port Forwarding": [[881, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[881, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[881, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[881, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[881, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[881, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[882, "ssh-secure-copy-scp"]], "What Is That?": [[882, "what-is-that"]], "Copy Single File From Local To Remote": [[882, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[882, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[882, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[882, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[882, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[882, "more-options"]], "SSH File System (sshfs)": [[883, "ssh-file-system-sshfs"]], "What Is It?": [[883, "what-is-it"]], "Why Is It?": [[883, "why-is-it"]], "Example Situation: The Raspi": [[883, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[883, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[883, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[883, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[883, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[884, "the-errno-variable"]], "errno Is A Global Variable": [[884, "errno-is-a-global-variable"]], "Helper Functions": [[884, "helper-functions"]], "Linux Systems Programming: Basics": [[885, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[886, "system-calls-vs-library-functions"]], "System Calls": [[886, "system-calls"]], "System Calls And The C-Library": [[886, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[886, "library-function-or-system-call"]], "Manual Pages": [[886, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[887, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[887, null]], "Solution: This Is What An Operating System Is There For": [[887, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[888, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[888, null], [889, null], [890, null], [1071, "see-also"]], "Abstractions": [[888, "abstractions"], [889, "abstractions"], [890, "abstractions"]], "Simplicity": [[888, "simplicity"], [889, "simplicity"], [890, "simplicity"]], "Build, Run, Look": [[888, "build-run-look"], [889, "build-run-look"], [890, "build-run-look"]], "Watch: Run Under strace Supervision": [[888, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[889, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[889, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[890, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[890, "setup-a-timer"]], "Blocking I/O: What Is That?": [[891, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[892, "file-i-o-basics"]], "File Descriptors": [[892, "file-descriptors"]], "Standard Filedescriptors": [[892, "standard-filedescriptors"]], "File I/O: System Calls": [[892, "file-i-o-system-calls"]], "open()": [[892, "open"]], "open() Flags": [[892, "open-flags"]], "read()": [[892, "read"]], "write()": [[892, "write"]], "File Offset: lseek()": [[892, "file-offset-lseek"]], "The Rest: ioctl()": [[892, "the-rest-ioctl"]], "Exercise: Copy A File": [[893, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[893, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[893, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[893, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[893, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[893, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[894, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[895, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[895, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[895, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[895, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[895, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[895, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[895, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[896, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[896, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[896, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[896, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[897, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[897, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[897, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[897, "error-file-exists"]], "O_RDONLY: Reading a File": [[898, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[898, "me-and-etc-passwd"]], "Code: Reading A File": [[898, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[898, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[898, "error-file-not-readable"]], "Error: File Not Even There": [[898, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[899, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[899, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[899, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[899, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[899, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[900, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[900, "onewire-basics"]], "Program": [[900, "program"], [1052, "program"]], "Test On The Target Machine": [[900, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[902, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[902, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[902, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[902, "truncating-files"]], "File Descriptors - Allocation": [[902, "file-descriptors-allocation"]], "Linux Systems Programming": [[903, "linux-systems-programming"], [1133, "linux-systems-programming"]], "Get Value Of GPIO": [[904, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[904, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[904, "shell-script"]], "C Program": [[904, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[905, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[906, "intro-sysfs-gpio"]], "sysfs?": [[906, "sysfs"]], "General Purpose IO (GPIO)": [[906, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[906, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[906, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[907, "interrupts-in-userspace"]], "Manual Configuration": [[907, "manual-configuration"]], "C Program: Configuration, Event Loop": [[907, "c-program-configuration-event-loop"]], "Why Threads?": [[908, "why-threads"]], "Typical Uses": [[908, "typical-uses"]], "Legal (1)": [[908, "legal-1"]], "Legal (2)": [[908, "legal-2"]], "POSIX Thread API": [[908, "posix-thread-api"]], "Thread Life Cycle": [[909, "thread-life-cycle"], [909, "id1"]], "Thread Creation": [[909, "thread-creation"]], "Thread Termination (1)": [[909, "thread-termination-1"]], "Thread Termination (2)": [[909, "thread-termination-2"]], "Exit Status, pthread_join()": [[909, "exit-status-pthread-join"]], "Detached Threads": [[909, "detached-threads"]], "Thread ID": [[909, "thread-id"]], "Scheduled Entities (1)": [[909, "scheduled-entities-1"]], "Scheduled Entities (2)": [[909, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[910, "thread-creation-race-condition"]], "Synchronization": [[911, "synchronization"]], "Race Conditions (1)": [[911, "race-conditions-1"]], "Race Conditions (2)": [[911, "race-conditions-2"]], "Mutex (1)": [[911, "mutex-1"]], "Mutex (2)": [[911, "mutex-2"]], "Mutex (3)": [[911, "mutex-3"]], "Mutex Types": [[911, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[912, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[913, "communication-condition-variable"]], "Condition Variable (1)": [[913, "condition-variable-1"]], "Condition Variable (2)": [[913, "condition-variable-2"]], "Condition Variable: wait()": [[913, "condition-variable-wait"]], "Condition Variable: signal()": [[913, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[913, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[913, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[913, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[913, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[913, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[914, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[915, "one-time-initialization-1"]], "One-Time Initialization (2)": [[915, "one-time-initialization-2"]], "One-Time Initialization (3)": [[915, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[915, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[916, "last-warning-1"]], "Last Warning (2)": [[916, "last-warning-2"]], "Last Warning (3)": [[916, "last-warning-3"]], "Trylock/islocked": [[918, "trylock-islocked"]], "Process: Arguments, Exit Status": [[919, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[919, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[919, "the-shell-a-programming-language"]], "Exit Status": [[919, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[919, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[919, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[919, "argument-vector-int-argc-char-argv"]], "Processes": [[920, "processes"]], "The Process Tree (And Environment, And procfs)": [[921, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[921, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[921, "system-calls-getpid-getppid"]], "Environment Variables": [[921, "environment-variables"]], "Scheduling (and Multitasking)": [[922, "scheduling-and-multitasking"]], "Fairness Criteria": [[922, "fairness-criteria"]], "CPU bound vs. I/O bound": [[922, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[922, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[922, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[924, "tasks-processes-threads"]], "Tasks": [[924, "tasks"]], "A Typical Bare Metal Application": [[924, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[924, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[924, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[924, "id1"]], "Threads Are Great: More Functionality": [[924, "threads-are-great-more-functionality"]], "Are Threads Great?": [[924, "are-threads-great"]], "Stability Considerations": [[924, "stability-considerations"]], "Processes, Address Spaces": [[924, "processes-address-spaces"]], "Stabilizing": [[924, "stabilizing"]], "Scheduling: Exam Questions": [[925, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[926, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[926, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[926, "enter-realtime-definition"]], "Realtime on Linux": [[926, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[926, "demo-measuring-wakeup-latency"]], "Immediately?": [[926, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[926, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[927, "realtime-api"]], "Scheduling Policies": [[927, "scheduling-policies"]], "Scheduling Priorities": [[927, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[927, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[927, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[927, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[927, "scheduling-threads-2"]], "Priority Inversion": [[927, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[927, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[928, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[928, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[928, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[928, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[928, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[929, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[930, "screenplay-sysprog-posix-ipc"], [933, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[930, "select-on-device-files"]], "Sysprog: Events": [[931, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[932, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[933, "virtual-memory-mmap"]], "POSIX Shared Memory": [[933, "posix-shared-memory"]], "Create Shared Memory Segment": [[933, "create-shared-memory-segment"]], "Produce into Shared Memory": [[933, "produce-into-shared-memory"]], "Consume from Shared Memory": [[933, "consume-from-shared-memory"]], "POSIX Semaphores": [[933, "posix-semaphores"]], "Create Semaphore": [[933, "create-semaphore"]], "Wait": [[933, "wait"]], "Post": [[933, "post"]], "POSIX Message Queues": [[933, "posix-message-queues"]], "Create": [[933, "create"]], "Produce": [[933, "produce"]], "Consume": [[933, "consume"]], "Slides: Sysprog: POSIX IPC": [[934, "slides-sysprog-posix-ipc"]], "Slideshow": [[934, null], [938, null]], "History: Two IPC Variants": [[934, "history-two-ipc-variants"]], "Object Names": [[934, "object-names"]], "File Semantics": [[934, "file-semantics"]], "Message Queues": [[934, "message-queues"]], "Open/Create: mq_open()": [[934, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[934, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[934, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[934, "notification-mq-notify"]], "Message Queues are Files": [[934, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[934, "message-queue-filesystem-mqueue"]], "Semaphores": [[934, "semaphores"]], "Open/Create: sem_open()": [[934, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[934, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[934, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[934, "semaphores-are-files"]], "Shared Memory (1)": [[934, "shared-memory-1"]], "Shared Memory (2)": [[934, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[934, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[935, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[936, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[937, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[937, "barebones-naive-program"]], "Signal Handler": [[937, "signal-handler"]], "Alarm": [[937, "alarm"]], "Alarm (Louder)": [[937, "alarm-louder"]], "Synchronous Delivery": [[937, "synchronous-delivery"]], "Innocent Multithreaded Program": [[937, "innocent-multithreaded-program"]], "Add SIGALRM": [[937, "add-sigalrm"]], "Slides: Sysprog: Signals": [[938, "slides-sysprog-signals"]], "Example Signals": [[938, "example-signals"]], "Terminology": [[938, "terminology"]], "Default Actions": [[938, "default-actions"]], "Important Signals": [[938, "important-signals"]], "Sending, Commandline": [[938, "sending-commandline"]], "Sending Signals, Programmatically": [[938, "sending-signals-programmatically"]], "Warning!": [[938, "warning"]], "Blocking Signals: Signal Mask": [[938, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[938, "signal-mask-manipulation"]], "Pending Signals": [[938, "pending-signals"]], "Signal Set: sigset_t": [[938, "signal-set-sigset-t"]], "Signal Handlers": [[938, "signal-handlers"]], "Installing a Signal Handler (1)": [[938, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[938, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[938, "effects-of-signal-delivery"]], "Last Warning!": [[938, "last-warning"]], "WTF Async Signal Safe?": [[938, "wtf-async-signal-safe"]], "Exercise: Signals": [[938, "exercise-signals"]], "Sysprog: Signals": [[939, "sysprog-signals"]], "Toolchain: Basics": [[940, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[940, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[940, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[940, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[940, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[940, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[940, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[940, "recap-toolchain"]], "CMake: Cross Build": [[941, "cmake-cross-build"]], "Cross Build: Parameters": [[941, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[941, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[941, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[941, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[941, "step-2-build-using-make"], [942, "step-2-build-using-make"]], "CMake: Local Build": [[942, "cmake-local-build"]], "make: Problems": [[942, "make-problems"]], "CMake To The Rescue": [[942, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[942, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[942, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[942, "goodie-dependency-management"]], "Native Compilation": [[943, "native-compilation"]], "Cross?": [[943, "cross"]], "The sysroot": [[943, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[945, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[946, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[947, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[948, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[949, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[950, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[951, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[952, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[952, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[952, "create-a-sysroot"]], "Patience!": [[952, null]], "Test Cross Build": [[952, "test-cross-build"]], "What We Have": [[952, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[952, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[952, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[954, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[954, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[954, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[954, "create-docker-volume"]], "Container Work": [[954, "container-work"]], "Command To Run Container On Volumes": [[954, "command-to-run-container-on-volumes"]], "Setup container": [[954, "setup-container"]], "Install autoconf 2.71": [[954, "install-autoconf-2-71"]], "Install crosstool-ng": [[954, "install-crosstool-ng"]], "Build Toolchain": [[954, "build-toolchain"]], "crosstool-ng Toolchain Build": [[954, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[954, "create-toolchain-archive"]], "Install Toolchain On Host": [[954, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[955, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[955, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[955, "establish-cmake-toolchain-file"]], "Test Run": [[955, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[956, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[956, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[956, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[956, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[956, "complication-modification-tracking"]], "Enter Makefiles": [[956, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[957, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[957, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[957, "and-dynamic-libraries"]], "Relocations": [[957, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[957, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[957, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[957, "and-build-dependencies"]], "And Runtime Dependencies?": [[957, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[957, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[957, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[957, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[958, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[958, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[958, "code-bases-become-larger-2"]], "Problem: Structure": [[958, "problem-structure"]], "Build Instructions: Building A Library": [[958, "build-instructions-building-a-library"]], "Intro": [[960, "intro"]], "Simplest: List Comprehension": [[960, "simplest-list-comprehension"]], "Dictionary Comprehension": [[960, "dictionary-comprehension"], [285, "Dictionary-Comprehension"]], "Context Managers: The with Statement": [[961, "context-managers-the-with-statement"]], "Example: Open File": [[961, "example-open-file"]], "Example: Temporary Directory": [[961, "example-temporary-directory"]], "Example: Multiple with Items": [[961, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[961, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[961, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[961, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[961, "more-involved-using-closures-to-implement-prefixprint"]], "Basic Exception Handling: try, except": [[963, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[963, "catching-exceptions-by-type"]], "Exception Objects": [[963, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[963, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[963, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[963, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[963, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[963, "built-in-exception-hierarchy"]], "Raising Exceptions": [[963, "raising-exceptions"]], "Re-Raising Exceptions": [[963, "re-raising-exceptions"]], "User-Defined Exceptions": [[963, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[963, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[963, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[963, "finally-executed-regardless-of-exception"]], "The exec() Function": [[964, "the-exec-function"]], "Dictionaries Everywhere: Context": [[964, "dictionaries-everywhere-context"]], "Enter exec()": [[964, "enter-exec"]], "exec(), and Context": [[964, "exec-and-context"]], "And What Is This Used For, Realistically?": [[964, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[965, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[966, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[966, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[966, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[966, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[966, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[966, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[966, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[966, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[967, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[967, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[967, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[967, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[967, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[967, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[968, "the-iterator-protocol"], [968, "id1"]], "Iteration in Python": [[968, "iteration-in-python"]], "What\u2019s an Iterator?": [[968, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[968, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[968, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[968, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[968, "generators-motivation"]], "Generators: How?": [[968, "generators-how"]], "Observations": [[968, "observations"]], "Iteration, Generators, And yield": [[969, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[970, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[971, "modules-are-objects"]], "Other Forms (1)": [[971, "other-forms-1"]], "Other Forms (2)": [[971, "other-forms-2"]], "Packages": [[971, "packages"]], "Executing Modules as Scripts": [[971, "executing-modules-as-scripts"]], "Package Structure": [[971, "package-structure"]], "Relative Imports (1)": [[971, "relative-imports-1"]], "Relative Imports (2)": [[971, "relative-imports-2"]], "Multithreading (Python)": [[972, "multithreading-python"]], "What\u2019s a Thread?": [[972, "what-s-a-thread"]], "Threads: The Pythonic Way": [[972, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[972, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[972, "and-program-termination"]], "Daemon Threads": [[972, "daemon-threads"]], "Race Conditions, and Mutexes": [[974, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[974, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[974, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[974, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[974, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[975, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[976, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[976, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[976, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[976, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[976, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[976, "abtract-base-class"]], "Classes And Dictionaries": [[977, "classes-and-dictionaries"]], "Facts Up-Front": [[977, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[977, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[977, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[977, "attributes"], [1089, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[977, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[977, "dynamic-attribute-access"]], "Constructor": [[978, "constructor"]], "And self?": [[978, "and-self"]], "Interrelationships": [[979, "interrelationships"]], "Extending Existing Classes": [[980, "extending-existing-classes"]], "Additional Feature: Salary": [[980, "additional-feature-salary"]], "Want Manager": [[980, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[980, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[980, "isinstance"]], "issubclass()": [[980, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[980, "add-str-creatively-after-the-fact"]], "Object Methods": [[981, "object-methods"]], "Class Methods (@classmethod)": [[981, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[981, "static-methods-staticmethod"]], "collections.namedtuple": [[982, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[982, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[982, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[982, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[983, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[983, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[983, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[983, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[983, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[983, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[983, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[983, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[983, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[983, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[984, "readonly-attributes"]], "And Write Access?": [[984, "and-write-access"]], "Calculated Attributes": [[984, "calculated-attributes"]], "str() And repr()": [[985, "str-and-repr"]], "Stringification And Representation": [[985, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[985, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[986, "positional-and-keyword-arguments"]], "Traditional Function Call": [[986, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[986, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[986, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[986, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[986, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[986, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[986, "use-case-a-better-print"]], "The Python Programming Language": [[989, "the-python-programming-language"]], "A Little Bit of History": [[989, "a-little-bit-of-history"]], "Guido Van Rossum": [[989, "guido-van-rossum"]], "Hello World: Interactive Mode": [[990, "hello-world-interactive-mode"]], "Hello World: Script Files": [[990, "hello-world-script-files"]], "Running Python Programs": [[991, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[991, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[991, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[991, "the-unix-way-running"]], "The Doze Way: Registry": [[991, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[992, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[992, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[992, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[992, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[993, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[993, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[993, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[993, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[993, null]], "Variables (1)": [[994, "variables-1"]], "Variables (2)": [[994, "variables-2"]], "Integer Numbers: Comparison": [[995, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[995, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[995, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[995, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[995, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[995, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[995, "strings-python-2-unicode-2"]], "Strings: Python 3": [[995, "strings-python-3"]], "Python 3, Generally": [[995, "python-3-generally"]], "Boolean Values": [[997, "boolean-values"]], "Boolean Operators": [[997, "boolean-operators"]], "The if Statement": [[998, "the-if-statement"], [998, "id1"]], "Looping Constructs": [[999, "looping-constructs"]], "Esoteric Feature: while/else": [[999, "esoteric-feature-while-else"]], "Sequence Elements": [[1000, "sequence-elements"]], "Sequence Multiplication": [[1000, "sequence-multiplication"]], "Indexing (1)": [[1001, "indexing-1"]], "Indexing (2)": [[1001, "indexing-2"]], "Slicing: Cutting Out": [[1001, "slicing-cutting-out"]], "Slicing: Step Width": [[1001, "slicing-step-width"]], "Iteration over \u2026 Something": [[1002, "iteration-over-something"]], "break, continue, else": [[1002, "break-continue-else"]], "Iteration over Numbers: range()": [[1003, "iteration-over-numbers-range"]], "range(): Definition": [[1003, "range-definition"]], "range(): Python 2 vs. Python 3": [[1003, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1004, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1004, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1004, "immutability-tuples"]], "Mutability: Lists (1)": [[1004, "mutability-lists-1"]], "Mutability: Lists (2)": [[1004, "mutability-lists-2"]], "Shallow Copy": [[1004, "shallow-copy"]], "Deep Copy": [[1004, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1005, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1005, "undefined-variable"]], "Local Variable": [[1005, "local-variable"]], "Local and Global Variable With Same Name": [[1005, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1005, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1006, "functions-slideshow"]], "Why Functions?": [[1006, "why-functions"]], "Mutable Default Parameters: Attention!": [[1006, "mutable-default-parameters-attention"]], "String Delimiters": [[1008, "string-delimiters"]], "Escape Sequences": [[1008, "escape-sequences"]], "More String Tricks": [[1008, "more-string-tricks"]], "C-Style Formatting (1)": [[1009, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1009, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1009, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1009, "c-style-formatting-examples"]], "The format Method": [[1009, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1009, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1010, "batteries-included-checks"]], "Batteries Included: Search": [[1010, "batteries-included-search"]], "Substring Search: Examples": [[1010, "substring-search-examples"]], "Split and Join (1)": [[1010, "split-and-join-1"]], "Split and Join (2)": [[1010, "split-and-join-2"]], "List Access": [[1011, "list-access"]], "List Methods: Examples": [[1011, "list-methods-examples"]], "Dictionary Access": [[1012, "dictionary-access"]], "Examples: Simple Access": [[1012, "examples-simple-access"]], "Examples: Shortcuts": [[1012, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1012, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1012, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1013, "operations-on-sets-1"]], "Operations on Sets (2)": [[1013, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1014, "python-2-vs-python-3"]], "Opening Files": [[1014, "opening-files"]], "Reading Files": [[1014, "reading-files"]], "Reading Files: Pythonic": [[1014, "reading-files-pythonic"]], "Writing Files (1)": [[1014, "writing-files-1"]], "Writing Files (2)": [[1014, "writing-files-2"]], "File Modes": [[1014, "file-modes"]], "Text vs. Binary Mode": [[1014, "text-vs-binary-mode"]], "Standard Streams": [[1014, "standard-streams"]], "Function Objects": [[1015, "function-objects"]], "What\u2019s a Function?": [[1015, "what-s-a-function"]], "Function Objects?": [[1015, "id1"]], "Function Objects! (1)": [[1015, "function-objects-1"]], "Function Objects! (2)": [[1015, "function-objects-2"]], "Commandline Parsing with argparse": [[1016, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1016, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1016, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1017, "python-draft-topics"]], "Matplotlib": [[1018, "matplotlib"]], "Axis Ranges": [[1018, "axis-ranges"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1020, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1021, "exercise-read-csv-file"]], "Sample CSV File": [[1021, "sample-csv-file"]], "CSV and Databases": [[1022, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1024, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1025, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1026, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1027, "exercises-external"]], "Exercise: Swap Two Variables": [[1029, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1030, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1031, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1032, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1033, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1034, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1035, "exercise-primeness-for"]], "Exercises (Legacy)": [[1036, "exercises-legacy"]], "Exercise: Functions: join()": [[1037, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1039, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1040, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1041, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1042, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1042, null]], "Implementation Strategy": [[1042, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1043, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1044, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1045, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1046, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1047, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1048, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1049, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1050, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1051, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1051, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1051, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1052, "exercise-basic-sensor"]], "Specification, And Setup": [[1052, "specification-and-setup"]], "Verification": [[1052, "verification"]], "Unit Test": [[1052, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1053, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1053, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1054, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1055, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1055, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1056, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1057, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1058, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1059, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1059, "test-code"], [1060, "test-code"], [1061, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1060, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1061, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1062, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1063, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1063, "sample-trainings"]], "More Information": [[1063, "more-information"]], "Python Links": [[1064, "python-links"]], "Advanced Python": [[1064, "advanced-python"], [1126, "advanced-python"]], "David Beazley": [[1064, "david-beazley"]], "Raymond Hettinger": [[1064, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1065, "machine-learning-artificial-intelligence"]], "K-Means": [[1066, "k-means"]], "Topic Overview": [[1066, "topic-overview"], [1070, "topic-overview"]], "Artifacts": [[1066, "artifacts"]], "Topic Dependencies": [[1066, "topic-dependencies"], [1070, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1067, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1068, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1069, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1069, "pandas.DataFrame"]], "Reading Data": [[1069, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1069, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1069, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1069, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1069, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1069, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1069, "Verify-the-Model"]], "Linear Regression": [[1070, "linear-regression"]], "Running Code": [[1070, "running-code"]], "Dataset": [[1070, "dataset"]], "Machine Learning: Concepts and Terminology": [[1071, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1071, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1071, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1071, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1071, "types-of-machine-learning"]], "Problems Solved": [[1071, "problems-solved"], [1094, "problems-solved"], [1101, "problems-solved"]], "CSV Files": [[1072, "csv-files"]], "CSV in its Origins": [[1072, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1072, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1072, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1072, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1072, "more-tuning-needed-quoting"]], "Tuning Options": [[1072, "tuning-options"]], "And Headings?": [[1072, "and-headings"]], "Enter csv.DictReader": [[1072, "enter-csv-dictreader"]], "DBAPI 2": [[1073, "dbapi-2"]], "Database Interfaces": [[1073, "database-interfaces"]], "DBAPI 2.0": [[1073, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1073, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1073, "caveat-isolation"]], "Databases": [[1074, "databases"]], "DBAPI 2: PostgreSQL": [[1075, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1075, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1076, "dbapi-2-sqlite3"]], "SQLite3": [[1076, "sqlite3"]], "SQLite3 Connection": [[1076, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1076, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1076, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1076, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1076, "sqlite3-bind-parameters"]], "ASCII": [[1077, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1077, "iso-latin-1-iso-8859-1"]], "And Python?": [[1077, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1077, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1077, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1077, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1077, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1077, "and-jorg-2"]], "Enter UTF-8": [[1077, "enter-utf-8"]], "Boundary Code": [[1077, "boundary-code"]], "Ah Yes: decode()": [[1077, "ah-yes-decode"]], "And Source Encoding?": [[1077, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1078, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1079, "the-import-statement-incomplete"]], "Server/Broker": [[1080, "server-broker"]], "Client": [[1080, "client"]], "Starting the Service": [[1080, "starting-the-service"]], "Publishing a Message in Python": [[1080, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1080, "subscribing-a-topic-in-python"]], "Message Payload?": [[1080, "message-payload"]], "Random Material": [[1084, "random-material"]], "XML: ElementTree (etree)": [[1089, "xml-elementtree-etree"]], "SAX and DOM": [[1089, "sax-and-dom"]], "ElementTree": [[1089, "elementtree"]], "A Very Simple Document": [[1089, "a-very-simple-document"]], "Text (1)": [[1089, "text-1"]], "Text (2)": [[1089, "text-2"]], "Writing XML Documents": [[1089, "writing-xml-documents"]], "Reading XML Documents": [[1089, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1090, "visual-studio-code-for-python-programming"]], "PCAP Exam": [[1091, "pcap-exam"]], "Syllabus": [[1091, "syllabus"]], "Exam block #1: Modules and Packages (12%)": [[1091, "exam-block-1-modules-and-packages-12"]], "Exam block #2: Exceptions (14%)": [[1091, "exam-block-2-exceptions-14"]], "Exam block #3: Strings (18%)": [[1091, "exam-block-3-strings-18"]], "Exam block #4: Object-Oriented Programming (34%)": [[1091, "exam-block-4-object-oriented-programming-34"]], "Exam block #5: Miscellaneous (List Comprehensions, Lambdas, Closures, and I/O Operations) (22%)": [[1091, "exam-block-5-miscellaneous-list-comprehensions-lambdas-closures-and-i-o-operations-22"]], "Sample Questions": [[1091, "sample-questions"]], "Python: Project/Package Management": [[1092, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1093, "python-package-index-livehacking-screenplay"]], "Invocation": [[1093, "invocation"]], "Help": [[1093, "help"]], "Most Used Subcommands": [[1093, "most-used-subcommands"]], "Subcommand Help": [[1093, "subcommand-help"]], "System vs. User": [[1093, "system-vs-user"]], "Search": [[1093, "search"]], "Python Package Index (Slideshow)": [[1094, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1094, "python-package-index-pypi"]], "Python Package Index": [[1095, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1096, "packaging-pypi-upload-link-collection"]], "PyTest": [[1097, "pytest"]], "The unittest Module": [[1099, "the-unittest-module"]], "Simplest Example": [[1099, "simplest-example"]], "Using a Fixture": [[1099, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1099, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1099, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1099, "the-meat-of-a-test"]], "Recommendations": [[1099, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1100, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1100, "first-help"]], "Local Package Installation": [[1100, "local-package-installation"]], "Freezing an Environment": [[1100, "freezing-an-environment"]], "Destroying an Environment": [[1100, "destroying-an-environment"]], "Recreating an Environment": [[1100, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1100, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1101, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1101, "virtual-environments-links"]], "Virtual Environments": [[1102, "virtual-environments"]], "Code: Unittest: GTest Basics": [[1104, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1105, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1105, "before-we-start"]], "Simplest Test: No Test": [[1105, "simplest-test-no-test"]], "Next Simplest: Single File": [[1105, "next-simplest-single-file"]], "Executing Tests Selectively": [[1105, "executing-tests-selectively"]], "Fatal Failure": [[1105, "fatal-failure"]], "FAIL()": [[1105, "fail"]], "ASSERT_*()": [[1105, "assert"]], "Non-Fatal Failure": [[1105, "non-fatal-failure"]], "Custom Message Output": [[1105, "custom-message-output"]], "Last Not Least: Structure": [[1105, "last-not-least-structure"]], "Test Cases and Suites": [[1105, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1106, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1107, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1107, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1107, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1107, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1107, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1108, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1109, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1110, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1110, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1110, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1110, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1111, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1112, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1112, null]], "Buchung": [[1112, "buchung"]], "Kursgestaltung": [[1112, "kursgestaltung"]], "\u00dcbungen": [[1112, "ubungen"]], "Unterlagen & Download": [[1112, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1113, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1113, "grub-0-97"]], "Cross Systeme Bauen": [[1113, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1113, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1113, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1114, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1114, "zielpublikum"], [1116, "zielpublikum"], [1117, "zielpublikum"], [1122, "zielpublikum"], [1124, "zielpublikum"], [1129, "zielpublikum"], [1130, "zielpublikum"], [1136, "zielpublikum"]], "Kursinhalt": [[1114, "kursinhalt"], [1116, "kursinhalt"], [1117, "kursinhalt"], [1122, "kursinhalt"], [1124, "kursinhalt"], [1125, "kursinhalt"], [1129, "kursinhalt"], [1130, "kursinhalt"], [1131, "kursinhalt"], [1132, "kursinhalt"], [1134, "kursinhalt"], [1135, "kursinhalt"], [1136, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1114, "empfohlene-vorkenntnisse"], [1116, "empfohlene-vorkenntnisse"], [1117, "empfohlene-vorkenntnisse"], [1122, "empfohlene-vorkenntnisse"], [1124, "empfohlene-vorkenntnisse"], [1125, "empfohlene-vorkenntnisse"], [1129, "empfohlene-vorkenntnisse"], [1130, "empfohlene-vorkenntnisse"], [1131, "empfohlene-vorkenntnisse"], [1132, "empfohlene-vorkenntnisse"], [1134, "empfohlene-vorkenntnisse"], [1135, "empfohlene-vorkenntnisse"], [1136, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1115, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1116, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1117, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1118, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1119, "c-and-c-programming"]], "CMake": [[1120, "cmake"]], "The Course": [[1120, null]], "Target Audience": [[1120, "target-audience"]], "Recommended Prior Knowledge": [[1120, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1121, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1122, "embedded-software-development-hardware-realtime-and-memory-management"]], "Linux Kernel Driver Development": [[1123, "linux-kernel-driver-development"], [743, "linux-kernel-driver-development"]], "Course Contents": [[1123, "course-contents"]], "Sample Project": [[1123, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1124, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1125, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1128, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1129, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1130, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1131, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1132, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1134, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1135, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1136, "unittesting-and-test-driven-development"]], "Stacks (Hanging)": [[129, "stacks-hanging"]], "DBus (New Topic)": [[129, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[129, "finish-meta-seo-and-stuff"]], "pytest Introduction, By Example": [[1098, "pytest-introduction-by-example"]], "Sample Project Structure": [[1098, "sample-project-structure"]], "pytest: Installation, Documentation": [[1098, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1098, "and-pythonpath"]], "A Simple Test": [[1098, "a-simple-test"]], "Failing Tests": [[1098, "failing-tests"]], "A More Realistic Example": [[1098, "a-more-realistic-example"]], "Fixtures": [[1098, "fixtures"]], "Temporary Test Directory": [[1098, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1098, "marking-tests-as-expected-to-fail"]], "Pandas: Adding Rows": [[1081, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1081, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1081, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1081, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1082, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1082, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1082, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1082, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1082, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1082, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1082, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1083, "pandas-filters"]], "Basic Filter Example": [[1083, "basic-filter-example"]], "Filter? Bitmap!": [[1083, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1083, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1083, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1083, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1083, "negation"]], "Neat Helpers": [[1083, "neat-helpers"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1085, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1085, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1085, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1085, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1085, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1086, "pandas-indexes"]], "Default Index: Row Number": [[1086, "default-index-row-number"]], "Setting Custom Index": [[1086, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1086, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1086, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1086, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1086, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1087, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1087, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1087, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1087, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1087, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1088, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1088, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1088, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1088, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1088, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1088, "apply-ing-custom-functions"]], "Closures": [[959, "closures"]], "Today": [[959, "today"]], "def is a Statement": [[959, "def-is-a-statement"]], "Functions That Create Functions": [[959, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[959, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[959, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[959, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[959, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[959, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Decorators": [[962, "decorators"]], "The Ominous \u201c@\u201d": [[962, "the-ominous"]], "Decorators Overview": [[962, "decorators-overview"]], "A Simple Minded Function": [[962, "a-simple-minded-function"]], "Decorator Basics": [[962, "decorator-basics"]], "Decorators are Syntactic Sugar": [[962, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[962, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[962, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[962, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[962, "class-decorator-debug-with-prefix"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[284, "python-advanced-2023-10-24-2023-10-26"], [328, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[284, "python-basics-recap"], [285, "Python-Basics-Recap"]], "The Very Basics": [[284, "the-very-basics"]], "range(), And Iteration In General": [[284, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[284, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[284, "object-oriented-programming-continued"], [284, "id1"]], "Group Project, OO-ified": [[284, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[284, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[284, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[284, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[284, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[284, "compositesink"]], "MQTT Sink Implementation": [[284, "mqtt-sink-implementation"]], "Timestamps?": [[284, "timestamps"]], "Jupyter Notebook: Python Advanced": [[285, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[285, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[285, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[285, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[285, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[285, "assert"]], "Iteration, Generators, Iterator Protocol": [[285, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[285, "AAARGHHH"]], "Generator Expresssions": [[285, "Generator-Expresssions"]], "Functional Tools": [[285, "Functional-Tools"]], "filter()": [[285, "filter()"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[289, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[290, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Types, Operators, Expressions": [[363, "types-operators-expressions"]], "Program Flow": [[372, "program-flow"]], "Functions and Program Structure": [[379, "functions-and-program-structure"]], "Structures": [[389, "structures"]], "Memory": [[392, "memory"]], "Program Sanity": [[405, "program-sanity"]], "Performance": [[409, "performance"]], "Profiling": [[414, "profiling"]], "C++: Miscellaneous Live-Hacking": [[535, "c-miscellaneous-live-hacking"]], "Functions and Methods": [[558, "functions-and-methods"]], "C++ Template Basics": [[564, "c-template-basics"]], "Dynamic Memory Allocation, Resource Management": [[605, "dynamic-memory-allocation-resource-management"]], "The Standard Library: Miscellaneous Topics": [[614, "the-standard-library-miscellaneous-topics"]], "Functions, Functions": [[700, "functions-functions"]], "Topics and Dependencies": [[743, "topics-and-dependencies"]], "POSIX Threads": [[917, "posix-threads"]], "Python: The Language Fundamentals": [[987, "python-the-language-fundamentals"]], "Unit Testing With googletest": [[1103, "unit-testing-with-googletest"]], "Bisher Gehaltene": [[328, "bisher-gehaltene"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[328, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[328, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[328, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[328, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[328, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[328, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[328, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[328, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[328, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[328, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[328, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[328, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[328, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[328, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[328, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[328, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[328, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[328, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[328, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[328, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[328, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[328, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[328, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[328, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[328, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[328, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[328, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[328, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[328, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[328, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[328, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[328, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[328, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[328, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[328, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[328, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[328, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[328, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[328, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[328, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[328, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[328, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[328, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[328, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[328, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[328, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[328, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[328, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[328, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[328, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[328, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[328, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[328, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[328, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[328, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[328, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[328, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[328, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[328, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[328, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[328, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[328, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[328, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[328, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[328, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[328, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[328, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[328, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[328, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[328, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[328, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[328, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[328, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[328, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[328, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[328, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[328, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[328, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[328, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[328, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[328, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[328, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Package Installation (setuptools)": [[1019, "package-installation-setuptools"]], "Files": [[1019, "files"]], "Test \u201cInstallation\u201d": [[1019, "test-installation"]], "Source Distribution": [[1019, "source-distribution"]], "Manifest": [[1019, "manifest"]], "Installing From Wheel File": [[1019, "installing-from-wheel-file"]], "Publishing On PyPI": [[1019, "publishing-on-pypi"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[288, "python-advanced-2023-11-22-2023-22-24"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[287, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[287, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[287, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[287, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[287, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[287, "csv-and-databases"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[62, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[62, "setup-before-presentation"]], "Greeting": [[62, "greeting"]], "Multiple Background Threads": [[62, "multiple-background-threads"]], "Enter asyncio": [[62, "enter-asyncio"]], "Character Device Based GPIO": [[62, "character-device-based-gpio"]], "GPIO Device": [[62, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[62, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[62, "entire-matrix-on-off"]], "Bringing All Together": [[62, "bringing-all-together"]], "Modularize": [[62, "modularize"]], "Play A Bit: Blink Entire Rows": [[62, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[62, "coroutines"]], "Not Enough: sequence()": [[62, "not-enough-sequence"]], "Looping: forever()": [[62, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[62, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[62, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[62, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[62, "program-finally"]], "Playground: cycle()": [[62, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[62, "fast-forward-any-and-cancellation"]], "Playground: on()": [[62, "playground-on"]], "Goodbye": [[62, "goodbye"]], "WS2023/24": [[113, "ws2023-24"]], "2023-10-05 (6 VO)": [[113, "vo"]], "OO: Recap": [[113, "oo-recap"]], "Plan \ud83d\udcaa": [[113, "plan-muscle"]], "OO: Polymorphism": [[113, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily)": [[113, "git-collaboration-via-github-but-not-necessarily"]], "2023-11-02 (6 VO)": [[113, "id1"]], "Organizational": [[113, "organizational"]], "OO: Design?": [[113, "oo-design"]], "Data Logger": [[113, "data-logger"]], "Boiling Pot": [[113, "boiling-pot"]], "Switch Interface": [[113, "switch-interface"]], "Real Switches": [[113, "real-switches"]], "Temperature Display: LED Via A PWM Controller": [[113, "temperature-display-led-via-a-pwm-controller"]]}, "indexentries": {}})