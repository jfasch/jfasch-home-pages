Search.setIndex({"docnames": ["about/myself/contact", "about/myself/cv-de", "about/myself/index", "about/myself/projects-de", "about/myself/skills-de", "about/site/courses/angebot-2023-10-12", "about/site/courses/index", "about/site/courses/samples/detail/2021-04-12/Notebook", "about/site/courses/samples/detail/2021-04-12/index", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper", "about/site/courses/samples/detail/index", "about/site/courses/samples/index", "about/site/courses/templates", "about/site/index", "about/site/opentraining/index", "about/site/opentraining/misc/draft-topics/index", "about/site/opentraining/misc/index", "about/site/opentraining/misc/s5/index", "about/site/opentraining/misc/s5/tests/index", "about/site/opentraining/misc/s5/tests/test-slides", "about/site/opentraining/misc/screencast", "about/site/opentraining/misc/topics-to-write", "about/site/opentraining/netidee/index", "about/site/opentraining/netidee/netidee-antrag", "about/site/opentraining/netidee/netidee-video-2min", "about/site/opentraining/usecases/agenda-subtract-known", "about/site/opentraining/usecases/duration", "about/site/opentraining/usecases/index", "about/site/opentraining/usecases/linking", "about/site/opentraining/usecases/menu", "about/site/opentraining/usecases/slides", "about/site/recipes/camera-ssh", "about/site/recipes/emoji", "about/site/recipes/index", "about/site/recipes/isoamsa", "about/site/recipes/isoamsr", "about/site/recipes/isonum", "about/site/recipes/layout-test", "about/site/recipes/mathml", "about/site/recipes/rst-cheatsheet", "about/site/recipes/sphinxish", "about/site/work-in-progress/2022-04-13/index", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest", "about/site/work-in-progress/2022-04-13/seminar/index", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes", "about/site/work-in-progress/2022-04-13/seminar/tasks/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch", "about/site/work-in-progress/blink/glt", "about/site/work-in-progress/blink/index", "about/site/work-in-progress/blink/installation", "about/site/work-in-progress/blink/pycon-2023", "about/site/work-in-progress/blink/screenplay", "about/site/work-in-progress/blog-queue/hochkoenig/index", "about/site/work-in-progress/blog-queue/index", "about/site/work-in-progress/blog-queue/sphinx", "about/site/work-in-progress/fh-joanneum/2019/cxx", "about/site/work-in-progress/fh-joanneum/2019/cxx_build", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest", "about/site/work-in-progress/fh-joanneum/2019/ec", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed", "about/site/work-in-progress/fh-joanneum/2019/git", "about/site/work-in-progress/fh-joanneum/2019/index", "about/site/work-in-progress/fh-joanneum/2019/linux", "about/site/work-in-progress/fh-joanneum/2019/linux_basics", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio", "about/site/work-in-progress/fh-joanneum/2019/mt", "about/site/work-in-progress/fh-joanneum/2019/mt_lock", "about/site/work-in-progress/fh-joanneum/2019/mt_wait", "about/site/work-in-progress/fh-joanneum/2019/py_basics", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors", "about/site/work-in-progress/fh-joanneum/2019/py_web", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors", "about/site/work-in-progress/fh-joanneum/2019/python", "about/site/work-in-progress/fh-joanneum/2020/index", "about/site/work-in-progress/fh-joanneum/2020/ss2022", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index", "about/site/work-in-progress/fh-joanneum/2020/ws2022", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved", "about/site/work-in-progress/fh-joanneum/2021/git/git", "about/site/work-in-progress/fh-joanneum/2021/index", "about/site/work-in-progress/fh-joanneum/2021/ss2023", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure", "about/site/work-in-progress/fh-joanneum/2021/tasks/group", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024", "about/site/work-in-progress/fh-joanneum/index", "about/site/work-in-progress/git", "about/site/work-in-progress/index", "about/site/work-in-progress/packaging/index", "about/site/work-in-progress/project-xxx/audio-chip", "about/site/work-in-progress/project-xxx/debian-config", "about/site/work-in-progress/project-xxx/debian-kernel-package", "about/site/work-in-progress/project-xxx/hardware-bringup", "about/site/work-in-progress/project-xxx/index", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty", "about/site/work-in-progress/project-xxx/wait-hardware", "about/site/work-in-progress/project-xxx/yocto-kernel", "about/site/work-in-progress/python-training", "about/site/work-in-progress/screencast", "about/site/work-in-progress/seo", "about/site/work-in-progress/stacks", "about/site/work-in-progress/todo-misc", "about/site/work-in-progress/web", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w", "blog/2011/01/porting-to-linux-there-s-always-a-better-way", "blog/2011/01/saving-solid-state-disk-life--gentoo", "blog/2012/04/Why-ps-sucks", "blog/2020/02/fedora-kernel-build", "blog/2020/03/custom-domain-gh-pages", "blog/2020/03/ms-teams-on-linux", "blog/2020/03/sphinx-gh-pages", "blog/2020/04/bbb", "blog/2020/09/traunstein", "blog/2021/08/grintovec", "blog/2021/09/xps13-shim-mok-brick/index", "blog/2022/09/cross-raspi", "blog/index", "index", "trainings/codex", "trainings/exercises", "trainings/index", "trainings/log/detail/2013-10-01/index", "trainings/log/detail/2015-11-30/index", "trainings/log/detail/2019-10-28/LiveHacking", "trainings/log/detail/2019-10-28/index", "trainings/log/detail/2019-11-12/code/BigPlan", "trainings/log/detail/2019-11-12/code/LiveHacking", "trainings/log/detail/2019-11-12/index", "trainings/log/detail/2020-01-10/Proposal", "trainings/log/detail/2020-01-10/index", "trainings/log/detail/2020-03-30/code/exercise-string/index", "trainings/log/detail/2020-03-30/index", "trainings/log/detail/2020-03-30/install-googletest", "trainings/log/detail/2020-03-30/setup", "trainings/log/detail/2020-03-30/vs-code", "trainings/log/detail/2020-05-12/code/index", "trainings/log/detail/2020-05-12/index", "trainings/log/detail/2020-05-18/Livehacking", "trainings/log/detail/2020-05-18/code/index", "trainings/log/detail/2020-05-18/index", "trainings/log/detail/2020-09-07/index", "trainings/log/detail/2020-09-28/index", "trainings/log/detail/2020-10-19/Notebook", "trainings/log/detail/2020-10-19/index", "trainings/log/detail/2020-11-03/index", "trainings/log/detail/2020-11-23/index", "trainings/log/detail/2020-11-30/index", "trainings/log/detail/2021-01-13/Notebook", "trainings/log/detail/2021-01-13/index", "trainings/log/detail/2021-01-13/notebook-wrapper", "trainings/log/detail/2021-02-22/index", "trainings/log/detail/2021-03-08/index", "trainings/log/detail/2021-03-15/Notebook", "trainings/log/detail/2021-03-15/index", "trainings/log/detail/2021-03-22/Notebook", "trainings/log/detail/2021-03-22/index", "trainings/log/detail/2021-03-29/index", "trainings/log/detail/2021-04-12/Notebook", "trainings/log/detail/2021-04-12/index", "trainings/log/detail/2021-04-12/notebook-wrapper", "trainings/log/detail/2021-05-03/Notebook", "trainings/log/detail/2021-05-03/index", "trainings/log/detail/2021-05-03/notebook-wrapper", "trainings/log/detail/2021-05-25/Notebook", "trainings/log/detail/2021-05-25/index", "trainings/log/detail/2021-06-14/index", "trainings/log/detail/2021-07-12/index", "trainings/log/detail/2021-08-02/index", "trainings/log/detail/2021-08-02/notebook", "trainings/log/detail/2021-08-23/Notebook", "trainings/log/detail/2021-08-23/exercises/sap-cleaned", "trainings/log/detail/2021-08-23/index", "trainings/log/detail/2021-08-23/notebook-wrapper", "trainings/log/detail/2021-08-31/Notebook", "trainings/log/detail/2021-08-31/index", "trainings/log/detail/2021-08-31/notebook-wrapper", "trainings/log/detail/2021-11-17/Notebook", "trainings/log/detail/2021-11-17/index", "trainings/log/detail/2021-11-17/notebook-wrapper", "trainings/log/detail/2021-12-01/2021-12-01", "trainings/log/detail/2021-12-01/index", "trainings/log/detail/2021-12-01/notebook-wrapper", "trainings/log/detail/2021-12-06/index", "trainings/log/detail/2022-01-17/index", "trainings/log/detail/2022-01-17/notebook", "trainings/log/detail/2022-01-17/notebook-wrapper", "trainings/log/detail/2022-02-23/Notebook", "trainings/log/detail/2022-02-23/index", "trainings/log/detail/2022-02-23/notebook-wrapper", "trainings/log/detail/2022-03-15/Notebook", "trainings/log/detail/2022-03-15/index", "trainings/log/detail/2022-03-15/notebook-wrapper", "trainings/log/detail/2022-03-23/Notebook", "trainings/log/detail/2022-03-23/index", "trainings/log/detail/2022-03-23/notebook-wrapper", "trainings/log/detail/2022-04-05/index", "trainings/log/detail/2022-04-05/notebook", "trainings/log/detail/2022-04-05/notebook-wrapper", "trainings/log/detail/2022-04-25/index", "trainings/log/detail/2022-04-25/notebook", "trainings/log/detail/2022-04-25/notebook-wrapper", "trainings/log/detail/2022-05-02/index", "trainings/log/detail/2022-05-02/notebook", "trainings/log/detail/2022-05-02/notebook-wrapper", "trainings/log/detail/2022-05-16/index", "trainings/log/detail/2022-05-16/notebook", "trainings/log/detail/2022-05-16/notebook-wrapper", "trainings/log/detail/2022-06-14/2022-05-11", "trainings/log/detail/2022-06-14/index", "trainings/log/detail/2022-07-26/index", "trainings/log/detail/2022-10-03/index", "trainings/log/detail/2022-10-11/index", "trainings/log/detail/2022-10-24/index", "trainings/log/detail/2022-11-07/index", "trainings/log/detail/2022-11-07/notebook", "trainings/log/detail/2022-11-07/notebook-wrapper", "trainings/log/detail/2022-11-16/index", "trainings/log/detail/2022-11-16/notebook", "trainings/log/detail/2022-11-16/notebook-wrapper", "trainings/log/detail/2023-01-23/index", "trainings/log/detail/2023-02-13/index", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook", "trainings/log/detail/2023-03-13-Python-SAP/demo", "trainings/log/detail/2023-03-13-Python-SAP/index", "trainings/log/detail/2023-03-13-Python-SAP/notebook", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset", "trainings/log/detail/2023-03-20--C++-embedded/index", "trainings/log/detail/2023-03-28--Python-Clean-Code/index", "trainings/log/detail/2023-04-18--C++-embedded/index", "trainings/log/detail/2023-04-24--Python-Advanced/agenda", "trainings/log/detail/2023-04-24--Python-Advanced/index", "trainings/log/detail/2023-04-24--Python-Advanced/notebook", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-05-15--Python-Basics/agenda", "trainings/log/detail/2023-05-15--Python-Basics/index", "trainings/log/detail/2023-05-15--Python-Basics/notebook", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-05-23--Linux-Basics/agenda", "trainings/log/detail/2023-05-23--Linux-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/agenda", "trainings/log/detail/2023-06-20--Python-Basics/index", "trainings/log/detail/2023-06-20--Python-Basics/notebook", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-07-03--CMake/agenda", "trainings/log/detail/2023-07-03--CMake/index", "trainings/log/detail/2023-09-25--Python-Advanced/index", "trainings/log/detail/2023-09-25--Python-Advanced/notebook", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-09--Python-Advanced/index", "trainings/log/detail/2023-10-09--Python-Advanced/notebook", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-10-24--Python-Advanced/agenda", "trainings/log/detail/2023-10-24--Python-Advanced/index", "trainings/log/detail/2023-10-24--Python-Advanced/notebook", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-22--Python-Advanced/agenda", "trainings/log/detail/2023-11-22--Python-Advanced/index", "trainings/log/detail/2023-11-22--Python-Advanced/notebook", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper", "trainings/log/detail/2023-11-27--CMake/agenda", "trainings/log/detail/2023-11-27--CMake/index", "trainings/log/detail/2023-11-29--Python-Basics/agenda", "trainings/log/detail/2023-11-29--Python-Basics/index", "trainings/log/detail/2023-11-29--Python-Basics/notebook", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-12-04--C++-Advanced/agenda", "trainings/log/detail/2023-12-04--C++-Advanced/index", "trainings/log/detail/2023-12-18--Python-Basics/agenda", "trainings/log/detail/2023-12-18--Python-Basics/index", "trainings/log/detail/2023-12-18--Python-Basics/notebook", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper", "trainings/log/detail/2023-XX-XX-C++-embedded/index", "trainings/log/detail/2023-XX-XX-Python-SAP/index", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer", "trainings/log/detail/FH-ECE-19/EC1/formales", "trainings/log/detail/FH-ECE-19/EC1/index", "trainings/log/detail/FH-ECE-19/EC1/log", "trainings/log/detail/FH-ECE-19/EC1/lv-de", "trainings/log/detail/FH-ECE-19/EC1/lv-en", "trainings/log/detail/FH-ECE-19/EC1/plan", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index", "trainings/log/detail/FH-ECE-19/EC2/index", "trainings/log/detail/FH-ECE-19/EC2/test-material", "trainings/log/detail/FH-ECE-19/index", "trainings/log/detail/index", "trainings/log/index", "trainings/material/index", "trainings/material/soup/c/010-introduction/000-installation/topic", "trainings/material/soup/c/010-introduction/010-introduction/topic", "trainings/material/soup/c/010-introduction/020-getting-started/topic", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic", "trainings/material/soup/c/010-introduction/110-arrays/topic", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic", "trainings/material/soup/c/010-introduction/130-functions/topic", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic", "trainings/material/soup/c/010-introduction/150-character-arrays/topic", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic", "trainings/material/soup/c/010-introduction/group", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic", "trainings/material/soup/c/020-types-operators-expressions/group", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic", "trainings/material/soup/c/030-program-flow/020-if-else/topic", "trainings/material/soup/c/030-program-flow/030-else-if/topic", "trainings/material/soup/c/030-program-flow/040-switch/topic", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic", "trainings/material/soup/c/030-program-flow/group", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic", "trainings/material/soup/c/040-functions-and-program-structure/group", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic", "trainings/material/soup/c/050-pointers-and-arrays/group", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic", "trainings/material/soup/c/060-structures/030-typedef/topic", "trainings/material/soup/c/060-structures/group", "trainings/material/soup/c/070-memory/010-malloc/topic", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic", "trainings/material/soup/c/070-memory/group", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic", "trainings/material/soup/c/080-advanced-language-features/group", "trainings/material/soup/c/090-program-sanity/010-introduction/topic", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic", "trainings/material/soup/c/090-program-sanity/040-static/topic", "trainings/material/soup/c/090-program-sanity/050-const/topic", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic", "trainings/material/soup/c/090-program-sanity/group", "trainings/material/soup/c/100-performance/010-introduction/topic", "trainings/material/soup/c/100-performance/020-computebound/topic", "trainings/material/soup/c/100-performance/030-memory/topic", "trainings/material/soup/c/100-performance/group", "trainings/material/soup/c/110-profiling/010-introduction/topic", "trainings/material/soup/c/110-profiling/020-gprof/topic", "trainings/material/soup/c/110-profiling/030-callgrind/topic", "trainings/material/soup/c/110-profiling/040-oprofile/topic", "trainings/material/soup/c/110-profiling/group", "trainings/material/soup/c/group", "trainings/material/soup/clean-code/book-messages", "trainings/material/soup/clean-code/craft-sw", "trainings/material/soup/clean-code/group", "trainings/material/soup/clean-code/intro-python/livehacking", "trainings/material/soup/cmake/basics", "trainings/material/soup/cmake/configure_file", "trainings/material/soup/cmake/cxx-and-rants", "trainings/material/soup/cmake/external-dependencies", "trainings/material/soup/cmake/group", "trainings/material/soup/cmake/installation", "trainings/material/soup/cmake/libraries", "trainings/material/soup/cmake/optional-code-approach-1", "trainings/material/soup/cmake/optional-code-approach-2", "trainings/material/soup/cmake/optional-code-problem", "trainings/material/soup/cmake/shared-libraries", "trainings/material/soup/cmake/structure", "trainings/material/soup/cmake/targets-properties", "trainings/material/soup/cmake/testing", "trainings/material/soup/cxx-code/index", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory", "trainings/material/soup/cxx-design-patterns/adapter/adapter", "trainings/material/soup/cxx-design-patterns/command/command", "trainings/material/soup/cxx-design-patterns/command/socialdb", "trainings/material/soup/cxx-design-patterns/composite/composite", "trainings/material/soup/cxx-design-patterns/decorator/decorator", "trainings/material/soup/cxx-design-patterns/group", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter", "trainings/material/soup/cxx-design-patterns/observer/observer", "trainings/material/soup/cxx-design-patterns/oo-principles", "trainings/material/soup/cxx-design-patterns/proxy/proxy", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy", "trainings/material/soup/cxx-design-patterns/singleton/singleton", "trainings/material/soup/cxx-design-patterns/uml/uml", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/adapter", "trainings/material/soup/cxx-exercises/design-patterns/command", "trainings/material/soup/cxx-exercises/design-patterns/composite", "trainings/material/soup/cxx-exercises/design-patterns/decorator", "trainings/material/soup/cxx-exercises/design-patterns/group", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/observer", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group", "trainings/material/soup/cxx-exercises/group", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly", "trainings/material/soup/cxx-exercises/oo-shapes/shapes", "trainings/material/soup/cxx-exercises/project-setup", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1", "trainings/material/soup/cxx-exercises/stl/algo", "trainings/material/soup/cxx-exercises/stl/filter-generic", "trainings/material/soup/cxx-exercises/stl/filter-greater-10", "trainings/material/soup/cxx-exercises/stl/filter-odd", "trainings/material/soup/cxx-exercises/stl/group", "trainings/material/soup/cxx-exercises/stl/map", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const", "trainings/material/soup/cxx-exercises/stl/uniq", "trainings/material/soup/cxx-exercises/stl/vector", "trainings/material/soup/cxx-todo/index", "trainings/material/soup/cxx/cxx_class_templates/code/index", "trainings/material/soup/cxx/cxx_class_templates/screenplay", "trainings/material/soup/cxx/cxx_class_templates/topic", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay", "trainings/material/soup/cxx/cxx_dynamic_memory/topic", "trainings/material/soup/cxx/cxx_global_initialization/code/index", "trainings/material/soup/cxx/cxx_global_initialization/screenplay", "trainings/material/soup/cxx/cxx_global_initialization/topic", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic", "trainings/material/soup/cxx/cxx_ownership_raii/code/index", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay", "trainings/material/soup/cxx/cxx_ownership_raii/topic", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay", "trainings/material/soup/cxx/cxx_stl_container_intro/topic", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic", "trainings/material/soup/cxx/group", "trainings/material/soup/cxx03/001-introduction/topic", "trainings/material/soup/cxx03/020-data-encapsulation/c", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor", "trainings/material/soup/cxx03/020-data-encapsulation/group", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle", "trainings/material/soup/cxx03/030-functions-and-methods/group", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic", "trainings/material/soup/cxx03/040-exceptions/group", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic", "trainings/material/soup/cxx03/050-templates/group", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range", "trainings/material/soup/cxx03/060-stl/010-basics/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/find", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each", "trainings/material/soup/cxx03/060-stl/020-algorithm/group", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics", "trainings/material/soup/cxx03/060-stl/allocators/group", "trainings/material/soup/cxx03/060-stl/exercises/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution", "trainings/material/soup/cxx03/060-stl/group", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic", "trainings/material/soup/cxx03/070-dynamic-memory/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/group", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise", "trainings/material/soup/cxx03/exercises-misc/fh-questions", "trainings/material/soup/cxx03/exercises-misc/group", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise", "trainings/material/soup/cxx03/exercises-userdb/group", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise", "trainings/material/soup/cxx03/group", "trainings/material/soup/cxx11/010-introduction/group", "trainings/material/soup/cxx11/010-introduction/history", "trainings/material/soup/cxx11/010-introduction/overview-livehacking", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword", "trainings/material/soup/cxx11/020-new-language-features/060-move/group", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic", "trainings/material/soup/cxx11/020-new-language-features/auto", "trainings/material/soup/cxx11/020-new-language-features/concepts/group", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral", "trainings/material/soup/cxx11/020-new-language-features/concepts/links", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next", "trainings/material/soup/cxx11/020-new-language-features/default", "trainings/material/soup/cxx11/020-new-language-features/delete", "trainings/material/soup/cxx11/020-new-language-features/final", "trainings/material/soup/cxx11/020-new-language-features/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/group", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall", "trainings/material/soup/cxx11/020-new-language-features/modules", "trainings/material/soup/cxx11/020-new-language-features/override", "trainings/material/soup/cxx11/020-new-language-features/range-based-for", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad", "trainings/material/soup/cxx11/020-new-language-features/ranges/group", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro", "trainings/material/soup/cxx11/020-new-language-features/ranges/links", "trainings/material/soup/cxx11/020-new-language-features/structured-binding", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic", "trainings/material/soup/cxx11/030-smart-pointers/group", "trainings/material/soup/cxx11/030-smart-pointers/introduction", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr", "trainings/material/soup/cxx11/030-smart-pointers/weakptr", "trainings/material/soup/cxx11/035-perfect-forwarding/topic", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic", "trainings/material/soup/cxx11/040-bind-function/020-function/topic", "trainings/material/soup/cxx11/040-bind-function/group", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking", "trainings/material/soup/cxx11/050-multithreading/condition-variable", "trainings/material/soup/cxx11/050-multithreading/group", "trainings/material/soup/cxx11/050-multithreading/promise-future", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant", "trainings/material/soup/cxx11/100-miscellaneous/group", "trainings/material/soup/cxx11/drafts/crtp", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/group", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual", "trainings/material/soup/cxx11/drafts/group", "trainings/material/soup/cxx11/exercises/bag-copy", "trainings/material/soup/cxx11/exercises/bag-shared", "trainings/material/soup/cxx11/exercises/bag-unique", "trainings/material/soup/cxx11/exercises/group", "trainings/material/soup/cxx11/filesystem/topic", "trainings/material/soup/cxx11/group", "trainings/material/soup/graph", "trainings/material/soup/index", "trainings/material/soup/kernel/cdev-auto/screenplay", "trainings/material/soup/kernel/cdev-auto/slides", "trainings/material/soup/kernel/cdev-auto/topic", "trainings/material/soup/kernel/cdev-file-operations/screenplay", "trainings/material/soup/kernel/cdev-file-operations/slides", "trainings/material/soup/kernel/cdev-file-operations/topic", "trainings/material/soup/kernel/cdev-first-functionality/slides", "trainings/material/soup/kernel/cdev-first-functionality/topic", "trainings/material/soup/kernel/cdev-manual/screenplay", "trainings/material/soup/kernel/cdev-manual/slides", "trainings/material/soup/kernel/cdev-manual/topic", "trainings/material/soup/kernel/cdev-multiple-devices/slides", "trainings/material/soup/kernel/cdev-multiple-devices/topic", "trainings/material/soup/kernel/cdev-refactoring/screenplay", "trainings/material/soup/kernel/cdev-refactoring/slides", "trainings/material/soup/kernel/cdev-refactoring/topic", "trainings/material/soup/kernel/dma/slides", "trainings/material/soup/kernel/dma/topic", "trainings/material/soup/kernel/fedora-kernel-build/screenplay", "trainings/material/soup/kernel/fedora-kernel-build/topic", "trainings/material/soup/kernel/fedora-module-build/screenplay", "trainings/material/soup/kernel/fedora-module-build/topic", "trainings/material/soup/kernel/group", "trainings/material/soup/kernel/hello-world/slides", "trainings/material/soup/kernel/hello-world/topic", "trainings/material/soup/kernel/interrupt-coding/slides", "trainings/material/soup/kernel/interrupt-coding/topic", "trainings/material/soup/kernel/interrupt/slides", "trainings/material/soup/kernel/interrupt/topic", "trainings/material/soup/kernel/iomemory/slides", "trainings/material/soup/kernel/iomemory/topic", "trainings/material/soup/kernel/kmalloc/slides", "trainings/material/soup/kernel/kmalloc/topic", "trainings/material/soup/kernel/list/slides", "trainings/material/soup/kernel/list/topic", "trainings/material/soup/kernel/mutex-coding/slides", "trainings/material/soup/kernel/mutex-coding/topic", "trainings/material/soup/kernel/mutex/slides", "trainings/material/soup/kernel/mutex/topic", "trainings/material/soup/kernel/netdev/slides", "trainings/material/soup/kernel/netdev/topic", "trainings/material/soup/kernel/pci/slides", "trainings/material/soup/kernel/pci/topic", "trainings/material/soup/kernel/process-vs-atomic/slides", "trainings/material/soup/kernel/process-vs-atomic/topic", "trainings/material/soup/kernel/raspi-kernel-build/story", "trainings/material/soup/kernel/raspi-kernel-build/topic", "trainings/material/soup/kernel/sample-project", "trainings/material/soup/kernel/spinlock-coding/slides", "trainings/material/soup/kernel/spinlock-coding/topic", "trainings/material/soup/kernel/spinlock/slides", "trainings/material/soup/kernel/spinlock/topic", "trainings/material/soup/kernel/stub-sysprog-dup/topic", "trainings/material/soup/kernel/time_timer-coding/slides", "trainings/material/soup/kernel/time_timer-coding/topic", "trainings/material/soup/kernel/time_timer/slides", "trainings/material/soup/kernel/time_timer/topic", "trainings/material/soup/kernel/todo", "trainings/material/soup/kernel/usermem/screenplay", "trainings/material/soup/kernel/usermem/slides", "trainings/material/soup/kernel/usermem/topic", "trainings/material/soup/kernel/waitqueue/screenplay", "trainings/material/soup/kernel/waitqueue/slides", "trainings/material/soup/kernel/waitqueue/topic", "trainings/material/soup/kernel/workqueue/screenplay", "trainings/material/soup/kernel/workqueue/slides", "trainings/material/soup/kernel/workqueue/topic", "trainings/material/soup/linux/basics/archiving-compression/exercises", "trainings/material/soup/linux/basics/archiving-compression/group", "trainings/material/soup/linux/basics/archiving-compression/gzip", "trainings/material/soup/linux/basics/archiving-compression/overview", "trainings/material/soup/linux/basics/archiving-compression/tar", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2", "trainings/material/soup/linux/basics/exercises/group", "trainings/material/soup/linux/basics/group", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file", "trainings/material/soup/linux/basics/intro/environment", "trainings/material/soup/linux/basics/intro/exercises/fh-questions", "trainings/material/soup/linux/basics/intro/group", "trainings/material/soup/linux/basics/intro/login", "trainings/material/soup/linux/basics/intro/overview", "trainings/material/soup/linux/basics/intro/process", "trainings/material/soup/linux/basics/intro/process-tree", "trainings/material/soup/linux/basics/intro/wsl", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises", "trainings/material/soup/linux/basics/io-redirection-pipes/group", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes", "trainings/material/soup/linux/basics/permissions/basics", "trainings/material/soup/linux/basics/permissions/exercises/credentials", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat", "trainings/material/soup/linux/basics/permissions/exercises/group", "trainings/material/soup/linux/basics/permissions/exercises/private-directory", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/public-directory", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question", "trainings/material/soup/linux/basics/permissions/exercises/shared-file", "trainings/material/soup/linux/basics/permissions/group", "trainings/material/soup/linux/basics/permissions/setuid", "trainings/material/soup/linux/basics/permissions/setuid-livedemo", "trainings/material/soup/linux/basics/permissions/sticky", "trainings/material/soup/linux/basics/permissions/umask", "trainings/material/soup/linux/basics/shell/commandline", "trainings/material/soup/linux/basics/shell/configfiles", "trainings/material/soup/linux/basics/shell/cp", "trainings/material/soup/linux/basics/shell/cwd", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy", "trainings/material/soup/linux/basics/shell/exercises/fh-questions", "trainings/material/soup/linux/basics/shell/exercises/group", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size", "trainings/material/soup/linux/basics/shell/exercises/ls/group", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions", "trainings/material/soup/linux/basics/shell/file_dir_create_rm", "trainings/material/soup/linux/basics/shell/group", "trainings/material/soup/linux/basics/shell/links", "trainings/material/soup/linux/basics/shell/ls", "trainings/material/soup/linux/basics/shell/mv", "trainings/material/soup/linux/basics/shell/paths", "trainings/material/soup/linux/basics/text-tools/cat", "trainings/material/soup/linux/basics/text-tools/cut", "trainings/material/soup/linux/basics/text-tools/exercises", "trainings/material/soup/linux/basics/text-tools/find", "trainings/material/soup/linux/basics/text-tools/grep", "trainings/material/soup/linux/basics/text-tools/group", "trainings/material/soup/linux/basics/text-tools/head-tail", "trainings/material/soup/linux/basics/text-tools/less", "trainings/material/soup/linux/basics/text-tools/overview", "trainings/material/soup/linux/drafts/group", "trainings/material/soup/linux/drafts/yocto", "trainings/material/soup/linux/group", "trainings/material/soup/linux/hardware/brushless-motor/topic", "trainings/material/soup/linux/hardware/can/10-intro", "trainings/material/soup/linux/hardware/can/20-interfaces", "trainings/material/soup/linux/hardware/can/30-programming", "trainings/material/soup/linux/hardware/can/40-harware", "trainings/material/soup/linux/hardware/can/group", "trainings/material/soup/linux/hardware/group", "trainings/material/soup/linux/hardware/i2c/topic", "trainings/material/soup/linux/hardware/pwm/topic", "trainings/material/soup/linux/hardware/w1/topic", "trainings/material/soup/linux/ssh/basics", "trainings/material/soup/linux/ssh/exercises/copy-file", "trainings/material/soup/linux/ssh/exercises/copy-tree", "trainings/material/soup/linux/ssh/exercises/group", "trainings/material/soup/linux/ssh/exercises/pubkey", "trainings/material/soup/linux/ssh/group", "trainings/material/soup/linux/ssh/key-pair", "trainings/material/soup/linux/ssh/links", "trainings/material/soup/linux/ssh/portforwarding", "trainings/material/soup/linux/ssh/scp", "trainings/material/soup/linux/ssh/sshfs", "trainings/material/soup/linux/sysprog/basics/errorhandling", "trainings/material/soup/linux/sysprog/basics/group", "trainings/material/soup/linux/sysprog/basics/syscalls", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer", "trainings/material/soup/linux/sysprog/blocking-io/group", "trainings/material/soup/linux/sysprog/file-io/basics", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole", "trainings/material/soup/linux/sysprog/file-io/duplicate", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read", "trainings/material/soup/linux/sysprog/file-io/group", "trainings/material/soup/linux/sysprog/file-io/misc", "trainings/material/soup/linux/sysprog/group", "trainings/material/soup/linux/sysprog/intro-hw/get", "trainings/material/soup/linux/sysprog/intro-hw/group", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio", "trainings/material/soup/linux/sysprog/intro-hw/watch", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic", "trainings/material/soup/linux/sysprog/posix-threads/group", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock", "trainings/material/soup/linux/sysprog/process/commandline", "trainings/material/soup/linux/sysprog/process/group", "trainings/material/soup/linux/sysprog/process/tree", "trainings/material/soup/linux/sysprog/scheduling/basics", "trainings/material/soup/linux/sysprog/scheduling/group", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads", "trainings/material/soup/linux/sysprog/scheduling/questions", "trainings/material/soup/linux/sysprog/scheduling/realtime", "trainings/material/soup/linux/sysprog/scheduling/realtime-api", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency", "trainings/material/soup/linux/sysprog/sysprog_events/code/index", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay", "trainings/material/soup/linux/sysprog/sysprog_events/topic", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay", "trainings/material/soup/linux/sysprog/sysprog_signals/slides", "trainings/material/soup/linux/sysprog/sysprog_signals/topic", "trainings/material/soup/linux/toolchain/basics/topic", "trainings/material/soup/linux/toolchain/cmake/cross", "trainings/material/soup/linux/toolchain/cmake/local", "trainings/material/soup/linux/toolchain/cross/basics", "trainings/material/soup/linux/toolchain/cross/group", "trainings/material/soup/linux/toolchain/exercises/cross-build", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions", "trainings/material/soup/linux/toolchain/exercises/group", "trainings/material/soup/linux/toolchain/exercises/native-build", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain", "trainings/material/soup/linux/toolchain/group", "trainings/material/soup/linux/toolchain/raspberry-pi/group", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup", "trainings/material/soup/linux/toolchain/separate-compilation/topic", "trainings/material/soup/linux/toolchain/shared-libraries/topic", "trainings/material/soup/linux/toolchain/static-library/topic", "trainings/material/soup/python/advanced/closures/topic", "trainings/material/soup/python/advanced/comprehensions/topic", "trainings/material/soup/python/advanced/context-mgr/topic", "trainings/material/soup/python/advanced/decorators/topic", "trainings/material/soup/python/advanced/exceptions/topic", "trainings/material/soup/python/advanced/exec/topic", "trainings/material/soup/python/advanced/group", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic", "trainings/material/soup/python/advanced/iteration-generation/topic", "trainings/material/soup/python/advanced/modules", "trainings/material/soup/python/advanced/multithreading/basics", "trainings/material/soup/python/advanced/multithreading/group", "trainings/material/soup/python/advanced/multithreading/mutex", "trainings/material/soup/python/advanced/multithreading/questions", "trainings/material/soup/python/advanced/oo/abc/topic", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic", "trainings/material/soup/python/advanced/oo/constructor/topic", "trainings/material/soup/python/advanced/oo/group", "trainings/material/soup/python/advanced/oo/inheritance/topic", "trainings/material/soup/python/advanced/oo/methods/topic", "trainings/material/soup/python/advanced/oo/namedtuple/topic", "trainings/material/soup/python/advanced/oo/operator-overloading/topic", "trainings/material/soup/python/advanced/oo/properties/topic", "trainings/material/soup/python/advanced/oo/str-repr/topic", "trainings/material/soup/python/advanced/starargs/topic", "trainings/material/soup/python/basics/group", "trainings/material/soup/python/basics/installation", "trainings/material/soup/python/basics/python_0110_blahblah/topic", "trainings/material/soup/python/basics/python_0120_helloworld/topic", "trainings/material/soup/python/basics/python_0125_running/topic", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic", "trainings/material/soup/python/basics/python_0140_variables/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic", "trainings/material/soup/python/basics/python_0160_boolean/topic", "trainings/material/soup/python/basics/python_0170_if/topic", "trainings/material/soup/python/basics/python_0193_while/topic", "trainings/material/soup/python/basics/python_0200_sequential_types/topic", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic", "trainings/material/soup/python/basics/python_0220_for/topic", "trainings/material/soup/python/basics/python_0225_range/topic", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping", "trainings/material/soup/python/basics/python_0270_functions/slideshow", "trainings/material/soup/python/basics/python_0270_functions/topic", "trainings/material/soup/python/basics/python_0300_strings/topic", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic", "trainings/material/soup/python/basics/python_0320_strings_methods/topic", "trainings/material/soup/python/basics/python_0400_lists/topic", "trainings/material/soup/python/basics/python_0450_dictionaries/topic", "trainings/material/soup/python/basics/python_0460_sets/topic", "trainings/material/soup/python/basics/python_0500_files/topic", "trainings/material/soup/python/basics/python_1000_function_objects/topic", "trainings/material/soup/python/drafts/argparse/topic", "trainings/material/soup/python/drafts/group", "trainings/material/soup/python/drafts/matplotlib/topic", "trainings/material/soup/python/drafts/setuptools/topic", "trainings/material/soup/python/exercises/csv/csv-db", "trainings/material/soup/python/exercises/csv/csv-module", "trainings/material/soup/python/exercises/csv/group", "trainings/material/soup/python/exercises/group", "trainings/material/soup/python/exercises/herdt/boolean", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers", "trainings/material/soup/python/exercises/herdt/greet", "trainings/material/soup/python/exercises/herdt/group", "trainings/material/soup/python/exercises/herdt/max_numbers", "trainings/material/soup/python/exercises/herdt/swap", "trainings/material/soup/python/exercises/herdt/username_password", "trainings/material/soup/python/exercises/legacy/cmdline_digit", "trainings/material/soup/python/exercises/legacy/dict_keyerror", "trainings/material/soup/python/exercises/legacy/distill", "trainings/material/soup/python/exercises/legacy/fibonacci-generator", "trainings/material/soup/python/exercises/legacy/for_primeness", "trainings/material/soup/python/exercises/legacy/group", "trainings/material/soup/python/exercises/legacy/join_function", "trainings/material/soup/python/exercises/legacy/max_numbers", "trainings/material/soup/python/exercises/legacy/max_numbers_function", "trainings/material/soup/python/exercises/legacy/mixed_list_executable", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive", "trainings/material/soup/python/exercises/legacy/passwd", "trainings/material/soup/python/exercises/legacy/primeness_function", "trainings/material/soup/python/exercises/legacy/revert", "trainings/material/soup/python/exercises/legacy/string-rightjustify", "trainings/material/soup/python/exercises/legacy/uniq_function", "trainings/material/soup/python/exercises/legacy/uniq_generator", "trainings/material/soup/python/exercises/legacy/wc", "trainings/material/soup/python/exercises/legacy/while_primeness", "trainings/material/soup/python/exercises/sensors/group", "trainings/material/soup/python/exercises/sensors/project-setup", "trainings/material/soup/python/exercises/sensors/sensor-const", "trainings/material/soup/python/exercises/userdb/csvdictreader", "trainings/material/soup/python/exercises/userdb/csvdictreader-function", "trainings/material/soup/python/exercises/userdb/csvreader", "trainings/material/soup/python/exercises/userdb/csvreader-function", "trainings/material/soup/python/exercises/userdb/group", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv", "trainings/material/soup/python/exercises/userdb/user-class-person", "trainings/material/soup/python/exercises/userdb/user_json", "trainings/material/soup/python/exercises/userdb/userdb_csv", "trainings/material/soup/python/graph", "trainings/material/soup/python/group", "trainings/material/soup/python/link-collection", "trainings/material/soup/python/misc/ai/group", "trainings/material/soup/python/misc/ai/k-means", "trainings/material/soup/python/misc/ai/linear-regression/code", "trainings/material/soup/python/misc/ai/linear-regression/history_data", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression", "trainings/material/soup/python/misc/ai/linear-regression/topic", "trainings/material/soup/python/misc/ai/machine-learning-intro", "trainings/material/soup/python/misc/csv/topic", "trainings/material/soup/python/misc/db/dbapi2", "trainings/material/soup/python/misc/db/group", "trainings/material/soup/python/misc/db/postgres", "trainings/material/soup/python/misc/db/sqlite3", "trainings/material/soup/python/misc/encoding/topic", "trainings/material/soup/python/misc/group", "trainings/material/soup/python/misc/import", "trainings/material/soup/python/misc/mqtt/topic", "trainings/material/soup/python/misc/pandas/add_row", "trainings/material/soup/python/misc/pandas/basics", "trainings/material/soup/python/misc/pandas/filters", "trainings/material/soup/python/misc/pandas/group", "trainings/material/soup/python/misc/pandas/iloc", "trainings/material/soup/python/misc/pandas/indexes", "trainings/material/soup/python/misc/pandas/loc", "trainings/material/soup/python/misc/pandas/mod_col", "trainings/material/soup/python/misc/python_5550_xml_etree/topic", "trainings/material/soup/python/misc/vscode", "trainings/material/soup/python/swdev/group", "trainings/material/soup/python/swdev/pip/screenplay", "trainings/material/soup/python/swdev/pip/slides", "trainings/material/soup/python/swdev/pip/topic", "trainings/material/soup/python/swdev/pypi", "trainings/material/soup/python/swdev/pytest/group", "trainings/material/soup/python/swdev/pytest/intro", "trainings/material/soup/python/swdev/unittest", "trainings/material/soup/python/swdev/venv/screenplay", "trainings/material/soup/python/swdev/venv/slides", "trainings/material/soup/python/swdev/venv/topic", "trainings/material/soup/unittest/group", "trainings/material/soup/unittest/unittest_gtest_basics/code/index", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay", "trainings/material/soup/unittest/unittest_gtest_basics/topic", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay", "trainings/material/soup/unittest/unittest_gtest_cmake/topic", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay", "trainings/material/soup/unittest/unittest_gtest_fixture/topic", "trainings/org", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16", "trainings/repertoire/bash", "trainings/repertoire/c-like/c", "trainings/repertoire/c-like/c-advanced", "trainings/repertoire/c-like/cxx", "trainings/repertoire/c-like/cxx11", "trainings/repertoire/c-like/index", "trainings/repertoire/cmake", "trainings/repertoire/design-patterns/design-patterns", "trainings/repertoire/embedded", "trainings/repertoire/kernel-programming-basics", "trainings/repertoire/linux-basics", "trainings/repertoire/make", "trainings/repertoire/python/advanced", "trainings/repertoire/python/basics", "trainings/repertoire/python/herdt", "trainings/repertoire/raspi-hands-on", "trainings/repertoire/svn", "trainings/repertoire/sysprog/basics", "trainings/repertoire/sysprog/fortgeschrittenes", "trainings/repertoire/sysprog/index", "trainings/repertoire/sysprog/multithreading", "trainings/repertoire/sysprog/network", "trainings/repertoire/unittests"], "filenames": ["about/myself/contact.rst", "about/myself/cv-de.rst", "about/myself/index.rst", "about/myself/projects-de.rst", "about/myself/skills-de.rst", "about/site/courses/angebot-2023-10-12.rst", "about/site/courses/index.rst", "about/site/courses/samples/detail/2021-04-12/Notebook.ipynb", "about/site/courses/samples/detail/2021-04-12/index.rst", "about/site/courses/samples/detail/2021-04-12/notebook-wrapper.rst", "about/site/courses/samples/detail/index.rst", "about/site/courses/samples/index.rst", "about/site/courses/templates.rst", "about/site/index.rst", "about/site/opentraining/index.rst", "about/site/opentraining/misc/draft-topics/index.rst", "about/site/opentraining/misc/index.rst", "about/site/opentraining/misc/s5/index.rst", "about/site/opentraining/misc/s5/tests/index.rst", "about/site/opentraining/misc/s5/tests/test-slides.rst", "about/site/opentraining/misc/screencast.rst", "about/site/opentraining/misc/topics-to-write.rst", "about/site/opentraining/netidee/index.rst", "about/site/opentraining/netidee/netidee-antrag.rst", "about/site/opentraining/netidee/netidee-video-2min.rst", "about/site/opentraining/usecases/agenda-subtract-known.rst", "about/site/opentraining/usecases/duration.rst", "about/site/opentraining/usecases/index.rst", "about/site/opentraining/usecases/linking.rst", "about/site/opentraining/usecases/menu.rst", "about/site/opentraining/usecases/slides.rst", "about/site/recipes/camera-ssh.rst", "about/site/recipes/emoji.rst", "about/site/recipes/index.rst", "about/site/recipes/isoamsa.rst", "about/site/recipes/isoamsr.rst", "about/site/recipes/isonum.rst", "about/site/recipes/layout-test.rst", "about/site/recipes/mathml.rst", "about/site/recipes/rst-cheatsheet.rst", "about/site/recipes/sphinxish.rst", "about/site/work-in-progress/2022-04-13/index.rst", "about/site/work-in-progress/2022-04-13/seminar/block-before-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/clean-code-craftsmanship.rst", "about/site/work-in-progress/2022-04-13/seminar/enter-googletest.rst", "about/site/work-in-progress/2022-04-13/seminar/index.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/find-error.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-existing-files.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/bugs/overwrite-store-content-on-read.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/csv.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/features/other-indexes.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-interface.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/backingstore-monolithic.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/group.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/pass-store-in-ctor.rst", "about/site/work-in-progress/2022-04-13/seminar/tasks/refactoring/store-enum-switch.rst", "about/site/work-in-progress/blink/glt.rst", "about/site/work-in-progress/blink/index.rst", "about/site/work-in-progress/blink/installation.rst", "about/site/work-in-progress/blink/pycon-2023.rst", "about/site/work-in-progress/blink/screenplay.rst", "about/site/work-in-progress/blog-queue/hochkoenig/index.rst", "about/site/work-in-progress/blog-queue/index.rst", "about/site/work-in-progress/blog-queue/sphinx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_build.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_iface.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_oo_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/cxx_unittest.rst", "about/site/work-in-progress/fh-joanneum/2019/ec.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-1.rst", "about/site/work-in-progress/fh-joanneum/2019/embedded-computing-2.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race.rst", "about/site/work-in-progress/fh-joanneum/2019/exercise_mt_race_fixed.rst", "about/site/work-in-progress/fh-joanneum/2019/git.rst", "about/site/work-in-progress/fh-joanneum/2019/index.rst", "about/site/work-in-progress/fh-joanneum/2019/linux.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_dev_mgmt.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_avg_sensor_parallel.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_led_display.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/linux_gpio.rst", "about/site/work-in-progress/fh-joanneum/2019/mt.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_lock.rst", "about/site/work-in-progress/fh-joanneum/2019/mt_wait.rst", "about/site/work-in-progress/fh-joanneum/2019/py_basics.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_avg_display.rst", "about/site/work-in-progress/fh-joanneum/2019/py_exercise_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web.rst", "about/site/work-in-progress/fh-joanneum/2019/py_web_sensors.rst", "about/site/work-in-progress/fh-joanneum/2019/python.rst", "about/site/work-in-progress/fh-joanneum/2020/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-08.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-10-homework.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-21.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-22,24.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-03-28.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/2022-04-01.rst", "about/site/work-in-progress/fh-joanneum/2020/ss2022-log/index.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-code-general.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022-questions-yesno.rst", "about/site/work-in-progress/fh-joanneum/2020/ws2022/lab-exam-2023-01-17.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30.rst", "about/site/work-in-progress/fh-joanneum/2021/exam-2023-06-30-solved.rst", "about/site/work-in-progress/fh-joanneum/2021/git/git.rst", "about/site/work-in-progress/fh-joanneum/2021/index.rst", "about/site/work-in-progress/fh-joanneum/2021/ss2023.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-basic-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/boiling-pot-full-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-csv-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-integration.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/datalogger-mqtt-sink.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/display-infrastructure.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/group.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/libgpiod-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/mqtt-tkinter.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/pwm-display.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sensor-w1.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/switch-interface.rst", "about/site/work-in-progress/fh-joanneum/2021/tasks/sysfs-gpio-switch.rst", "about/site/work-in-progress/fh-joanneum/2021/ws2023-2024.rst", "about/site/work-in-progress/fh-joanneum/index.rst", "about/site/work-in-progress/git.rst", "about/site/work-in-progress/index.rst", "about/site/work-in-progress/packaging/index.rst", "about/site/work-in-progress/project-xxx/audio-chip.rst", "about/site/work-in-progress/project-xxx/debian-config.rst", "about/site/work-in-progress/project-xxx/debian-kernel-package.rst", "about/site/work-in-progress/project-xxx/hardware-bringup.rst", "about/site/work-in-progress/project-xxx/index.rst", "about/site/work-in-progress/project-xxx/kernel-upgrade-dirty.rst", "about/site/work-in-progress/project-xxx/wait-hardware.rst", "about/site/work-in-progress/project-xxx/yocto-kernel.rst", "about/site/work-in-progress/python-training.rst", "about/site/work-in-progress/screencast.rst", "about/site/work-in-progress/seo.rst", "about/site/work-in-progress/stacks.rst", "about/site/work-in-progress/todo-misc.rst", "about/site/work-in-progress/web.rst", "blog/2010/07/beagleboard-how-to-repair-nand-also-known-as-40w.rst", "blog/2011/01/porting-to-linux-there-s-always-a-better-way.rst", "blog/2011/01/saving-solid-state-disk-life--gentoo.rst", "blog/2012/04/Why-ps-sucks.rst", "blog/2020/02/fedora-kernel-build.rst", "blog/2020/03/custom-domain-gh-pages.rst", "blog/2020/03/ms-teams-on-linux.rst", "blog/2020/03/sphinx-gh-pages.rst", "blog/2020/04/bbb.rst", "blog/2020/09/traunstein.rst", "blog/2021/08/grintovec.rst", "blog/2021/09/xps13-shim-mok-brick/index.rst", "blog/2022/09/cross-raspi.rst", "blog/index.rst", "index.rst", "trainings/codex.rst", "trainings/exercises.rst", "trainings/index.rst", "trainings/log/detail/2013-10-01/index.rst", "trainings/log/detail/2015-11-30/index.rst", "trainings/log/detail/2019-10-28/LiveHacking.ipynb", "trainings/log/detail/2019-10-28/index.rst", "trainings/log/detail/2019-11-12/code/BigPlan.ipynb", "trainings/log/detail/2019-11-12/code/LiveHacking.ipynb", "trainings/log/detail/2019-11-12/index.rst", "trainings/log/detail/2020-01-10/Proposal.rst", "trainings/log/detail/2020-01-10/index.rst", "trainings/log/detail/2020-03-30/code/exercise-string/index.rst", "trainings/log/detail/2020-03-30/index.rst", "trainings/log/detail/2020-03-30/install-googletest.rst", "trainings/log/detail/2020-03-30/setup.rst", "trainings/log/detail/2020-03-30/vs-code.rst", "trainings/log/detail/2020-05-12/code/index.rst", "trainings/log/detail/2020-05-12/index.rst", "trainings/log/detail/2020-05-18/Livehacking.ipynb", "trainings/log/detail/2020-05-18/code/index.rst", "trainings/log/detail/2020-05-18/index.rst", "trainings/log/detail/2020-09-07/index.rst", "trainings/log/detail/2020-09-28/index.rst", "trainings/log/detail/2020-10-19/Notebook.ipynb", "trainings/log/detail/2020-10-19/index.rst", "trainings/log/detail/2020-11-03/index.rst", "trainings/log/detail/2020-11-23/index.rst", "trainings/log/detail/2020-11-30/index.rst", "trainings/log/detail/2021-01-13/Notebook.ipynb", "trainings/log/detail/2021-01-13/index.rst", "trainings/log/detail/2021-01-13/notebook-wrapper.rst", "trainings/log/detail/2021-02-22/index.rst", "trainings/log/detail/2021-03-08/index.rst", "trainings/log/detail/2021-03-15/Notebook.ipynb", "trainings/log/detail/2021-03-15/index.rst", "trainings/log/detail/2021-03-22/Notebook.ipynb", "trainings/log/detail/2021-03-22/index.rst", "trainings/log/detail/2021-03-29/index.rst", "trainings/log/detail/2021-04-12/Notebook.ipynb", "trainings/log/detail/2021-04-12/index.rst", "trainings/log/detail/2021-04-12/notebook-wrapper.rst", "trainings/log/detail/2021-05-03/Notebook.ipynb", "trainings/log/detail/2021-05-03/index.rst", "trainings/log/detail/2021-05-03/notebook-wrapper.rst", "trainings/log/detail/2021-05-25/Notebook.ipynb", "trainings/log/detail/2021-05-25/index.rst", "trainings/log/detail/2021-06-14/index.rst", "trainings/log/detail/2021-07-12/index.rst", "trainings/log/detail/2021-08-02/index.rst", "trainings/log/detail/2021-08-02/notebook.ipynb", "trainings/log/detail/2021-08-23/Notebook.ipynb", "trainings/log/detail/2021-08-23/exercises/sap-cleaned.rst", "trainings/log/detail/2021-08-23/index.rst", "trainings/log/detail/2021-08-23/notebook-wrapper.rst", "trainings/log/detail/2021-08-31/Notebook.ipynb", "trainings/log/detail/2021-08-31/index.rst", "trainings/log/detail/2021-08-31/notebook-wrapper.rst", "trainings/log/detail/2021-11-17/Notebook.ipynb", "trainings/log/detail/2021-11-17/index.rst", "trainings/log/detail/2021-11-17/notebook-wrapper.rst", "trainings/log/detail/2021-12-01/2021-12-01.ipynb", "trainings/log/detail/2021-12-01/index.rst", "trainings/log/detail/2021-12-01/notebook-wrapper.rst", "trainings/log/detail/2021-12-06/index.rst", "trainings/log/detail/2022-01-17/index.rst", "trainings/log/detail/2022-01-17/notebook.ipynb", "trainings/log/detail/2022-01-17/notebook-wrapper.rst", "trainings/log/detail/2022-02-23/Notebook.ipynb", "trainings/log/detail/2022-02-23/index.rst", "trainings/log/detail/2022-02-23/notebook-wrapper.rst", "trainings/log/detail/2022-03-15/Notebook.ipynb", "trainings/log/detail/2022-03-15/index.rst", "trainings/log/detail/2022-03-15/notebook-wrapper.rst", "trainings/log/detail/2022-03-23/Notebook.ipynb", "trainings/log/detail/2022-03-23/index.rst", "trainings/log/detail/2022-03-23/notebook-wrapper.rst", "trainings/log/detail/2022-04-05/index.rst", "trainings/log/detail/2022-04-05/notebook.ipynb", "trainings/log/detail/2022-04-05/notebook-wrapper.rst", "trainings/log/detail/2022-04-25/index.rst", "trainings/log/detail/2022-04-25/notebook.ipynb", "trainings/log/detail/2022-04-25/notebook-wrapper.rst", "trainings/log/detail/2022-05-02/index.rst", "trainings/log/detail/2022-05-02/notebook.ipynb", "trainings/log/detail/2022-05-02/notebook-wrapper.rst", "trainings/log/detail/2022-05-16/index.rst", "trainings/log/detail/2022-05-16/notebook.ipynb", "trainings/log/detail/2022-05-16/notebook-wrapper.rst", "trainings/log/detail/2022-06-14/2022-05-11.rst", "trainings/log/detail/2022-06-14/index.rst", "trainings/log/detail/2022-07-26/index.rst", "trainings/log/detail/2022-10-03/index.rst", "trainings/log/detail/2022-10-11/index.rst", "trainings/log/detail/2022-10-24/index.rst", "trainings/log/detail/2022-11-07/index.rst", "trainings/log/detail/2022-11-07/notebook.ipynb", "trainings/log/detail/2022-11-07/notebook-wrapper.rst", "trainings/log/detail/2022-11-16/index.rst", "trainings/log/detail/2022-11-16/notebook.ipynb", "trainings/log/detail/2022-11-16/notebook-wrapper.rst", "trainings/log/detail/2023-01-23/index.rst", "trainings/log/detail/2023-02-13/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/Demo/demo-notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/demo.rst", "trainings/log/detail/2023-03-13-Python-SAP/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/notebook.ipynb", "trainings/log/detail/2023-03-13-Python-SAP/notebook-wrapper.rst", "trainings/log/detail/2023-03-13-Python-SAP/original-agenda.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/index.rst", "trainings/log/detail/2023-03-13-Python-SAP/sap-dataset/sap-dataset.ipynb", "trainings/log/detail/2023-03-20--C++-embedded/index.rst", "trainings/log/detail/2023-03-28--Python-Clean-Code/index.rst", "trainings/log/detail/2023-04-18--C++-embedded/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-04-24--Python-Advanced/index.rst", "trainings/log/detail/2023-04-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-04-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-05-15--Python-Basics/agenda.rst", "trainings/log/detail/2023-05-15--Python-Basics/index.rst", "trainings/log/detail/2023-05-15--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-05-15--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-05-23--Linux-Basics/agenda.rst", "trainings/log/detail/2023-05-23--Linux-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/agenda.rst", "trainings/log/detail/2023-06-20--Python-Basics/index.rst", "trainings/log/detail/2023-06-20--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-06-20--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-07-03--CMake/agenda.rst", "trainings/log/detail/2023-07-03--CMake/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/index.rst", "trainings/log/detail/2023-09-25--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-09-25--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-09--Python-Advanced/index.rst", "trainings/log/detail/2023-10-09--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-09--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-10-24--Python-Advanced/agenda.rst", "trainings/log/detail/2023-10-24--Python-Advanced/index.rst", "trainings/log/detail/2023-10-24--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-10-24--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-22--Python-Advanced/agenda.rst", "trainings/log/detail/2023-11-22--Python-Advanced/index.rst", "trainings/log/detail/2023-11-22--Python-Advanced/notebook.ipynb", "trainings/log/detail/2023-11-22--Python-Advanced/notebook-wrapper.rst", "trainings/log/detail/2023-11-27--CMake/agenda.rst", "trainings/log/detail/2023-11-27--CMake/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/agenda.rst", "trainings/log/detail/2023-11-29--Python-Basics/index.rst", "trainings/log/detail/2023-11-29--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-11-29--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-12-04--C++-Advanced/agenda.rst", "trainings/log/detail/2023-12-04--C++-Advanced/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/agenda.rst", "trainings/log/detail/2023-12-18--Python-Basics/index.rst", "trainings/log/detail/2023-12-18--Python-Basics/notebook.ipynb", "trainings/log/detail/2023-12-18--Python-Basics/notebook-wrapper.rst", "trainings/log/detail/2023-XX-XX-C++-embedded/index.rst", "trainings/log/detail/2023-XX-XX-Python-SAP/index.rst", "trainings/log/detail/2024-XX-XX--Python-Basics/agenda.rst", "trainings/log/detail/FH-ECE-19/EC1/2021-05-12/screenplay-checker.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-abc.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-oo.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/blinklicht-unittest.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/fh-group.rst", "trainings/log/detail/FH-ECE-19/EC1/Exercises/file-read.rst", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-20-G2.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/2021-05-21.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Checker-Explanations.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Datatypes.ipynb", "trainings/log/detail/FH-ECE-19/EC1/Notebooks/Functions.ipynb", "trainings/log/detail/FH-ECE-19/EC1/cloud-computer.rst", "trainings/log/detail/FH-ECE-19/EC1/formales.rst", "trainings/log/detail/FH-ECE-19/EC1/index.rst", "trainings/log/detail/FH-ECE-19/EC1/log.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-de.rst", "trainings/log/detail/FH-ECE-19/EC1/lv-en.rst", "trainings/log/detail/FH-ECE-19/EC1/plan.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-07.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-10-28.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-11-29.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2021-12-14.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-10.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-01-12.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/2022-02-15.rst", "trainings/log/detail/FH-ECE-19/EC2/agenda-log/index.rst", "trainings/log/detail/FH-ECE-19/EC2/index.rst", "trainings/log/detail/FH-ECE-19/EC2/test-material.rst", "trainings/log/detail/FH-ECE-19/index.rst", "trainings/log/detail/index.rst", "trainings/log/index.rst", "trainings/material/index.rst", "trainings/material/soup/c/010-introduction/000-installation/topic.rst", "trainings/material/soup/c/010-introduction/010-introduction/topic.rst", "trainings/material/soup/c/010-introduction/020-getting-started/topic.rst", "trainings/material/soup/c/010-introduction/030-variables-and-arithmetic-expressions/topic.rst", "trainings/material/soup/c/010-introduction/040-exercise-fahrenheit-float/topic.rst", "trainings/material/soup/c/010-introduction/050-the-for-statement/topic.rst", "trainings/material/soup/c/010-introduction/060-exercise-fahrenheit-for/topic.rst", "trainings/material/soup/c/010-introduction/070-symbolic-constants/topic.rst", "trainings/material/soup/c/010-introduction/080-exercise-fahrenheit-cpp/topic.rst", "trainings/material/soup/c/010-introduction/090-character-input-and-output/topic.rst", "trainings/material/soup/c/010-introduction/100-exercise-wc/topic.rst", "trainings/material/soup/c/010-introduction/110-arrays/topic.rst", "trainings/material/soup/c/010-introduction/120-exercise-histogram/topic.rst", "trainings/material/soup/c/010-introduction/130-functions/topic.rst", "trainings/material/soup/c/010-introduction/140-exercise-power-declaration/topic.rst", "trainings/material/soup/c/010-introduction/150-character-arrays/topic.rst", "trainings/material/soup/c/010-introduction/160-exercise-string-read-line/topic.rst", "trainings/material/soup/c/010-introduction/170-external-variables-and-scope/topic.rst", "trainings/material/soup/c/010-introduction/group.rst", "trainings/material/soup/c/020-types-operators-expressions/010-introduction/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/020-variable-names/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/030-data-types-and-sizes/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/040-constants/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/050-declarations/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/060-arithmetic-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/070-relational-and-logical-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/080-type-conversions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/090-increment-and-decrement-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/100-exercise-string-reduce/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/110-bitwise-operators/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/120-assignment-operators-and-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/130-conditional-expressions/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/140-precedence-and-order-of-evaluation/topic.rst", "trainings/material/soup/c/020-types-operators-expressions/group.rst", "trainings/material/soup/c/030-program-flow/010-statements-and-blocks/topic.rst", "trainings/material/soup/c/030-program-flow/020-if-else/topic.rst", "trainings/material/soup/c/030-program-flow/030-else-if/topic.rst", "trainings/material/soup/c/030-program-flow/040-switch/topic.rst", "trainings/material/soup/c/030-program-flow/050-loops-while-and-for/topic.rst", "trainings/material/soup/c/030-program-flow/060-loops-do-while/topic.rst", "trainings/material/soup/c/030-program-flow/070-break-and-continue/topic.rst", "trainings/material/soup/c/030-program-flow/080-goto-and-labels/topic.rst", "trainings/material/soup/c/030-program-flow/group.rst", "trainings/material/soup/c/040-functions-and-program-structure/010-basics-of-functions/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/020-external-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/030-header-files/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/040-static-variables/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/050-c-preprocessor/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/060-c-preprocessor-advanced/topic.rst", "trainings/material/soup/c/040-functions-and-program-structure/group.rst", "trainings/material/soup/c/050-pointers-and-arrays/010-pointers-and-addresses/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/020-pointers-and-function-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/030-exercise-swap/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/040-pointers-and-arrays/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/050-command-line-arguments/topic.rst", "trainings/material/soup/c/050-pointers-and-arrays/group.rst", "trainings/material/soup/c/060-structures/010-basics-of-structures/topic.rst", "trainings/material/soup/c/060-structures/020-structures-and-functions/topic.rst", "trainings/material/soup/c/060-structures/030-typedef/topic.rst", "trainings/material/soup/c/060-structures/group.rst", "trainings/material/soup/c/070-memory/010-malloc/topic.rst", "trainings/material/soup/c/070-memory/020-exercise-linked-list/topic.rst", "trainings/material/soup/c/070-memory/group.rst", "trainings/material/soup/c/080-advanced-language-features/010-volatile/topic.rst", "trainings/material/soup/c/080-advanced-language-features/020-atomic/topic.rst", "trainings/material/soup/c/080-advanced-language-features/030-alignment/topic.rst", "trainings/material/soup/c/080-advanced-language-features/group.rst", "trainings/material/soup/c/090-program-sanity/010-introduction/topic.rst", "trainings/material/soup/c/090-program-sanity/020-integral-types/topic.rst", "trainings/material/soup/c/090-program-sanity/030-discrete-values/topic.rst", "trainings/material/soup/c/090-program-sanity/040-static/topic.rst", "trainings/material/soup/c/090-program-sanity/050-const/topic.rst", "trainings/material/soup/c/090-program-sanity/060-struct-initialization/topic.rst", "trainings/material/soup/c/090-program-sanity/070-explicit-type-safety/topic.rst", "trainings/material/soup/c/090-program-sanity/080-valgrind/topic.rst", "trainings/material/soup/c/090-program-sanity/group.rst", "trainings/material/soup/c/100-performance/010-introduction/topic.rst", "trainings/material/soup/c/100-performance/020-computebound/topic.rst", "trainings/material/soup/c/100-performance/030-memory/topic.rst", "trainings/material/soup/c/100-performance/group.rst", "trainings/material/soup/c/110-profiling/010-introduction/topic.rst", "trainings/material/soup/c/110-profiling/020-gprof/topic.rst", "trainings/material/soup/c/110-profiling/030-callgrind/topic.rst", "trainings/material/soup/c/110-profiling/040-oprofile/topic.rst", "trainings/material/soup/c/110-profiling/group.rst", "trainings/material/soup/c/group.rst", "trainings/material/soup/clean-code/book-messages.rst", "trainings/material/soup/clean-code/craft-sw.rst", "trainings/material/soup/clean-code/group.rst", "trainings/material/soup/clean-code/intro-python/livehacking.rst", "trainings/material/soup/cmake/basics.rst", "trainings/material/soup/cmake/configure_file.rst", "trainings/material/soup/cmake/cxx-and-rants.rst", "trainings/material/soup/cmake/external-dependencies.rst", "trainings/material/soup/cmake/group.rst", "trainings/material/soup/cmake/installation.rst", "trainings/material/soup/cmake/libraries.rst", "trainings/material/soup/cmake/optional-code-approach-1.rst", "trainings/material/soup/cmake/optional-code-approach-2.rst", "trainings/material/soup/cmake/optional-code-problem.rst", "trainings/material/soup/cmake/shared-libraries.rst", "trainings/material/soup/cmake/structure.rst", "trainings/material/soup/cmake/targets-properties.rst", "trainings/material/soup/cmake/testing.rst", "trainings/material/soup/cxx-code/index.rst", "trainings/material/soup/cxx-design-patterns/abstract-factory/abstract-factory.rst", "trainings/material/soup/cxx-design-patterns/adapter/adapter.rst", "trainings/material/soup/cxx-design-patterns/command/command.rst", "trainings/material/soup/cxx-design-patterns/command/socialdb.rst", "trainings/material/soup/cxx-design-patterns/composite/composite.rst", "trainings/material/soup/cxx-design-patterns/decorator/decorator.rst", "trainings/material/soup/cxx-design-patterns/group.rst", "trainings/material/soup/cxx-design-patterns/heating-screenplay/heating-screenplay.rst", "trainings/material/soup/cxx-design-patterns/interpreter/interpreter.rst", "trainings/material/soup/cxx-design-patterns/observer/observer.rst", "trainings/material/soup/cxx-design-patterns/oo-principles.rst", "trainings/material/soup/cxx-design-patterns/proxy/proxy.rst", "trainings/material/soup/cxx-design-patterns/sensor-hierarchy.rst", "trainings/material/soup/cxx-design-patterns/singleton/singleton.rst", "trainings/material/soup/cxx-design-patterns/uml/uml.rst", "trainings/material/soup/cxx-exercises/design-patterns/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/abstract-factory.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/command.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/composite.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/decorator.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/group.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-and-adapter.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/interpreter-basic.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/observer.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-remote.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/proxy-round.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-flexible-strict.rst", "trainings/material/soup/cxx-exercises/design-patterns/solutions/singleton-inflexible.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-loop-function.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-no-polymorphism.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/exercise-FH-sensor-oo-random-sensor.rst", "trainings/material/soup/cxx-exercises/fh-sensor-oo-first-try/group.rst", "trainings/material/soup/cxx-exercises/group.rst", "trainings/material/soup/cxx-exercises/nopoly-display-led-stripe/display-led-stripe-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-hysteresis/hysteresis-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensor-avg/sensor-avg-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-const-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-sensors-core/sensor-random-nopoly.rst", "trainings/material/soup/cxx-exercises/nopoly-switch-mock/switch-mock-nopoly.rst", "trainings/material/soup/cxx-exercises/oo-shapes/shapes.rst", "trainings/material/soup/cxx-exercises/project-setup.rst", "trainings/material/soup/cxx-exercises/sensor-interface/sensor-interface.rst", "trainings/material/soup/cxx-exercises/sensor-w1-factory/sensor-w1-factory.rst", "trainings/material/soup/cxx-exercises/sensor-w1/sensor-w1.rst", "trainings/material/soup/cxx-exercises/stl/algo.rst", "trainings/material/soup/cxx-exercises/stl/filter-generic.rst", "trainings/material/soup/cxx-exercises/stl/filter-greater-10.rst", "trainings/material/soup/cxx-exercises/stl/filter-odd.rst", "trainings/material/soup/cxx-exercises/stl/group.rst", "trainings/material/soup/cxx-exercises/stl/map.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/group.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-no-overwrite.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/insert-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/lookup-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/no-memleak.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-not-found.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/remove-sunny.rst", "trainings/material/soup/cxx-exercises/stl/sensor-repository/size-const.rst", "trainings/material/soup/cxx-exercises/stl/uniq.rst", "trainings/material/soup/cxx-exercises/stl/vector.rst", "trainings/material/soup/cxx-todo/index.rst", "trainings/material/soup/cxx/cxx_class_templates/code/index.rst", "trainings/material/soup/cxx/cxx_class_templates/screenplay.rst", "trainings/material/soup/cxx/cxx_class_templates/topic.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/code/index.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/screenplay.rst", "trainings/material/soup/cxx/cxx_dynamic_memory/topic.rst", "trainings/material/soup/cxx/cxx_global_initialization/code/index.rst", "trainings/material/soup/cxx/cxx_global_initialization/screenplay.rst", "trainings/material/soup/cxx/cxx_global_initialization/topic.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/code/index.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/screenplay.rst", "trainings/material/soup/cxx/cxx_inheritance_virtual/topic.rst", "trainings/material/soup/cxx/cxx_ownership_raii/code/index.rst", "trainings/material/soup/cxx/cxx_ownership_raii/screenplay.rst", "trainings/material/soup/cxx/cxx_ownership_raii/topic.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/code/index.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/screenplay.rst", "trainings/material/soup/cxx/cxx_stl_container_intro/topic.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/code/index.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/screenplay.rst", "trainings/material/soup/cxx/cxx_templates_vs_interfaces/topic.rst", "trainings/material/soup/cxx/group.rst", "trainings/material/soup/cxx03/001-introduction/topic.rst", "trainings/material/soup/cxx03/020-data-encapsulation/c.rst", "trainings/material/soup/cxx03/020-data-encapsulation/copy-basics.rst", "trainings/material/soup/cxx03/020-data-encapsulation/cpp-introduction.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-custom.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-default.rst", "trainings/material/soup/cxx03/020-data-encapsulation/ctor-dtor.rst", "trainings/material/soup/cxx03/020-data-encapsulation/group.rst", "trainings/material/soup/cxx03/020-data-encapsulation/initializer-list.rst", "trainings/material/soup/cxx03/020-data-encapsulation/object-copy.rst", "trainings/material/soup/cxx03/030-functions-and-methods/010-overloading/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/020-methods/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/030-const/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/040-this/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/050-references/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/060-static/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/065-static-member-variables/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/070-operators/topic.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-cuboid.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-point3d.rst", "trainings/material/soup/cxx03/030-functions-and-methods/exercises-fh/class-rectangle.rst", "trainings/material/soup/cxx03/030-functions-and-methods/group.rst", "trainings/material/soup/cxx03/040-exceptions/010-basics/topic.rst", "trainings/material/soup/cxx03/040-exceptions/020-try-catch/topic.rst", "trainings/material/soup/cxx03/040-exceptions/group.rst", "trainings/material/soup/cxx03/050-templates/010-function-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/020-class-templates/topic.rst", "trainings/material/soup/cxx03/050-templates/group.rst", "trainings/material/soup/cxx03/060-stl/010-basics/algo-copy.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-algo.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-basics.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-difference.rst", "trainings/material/soup/cxx03/060-stl/010-basics/pointer-arith-out-of-range.rst", "trainings/material/soup/cxx03/060-stl/010-basics/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/topic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-and-copy.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-basic.rst", "trainings/material/soup/cxx03/060-stl/015-vector-copy-etc/vector-pointer-arith.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/binary_search.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/find_if.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/for_each.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/group.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/lower_bound.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/reverse_copy.rst", "trainings/material/soup/cxx03/060-stl/020-algorithm/sort.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/group.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/list.rst", "trainings/material/soup/cxx03/060-stl/040-sequential-containers/vector.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/basics.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/group.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-init-fill.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-insert.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-remove.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/map-search.rst", "trainings/material/soup/cxx03/060-stl/050-associative-containers/multimap.rst", "trainings/material/soup/cxx03/060-stl/allocators/allocator_basics.rst", "trainings/material/soup/cxx03/060-stl/allocators/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/exercise.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/group.rst", "trainings/material/soup/cxx03/060-stl/exercises/reverse-string/solution.rst", "trainings/material/soup/cxx03/060-stl/group.rst", "trainings/material/soup/cxx03/070-dynamic-memory/000-todo/topic.rst", "trainings/material/soup/cxx03/070-dynamic-memory/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/basics.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/group.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/interface.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/polymorphism.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/private-protected.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-destructor.rst", "trainings/material/soup/cxx03/100-inheritance-oo-design/virtual-method.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/group.rst", "trainings/material/soup/cxx03/900-standard-library-miscellanea/string/topic.rst", "trainings/material/soup/cxx03/exercises-misc/american-flag/exercise.rst", "trainings/material/soup/cxx03/exercises-misc/fh-questions.rst", "trainings/material/soup/cxx03/exercises-misc/group.rst", "trainings/material/soup/cxx03/exercises-misc/sum-integers-from-stdin/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/group.rst", "trainings/material/soup/cxx03/exercises-userdb/user-access-methods/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const-members/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-const/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-default-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-simple-method/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/user-to-cxx-ctor/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-insert/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-find_if/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search-notfound-exception/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-search/exercise.rst", "trainings/material/soup/cxx03/exercises-userdb/userdb-vector/exercise.rst", "trainings/material/soup/cxx03/group.rst", "trainings/material/soup/cxx11/010-introduction/group.rst", "trainings/material/soup/cxx11/010-introduction/history.rst", "trainings/material/soup/cxx11/010-introduction/overview-livehacking.rst", "trainings/material/soup/cxx11/020-new-language-features/010-strongly-typed-enums/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/group.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/implementor-view.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/030-brace-initialization/mess.rst", "trainings/material/soup/cxx11/020-new-language-features/050-delegating-ctor/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/055-constexpr/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/afterword.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/group.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-smartptr-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/livehack-using-string-move.rst", "trainings/material/soup/cxx11/020-new-language-features/060-move/overview.rst", "trainings/material/soup/cxx11/020-new-language-features/070-miscellaneous/topic.rst", "trainings/material/soup/cxx11/020-new-language-features/auto.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/group.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-1-conceptless.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-2-conceptless-error.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/intro/toolcase-3-concept-integral.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/links.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-1-good-old-func.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-2-need-template.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-4-concept-has-size.rst", "trainings/material/soup/cxx11/020-new-language-features/concepts/writing-concepts/example-5-concept-index-ret-double.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/group.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibo-generator.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/fibonacci.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-h.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/generator-hello.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/simplest.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-iter.rst", "trainings/material/soup/cxx11/020-new-language-features/coroutines/intro/suspend-next.rst", "trainings/material/soup/cxx11/020-new-language-features/default.rst", "trainings/material/soup/cxx11/020-new-language-features/delete.rst", "trainings/material/soup/cxx11/020-new-language-features/final.rst", "trainings/material/soup/cxx11/020-new-language-features/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/group.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-capture.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor.rst", "trainings/material/soup/cxx11/020-new-language-features/lambda/lambda-is-functor-pitfall.rst", "trainings/material/soup/cxx11/020-new-language-features/modules.rst", "trainings/material/soup/cxx11/020-new-language-features/override.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for.rst", "trainings/material/soup/cxx11/020-new-language-features/range-based-for-map.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/good-bad.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/group.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/intro.rst", "trainings/material/soup/cxx11/020-new-language-features/ranges/links.rst", "trainings/material/soup/cxx11/020-new-language-features/structured-binding.rst", "trainings/material/soup/cxx11/030-smart-pointers/040-closing-words/topic.rst", "trainings/material/soup/cxx11/030-smart-pointers/group.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction.rst", "trainings/material/soup/cxx11/030-smart-pointers/introduction-livehack.rst", "trainings/material/soup/cxx11/030-smart-pointers/sharedptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/uniqueptr.rst", "trainings/material/soup/cxx11/030-smart-pointers/weakptr.rst", "trainings/material/soup/cxx11/035-perfect-forwarding/topic.rst", "trainings/material/soup/cxx11/040-bind-function/010-bind/topic.rst", "trainings/material/soup/cxx11/040-bind-function/020-function/topic.rst", "trainings/material/soup/cxx11/040-bind-function/group.rst", "trainings/material/soup/cxx11/050-multithreading/010-introduction/topic.rst", "trainings/material/soup/cxx11/050-multithreading/020-thread/topic.rst", "trainings/material/soup/cxx11/050-multithreading/030-race-conditions/topic.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/atomics.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/mutex.rst", "trainings/material/soup/cxx11/050-multithreading/040-locking-atomics/scoped-locking.rst", "trainings/material/soup/cxx11/050-multithreading/condition-variable.rst", "trainings/material/soup/cxx11/050-multithreading/group.rst", "trainings/material/soup/cxx11/050-multithreading/promise-future.rst", "trainings/material/soup/cxx11/100-miscellaneous/010-chrono/topic.rst", "trainings/material/soup/cxx11/100-miscellaneous/any-variant-optional/variant.rst", "trainings/material/soup/cxx11/100-miscellaneous/group.rst", "trainings/material/soup/cxx11/drafts/crtp.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/allocator.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/classic-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/group.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/related-no-virtual.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/type-erasure.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/unrelated.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-automatic-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-if.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/variant-manual-visit.rst", "trainings/material/soup/cxx11/drafts/embedded-problems/why-replace-virtual.rst", "trainings/material/soup/cxx11/drafts/group.rst", "trainings/material/soup/cxx11/exercises/bag-copy.rst", "trainings/material/soup/cxx11/exercises/bag-shared.rst", "trainings/material/soup/cxx11/exercises/bag-unique.rst", "trainings/material/soup/cxx11/exercises/group.rst", "trainings/material/soup/cxx11/filesystem/topic.rst", "trainings/material/soup/cxx11/group.rst", "trainings/material/soup/graph.rst", "trainings/material/soup/index.rst", "trainings/material/soup/kernel/cdev-auto/screenplay.rst", "trainings/material/soup/kernel/cdev-auto/slides.rst", "trainings/material/soup/kernel/cdev-auto/topic.rst", "trainings/material/soup/kernel/cdev-file-operations/screenplay.rst", "trainings/material/soup/kernel/cdev-file-operations/slides.rst", "trainings/material/soup/kernel/cdev-file-operations/topic.rst", "trainings/material/soup/kernel/cdev-first-functionality/slides.rst", "trainings/material/soup/kernel/cdev-first-functionality/topic.rst", "trainings/material/soup/kernel/cdev-manual/screenplay.rst", "trainings/material/soup/kernel/cdev-manual/slides.rst", "trainings/material/soup/kernel/cdev-manual/topic.rst", "trainings/material/soup/kernel/cdev-multiple-devices/slides.rst", "trainings/material/soup/kernel/cdev-multiple-devices/topic.rst", "trainings/material/soup/kernel/cdev-refactoring/screenplay.rst", "trainings/material/soup/kernel/cdev-refactoring/slides.rst", "trainings/material/soup/kernel/cdev-refactoring/topic.rst", "trainings/material/soup/kernel/dma/slides.rst", "trainings/material/soup/kernel/dma/topic.rst", "trainings/material/soup/kernel/fedora-kernel-build/screenplay.rst", "trainings/material/soup/kernel/fedora-kernel-build/topic.rst", "trainings/material/soup/kernel/fedora-module-build/screenplay.rst", "trainings/material/soup/kernel/fedora-module-build/topic.rst", "trainings/material/soup/kernel/group.rst", "trainings/material/soup/kernel/hello-world/slides.rst", "trainings/material/soup/kernel/hello-world/topic.rst", "trainings/material/soup/kernel/interrupt-coding/slides.rst", "trainings/material/soup/kernel/interrupt-coding/topic.rst", "trainings/material/soup/kernel/interrupt/slides.rst", "trainings/material/soup/kernel/interrupt/topic.rst", "trainings/material/soup/kernel/iomemory/slides.rst", "trainings/material/soup/kernel/iomemory/topic.rst", "trainings/material/soup/kernel/kmalloc/slides.rst", "trainings/material/soup/kernel/kmalloc/topic.rst", "trainings/material/soup/kernel/list/slides.rst", "trainings/material/soup/kernel/list/topic.rst", "trainings/material/soup/kernel/mutex-coding/slides.rst", "trainings/material/soup/kernel/mutex-coding/topic.rst", "trainings/material/soup/kernel/mutex/slides.rst", "trainings/material/soup/kernel/mutex/topic.rst", "trainings/material/soup/kernel/netdev/slides.rst", "trainings/material/soup/kernel/netdev/topic.rst", "trainings/material/soup/kernel/pci/slides.rst", "trainings/material/soup/kernel/pci/topic.rst", "trainings/material/soup/kernel/process-vs-atomic/slides.rst", "trainings/material/soup/kernel/process-vs-atomic/topic.rst", "trainings/material/soup/kernel/raspi-kernel-build/story.rst", "trainings/material/soup/kernel/raspi-kernel-build/topic.rst", "trainings/material/soup/kernel/sample-project.rst", "trainings/material/soup/kernel/spinlock-coding/slides.rst", "trainings/material/soup/kernel/spinlock-coding/topic.rst", "trainings/material/soup/kernel/spinlock/slides.rst", "trainings/material/soup/kernel/spinlock/topic.rst", "trainings/material/soup/kernel/stub-sysprog-dup/topic.rst", "trainings/material/soup/kernel/time_timer-coding/slides.rst", "trainings/material/soup/kernel/time_timer-coding/topic.rst", "trainings/material/soup/kernel/time_timer/slides.rst", "trainings/material/soup/kernel/time_timer/topic.rst", "trainings/material/soup/kernel/todo.rst", "trainings/material/soup/kernel/usermem/screenplay.rst", "trainings/material/soup/kernel/usermem/slides.rst", "trainings/material/soup/kernel/usermem/topic.rst", "trainings/material/soup/kernel/waitqueue/screenplay.rst", "trainings/material/soup/kernel/waitqueue/slides.rst", "trainings/material/soup/kernel/waitqueue/topic.rst", "trainings/material/soup/kernel/workqueue/screenplay.rst", "trainings/material/soup/kernel/workqueue/slides.rst", "trainings/material/soup/kernel/workqueue/topic.rst", "trainings/material/soup/linux/basics/archiving-compression/exercises.rst", "trainings/material/soup/linux/basics/archiving-compression/group.rst", "trainings/material/soup/linux/basics/archiving-compression/gzip.rst", "trainings/material/soup/linux/basics/archiving-compression/overview.rst", "trainings/material/soup/linux/basics/archiving-compression/tar.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G1.rst", "trainings/material/soup/linux/basics/exercises/FH-SS2022-EXAM-01-G2.rst", "trainings/material/soup/linux/basics/exercises/group.rst", "trainings/material/soup/linux/basics/group.rst", "trainings/material/soup/linux/basics/intro/demo-everything-is-a-file.rst", "trainings/material/soup/linux/basics/intro/environment.rst", "trainings/material/soup/linux/basics/intro/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/intro/group.rst", "trainings/material/soup/linux/basics/intro/login.rst", "trainings/material/soup/linux/basics/intro/overview.rst", "trainings/material/soup/linux/basics/intro/process.rst", "trainings/material/soup/linux/basics/intro/process-tree.rst", "trainings/material/soup/linux/basics/intro/wsl.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/exercises.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/group.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/io-redirection-swap-stdout-stderr.rst", "trainings/material/soup/linux/basics/io-redirection-pipes/pipes.rst", "trainings/material/soup/linux/basics/permissions/basics.rst", "trainings/material/soup/linux/basics/permissions/exercises/credentials.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/permissions/exercises/fh-questions-nocheat.rst", "trainings/material/soup/linux/basics/permissions/exercises/group.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/private-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory.rst", "trainings/material/soup/linux/basics/permissions/exercises/public-directory-question.rst", "trainings/material/soup/linux/basics/permissions/exercises/shared-file.rst", "trainings/material/soup/linux/basics/permissions/group.rst", "trainings/material/soup/linux/basics/permissions/setuid.rst", "trainings/material/soup/linux/basics/permissions/setuid-livedemo.rst", "trainings/material/soup/linux/basics/permissions/sticky.rst", "trainings/material/soup/linux/basics/permissions/umask.rst", "trainings/material/soup/linux/basics/shell/commandline.rst", "trainings/material/soup/linux/basics/shell/configfiles.rst", "trainings/material/soup/linux/basics/shell/cp.rst", "trainings/material/soup/linux/basics/shell/cwd.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/copy-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-copy-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-create-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/echo-move-files.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/group.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/mkdir-p-rm-r.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-rf.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/rm-tree.rst", "trainings/material/soup/linux/basics/shell/exercises/cp-mv-mkdir-rm/verify-hierarchy.rst", "trainings/material/soup/linux/basics/shell/exercises/fh-questions.rst", "trainings/material/soup/linux/basics/shell/exercises/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/dev-types.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/etc-passwd-size.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/group.rst", "trainings/material/soup/linux/basics/shell/exercises/ls/home-permissions.rst", "trainings/material/soup/linux/basics/shell/file_dir_create_rm.rst", "trainings/material/soup/linux/basics/shell/group.rst", "trainings/material/soup/linux/basics/shell/links.rst", "trainings/material/soup/linux/basics/shell/ls.rst", "trainings/material/soup/linux/basics/shell/mv.rst", "trainings/material/soup/linux/basics/shell/paths.rst", "trainings/material/soup/linux/basics/text-tools/cat.rst", "trainings/material/soup/linux/basics/text-tools/cut.rst", "trainings/material/soup/linux/basics/text-tools/exercises.rst", "trainings/material/soup/linux/basics/text-tools/find.rst", "trainings/material/soup/linux/basics/text-tools/grep.rst", "trainings/material/soup/linux/basics/text-tools/group.rst", "trainings/material/soup/linux/basics/text-tools/head-tail.rst", "trainings/material/soup/linux/basics/text-tools/less.rst", "trainings/material/soup/linux/basics/text-tools/overview.rst", "trainings/material/soup/linux/drafts/group.rst", "trainings/material/soup/linux/drafts/yocto.rst", "trainings/material/soup/linux/group.rst", "trainings/material/soup/linux/hardware/brushless-motor/topic.rst", "trainings/material/soup/linux/hardware/can/10-intro.rst", "trainings/material/soup/linux/hardware/can/20-interfaces.rst", "trainings/material/soup/linux/hardware/can/30-programming.rst", "trainings/material/soup/linux/hardware/can/40-harware.rst", "trainings/material/soup/linux/hardware/can/group.rst", "trainings/material/soup/linux/hardware/group.rst", "trainings/material/soup/linux/hardware/i2c/topic.rst", "trainings/material/soup/linux/hardware/pwm/topic.rst", "trainings/material/soup/linux/hardware/w1/topic.rst", "trainings/material/soup/linux/ssh/basics.rst", "trainings/material/soup/linux/ssh/exercises/copy-file.rst", "trainings/material/soup/linux/ssh/exercises/copy-tree.rst", "trainings/material/soup/linux/ssh/exercises/group.rst", "trainings/material/soup/linux/ssh/exercises/pubkey.rst", "trainings/material/soup/linux/ssh/group.rst", "trainings/material/soup/linux/ssh/key-pair.rst", "trainings/material/soup/linux/ssh/links.rst", "trainings/material/soup/linux/ssh/portforwarding.rst", "trainings/material/soup/linux/ssh/scp.rst", "trainings/material/soup/linux/ssh/sshfs.rst", "trainings/material/soup/linux/sysprog/basics/errorhandling.rst", "trainings/material/soup/linux/sysprog/basics/group.rst", "trainings/material/soup/linux/sysprog/basics/syscalls.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-file.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-network.rst", "trainings/material/soup/linux/sysprog/blocking-io/blocking-io-timer.rst", "trainings/material/soup/linux/sysprog/blocking-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/basics.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-copy.rst", "trainings/material/soup/linux/sysprog/file-io/basics-exercise-hole.rst", "trainings/material/soup/linux/sysprog/file-io/duplicate.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_CREAT.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_EXCL.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_RDONLY.rst", "trainings/material/soup/linux/sysprog/file-io/example-O_WRONLY.rst", "trainings/material/soup/linux/sysprog/file-io/exercise-sensor-read.rst", "trainings/material/soup/linux/sysprog/file-io/group.rst", "trainings/material/soup/linux/sysprog/file-io/misc.rst", "trainings/material/soup/linux/sysprog/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/get.rst", "trainings/material/soup/linux/sysprog/intro-hw/group.rst", "trainings/material/soup/linux/sysprog/intro-hw/sysfs-gpio.rst", "trainings/material/soup/linux/sysprog/intro-hw/watch.rst", "trainings/material/soup/linux/sysprog/posix-threads/010-introduction/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/020-lifecycle/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/030-exercise-pthcreate-race-condition/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/040-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/050-exercise-mutex/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/060-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/070-exercise-condition-variable/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/080-miscellaneous/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/090-last-warning/topic.rst", "trainings/material/soup/linux/sysprog/posix-threads/group.rst", "trainings/material/soup/linux/sysprog/posix-threads/locked-trylock.rst", "trainings/material/soup/linux/sysprog/process/commandline.rst", "trainings/material/soup/linux/sysprog/process/group.rst", "trainings/material/soup/linux/sysprog/process/tree.rst", "trainings/material/soup/linux/sysprog/scheduling/basics.rst", "trainings/material/soup/linux/sysprog/scheduling/group.rst", "trainings/material/soup/linux/sysprog/scheduling/processes-and-threads.rst", "trainings/material/soup/linux/sysprog/scheduling/questions.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime.rst", "trainings/material/soup/linux/sysprog/scheduling/realtime-api.rst", "trainings/material/soup/linux/sysprog/scheduling/wakup-latency.rst", "trainings/material/soup/linux/sysprog/sysprog_events/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_events/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_events/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_ipc/topic.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/code/index.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/screenplay.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/slides.rst", "trainings/material/soup/linux/sysprog/sysprog_signals/topic.rst", "trainings/material/soup/linux/toolchain/basics/topic.rst", "trainings/material/soup/linux/toolchain/cmake/cross.rst", "trainings/material/soup/linux/toolchain/cmake/local.rst", "trainings/material/soup/linux/toolchain/cross/basics.rst", "trainings/material/soup/linux/toolchain/cross/group.rst", "trainings/material/soup/linux/toolchain/exercises/cross-build.rst", "trainings/material/soup/linux/toolchain/exercises/fh-2022-questions.rst", "trainings/material/soup/linux/toolchain/exercises/group.rst", "trainings/material/soup/linux/toolchain/exercises/native-build.rst", "trainings/material/soup/linux/toolchain/exercises/raspberry-toolchain.rst", "trainings/material/soup/linux/toolchain/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/group.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/linaro.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-details.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-build-docker-fedora.rst", "trainings/material/soup/linux/toolchain/raspberry-pi/toolchain-setup.rst", "trainings/material/soup/linux/toolchain/separate-compilation/topic.rst", "trainings/material/soup/linux/toolchain/shared-libraries/topic.rst", "trainings/material/soup/linux/toolchain/static-library/topic.rst", "trainings/material/soup/python/advanced/closures/topic.rst", "trainings/material/soup/python/advanced/comprehensions/topic.rst", "trainings/material/soup/python/advanced/context-mgr/topic.rst", "trainings/material/soup/python/advanced/decorators/topic.rst", "trainings/material/soup/python/advanced/exceptions/topic.rst", "trainings/material/soup/python/advanced/exec/topic.rst", "trainings/material/soup/python/advanced/group.rst", "trainings/material/soup/python/advanced/iteration-generation/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/fibonacci-generator.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/iterator-protocol.rst", "trainings/material/soup/python/advanced/iteration-generation/python_1010_generators_yield/topic.rst", "trainings/material/soup/python/advanced/iteration-generation/topic.rst", "trainings/material/soup/python/advanced/modules.rst", "trainings/material/soup/python/advanced/multithreading/basics.rst", "trainings/material/soup/python/advanced/multithreading/group.rst", "trainings/material/soup/python/advanced/multithreading/mutex.rst", "trainings/material/soup/python/advanced/multithreading/questions.rst", "trainings/material/soup/python/advanced/oo/abc/topic.rst", "trainings/material/soup/python/advanced/oo/classes-and-dicts/topic.rst", "trainings/material/soup/python/advanced/oo/constructor/topic.rst", "trainings/material/soup/python/advanced/oo/group.rst", "trainings/material/soup/python/advanced/oo/inheritance/topic.rst", "trainings/material/soup/python/advanced/oo/methods/topic.rst", "trainings/material/soup/python/advanced/oo/namedtuple/topic.rst", "trainings/material/soup/python/advanced/oo/operator-overloading/topic.rst", "trainings/material/soup/python/advanced/oo/properties/topic.rst", "trainings/material/soup/python/advanced/oo/str-repr/topic.rst", "trainings/material/soup/python/advanced/starargs/topic.rst", "trainings/material/soup/python/basics/group.rst", "trainings/material/soup/python/basics/installation.rst", "trainings/material/soup/python/basics/python_0110_blahblah/topic.rst", "trainings/material/soup/python/basics/python_0120_helloworld/topic.rst", "trainings/material/soup/python/basics/python_0125_running/topic.rst", "trainings/material/soup/python/basics/python_0130_syntax_etc/topic.rst", "trainings/material/soup/python/basics/python_0139_commandline_argv/topic.rst", "trainings/material/soup/python/basics/python_0140_variables/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview/topic.rst", "trainings/material/soup/python/basics/python_0150_datatypes_overview_compound/topic.rst", "trainings/material/soup/python/basics/python_0160_boolean/topic.rst", "trainings/material/soup/python/basics/python_0170_if/topic.rst", "trainings/material/soup/python/basics/python_0193_while/topic.rst", "trainings/material/soup/python/basics/python_0200_sequential_types/topic.rst", "trainings/material/soup/python/basics/python_0210_indexing_slicing/topic.rst", "trainings/material/soup/python/basics/python_0220_for/topic.rst", "trainings/material/soup/python/basics/python_0225_range/topic.rst", "trainings/material/soup/python/basics/python_0250_refs_flat_deep_copy/topic.rst", "trainings/material/soup/python/basics/python_0270_functions/screenplay-scoping.rst", "trainings/material/soup/python/basics/python_0270_functions/slideshow.rst", "trainings/material/soup/python/basics/python_0270_functions/topic.rst", "trainings/material/soup/python/basics/python_0300_strings/topic.rst", "trainings/material/soup/python/basics/python_0310_strings_formatting/topic.rst", "trainings/material/soup/python/basics/python_0320_strings_methods/topic.rst", "trainings/material/soup/python/basics/python_0400_lists/topic.rst", "trainings/material/soup/python/basics/python_0450_dictionaries/topic.rst", "trainings/material/soup/python/basics/python_0460_sets/topic.rst", "trainings/material/soup/python/basics/python_0500_files/topic.rst", "trainings/material/soup/python/basics/python_1000_function_objects/topic.rst", "trainings/material/soup/python/drafts/argparse/topic.rst", "trainings/material/soup/python/drafts/group.rst", "trainings/material/soup/python/drafts/matplotlib/topic.rst", "trainings/material/soup/python/drafts/setuptools/topic.rst", "trainings/material/soup/python/exercises/csv/csv-db.rst", "trainings/material/soup/python/exercises/csv/csv-module.rst", "trainings/material/soup/python/exercises/csv/group.rst", "trainings/material/soup/python/exercises/group.rst", "trainings/material/soup/python/exercises/herdt/boolean.rst", "trainings/material/soup/python/exercises/herdt/exercise_while_even_numbers.rst", "trainings/material/soup/python/exercises/herdt/greet.rst", "trainings/material/soup/python/exercises/herdt/group.rst", "trainings/material/soup/python/exercises/herdt/max_numbers.rst", "trainings/material/soup/python/exercises/herdt/swap.rst", "trainings/material/soup/python/exercises/herdt/username_password.rst", "trainings/material/soup/python/exercises/legacy/cmdline_digit.rst", "trainings/material/soup/python/exercises/legacy/dict_keyerror.rst", "trainings/material/soup/python/exercises/legacy/distill.rst", "trainings/material/soup/python/exercises/legacy/fibonacci-generator.rst", "trainings/material/soup/python/exercises/legacy/for_primeness.rst", "trainings/material/soup/python/exercises/legacy/group.rst", "trainings/material/soup/python/exercises/legacy/join_function.rst", "trainings/material/soup/python/exercises/legacy/max_numbers.rst", "trainings/material/soup/python/exercises/legacy/max_numbers_function.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_executable.rst", "trainings/material/soup/python/exercises/legacy/mixed_list_interactive.rst", "trainings/material/soup/python/exercises/legacy/passwd.rst", "trainings/material/soup/python/exercises/legacy/primeness_function.rst", "trainings/material/soup/python/exercises/legacy/revert.rst", "trainings/material/soup/python/exercises/legacy/string-rightjustify.rst", "trainings/material/soup/python/exercises/legacy/uniq_function.rst", "trainings/material/soup/python/exercises/legacy/uniq_generator.rst", "trainings/material/soup/python/exercises/legacy/wc.rst", "trainings/material/soup/python/exercises/legacy/while_primeness.rst", "trainings/material/soup/python/exercises/sensors/group.rst", "trainings/material/soup/python/exercises/sensors/project-setup.rst", "trainings/material/soup/python/exercises/sensors/sensor-const.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader.rst", "trainings/material/soup/python/exercises/userdb/csvdictreader-function.rst", "trainings/material/soup/python/exercises/userdb/csvreader.rst", "trainings/material/soup/python/exercises/userdb/csvreader-function.rst", "trainings/material/soup/python/exercises/userdb/group.rst", "trainings/material/soup/python/exercises/userdb/mqtt-publish-csv.rst", "trainings/material/soup/python/exercises/userdb/user-class-person.rst", "trainings/material/soup/python/exercises/userdb/user_json.rst", "trainings/material/soup/python/exercises/userdb/userdb_csv.rst", "trainings/material/soup/python/graph.rst", "trainings/material/soup/python/group.rst", "trainings/material/soup/python/link-collection.rst", "trainings/material/soup/python/misc/ai/group.rst", "trainings/material/soup/python/misc/ai/k-means.rst", "trainings/material/soup/python/misc/ai/linear-regression/code.rst", "trainings/material/soup/python/misc/ai/linear-regression/history_data.rst", "trainings/material/soup/python/misc/ai/linear-regression/linear_regression.ipynb", "trainings/material/soup/python/misc/ai/linear-regression/topic.rst", "trainings/material/soup/python/misc/ai/machine-learning-intro.rst", "trainings/material/soup/python/misc/csv/topic.rst", "trainings/material/soup/python/misc/db/dbapi2.rst", "trainings/material/soup/python/misc/db/group.rst", "trainings/material/soup/python/misc/db/postgres.rst", "trainings/material/soup/python/misc/db/sqlite3.rst", "trainings/material/soup/python/misc/encoding/topic.rst", "trainings/material/soup/python/misc/group.rst", "trainings/material/soup/python/misc/import.rst", "trainings/material/soup/python/misc/mqtt/topic.rst", "trainings/material/soup/python/misc/pandas/add_row.rst", "trainings/material/soup/python/misc/pandas/basics.rst", "trainings/material/soup/python/misc/pandas/filters.rst", "trainings/material/soup/python/misc/pandas/group.rst", "trainings/material/soup/python/misc/pandas/iloc.rst", "trainings/material/soup/python/misc/pandas/indexes.rst", "trainings/material/soup/python/misc/pandas/loc.rst", "trainings/material/soup/python/misc/pandas/mod_col.rst", "trainings/material/soup/python/misc/python_5550_xml_etree/topic.rst", "trainings/material/soup/python/misc/vscode.rst", "trainings/material/soup/python/swdev/group.rst", "trainings/material/soup/python/swdev/pip/screenplay.rst", "trainings/material/soup/python/swdev/pip/slides.rst", "trainings/material/soup/python/swdev/pip/topic.rst", "trainings/material/soup/python/swdev/pypi.rst", "trainings/material/soup/python/swdev/pytest/group.rst", "trainings/material/soup/python/swdev/pytest/intro.rst", "trainings/material/soup/python/swdev/unittest.rst", "trainings/material/soup/python/swdev/venv/screenplay.rst", "trainings/material/soup/python/swdev/venv/slides.rst", "trainings/material/soup/python/swdev/venv/topic.rst", "trainings/material/soup/unittest/group.rst", "trainings/material/soup/unittest/unittest_gtest_basics/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_basics/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_basics/topic.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_cmake/topic.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/code/index.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/screenplay.rst", "trainings/material/soup/unittest/unittest_gtest_fixture/topic.rst", "trainings/org.rst", "trainings/repertoire/_hidden/kettner-lfs-2013-09-16.rst", "trainings/repertoire/bash.rst", "trainings/repertoire/c-like/c.rst", "trainings/repertoire/c-like/c-advanced.rst", "trainings/repertoire/c-like/cxx.rst", "trainings/repertoire/c-like/cxx11.rst", "trainings/repertoire/c-like/index.rst", "trainings/repertoire/cmake.rst", "trainings/repertoire/design-patterns/design-patterns.rst", "trainings/repertoire/embedded.rst", "trainings/repertoire/kernel-programming-basics.rst", "trainings/repertoire/linux-basics.rst", "trainings/repertoire/make.rst", "trainings/repertoire/python/advanced.rst", "trainings/repertoire/python/basics.rst", "trainings/repertoire/python/herdt.rst", "trainings/repertoire/raspi-hands-on.rst", "trainings/repertoire/svn.rst", "trainings/repertoire/sysprog/basics.rst", "trainings/repertoire/sysprog/fortgeschrittenes.rst", "trainings/repertoire/sysprog/index.rst", "trainings/repertoire/sysprog/multithreading.rst", "trainings/repertoire/sysprog/network.rst", "trainings/repertoire/unittests.rst"], "titles": ["Kontakt", "Curriculum Vitae", "\u00dcber Mich", "Projekte", "Skills", "Angebot: In-House Schulungen", "Course Material", "Einleitung", "Python Basics (2021-xx-xx - 2021-yy-yy)", "Programmierung Grundlagen (Jupyter Notebook)", "Details", "Course List", "Templates for Course Descriptions", "About This Site", "OpenTraining", "Draft Topics", "Miscellaneous", "S5 Integration", "S5 Slide Tests", "Level 1 Heading", "Screencasts", "Topics to be Written", "Netidee F\u00f6rderantrag", "Netidee F\u00f6rderantrag: OpenTraining", "Video Screenplay", "Use Case: Custom Training, Subtract Known", "Use Case: Calculate Minimum Training Duration", "Use Cases", "Use Case: Use Training Material From Other Sites", "Use Case: Menu to Choose From", "Use Case: Slide Show Material as Plain-Text Files", "Sending A V4L Camera Device Output Over SSH", "Emoji Codes (<code class=\"docutils literal notranslate\"><span class=\"pre\">sphinxemoji</span></code>)", "Recipes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsa.txt</span></code>: Added Mathematical Symbols: Arrows", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isoamsr.txt</span></code>: Added Mathematical Symbols: Relations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isonum.txt</span></code>: Added Mathematical Symbols: Binary Operators", "Layout Test Page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mmlalias.txt</span></code>: MathML aliases for entities from other sets", "reStructuredText Cheat Sheet", "Sphinxish", "Seminar on \u201cClean Code\u201d (2022-04-13)", "Live Hacking Before (Formal) Unit Testing", "Clean Code: Messages From The Book", "Live Hacking: Switch To <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Is Software A Craft? Software Is A Craft!", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::find()</span></code> Crashes If User Not Found", "Bugs", "Existing Files Are Overwritten", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::read()</span></code>: What If Done Twice?", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code>: Alternative Output Format - CSV", "Features", "Search By Other Indexes", "Backlog: What Needs To Change, Or We Will All Die", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code> Has Too Many Responsibilities \u27f6 Interface", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB</span></code> Has Too Many Responsibilities \u27f6 <code class=\"docutils literal notranslate\"><span class=\"pre\">BackingStore</span></code>", "Refactoring", "Load From BackingStore in Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UserDB::{read,write}()</span></code>: <code class=\"docutils literal notranslate\"><span class=\"pre\">bool</span></code>, Really?", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Installation Notes", "Submission: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Screenplay: Pointless Blinking With Python, <code class=\"docutils literal notranslate\"><span class=\"pre\">asyncio</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> (and a Raspberry Pi of Course)", "Hochk\u00f6nig", "Blog", "Sphinx", "C++", "C++: Building with CMake", "C++: Interfaces", "C++: OO Basics", "C++: Unit Testing", "Graph", "Embedded Computing 1", "Embedded Computing 2", "EX: Race Conditions", "EX: Avoiding Race Condition", "Git Introduction", "Embedded Computing 2019", "Linux", "Introduction to Linux and Unix", "Linux Hardware Device Management", "EX: Averaging Sensor", "EX: Averaging Sensor (parallel)", "EX: LED Temperature Display", "EX: Temperature Sensors", "GPIO", "Multithreading", "Avoiding Race Conditions: Semaphore/Mutex", "Communication: Waiting for Something", "Python Basics", "EX: Averaging Sensor, Display", "EX: Temperature Sensors", "Simple Web Programming", "Sensors Web Pages", "Python", "Embedded Computing 2020", "SS2022", "2022-03-08", "2022-03-10", "2022-03-10 (Homework until 2022-03-21)", "2022-03-21", "2022-03-22, 2022-03-24 (KU)", "2022-03-28", "2022-04-01", "SS2022: Logs", "WS2022", "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)", "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)", "Lab Exam 2023-01-17", "SS2023: Exam 2023-06-30 (Handout)", "SS2023: Exam 2023-06-30 (Solved)", "Working with Git In Our <code class=\"docutils literal notranslate\"><span class=\"pre\">FH-ECE21</span></code> Project", "Embedded Computing 2021", "SS2023", "(DONE) Boiling Pot (The Beginning)", "Boiling Pot: Basic Integration", "Boiling Pot: Display, And Status Reporting", "Boiling Pot: Full Integration (Display And IoT)", "(DONE) Data Logger", "Data Logger: CSV Sink", "Data Logger: Integration", "Data Logger: MQTT Sink", "Display Interface/Infrastructure", "WS2023/24: Group Project - Tasks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">libgpiod</span></code> Switch", "Python MQTT Subscriber", "Temperature Display: LED Via A PWM Controller", "(DONE) Sensor Interface", "(DONE) Onewire Sensor", "(DONE) Switch Interface", "SysFS GPIO Switch", "WS2023/24", "Embedded Computing (FH Joanneum Graz)", "Git Notes", "Work in Progress", "Packaging this Site on PyPI", "Audio Chip Bringup", "Get Debian 10 Kernel Config", "Finish: Debian Kernel Package etc.", "Yocto Kernel Bringup on Customer Hardware", "I2S Audio for a Kontron SMARC Module", "Dirty Upgrade Path", "Wait for Customer Hardware", "Extract Kernel from Intel Yocto BSP", "Python Training Improvements", "Creating Screencasts", "SEO", "Stacks (Hanging)", "Miscellaneous To Do", "Learning The Web", "Beagleboard: How to Repair NAND (also known as 40W)", "Porting to Linux (There\u2019s Always A Better Way)", "Saving Solid State Disk Life (Gentoo)", "\u201cWhy <code class=\"docutils literal notranslate\"><span class=\"pre\">ps</span></code> Sucks\u201d or \u201cCounting Memory Consumption\u201d", "Patching and Building the Fedora Kernel", "Adding a Custom Domain to a Github Pages Project Site", "Using Microsoft Teams on Linux", "Deploying Sphinx Generated Documentation to Github Pages", "Using BigBlueButton for Online Training", "Traunstein via Zierlersteig", "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)", "How to Brick a \u20ac1399 Dell XPS 13", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Posts", "Linux und Open Source", "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial", "Exercises", "Courses: Overview", "Qualivision, Z\u00fcrich, 1.10.2013", "Kursnotizen: Linux Embedded 2015-11-30", "Live Hacking", "Python Individualtraining (5 Tage, beginnend 28.10.2019)", "Goals of this Training", "Random Live Hacking", "Python (12.11.2019 - 14.11.2019 in Graz)", "Proposal", "IPC in Linux (10.1.2020 in Graz)", "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden", "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)", "Installing <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code> By Hand", "Software Setup, Build", "Argh: Using This Site With Visual Studio Code", "Code", "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)", "Python Schulung 18. und 19.5.2020", "Code", "Python Individualtraining (18.5.2020 - 19.5.2020)", "Python Advanced (7.9.2020 - 10.9.2020)", "Python Basics (28.9.2020 - 30.9.2020)", "Iterables", "Python Basic and Advanced (19.10.2020 - 22.10.2020)", "Linux on Raspberry Pi", "Python Basics (23.11.2020 - 25.11.2020)", "Linux Basics (30.11.2020 - 3.12.2020)", "6 Grundlegende Sprachelemente", "Programmierung Grundlagen (13. und 14.1.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (22.2.2021 - 24.2.2021)", "Linux Kernel Driver Development Basics (14.12.2020)", "Python Advanced", "2021-03-15", "Hallo Jupyter Notebook", "Python Basic and Advanced (22.3.2021 - 25.3.2021)", "Linux Basics, Shell Scripting (2021-03-29)", "Einleitung", "Programmierung Grundlagen (12. und 13.4.2021)", "Programmierung Grundlagen (Jupyter Notebook)", "Syntax etc.", "Python Grundlagen (2021-05-03 - 2021-05-05)", "Python Grundlagen (Jupyter Notebook)", "Das <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Python Advanced (2021-05-25 - 2021-05-27)", "Programmieren mit C (2021-06-14 - 2021-06-18)", "The C++ Programming Language (2021-07-12 - 2021-07-16)", "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)", "Datenstrukturen", "Compound Datatypes", "Read a Cleaned-Up SAP Export", "Python Grundlagen (2021-08-23 - 2021-08-25)", "Jupyter Notebook", "Initial Terminology", "Python Basics (2021-08-31 - 2021-09-01)", "Python Grundlagen (Jupyter Notebook)", "2021-11-17", "Python Basics (2021-11-17 - 2021-11-19)", "Python Grundlagen (Jupyter Notebook)", "Notebook", "Python Advanced (2021-12-01 - 2021-12-03)", "Python Grundlagen (Jupyter Notebook)", "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)", "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)", "2022-01-17", "Programmierung Grundlagen (Jupyter Notebook)", "Datatypes", "Python Basics (2022-02-23 - 2022-02-25)", "Jupyter Notebook", "Wiederholung", "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)", "Jupyter Notebook", "Hello World", "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)", "Jupyter Notebook", "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)", "BlahBlah", "Programmierung Grundlagen (Jupyter Notebook)", "Python Basics (2022-04-25 - 2022-04-27)", "BlahBlah", "Python Grundlagen (Jupyter Notebook)", "Python (2022-05-02 - 2022-05-05)", "Hello Jupyter Notebook", "Python Grundlagen (Jupyter Notebook)", "Python Advanced (2022-05-16 - 2022-05-18)", "Assert", "Python Grundlagen (Jupyter Notebook)", "Vorbesprechung 2022-05-11", "C++: A New Language Starting In 2011", "C++: A New Language Starting In 2011", "Linux Basics (2022-10-03 - 2022-10-05)", "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)", "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)", "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)", "Python (2022-10-17)", "Python Grundlagen (Jupyter Notebook)", "Python (2022-11-16 - 2022-11-18)", "Python (2022-11-16 - 2022-11-18)", "Python Grundlagen (Jupyter Notebook)", "Linux Basics (2023-01-23 - 2023-01-26)", "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)", "Whetting Your Appetite (Jupyter Notebook)", "Whetting Your Appetite (Livehacking Demo)", "Python For SAP Developers (2023-03-13 - 2023-03-15)", "2023-03-13", "Python For SAP Developers (Jupyter Notebook)", "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)", "Hacking About On A SAP Test Dataset", "Some Usecases On A Test Dataset From SAP", "C++ For Embedded Developers (2023-03-20 - 2023-03-23)", "Clean Code Development With Python (2023-03-28 - 2023-03-29)", "C++ For Embedded Developers (2023-04-18 - 2023-04-20)", "Agenda: Python Advanced (2023-04-24 - 2023-04-26)", "Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)", "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)", "Agenda: Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Basics (2023-05-15 - 2023-05-17)", "Python Grundlagen (Jupyter Notebook)", "Agenda: Linux Basics (2023-05-23 - 2023-05-25)", "Linux Basics (2023-05-23 - 2023-05-25)", "Agenda: Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (2023-06-20 - 2023-06-22)", "Python Basics (Jupyter Notebook)", "Agenda: CMake (2023-07-03)", "CMake: An Introduction (2023-07-18)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced (2023-09-25 - 2023-09-27)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Python Advanced (2023-10-09 - 2023-10-11)", "Python Advanced (2023-10-09 - 2023-10-09)", "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)", "Agenda: Python Advanced (2023-10-24 - 2023-10-26)", "Python Advanced (2023-10-24 - 2023-10-26)", "Jupyter Notebook: Python Advanced", "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)", "Agenda: Python Advanced (2023-11-22 - 2023-11-24)", "Python Advanced (2023-11-22 - 2023-22-24)", "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)", "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)", "Agenda: CMake (2023-11-27)", "CMake: An Introduction (2023-11-27)", "Agenda: Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (2023-11-29 - 2023-12-01)", "Python Basics (Jupyter Notebook)", "Agenda: C++: Advanced Topics", "C++: Advanced Topics (2023-12-04 - 2023-12-06)", "Agenda: Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "Python Basics (2023-12-18 - 2023-12-20)", "C++ For Embedded Developers (Beginning of 2023)", "Python/SAP", "Agenda: Python Basics (Beginning Of 2024)", "Screenplay Checker", "GPIO: Blinklicht", "GPIO: Blinklicht Interface", "GPIO: Object Oriented Blinklicht", "GPIO: Blinklicht Unittests", "ECE19: Exercises and Custom Topics", "Reading a File", "2021-05-20 (G2)", "2021-05-21", "Tuple Unpacking", "Basics", "An Example", "Cloud Computer, SSH Login", "Formalit\u00e4ten", "Embedded Computing 1 (ECE 19)", "Daily Log", "Embedded Computing 1 (Deutsch)", "Embedded Computing 1 (English)", "Plan for Summer 2021", "2021-10-07", "2021-10-12 (Bringing Newcomers Up-to-Date)", "2021-10-28", "2021-11-15", "2021-11-29", "2021-12-1{4,5}", "2022-01-10", "2022-01-12", "2022-02-15", "Agenda/Log", "Embedded Computing 2 (ECE 19)", "Exam Material Overview", "Embedded Computing 1+2, ECE 19", "Details", "Bisher Gehaltene", "Training Material: Overview and Download", "Installation", "Introduction", "Hello World", "Variables and Arithmetic", "Exercise: A Better Fahrenheit Table", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "Exercise: Fahrenheit Table Using <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Symbolic Constants", "Exercise: Fahrenheit Table Using Macros", "Character I/O", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">wc</span></code> For The Poor", "Arrays", "Exercise: Character Histogram", "Functions", "Exercise: Forward Declaration", "Character Arrays", "Exercise: Read Line Into String from <code class=\"docutils literal notranslate\"><span class=\"pre\">stdin</span></code>", "Lifetime of Variables", "Introduction", "Type System", "Variable Names", "Data Types, Sizes", "Constants", "Variable Definitions", "Arithmetic Operators", "Relational and Logical Operators", "Type Conversions", "Increment, Decrement", "Exercise: Copy and Reduce String", "Bit-Operators", "Assignment with Calculation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">?:</span></code> - Conditional Expression", "Precedence, Associativity", "Types, Operators, Expressions", "Statements and Blocks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">else</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">switch</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>", "Loops: <code class=\"docutils literal notranslate\"><span class=\"pre\">do</span> <span class=\"pre\">-</span> <span class=\"pre\">while</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">break</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">continue</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">goto</span></code> and Labels", "Program Flow", "Basics", "Extern/Global Variables", "Header Files", "Static Variables", "C Preprocessor: Basics", "C Preprocessor: More", "Functions and Program Structure", "Pointers and Addresses", "Pointers as Function Parameters", "Exercise: Function That Swaps Two Variables", "Pointers and Arrays", "Commandline Arguments", "Pointers and Arrays", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span></code>: Functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">typedef</span></code>: Type Alias", "Structures", "Dynamic Memory", "Singly Linked List", "Memory", "Volatile", "Compiler Intrinsics", "Alignment", "Advanced Language Features", "Sanity and Readabilty", "Know Your Integers", "Discrete Values - <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Visibility - <code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code>", "Correctness - <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Struct Initialization", "Explict Type Safety", "<code class=\"docutils literal notranslate\"><span class=\"pre\">valgrind</span></code>", "Program Sanity", "Optimization", "Optimizations: Compute Bound Code", "Optimizations: Memory Optimizations", "Performance", "Introduction", "GNU Profiler - <code class=\"docutils literal notranslate\"><span class=\"pre\">gprof</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">callgrind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">oprofile</span></code>", "Profiling", "The C Programming Language", "Messages From The Book", "What\u2019s There? What Have We Accomplished?", "Is Software A Craft? Software Is A Craft! \u27f6 <em>Clean Code</em>", "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)", "Basics: Boilerplate, And Executables", "\u201cConfigured\u201d Header Files", "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants", "External Dependencies", "CMake: An Introduction", "Installation (\u201cDeployment\u201d)", "Libraries, And <em>Dependencies</em>", "Optional Code, Approach 1: Optional <code class=\"docutils literal notranslate\"><span class=\"pre\">blacklist</span></code>, C Macro  (Global Flags)", "Optional Code, Approach 2: Pushing Optionality Down In Module <em>Interface</em>", "Optional Code: Problem Definition, <code class=\"docutils literal notranslate\"><span class=\"pre\">OPTION()</span></code>", "Shared Libraries (Preview)", "Structure - Subdirectories, Dependencies, and Include Paths", "Targets, Properties, And More", "Running Tests", "C++ Code", "Abstract Factory", "Adapter", "Command", "SocialDB Source Code", "Composite", "Decorator", "Design Patterns With C++", "Case Study/Livehacking: Heating Control (Reading Sensors)", "Interpreter", "Observer", "OO Design Principles", "Proxy", "Exercise Foundation: <code class=\"docutils literal notranslate\"><span class=\"pre\">Sensor</span></code> Hierarchy", "Singleton", "UML Short Introduction", "Exercise: Abstract Factory", "Exercise: Adapter", "Exercise: Command", "Exercise: Composite", "Exercise: Decorator", "Exercises: Design Patterns", "Exercise: Interpreter Combined With Adapter (And A Proxy)", "Exercise: Arithmetic Expression Interpreter", "Exercise: Adapter", "Exercise: Proxy (Remote Thermometer)", "Exercise: Proxy (Rounding Thermometer)", "Exercise: Singleton (Flexible)", "Exercise: Singleton (Flexible <em>And</em> Strict)", "Exercise: Singleton (Inflexible)", "Solution: Abstract Factory", "Solution: Adapter", "Solution: Command", "Solution: Composite", "Solution: Decorator", "Solutions", "Solution: Interpreter Combined With Adapter (And A Proxy)", "Solution: Arithmetic Expression Interpreter", "Solution: Observer", "Solution: Proxy (Remote Thermometer)", "Solution: Proxy (Rounding Thermometer)", "Solution: Singleton (Flexible)", "Solution: Singleton (Flexible <em>And</em> Strict)", "Solution: Singleton (Inflexible)", "Exercise (FH): Introducing a Sensor Class", "Exercise (FH): Extract Measurement Loop Into Function", "Exercise (FH): Replace Sensor", "Exercise (FH): Write A Sensor Class: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor</span></code>", "FH Sensor OO (First Try)", "C++ Exercises", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">LEDStripeDisplay_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">Hysteresis_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">AveragingSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">MockSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">RandomSensor_nopoly</span></code> (Non-Polymorphic)", "Exercise: Mocking Switch (Non-Polymorphic)", "OO Basics, Interfaces (Shapes)", "Working On Exercise Projects", "Exercise: Sensor Interface", "Exercise: OneWire Sensor Factory", "Exercise: OneWire Sensor Class", "Exercise: Algorithms", "Exercise: Generic Filter", "Exercise: Filter Elements Greater Than 10", "Exercise: Filter Odd Elements", "C++ Exercises: Standard Template Library", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map&lt;&gt;</span></code>", "Exercises: Sensor Repository (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>)", "Insert - Not Overwriting Existing Elements", "Insert - Sunny Case", "Lookup - Not Found", "Lookup - Sunny Case", "Memory Leaks?", "Remove - Not Found", "Remove - Sunny Case", "<code class=\"docutils literal notranslate\"><span class=\"pre\">.size()</span></code> Is <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Uniquify A Sequence", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector&lt;&gt;</span></code>", "C++: TODO List", "Code: C++: Class Templates", "Screenplay: C++: Class Templates", "C++: Class Templates", "Code: C++: Dynamic Memory", "Screenplay: C++: Dynamic Memory", "C++: Dynamic Memory", "Code: C++: Global Objects Initialization", "Screenplay: C++: Global Objects Initialization", "C++: Global Objects Initialization", "Code: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Screenplay: C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "C++: Inheritance, Interfaces, <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>", "Code: C++: Ownership/RAII", "Screenplay: C++: Ownership/RAII", "C++: Ownership/RAII", "Code: C++: STL Containers (Intro)", "Screenplay: C++: STL Containers (Intro)", "C++: STL Containers (Intro)", "Code: C++: Templates vs. Interfaces", "Screenplay: C++: Templates vs. Interfaces", "C++: Templates vs. Interfaces", "C++: Miscellaneous Live-Hacking", "Introduction", "Object Oriented Programming In Good Ol\u2019 C", "Copy Constructor, Assignment Operator", "Classes and Objects", "Custom Constructor", "Default Constructor", "More Constructors, Destructors", "Data Encapsulation", "Constructors: Member Initialization", "Object Copy (And Resource Management): There Be Dragons", "Overloading", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">this</span></code>", "References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">static</span></code> Member Variables", "Operator Overloading", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">cuboid</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">point3d</span></code>", "Exercise (FH): <code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">rectangle</span></code>", "Functions and Methods", "Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code> - <code class=\"docutils literal notranslate\"><span class=\"pre\">catch</span></code>", "Exceptions", "Function Templates", "Class Templates", "C++ Template Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy&lt;&gt;()</span></code> From <code class=\"docutils literal notranslate\"><span class=\"pre\">&lt;algorithm&gt;</span></code>", "Screenplay: Pointer Arithmetic, And Algorithms", "Screenplay: Pointer Arithmetic Basics", "Screenplay: Pointer Difference", "Screenplay: Out Of Range Errors", "Standard Template Library: Basics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> (And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>)", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">std::copy()</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code> Basics", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::vector</span></code>, And Pointer Arithmetics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">binary_search&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find&lt;&gt;</span></code>: Sequential Search, by Equality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if&lt;&gt;</span></code>: Sequential Search, Customizable", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each&lt;&gt;</span></code>", "Algorithms", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lower_bound&lt;&gt;</span></code>: On Sorted Sequence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse&lt;&gt;</span></code>: Reversing In-Place", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy&lt;&gt;</span></code>: Copying <em>and</em> Reversing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sort&lt;&gt;</span></code>", "Sequential Containers", "Sequential Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">list&lt;&gt;</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector&lt;&gt;</span></code>", "Associative Containers", "Associative Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Screenplay: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code> Initialization And Inserting", "Screenplay: Inserting Elements", "Screenplay: Removing (Erasing) Elements", "Screenplay: Searching", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multimap&lt;&gt;</span></code>", "Allocator Basics", "Allocators", "STL: Exercises", "Exercise: Reverse a String", "Exercise: Reverse A String", "Solution: Reverse a String", "Standard Template Library", "Dynamic Memory (To Be Done)", "Dynamic Memory Allocation, Resource Management", "Inheritance Basics", "Destructors And Inheritance", "Inheritance And Object Oriented Design", "C++ \u201cInterfaces\u201d", "<em>Polymorphic</em> Usage Of Objects", "Inheritance: <code class=\"docutils literal notranslate\"><span class=\"pre\">private</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">protected</span></code> (Implementation Inheritance)", "Virtual Destructors", "Virtual Methods", "The Standard Library: Miscellaneous Topics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::string</span></code>", "Exercise: Paint the American Flag Onto Standard Output", "FH/Moodle Quiz: C++", "Exercises: Miscellaneous", "Exercise: Sum of Integers Coming From <code class=\"docutils literal notranslate\"><span class=\"pre\">cin</span></code>", "Exercises: User Database", "Exercise: Access Methods for Members", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code> Members", "Exercise: Use <code class=\"docutils literal notranslate\"><span class=\"pre\">const</span></code>", "Exercise: Default Constructor (was: Arrays of Objects)", "Exercise: Simple Method (Users Age By <code class=\"docutils literal notranslate\"><span class=\"pre\">n</span></code> Years)", "Exercise: Transform <code class=\"docutils literal notranslate\"><span class=\"pre\">struct</span> <span class=\"pre\">User</span></code> Into A Class", "Exercise: Insert a User into UserDB", "Exercise: Search a User By Lastname (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::find_if</span></code>)", "Exercise: Search, \u201cUser Not Found\u201d Exception", "Exercise: Search a User By Lastname", "Exercise: Use std::vector in UserDB", "C++", "Introduction", "History, Background", "A Live-Hacked Tour Around The New C++", "Strongly Typed <code class=\"docutils literal notranslate\"><span class=\"pre\">enum</span></code>", "Brace Initialization (Uniform Initialization)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::initializer_list</span></code>: Brace Initialization, Implementor\u2019s View", "Brace Initialization: Introduction", "Brace Initialization: A Mess", "Delegating Constructor", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constexpr</span></code>", "Afterword, Further Reading", "Move Semantics, Rvalue References", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmartPtr</span></code> With Move Semantics", "Implementing Move Semantics (<code class=\"docutils literal notranslate\"><span class=\"pre\">class</span> <span class=\"pre\">String</span></code>, Live Hacked)", "Using Move Semantics In Own Code", "Lvalues, Rvalues, And Moving", "Miscellaneous", "Duck Typing (Err, <code class=\"docutils literal notranslate\"><span class=\"pre\">auto</span></code>) Without A Duck", "Concepts", "Concepts: Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-1-conceptless.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-2-conceptless-error.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toolcase-3-concept-integral.cpp</span></code>", "Concepts: Links", "Writing Your Own Concepts", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-1-good-old-func.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-2-need-template.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-4-concept-has-size.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">example-5-concept-index-ret-double.cpp</span></code>", "Coroutines", "Coroutines: An Overview", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibo-generator.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fibonacci.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator.h</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generator-hello.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">simplest.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-iter.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">suspend-next.cpp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">default</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">=</span> <span class=\"pre\">delete</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">final</span></code>", "New Language Features", "Lambda", "Lambda", "Lambda: More Capturing", "Live Hacking: Handwritten Functors (Too Much Boilerplate)", "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)", "Modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">override</span></code>", "Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops: Introduction", "Case Study: Range Based <code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> On <code class=\"docutils literal notranslate\"><span class=\"pre\">std::map</span></code>", "Ranges And Views: Good Or Bad?", "Ranges", "Ranges: Overview", "Ranges And Views: Links", "Tuple Unpacking (Err, Structured Binding)", "Smart Pointers: Closing Words", "Smart Pointers (<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>)", "Introduction", "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::shared_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::unique_ptr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::weak_ptr</span></code>", "Perfect Forwarding", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::bind</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::function</span></code>", "Functions, Functions", "Threads Introduction", "Threads in C++", "Race Conditions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::atomic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::mutex</span></code> And Friends", "Scoped Locking", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::condition_variable</span></code> (Live Hacking Multithreaded Queue)", "Multithreading", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::promise</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">std::future</span></code> (And Some <code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>) (Some Live Hacking)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::chrono</span></code>", "New-Style Union: <code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code>", "Miscellaneous", "CRTP", "std::vector&lt;&gt;: Allocators (<em>Very</em> Incomplete)", "Classic Virtual", "Embedded Problems? Code Bloat? Type Erasure? Solutions?", "Non-Virtual, But Related", "Type Erasure (Static vs. Dynamic Polymorphism), CRTP", "Unrelated (Duck-Typed)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Automatic Virtual Dispatch Using Template Method)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code>)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::variant</span></code> (Manual Virtual Dispatch, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">std::visit</span></code>)", "Why Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">virtual</span></code>?", "Drafts", "Exercise: Bag Of Items, By Copy", "Exercise: Bag Of Items, By Shared Reference", "Exercise: Bag Of Items, By Unique Reference", "Exercises", "<code class=\"docutils literal notranslate\"><span class=\"pre\">std::filesystem</span></code>", "The New C++ (11-\u2026)", "Generated Topic Graph", "Topics", "Modern Character Devices (Screenplay)", "Modern Character Devices (Slideshow)", "Modern Character Devices", "File Operations on Character Devices (Screenplay)", "File Operations on Character Devices (Slideshow)", "File Operations on Character Devices", "Coding: First Functionality (Slideshow)", "Coding: First Functionality", "Character Device Basics (Livehacking Screenplay)", "Character Device Basics (Slideshow)", "Character Device Basics", "Coding: Multiple Devices (Slideshow)", "Coding: Multiple Devices", "Coding: Refactoring (Screenplay)", "Coding: Refactoring (Slideshow)", "Coding: Refactoring", "DMA (Slideshow)", "DMA", "Building a Fedora Kernel (Screenplay)", "Fedora: Building the Kernel", "Fedora: Building External Kernel Modules (Screenplay)", "Fedora: Building External Kernel Modules", "Linux Kernel Driver Development", "Module Loading, Hello World (Slideshow)", "Module Loading, Hello World", "Coding: Raspi GPIO Interrupts (Slideshow)", "Coding: Raspi GPIO Interrupts", "Interrupts (Slideshow)", "Interrupts", "IO Memory (Slideshow)", "IO Memory", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code> (Slideshow)", "Dynamic Memory: <code class=\"docutils literal notranslate\"><span class=\"pre\">kmalloc()</span></code>", "Doubly Linked Lists (Slideshow)", "Doubly Linked Lists", "Coding: Fix Race Condition (Mutex) (Slideshow)", "Coding: Fix Race Condition (Mutex)", "Mutex (and RT Mutex) (Slideshow)", "Mutex (and RT Mutex)", "Network Devices (Slideshow)", "Network Devices", "PCI (Slideshow)", "PCI", "Process vs.Atomic Context (Slideshow)", "Process vs.Atomic Context", "Rasperry Pi: Kernel Build", "Raspberry Pi: Building the Kernel", "Sample Code Maintenance", "Coding: Fix <em>Sleep While Atomic</em> (Slideshow)", "Coding: Fix <em>Sleep While Atomic</em>", "Spinlock (vs. Mutex) (Slideshow)", "Spinlock (vs. Mutex)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dup()</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">fork()</span></code>, and Reference Counting (Stub)", "Coding: Timed Event (Slideshow)", "Coding: Timed Event", "Timer Management (Slideshow)", "Timer Management", "To Do List", "Accessing Userspace Memory (Screenplay)", "Accessing Userspace Memory (Slideshow)", "Accessing Userspace Memory", "Waiting for Something (Screenplay)", "Waiting for Something (Slideshow)", "Waiting for Something", "Workqueue (Screenplay)", "Workqueue (Slideshow)", "Workqueue", "Exercises: Archiving And Compression", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gzip</span></code>", "Archiving and Compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tar</span></code>", "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories", "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories", "Exercises/Exams: Linux Basics", "Linux Basics", "Everything Is A File (Live Demo)", "Environment (Variables)", "FH/Moodle Quiz: Linux Basics", "Introduction: Concepts and Terminology", "Login? What Is That?", "Overview", "Processes, Scheduling, Address Spaces", "Process Hierarchy (Parent, Child Process)", "Windows Subsystem for Linux (WSL)", "Exercises: IO-Redirection, Pipes", "I/O Redirection And Pipes", "I/O Redirection", "I/O Redirection: Swap <code class=\"docutils literal notranslate\"><span class=\"pre\">stdout</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">stderr</span></code>", "Pipes", "Permissions: Mode, User and Group Ownership", "Exercise: Determine Your User Credentials", "FH/Moodle Quiz: Permissions", "FH/Moodle Quiz: Permissions", "Exercises: File System Permissions", "Exercise: Create Private Directory", "Question: Private Directory", "Exercise: Create Public Directory", "Question: Public Directory", "Exercise: Create Group-Shared File", "File System Permissions", "SetUID Programs: <code class=\"docutils literal notranslate\"><span class=\"pre\">passwd</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">sudo</span></code>, \u2026", "SetUID: Live Demo", "Ugly Hack: Sticky Bit", "Default Permissions: <code class=\"docutils literal notranslate\"><span class=\"pre\">umask</span></code>", "Commandline", "Shell Configuration File: <code class=\"docutils literal notranslate\"><span class=\"pre\">~/.bashrc</span></code>", "Copying: <code class=\"docutils literal notranslate\"><span class=\"pre\">cp</span></code>", "Current Working Directory", "Exercise: Copy Directory Tree", "Exercise: Copy Files", "Exercise: Create Files (I/O Redirection)", "Exercise: Move Files", "Exercises: Create/Copy/Move/Remove", "Exercise: <code class=\"docutils literal notranslate\"><span class=\"pre\">mkdir</span></code>", "Exercise: Funny Stuff", "Exercise: Remove Directory Tree", "Exercise: Verify, Repeat", "FH/Moodle Quiz: Shell", "The Shell - Exercises", "Exercise: File Types in <code class=\"docutils literal notranslate\"><span class=\"pre\">/dev</span></code>", "Exercise: Size of <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercises: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Exercise: Permissions of Home Directory", "Creating And Removing Files and Directories", "The Shell (Bash - \u201cBourne Again Shell\u201d)", "Symbolic Links, Hard Links", "Directory Listings: The <code class=\"docutils literal notranslate\"><span class=\"pre\">ls</span></code> Command", "Moving and Renaming: <code class=\"docutils literal notranslate\"><span class=\"pre\">mv</span></code>", "Absolute and Relative Paths", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cat</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cut</span></code>", "Exercises: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">grep</span></code>", "Tools: Inspecting Text Files", "<code class=\"docutils literal notranslate\"><span class=\"pre\">head</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">tail</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">less</span></code>", "Overview", "Drafts", "Yocto", "Linux", "Controlling a Brushless Motor With Raspberry Pi", "CAN/Linux Basics", "CAN Interfaces", "Programming", "Hardware, Kernel", "CAN Bus With Linux And Python", "Linux Hardware Interfaces", "Linux and I2C (using LM73 Temperature Sensor as Slave)", "PWM Userspace Interface (using PCA9685)", "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)", "SSH: Basics", "Exercise: Copy a File To Remote Machine, And Verify", "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)", "Exercises: SSH", "Exercise: Create SSH Key Pair", "SSH: Secure Shell", "SSH: Public Key Authentication", "SSH: Links", "SSH: Port Forwarding", "SSH: Secure Copy (<code class=\"docutils literal notranslate\"><span class=\"pre\">scp</span></code>)", "SSH File System (<code class=\"docutils literal notranslate\"><span class=\"pre\">sshfs</span></code>)", "Error Handling", "Linux Systems Programming: Basics", "System Calls vs. Library Functions", "Blocking I/O: What is That? (\u201cEverything is a file\u201d)", "Blocking I/O (On A File): What is That?", "Blocking I/O: On A Network Socket", "Blocking I/O: On A Timer? WTF?", "Blocking I/O: What Is That?", "File I/O: Basics", "Exercise: Copy A File", "Exercise: Create File With Hole", "Duplicating (Whats Going On?)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_CREAT</span></code>: Creating A File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_EXCL</span></code>: Creating A File, But Failing If It Already Exists", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_RDONLY</span></code>: Reading a File", "<code class=\"docutils literal notranslate\"><span class=\"pre\">O_WRONLY</span></code>: Writing A File (Which Must Exist)", "Exercise: Read Temperature From Onewire Sensor", "File I/O", "Miscellaneous", "Linux Systems Programming", "Get Value Of GPIO", "Introductory Live Hacking, Hardware-Wise (<code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO)", "Intro: <code class=\"docutils literal notranslate\"><span class=\"pre\">sysfs</span></code> GPIO", "Interrupts In Userspace", "Basics", "Thread Life Cycle", "Thread Creation, Race Condition", "Synchronization", "Mutex: Solve Load/Modify/Store Conflict", "Communication: Condition Variable", "Condition Variable: Message Queue", "Miscellaneous", "Last Warning", "POSIX Threads", "Trylock/islocked", "Process: Arguments, Exit Status", "Processes", "The Process Tree (And Environment, And <code class=\"docutils literal notranslate\"><span class=\"pre\">procfs</span></code>)", "Scheduling (and Multitasking)", "Scheduling", "Tasks? Processes? Threads?", "Scheduling: Exam Questions", "Realtime", "Realtime API", "Wakeup Latency, CPU Frequency (Gotcha)", "Code: Sysprog: Event Driven Programming", "Screenplay: Sysprog: POSIX IPC", "Sysprog: Events", "Code: Sysprog: POSIX IPC", "Screenplay: Sysprog: POSIX IPC", "Slides: Sysprog: POSIX IPC", "Sysprog: POSIX IPC", "Code: Sysprog: Signals", "Screenplay: Sysprog: Signals", "Slides: Sysprog: Signals", "Sysprog: Signals", "Toolchain: Basics", "CMake: Cross Build", "CMake: Local Build", "Cross Development", "Cross Development", "Exercise: Build Software Package (Cross, Raspberry)", "FH/Moodle Quiz: Toolchain", "Exercises: Toolchain", "Exercise: Build Software Package (Native)", "Exercise: Install And Check Raspberry Toolchain", "Toolchain, And Cross Development", "Case Study: Raspberry Toolchain", "Linaro Toolchain For The Pi (Defunct)", "Building A Cross Toolchain For The Raspberry Pi, Using <code class=\"docutils literal notranslate\"><span class=\"pre\">crosstool-ng</span></code>", "Building A Toolchain <em>On</em> Fedora <em>For</em> Ubuntu 18.04 (WSL)", "Cross Toolchain Setup", "Zooming In: Separate Compilation, and Linking <em>Statically</em>", "Shared Libraries (Shared Objects)", "Object Code Archives/Static Libraries", "Closures", "Comprehensions (List, Dictionary, Set)", "Context Managers: The <code class=\"docutils literal notranslate\"><span class=\"pre\">with</span></code> Statement", "Decorators", "Exception Handling", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">exec()</span></code> Function", "Python: More Language Features", "Iteration, Comprehensions, and Generators", "Implementing A Fibonacci Number Generator", "The Iterator Protocol", "Iteration, Generators, And <code class=\"docutils literal notranslate\"><span class=\"pre\">yield</span></code>", "Iterating Intelligently: Generators, and the Iterator Protocol", "Modules and Packages", "Multithreading (Python)", "Multithreading", "Race Conditions, and Mutexes", "Multithreading: Exam Questions", "Abstract Base Classes (<code class=\"docutils literal notranslate\"><span class=\"pre\">abc</span></code>), And Duck Typing", "Classes And Dictionaries", "Constructor", "Object Oriented Programming", "Inheritance", "Methods", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collections.namedtuple</span></code>", "Operator Overloading", "Properties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">str()</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">repr()</span></code>", "Positional and Keyword Arguments", "Python: The Language Fundamentals", "Python Installation", "Blahblah", "Hello World", "Running Python Programs", "Syntax etc.", "Commandline Arguments (<code class=\"docutils literal notranslate\"><span class=\"pre\">sys.argv</span></code>)", "Variables", "Datatypes", "Compound Datatypes", "Boolean", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> Statement", "<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code> Loops", "Sequential Datatypes", "Indexing and Slicing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code> Loops", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">range</span></code> Function", "References, (Im)mutability", "Functions: Global and Local Scope (Livehacking Screenplay)", "Functions (Slideshow)", "Functions", "More About Strings", "String Formatting", "Miscellaneous String Methods", "More About Lists", "More About Dictionaries", "More About Sets", "File I/O", "Function Objects", "Commandline Parsing with <code class=\"docutils literal notranslate\"><span class=\"pre\">argparse</span></code>", "Python: Draft Topics", "Matplotlib", "Package Installation (<code class=\"docutils literal notranslate\"><span class=\"pre\">setuptools</span></code>)", "Exercise: Read CSV File, Write into Sqlite3 Database", "Exercise: Read CSV File", "CSV and Databases", "Exercises", "Exercise: Boolean Expressions", "Exercise: Even Numbers (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Exercise: Greeting, Depending on Time of Day", "Exercises (External)", "Exercise: Determine Maximum of Two Numbers", "Exercise: Swap Two Variables", "Exercise: Username/Password Check", "Exercise: Digit to English Word", "Exercise: Dictionary: Errors?", "Exercise: Eliminate Empty/Comment-Only Lines", "Exercise: Generator: Fibonacci", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">for</span></code>)", "Exercises (Legacy)", "Exercise: Functions: <code class=\"docutils literal notranslate\"><span class=\"pre\">join()</span></code>", "Exercise: Determine Maximum of Two Numbers", "Exercise: Determine Maximum of Two Numbers (Function)", "Exercise: Mixed List (Executable Program)", "Exercise: Mixed List (Interactive Interpreter)", "Exercise: Parsing <code class=\"docutils literal notranslate\"><span class=\"pre\">/etc/passwd</span></code>", "Exercise: Primeness (Function)", "Exercise: Reverting Lines of a File", "Exercise: String (Right-Justify)", "Exercise: Function: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Generator: <code class=\"docutils literal notranslate\"><span class=\"pre\">uniq()</span></code>", "Exercise: Counting Lines, Words, Characters", "Exercise: Primeness (<code class=\"docutils literal notranslate\"><span class=\"pre\">while</span></code>)", "Sensors, And Data Acquisition (Exercise Series)", "Project Setup", "Exercise: Basic \u201cSensor\u201d", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.dictreader</span></code>)", "Exercise: Read CSV File (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "Exercise: Refactoring - Extract CSV Reading Into Function (<code class=\"docutils literal notranslate\"><span class=\"pre\">csv.reader</span></code>)", "User Database (Exercise Series)", "Exercise: MQTT: Publish User Records", "Exercise: Away From Raw Dictionaries", "Exercise: Convert User Record To JSON And Back", "Exercise: Refactoring - Extract Both CSV Formats Into Module", "Python: All Material, Interrelated", "Python Programming: From Absolute Beginner to Advanced Productivity", "Python Links", "Machine Learning, Artificial Intelligence", "K-Means", "Linear Regression: Running Code (<em>no Notebook!</em>)", "Weather History Dataset", "Linear Regression: Jupyter Notebook", "Linear Regression", "Machine Learning: Concepts and Terminology", "CSV Files", "DBAPI 2", "Databases", "DBAPI 2: PostgreSQL", "DBAPI 2: <code class=\"docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code>", "Encoding", "Python: Miscellaneous Topics", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">import</span></code> Statement (incomplete)", "MQTT", "Pandas: Adding Rows", "Pandas: Basics (<code class=\"docutils literal notranslate\"><span class=\"pre\">DataFrame</span></code> And <code class=\"docutils literal notranslate\"><span class=\"pre\">Series</span></code>)", "Pandas: Filters", "Pandas", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">iloc[]</span></code>", "Pandas: Indexes", "Pandas: Selecting Rows (And Columns) With <code class=\"docutils literal notranslate\"><span class=\"pre\">loc[]</span></code>", "Pandas: Adding/Modifying Columns", "XML: ElementTree (<code class=\"docutils literal notranslate\"><span class=\"pre\">etree</span></code>)", "Visual Studio Code for Python Programming", "Python: Project/Package Management", "Python Package Index (Livehacking Screenplay)", "Python Package Index (Slideshow)", "Python Package Index", "Packaging, PyPI Upload (Link Collection)", "PyTest", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> Introduction, By Example", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">unittest</span></code> Module", "Virtual Environments (Livehacking Screenplay)", "Virtual Environments (Slideshow)", "Virtual Environments", "Unit Testing With <code class=\"docutils literal notranslate\"><span class=\"pre\">googletest</span></code>", "Code: Unittest: GTest Basics", "Screenplay: Unittest: GTest Basics", "Unittest: GTest Basics", "Screenplay: Unittest: GTest and CMake", "Unittest: GTest and CMake", "Code: Unittest: GTest Fixtures", "Screenplay: Unittest: GTest Fixtures", "Unittest: GTest Fixtures", "Organisatorisches: Buchung, Kursablauf", "Linux from Scratch, 16.9.2013, M\u00fcnchen", "Shell Scripting/Bourne Again Shell (Bash)", "C: Einf\u00fchrung", "C f\u00fcr Fortgeschrittene", "C++: Einf\u00fchrung und \u00dcberblick", "An Introduction to Modern C++, In Three Days", "C and C++ Programming", "CMake", "Design Patterns For Embedded C++ Developers", "Embedded Software Development: Hardware, Realtime, and Memory Management", "Linux Kernel Driver Development", "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen", "GNU Make: Die Mutter aller Build Tools", "Advanced Python", "Basic Python", "Herdt", "Eine Woche mit dem Raspberry Pi", "Subversion (SVN)", "Linux Systems Programming: Introduction", "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries", "Linux Systems Programming", "Linux Systems Programming: Multithreading", "Linux Systems Programming: Network Programming", "Unittesting and Test Driven Development"], "terms": {"di": [0, 23, 166, 169, 237, 449, 1095, 1097, 1101, 1103], "j\u00f6rg": [0, 23, 170, 204, 212, 216, 231, 234, 237, 247, 250, 265, 286, 292, 304, 307, 308, 314, 331, 332, 334, 336, 401, 475, 1003, 1006, 1044, 1068, 1095, 1096, 1097, 1098, 1101, 1102, 1103], "faschingbau": [0, 12, 23, 37, 50, 59, 62, 134, 151, 158, 159, 167, 185, 188, 189, 191, 192, 193, 194, 204, 211, 216, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 265, 272, 282, 286, 292, 297, 304, 307, 308, 314, 331, 332, 334, 337, 340, 345, 401, 432, 449, 454, 467, 474, 475, 508, 524, 580, 626, 655, 656, 657, 658, 659, 660, 677, 835, 836, 843, 845, 850, 864, 880, 893, 899, 924, 961, 1003, 1006, 1007, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1029, 1035, 1057, 1061, 1084, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1105, 1114, 1120, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "offic": [0, 32, 157, 173], "co": [0, 12, 32, 37, 134, 148, 159, 188, 189, 191, 192, 193, 194, 255, 272, 276, 340, 345, 447, 454, 673, 1007, 1029, 1105, 1120, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1133, 1151, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "43": [0, 7, 155, 162, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 424, 437, 449, 608, 678, 728, 756, 890, 899, 912, 914, 953, 1016], "0": [0, 5, 7, 21, 23, 32, 61, 63, 107, 110, 111, 112, 119, 123, 127, 131, 136, 138, 148, 151, 153, 154, 155, 157, 163, 167, 171, 172, 173, 174, 175, 185, 188, 190, 192, 195, 200, 202, 203, 204, 205, 208, 211, 212, 213, 216, 217, 221, 224, 225, 227, 230, 232, 234, 237, 240, 243, 244, 247, 250, 252, 253, 255, 257, 262, 265, 268, 269, 270, 272, 276, 280, 281, 282, 286, 292, 302, 304, 308, 314, 320, 326, 332, 333, 334, 335, 336, 337, 340, 362, 363, 365, 367, 369, 371, 372, 373, 375, 382, 383, 385, 386, 387, 395, 398, 400, 401, 407, 408, 410, 413, 428, 429, 430, 431, 433, 434, 437, 438, 441, 443, 447, 449, 450, 453, 457, 458, 460, 463, 466, 467, 472, 474, 477, 479, 486, 487, 489, 491, 492, 493, 494, 496, 497, 498, 501, 502, 505, 506, 507, 511, 514, 515, 519, 521, 522, 523, 524, 525, 533, 539, 540, 548, 551, 557, 560, 567, 568, 569, 571, 572, 575, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 590, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 630, 632, 636, 637, 639, 640, 642, 643, 645, 647, 649, 654, 655, 656, 657, 658, 659, 660, 661, 665, 669, 670, 673, 676, 677, 678, 680, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 707, 709, 710, 712, 714, 715, 717, 719, 723, 724, 726, 727, 728, 729, 734, 737, 739, 741, 745, 747, 749, 751, 755, 759, 763, 766, 767, 771, 774, 786, 788, 798, 821, 822, 824, 839, 843, 845, 850, 853, 864, 865, 868, 890, 892, 893, 894, 899, 905, 908, 912, 913, 914, 923, 925, 928, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 944, 946, 948, 949, 955, 963, 964, 966, 968, 969, 970, 972, 975, 976, 979, 980, 982, 983, 985, 994, 997, 998, 1000, 1002, 1004, 1005, 1008, 1010, 1014, 1016, 1018, 1031, 1034, 1035, 1036, 1037, 1041, 1043, 1045, 1048, 1050, 1051, 1052, 1056, 1058, 1060, 1061, 1063, 1066, 1067, 1068, 1073, 1075, 1084, 1094, 1101, 1103, 1109, 1110, 1111, 1118, 1119, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1134, 1139, 1141, 1146, 1151], "664": [0, 227, 853], "5783814": 0, "gpg": 0, "kei": [0, 9, 32, 42, 97, 101, 102, 108, 114, 147, 149, 151, 163, 171, 180, 185, 190, 192, 193, 195, 200, 202, 204, 207, 208, 209, 211, 216, 217, 219, 221, 222, 224, 225, 227, 232, 234, 235, 237, 240, 244, 247, 249, 250, 254, 258, 261, 262, 265, 267, 268, 272, 282, 285, 286, 288, 289, 291, 292, 304, 308, 314, 319, 334, 337, 340, 345, 373, 421, 621, 623, 626, 665, 714, 761, 835, 836, 843, 900, 904, 916, 917, 918, 920, 925, 1006, 1010, 1019, 1037, 1038, 1054, 1063, 1073, 1074, 1096, 1098, 1106, 1114, 1127, 1128, 1134, 1159, 1165], "prankergass": [0, 211, 232, 880], "33": [0, 7, 149, 162, 174, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 334, 335, 336, 449, 470, 839, 880, 982, 1110, 1111], "8020": [0, 211, 227, 232, 270, 449, 835, 836, 874, 880], "graz": [0, 1, 3, 23, 59, 62, 135, 193, 211, 270, 303, 306, 324, 357, 449, 835, 836, 874, 880, 1105], "uid": [0, 232, 237, 240, 308, 340, 345, 759, 835, 836, 843, 853, 925, 940, 996, 1084], "vat": [0, 196, 1169], "atu63522469": 0, "write": [0, 13, 16, 27, 29, 37, 43, 48, 53, 54, 55, 56, 57, 59, 62, 63, 66, 70, 78, 97, 115, 119, 120, 122, 123, 125, 127, 131, 132, 152, 153, 154, 163, 168, 172, 185, 188, 189, 191, 192, 193, 204, 209, 211, 212, 213, 214, 219, 221, 222, 225, 228, 230, 232, 238, 240, 249, 252, 259, 261, 268, 278, 285, 291, 303, 316, 326, 329, 331, 340, 342, 344, 346, 351, 367, 370, 371, 376, 388, 390, 412, 423, 427, 433, 434, 437, 447, 449, 472, 475, 487, 489, 492, 503, 512, 513, 524, 525, 527, 532, 543, 549, 554, 560, 565, 567, 568, 571, 581, 583, 630, 637, 646, 649, 651, 665, 670, 681, 693, 705, 714, 720, 729, 743, 749, 755, 759, 760, 761, 767, 769, 779, 781, 788, 792, 808, 824, 835, 836, 839, 845, 850, 851, 853, 854, 855, 856, 862, 864, 866, 869, 887, 899, 901, 904, 908, 912, 913, 914, 921, 928, 930, 931, 932, 935, 937, 938, 939, 940, 942, 943, 944, 945, 946, 948, 949, 952, 956, 962, 966, 975, 976, 979, 980, 984, 987, 990, 1008, 1019, 1024, 1025, 1029, 1052, 1053, 1058, 1063, 1064, 1065, 1067, 1070, 1071, 1072, 1073, 1075, 1076, 1079, 1080, 1082, 1084, 1086, 1087, 1088, 1090, 1091, 1095, 1097, 1100, 1104, 1106, 1119, 1130, 1139, 1140, 1141, 1159, 1160, 1172], "review": [0, 153, 176, 187, 281, 364], "http": [0, 3, 4, 8, 13, 20, 23, 32, 37, 39, 44, 59, 61, 62, 85, 106, 112, 114, 126, 136, 138, 148, 156, 157, 158, 159, 163, 167, 169, 171, 179, 180, 181, 182, 188, 189, 192, 193, 201, 206, 212, 214, 215, 221, 227, 228, 230, 237, 240, 244, 252, 257, 259, 268, 271, 277, 278, 279, 281, 285, 291, 295, 296, 299, 303, 305, 307, 311, 313, 317, 319, 339, 340, 345, 360, 508, 522, 543, 585, 645, 718, 722, 727, 744, 748, 764, 779, 781, 785, 808, 809, 907, 909, 912, 948, 994, 996, 1051, 1061, 1117, 1119, 1134, 1135], "g": [0, 32, 48, 63, 97, 114, 127, 132, 155, 159, 163, 167, 172, 173, 175, 185, 200, 204, 213, 217, 221, 224, 227, 232, 234, 237, 240, 244, 262, 268, 276, 292, 317, 362, 382, 386, 389, 392, 397, 403, 404, 405, 407, 410, 425, 429, 437, 441, 442, 449, 450, 452, 455, 461, 462, 475, 479, 487, 508, 521, 524, 567, 571, 572, 601, 621, 639, 640, 669, 673, 676, 678, 687, 707, 728, 736, 740, 745, 759, 767, 786, 808, 827, 846, 853, 868, 890, 897, 900, 907, 925, 934, 944, 964, 966, 968, 979, 980, 982, 983, 984, 985, 996, 1001, 1003, 1005, 1013, 1025, 1027, 1028, 1046, 1047, 1051, 1052, 1115, 1119, 1130, 1141, 1146, 1162], "page": [0, 33, 39, 61, 72, 74, 78, 106, 114, 132, 147, 148, 149, 151, 152, 154, 155, 159, 164, 184, 189, 192, 213, 238, 268, 294, 310, 347, 371, 372, 375, 420, 431, 471, 508, 761, 767, 786, 792, 794, 806, 832, 835, 836, 852, 901, 905, 914, 925, 935, 938, 966, 1113], "r": [0, 7, 13, 31, 32, 38, 43, 61, 155, 157, 158, 162, 163, 171, 173, 174, 175, 184, 185, 188, 190, 191, 195, 200, 202, 205, 208, 211, 213, 217, 218, 221, 224, 227, 230, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 269, 270, 272, 282, 286, 292, 304, 308, 314, 317, 332, 335, 340, 349, 361, 382, 407, 437, 449, 456, 470, 489, 490, 519, 523, 587, 614, 717, 725, 759, 772, 781, 786, 804, 808, 809, 839, 845, 850, 853, 864, 867, 868, 870, 890, 897, 905, 912, 913, 914, 916, 917, 925, 936, 939, 940, 948, 982, 983, 984, 994, 996, 997, 1004, 1025, 1030, 1033, 1039, 1050, 1056, 1061, 1093, 1119, 1141, 1177], "ctb02zug3crheb0": 0, "geboren": [1, 23], "am": [1, 3, 7, 17, 32, 37, 59, 62, 65, 107, 134, 152, 153, 154, 155, 157, 158, 159, 160, 161, 171, 184, 196, 205, 241, 245, 272, 314, 578, 715, 808, 847, 896, 901, 914, 923, 925, 940, 1050, 1153, 1154, 1156, 1169, 1172, 1176], "19": [1, 7, 23, 114, 162, 164, 173, 174, 175, 184, 190, 193, 195, 200, 202, 204, 205, 208, 211, 216, 217, 221, 224, 227, 228, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 333, 334, 335, 337, 345, 348, 357, 425, 449, 456, 725, 759, 868, 890, 914, 985, 994, 1026, 1032, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1105, 1110, 1111, 1115, 1123, 1134, 1139, 1141], "6": [1, 7, 32, 61, 63, 109, 112, 153, 155, 163, 167, 169, 172, 173, 174, 175, 185, 190, 192, 197, 200, 202, 203, 205, 208, 211, 212, 213, 215, 218, 220, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 251, 253, 262, 265, 269, 272, 276, 282, 286, 292, 300, 304, 308, 314, 320, 332, 333, 335, 336, 340, 364, 365, 387, 424, 430, 441, 486, 487, 526, 527, 528, 529, 541, 560, 567, 569, 572, 575, 576, 579, 581, 584, 585, 586, 587, 605, 606, 607, 608, 614, 645, 646, 682, 728, 741, 759, 864, 887, 890, 894, 899, 905, 912, 913, 914, 928, 936, 949, 982, 994, 996, 999, 1005, 1008, 1014, 1037, 1038, 1041, 1043, 1045, 1061, 1067, 1084, 1091, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1110, 1111, 1115, 1119, 1134, 1139, 1140, 1141, 1146, 1170], "1966": [1, 23, 193, 227, 237, 247, 250, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1115], "diplom": [1, 23], "au": [1, 5, 8, 23, 32, 160, 161, 169, 170, 171, 175, 185, 196, 206, 208, 215, 231, 234, 240, 241, 243, 255, 292, 308, 335, 340, 341, 358, 1154, 1156, 1157, 1158, 1163, 1169, 1172], "technisch": [1, 23, 358, 1171], "mathematik": [1, 23], "an": [1, 3, 5, 13, 17, 21, 23, 28, 31, 38, 40, 43, 45, 46, 48, 54, 55, 57, 58, 59, 62, 69, 73, 74, 78, 82, 83, 85, 92, 107, 108, 110, 111, 114, 119, 122, 127, 130, 131, 132, 140, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 182, 184, 185, 188, 190, 191, 192, 195, 203, 204, 208, 209, 211, 212, 213, 214, 216, 219, 221, 224, 225, 228, 229, 230, 232, 235, 237, 238, 240, 244, 250, 252, 253, 257, 259, 261, 268, 271, 274, 276, 277, 278, 279, 281, 285, 286, 296, 299, 303, 307, 314, 316, 326, 327, 351, 357, 359, 363, 365, 369, 372, 373, 386, 395, 403, 407, 410, 413, 414, 425, 428, 429, 430, 431, 433, 436, 443, 447, 449, 453, 456, 462, 465, 466, 467, 470, 471, 475, 476, 477, 486, 487, 489, 490, 491, 492, 508, 510, 514, 519, 521, 523, 524, 527, 528, 529, 541, 543, 567, 568, 570, 572, 575, 576, 577, 581, 583, 584, 585, 586, 587, 600, 605, 618, 621, 624, 625, 630, 636, 639, 640, 647, 652, 656, 658, 659, 660, 661, 665, 666, 669, 673, 677, 686, 692, 705, 707, 715, 717, 724, 725, 727, 728, 729, 735, 745, 746, 759, 760, 761, 762, 767, 772, 774, 777, 779, 786, 808, 816, 821, 834, 835, 836, 840, 841, 845, 853, 862, 867, 868, 871, 874, 893, 895, 905, 912, 914, 916, 917, 922, 925, 930, 931, 932, 933, 935, 939, 940, 941, 942, 946, 948, 949, 955, 961, 963, 964, 967, 968, 969, 970, 976, 980, 982, 983, 988, 992, 997, 998, 1001, 1002, 1005, 1011, 1012, 1013, 1017, 1022, 1023, 1025, 1027, 1028, 1029, 1033, 1034, 1035, 1037, 1041, 1047, 1056, 1057, 1058, 1061, 1063, 1076, 1082, 1083, 1084, 1100, 1106, 1108, 1110, 1111, 1112, 1113, 1118, 1119, 1122, 1127, 1128, 1132, 1134, 1139, 1140, 1142, 1151, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1172, 1173, 1177], "der": [1, 3, 5, 7, 8, 11, 64, 148, 160, 161, 162, 166, 169, 170, 171, 172, 175, 177, 179, 185, 187, 196, 197, 198, 201, 202, 205, 206, 208, 211, 215, 231, 232, 234, 240, 243, 244, 247, 255, 304, 332, 340, 345, 1153, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "tu": [1, 23], "iicm": [1, 23], "1993": [1, 23], "universit\u00e4tsassist": [1, 23], "ebendort": [1, 23], "bi": [1, 3, 23, 32, 160, 161, 185, 195, 292, 1154, 1173], "1998": [1, 3, 23, 163, 171, 227, 566], "vorlesungen": 1, "programmieren": [1, 5, 171, 175, 341, 357, 1158, 1163, 1166, 1170, 1172, 1176, 1177], "basi": [1, 3, 5, 7, 24, 78, 176, 184, 205, 214, 228, 240, 274, 335, 410, 1162, 1173, 1174], "c": [1, 3, 4, 6, 9, 12, 21, 23, 38, 42, 43, 63, 65, 72, 73, 74, 78, 85, 87, 106, 109, 122, 132, 137, 147, 148, 151, 152, 153, 154, 155, 158, 165, 168, 170, 172, 180, 181, 185, 190, 191, 197, 200, 202, 207, 208, 211, 212, 221, 224, 225, 227, 231, 232, 234, 237, 240, 244, 247, 252, 253, 262, 265, 272, 278, 282, 286, 292, 295, 303, 304, 308, 311, 314, 320, 326, 335, 339, 341, 342, 347, 353, 354, 357, 359, 360, 361, 362, 363, 365, 369, 371, 373, 374, 375, 378, 381, 383, 385, 386, 387, 389, 393, 397, 398, 401, 402, 403, 404, 405, 409, 411, 413, 414, 415, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 450, 453, 454, 455, 456, 459, 460, 461, 466, 467, 469, 470, 475, 479, 485, 487, 490, 496, 508, 511, 514, 515, 516, 517, 518, 520, 521, 523, 524, 526, 532, 566, 568, 570, 571, 572, 573, 577, 578, 579, 583, 584, 586, 588, 591, 596, 601, 603, 604, 608, 610, 614, 616, 618, 620, 621, 622, 623, 626, 628, 629, 630, 632, 633, 635, 636, 637, 638, 640, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 667, 673, 674, 678, 679, 680, 681, 682, 686, 692, 693, 704, 705, 706, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 721, 722, 724, 725, 727, 728, 729, 730, 731, 733, 738, 739, 742, 743, 744, 745, 746, 749, 758, 759, 761, 762, 764, 767, 771, 772, 776, 777, 781, 783, 786, 788, 798, 808, 810, 811, 816, 824, 827, 832, 834, 840, 845, 847, 850, 865, 868, 890, 896, 899, 905, 906, 912, 913, 914, 926, 930, 931, 932, 937, 938, 939, 940, 941, 950, 953, 958, 966, 969, 971, 972, 975, 978, 979, 980, 982, 983, 984, 990, 992, 994, 998, 999, 1000, 1001, 1003, 1004, 1028, 1036, 1037, 1045, 1046, 1050, 1056, 1063, 1117, 1118, 1122, 1140, 1141, 1148, 1151, 1161, 1163, 1164, 1166, 1172, 1173, 1174, 1175, 1176, 1177], "und": [1, 3, 4, 5, 6, 7, 8, 37, 39, 145, 160, 161, 166, 170, 171, 175, 177, 179, 187, 191, 197, 201, 203, 205, 210, 212, 216, 221, 232, 236, 237, 242, 244, 248, 254, 255, 272, 282, 292, 308, 335, 336, 340, 345, 357, 359, 395, 403, 848, 895, 896, 915, 1153, 1154, 1155, 1156, 1157, 1161, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "\u00fcbertragungsprotokol": [1, 165], "forschungst\u00e4tigkeit": 1, "volltextsuch": 1, "hyperwav": [1, 3, 23], "2001": [1, 3, 23, 221, 227, 237, 240, 265], "leitung": 1, "serverprogrammierung": 1, "oo": [1, 43, 72, 73, 74, 78, 106, 114, 165, 188, 201, 203, 212, 231, 239, 242, 268, 272, 278, 280, 281, 285, 344, 353, 354, 449, 471, 513, 565, 566, 573, 636, 637, 640, 642, 643, 665, 729, 761, 800, 810, 1007, 1021, 1159, 1162], "design": [1, 3, 20, 23, 53, 57, 74, 78, 80, 82, 85, 106, 148, 149, 152, 165, 168, 188, 214, 215, 231, 277, 279, 348, 357, 359, 386, 416, 436, 437, 440, 448, 457, 464, 465, 466, 467, 469, 470, 472, 474, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 513, 521, 523, 565, 566, 572, 574, 590, 662, 711, 724, 728, 729, 731, 746, 759, 760, 761, 762, 913, 982, 1101, 1140, 1158, 1161], "analys": [1, 3, 165, 1156], "ration": [1, 3, 38, 158], "rose": [1, 3, 32], "f\u00fcr": [1, 3, 5, 64, 160, 161, 166, 170, 172, 175, 196, 197, 208, 215, 231, 243, 255, 269, 340, 345, 357, 359, 870, 1153, 1154, 1156, 1163, 1169, 1170, 1172, 1175], "java": [1, 9, 195, 196, 207, 219, 228, 626, 639, 724, 729, 736, 1018, 1031, 1037, 1046, 1169, 1177], "releasemanag": [1, 3, 23, 165, 1171], "cv": [1, 3, 23, 32, 148, 222, 1171], "subvers": [1, 3, 168, 359, 890], "systemnah": [1, 3, 5, 23, 147, 165, 972, 975, 979, 1172], "programmierung": [1, 3, 4, 5, 6, 8, 23, 145, 165, 219, 246, 255, 357, 1154, 1155, 1156, 1158, 1163, 1170, 1172, 1175], "unter": [1, 3, 23, 64, 161, 169, 170, 187, 195, 341, 896, 1154, 1155, 1158, 1163, 1166, 1170, 1173, 1175, 1176], "unix": [1, 72, 73, 74, 78, 97, 149, 152, 181, 204, 268, 326, 340, 341, 342, 353, 354, 358, 375, 429, 475, 649, 740, 759, 761, 765, 767, 800, 833, 834, 835, 850, 852, 864, 892, 895, 901, 905, 908, 913, 925, 950, 966, 976, 1032, 1056, 1084, 1154, 1155, 1157, 1161, 1163, 1165, 1166, 1170, 1172, 1173, 1174, 1176], "window": [1, 3, 32, 97, 98, 103, 104, 114, 140, 152, 157, 159, 169, 171, 184, 192, 209, 223, 225, 227, 238, 241, 252, 257, 259, 261, 267, 268, 280, 296, 302, 326, 337, 340, 343, 345, 358, 370, 437, 731, 734, 761, 838, 842, 868, 904, 934, 950, 955, 1030, 1032, 1033, 1056, 1106, 1141], "nt": 1, "salomon": [1, 3, 23], "friesach": [1, 3, 23], "bei": [1, 3, 5, 23, 160, 161, 166, 170, 175, 179, 185, 187, 196, 197, 200, 202, 240, 255, 332, 357, 968, 1153, 1154, 1169, 1171], "2006": [1, 3, 23, 227], "magicdraw": 1, "datenbankdesign": [1, 3], "einer": [1, 3, 160, 161, 166, 171, 179, 185, 187, 196, 197, 202, 209, 335, 357, 896, 968, 1153, 1154, 1158, 1169, 1170, 1175], "objektrelationalen": [1, 3], "datenbankschnittstel": [1, 3], "sp\u00e4ter": [1, 160, 170, 241, 1156], "softwarearchitekt": 1, "leiter": [1, 23], "abteilung": [1, 196, 1169], "forschung": 1, "entwicklung": [1, 3, 4, 341, 1165, 1171], "atron": [1, 3, 23], "unterpremst\u00e4tten": [1, 3, 23], "2010": [1, 3, 23, 148, 164, 227, 1031], "enterpris": 1, "architect": [1, 457, 1133], "softwarearchitektur": [1, 3, 23], "versionsmanag": 1, "ibm": 1, "clearcas": [1, 158, 1171], "massgeblich": 1, "portierung": [1, 3, 4, 165], "spielautomatensoftwar": 1, "von": [1, 3, 4, 5, 6, 7, 8, 64, 134, 160, 161, 169, 170, 179, 187, 191, 192, 194, 196, 197, 200, 203, 205, 206, 208, 217, 234, 241, 246, 253, 262, 269, 304, 340, 341, 345, 357, 359, 833, 895, 896, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1163, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176], "enea": [1, 3, 152], "os": [1, 3, 152], "nach": [1, 3, 4, 5, 160, 161, 165, 166, 171, 175, 179, 195, 196, 202, 240, 241, 247, 358, 830, 1153, 1169], "linux": [1, 3, 4, 6, 24, 37, 39, 43, 59, 61, 62, 63, 65, 72, 73, 74, 78, 84, 85, 86, 87, 98, 103, 104, 106, 116, 132, 137, 144, 147, 148, 149, 151, 153, 154, 155, 159, 162, 163, 164, 169, 176, 179, 184, 191, 213, 214, 221, 227, 230, 237, 240, 241, 244, 249, 252, 257, 259, 261, 270, 277, 279, 280, 296, 302, 316, 320, 326, 337, 339, 340, 341, 342, 346, 347, 353, 354, 357, 359, 401, 423, 431, 440, 443, 460, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 551, 565, 732, 738, 759, 760, 761, 762, 764, 765, 767, 768, 770, 772, 773, 775, 777, 778, 779, 780, 781, 782, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 812, 813, 814, 817, 818, 819, 822, 823, 825, 826, 828, 829, 831, 833, 834, 835, 836, 842, 844, 846, 849, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 896, 898, 901, 905, 907, 908, 909, 913, 915, 916, 917, 918, 919, 920, 921, 923, 924, 925, 928, 930, 931, 932, 933, 934, 935, 940, 942, 943, 946, 947, 948, 949, 951, 959, 962, 965, 967, 972, 975, 976, 979, 982, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1030, 1032, 1094, 1119, 1139, 1142, 1155, 1156, 1157, 1158, 1161, 1163, 1166, 1170], "beteiligt": [1, 23], "seit": [1, 5, 23, 179, 185, 195, 200, 1154, 1163], "april": [1, 3, 23], "selbstst\u00e4ndig": [1, 23], "fh": [1, 23, 97, 106, 109, 110, 111, 114, 131, 132, 135, 157, 204, 337, 339, 340, 345, 346, 348, 513, 524, 545, 565, 573, 588, 648, 662, 761, 838, 842, 857, 863, 882, 888, 904, 989, 992, 1148], "joanneum": [1, 135, 157, 1148], "kapfenberg": 1, "2011": [1, 3, 5, 148, 149, 164, 277, 279, 357, 361, 566, 665], "2015": [1, 23, 212, 238, 276, 307, 357, 672, 1106], "lehrveranstaltung": [1, 341], "im": [1, 3, 5, 8, 29, 32, 38, 90, 160, 161, 170, 171, 175, 179, 184, 185, 187, 188, 191, 193, 196, 197, 200, 202, 206, 208, 209, 215, 216, 219, 222, 223, 225, 228, 231, 235, 236, 237, 243, 244, 246, 248, 249, 251, 264, 266, 271, 273, 274, 278, 280, 281, 284, 285, 287, 290, 291, 293, 302, 303, 305, 306, 307, 309, 312, 318, 324, 326, 327, 328, 329, 330, 331, 340, 345, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1111, 1119, 1120, 1141, 1154, 1157, 1163, 1165, 1169, 1170, 1172, 1173, 1176, 1177], "lehrgang": 1, "softwar": [1, 5, 13, 23, 24, 41, 68, 73, 74, 78, 85, 97, 104, 114, 125, 131, 151, 159, 162, 163, 168, 179, 185, 191, 195, 204, 221, 227, 228, 237, 238, 240, 265, 277, 279, 280, 281, 294, 310, 337, 358, 359, 425, 457, 465, 466, 475, 477, 643, 729, 761, 762, 792, 839, 852, 904, 905, 912, 913, 928, 980, 989, 992, 1061, 1108, 1161, 1162, 1164, 1177], "avl": [1, 23, 149], "2018": [1, 23, 155, 227, 670], "2019": [1, 40, 133, 148, 190, 212, 261, 285, 303, 306, 307, 324, 357, 543, 670, 711, 890, 1105, 1106, 1108], "linuxexpert": [1, 23], "architekt": [1, 23], "build": [1, 4, 17, 28, 40, 42, 44, 50, 72, 73, 74, 78, 84, 87, 97, 104, 108, 114, 136, 142, 148, 152, 157, 158, 164, 168, 179, 182, 192, 213, 230, 233, 257, 259, 261, 268, 277, 279, 282, 289, 294, 295, 310, 311, 316, 343, 346, 347, 358, 359, 362, 403, 416, 431, 443, 455, 456, 457, 459, 461, 471, 485, 491, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 543, 548, 551, 565, 656, 693, 713, 723, 737, 761, 765, 768, 770, 773, 775, 777, 778, 785, 787, 788, 789, 793, 799, 804, 805, 810, 812, 817, 823, 826, 829, 865, 904, 913, 914, 938, 939, 940, 941, 955, 974, 978, 982, 985, 989, 992, 993, 997, 1044, 1055, 1061, 1134, 1139, 1145, 1149, 1154, 1159, 1161], "manag": [1, 5, 14, 23, 29, 63, 68, 72, 73, 74, 78, 94, 97, 108, 151, 153, 162, 167, 168, 176, 179, 181, 184, 188, 191, 192, 198, 199, 203, 208, 209, 212, 214, 224, 230, 233, 238, 240, 241, 247, 250, 265, 272, 279, 281, 282, 285, 286, 289, 307, 308, 314, 316, 317, 343, 344, 346, 353, 354, 358, 359, 420, 437, 448, 466, 479, 537, 543, 568, 573, 662, 673, 674, 676, 705, 710, 721, 722, 724, 725, 726, 730, 738, 758, 760, 761, 779, 785, 792, 794, 817, 823, 826, 829, 839, 843, 844, 899, 904, 913, 921, 933, 966, 967, 980, 996, 1007, 1016, 1035, 1059, 1063, 1104, 1105, 1106, 1107, 1108, 1112, 1120, 1122, 1134, 1136, 1138, 1139, 1143, 1148, 1159, 1161, 1164, 1171], "schittstel": 1, "zum": [1, 3, 5, 160, 161, 170, 175, 179, 185, 195, 208, 215, 232, 292, 358, 1154, 1156, 1157, 1158, 1170, 1173, 1175], "weiser": 1, "alter": [1, 187, 188, 238, 261, 358, 569, 577, 895, 1106], "mann": 1, "2020": [1, 23, 114, 132, 133, 148, 149, 155, 159, 160, 164, 167, 171, 190, 192, 227, 357, 524, 525, 673, 686, 835, 836, 915, 924, 942, 1031, 1105, 1110, 1148, 1170], "embed": [1, 3, 4, 5, 23, 72, 87, 104, 135, 147, 148, 149, 152, 154, 165, 168, 192, 194, 217, 260, 316, 338, 343, 345, 357, 359, 731, 741, 754, 760, 761, 796, 808, 846, 868, 914, 925, 966, 982, 1009, 1050, 1155, 1156, 1157, 1161, 1165, 1166, 1170, 1174], "comput": [1, 23, 28, 29, 32, 72, 84, 87, 101, 127, 135, 155, 194, 244, 253, 277, 279, 303, 304, 325, 338, 340, 343, 345, 357, 366, 439, 444, 445, 470, 567, 577, 580, 586, 619, 715, 728, 740, 761, 830, 837, 905, 913, 915, 916, 923, 950, 964, 967, 1031, 1119, 1134, 1164], "electron": [1, 157, 358, 913], "engin": [1, 155, 228, 230, 296, 299, 358, 429, 433, 437, 447, 478, 511, 519, 913, 1029, 1177], "kontakt": [2, 23], "curriculum": [2, 5], "vita": [2, 5], "skill": [2, 85, 148, 966, 1029], "projekt": [2, 149, 170, 1166, 1170], "stand": [3, 162, 211, 343, 808, 914, 998, 1114], "j\u00e4nner": [3, 23], "2014": [3, 149, 170, 191, 227, 261, 276, 285, 307, 910, 1106], "devicedriv": 3, "die": [3, 5, 7, 8, 37, 45, 46, 47, 51, 55, 56, 59, 62, 64, 148, 161, 166, 169, 170, 171, 172, 175, 179, 185, 187, 195, 196, 198, 200, 202, 205, 206, 208, 211, 215, 224, 231, 234, 237, 240, 243, 244, 247, 272, 300, 335, 340, 341, 345, 358, 359, 493, 507, 761, 895, 896, 968, 1106, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "pci": [3, 199, 761, 785, 786, 847, 904, 912, 948, 1164], "hardwar": [3, 5, 65, 69, 72, 73, 74, 78, 80, 127, 131, 137, 141, 151, 152, 155, 165, 168, 227, 228, 240, 277, 280, 281, 302, 306, 326, 341, 342, 343, 358, 359, 375, 386, 389, 425, 443, 447, 517, 518, 519, 520, 524, 740, 761, 788, 808, 839, 844, 845, 904, 905, 906, 907, 910, 913, 929, 931, 932, 945, 948, 980, 1153, 1162, 1164, 1170], "ein": [3, 5, 7, 8, 37, 160, 161, 166, 169, 170, 171, 172, 175, 177, 179, 187, 191, 192, 194, 195, 196, 198, 200, 202, 203, 205, 206, 208, 209, 211, 215, 217, 221, 224, 225, 231, 232, 234, 237, 240, 241, 243, 244, 247, 255, 262, 265, 272, 282, 286, 292, 300, 304, 308, 314, 320, 332, 335, 340, 345, 358, 359, 403, 531, 834, 895, 896, 968, 1036, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1163, 1166, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "messger\u00e4teherstel": 3, "de": [3, 5, 7, 8, 32, 37, 148, 160, 162, 166, 169, 170, 175, 179, 185, 187, 195, 196, 205, 206, 215, 231, 240, 243, 247, 340, 357, 434, 727, 744, 748, 830, 832, 896, 909, 1105, 1131, 1153, 1154, 1155, 1156, 1158, 1163, 1165, 1169, 1170, 1172, 1173, 1175, 1176, 1177], "untenstehenden": 3, "zeit": [3, 5, 161, 196, 314, 1154, 1156, 1176], "dato": 3, "ort": 3, "raum": [3, 175], "anbindung": 3, "verschieden": [3, 23, 185, 358, 1155, 1156, 1157, 1163, 1170, 1175], "hardwareinterfac": 3, "i2c": [3, 4, 65, 78, 81, 85, 137, 140, 152, 153, 179, 192, 268, 343, 346, 351, 358, 464, 494, 553, 554, 562, 761, 808, 904, 911, 913, 948, 1163, 1170], "spi": [3, 4, 78, 152, 170, 179, 358, 553, 554, 562, 906, 907, 908, 913, 948, 1163, 1170], "can": [3, 12, 17, 29, 57, 58, 68, 75, 80, 83, 108, 110, 111, 114, 115, 122, 126, 146, 149, 151, 152, 153, 154, 156, 157, 158, 159, 163, 167, 168, 169, 172, 174, 176, 180, 181, 182, 184, 188, 189, 190, 204, 211, 213, 221, 224, 227, 228, 230, 237, 240, 244, 247, 250, 268, 271, 274, 276, 277, 279, 282, 286, 292, 294, 307, 308, 310, 314, 326, 332, 334, 337, 340, 345, 351, 358, 363, 365, 369, 373, 377, 383, 386, 397, 401, 407, 408, 411, 418, 423, 425, 429, 430, 431, 432, 433, 436, 437, 441, 442, 443, 447, 449, 450, 452, 458, 460, 461, 467, 472, 475, 476, 479, 486, 487, 491, 492, 493, 505, 509, 518, 525, 551, 557, 567, 569, 574, 576, 577, 582, 583, 590, 601, 605, 621, 622, 627, 636, 640, 643, 647, 652, 657, 659, 660, 661, 670, 672, 675, 676, 677, 678, 682, 687, 711, 714, 715, 717, 723, 724, 727, 728, 729, 732, 735, 737, 741, 757, 759, 761, 767, 779, 794, 798, 802, 806, 808, 813, 816, 822, 834, 835, 836, 839, 840, 841, 843, 845, 846, 847, 848, 850, 851, 853, 858, 860, 862, 864, 866, 868, 869, 904, 905, 911, 912, 913, 914, 917, 919, 921, 923, 924, 925, 932, 934, 938, 942, 951, 953, 964, 967, 968, 976, 980, 984, 994, 999, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1025, 1026, 1028, 1029, 1034, 1037, 1038, 1041, 1046, 1048, 1054, 1056, 1058, 1061, 1063, 1070, 1080, 1091, 1101, 1102, 1103, 1105, 1111, 1113, 1118, 1119, 1125, 1127, 1132, 1134, 1139, 1159, 1161, 1163, 1170, 1174, 1176], "custom": [3, 27, 29, 32, 39, 97, 137, 141, 145, 148, 152, 155, 157, 158, 164, 168, 181, 189, 191, 193, 221, 227, 230, 237, 240, 241, 268, 270, 277, 279, 304, 326, 327, 328, 329, 331, 339, 340, 358, 447, 452, 471, 485, 513, 516, 519, 521, 523, 543, 565, 567, 573, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 693, 695, 705, 710, 721, 730, 738, 746, 758, 760, 761, 781, 808, 924, 955, 980, 1105, 1147], "firmwar": [3, 116, 118, 132, 140, 152, 153, 155, 162, 171, 905, 912, 948], "kunden": [3, 5, 23, 166, 270, 358, 1153], "dezemb": [3, 23], "2012": [3, 23, 148, 164, 227], "backport": 3, "integr": [3, 16, 23, 38, 43, 112, 124, 132, 149, 157, 159, 167, 179, 184, 204, 294, 303, 310, 342, 347, 348, 349, 437, 463, 466, 470, 682, 761, 781, 790, 847, 868, 905, 907, 913, 914, 1131, 1139, 1142, 1161, 1163, 1170], "touchcontrol": 3, "driver": [3, 5, 78, 85, 137, 140, 152, 155, 157, 165, 168, 169, 268, 341, 342, 357, 359, 443, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 773, 775, 777, 778, 779, 780, 782, 783, 784, 787, 788, 789, 791, 792, 793, 795, 797, 799, 801, 802, 803, 805, 807, 808, 809, 812, 814, 817, 819, 823, 826, 829, 839, 844, 847, 904, 913, 914, 934, 948, 1154, 1174, 1176], "systemintegrationsfirma": 3, "stuttgart": 3, "mai": [3, 43, 65, 108, 110, 111, 115, 131, 140, 152, 156, 158, 163, 167, 211, 221, 227, 234, 237, 240, 244, 250, 277, 286, 314, 373, 380, 382, 386, 395, 452, 456, 489, 574, 627, 725, 735, 739, 759, 790, 792, 800, 808, 841, 850, 855, 856, 868, 913, 914, 936, 938, 939, 940, 942, 997, 998, 1006, 1048, 1131, 1141], "2013": [3, 23, 148, 357], "python": [3, 4, 6, 7, 10, 13, 21, 23, 24, 28, 29, 40, 61, 65, 72, 74, 78, 85, 91, 92, 124, 135, 136, 147, 148, 149, 165, 167, 168, 171, 173, 181, 196, 197, 201, 204, 205, 206, 208, 211, 213, 220, 221, 227, 236, 237, 240, 244, 247, 268, 270, 279, 326, 327, 328, 329, 330, 331, 335, 336, 339, 341, 342, 347, 348, 349, 353, 354, 355, 357, 359, 371, 523, 664, 682, 701, 713, 719, 736, 761, 762, 868, 890, 904, 906, 911, 912, 953, 1001, 1002, 1003, 1004, 1006, 1008, 1009, 1011, 1012, 1013, 1015, 1016, 1017, 1018, 1021, 1025, 1026, 1032, 1036, 1040, 1041, 1047, 1049, 1051, 1052, 1054, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1107, 1108, 1109, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1138, 1139, 1141, 1142, 1143, 1159, 1163, 1169, 1170, 1177], "programm": [3, 59, 62, 170, 171, 175, 184, 195, 200, 204, 208, 240, 265, 277, 278, 279, 306, 335, 341, 358, 407, 420, 427, 433, 437, 567, 569, 570, 639, 673, 707, 710, 844, 850, 901, 913, 934, 968, 1029, 1030, 1034, 1056, 1113, 1120, 1133, 1156, 1159, 1164, 1172, 1173, 1175, 1177], "zur": [3, 160, 175, 179, 187, 197, 208, 335, 340, 345, 358, 968, 1154, 1156, 1157, 1158, 1170, 1175, 1176, 1177], "IT": [3, 268, 270, 358, 571], "wie": [3, 5, 160, 161, 169, 170, 171, 175, 179, 185, 187, 195, 200, 203, 210, 234, 335, 358, 1153, 1154, 1156, 1157, 1158, 1163, 1166, 1170, 1171, 1173, 1175, 1176], "beispiel": [3, 5, 23, 171, 195, 196, 218, 224, 245, 358, 1156, 1157, 1158, 1169, 1170, 1172, 1173, 1175, 1177], "e": [3, 5, 7, 32, 37, 38, 42, 48, 63, 97, 114, 126, 127, 132, 155, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 171, 173, 174, 175, 179, 185, 187, 195, 196, 200, 202, 204, 205, 208, 211, 212, 213, 216, 217, 221, 224, 225, 227, 230, 232, 234, 237, 240, 241, 244, 247, 250, 253, 262, 265, 268, 269, 272, 274, 276, 282, 286, 292, 304, 308, 314, 317, 320, 333, 334, 335, 336, 340, 345, 358, 362, 379, 382, 386, 389, 392, 397, 407, 410, 425, 429, 433, 436, 437, 449, 450, 452, 455, 461, 462, 466, 475, 479, 487, 492, 496, 508, 521, 524, 525, 560, 567, 571, 572, 582, 590, 601, 621, 639, 640, 654, 659, 666, 669, 673, 676, 687, 693, 707, 728, 737, 739, 740, 745, 759, 767, 786, 827, 834, 835, 836, 845, 846, 850, 851, 852, 853, 868, 890, 897, 912, 913, 914, 925, 934, 944, 946, 964, 967, 968, 979, 980, 982, 984, 985, 996, 1001, 1005, 1013, 1025, 1027, 1028, 1046, 1051, 1052, 1075, 1115, 1119, 1124, 1127, 1130, 1133, 1139, 1141, 1153, 1154, 1156, 1158, 1162, 1163, 1169, 1170, 1172, 1173, 1175, 1177], "bill": [3, 272], "email": [3, 32, 42, 134, 153, 159, 163, 168, 192, 208, 272, 351, 921, 1119, 1123, 1124, 1125, 1127, 1128, 1129], "kommunik": [3, 23, 1170, 1173, 1175, 1176, 1177], "extrakt": 3, "attach": [3, 173, 221, 227, 237, 240, 470, 790, 913, 966, 1113], "signaturverifik": 3, "informationssystem": 3, "februar": 3, "juni": 3, "vollautomatisch": 3, "instal": [3, 29, 32, 45, 60, 90, 97, 98, 104, 114, 131, 136, 148, 149, 152, 153, 157, 179, 182, 188, 189, 191, 193, 204, 219, 221, 222, 225, 227, 230, 235, 237, 240, 241, 249, 252, 261, 264, 271, 274, 277, 278, 279, 284, 285, 289, 290, 291, 295, 296, 306, 311, 312, 313, 318, 319, 324, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 453, 454, 460, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 537, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 705, 721, 730, 738, 746, 758, 760, 761, 781, 788, 804, 808, 809, 847, 904, 907, 912, 914, 979, 981, 984, 987, 989, 992, 1013, 1029, 1033, 1059, 1104, 1117, 1124, 1134, 1135, 1142, 1147, 1149], "serveranlagen": 3, "herstel": 3, "radar\u00fcberwachungssystemen": 3, "septemb": 3, "unterschleissheim": 3, "m\u00fcnchen": 3, "instandhaltungsarbeiten": 3, "hauseigenen": 3, "system": [3, 5, 14, 23, 37, 45, 73, 78, 80, 97, 101, 102, 108, 110, 111, 114, 127, 148, 149, 152, 153, 158, 159, 163, 165, 167, 168, 169, 170, 176, 179, 181, 182, 192, 204, 209, 212, 219, 221, 224, 225, 229, 230, 235, 237, 238, 240, 247, 250, 256, 257, 258, 265, 267, 272, 277, 282, 285, 286, 288, 308, 314, 337, 340, 341, 342, 343, 344, 345, 351, 353, 354, 357, 359, 393, 402, 409, 413, 415, 419, 422, 426, 433, 434, 435, 439, 440, 444, 445, 447, 452, 455, 457, 470, 471, 478, 491, 513, 524, 565, 600, 643, 667, 705, 738, 739, 740, 758, 759, 760, 761, 764, 767, 779, 781, 800, 806, 808, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 851, 852, 854, 855, 856, 858, 859, 860, 861, 862, 865, 868, 894, 895, 899, 904, 908, 913, 914, 915, 920, 926, 930, 931, 932, 933, 935, 938, 940, 943, 944, 946, 947, 948, 949, 959, 962, 965, 967, 968, 970, 976, 979, 980, 982, 983, 984, 1005, 1006, 1017, 1033, 1061, 1106, 1141, 1155, 1162, 1164, 1165], "auf": [3, 5, 8, 23, 64, 148, 153, 161, 166, 169, 170, 171, 175, 179, 185, 187, 195, 196, 200, 206, 208, 215, 216, 231, 234, 241, 243, 255, 335, 340, 341, 345, 358, 896, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1169, 1173, 1176, 1177], "gentoo": [3, 148, 151, 164, 443, 1154], "updat": [3, 44, 126, 131, 151, 153, 167, 171, 199, 224, 232, 247, 257, 259, 265, 272, 277, 279, 286, 292, 304, 320, 340, 347, 522, 524, 585, 818, 966, 996, 997, 998, 999, 1000, 1054, 1056, 1130, 1142, 1148, 1171], "betriebssystem": [3, 1163, 1165, 1170, 1172], "usb": [3, 4, 63, 151, 152, 153, 155, 358, 436, 786, 839, 1163], "touchscreen": 3, "cheat": [3, 33, 65, 192, 204, 440, 693, 868], "detect": [3, 32, 106, 172, 184, 405, 408, 442, 450, 548, 575, 678, 703, 724, 802, 913, 914, 940, 949, 972, 983, 984, 1085], "m\u00fcnzeinwurf": 3, "via": [3, 17, 63, 85, 117, 123, 124, 152, 155, 159, 164, 173, 188, 189, 211, 217, 238, 240, 268, 271, 274, 277, 286, 303, 339, 346, 358, 467, 472, 492, 577, 601, 712, 726, 761, 788, 808, 811, 839, 844, 850, 865, 901, 912, 923, 924, 931, 938, 948, 969, 976, 994, 1060, 1159], "gpio": [3, 4, 59, 62, 65, 72, 73, 74, 78, 84, 114, 115, 116, 118, 123, 124, 125, 149, 268, 277, 307, 330, 343, 345, 349, 761, 785, 810, 812, 817, 823, 826, 829, 904, 909, 913, 945, 949, 1163, 1170], "interrupt": [3, 63, 86, 110, 111, 170, 199, 268, 443, 761, 779, 785, 800, 802, 803, 805, 806, 810, 811, 812, 816, 817, 820, 823, 826, 827, 829, 839, 841, 844, 847, 904, 909, 926, 928, 929, 930, 931, 932, 933, 945, 947, 948, 964, 967, 968, 970, 979, 980, 1163, 1164, 1170], "m\u00e4rz": 3, "firma": [3, 166, 175, 270, 357, 1153, 1163, 1170], "spielo": 3, "intern": [3, 57, 84, 115, 119, 120, 125, 131, 185, 190, 213, 221, 224, 225, 227, 237, 240, 271, 274, 303, 333, 347, 376, 406, 421, 436, 452, 461, 466, 580, 621, 668, 711, 755, 759, 786, 794, 820, 912, 913, 914, 955, 1006, 1010, 1054, 1063, 1119, 1124], "datenkonvertierung": 3, "einem": [3, 5, 23, 160, 170, 171, 175, 179, 185, 187, 195, 196, 200, 202, 208, 234, 240, 247, 262, 340, 341, 345, 358, 1154, 1156, 1158, 1163, 1172, 1176, 1177], "konvertierung": [3, 23, 1156], "asterix": 3, "format": [3, 17, 23, 29, 30, 31, 42, 51, 53, 54, 55, 56, 90, 119, 120, 122, 134, 155, 171, 172, 174, 175, 182, 189, 191, 193, 196, 200, 209, 212, 219, 220, 222, 228, 233, 234, 238, 240, 241, 246, 249, 250, 261, 264, 265, 270, 284, 285, 286, 290, 291, 293, 299, 302, 303, 306, 307, 312, 313, 314, 318, 324, 363, 364, 369, 405, 449, 761, 762, 808, 839, 845, 868, 928, 982, 1021, 1029, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1099, 1100, 1101, 1102, 1104, 1106, 1111, 1122, 1134, 1169, 1173], "zweck": [3, 185, 1170], "extern": [3, 13, 21, 23, 29, 63, 85, 151, 155, 159, 181, 184, 191, 213, 214, 219, 230, 235, 240, 249, 270, 285, 295, 303, 311, 340, 345, 373, 377, 403, 405, 407, 409, 415, 419, 422, 426, 430, 435, 439, 444, 445, 454, 455, 551, 667, 705, 711, 758, 760, 761, 765, 768, 770, 773, 775, 778, 781, 785, 786, 787, 789, 793, 799, 805, 808, 812, 817, 818, 823, 826, 829, 904, 914, 964, 1030, 1065, 1066, 1067, 1068, 1070, 1071, 1072, 1104, 1106, 1146, 1148, 1156, 1163, 1170], "datenquellen": 3, "export": [3, 40, 61, 127, 131, 152, 163, 188, 213, 214, 217, 219, 326, 711, 764, 840, 869, 905, 913, 946, 948, 949, 994, 996, 999, 1097, 1114], "daten": [3, 185, 187, 200, 210, 215, 300, 968, 1176], "soap": [3, 32], "ip": [3, 134, 156, 159, 169, 176, 204, 337, 340, 346, 351, 548, 560, 907, 925, 931, 967, 1134, 1163, 1170, 1174, 1176], "kamera": 3, "einen": [3, 5, 23, 160, 161, 171, 175, 179, 185, 187, 195, 208, 244, 358, 626, 895, 1153, 1154, 1155, 1156, 1158, 1165, 1173, 1175, 1176, 1177], "videomautsystemen": 3, "implement": [3, 16, 23, 24, 28, 42, 50, 53, 54, 55, 59, 62, 63, 69, 82, 84, 85, 97, 110, 111, 112, 114, 130, 137, 152, 154, 157, 172, 180, 188, 190, 208, 213, 214, 221, 227, 231, 234, 235, 237, 242, 244, 259, 265, 274, 277, 278, 279, 280, 281, 286, 302, 306, 317, 327, 328, 333, 340, 351, 374, 376, 408, 418, 420, 421, 437, 447, 452, 459, 462, 463, 465, 466, 467, 469, 470, 471, 474, 475, 477, 486, 487, 491, 492, 493, 508, 512, 514, 515, 516, 517, 518, 520, 521, 522, 526, 527, 528, 529, 531, 533, 538, 541, 542, 566, 568, 572, 576, 584, 585, 586, 587, 592, 621, 627, 636, 638, 639, 640, 647, 655, 656, 657, 658, 659, 660, 661, 662, 668, 673, 674, 675, 677, 687, 702, 703, 704, 705, 711, 712, 714, 723, 727, 729, 731, 737, 752, 755, 756, 759, 760, 761, 767, 774, 777, 794, 822, 839, 841, 845, 847, 905, 912, 914, 925, 928, 934, 950, 955, 976, 1000, 1004, 1005, 1010, 1011, 1012, 1018, 1022, 1046, 1081, 1085, 1094, 1101, 1106, 1115, 1118, 1122, 1159, 1164], "gige": 3, "vision": [3, 270, 358], "clientlibrari": 3, "softwarebasiert": 3, "kamerasimul": 3, "t\u00e4tigkeiten": 3, "hardwareteil": 3, "rs232": [3, 4, 192], "lagesensor": 3, "anpassung": 3, "cryptsetup": 3, "filesystemverschl\u00fcsselung": 3, "anforderungen": [3, 1153], "applik": [3, 169], "august": [3, 23], "logistik": 3, "autom": [3, 191, 204, 235, 249, 291, 358, 905, 916, 923, 996, 998, 1006, 1106], "beteiligten": 3, "protokol": [3, 4, 1163, 1170, 1175], "server": [3, 134, 156, 159, 165, 171, 192, 204, 215, 224, 240, 247, 250, 261, 265, 272, 282, 286, 308, 314, 443, 489, 503, 834, 908, 921, 923, 931, 976, 1118, 1134, 1151, 1170], "zu": [3, 6, 8, 160, 161, 166, 169, 170, 175, 179, 185, 196, 197, 200, 202, 206, 215, 216, 231, 232, 241, 243, 247, 255, 262, 340, 345, 358, 830, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1166, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "sp": [3, 675], "tcp": [3, 152, 159, 176, 192, 297, 906, 931, 1122, 1163, 1170, 1174, 1176], "autonomen": 3, "fahrzeugen": 3, "kundenapplikationen": 3, "autonom": [3, 194, 905, 1113], "fahrzeug": 3, "mikrocontrol": 3, "seriel": [3, 4, 1163, 1165], "beratend": 3, "versionskontrol": [3, 23, 165, 1171], "architektur": [3, 23, 165, 358], "2008": [3, 163, 227, 1031], "ylog": [3, 23], "gmbh": [3, 23, 449], "dobl": [3, 23], "heizsystem": 3, "parametrisierung": 3, "anlag": [3, 200], "mit": [3, 4, 5, 7, 8, 23, 148, 160, 161, 169, 170, 171, 175, 177, 179, 187, 191, 192, 196, 197, 198, 201, 202, 205, 206, 208, 215, 216, 217, 218, 231, 240, 241, 243, 244, 247, 255, 286, 336, 340, 341, 345, 357, 359, 895, 1061, 1153, 1155, 1156, 1157, 1158, 1163, 1165, 1169, 1171, 1172, 1173, 1175, 1176, 1177], "iar": 3, "arm": [3, 151, 163, 204, 381, 788, 808, 809, 912, 925, 979, 982, 983, 994], "workbench": 3, "segger": [3, 152], "embo": [3, 152], "vba": 3, "excel": [3, 78, 153, 191, 217, 1097, 1111], "verteilung": 3, "microsoft": [3, 11, 158, 159, 162, 164, 168, 179, 187, 257, 259, 268, 277, 279, 358, 360, 408, 424, 847, 1097, 1153], "net": [3, 23, 39, 43, 114, 132, 138, 169, 170, 195, 247, 253, 448, 524, 525, 802, 808, 835, 836, 896, 931, 1119], "versionskontrollinfrastruktur": 3, "assoziiert": [3, 171, 1172, 1173], "script": [3, 38, 61, 142, 145, 148, 151, 153, 158, 159, 168, 183, 191, 192, 194, 219, 221, 227, 237, 240, 267, 268, 288, 331, 340, 357, 359, 441, 449, 460, 711, 808, 850, 853, 868, 996, 1007, 1033, 1034, 1058, 1061, 1141, 1154, 1165], "shell": [3, 4, 32, 97, 99, 101, 104, 114, 168, 172, 191, 192, 194, 232, 240, 258, 267, 288, 308, 325, 326, 339, 340, 341, 342, 345, 357, 359, 361, 443, 449, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 759, 760, 761, 808, 831, 835, 836, 837, 838, 841, 842, 843, 845, 846, 849, 850, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 883, 884, 885, 886, 896, 897, 898, 901, 904, 905, 915, 916, 917, 918, 919, 927, 933, 934, 935, 943, 945, 948, 949, 959, 962, 965, 967, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 996, 1032, 1033, 1035, 1056, 1058, 1084, 1146, 1154, 1161, 1163, 1165, 1166, 1170, 1171, 1172, 1174], "oststeiermark": 3, "erweiterung": [3, 358], "buildumgebung": 3, "cmake": [3, 4, 5, 44, 65, 72, 73, 74, 78, 87, 97, 106, 114, 149, 158, 163, 168, 179, 182, 214, 230, 257, 259, 277, 279, 343, 357, 359, 360, 451, 453, 455, 456, 459, 460, 461, 462, 463, 471, 485, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 565, 585, 761, 762, 904, 992, 1144, 1166], "www": [3, 20, 23, 59, 62, 85, 148, 158, 167, 169, 189, 192, 193, 265, 360, 727, 764, 779, 785, 809, 948, 1117, 1119], "org": [3, 4, 23, 61, 138, 144, 148, 151, 155, 159, 163, 169, 171, 182, 192, 195, 212, 221, 227, 228, 237, 240, 244, 265, 278, 305, 344, 360, 764, 779, 781, 785, 808, 809, 948, 994, 996, 1030, 1051, 1061, 1100, 1117, 1134, 1135], "confix": [3, 149], "2009": [3, 1106], "schulungen": [3, 6, 23, 148, 149, 166], "dem": [3, 5, 8, 23, 160, 161, 169, 170, 171, 175, 179, 192, 196, 206, 215, 218, 231, 232, 241, 243, 255, 286, 340, 345, 358, 359, 968, 1153, 1154, 1155, 1157, 1158, 1163, 1165, 1172, 1173, 1175], "umkrei": 3, "softwareentwicklung": [3, 4, 165], "nicht": [3, 5, 7, 23, 37, 160, 161, 166, 169, 175, 179, 196, 197, 200, 205, 208, 227, 232, 234, 240, 247, 253, 272, 282, 335, 340, 358, 896, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1169, 1170, 1171, 1172, 1175, 1176, 1177], "from": [3, 5, 8, 13, 21, 27, 33, 34, 35, 36, 39, 44, 53, 54, 56, 61, 63, 65, 68, 73, 74, 78, 81, 82, 84, 86, 90, 97, 98, 99, 101, 102, 103, 106, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 126, 131, 134, 141, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 167, 168, 169, 171, 172, 174, 175, 180, 184, 185, 188, 189, 191, 192, 193, 194, 196, 202, 203, 204, 209, 211, 212, 213, 214, 216, 218, 219, 221, 225, 227, 228, 234, 235, 237, 238, 241, 242, 244, 247, 249, 252, 256, 257, 259, 261, 262, 264, 267, 270, 274, 277, 278, 279, 280, 281, 284, 286, 288, 289, 290, 291, 296, 299, 302, 304, 306, 307, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 333, 337, 339, 340, 342, 343, 344, 345, 347, 348, 361, 362, 368, 370, 371, 375, 378, 381, 384, 385, 386, 389, 393, 400, 402, 403, 408, 409, 415, 416, 419, 422, 423, 425, 426, 427, 429, 431, 435, 436, 437, 439, 443, 444, 445, 447, 448, 450, 451, 455, 458, 459, 460, 461, 463, 465, 466, 467, 472, 476, 486, 490, 492, 508, 509, 510, 511, 513, 516, 519, 521, 522, 523, 524, 525, 543, 551, 554, 560, 565, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 580, 582, 583, 585, 586, 596, 600, 601, 618, 630, 637, 640, 642, 648, 651, 658, 662, 665, 666, 667, 669, 673, 678, 682, 687, 693, 699, 704, 705, 717, 719, 723, 724, 725, 726, 729, 731, 737, 739, 743, 751, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 777, 779, 783, 788, 790, 796, 800, 808, 809, 810, 811, 816, 818, 820, 828, 833, 834, 835, 836, 839, 840, 843, 844, 845, 847, 850, 851, 852, 858, 860, 865, 867, 868, 869, 870, 871, 873, 874, 887, 892, 900, 901, 904, 905, 907, 908, 909, 910, 913, 914, 917, 921, 925, 928, 929, 930, 931, 932, 935, 938, 940, 941, 943, 945, 948, 951, 956, 961, 962, 967, 968, 970, 979, 980, 985, 994, 996, 998, 1000, 1005, 1006, 1007, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1021, 1025, 1028, 1029, 1030, 1033, 1034, 1037, 1040, 1049, 1052, 1053, 1055, 1056, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1107, 1108, 1109, 1110, 1112, 1114, 1116, 1118, 1119, 1120, 1121, 1122, 1126, 1127, 1128, 1131, 1133, 1134, 1136, 1138, 1139, 1141, 1143, 1146, 1148, 1151, 1162, 1169], "scratch": [3, 42, 184, 912, 1113], "mathia": [3, 1154], "kettner": [3, 148], "novemb": [3, 23], "bodenseo": [3, 1170], "singen": 3, "bodense": [3, 1170], "spielesoftwar": 3, "entwurf": [3, 23], "systemschnittstellen": [3, 1172], "driverentwicklung": [3, 165], "powerpc": 3, "vanilla": [3, 155], "kernel": [3, 4, 5, 43, 61, 65, 78, 110, 111, 134, 137, 141, 142, 147, 148, 149, 151, 152, 154, 162, 163, 164, 165, 168, 170, 185, 192, 224, 237, 240, 247, 250, 265, 268, 272, 282, 286, 308, 314, 320, 326, 346, 357, 359, 401, 423, 436, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 773, 775, 777, 778, 779, 780, 787, 788, 789, 791, 793, 794, 795, 796, 797, 798, 799, 801, 803, 804, 805, 806, 807, 812, 814, 817, 819, 820, 821, 822, 823, 826, 828, 829, 833, 839, 843, 845, 846, 847, 852, 896, 901, 904, 908, 910, 911, 913, 914, 925, 928, 931, 932, 934, 937, 948, 950, 951, 964, 966, 967, 970, 975, 979, 980, 982, 1154, 1163, 1174], "abteilungsleitung": 3, "ag": [3, 32, 157, 159, 171, 185, 227, 230, 272, 334, 432, 650, 651, 652, 653, 654, 656, 657, 658, 659, 660, 661, 662, 761, 833, 982, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131], "realtim": [4, 5, 78, 80, 165, 168, 169, 268, 341, 342, 353, 354, 359, 737, 739, 761, 806, 810, 813, 816, 827, 904, 908, 913, 914, 945, 964, 965, 967, 976, 1173, 1174, 1175], "hardwareintegr": [4, 165], "netzwerkprogrammierung": [4, 1163, 1176], "multithread": [4, 29, 59, 62, 72, 73, 74, 75, 78, 147, 148, 152, 154, 165, 184, 188, 219, 228, 238, 255, 277, 279, 307, 349, 353, 354, 358, 359, 424, 434, 665, 693, 731, 760, 761, 953, 958, 967, 980, 981, 1007, 1016, 1104, 1106, 1159, 1163, 1174], "kerneldriv": 4, "rs485": 4, "In": [4, 6, 7, 23, 42, 44, 50, 63, 97, 103, 104, 106, 110, 111, 114, 131, 132, 140, 151, 152, 153, 154, 156, 158, 161, 163, 165, 167, 176, 180, 185, 190, 197, 200, 204, 205, 213, 221, 227, 230, 234, 237, 238, 240, 241, 244, 252, 268, 277, 279, 286, 295, 311, 317, 325, 335, 340, 357, 381, 395, 448, 450, 453, 454, 460, 465, 470, 471, 472, 485, 486, 487, 489, 491, 492, 508, 511, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 525, 530, 532, 565, 569, 572, 573, 576, 580, 581, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 643, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 666, 674, 678, 682, 687, 705, 712, 715, 721, 725, 730, 732, 738, 746, 758, 759, 760, 761, 769, 774, 781, 806, 808, 820, 837, 840, 841, 850, 852, 854, 858, 860, 862, 864, 879, 880, 904, 906, 912, 914, 917, 921, 924, 931, 939, 942, 945, 947, 955, 961, 966, 968, 976, 983, 987, 988, 989, 990, 992, 1006, 1013, 1014, 1030, 1033, 1051, 1053, 1063, 1064, 1074, 1083, 1089, 1094, 1102, 1106, 1115, 1118, 1122, 1130, 1131, 1141, 1142, 1156, 1160, 1163, 1170, 1172], "userspac": [4, 81, 85, 86, 127, 132, 137, 152, 153, 224, 240, 247, 250, 265, 268, 272, 282, 286, 308, 314, 358, 436, 443, 761, 766, 777, 785, 786, 794, 800, 806, 810, 816, 820, 824, 826, 844, 846, 904, 907, 911, 914, 925, 945, 947, 948, 966, 970, 976, 1163, 1164], "host": [4, 108, 151, 158, 163, 337, 351, 788, 809, 906, 912, 983, 985, 994, 1117, 1122, 1134], "devic": [4, 33, 69, 72, 73, 74, 78, 84, 89, 115, 132, 137, 151, 152, 157, 170, 191, 199, 281, 341, 342, 343, 508, 524, 525, 735, 737, 739, 759, 761, 770, 777, 778, 779, 785, 786, 789, 790, 792, 799, 808, 810, 812, 817, 823, 824, 826, 827, 829, 841, 844, 847, 850, 890, 904, 913, 925, 928, 934, 942, 948, 967, 970, 971, 973, 976, 992, 1017, 1154, 1163, 1164, 1165, 1170], "libusb": [4, 152], "gadgetf": [4, 152], "modbu": [4, 169], "verschiedenen": [4, 23, 179, 196, 1156, 1157, 1169, 1175], "rto": [4, 152], "yocto": [4, 137, 141, 142, 163, 761, 808, 902, 985, 1154], "programmiersprachen": [4, 8, 196, 206, 215, 231, 243, 1158, 1175], "incl": [4, 23, 149, 1165], "buildsystem": 4, "autoconf": [4, 61, 163], "automak": [4, 158, 163, 996, 1166], "meson": [4, 158, 163, 974, 978, 996], "ninja": [4, 32, 163, 450, 984, 996], "make": [4, 13, 17, 43, 44, 45, 61, 63, 65, 68, 70, 78, 80, 109, 116, 117, 119, 127, 137, 142, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 168, 172, 173, 176, 180, 181, 184, 188, 189, 190, 194, 203, 204, 211, 213, 214, 225, 228, 240, 244, 257, 259, 281, 286, 289, 294, 303, 310, 340, 343, 359, 392, 404, 408, 416, 423, 425, 427, 437, 443, 447, 450, 451, 452, 456, 458, 459, 461, 463, 465, 466, 467, 470, 486, 487, 492, 493, 510, 523, 525, 537, 543, 548, 554, 572, 583, 585, 587, 590, 602, 637, 639, 652, 665, 673, 678, 682, 719, 724, 725, 729, 739, 755, 756, 769, 776, 777, 781, 783, 786, 788, 808, 809, 825, 837, 847, 851, 853, 874, 887, 906, 907, 912, 913, 914, 935, 938, 940, 961, 964, 966, 968, 970, 975, 979, 982, 994, 996, 997, 998, 999, 1003, 1007, 1010, 1013, 1025, 1056, 1063, 1076, 1084, 1111, 1124, 1161, 1162, 1172], "perl": [4, 163, 707, 897, 1033], "leider": [4, 160, 227, 240, 247, 262, 1154, 1156], "objektorientiert": [4, 358, 1158], "ooa": 4, "ood": 4, "unit": [4, 72, 73, 74, 78, 82, 84, 97, 106, 114, 115, 122, 154, 172, 187, 188, 191, 192, 203, 212, 230, 244, 269, 270, 277, 281, 294, 310, 349, 353, 354, 430, 449, 450, 463, 489, 512, 518, 522, 551, 582, 711, 739, 740, 761, 762, 914, 966, 1048, 1056, 1106, 1118, 1140, 1161, 1162], "test": [4, 16, 17, 33, 40, 72, 73, 74, 78, 82, 84, 97, 114, 117, 130, 132, 148, 152, 154, 155, 157, 158, 159, 165, 168, 171, 172, 178, 179, 180, 183, 187, 188, 191, 203, 209, 212, 225, 227, 228, 230, 240, 257, 259, 279, 286, 295, 307, 311, 317, 349, 351, 353, 359, 360, 372, 434, 447, 448, 454, 458, 465, 466, 467, 468, 469, 470, 471, 474, 475, 477, 478, 487, 489, 490, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 544, 548, 560, 562, 567, 568, 569, 580, 581, 583, 584, 586, 587, 645, 656, 657, 658, 659, 660, 661, 670, 672, 675, 676, 677, 708, 714, 719, 723, 724, 725, 726, 728, 741, 755, 756, 757, 759, 761, 762, 766, 798, 808, 811, 813, 816, 824, 868, 906, 907, 912, 935, 990, 998, 1029, 1038, 1048, 1052, 1055, 1075, 1100, 1106, 1112, 1113, 1118, 1126, 1145, 1147, 1149, 1152, 1162], "driven": [4, 45, 71, 78, 82, 152, 165, 168, 179, 188, 203, 230, 268, 270, 296, 299, 359, 447, 474, 584, 586, 587, 966, 972, 973, 1131, 1139, 1162], "develop": [4, 5, 21, 45, 71, 73, 78, 80, 82, 103, 104, 112, 153, 155, 157, 158, 159, 163, 165, 168, 176, 179, 187, 188, 191, 196, 203, 209, 214, 215, 222, 224, 225, 230, 235, 260, 265, 270, 295, 296, 299, 311, 339, 341, 342, 351, 357, 359, 425, 437, 443, 447, 452, 460, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 565, 584, 586, 587, 640, 664, 738, 760, 761, 762, 765, 768, 770, 771, 773, 775, 778, 780, 781, 782, 784, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 808, 809, 812, 814, 817, 819, 823, 826, 829, 838, 841, 842, 844, 847, 904, 906, 907, 927, 933, 935, 943, 945, 959, 962, 965, 967, 983, 984, 987, 988, 989, 990, 991, 993, 999, 1031, 1061, 1063, 1106, 1139, 1140, 1161, 1174], "gui": [4, 115, 131, 151, 157, 163, 167, 230, 347, 348, 847, 950, 1172], "gtk": [4, 148], "qt": 4, "fast": [5, 43, 112, 159, 167, 191, 213, 228, 230, 244, 253, 303, 437, 543, 715, 729, 1054, 1135, 1171], "40": [5, 7, 23, 106, 148, 155, 162, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 371, 449, 470, 472, 486, 556, 557, 578, 724, 725, 726, 759, 890, 909, 912, 913, 914, 994, 1008, 1009, 1033], "jahren": 5, "wesentlichen": [5, 23, 187, 1155], "programmier": [5, 37, 357, 358, 1157, 1158, 1163, 1165, 1166, 1171, 1172], "bin": [5, 13, 23, 50, 63, 112, 114, 115, 119, 122, 125, 127, 131, 148, 151, 153, 163, 172, 175, 185, 202, 212, 221, 224, 227, 232, 237, 240, 244, 247, 250, 262, 265, 270, 272, 282, 286, 308, 314, 320, 340, 348, 450, 451, 452, 453, 455, 456, 457, 458, 461, 463, 508, 523, 524, 786, 808, 840, 843, 845, 850, 853, 864, 868, 869, 893, 894, 899, 912, 914, 930, 937, 940, 946, 960, 961, 970, 982, 983, 984, 994, 996, 999, 1003, 1009, 1033, 1060, 1061, 1084, 1093, 1094, 1109, 1122, 1134, 1139, 1141, 1153], "ich": [5, 23, 64, 160, 161, 169, 170, 171, 175, 185, 195, 203, 234, 286, 340, 358, 1117, 1153, 1154, 1163, 1170, 1171, 1177], "heut": [5, 358, 1158, 1173], "feinen": 5, "situat": [5, 112, 140, 152, 154, 163, 184, 211, 521, 522, 525, 537, 599, 676, 802, 808, 859, 861, 905, 921, 940, 968, 985, 994, 997, 998, 1046, 1154, 1159], "repertoir": [5, 8, 28, 167, 196, 206, 471], "schulungsmateri": [5, 23], "anbieten": 5, "k\u00f6nnen": [5, 23, 166, 169, 179, 185, 197, 210, 340, 341, 345, 358, 896, 1153, 1155, 1156, 1166, 1176, 1177], "da": [5, 7, 8, 64, 160, 161, 166, 169, 170, 171, 172, 179, 187, 191, 195, 196, 200, 203, 205, 206, 208, 212, 215, 216, 217, 221, 224, 231, 232, 234, 237, 240, 241, 243, 245, 253, 255, 262, 272, 282, 286, 304, 307, 314, 316, 320, 332, 335, 340, 345, 358, 896, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1169, 1170, 1171, 1172, 1173, 1176, 1177], "sich": [5, 23, 37, 160, 161, 166, 169, 170, 171, 175, 185, 187, 195, 216, 234, 237, 247, 341, 1153, 1154, 1156, 1157, 1158, 1163, 1166, 1170, 1171, 1172, 1175, 1176, 1177], "jahrelangen": 5, "erfahrung": [5, 241, 1155], "entwickelt": [5, 179, 1163, 1170, 1172], "hat": [5, 8, 23, 37, 155, 160, 161, 169, 170, 171, 172, 175, 179, 185, 187, 195, 196, 200, 202, 206, 217, 237, 292, 304, 333, 340, 358, 1032, 1153, 1156, 1158, 1163, 1170, 1171, 1172, 1175, 1176, 1177], "al": [5, 8, 23, 32, 97, 160, 161, 166, 169, 170, 171, 175, 177, 179, 187, 196, 197, 204, 206, 208, 216, 234, 235, 237, 245, 249, 291, 341, 358, 575, 724, 833, 869, 890, 895, 896, 928, 1106, 1153, 1156, 1158, 1163, 1169, 1170, 1171, 1172, 1175], "einzelunternehm": [5, 23], "werd": [5, 1153], "erster": 5, "lini": 5, "firmen": [5, 23], "gebucht": [5, 11, 161, 175, 187, 358], "um": [5, 23, 32, 160, 161, 169, 171, 175, 179, 185, 195, 196, 234, 247, 262, 358, 1153, 1155, 1156, 1157, 1158, 1163, 1169, 1173], "mitarbeit": [5, 23], "weiterzubilden": 5, "entwickeln": [5, 179], "oder": [5, 23, 148, 169, 175, 179, 185, 196, 197, 202, 216, 225, 234, 241, 868, 896, 1131, 1153, 1156, 1157, 1163, 1166, 1169, 1170, 1171, 1173, 1176, 1177], "damit": [5, 23, 160, 185, 215, 241, 340, 345, 358, 1154, 1172, 1176], "arbeiten": [5, 23, 185, 196, 1169], "softwaretest": 5, "produktingenieur": 5, "program": [5, 8, 29, 30, 42, 59, 62, 72, 73, 74, 76, 78, 84, 85, 90, 97, 101, 110, 111, 114, 115, 119, 122, 125, 127, 131, 132, 145, 147, 148, 149, 151, 152, 153, 154, 157, 159, 162, 163, 165, 167, 170, 172, 173, 175, 176, 180, 187, 188, 189, 191, 192, 193, 198, 203, 204, 209, 212, 213, 219, 221, 222, 225, 228, 231, 235, 238, 241, 242, 243, 249, 254, 258, 267, 270, 271, 274, 277, 279, 287, 288, 289, 291, 295, 311, 313, 319, 325, 326, 327, 328, 329, 330, 331, 337, 339, 340, 341, 342, 343, 344, 345, 346, 351, 353, 354, 357, 359, 364, 366, 367, 370, 372, 373, 375, 376, 377, 378, 381, 383, 386, 388, 393, 406, 415, 419, 420, 422, 424, 426, 427, 434, 436, 439, 441, 442, 443, 444, 448, 449, 450, 454, 455, 459, 460, 463, 465, 471, 475, 485, 486, 487, 491, 492, 493, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 525, 530, 532, 554, 560, 565, 566, 572, 573, 588, 591, 594, 610, 616, 620, 629, 630, 632, 633, 638, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 705, 707, 710, 715, 720, 721, 725, 730, 732, 738, 746, 758, 760, 761, 762, 766, 777, 779, 788, 808, 822, 824, 825, 838, 840, 841, 842, 843, 844, 845, 848, 850, 851, 852, 863, 868, 871, 897, 901, 904, 905, 907, 910, 911, 912, 913, 921, 925, 928, 930, 931, 932, 933, 934, 935, 938, 939, 940, 941, 943, 947, 948, 952, 956, 959, 962, 965, 966, 967, 968, 972, 973, 975, 980, 981, 983, 990, 994, 996, 999, 1000, 1001, 1006, 1007, 1009, 1015, 1016, 1017, 1018, 1029, 1032, 1036, 1037, 1040, 1041, 1044, 1048, 1049, 1051, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1111, 1112, 1113, 1115, 1116, 1118, 1119, 1120, 1122, 1126, 1133, 1134, 1136, 1138, 1139, 1143, 1146, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1164, 1165, 1166], "gem\u00e4\u00df": [5, 23, 161], "herkunft": [5, 1177], "mein": [5, 23, 160, 161, 166, 170, 171, 185, 195, 196, 215, 358, 907, 975, 1154, 1169], "muttersprach": [5, 23], "ist": [5, 7, 8, 160, 161, 166, 169, 170, 171, 175, 179, 187, 195, 196, 200, 202, 205, 206, 208, 211, 215, 217, 221, 224, 225, 230, 231, 232, 234, 237, 240, 243, 247, 253, 262, 272, 286, 304, 314, 320, 332, 335, 336, 340, 345, 358, 403, 968, 1124, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1166, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "umfasst": [5, 161], "weiterf\u00fchrend": [5, 23], "materi": [5, 8, 12, 13, 14, 17, 23, 27, 65, 97, 106, 145, 148, 149, 152, 166, 167, 184, 187, 188, 189, 191, 193, 194, 196, 198, 199, 203, 206, 209, 212, 214, 215, 218, 219, 222, 225, 228, 230, 231, 243, 246, 249, 252, 256, 257, 259, 261, 264, 271, 274, 280, 281, 285, 291, 295, 296, 299, 302, 303, 306, 307, 311, 313, 319, 340, 348, 358, 450, 452, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 467, 468, 469, 470, 472, 474, 477, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 521, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 565, 645, 725, 759, 762, 910, 921, 946, 949, 1006, 1007, 1009, 1029, 1030, 1058, 1108, 1120, 1121, 1133, 1144, 1148, 1156, 1158, 1161, 1163, 1164, 1170], "stark": 5, "gefragt": 5, "sind": [5, 7, 23, 160, 161, 170, 171, 175, 179, 187, 196, 197, 202, 205, 208, 224, 241, 340, 345, 358, 895, 896, 968, 1153, 1156, 1157, 1158, 1163, 1165, 1166, 1169, 1170, 1172, 1173, 1176, 1177], "letzter": 5, "betreffend": 5, "neuen": [5, 1158], "standard": [5, 34, 35, 36, 38, 106, 114, 144, 159, 180, 184, 189, 191, 193, 214, 221, 227, 236, 237, 240, 244, 255, 268, 270, 294, 310, 317, 331, 340, 341, 342, 343, 345, 361, 362, 363, 369, 370, 375, 376, 380, 425, 513, 532, 551, 565, 566, 610, 616, 620, 627, 628, 629, 630, 632, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 682, 687, 713, 715, 717, 718, 759, 761, 848, 851, 852, 868, 901, 915, 931, 937, 940, 953, 956, 980, 1010, 1029, 1030, 1046, 1119, 1131, 1135, 1149, 1155, 1156, 1158, 1159, 1160, 1161, 1165], "absolut": [5, 8, 29, 65, 90, 99, 114, 150, 154, 159, 165, 168, 175, 185, 188, 189, 191, 193, 204, 209, 213, 221, 227, 228, 235, 237, 238, 240, 241, 244, 249, 252, 258, 261, 264, 267, 268, 271, 274, 280, 281, 285, 288, 289, 291, 296, 299, 302, 303, 306, 307, 313, 319, 326, 327, 328, 329, 330, 331, 337, 339, 340, 343, 358, 443, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 735, 738, 760, 761, 762, 806, 818, 834, 835, 836, 837, 838, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 904, 924, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1113, 1116, 1119, 1120, 1122, 1126, 1129, 1131, 1133, 1136, 1138, 1143], "beginn": [5, 8, 29, 32, 78, 90, 149, 150, 160, 165, 168, 179, 185, 188, 189, 191, 193, 204, 219, 222, 223, 225, 228, 235, 238, 241, 245, 252, 264, 271, 274, 280, 281, 291, 296, 299, 302, 303, 306, 307, 313, 319, 326, 327, 328, 329, 330, 331, 339, 340, 343, 385, 693, 761, 762, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1031, 1037, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1113, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143], "advanc": [5, 8, 29, 78, 90, 149, 159, 165, 168, 173, 176, 179, 189, 193, 201, 204, 209, 219, 224, 225, 235, 249, 271, 291, 313, 319, 326, 327, 328, 329, 330, 331, 339, 340, 341, 342, 343, 357, 435, 437, 439, 444, 445, 597, 667, 705, 740, 758, 760, 761, 762, 949, 1006, 1007, 1009, 1014, 1015, 1016, 1017, 1021, 1029, 1031, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1111, 1112, 1113, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143, 1146, 1160], "product": [5, 8, 29, 38, 43, 78, 85, 90, 154, 165, 168, 188, 189, 191, 193, 209, 228, 235, 238, 241, 249, 252, 261, 264, 271, 274, 276, 280, 281, 285, 291, 296, 299, 302, 303, 306, 307, 313, 319, 326, 327, 328, 329, 330, 331, 339, 340, 343, 443, 447, 463, 761, 762, 905, 914, 985, 999, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1113, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143], "gro\u00dfe": [5, 37, 185, 1172], "thema": [5, 23, 170, 187, 241, 255, 340, 345, 1153], "einfach": [5, 171, 185, 196, 200, 282, 1157, 1158, 1163, 1169, 1171, 1173, 1175, 1177], "doch": [5, 208, 282, 292, 358, 1175], "m\u00e4chtig": 5, "vermutlich": [5, 185, 1175], "grund": [5, 1156, 1163], "warum": [5, 7, 23, 196, 197, 205, 247, 1163, 1169, 1170, 1175, 1177], "gern": [5, 185, 1153, 1163, 1170], "nachgefragt": 5, "werden": [5, 8, 37, 160, 161, 166, 169, 170, 171, 179, 185, 187, 196, 197, 200, 206, 215, 216, 231, 243, 255, 896, 1153, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1169, 1170, 1172, 1173, 1175, 1176, 1177], "deren": [5, 23, 169, 191, 1158, 1171, 1175, 1176], "kernkompetenz": 5, "liegt": [5, 23, 160, 171, 175, 244, 1157, 1173], "sondern": [5, 171, 185, 196, 1154, 1163, 1166, 1169, 1176], "eher": [5, 160, 196, 1155, 1169], "beiwerk": 5, "ihrem": [5, 23, 1153], "eigentlichen": 5, "job": [5, 163, 184, 194, 253, 430, 905, 930, 931, 932, 1001, 1019, 1031, 1035, 1111, 1139], "schreiben": [5, 175, 197, 340, 341, 345, 1156, 1173, 1175], "physik": [5, 175], "z": [5, 38, 109, 171, 172, 175, 185, 195, 227, 228, 240, 243, 265, 292, 370, 380, 391, 392, 453, 586, 649, 719, 834, 895, 980, 1032, 1154, 1163, 1165, 1170], "b": [5, 7, 21, 31, 32, 38, 63, 73, 74, 107, 134, 155, 167, 171, 172, 173, 175, 185, 190, 195, 200, 202, 205, 208, 211, 218, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 297, 304, 308, 314, 320, 332, 334, 335, 336, 372, 380, 382, 391, 407, 421, 424, 437, 567, 569, 577, 578, 584, 585, 586, 587, 592, 636, 637, 642, 643, 672, 678, 712, 719, 729, 759, 808, 839, 851, 868, 890, 895, 896, 912, 913, 914, 953, 969, 998, 1004, 1013, 1016, 1028, 1036, 1037, 1043, 1046, 1048, 1050, 1051, 1056, 1119, 1122, 1134, 1154, 1163, 1165, 1170], "guter": [5, 1154], "ersatz": [5, 196, 1169], "matlab": [5, 173, 175, 228, 358, 1105, 1108], "tester": [5, 149, 1139, 1165], "basic": [5, 10, 28, 29, 31, 72, 73, 74, 77, 78, 83, 97, 101, 103, 106, 110, 111, 114, 118, 119, 120, 121, 124, 127, 131, 132, 148, 149, 152, 154, 159, 162, 167, 168, 173, 176, 179, 188, 201, 214, 219, 230, 238, 240, 243, 244, 268, 270, 277, 278, 279, 287, 295, 305, 309, 311, 317, 339, 340, 341, 342, 343, 345, 347, 351, 357, 359, 409, 415, 419, 422, 426, 435, 437, 439, 441, 442, 444, 445, 452, 454, 455, 462, 469, 471, 472, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 543, 559, 560, 565, 591, 599, 604, 616, 620, 628, 629, 632, 633, 637, 638, 639, 650, 657, 658, 659, 660, 661, 662, 667, 670, 671, 673, 676, 678, 705, 722, 738, 746, 756, 758, 760, 761, 765, 768, 770, 775, 778, 785, 789, 799, 808, 810, 812, 817, 823, 826, 828, 829, 831, 835, 836, 842, 844, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 910, 911, 916, 917, 918, 919, 920, 930, 931, 932, 933, 935, 940, 943, 945, 953, 959, 962, 965, 967, 975, 978, 979, 983, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 999, 1037, 1065, 1092, 1093, 1104, 1105, 1114, 1120, 1126, 1127, 1129, 1144, 1148, 1160, 1161, 1174], "einf\u00fchrung": [5, 175, 179, 192, 194, 359, 1029, 1155, 1160, 1161, 1163, 1172, 1174], "anhand": [5, 6, 170, 179, 192, 194, 196, 197, 246, 357, 359, 1155, 1161, 1169, 1174], "beispielen": [5, 8, 166, 192, 194, 196, 206, 215, 231, 243, 358, 359, 1161, 1174], "memori": [5, 42, 43, 49, 55, 73, 78, 80, 97, 109, 110, 111, 147, 151, 152, 153, 155, 157, 164, 168, 172, 173, 174, 177, 179, 184, 190, 191, 199, 203, 204, 208, 221, 227, 230, 237, 240, 255, 277, 279, 281, 286, 303, 306, 358, 359, 361, 375, 381, 403, 404, 410, 423, 425, 426, 428, 434, 435, 437, 439, 443, 444, 445, 472, 487, 489, 491, 492, 493, 495, 497, 498, 505, 506, 513, 530, 532, 533, 557, 565, 566, 571, 572, 582, 600, 601, 602, 618, 637, 647, 662, 665, 667, 676, 703, 705, 710, 717, 722, 724, 725, 726, 758, 759, 760, 761, 770, 775, 778, 780, 785, 789, 799, 803, 804, 805, 808, 810, 812, 813, 817, 820, 826, 829, 839, 844, 846, 852, 904, 921, 930, 950, 952, 953, 966, 967, 999, 1003, 1016, 1017, 1030, 1037, 1118, 1156, 1157, 1160, 1164, 1165, 1174], "weiter": [5, 23, 37, 160, 161, 185, 187, 196, 210, 234, 252, 282, 896, 1153, 1163, 1169, 1170, 1172, 1173, 1177], "standbein": [5, 1163], "mehreren": [5, 185, 201, 1176], "auspr\u00e4gungen": 5, "commandlin": [5, 8, 29, 31, 42, 80, 90, 99, 114, 145, 148, 170, 172, 192, 194, 204, 206, 209, 213, 219, 230, 231, 235, 241, 242, 243, 246, 249, 264, 271, 274, 280, 284, 285, 290, 291, 302, 312, 313, 318, 319, 324, 340, 341, 342, 343, 344, 358, 415, 419, 422, 426, 435, 439, 444, 445, 448, 450, 460, 471, 485, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 667, 705, 738, 758, 760, 761, 777, 808, 831, 835, 836, 837, 838, 841, 842, 848, 849, 850, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 905, 913, 927, 933, 935, 943, 945, 959, 961, 962, 965, 967, 981, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1000, 1029, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1155, 1163, 1165, 1166, 1170, 1171, 1172], "konzept": [5, 23, 358, 1163, 1165, 1172], "zielpublikum": 5, "deckt": 5, "ungef\u00e4hr": [5, 160], "mehr": [5, 11, 23, 160, 169, 171, 195, 201, 221, 358, 1153, 1154, 1156, 1158, 1163, 1170, 1171, 1172, 1177], "kernentwickl": 5, "themen": [5, 23, 166, 177, 179, 1163], "applikationsentwicklung": 5, "direkt": [5, 23, 179, 1156, 1172], "systemschnittstel": 5, "schritt": 5, "geht": [5, 7, 8, 23, 64, 160, 161, 169, 171, 179, 185, 195, 196, 200, 205, 206, 215, 216, 231, 237, 243, 253, 335, 358, 896], "nur": [5, 23, 160, 166, 170, 171, 175, 185, 187, 195, 196, 200, 202, 210, 232, 335, 358, 1155, 1156, 1163, 1166, 1169, 1170, 1171, 1173, 1175, 1176, 1177], "mutig": 5, "pool": [5, 83, 213, 828, 967, 969], "absprach": [5, 1153], "individuel": [5, 23, 187, 1153], "zusammengestellt": 5, "schulungsverlauf": 5, "meisten": [5, 23, 179, 185, 358, 1154, 1175], "recht": [5, 7, 64, 120, 160, 161, 171, 179, 185, 196, 205, 1169, 1170], "dynamisch": [5, 179, 210, 1156, 1158, 1173], "teilnehm": [5, 166, 175, 179, 187, 358, 1163, 1170], "haben": [5, 160, 161, 170, 175, 179, 187, 195, 196, 208, 358, 626, 1154, 1155, 1156, 1157, 1158, 1163, 1169, 1171, 1172, 1173, 1176], "oft": [5, 23, 160, 185, 187, 1157], "bed\u00fcrfniss": [5, 23, 187], "vorab": [5, 166, 179, 215], "bekannt": [5, 23, 185, 1158], "waren": [5, 170, 175, 1154, 1158], "wodurch": [5, 23], "auch": [5, 23, 160, 161, 166, 171, 175, 185, 197, 200, 202, 208, 211, 216, 237, 241, 247, 272, 335, 336, 358, 1153, 1154, 1155, 1156, 1157, 1163, 1166, 1170, 1175, 1177], "mal": [5, 161, 175, 185, 196, 247, 314, 358, 1154, 1158, 1169], "agenda": [5, 23, 27, 176, 281, 285, 289, 291, 295, 303, 307, 311, 313, 314, 317, 319, 357], "abgewichen": 5, "wird": [5, 7, 23, 160, 161, 166, 169, 170, 171, 179, 185, 195, 196, 202, 205, 234, 320, 340, 345, 358, 1153, 1154, 1157, 1158, 1163, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "verh\u00e4ltni": 5, "vortrag": [5, 170, 1153], "\u00fcbungen": [5, 8, 166, 179, 187, 196, 197, 206, 215, 231, 243, 358, 1156, 1163, 1165, 1169, 1172], "ca": [5, 23, 32, 160, 162, 748, 1134], "50": [5, 7, 106, 109, 162, 173, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 341, 342, 432, 434, 450, 521, 556, 557, 890, 912, 913, 914, 1008, 1031, 1051, 1063, 1110, 1111, 1123, 1139], "kleiner": [5, 7, 205, 895], "den": [5, 161, 169, 170, 171, 175, 179, 185, 187, 195, 196, 201, 208, 215, 244, 292, 340, 341, 345, 358, 830, 1154, 1155, 1156, 1157, 1158, 1163, 1166, 1169, 1170, 1176, 1177], "teilnehmern": [5, 358, 1177], "pc": [5, 78, 108, 148, 204, 268, 326, 343, 346, 525, 906, 907, 913, 1154], "erledigt": 5, "speziel": [5, 166, 195, 196, 255, 1166, 1169, 1172, 1176], "fortgeschrittenen": 5, "programmierthemen": 5, "gruppenprojekt": 5, "gegenstand": [5, 1153], "denen": [5, 23, 160, 1163], "zusammenarbeiten": 5, "austauschmedium": 5, "solch": 5, "set": [5, 9, 14, 21, 29, 33, 59, 62, 65, 78, 85, 90, 108, 114, 115, 134, 152, 153, 154, 155, 156, 157, 158, 159, 163, 167, 168, 169, 172, 173, 184, 185, 188, 189, 191, 192, 193, 196, 197, 201, 202, 203, 207, 209, 210, 213, 215, 219, 220, 222, 223, 225, 226, 228, 229, 231, 233, 235, 236, 237, 242, 243, 245, 246, 248, 249, 251, 257, 259, 261, 263, 264, 266, 268, 270, 271, 273, 274, 277, 278, 279, 281, 283, 284, 285, 287, 290, 291, 293, 296, 299, 302, 303, 305, 306, 307, 309, 312, 313, 315, 318, 319, 321, 324, 340, 345, 347, 358, 360, 375, 381, 398, 403, 404, 413, 416, 428, 429, 437, 443, 451, 452, 453, 455, 457, 459, 460, 462, 467, 470, 472, 487, 492, 501, 502, 506, 515, 516, 521, 522, 523, 524, 541, 569, 570, 584, 585, 586, 587, 600, 669, 678, 693, 723, 724, 739, 759, 761, 779, 792, 794, 804, 808, 813, 818, 840, 847, 853, 869, 905, 907, 912, 914, 921, 926, 928, 934, 942, 946, 950, 955, 963, 964, 967, 968, 979, 981, 982, 983, 994, 997, 1003, 1006, 1007, 1010, 1019, 1020, 1026, 1029, 1030, 1033, 1037, 1042, 1061, 1083, 1094, 1101, 1102, 1104, 1106, 1108, 1111, 1112, 1113, 1115, 1119, 1133, 1134, 1146, 1148, 1151, 1162, 1169], "gew\u00f6hnlich": [5, 23], "github": [5, 8, 23, 42, 44, 65, 97, 106, 109, 114, 134, 136, 148, 149, 159, 163, 164, 166, 167, 170, 172, 179, 180, 181, 191, 193, 198, 199, 203, 204, 206, 213, 214, 215, 219, 221, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 249, 252, 256, 257, 259, 260, 261, 264, 268, 271, 277, 278, 279, 281, 285, 289, 291, 295, 296, 299, 303, 307, 311, 313, 317, 319, 339, 344, 345, 346, 347, 354, 359, 360, 512, 543, 585, 764, 767, 769, 772, 774, 777, 786, 788, 798, 800, 808, 809, 810, 811, 816, 820, 907, 912, 914, 982, 983, 984, 986, 992, 996, 998, 999, 1000], "endprodukt": 5, "bleibt": [5, 23, 1173], "homepag": [5, 13, 156, 158, 166, 169, 170, 184, 211, 219, 221, 256, 257, 259, 434, 994, 1139], "erhalten": 5, "hier": [5, 8, 17, 23, 64, 160, 161, 166, 169, 170, 172, 175, 179, 187, 191, 195, 196, 202, 206, 212, 215, 216, 225, 231, 234, 243, 244, 286, 304, 358, 1153, 1156, 1163, 1169, 1170, 1172, 1173, 1175], "mix": [5, 29, 191, 198, 209, 212, 219, 222, 225, 226, 230, 232, 235, 264, 271, 284, 285, 290, 291, 293, 312, 313, 318, 319, 324, 386, 425, 428, 429, 431, 433, 576, 761, 1034, 1037, 1053, 1056, 1065, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1105, 1119, 1124, 1130, 1174], "j\u00fcngeren": 5, "2023": [5, 60, 96, 106, 114, 269, 270, 273, 276, 287, 293, 304, 315, 357, 448, 449, 718], "10": [5, 7, 31, 63, 97, 102, 105, 106, 109, 114, 141, 148, 154, 155, 160, 162, 163, 173, 174, 185, 190, 192, 196, 197, 200, 202, 205, 208, 209, 211, 216, 217, 218, 219, 221, 222, 224, 225, 227, 232, 234, 237, 240, 244, 247, 249, 250, 252, 253, 263, 265, 270, 272, 279, 280, 281, 282, 285, 286, 291, 292, 297, 301, 304, 308, 314, 320, 326, 333, 334, 335, 336, 339, 353, 354, 357, 369, 371, 373, 375, 383, 401, 408, 425, 427, 441, 451, 461, 491, 511, 513, 514, 516, 519, 522, 527, 530, 550, 551, 556, 557, 559, 560, 565, 575, 578, 580, 587, 654, 655, 661, 665, 672, 676, 677, 703, 715, 724, 725, 726, 727, 737, 761, 798, 808, 816, 837, 839, 845, 864, 868, 870, 890, 892, 896, 899, 907, 912, 913, 914, 931, 940, 948, 975, 978, 982, 983, 984, 996, 997, 1006, 1008, 1009, 1037, 1038, 1045, 1067, 1068, 1088, 1094, 1105, 1106, 1110, 1111, 1127, 1128, 1134, 1139, 1151, 1169], "09": [5, 97, 112, 148, 155, 164, 188, 204, 269, 304, 314, 337, 357, 449, 452, 890, 913, 914, 938, 1033, 1110], "11": [5, 7, 40, 63, 106, 114, 148, 149, 164, 173, 174, 179, 180, 184, 185, 190, 191, 192, 196, 197, 200, 202, 205, 208, 211, 214, 216, 217, 218, 221, 226, 227, 228, 232, 234, 237, 240, 244, 247, 250, 253, 256, 257, 262, 266, 269, 272, 276, 282, 286, 292, 300, 303, 304, 315, 316, 320, 324, 332, 333, 334, 335, 336, 343, 346, 353, 354, 357, 359, 361, 375, 441, 443, 457, 469, 522, 550, 559, 560, 566, 568, 569, 571, 575, 577, 578, 584, 586, 596, 601, 603, 608, 621, 622, 623, 626, 639, 663, 667, 670, 673, 674, 679, 680, 681, 682, 692, 704, 705, 706, 707, 708, 709, 710, 712, 715, 716, 719, 721, 724, 725, 727, 728, 730, 737, 738, 739, 742, 744, 746, 758, 759, 761, 762, 833, 846, 890, 899, 953, 958, 982, 983, 984, 1032, 1038, 1043, 1061, 1095, 1097, 1101, 1103, 1105, 1108, 1110, 1111, 1122, 1139, 1151, 1158, 1159, 1160, 1169], "introduct": [5, 29, 72, 73, 74, 78, 97, 98, 99, 106, 114, 132, 165, 168, 213, 214, 228, 230, 238, 241, 249, 252, 258, 260, 261, 267, 268, 270, 277, 280, 281, 285, 288, 296, 299, 302, 303, 306, 339, 344, 348, 357, 359, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 543, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 674, 686, 693, 705, 721, 730, 738, 746, 758, 760, 761, 762, 810, 831, 835, 836, 837, 838, 841, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 903, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 948, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1029, 1102, 1103, 1104, 1113, 1133, 1138, 1160, 1174], "07": [5, 97, 106, 114, 148, 162, 164, 175, 188, 217, 218, 252, 257, 269, 270, 276, 292, 339, 353, 354, 357, 455, 835, 836, 912, 1033, 1061, 1105, 1110], "18": [5, 7, 63, 155, 162, 163, 167, 173, 174, 190, 195, 200, 202, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 233, 234, 240, 244, 247, 250, 253, 262, 266, 268, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 333, 335, 336, 339, 357, 575, 640, 704, 712, 724, 761, 772, 781, 808, 845, 851, 853, 887, 890, 904, 914, 938, 940, 974, 985, 992, 993, 994, 997, 1026, 1061, 1068, 1110, 1111], "For": [5, 40, 112, 114, 150, 151, 152, 156, 159, 162, 164, 165, 167, 168, 173, 176, 181, 182, 184, 188, 204, 209, 212, 219, 222, 225, 230, 240, 243, 245, 249, 257, 259, 260, 261, 285, 291, 296, 307, 351, 357, 359, 371, 372, 378, 393, 402, 409, 415, 419, 422, 424, 426, 435, 439, 444, 445, 462, 487, 543, 568, 575, 579, 592, 601, 621, 667, 705, 712, 715, 719, 724, 729, 758, 760, 761, 779, 794, 808, 835, 836, 845, 868, 904, 905, 913, 914, 915, 924, 928, 955, 976, 983, 984, 985, 992, 993, 997, 1030, 1031, 1041, 1048, 1056, 1079, 1084, 1106, 1109, 1111, 1113], "04": [5, 97, 105, 114, 135, 148, 159, 162, 164, 179, 180, 204, 252, 268, 269, 272, 276, 304, 337, 339, 357, 450, 761, 904, 985, 992, 993, 997, 1110, 1139], "20": [5, 7, 8, 23, 63, 148, 155, 157, 162, 171, 172, 173, 174, 185, 190, 195, 196, 200, 202, 205, 206, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 269, 272, 276, 278, 282, 286, 293, 296, 297, 299, 304, 308, 314, 335, 336, 339, 357, 363, 365, 367, 383, 407, 447, 487, 515, 516, 521, 550, 551, 556, 557, 559, 560, 575, 672, 675, 676, 677, 686, 693, 715, 717, 718, 723, 724, 725, 726, 748, 827, 833, 853, 868, 890, 905, 912, 913, 914, 968, 985, 994, 1008, 1009, 1033, 1052, 1060, 1061, 1087, 1110, 1111, 1139, 1141, 1148], "clean": [5, 53, 63, 123, 135, 167, 219, 238, 357, 425, 436, 437, 440, 446, 567, 665, 762, 982, 984, 994, 1003, 1056, 1105], "code": [5, 21, 23, 28, 29, 33, 40, 42, 53, 55, 63, 65, 70, 73, 80, 85, 103, 104, 108, 114, 131, 135, 137, 145, 149, 151, 152, 153, 154, 155, 158, 159, 166, 167, 170, 172, 175, 176, 177, 179, 180, 181, 184, 187, 188, 189, 191, 193, 198, 203, 204, 208, 212, 213, 214, 219, 221, 222, 224, 227, 230, 235, 237, 238, 240, 241, 249, 259, 261, 264, 268, 270, 271, 274, 277, 279, 282, 284, 285, 286, 290, 291, 292, 295, 296, 299, 302, 303, 307, 311, 312, 313, 314, 316, 317, 318, 319, 324, 325, 326, 335, 340, 345, 357, 360, 367, 369, 373, 377, 383, 397, 403, 408, 424, 425, 429, 431, 433, 439, 440, 442, 443, 444, 445, 446, 450, 452, 453, 454, 456, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 474, 475, 477, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 546, 548, 549, 551, 552, 554, 555, 557, 558, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 593, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 630, 636, 637, 639, 640, 642, 643, 645, 651, 654, 658, 659, 665, 666, 670, 672, 674, 675, 676, 678, 680, 682, 693, 702, 703, 704, 705, 707, 708, 709, 710, 712, 714, 719, 723, 724, 726, 727, 728, 729, 737, 739, 741, 743, 745, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 767, 772, 785, 786, 800, 806, 808, 813, 820, 823, 824, 826, 829, 847, 874, 904, 905, 913, 914, 929, 930, 946, 949, 953, 957, 966, 970, 972, 973, 975, 977, 979, 981, 982, 983, 984, 985, 986, 987, 989, 990, 992, 994, 1005, 1006, 1008, 1009, 1010, 1014, 1016, 1025, 1027, 1030, 1031, 1033, 1034, 1040, 1041, 1042, 1048, 1052, 1053, 1054, 1061, 1081, 1085, 1104, 1108, 1120, 1122, 1131, 1133, 1139, 1140, 1142, 1146, 1147, 1148, 1151, 1152, 1159, 1164, 1172, 1173, 1177], "With": [5, 29, 132, 135, 140, 153, 159, 179, 240, 249, 268, 270, 271, 274, 279, 286, 294, 296, 299, 303, 307, 310, 324, 357, 398, 427, 443, 453, 463, 464, 473, 485, 499, 513, 565, 674, 705, 760, 761, 762, 808, 837, 838, 904, 911, 912, 943, 945, 962, 980, 983, 994, 1025, 1029, 1104, 1120, 1124, 1126, 1128, 1135, 1159, 1161, 1162, 1164], "03": [5, 97, 105, 114, 148, 149, 157, 162, 164, 171, 179, 214, 235, 237, 240, 269, 270, 273, 276, 282, 295, 314, 336, 339, 343, 357, 359, 441, 448, 449, 450, 511, 543, 560, 566, 568, 569, 571, 575, 576, 578, 580, 583, 664, 870, 994, 1110, 1148, 1158], "28": [5, 7, 23, 97, 105, 115, 148, 155, 162, 163, 173, 174, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 334, 335, 336, 353, 354, 357, 449, 461, 508, 524, 525, 548, 557, 640, 687, 798, 850, 890, 914, 942, 983, 984, 996, 1063, 1110, 1151], "29": [5, 7, 97, 106, 162, 163, 173, 174, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 315, 320, 332, 335, 339, 353, 354, 357, 449, 727, 772, 912, 914, 982, 985, 994, 1110], "sap": [5, 219, 270, 357, 1126], "13": [5, 6, 7, 63, 106, 135, 145, 155, 157, 164, 171, 173, 174, 185, 190, 193, 197, 200, 202, 205, 208, 211, 216, 218, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 270, 273, 276, 282, 286, 292, 297, 304, 308, 314, 320, 335, 336, 357, 441, 448, 453, 456, 567, 682, 724, 772, 850, 890, 913, 938, 948, 968, 996, 1003, 1005, 1046, 1057, 1110, 1111, 1134, 1169], "15": [5, 7, 61, 63, 106, 112, 114, 148, 151, 159, 162, 171, 173, 174, 182, 185, 188, 190, 196, 197, 200, 202, 204, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 235, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 287, 292, 296, 297, 299, 304, 308, 314, 320, 333, 335, 336, 337, 339, 346, 353, 354, 357, 449, 515, 516, 533, 534, 535, 536, 538, 539, 642, 702, 725, 747, 749, 751, 759, 837, 851, 905, 939, 948, 1018, 1109, 1110, 1111, 1131, 1134, 1169], "02": [5, 97, 106, 114, 148, 155, 162, 164, 171, 175, 201, 211, 238, 252, 269, 270, 276, 353, 354, 357, 441, 449, 450, 914, 982, 983, 984, 994, 996, 1110], "17": [5, 7, 63, 96, 106, 114, 157, 163, 167, 171, 173, 174, 185, 190, 192, 195, 200, 202, 205, 208, 211, 216, 217, 221, 226, 228, 229, 233, 234, 235, 237, 240, 244, 247, 253, 256, 257, 263, 265, 269, 272, 276, 282, 287, 292, 296, 297, 299, 304, 308, 314, 320, 332, 335, 336, 357, 575, 623, 664, 673, 682, 703, 715, 725, 744, 759, 772, 808, 839, 890, 914, 930, 936, 966, 970, 997, 1005, 1026, 1068, 1110, 1111, 1119, 1131], "tour": [5, 160, 219, 256, 257, 259, 279, 316, 317, 357, 358, 511, 663, 760, 761, 1105, 1159, 1160], "forc": [5, 31, 35, 151, 153, 157, 180, 240, 357, 358, 432, 447, 475, 571, 843, 921, 950, 984, 1105, 1159], "2022": [5, 97, 105, 106, 135, 164, 227, 233, 237, 240, 256, 257, 263, 266, 314, 353, 354, 357, 449, 460, 522, 693, 718, 722, 743, 759, 868, 870, 984, 994, 1061, 1105], "12": [5, 6, 7, 8, 40, 63, 106, 112, 114, 134, 148, 157, 162, 163, 164, 173, 174, 178, 185, 190, 196, 197, 200, 202, 205, 208, 211, 212, 216, 217, 218, 221, 224, 225, 229, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 268, 269, 270, 272, 276, 282, 286, 292, 297, 300, 303, 304, 306, 308, 315, 324, 334, 335, 339, 353, 354, 357, 425, 449, 450, 458, 543, 676, 682, 715, 759, 839, 850, 853, 868, 890, 892, 899, 912, 914, 916, 940, 948, 966, 982, 994, 996, 997, 1003, 1009, 1037, 1048, 1105, 1108, 1110, 1111, 1134, 1145, 1169], "01": [5, 63, 96, 97, 105, 106, 114, 148, 149, 157, 162, 164, 171, 175, 193, 204, 211, 218, 227, 233, 240, 252, 269, 270, 272, 276, 315, 337, 339, 353, 354, 357, 436, 449, 450, 463, 550, 551, 740, 837, 864, 914, 968, 970, 997, 1094, 1105, 1110, 1139], "A": [5, 13, 20, 23, 27, 28, 29, 33, 38, 39, 40, 41, 61, 65, 69, 73, 74, 78, 82, 84, 85, 97, 98, 108, 109, 110, 111, 114, 115, 117, 119, 120, 121, 122, 123, 124, 131, 139, 151, 154, 155, 156, 157, 159, 164, 167, 168, 169, 172, 173, 174, 188, 190, 191, 192, 200, 204, 211, 213, 215, 221, 224, 227, 231, 237, 238, 240, 244, 252, 258, 260, 264, 267, 268, 279, 281, 286, 288, 289, 292, 299, 302, 303, 306, 326, 332, 337, 341, 342, 357, 362, 365, 366, 378, 379, 380, 393, 398, 402, 408, 409, 411, 414, 415, 419, 422, 423, 424, 425, 426, 429, 431, 432, 433, 435, 437, 439, 444, 445, 447, 453, 460, 463, 464, 465, 469, 470, 473, 475, 485, 487, 499, 512, 513, 522, 524, 530, 565, 570, 571, 576, 578, 579, 580, 629, 630, 632, 633, 636, 647, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 667, 669, 682, 693, 703, 705, 708, 713, 714, 715, 719, 721, 725, 727, 731, 740, 746, 757, 758, 759, 760, 761, 762, 769, 783, 785, 802, 825, 837, 838, 841, 842, 847, 850, 851, 855, 856, 861, 865, 871, 901, 904, 911, 912, 914, 929, 933, 934, 937, 943, 945, 950, 951, 952, 953, 962, 967, 968, 979, 980, 983, 985, 990, 992, 993, 994, 997, 998, 1005, 1006, 1010, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1036, 1037, 1044, 1046, 1051, 1057, 1061, 1062, 1063, 1068, 1091, 1094, 1097, 1108, 1112, 1114, 1115, 1118, 1122, 1125, 1126, 1132, 1134, 1140, 1141, 1151, 1159, 1160, 1161, 1162, 1164, 1174], "new": [5, 16, 32, 42, 44, 49, 50, 55, 63, 65, 78, 107, 112, 119, 120, 149, 152, 154, 155, 156, 157, 158, 159, 162, 167, 179, 184, 204, 221, 225, 227, 237, 240, 244, 252, 262, 279, 285, 286, 303, 326, 351, 357, 359, 386, 416, 420, 421, 429, 433, 447, 450, 470, 472, 490, 494, 506, 508, 512, 521, 523, 524, 533, 534, 535, 536, 538, 539, 543, 549, 557, 566, 567, 572, 575, 621, 623, 634, 636, 637, 642, 659, 663, 667, 669, 670, 674, 675, 676, 678, 681, 692, 703, 706, 710, 712, 714, 716, 717, 721, 722, 723, 724, 725, 726, 730, 731, 738, 740, 742, 746, 750, 751, 752, 758, 761, 762, 765, 802, 808, 816, 840, 864, 887, 905, 908, 912, 914, 937, 938, 939, 948, 950, 951, 957, 969, 1000, 1019, 1034, 1037, 1046, 1085, 1110, 1111, 1128, 1134, 1139, 1158, 1159, 1160, 1162], "languag": [5, 12, 29, 43, 59, 62, 78, 90, 114, 132, 148, 173, 175, 187, 188, 189, 191, 193, 196, 198, 203, 204, 206, 209, 211, 212, 213, 215, 231, 235, 238, 241, 243, 246, 271, 274, 277, 278, 279, 306, 326, 327, 328, 329, 330, 331, 340, 343, 357, 359, 361, 363, 375, 378, 389, 393, 402, 407, 409, 415, 419, 420, 422, 435, 439, 444, 447, 452, 454, 471, 485, 486, 487, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 530, 532, 565, 566, 573, 578, 580, 588, 591, 593, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 667, 669, 674, 681, 682, 692, 706, 711, 713, 716, 721, 725, 728, 729, 730, 738, 745, 746, 758, 760, 761, 762, 840, 897, 905, 906, 982, 984, 1001, 1010, 1014, 1015, 1016, 1017, 1018, 1021, 1026, 1030, 1034, 1036, 1037, 1040, 1049, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1112, 1116, 1119, 1120, 1122, 1126, 1131, 1133, 1136, 1138, 1143, 1148, 1156, 1159, 1160, 1161, 1162, 1164], "start": [5, 8, 42, 110, 111, 119, 120, 146, 148, 151, 152, 153, 154, 157, 162, 163, 167, 171, 176, 181, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 203, 204, 206, 209, 213, 214, 219, 225, 234, 240, 241, 250, 252, 265, 268, 270, 272, 274, 277, 279, 281, 286, 289, 304, 306, 307, 314, 317, 326, 343, 357, 360, 367, 370, 371, 380, 383, 397, 420, 441, 442, 455, 463, 467, 470, 477, 543, 554, 560, 626, 637, 642, 645, 665, 717, 740, 759, 769, 808, 821, 835, 836, 840, 841, 844, 846, 847, 868, 869, 881, 890, 892, 905, 931, 932, 941, 944, 951, 952, 956, 960, 961, 964, 966, 969, 975, 979, 982, 996, 1001, 1008, 1013, 1014, 1016, 1017, 1025, 1035, 1036, 1042, 1052, 1068, 1075, 1076, 1094, 1113, 1115, 1123, 1124, 1128, 1131, 1139, 1147, 1159, 1162], "schluss": [5, 7, 160, 185, 205], "noch": [5, 7, 160, 161, 171, 175, 179, 185, 195, 196, 200, 202, 205, 208, 211, 221, 234, 240, 241, 244, 265, 272, 358, 1158, 1169, 1176], "talk": [5, 42, 45, 50, 84, 114, 115, 131, 152, 156, 167, 172, 176, 184, 188, 191, 196, 228, 230, 231, 307, 342, 447, 448, 710, 719, 808, 827, 905, 910, 914, 921, 1151], "heurigen": 5, "grazer": [5, 60, 170, 191, 307, 910], "linuxtagen": [5, 170], "pointless": [5, 135, 265, 279, 286, 303, 307, 316, 429, 576], "blink": [5, 61, 135, 279, 282, 303, 307, 326, 329, 905, 946, 949], "asyncio": [5, 135, 184, 188, 238, 279, 303, 307, 693, 1106], "libgpiod": [5, 124, 131, 134, 135, 149, 279, 303, 307, 326, 328, 761], "raspberri": [5, 78, 97, 104, 106, 122, 134, 135, 147, 164, 168, 194, 268, 279, 303, 307, 343, 345, 346, 357, 359, 525, 761, 785, 789, 808, 812, 817, 823, 826, 829, 904, 911, 913, 914, 925, 970, 983, 985, 989, 992, 994, 996, 1007, 1029, 1033, 1120, 1122, 1133, 1154, 1163], "pi": [5, 38, 78, 106, 114, 132, 135, 164, 168, 194, 224, 227, 268, 279, 303, 307, 346, 357, 359, 383, 410, 413, 431, 521, 524, 525, 580, 600, 680, 741, 761, 785, 789, 812, 817, 823, 826, 829, 904, 911, 913, 914, 925, 970, 983, 985, 992, 993, 996, 1037], "cours": [5, 8, 13, 40, 104, 132, 134, 135, 148, 149, 150, 151, 152, 154, 167, 180, 181, 191, 199, 203, 209, 214, 219, 230, 241, 258, 260, 268, 277, 279, 280, 294, 295, 303, 306, 307, 310, 311, 340, 358, 359, 361, 410, 411, 427, 454, 465, 471, 477, 522, 759, 783, 808, 820, 835, 836, 897, 906, 935, 942, 984, 1006, 1007, 1029, 1061, 1093, 1102, 1106, 1119, 1120, 1133, 1159, 1162, 1174], "sollt": [5, 23, 160, 161, 166, 169, 208, 1156, 1175], "interess": [5, 23, 241, 1154, 1165], "anderen": [5, 23, 185, 195, 200, 202, 358, 1153, 1154, 1156, 1158, 1177], "themenkomplex": 5, "bestehen": [5, 1172], "biet": 5, "folgend": [5, 166, 185, 196, 241, 1169], "preisgestaltung": 5, "all": [5, 23, 24, 29, 35, 40, 42, 45, 46, 47, 51, 55, 56, 57, 59, 61, 62, 65, 70, 80, 88, 110, 111, 115, 119, 131, 132, 139, 145, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 172, 173, 174, 179, 181, 184, 185, 187, 188, 190, 195, 200, 204, 210, 212, 213, 221, 224, 227, 228, 232, 237, 238, 240, 257, 259, 262, 265, 268, 270, 277, 279, 286, 303, 307, 325, 327, 328, 335, 351, 363, 367, 377, 381, 382, 385, 386, 387, 398, 406, 407, 413, 423, 425, 427, 429, 430, 433, 436, 437, 440, 442, 447, 449, 450, 451, 452, 453, 456, 457, 461, 462, 465, 466, 470, 472, 475, 477, 478, 486, 487, 492, 493, 514, 516, 524, 525, 543, 571, 572, 575, 577, 582, 600, 601, 618, 623, 636, 637, 651, 659, 661, 676, 678, 680, 693, 703, 707, 712, 713, 715, 725, 726, 729, 732, 734, 737, 752, 761, 767, 769, 776, 779, 781, 786, 794, 798, 800, 804, 806, 808, 816, 822, 825, 834, 835, 836, 840, 841, 843, 844, 846, 848, 850, 851, 852, 853, 868, 869, 880, 887, 890, 892, 894, 895, 896, 897, 899, 905, 906, 907, 908, 912, 913, 914, 924, 925, 929, 931, 934, 940, 942, 951, 958, 964, 967, 968, 969, 980, 984, 990, 994, 999, 1000, 1004, 1005, 1006, 1017, 1025, 1030, 1031, 1035, 1037, 1050, 1051, 1054, 1055, 1056, 1061, 1067, 1068, 1084, 1085, 1101, 1105, 1106, 1115, 1119, 1128, 1134, 1139, 1141, 1146, 1153, 1154, 1156, 1158, 1162, 1163, 1170, 1171, 1174, 1177], "onlin": [5, 11, 23, 157, 164, 166, 167, 179, 184, 187, 358], "gehalten": [5, 8, 148, 175, 187, 196, 206, 215, 231, 243, 1153, 1158, 1169], "klarerweis": 5, "tagsatz": 5, "anf\u00e4llt": 5, "schulung": [5, 23, 147, 160, 161, 175, 184, 187, 358, 359, 764, 767, 772, 777, 786, 794, 972, 975, 979, 1007, 1009, 1029, 1105, 1120, 1133, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1174], "980": [5, 224, 227, 240, 247, 250, 665], "reisekosten": [5, 23], "auto": [5, 120, 149, 161, 169, 173, 179, 255, 317, 467, 472, 496, 497, 501, 502, 505, 506, 507, 560, 568, 577, 578, 601, 623, 624, 626, 667, 668, 675, 682, 685, 687, 690, 693, 694, 695, 697, 698, 699, 700, 701, 705, 707, 708, 709, 710, 715, 717, 719, 724, 725, 726, 728, 739, 745, 747, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 808, 979, 1159, 1170, 1175], "42": [5, 7, 21, 42, 61, 120, 122, 169, 171, 172, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 382, 408, 410, 411, 413, 416, 424, 429, 431, 437, 451, 461, 466, 470, 487, 489, 518, 519, 523, 524, 525, 526, 527, 528, 529, 541, 548, 560, 567, 575, 576, 580, 582, 608, 611, 614, 621, 645, 649, 669, 670, 678, 680, 708, 715, 728, 729, 739, 741, 745, 747, 749, 751, 755, 756, 757, 771, 853, 890, 899, 907, 953, 961, 975, 982, 983, 984, 1004, 1005, 1006, 1013, 1016, 1034, 1036, 1037, 1046, 1047, 1048, 1051, 1070, 1151], "per": [5, 50, 78, 158, 185, 303, 331, 351, 381, 420, 425, 514, 745, 798, 804, 818, 822, 827, 828, 840, 844, 864, 890, 957, 966, 983, 1152, 1177], "kilomet": [5, 154, 707, 868], "anderweitig": 5, "aufwand": [5, 23], "\u00fcbernachtung": [5, 160], "sampl": [6, 114, 122, 152, 163, 209, 212, 213, 225, 229, 235, 241, 244, 261, 277, 303, 326, 443, 511, 737, 955, 975, 1058], "log": [6, 96, 120, 149, 157, 158, 167, 174, 179, 182, 191, 211, 221, 227, 237, 240, 268, 270, 282, 299, 320, 339, 452, 453, 472, 729, 771, 808, 837, 844, 846, 868, 905, 907, 915, 919, 921, 924, 925, 1105, 1108, 1134, 1148], "record": [6, 29, 40, 53, 132, 147, 148, 156, 158, 159, 185, 196, 197, 203, 213, 218, 225, 241, 261, 276, 296, 299, 331, 343, 442, 443, 761, 907, 1001, 1006, 1021, 1063, 1065, 1084, 1095, 1096, 1097, 1098, 1099, 1101, 1104, 1114, 1169], "grundlagen": [6, 8, 23, 145, 246, 285, 357, 1156, 1158, 1165, 1166, 1169, 1170, 1172, 1173, 1176], "4": [6, 7, 8, 32, 61, 63, 106, 109, 112, 144, 149, 151, 155, 157, 163, 171, 172, 173, 174, 175, 178, 185, 190, 192, 196, 197, 200, 202, 205, 208, 211, 212, 216, 217, 218, 219, 221, 222, 224, 225, 227, 232, 234, 235, 237, 240, 244, 247, 249, 250, 253, 261, 262, 265, 269, 270, 272, 276, 282, 285, 286, 291, 292, 297, 304, 308, 314, 319, 320, 333, 334, 335, 337, 340, 353, 354, 357, 371, 387, 407, 410, 413, 430, 434, 437, 438, 448, 449, 451, 469, 472, 511, 515, 516, 517, 518, 519, 521, 523, 524, 526, 542, 544, 560, 567, 569, 577, 578, 581, 583, 584, 585, 586, 587, 599, 600, 608, 618, 668, 670, 672, 687, 688, 689, 691, 693, 702, 704, 708, 715, 717, 728, 741, 759, 808, 809, 846, 894, 897, 899, 907, 912, 913, 914, 936, 949, 966, 970, 1002, 1004, 1005, 1012, 1014, 1018, 1025, 1028, 1037, 1038, 1043, 1046, 1047, 1048, 1052, 1053, 1057, 1058, 1060, 1061, 1063, 1067, 1080, 1084, 1095, 1097, 1101, 1103, 1106, 1110, 1111, 1113, 1119, 1123, 1124, 1125, 1127, 1128, 1130, 1134, 1139, 1154, 1169], "2021": [6, 10, 23, 133, 145, 162, 164, 200, 202, 211, 217, 218, 221, 226, 229, 252, 337, 339, 353, 354, 357, 543, 686, 711, 746, 864, 868, 890, 891, 968, 982, 996, 1032], "templat": [6, 65, 74, 106, 179, 214, 255, 277, 282, 317, 342, 343, 451, 513, 532, 565, 566, 610, 616, 620, 621, 628, 629, 630, 632, 650, 657, 658, 659, 660, 661, 662, 669, 675, 680, 683, 684, 685, 686, 690, 691, 693, 696, 723, 727, 729, 737, 739, 745, 746, 747, 749, 751, 759, 760, 761, 953, 1158, 1160], "descript": [6, 8, 31, 39, 106, 112, 136, 154, 155, 167, 168, 184, 188, 189, 191, 192, 193, 194, 199, 214, 219, 221, 225, 227, 230, 237, 240, 244, 256, 257, 260, 294, 295, 310, 311, 359, 452, 462, 470, 480, 481, 482, 483, 484, 488, 498, 522, 717, 724, 725, 726, 735, 737, 739, 759, 808, 820, 832, 834, 843, 868, 870, 890, 897, 900, 901, 914, 926, 934, 984, 996, 1047, 1061, 1084, 1141, 1162], "sidebar": [6, 17, 65, 149, 820], "metadata": [6, 28, 39, 148, 167, 265, 840, 843, 913, 916, 942, 1004, 1164], "angebot": [6, 166], "hous": [6, 32, 152], "meiner": [6, 23, 241, 358, 1154], "person": [6, 23, 159, 189, 208, 211, 250, 252, 254, 261, 265, 272, 303, 304, 347, 432, 467, 468, 471, 496, 580, 639, 746, 921, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1101, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1139, 1140], "schwerpunk": 6, "schulungsstil": 6, "preis": 6, "einr\u00fcckung": [7, 197, 205], "wichtig": [7, 205, 255, 340, 345, 1177], "1": [7, 32, 39, 42, 50, 61, 63, 72, 74, 87, 106, 109, 110, 111, 112, 131, 134, 144, 145, 148, 153, 155, 158, 159, 161, 162, 163, 167, 168, 170, 171, 172, 173, 174, 175, 180, 181, 182, 185, 187, 190, 197, 200, 201, 202, 205, 208, 211, 212, 216, 217, 218, 221, 224, 227, 230, 232, 234, 237, 240, 244, 247, 250, 252, 253, 257, 262, 265, 269, 270, 272, 276, 282, 286, 292, 295, 297, 300, 304, 308, 311, 314, 320, 325, 326, 332, 333, 334, 335, 336, 337, 338, 340, 343, 345, 353, 354, 357, 371, 372, 394, 401, 410, 414, 416, 424, 441, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 463, 465, 466, 486, 487, 493, 503, 511, 512, 515, 519, 521, 523, 524, 525, 527, 531, 533, 534, 535, 536, 537, 538, 539, 544, 547, 550, 553, 556, 559, 560, 562, 567, 568, 569, 575, 577, 581, 583, 584, 585, 586, 587, 592, 597, 599, 605, 606, 607, 608, 609, 614, 618, 630, 632, 640, 642, 645, 649, 659, 665, 666, 668, 669, 670, 672, 675, 676, 678, 680, 682, 684, 685, 687, 689, 690, 691, 693, 694, 695, 702, 708, 710, 713, 714, 715, 717, 719, 720, 723, 724, 726, 727, 728, 737, 741, 745, 747, 748, 749, 751, 757, 759, 761, 766, 771, 777, 781, 786, 808, 825, 834, 835, 836, 839, 840, 841, 843, 844, 845, 846, 847, 850, 851, 852, 853, 854, 858, 860, 862, 864, 865, 869, 870, 871, 887, 890, 891, 892, 893, 894, 896, 897, 899, 900, 901, 903, 905, 912, 913, 915, 916, 924, 925, 926, 928, 930, 931, 932, 934, 935, 936, 938, 939, 940, 941, 946, 948, 949, 961, 963, 964, 966, 968, 970, 971, 972, 975, 978, 979, 981, 982, 985, 994, 996, 997, 998, 999, 1001, 1002, 1004, 1005, 1006, 1009, 1010, 1012, 1014, 1016, 1018, 1019, 1025, 1026, 1028, 1030, 1031, 1032, 1033, 1035, 1038, 1039, 1040, 1041, 1042, 1045, 1047, 1048, 1053, 1058, 1060, 1061, 1063, 1068, 1071, 1074, 1084, 1088, 1091, 1094, 1095, 1097, 1101, 1102, 1103, 1109, 1110, 1111, 1112, 1118, 1123, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1139, 1140, 1141, 1146, 1150, 1153, 1159, 1161, 1162, 1166, 1169, 1171, 1176], "i": [7, 12, 13, 14, 17, 21, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 49, 53, 54, 55, 57, 59, 61, 62, 63, 65, 66, 68, 69, 78, 80, 82, 84, 85, 87, 89, 90, 91, 97, 98, 99, 100, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 119, 122, 123, 125, 126, 127, 131, 132, 137, 139, 140, 145, 146, 148, 149, 151, 152, 155, 156, 157, 158, 159, 162, 163, 167, 168, 169, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 200, 202, 203, 204, 205, 208, 209, 212, 213, 214, 216, 217, 219, 222, 223, 224, 225, 228, 229, 230, 231, 233, 234, 235, 238, 239, 241, 242, 243, 244, 246, 248, 251, 252, 253, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 290, 292, 294, 296, 297, 299, 300, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 316, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 335, 336, 337, 340, 343, 345, 346, 348, 351, 353, 354, 358, 359, 361, 362, 363, 364, 365, 371, 372, 373, 375, 377, 378, 379, 381, 382, 385, 386, 387, 389, 390, 392, 393, 394, 397, 398, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 465, 467, 469, 470, 471, 472, 475, 478, 479, 486, 487, 489, 490, 491, 492, 493, 506, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 527, 530, 532, 537, 541, 543, 548, 551, 554, 557, 560, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 590, 592, 595, 596, 600, 601, 602, 603, 604, 605, 606, 608, 609, 614, 618, 621, 622, 623, 625, 627, 630, 632, 637, 639, 640, 645, 646, 647, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 667, 669, 670, 672, 673, 675, 676, 677, 679, 682, 687, 688, 689, 690, 691, 693, 704, 705, 708, 709, 713, 714, 717, 718, 719, 723, 725, 726, 727, 729, 731, 735, 737, 738, 739, 740, 745, 746, 747, 749, 755, 758, 759, 760, 761, 762, 763, 764, 767, 769, 772, 774, 776, 777, 779, 783, 786, 790, 794, 796, 798, 800, 802, 804, 806, 808, 809, 810, 815, 816, 818, 820, 821, 822, 824, 825, 833, 834, 835, 836, 837, 838, 840, 841, 842, 845, 846, 847, 848, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 867, 868, 869, 870, 871, 872, 873, 875, 876, 879, 880, 882, 883, 884, 888, 890, 892, 895, 897, 900, 901, 904, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 919, 920, 921, 923, 928, 935, 938, 940, 942, 945, 946, 948, 949, 950, 951, 952, 953, 955, 956, 958, 959, 962, 965, 966, 967, 968, 969, 970, 975, 976, 979, 980, 983, 984, 985, 986, 990, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1013, 1014, 1016, 1017, 1018, 1019, 1020, 1022, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1075, 1078, 1081, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1139, 1140, 1141, 1142, 1144, 1146, 1148, 1152, 1154, 1156, 1159, 1161, 1162, 1163, 1164, 1172, 1173, 1174, 1176], "41": [7, 157, 162, 173, 174, 185, 195, 200, 202, 205, 208, 211, 213, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 472, 728, 759, 798, 890, 913, 1018, 1061, 1063, 1110, 1141], "print": [7, 63, 148, 171, 172, 174, 175, 185, 188, 190, 191, 195, 200, 202, 203, 204, 205, 208, 211, 212, 216, 217, 218, 221, 224, 225, 227, 232, 234, 237, 240, 243, 244, 247, 250, 253, 262, 265, 269, 270, 272, 282, 286, 292, 297, 303, 304, 308, 314, 320, 332, 333, 334, 335, 336, 366, 370, 372, 441, 452, 596, 623, 646, 693, 707, 715, 717, 845, 846, 852, 868, 870, 871, 912, 960, 970, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1022, 1024, 1027, 1032, 1033, 1034, 1035, 1040, 1041, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1056, 1057, 1071, 1073, 1083, 1084, 1085, 1087, 1088, 1094, 1109, 1114, 1118, 1122, 1131], "ja": [7, 23, 161, 185, 202, 205, 208, 221, 224, 253, 320], "basta": [7, 152, 205, 1037], "2": [7, 29, 32, 42, 50, 61, 63, 72, 104, 106, 112, 115, 145, 148, 153, 155, 161, 162, 163, 169, 171, 172, 173, 174, 175, 186, 190, 196, 197, 200, 201, 205, 208, 211, 212, 216, 217, 218, 221, 226, 227, 232, 234, 237, 238, 240, 244, 247, 250, 252, 253, 262, 265, 269, 270, 272, 276, 282, 286, 292, 295, 297, 300, 304, 308, 311, 314, 320, 326, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 349, 357, 370, 371, 383, 389, 390, 410, 414, 441, 447, 448, 449, 450, 453, 454, 455, 459, 460, 461, 462, 463, 465, 487, 511, 512, 515, 521, 523, 524, 527, 531, 533, 534, 535, 536, 538, 539, 543, 558, 560, 567, 568, 569, 575, 577, 578, 581, 583, 584, 585, 586, 587, 592, 597, 601, 605, 606, 607, 608, 609, 614, 618, 622, 623, 624, 625, 630, 640, 645, 665, 668, 669, 670, 672, 675, 678, 680, 682, 683, 685, 687, 690, 691, 693, 703, 704, 707, 708, 713, 714, 715, 717, 719, 720, 723, 724, 725, 726, 727, 728, 737, 739, 741, 748, 759, 761, 767, 808, 835, 836, 843, 846, 847, 850, 851, 852, 864, 887, 890, 893, 894, 899, 901, 903, 905, 909, 912, 913, 925, 928, 930, 931, 932, 934, 935, 938, 939, 940, 941, 942, 944, 946, 948, 949, 961, 963, 966, 968, 970, 981, 982, 997, 999, 1001, 1002, 1004, 1005, 1007, 1010, 1012, 1014, 1018, 1022, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1038, 1039, 1040, 1042, 1047, 1048, 1053, 1058, 1060, 1062, 1063, 1064, 1065, 1067, 1071, 1074, 1084, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1116, 1123, 1124, 1125, 1127, 1128, 1129, 1133, 1134, 1139, 1140, 1141, 1145, 1146, 1153, 1161, 1162, 1169, 1172, 1173, 1175, 1176, 1177], "1234": [7, 32, 205, 208, 218, 227, 232, 234, 286, 314, 335, 923, 931, 980, 1037], "3": [7, 32, 61, 63, 106, 109, 110, 111, 119, 134, 148, 157, 162, 163, 167, 169, 171, 172, 173, 174, 175, 182, 184, 185, 190, 196, 197, 200, 201, 202, 205, 208, 211, 212, 216, 218, 220, 221, 226, 227, 230, 232, 234, 237, 240, 244, 247, 249, 251, 252, 253, 255, 262, 265, 269, 270, 272, 276, 282, 286, 292, 297, 299, 300, 305, 308, 314, 320, 333, 334, 335, 336, 340, 341, 342, 345, 357, 371, 383, 384, 385, 398, 407, 408, 429, 430, 438, 441, 443, 448, 449, 450, 453, 458, 469, 486, 487, 511, 512, 516, 519, 521, 522, 523, 524, 526, 527, 528, 529, 533, 534, 535, 536, 538, 539, 541, 543, 560, 567, 569, 575, 576, 577, 579, 580, 581, 583, 584, 585, 586, 587, 592, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 614, 630, 640, 645, 647, 668, 669, 670, 672, 680, 682, 683, 687, 688, 689, 690, 691, 693, 708, 713, 715, 717, 719, 724, 725, 727, 728, 741, 744, 759, 766, 772, 808, 846, 851, 865, 868, 890, 892, 894, 899, 901, 907, 909, 912, 913, 914, 916, 925, 926, 928, 930, 931, 932, 935, 939, 940, 941, 949, 950, 951, 955, 961, 963, 966, 969, 970, 971, 974, 976, 979, 980, 982, 983, 984, 1002, 1004, 1005, 1007, 1010, 1012, 1014, 1018, 1025, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1038, 1040, 1042, 1043, 1046, 1047, 1048, 1053, 1054, 1055, 1057, 1060, 1061, 1063, 1080, 1084, 1088, 1094, 1095, 1097, 1101, 1103, 1106, 1109, 1110, 1111, 1114, 1117, 1123, 1124, 1125, 1127, 1128, 1130, 1134, 1139, 1140, 1141, 1148, 1153, 1155, 1157, 1159, 1162, 1165, 1169], "decim": [7, 205, 240, 244, 286, 314, 326, 363, 449, 1037, 1051], "5": [7, 32, 61, 63, 120, 122, 127, 144, 148, 155, 157, 163, 173, 174, 175, 180, 183, 186, 190, 196, 197, 200, 202, 203, 205, 208, 209, 211, 212, 215, 217, 218, 219, 221, 222, 224, 225, 227, 232, 234, 235, 237, 240, 244, 247, 249, 250, 252, 253, 257, 261, 262, 265, 269, 272, 276, 282, 285, 286, 291, 292, 297, 300, 304, 308, 314, 319, 320, 326, 332, 334, 335, 340, 345, 353, 354, 357, 363, 365, 370, 387, 389, 398, 425, 430, 434, 443, 448, 452, 455, 466, 469, 472, 487, 495, 511, 514, 516, 521, 522, 524, 525, 526, 527, 528, 529, 541, 542, 547, 560, 567, 568, 569, 575, 579, 580, 583, 584, 586, 587, 608, 618, 645, 665, 669, 672, 673, 675, 676, 682, 684, 685, 687, 702, 703, 715, 717, 724, 725, 726, 728, 741, 751, 759, 781, 786, 809, 837, 839, 890, 894, 899, 905, 912, 913, 914, 930, 932, 940, 949, 966, 982, 994, 1002, 1004, 1005, 1008, 1014, 1018, 1025, 1031, 1036, 1037, 1038, 1042, 1043, 1045, 1048, 1051, 1053, 1057, 1058, 1061, 1084, 1088, 1095, 1097, 1101, 1103, 1106, 1110, 1111, 1114, 1119, 1130, 1134, 1139, 1141, 1146, 1150, 1156, 1158, 1163, 1164, 1169, 1170], "hexadecim": [7, 205, 244, 382, 913, 1037, 1050, 1051], "16": [7, 63, 148, 157, 159, 160, 162, 171, 173, 174, 179, 180, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 266, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 332, 333, 334, 335, 336, 340, 345, 346, 357, 381, 425, 432, 443, 450, 587, 645, 724, 786, 798, 890, 907, 912, 914, 925, 930, 931, 939, 948, 982, 984, 996, 997, 1002, 1009, 1012, 1037, 1063, 1110, 1111, 1141], "7": [7, 32, 42, 63, 149, 152, 155, 157, 162, 169, 172, 173, 174, 175, 185, 190, 197, 200, 202, 203, 205, 208, 209, 211, 215, 217, 218, 219, 221, 222, 224, 227, 232, 234, 237, 240, 244, 247, 249, 250, 252, 253, 261, 262, 265, 269, 270, 272, 276, 282, 286, 291, 292, 297, 300, 304, 308, 314, 320, 325, 334, 335, 340, 345, 346, 357, 371, 375, 389, 416, 425, 449, 450, 453, 458, 466, 486, 487, 511, 514, 519, 523, 524, 526, 527, 528, 529, 541, 548, 556, 560, 567, 575, 576, 580, 582, 583, 584, 586, 607, 611, 614, 623, 640, 649, 669, 677, 702, 703, 704, 708, 715, 741, 755, 756, 757, 839, 840, 851, 852, 868, 890, 899, 912, 913, 914, 931, 939, 963, 966, 975, 976, 979, 980, 983, 984, 1005, 1008, 1014, 1018, 1031, 1036, 1037, 1038, 1041, 1043, 1045, 1046, 1061, 1073, 1091, 1094, 1106, 1110, 1111, 1114, 1119, 1130, 1139], "0x1234": [7, 205, 1037], "4660": [7, 205, 227, 1037], "8": [7, 32, 63, 109, 148, 154, 155, 159, 163, 171, 172, 173, 174, 175, 179, 184, 185, 188, 190, 197, 200, 202, 203, 205, 208, 209, 211, 212, 217, 218, 219, 221, 222, 224, 225, 227, 231, 232, 234, 237, 240, 244, 247, 249, 250, 253, 261, 262, 265, 268, 269, 272, 276, 282, 286, 289, 291, 292, 297, 300, 303, 304, 308, 314, 320, 332, 333, 334, 335, 340, 357, 381, 425, 437, 443, 449, 453, 455, 458, 486, 518, 553, 560, 567, 572, 575, 580, 584, 586, 587, 676, 724, 741, 759, 781, 804, 808, 839, 845, 853, 890, 892, 899, 905, 906, 907, 908, 912, 913, 982, 999, 1005, 1008, 1014, 1037, 1038, 1043, 1051, 1056, 1060, 1061, 1067, 1103, 1106, 1110, 1111, 1117, 1134, 1141], "bin\u00e4r": [7, 23, 205, 208], "9": [7, 8, 32, 61, 63, 112, 148, 153, 157, 160, 167, 171, 172, 173, 174, 175, 183, 185, 187, 190, 191, 192, 193, 194, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 217, 218, 219, 221, 224, 225, 227, 232, 234, 237, 240, 241, 244, 247, 250, 252, 253, 262, 265, 268, 269, 272, 276, 277, 279, 282, 286, 292, 297, 304, 308, 314, 320, 332, 333, 335, 336, 340, 345, 357, 363, 365, 371, 380, 383, 441, 449, 466, 486, 495, 514, 560, 562, 578, 587, 677, 687, 715, 741, 786, 864, 887, 890, 912, 913, 914, 930, 966, 1002, 1012, 1031, 1032, 1038, 1043, 1045, 1053, 1057, 1061, 1068, 1073, 1110, 1111, 1119, 1134, 1139], "0b100110": [7, 205, 234, 1037], "38": [7, 23, 148, 155, 162, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 470, 486, 511, 578, 724, 759, 890, 985, 994, 1018, 1110, 1111], "arithmet": [7, 108, 172, 205, 210, 230, 233, 245, 260, 277, 340, 364, 378, 385, 386, 392, 393, 402, 408, 409, 415, 419, 422, 424, 425, 426, 435, 439, 444, 445, 464, 473, 485, 486, 499, 513, 561, 565, 595, 599, 600, 603, 608, 665, 667, 705, 714, 715, 758, 760, 761], "man": [7, 32, 37, 114, 152, 154, 160, 161, 169, 175, 179, 185, 187, 195, 196, 202, 205, 208, 213, 215, 217, 228, 234, 241, 244, 268, 289, 308, 340, 345, 347, 358, 455, 548, 557, 569, 731, 759, 767, 786, 834, 835, 836, 839, 840, 843, 850, 851, 852, 853, 854, 858, 860, 862, 865, 869, 870, 871, 887, 890, 891, 893, 894, 896, 897, 899, 900, 914, 921, 924, 925, 926, 928, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 944, 950, 951, 953, 955, 957, 958, 961, 963, 969, 976, 979, 980, 982, 998, 999, 1154, 1155, 1156, 1158, 1166, 1169, 1171, 1172, 1173, 1175, 1176, 1177], "behaviour": [7, 205, 213, 794, 940, 1056], "erzwingen": [7, 185, 197, 205], "floor": [7, 38, 197, 205, 208, 212, 224, 225, 227, 232, 234, 240, 244, 314, 335, 1025, 1037], "divis": [7, 36, 38, 197, 205, 208, 224, 227, 232, 234, 240, 335, 363, 384, 486, 487, 501, 1025, 1037, 1091], "modul": [7, 12, 21, 23, 29, 65, 135, 142, 148, 155, 157, 162, 174, 180, 182, 184, 187, 188, 189, 190, 191, 198, 199, 205, 208, 212, 214, 219, 221, 222, 225, 227, 228, 231, 232, 234, 235, 237, 238, 240, 241, 243, 244, 246, 247, 251, 252, 255, 261, 263, 264, 265, 270, 272, 280, 281, 284, 286, 290, 291, 294, 295, 296, 299, 304, 306, 308, 310, 311, 312, 313, 314, 318, 320, 324, 325, 326, 335, 341, 342, 343, 345, 351, 358, 403, 447, 449, 453, 454, 460, 462, 463, 475, 664, 705, 760, 761, 764, 765, 767, 768, 770, 772, 773, 774, 775, 777, 778, 785, 788, 789, 793, 799, 804, 805, 809, 810, 812, 817, 820, 823, 826, 829, 904, 905, 912, 914, 1003, 1004, 1005, 1006, 1007, 1010, 1018, 1019, 1021, 1025, 1026, 1030, 1031, 1034, 1035, 1046, 1047, 1048, 1052, 1054, 1057, 1058, 1059, 1062, 1063, 1064, 1065, 1099, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1112, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1127, 1128, 1133, 1134, 1136, 1138, 1139, 1142, 1143, 1149, 1161, 1163, 1164, 1170, 1174, 1177], "restklassen": [7, 205], "rest": [7, 17, 40, 159, 161, 171, 195, 205, 208, 212, 214, 232, 240, 272, 286, 304, 307, 335, 361, 371, 396, 450, 598, 599, 660, 717, 796, 847, 908, 938, 966, 1025, 1028, 1052, 1081, 1085, 1114, 1129, 1161, 1177], "14": [7, 63, 145, 149, 162, 173, 174, 185, 190, 197, 200, 202, 204, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 252, 253, 256, 262, 265, 269, 272, 276, 282, 286, 292, 303, 304, 306, 308, 314, 320, 324, 332, 333, 335, 336, 337, 357, 449, 460, 461, 463, 472, 566, 640, 664, 676, 715, 717, 725, 727, 759, 850, 853, 865, 890, 892, 912, 913, 914, 916, 931, 940, 970, 982, 983, 984, 1003, 1105, 1110, 1111, 1158, 1169], "oper": [7, 29, 33, 34, 35, 38, 73, 78, 80, 97, 108, 127, 131, 151, 152, 154, 158, 170, 171, 173, 176, 179, 184, 188, 189, 190, 191, 193, 197, 202, 205, 210, 211, 212, 213, 214, 219, 221, 225, 226, 229, 232, 234, 235, 239, 242, 245, 248, 250, 253, 255, 265, 272, 277, 278, 279, 280, 281, 282, 285, 286, 302, 306, 307, 309, 314, 326, 340, 345, 363, 371, 381, 387, 402, 407, 408, 409, 413, 415, 416, 419, 422, 424, 426, 428, 431, 435, 437, 439, 444, 445, 467, 468, 487, 507, 513, 525, 530, 532, 560, 565, 566, 567, 572, 573, 577, 580, 584, 585, 586, 587, 588, 591, 592, 594, 600, 608, 609, 610, 616, 620, 621, 624, 629, 632, 633, 645, 650, 657, 658, 659, 660, 661, 662, 665, 667, 673, 675, 676, 678, 682, 687, 689, 690, 691, 693, 696, 700, 703, 705, 707, 708, 709, 710, 715, 717, 724, 725, 728, 735, 739, 741, 750, 751, 752, 758, 759, 760, 761, 770, 775, 778, 779, 785, 789, 799, 808, 810, 812, 817, 823, 824, 826, 829, 835, 836, 839, 868, 874, 899, 900, 904, 912, 913, 914, 925, 930, 931, 932, 933, 934, 935, 946, 949, 953, 955, 975, 979, 983, 996, 999, 1007, 1010, 1017, 1018, 1021, 1038, 1042, 1046, 1051, 1052, 1057, 1071, 1104, 1106, 1115, 1124, 1146, 1151, 1158, 1164], "preced": [7, 35, 38, 205, 227, 232, 240, 245, 248, 363, 369, 384, 385, 393, 398, 402, 407, 409, 413, 415, 417, 419, 422, 426, 435, 439, 444, 445, 596, 600, 667, 705, 758, 760, 761, 868, 917], "implizit": [7, 185, 205, 282, 1156, 1173], "klammerung": [7, 205, 896], "durch": [7, 160, 161, 169, 175, 179, 187, 195, 205, 237, 247, 340, 345, 358, 896, 1153, 1154, 1156], "pr\u00e4zedenz": [7, 185, 197, 205], "6666666666666665": [7, 205], "frage": [7, 161, 171, 175, 202, 205, 208, 214, 234, 358, 1163, 1170, 1177], "6665": [7, 205], "6667": [7, 205], "ieee": [7, 205], "floatingpoint": [7, 205, 384, 385, 508, 808, 1083], "representaion": [7, 205], "true": [7, 35, 38, 50, 58, 63, 110, 111, 153, 155, 157, 162, 171, 172, 173, 174, 184, 185, 190, 195, 200, 202, 203, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 232, 234, 237, 238, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 326, 332, 335, 369, 385, 386, 398, 410, 413, 453, 511, 575, 583, 608, 636, 647, 649, 670, 693, 694, 695, 696, 698, 699, 700, 701, 726, 735, 737, 739, 741, 759, 796, 798, 828, 841, 868, 881, 949, 955, 960, 961, 964, 966, 967, 975, 976, 979, 988, 1003, 1009, 1010, 1014, 1016, 1017, 1018, 1019, 1022, 1025, 1038, 1039, 1041, 1042, 1043, 1046, 1052, 1055, 1056, 1119, 1123, 1125, 1130, 1145, 1146, 1148], "zahlen": [7, 195, 196, 205, 1156, 1169], "vergleichen": [7, 185, 205], "21": [7, 97, 99, 102, 105, 106, 114, 159, 162, 173, 174, 185, 190, 193, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 335, 339, 357, 449, 759, 798, 850, 890, 913, 914, 925, 996, 1110, 1111], "ab": [7, 23, 32, 160, 162, 185, 195, 196, 205, 240, 244, 247, 262, 265, 286, 314, 567, 569, 577, 586, 672, 728, 1111, 1163, 1169], "0001": [7, 155, 173, 205], "aber": [7, 23, 37, 161, 169, 171, 175, 185, 195, 196, 200, 203, 205, 234, 237, 240, 292, 358, 896, 1154, 1156, 1158, 1165, 1172, 1176, 1177], "unendlich": [7, 8, 196, 205, 206], "lang": [7, 157, 160, 161, 170, 205, 331, 332, 349, 358, 452, 1155, 1171, 1176], "22": [7, 63, 97, 105, 106, 114, 154, 157, 162, 164, 173, 174, 185, 190, 192, 195, 200, 201, 202, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 293, 296, 297, 299, 304, 314, 320, 332, 334, 335, 336, 357, 759, 853, 890, 914, 915, 923, 924, 939, 983, 984, 1068, 1105, 1110, 1111, 1170], "1000000": [7, 154, 185, 205, 282, 320, 335, 441, 905, 913], "23": [7, 63, 114, 155, 162, 163, 164, 170, 173, 174, 175, 185, 190, 192, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 238, 240, 243, 244, 247, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 357, 413, 449, 452, 693, 743, 853, 890, 912, 913, 994, 1063, 1068, 1110, 1111, 1141, 1148], "32": [7, 162, 163, 169, 171, 174, 185, 190, 195, 200, 202, 205, 208, 211, 214, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 335, 363, 365, 381, 386, 425, 466, 472, 495, 511, 524, 804, 833, 839, 864, 890, 906, 908, 983, 984, 994, 1061], "4294967295": [7, 205, 224, 232, 240], "24": [7, 63, 97, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 155, 162, 170, 173, 174, 175, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 286, 292, 297, 304, 314, 320, 332, 333, 335, 336, 357, 460, 658, 660, 682, 724, 725, 761, 808, 835, 836, 890, 912, 999, 1005, 1110, 1111], "64": [7, 154, 157, 162, 185, 190, 195, 200, 202, 205, 208, 211, 213, 214, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 369, 381, 386, 410, 425, 431, 434, 460, 804, 946, 949, 972, 979, 982, 999, 1063, 1110, 1154], "18446744073709551615": [7, 185, 195, 205, 208, 221, 224, 232, 234, 240, 244, 247, 250, 272, 304, 335], "overflow": [7, 42, 44, 50, 154, 195, 205, 221, 224, 225, 227, 230, 231, 237, 240, 247, 250, 265, 272, 282, 286, 308, 314, 386, 388, 424, 433, 845], "wenn": [7, 23, 160, 161, 166, 171, 179, 185, 187, 195, 196, 202, 205, 241, 247, 282, 895, 1153, 1155, 1156, 1163, 1165, 1166, 1169, 1172, 1177], "verwendet": [7, 23, 175, 179, 185, 205, 247, 1154, 1156, 1166, 1170, 1172, 1177], "wert": [7, 23, 196, 197, 202, 205, 237, 240, 244, 247, 253, 282, 286, 292, 1169, 1177], "w\u00e4re": [7, 169, 195, 205, 241, 1158, 1165], "dort": [7, 64, 161, 169, 171, 179, 195, 196, 205, 358, 1169, 1175, 1177], "25": [7, 63, 97, 162, 163, 173, 174, 175, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 238, 240, 243, 244, 247, 250, 252, 253, 262, 265, 269, 272, 276, 282, 286, 292, 299, 304, 308, 314, 320, 326, 335, 336, 357, 559, 560, 682, 719, 743, 788, 890, 914, 982, 1008, 1051, 1095, 1097, 1101, 1103, 1110, 1111, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "18446744073709551616": [7, 185, 195, 205, 208, 221, 224, 232, 234, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335], "26": [7, 155, 157, 162, 163, 164, 173, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 257, 262, 265, 269, 272, 276, 286, 292, 297, 304, 308, 314, 320, 335, 339, 357, 559, 560, 687, 703, 868, 890, 914, 946, 948, 949, 982, 984, 1110, 1111, 1134, 1170], "1000": [7, 23, 185, 195, 205, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 524, 525, 543, 618, 665, 739, 818, 843, 845, 850, 864, 865, 892, 893, 897, 899, 925, 932, 940, 961, 966, 970, 996, 1003, 1052, 1084], "10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376": [7, 185, 195, 205, 208, 221, 244, 247, 265, 292, 320], "27": [7, 63, 97, 114, 162, 164, 173, 174, 185, 195, 200, 202, 204, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 243, 244, 247, 250, 252, 253, 262, 265, 269, 272, 276, 282, 286, 292, 299, 304, 308, 314, 320, 332, 334, 335, 337, 357, 449, 523, 548, 715, 890, 912, 914, 982, 1110, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "10000": [7, 45, 205, 224, 227, 240, 272, 314, 1006, 1022], "19950631168807583848837421626835850838234968318861924548520089498529438830221946631919961684036194597899331129423209124271556491349413781117593785932096323957855730046793794526765246551266059895520550086918193311542508608460618104685509074866089624888090489894838009253941633257850621568309473902556912388065225096643874441046759871626985453222868538161694315775629640762836880760732228535091641476183956381458969463899410840960536267821064621427333394036525565649530603142680234969400335934316651459297773279665775606172582031407994198179607378245683762280037302885487251900834464581454650557929601414833921615734588139257095379769119277800826957735674444123062018757836325502728323789270710373802866393031428133241401624195671690574061419654342324638801248856147305207431992259611796250130992860241708340807605932320161268492288496255841312844061536738951487114256315111089745514203313820202931640957596464756010405845841566072044962867016515061920631004186422275908670900574606417856951911456055068251250406007519842261898059237118054444788072906395242548339221982707404473162376760846613033778706039803413197133493654622700563169937455508241780972810983291314403571877524768509857276937926433221599399876886660808368837838027643282775172273657572744784112294389733810861607423253291974813120197604178281965697475898164531258434135959862784130128185406283476649088690521047580882615823961985770122407044330583075869039319604603404973156583208672105913300903752823415539745394397715257455290510212310947321610753474825740775273986348298498340756937955646638621874569499279016572103701364433135817214311791398222983845847334440270964182851005072927748364550578634501100852987812389473928699540834346158807043959118985815145779177143619698728131459483783202081474982171858011389071228250905826817436220577475921417653715687725614904582904992461028630081535583308130101987675856234343538955409175623400844887526162643568648833519463720377293240094456246923254350400678027273837755376406726898636241037491410966718557050759098100246789880178271925953381282421954028302759408448955014676668389697996886241636313376393903373455801407636741877711055384225739499110186468219696581651485130494222369947714763069155468217682876200362777257723781365331611196811280792669481887201298643660768551639860534602297871557517947385246369446923087894265948217008051120322365496288169035739121368338393591756418733850510970271613915439590991598154654417336311656936031122249937969999226781732358023111862644575299135758175008199839236284615249881088960232244362173771618086357015468484058622329792853875623486556440536962622018963571028812361567512543338303270029097668650568557157505516727518899194129711337690149916181315171544007728650573189557450920330185304847113818315407324053319038462084036421763703911550639789000742853672196280903477974533320468368795868580237952218629120080742819551317948157624448298518461509704888027274721574688131594750409732115080498190455803416826949787141316063210686391511681774304792596709376": [7, 205, 224, 240, 272, 314], "hallo": [7, 185, 195, 200, 203, 205, 208, 216, 224, 227, 234, 237, 240, 244, 247, 253, 265, 269, 272, 292, 304, 308, 314, 335, 383, 575, 759, 839, 887, 915, 928, 931, 937], "39": [7, 149, 162, 171, 173, 174, 185, 190, 195, 200, 202, 204, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 300, 304, 308, 314, 320, 332, 333, 334, 335, 336, 337, 486, 640, 687, 853, 982, 1110, 1111], "30": [7, 23, 63, 97, 106, 109, 114, 148, 149, 154, 162, 164, 174, 184, 185, 190, 195, 200, 202, 204, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 276, 282, 286, 289, 292, 304, 308, 314, 320, 332, 334, 335, 337, 357, 370, 384, 449, 511, 515, 550, 551, 556, 557, 559, 560, 676, 677, 724, 725, 726, 748, 864, 890, 896, 912, 913, 914, 970, 996, 1008, 1009, 1061, 1110, 1114, 1122, 1139, 1148], "eingebettet": [7, 205], "34": [7, 162, 163, 171, 174, 185, 190, 195, 200, 202, 204, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 269, 270, 272, 276, 282, 286, 292, 297, 300, 304, 308, 314, 320, 334, 335, 336, 337, 472, 486, 490, 491, 492, 493, 505, 506, 507, 605, 606, 607, 608, 609, 614, 646, 865, 868, 890, 1018, 1037, 1110, 1111], "31": [7, 106, 114, 155, 157, 162, 174, 185, 190, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 235, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 334, 335, 357, 421, 449, 456, 702, 890, 948, 980, 997, 1031, 1063, 1110], "eingenbettet": [7, 205], "mississippi": [7, 205, 208, 217, 221, 224, 232, 234, 240, 244, 250, 253, 265, 272, 286, 292, 304, 308, 314, 645], "count": [7, 29, 63, 87, 89, 112, 119, 152, 164, 167, 205, 208, 209, 212, 217, 221, 224, 227, 232, 234, 237, 240, 244, 250, 253, 265, 271, 272, 286, 292, 304, 308, 314, 369, 370, 371, 372, 385, 441, 497, 523, 551, 665, 715, 740, 761, 764, 767, 768, 769, 770, 772, 775, 778, 779, 785, 789, 799, 812, 817, 823, 826, 829, 839, 848, 868, 890, 901, 904, 934, 937, 944, 955, 976, 1052, 1065, 1075, 1078, 1086, 1089, 1104, 1111, 1119, 1159], "ss": [7, 32, 205, 208, 217, 221, 224, 232, 234, 240, 244, 250, 253, 265, 272, 286, 292, 304, 308, 314, 645], "35": [7, 148, 162, 174, 185, 192, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 336, 486, 515, 658, 660, 676, 1110], "find": [7, 17, 42, 44, 47, 48, 53, 65, 114, 151, 152, 153, 154, 158, 163, 168, 180, 181, 182, 192, 194, 205, 208, 212, 214, 217, 221, 225, 227, 230, 232, 234, 237, 240, 244, 247, 250, 253, 258, 265, 267, 270, 272, 277, 279, 286, 288, 289, 292, 294, 304, 306, 308, 310, 314, 316, 325, 334, 340, 345, 428, 434, 441, 453, 461, 468, 475, 496, 501, 502, 505, 506, 507, 508, 513, 530, 531, 560, 565, 568, 582, 584, 586, 587, 608, 610, 621, 624, 626, 629, 633, 645, 658, 660, 662, 665, 708, 712, 757, 761, 774, 813, 834, 835, 836, 838, 843, 847, 848, 850, 851, 852, 854, 868, 895, 898, 901, 904, 913, 914, 925, 953, 982, 985, 999, 1029, 1033, 1044, 1052, 1112, 1149, 1161, 1163, 1164, 1165, 1170], "36": [7, 148, 153, 157, 162, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 269, 272, 276, 282, 286, 292, 304, 308, 314, 320, 332, 335, 340, 345, 453, 466, 472, 490, 514, 517, 518, 519, 523, 524, 525, 675, 724, 725, 726, 741, 759, 890, 912, 1018, 1094], "37": [7, 120, 122, 162, 173, 174, 185, 186, 190, 195, 200, 202, 205, 208, 211, 213, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 334, 335, 336, 490, 745, 747, 749, 751, 1018, 1110, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "capit": [7, 38, 205, 208, 217, 224, 234, 240, 265, 286, 334, 868, 1063], "zeil": [7, 171, 185, 195, 202, 205, 208, 211, 217, 221, 240, 244, 262, 265, 304, 308, 335], "nnoch": [7, 202, 205, 221], "some": [7, 17, 21, 106, 139, 151, 152, 153, 154, 156, 159, 162, 163, 167, 173, 176, 181, 184, 188, 191, 193, 204, 205, 211, 213, 221, 227, 228, 233, 239, 240, 244, 256, 257, 259, 265, 268, 271, 272, 274, 278, 280, 281, 288, 306, 307, 313, 314, 316, 358, 382, 416, 427, 443, 466, 472, 543, 568, 570, 590, 608, 621, 624, 678, 687, 715, 723, 725, 735, 738, 760, 761, 767, 772, 781, 796, 804, 808, 825, 827, 845, 850, 905, 913, 914, 935, 938, 964, 966, 968, 976, 1005, 1007, 1034, 1050, 1056, 1102, 1120, 1139, 1161, 1162], "name": [7, 23, 39, 40, 57, 65, 110, 111, 112, 114, 119, 132, 134, 144, 148, 151, 152, 154, 155, 156, 159, 166, 167, 172, 174, 176, 181, 184, 185, 188, 191, 193, 195, 200, 205, 208, 211, 212, 223, 225, 226, 227, 230, 232, 234, 237, 242, 244, 247, 262, 265, 269, 270, 272, 276, 286, 308, 314, 320, 325, 331, 334, 335, 336, 351, 373, 387, 393, 401, 402, 408, 409, 415, 419, 422, 426, 427, 430, 432, 435, 439, 441, 443, 444, 445, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 470, 472, 487, 491, 492, 493, 498, 501, 505, 506, 507, 522, 524, 527, 532, 537, 569, 579, 581, 583, 647, 660, 666, 667, 677, 678, 687, 705, 707, 711, 717, 725, 758, 759, 760, 761, 764, 772, 776, 786, 790, 802, 804, 828, 834, 835, 836, 839, 847, 848, 850, 853, 854, 868, 874, 890, 896, 901, 908, 912, 913, 914, 916, 917, 924, 925, 928, 930, 934, 942, 975, 979, 982, 983, 984, 994, 996, 997, 999, 1000, 1001, 1004, 1006, 1013, 1018, 1020, 1023, 1027, 1028, 1030, 1031, 1035, 1036, 1044, 1046, 1048, 1050, 1051, 1052, 1057, 1061, 1063, 1068, 1084, 1085, 1095, 1101, 1103, 1111, 1114, 1117, 1118, 1119, 1124, 1125, 1127, 1128, 1129, 1130, 1139, 1146, 1148, 1158, 1162, 1164, 1165], "directori": [7, 17, 44, 61, 97, 99, 100, 102, 109, 114, 127, 131, 148, 151, 152, 153, 154, 163, 167, 178, 183, 186, 192, 204, 205, 211, 212, 213, 214, 221, 224, 225, 227, 237, 240, 252, 257, 258, 259, 267, 268, 280, 281, 285, 288, 289, 294, 302, 306, 310, 325, 326, 340, 345, 351, 353, 354, 407, 441, 443, 448, 451, 455, 457, 459, 461, 462, 464, 467, 469, 471, 485, 486, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 544, 547, 550, 553, 556, 559, 562, 565, 656, 738, 760, 761, 786, 808, 810, 830, 834, 837, 838, 839, 841, 842, 843, 845, 847, 848, 850, 851, 852, 854, 855, 856, 857, 862, 863, 865, 867, 868, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 885, 888, 892, 897, 904, 912, 913, 914, 916, 921, 925, 927, 930, 933, 940, 941, 942, 943, 945, 948, 950, 959, 962, 965, 967, 971, 974, 978, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 999, 1005, 1013, 1033, 1084, 1093, 1094, 1141, 1145, 1150, 1161, 1165, 1174], "multilin": [7, 195, 205, 220, 223, 227, 232, 240, 244, 304, 315, 340, 408, 1006, 1034], "jetzt": [7, 160, 171, 175, 185, 195, 202, 205, 215, 244, 300, 320], "l": [7, 32, 38, 61, 63, 99, 114, 155, 159, 163, 171, 172, 174, 175, 180, 185, 190, 195, 200, 202, 203, 204, 205, 208, 211, 216, 217, 221, 224, 227, 230, 232, 234, 237, 240, 244, 247, 250, 253, 258, 262, 265, 267, 268, 272, 282, 286, 288, 289, 292, 304, 308, 314, 317, 320, 332, 334, 335, 340, 345, 413, 414, 421, 425, 437, 442, 443, 449, 456, 459, 460, 475, 487, 513, 560, 565, 584, 614, 665, 738, 759, 760, 761, 772, 786, 808, 809, 835, 836, 837, 838, 839, 841, 842, 845, 847, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 872, 875, 876, 879, 880, 882, 883, 884, 886, 887, 888, 892, 897, 901, 904, 905, 907, 912, 913, 914, 915, 916, 923, 925, 930, 931, 933, 935, 936, 938, 939, 940, 943, 945, 948, 951, 959, 962, 965, 966, 967, 976, 980, 982, 983, 984, 985, 994, 996, 997, 1002, 1004, 1025, 1033, 1035, 1038, 1039, 1043, 1045, 1053, 1061, 1088, 1148, 1165], "44": [7, 148, 155, 162, 174, 185, 195, 200, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 914, 1134], "45": [7, 29, 51, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 141, 144, 157, 160, 162, 174, 184, 185, 188, 190, 195, 200, 202, 205, 208, 209, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 326, 327, 328, 329, 330, 331, 334, 335, 340, 345, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 454, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 605, 606, 607, 608, 609, 610, 614, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 681, 692, 705, 706, 716, 721, 730, 738, 742, 746, 758, 759, 760, 761, 765, 768, 770, 773, 775, 778, 780, 784, 785, 787, 789, 791, 793, 799, 801, 803, 805, 812, 814, 817, 819, 823, 826, 829, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 911, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 947, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1112, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143, 1144], "46": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 744, 890, 914, 930, 1110, 1111], "47": [7, 155, 157, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 715, 901, 966, 994, 1051, 1110], "try": [7, 27, 114, 119, 127, 148, 151, 152, 154, 159, 171, 174, 184, 185, 188, 192, 195, 200, 202, 205, 208, 211, 214, 217, 219, 221, 224, 227, 230, 232, 234, 237, 240, 244, 247, 249, 250, 252, 253, 256, 257, 259, 261, 262, 265, 268, 269, 272, 279, 280, 281, 282, 285, 286, 292, 303, 304, 308, 314, 316, 320, 326, 333, 334, 335, 336, 340, 344, 345, 355, 433, 437, 463, 467, 474, 491, 496, 505, 513, 521, 530, 532, 565, 573, 591, 594, 610, 616, 620, 625, 629, 632, 633, 650, 652, 654, 657, 658, 659, 660, 661, 662, 693, 701, 705, 715, 721, 725, 739, 741, 755, 757, 759, 760, 761, 813, 816, 913, 934, 979, 1003, 1010, 1063, 1106, 1112, 1123, 1124, 1128, 1141], "except": [7, 21, 29, 43, 46, 61, 63, 74, 110, 111, 153, 157, 163, 171, 172, 179, 184, 185, 188, 189, 191, 193, 195, 200, 202, 205, 208, 212, 213, 214, 217, 219, 221, 224, 225, 228, 229, 232, 234, 238, 239, 242, 244, 247, 249, 250, 254, 262, 265, 269, 272, 280, 281, 282, 285, 286, 292, 302, 303, 304, 306, 307, 308, 314, 320, 325, 327, 333, 334, 335, 336, 340, 345, 353, 354, 373, 425, 428, 462, 467, 468, 475, 502, 513, 530, 532, 565, 594, 610, 616, 620, 629, 632, 633, 637, 650, 657, 658, 660, 661, 662, 666, 669, 693, 701, 722, 724, 725, 736, 741, 761, 776, 808, 841, 846, 912, 966, 980, 1003, 1007, 1010, 1013, 1016, 1019, 1029, 1031, 1034, 1052, 1054, 1104, 1106, 1123, 1128, 1141, 1151, 1158], "index": [7, 13, 23, 29, 39, 51, 53, 90, 110, 111, 148, 149, 158, 171, 173, 178, 183, 185, 186, 188, 189, 191, 193, 197, 198, 200, 203, 205, 208, 209, 211, 212, 214, 217, 219, 222, 224, 225, 227, 228, 230, 231, 233, 234, 235, 238, 240, 241, 243, 245, 246, 247, 249, 250, 252, 261, 262, 264, 265, 270, 271, 272, 274, 276, 278, 280, 281, 284, 285, 286, 290, 291, 293, 296, 299, 302, 303, 304, 306, 307, 308, 312, 313, 314, 318, 324, 340, 347, 371, 387, 413, 441, 449, 544, 547, 550, 553, 556, 559, 560, 562, 600, 601, 603, 608, 647, 687, 715, 727, 741, 761, 804, 971, 974, 978, 1029, 1030, 1042, 1045, 1052, 1058, 1059, 1060, 1061, 1063, 1065, 1078, 1084, 1089, 1104, 1106, 1107, 1108, 1110, 1111, 1112, 1120, 1122, 1124, 1126, 1127, 1129, 1133, 1143, 1145, 1150], "out": [7, 31, 44, 45, 50, 55, 63, 65, 75, 85, 106, 112, 114, 119, 127, 131, 138, 144, 145, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 167, 172, 173, 180, 181, 184, 188, 191, 192, 200, 205, 208, 213, 221, 227, 228, 230, 237, 240, 244, 248, 277, 303, 304, 326, 340, 346, 351, 362, 383, 401, 407, 408, 416, 427, 434, 441, 442, 443, 447, 449, 450, 455, 460, 463, 465, 467, 492, 493, 508, 511, 521, 537, 543, 560, 567, 569, 583, 598, 640, 643, 678, 693, 712, 715, 728, 739, 757, 776, 777, 786, 808, 816, 821, 835, 836, 839, 843, 847, 850, 854, 864, 895, 901, 905, 912, 913, 914, 931, 932, 948, 966, 969, 979, 980, 982, 994, 999, 1006, 1010, 1050, 1051, 1058, 1084, 1087, 1114, 1119, 1121, 1127, 1129, 1130, 1134, 1140, 1159], "rang": [7, 29, 42, 63, 90, 108, 114, 115, 159, 172, 173, 174, 179, 188, 191, 193, 196, 197, 200, 203, 205, 208, 209, 212, 219, 220, 222, 223, 225, 226, 227, 230, 231, 233, 235, 236, 239, 240, 245, 246, 248, 249, 251, 253, 255, 263, 264, 265, 271, 273, 274, 281, 282, 284, 285, 287, 290, 291, 293, 302, 304, 306, 307, 308, 312, 313, 314, 317, 318, 319, 320, 324, 332, 386, 413, 429, 431, 477, 511, 514, 515, 519, 543, 559, 560, 596, 598, 601, 604, 705, 755, 758, 760, 761, 772, 905, 912, 961, 967, 970, 1002, 1005, 1007, 1012, 1014, 1016, 1018, 1028, 1029, 1037, 1041, 1058, 1062, 1063, 1064, 1065, 1075, 1077, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1116, 1119, 1127, 1129, 1158, 1159, 1169], "48": [7, 155, 162, 171, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 912], "append": [7, 171, 172, 173, 174, 175, 185, 190, 192, 195, 200, 202, 203, 204, 205, 208, 211, 216, 217, 218, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 336, 449, 452, 542, 560, 602, 618, 630, 657, 769, 781, 796, 808, 835, 836, 850, 853, 874, 887, 912, 921, 934, 970, 1002, 1008, 1009, 1022, 1038, 1043, 1046, 1048, 1053, 1056, 1057, 1083, 1131, 1134], "one": [7, 21, 27, 32, 40, 44, 45, 50, 59, 62, 63, 66, 80, 84, 85, 106, 110, 111, 112, 114, 115, 118, 119, 123, 127, 131, 132, 134, 140, 142, 146, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 167, 172, 173, 174, 176, 181, 184, 185, 188, 190, 192, 195, 200, 202, 203, 204, 205, 208, 211, 213, 214, 221, 224, 227, 232, 234, 235, 237, 238, 240, 243, 244, 247, 250, 252, 262, 265, 268, 271, 272, 274, 276, 278, 282, 286, 291, 292, 294, 303, 308, 310, 314, 320, 325, 326, 331, 332, 337, 340, 346, 358, 363, 370, 381, 386, 388, 396, 401, 403, 404, 408, 411, 413, 418, 421, 429, 430, 431, 433, 437, 441, 443, 449, 450, 452, 453, 455, 457, 461, 462, 465, 466, 467, 472, 474, 475, 477, 478, 486, 491, 493, 511, 514, 516, 517, 521, 522, 524, 543, 554, 560, 571, 572, 580, 581, 583, 584, 585, 586, 587, 598, 599, 607, 618, 621, 625, 640, 647, 664, 665, 668, 669, 670, 673, 682, 693, 712, 714, 715, 723, 725, 726, 727, 728, 729, 735, 737, 739, 746, 759, 769, 776, 783, 786, 796, 802, 808, 816, 824, 828, 833, 834, 835, 841, 850, 852, 853, 868, 887, 901, 905, 907, 908, 909, 912, 913, 914, 915, 917, 921, 924, 925, 931, 932, 934, 935, 938, 941, 942, 944, 950, 951, 952, 953, 955, 958, 961, 964, 966, 967, 968, 975, 979, 982, 985, 988, 994, 997, 998, 1000, 1001, 1003, 1005, 1006, 1008, 1014, 1016, 1017, 1019, 1030, 1031, 1034, 1035, 1036, 1038, 1042, 1043, 1045, 1047, 1048, 1052, 1054, 1056, 1057, 1064, 1074, 1077, 1084, 1085, 1110, 1111, 1112, 1113, 1115, 1119, 1120, 1122, 1124, 1130, 1131, 1132, 1135, 1139, 1141, 1146, 1148, 1161, 1164], "49": [7, 162, 171, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 708, 853, 994, 1008], "extend": [7, 153, 154, 185, 202, 203, 205, 210, 216, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 278, 282, 286, 292, 314, 320, 335, 470, 477, 486, 511, 584, 586, 587, 639, 769, 840, 1038, 1043, 1053, 1111, 1123], "slice": [7, 29, 90, 173, 175, 184, 188, 189, 191, 193, 198, 201, 202, 205, 212, 224, 225, 227, 228, 231, 235, 236, 242, 243, 245, 246, 247, 249, 261, 264, 266, 271, 274, 281, 284, 285, 287, 290, 291, 293, 302, 303, 306, 307, 312, 313, 318, 324, 761, 806, 967, 1029, 1042, 1046, 1065, 1078, 1089, 1104, 1120, 1124, 1126, 1128], "inclus": [7, 191, 205, 232, 244, 407, 600, 1067, 1127], "exclus": [7, 179, 205, 227, 244, 281, 389, 600, 735, 934, 967, 1016, 1052, 1056, 1067, 1127], "51": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 622, 623, 624, 625, 890, 892, 1110], "l\u00f6schen": [7, 195, 201, 205, 340], "52": [7, 162, 171, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 336, 914, 1110], "del": [7, 38, 171, 174, 175, 185, 200, 202, 205, 208, 216, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 333, 335, 1013, 1038, 1054], "53": [7, 155, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 347, 491, 492, 718, 788, 890, 912, 982, 994, 1110, 1111], "iter": [7, 24, 29, 63, 119, 120, 172, 175, 179, 184, 188, 189, 191, 193, 196, 197, 201, 203, 205, 209, 210, 212, 213, 215, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 233, 235, 236, 239, 242, 244, 246, 247, 251, 263, 266, 272, 280, 281, 283, 287, 292, 302, 305, 306, 307, 309, 315, 325, 340, 346, 398, 400, 413, 449, 474, 524, 543, 560, 602, 603, 604, 608, 611, 618, 621, 623, 625, 630, 680, 687, 696, 717, 755, 761, 931, 1003, 1007, 1009, 1018, 1031, 1041, 1055, 1056, 1062, 1063, 1064, 1065, 1078, 1089, 1101, 1104, 1106, 1116, 1118, 1131, 1169], "mittel": [7, 11, 23, 175, 185, 187, 203, 205, 210, 358, 1153, 1156, 1165, 1173], "54": [7, 162, 171, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 347, 622, 623, 624, 625, 725, 798, 890, 912, 994, 1110], "element": [7, 8, 35, 38, 106, 109, 110, 111, 114, 172, 174, 175, 185, 190, 191, 196, 197, 200, 202, 203, 205, 206, 208, 211, 215, 216, 217, 221, 224, 225, 227, 231, 233, 234, 240, 243, 244, 247, 251, 272, 276, 279, 282, 291, 304, 334, 335, 371, 398, 413, 421, 425, 428, 513, 527, 530, 532, 541, 560, 565, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 611, 615, 618, 622, 625, 647, 665, 668, 670, 687, 701, 715, 717, 761, 769, 976, 1008, 1010, 1027, 1038, 1043, 1044, 1053, 1055, 1088, 1114, 1131, 1139, 1162, 1169], "55": [7, 162, 171, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 336, 347, 424, 449, 655, 656, 657, 658, 660, 759, 982, 1063], "def": [7, 63, 171, 172, 175, 185, 190, 191, 195, 200, 202, 203, 205, 208, 211, 212, 217, 218, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 270, 272, 282, 286, 292, 297, 300, 304, 308, 314, 320, 335, 336, 449, 707, 960, 1003, 1004, 1005, 1008, 1009, 1010, 1013, 1014, 1016, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1034, 1037, 1047, 1048, 1053, 1057, 1088, 1094, 1101, 1102, 1103, 1122, 1127, 1128, 1130, 1139, 1140], "is_integ": [7, 205, 262], "elem": [7, 171, 175, 185, 190, 195, 200, 202, 205, 217, 224, 227, 232, 237, 262, 265, 272, 282, 286, 292, 308, 314, 527, 624, 626, 673, 693, 695, 697, 700, 714, 715, 717, 737, 1010, 1053, 1057], "type": [7, 29, 50, 78, 83, 100, 110, 111, 132, 144, 145, 148, 151, 152, 155, 157, 159, 167, 171, 172, 175, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 204, 205, 208, 211, 212, 213, 216, 217, 221, 226, 229, 230, 232, 234, 239, 242, 244, 248, 250, 252, 253, 255, 263, 265, 268, 269, 272, 280, 281, 282, 285, 286, 292, 297, 301, 302, 303, 305, 306, 307, 308, 313, 314, 317, 320, 332, 333, 334, 335, 340, 342, 343, 351, 373, 384, 385, 392, 397, 402, 403, 407, 409, 413, 415, 416, 419, 422, 423, 424, 425, 426, 429, 431, 432, 434, 435, 439, 444, 445, 449, 465, 467, 476, 479, 487, 493, 523, 527, 548, 557, 567, 569, 575, 576, 580, 582, 583, 593, 601, 630, 636, 640, 643, 645, 647, 649, 655, 667, 668, 673, 678, 679, 687, 693, 704, 705, 707, 712, 713, 714, 715, 724, 725, 727, 728, 729, 734, 744, 745, 747, 751, 752, 754, 756, 757, 758, 759, 760, 761, 764, 767, 769, 774, 777, 796, 808, 834, 838, 850, 853, 865, 868, 871, 882, 884, 885, 888, 896, 904, 905, 907, 912, 916, 921, 930, 931, 934, 937, 938, 939, 940, 941, 951, 963, 972, 975, 979, 980, 982, 999, 1001, 1004, 1007, 1010, 1014, 1019, 1020, 1021, 1028, 1032, 1034, 1036, 1037, 1038, 1042, 1044, 1045, 1046, 1051, 1052, 1054, 1056, 1058, 1071, 1082, 1083, 1101, 1104, 1106, 1111, 1115, 1119, 1124, 1125, 1127, 1134, 1139, 1141, 1159, 1160], "int": [7, 21, 46, 107, 110, 111, 127, 154, 163, 172, 174, 185, 191, 195, 200, 202, 203, 205, 208, 212, 213, 218, 221, 224, 225, 227, 230, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 271, 272, 274, 282, 286, 292, 300, 304, 308, 314, 320, 333, 335, 336, 362, 363, 365, 367, 369, 371, 372, 373, 375, 376, 377, 381, 382, 383, 385, 386, 387, 391, 401, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 421, 423, 424, 428, 429, 430, 431, 432, 433, 437, 438, 472, 479, 486, 487, 491, 492, 493, 494, 497, 500, 501, 503, 505, 506, 507, 509, 511, 519, 521, 523, 525, 526, 527, 528, 529, 531, 541, 543, 548, 551, 557, 560, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 590, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 618, 621, 622, 623, 624, 625, 626, 630, 632, 636, 637, 640, 642, 643, 645, 646, 647, 649, 654, 655, 656, 657, 658, 659, 660, 661, 665, 666, 668, 669, 672, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 712, 713, 714, 715, 717, 719, 726, 727, 728, 729, 732, 734, 737, 739, 741, 745, 747, 749, 751, 759, 764, 767, 772, 774, 779, 786, 788, 790, 792, 796, 800, 802, 804, 813, 818, 825, 845, 865, 908, 912, 926, 928, 930, 931, 932, 934, 937, 938, 939, 940, 941, 944, 946, 949, 951, 953, 955, 957, 963, 966, 969, 970, 972, 975, 976, 979, 980, 982, 994, 998, 1000, 1025, 1036, 1037, 1045, 1046, 1048, 1051, 1057, 1058, 1073, 1096, 1098, 1101, 1102, 1128, 1146, 1151], "return": [7, 21, 27, 63, 107, 148, 151, 153, 154, 155, 159, 163, 171, 172, 175, 185, 189, 191, 193, 195, 200, 202, 203, 205, 208, 211, 212, 213, 217, 218, 221, 224, 225, 227, 230, 232, 234, 237, 240, 244, 247, 250, 254, 255, 262, 265, 270, 272, 276, 282, 286, 297, 300, 303, 304, 308, 314, 320, 335, 336, 362, 363, 365, 369, 371, 373, 382, 391, 401, 407, 413, 414, 416, 423, 424, 427, 428, 430, 431, 433, 437, 449, 456, 465, 466, 467, 468, 472, 474, 477, 486, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 511, 518, 519, 523, 524, 527, 543, 551, 557, 560, 567, 568, 569, 571, 572, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 590, 592, 593, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 621, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 649, 653, 654, 655, 656, 657, 658, 659, 660, 661, 665, 670, 672, 673, 680, 682, 683, 684, 685, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 712, 715, 717, 722, 723, 725, 726, 727, 728, 729, 735, 737, 739, 745, 747, 749, 750, 751, 752, 755, 756, 757, 759, 764, 771, 779, 786, 790, 798, 800, 822, 824, 828, 845, 865, 912, 926, 928, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 946, 949, 950, 951, 961, 963, 966, 972, 975, 976, 979, 980, 982, 994, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1022, 1023, 1025, 1026, 1027, 1048, 1050, 1052, 1053, 1054, 1057, 1063, 1079, 1081, 1085, 1088, 1089, 1096, 1098, 1101, 1125, 1127, 1128, 1130, 1139, 1146, 1151], "els": [7, 21, 43, 50, 63, 110, 111, 115, 131, 152, 154, 155, 158, 167, 172, 175, 185, 188, 191, 195, 203, 205, 208, 211, 212, 213, 217, 221, 224, 225, 228, 229, 230, 232, 236, 237, 242, 244, 247, 251, 253, 262, 264, 265, 270, 272, 282, 286, 292, 304, 314, 320, 325, 336, 347, 369, 375, 386, 391, 402, 408, 409, 415, 419, 422, 426, 427, 435, 439, 444, 445, 449, 457, 458, 472, 496, 503, 506, 560, 583, 607, 608, 618, 625, 639, 659, 667, 672, 705, 726, 728, 735, 739, 758, 760, 761, 790, 800, 824, 835, 836, 841, 860, 862, 865, 871, 892, 913, 926, 929, 934, 960, 961, 963, 966, 968, 1006, 1013, 1025, 1026, 1029, 1040, 1048, 1054, 1128, 1158], "fals": [7, 46, 110, 111, 155, 157, 171, 172, 185, 190, 195, 200, 202, 203, 205, 208, 211, 217, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 276, 282, 286, 292, 297, 304, 308, 314, 320, 334, 349, 365, 369, 386, 423, 449, 583, 608, 640, 647, 670, 682, 735, 739, 741, 828, 841, 868, 960, 961, 966, 968, 988, 1003, 1018, 1022, 1025, 1038, 1039, 1041, 1042, 1046, 1124, 1125, 1128, 1130, 1146], "56": [7, 148, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 334, 335, 347, 386, 490, 578, 759, 887, 912, 914, 1110, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "x": [7, 23, 32, 42, 61, 63, 157, 163, 171, 172, 173, 175, 185, 195, 200, 202, 204, 205, 208, 211, 221, 224, 227, 228, 232, 234, 240, 244, 247, 250, 252, 253, 262, 265, 269, 272, 281, 282, 286, 308, 314, 336, 340, 382, 385, 386, 392, 407, 408, 410, 413, 416, 417, 421, 423, 431, 433, 437, 460, 511, 521, 558, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 579, 581, 583, 585, 586, 593, 600, 608, 668, 669, 670, 672, 687, 689, 690, 691, 708, 719, 728, 834, 835, 836, 839, 843, 845, 850, 853, 855, 856, 864, 865, 890, 893, 897, 899, 905, 912, 913, 914, 930, 940, 946, 948, 949, 957, 961, 982, 983, 984, 985, 990, 994, 996, 997, 1002, 1003, 1031, 1033, 1039, 1047, 1048, 1050, 1051, 1052, 1055, 1056, 1060, 1084, 1111, 1128, 1139, 1140, 1146], "filter": [7, 29, 106, 109, 114, 169, 172, 205, 212, 225, 242, 265, 271, 274, 278, 279, 286, 303, 305, 308, 315, 324, 513, 530, 565, 723, 724, 761, 833, 852, 901, 1104, 1120, 1126, 1129, 1146], "57": [7, 148, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 336, 456, 461, 890, 912, 925, 983, 984, 1110], "zero": [7, 32, 38, 148, 154, 170, 172, 173, 175, 185, 195, 203, 205, 208, 221, 227, 232, 234, 237, 240, 244, 247, 262, 286, 340, 362, 371, 389, 714, 724, 728, 767, 779, 794, 839, 868, 883, 890, 914, 934, 955, 961, 964, 967, 970, 975, 976, 1042], "two": [7, 12, 17, 29, 32, 34, 35, 36, 38, 42, 44, 54, 69, 85, 106, 123, 140, 142, 145, 146, 151, 152, 153, 154, 167, 172, 173, 174, 180, 184, 185, 190, 195, 196, 198, 200, 202, 203, 205, 208, 209, 211, 213, 214, 215, 219, 221, 222, 225, 227, 230, 231, 232, 234, 235, 240, 241, 243, 244, 246, 248, 249, 250, 262, 264, 265, 268, 270, 271, 272, 280, 282, 284, 285, 286, 290, 291, 292, 296, 299, 308, 312, 313, 314, 318, 319, 320, 324, 326, 332, 340, 346, 349, 358, 359, 370, 377, 407, 413, 415, 416, 419, 421, 422, 425, 426, 428, 430, 433, 435, 439, 444, 445, 447, 448, 449, 450, 459, 462, 475, 477, 487, 491, 492, 511, 521, 523, 543, 551, 554, 560, 576, 581, 583, 600, 623, 665, 666, 667, 668, 669, 705, 711, 714, 715, 717, 724, 727, 729, 758, 760, 761, 806, 808, 811, 873, 875, 895, 905, 907, 912, 913, 914, 931, 934, 935, 942, 952, 953, 961, 966, 975, 980, 990, 1000, 1008, 1014, 1017, 1020, 1025, 1028, 1029, 1035, 1038, 1041, 1052, 1054, 1056, 1062, 1065, 1067, 1068, 1069, 1072, 1074, 1075, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1101, 1104, 1105, 1111, 1113, 1119, 1127, 1140, 1146, 1159, 1169, 1174], "58": [7, 155, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 347, 449, 914, 983, 984, 994, 1110, 1111], "59": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 347, 984, 985, 994, 1110], "three": [7, 12, 32, 36, 38, 43, 63, 110, 111, 119, 153, 165, 172, 173, 184, 185, 188, 189, 195, 200, 202, 203, 205, 211, 219, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 270, 271, 272, 274, 280, 281, 282, 286, 291, 292, 304, 308, 314, 320, 340, 358, 427, 602, 647, 841, 850, 853, 868, 905, 912, 914, 934, 966, 975, 1010, 1020, 1038, 1042, 1052, 1054, 1056, 1068, 1074, 1105, 1106, 1160, 1174], "60": [7, 63, 106, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 252, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 334, 335, 491, 492, 493, 505, 506, 507, 514, 850, 912, 913, 914, 1008, 1110, 1111], "61": [7, 63, 162, 173, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 340, 345, 1110, 1111], "62": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 850, 1063, 1110], "63": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 340, 345, 1063, 1110], "k": [7, 29, 154, 173, 175, 185, 188, 200, 202, 205, 208, 212, 213, 224, 227, 232, 234, 237, 240, 247, 250, 262, 265, 271, 272, 282, 292, 302, 304, 306, 308, 314, 341, 342, 361, 489, 622, 665, 727, 745, 761, 868, 915, 950, 1104, 1107, 1113, 1120, 1139], "v": [7, 20, 23, 31, 32, 88, 112, 122, 134, 148, 152, 159, 173, 176, 179, 185, 189, 191, 193, 197, 199, 200, 203, 204, 205, 210, 212, 213, 214, 215, 221, 224, 225, 227, 228, 230, 231, 233, 239, 242, 243, 245, 248, 250, 254, 261, 262, 265, 268, 273, 281, 283, 287, 291, 292, 298, 304, 308, 314, 317, 326, 340, 437, 461, 466, 487, 513, 547, 565, 622, 642, 665, 669, 673, 678, 679, 680, 687, 688, 689, 690, 691, 696, 699, 700, 701, 707, 713, 714, 715, 738, 741, 744, 746, 757, 760, 761, 770, 775, 778, 780, 785, 789, 791, 795, 799, 800, 801, 803, 805, 808, 810, 812, 816, 817, 819, 823, 826, 829, 834, 838, 841, 842, 845, 868, 870, 897, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 975, 976, 982, 1025, 1048, 1141, 1142, 1154, 1156, 1173, 1175], "65": [7, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 655, 970, 1110, 1111], "item": [7, 152, 172, 174, 185, 190, 195, 200, 202, 205, 208, 211, 212, 216, 217, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 252, 256, 257, 259, 262, 265, 270, 272, 282, 286, 292, 304, 308, 314, 320, 334, 425, 429, 431, 450, 714, 758, 760, 761, 975, 976, 1010, 1011, 1012, 1018, 1044, 1051, 1054, 1056, 1094, 1139], "66": [7, 155, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 645, 1063, 1110, 1111], "": [7, 8, 14, 20, 23, 31, 35, 37, 38, 40, 43, 44, 45, 48, 55, 59, 61, 62, 63, 65, 66, 78, 89, 104, 108, 109, 112, 114, 119, 127, 131, 132, 138, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 169, 172, 173, 174, 176, 178, 179, 181, 182, 184, 185, 188, 190, 191, 195, 196, 200, 202, 203, 204, 205, 206, 208, 211, 213, 214, 217, 218, 221, 224, 225, 227, 228, 230, 231, 232, 234, 237, 238, 240, 244, 247, 250, 253, 256, 257, 259, 262, 265, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 282, 286, 289, 292, 294, 296, 299, 302, 303, 304, 306, 308, 310, 314, 316, 317, 320, 325, 326, 334, 335, 337, 340, 343, 344, 358, 360, 373, 375, 381, 386, 407, 408, 411, 420, 425, 427, 429, 430, 431, 432, 433, 437, 448, 449, 450, 452, 453, 455, 457, 458, 461, 462, 465, 466, 467, 469, 470, 471, 472, 475, 476, 487, 489, 490, 492, 493, 497, 508, 510, 521, 522, 523, 524, 527, 533, 535, 536, 544, 547, 550, 551, 553, 556, 559, 562, 569, 571, 572, 575, 576, 579, 580, 582, 583, 592, 602, 612, 613, 623, 630, 632, 637, 639, 642, 643, 645, 649, 652, 656, 666, 667, 669, 671, 673, 676, 677, 678, 679, 682, 686, 687, 693, 702, 705, 707, 710, 714, 715, 717, 719, 723, 724, 725, 727, 729, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 757, 759, 760, 761, 767, 776, 779, 781, 786, 792, 794, 804, 813, 816, 828, 833, 834, 835, 836, 839, 840, 843, 845, 846, 850, 851, 852, 854, 858, 860, 862, 864, 865, 866, 868, 870, 871, 887, 890, 891, 893, 894, 896, 897, 899, 900, 901, 905, 908, 912, 913, 914, 915, 916, 923, 924, 925, 926, 928, 929, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 942, 944, 946, 948, 949, 951, 952, 953, 957, 958, 961, 963, 966, 967, 968, 970, 971, 972, 974, 976, 978, 979, 980, 985, 994, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1008, 1009, 1011, 1012, 1013, 1017, 1018, 1025, 1029, 1030, 1031, 1034, 1038, 1039, 1045, 1048, 1051, 1052, 1055, 1056, 1063, 1068, 1075, 1086, 1093, 1094, 1095, 1097, 1105, 1112, 1114, 1115, 1118, 1119, 1122, 1129, 1130, 1131, 1132, 1133, 1134, 1139, 1140, 1145, 1148, 1150, 1151, 1154, 1159, 1161, 1164, 1177], "rot": [7, 205, 216], "gruen": [7, 205], "blau": [7, 205, 216], "67": [7, 162, 173, 185, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 449, 514, 970, 1051, 1063, 1110, 1111], "69": [7, 61, 157, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1110, 1111, 1130], "schwarz": [7, 205, 216], "70": [7, 61, 154, 162, 185, 190, 192, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 449, 514, 912, 913, 914, 1008, 1110, 1111, 1139], "add": [7, 23, 42, 44, 49, 65, 112, 119, 121, 132, 134, 136, 147, 148, 152, 153, 154, 158, 159, 163, 167, 172, 181, 184, 185, 188, 191, 200, 202, 203, 205, 208, 211, 213, 217, 221, 224, 225, 227, 232, 237, 240, 244, 247, 250, 256, 257, 262, 265, 268, 272, 276, 282, 286, 292, 297, 299, 304, 308, 314, 317, 320, 340, 346, 388, 389, 428, 429, 437, 450, 451, 457, 460, 467, 469, 470, 486, 487, 491, 496, 497, 508, 516, 523, 525, 543, 557, 567, 580, 581, 583, 585, 654, 655, 656, 665, 673, 693, 704, 715, 723, 737, 739, 774, 776, 777, 781, 788, 796, 798, 808, 821, 824, 834, 907, 912, 913, 914, 942, 966, 968, 970, 976, 981, 994, 996, 1003, 1004, 1026, 1030, 1038, 1056, 1061, 1128, 1139, 1140, 1146], "71": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 983, 984, 1110, 1111], "72": [7, 162, 185, 190, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 340, 345, 575, 899, 994, 1063, 1110, 1111], "remov": [7, 57, 99, 109, 114, 119, 120, 158, 159, 172, 174, 185, 200, 205, 211, 217, 225, 227, 232, 234, 240, 244, 247, 251, 252, 258, 265, 267, 268, 282, 286, 288, 289, 292, 303, 304, 308, 314, 320, 452, 453, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 530, 531, 532, 537, 541, 560, 565, 595, 601, 618, 651, 673, 726, 737, 738, 739, 756, 759, 760, 761, 769, 786, 796, 804, 827, 834, 835, 836, 837, 838, 841, 842, 855, 856, 858, 860, 861, 862, 863, 865, 866, 872, 873, 874, 875, 877, 878, 880, 882, 888, 904, 915, 925, 927, 933, 935, 938, 943, 945, 948, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 998, 1008, 1028, 1038, 1053, 1054, 1055, 1088], "73": [7, 162, 173, 185, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 1110], "74": [7, 155, 157, 162, 185, 195, 200, 202, 205, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 890, 899, 1063, 1110, 1111], "75": [7, 162, 185, 195, 200, 202, 205, 208, 211, 213, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 449, 1110, 1111], "sum": [7, 38, 63, 185, 205, 209, 210, 224, 225, 227, 230, 232, 240, 243, 244, 247, 250, 265, 272, 314, 398, 413, 428, 430, 431, 433, 497, 523, 543, 567, 581, 583, 596, 600, 648, 662, 745, 747, 749, 751, 761, 967, 1025, 1041, 1124], "100": [7, 32, 112, 151, 152, 157, 167, 171, 172, 185, 195, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 243, 244, 247, 250, 252, 253, 262, 265, 268, 269, 270, 272, 276, 282, 286, 292, 303, 304, 308, 314, 320, 335, 336, 340, 345, 398, 404, 405, 447, 450, 463, 472, 505, 506, 514, 533, 595, 596, 597, 598, 599, 601, 602, 603, 604, 618, 665, 682, 703, 779, 818, 864, 867, 890, 907, 946, 968, 970, 974, 975, 983, 984, 1009, 1041, 1045, 1063, 1094, 1139], "5050": [7, 185, 205, 227, 240, 247, 272, 314], "bestimmen": [7, 205], "maximum": [7, 29, 145, 185, 195, 196, 198, 200, 203, 205, 208, 209, 215, 219, 221, 222, 224, 225, 227, 231, 232, 234, 235, 237, 240, 241, 243, 244, 246, 248, 249, 264, 265, 271, 272, 284, 285, 286, 290, 291, 312, 313, 318, 319, 324, 336, 388, 661, 739, 761, 769, 845, 905, 970, 976, 1048, 1065, 1067, 1068, 1069, 1072, 1075, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1105, 1109, 1110, 1111, 1112, 1134, 1169], "zwei": [7, 64, 161, 171, 179, 185, 197, 200, 202, 205, 208, 221, 224, 232, 237, 240, 244, 250, 272, 292, 300, 304, 308, 335, 531, 622, 623, 624, 625, 895, 1156, 1173], "inlin": [7, 132, 173, 179, 191, 205, 221, 250, 253, 255, 277, 304, 308, 314, 408, 430, 433, 554, 569, 583, 622, 659, 711, 729, 745, 747, 749, 750, 751, 752, 759, 1002, 1081], "ohn": [7, 23, 169, 171, 179, 205, 208, 830, 896, 1155, 1175, 1176, 1177], "funktion": [7, 23, 175, 179, 185, 196, 197, 198, 202, 205, 208, 211, 232, 234, 237, 240, 272, 304, 335, 1169], "666": [7, 42, 50, 107, 120, 122, 171, 172, 185, 195, 200, 202, 205, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 331, 332, 333, 335, 336, 371, 451, 470, 525, 526, 527, 528, 529, 533, 534, 535, 536, 538, 539, 541, 548, 560, 567, 571, 580, 582, 605, 606, 607, 608, 609, 611, 614, 622, 625, 645, 649, 678, 680, 687, 689, 690, 691, 695, 715, 719, 722, 724, 729, 732, 745, 747, 749, 755, 756, 757, 766, 767, 1001, 1005, 1047, 1048, 1051, 1151], "var1": [7, 195, 205, 1071], "var2": [7, 195, 205, 1071], "6712": [7, 205, 227], "isn": [7, 151, 167, 205, 271, 274, 348, 362, 413, 600, 604, 643, 666, 693, 713, 912, 1050, 1146], "fehler": [7, 179, 185, 205, 340, 345], "link": [7, 13, 17, 27, 32, 44, 65, 103, 104, 114, 120, 125, 145, 148, 149, 151, 152, 158, 159, 160, 161, 162, 163, 169, 171, 179, 185, 192, 205, 228, 230, 258, 259, 267, 268, 276, 281, 288, 289, 294, 310, 340, 353, 354, 403, 416, 422, 426, 430, 435, 439, 444, 445, 450, 453, 455, 456, 461, 471, 485, 508, 513, 514, 515, 516, 517, 518, 519, 520, 523, 543, 550, 551, 565, 580, 667, 673, 681, 705, 715, 716, 758, 759, 760, 761, 769, 770, 774, 775, 778, 786, 789, 798, 799, 808, 810, 812, 817, 823, 826, 829, 838, 888, 890, 895, 904, 913, 920, 950, 953, 955, 982, 983, 984, 985, 987, 988, 989, 990, 992, 994, 1000, 1105, 1133, 1143, 1146, 1153, 1154, 1161], "\u212c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2145": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u212d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2102": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2146": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03dd": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2130": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2147": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2131": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u02c7": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u210f": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u210b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2111": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2148": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2110": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2124": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2112": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2133": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2115": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2134": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u210c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2119": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u210d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u211a": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u211c": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u211b": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u211d": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03f5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03d5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03c5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03b5": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03f0": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03c6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03d6": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03f1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03c2": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u03d1": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "\u2128": [8, 24, 25, 26, 38, 41, 42, 43, 44, 45, 50, 54, 55, 63, 73, 74, 97, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 188, 189, 191, 192, 193, 194, 196, 198, 199, 206, 209, 212, 213, 214, 215, 219, 222, 225, 228, 230, 231, 235, 238, 241, 243, 246, 252, 256, 257, 258, 259, 260, 267, 268, 270, 277, 278, 279, 280, 281, 288, 289, 294, 295, 296, 299, 302, 303, 306, 307, 310, 311, 316, 317, 322, 325, 326, 327, 328, 329, 331, 340, 347, 348, 349, 350, 351, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 486, 487, 494, 495, 496, 497, 498, 500, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 592, 593, 600, 601, 602, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 630, 632, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 692, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 745, 747, 749, 750, 751, 752, 759, 763, 764, 766, 767, 769, 771, 772, 774, 776, 777, 779, 785, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 810, 811, 813, 815, 816, 818, 821, 822, 824, 825, 827, 828, 830, 832, 833, 834, 839, 840, 843, 844, 845, 846, 847, 848, 850, 851, 852, 853, 864, 865, 866, 867, 868, 869, 870, 871, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 901, 906, 907, 908, 909, 912, 915, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 937, 938, 939, 940, 941, 944, 946, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 961, 963, 964, 966, 968, 969, 970, 982, 983, 984, 985, 990, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1013, 1014, 1016, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1114, 1115, 1117, 1118, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1169], "mittwoch": [8, 196, 198, 206], "00": [8, 112, 154, 155, 157, 162, 167, 175, 179, 187, 188, 189, 191, 192, 193, 194, 196, 198, 200, 202, 204, 206, 209, 213, 219, 221, 227, 237, 240, 241, 268, 269, 276, 277, 279, 333, 441, 449, 463, 718, 740, 744, 748, 759, 835, 836, 890, 912, 913, 914, 966, 985, 994, 1032, 1139], "tectrain": [8, 11, 175, 187, 196, 198, 206, 209, 212, 213, 214, 215, 219, 231, 243, 358], "html": [8, 17, 18, 23, 39, 40, 149, 158, 171, 179, 196, 206, 209, 212, 216, 219, 222, 225, 228, 244, 275, 335, 645, 764, 779, 785, 868, 890, 976, 980, 1051, 1117], "download": [8, 17, 63, 65, 106, 140, 151, 157, 159, 163, 167, 172, 175, 184, 191, 196, 204, 206, 209, 212, 213, 214, 219, 222, 225, 235, 238, 241, 243, 246, 249, 252, 261, 264, 271, 275, 282, 299, 319, 331, 360, 450, 453, 514, 515, 516, 517, 518, 519, 520, 523, 524, 569, 654, 656, 660, 661, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 715, 717, 868, 870, 890, 892, 905, 912, 913, 914, 924, 990, 996, 1030, 1063, 1075, 1084, 1094, 1095, 1097, 1108, 1110, 1112, 1134], "repositori": [8, 23, 77, 97, 109, 112, 134, 139, 148, 155, 158, 166, 170, 179, 181, 188, 189, 199, 204, 206, 209, 213, 214, 215, 219, 222, 225, 230, 231, 235, 238, 241, 243, 246, 252, 260, 268, 278, 279, 281, 285, 291, 295, 296, 299, 303, 307, 311, 313, 317, 319, 325, 339, 340, 345, 513, 530, 565, 761, 808, 1148, 1153], "kurssprach": [8, 196, 206, 215, 231, 243], "kurs": [8, 23, 149, 166, 187, 198, 206, 215, 231, 243, 1153, 1154, 1155, 1163, 1170, 1177], "viel": [8, 23, 170, 175, 179, 185, 196, 206, 215, 221, 231, 232, 243, 262, 1156, 1157, 1163, 1171, 1172], "spezifisch": [8, 196, 206, 215, 231, 243, 1154, 1173, 1176], "unterrichtet": [8, 196, 206, 215, 231, 243], "themenreihenfolg": [8, 196, 206, 215, 231, 243], "herdt": [8, 145, 206, 215, 231, 243], "skriptum": [8, 196, 206, 215, 231, 243, 1169], "\u00fcbernommen": [8, 196, 206, 215, 231, 243], "etwa": [8, 23, 160, 161, 170, 175, 185, 187, 196, 206, 208, 215, 231, 243, 358, 1154, 1156, 1163, 1169, 1170, 1172, 1177], "allgemein": [8, 196, 206, 215, 231, 243, 1169], "allgemeinen": [8, 196, 200, 206, 215, 231, 243, 1172], "dadurch": [8, 196, 206, 215, 231, 243, 358, 1156, 1176], "verwirrend": [8, 196, 206, 215, 231, 243, 1169], "weswegen": [8, 196, 206, 215, 231, 243], "vielen": [8, 23, 170, 195, 206, 215, 231, 243, 358, 1163, 1165], "f\u00e4llen": [8, 23, 196, 206, 215, 231, 243], "ausnahmen": [8, 196, 206, 215, 231, 243], "gemacht": [8, 23, 160, 166, 196, 206, 215, 231, 243, 1169, 1177], "kursstruktur": [8, 206], "sieh": [8, 23, 169, 170, 171, 175, 179, 185, 196, 198, 201, 206, 215, 231, 243, 358, 1154, 1155, 1169], "jjj": [8, 125, 149, 193, 198, 206, 228, 276, 281, 349, 763, 764, 765, 769, 777], "hello": [8, 29, 63, 90, 145, 163, 185, 191, 195, 196, 198, 202, 206, 208, 209, 213, 215, 217, 219, 221, 222, 225, 227, 230, 231, 232, 234, 235, 241, 242, 243, 244, 246, 247, 249, 251, 264, 265, 271, 274, 282, 284, 285, 290, 291, 304, 312, 313, 314, 318, 319, 324, 326, 327, 328, 329, 330, 331, 335, 336, 340, 375, 378, 382, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 572, 575, 645, 667, 673, 676, 693, 698, 699, 700, 701, 705, 758, 760, 761, 765, 768, 770, 773, 775, 778, 785, 789, 793, 799, 805, 810, 812, 817, 820, 823, 826, 829, 835, 836, 839, 840, 872, 874, 879, 880, 887, 904, 915, 937, 961, 982, 983, 984, 994, 996, 998, 999, 1000, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1033, 1034, 1040, 1043, 1045, 1049, 1050, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1130, 1133, 1155, 1169], "py": [8, 17, 21, 32, 40, 63, 65, 136, 148, 167, 171, 172, 175, 183, 184, 185, 188, 189, 191, 193, 203, 206, 212, 218, 221, 225, 227, 228, 231, 232, 235, 237, 238, 240, 241, 243, 244, 250, 252, 264, 270, 271, 272, 280, 281, 285, 286, 291, 302, 303, 308, 320, 325, 340, 449, 707, 912, 968, 970, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1014, 1016, 1018, 1019, 1025, 1026, 1032, 1033, 1035, 1041, 1047, 1048, 1052, 1058, 1060, 1061, 1062, 1063, 1067, 1068, 1070, 1071, 1073, 1075, 1080, 1084, 1086, 1088, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1108, 1109, 1114, 1122, 1127, 1128, 1139, 1140], "swap": [8, 29, 154, 190, 196, 206, 208, 215, 227, 230, 231, 243, 248, 249, 258, 267, 268, 288, 289, 415, 419, 422, 426, 435, 439, 444, 445, 543, 667, 705, 758, 760, 761, 794, 838, 849, 850, 904, 1036, 1065, 1067, 1068, 1069, 1070, 1072, 1104, 1169, 1173], "exercis": [8, 29, 78, 93, 97, 102, 104, 106, 114, 115, 127, 130, 131, 132, 149, 171, 179, 184, 191, 192, 196, 198, 203, 206, 209, 215, 219, 222, 225, 226, 228, 231, 235, 238, 241, 243, 246, 248, 249, 258, 260, 267, 271, 273, 274, 288, 289, 293, 307, 311, 319, 325, 326, 327, 328, 329, 331, 339, 342, 345, 353, 354, 371, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 464, 472, 512, 533, 534, 535, 536, 538, 539, 540, 545, 565, 632, 633, 647, 667, 705, 733, 760, 761, 762, 769, 831, 835, 836, 838, 842, 849, 859, 861, 863, 888, 898, 904, 920, 943, 945, 954, 962, 981, 988, 1029, 1030, 1064, 1093, 1104, 1105, 1139, 1159, 1162, 1164, 1169, 1174], "greet": [8, 29, 185, 196, 206, 209, 215, 221, 222, 231, 232, 234, 240, 241, 243, 246, 249, 264, 265, 336, 459, 761, 983, 984, 990, 1000, 1065, 1067, 1069, 1072, 1104, 1169], "depend": [8, 13, 28, 29, 63, 78, 114, 132, 145, 148, 149, 152, 153, 159, 163, 182, 184, 196, 206, 209, 214, 215, 221, 222, 227, 228, 231, 237, 240, 241, 243, 246, 249, 264, 281, 289, 295, 311, 340, 355, 363, 379, 381, 389, 392, 408, 425, 437, 443, 447, 451, 455, 458, 462, 465, 472, 478, 512, 524, 550, 552, 560, 640, 666, 714, 737, 759, 761, 767, 820, 831, 838, 842, 849, 852, 863, 888, 898, 905, 913, 931, 983, 994, 998, 1000, 1007, 1029, 1030, 1032, 1065, 1069, 1078, 1104, 1133, 1134, 1164, 1166, 1169], "time": [8, 29, 36, 38, 43, 53, 63, 73, 76, 85, 89, 98, 110, 111, 112, 114, 115, 119, 127, 132, 142, 151, 152, 153, 154, 156, 157, 159, 172, 173, 176, 184, 188, 190, 191, 192, 196, 202, 204, 206, 209, 211, 213, 214, 215, 221, 222, 224, 227, 228, 231, 232, 240, 241, 243, 246, 247, 249, 250, 264, 265, 268, 271, 272, 274, 277, 278, 280, 281, 282, 286, 289, 299, 302, 303, 306, 308, 313, 314, 319, 326, 347, 358, 375, 383, 397, 403, 406, 429, 431, 436, 437, 440, 441, 442, 443, 447, 452, 463, 465, 466, 469, 475, 524, 554, 567, 574, 576, 617, 618, 672, 679, 693, 707, 715, 717, 728, 735, 739, 759, 761, 779, 781, 785, 786, 788, 800, 806, 808, 810, 823, 826, 829, 833, 839, 840, 841, 847, 848, 852, 868, 899, 904, 905, 912, 913, 914, 924, 934, 940, 941, 942, 946, 949, 950, 952, 955, 958, 964, 966, 967, 968, 969, 970, 975, 997, 998, 1004, 1008, 1014, 1017, 1018, 1029, 1030, 1031, 1034, 1041, 1044, 1047, 1048, 1065, 1067, 1069, 1072, 1104, 1110, 1119, 1124, 1134, 1164, 1169, 1175], "dai": [8, 12, 29, 153, 154, 156, 162, 165, 171, 172, 176, 190, 196, 206, 209, 215, 217, 226, 231, 240, 241, 243, 246, 249, 264, 272, 276, 299, 346, 348, 349, 358, 448, 453, 454, 465, 486, 761, 825, 864, 929, 966, 1007, 1029, 1036, 1045, 1065, 1067, 1069, 1072, 1104, 1105, 1112, 1133, 1160, 1161, 1162, 1164, 1169, 1174], "hen": [8, 206], "vehikelkauf": [8, 206], "datentypen": [8, 175, 179, 196, 197, 203, 206, 237, 255, 341, 1156, 1169, 1176], "\u00fcbersicht": [8, 196, 206, 209, 219, 222, 225], "git": [8, 13, 23, 61, 65, 72, 73, 74, 78, 114, 115, 131, 135, 139, 144, 156, 158, 166, 179, 180, 181, 184, 201, 203, 204, 206, 228, 230, 241, 252, 257, 259, 277, 278, 279, 346, 347, 353, 354, 450, 511, 522, 585, 761, 783, 808, 809, 868, 907, 912, 996, 997, 1061, 1148, 1153], "scm": [8, 61, 155, 179, 206, 781], "com": [8, 13, 20, 23, 37, 42, 44, 50, 85, 106, 112, 114, 126, 134, 136, 148, 157, 158, 159, 163, 167, 179, 180, 181, 182, 188, 189, 192, 193, 201, 206, 208, 214, 228, 230, 240, 252, 257, 259, 265, 268, 271, 272, 277, 278, 279, 281, 285, 291, 295, 296, 299, 303, 307, 311, 313, 317, 319, 339, 340, 345, 351, 360, 508, 522, 543, 585, 605, 606, 607, 608, 609, 611, 612, 613, 614, 617, 626, 645, 727, 808, 809, 868, 907, 912, 915, 923, 924, 996, 1061, 1119, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "pep": [8, 148, 196, 206, 278, 280, 281, 302, 303], "The": [8, 13, 17, 29, 30, 40, 49, 53, 57, 59, 62, 63, 65, 78, 84, 90, 99, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 124, 125, 131, 132, 135, 145, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 164, 167, 168, 169, 172, 173, 175, 176, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 206, 209, 212, 215, 219, 220, 221, 222, 225, 226, 227, 230, 231, 234, 235, 237, 238, 240, 243, 244, 246, 249, 251, 254, 256, 257, 258, 259, 261, 264, 267, 270, 271, 274, 277, 279, 281, 284, 285, 287, 288, 290, 291, 307, 309, 312, 313, 314, 318, 319, 324, 326, 327, 328, 329, 330, 331, 337, 340, 341, 342, 343, 345, 346, 357, 358, 359, 362, 364, 372, 378, 386, 388, 390, 391, 392, 393, 398, 402, 406, 409, 415, 419, 422, 425, 426, 429, 435, 437, 439, 444, 448, 450, 452, 465, 466, 467, 470, 471, 476, 485, 486, 487, 489, 491, 493, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 525, 527, 530, 532, 565, 566, 568, 572, 573, 575, 584, 585, 586, 587, 588, 591, 594, 602, 610, 616, 620, 629, 632, 633, 638, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 670, 674, 676, 681, 686, 692, 705, 706, 715, 716, 717, 721, 730, 737, 738, 742, 746, 755, 758, 759, 761, 762, 769, 771, 781, 783, 786, 802, 808, 810, 813, 831, 833, 835, 836, 837, 838, 841, 842, 845, 846, 849, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 865, 867, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 883, 884, 886, 898, 904, 908, 912, 913, 914, 927, 929, 933, 935, 938, 939, 940, 941, 943, 945, 948, 952, 953, 955, 956, 959, 962, 965, 966, 967, 976, 979, 980, 983, 986, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 999, 1000, 1001, 1005, 1007, 1008, 1011, 1012, 1015, 1016, 1017, 1019, 1020, 1021, 1028, 1030, 1032, 1034, 1035, 1042, 1046, 1049, 1053, 1054, 1056, 1057, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1113, 1115, 1116, 1119, 1120, 1122, 1126, 1128, 1133, 1136, 1139, 1141, 1143, 1146, 1156, 1158, 1159, 1160, 1162, 1169], "zen": [8, 155, 196, 206, 234, 245, 278, 682], "corei": [8, 173, 184, 187, 188, 191, 193, 196, 198, 204, 206, 209, 212, 219, 222, 225, 235, 238, 249, 252, 261, 285, 291, 319, 340, 345, 1106, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1142], "schaefer": [8, 193, 196, 198, 204, 206], "youtub": [8, 20, 159, 173, 184, 187, 189, 191, 193, 196, 198, 206, 213, 280, 281, 302, 306, 326], "channel": [8, 127, 157, 173, 196, 206, 905, 913, 975], "trainer": [8, 12, 23, 24, 59, 62, 159, 178, 179, 184, 196, 206, 257, 259, 277, 452, 454, 522, 569, 717, 913, 1007, 1014, 1029, 1030, 1105, 1120, 1132, 1133, 1139, 1159, 1164], "hacker": [8, 196, 206, 1164], "schier": [8, 196, 206], "anzahl": [8, 196, 206], "sehr": [8, 23, 37, 160, 161, 175, 179, 185, 187, 195, 196, 200, 206, 237, 358, 1154, 1156, 1163, 1166, 1169, 1170, 1172, 1177], "guten": [8, 175, 185, 187, 196, 206, 240, 244, 358, 1158], "tutori": [8, 159, 173, 184, 187, 192, 196, 204, 206, 212, 213, 215, 222, 225, 235, 238, 261, 291, 303, 319, 326, 340, 345, 868, 914, 1058, 1060, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1142], "stil": [8, 196, 206], "besser": [8, 23, 160, 171, 195, 196, 206, 216, 1169], "ander": [8, 175, 185, 196, 206, 216, 224, 237, 335, 340, 345, 349, 358, 834, 1154, 1155, 1158, 1163, 1166, 1171, 1175, 1176], "auswahl": [8, 196, 206], "einleitung": [9, 207], "datatyp": [9, 29, 90, 145, 184, 188, 191, 196, 197, 198, 201, 203, 207, 209, 210, 215, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 233, 235, 236, 241, 242, 243, 245, 246, 248, 251, 261, 263, 266, 273, 281, 283, 287, 293, 303, 305, 307, 309, 315, 321, 326, 327, 328, 329, 330, 331, 340, 345, 379, 386, 571, 600, 668, 761, 975, 1007, 1012, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133, 1169], "number": [9, 24, 27, 29, 36, 53, 57, 59, 62, 63, 68, 78, 80, 82, 84, 85, 110, 111, 112, 115, 119, 121, 131, 142, 145, 151, 153, 154, 157, 159, 162, 163, 167, 170, 172, 175, 181, 184, 188, 191, 194, 195, 196, 198, 203, 204, 207, 209, 210, 212, 215, 219, 221, 222, 224, 225, 227, 228, 231, 233, 234, 235, 237, 240, 241, 243, 245, 246, 248, 249, 250, 252, 257, 259, 261, 264, 265, 271, 272, 277, 278, 279, 280, 281, 282, 284, 285, 286, 290, 291, 294, 302, 303, 306, 307, 308, 310, 312, 313, 314, 318, 319, 324, 326, 331, 340, 347, 358, 363, 365, 367, 369, 371, 372, 373, 379, 383, 385, 386, 397, 408, 424, 428, 433, 437, 441, 447, 449, 459, 477, 478, 486, 511, 519, 521, 524, 526, 537, 543, 570, 590, 598, 601, 608, 624, 649, 658, 661, 670, 682, 708, 715, 717, 759, 761, 767, 769, 776, 779, 788, 790, 802, 804, 810, 818, 822, 833, 841, 848, 874, 893, 895, 897, 899, 901, 913, 924, 925, 928, 932, 933, 934, 939, 940, 941, 942, 961, 966, 967, 975, 976, 980, 982, 985, 1005, 1006, 1008, 1010, 1011, 1012, 1022, 1034, 1035, 1036, 1041, 1042, 1052, 1053, 1054, 1056, 1057, 1065, 1068, 1069, 1072, 1075, 1076, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1100, 1104, 1105, 1106, 1109, 1114, 1132, 1134, 1139, 1152, 1161, 1164, 1169], "integ": [9, 38, 75, 76, 88, 170, 172, 174, 189, 190, 191, 193, 197, 201, 207, 210, 214, 221, 224, 225, 227, 230, 233, 236, 237, 238, 240, 245, 248, 254, 266, 273, 286, 293, 305, 309, 315, 321, 340, 363, 364, 369, 379, 382, 384, 385, 386, 397, 408, 410, 412, 413, 424, 425, 429, 435, 439, 444, 445, 486, 487, 490, 508, 543, 571, 597, 600, 648, 662, 666, 667, 669, 705, 708, 734, 758, 760, 761, 767, 942, 952, 953, 954, 961, 1001, 1014, 1017, 1045, 1051, 1057, 1083, 1127, 1129, 1156, 1160, 1175], "string": [9, 29, 42, 50, 58, 90, 97, 106, 119, 120, 149, 154, 179, 189, 190, 191, 193, 196, 197, 200, 203, 207, 209, 210, 212, 213, 215, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 233, 235, 236, 239, 241, 242, 243, 245, 246, 248, 251, 254, 256, 257, 259, 261, 263, 264, 266, 270, 271, 273, 274, 276, 284, 285, 287, 290, 291, 293, 302, 303, 305, 306, 307, 309, 312, 313, 315, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 336, 340, 345, 351, 364, 367, 371, 378, 387, 393, 402, 408, 409, 415, 419, 422, 426, 431, 435, 439, 444, 445, 449, 457, 468, 472, 474, 489, 491, 492, 493, 496, 498, 501, 502, 503, 505, 506, 507, 508, 524, 525, 526, 531, 542, 543, 551, 557, 560, 566, 568, 571, 572, 575, 590, 592, 609, 612, 613, 614, 618, 621, 622, 623, 624, 625, 626, 629, 633, 644, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 667, 668, 669, 671, 673, 674, 678, 693, 697, 699, 700, 701, 702, 705, 707, 709, 710, 714, 724, 725, 726, 727, 729, 741, 758, 759, 760, 761, 840, 931, 942, 946, 949, 953, 961, 966, 975, 979, 1006, 1007, 1010, 1018, 1027, 1029, 1034, 1042, 1056, 1063, 1064, 1065, 1070, 1075, 1078, 1079, 1080, 1083, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1117, 1118, 1119, 1120, 1122, 1125, 1156, 1169], "compound": [9, 29, 90, 145, 188, 191, 196, 197, 198, 207, 209, 215, 219, 220, 222, 223, 225, 226, 228, 229, 231, 233, 235, 236, 241, 242, 243, 245, 246, 248, 249, 251, 263, 264, 271, 274, 281, 283, 284, 285, 287, 290, 291, 293, 302, 303, 305, 306, 307, 309, 312, 313, 318, 319, 321, 324, 326, 327, 328, 329, 330, 331, 340, 363, 394, 413, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1062, 1063, 1064, 1065, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133, 1169], "list": [9, 27, 29, 37, 63, 90, 99, 114, 136, 145, 148, 149, 152, 159, 163, 174, 179, 181, 184, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 203, 204, 207, 209, 210, 212, 215, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 242, 243, 245, 246, 248, 249, 251, 253, 257, 258, 261, 263, 264, 266, 267, 268, 271, 273, 274, 277, 278, 279, 283, 284, 285, 287, 288, 289, 290, 291, 293, 302, 303, 305, 306, 307, 308, 312, 313, 315, 318, 319, 321, 324, 325, 332, 335, 337, 340, 344, 345, 346, 358, 416, 422, 426, 427, 435, 439, 441, 443, 444, 445, 449, 450, 453, 462, 469, 471, 472, 511, 513, 521, 524, 557, 559, 561, 565, 569, 570, 575, 600, 616, 629, 633, 652, 662, 667, 670, 705, 713, 719, 724, 737, 738, 758, 759, 760, 761, 762, 770, 774, 775, 778, 785, 786, 789, 799, 810, 812, 816, 817, 823, 826, 829, 834, 835, 836, 837, 838, 841, 842, 848, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 875, 876, 879, 880, 882, 883, 884, 885, 886, 888, 896, 904, 913, 933, 935, 937, 943, 945, 953, 955, 959, 962, 965, 967, 982, 984, 999, 1003, 1006, 1007, 1010, 1011, 1012, 1025, 1027, 1029, 1030, 1036, 1037, 1042, 1043, 1044, 1045, 1048, 1054, 1056, 1057, 1058, 1063, 1065, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1098, 1101, 1103, 1104, 1105, 1106, 1111, 1114, 1124, 1127, 1131, 1141, 1146, 1153, 1156, 1169, 1170], "arrai": [9, 97, 108, 114, 175, 196, 197, 202, 207, 209, 213, 214, 216, 222, 230, 235, 240, 249, 252, 256, 257, 277, 285, 291, 363, 372, 378, 382, 393, 402, 409, 419, 422, 426, 428, 430, 431, 434, 435, 439, 444, 445, 523, 526, 549, 557, 560, 598, 599, 601, 603, 605, 608, 609, 614, 618, 630, 650, 657, 658, 659, 660, 661, 662, 665, 667, 705, 713, 728, 745, 758, 760, 761, 779, 840, 845, 961, 1038, 1042, 1054, 1106, 1109, 1111, 1134, 1169], "javascript": [9, 23, 150, 185, 195, 207, 216, 240, 245, 1001, 1047], "std": [9, 42, 50, 58, 106, 108, 109, 110, 111, 114, 119, 120, 123, 163, 179, 180, 207, 255, 268, 277, 279, 451, 452, 457, 465, 468, 470, 472, 474, 479, 486, 489, 491, 492, 493, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 511, 513, 514, 519, 521, 523, 524, 525, 527, 528, 529, 530, 541, 543, 551, 561, 565, 568, 569, 571, 576, 577, 578, 582, 590, 592, 596, 597, 598, 599, 600, 605, 606, 607, 608, 609, 611, 612, 613, 617, 618, 620, 623, 624, 625, 626, 629, 630, 633, 634, 636, 637, 640, 642, 643, 644, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 662, 667, 669, 672, 673, 674, 675, 676, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 707, 709, 710, 712, 717, 720, 723, 727, 730, 732, 738, 742, 745, 746, 747, 749, 755, 757, 758, 760, 761, 912, 946, 949, 953, 961, 963, 975, 979, 1111, 1146, 1151, 1159], "vector": [9, 13, 106, 108, 110, 111, 114, 119, 120, 123, 179, 207, 213, 230, 256, 257, 270, 276, 277, 279, 317, 470, 472, 496, 497, 513, 514, 521, 527, 528, 529, 530, 541, 559, 561, 565, 569, 571, 576, 581, 605, 607, 608, 609, 611, 614, 616, 629, 633, 647, 649, 650, 657, 658, 659, 660, 662, 668, 669, 673, 678, 679, 680, 687, 688, 689, 690, 691, 693, 713, 714, 717, 746, 755, 757, 761, 979, 1035, 1113, 1130, 1151], "dictionari": [9, 29, 63, 90, 174, 184, 189, 190, 191, 193, 196, 197, 198, 201, 203, 207, 209, 210, 215, 219, 220, 222, 223, 225, 226, 228, 229, 231, 233, 235, 236, 239, 242, 243, 245, 246, 248, 249, 251, 254, 261, 263, 264, 266, 271, 273, 274, 278, 280, 281, 283, 284, 285, 287, 290, 291, 293, 296, 299, 302, 303, 305, 306, 307, 309, 312, 313, 315, 318, 319, 321, 324, 340, 345, 348, 714, 761, 1007, 1010, 1014, 1015, 1016, 1017, 1020, 1021, 1025, 1029, 1063, 1065, 1073, 1078, 1083, 1084, 1089, 1092, 1093, 1094, 1096, 1098, 1099, 1104, 1106, 1114, 1124, 1131, 1133, 1169], "valu": [9, 58, 84, 108, 114, 115, 119, 120, 126, 131, 132, 152, 154, 156, 167, 169, 171, 172, 173, 185, 189, 191, 193, 195, 200, 202, 207, 208, 209, 211, 212, 213, 214, 216, 217, 219, 221, 222, 224, 225, 227, 228, 230, 232, 234, 235, 237, 240, 244, 247, 249, 250, 261, 262, 265, 268, 270, 272, 282, 285, 286, 291, 292, 304, 308, 314, 317, 319, 326, 334, 340, 362, 367, 369, 371, 372, 382, 385, 386, 387, 395, 397, 398, 406, 408, 410, 411, 416, 427, 431, 433, 435, 439, 444, 445, 449, 452, 457, 459, 462, 467, 470, 472, 486, 487, 489, 492, 496, 498, 501, 503, 504, 506, 517, 518, 519, 521, 524, 531, 543, 560, 569, 570, 571, 574, 580, 583, 621, 623, 625, 626, 667, 669, 670, 676, 678, 687, 693, 696, 699, 700, 701, 705, 714, 725, 739, 755, 758, 760, 761, 764, 767, 786, 788, 790, 792, 808, 818, 840, 853, 904, 913, 934, 942, 944, 945, 947, 948, 949, 952, 955, 961, 964, 975, 976, 979, 980, 999, 1001, 1003, 1006, 1010, 1014, 1016, 1018, 1025, 1036, 1037, 1038, 1046, 1048, 1051, 1053, 1054, 1058, 1063, 1066, 1071, 1073, 1076, 1083, 1085, 1106, 1109, 1111, 1114, 1117, 1118, 1124, 1125, 1128, 1129, 1130, 1146], "map": [9, 32, 34, 42, 59, 62, 106, 108, 109, 119, 120, 154, 161, 179, 185, 199, 201, 203, 207, 209, 210, 212, 213, 216, 224, 225, 227, 242, 256, 257, 259, 265, 277, 279, 286, 305, 316, 340, 443, 468, 472, 501, 505, 506, 507, 513, 524, 530, 559, 561, 565, 620, 623, 624, 625, 626, 629, 633, 662, 665, 669, 673, 679, 705, 724, 725, 726, 728, 760, 761, 792, 804, 966, 975, 976, 1024, 1028, 1037, 1038, 1057, 1113, 1163, 1173], "mathematisch": [9, 207, 265], "mengen": [9, 196, 197, 207, 1169], "while": [9, 13, 29, 53, 54, 63, 90, 145, 156, 158, 159, 167, 173, 184, 188, 189, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 207, 208, 209, 211, 212, 215, 216, 217, 219, 221, 222, 225, 226, 227, 230, 231, 233, 235, 236, 238, 239, 241, 242, 243, 244, 246, 248, 249, 251, 261, 264, 265, 271, 273, 274, 278, 280, 284, 285, 286, 290, 291, 292, 302, 303, 304, 306, 312, 313, 315, 318, 319, 324, 326, 327, 328, 329, 330, 331, 332, 340, 343, 345, 363, 365, 369, 371, 373, 380, 385, 387, 401, 402, 408, 409, 413, 415, 419, 422, 423, 426, 428, 430, 435, 437, 439, 444, 445, 455, 467, 472, 486, 493, 511, 560, 596, 600, 601, 604, 606, 608, 611, 626, 649, 655, 665, 667, 678, 693, 694, 695, 701, 705, 726, 737, 739, 755, 758, 760, 761, 785, 788, 796, 798, 808, 810, 816, 817, 823, 826, 829, 841, 845, 852, 904, 905, 912, 913, 925, 930, 931, 932, 933, 940, 949, 955, 960, 961, 964, 966, 972, 975, 979, 994, 999, 1007, 1008, 1009, 1010, 1014, 1017, 1029, 1030, 1034, 1039, 1044, 1056, 1062, 1063, 1064, 1065, 1069, 1075, 1077, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1112, 1113, 1116, 1120, 1133, 1156, 1160, 1162, 1164, 1169], "function": [9, 21, 29, 38, 50, 59, 62, 63, 78, 80, 82, 90, 97, 110, 111, 114, 115, 132, 145, 149, 152, 154, 163, 171, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 200, 203, 204, 207, 209, 210, 212, 213, 215, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 233, 235, 236, 237, 238, 241, 242, 243, 245, 246, 247, 251, 254, 255, 262, 264, 266, 268, 270, 271, 273, 274, 277, 279, 280, 281, 282, 284, 285, 287, 290, 291, 292, 298, 305, 307, 308, 315, 319, 320, 325, 335, 336, 342, 343, 345, 358, 362, 363, 369, 372, 376, 377, 378, 383, 388, 392, 393, 401, 402, 403, 404, 406, 408, 413, 415, 416, 419, 420, 421, 422, 424, 426, 427, 428, 430, 435, 437, 439, 441, 444, 445, 448, 456, 462, 470, 475, 487, 508, 512, 513, 524, 527, 528, 529, 530, 532, 541, 554, 560, 565, 569, 572, 575, 577, 578, 579, 580, 586, 591, 594, 596, 610, 616, 620, 629, 632, 633, 640, 643, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 667, 669, 670, 673, 674, 682, 685, 691, 693, 702, 703, 704, 705, 707, 709, 710, 715, 721, 725, 727, 728, 738, 745, 747, 749, 750, 751, 758, 759, 760, 761, 772, 775, 778, 779, 785, 789, 792, 796, 799, 802, 808, 810, 812, 817, 823, 824, 826, 827, 828, 829, 838, 841, 842, 904, 912, 925, 927, 933, 934, 935, 942, 943, 945, 950, 951, 952, 958, 959, 961, 962, 965, 967, 980, 982, 990, 1000, 1007, 1010, 1011, 1012, 1013, 1021, 1029, 1031, 1034, 1035, 1039, 1041, 1062, 1063, 1064, 1065, 1068, 1071, 1072, 1075, 1076, 1077, 1078, 1083, 1086, 1087, 1089, 1090, 1091, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1111, 1116, 1122, 1135, 1139, 1151, 1159, 1160, 1161, 1169], "xx": [10, 221, 252, 286, 292, 308, 314], "yy": 10, "kur": [11, 23, 170, 172, 175, 187, 358, 1154, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1172, 1173, 1175], "fand": [11, 187, 358], "team": [11, 112, 115, 132, 159, 164, 167, 168, 179, 187, 188, 189, 204, 213, 238, 280, 358, 847, 853, 860, 862, 1008, 1105, 1153, 1161], "statt": [11, 23, 187, 358, 1170, 1171, 1177], "wurd": [11, 161, 175, 179, 185, 187, 196, 340, 345, 358, 1158, 1169, 1170, 1176], "\u00fcber": [11, 23, 160, 161, 166, 170, 171, 175, 179, 187, 196, 197, 201, 210, 215, 241, 341, 358, 1153, 1163, 1169, 1170, 1175, 1176], "meinen": [11, 23, 187, 215, 231, 243, 358], "partner": [11, 23, 187, 358, 1153], "durat": [12, 27, 157, 167, 420, 454, 524, 735, 739, 740, 1007, 1029, 1105, 1133, 1161, 1162, 1164, 1174], "each": [12, 40, 63, 76, 106, 110, 111, 120, 123, 152, 153, 154, 167, 173, 191, 192, 204, 221, 224, 227, 237, 240, 244, 277, 279, 286, 325, 331, 337, 340, 345, 413, 438, 441, 443, 467, 475, 508, 522, 523, 579, 665, 740, 746, 759, 796, 804, 808, 835, 841, 862, 866, 868, 912, 913, 914, 952, 956, 964, 998, 1010, 1013, 1018, 1024, 1084, 1105, 1111, 1113, 1114, 1115, 1130, 1134, 1164, 1174], "about": [12, 23, 29, 30, 39, 42, 43, 44, 45, 46, 49, 63, 65, 68, 75, 80, 83, 84, 90, 97, 112, 114, 132, 140, 145, 146, 148, 152, 153, 154, 156, 159, 167, 176, 180, 181, 184, 188, 189, 190, 191, 192, 193, 196, 203, 204, 209, 212, 213, 214, 215, 219, 221, 222, 225, 228, 229, 230, 231, 233, 235, 237, 238, 240, 241, 243, 245, 246, 249, 258, 261, 263, 264, 266, 267, 268, 274, 278, 279, 284, 285, 288, 290, 291, 293, 302, 303, 306, 307, 312, 313, 315, 317, 318, 324, 326, 327, 328, 329, 330, 331, 340, 342, 345, 351, 381, 386, 395, 397, 425, 428, 429, 431, 437, 441, 443, 447, 461, 467, 560, 569, 570, 593, 600, 666, 675, 679, 680, 710, 714, 719, 728, 729, 759, 761, 777, 779, 808, 818, 827, 835, 836, 854, 871, 905, 912, 913, 914, 925, 929, 935, 950, 967, 975, 1001, 1007, 1008, 1010, 1017, 1018, 1025, 1029, 1037, 1048, 1056, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1113, 1119, 1120, 1121, 1122, 1126, 1134, 1139, 1148, 1161, 1162, 1169, 1174], "book": [12, 29, 32, 148, 152, 157, 167, 168, 179, 188, 213, 235, 271, 280, 281, 358, 448, 454, 868, 1007, 1029, 1105, 1120, 1133, 1160, 1162, 1164, 1174], "separ": [12, 38, 78, 103, 104, 114, 152, 179, 181, 191, 211, 224, 230, 240, 244, 247, 250, 265, 268, 271, 272, 274, 282, 286, 294, 308, 310, 314, 370, 408, 429, 449, 452, 459, 471, 475, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 543, 560, 565, 590, 711, 739, 759, 761, 776, 777, 810, 844, 848, 853, 899, 901, 904, 914, 950, 966, 982, 984, 987, 988, 989, 990, 992, 1000, 1005, 1062, 1079, 1084, 1105, 1114, 1146, 1156, 1161, 1174], "requir": [12, 13, 27, 37, 39, 42, 61, 89, 108, 112, 114, 144, 148, 152, 153, 154, 157, 159, 163, 172, 180, 182, 184, 188, 192, 200, 211, 214, 225, 228, 230, 232, 237, 238, 252, 268, 277, 279, 280, 303, 351, 362, 395, 425, 427, 450, 459, 462, 470, 490, 492, 512, 521, 524, 543, 592, 605, 621, 658, 669, 675, 676, 682, 685, 690, 691, 715, 722, 751, 752, 905, 913, 914, 925, 930, 966, 968, 975, 994, 999, 1007, 1020, 1029, 1030, 1048, 1057, 1058, 1061, 1114, 1120, 1133, 1134, 1139, 1141, 1142, 1148, 1160, 1162, 1164, 1174, 1177], "particip": [12, 157, 159, 181, 184, 268, 299, 508, 907, 1030, 1044, 1064, 1174], "should": [12, 37, 43, 45, 55, 57, 77, 80, 112, 115, 116, 119, 131, 132, 148, 153, 154, 157, 159, 163, 167, 174, 180, 184, 188, 213, 214, 228, 234, 240, 244, 268, 303, 306, 308, 326, 331, 346, 347, 361, 386, 408, 423, 433, 437, 447, 452, 459, 465, 470, 475, 476, 478, 479, 487, 524, 568, 575, 577, 673, 676, 678, 682, 693, 737, 767, 786, 798, 800, 804, 808, 833, 852, 868, 875, 880, 912, 913, 914, 921, 940, 956, 967, 1005, 1014, 1018, 1026, 1037, 1071, 1075, 1084, 1112, 1122, 1134, 1139, 1140, 1174], "fluent": [12, 291, 341, 342, 1106, 1174], "target": [12, 17, 40, 63, 108, 153, 155, 163, 204, 213, 295, 311, 342, 431, 434, 450, 453, 454, 460, 463, 476, 580, 761, 781, 783, 788, 808, 870, 935, 960, 984, 985, 994, 996, 1003, 1007, 1014, 1016, 1029, 1113, 1120, 1133, 1141, 1164], "audienc": [12, 152, 154, 184, 189, 306, 1007, 1029, 1061, 1120, 1133, 1159, 1164], "english": [12, 29, 106, 145, 172, 191, 198, 209, 219, 222, 231, 235, 241, 243, 246, 248, 249, 264, 271, 276, 284, 285, 290, 291, 303, 312, 313, 318, 319, 324, 338, 339, 340, 345, 454, 761, 1007, 1029, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104, 1105, 1119, 1120, 1133], "german": [12, 14, 454, 1007, 1029, 1105, 1119, 1120, 1122, 1133], "see": [12, 13, 23, 27, 29, 31, 42, 43, 45, 46, 50, 53, 55, 57, 63, 65, 77, 78, 85, 89, 99, 106, 112, 114, 115, 117, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 137, 138, 140, 145, 148, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 167, 169, 172, 173, 174, 182, 184, 188, 189, 198, 203, 204, 208, 211, 213, 214, 219, 221, 224, 225, 227, 228, 230, 231, 237, 240, 244, 249, 252, 261, 265, 268, 270, 274, 276, 277, 278, 279, 281, 285, 286, 294, 295, 303, 307, 310, 311, 322, 326, 331, 340, 343, 344, 346, 351, 354, 359, 362, 371, 372, 373, 375, 381, 398, 411, 417, 420, 430, 436, 449, 450, 455, 459, 460, 461, 462, 466, 467, 470, 471, 472, 480, 481, 482, 483, 484, 488, 491, 492, 508, 511, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 531, 532, 541, 542, 543, 551, 557, 560, 565, 567, 568, 569, 570, 575, 577, 578, 583, 584, 586, 601, 605, 618, 632, 636, 637, 639, 640, 652, 656, 658, 659, 661, 665, 668, 673, 675, 676, 677, 678, 680, 687, 693, 707, 708, 710, 713, 714, 715, 717, 719, 723, 724, 725, 726, 727, 728, 737, 739, 745, 747, 749, 750, 751, 752, 756, 759, 762, 764, 767, 769, 771, 772, 774, 776, 777, 779, 781, 783, 786, 788, 794, 796, 798, 800, 802, 804, 808, 811, 815, 816, 822, 824, 834, 835, 836, 840, 843, 846, 847, 864, 868, 869, 871, 872, 874, 877, 879, 895, 905, 912, 913, 914, 935, 938, 940, 941, 942, 946, 949, 951, 953, 956, 963, 975, 979, 982, 983, 984, 985, 990, 992, 995, 996, 997, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1010, 1018, 1019, 1022, 1023, 1025, 1028, 1030, 1032, 1035, 1043, 1046, 1047, 1048, 1058, 1061, 1064, 1073, 1077, 1080, 1091, 1102, 1103, 1109, 1111, 1114, 1119, 1120, 1122, 1124, 1127, 1128, 1129, 1133, 1136, 1139, 1144, 1146, 1151, 1161, 1162, 1164, 1174], "also": [12, 13, 23, 27, 31, 57, 63, 65, 112, 115, 117, 120, 122, 123, 125, 127, 130, 131, 148, 153, 154, 156, 157, 159, 160, 162, 163, 164, 171, 173, 174, 175, 176, 179, 181, 182, 184, 185, 188, 194, 196, 214, 221, 227, 237, 238, 240, 244, 250, 256, 257, 259, 268, 270, 277, 278, 279, 285, 286, 295, 303, 307, 311, 326, 358, 449, 450, 455, 460, 467, 476, 486, 489, 491, 492, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 531, 532, 542, 567, 568, 569, 570, 575, 577, 583, 601, 618, 621, 636, 637, 639, 665, 673, 676, 677, 678, 680, 693, 704, 707, 710, 713, 714, 715, 717, 719, 723, 725, 728, 729, 737, 739, 745, 750, 751, 752, 759, 798, 808, 813, 834, 846, 852, 853, 868, 872, 874, 877, 879, 899, 905, 915, 924, 925, 938, 942, 946, 953, 963, 984, 985, 992, 997, 999, 1001, 1003, 1004, 1005, 1007, 1010, 1018, 1022, 1028, 1030, 1034, 1037, 1047, 1048, 1051, 1061, 1073, 1077, 1080, 1091, 1111, 1112, 1120, 1124, 1127, 1128, 1129, 1133, 1136, 1139, 1161, 1163, 1169, 1170, 1174], "train": [12, 13, 14, 23, 29, 30, 32, 37, 65, 106, 135, 147, 148, 153, 157, 164, 165, 167, 175, 176, 179, 180, 181, 184, 187, 211, 221, 227, 237, 240, 270, 277, 279, 282, 294, 310, 320, 348, 358, 450, 452, 453, 454, 455, 456, 458, 459, 461, 463, 465, 466, 467, 468, 469, 470, 472, 474, 477, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 521, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 565, 645, 725, 759, 762, 764, 767, 772, 777, 783, 786, 794, 915, 921, 923, 924, 925, 946, 949, 972, 975, 979, 1006, 1007, 1009, 1029, 1030, 1058, 1061, 1064, 1108, 1109, 1112, 1113, 1120, 1133, 1144, 1148, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "sourc": [13, 23, 28, 30, 39, 61, 65, 68, 73, 86, 110, 111, 114, 132, 151, 152, 153, 154, 157, 158, 159, 163, 167, 169, 170, 172, 173, 180, 193, 198, 203, 221, 227, 235, 237, 240, 244, 249, 257, 259, 261, 264, 265, 268, 289, 296, 403, 404, 407, 442, 451, 452, 453, 455, 456, 457, 458, 460, 461, 462, 471, 522, 525, 526, 640, 673, 676, 682, 687, 693, 723, 776, 806, 809, 820, 852, 868, 869, 901, 942, 982, 983, 985, 986, 988, 992, 994, 996, 997, 998, 999, 1000, 1037, 1093, 1102, 1141, 1148, 1154, 1164, 1171], "under": [13, 21, 35, 55, 123, 127, 131, 151, 152, 154, 159, 180, 191, 193, 303, 358, 472, 487, 524, 844, 845, 912, 913, 914, 915, 916, 917, 924, 925, 967, 982, 1006, 1013, 1020, 1054, 1139], "why": [13, 24, 28, 45, 50, 65, 66, 69, 114, 132, 148, 152, 153, 158, 164, 184, 188, 189, 191, 193, 204, 213, 233, 271, 274, 280, 281, 302, 316, 340, 343, 344, 347, 361, 373, 379, 386, 389, 407, 418, 423, 424, 429, 433, 436, 443, 448, 486, 509, 568, 583, 601, 614, 640, 643, 659, 665, 666, 682, 713, 729, 732, 746, 757, 776, 788, 804, 808, 839, 845, 848, 905, 958, 961, 979, 994, 996, 1004, 1005, 1008, 1054, 1056, 1106, 1111, 1121, 1129], "appli": [13, 76, 83, 149, 154, 193, 211, 270, 276, 303, 314, 390, 425, 431, 449, 580, 680, 715, 781, 808, 848, 851, 868, 912, 913, 938, 999, 1125], "websit": [13, 23, 153, 167, 1135, 1148], "contain": [13, 17, 29, 35, 38, 61, 106, 107, 108, 110, 111, 112, 114, 148, 149, 155, 158, 163, 167, 172, 174, 179, 180, 182, 184, 185, 188, 191, 193, 211, 213, 214, 221, 227, 237, 238, 240, 244, 251, 252, 255, 256, 257, 270, 277, 286, 303, 325, 326, 335, 342, 343, 349, 351, 388, 407, 421, 441, 443, 449, 451, 452, 456, 470, 486, 508, 511, 513, 522, 523, 524, 530, 531, 532, 565, 566, 568, 576, 585, 602, 605, 618, 629, 633, 647, 656, 661, 662, 668, 673, 713, 725, 728, 755, 756, 757, 759, 761, 764, 769, 777, 779, 781, 802, 804, 808, 828, 835, 836, 839, 848, 850, 873, 874, 875, 880, 887, 912, 913, 914, 921, 942, 950, 951, 966, 976, 982, 985, 990, 994, 999, 1006, 1008, 1013, 1030, 1052, 1055, 1061, 1063, 1075, 1084, 1088, 1103, 1106, 1108, 1112, 1114, 1117, 1119, 1124, 1134, 1135, 1139, 1145, 1146, 1158, 1159], "give": [13, 27, 40, 53, 59, 62, 110, 111, 119, 145, 149, 151, 152, 154, 159, 162, 173, 176, 180, 181, 188, 193, 204, 212, 244, 249, 261, 277, 279, 307, 359, 373, 374, 389, 405, 408, 416, 441, 447, 449, 452, 467, 519, 521, 537, 554, 590, 605, 651, 659, 682, 711, 808, 834, 841, 859, 861, 913, 914, 933, 934, 946, 949, 968, 970, 975, 976, 982, 985, 994, 1003, 1006, 1029, 1046, 1058, 1106, 1110, 1111, 1134, 1139, 1141, 1159, 1162, 1164], "structur": [13, 29, 65, 78, 89, 108, 119, 152, 167, 189, 203, 230, 231, 238, 240, 241, 243, 246, 249, 252, 255, 264, 271, 274, 281, 285, 291, 295, 296, 299, 303, 307, 311, 313, 317, 319, 340, 344, 346, 348, 363, 373, 381, 386, 415, 417, 421, 422, 426, 435, 438, 439, 444, 445, 449, 450, 454, 462, 469, 487, 512, 522, 541, 590, 623, 656, 665, 667, 705, 758, 760, 761, 796, 798, 802, 806, 808, 828, 864, 895, 931, 937, 953, 958, 976, 1046, 1048, 1088, 1094, 1131, 1133, 1140, 1147, 1159], "much": [13, 27, 35, 38, 63, 80, 119, 123, 125, 130, 151, 152, 153, 154, 159, 162, 167, 176, 182, 184, 188, 189, 190, 192, 214, 225, 227, 228, 230, 232, 238, 252, 253, 256, 257, 259, 271, 274, 280, 281, 302, 303, 306, 316, 317, 343, 375, 386, 397, 433, 437, 447, 462, 487, 566, 576, 582, 601, 622, 642, 665, 666, 675, 676, 680, 693, 705, 706, 707, 711, 713, 715, 725, 729, 749, 750, 752, 760, 761, 764, 779, 786, 794, 796, 802, 804, 808, 847, 848, 897, 905, 908, 911, 913, 925, 967, 976, 979, 980, 982, 984, 994, 1001, 1004, 1005, 1018, 1019, 1024, 1025, 1028, 1037, 1054, 1106, 1112, 1113, 1139, 1141, 1159], "like": [13, 21, 27, 28, 30, 39, 43, 45, 55, 59, 62, 63, 65, 77, 78, 114, 115, 119, 120, 122, 125, 127, 130, 132, 145, 151, 152, 153, 154, 156, 157, 159, 162, 163, 167, 172, 175, 176, 180, 181, 182, 184, 188, 190, 193, 203, 204, 211, 213, 214, 221, 227, 228, 230, 231, 237, 240, 253, 255, 257, 259, 265, 268, 270, 271, 274, 277, 279, 303, 306, 326, 331, 343, 351, 372, 375, 379, 401, 403, 408, 413, 425, 429, 437, 440, 447, 453, 457, 459, 462, 465, 466, 467, 487, 511, 521, 522, 523, 524, 525, 537, 543, 551, 554, 560, 569, 572, 575, 579, 580, 581, 583, 604, 621, 630, 637, 639, 642, 645, 646, 655, 656, 664, 665, 668, 669, 675, 676, 693, 711, 713, 714, 724, 725, 728, 729, 735, 750, 752, 757, 759, 762, 764, 766, 769, 777, 779, 781, 786, 792, 798, 800, 802, 804, 808, 813, 821, 824, 828, 836, 839, 840, 844, 845, 847, 850, 868, 870, 873, 875, 880, 897, 905, 906, 908, 912, 913, 914, 915, 924, 925, 929, 933, 935, 938, 942, 948, 950, 951, 969, 976, 980, 982, 984, 985, 998, 1001, 1003, 1005, 1008, 1010, 1018, 1023, 1028, 1030, 1032, 1034, 1036, 1038, 1042, 1046, 1048, 1051, 1052, 1055, 1058, 1060, 1063, 1071, 1074, 1084, 1085, 1088, 1094, 1095, 1096, 1097, 1098, 1100, 1105, 1108, 1111, 1113, 1114, 1122, 1124, 1125, 1130, 1139, 1140, 1141, 1146, 1148, 1159, 1164], "topic": [13, 16, 27, 28, 29, 59, 62, 69, 78, 90, 97, 106, 114, 145, 149, 154, 158, 159, 172, 176, 189, 192, 193, 194, 196, 204, 209, 219, 222, 228, 238, 240, 241, 256, 257, 261, 279, 281, 285, 307, 326, 327, 328, 329, 331, 339, 340, 345, 346, 351, 353, 354, 357, 359, 543, 584, 586, 645, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 759, 808, 810, 820, 831, 838, 840, 842, 849, 854, 858, 860, 862, 863, 888, 898, 911, 913, 916, 917, 919, 935, 985, 994, 995, 999, 1007, 1012, 1029, 1030, 1034, 1061, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1109, 1113, 1119, 1133, 1136, 1139, 1143, 1161, 1162, 1169], "other": [13, 27, 29, 33, 39, 40, 51, 53, 59, 62, 63, 78, 80, 82, 110, 111, 112, 131, 134, 140, 152, 153, 154, 155, 156, 159, 163, 167, 176, 180, 184, 188, 189, 191, 192, 193, 204, 212, 221, 227, 228, 237, 240, 244, 265, 286, 293, 294, 303, 306, 310, 326, 343, 347, 351, 371, 377, 386, 395, 413, 416, 427, 443, 447, 450, 452, 458, 459, 462, 463, 464, 470, 551, 566, 568, 569, 575, 577, 578, 581, 582, 583, 593, 621, 643, 666, 675, 676, 707, 711, 723, 725, 727, 729, 740, 741, 746, 759, 761, 779, 798, 800, 834, 841, 844, 845, 861, 866, 868, 870, 890, 907, 912, 913, 914, 917, 921, 924, 933, 934, 940, 941, 953, 958, 961, 967, 976, 980, 982, 984, 994, 1001, 1003, 1005, 1014, 1017, 1018, 1019, 1022, 1025, 1028, 1032, 1034, 1035, 1036, 1037, 1043, 1044, 1048, 1050, 1052, 1054, 1055, 1068, 1084, 1111, 1115, 1118, 1120, 1122, 1139, 1151, 1159, 1161, 1162, 1164, 1174], "exampl": [13, 17, 24, 29, 39, 40, 65, 78, 87, 112, 114, 115, 132, 145, 146, 148, 151, 152, 153, 154, 159, 162, 163, 167, 171, 172, 173, 176, 180, 184, 188, 190, 192, 203, 211, 213, 217, 221, 224, 227, 228, 230, 236, 237, 238, 241, 242, 243, 245, 249, 252, 261, 268, 270, 271, 274, 278, 280, 281, 285, 286, 294, 296, 299, 302, 303, 306, 310, 316, 328, 331, 340, 348, 351, 364, 370, 371, 372, 380, 386, 438, 450, 461, 462, 463, 470, 474, 476, 486, 487, 489, 491, 511, 512, 524, 543, 579, 581, 583, 592, 601, 608, 646, 655, 673, 682, 687, 702, 703, 707, 708, 712, 715, 719, 725, 729, 759, 761, 767, 779, 786, 808, 835, 836, 840, 845, 865, 868, 878, 890, 897, 905, 912, 913, 914, 915, 924, 928, 935, 938, 939, 940, 941, 942, 950, 957, 976, 979, 981, 982, 983, 984, 985, 986, 992, 998, 999, 1000, 1001, 1004, 1005, 1006, 1010, 1017, 1024, 1027, 1029, 1030, 1031, 1033, 1041, 1046, 1055, 1061, 1063, 1079, 1084, 1102, 1103, 1104, 1112, 1113, 1119, 1121, 1127, 1128, 1133, 1138, 1146, 1148, 1161, 1162], "here": [13, 14, 63, 68, 73, 74, 77, 78, 80, 81, 85, 106, 112, 119, 138, 140, 149, 151, 152, 154, 155, 157, 158, 159, 162, 163, 167, 172, 174, 180, 181, 182, 184, 188, 190, 193, 203, 204, 208, 211, 212, 213, 214, 219, 222, 230, 231, 235, 238, 240, 244, 257, 259, 261, 265, 268, 270, 274, 277, 279, 286, 289, 304, 322, 326, 331, 337, 340, 343, 344, 346, 359, 362, 427, 429, 436, 443, 458, 459, 465, 467, 487, 492, 503, 506, 509, 511, 522, 524, 526, 541, 543, 551, 565, 568, 569, 572, 578, 584, 586, 590, 602, 630, 636, 656, 658, 659, 665, 676, 682, 687, 693, 703, 707, 712, 715, 717, 723, 725, 728, 737, 751, 762, 776, 781, 783, 786, 798, 804, 808, 834, 868, 905, 907, 912, 913, 914, 921, 925, 932, 938, 942, 948, 953, 966, 975, 979, 980, 991, 994, 998, 1000, 1003, 1004, 1005, 1006, 1018, 1021, 1025, 1030, 1033, 1034, 1041, 1047, 1057, 1058, 1064, 1085, 1088, 1105, 1111, 1112, 1113, 1114, 1119, 1139, 1141, 1144, 1148, 1162, 1164], "discuss": [13, 42, 50, 114, 184, 188, 189, 191, 193, 228, 238, 274, 278, 279, 302, 317, 340, 344, 347, 348, 351, 353, 354, 358, 460, 548, 551, 554, 557, 560, 563, 733, 739, 788, 821, 868, 975, 979, 1008, 1146, 1148, 1151, 1162], "over": [13, 33, 34, 35, 38, 42, 61, 65, 89, 97, 119, 120, 132, 145, 148, 149, 151, 152, 154, 156, 157, 162, 172, 176, 184, 188, 190, 191, 192, 203, 208, 211, 213, 214, 221, 226, 227, 228, 230, 233, 236, 264, 268, 271, 274, 280, 281, 297, 302, 306, 317, 325, 340, 343, 386, 397, 398, 413, 427, 447, 457, 465, 475, 489, 566, 572, 600, 618, 630, 658, 665, 713, 714, 732, 755, 808, 905, 909, 913, 915, 921, 942, 956, 964, 967, 982, 994, 996, 1001, 1004, 1041, 1054, 1058], "lwn": [13, 39, 169, 788, 800, 818, 1154], "attribut": [13, 149, 152, 154, 169, 188, 202, 208, 212, 221, 224, 227, 232, 234, 239, 240, 244, 247, 250, 254, 255, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 333, 335, 344, 351, 425, 441, 443, 455, 470, 737, 759, 840, 846, 867, 871, 938, 950, 951, 968, 969, 976, 980, 1004, 1005, 1018, 1020, 1031, 1057, 1111, 1175], "sharealik": 13, "cc": [13, 23, 32, 134, 170, 178, 179, 180, 257, 450, 472, 521, 523, 524, 544, 547, 550, 551, 553, 554, 556, 557, 559, 560, 562, 585, 723, 724, 729, 786, 974, 975, 978, 979, 984, 1145, 1146, 1148, 1150, 1151], "BY": [13, 23, 35, 693], "sa": [13, 23, 32, 966], "don": [13, 24, 58, 61, 78, 84, 114, 119, 127, 140, 145, 151, 152, 153, 154, 157, 158, 159, 167, 182, 184, 188, 192, 203, 204, 214, 221, 225, 227, 228, 230, 237, 240, 292, 304, 348, 372, 413, 425, 428, 429, 431, 437, 443, 447, 449, 466, 523, 551, 557, 566, 567, 582, 583, 590, 600, 636, 643, 673, 676, 678, 693, 707, 708, 720, 729, 734, 739, 776, 781, 800, 808, 813, 843, 868, 870, 875, 881, 892, 905, 908, 912, 913, 917, 925, 929, 930, 931, 932, 951, 952, 953, 958, 979, 980, 985, 1006, 1014, 1016, 1030, 1033, 1037, 1061, 1115, 1121, 1128, 1134, 1145, 1151], "t": [13, 24, 43, 50, 58, 61, 63, 65, 78, 84, 114, 119, 127, 131, 140, 145, 149, 151, 153, 154, 157, 158, 159, 162, 163, 167, 169, 171, 182, 184, 185, 188, 191, 192, 195, 200, 202, 203, 204, 208, 214, 217, 221, 224, 225, 227, 228, 230, 232, 234, 237, 238, 240, 244, 247, 250, 253, 259, 262, 265, 270, 271, 272, 274, 276, 282, 286, 292, 304, 307, 308, 314, 320, 326, 332, 334, 335, 337, 348, 360, 362, 363, 365, 371, 372, 382, 397, 403, 405, 408, 413, 423, 425, 427, 428, 429, 431, 437, 443, 447, 449, 452, 466, 519, 521, 523, 543, 551, 557, 566, 567, 569, 576, 582, 583, 590, 592, 593, 600, 604, 636, 643, 665, 666, 668, 673, 675, 676, 678, 682, 683, 684, 685, 693, 696, 707, 708, 713, 719, 720, 723, 724, 725, 727, 729, 732, 734, 737, 739, 767, 776, 781, 788, 800, 802, 808, 813, 825, 828, 834, 835, 836, 843, 845, 868, 869, 870, 874, 875, 881, 887, 890, 892, 905, 908, 912, 913, 914, 917, 921, 925, 929, 930, 931, 932, 939, 951, 952, 953, 958, 968, 975, 976, 979, 980, 982, 983, 985, 994, 997, 1000, 1006, 1007, 1014, 1016, 1018, 1026, 1030, 1033, 1036, 1037, 1038, 1044, 1050, 1054, 1056, 1057, 1058, 1061, 1063, 1110, 1115, 1119, 1121, 1128, 1134, 1145, 1146, 1151, 1161], "want": [13, 17, 27, 29, 30, 45, 50, 61, 63, 78, 84, 115, 120, 125, 127, 131, 134, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 172, 175, 180, 184, 188, 191, 192, 203, 204, 211, 214, 221, 228, 232, 234, 268, 270, 271, 274, 296, 326, 337, 351, 373, 385, 401, 429, 441, 443, 447, 451, 452, 467, 470, 491, 510, 519, 524, 543, 554, 567, 572, 575, 583, 608, 643, 659, 673, 678, 693, 714, 719, 725, 727, 728, 729, 747, 759, 764, 783, 808, 813, 843, 845, 847, 850, 865, 868, 869, 887, 905, 908, 912, 913, 914, 925, 929, 930, 931, 932, 937, 951, 966, 968, 969, 970, 979, 982, 984, 994, 996, 998, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1013, 1020, 1025, 1029, 1036, 1045, 1048, 1058, 1062, 1064, 1100, 1105, 1115, 1119, 1120, 1122, 1124, 1128, 1139, 1141, 1142, 1146, 1159, 1164], "anybodi": [13, 65, 152, 157, 184, 203, 204, 430, 940, 951, 1151], "monei": [13, 153, 156, 159, 227, 847, 1063], "my": [13, 17, 24, 28, 32, 39, 59, 62, 63, 65, 97, 112, 134, 140, 151, 152, 153, 155, 156, 158, 159, 162, 163, 167, 180, 184, 188, 191, 204, 211, 238, 252, 254, 268, 278, 337, 340, 345, 358, 437, 448, 470, 524, 560, 578, 589, 643, 725, 746, 759, 792, 804, 808, 810, 836, 843, 858, 860, 865, 871, 892, 905, 912, 914, 916, 917, 924, 925, 930, 931, 932, 941, 976, 1018, 1037, 1060, 1100, 1122, 1139, 1159], "without": [13, 151, 152, 153, 154, 162, 163, 188, 232, 296, 317, 373, 397, 404, 430, 433, 437, 442, 447, 458, 470, 475, 487, 554, 560, 566, 572, 636, 643, 665, 666, 667, 693, 705, 711, 713, 714, 719, 725, 731, 732, 739, 758, 760, 761, 779, 792, 808, 847, 848, 890, 914, 916, 925, 951, 970, 975, 976, 980, 1003, 1004, 1007, 1008, 1010, 1017, 1019, 1021, 1023, 1025, 1032, 1037, 1054, 1139, 1141, 1159, 1164], "modif": [13, 55, 106, 132, 167, 230, 373, 375, 381, 386, 417, 447, 470, 475, 522, 580, 740, 759, 781, 808, 853, 869, 890, 1017, 1037, 1054, 1115, 1151], "back": [13, 29, 32, 63, 66, 112, 153, 154, 157, 163, 188, 190, 192, 217, 225, 230, 241, 243, 261, 276, 296, 299, 423, 438, 489, 514, 543, 563, 583, 597, 602, 640, 673, 687, 722, 729, 741, 761, 776, 781, 790, 808, 810, 839, 871, 905, 912, 925, 966, 976, 982, 1001, 1008, 1021, 1025, 1037, 1065, 1099, 1100, 1101, 1104, 1130], "m": [13, 23, 32, 38, 61, 136, 138, 153, 154, 155, 157, 159, 162, 167, 180, 185, 190, 195, 204, 208, 217, 218, 219, 221, 225, 240, 244, 250, 252, 257, 269, 304, 314, 336, 340, 341, 342, 347, 361, 449, 472, 518, 521, 522, 523, 524, 560, 585, 693, 715, 724, 776, 777, 783, 786, 818, 845, 847, 868, 912, 925, 970, 1023, 1060, 1061, 1068, 1093, 1094, 1111, 1121, 1134, 1139, 1141, 1146], "lawyer": 13, "understand": [13, 114, 151, 152, 154, 158, 159, 162, 163, 167, 176, 184, 188, 213, 240, 271, 274, 277, 279, 280, 281, 296, 299, 302, 306, 342, 351, 379, 427, 436, 443, 475, 511, 652, 673, 682, 703, 714, 808, 847, 853, 905, 1025, 1063, 1106, 1111, 1112, 1129, 1159, 1160, 1161], "permit": [13, 154, 159, 204, 268, 337, 548, 569, 576, 912, 923, 967, 1031, 1131], "exactli": [13, 78, 152, 154, 176, 182, 211, 281, 331, 365, 405, 511, 522, 600, 676, 713, 808, 914, 939, 940, 980, 998, 1114, 1133], "gnu": [13, 163, 168, 204, 213, 337, 343, 359, 444, 445, 450, 452, 575, 724, 761, 788, 809, 868, 983, 984, 994, 996, 998, 1157, 1161], "free": [13, 32, 158, 163, 179, 204, 337, 420, 434, 472, 549, 569, 575, 577, 637, 656, 657, 659, 660, 676, 703, 722, 723, 724, 744, 772, 779, 810, 930, 931, 932, 944, 967, 980, 982, 1112, 1122, 1131, 1156], "document": [13, 24, 40, 42, 65, 78, 86, 114, 119, 149, 152, 154, 156, 163, 164, 170, 173, 180, 192, 204, 210, 211, 219, 221, 226, 227, 228, 230, 237, 240, 244, 257, 259, 261, 270, 277, 279, 282, 303, 305, 323, 326, 331, 340, 347, 348, 423, 424, 427, 434, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 475, 522, 541, 582, 586, 600, 601, 645, 656, 658, 668, 673, 680, 682, 687, 703, 704, 710, 712, 715, 717, 724, 725, 726, 728, 735, 736, 737, 739, 741, 755, 759, 779, 781, 804, 808, 809, 816, 820, 834, 840, 847, 854, 858, 860, 862, 892, 893, 894, 896, 897, 899, 900, 908, 912, 913, 914, 948, 955, 963, 996, 998, 999, 1003, 1005, 1006, 1010, 1014, 1016, 1018, 1024, 1041, 1051, 1052, 1102, 1114, 1117, 1124, 1125, 1128, 1130, 1137, 1140, 1147, 1148, 1167, 1168], "ago": [13, 154, 158, 214, 833], "wa": [13, 37, 53, 65, 78, 112, 120, 127, 132, 148, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 167, 169, 171, 172, 173, 175, 179, 180, 185, 187, 188, 191, 195, 201, 202, 208, 211, 214, 217, 218, 228, 230, 232, 234, 241, 244, 253, 265, 272, 278, 281, 286, 304, 316, 320, 340, 345, 358, 361, 408, 433, 453, 557, 565, 566, 575, 576, 621, 650, 657, 658, 659, 660, 661, 662, 669, 673, 676, 731, 759, 761, 783, 790, 798, 804, 843, 865, 895, 897, 905, 914, 941, 961, 980, 1005, 1037, 1111, 1125, 1128, 1134, 1139, 1141, 1144, 1154, 1156, 1157, 1158, 1159, 1171, 1177], "debian": [13, 78, 140, 141, 142, 159, 163, 167, 169, 181, 192, 204, 289, 337, 358, 537, 761, 808, 907, 984, 996, 1141, 1146], "resolut": [13, 242, 244, 430, 678, 740, 786, 818, 914], "us": [13, 14, 17, 21, 24, 39, 40, 45, 48, 54, 59, 61, 62, 63, 65, 68, 70, 71, 74, 77, 78, 81, 82, 84, 85, 86, 88, 89, 97, 106, 107, 114, 115, 116, 118, 119, 120, 121, 122, 125, 127, 130, 131, 132, 144, 145, 147, 148, 149, 151, 152, 154, 155, 158, 162, 164, 167, 169, 172, 176, 178, 179, 181, 184, 188, 190, 191, 203, 204, 209, 212, 219, 221, 222, 224, 225, 228, 229, 231, 235, 237, 238, 240, 244, 247, 249, 250, 252, 257, 259, 261, 265, 268, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 285, 286, 291, 294, 299, 302, 303, 306, 307, 308, 310, 314, 316, 317, 325, 326, 331, 337, 340, 343, 345, 346, 349, 358, 369, 372, 373, 376, 377, 378, 381, 383, 392, 393, 395, 397, 398, 402, 403, 404, 407, 408, 409, 411, 415, 416, 419, 422, 426, 430, 431, 435, 437, 438, 439, 443, 444, 445, 447, 449, 450, 452, 457, 458, 459, 460, 463, 465, 466, 468, 469, 472, 475, 476, 477, 479, 486, 489, 490, 491, 509, 511, 512, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 537, 541, 542, 543, 544, 547, 550, 553, 556, 559, 562, 567, 569, 570, 574, 575, 578, 580, 582, 583, 584, 586, 587, 595, 596, 597, 598, 599, 601, 602, 603, 604, 605, 606, 609, 612, 613, 614, 618, 621, 622, 623, 624, 625, 626, 630, 636, 639, 640, 642, 643, 646, 647, 649, 650, 652, 654, 655, 656, 657, 658, 659, 660, 662, 664, 665, 667, 668, 669, 670, 672, 674, 676, 680, 682, 687, 693, 695, 702, 703, 705, 707, 708, 710, 712, 715, 720, 724, 725, 726, 727, 729, 731, 735, 737, 740, 745, 746, 755, 758, 759, 760, 761, 766, 767, 769, 771, 774, 776, 777, 779, 781, 783, 786, 788, 792, 794, 796, 800, 802, 804, 808, 809, 811, 813, 821, 822, 824, 827, 828, 834, 835, 836, 839, 843, 844, 847, 848, 850, 852, 854, 860, 865, 868, 870, 873, 874, 875, 877, 887, 893, 895, 899, 904, 905, 908, 909, 911, 915, 916, 917, 924, 925, 928, 934, 935, 938, 939, 940, 942, 946, 948, 949, 951, 953, 954, 955, 957, 958, 961, 963, 964, 967, 968, 971, 974, 975, 976, 978, 979, 980, 982, 985, 992, 993, 996, 997, 998, 999, 1000, 1004, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1023, 1025, 1027, 1029, 1030, 1031, 1033, 1037, 1039, 1041, 1045, 1046, 1047, 1048, 1051, 1054, 1056, 1058, 1061, 1063, 1066, 1067, 1068, 1071, 1072, 1073, 1077, 1079, 1082, 1083, 1084, 1085, 1089, 1091, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1105, 1106, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1122, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1139, 1142, 1145, 1146, 1148, 1150, 1151, 1159, 1161, 1162, 1164], "gfdl": 13, "becaus": [13, 17, 38, 61, 66, 80, 112, 146, 151, 152, 154, 163, 167, 176, 184, 188, 190, 204, 214, 221, 227, 237, 240, 365, 386, 425, 434, 437, 440, 447, 449, 458, 467, 470, 487, 521, 524, 567, 568, 575, 578, 618, 640, 659, 715, 723, 726, 777, 788, 806, 808, 847, 887, 905, 912, 913, 914, 923, 934, 935, 938, 941, 955, 961, 976, 979, 980, 1003, 1006, 1032, 1062, 1119, 1134, 1141, 1146, 1159], "too": [13, 27, 53, 56, 63, 80, 127, 152, 154, 159, 168, 181, 184, 200, 211, 213, 230, 240, 244, 247, 256, 257, 259, 270, 272, 280, 281, 286, 302, 304, 316, 317, 382, 427, 437, 447, 461, 467, 566, 580, 687, 689, 693, 705, 706, 707, 713, 719, 725, 749, 759, 760, 761, 806, 808, 813, 840, 905, 914, 915, 921, 938, 951, 968, 984, 1003, 1004, 1005, 1008, 1054, 1058, 1135, 1159], "restrict": [13, 153, 182, 192, 425, 430, 459, 467, 474, 509, 590, 759, 806, 835, 836, 924, 1119], "articl": [13, 167, 169, 788, 800, 818, 912, 914, 994], "describ": [13, 65, 107, 114, 118, 149, 151, 152, 153, 154, 157, 159, 162, 163, 178, 204, 240, 244, 252, 278, 286, 289, 337, 470, 479, 525, 544, 547, 550, 553, 556, 559, 562, 715, 729, 808, 818, 841, 868, 914, 919, 971, 974, 978, 983, 991, 997, 998, 1027, 1111, 1145, 1148, 1150], "pretti": [13, 153, 154, 176, 190, 194, 213, 230, 240, 437, 452, 600, 657, 732, 1001, 1131], "same": [13, 17, 24, 28, 31, 39, 40, 43, 44, 65, 119, 132, 152, 153, 154, 156, 158, 159, 162, 163, 167, 172, 173, 174, 176, 184, 185, 190, 193, 204, 212, 216, 221, 227, 230, 237, 238, 240, 243, 244, 262, 271, 274, 280, 281, 286, 302, 303, 304, 314, 327, 328, 337, 344, 369, 373, 384, 385, 386, 403, 404, 408, 413, 416, 425, 427, 431, 433, 437, 438, 441, 442, 452, 470, 474, 477, 478, 489, 508, 509, 517, 521, 541, 543, 550, 552, 566, 569, 575, 578, 581, 600, 603, 609, 618, 621, 622, 623, 647, 658, 666, 671, 678, 680, 682, 685, 687, 711, 712, 715, 727, 728, 729, 735, 776, 777, 781, 786, 788, 790, 798, 800, 806, 808, 824, 840, 846, 852, 868, 869, 871, 895, 905, 912, 913, 914, 915, 924, 925, 931, 937, 951, 952, 953, 966, 970, 976, 980, 982, 998, 1004, 1005, 1008, 1013, 1014, 1017, 1019, 1023, 1025, 1041, 1043, 1046, 1051, 1053, 1054, 1055, 1088, 1096, 1098, 1112, 1114, 1115, 1118, 1119, 1122, 1124, 1127, 1128, 1129, 1139, 1141, 1146], "issu": [13, 152, 155, 162, 163, 214, 279, 280, 281, 302, 317, 360, 373, 431, 944, 970, 979, 996, 1014], "how": [13, 23, 24, 37, 42, 45, 50, 65, 70, 71, 75, 77, 78, 81, 82, 84, 85, 86, 87, 88, 91, 104, 112, 114, 119, 126, 127, 138, 140, 148, 149, 152, 155, 157, 158, 159, 163, 164, 167, 172, 174, 176, 180, 181, 187, 188, 189, 190, 191, 192, 193, 204, 209, 211, 212, 213, 219, 221, 222, 224, 225, 227, 228, 230, 233, 235, 238, 249, 252, 256, 257, 261, 268, 271, 274, 276, 277, 278, 279, 280, 281, 285, 291, 294, 296, 302, 303, 306, 307, 310, 326, 342, 343, 347, 358, 373, 379, 404, 411, 413, 414, 425, 427, 429, 431, 436, 440, 447, 449, 451, 458, 472, 478, 508, 511, 519, 522, 543, 560, 567, 575, 576, 579, 590, 600, 639, 643, 649, 659, 665, 687, 724, 727, 728, 729, 739, 743, 755, 756, 762, 769, 771, 772, 786, 798, 808, 813, 824, 835, 836, 841, 848, 868, 887, 895, 901, 905, 912, 913, 914, 922, 930, 931, 932, 935, 938, 941, 942, 948, 961, 964, 967, 968, 970, 975, 979, 980, 992, 994, 996, 998, 1011, 1012, 1029, 1030, 1033, 1047, 1050, 1064, 1102, 1103, 1106, 1111, 1112, 1125, 1127, 1128, 1131, 1139, 1142, 1148, 1151, 1161, 1162, 1164], "do": [13, 27, 32, 40, 43, 45, 50, 58, 59, 62, 63, 78, 83, 85, 89, 91, 97, 114, 115, 122, 127, 131, 132, 135, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 167, 168, 169, 171, 172, 173, 176, 180, 181, 184, 188, 189, 192, 202, 203, 204, 212, 214, 221, 224, 228, 230, 232, 234, 235, 238, 240, 243, 244, 250, 252, 254, 257, 259, 268, 271, 274, 303, 304, 326, 328, 335, 337, 340, 342, 376, 395, 397, 398, 400, 401, 402, 407, 408, 409, 415, 416, 419, 422, 425, 426, 433, 435, 439, 444, 445, 447, 449, 451, 467, 472, 475, 478, 486, 487, 508, 510, 522, 543, 551, 557, 560, 566, 568, 580, 584, 586, 587, 590, 627, 640, 643, 657, 658, 659, 667, 673, 678, 682, 704, 705, 711, 715, 717, 723, 724, 725, 727, 728, 729, 757, 758, 760, 761, 781, 785, 796, 800, 804, 806, 808, 833, 837, 838, 841, 845, 848, 852, 853, 862, 864, 869, 873, 875, 904, 905, 908, 912, 913, 914, 916, 917, 923, 925, 929, 930, 931, 932, 933, 934, 940, 951, 952, 954, 958, 964, 966, 967, 970, 972, 975, 980, 998, 999, 1001, 1003, 1005, 1006, 1007, 1010, 1019, 1029, 1030, 1031, 1034, 1037, 1041, 1047, 1048, 1061, 1063, 1082, 1106, 1112, 1113, 1120, 1121, 1128, 1131, 1139, 1146, 1148, 1164], "choos": [13, 27, 151, 152, 163, 176, 184, 560, 808, 905, 912, 914, 997, 1030, 1037, 1050, 1112, 1119, 1141], "altogeth": [13, 162, 211, 280, 281, 302, 676, 816, 1008], "have": [13, 27, 28, 30, 37, 43, 50, 65, 69, 80, 82, 84, 102, 110, 111, 114, 115, 119, 123, 127, 130, 132, 134, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 172, 173, 174, 176, 180, 181, 182, 184, 188, 191, 192, 203, 204, 209, 211, 212, 213, 214, 221, 224, 225, 227, 228, 235, 240, 244, 247, 257, 259, 261, 268, 270, 271, 274, 277, 278, 280, 281, 285, 286, 306, 307, 326, 331, 340, 343, 345, 372, 373, 377, 386, 405, 407, 427, 429, 432, 433, 437, 441, 443, 448, 450, 453, 457, 458, 462, 465, 466, 467, 471, 474, 475, 487, 508, 511, 521, 524, 533, 560, 566, 570, 574, 576, 578, 583, 584, 586, 587, 618, 624, 640, 647, 652, 658, 659, 660, 664, 665, 669, 677, 680, 682, 693, 702, 707, 711, 712, 714, 717, 720, 724, 725, 728, 729, 756, 772, 776, 777, 779, 781, 786, 788, 800, 808, 811, 816, 824, 833, 841, 845, 847, 850, 851, 853, 860, 875, 895, 905, 912, 913, 914, 915, 917, 921, 923, 925, 929, 930, 932, 937, 942, 944, 950, 958, 975, 979, 980, 983, 984, 992, 996, 997, 1000, 1001, 1003, 1006, 1014, 1018, 1019, 1023, 1033, 1036, 1037, 1041, 1048, 1055, 1066, 1070, 1080, 1085, 1101, 1106, 1111, 1113, 1114, 1115, 1119, 1122, 1124, 1128, 1131, 1134, 1139, 1141, 1146, 1148, 1161, 1162], "idea": [13, 14, 126, 151, 152, 212, 225, 234, 244, 277, 279, 280, 281, 296, 299, 306, 431, 655, 677, 715, 723, 743, 808, 905, 940, 950, 970, 994, 1005, 1029, 1037, 1164], "choosealicens": 13, "appear": [13, 112, 152, 153, 154, 155, 156, 157, 158, 159, 162, 172, 176, 180, 182, 184, 185, 204, 213, 240, 280, 281, 302, 362, 405, 408, 452, 453, 470, 541, 582, 725, 746, 804, 808, 816, 832, 912, 913, 914, 925, 983, 1005, 1077, 1078, 1088, 1097, 1123, 1128], "help": [13, 29, 151, 152, 154, 155, 163, 167, 185, 204, 208, 213, 221, 227, 232, 234, 237, 240, 244, 247, 250, 252, 265, 272, 277, 281, 286, 304, 308, 314, 320, 331, 335, 340, 358, 408, 429, 431, 433, 434, 443, 452, 569, 572, 578, 665, 678, 713, 723, 725, 779, 847, 907, 912, 997, 1029, 1032, 1058, 1061, 1131, 1139, 1146, 1161], "happen": [13, 27, 110, 111, 112, 115, 131, 151, 152, 154, 167, 184, 188, 192, 211, 230, 294, 310, 345, 413, 425, 429, 433, 447, 452, 572, 589, 661, 693, 707, 710, 732, 771, 804, 808, 825, 840, 841, 845, 914, 938, 940, 950, 955, 979, 1017, 1018, 1057, 1071, 1074, 1088, 1105, 1111, 1139, 1148, 1161], "clone": [13, 61, 77, 109, 114, 134, 144, 154, 155, 158, 179, 181, 184, 201, 213, 214, 230, 257, 259, 289, 296, 299, 340, 345, 508, 511, 585, 781, 808, 809, 912, 996, 997], "jfasch": [13, 40, 43, 61, 106, 112, 114, 132, 134, 148, 149, 155, 156, 157, 162, 163, 167, 171, 180, 181, 182, 185, 188, 201, 211, 221, 224, 227, 228, 230, 232, 237, 240, 247, 250, 252, 257, 259, 265, 268, 270, 271, 272, 277, 278, 279, 281, 282, 285, 286, 291, 295, 296, 299, 303, 307, 308, 311, 313, 314, 317, 319, 320, 339, 340, 345, 348, 450, 452, 453, 455, 456, 458, 459, 461, 463, 472, 508, 522, 523, 524, 525, 543, 585, 645, 723, 724, 725, 759, 781, 783, 808, 834, 835, 836, 839, 840, 843, 845, 850, 853, 864, 869, 870, 871, 887, 890, 892, 893, 897, 899, 901, 912, 915, 923, 924, 925, 930, 936, 938, 939, 940, 961, 966, 982, 983, 984, 985, 994, 996, 997, 998, 999, 1000, 1003, 1005, 1006, 1009, 1033, 1052, 1058, 1061, 1084, 1127, 1128, 1139, 1141], "home": [13, 32, 40, 42, 43, 50, 61, 65, 100, 112, 134, 148, 149, 153, 155, 156, 157, 159, 163, 167, 180, 181, 182, 185, 204, 211, 221, 224, 225, 227, 232, 237, 240, 247, 250, 252, 257, 259, 265, 268, 270, 272, 282, 286, 308, 314, 320, 348, 443, 450, 452, 453, 455, 456, 458, 459, 461, 463, 472, 522, 523, 524, 525, 585, 645, 678, 723, 724, 725, 759, 761, 783, 808, 834, 835, 836, 838, 843, 845, 847, 848, 850, 853, 858, 860, 862, 864, 865, 868, 869, 871, 872, 873, 874, 875, 879, 882, 885, 888, 890, 892, 893, 899, 904, 915, 916, 921, 923, 924, 961, 963, 979, 982, 983, 984, 994, 996, 997, 998, 999, 1000, 1003, 1006, 1009, 1058, 1084, 1093, 1127, 1128, 1139, 1141], "built": [13, 28, 114, 121, 151, 152, 154, 155, 158, 163, 180, 185, 187, 188, 196, 197, 209, 212, 221, 227, 232, 235, 237, 238, 240, 244, 252, 261, 265, 268, 270, 285, 294, 303, 307, 310, 314, 375, 379, 403, 424, 450, 458, 461, 462, 486, 508, 621, 678, 734, 739, 777, 781, 783, 808, 912, 914, 925, 983, 984, 985, 990, 998, 1003, 1006, 1010, 1026, 1041, 1057, 1106, 1112, 1113, 1130, 1139, 1141, 1142, 1157, 1161, 1169], "wonder": [13, 776, 794, 821, 1008], "gener": [13, 23, 24, 29, 39, 65, 68, 69, 78, 80, 81, 109, 110, 111, 145, 149, 152, 156, 159, 164, 171, 174, 184, 188, 189, 191, 192, 193, 194, 203, 211, 219, 220, 221, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 241, 242, 243, 244, 249, 250, 264, 266, 270, 279, 284, 286, 290, 291, 293, 305, 307, 312, 313, 315, 317, 318, 324, 343, 346, 363, 373, 375, 381, 386, 397, 407, 425, 431, 434, 436, 437, 440, 450, 451, 452, 456, 511, 513, 519, 522, 530, 565, 572, 576, 592, 600, 601, 604, 655, 673, 676, 703, 717, 723, 729, 737, 788, 790, 792, 811, 841, 852, 868, 905, 907, 912, 925, 950, 979, 980, 982, 985, 996, 997, 1003, 1004, 1005, 1007, 1025, 1031, 1033, 1034, 1035, 1041, 1045, 1062, 1063, 1064, 1065, 1078, 1104, 1106, 1113, 1115, 1116, 1118, 1119, 1128, 1134, 1139, 1162, 1163, 1170], "content": [13, 27, 39, 49, 50, 57, 63, 112, 184, 191, 192, 193, 204, 212, 230, 232, 240, 262, 268, 308, 332, 407, 410, 412, 525, 568, 618, 626, 714, 810, 813, 834, 835, 836, 850, 853, 855, 856, 890, 893, 901, 913, 917, 940, 982, 1037, 1056, 1062, 1075, 1105, 1125, 1141, 1174], "which": [13, 14, 17, 28, 57, 68, 78, 80, 83, 89, 110, 111, 115, 131, 137, 144, 145, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 163, 167, 172, 174, 180, 181, 182, 184, 188, 190, 192, 204, 211, 213, 221, 225, 227, 228, 240, 243, 244, 252, 253, 270, 271, 274, 276, 281, 286, 299, 303, 316, 358, 376, 381, 382, 388, 392, 413, 425, 437, 447, 448, 449, 450, 452, 455, 457, 458, 465, 467, 478, 508, 509, 510, 511, 514, 516, 517, 518, 519, 520, 522, 537, 548, 554, 567, 574, 576, 580, 582, 590, 637, 647, 651, 652, 658, 659, 661, 670, 676, 677, 715, 719, 720, 728, 729, 741, 749, 757, 759, 761, 777, 786, 808, 810, 828, 834, 841, 845, 847, 850, 851, 852, 853, 859, 861, 864, 868, 881, 892, 895, 904, 905, 908, 912, 913, 914, 925, 934, 935, 938, 940, 942, 943, 945, 950, 955, 962, 964, 966, 967, 975, 980, 983, 988, 996, 1000, 1003, 1005, 1007, 1017, 1018, 1022, 1030, 1034, 1037, 1046, 1077, 1096, 1098, 1101, 1103, 1119, 1121, 1122, 1124, 1127, 1141, 1146, 1159], "differ": [13, 35, 38, 59, 62, 69, 76, 81, 85, 88, 139, 151, 152, 157, 159, 163, 173, 180, 184, 188, 200, 224, 225, 268, 270, 276, 277, 279, 286, 304, 316, 326, 361, 373, 381, 386, 387, 403, 404, 407, 425, 431, 433, 437, 447, 449, 466, 467, 511, 522, 524, 543, 550, 551, 560, 569, 570, 574, 580, 582, 583, 592, 596, 601, 640, 643, 647, 669, 682, 685, 712, 727, 740, 745, 759, 781, 786, 800, 806, 808, 828, 833, 839, 843, 844, 846, 865, 890, 905, 908, 912, 914, 921, 932, 940, 942, 955, 964, 966, 967, 987, 992, 997, 999, 1000, 1005, 1018, 1025, 1033, 1046, 1050, 1055, 1056, 1057, 1115, 1124, 1141, 1142, 1162, 1164], "so": [13, 17, 23, 32, 37, 39, 49, 55, 66, 112, 115, 120, 139, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 196, 197, 202, 210, 212, 213, 214, 223, 224, 225, 254, 268, 276, 278, 282, 294, 306, 310, 326, 335, 340, 343, 358, 372, 376, 377, 385, 387, 403, 413, 414, 416, 425, 429, 431, 433, 434, 438, 448, 450, 453, 455, 460, 461, 465, 487, 489, 508, 524, 537, 576, 583, 587, 600, 623, 630, 639, 646, 655, 704, 714, 719, 722, 723, 725, 740, 767, 769, 772, 777, 781, 783, 786, 808, 821, 833, 847, 848, 850, 852, 858, 860, 862, 868, 872, 879, 905, 911, 912, 913, 914, 917, 919, 921, 929, 932, 935, 940, 942, 950, 968, 970, 979, 982, 983, 984, 985, 996, 998, 999, 1008, 1009, 1013, 1025, 1030, 1032, 1037, 1054, 1056, 1058, 1060, 1070, 1074, 1080, 1084, 1111, 1114, 1122, 1129, 1132, 1139, 1141, 1145, 1146, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1163, 1169, 1172, 1177], "ye": [13, 32, 50, 61, 154, 155, 158, 163, 204, 337, 623, 732, 835, 836, 853, 855, 856, 914, 925, 982, 1050, 1083], "realli": [13, 21, 43, 50, 53, 55, 56, 65, 132, 153, 154, 155, 157, 159, 173, 184, 188, 191, 466, 682, 719, 729, 741, 761, 800, 913, 914, 925, 948, 1106, 1113, 1119], "great": [13, 78, 157, 159, 214, 234, 244, 447, 566, 581, 737, 808, 913, 1159, 1164], "static": [13, 23, 65, 97, 103, 104, 110, 111, 114, 152, 154, 156, 158, 159, 169, 179, 213, 214, 221, 227, 230, 237, 240, 244, 268, 277, 279, 286, 340, 346, 409, 415, 419, 422, 424, 426, 433, 435, 437, 439, 444, 445, 450, 455, 456, 460, 462, 471, 485, 493, 505, 506, 507, 508, 509, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 551, 560, 565, 569, 572, 583, 588, 591, 594, 610, 614, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 667, 676, 705, 707, 709, 710, 714, 725, 728, 734, 739, 745, 746, 747, 749, 750, 751, 752, 758, 759, 760, 761, 767, 786, 804, 808, 810, 904, 950, 953, 955, 957, 966, 972, 979, 983, 984, 985, 987, 988, 989, 990, 992, 1117, 1151, 1154, 1156, 1157, 1158], "It": [13, 21, 39, 43, 45, 55, 59, 62, 78, 120, 127, 131, 140, 151, 152, 153, 154, 157, 158, 159, 162, 163, 172, 174, 176, 180, 181, 185, 190, 191, 204, 213, 214, 221, 227, 230, 237, 240, 244, 252, 257, 259, 268, 271, 274, 277, 303, 316, 353, 354, 370, 381, 385, 403, 408, 431, 433, 447, 465, 470, 475, 478, 487, 489, 511, 514, 515, 522, 523, 569, 649, 661, 678, 679, 715, 725, 761, 772, 808, 835, 836, 847, 850, 865, 904, 905, 913, 914, 935, 940, 942, 943, 945, 958, 962, 967, 983, 984, 994, 999, 1004, 1006, 1017, 1025, 1029, 1030, 1063, 1079, 1084, 1088, 1091, 1097, 1112, 1118, 1130, 1139, 1140, 1159, 1161, 1162, 1164], "let": [13, 17, 42, 59, 62, 63, 115, 119, 152, 153, 154, 157, 158, 159, 162, 167, 174, 175, 176, 181, 182, 214, 228, 232, 234, 240, 244, 271, 274, 276, 278, 281, 296, 299, 307, 429, 437, 447, 449, 451, 458, 461, 465, 467, 469, 474, 487, 493, 510, 521, 522, 524, 527, 543, 557, 567, 568, 580, 584, 586, 587, 637, 643, 649, 655, 665, 682, 710, 714, 719, 723, 777, 781, 800, 808, 816, 843, 852, 865, 870, 905, 912, 913, 925, 938, 940, 941, 955, 964, 966, 982, 984, 994, 997, 998, 1004, 1006, 1010, 1047, 1054, 1056, 1063, 1071, 1093, 1101, 1106, 1113, 1114, 1119, 1122, 1139, 1159], "me": [13, 23, 32, 37, 59, 62, 114, 146, 151, 152, 153, 154, 157, 158, 159, 162, 163, 167, 180, 181, 182, 184, 188, 211, 213, 214, 238, 289, 307, 340, 429, 431, 432, 447, 450, 554, 578, 643, 678, 719, 725, 781, 843, 870, 905, 913, 914, 925, 929, 982, 985, 994, 1010, 1013, 1054, 1106, 1110, 1140], "focu": [13, 155, 159, 162, 176, 184, 188, 271, 274, 436, 440, 472, 664, 693, 905, 913, 915, 1030, 1113, 1133, 1162], "myself": [13, 148, 149, 159, 180, 188, 203, 219, 781, 843, 865, 870, 887], "ey": [13, 32, 37, 237, 240, 250, 272, 314, 1041], "toward": [13, 184, 346, 429, 489, 618], "consist": [13, 27, 184, 199, 240, 306, 331, 348, 362, 365, 403, 405, 443, 514, 522, 567, 868, 942, 976, 1030, 1031, 1034, 1075, 1084, 1108, 1129], "won": [13, 131, 162, 163, 240, 270, 326, 360, 427, 452, 521, 523, 569, 719, 725, 776, 788, 913, 925, 932, 985, 1007, 1056], "break": [13, 36, 38, 145, 175, 184, 185, 190, 197, 203, 204, 212, 224, 227, 233, 234, 237, 240, 243, 244, 247, 250, 265, 272, 286, 314, 332, 397, 401, 402, 409, 415, 419, 422, 426, 429, 433, 435, 437, 439, 444, 445, 447, 608, 639, 649, 651, 658, 667, 693, 701, 705, 726, 739, 746, 758, 760, 761, 798, 930, 931, 940, 966, 972, 979, 1010, 1018, 1056, 1119], "move": [13, 54, 63, 99, 114, 127, 136, 140, 149, 153, 163, 181, 189, 192, 203, 214, 230, 255, 258, 267, 268, 279, 288, 289, 323, 325, 340, 343, 447, 448, 461, 505, 514, 543, 568, 569, 576, 577, 578, 579, 581, 627, 673, 693, 705, 715, 717, 721, 724, 726, 727, 730, 737, 738, 739, 757, 758, 760, 761, 777, 810, 832, 835, 836, 837, 838, 871, 872, 873, 874, 877, 878, 879, 880, 882, 888, 904, 905, 929, 930, 967, 1000, 1037, 1135, 1158, 1159, 1160, 1167, 1168], "around": [13, 24, 37, 59, 62, 98, 114, 119, 122, 152, 153, 154, 159, 163, 173, 184, 188, 212, 238, 249, 256, 257, 259, 279, 307, 316, 317, 386, 461, 475, 477, 486, 511, 567, 663, 666, 668, 718, 720, 760, 761, 808, 813, 940, 955, 976, 979, 1000, 1006, 1022, 1026, 1028, 1050, 1102, 1106, 1108, 1112, 1113, 1124, 1125, 1128], "last": [13, 59, 62, 112, 114, 148, 152, 153, 154, 169, 174, 184, 185, 191, 203, 204, 211, 219, 221, 224, 227, 228, 237, 240, 250, 265, 270, 272, 286, 308, 331, 337, 344, 346, 413, 431, 595, 597, 598, 599, 600, 604, 607, 696, 699, 700, 701, 759, 761, 808, 868, 871, 874, 890, 899, 901, 904, 932, 937, 945, 954, 959, 961, 966, 981, 992, 1003, 1004, 1005, 1006, 1010, 1014, 1018, 1019, 1025, 1026, 1031, 1039, 1047, 1048, 1052, 1054, 1057, 1058, 1068, 1095, 1101, 1103, 1114, 1119, 1127, 1128, 1140, 1147, 1177], "least": [13, 24, 37, 59, 62, 65, 81, 154, 162, 176, 180, 182, 184, 191, 192, 211, 213, 214, 228, 230, 240, 244, 270, 274, 276, 286, 288, 361, 379, 385, 386, 399, 425, 428, 429, 437, 453, 465, 537, 622, 665, 715, 717, 724, 729, 732, 741, 771, 804, 806, 840, 905, 907, 915, 953, 976, 980, 1001, 1010, 1014, 1030, 1031, 1041, 1064, 1112, 1147], "ha": [13, 21, 24, 27, 28, 43, 45, 53, 56, 63, 78, 110, 111, 112, 115, 122, 125, 127, 131, 139, 149, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 167, 172, 174, 176, 180, 181, 184, 188, 190, 191, 192, 202, 204, 208, 209, 211, 212, 214, 221, 224, 227, 230, 232, 234, 235, 237, 240, 244, 247, 250, 253, 261, 262, 265, 268, 269, 270, 271, 272, 274, 276, 277, 279, 282, 285, 286, 292, 294, 303, 304, 307, 308, 310, 314, 317, 320, 323, 326, 333, 335, 337, 346, 360, 369, 372, 382, 385, 386, 395, 398, 406, 407, 414, 420, 421, 424, 428, 430, 431, 437, 443, 447, 449, 452, 458, 460, 461, 462, 463, 465, 466, 467, 470, 475, 476, 479, 487, 492, 506, 508, 518, 541, 551, 566, 568, 569, 570, 571, 574, 575, 576, 579, 580, 583, 590, 600, 621, 622, 639, 640, 643, 652, 653, 658, 659, 661, 670, 672, 675, 678, 687, 688, 689, 693, 702, 703, 704, 707, 715, 723, 725, 728, 729, 731, 737, 741, 759, 761, 762, 772, 777, 802, 804, 806, 808, 818, 821, 822, 824, 828, 835, 839, 840, 841, 843, 845, 846, 847, 853, 864, 866, 871, 897, 905, 911, 912, 913, 914, 923, 925, 928, 934, 940, 950, 952, 953, 955, 963, 964, 966, 967, 968, 969, 976, 980, 982, 996, 998, 999, 1001, 1003, 1004, 1005, 1008, 1010, 1013, 1018, 1019, 1020, 1028, 1030, 1033, 1036, 1037, 1041, 1046, 1047, 1051, 1068, 1088, 1103, 1105, 1106, 1112, 1113, 1114, 1115, 1119, 1127, 1128, 1130, 1132, 1139, 1141, 1146, 1148, 1159, 1161, 1162, 1164, 1167, 1168], "extens": [13, 14, 23, 28, 32, 37, 40, 147, 162, 184, 211, 213, 221, 227, 237, 240, 320, 326, 407, 447, 475, 566, 704, 759, 762, 833, 845, 982, 1013, 1030, 1033, 1134, 1139], "interfac": [13, 53, 56, 72, 73, 74, 78, 80, 82, 85, 106, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 131, 132, 148, 149, 152, 169, 171, 172, 179, 188, 214, 228, 230, 242, 260, 261, 268, 277, 295, 307, 311, 329, 330, 340, 341, 342, 346, 349, 358, 359, 447, 453, 454, 459, 464, 465, 466, 467, 470, 471, 477, 485, 489, 491, 492, 513, 517, 519, 543, 565, 590, 638, 640, 662, 704, 711, 712, 728, 729, 745, 746, 760, 761, 904, 905, 910, 912, 914, 948, 982, 1004, 1118, 1158, 1163, 1164, 1170, 1173, 1176], "lot": [13, 65, 69, 92, 97, 149, 151, 152, 154, 159, 163, 181, 184, 188, 204, 281, 324, 343, 379, 428, 433, 437, 443, 457, 560, 637, 761, 792, 802, 808, 837, 838, 847, 868, 904, 913, 930, 982, 997, 1025, 1030, 1052, 1108, 1160], "littl": [13, 27, 44, 154, 156, 159, 162, 163, 172, 184, 212, 221, 227, 228, 230, 237, 240, 262, 268, 279, 358, 408, 436, 437, 448, 577, 580, 583, 639, 645, 725, 728, 764, 905, 907, 913, 961, 983, 1053, 1122], "maintain": [13, 28, 30, 54, 70, 80, 149, 151, 152, 159, 181, 190, 211, 213, 221, 225, 227, 237, 240, 249, 340, 354, 433, 447, 615, 665, 676, 786, 808, 816, 818, 820, 951, 982, 983, 984, 986, 992, 997, 998, 999, 1000, 1048, 1111, 1161], "packag": [13, 21, 23, 29, 32, 61, 97, 104, 114, 135, 141, 142, 148, 153, 167, 182, 184, 185, 188, 189, 191, 198, 203, 209, 211, 212, 213, 219, 221, 225, 227, 228, 231, 235, 237, 238, 240, 241, 243, 246, 249, 252, 270, 280, 281, 285, 289, 294, 299, 303, 306, 307, 310, 313, 320, 340, 341, 342, 343, 347, 358, 359, 450, 452, 455, 456, 761, 781, 904, 912, 913, 984, 989, 992, 1007, 1030, 1037, 1059, 1060, 1062, 1063, 1064, 1065, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1112, 1116, 1120, 1121, 1122, 1127, 1128, 1138, 1139, 1140, 1142, 1143, 1148, 1161], "virtual": [13, 29, 69, 80, 106, 107, 123, 127, 132, 148, 154, 157, 159, 179, 184, 188, 199, 203, 219, 235, 238, 241, 252, 257, 259, 261, 268, 277, 278, 279, 280, 281, 285, 296, 299, 302, 303, 306, 307, 313, 317, 347, 358, 359, 462, 466, 468, 471, 472, 477, 479, 485, 489, 494, 496, 497, 498, 501, 502, 503, 504, 505, 506, 513, 523, 563, 565, 590, 637, 638, 639, 662, 704, 712, 723, 725, 729, 760, 761, 767, 839, 844, 847, 906, 912, 914, 923, 932, 948, 966, 976, 1030, 1033, 1059, 1060, 1061, 1104, 1106, 1107, 1108, 1112, 1120, 1122, 1133, 1136, 1139, 1158, 1165, 1174], "environ": [13, 21, 29, 65, 75, 78, 97, 104, 114, 140, 148, 152, 163, 167, 188, 194, 203, 204, 209, 219, 222, 225, 235, 238, 241, 252, 258, 261, 267, 280, 281, 285, 288, 289, 296, 299, 302, 303, 306, 307, 313, 341, 342, 353, 354, 472, 492, 506, 521, 522, 523, 524, 585, 723, 724, 761, 838, 842, 846, 847, 868, 869, 888, 904, 905, 945, 962, 967, 983, 992, 993, 994, 999, 1001, 1013, 1033, 1035, 1059, 1060, 1061, 1104, 1106, 1107, 1108, 1112, 1113, 1120, 1122, 1133, 1134, 1136, 1139, 1140, 1146, 1150, 1152], "repo": [13, 112, 134, 163, 167, 179, 182, 193, 326, 331, 340, 344, 345, 533, 534, 535, 536, 538, 539, 540, 781, 808, 810, 996, 1148], "creat": [13, 17, 21, 24, 39, 42, 44, 54, 59, 61, 62, 63, 77, 99, 101, 102, 109, 114, 118, 119, 135, 138, 145, 148, 152, 153, 154, 156, 159, 162, 163, 167, 169, 171, 172, 173, 188, 189, 190, 191, 192, 193, 204, 209, 217, 222, 227, 228, 230, 235, 237, 240, 244, 249, 252, 257, 258, 259, 267, 268, 276, 279, 280, 281, 285, 286, 288, 289, 291, 296, 299, 303, 306, 307, 340, 345, 364, 441, 443, 449, 450, 463, 465, 467, 470, 471, 472, 485, 486, 487, 491, 493, 494, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 565, 567, 570, 581, 621, 623, 639, 654, 657, 659, 668, 670, 693, 707, 710, 719, 725, 726, 738, 739, 746, 756, 757, 759, 760, 761, 764, 767, 771, 772, 777, 779, 781, 783, 786, 792, 804, 808, 837, 838, 839, 840, 841, 842, 848, 850, 851, 855, 856, 857, 859, 861, 863, 866, 872, 873, 875, 877, 878, 879, 880, 882, 888, 904, 912, 913, 914, 916, 917, 918, 920, 921, 923, 925, 927, 933, 934, 935, 942, 943, 944, 945, 950, 951, 952, 958, 959, 962, 965, 966, 967, 974, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 997, 998, 1003, 1004, 1006, 1008, 1010, 1014, 1018, 1019, 1020, 1022, 1036, 1037, 1046, 1047, 1048, 1057, 1060, 1061, 1062, 1074, 1082, 1083, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1106, 1108, 1109, 1110, 1112, 1115, 1118, 1122, 1131, 1139, 1141, 1142, 1161], "popul": [13, 154, 158, 244, 277, 764], "yourself": [13, 152, 159, 163, 174, 230, 392, 568, 585, 590, 813, 870, 953, 976, 1029, 1164], "root": [13, 38, 63, 80, 114, 134, 151, 157, 159, 162, 163, 174, 179, 180, 181, 188, 192, 202, 224, 230, 240, 244, 247, 250, 265, 268, 272, 282, 286, 308, 314, 325, 326, 331, 360, 427, 436, 440, 443, 452, 460, 466, 524, 586, 642, 759, 772, 808, 809, 810, 839, 843, 845, 864, 868, 880, 881, 887, 890, 892, 893, 894, 896, 897, 899, 905, 912, 913, 914, 916, 917, 921, 930, 935, 940, 948, 968, 982, 985, 994, 996, 1005, 1084, 1093, 1094, 1131, 1139], "activ": [13, 157, 167, 169, 192, 252, 665, 788, 790, 794, 802, 843, 845, 900, 1060, 1139, 1141], "txt": [13, 33, 42, 44, 112, 114, 119, 132, 147, 154, 170, 171, 175, 178, 179, 180, 181, 182, 211, 213, 218, 221, 230, 231, 240, 252, 262, 296, 299, 331, 332, 372, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 508, 521, 522, 523, 524, 525, 544, 547, 550, 551, 553, 556, 559, 562, 656, 759, 779, 834, 835, 836, 848, 852, 862, 872, 873, 874, 875, 879, 880, 887, 908, 912, 913, 914, 948, 971, 974, 978, 983, 984, 994, 1005, 1052, 1075, 1093, 1141, 1142, 1145, 1148, 1150], "fedorish": [13, 781, 925, 1122], "your": [13, 43, 65, 102, 109, 114, 131, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 167, 168, 181, 184, 187, 188, 192, 204, 212, 213, 230, 238, 244, 257, 259, 261, 268, 271, 274, 316, 326, 337, 346, 348, 392, 427, 435, 437, 439, 444, 445, 447, 456, 466, 470, 491, 508, 511, 522, 524, 525, 582, 656, 657, 659, 660, 667, 673, 681, 705, 758, 760, 761, 783, 800, 808, 813, 834, 835, 836, 838, 845, 847, 848, 857, 858, 859, 860, 861, 862, 863, 869, 872, 873, 874, 875, 877, 886, 904, 905, 912, 914, 916, 917, 921, 925, 940, 942, 994, 997, 1008, 1019, 1025, 1030, 1034, 1075, 1089, 1093, 1094, 1106, 1111, 1122, 1132, 1134, 1139, 1140, 1141, 1148, 1164], "mileag": [13, 257, 259, 1122, 1139], "might": [13, 27, 59, 61, 62, 112, 120, 125, 131, 151, 152, 153, 155, 157, 159, 162, 163, 167, 180, 182, 184, 192, 213, 221, 227, 232, 237, 240, 271, 274, 277, 303, 326, 351, 423, 437, 447, 452, 461, 462, 467, 470, 491, 524, 574, 583, 702, 712, 725, 726, 727, 759, 783, 794, 798, 804, 808, 850, 905, 912, 913, 914, 925, 930, 939, 961, 968, 979, 994, 997, 1005, 1014, 1017, 1030, 1108, 1122, 1139, 1142, 1146], "vari": [13, 221, 227, 237, 240, 244, 257, 259, 280, 281, 302, 306, 363, 437, 621, 740, 808, 914, 999, 1118, 1122, 1139, 1159], "dnf": [13, 61, 122, 148, 155, 163, 167, 181, 360, 453, 460, 537, 781, 809, 907, 925, 984, 996, 1122, 1146, 1148], "pandoc": 13, "graphviz": [13, 456, 984], "dia": [13, 224, 282, 890, 1063], "gtest": [13, 44, 65, 114, 179, 180, 181, 182, 360, 465, 466, 467, 469, 470, 472, 474, 487, 489, 490, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 560, 567, 568, 569, 580, 581, 583, 584, 585, 586, 587, 645, 670, 672, 675, 676, 677, 708, 714, 719, 723, 724, 725, 726, 728, 741, 755, 756, 757, 759, 761, 1144], "devel": [13, 122, 148, 163, 181, 453, 455, 460, 781, 1146, 1148], "markdown": [13, 23, 335, 1061], "handl": [13, 21, 29, 46, 74, 119, 146, 152, 172, 184, 188, 189, 191, 193, 199, 212, 214, 219, 221, 225, 228, 229, 237, 242, 249, 261, 268, 278, 285, 286, 296, 299, 307, 312, 318, 324, 340, 345, 347, 353, 354, 361, 401, 408, 413, 429, 433, 453, 513, 543, 565, 580, 590, 623, 627, 649, 658, 659, 660, 693, 695, 722, 725, 737, 738, 760, 761, 767, 771, 790, 802, 838, 841, 842, 904, 912, 927, 929, 930, 931, 932, 933, 934, 935, 937, 940, 942, 943, 945, 953, 959, 962, 965, 967, 970, 976, 979, 1007, 1025, 1030, 1031, 1046, 1056, 1104, 1106, 1158, 1164, 1173], "jupyt": [13, 167, 172, 173, 175, 184, 185, 187, 195, 235, 237, 238, 240, 241, 270, 271, 274, 275, 281, 285, 291, 296, 299, 303, 307, 313, 320, 340, 345, 890, 1030, 1108, 1109, 1113, 1169], "notebook": [13, 32, 167, 171, 172, 173, 175, 184, 187, 195, 228, 235, 238, 240, 241, 243, 246, 249, 252, 261, 264, 270, 271, 274, 275, 281, 285, 291, 296, 299, 303, 307, 313, 314, 319, 325, 345, 1030, 1108, 1113, 1169], "those": [13, 24, 78, 112, 123, 145, 152, 153, 159, 162, 167, 182, 184, 188, 193, 211, 213, 214, 221, 225, 230, 231, 232, 234, 240, 244, 276, 277, 278, 279, 281, 296, 325, 337, 340, 346, 351, 372, 427, 437, 447, 449, 451, 452, 453, 466, 467, 470, 471, 537, 580, 602, 643, 646, 653, 668, 703, 719, 727, 729, 759, 774, 777, 808, 835, 836, 852, 853, 905, 912, 913, 914, 979, 998, 999, 1000, 1001, 1005, 1006, 1007, 1013, 1018, 1029, 1070, 1080, 1101, 1111, 1119, 1120, 1125, 1127, 1139, 1161, 1162, 1164], "funki": [13, 17, 154], "graph": [13, 29, 78, 87, 132, 222, 235, 249, 252, 285, 291, 340, 347, 442, 456, 462, 984, 998, 999, 1106, 1112], "histor": [13, 24, 78, 154, 176, 373, 386, 431, 664, 767, 846, 925, 980, 1097, 1151], "baggag": [13, 373, 386, 664, 980, 1097], "convert": [13, 17, 29, 42, 145, 173, 203, 211, 217, 221, 224, 227, 230, 234, 237, 240, 241, 244, 261, 286, 296, 299, 314, 325, 386, 408, 433, 443, 451, 456, 466, 521, 636, 643, 677, 678, 761, 762, 942, 982, 1021, 1063, 1065, 1070, 1077, 1080, 1099, 1100, 1101, 1104, 1119], "draw": [13, 149, 192, 303, 348, 383, 519, 717, 765, 769, 777, 798, 821], "svg": [13, 149], "ani": [13, 39, 45, 49, 132, 136, 145, 148, 151, 152, 153, 154, 157, 159, 163, 167, 172, 176, 187, 190, 192, 204, 211, 213, 221, 227, 237, 240, 244, 255, 256, 257, 265, 281, 286, 303, 316, 326, 347, 348, 381, 425, 433, 447, 470, 475, 517, 518, 519, 520, 524, 525, 537, 554, 572, 575, 601, 639, 647, 652, 665, 668, 670, 687, 693, 711, 712, 715, 724, 725, 726, 728, 729, 737, 759, 766, 767, 779, 781, 800, 808, 818, 825, 835, 836, 845, 848, 855, 856, 859, 860, 861, 868, 880, 890, 905, 912, 913, 914, 917, 940, 951, 955, 975, 1001, 1003, 1004, 1005, 1006, 1010, 1017, 1018, 1025, 1028, 1037, 1042, 1044, 1055, 1056, 1061, 1085, 1087, 1102, 1113, 1129, 1133, 1134, 1146, 1159, 1164], "That": [13, 84, 98, 99, 112, 114, 115, 119, 123, 151, 152, 153, 154, 157, 162, 163, 167, 176, 184, 188, 191, 230, 254, 258, 260, 274, 277, 279, 351, 415, 416, 419, 422, 426, 435, 439, 444, 445, 453, 466, 467, 477, 489, 491, 493, 509, 511, 524, 571, 575, 657, 667, 705, 731, 737, 738, 758, 760, 761, 835, 836, 838, 839, 841, 842, 844, 845, 854, 857, 858, 859, 860, 861, 862, 863, 868, 904, 905, 913, 916, 917, 918, 919, 920, 923, 941, 945, 959, 965, 967, 992, 993, 1004, 1030, 1037, 1096, 1098, 1103, 1132, 1139, 1149, 1159], "sloppili": [13, 938], "track": [13, 112, 155, 159, 167, 191, 211, 221, 227, 237, 240, 724, 781, 808, 809, 813, 845, 1017], "opentrain": [13, 22, 28, 136, 149, 189, 196, 214, 348, 359, 1139, 1169], "recip": [13, 39, 144, 148, 152, 153, 341, 342, 427, 592], "sphinx": [14, 17, 23, 39, 65, 148, 149, 164, 346, 762, 1139], "togeth": [14, 24, 43, 50, 104, 106, 110, 111, 119, 123, 142, 159, 162, 163, 167, 172, 182, 184, 188, 192, 204, 213, 230, 257, 259, 276, 277, 279, 294, 303, 306, 310, 348, 358, 404, 437, 438, 514, 524, 543, 565, 583, 584, 586, 587, 737, 739, 772, 785, 808, 835, 836, 894, 895, 913, 914, 944, 958, 982, 988, 992, 994, 997, 1001, 1079, 1112, 1132, 1134, 1142, 1144, 1146, 1159, 1161], "form": [14, 29, 154, 159, 172, 176, 200, 221, 227, 228, 237, 240, 277, 279, 359, 424, 440, 479, 487, 489, 528, 529, 541, 639, 762, 808, 813, 816, 840, 890, 914, 1041, 1060, 1063, 1096, 1098, 1101, 1102, 1108, 1114, 1134, 1139, 1159], "short": [14, 32, 35, 43, 106, 132, 152, 159, 167, 180, 184, 188, 191, 192, 193, 203, 204, 221, 225, 226, 227, 232, 235, 237, 238, 242, 260, 276, 277, 278, 279, 280, 281, 363, 379, 381, 386, 390, 391, 416, 425, 471, 485, 513, 525, 565, 570, 574, 761, 804, 810, 813, 847, 868, 893, 912, 914, 925, 932, 942, 964, 969, 1002, 1016, 1039, 1042, 1058, 1130, 1139, 1141, 1159], "video": [14, 22, 146, 155, 157, 159, 170, 184, 187, 188, 191, 196, 209, 212, 213, 235, 279, 282, 285, 448, 715, 905, 913, 1106, 1113, 1122], "explain": [14, 63, 65, 97, 119, 146, 151, 157, 163, 176, 184, 188, 190, 214, 225, 230, 232, 234, 235, 243, 244, 281, 325, 355, 358, 427, 437, 557, 848, 868, 871, 905, 914, 970, 1053, 1106, 1139, 1164], "case": [14, 24, 43, 97, 104, 106, 109, 112, 117, 120, 151, 152, 153, 156, 159, 162, 163, 167, 173, 176, 188, 190, 192, 194, 214, 227, 228, 234, 240, 244, 247, 256, 257, 259, 260, 268, 271, 274, 286, 303, 306, 316, 348, 370, 377, 396, 398, 429, 431, 449, 452, 455, 464, 471, 475, 478, 513, 521, 522, 524, 530, 532, 551, 565, 572, 582, 621, 627, 647, 659, 665, 682, 693, 705, 712, 715, 723, 737, 747, 749, 759, 760, 761, 781, 808, 821, 824, 836, 840, 843, 850, 864, 880, 897, 904, 905, 914, 924, 925, 931, 942, 961, 966, 980, 987, 989, 992, 994, 996, 998, 1005, 1006, 1036, 1037, 1048, 1052, 1075, 1114, 1130, 1139, 1147, 1162], "netide": 14, "f\u00f6rderantrag": 14, "miscellan": [14, 29, 90, 135, 196, 209, 212, 219, 222, 223, 225, 231, 233, 235, 236, 241, 242, 243, 246, 249, 251, 259, 264, 266, 270, 271, 274, 284, 285, 287, 290, 293, 307, 312, 315, 317, 318, 324, 326, 327, 328, 329, 330, 331, 340, 348, 359, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761, 762, 904, 934, 935, 940, 943, 945, 959, 962, 1007, 1029, 1059, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1112, 1113, 1119, 1122, 1126, 1133, 1136, 1143, 1158, 1159, 1160, 1169], "s5": [16, 23, 148, 976, 980, 1173], "slide": [16, 23, 24, 27, 37, 148, 149, 152, 170, 177, 179, 184, 188, 192, 193, 194, 203, 204, 213, 214, 230, 256, 257, 268, 351, 354, 359, 560, 820, 977, 981, 1078, 1119, 1155, 1156, 1157, 1165, 1166, 1172, 1173, 1175, 1176, 1177], "work": [16, 24, 27, 40, 42, 43, 44, 57, 61, 71, 78, 80, 98, 99, 104, 106, 109, 115, 117, 131, 132, 134, 137, 138, 148, 149, 151, 152, 153, 155, 157, 158, 159, 162, 163, 167, 176, 180, 181, 182, 191, 192, 194, 204, 209, 211, 213, 221, 222, 225, 227, 228, 230, 235, 237, 240, 244, 249, 258, 261, 267, 268, 270, 271, 274, 281, 282, 285, 286, 288, 289, 291, 319, 320, 326, 340, 345, 346, 348, 353, 354, 359, 360, 404, 405, 425, 427, 437, 447, 449, 450, 452, 453, 455, 456, 458, 459, 461, 463, 466, 467, 470, 471, 472, 485, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 560, 565, 585, 614, 621, 654, 656, 658, 666, 668, 670, 713, 719, 723, 724, 725, 729, 731, 738, 757, 760, 761, 762, 771, 776, 786, 788, 792, 806, 808, 813, 816, 830, 834, 835, 836, 837, 838, 841, 842, 843, 845, 847, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 890, 892, 901, 904, 905, 913, 917, 921, 925, 927, 932, 933, 935, 938, 941, 943, 945, 950, 959, 962, 964, 965, 967, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 999, 1005, 1006, 1009, 1028, 1031, 1032, 1033, 1052, 1058, 1060, 1061, 1083, 1093, 1094, 1106, 1113, 1122, 1124, 1125, 1127, 1128, 1130, 1139, 1148, 1159, 1164, 1165, 1171], "progress": [16, 148, 359, 762, 870, 1148], "web": [16, 23, 72, 74, 78, 135, 149, 159, 188, 191, 212, 215, 261, 285, 307, 761, 1106, 1113, 1119, 1122], "note": [16, 32, 36, 40, 44, 60, 63, 112, 114, 127, 131, 135, 137, 151, 152, 154, 159, 172, 173, 184, 203, 211, 213, 224, 225, 227, 252, 281, 286, 303, 306, 307, 331, 332, 449, 453, 455, 459, 489, 537, 560, 569, 570, 576, 581, 640, 682, 702, 703, 704, 715, 717, 723, 724, 725, 727, 767, 808, 825, 835, 836, 895, 913, 931, 942, 994, 1047, 1050, 1052, 1056, 1111, 1122, 1124, 1127, 1146], "screencast": [16, 23, 135, 1106], "written": [16, 42, 43, 78, 106, 115, 122, 151, 152, 157, 167, 190, 240, 342, 404, 407, 423, 431, 433, 437, 450, 487, 577, 643, 656, 676, 762, 847, 934, 941, 976, 983, 984, 992, 1024, 1031, 1061, 1161], "draft": [16, 29, 184, 760, 761, 904, 1058, 1104, 1105, 1120], "convers": [17, 191, 203, 210, 213, 214, 221, 226, 227, 230, 233, 236, 237, 242, 245, 248, 266, 277, 279, 283, 287, 293, 305, 309, 313, 315, 321, 340, 364, 379, 393, 402, 409, 415, 419, 422, 426, 433, 435, 439, 444, 445, 449, 486, 548, 636, 640, 664, 666, 667, 669, 705, 758, 760, 761, 811, 1056, 1073, 1077, 1080, 1091], "old": [17, 29, 120, 149, 152, 154, 157, 182, 192, 224, 225, 240, 272, 282, 286, 311, 359, 382, 421, 442, 447, 470, 543, 596, 603, 608, 623, 655, 661, 664, 669, 670, 711, 729, 740, 765, 771, 781, 800, 905, 913, 969, 1045, 1051, 1063, 1084, 1130, 1160], "latex": [17, 23, 24, 543], "beamer": [17, 23, 24], "To": [17, 29, 45, 46, 47, 51, 55, 56, 61, 78, 102, 112, 120, 135, 151, 152, 154, 156, 167, 176, 180, 184, 199, 211, 221, 227, 237, 240, 241, 244, 248, 256, 257, 259, 261, 281, 296, 299, 303, 373, 376, 431, 443, 467, 512, 525, 621, 635, 646, 662, 664, 705, 721, 756, 760, 761, 781, 785, 796, 808, 837, 843, 904, 905, 912, 913, 918, 920, 933, 942, 998, 1007, 1021, 1065, 1071, 1094, 1099, 1100, 1101, 1104, 1112, 1119], "put": [17, 58, 69, 80, 123, 127, 145, 151, 152, 153, 180, 188, 303, 306, 449, 453, 457, 458, 521, 565, 651, 675, 711, 737, 777, 785, 798, 800, 825, 905, 913, 942, 967, 982, 997, 1000, 1005, 1063, 1144], "more": [17, 21, 27, 29, 43, 45, 59, 62, 65, 69, 78, 82, 90, 97, 101, 106, 114, 115, 118, 119, 122, 132, 145, 149, 152, 153, 156, 157, 159, 162, 163, 165, 167, 173, 174, 176, 181, 184, 188, 189, 190, 191, 192, 193, 194, 196, 198, 203, 204, 209, 211, 212, 213, 214, 215, 219, 222, 225, 226, 228, 229, 230, 231, 233, 234, 235, 238, 241, 242, 243, 245, 246, 248, 252, 256, 257, 258, 259, 263, 266, 267, 277, 278, 279, 286, 288, 289, 293, 295, 303, 307, 311, 315, 316, 317, 326, 327, 328, 329, 330, 331, 343, 345, 351, 358, 359, 370, 375, 379, 382, 386, 396, 397, 398, 407, 409, 415, 416, 419, 422, 426, 427, 432, 433, 435, 437, 439, 441, 442, 443, 444, 445, 449, 452, 454, 455, 458, 471, 478, 485, 487, 491, 492, 503, 508, 513, 521, 523, 543, 560, 565, 569, 573, 622, 636, 637, 638, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 664, 667, 674, 675, 686, 693, 702, 705, 706, 714, 715, 717, 719, 721, 722, 724, 725, 728, 730, 738, 739, 746, 758, 759, 760, 761, 764, 767, 779, 781, 786, 792, 794, 796, 800, 802, 804, 808, 834, 839, 844, 868, 871, 901, 905, 907, 911, 912, 913, 914, 925, 931, 934, 937, 940, 951, 953, 964, 968, 970, 976, 980, 982, 983, 984, 992, 994, 998, 999, 1000, 1006, 1008, 1010, 1014, 1015, 1016, 1017, 1021, 1024, 1025, 1029, 1030, 1032, 1036, 1037, 1048, 1059, 1062, 1063, 1064, 1065, 1075, 1077, 1078, 1084, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1111, 1112, 1113, 1115, 1116, 1119, 1120, 1122, 1125, 1129, 1133, 1134, 1136, 1138, 1140, 1141, 1143, 1148, 1152, 1159, 1161, 1162, 1169], "precis": [17, 184, 188, 244, 261, 285, 307, 314, 363, 381, 645, 740, 808, 1051, 1106], "restructuredtext": [17, 23, 32, 33, 34, 35, 36, 38, 762], "turn": [17, 75, 110, 111, 152, 154, 157, 162, 163, 184, 188, 204, 213, 230, 276, 340, 437, 452, 453, 489, 514, 515, 672, 687, 864, 905, 912, 913, 914, 982, 984, 988, 998, 1006, 1011, 1012, 1022, 1024, 1132], "rst2s5": 17, "tool": [17, 32, 61, 68, 114, 159, 163, 168, 184, 192, 194, 204, 214, 240, 258, 267, 282, 287, 288, 305, 340, 343, 345, 358, 359, 360, 405, 440, 442, 443, 447, 639, 693, 711, 761, 832, 838, 839, 852, 904, 914, 925, 928, 983, 984, 992, 996, 1030, 1031, 1034, 1061, 1125, 1133, 1157, 1159, 1161, 1163, 1170], "thi": [17, 24, 28, 29, 30, 31, 39, 40, 43, 44, 45, 50, 53, 54, 57, 59, 61, 62, 63, 65, 69, 77, 78, 84, 85, 89, 90, 97, 104, 106, 109, 110, 111, 112, 114, 123, 132, 135, 142, 146, 149, 151, 152, 153, 155, 156, 157, 158, 167, 169, 171, 172, 174, 176, 178, 179, 180, 181, 184, 188, 189, 190, 191, 192, 193, 194, 204, 211, 213, 214, 221, 224, 225, 227, 230, 232, 234, 235, 237, 240, 243, 244, 250, 253, 257, 259, 261, 268, 276, 277, 279, 281, 286, 296, 299, 303, 304, 306, 314, 317, 323, 326, 331, 340, 343, 346, 358, 359, 361, 365, 372, 373, 386, 395, 396, 420, 424, 425, 427, 428, 429, 431, 436, 437, 447, 451, 452, 457, 458, 459, 463, 469, 477, 478, 489, 491, 493, 511, 513, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 541, 542, 543, 544, 547, 550, 551, 553, 554, 556, 557, 559, 560, 562, 565, 567, 568, 569, 571, 572, 575, 577, 578, 580, 583, 588, 591, 594, 596, 598, 599, 602, 610, 614, 616, 620, 622, 627, 629, 630, 632, 633, 637, 640, 643, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 674, 675, 676, 687, 693, 695, 696, 699, 700, 701, 702, 703, 704, 705, 710, 713, 715, 717, 718, 721, 723, 725, 727, 728, 729, 730, 737, 738, 739, 740, 745, 746, 758, 759, 760, 761, 762, 767, 772, 777, 781, 783, 790, 804, 808, 813, 820, 828, 835, 836, 839, 840, 847, 850, 852, 853, 862, 864, 865, 868, 873, 875, 905, 910, 911, 912, 913, 914, 917, 924, 925, 931, 938, 939, 940, 941, 942, 946, 949, 958, 961, 970, 971, 974, 975, 978, 980, 983, 984, 986, 992, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1007, 1010, 1012, 1014, 1016, 1018, 1025, 1028, 1029, 1030, 1032, 1034, 1041, 1044, 1046, 1047, 1048, 1051, 1052, 1054, 1056, 1057, 1058, 1062, 1078, 1093, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1119, 1120, 1121, 1122, 1123, 1124, 1128, 1131, 1133, 1134, 1139, 1141, 1144, 1145, 1146, 1148, 1150, 1151, 1159, 1161, 1162, 1164, 1167, 1168, 1174], "sens": [17, 78, 154, 156, 173, 176, 181, 184, 203, 462, 470, 487, 572, 583, 590, 637, 665, 678, 769, 808, 847, 914, 938, 961, 968, 975, 1025, 1055, 1111, 1162], "entir": [17, 24, 30, 80, 110, 111, 145, 149, 152, 153, 154, 157, 163, 167, 176, 181, 188, 191, 209, 212, 213, 221, 235, 238, 241, 244, 256, 257, 259, 261, 271, 278, 281, 285, 291, 296, 299, 303, 307, 313, 319, 377, 406, 410, 417, 420, 425, 433, 441, 449, 467, 673, 704, 724, 808, 835, 836, 841, 865, 870, 879, 887, 905, 912, 914, 917, 923, 940, 951, 984, 1013, 1017, 1031, 1036, 1037, 1054, 1056, 1075, 1106, 1139, 1142, 1145, 1162], "site": [17, 23, 27, 39, 61, 65, 135, 148, 149, 152, 164, 167, 179, 180, 181, 185, 211, 221, 227, 237, 240, 303, 320, 582, 728, 847, 1110, 1127, 1128, 1134, 1141, 1148], "massag": [17, 32, 142, 163, 181, 257, 259, 762, 912, 984], "itself": [17, 27, 119, 122, 132, 152, 154, 180, 184, 190, 221, 227, 237, 240, 286, 314, 329, 375, 407, 443, 452, 458, 486, 487, 509, 524, 570, 577, 636, 713, 728, 737, 740, 783, 786, 808, 828, 834, 835, 836, 850, 868, 897, 967, 980, 994, 1022, 1025, 1030, 1051, 1091, 1132, 1148], "upon": [17, 27, 69, 97, 154, 155, 184, 188, 192, 199, 238, 270, 277, 296, 299, 316, 429, 447, 475, 527, 543, 582, 600, 723, 740, 781, 914, 980, 1068, 1132, 1139, 1159], "you": [17, 21, 43, 58, 59, 62, 109, 112, 114, 115, 119, 120, 122, 125, 127, 131, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 167, 168, 172, 173, 174, 176, 180, 181, 184, 188, 190, 191, 192, 204, 209, 211, 212, 213, 214, 221, 224, 227, 228, 230, 234, 235, 237, 238, 240, 244, 252, 261, 268, 271, 274, 277, 279, 281, 285, 307, 316, 326, 331, 337, 340, 343, 345, 348, 371, 372, 385, 401, 427, 431, 447, 489, 508, 509, 510, 511, 515, 518, 521, 522, 524, 557, 568, 569, 575, 580, 583, 584, 586, 587, 601, 622, 630, 637, 643, 651, 652, 656, 673, 679, 707, 717, 728, 756, 757, 759, 781, 783, 800, 808, 813, 834, 835, 836, 839, 840, 843, 847, 848, 854, 858, 860, 862, 868, 869, 870, 872, 873, 874, 875, 879, 880, 905, 908, 912, 913, 914, 915, 916, 917, 919, 921, 924, 925, 929, 931, 935, 940, 942, 950, 951, 952, 953, 954, 958, 982, 983, 984, 985, 987, 990, 994, 997, 998, 1001, 1006, 1007, 1016, 1018, 1029, 1030, 1034, 1037, 1050, 1056, 1063, 1072, 1074, 1089, 1093, 1094, 1103, 1106, 1112, 1119, 1122, 1128, 1139, 1140, 1141, 1148, 1151, 1159, 1164], "view": [17, 63, 157, 158, 162, 173, 175, 188, 190, 256, 257, 261, 268, 316, 317, 358, 375, 377, 440, 667, 705, 714, 716, 760, 761, 835, 836, 845, 852, 905, 914, 916, 1037, 1105, 1159, 1162, 1164], "state": [17, 45, 114, 119, 148, 159, 164, 184, 192, 214, 221, 224, 227, 237, 238, 240, 380, 397, 429, 447, 514, 515, 519, 520, 567, 673, 707, 737, 766, 804, 825, 839, 897, 907, 951, 955, 966, 967, 1004, 1010], "rather": [17, 65, 85, 127, 131, 132, 152, 154, 155, 156, 157, 158, 159, 162, 163, 167, 176, 180, 184, 188, 204, 213, 231, 232, 306, 326, 351, 363, 405, 437, 438, 447, 465, 516, 517, 518, 519, 520, 525, 560, 567, 569, 583, 590, 601, 621, 646, 652, 666, 687, 737, 739, 781, 808, 813, 845, 847, 893, 905, 912, 913, 914, 916, 923, 928, 951, 952, 979, 983, 998, 1023, 1030, 1033, 1041, 1081, 1082, 1085, 1096, 1098, 1113, 1120, 1141, 1146, 1159, 1161], "huge": [17, 158, 163, 173, 478, 714, 786, 804, 1029, 1031, 1135], "tabl": [17, 39, 63, 65, 132, 145, 149, 151, 184, 190, 191, 208, 216, 221, 227, 228, 230, 231, 234, 235, 237, 240, 247, 252, 286, 359, 363, 378, 392, 393, 397, 398, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 645, 667, 705, 714, 758, 760, 761, 847, 1054, 1063, 1095, 1097, 1118, 1119], "isnot": 17, "big": [17, 104, 149, 152, 153, 159, 184, 188, 208, 214, 228, 235, 238, 281, 307, 340, 386, 431, 443, 522, 572, 602, 665, 729, 928, 1106, 1118, 1174], "fat": [17, 149, 151, 155, 159, 228, 659, 729, 839, 1118], "sai": [17, 24, 65, 66, 106, 123, 132, 140, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 167, 172, 173, 184, 188, 225, 230, 252, 271, 274, 278, 280, 281, 302, 303, 326, 340, 431, 437, 443, 453, 463, 467, 476, 487, 493, 508, 510, 522, 551, 560, 569, 579, 627, 640, 652, 661, 665, 693, 697, 699, 700, 701, 703, 708, 715, 718, 719, 724, 767, 781, 808, 847, 850, 852, 887, 905, 912, 914, 925, 929, 940, 942, 952, 964, 975, 979, 985, 994, 997, 998, 1004, 1008, 1030, 1046, 1058, 1063, 1093, 1114, 1148, 1162], "file": [17, 27, 29, 34, 35, 36, 38, 40, 44, 47, 50, 53, 54, 55, 56, 68, 78, 80, 85, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 119, 120, 127, 131, 136, 139, 144, 145, 148, 149, 151, 152, 153, 154, 157, 158, 163, 167, 171, 174, 176, 178, 179, 180, 181, 183, 184, 186, 188, 189, 191, 192, 193, 194, 199, 201, 202, 203, 204, 209, 212, 213, 214, 217, 218, 219, 222, 223, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 238, 241, 242, 243, 244, 246, 248, 251, 252, 256, 257, 258, 261, 265, 267, 270, 271, 273, 274, 280, 281, 283, 287, 288, 292, 294, 295, 302, 303, 306, 307, 309, 310, 311, 315, 325, 326, 327, 328, 329, 330, 337, 340, 341, 342, 343, 344, 345, 351, 353, 354, 358, 369, 372, 373, 403, 404, 406, 407, 408, 409, 415, 419, 422, 426, 430, 435, 439, 441, 443, 444, 445, 448, 450, 452, 454, 455, 456, 461, 462, 465, 471, 485, 508, 509, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 544, 547, 550, 552, 553, 556, 559, 562, 565, 570, 572, 584, 585, 586, 587, 593, 645, 649, 656, 659, 667, 682, 705, 711, 715, 725, 738, 758, 759, 760, 761, 764, 769, 770, 774, 775, 777, 778, 785, 786, 789, 799, 804, 810, 812, 815, 817, 823, 824, 826, 829, 832, 833, 834, 837, 838, 840, 841, 842, 844, 845, 847, 848, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 864, 866, 867, 868, 872, 876, 877, 878, 879, 880, 882, 885, 888, 893, 896, 901, 904, 905, 908, 912, 913, 914, 915, 917, 918, 920, 921, 927, 928, 931, 932, 933, 942, 945, 946, 949, 950, 956, 959, 962, 965, 967, 971, 973, 974, 975, 978, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 996, 998, 999, 1000, 1005, 1006, 1007, 1010, 1013, 1018, 1021, 1024, 1029, 1033, 1035, 1037, 1048, 1054, 1057, 1058, 1064, 1065, 1075, 1078, 1089, 1090, 1093, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1111, 1119, 1120, 1131, 1134, 1139, 1140, 1141, 1142, 1145, 1147, 1150, 1156, 1161, 1163, 1164, 1165, 1172, 1173, 1174, 1176], "rst": [17, 23, 32, 34, 35, 36, 38, 114, 136, 148, 171, 178, 183, 186, 192, 240, 250, 314, 348, 544, 547, 550, 553, 556, 559, 562, 971, 974, 978, 1145, 1150], "render": [17, 40, 157], "dure": [17, 27, 45, 46, 104, 106, 142, 151, 152, 153, 154, 158, 159, 163, 167, 172, 184, 188, 240, 343, 406, 410, 411, 425, 437, 442, 486, 493, 519, 522, 603, 621, 678, 717, 804, 808, 813, 840, 846, 912, 914, 923, 984, 998, 999, 1018, 1031, 1033, 1048, 1132, 1139], "regular": [17, 152, 176, 187, 201, 217, 224, 225, 232, 251, 252, 254, 256, 257, 266, 285, 286, 315, 365, 431, 449, 580, 582, 714, 759, 796, 808, 853, 887, 890, 892, 901, 914, 925, 975, 976, 1018, 1048, 1050, 1106], "process": [17, 28, 61, 63, 65, 73, 78, 80, 97, 99, 110, 111, 114, 157, 162, 169, 176, 182, 184, 191, 192, 194, 228, 258, 267, 280, 281, 288, 302, 342, 343, 350, 355, 408, 414, 443, 452, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 732, 738, 759, 760, 761, 770, 775, 778, 780, 785, 789, 791, 794, 795, 798, 799, 800, 801, 803, 805, 808, 812, 813, 814, 817, 819, 822, 823, 825, 826, 828, 829, 835, 836, 837, 838, 839, 842, 843, 844, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 904, 913, 916, 917, 918, 919, 920, 923, 927, 928, 929, 933, 934, 935, 937, 938, 940, 942, 943, 945, 950, 951, 952, 959, 964, 965, 967, 968, 969, 976, 979, 980, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1000, 1009, 1017, 1030, 1031, 1085, 1151, 1164, 1173, 1174], "mean": [17, 29, 73, 74, 110, 111, 114, 119, 152, 154, 157, 159, 173, 175, 176, 188, 208, 211, 212, 225, 227, 240, 244, 271, 286, 294, 302, 306, 310, 325, 326, 363, 384, 385, 386, 408, 427, 432, 437, 491, 569, 577, 580, 581, 647, 693, 715, 719, 727, 728, 761, 767, 783, 843, 850, 853, 855, 856, 864, 905, 912, 913, 914, 941, 948, 964, 968, 970, 998, 1001, 1010, 1025, 1033, 1036, 1050, 1051, 1056, 1084, 1104, 1107, 1111, 1113, 1114, 1120, 1125, 1146, 1161, 1164], "specif": [17, 63, 112, 155, 221, 227, 228, 237, 240, 286, 292, 303, 326, 360, 408, 425, 437, 467, 514, 517, 519, 522, 668, 711, 725, 759, 767, 781, 804, 808, 834, 844, 905, 912, 914, 928, 934, 950, 951, 976, 982, 994, 1005, 1013, 1014, 1115, 1131, 1139, 1174, 1175], "markup": [17, 39], "class": [17, 21, 29, 42, 44, 55, 58, 63, 69, 70, 73, 74, 85, 92, 97, 106, 107, 108, 110, 111, 114, 115, 119, 120, 122, 123, 125, 127, 131, 132, 159, 170, 171, 172, 174, 179, 188, 189, 190, 191, 193, 195, 196, 208, 212, 214, 221, 224, 225, 227, 228, 232, 236, 238, 239, 242, 244, 247, 250, 252, 254, 256, 257, 259, 264, 265, 269, 271, 272, 274, 278, 279, 280, 281, 283, 284, 285, 286, 290, 292, 302, 303, 304, 306, 307, 308, 312, 314, 316, 317, 318, 320, 324, 326, 328, 334, 335, 342, 343, 344, 351, 377, 423, 447, 449, 457, 465, 466, 467, 468, 469, 471, 472, 474, 475, 479, 485, 486, 487, 489, 490, 492, 493, 494, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 530, 532, 537, 543, 551, 554, 557, 563, 565, 566, 567, 568, 570, 571, 572, 573, 574, 575, 578, 579, 581, 583, 588, 590, 591, 594, 600, 609, 610, 616, 620, 626, 629, 632, 633, 638, 639, 640, 642, 643, 647, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 669, 670, 671, 672, 673, 674, 675, 678, 682, 687, 689, 690, 691, 693, 695, 696, 699, 700, 701, 702, 703, 704, 705, 707, 708, 710, 712, 719, 721, 724, 725, 728, 729, 730, 737, 738, 739, 745, 746, 747, 749, 751, 755, 756, 757, 758, 760, 761, 763, 905, 912, 913, 914, 946, 948, 949, 1003, 1005, 1007, 1013, 1014, 1015, 1016, 1017, 1020, 1021, 1026, 1027, 1028, 1029, 1031, 1034, 1036, 1037, 1045, 1065, 1092, 1093, 1094, 1099, 1101, 1104, 1119, 1133, 1139, 1140, 1151, 1159, 1169], "handout": [17, 114], "warn": [17, 32, 40, 132, 148, 163, 204, 214, 265, 277, 337, 348, 373, 397, 428, 429, 431, 452, 466, 521, 523, 567, 571, 622, 666, 678, 761, 777, 783, 786, 845, 904, 934, 945, 959, 981, 1005, 1056, 1134], "produc": [17, 108, 172, 174, 213, 227, 425, 437, 442, 693, 699, 701, 737, 739, 925, 955, 956, 974, 982, 985, 998, 1011, 1012, 1045, 1048, 1050, 1114], "error": [17, 21, 27, 29, 46, 65, 88, 97, 115, 119, 120, 131, 148, 151, 152, 153, 154, 157, 158, 167, 171, 174, 182, 185, 188, 191, 198, 209, 213, 219, 221, 224, 228, 229, 230, 234, 237, 240, 244, 247, 249, 252, 261, 262, 265, 268, 271, 274, 285, 286, 299, 304, 325, 340, 345, 347, 351, 370, 373, 375, 382, 386, 400, 401, 407, 413, 414, 416, 429, 430, 431, 434, 451, 452, 453, 455, 456, 457, 458, 461, 468, 472, 491, 492, 493, 505, 513, 524, 543, 560, 565, 567, 569, 570, 574, 575, 576, 577, 578, 580, 582, 590, 593, 598, 640, 642, 643, 652, 659, 666, 669, 673, 675, 676, 677, 678, 682, 702, 703, 704, 712, 715, 717, 719, 724, 725, 727, 738, 739, 741, 759, 760, 761, 764, 771, 786, 796, 800, 804, 808, 824, 838, 841, 842, 848, 851, 904, 905, 913, 915, 927, 929, 930, 931, 932, 933, 934, 942, 943, 945, 953, 959, 961, 962, 965, 966, 967, 975, 979, 980, 984, 985, 994, 999, 1005, 1035, 1036, 1047, 1048, 1052, 1056, 1058, 1065, 1078, 1104, 1106, 1113, 1134, 1139, 1141, 1146, 1159], "output": [17, 23, 33, 40, 51, 53, 55, 56, 61, 63, 85, 86, 107, 125, 131, 132, 148, 154, 156, 157, 158, 171, 174, 180, 192, 193, 204, 213, 221, 227, 230, 231, 237, 240, 268, 325, 340, 345, 363, 364, 369, 370, 371, 372, 376, 408, 442, 443, 449, 450, 451, 491, 493, 508, 523, 526, 527, 528, 529, 541, 543, 551, 554, 580, 630, 648, 649, 662, 710, 715, 723, 761, 766, 821, 832, 839, 848, 851, 852, 853, 864, 868, 890, 894, 895, 900, 901, 905, 915, 926, 934, 937, 940, 948, 951, 952, 956, 976, 979, 980, 982, 1012, 1051, 1056, 1057, 1067, 1068, 1070, 1071, 1072, 1073, 1075, 1080, 1086, 1088, 1090, 1095, 1096, 1097, 1098, 1109, 1112, 1113, 1118, 1122, 1131, 1134, 1147, 1154, 1170], "must": [17, 39, 43, 44, 110, 111, 114, 120, 155, 159, 174, 180, 184, 185, 187, 188, 191, 195, 196, 209, 211, 213, 221, 227, 228, 235, 237, 238, 240, 261, 286, 303, 363, 380, 383, 397, 405, 423, 425, 440, 447, 449, 453, 459, 470, 475, 476, 489, 492, 493, 506, 507, 521, 524, 527, 528, 529, 541, 551, 577, 578, 580, 582, 592, 593, 627, 640, 647, 654, 661, 669, 670, 672, 673, 693, 717, 719, 731, 735, 761, 786, 792, 800, 806, 813, 835, 836, 852, 862, 870, 904, 915, 921, 924, 934, 935, 938, 943, 945, 953, 962, 964, 966, 976, 982, 985, 1000, 1005, 1006, 1023, 1028, 1034, 1047, 1048, 1050, 1051, 1053, 1056, 1085, 1106, 1140, 1151], "role": [17, 39, 65, 155, 159, 443, 524, 905], "somewher": [17, 173, 192, 204, 211, 244, 256, 257, 325, 337, 408, 425, 427, 447, 472, 493, 560, 693, 951, 1008, 1033, 1119], "top": [17, 28, 32, 34, 35, 38, 39, 50, 151, 152, 154, 155, 167, 173, 175, 176, 192, 194, 221, 227, 230, 237, 240, 450, 811, 820, 905, 925, 964, 966, 1005, 1013, 1035, 1081, 1085, 1159, 1163, 1165, 1170], "insid": [17, 35, 39, 42, 50, 114, 119, 132, 151, 152, 180, 182, 204, 221, 227, 237, 240, 257, 277, 279, 294, 303, 310, 325, 340, 369, 373, 383, 401, 404, 406, 407, 425, 430, 449, 511, 522, 527, 575, 581, 583, 739, 759, 769, 779, 847, 877, 887, 912, 914, 937, 951, 970, 996, 1001, 1004, 1013, 1050, 1056, 1124, 1127, 1131, 1142, 1161, 1164], "ideal": [17, 163, 179, 221, 227, 237, 240, 257, 259, 436, 452, 463, 470, 518, 639, 693, 767, 786, 804, 808, 901, 921, 985, 1025, 1027], "slideshow": [17, 23, 231, 243, 270, 280, 291, 299, 302, 306, 312, 313, 318, 324, 765, 768, 770, 773, 775, 778, 780, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 812, 814, 817, 819, 823, 826, 829, 1049, 1136, 1143], "manual": [17, 61, 63, 115, 125, 127, 131, 149, 159, 167, 190, 191, 221, 222, 227, 230, 237, 240, 270, 272, 371, 372, 375, 382, 420, 425, 449, 566, 608, 658, 665, 676, 702, 714, 715, 746, 747, 749, 750, 760, 761, 763, 764, 767, 808, 835, 836, 905, 912, 913, 935, 938, 951, 953, 955, 996, 998, 1003, 1011, 1012, 1016, 1020, 1061], "theme": [17, 65, 332, 1037, 1056], "url": [17, 149, 156, 158, 167, 179, 522, 1004, 1061], "_static": 17, "ui": [17, 32, 159, 386, 645], "default": [17, 23, 58, 61, 97, 110, 111, 112, 114, 122, 123, 152, 153, 158, 159, 163, 169, 180, 189, 191, 193, 200, 202, 213, 221, 224, 227, 230, 233, 236, 237, 240, 244, 247, 250, 255, 258, 265, 267, 268, 272, 276, 277, 279, 282, 286, 288, 289, 308, 314, 317, 333, 340, 386, 397, 429, 437, 443, 449, 450, 452, 455, 459, 462, 468, 471, 485, 487, 496, 497, 513, 523, 565, 567, 568, 573, 574, 577, 578, 602, 621, 622, 638, 643, 645, 647, 650, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 665, 666, 673, 674, 703, 705, 721, 730, 735, 737, 738, 739, 745, 746, 751, 758, 760, 761, 804, 832, 835, 836, 838, 850, 863, 868, 887, 899, 900, 904, 905, 907, 912, 913, 915, 921, 924, 938, 942, 948, 951, 953, 955, 967, 979, 981, 983, 985, 996, 1025, 1027, 1033, 1052, 1054, 1056, 1061, 1097, 1114, 1124, 1127, 1129, 1134, 1139, 1141, 1159], "given": [17, 39, 59, 62, 69, 81, 102, 106, 107, 110, 111, 137, 152, 154, 157, 159, 163, 173, 221, 227, 237, 240, 244, 268, 276, 277, 279, 286, 314, 326, 373, 388, 431, 490, 519, 522, 524, 543, 567, 636, 647, 672, 759, 769, 779, 790, 808, 845, 850, 859, 861, 868, 890, 912, 992, 1004, 1091, 1100, 1106, 1108, 1114, 1125, 1128, 1162, 1174], "path": [17, 21, 97, 99, 114, 120, 140, 141, 148, 157, 180, 184, 192, 195, 212, 223, 224, 225, 229, 232, 236, 237, 240, 258, 267, 268, 288, 289, 292, 294, 295, 310, 311, 314, 320, 325, 326, 331, 333, 340, 345, 407, 443, 449, 451, 454, 455, 457, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 565, 590, 722, 738, 760, 761, 772, 786, 798, 808, 834, 835, 836, 837, 838, 841, 842, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 904, 924, 927, 933, 934, 935, 943, 944, 945, 959, 961, 962, 963, 965, 967, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 996, 1003, 1013, 1030, 1033, 1094, 1134, 1139, 1141, 1149, 1161], "commit": [17, 46, 77, 112, 134, 155, 158, 166, 167, 209, 213, 214, 225, 228, 238, 348, 781, 1106, 1115, 1118, 1139, 1171], "place": [17, 55, 114, 127, 140, 149, 153, 154, 156, 157, 158, 159, 167, 172, 181, 185, 208, 224, 230, 240, 276, 277, 363, 379, 401, 408, 425, 448, 457, 461, 465, 489, 491, 505, 524, 537, 582, 596, 598, 599, 610, 621, 629, 632, 633, 643, 662, 728, 731, 739, 756, 759, 761, 786, 808, 837, 858, 859, 860, 861, 912, 913, 921, 967, 997, 999, 1008, 1038, 1047, 1051, 1053, 1071, 1128, 1141], "_download": 17, "7a046b2e956b892f20b3485964f7b2cf": 17, "rel": [17, 78, 99, 114, 152, 159, 188, 204, 225, 258, 267, 268, 288, 289, 358, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 682, 687, 738, 760, 761, 808, 835, 836, 837, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 904, 912, 924, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1110, 1111, 1118, 1131], "up": [17, 21, 27, 32, 34, 35, 38, 43, 45, 53, 78, 112, 123, 127, 131, 142, 149, 151, 152, 153, 155, 157, 159, 162, 167, 171, 172, 203, 209, 214, 219, 221, 225, 227, 237, 240, 252, 257, 259, 268, 277, 303, 316, 325, 343, 347, 353, 354, 421, 428, 437, 438, 443, 447, 451, 452, 472, 521, 522, 523, 524, 537, 560, 584, 585, 586, 587, 590, 637, 642, 707, 710, 723, 724, 737, 759, 767, 771, 776, 777, 779, 790, 792, 800, 804, 808, 809, 847, 868, 869, 887, 900, 905, 907, 912, 913, 914, 921, 931, 964, 970, 975, 980, 982, 985, 994, 1003, 1006, 1017, 1021, 1027, 1050, 1063, 1067, 1084, 1089, 1101, 1106, 1111, 1114, 1122, 1134, 1140, 1146, 1151, 1162], "uri": 17, "well": [17, 42, 65, 152, 154, 157, 158, 159, 163, 176, 180, 188, 211, 213, 240, 276, 278, 286, 294, 303, 310, 326, 386, 408, 437, 447, 475, 515, 521, 524, 525, 548, 568, 572, 583, 597, 665, 672, 679, 702, 715, 725, 729, 833, 852, 868, 901, 908, 913, 914, 925, 938, 940, 958, 982, 984, 997, 1005, 1006, 1009, 1013, 1016, 1020, 1023, 1026, 1037, 1041, 1051, 1109, 1111, 1119, 1135, 1161], "blah": [19, 23, 39, 62, 65, 134, 152, 155, 174, 185, 192, 195, 200, 208, 211, 217, 221, 227, 228, 230, 232, 237, 240, 247, 250, 262, 269, 272, 282, 286, 304, 314, 320, 332, 333, 340, 348, 351, 431, 678, 741, 759, 764, 772, 931, 932, 975, 976, 1001, 1036, 1042, 1061, 1122], "watch": [20, 32, 153, 154, 155, 173, 180, 184, 188, 189, 193, 279, 281, 285, 448, 715, 905, 913, 949, 1009, 1030, 1132], "w5g8k7a2gbg": 20, "bore": [20, 213, 235, 249, 265, 291, 868, 976, 980, 1037, 1106], "good": [20, 27, 29, 43, 97, 114, 149, 151, 152, 153, 154, 159, 167, 176, 184, 188, 191, 209, 212, 213, 221, 225, 230, 231, 232, 234, 235, 238, 244, 259, 261, 271, 274, 277, 279, 285, 286, 307, 316, 359, 382, 386, 427, 431, 433, 441, 442, 447, 470, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 548, 565, 569, 573, 574, 588, 591, 594, 610, 616, 620, 623, 629, 632, 633, 638, 642, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 676, 705, 716, 721, 727, 730, 736, 738, 740, 746, 749, 758, 760, 761, 765, 767, 800, 808, 813, 833, 847, 851, 901, 905, 913, 914, 938, 940, 957, 966, 969, 970, 976, 979, 1005, 1018, 1036, 1037, 1048, 1051, 1053, 1056, 1068, 1078, 1105, 1106, 1113, 1132, 1161], "j2hzby8e4yq": 20, "pov": 20, "classmethod": [21, 265], "staticmethod": [21, 265], "member": [21, 35, 38, 43, 57, 63, 110, 111, 114, 167, 173, 174, 175, 185, 190, 212, 230, 242, 255, 270, 277, 286, 317, 344, 416, 425, 432, 469, 511, 513, 516, 519, 543, 557, 565, 567, 568, 570, 571, 572, 573, 579, 583, 584, 586, 588, 621, 622, 626, 647, 650, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 673, 677, 678, 687, 693, 703, 719, 725, 757, 759, 761, 769, 774, 776, 796, 804, 808, 821, 827, 834, 835, 836, 851, 852, 853, 854, 855, 856, 862, 897, 901, 912, 940, 994, 1055, 1131, 1151], "final": [21, 38, 42, 61, 78, 106, 148, 174, 184, 188, 191, 211, 213, 221, 227, 228, 237, 242, 255, 261, 285, 307, 317, 449, 522, 524, 589, 590, 639, 665, 676, 705, 760, 761, 771, 802, 808, 835, 836, 901, 913, 914, 982, 999, 1003, 1016, 1068, 1084, 1106, 1159], "exec": [21, 29, 159, 184, 193, 224, 238, 239, 247, 254, 266, 270, 272, 280, 281, 282, 286, 293, 302, 306, 313, 315, 761, 896, 901, 934, 937, 958, 982, 1007, 1104, 1172], "dict": [21, 171, 184, 185, 189, 200, 202, 203, 208, 211, 225, 226, 227, 228, 231, 233, 236, 237, 238, 242, 248, 262, 265, 272, 282, 286, 292, 297, 304, 308, 314, 320, 332, 335, 340, 665, 1003, 1006, 1018, 1019, 1028, 1054], "There": [21, 45, 55, 57, 65, 68, 81, 97, 123, 149, 151, 153, 154, 155, 156, 159, 163, 164, 180, 181, 185, 187, 188, 191, 195, 196, 209, 214, 230, 233, 234, 235, 238, 244, 271, 274, 277, 278, 279, 280, 281, 302, 303, 317, 326, 361, 371, 377, 386, 401, 404, 425, 427, 434, 437, 448, 449, 453, 462, 467, 492, 493, 543, 551, 568, 573, 618, 643, 661, 662, 674, 676, 682, 705, 710, 721, 725, 729, 730, 738, 758, 760, 761, 781, 808, 813, 839, 868, 905, 912, 913, 958, 968, 979, 980, 1031, 1037, 1048, 1106, 1115, 1140, 1146], "half": [21, 36, 152, 153, 154, 214, 433, 452, 806, 847, 913, 966, 1003], "heart": [21, 32, 38, 142, 452, 847, 1112], "split": [21, 149, 172, 175, 208, 212, 217, 218, 221, 224, 225, 227, 232, 236, 242, 250, 253, 265, 270, 272, 286, 292, 308, 315, 331, 340, 425, 449, 471, 543, 1003, 1112], "pimp": 21, "elabor": [21, 163, 228, 238, 427, 450, 913], "namespac": [21, 184, 221, 227, 234, 237, 240, 244, 255, 265, 472, 474, 489, 525, 526, 527, 528, 529, 531, 541, 542, 560, 582, 590, 595, 596, 597, 598, 599, 605, 606, 608, 609, 612, 613, 614, 618, 632, 649, 655, 656, 665, 680, 702, 712, 715, 737, 739, 740, 912, 946, 949, 961, 963, 1013], "__init__": [21, 63, 148, 171, 172, 183, 185, 188, 190, 208, 211, 212, 224, 225, 227, 234, 237, 240, 244, 250, 253, 262, 265, 272, 282, 286, 304, 308, 449, 1003, 1004, 1005, 1013, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1139], "__all__": [21, 240, 244], "etc": [21, 23, 29, 63, 90, 100, 114, 141, 145, 149, 153, 157, 166, 169, 170, 174, 181, 188, 191, 195, 196, 198, 201, 202, 209, 210, 212, 213, 215, 219, 222, 224, 225, 227, 231, 232, 235, 241, 242, 243, 244, 246, 247, 249, 251, 254, 264, 265, 268, 271, 272, 274, 282, 284, 285, 287, 290, 291, 307, 308, 312, 313, 314, 318, 319, 324, 326, 327, 328, 329, 330, 331, 340, 345, 348, 358, 381, 386, 442, 452, 460, 474, 557, 645, 707, 713, 740, 759, 761, 767, 781, 808, 820, 830, 838, 840, 843, 845, 848, 850, 851, 852, 853, 864, 868, 871, 882, 885, 887, 888, 890, 892, 893, 894, 895, 896, 897, 899, 901, 904, 914, 915, 916, 924, 925, 928, 929, 930, 935, 941, 950, 961, 975, 976, 980, 982, 1003, 1005, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1052, 1056, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1131, 1133, 1154, 1155, 1163, 1165, 1169, 1170, 1173, 1175], "user": [21, 23, 29, 31, 47, 53, 63, 65, 84, 101, 102, 110, 111, 114, 120, 136, 138, 148, 149, 151, 152, 153, 154, 156, 157, 159, 167, 174, 180, 183, 184, 185, 188, 192, 199, 208, 211, 213, 215, 224, 230, 232, 237, 238, 240, 241, 243, 244, 247, 250, 252, 261, 262, 265, 268, 271, 272, 274, 282, 286, 289, 296, 297, 299, 303, 308, 314, 316, 325, 337, 340, 349, 405, 436, 447, 449, 450, 452, 457, 465, 475, 492, 493, 513, 527, 543, 565, 568, 569, 575, 582, 626, 630, 649, 651, 652, 653, 654, 661, 662, 678, 682, 714, 725, 738, 760, 761, 767, 769, 779, 781, 806, 808, 821, 822, 835, 836, 838, 842, 846, 847, 848, 852, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 868, 892, 896, 899, 904, 905, 906, 915, 921, 928, 933, 934, 935, 938, 940, 943, 945, 950, 959, 962, 963, 965, 967, 968, 979, 982, 996, 998, 999, 1000, 1003, 1020, 1021, 1058, 1065, 1067, 1068, 1072, 1084, 1085, 1091, 1096, 1098, 1101, 1103, 1104, 1117, 1122, 1125, 1129, 1132, 1141, 1148, 1159], "import": [21, 29, 63, 65, 140, 148, 154, 159, 162, 172, 173, 174, 175, 184, 185, 188, 190, 191, 196, 200, 202, 203, 204, 212, 216, 217, 218, 223, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 256, 257, 262, 265, 269, 270, 271, 272, 274, 276, 282, 286, 292, 297, 300, 304, 308, 314, 320, 333, 335, 363, 379, 449, 452, 453, 590, 607, 673, 711, 725, 728, 761, 790, 808, 850, 868, 905, 908, 912, 921, 933, 960, 970, 981, 1002, 1003, 1004, 1006, 1014, 1016, 1018, 1024, 1025, 1028, 1034, 1035, 1036, 1037, 1038, 1039, 1041, 1046, 1050, 1058, 1059, 1060, 1061, 1094, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1114, 1117, 1118, 1120, 1122, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1136, 1139, 1140, 1143, 1146, 1164, 1169], "pythonpath": [21, 40, 61, 184, 270, 1013, 1061], "goto": [21, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761, 979], "orgi": [21, 457, 669], "perspect": [21, 38, 159, 181], "alwai": [21, 43, 65, 80, 112, 148, 149, 154, 164, 181, 188, 211, 233, 244, 270, 271, 274, 316, 332, 340, 345, 363, 381, 407, 408, 420, 432, 433, 437, 438, 440, 441, 457, 458, 477, 487, 517, 566, 572, 582, 601, 604, 660, 665, 669, 680, 704, 713, 717, 720, 724, 729, 767, 786, 804, 808, 813, 834, 868, 869, 912, 913, 914, 928, 934, 940, 968, 979, 984, 994, 999, 1005, 1033, 1037, 1051, 1106, 1111, 1112, 1113, 1139, 1140, 1159], "valgrind": [21, 97, 179, 213, 358, 435, 439, 440, 442, 444, 445, 472, 537, 547, 549, 557, 560, 575, 710, 723, 724, 761, 1156, 1157], "supervis": [21, 1113], "hack": [21, 53, 59, 62, 97, 132, 146, 149, 167, 175, 179, 184, 188, 189, 213, 214, 228, 230, 238, 249, 256, 257, 258, 259, 267, 279, 280, 288, 289, 296, 299, 303, 316, 317, 340, 344, 348, 349, 351, 358, 359, 407, 450, 471, 472, 485, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 543, 585, 600, 601, 621, 663, 674, 705, 706, 707, 711, 723, 738, 759, 760, 761, 762, 838, 863, 864, 904, 945, 992, 1030, 1126, 1132, 1139, 1158, 1159, 1173], "someth": [21, 43, 55, 66, 72, 73, 74, 78, 83, 84, 87, 119, 127, 145, 151, 152, 154, 155, 157, 159, 163, 167, 173, 180, 184, 192, 200, 202, 203, 204, 214, 224, 228, 235, 250, 253, 277, 279, 296, 299, 316, 335, 398, 399, 413, 467, 489, 522, 524, 560, 571, 575, 580, 583, 590, 614, 658, 659, 660, 670, 673, 687, 717, 725, 727, 728, 755, 756, 757, 761, 769, 781, 785, 796, 804, 808, 810, 813, 828, 880, 904, 905, 908, 912, 913, 914, 929, 930, 938, 940, 941, 953, 964, 966, 967, 979, 994, 1001, 1003, 1004, 1006, 1010, 1027, 1034, 1036, 1041, 1051, 1057, 1088, 1113, 1164], "malloc": [21, 179, 420, 421, 434, 549, 794, 928, 980, 982, 1156], "seomth": 21, "cleanup": [21, 152, 171, 351, 566, 642, 678, 722, 980, 1003, 1140], "obviou": [21, 57, 159, 167, 173, 234, 244, 271, 274, 337, 408, 427, 449, 524, 566, 673, 682, 723, 729, 746, 934, 976, 1001, 1037, 1048, 1162], "lead": [21, 110, 111, 119, 152, 154, 158, 159, 176, 213, 240, 244, 268, 286, 306, 367, 375, 385, 457, 647, 659, 808, 834, 847, 913, 966, 975, 976, 994, 1021, 1047, 1058, 1068, 1119, 1133], "sever": [21, 87, 114, 152, 212, 213, 405, 474, 479, 653, 664, 806, 864, 905, 1005, 1031, 1042], "duplic": [21, 42, 49, 97, 115, 119, 131, 172, 185, 230, 238, 248, 270, 325, 367, 369, 430, 431, 474, 533, 541, 554, 575, 582, 593, 671, 728, 761, 815, 851, 904, 940, 943, 945, 962, 1088, 1139, 1141], "when": [21, 28, 30, 43, 63, 65, 75, 80, 110, 111, 122, 127, 132, 139, 140, 149, 151, 152, 153, 154, 157, 159, 167, 169, 181, 184, 190, 213, 214, 221, 225, 227, 228, 230, 237, 238, 240, 243, 244, 257, 259, 268, 276, 277, 279, 286, 294, 310, 317, 326, 331, 340, 351, 358, 365, 373, 375, 381, 386, 397, 404, 408, 423, 428, 429, 430, 431, 432, 437, 447, 449, 452, 455, 459, 462, 463, 466, 467, 471, 491, 493, 524, 525, 569, 571, 572, 575, 583, 605, 621, 636, 637, 640, 642, 647, 649, 654, 658, 660, 665, 668, 670, 672, 673, 676, 693, 707, 712, 715, 720, 724, 725, 728, 732, 735, 737, 739, 759, 776, 779, 786, 790, 802, 804, 806, 808, 822, 841, 843, 847, 850, 852, 864, 868, 890, 901, 913, 914, 921, 925, 929, 930, 934, 937, 938, 956, 958, 964, 967, 968, 970, 975, 979, 980, 982, 984, 999, 1003, 1004, 1005, 1010, 1014, 1017, 1023, 1025, 1030, 1033, 1036, 1037, 1039, 1041, 1046, 1047, 1048, 1058, 1097, 1114, 1119, 1124, 1134, 1139, 1141, 1148, 1159, 1161, 1162], "void": [21, 42, 44, 55, 58, 107, 119, 123, 125, 127, 131, 154, 155, 163, 195, 213, 225, 340, 362, 363, 365, 369, 371, 373, 377, 383, 387, 401, 403, 404, 405, 406, 408, 411, 413, 414, 417, 420, 421, 423, 424, 430, 431, 434, 450, 457, 466, 467, 468, 472, 474, 478, 487, 496, 497, 501, 502, 505, 506, 507, 509, 521, 523, 524, 525, 548, 560, 567, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 582, 583, 590, 596, 600, 609, 622, 636, 639, 640, 643, 645, 646, 655, 657, 665, 666, 671, 675, 678, 679, 693, 695, 696, 698, 699, 700, 701, 703, 704, 707, 708, 709, 710, 711, 712, 714, 715, 717, 722, 723, 724, 725, 727, 729, 732, 734, 737, 739, 741, 759, 769, 772, 779, 786, 788, 790, 792, 794, 802, 804, 813, 818, 822, 828, 845, 865, 926, 930, 931, 932, 934, 944, 951, 953, 955, 957, 961, 966, 972, 975, 976, 979, 980, 982, 994, 998, 1000, 1151], "f": [21, 31, 38, 43, 63, 109, 114, 126, 138, 153, 154, 155, 163, 175, 185, 190, 191, 196, 197, 200, 202, 208, 209, 211, 212, 218, 220, 221, 224, 225, 227, 231, 233, 234, 237, 240, 244, 247, 249, 251, 253, 261, 262, 265, 269, 272, 277, 282, 286, 291, 293, 300, 304, 308, 315, 320, 332, 334, 336, 351, 377, 382, 392, 394, 403, 406, 411, 430, 431, 433, 437, 441, 449, 466, 572, 576, 592, 666, 672, 678, 679, 708, 729, 732, 767, 772, 834, 845, 852, 868, 887, 894, 896, 897, 912, 913, 914, 915, 937, 968, 970, 975, 990, 994, 997, 1001, 1003, 1004, 1005, 1006, 1018, 1020, 1022, 1023, 1026, 1027, 1028, 1047, 1048, 1056, 1063, 1068, 1101, 1103, 1106, 1114, 1139, 1169], "alloc": [21, 122, 154, 155, 172, 174, 213, 221, 224, 227, 237, 240, 262, 375, 404, 420, 425, 428, 431, 434, 472, 556, 558, 572, 574, 575, 582, 601, 606, 613, 618, 629, 633, 637, 662, 673, 676, 710, 715, 724, 725, 729, 759, 761, 764, 767, 769, 794, 796, 810, 813, 845, 851, 930, 931, 932, 952, 1012, 1063], "variabl": [21, 29, 87, 89, 90, 97, 104, 110, 111, 148, 153, 154, 163, 167, 171, 173, 174, 180, 184, 185, 188, 189, 190, 191, 193, 196, 197, 198, 203, 204, 209, 210, 212, 213, 215, 219, 222, 223, 225, 226, 227, 230, 231, 233, 235, 241, 242, 243, 244, 246, 248, 249, 251, 255, 258, 263, 264, 265, 267, 268, 271, 274, 277, 281, 283, 284, 285, 287, 288, 289, 290, 291, 297, 302, 303, 304, 306, 307, 309, 312, 313, 315, 318, 319, 321, 324, 326, 327, 328, 329, 330, 331, 340, 342, 343, 362, 364, 365, 373, 378, 386, 393, 397, 398, 401, 402, 403, 407, 409, 410, 413, 415, 419, 420, 422, 423, 425, 426, 427, 433, 434, 435, 437, 439, 444, 445, 451, 453, 457, 459, 478, 486, 492, 501, 506, 511, 552, 557, 572, 580, 581, 588, 600, 640, 647, 662, 667, 673, 676, 678, 705, 707, 719, 738, 757, 758, 759, 760, 761, 777, 796, 808, 838, 839, 842, 845, 869, 888, 904, 945, 950, 953, 957, 958, 959, 964, 982, 992, 993, 994, 999, 1001, 1003, 1006, 1007, 1013, 1014, 1015, 1016, 1017, 1021, 1029, 1033, 1035, 1040, 1044, 1046, 1048, 1049, 1052, 1057, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1113, 1116, 1119, 1120, 1126, 1128, 1133, 1134, 1160, 1162, 1169, 1175], "filenam": [21, 42, 50, 55, 58, 151, 171, 175, 200, 218, 221, 224, 225, 227, 232, 237, 240, 250, 265, 268, 281, 282, 286, 314, 332, 449, 508, 511, 525, 759, 808, 834, 835, 897, 935, 938, 939, 940, 941, 942, 946, 949, 975, 1003, 1013, 1058, 1063, 1075, 1084, 1086, 1090, 1096, 1098], "getenv": [21, 506, 963], "fopen": 21, "read": [21, 29, 43, 47, 53, 55, 56, 57, 73, 74, 83, 85, 114, 151, 152, 153, 154, 155, 157, 159, 162, 163, 167, 180, 184, 188, 189, 191, 193, 199, 209, 212, 219, 222, 225, 227, 228, 230, 232, 238, 240, 241, 246, 247, 249, 252, 259, 260, 261, 264, 268, 270, 272, 278, 282, 284, 285, 286, 289, 290, 291, 308, 312, 313, 314, 316, 317, 318, 324, 325, 326, 327, 328, 329, 330, 340, 344, 346, 351, 370, 371, 378, 386, 393, 402, 409, 415, 419, 422, 423, 425, 426, 427, 429, 431, 434, 435, 439, 443, 444, 445, 448, 464, 471, 492, 508, 513, 524, 525, 548, 554, 565, 568, 569, 571, 574, 577, 580, 626, 630, 649, 652, 664, 667, 674, 682, 705, 719, 727, 755, 758, 759, 760, 761, 767, 781, 792, 808, 810, 834, 835, 836, 839, 845, 850, 851, 852, 853, 855, 856, 859, 868, 869, 901, 904, 908, 912, 913, 914, 921, 926, 928, 929, 931, 932, 935, 938, 941, 943, 944, 945, 946, 948, 949, 956, 958, 962, 966, 972, 975, 976, 979, 980, 999, 1005, 1006, 1021, 1024, 1026, 1034, 1042, 1064, 1065, 1075, 1084, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1112, 1114, 1122, 1129, 1172], "onli": [21, 29, 42, 43, 89, 108, 110, 111, 114, 115, 119, 122, 132, 142, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 167, 172, 173, 180, 184, 188, 190, 191, 209, 211, 214, 221, 224, 227, 230, 231, 232, 234, 237, 238, 240, 241, 243, 244, 249, 251, 252, 253, 264, 265, 268, 270, 271, 277, 281, 284, 286, 290, 291, 294, 303, 310, 312, 318, 324, 331, 334, 348, 355, 365, 371, 373, 374, 375, 377, 382, 383, 385, 390, 397, 398, 401, 403, 405, 406, 407, 408, 424, 425, 429, 430, 431, 432, 433, 442, 447, 449, 450, 452, 453, 456, 458, 461, 462, 466, 467, 468, 470, 478, 486, 487, 489, 491, 492, 493, 505, 506, 521, 522, 525, 528, 529, 543, 554, 567, 568, 569, 570, 572, 574, 576, 577, 580, 582, 583, 589, 603, 605, 621, 622, 626, 636, 637, 639, 643, 647, 651, 652, 659, 661, 665, 672, 676, 678, 682, 687, 693, 703, 707, 710, 714, 715, 719, 720, 724, 725, 731, 733, 735, 737, 739, 745, 749, 751, 752, 761, 764, 766, 769, 772, 777, 788, 794, 804, 808, 813, 816, 821, 825, 833, 834, 835, 836, 843, 846, 850, 852, 853, 858, 864, 868, 869, 890, 897, 905, 906, 907, 912, 913, 914, 915, 925, 930, 931, 934, 936, 937, 938, 942, 944, 948, 950, 953, 958, 961, 964, 966, 967, 968, 969, 975, 976, 979, 980, 982, 983, 994, 998, 999, 1003, 1004, 1005, 1008, 1014, 1018, 1020, 1023, 1025, 1026, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1041, 1042, 1046, 1051, 1052, 1056, 1058, 1061, 1065, 1070, 1078, 1080, 1081, 1084, 1085, 1089, 1091, 1104, 1106, 1111, 1112, 1113, 1115, 1118, 1127, 1131, 1132, 1139, 1145, 1146, 1148, 1151, 1159, 1161, 1164, 1176], "bullshit": [21, 65, 196, 208, 244, 452, 715, 1169], "everyon": [21, 65, 152, 157, 167, 188, 447, 652, 703, 855, 856, 866, 968], "get": [21, 55, 63, 97, 110, 111, 140, 141, 148, 149, 152, 154, 155, 162, 163, 171, 184, 185, 188, 190, 195, 202, 203, 204, 211, 213, 214, 221, 224, 227, 228, 230, 233, 234, 237, 240, 247, 253, 257, 259, 262, 265, 268, 272, 282, 286, 292, 304, 308, 314, 335, 340, 343, 345, 360, 386, 431, 440, 463, 467, 472, 487, 496, 501, 578, 585, 657, 665, 675, 693, 699, 719, 720, 723, 724, 725, 726, 728, 741, 751, 759, 761, 769, 774, 781, 808, 810, 824, 827, 841, 843, 847, 848, 868, 904, 914, 921, 924, 930, 931, 932, 945, 947, 952, 969, 976, 980, 997, 1003, 1016, 1019, 1025, 1029, 1037, 1054, 1124, 1131, 1141, 1146, 1151, 1164], "point": [21, 34, 36, 38, 40, 61, 89, 97, 106, 109, 112, 114, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 167, 172, 173, 174, 175, 179, 184, 188, 189, 190, 191, 193, 211, 213, 214, 221, 224, 227, 230, 237, 240, 245, 248, 270, 279, 286, 303, 304, 306, 326, 346, 347, 348, 351, 362, 363, 364, 369, 375, 377, 379, 381, 385, 407, 410, 413, 416, 417, 420, 421, 431, 433, 462, 467, 470, 477, 478, 486, 509, 511, 523, 543, 544, 545, 568, 570, 572, 574, 575, 576, 578, 579, 581, 584, 588, 599, 600, 608, 623, 624, 637, 642, 643, 662, 665, 668, 670, 672, 676, 682, 693, 715, 719, 724, 728, 740, 759, 761, 804, 808, 837, 845, 847, 851, 852, 868, 905, 906, 914, 924, 928, 931, 934, 967, 980, 983, 996, 1000, 1001, 1002, 1004, 1008, 1016, 1042, 1046, 1048, 1051, 1113, 1115, 1117, 1119, 1139, 1141, 1148, 1151, 1156, 1160], "unobvi": [21, 808], "best": [21, 30, 39, 48, 57, 119, 152, 153, 154, 163, 176, 233, 373, 405, 427, 434, 437, 438, 447, 526, 570, 575, 639, 704, 717, 737, 796, 798, 800, 804, 806, 845, 868, 890, 906, 913, 914, 950, 964, 968, 996, 1010, 1016, 1053, 1058, 1060, 1117, 1127], "resourc": [21, 80, 97, 110, 111, 152, 154, 157, 169, 179, 214, 230, 271, 274, 279, 316, 317, 343, 351, 479, 543, 557, 568, 572, 573, 637, 662, 673, 674, 676, 705, 710, 721, 722, 724, 725, 730, 737, 738, 758, 760, 761, 792, 794, 802, 841, 845, 846, 913, 930, 931, 932, 950, 964, 967, 1003, 1056], "leaki": 21, "erron": [21, 434, 1068], "worst": [21, 152, 405, 914, 966, 979, 1159, 1162], "extract": [21, 29, 55, 97, 141, 145, 212, 238, 241, 246, 249, 261, 264, 284, 285, 290, 291, 312, 313, 318, 324, 389, 408, 512, 513, 543, 554, 565, 759, 761, 808, 821, 834, 996, 1021, 1043, 1065, 1099, 1100, 1101, 1102, 1104, 1112], "common": [21, 24, 144, 152, 209, 225, 226, 238, 244, 249, 408, 417, 448, 523, 601, 728, 745, 749, 759, 833, 905, 906, 914, 938, 975, 1005, 1010, 1011, 1012, 1028, 1037, 1038, 1042, 1048, 1052, 1055, 1106, 1114, 1115, 1139, 1162], "hm": [21, 32, 63, 192, 202, 221, 224, 227, 234, 332, 798, 824, 825, 932, 1025, 1110, 1141, 1146, 1148], "end": [21, 23, 32, 37, 42, 106, 146, 151, 154, 155, 157, 159, 162, 184, 185, 190, 191, 196, 200, 204, 224, 225, 227, 228, 230, 240, 244, 247, 250, 264, 265, 286, 292, 299, 304, 331, 332, 369, 372, 376, 397, 413, 425, 429, 430, 431, 433, 436, 437, 440, 470, 492, 493, 501, 502, 505, 506, 507, 557, 560, 572, 596, 598, 600, 601, 602, 604, 605, 607, 608, 609, 611, 612, 614, 618, 621, 625, 626, 632, 649, 665, 693, 696, 700, 707, 713, 714, 715, 717, 722, 723, 736, 737, 800, 806, 808, 824, 851, 852, 853, 868, 896, 900, 901, 912, 914, 930, 931, 932, 934, 940, 956, 975, 1008, 1028, 1032, 1034, 1041, 1044, 1048, 1052, 1056, 1127, 1129, 1131, 1134, 1169, 1172], "sketch": [21, 119, 132, 149, 155, 184, 191, 192, 204, 213, 214, 281, 303, 344, 348, 410, 411, 421, 433, 665, 765, 777, 975], "clearest": 21, "ach": 21, "bad": [21, 43, 120, 148, 151, 154, 161, 176, 184, 209, 215, 231, 232, 234, 243, 244, 259, 280, 281, 302, 316, 386, 429, 433, 447, 589, 655, 705, 716, 723, 741, 760, 761, 776, 788, 813, 816, 925, 926, 951, 953, 957, 958, 979, 998, 1003, 1005, 1018, 1019, 1030, 1037, 1048, 1078, 1106, 1159], "earliest": 21, "noth": [21, 43, 63, 119, 142, 151, 152, 154, 157, 162, 167, 181, 192, 211, 224, 250, 303, 361, 400, 407, 431, 449, 456, 560, 639, 673, 680, 693, 707, 710, 776, 786, 804, 806, 840, 890, 905, 913, 914, 929, 931, 953, 975, 980, 1006, 1013, 1025, 1046, 1048, 1054, 1139, 1146, 1148], "jump": [21, 45, 104, 151, 397, 401, 560, 707, 710, 717, 847, 900, 979, 1114], "outest": 21, "level": [21, 78, 152, 153, 163, 221, 227, 237, 240, 261, 294, 310, 351, 375, 401, 407, 447, 450, 452, 453, 459, 467, 475, 686, 687, 759, 790, 792, 804, 811, 820, 844, 905, 912, 921, 925, 984, 992, 1005, 1013, 1025, 1046, 1056, 1081, 1085, 1115, 1118, 1128, 1134, 1161], "cleanup_stage1": 21, "screenplai": [22, 60, 145, 154, 175, 179, 231, 243, 252, 270, 278, 280, 291, 299, 302, 303, 306, 307, 312, 313, 318, 324, 340, 448, 464, 472, 543, 546, 549, 552, 555, 558, 561, 564, 600, 601, 621, 765, 768, 773, 778, 782, 784, 820, 823, 826, 829, 973, 977, 981, 1049, 1136, 1143, 1147, 1149, 1152], "dies": [23, 160, 161, 166, 169, 170, 171, 179, 185, 195, 196, 200, 208, 215, 232, 234, 240, 241, 244, 340, 345, 358, 1154, 1156, 1157, 1158, 1163, 1169, 1170, 1172, 1176, 1177], "einreichungsunterlagen": 23, "diesem": [23, 161, 195, 1156, 1173], "formular": 23, "projekten": [23, 1170, 1171], "mehrer": [23, 1163], "projektpartn": 23, "muss": [23, 175, 185, 195, 200, 241, 340, 345, 1154, 1156, 1163, 1170], "federf\u00fchrend": 23, "auftreten": 23, "projektleitung": 23, "projektabwicklung": 23, "seiten": 23, "f\u00f6rdergeb": 23, "erfolgtausschlie\u00dflich": 23, "federf\u00fchrenden": 23, "antragstel": 23, "s\u00e4mtlich": 23, "weiterenprojektpartn": 23, "innen": 23, "zus\u00e4tzlich": [23, 160], "anzugeben": 23, "aufteilung": 23, "f\u00f6rdersumm": 23, "erfolgen": [23, 166, 196], "soll": [23, 161, 187, 216, 255, 1153], "punkt": [23, 161, 171, 187, 197, 241], "erfolgreichemf\u00f6rderantrag": 23, "anschluss": 23, "f\u00f6rdervertrag": 23, "erstellt": 23, "derzuerkannten": 23, "\u00fcberweisungen": 23, "f\u00f6rderraten": 23, "anteil": 23, "dieprojektpartn": 23, "fall": [23, 161, 170, 184, 187, 195, 200, 244, 255, 389, 397, 515, 687, 693, 790, 948, 949, 966, 1108, 1128], "allenprojektpartn": 23, "unterschreiben": 23, "verbindlich": 23, "vereinbart": 23, "privatperson": 23, "organis": [23, 213], "uni": 23, "contemporari": 23, "open": [23, 34, 35, 38, 39, 42, 48, 49, 54, 63, 68, 114, 132, 151, 152, 155, 159, 167, 169, 173, 175, 189, 191, 193, 202, 211, 212, 214, 218, 221, 224, 225, 227, 232, 235, 240, 247, 250, 252, 265, 268, 270, 272, 277, 279, 282, 286, 308, 314, 332, 347, 386, 447, 449, 455, 774, 802, 810, 835, 836, 844, 845, 847, 850, 852, 893, 912, 921, 929, 930, 935, 938, 940, 941, 944, 946, 949, 950, 972, 975, 979, 982, 999, 1005, 1006, 1075, 1101, 1103, 1114, 1139, 1154, 1171, 1172], "wer": [23, 160], "unser": [23, 188, 196, 1154], "motiv": [23, 28, 97, 847, 866, 964, 1011, 1012], "300": [23, 171, 173, 185, 221, 224, 227, 232, 234, 240, 244, 247, 265, 286, 292, 308, 314, 332, 363, 365, 367, 383, 407, 595, 596, 597, 598, 599, 601, 602, 603, 604, 618, 781], "zeichen": [23, 234], "lebe": 23, "einerseit": [23, 166], "kleineren": 23, "gr\u00f6\u00dferen": [23, 1171], "andererseit": [23, 166], "haupts\u00e4chlich": [23, 196, 1169], "unternehmen": 23, "halt": [23, 110, 111, 195, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 841, 899, 914], "bringen": [23, 1154], "schulungsunterlagen": [23, 1153], "wartbarkeit": 23, "nichtverf\u00fcgbarkeit": 23, "problem": [23, 45, 57, 80, 107, 114, 119, 140, 152, 159, 168, 171, 173, 175, 176, 182, 184, 185, 188, 189, 191, 193, 204, 208, 213, 230, 232, 238, 252, 257, 259, 270, 274, 277, 278, 280, 281, 289, 294, 295, 303, 306, 310, 311, 316, 317, 326, 347, 358, 386, 397, 407, 408, 411, 425, 431, 433, 449, 454, 478, 493, 537, 543, 578, 592, 605, 637, 640, 664, 737, 743, 754, 760, 761, 808, 847, 907, 968, 992, 994, 998, 1003, 1008, 1010, 1013, 1014, 1025, 1037, 1051, 1101, 1106, 1108, 1112, 1131, 1139, 1140, 1154, 1161, 1162], "darstellt": 23, "wen": 23, "nutzen": [23, 1172], "400": [23, 149, 154, 171, 185, 195, 224, 227, 269, 286, 304, 449, 618, 1063, 1066], "stellen": [23, 166], "kursverlauf": 23, "vorhandenem": 23, "zusammen": [23, 1153], "bereiten": [23, 195], "kursergebniss": 23, "editoren": 23, "kreieren": 23, "warten": 23, "kursmateri": 23, "endbenutz": 23, "konsumieren": 23, "usecas": [23, 925, 1028], "gel\u00f6st": [23, 185], "500": [23, 195, 202, 221, 224, 227, 269, 314, 618, 905, 932, 1063, 1066], "hierarchisch": 23, "gruppierung": 23, "einzelthemen": 23, "zuwenig": 23, "bauen": [23, 1156, 1166, 1175], "aufeinand": [23, 895], "explizit": [23, 169, 179, 185, 195, 255, 282, 1156, 1157, 1173], "abh\u00e4ngigkeitsbeziehungen": [23, 1166], "fehlen": 23, "extrem": [23, 152, 211, 232, 240, 247, 250, 272, 340, 345, 408, 447, 600, 669, 717, 808, 835, 836, 1118, 1154, 1166], "verringert": 23, "zusammenarbeit": [23, 1153], "trainern": 23, "fehlend": [23, 171], "aggregierbarkeit": 23, "bzw": [23, 160, 169, 175, 179, 201, 358, 1163, 1170, 1172], "referenzierbarkeit": 23, "fremdunterlagen": 23, "analog": [23, 185, 975, 1124], "librari": [23, 63, 71, 74, 78, 85, 97, 103, 104, 106, 108, 110, 111, 114, 132, 152, 154, 163, 171, 173, 175, 180, 181, 182, 189, 191, 193, 212, 214, 221, 227, 237, 240, 244, 256, 257, 268, 270, 294, 295, 310, 311, 317, 341, 342, 343, 358, 359, 362, 363, 372, 380, 403, 420, 430, 437, 443, 453, 454, 458, 459, 461, 462, 471, 485, 508, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 525, 532, 551, 565, 566, 610, 616, 620, 628, 629, 630, 632, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 682, 687, 713, 738, 759, 760, 761, 786, 838, 841, 842, 904, 925, 926, 927, 932, 933, 935, 942, 943, 945, 950, 953, 959, 962, 965, 967, 979, 982, 983, 984, 985, 987, 988, 989, 990, 992, 994, 1029, 1031, 1046, 1048, 1051, 1118, 1135, 1148, 1156, 1158, 1160, 1161, 1172, 1174], "anfangen": 23, "geben": [23, 1157, 1158], "trainingsunterlagen": 23, "ging": [23, 160, 358], "funktioniert": [23, 185, 234], "projektergebni": 23, "basiert": [23, 255, 1154, 1157, 1166, 1173], "popul\u00e4ren": 23, "dokumentationstool": 23, "gestaltet": [23, 179, 1153, 1163], "eigentlich": [23, 171, 185, 1154, 1157], "kern": 23, "begleitet": [23, 187], "meinem": [23, 161, 170, 196, 896, 1169], "eigenen": [23, 1163, 1170], "quasi": [23, 175, 179], "spin": [23, 737, 811, 845], "off": [23, 115, 122, 151, 153, 154, 157, 162, 173, 184, 204, 247, 386, 389, 428, 436, 437, 452, 458, 459, 514, 515, 520, 560, 640, 693, 728, 802, 813, 839, 864, 892, 905, 912, 914, 940, 949, 958, 968, 975, 1034, 1052, 1086, 1111, 1164], "anwendbar": [23, 1176], "klarer": 23, "bezug": [23, 241], "f\u00f6rdervoraussetzung": 23, "bitt": [23, 160, 179, 185, 195, 196, 1153, 1169], "gehen": 23, "folgenden": [23, 179, 358, 896], "ausschlie\u00dflich": 23, "jene": 23, "aspekt": [23, 1155, 1163, 1170, 1173], "klaren": 23, "mehrwert": 23, "technologi": [23, 224, 966, 982, 1063], "infrastruktur": [23, 1154, 1163, 1170], "sozial": 23, "gesellschaft": 23, "umwelt": 23, "wirtschaftlich": [23, 187], "wissenschaftlich": 23, "kooperationen": 23, "regionalpolitik": 23, "framework": [23, 78, 169, 179, 188, 214, 230, 463, 522, 912, 914, 1132, 1139, 1140, 1175, 1177], "jeglich": [23, 1163], "art": [23, 32, 45, 994, 1162], "konsistenzgecheckt": 23, "crossreferenc": 23, "webseiten": 23, "hinweg": [23, 196, 1169], "erm\u00f6glicht": [23, 187, 358], "gesellschaftlich": 23, "\u00f6ffentlich": [23, 166, 1153], "verf\u00fcgbarkeit": 23, "erleichterung": 23, "machen": [23, 160, 171, 175, 185, 234, 335, 358, 1154, 1157, 1158, 1163, 1177], "commun": [23, 63, 72, 73, 74, 78, 81, 83, 87, 112, 137, 140, 152, 167, 176, 184, 199, 268, 303, 337, 346, 347, 423, 467, 738, 739, 760, 761, 767, 808, 820, 841, 904, 905, 912, 913, 914, 929, 934, 945, 950, 959, 966, 969, 975, 980, 1014, 1102, 1105, 1122, 1159, 1162, 1164, 1173, 1174], "trainerinnen": 23, "kann": [23, 37, 160, 161, 169, 175, 179, 185, 195, 208, 215, 255, 308, 340, 345, 358, 1153, 1154, 1156, 1158, 1163, 1170, 1171, 1172, 1175, 1177], "sch\u00f6pfen": 23, "trainerinnenn": 23, "gegeneinand": 23, "genau": [23, 169, 171, 185, 335, 896, 1156, 1173, 1175, 1176], "die_der": 23, "adressat_in": 23, "je": [23, 32, 161, 195], "konkret": 23, "eingrenzen": 23, "desto": 23, "dieser": [23, 37, 160, 179, 195, 247, 335, 358, 1153, 1154, 1155, 1163, 1165, 1166, 1172, 1173], "adressat_innen": 23, "ber\u00fccksichtigen": 23, "wahrscheinlich": [23, 175, 1163, 1170], "deshalb": 23, "nachhaltig": 23, "wirkung": 23, "weil": [23, 171, 185, 187, 208, 247, 304, 358, 1154, 1156, 1158], "speziellen": 23, "konzepten": 23, "unterschiedlich": [23, 196, 241, 1169], "zielgruppen": 23, "beziehung": [23, 179], "zueinand": 23, "stehen": [23, 185, 1175], "anbieter_innen": 23, "nachfrager_innen": 23, "drei": [23, 160, 171, 179, 185, 195, 200, 202, 221, 224, 232, 234, 237, 240, 247, 250, 265, 272, 282, 286, 292, 304, 308, 335], "angeben": 23, "m\u00f6glichst": 23, "erheblich": 23, "ihrer": [23, 232, 340, 345, 1163, 1170], "jeweiligen": [23, 1153], "sein": [23, 161, 169, 170, 187, 195, 196, 208, 234, 272, 1154, 1156, 1169, 1170, 1172, 1175, 1176, 1177], "dann": [23, 161, 171, 179, 185, 196, 234, 240, 241, 247, 282, 358, 1154, 1166, 1169, 1177], "einzelnen": 23, "aussieht": [23, 1155], "erst": [23, 179, 195, 208, 234, 241, 247, 265, 304, 335, 1154, 1156], "bestandteil": [23, 1175], "n": [23, 35, 38, 40, 50, 63, 111, 154, 163, 171, 172, 173, 179, 185, 195, 200, 202, 203, 211, 213, 216, 217, 218, 221, 224, 225, 227, 230, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 276, 282, 286, 304, 308, 314, 320, 331, 332, 333, 335, 340, 362, 363, 365, 369, 371, 373, 375, 377, 382, 385, 395, 397, 403, 404, 408, 413, 421, 425, 430, 449, 450, 457, 524, 557, 576, 582, 600, 646, 647, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 670, 672, 687, 761, 786, 822, 841, 845, 855, 865, 868, 881, 897, 899, 900, 914, 926, 928, 929, 930, 931, 932, 938, 939, 941, 966, 972, 976, 979, 982, 988, 994, 998, 1000, 1025, 1026, 1028, 1043, 1045, 1050, 1051, 1056, 1057, 1101, 1103, 1139, 1151], "l\u00f6sen": 23, "wollen": [23, 37, 200, 358, 1158, 1163, 1166, 1170, 1172], "hilfestellung": 23, "abgrenzung": 23, "organisationen": 23, "privatpersonen": 23, "bestimmt": 23, "branch": [23, 50, 54, 61, 112, 144, 155, 158, 167, 271, 274, 401, 442, 443, 751, 781, 808, 810, 820, 912, 914, 1041, 1171, 1177], "gruppen": 23, "staatlich": 23, "verwaltung": 23, "privat": [23, 57, 102, 107, 114, 154, 166, 167, 179, 181, 188, 189, 192, 212, 225, 230, 242, 261, 277, 279, 299, 339, 340, 345, 457, 461, 466, 468, 472, 474, 479, 489, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 511, 551, 557, 566, 570, 572, 574, 575, 577, 578, 579, 581, 583, 593, 608, 609, 626, 636, 638, 639, 651, 662, 665, 668, 669, 671, 672, 675, 676, 687, 689, 690, 691, 693, 695, 696, 699, 700, 701, 702, 708, 709, 710, 723, 724, 725, 728, 729, 737, 739, 745, 747, 749, 751, 761, 802, 837, 838, 843, 857, 863, 904, 921, 1026, 1134, 1151, 1173], "verein": 23, "npo": 23, "wissenschaft": 23, "universit\u00e4t": 23, "fachhochschulen": 23, "richtungen": 23, "regionen": 23, "stadt": [23, 217], "land": [23, 455, 746], "bezirk": 23, "gemeinden": 23, "interessensgruppen": 23, "selbstvermarkter_innen": 23, "landwirtschaft": 23, "handwerk": 23, "u": [23, 32, 34, 35, 36, 38, 42, 53, 59, 62, 114, 134, 154, 157, 162, 172, 182, 185, 188, 190, 196, 213, 224, 228, 232, 234, 237, 240, 262, 269, 286, 306, 385, 416, 441, 725, 777, 783, 818, 845, 853, 864, 865, 867, 868, 892, 905, 912, 914, 933, 970, 979, 982, 992, 1000, 1037, 1039, 1063, 1114, 1118, 1122, 1134, 1139, 1146, 1162, 1169], "altersgrupp": 23, "genderspezifisch": 23, "frauen": 23, "region": [23, 152, 764, 792], "grupp": [23, 200, 349, 896], "sch\u00fcler_innen": 23, "lehrer_innen": 23, "thematisch": 23, "deutsch": [23, 216, 338, 339, 1153], "fl\u00fcchtling": 23, "posit": [23, 29, 63, 112, 159, 185, 188, 189, 191, 193, 195, 200, 208, 212, 221, 228, 232, 237, 238, 240, 247, 250, 261, 264, 271, 274, 276, 278, 280, 281, 284, 286, 290, 292, 296, 299, 302, 303, 306, 307, 308, 314, 326, 371, 408, 421, 560, 601, 608, 617, 618, 741, 761, 868, 905, 913, 929, 930, 934, 975, 1003, 1004, 1007, 1048, 1049, 1051, 1052, 1053, 1104, 1119, 1127, 1141, 1146], "zielgruppentyp": 23, "350": [23, 224, 227, 272, 286, 314, 1063], "bereitet": 23, "vor": [23, 160, 161, 175, 185, 197, 232, 1166, 1175], "lt": [23, 32, 35, 36, 154, 159, 171, 174, 179, 180, 185, 190, 195, 200, 202, 208, 211, 216, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 334, 335, 336, 513, 530, 532, 565, 610, 616, 620, 629, 632, 633, 662, 761], "zielvorgaben": 23, "basierend": [23, 171, 1153, 1158], "existierendem": 23, "f\u00fchrt": [23, 161, 1173], "jederzeit": [23, 166, 175, 358], "\u00fcberblick": [23, 175, 179, 241, 255, 358, 359, 1153, 1161, 1163, 1169, 1170, 1173, 1175], "behaltend": 23, "behandelten": 23, "fragen": [23, 187, 203, 340, 345, 358, 1153, 1163, 1170], "antworten": [23, 187], "info": [23, 162, 269, 270, 437, 441, 442, 443, 449, 450, 452, 575, 724, 783, 913, 953, 983, 984, 1139], "bed\u00fcrfni": [23, 160], "schulungsagenden": 23, "erstellen": [23, 358, 1158, 1163], "zeitaufw\u00e4ndig": 23, "fehlertr\u00e4chtig": 23, "vom": [23, 64, 160, 169, 170, 171, 185, 195, 196, 215, 240, 244, 1163, 1169, 1170, 1177], "erwartet": [23, 161, 185], "w\u00e4hrend": [23, 1153], "einzugehen": [23, 187, 1176], "geplanten": [23, 1153], "verlassen": [23, 830], "birgt": 23, "chao": [23, 866, 1037], "teilnehmerinnen": 23, "\u00fcbersichtlich": 23, "nachbearbeitung": 23, "hinterlassen": [23, 160], "absch\u00e4tzung": 23, "zielgruppengr\u00f6\u00df": 23, "affinem": 23, "background": [23, 163, 256, 257, 259, 316, 317, 663, 667, 693, 705, 732, 758, 760, 761, 783, 846, 913, 951, 960, 966, 1014], "inklus": [23, 172, 185, 195, 208, 1153, 1158, 1163], "betroffen": 23, "eu": [23, 32], "20000": [23, 151, 227], "erkennung": 23, "abstand": 23, "erfordert": [23, 1163], "vgl": [23, 185, 1173, 1176], "frosch": 23, "wassergla": 23, "selbst": [23, 37, 175, 185, 195, 830, 1153, 1154, 1163, 1166, 1172, 1177], "umstellung": 23, "zus\u00e4tzlichen": 23, "bedeutet": [23, 316], "besten": [23, 175, 241, 1156], "einsatz": [23, 1154], "erw\u00e4gung": 23, "ziehen": 23, "angegebenen": 23, "erheblichen": [23, 1156], "bed\u00fcrfnissen": 23, "kenntni": 23, "erlangt": 23, "mitgli": 23, "editor": [23, 30, 63, 167, 184, 326, 893, 1030, 1034, 1113, 1132], "verfasst": 23, "identisch": 23, "obig": 23, "behebt": 23, "inkonsistenzen": 23, "baut": [23, 1154, 1172], "neue": [23, 185, 195, 227, 255, 304, 335, 358, 1173], "verliert": [23, 1177], "aufbaubeziehungen": 23, "verlangt": [23, 1153], "grundlag": 23, "folienmateri": 23, "meist": [23, 1172], "powerpoint": [23, 30], "propriet\u00e4r": 23, "formaten": 23, "praktisch": [23, 171, 1153], "unm\u00f6glich": 23, "macht": [23, 169, 171, 175, 179, 185, 191, 195, 237, 241, 335, 1156, 1163, 1170, 1177], "artefakttypen": 23, "livehack": [23, 24, 60, 114, 145, 171, 177, 179, 188, 189, 196, 215, 228, 230, 231, 243, 252, 257, 259, 260, 268, 271, 278, 280, 285, 291, 296, 299, 302, 303, 306, 307, 312, 313, 318, 324, 340, 358, 448, 464, 471, 543, 759, 761, 773, 810, 1049, 1136, 1143, 1169], "st\u00fcckwerk": 23, "trainerin": 23, "oben": [23, 120, 160, 185, 196, 202, 1169], "zielt": 23, "darauf": [23, 160, 171, 1153, 1156], "transpar": [23, 29, 37, 792, 794, 844, 1119], "wiederzuverwenden": 23, "sodass": [23, 37, 179, 1172, 1177], "aufgebrochen": 23, "schwer": [23, 175, 185, 358, 1163, 1170, 1175], "abzusch\u00e4tzen": 23, "abzielt": 23, "weg": [23, 160, 161, 171, 175, 187, 200, 215, 255, 358, 1154, 1156, 1157, 1158, 1170], "dorthin": 23, "m\u00fcssen": [23, 185, 340, 345, 1163, 1170], "unterst\u00fctzt": [23, 1177], "kursf\u00fchrung": [23, 358], "fragt": [23, 161], "unklarheiten": 23, "weist": [23, 160], "etwaig": 23, "verwandt": [23, 1156], "hin": [23, 358], "plausibl": [23, 154], "realistisch": 23, "bzgl": 23, "kursdauer": 23, "strukturierten": [23, 196], "langweiligen": 23, "tatsachen": 23, "entsprechend": 23, "hunderttausend": 23, "allerd": [23, 185, 187, 1157, 1158, 1172, 1177], "keinen": [23, 160, 304, 1156], "einfluss": 23, "wahl": [23, 1177], "gespr\u00e4ch": 23, "betroffenen": 23, "assoziieren": 23, "metadaten": 23, "setzt": [23, 169, 1154, 1163], "vorau": 23, "beziehungen": 23, "passt": [23, 195, 196, 1169], "ganz": [23, 160, 161, 170, 171, 175, 185, 187, 201, 202, 216, 233, 234, 358, 1157, 1158, 1172], "gut": [23, 160, 161, 185, 196, 358, 676, 1153, 1169], "y": [23, 111, 134, 163, 172, 173, 175, 202, 211, 217, 218, 224, 225, 227, 228, 240, 250, 253, 262, 265, 272, 282, 286, 292, 308, 314, 386, 392, 410, 413, 416, 417, 421, 433, 437, 449, 511, 521, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 579, 581, 583, 585, 586, 593, 600, 608, 647, 668, 669, 670, 672, 687, 689, 690, 691, 708, 719, 728, 776, 777, 808, 809, 841, 855, 868, 870, 881, 887, 912, 913, 914, 988, 996, 1002, 1060, 1063, 1111], "algorithmen": [23, 255, 1158], "automatisch": [23, 1173, 1177], "berechnen": 23, "semiautomatisch": 23, "kursnavig": 23, "nachbereitung": 23, "plaintext": 23, "artefakt": [23, 1158], "text": [23, 27, 39, 40, 60, 148, 162, 173, 184, 187, 192, 193, 200, 212, 213, 218, 225, 232, 234, 252, 255, 258, 265, 267, 286, 288, 382, 456, 761, 838, 900, 904, 931, 982, 1030, 1037, 1043, 1052, 1061, 1084, 1118, 1125, 1130, 1132, 1166], "restrukturierung": 23, "o": [23, 29, 32, 38, 63, 78, 85, 90, 97, 98, 100, 107, 110, 111, 114, 127, 131, 134, 145, 152, 154, 155, 162, 163, 171, 175, 179, 189, 191, 192, 193, 195, 200, 202, 203, 209, 212, 213, 217, 219, 222, 223, 224, 225, 228, 229, 230, 231, 236, 237, 241, 242, 243, 244, 246, 248, 251, 253, 255, 258, 262, 264, 267, 268, 269, 271, 272, 274, 277, 278, 281, 283, 284, 285, 287, 288, 290, 292, 302, 304, 306, 307, 312, 313, 314, 318, 324, 325, 326, 327, 328, 329, 330, 331, 340, 345, 347, 358, 360, 362, 378, 393, 402, 408, 409, 413, 415, 419, 422, 425, 426, 435, 437, 439, 441, 442, 444, 445, 449, 450, 456, 461, 475, 502, 513, 524, 565, 583, 667, 705, 731, 737, 738, 739, 758, 759, 760, 761, 776, 777, 785, 786, 808, 815, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 853, 865, 868, 872, 873, 875, 876, 879, 880, 882, 888, 896, 897, 901, 904, 905, 912, 913, 925, 935, 938, 939, 940, 941, 942, 945, 950, 951, 959, 962, 965, 966, 967, 976, 982, 983, 984, 988, 990, 994, 998, 999, 1000, 1003, 1005, 1007, 1008, 1009, 1013, 1029, 1032, 1035, 1037, 1043, 1051, 1058, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1111, 1119, 1120, 1134, 1139, 1146, 1156, 1163, 1176], "konsistent": 23, "referenzierung": 23, "fremdmateri": 23, "speisekart": 23, "unterst\u00fctzung": 23, "themenauswahl": [23, 1153], "korrekt": [23, 1156], "vorbereitet": [23, 358], "ma\u00dfnahmen": 23, "sicherstellung": 23, "geplant": 23, "beispielsweis": [23, 166, 1176], "rahmen": 23, "webplattform": 23, "entsteht": 23, "erh\u00f6hung": 23, "sichtbarkeit": [23, 1156, 1173], "aktuel": 23, "inhalt": [23, 185, 187, 217, 341, 830, 1153, 1177], "wartung": 23, "performanceverbesserungen": 23, "plane": [23, 173, 175, 1108], "kein": [23, 170, 171, 175, 185, 195, 202, 217, 253, 272, 335, 358, 1171], "impactmein": 23, "sicherzustellen": 23, "erkl\u00e4rung": [23, 209], "erkl\u00e4ren": [23, 1156], "gew\u00fcnscht": [23, 185], "erreicht": [23, 160, 161, 1170], "hatt": [23, 160, 161, 175, 185, 187], "button": [23, 114, 151, 159, 238, 905], "gew\u00e4hlt": [23, 160, 161], "dzugeh\u00f6rig": 23, "textfeld": 23, "l\u00e4sst": [23, 1172], "bearbeiten": 23, "daher": [23, 1177], "konvertiert": 23, "unten": [23, 120, 161, 175, 185, 1154], "beschriebenen": 23, "kan\u00e4len": 23, "promot": [23, 156], "angab": 23, "quellen": 23, "literatur": [23, 213, 580], "lightweight": [23, 142, 167, 184, 188, 204, 238, 240, 252, 668, 726, 729, 1106, 1118, 1159], "daringfirebal": 23, "project": [23, 24, 29, 30, 38, 42, 53, 59, 62, 65, 68, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 134, 142, 148, 152, 153, 157, 158, 159, 164, 171, 173, 175, 181, 184, 188, 191, 198, 203, 212, 231, 235, 238, 241, 268, 271, 278, 285, 317, 344, 345, 351, 353, 358, 359, 429, 436, 440, 448, 450, 451, 452, 455, 456, 458, 460, 463, 464, 465, 471, 511, 512, 521, 524, 584, 586, 587, 731, 761, 808, 847, 903, 905, 907, 912, 913, 924, 942, 982, 983, 984, 997, 998, 1059, 1065, 1092, 1094, 1104, 1105, 1107, 1108, 1112, 1120, 1122, 1136, 1138, 1142, 1143, 1148], "docutil": [23, 32, 34, 35, 36, 38], "sourceforg": 23, "io": [23, 32, 55, 63, 91, 127, 131, 152, 156, 158, 173, 175, 189, 191, 192, 193, 194, 201, 203, 204, 212, 213, 226, 242, 258, 265, 267, 273, 288, 289, 303, 309, 315, 328, 340, 343, 345, 347, 362, 566, 759, 761, 785, 804, 805, 820, 838, 841, 849, 904, 913, 914, 967, 975, 996, 1003, 1056, 1155, 1163, 1165, 1170, 1172, 1176], "generatoren": [23, 175, 242, 358], "staticgen": 23, "learn": [23, 29, 65, 68, 70, 75, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 135, 152, 154, 172, 173, 175, 184, 188, 192, 213, 222, 302, 306, 326, 341, 343, 447, 711, 761, 850, 905, 913, 967, 1029, 1030, 1104, 1108, 1112, 1120, 1141], "moodl": [23, 106, 109, 110, 111, 114, 159, 344, 346, 347, 648, 662, 761, 838, 842, 857, 863, 882, 888, 904, 989, 992], "schoologi": 23, "eduongo": 23, "produkt": 23, "dienstleistungen": 23, "recherch": [23, 175], "hinblick": [23, 1165], "ihnen": [23, 161, 895, 1153, 1163, 1170], "nennen": 23, "beschreiben": 23, "st\u00e4rken": [23, 1156], "schw\u00e4chen": [23, 1158], "konkurrierenden": 23, "relevant": [23, 175, 358, 1176], "anbiet": 23, "ziel": [23, 1154, 1170], "allumfassend": 23, "eh": [23, 32, 185, 195, 200, 208, 234, 240, 244, 247, 292, 314], "vielmehr": 23, "bietet": [23, 166, 169, 1172], "beim": [23, 160, 161, 171, 175, 185, 1156], "verfassen": 23, "kernthema": 23, "zwischen": [23, 169, 185, 195, 202, 208, 358, 1156, 1157, 1158, 1170, 1177], "benutz": [23, 1173], "vorgaben": 23, "existiert": [23, 185, 197], "wald": 23, "dass": [23, 160, 161, 169, 171, 175, 179, 185, 196, 200, 202, 216, 340, 345, 358, 1153, 1156, 1157, 1158, 1163, 1169, 1170, 1173, 1177], "beisteuert": 23, "eben": [23, 166, 169, 195], "\u00fcbergreifend": 23, "definiert": [23, 171, 185, 1153, 1156], "ansatz": 23, "mir": [23, 160, 161, 175, 185, 196, 200, 232, 340, 345, 358, 1156, 1169], "verfolgt": [23, 1170], "essentiel": 23, "gesundheit": 23, "unterlagen": [23, 148, 215, 231, 243, 358], "licht": 23, "lesen": [23, 169, 170, 171, 185, 197, 340, 345], "einig": [23, 161, 172, 187, 358, 1156, 1163], "plugin": [23, 154, 475, 712, 996], "helfen": 23, "lieblo": 23, "halbherzig": 23, "On": [23, 97, 101, 106, 109, 110, 111, 114, 134, 152, 154, 167, 188, 204, 214, 230, 246, 248, 256, 257, 259, 262, 268, 274, 277, 316, 340, 425, 431, 440, 443, 475, 513, 521, 610, 629, 633, 662, 665, 705, 713, 732, 760, 761, 786, 809, 813, 838, 841, 842, 904, 906, 912, 914, 921, 925, 926, 929, 933, 940, 943, 945, 962, 970, 980, 985, 992, 993, 997, 1035, 1122, 1126, 1141, 1159], "zentral": [23, 148], "ergebni": [23, 237], "niemand": 23, "doc": [23, 37, 39, 65, 115, 127, 131, 156, 158, 171, 172, 174, 204, 212, 219, 221, 227, 236, 237, 240, 244, 247, 262, 305, 325, 337, 340, 345, 348, 349, 360, 560, 764, 779, 785, 788, 868, 890, 948, 1051, 1117], "show": [23, 24, 27, 29, 43, 58, 63, 114, 123, 127, 132, 151, 152, 154, 155, 159, 180, 188, 191, 192, 204, 213, 221, 227, 230, 237, 238, 240, 268, 280, 281, 294, 302, 310, 316, 317, 325, 326, 344, 346, 347, 348, 351, 410, 450, 452, 461, 492, 508, 514, 560, 649, 746, 771, 790, 792, 824, 835, 836, 868, 890, 893, 895, 897, 905, 907, 912, 913, 914, 933, 964, 966, 970, 975, 979, 992, 994, 1002, 1041, 1058, 1060, 1111, 1112, 1134, 1141, 1148, 1161], "revealj": 23, "option": [23, 31, 78, 146, 152, 153, 154, 158, 162, 167, 171, 176, 192, 204, 228, 240, 244, 252, 255, 256, 257, 265, 270, 274, 286, 294, 295, 303, 306, 310, 311, 316, 340, 360, 369, 370, 386, 397, 398, 437, 450, 453, 454, 462, 463, 469, 496, 524, 746, 761, 777, 828, 832, 835, 836, 844, 896, 914, 915, 917, 925, 938, 942, 976, 984, 1040, 1058, 1061, 1134, 1141, 1148, 1156, 1161, 1174], "webslid": 23, "tv": [23, 32, 159], "sicht": [23, 170, 241, 1156], "entscheidend": 23, "usp": 23, "vorteilhaft": 23, "unterscheidet": [23, 1156], "600": [23, 221, 227, 618], "kernfeatur": 23, "inbeziehungsetzen": 23, "dessen": [23, 170, 185, 282, 358, 1154, 1158, 1171], "versagen": 23, "implementierung": 23, "solcher": [23, 169, 185], "featur": [23, 29, 42, 46, 55, 56, 78, 80, 112, 114, 132, 157, 159, 169, 180, 185, 188, 189, 191, 193, 198, 203, 212, 221, 227, 230, 237, 238, 240, 241, 243, 244, 283, 316, 342, 358, 359, 435, 439, 444, 445, 447, 448, 450, 639, 664, 667, 674, 681, 692, 706, 716, 717, 721, 725, 730, 738, 757, 758, 760, 761, 800, 808, 905, 913, 914, 934, 966, 976, 983, 984, 1000, 1014, 1015, 1016, 1017, 1021, 1024, 1031, 1043, 1044, 1059, 1062, 1063, 1064, 1065, 1078, 1089, 1092, 1093, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1112, 1116, 1120, 1122, 1124, 1133, 1136, 1138, 1139, 1143, 1154, 1156, 1157, 1159, 1163, 1170], "indem": [23, 195, 341, 1163], "foku": [23, 358], "schulbetrieb": 23, "legen": [23, 895], "ferner": 23, "schwere": 23, "abh\u00e4ngigkeiten": [23, 1166], "fett": [23, 185, 202], "datenbanken": [23, 208, 358], "webserv": [23, 913], "hintergrund": [23, 195], "redaktionel": 23, "arbeit": [23, 175, 1154], "offlin": 23, "laptop": [23, 153, 155, 162, 924], "zug": 23, "erledigen": [23, 1154], "einschr\u00e4nkung": 23, "geserv": 23, "erarbeitet": [23, 1153], "sinn": [23, 179, 1156], "prinzip": [23, 1173, 1175, 1177], "kostenlo": 23, "genutzt": [23, 169], "weiterentwickelt": [23, 1158, 1163], "f\u00f6rderbedingungen": 23, "projektseit": 23, "ver\u00f6ffentlichen": 23, "nachvollziehbar": 23, "strukturieren": 23, "f\u00f6rderzusag": 23, "hinwei": 23, "verpflichtend": 23, "gesondert": 23, "erw\u00e4hnen": 23, "projektzwischenbericht": 23, "projektzusammenfassung": 23, "projektendbericht": 23, "entwicklerdokument": 23, "anwenderdokument": 23, "dienstleistungsbeschreibung": 23, "abh\u00e4ngig": 23, "dokument": [23, 170, 185, 196, 217, 232, 244, 304, 335, 1171], "externkommunik": 23, "erreichung": 23, "nachhaltigkeit": 23, "projektergebnistyp": 23, "haupteigenschaften": 23, "funktionalit\u00e4t": [23, 185], "sourcecod": [23, 169], "bestehend": 23, "unabh\u00e4ngigem": 23, "unitgetestetem": 23, "core": [23, 59, 62, 151, 152, 154, 155, 184, 187, 191, 196, 209, 224, 235, 238, 240, 247, 250, 265, 269, 272, 282, 286, 308, 314, 363, 375, 420, 464, 465, 472, 477, 491, 492, 523, 575, 580, 673, 703, 723, 779, 783, 808, 845, 883, 899, 964, 967, 968, 979, 980, 996, 1063, 1106, 1111, 1124, 1125, 1127, 1128, 1139, 1174], "reih": [23, 166, 179, 187], "direct": [23, 37, 39, 63, 114, 131, 149, 152, 213, 271, 274, 326, 397, 408, 443, 456, 583, 729, 767, 844, 901, 928, 930, 946, 948, 949, 984, 998, 1025, 1111, 1119, 1128, 1161, 1164], "generierten": 23, "kursagenda": 23, "graphen": 23, "lizenz": 23, "gpl": [23, 575, 724, 764], "pypi": [23, 135, 148, 184, 188, 203, 219, 235, 261, 1133, 1134, 1139], "installierbar": 23, "paket": [23, 169, 1154], "generiert": [23, 185], "readthedoc": [23, 32, 39], "gehostet": 23, "verf\u00fcgbar": [23, 968, 1166], "obigen": 23, "bisherigen": [23, 1158], "aktuellen": [23, 195], "bereich": [23, 175, 358], "umfeld": 23, "projektantrag": 23, "bisher": [23, 148, 1153], "softwarebasi": 23, "grundlegend": [23, 197, 1158, 1163, 1170, 1172, 1175], "semiprofessionel": 23, "visualisierung": 23, "plan": [23, 42, 61, 151, 175, 184, 219, 228, 238, 303, 339, 340, 344, 348, 354, 447, 563, 673, 731, 808, 1139, 1146], "kurz": [23, 160, 161, 185, 187, 196, 201, 216, 241, 1155, 1169, 1172], "lebensl\u00e4uf": 23, "projektbeteiligten": 23, "sowi": [23, 1166], "ver\u00f6ffentlichungen": 23, "b\u00fccher": 23, "fachartikel": 23, "patent": 23, "vortr\u00e4g": 23, "gebiet": [23, 161, 1175], "projektinhalt": 23, "verdeutlichen": [23, 1154], "teamleitung": 23, "softwareprojekt": 23, "stefan": [23, 170], "walkner": 23, "1983": [23, 566], "hallein": 23, "master": [23, 61, 134, 155, 158, 167, 341, 342, 804, 808, 897, 909], "scienc": [23, 28, 78, 159, 173, 184, 188, 193, 222, 291, 305, 342, 566, 619, 1031, 1110, 1111, 1112, 1113], "salzburg": 23, "consult": [23, 59, 62, 149, 152, 165, 203, 221, 227, 237, 240, 244, 346, 472], "isamberth": 23, "adnet": 23, "2000": [23, 208, 211, 227, 232, 244, 265, 449, 475, 968], "2002": [23, 227, 575, 724], "divers": [23, 176, 1155], "2005": [23, 566], "2007": 23, "entwicklungsleit": 23, "nextsens": 23, "2016": [23, 187, 188, 209, 212, 227, 235, 261, 268, 276, 285, 307, 1106], "programmiererfahrung": [23, 1163, 1170, 1177], "bash": [23, 99, 114, 149, 159, 168, 192, 202, 204, 224, 232, 240, 247, 250, 258, 265, 267, 268, 272, 279, 282, 286, 288, 308, 314, 340, 341, 342, 345, 347, 359, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 715, 718, 738, 759, 760, 761, 831, 835, 836, 837, 838, 840, 841, 842, 843, 845, 846, 849, 850, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 893, 898, 899, 904, 927, 930, 933, 935, 937, 940, 943, 945, 946, 959, 961, 962, 965, 967, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 996, 1003, 1084, 1154, 1165], "davon": [23, 160, 171, 1156, 1175], "teamleit": 23, "m\u00f6chten": [23, 1177], "ggf": 23, "kennenlernen": 23, "knackig": [23, 148], "darstellung": 23, "handelnden": 23, "personen": 23, "sendung": 23, "minuten": [23, 896], "millionen": 23, "ihren": [23, 185, 197], "antrag": 23, "nochmal": 23, "vorgelesen": 23, "bekommen": [23, 179, 358, 1153, 1166], "un": [23, 179, 187, 358, 786, 892, 1025, 1154], "hintergrundmusik": 23, "windger\u00e4usch": 23, "gerad": [23, 161, 195, 196, 358, 1156, 1169], "f\u00f6rdern": 23, "sollen": 23, "animiert": 23, "produktvideo": 23, "interessieren": 23, "sicher": [23, 171, 175], "mindesten": [23, 171], "vier": [23, 171, 185, 195, 200, 202, 217, 221, 224, 232, 234, 237, 244, 250, 262, 265, 269, 272, 282, 292, 304, 308, 320, 335, 1163, 1176], "monat": 23, "einreichschluss": 23, "uneingeschr\u00e4nkt": 23, "aufrufbar": 23, "youtu": [23, 718, 722], "hobyb1zukdi": 23, "projektrisiken": 23, "sehen": [23, 161], "wenig": [23, 170, 185, 255, 358, 1154], "pflegen": 23, "frontalen": 23, "vortragsstil": 23, "starker": 23, "paradigmenwechsel": 23, "wechsel": 23, "jahrelang": 23, "gewohnten": 23, "verfahrensweisen": 23, "abrupt": 23, "gro\u00dfer": 23, "monolithisch": 23, "zerhacken": 23, "welchen": 23, "bewerten": 23, "messen": 23, "zielerreichung": 23, "kriterium": 23, "arbeitserleichterung": 23, "minimal": [23, 185], "erfolg": [23, 1156], "mindestkriterien": 23, "positiven": 23, "projekterfolg": 23, "jedenfal": 23, "abgedeckt": 23, "ausgezeichnet": 23, "kriterien": [23, 166, 179, 896], "angestrebten": 23, "ausgezeichneten": 23, "anerkennen": 23, "gesteigerten": 23, "effekt": [23, 185, 196, 1169, 1177], "bekundet": 23, "medien": [23, 1176], "berichtet": 23, "migrat": [23, 179], "zehn": [23, 195], "migrieren": 23, "verwenden": [23, 166, 179, 185, 191, 195, 200, 1176], "untereinand": 23, "zutun": 23, "zusammenzuarbeiten": 23, "kooperationspartner_innen": 23, "dienstleister_innen": 23, "mitwirkend": 23, "zielgruppenvertreter_innen": 23, "werbeagentur": 23, "schaar": 23, "logo": 23, "webdesign": 23, "wof\u00fcr": 23, "arbeitsstunden": 23, "geld": 23, "allem": [23, 160, 175, 185, 358, 1175], "eingesetzt": [23, 1154, 1171], "basisarbeit": 23, "workflow": [23, 112, 179, 213, 228, 781, 976, 1171], "datenstrukturen": [23, 197, 215, 236, 1158], "zeitgem\u00e4\u00df": 23, "interakt": [23, 1056], "know": [23, 42, 59, 62, 65, 69, 80, 84, 132, 149, 151, 152, 153, 154, 157, 158, 159, 167, 172, 173, 176, 180, 181, 184, 188, 192, 203, 204, 211, 214, 271, 274, 278, 303, 342, 373, 375, 381, 386, 403, 413, 425, 427, 429, 431, 435, 436, 437, 439, 443, 444, 445, 447, 456, 462, 466, 467, 479, 516, 524, 551, 567, 569, 575, 577, 581, 600, 637, 640, 643, 664, 665, 667, 676, 678, 680, 703, 705, 714, 723, 725, 729, 739, 758, 760, 761, 763, 779, 786, 808, 847, 868, 905, 908, 912, 914, 925, 930, 932, 941, 951, 979, 1000, 1008, 1013, 1014, 1025, 1030, 1033, 1036, 1037, 1056, 1063, 1101, 1105, 1139, 1164], "welchem": [23, 171], "umfang": 23, "sachressourcen": 23, "ben\u00f6tigt": [23, 196, 197, 1169], "zugekauft": 23, "backendprogrammierung": 23, "programmiersprach": [23, 1155, 1158, 1170, 1172], "200": [23, 148, 149, 171, 173, 185, 202, 204, 211, 218, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 269, 276, 286, 292, 304, 308, 314, 320, 332, 337, 595, 596, 597, 598, 599, 601, 602, 603, 604, 618, 672, 786, 966, 1080], "stunden": 23, "webprogrammierung": 23, "css": [23, 149, 150], "150": [23, 171, 185, 195, 202, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 665], "kreativarbeit": 23, "erreichen": [23, 1170, 1173], "pers\u00f6nlich": [23, 358], "freund": 23, "ebenfal": [23, 1171], "t\u00e4tig": 23, "mich": [23, 160, 175, 195, 203, 358, 1153], "ermutigt": 23, "\u00fcberhaupt": [23, 1163, 1170, 1177], "starten": [23, 1175], "repr\u00e4sent": 23, "post": [23, 66, 93, 148, 152, 154, 156, 157, 158, 159, 162, 213, 228, 277, 373, 387, 471, 567, 905, 974, 976, 979, 1105], "facebookseit": 23, "relevanten": 23, "foren": 23, "linkedin": 23, "typisch": [23, 196, 1156], "projektbeginn": 23, "abschluss": [23, 161, 340], "oktob": 23, "projektdau": 23, "\u00fcberschreiten": 23, "mitarbeiter_innen": 23, "stundenanzahl": 23, "jeweilig": 23, "stundens\u00e4tz": 23, "senior": 23, "junior": 23, "programmierer_in": 23, "designer_in": 23, "contentmanager_in": 23, "projektmanager_in": 23, "assistenz": 23, "administr": [23, 159, 845, 912, 921, 928, 967], "sachbearbeiter_in": 23, "social": [23, 45, 467, 474, 478, 491, 492, 493, 496, 502, 505, 506, 507], "media": [23, 78, 169, 808, 913], "spzialist_in": 23, "firmeneigent\u00fcmer_innen": 23, "gesellschafter_innen": 23, "vereinsfunktion\u00e4r_innen": 23, "betr\u00e4gt": 23, "f\u00f6rderbar": 23, "stundensatz": 23, "brutto": 23, "nachweislich": 23, "angestellt": 23, "projektmitarbeiter_innen": 23, "errechnet": 23, "vollzeitvertrag": 23, "jahresstundenteil": 23, "1720": [23, 227], "teilzeitbesch\u00e4ftigten": 23, "aliquot": 23, "reduziert": [23, 175], "dienstgeberanteil": 23, "faktor": 23, "ber\u00fccksichtigt": 23, "kalkul": 23, "jahresbruttogehalt": 23, "hohe": 23, "risiko": 23, "h\u00f6herer": 23, "eigenmittelanteil": 23, "bedingung": 23, "festgelegt": 23, "erh\u00f6hen": 23, "gemeinkosten": 23, "gef\u00f6rdert": 23, "antr\u00e4gen": 23, "diplomarbeiten": 23, "betrag": 23, "8000": [23, 227], "frontendprogrammierung": 23, "4500": [23, 227], "sachkosten": 23, "projektbedingt": 23, "betriebskosten": 23, "unmittelbar": 23, "projektt\u00e4tigkeit": 23, "entstehen": [23, 332], "leistungen": 23, "reisen": 23, "gliedern": 23, "rechnung": [23, 161, 269], "enthalten": 23, "umsatzsteu": 23, "darf": [23, 340], "kostenabrechnung": 23, "f\u00f6rdernehmer_in": 23, "vorsteuerabzugsberechtigt": 23, "13500": [23, 227], "beantragt": 23, "differenz": [23, 247], "aufgliedern": 23, "eigenmittel": 23, "f\u00f6rderungseinrichtungen": 23, "fremdmittel": 23, "kredit": 23, "leas": 23, "pro": [23, 188, 745, 896, 999], "bono": 23, "beitrag": 23, "restfinanzierung": 23, "gesamtbetrag": 23, "ber\u00fccksichtigten": 23, "einzelkosten": 23, "achtung": 23, "gesamtprojektkosten": 23, "h\u00f6her": 23, "auszuf\u00fcllen": 23, "leer": [23, 202, 208, 216, 272], "bleiben": [23, 161, 185, 195, 1163, 1170, 1173], "reich": [23, 185], "nein": [23, 196, 202, 208, 253, 262, 320, 1169], "neben": [23, 175], "antr\u00e4g": 23, "oderstipendium": 23, "laufenden": 23, "call": [23, 32, 42, 50, 63, 66, 110, 111, 120, 131, 148, 151, 152, 153, 154, 155, 157, 162, 169, 172, 174, 182, 188, 190, 211, 219, 221, 227, 232, 235, 237, 242, 244, 249, 250, 253, 268, 270, 272, 285, 286, 294, 303, 308, 310, 340, 345, 347, 358, 362, 369, 373, 374, 377, 388, 404, 406, 410, 416, 417, 420, 430, 433, 434, 442, 450, 453, 465, 472, 476, 491, 492, 493, 509, 513, 518, 521, 522, 524, 525, 537, 551, 565, 569, 572, 575, 577, 581, 590, 636, 637, 640, 642, 643, 647, 649, 654, 661, 669, 670, 678, 682, 693, 696, 699, 700, 701, 702, 712, 715, 723, 728, 729, 737, 738, 739, 741, 745, 760, 761, 762, 776, 786, 788, 790, 794, 796, 798, 800, 802, 804, 806, 808, 813, 816, 822, 827, 828, 834, 838, 841, 842, 843, 844, 846, 848, 851, 852, 865, 868, 904, 908, 916, 926, 927, 930, 931, 932, 933, 935, 937, 943, 944, 945, 950, 951, 958, 959, 961, 962, 965, 966, 967, 976, 979, 980, 982, 984, 1001, 1003, 1004, 1005, 1010, 1016, 1018, 1019, 1020, 1022, 1023, 1025, 1026, 1027, 1047, 1048, 1052, 1054, 1057, 1058, 1063, 1081, 1085, 1106, 1111, 1119, 1122, 1127, 1128, 1140, 1141, 1142, 1161, 1165, 1173, 1174, 1176], "weiteren": 23, "stipendium": 23, "imlaufenden": 23, "habe": [23, 160, 161, 170, 175, 191, 320, 358], "zuge": 23, "projektantragsstellung": 23, "rundschreiben": 23, "expert": [23, 28, 156, 157, 162, 524, 847, 868, 914, 1110], "group": [23, 29, 101, 102, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 145, 167, 172, 184, 189, 191, 200, 203, 204, 211, 217, 224, 232, 241, 244, 250, 253, 265, 279, 286, 289, 292, 314, 340, 353, 354, 358, 369, 394, 437, 438, 513, 543, 761, 808, 835, 836, 838, 841, 842, 843, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 890, 894, 895, 896, 897, 901, 904, 912, 924, 925, 933, 934, 935, 940, 943, 945, 959, 962, 967, 980, 1003, 1084, 1139], "wirtschaftkamm": 23, "nehmen": [23, 161, 1155], "larg": [24, 30, 38, 78, 154, 157, 159, 184, 203, 204, 213, 224, 230, 271, 274, 416, 425, 427, 431, 437, 438, 477, 702, 711, 759, 802, 808, 982, 1006, 1008, 1010, 1030, 1037, 1063, 1084, 1120, 1124, 1128, 1146], "amount": [24, 106, 110, 111, 152, 153, 154, 157, 163, 184, 191, 219, 269, 270, 437, 449, 580, 702, 703, 839, 841, 925, 942, 1030], "pdf": [24, 37, 177, 179, 184, 188, 191, 192, 194, 244, 258, 267, 268, 288, 289, 311, 339, 340, 343, 345, 348, 359, 868, 890, 891, 914, 946, 984, 1078, 1155, 1156, 1157, 1165, 1166, 1172, 1173, 1175, 1176, 1177], "Not": [24, 43, 47, 53, 80, 109, 154, 155, 156, 159, 162, 184, 187, 188, 228, 230, 231, 232, 245, 254, 281, 285, 377, 386, 408, 420, 423, 425, 431, 447, 450, 513, 530, 532, 565, 572, 574, 576, 581, 582, 650, 662, 682, 693, 697, 699, 700, 701, 719, 726, 729, 735, 740, 759, 761, 771, 779, 786, 790, 792, 906, 944, 964, 966, 968, 970, 980, 1003, 1005, 1010, 1011, 1012, 1013, 1023, 1025, 1037, 1046, 1051, 1106, 1110, 1115, 1129, 1131, 1147, 1159], "satisfi": [24, 32, 188, 466, 582, 670, 682, 715], "colleagu": [24, 28, 163, 204, 427, 639, 1008, 1025, 1037], "aren": [24, 149, 234, 244, 678, 869, 958, 968], "either": [24, 39, 42, 43, 152, 154, 162, 163, 268, 271, 274, 425, 492, 665, 673, 676, 737, 835, 836, 865, 868, 900, 914, 1005, 1072, 1122, 1159], "nobodi": [24, 43, 152, 154, 173, 184, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 428, 430, 567, 608, 680, 763, 835, 836, 845, 860, 862, 868, 869, 921, 929, 1058, 1112, 1142, 1148], "doe": [24, 38, 45, 48, 49, 61, 69, 78, 83, 84, 110, 111, 112, 114, 132, 148, 151, 152, 153, 156, 157, 158, 159, 162, 163, 167, 172, 180, 184, 188, 190, 202, 211, 214, 227, 244, 247, 253, 271, 272, 274, 277, 279, 281, 303, 316, 320, 340, 351, 367, 373, 381, 385, 386, 387, 388, 395, 404, 405, 414, 417, 420, 421, 423, 425, 427, 429, 431, 436, 437, 438, 441, 442, 443, 447, 449, 450, 451, 455, 461, 462, 465, 467, 470, 475, 479, 487, 489, 491, 517, 518, 519, 520, 521, 524, 525, 548, 557, 560, 567, 568, 569, 572, 575, 577, 578, 580, 583, 606, 613, 621, 627, 636, 639, 640, 646, 647, 654, 665, 670, 671, 673, 680, 682, 702, 704, 712, 713, 715, 719, 723, 724, 725, 728, 729, 731, 735, 736, 741, 757, 759, 771, 772, 776, 777, 779, 786, 800, 808, 813, 824, 834, 843, 847, 848, 850, 853, 901, 905, 912, 913, 914, 925, 930, 931, 933, 937, 940, 951, 955, 958, 964, 966, 967, 976, 980, 982, 983, 984, 985, 990, 994, 998, 999, 1001, 1003, 1004, 1005, 1006, 1008, 1010, 1019, 1023, 1025, 1026, 1030, 1033, 1036, 1054, 1055, 1056, 1075, 1083, 1085, 1112, 1114, 1115, 1117, 1124, 1125, 1128, 1129, 1130, 1132, 1134, 1139, 1159, 1161], "even": [24, 29, 59, 62, 78, 112, 140, 152, 153, 154, 159, 163, 173, 174, 184, 188, 191, 192, 196, 198, 203, 209, 211, 212, 214, 215, 224, 228, 231, 232, 235, 238, 241, 243, 244, 246, 249, 250, 261, 271, 274, 285, 286, 304, 307, 314, 404, 413, 427, 433, 437, 465, 470, 566, 574, 577, 623, 670, 712, 715, 722, 731, 759, 761, 800, 808, 845, 864, 905, 913, 930, 931, 964, 966, 967, 983, 1002, 1014, 1025, 1051, 1054, 1065, 1068, 1069, 1104, 1106, 1127, 1134, 1141, 1161, 1169], "tech": [24, 45, 151], "although": [24, 29, 78, 127, 131, 152, 154, 158, 163, 174, 184, 190, 214, 234, 244, 358, 521, 665, 666, 707, 729, 847, 850, 921, 1001, 1006, 1063, 1112], "gain": [24, 159, 271, 274, 437, 808, 847], "incred": 24, "momentum": 24, "expect": [24, 38, 50, 151, 154, 200, 221, 227, 228, 237, 240, 247, 272, 286, 304, 306, 308, 414, 452, 467, 510, 575, 640, 693, 702, 715, 781, 792, 905, 913, 914, 953, 970, 979, 1025, 1035, 1048, 1078, 1088, 1111, 1145, 1146, 1149], "context": [24, 29, 59, 62, 110, 111, 152, 173, 176, 188, 191, 193, 195, 202, 233, 237, 238, 240, 244, 247, 253, 261, 265, 270, 280, 281, 282, 285, 292, 296, 299, 302, 303, 306, 307, 314, 358, 424, 486, 487, 501, 569, 575, 703, 724, 759, 761, 770, 775, 778, 780, 785, 788, 789, 790, 791, 794, 795, 799, 800, 801, 803, 804, 805, 812, 813, 814, 816, 817, 818, 819, 822, 823, 826, 828, 829, 841, 845, 904, 905, 928, 968, 979, 980, 1007, 1016, 1104, 1115], "defin": [24, 53, 115, 119, 122, 123, 127, 130, 132, 145, 155, 172, 174, 189, 191, 193, 195, 200, 208, 211, 212, 214, 221, 225, 227, 230, 234, 237, 240, 244, 252, 254, 265, 276, 286, 303, 304, 316, 320, 335, 346, 367, 372, 377, 382, 383, 386, 403, 404, 405, 406, 407, 408, 421, 429, 430, 431, 433, 437, 450, 451, 456, 457, 458, 475, 479, 487, 508, 509, 521, 543, 551, 568, 569, 570, 572, 574, 575, 577, 578, 581, 582, 583, 590, 593, 614, 618, 639, 646, 665, 666, 675, 676, 677, 678, 679, 682, 702, 707, 711, 720, 723, 728, 729, 752, 767, 769, 781, 845, 865, 905, 906, 914, 925, 932, 950, 972, 982, 984, 998, 1000, 1004, 1006, 1008, 1020, 1025, 1037, 1047, 1102, 1115, 1119, 1151, 1159, 1161, 1164], "solv": [24, 45, 80, 89, 114, 149, 152, 153, 182, 184, 188, 189, 191, 193, 204, 209, 222, 230, 235, 238, 249, 252, 274, 278, 285, 289, 291, 294, 306, 310, 326, 407, 449, 458, 664, 738, 743, 746, 760, 761, 808, 847, 904, 945, 959, 992, 994, 996, 1025, 1101, 1106, 1112, 1161, 1162], "provid": [24, 27, 37, 58, 65, 68, 152, 154, 155, 156, 158, 159, 162, 163, 167, 180, 221, 227, 228, 237, 240, 244, 278, 294, 310, 423, 452, 457, 458, 467, 478, 486, 639, 702, 729, 808, 844, 847, 887, 913, 914, 921, 935, 967, 976, 1008, 1017, 1035, 1048, 1111, 1133, 1141, 1161], "depth": [24, 184, 188, 209, 221, 227, 237, 238, 240, 427, 727, 1010, 1106, 1110, 1111], "repres": [24, 152, 154, 176, 221, 227, 237, 240, 244, 265, 276, 326, 436, 470, 487, 489, 576, 759, 779, 804, 841, 844, 912, 914, 942, 1037, 1063, 1101, 1105, 1124, 1131, 1164], "own": [24, 28, 40, 43, 65, 110, 111, 152, 153, 155, 156, 162, 167, 180, 184, 230, 254, 259, 268, 278, 303, 316, 317, 427, 433, 448, 462, 470, 487, 492, 556, 557, 566, 656, 657, 659, 660, 674, 678, 681, 693, 703, 705, 717, 725, 740, 759, 760, 761, 808, 841, 843, 844, 853, 855, 856, 864, 865, 887, 897, 912, 913, 925, 932, 950, 955, 966, 967, 979, 998, 1005, 1022, 1027, 1028, 1030, 1113, 1146, 1161, 1162, 1164], "yield": [24, 29, 171, 172, 185, 188, 189, 191, 200, 212, 219, 225, 229, 231, 233, 234, 240, 244, 249, 251, 261, 264, 265, 272, 280, 281, 282, 285, 286, 291, 293, 304, 307, 308, 314, 408, 477, 486, 693, 696, 699, 700, 701, 761, 1003, 1007, 1009, 1010, 1012, 1031, 1041, 1062, 1063, 1064, 1065, 1078, 1089, 1104, 1116], "multipl": [24, 35, 36, 59, 62, 76, 106, 110, 111, 152, 153, 155, 169, 184, 188, 191, 211, 212, 213, 225, 227, 244, 279, 303, 363, 365, 369, 370, 373, 382, 384, 387, 396, 403, 407, 425, 430, 443, 448, 455, 487, 501, 514, 569, 582, 640, 647, 660, 687, 693, 715, 717, 724, 732, 735, 739, 740, 759, 761, 777, 779, 785, 789, 790, 798, 799, 800, 808, 810, 812, 813, 816, 817, 823, 826, 829, 841, 844, 845, 848, 850, 855, 856, 901, 904, 913, 934, 950, 955, 975, 988, 1025, 1036, 1037, 1050, 1051, 1056, 1106, 1131], "artifact": [24, 158, 162, 176, 181, 294, 310, 443, 769, 982, 983, 984, 994, 1148, 1161], "complet": [24, 42, 63, 78, 114, 115, 131, 148, 151, 152, 173, 184, 192, 200, 209, 222, 225, 228, 235, 249, 250, 252, 279, 285, 291, 296, 303, 316, 325, 326, 407, 424, 437, 450, 462, 514, 523, 568, 569, 643, 712, 727, 759, 802, 808, 835, 836, 846, 908, 914, 929, 966, 1003, 1007, 1029, 1030, 1106, 1111, 1112, 1114, 1120, 1122, 1133, 1134, 1151, 1159], "prepar": [27, 112, 114, 130, 148, 151, 184, 241, 340, 358, 471, 512, 543, 605, 642, 975, 999, 1102, 1111, 1140], "base": [27, 29, 30, 42, 45, 53, 78, 80, 97, 107, 114, 127, 132, 144, 152, 154, 155, 167, 174, 179, 184, 185, 188, 191, 192, 195, 199, 202, 204, 214, 228, 230, 233, 237, 238, 242, 247, 249, 255, 262, 265, 270, 272, 276, 277, 278, 279, 280, 281, 286, 291, 302, 303, 304, 306, 307, 308, 314, 317, 320, 336, 340, 344, 351, 373, 381, 408, 425, 443, 448, 449, 467, 471, 476, 477, 479, 486, 511, 523, 527, 543, 554, 596, 598, 599, 600, 601, 603, 604, 608, 640, 642, 643, 645, 687, 704, 705, 712, 717, 724, 728, 740, 745, 747, 749, 751, 755, 758, 760, 761, 781, 788, 792, 804, 808, 810, 859, 861, 901, 905, 964, 976, 980, 982, 983, 996, 997, 999, 1007, 1014, 1016, 1021, 1022, 1062, 1068, 1084, 1104, 1113, 1114, 1128, 1158, 1159, 1162], "exist": [27, 38, 46, 47, 53, 55, 56, 109, 110, 111, 145, 148, 158, 163, 192, 204, 211, 277, 281, 325, 337, 340, 343, 425, 447, 449, 465, 470, 490, 493, 513, 524, 530, 532, 565, 575, 623, 658, 660, 669, 723, 759, 761, 808, 835, 836, 841, 843, 850, 859, 861, 870, 874, 875, 887, 904, 912, 914, 925, 930, 934, 940, 943, 945, 962, 969, 976, 994, 998, 999, 1004, 1005, 1014, 1019, 1054, 1056, 1074, 1115, 1123, 1124, 1134, 1139, 1141], "navig": [27, 1131], "through": [27, 34, 38, 61, 73, 78, 104, 149, 151, 152, 154, 159, 163, 167, 180, 184, 188, 190, 193, 204, 212, 213, 214, 219, 225, 278, 280, 281, 296, 299, 302, 307, 347, 351, 358, 377, 397, 416, 436, 440, 453, 462, 493, 515, 518, 584, 586, 587, 636, 637, 640, 643, 665, 680, 682, 707, 715, 719, 725, 729, 779, 806, 839, 847, 895, 905, 913, 914, 923, 976, 979, 980, 1005, 1010, 1013, 1028, 1030, 1033, 1068, 1113, 1159, 1160, 1164], "deviat": [27, 159, 172, 180, 189, 213, 244, 358, 808], "after": [27, 43, 148, 149, 152, 153, 154, 159, 162, 172, 181, 184, 191, 204, 211, 221, 227, 237, 240, 243, 244, 250, 265, 270, 277, 279, 286, 314, 326, 365, 373, 374, 407, 427, 434, 453, 455, 491, 492, 515, 522, 574, 577, 590, 625, 673, 675, 676, 678, 687, 693, 740, 759, 786, 790, 796, 848, 851, 868, 869, 901, 912, 952, 970, 975, 976, 979, 982, 1001, 1003, 1005, 1030, 1031, 1035, 1071, 1084, 1102, 1110, 1119, 1131, 1140, 1141, 1146], "writeup": [27, 163, 994], "what": [27, 28, 43, 44, 46, 47, 48, 51, 55, 56, 57, 58, 59, 62, 65, 69, 78, 83, 86, 87, 97, 98, 99, 104, 107, 114, 119, 120, 127, 132, 149, 151, 152, 153, 154, 155, 156, 157, 158, 163, 167, 171, 172, 173, 174, 175, 176, 178, 180, 184, 185, 188, 189, 190, 191, 192, 193, 194, 203, 211, 213, 214, 228, 229, 230, 239, 244, 252, 258, 268, 271, 274, 278, 280, 281, 294, 299, 302, 310, 314, 316, 317, 325, 326, 332, 340, 343, 345, 347, 348, 351, 362, 370, 375, 385, 386, 388, 401, 410, 413, 420, 423, 425, 427, 428, 431, 432, 433, 437, 441, 443, 448, 449, 452, 457, 459, 466, 468, 470, 491, 492, 502, 508, 510, 519, 522, 543, 544, 547, 550, 553, 556, 559, 560, 562, 572, 575, 577, 578, 579, 580, 581, 583, 590, 593, 600, 636, 643, 652, 670, 673, 676, 682, 687, 693, 703, 714, 715, 723, 724, 725, 729, 732, 736, 738, 739, 745, 757, 759, 760, 761, 769, 772, 776, 779, 781, 786, 804, 811, 816, 821, 834, 835, 836, 838, 839, 841, 842, 844, 845, 847, 848, 850, 852, 853, 854, 857, 858, 859, 860, 861, 862, 863, 868, 883, 884, 886, 904, 905, 912, 913, 914, 916, 917, 918, 919, 920, 931, 932, 938, 939, 940, 941, 943, 945, 950, 951, 952, 953, 954, 959, 962, 965, 967, 968, 970, 971, 974, 975, 976, 978, 980, 983, 992, 993, 997, 999, 1000, 1001, 1003, 1005, 1007, 1008, 1011, 1012, 1016, 1017, 1025, 1029, 1030, 1048, 1054, 1058, 1063, 1066, 1074, 1101, 1105, 1113, 1115, 1122, 1131, 1139, 1141, 1145, 1146, 1148, 1150, 1161, 1164], "collect": [27, 29, 148, 151, 153, 196, 203, 212, 218, 219, 236, 238, 239, 240, 252, 261, 263, 270, 278, 280, 281, 285, 296, 299, 302, 303, 306, 307, 325, 436, 443, 554, 600, 715, 724, 736, 761, 808, 839, 911, 992, 1003, 1007, 1013, 1021, 1055, 1061, 1065, 1094, 1099, 1101, 1104, 1105, 1120, 1133, 1134, 1139, 1141, 1169], "question": [27, 29, 32, 35, 36, 38, 102, 114, 126, 154, 159, 167, 172, 184, 188, 190, 212, 213, 214, 224, 225, 227, 228, 230, 250, 340, 347, 354, 382, 411, 417, 429, 448, 451, 455, 459, 512, 576, 636, 643, 731, 735, 761, 786, 800, 816, 835, 836, 838, 857, 863, 887, 904, 912, 914, 925, 929, 945, 964, 965, 998, 1006, 1007, 1010, 1015, 1104, 1106], "ask": [27, 152, 157, 159, 167, 184, 187, 188, 253, 285, 340, 347, 447, 466, 467, 489, 508, 560, 572, 583, 704, 726, 864, 919, 921, 1025, 1106], "answer": [27, 45, 156, 159, 172, 184, 188, 190, 191, 214, 225, 232, 304, 314, 347, 451, 455, 512, 636, 643, 645, 715, 720, 739, 772, 816, 835, 836, 841, 853, 855, 856, 859, 861, 912, 914, 921, 925, 964, 967, 998, 1005, 1006, 1010, 1017, 1034, 1037, 1106], "cover": [27, 78, 81, 115, 145, 159, 176, 184, 188, 192, 194, 212, 213, 225, 238, 277, 279, 307, 447, 466, 752, 912, 914, 996, 1005, 1007, 1030, 1078, 1101, 1106, 1110, 1111, 1133, 1139, 1162, 1164], "been": [27, 59, 62, 112, 151, 152, 153, 154, 156, 157, 158, 163, 167, 172, 173, 184, 192, 221, 227, 237, 240, 271, 274, 276, 286, 303, 337, 346, 406, 420, 421, 450, 461, 470, 487, 543, 702, 762, 804, 822, 828, 833, 843, 847, 851, 871, 905, 912, 914, 925, 934, 944, 955, 980, 983, 984, 1001, 1008, 1046, 1141, 1159, 1161, 1162], "further": [27, 149, 151, 158, 162, 178, 227, 259, 274, 303, 316, 317, 348, 413, 424, 462, 524, 544, 547, 550, 553, 556, 559, 562, 674, 705, 751, 760, 761, 779, 802, 808, 890, 915, 951, 971, 974, 978, 1013, 1145, 1150, 1164], "inform": [27, 28, 29, 106, 151, 154, 155, 157, 162, 171, 172, 173, 175, 180, 200, 221, 227, 237, 240, 265, 280, 281, 302, 306, 307, 424, 434, 441, 442, 452, 461, 729, 759, 767, 779, 843, 868, 901, 905, 912, 914, 916, 948, 1004, 1032, 1106, 1114, 1119, 1134, 1141], "internet": [27, 65, 78, 151, 153, 156, 157, 159, 180, 192, 200, 228, 241, 280, 281, 296, 302, 306, 337, 449, 905, 906, 908, 966, 1006, 1162, 1176], "subtract": [27, 221, 244, 276, 384, 487, 501, 715, 867, 967, 1017, 1025, 1037], "known": [27, 148, 153, 164, 204, 221, 227, 237, 240, 257, 259, 277, 294, 310, 337, 383, 385, 397, 404, 431, 437, 602, 779, 868, 997, 1113, 1161, 1162], "calcul": [27, 82, 85, 154, 188, 212, 221, 244, 383, 385, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 486, 516, 521, 523, 667, 672, 705, 732, 758, 760, 761, 950, 967, 1008, 1010, 1081, 1113, 1118, 1139], "minimum": [27, 63, 244, 687, 808, 1003, 1109, 1110, 1111, 1112], "come": [27, 43, 78, 110, 111, 112, 120, 127, 131, 148, 149, 151, 152, 153, 154, 157, 158, 159, 162, 163, 174, 180, 181, 184, 204, 230, 257, 259, 270, 277, 278, 303, 316, 331, 337, 361, 363, 364, 380, 407, 443, 450, 487, 521, 603, 640, 643, 648, 662, 714, 717, 719, 729, 739, 761, 776, 808, 839, 841, 845, 851, 864, 868, 905, 912, 913, 914, 940, 966, 994, 1005, 1006, 1010, 1028, 1029, 1030, 1031, 1037, 1048, 1056, 1058, 1063, 1068, 1086, 1097, 1114, 1117, 1122, 1135, 1162], "she": [27, 211, 640, 673, 843, 845, 1050, 1058], "who": [27, 29, 45, 119, 149, 152, 156, 159, 163, 182, 184, 230, 240, 265, 296, 358, 433, 437, 447, 452, 475, 492, 524, 645, 715, 725, 781, 808, 816, 835, 836, 843, 847, 853, 864, 905, 913, 914, 929, 940, 982, 999, 1001, 1007, 1029, 1105, 1120, 1132, 1139, 1159, 1162, 1164], "repetit": [27, 265, 868, 1159], "prone": [27, 382, 570, 580, 600, 673, 717, 796, 984, 1052, 1146, 1159], "possibl": [27, 59, 61, 62, 106, 112, 114, 132, 134, 139, 142, 151, 152, 159, 162, 167, 174, 184, 188, 204, 214, 221, 227, 230, 232, 237, 238, 240, 257, 259, 268, 277, 280, 281, 286, 303, 307, 317, 372, 383, 386, 403, 416, 423, 429, 433, 437, 438, 441, 447, 453, 462, 465, 467, 470, 475, 479, 487, 489, 524, 557, 567, 569, 570, 575, 582, 583, 601, 618, 659, 665, 666, 673, 687, 691, 704, 715, 723, 724, 725, 729, 786, 813, 843, 852, 877, 906, 907, 912, 913, 923, 926, 955, 1003, 1004, 1005, 1013, 1018, 1026, 1028, 1037, 1046, 1051, 1053, 1054, 1056, 1105, 1106, 1115, 1127], "abl": [27, 28, 30, 43, 151, 152, 154, 155, 157, 159, 167, 184, 204, 211, 293, 427, 433, 459, 466, 470, 524, 672, 682, 835, 836, 853, 859, 861, 862, 905, 913, 914, 940, 976, 1007, 1118, 1164], "fix": [27, 46, 63, 65, 76, 107, 131, 148, 152, 165, 167, 188, 209, 214, 224, 225, 230, 249, 252, 279, 280, 281, 302, 340, 365, 388, 431, 447, 449, 455, 492, 525, 537, 548, 560, 566, 585, 601, 651, 658, 679, 761, 776, 781, 785, 788, 789, 809, 810, 816, 817, 823, 826, 829, 852, 904, 908, 928, 938, 969, 979, 999, 1001, 1004, 1031, 1063, 1106], "inconsist": [27, 567, 1129], "easi": [27, 68, 119, 140, 152, 154, 155, 156, 157, 158, 159, 163, 172, 173, 176, 188, 234, 244, 317, 386, 401, 427, 443, 665, 682, 724, 745, 788, 790, 794, 806, 813, 847, 912, 913, 914, 941, 958, 976, 985, 999, 1025, 1029, 1037, 1046, 1048, 1112, 1139, 1140, 1164], "plain": [27, 122, 154, 214, 351, 543, 579, 582, 661, 714, 729, 811, 913, 1004, 1017], "happi": [27, 65, 157, 184, 431, 575, 1111], "clear": [27, 43, 152, 154, 159, 171, 204, 214, 243, 304, 341, 342, 408, 433, 437, 452, 462, 468, 474, 581, 636, 669, 687, 724, 808, 816, 844, 847, 868, 928, 1002, 1017, 1037, 1039, 1110, 1111, 1141], "front": [27, 78, 149, 159, 184, 240, 286, 437, 618, 737, 1162], "later": [27, 80, 115, 131, 151, 152, 155, 162, 173, 184, 306, 363, 367, 373, 375, 377, 433, 437, 443, 450, 569, 570, 572, 584, 586, 587, 621, 676, 707, 710, 767, 769, 771, 776, 792, 794, 804, 811, 850, 912, 934, 950, 951, 953, 964, 968, 1018, 1026, 1036, 1039, 1041, 1119, 1125], "menu": [27, 148, 192, 808, 1154], "mine": [28, 151, 152, 155, 163, 180, 184, 188, 358, 557, 808], "hi": [28, 45, 167, 172, 184, 188, 191, 209, 235, 238, 430, 519, 1018, 1106], "data": [28, 29, 49, 70, 73, 78, 89, 108, 110, 111, 124, 132, 152, 153, 154, 155, 159, 162, 171, 173, 175, 184, 188, 189, 193, 201, 203, 208, 218, 221, 222, 227, 228, 230, 237, 240, 244, 250, 265, 269, 270, 271, 272, 274, 277, 279, 280, 281, 286, 291, 294, 296, 299, 305, 308, 310, 314, 342, 343, 358, 372, 386, 393, 402, 409, 415, 416, 419, 421, 422, 426, 431, 435, 436, 438, 439, 444, 445, 448, 455, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 530, 532, 541, 565, 566, 568, 572, 575, 588, 591, 593, 594, 605, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 667, 671, 674, 705, 717, 721, 729, 730, 738, 739, 746, 758, 759, 760, 761, 763, 766, 767, 798, 802, 806, 813, 821, 839, 845, 850, 852, 860, 906, 908, 912, 913, 914, 915, 925, 929, 931, 939, 944, 950, 953, 956, 958, 970, 994, 1003, 1005, 1010, 1014, 1017, 1030, 1031, 1042, 1044, 1045, 1046, 1054, 1065, 1093, 1094, 1104, 1108, 1109, 1110, 1112, 1114, 1115, 1119, 1120, 1124, 1125, 1128, 1130, 1131, 1134, 1139, 1160, 1161, 1175], "convinc": [28, 386], "him": [28, 184, 188, 191, 209, 212, 235, 261, 285, 307, 714, 955, 1106], "wai": [28, 43, 50, 59, 62, 63, 65, 80, 81, 142, 148, 149, 151, 154, 159, 163, 164, 167, 173, 176, 180, 185, 187, 188, 190, 191, 192, 195, 196, 204, 209, 212, 224, 225, 230, 233, 234, 235, 237, 238, 242, 244, 252, 256, 257, 270, 271, 274, 278, 280, 281, 302, 303, 328, 332, 382, 386, 390, 391, 401, 407, 423, 424, 425, 433, 449, 450, 457, 467, 469, 470, 474, 490, 492, 511, 521, 525, 537, 543, 551, 567, 568, 575, 580, 583, 621, 623, 649, 655, 666, 682, 703, 713, 725, 729, 743, 764, 777, 786, 800, 802, 808, 835, 836, 844, 850, 852, 855, 856, 905, 913, 914, 925, 932, 940, 966, 969, 979, 980, 984, 990, 994, 1005, 1017, 1022, 1028, 1031, 1032, 1035, 1046, 1050, 1051, 1053, 1056, 1058, 1063, 1091, 1106, 1124, 1132, 1139, 1146, 1164], "go": [28, 40, 42, 59, 61, 62, 63, 65, 80, 97, 125, 131, 149, 152, 155, 156, 158, 159, 181, 184, 191, 195, 204, 213, 214, 230, 271, 274, 276, 306, 343, 447, 449, 467, 508, 669, 707, 719, 725, 737, 761, 769, 772, 776, 808, 810, 839, 851, 868, 870, 904, 905, 912, 913, 940, 943, 945, 950, 958, 962, 982, 985, 999, 1030, 1064], "relev": [28, 154, 227, 252, 373, 462, 524, 729, 808, 821, 912, 913, 1005, 1105, 1121, 1134], "part": [28, 43, 80, 92, 106, 114, 145, 152, 153, 154, 155, 157, 159, 162, 173, 176, 184, 191, 192, 193, 214, 240, 252, 271, 274, 286, 342, 349, 363, 386, 420, 447, 470, 475, 489, 510, 524, 567, 665, 737, 759, 779, 786, 808, 828, 835, 836, 868, 903, 905, 912, 913, 914, 915, 930, 982, 1029, 1030, 1043, 1048, 1050, 1096, 1098, 1112, 1113, 1124, 1125, 1127, 1128, 1129, 1130, 1149], "natur": [28, 38, 75, 152, 154, 159, 184, 238, 244, 286, 358, 363, 381, 425, 466, 467, 619, 621, 665, 725, 913, 1041], "straighforward": 28, "approach": [28, 35, 38, 151, 152, 191, 295, 311, 365, 449, 453, 454, 462, 723, 751, 761, 847, 913, 966, 968, 1123], "would": [28, 57, 104, 107, 132, 151, 153, 154, 156, 157, 163, 172, 174, 181, 184, 188, 190, 203, 214, 227, 240, 244, 279, 281, 317, 397, 416, 423, 425, 436, 437, 451, 452, 455, 462, 465, 523, 537, 541, 575, 579, 581, 583, 630, 637, 646, 670, 676, 715, 725, 737, 757, 759, 808, 811, 835, 836, 859, 861, 864, 890, 913, 914, 924, 925, 941, 950, 958, 979, 998, 999, 1003, 1005, 1006, 1026, 1037, 1041, 1045, 1048, 1054, 1058, 1063, 1084, 1111, 1114, 1124, 1131], "copi": [28, 36, 42, 50, 70, 97, 99, 101, 102, 114, 118, 122, 127, 131, 142, 144, 148, 152, 153, 154, 155, 158, 163, 167, 173, 179, 182, 192, 199, 202, 214, 224, 230, 236, 240, 244, 247, 250, 256, 257, 258, 259, 262, 267, 268, 272, 276, 277, 279, 286, 288, 289, 292, 304, 317, 343, 373, 375, 387, 393, 402, 407, 409, 411, 415, 416, 419, 422, 426, 435, 439, 444, 445, 460, 492, 493, 506, 507, 508, 513, 530, 542, 543, 545, 554, 559, 561, 563, 565, 566, 567, 573, 583, 584, 586, 587, 596, 600, 610, 618, 627, 629, 632, 633, 645, 647, 653, 656, 659, 662, 667, 668, 669, 673, 674, 675, 693, 705, 707, 717, 721, 725, 726, 730, 738, 757, 758, 759, 760, 761, 783, 788, 808, 809, 824, 834, 835, 836, 837, 838, 839, 848, 868, 874, 875, 877, 878, 879, 880, 882, 888, 904, 915, 918, 920, 925, 937, 942, 943, 944, 945, 952, 953, 958, 962, 975, 992, 993, 994, 996, 998, 999, 1003, 1004, 1038, 1053, 1056, 1119, 1123, 1128, 1141, 1146, 1148, 1159, 1171], "dumb": [28, 45, 172, 203, 325, 779, 953, 955], "reason": [28, 61, 132, 139, 154, 167, 173, 184, 213, 232, 337, 420, 427, 429, 431, 437, 440, 453, 465, 584, 586, 587, 621, 665, 708, 727, 776, 792, 804, 808, 859, 861, 958, 966, 967, 980, 994, 999, 1037, 1046, 1048, 1111], "ar": [28, 32, 43, 45, 47, 53, 55, 56, 57, 58, 59, 61, 62, 63, 65, 68, 78, 80, 81, 89, 106, 108, 109, 110, 111, 112, 119, 127, 132, 136, 139, 145, 146, 149, 151, 154, 155, 156, 158, 159, 162, 163, 167, 168, 169, 172, 173, 174, 176, 180, 182, 184, 188, 189, 190, 191, 192, 193, 204, 211, 212, 213, 214, 221, 224, 225, 227, 228, 230, 231, 233, 235, 236, 237, 238, 240, 244, 248, 252, 257, 259, 261, 268, 270, 271, 274, 276, 277, 278, 279, 281, 286, 289, 294, 298, 303, 304, 307, 308, 310, 317, 325, 326, 327, 331, 337, 340, 342, 343, 345, 346, 362, 364, 365, 367, 370, 372, 373, 375, 377, 380, 381, 384, 385, 386, 392, 395, 398, 403, 404, 407, 411, 413, 414, 416, 417, 418, 423, 424, 425, 427, 428, 431, 434, 437, 440, 447, 448, 450, 452, 455, 456, 461, 462, 465, 466, 467, 477, 487, 489, 492, 511, 514, 521, 522, 523, 524, 525, 528, 532, 537, 541, 551, 557, 560, 567, 568, 569, 570, 572, 575, 576, 579, 580, 581, 583, 590, 593, 600, 601, 602, 605, 615, 621, 622, 627, 630, 637, 639, 640, 642, 643, 647, 653, 654, 655, 656, 660, 666, 668, 669, 670, 673, 676, 677, 678, 682, 687, 704, 707, 708, 713, 714, 715, 717, 719, 723, 724, 725, 726, 728, 729, 731, 734, 736, 740, 741, 759, 761, 763, 764, 767, 777, 779, 781, 786, 792, 794, 796, 800, 802, 804, 806, 808, 813, 827, 834, 835, 836, 839, 841, 843, 844, 846, 847, 848, 850, 851, 853, 854, 859, 861, 868, 869, 871, 881, 886, 890, 892, 895, 905, 906, 912, 913, 914, 915, 921, 923, 925, 928, 930, 931, 934, 935, 942, 948, 950, 951, 953, 955, 956, 958, 961, 967, 968, 969, 970, 975, 979, 980, 982, 983, 984, 985, 988, 990, 994, 996, 997, 999, 1000, 1001, 1003, 1005, 1006, 1008, 1010, 1014, 1017, 1018, 1019, 1020, 1024, 1026, 1029, 1030, 1033, 1034, 1035, 1036, 1037, 1039, 1042, 1046, 1054, 1056, 1057, 1058, 1060, 1068, 1073, 1101, 1105, 1106, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1122, 1124, 1125, 1128, 1130, 1131, 1133, 1139, 1141, 1142, 1145, 1146, 1149, 1161, 1162, 1164], "need": [28, 43, 45, 46, 47, 51, 55, 56, 61, 63, 104, 115, 117, 119, 122, 132, 152, 153, 154, 157, 159, 163, 167, 168, 173, 184, 191, 192, 194, 204, 214, 228, 230, 252, 296, 328, 340, 370, 372, 375, 395, 403, 404, 423, 429, 430, 436, 440, 442, 443, 447, 450, 452, 455, 457, 460, 462, 466, 467, 489, 519, 521, 522, 523, 524, 554, 560, 566, 567, 582, 602, 622, 636, 643, 647, 676, 682, 711, 725, 728, 734, 739, 741, 747, 761, 767, 781, 783, 796, 800, 804, 808, 847, 851, 864, 869, 905, 906, 907, 908, 912, 913, 914, 921, 925, 931, 932, 935, 938, 949, 953, 964, 985, 994, 998, 999, 1000, 1004, 1009, 1022, 1030, 1031, 1033, 1036, 1045, 1050, 1061, 1062, 1111, 1112, 1119, 1133, 1141, 1162], "mechan": [28, 32, 89, 139, 152, 153, 176, 184, 188, 199, 214, 268, 465, 643, 955, 976, 1014, 1106, 1134, 1159, 1164, 1174], "where": [28, 53, 89, 109, 112, 114, 132, 137, 138, 148, 151, 152, 153, 154, 155, 157, 159, 162, 167, 172, 173, 180, 181, 184, 185, 188, 211, 212, 213, 214, 221, 224, 227, 228, 230, 237, 240, 244, 252, 261, 268, 286, 294, 303, 307, 310, 340, 345, 346, 381, 385, 395, 403, 404, 406, 407, 408, 421, 425, 436, 438, 448, 458, 471, 478, 509, 511, 522, 537, 543, 560, 579, 640, 643, 647, 665, 723, 724, 728, 802, 806, 808, 820, 850, 851, 865, 868, 871, 892, 897, 905, 912, 913, 914, 921, 926, 932, 934, 937, 940, 941, 957, 967, 968, 975, 979, 980, 983, 994, 998, 999, 1006, 1008, 1010, 1013, 1035, 1037, 1047, 1088, 1106, 1113, 1118, 1139, 1161, 1164], "could": [28, 50, 57, 110, 111, 114, 119, 127, 131, 148, 149, 152, 153, 157, 159, 163, 173, 182, 184, 190, 204, 213, 214, 224, 234, 240, 268, 278, 280, 281, 299, 302, 314, 358, 386, 430, 451, 453, 466, 467, 491, 524, 575, 583, 647, 659, 665, 678, 679, 687, 702, 712, 727, 762, 779, 808, 821, 847, 865, 913, 914, 921, 932, 938, 975, 1037, 1088, 1102, 1118, 1128, 1134, 1146, 1159], "exchang": [28, 78, 181, 224, 314, 447, 475, 491, 521, 675, 676, 779, 852, 970, 1063, 1071], "meta": [28, 39, 144, 159, 808, 820, 868], "retriev": [28, 163, 693, 808, 1010, 1058], "check": [28, 29, 38, 88, 97, 104, 112, 119, 137, 151, 152, 154, 155, 156, 157, 158, 163, 167, 172, 184, 188, 192, 196, 221, 227, 230, 237, 240, 244, 268, 281, 325, 348, 351, 373, 388, 397, 399, 400, 405, 413, 420, 424, 432, 434, 450, 514, 515, 537, 548, 560, 567, 575, 582, 583, 600, 621, 659, 675, 676, 687, 724, 759, 761, 781, 783, 788, 808, 824, 825, 827, 904, 905, 912, 913, 935, 940, 946, 949, 953, 983, 984, 989, 992, 994, 1001, 1030, 1035, 1048, 1058, 1061, 1065, 1067, 1069, 1085, 1091, 1104, 1134, 1139, 1148, 1159, 1169], "everyth": [28, 42, 43, 98, 114, 127, 145, 152, 158, 159, 176, 184, 188, 192, 203, 211, 229, 230, 258, 267, 268, 271, 274, 288, 289, 303, 306, 351, 358, 375, 395, 398, 423, 437, 443, 447, 508, 566, 567, 569, 576, 580, 585, 590, 640, 682, 711, 715, 731, 738, 759, 760, 761, 777, 786, 806, 810, 813, 838, 841, 842, 844, 845, 869, 890, 904, 905, 906, 912, 913, 914, 931, 933, 934, 945, 958, 959, 965, 967, 970, 980, 1002, 1008, 1013, 1017, 1113, 1128, 1172, 1173, 1174, 1176], "clearli": [28, 43, 117, 167, 184, 425, 672, 693, 720, 808, 827, 941, 1006, 1037, 1058, 1161], "intersphinx": [28, 149], "spinx": 28, "possibli": [29, 77, 85, 121, 152, 184, 449, 583, 659, 673, 682, 687, 702, 714, 724, 736, 737, 853, 890, 913, 961, 996, 1122], "arrang": [29, 84, 110, 111, 156, 299, 524, 729, 841, 901], "subgroup": [29, 35, 38, 543], "refer": [29, 66, 90, 97, 110, 111, 114, 120, 151, 157, 158, 172, 174, 179, 188, 191, 193, 196, 197, 208, 209, 211, 213, 214, 219, 222, 223, 225, 226, 228, 229, 230, 235, 236, 237, 240, 244, 246, 248, 249, 251, 255, 263, 264, 266, 271, 273, 274, 278, 279, 281, 284, 285, 287, 290, 291, 293, 294, 302, 303, 305, 306, 307, 310, 312, 317, 318, 324, 326, 327, 328, 329, 330, 331, 340, 404, 410, 417, 456, 513, 521, 530, 532, 543, 565, 566, 567, 568, 583, 584, 586, 587, 588, 591, 594, 610, 616, 620, 629, 632, 633, 634, 642, 647, 650, 653, 654, 657, 658, 659, 660, 661, 662, 673, 693, 705, 706, 714, 717, 721, 725, 730, 738, 758, 759, 760, 761, 767, 768, 770, 772, 775, 778, 785, 789, 799, 808, 812, 817, 820, 823, 826, 829, 851, 881, 890, 904, 905, 912, 913, 937, 976, 982, 998, 1001, 1006, 1007, 1029, 1056, 1057, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120, 1139, 1141, 1159, 1160, 1161, 1169], "veri": [29, 35, 37, 38, 151, 152, 154, 173, 184, 188, 191, 193, 204, 209, 212, 235, 238, 261, 285, 307, 351, 358, 379, 386, 396, 397, 417, 433, 434, 436, 442, 449, 452, 467, 554, 565, 578, 593, 611, 639, 668, 669, 707, 710, 713, 724, 727, 746, 808, 813, 818, 846, 847, 906, 911, 913, 914, 931, 932, 948, 953, 968, 982, 1010, 1018, 1034, 1037, 1041, 1042, 1048, 1052, 1056, 1061, 1106, 1113, 1114, 1135, 1144, 1151, 1159], "unawar": [29, 167, 184, 191], "simpli": [29, 61, 119, 146, 152, 155, 157, 159, 163, 167, 176, 240, 241, 280, 281, 302, 303, 386, 428, 470, 508, 575, 584, 586, 587, 636, 646, 657, 693, 714, 715, 720, 725, 739, 786, 840, 853, 912, 934, 938, 982, 998, 1006], "interest": [29, 112, 153, 154, 167, 173, 184, 192, 340, 452, 467, 1005, 1007, 1125], "catalog": [29, 1162], "chapter": [29, 42, 132, 204, 213, 221, 227, 237, 240, 241, 543, 868], "subchapt": 29, "cluster_python": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1113, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143], "cluster_python_advanc": [29, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1059, 1062, 1063, 1064, 1065, 1078, 1089, 1092, 1093, 1094, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1116, 1120, 1122, 1133, 1136, 1138, 1143], "cluster_python_advanced_oo": [29, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1065, 1092, 1093, 1094, 1099, 1101, 1104, 1133], "object": [29, 63, 70, 73, 74, 78, 90, 97, 103, 104, 106, 107, 108, 110, 111, 112, 114, 115, 119, 120, 123, 132, 145, 167, 169, 172, 174, 179, 184, 191, 200, 202, 203, 208, 211, 212, 214, 217, 219, 221, 224, 225, 228, 229, 230, 231, 232, 236, 237, 242, 243, 245, 247, 250, 254, 262, 266, 268, 269, 271, 272, 274, 276, 279, 282, 286, 292, 298, 304, 308, 314, 317, 320, 327, 329, 330, 333, 335, 340, 341, 342, 343, 377, 403, 430, 448, 450, 455, 456, 460, 461, 462, 467, 469, 471, 476, 485, 487, 493, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 530, 532, 537, 543, 557, 565, 566, 568, 570, 573, 574, 576, 578, 579, 584, 586, 587, 588, 590, 591, 594, 610, 616, 620, 621, 622, 629, 632, 633, 636, 637, 639, 642, 643, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 665, 673, 674, 676, 677, 687, 693, 705, 707, 709, 710, 714, 715, 720, 721, 723, 725, 726, 729, 730, 736, 738, 739, 745, 746, 751, 755, 756, 758, 759, 760, 761, 851, 904, 982, 983, 984, 987, 988, 989, 990, 992, 998, 1001, 1003, 1004, 1006, 1007, 1010, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1024, 1025, 1027, 1029, 1030, 1031, 1037, 1046, 1048, 1054, 1055, 1065, 1092, 1093, 1094, 1099, 1101, 1104, 1111, 1125, 1127, 1129, 1130, 1131, 1133, 1139, 1159, 1160, 1162, 1164], "orient": [29, 70, 73, 74, 78, 97, 114, 132, 172, 191, 203, 212, 214, 219, 225, 228, 231, 242, 243, 252, 254, 266, 271, 274, 277, 279, 317, 327, 329, 330, 340, 341, 342, 375, 448, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 530, 532, 565, 566, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 729, 730, 738, 746, 758, 760, 761, 1007, 1014, 1015, 1016, 1017, 1031, 1065, 1092, 1093, 1094, 1099, 1101, 1104, 1133, 1139, 1160, 1162], "cluster_python_advanced_multithread": [29, 761, 1007, 1014, 1015, 1016, 1017, 1104], "cluster_python_bas": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "fundament": [29, 59, 62, 73, 90, 175, 184, 187, 189, 191, 193, 196, 198, 203, 206, 209, 212, 215, 225, 231, 235, 243, 246, 326, 327, 328, 329, 330, 331, 340, 358, 359, 447, 477, 761, 786, 1007, 1014, 1015, 1016, 1017, 1021, 1040, 1049, 1054, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1116, 1119, 1120, 1126, 1133, 1134], "cluster_python_misc": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1059, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1113, 1119, 1120, 1122, 1126, 1133, 1136, 1143], "cluster_python_misc_ai": [29, 761, 1104, 1107, 1108, 1112, 1113, 1120], "machin": [29, 102, 110, 111, 114, 144, 154, 159, 173, 188, 204, 211, 212, 221, 222, 225, 227, 237, 240, 294, 302, 306, 310, 339, 343, 363, 379, 381, 389, 397, 425, 429, 443, 524, 525, 761, 808, 835, 836, 841, 844, 847, 897, 904, 918, 919, 920, 921, 923, 924, 925, 967, 982, 985, 992, 1006, 1104, 1108, 1112, 1120, 1161], "artifici": [29, 188, 213, 271, 302, 306, 425, 659, 761, 925, 998, 1104, 1108, 1112, 1113, 1120], "intellig": [29, 152, 188, 228, 264, 271, 274, 284, 290, 302, 306, 346, 761, 779, 1003, 1007, 1104, 1108, 1112, 1113, 1120], "cluster_python_misc_panda": [29, 761, 1104, 1120, 1126], "panda": [29, 173, 184, 203, 209, 222, 235, 249, 252, 270, 273, 285, 302, 304, 306, 309, 313, 315, 358, 449, 761, 1030, 1104, 1106, 1109, 1112, 1120], "cluster_python_exercis": [29, 209, 340, 761, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "cluster_python_exercises_legaci": [29, 209, 340, 761, 1065, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104], "legaci": [29, 209, 340, 470, 761, 1065, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104, 1154], "cluster_python_exercises_userdb": [29, 761, 1065, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "databas": [29, 42, 43, 55, 78, 149, 171, 172, 191, 213, 219, 224, 225, 228, 230, 231, 234, 238, 252, 280, 281, 302, 331, 467, 468, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 761, 864, 895, 916, 1024, 1063, 1065, 1084, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1120, 1124, 1135, 1151], "seri": [29, 100, 153, 224, 228, 269, 270, 271, 272, 274, 276, 278, 303, 308, 314, 427, 448, 477, 761, 917, 1031, 1063, 1065, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1104, 1105, 1111, 1120, 1125, 1126, 1127, 1129, 1130, 1174], "cluster_python_exercises_csv": [29, 761, 1062, 1063, 1064, 1065, 1104], "csv": [29, 44, 51, 53, 54, 55, 56, 78, 106, 119, 121, 124, 188, 191, 200, 203, 209, 213, 214, 217, 219, 221, 222, 225, 226, 228, 232, 235, 238, 240, 246, 247, 250, 265, 269, 270, 272, 275, 276, 280, 281, 287, 292, 296, 299, 302, 304, 308, 314, 448, 761, 850, 853, 868, 890, 1018, 1021, 1024, 1058, 1065, 1099, 1100, 1101, 1102, 1104, 1106, 1109, 1110, 1111, 1112, 1120], "cluster_python_exercises_herdt": [29, 761, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1104], "cluster_python_exercises_sensor": [29, 761, 1065, 1092, 1093, 1094, 1104], "sensor": [29, 69, 72, 73, 74, 78, 81, 84, 97, 106, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 130, 131, 132, 179, 188, 192, 228, 249, 260, 268, 277, 280, 281, 296, 299, 302, 306, 317, 340, 344, 346, 464, 469, 471, 479, 485, 486, 489, 490, 494, 500, 503, 509, 513, 514, 515, 516, 517, 518, 519, 530, 533, 534, 535, 536, 537, 538, 539, 540, 565, 573, 638, 675, 724, 725, 726, 750, 752, 761, 808, 904, 911, 943, 945, 962, 1018, 1065, 1093, 1104, 1170], "And": [29, 97, 99, 102, 103, 104, 106, 114, 124, 152, 153, 154, 156, 159, 182, 188, 191, 211, 214, 219, 221, 230, 232, 241, 249, 256, 257, 258, 260, 261, 263, 264, 266, 267, 270, 274, 284, 285, 287, 288, 290, 295, 304, 309, 311, 312, 315, 318, 324, 448, 454, 460, 464, 471, 473, 485, 499, 513, 514, 515, 516, 517, 518, 519, 520, 523, 526, 530, 542, 543, 565, 573, 595, 603, 608, 618, 621, 629, 633, 639, 662, 674, 705, 706, 707, 716, 721, 728, 730, 738, 746, 749, 758, 759, 760, 761, 831, 837, 838, 841, 842, 846, 850, 858, 860, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 888, 898, 904, 911, 918, 920, 927, 933, 935, 940, 943, 945, 949, 959, 962, 965, 967, 970, 982, 984, 986, 987, 988, 989, 990, 993, 1005, 1007, 1012, 1015, 1016, 1017, 1021, 1022, 1046, 1062, 1063, 1064, 1065, 1078, 1089, 1099, 1100, 1101, 1104, 1116, 1120, 1126, 1133, 1159], "acquisit": [29, 119, 152, 179, 280, 281, 296, 299, 302, 303, 306, 557, 761, 1061, 1065, 1093, 1094, 1104], "cluster_python_db": [29, 761, 1062, 1064, 1065, 1104, 1116], "cluster_python_swdev": [29, 761, 1059, 1104, 1107, 1108, 1112, 1120, 1122, 1133, 1136, 1138, 1143], "cluster_python_swdev_pytest": [29, 761, 1104, 1133, 1138], "pytest": [29, 228, 238, 241, 249, 252, 261, 270, 278, 280, 285, 296, 299, 302, 303, 306, 307, 348, 449, 761, 1094, 1102, 1103, 1104, 1133], "cluster_python_draft": [29, 761, 1059, 1104], "python_python_5550_xml_etre": [29, 761, 1104], "xml": [29, 119, 148, 149, 299, 761, 1104, 1120], "elementtre": [29, 252, 761, 1104, 1120], "etre": [29, 252, 761, 1104, 1120], "python_advanced_modul": [29, 761, 1007, 1059, 1062, 1063, 1064, 1065, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1116, 1120, 1122, 1133, 1136, 1138, 1143], "gt": [29, 32, 35, 36, 53, 55, 56, 72, 73, 74, 87, 90, 115, 116, 117, 118, 120, 122, 123, 124, 125, 131, 141, 171, 174, 185, 190, 195, 202, 208, 209, 211, 216, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 326, 327, 328, 329, 330, 331, 334, 335, 340, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 454, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 681, 705, 706, 716, 721, 730, 738, 746, 758, 760, 761, 765, 768, 770, 773, 775, 778, 780, 784, 785, 787, 789, 791, 793, 799, 801, 803, 805, 812, 814, 817, 819, 823, 826, 829, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 911, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 947, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1116, 1119, 1120, 1122, 1126, 1133, 1136, 1138, 1143, 1144], "python_basics_python_0220_for": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1120], "loop": [29, 32, 34, 38, 42, 59, 62, 89, 90, 97, 110, 111, 114, 119, 123, 132, 140, 145, 152, 167, 176, 188, 191, 193, 196, 197, 198, 201, 209, 211, 212, 213, 215, 219, 222, 225, 230, 231, 233, 235, 236, 241, 243, 245, 246, 248, 249, 251, 261, 264, 271, 274, 281, 284, 285, 290, 291, 299, 303, 307, 312, 313, 315, 317, 318, 319, 324, 326, 327, 328, 329, 330, 331, 332, 340, 345, 363, 366, 369, 378, 381, 393, 400, 401, 402, 409, 415, 419, 422, 423, 426, 427, 435, 439, 444, 445, 512, 513, 554, 565, 596, 601, 658, 665, 667, 693, 705, 728, 739, 758, 760, 761, 796, 806, 811, 825, 839, 841, 845, 852, 908, 930, 931, 932, 940, 966, 970, 976, 979, 980, 1007, 1008, 1011, 1012, 1017, 1029, 1062, 1063, 1064, 1065, 1067, 1069, 1075, 1077, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1116, 1120, 1122, 1158, 1159, 1160, 1169], "python_basics_python_0450_dictionari": [29, 90, 761, 1007, 1029, 1065, 1078, 1089, 1104], "python_advanced_iteration_gener": [29, 761, 1007, 1104], "comprehens": [29, 63, 68, 172, 173, 185, 188, 191, 197, 211, 212, 213, 220, 225, 226, 228, 229, 230, 233, 236, 242, 245, 261, 264, 266, 273, 278, 284, 285, 290, 291, 302, 303, 305, 306, 307, 312, 313, 315, 318, 324, 710, 761, 779, 796, 804, 1007, 1012, 1104, 1125], "python_advanced_except": [29, 761, 1007, 1104], "python_advanced_oo_inherit": [29, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1104, 1133], "inherit": [29, 65, 69, 73, 106, 132, 169, 179, 188, 212, 225, 242, 244, 277, 278, 279, 280, 281, 285, 302, 303, 306, 307, 317, 349, 471, 485, 513, 521, 523, 563, 565, 566, 590, 639, 642, 662, 704, 746, 760, 761, 800, 840, 843, 846, 867, 869, 976, 1005, 1007, 1015, 1016, 1017, 1018, 1021, 1023, 1026, 1104, 1133, 1175], "python_basics_python_0140_vari": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "python_basics_python_0270_funct": [29, 90, 209, 761, 1007, 1029, 1049, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116], "python_advanced_stararg": [29, 761, 1007, 1104], "keyword": [29, 39, 63, 136, 147, 185, 188, 189, 190, 191, 193, 212, 214, 228, 233, 238, 240, 261, 264, 265, 271, 274, 278, 280, 281, 284, 286, 290, 296, 299, 302, 303, 306, 307, 340, 407, 437, 580, 581, 583, 601, 652, 712, 761, 957, 1003, 1004, 1005, 1007, 1031, 1047, 1049, 1061, 1104, 1117, 1156, 1158], "argument": [29, 57, 63, 90, 97, 114, 145, 151, 154, 157, 171, 172, 185, 188, 200, 209, 212, 219, 221, 225, 227, 228, 230, 231, 233, 235, 237, 238, 241, 242, 243, 244, 246, 249, 264, 265, 268, 271, 274, 278, 280, 281, 284, 285, 286, 290, 291, 299, 302, 303, 306, 307, 308, 312, 313, 318, 319, 324, 340, 362, 363, 408, 415, 419, 422, 426, 435, 439, 444, 445, 449, 511, 543, 567, 577, 578, 667, 682, 702, 705, 715, 727, 758, 759, 760, 761, 766, 767, 868, 890, 904, 938, 940, 942, 945, 962, 1000, 1003, 1007, 1029, 1031, 1032, 1049, 1057, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1117, 1139, 1141], "python_advanced_comprehens": [29, 761, 1007, 1104], "python_basics_python_0150_datatypes_overview_compound": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1062, 1063, 1064, 1065, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "python_advanced_exec": [29, 761, 1007, 1104], "python_basics_python_0500_fil": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1120], "python_advanced_context_mgr": [29, 761, 1007, 1104], "statement": [29, 54, 90, 110, 111, 172, 184, 188, 189, 190, 191, 196, 198, 203, 209, 212, 213, 215, 219, 222, 225, 231, 235, 241, 243, 246, 249, 255, 261, 264, 271, 274, 278, 280, 281, 284, 285, 290, 291, 296, 299, 302, 303, 306, 307, 312, 313, 318, 319, 324, 326, 327, 328, 329, 330, 331, 340, 345, 362, 365, 369, 382, 395, 397, 398, 401, 402, 407, 409, 415, 419, 422, 426, 429, 435, 439, 444, 445, 621, 647, 666, 667, 705, 758, 760, 761, 769, 841, 881, 967, 988, 1002, 1005, 1007, 1008, 1013, 1017, 1019, 1029, 1036, 1039, 1041, 1048, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1112, 1116, 1120, 1122, 1133, 1136, 1139, 1143, 1169], "python_advanced_oo_classes_and_dict": [29, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1065, 1092, 1093, 1094, 1099, 1101, 1104, 1133], "python_advanced_python_1010_generators_yield": [29, 761, 1007, 1062, 1063, 1064, 1065, 1078, 1089, 1104, 1116], "python_basics_python_0225_rang": [29, 90, 209, 761, 1007, 1029, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1116], "python_basics_python_0200_sequential_typ": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126], "sequenti": [29, 63, 90, 106, 108, 188, 189, 191, 193, 196, 197, 198, 201, 209, 214, 219, 222, 225, 230, 231, 233, 235, 243, 245, 246, 249, 253, 261, 264, 271, 274, 277, 279, 281, 282, 284, 285, 290, 291, 302, 303, 306, 307, 312, 313, 315, 317, 318, 324, 326, 327, 328, 329, 330, 331, 340, 345, 438, 513, 526, 530, 565, 600, 610, 618, 629, 633, 662, 761, 912, 914, 944, 1007, 1012, 1029, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1169], "python_advanced_decor": [29, 761, 1007, 1104], "decor": [29, 59, 62, 172, 184, 187, 188, 203, 212, 228, 238, 252, 307, 464, 471, 485, 499, 513, 565, 761, 1003, 1007, 1018, 1025, 1026, 1028, 1049, 1104, 1106, 1139, 1162], "python_advanced_closur": [29, 761, 1007, 1104], "closur": [29, 59, 62, 63, 171, 184, 188, 196, 197, 212, 225, 228, 238, 271, 274, 303, 307, 709, 761, 1004, 1007, 1047, 1049, 1104, 1169], "python_advanced_oo_constructor": [29, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1104, 1133], "constructor": [29, 43, 53, 56, 70, 97, 110, 111, 114, 119, 122, 125, 127, 131, 132, 179, 185, 191, 211, 212, 214, 225, 230, 238, 242, 261, 264, 266, 271, 274, 277, 278, 279, 280, 281, 282, 284, 285, 290, 296, 299, 302, 303, 306, 307, 312, 317, 318, 324, 342, 343, 344, 417, 471, 485, 511, 513, 516, 519, 523, 524, 543, 552, 558, 565, 566, 567, 573, 590, 621, 637, 638, 647, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 665, 673, 674, 675, 677, 703, 705, 721, 724, 725, 726, 730, 735, 736, 737, 738, 739, 746, 758, 760, 761, 767, 769, 800, 953, 1007, 1014, 1015, 1016, 1017, 1019, 1021, 1022, 1023, 1037, 1104, 1133, 1139, 1151, 1159], "python_advanced_oo_str_repr": [29, 761, 1007, 1021, 1104], "str": [29, 171, 174, 185, 195, 200, 202, 203, 208, 211, 213, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 261, 262, 264, 265, 269, 270, 271, 272, 274, 276, 278, 280, 281, 282, 284, 285, 286, 290, 292, 296, 297, 299, 300, 302, 303, 304, 306, 307, 308, 312, 314, 318, 320, 324, 325, 331, 334, 335, 336, 340, 413, 431, 449, 498, 503, 584, 585, 586, 587, 702, 714, 761, 1005, 1007, 1019, 1021, 1022, 1025, 1034, 1036, 1037, 1048, 1052, 1056, 1063, 1071, 1073, 1104, 1119, 1125, 1130, 1131], "repr": [29, 202, 221, 227, 237, 240, 244, 247, 250, 261, 264, 265, 271, 274, 278, 280, 281, 284, 285, 286, 290, 296, 297, 299, 302, 303, 306, 307, 312, 318, 324, 761, 1005, 1007, 1021, 1022, 1104], "python_advanced_oo_method": [29, 761, 1007, 1021, 1065, 1092, 1093, 1094, 1104], "method": [29, 42, 43, 54, 55, 57, 63, 65, 69, 70, 73, 90, 97, 106, 107, 110, 111, 119, 125, 127, 131, 132, 157, 188, 189, 190, 191, 193, 196, 209, 210, 212, 214, 219, 222, 223, 225, 230, 231, 233, 235, 236, 239, 241, 242, 243, 244, 246, 249, 251, 261, 264, 266, 270, 271, 274, 276, 278, 279, 280, 281, 284, 285, 287, 290, 291, 293, 296, 299, 302, 303, 305, 306, 307, 309, 312, 313, 315, 317, 318, 324, 326, 327, 328, 329, 330, 331, 340, 344, 345, 421, 447, 467, 469, 471, 475, 485, 492, 493, 511, 513, 518, 523, 524, 525, 530, 532, 537, 543, 556, 558, 565, 566, 567, 570, 579, 591, 593, 594, 610, 616, 620, 626, 629, 632, 633, 636, 637, 638, 639, 642, 647, 648, 650, 653, 654, 657, 658, 659, 660, 661, 662, 665, 674, 687, 704, 705, 708, 712, 721, 729, 730, 738, 739, 745, 746, 752, 755, 756, 758, 759, 760, 761, 769, 771, 776, 777, 786, 788, 798, 810, 821, 953, 1003, 1004, 1007, 1010, 1014, 1018, 1019, 1020, 1021, 1022, 1026, 1029, 1034, 1043, 1046, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1111, 1115, 1119, 1120, 1125, 1128, 1130, 1162, 1169, 1176], "python_advanced_oo_abc": [29, 761, 1007, 1021, 1104], "abstract": [29, 78, 84, 188, 228, 260, 277, 278, 279, 280, 281, 302, 303, 306, 307, 344, 408, 447, 449, 464, 471, 475, 477, 479, 485, 487, 499, 513, 523, 565, 600, 639, 640, 717, 749, 761, 841, 845, 914, 929, 1007, 1021, 1104, 1162, 1164], "abc": [29, 32, 171, 185, 188, 190, 195, 200, 202, 208, 211, 213, 217, 221, 224, 227, 228, 232, 234, 237, 240, 244, 247, 250, 253, 261, 262, 265, 272, 278, 280, 281, 282, 286, 292, 296, 299, 302, 303, 304, 306, 307, 308, 314, 320, 327, 335, 449, 523, 592, 613, 630, 632, 749, 761, 1007, 1021, 1037, 1104], "duck": [29, 32, 187, 188, 242, 261, 278, 280, 281, 285, 302, 303, 306, 307, 317, 464, 523, 665, 667, 705, 713, 714, 719, 725, 746, 751, 758, 760, 761, 1007, 1014, 1021, 1104, 1106, 1111, 1159], "python_advanced_oo_operator_overload": [29, 761, 1007, 1021, 1104], "overload": [29, 97, 171, 179, 188, 214, 242, 277, 278, 279, 280, 281, 302, 306, 307, 309, 316, 433, 513, 521, 530, 532, 565, 567, 588, 591, 592, 594, 600, 610, 616, 620, 621, 629, 632, 633, 647, 648, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 673, 674, 678, 705, 721, 730, 738, 758, 760, 761, 767, 1007, 1021, 1104, 1125, 1158], "python_advanced_oo_properti": [29, 761, 1007, 1021, 1104], "properti": [29, 40, 172, 188, 212, 225, 242, 244, 261, 265, 278, 280, 281, 285, 295, 296, 299, 302, 303, 306, 307, 311, 344, 453, 454, 455, 460, 463, 761, 1007, 1021, 1104, 1145, 1148], "python_advanced_oo_namedtupl": [29, 761, 1007, 1021, 1065, 1099, 1101, 1104], "namedtupl": [29, 188, 196, 203, 218, 219, 221, 227, 237, 240, 261, 278, 280, 281, 285, 296, 299, 302, 303, 306, 307, 761, 1007, 1021, 1065, 1099, 1101, 1104, 1124, 1169], "python_advanced_multithreading_bas": [29, 761, 1007, 1014, 1015, 1016, 1017, 1104], "python_advanced_multithreading_exam_quest": [29, 761, 1007, 1015, 1017, 1104], "exam": [29, 96, 97, 106, 213, 229, 258, 267, 288, 342, 354, 761, 838, 904, 945, 965, 1007, 1015, 1104], "python_advanced_multithreading_mutex": [29, 761, 1007, 1015, 1016, 1017, 1104], "race": [29, 72, 73, 74, 78, 87, 152, 170, 230, 256, 257, 259, 268, 279, 280, 281, 302, 303, 306, 316, 348, 349, 355, 424, 434, 543, 715, 731, 738, 760, 761, 785, 789, 810, 812, 817, 821, 823, 826, 829, 904, 934, 944, 945, 950, 958, 959, 965, 1007, 1015, 1017, 1104, 1164, 1174, 1175], "condit": [29, 72, 73, 74, 78, 87, 89, 131, 152, 163, 170, 211, 230, 250, 256, 257, 259, 268, 279, 280, 281, 302, 303, 306, 316, 348, 349, 355, 363, 365, 369, 392, 393, 395, 396, 398, 400, 402, 409, 415, 419, 422, 424, 426, 434, 435, 439, 444, 445, 452, 457, 458, 459, 543, 560, 649, 667, 705, 715, 725, 731, 738, 739, 758, 760, 761, 785, 789, 810, 812, 817, 821, 823, 825, 826, 829, 904, 934, 940, 944, 945, 950, 958, 959, 961, 965, 1007, 1015, 1017, 1040, 1041, 1056, 1104, 1110, 1125, 1164, 1174, 1175], "mutex": [29, 72, 73, 74, 76, 78, 87, 89, 170, 199, 230, 255, 256, 257, 259, 268, 279, 280, 281, 302, 303, 306, 316, 348, 349, 355, 543, 732, 734, 736, 737, 738, 760, 761, 785, 789, 806, 810, 811, 812, 817, 823, 826, 827, 829, 904, 945, 950, 955, 958, 959, 1007, 1015, 1017, 1104, 1159, 1164, 1175], "python_basics_python_0130_syntax_etc": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "syntax": [29, 68, 90, 145, 175, 184, 191, 192, 194, 196, 197, 198, 203, 209, 210, 215, 219, 222, 225, 231, 232, 235, 237, 241, 242, 243, 246, 249, 251, 262, 264, 271, 273, 274, 284, 285, 287, 290, 291, 312, 313, 315, 316, 318, 319, 324, 326, 327, 328, 329, 330, 331, 340, 487, 566, 567, 670, 687, 714, 727, 761, 896, 1002, 1004, 1005, 1006, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1031, 1040, 1048, 1049, 1051, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133, 1159, 1169], "python_basics_python_0120_helloworld": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "world": [29, 78, 90, 121, 145, 148, 149, 152, 157, 163, 182, 191, 195, 196, 198, 202, 209, 213, 215, 217, 219, 221, 222, 225, 227, 230, 231, 232, 234, 235, 241, 242, 243, 244, 246, 247, 249, 252, 264, 265, 271, 274, 284, 285, 290, 291, 304, 312, 313, 314, 318, 319, 324, 326, 327, 328, 329, 330, 331, 335, 340, 373, 378, 382, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 450, 455, 463, 486, 491, 493, 664, 667, 705, 731, 739, 758, 760, 761, 765, 768, 770, 773, 775, 778, 785, 789, 793, 799, 805, 810, 812, 817, 820, 823, 826, 829, 846, 859, 871, 904, 942, 953, 968, 969, 982, 994, 996, 998, 999, 1000, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1033, 1034, 1040, 1043, 1045, 1049, 1050, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1111, 1116, 1119, 1120, 1126, 1133, 1155, 1159, 1169], "python_basics_python_0400_list": [29, 90, 761, 1029, 1104], "python_basics_instal": [29, 90, 761, 1029, 1104], "python_basics_python_0125_run": [29, 90, 209, 340, 761, 1029, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "run": [29, 42, 59, 62, 63, 90, 97, 108, 110, 111, 127, 142, 145, 148, 151, 152, 153, 154, 155, 158, 159, 162, 163, 171, 183, 184, 191, 192, 204, 209, 213, 214, 219, 224, 232, 240, 241, 244, 247, 250, 252, 257, 264, 265, 268, 271, 272, 274, 282, 284, 285, 286, 290, 291, 295, 304, 308, 311, 312, 313, 314, 318, 319, 324, 325, 340, 343, 365, 383, 425, 428, 436, 437, 441, 442, 454, 455, 467, 472, 491, 492, 493, 521, 523, 524, 525, 547, 574, 587, 596, 608, 665, 723, 724, 759, 761, 781, 796, 806, 808, 809, 818, 841, 843, 845, 846, 847, 848, 864, 865, 868, 869, 899, 912, 913, 914, 915, 923, 925, 933, 935, 951, 964, 966, 967, 968, 970, 975, 980, 982, 985, 990, 992, 994, 998, 1003, 1014, 1017, 1029, 1030, 1032, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1108, 1122, 1134, 1140, 1145, 1146, 1151, 1164], "python_basics_python_0193_whil": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1062, 1063, 1064, 1065, 1067, 1069, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1120], "python_basics_python_0460_set": [29, 90, 761, 1029, 1104], "python_basics_python_0250_refs_flat_deep_copi": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120], "mutabl": [29, 90, 184, 188, 189, 191, 193, 196, 197, 203, 209, 210, 219, 222, 223, 225, 226, 227, 228, 233, 235, 236, 239, 242, 246, 248, 249, 251, 254, 264, 266, 271, 273, 274, 278, 280, 281, 283, 284, 285, 287, 290, 291, 293, 302, 303, 305, 306, 307, 309, 312, 315, 318, 324, 326, 327, 328, 329, 330, 331, 340, 715, 761, 1007, 1029, 1038, 1042, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120, 1169], "python_basics_python_0150_datatypes_overview": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "python_basics_python_0160_boolean": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1040, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1120], "boolean": [29, 58, 84, 90, 172, 173, 189, 191, 193, 196, 197, 198, 209, 215, 219, 222, 223, 225, 226, 227, 231, 233, 235, 236, 241, 242, 243, 245, 246, 248, 249, 264, 271, 274, 284, 285, 290, 291, 312, 313, 315, 318, 319, 321, 324, 326, 327, 328, 329, 330, 331, 340, 345, 369, 392, 408, 761, 955, 1007, 1029, 1037, 1040, 1041, 1052, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1118, 1120, 1169], "python_misc_encod": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120], "encod": [29, 43, 90, 171, 188, 189, 191, 193, 209, 212, 219, 221, 224, 227, 228, 231, 237, 238, 240, 246, 248, 251, 265, 269, 270, 272, 285, 286, 293, 303, 304, 306, 307, 309, 314, 325, 326, 327, 328, 329, 330, 331, 345, 449, 761, 1007, 1029, 1037, 1042, 1056, 1063, 1064, 1065, 1075, 1078, 1086, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1114, 1120, 1122], "python_basics_python_0320_strings_method": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120], "python_basics_python_0300_str": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1063, 1064, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1119, 1120], "python_basics_python_0139_commandline_argv": [29, 90, 209, 340, 761, 1029, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "sy": [29, 32, 90, 115, 127, 131, 153, 170, 172, 174, 175, 200, 202, 203, 209, 212, 218, 221, 225, 227, 232, 235, 237, 240, 241, 243, 244, 246, 247, 249, 262, 264, 265, 270, 271, 274, 280, 284, 285, 286, 290, 291, 302, 306, 308, 312, 313, 318, 319, 320, 324, 325, 326, 333, 340, 436, 449, 508, 524, 525, 761, 763, 767, 788, 865, 894, 905, 912, 913, 914, 930, 931, 932, 934, 938, 939, 940, 941, 942, 944, 946, 948, 949, 963, 970, 972, 975, 979, 996, 1006, 1013, 1028, 1029, 1048, 1056, 1058, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1131, 1139, 1154], "argv": [29, 42, 50, 90, 154, 171, 172, 175, 185, 203, 209, 212, 213, 218, 221, 225, 227, 230, 231, 235, 237, 240, 241, 243, 246, 249, 264, 270, 271, 274, 280, 284, 285, 290, 291, 302, 306, 312, 313, 318, 319, 320, 324, 325, 333, 340, 414, 449, 450, 472, 511, 761, 912, 938, 939, 940, 941, 942, 946, 949, 963, 970, 979, 1000, 1006, 1013, 1029, 1058, 1059, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1073, 1075, 1077, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1146, 1151], "python_basics_python_0170_if": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1029, 1040, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1072, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1120], "python_basics_python_0110_blahblah": [29, 90, 209, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133], "blahblah": [29, 90, 191, 196, 198, 209, 215, 219, 222, 225, 231, 235, 241, 242, 243, 245, 246, 248, 249, 251, 264, 271, 274, 284, 285, 290, 291, 312, 313, 315, 318, 319, 324, 326, 327, 328, 329, 330, 331, 340, 761, 1007, 1014, 1015, 1016, 1017, 1021, 1029, 1040, 1049, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1116, 1119, 1120, 1126, 1133, 1169], "python_basics_python_0210_indexing_sl": [29, 90, 761, 1029, 1065, 1078, 1089, 1104, 1120, 1126], "python_basics_python_0310_strings_format": [29, 90, 209, 761, 1029, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1104], "python_basics_python_1000_function_object": [29, 90, 761, 1029, 1104], "python_misc_mqtt": [29, 761, 1104, 1120, 1122], "mqtt": [29, 112, 118, 119, 121, 124, 201, 203, 217, 219, 228, 241, 242, 246, 280, 281, 296, 299, 302, 346, 349, 351, 761, 1021, 1061, 1065, 1099, 1102, 1104, 1120], "python_swdev_venv": [29, 761, 1059, 1104, 1107, 1108, 1112, 1120, 1122, 1133, 1143], "python_misc_vscod": [29, 761, 1104, 1120], "visual": [29, 78, 104, 179, 184, 188, 189, 191, 193, 204, 213, 214, 219, 222, 235, 241, 249, 252, 264, 268, 271, 274, 278, 284, 285, 290, 291, 312, 313, 318, 319, 324, 340, 345, 360, 761, 847, 913, 984, 1030, 1063, 1104, 1120], "studio": [29, 104, 179, 184, 188, 189, 191, 193, 204, 213, 214, 219, 222, 235, 241, 249, 264, 268, 271, 274, 278, 284, 285, 290, 291, 312, 313, 318, 319, 324, 340, 345, 360, 761, 847, 1030, 1104, 1120], "python_misc_import": [29, 761, 1059, 1104, 1107, 1108, 1112, 1120, 1122, 1133, 1136, 1143], "incomplet": [29, 182, 221, 227, 237, 240, 244, 458, 565, 640, 746, 761, 911, 1059, 1104, 1107, 1108, 1112, 1120, 1122, 1133, 1136, 1143, 1144], "python_misc_csv": [29, 761, 1063, 1064, 1065, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1120], "python_misc_ai_machine_learning_intro": [29, 761, 1104, 1107, 1108, 1112, 1113, 1120], "concept": [29, 78, 97, 98, 99, 114, 152, 162, 176, 184, 188, 190, 192, 194, 204, 255, 258, 267, 268, 271, 288, 302, 306, 342, 343, 358, 361, 408, 431, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 607, 664, 705, 715, 738, 760, 761, 831, 835, 836, 837, 838, 841, 847, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 949, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1036, 1044, 1054, 1104, 1107, 1108, 1112, 1119, 1120, 1122, 1174], "terminologi": [29, 98, 99, 114, 158, 176, 188, 223, 258, 267, 268, 271, 288, 302, 306, 398, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 580, 738, 760, 761, 831, 835, 836, 837, 838, 841, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 897, 898, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 959, 962, 965, 966, 967, 981, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1104, 1107, 1108, 1112, 1120, 1177], "python_misc_ai_linear_regress": [29, 761, 1104, 1107, 1108, 1112, 1120], "linear": [29, 173, 175, 185, 188, 190, 208, 216, 271, 302, 306, 416, 438, 590, 715, 761, 844, 913, 979, 1041, 1104, 1107, 1108, 1113, 1120], "regress": [29, 188, 240, 271, 302, 306, 761, 1104, 1107, 1108, 1113, 1120], "python_misc_ai_k_mean": [29, 761, 1104, 1107, 1108, 1120], "python_misc_pandas_iloc": [29, 761, 1104, 1120, 1126], "select": [29, 63, 151, 152, 154, 158, 211, 216, 224, 241, 271, 274, 303, 324, 386, 408, 761, 808, 852, 909, 914, 948, 949, 968, 971, 973, 976, 996, 1063, 1104, 1109, 1118, 1120, 1126, 1128, 1139, 1147, 1174, 1176], "row": [29, 153, 175, 191, 211, 224, 228, 230, 232, 244, 269, 270, 271, 274, 278, 291, 303, 304, 308, 314, 324, 396, 438, 761, 848, 953, 1005, 1024, 1044, 1063, 1095, 1097, 1104, 1111, 1114, 1118, 1120, 1124, 1125, 1126, 1130], "column": [29, 63, 145, 154, 157, 172, 175, 221, 240, 269, 270, 271, 272, 274, 278, 303, 304, 308, 314, 324, 438, 449, 761, 848, 853, 864, 1063, 1075, 1087, 1104, 1111, 1114, 1120, 1126], "iloc": [29, 271, 272, 274, 276, 278, 303, 308, 324, 449, 761, 1104, 1120, 1124, 1126, 1129], "python_misc_pandas_bas": [29, 761, 1104, 1120, 1126], "datafram": [29, 270, 271, 272, 274, 278, 281, 303, 308, 324, 449, 761, 1104, 1109, 1112, 1120, 1123, 1125, 1126, 1127, 1129, 1130], "python_misc_pandas_index": [29, 761, 1104, 1120, 1126], "python_misc_pandas_filt": [29, 761, 1104, 1120, 1126], "python_misc_pandas_loc": [29, 761, 1104, 1120, 1126], "loc": [29, 172, 265, 269, 270, 271, 272, 274, 276, 278, 303, 324, 424, 761, 953, 1016, 1104, 1120, 1123, 1124, 1125, 1126, 1127], "python_misc_pandas_mod_col": [29, 761, 1104, 1120, 1126], "ad": [29, 32, 33, 39, 85, 115, 119, 132, 158, 162, 163, 164, 167, 172, 192, 204, 214, 270, 271, 274, 278, 303, 324, 337, 388, 407, 429, 456, 466, 470, 475, 584, 586, 587, 622, 676, 712, 751, 752, 761, 777, 912, 914, 964, 968, 969, 1004, 1022, 1037, 1056, 1104, 1120, 1126, 1127, 1131, 1140], "modifi": [29, 42, 75, 88, 110, 111, 115, 119, 130, 132, 154, 159, 167, 170, 172, 192, 211, 268, 270, 271, 274, 278, 279, 280, 281, 302, 303, 324, 351, 366, 368, 374, 411, 423, 430, 447, 449, 451, 460, 470, 472, 475, 491, 492, 512, 521, 524, 525, 527, 528, 529, 541, 554, 557, 567, 574, 577, 578, 580, 583, 595, 647, 651, 653, 656, 659, 673, 687, 710, 715, 727, 738, 740, 755, 756, 759, 760, 761, 781, 796, 816, 835, 836, 848, 853, 904, 917, 921, 926, 945, 953, 959, 997, 998, 1004, 1006, 1017, 1038, 1081, 1085, 1103, 1104, 1120, 1126, 1128, 1171, 1175], "python_misc_pandas_add_row": [29, 761, 1104, 1120, 1126], "python_exercises_legacy_for_prim": [29, 209, 761, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "prime": [29, 38, 171, 172, 191, 195, 196, 198, 203, 209, 215, 219, 231, 235, 238, 243, 249, 264, 271, 284, 285, 290, 291, 312, 313, 318, 319, 324, 425, 761, 1065, 1075, 1078, 1079, 1081, 1086, 1087, 1088, 1089, 1090, 1104, 1169], "python_exercises_legacy_while_prim": [29, 209, 761, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104], "python_exercises_legacy_uniq_gener": [29, 761, 1065, 1078, 1089, 1104], "uniq": [29, 171, 172, 189, 191, 203, 209, 219, 222, 225, 231, 235, 241, 243, 246, 264, 271, 284, 285, 290, 291, 307, 312, 313, 318, 324, 541, 761, 901, 1065, 1075, 1078, 1079, 1086, 1087, 1090, 1104], "python_exercises_legacy_passwd": [29, 761, 1065, 1078, 1089, 1104], "pars": [29, 171, 208, 209, 219, 220, 222, 225, 231, 235, 240, 241, 243, 249, 252, 280, 285, 302, 306, 326, 331, 344, 761, 1059, 1065, 1078, 1089, 1104, 1106, 1131], "passwd": [29, 100, 101, 114, 192, 202, 211, 224, 225, 227, 231, 232, 235, 240, 241, 243, 247, 249, 250, 258, 265, 267, 268, 272, 282, 286, 288, 289, 308, 314, 759, 761, 838, 840, 843, 845, 848, 850, 852, 863, 882, 885, 887, 888, 890, 893, 895, 899, 901, 904, 905, 915, 916, 924, 925, 929, 930, 935, 941, 961, 975, 1003, 1005, 1052, 1056, 1065, 1078, 1089, 1104, 1134], "python_exercises_legacy_uniq_funct": [29, 209, 761, 1065, 1075, 1078, 1079, 1086, 1087, 1088, 1089, 1090, 1104], "python_exercises_legacy_distil": [29, 209, 761, 1065, 1075, 1078, 1089, 1104], "elimin": [29, 58, 145, 209, 231, 238, 240, 241, 243, 249, 264, 271, 284, 290, 291, 312, 318, 324, 492, 537, 665, 728, 747, 761, 901, 1008, 1065, 1078, 1089, 1104], "empti": [29, 38, 42, 48, 50, 152, 155, 162, 170, 190, 192, 209, 221, 224, 231, 232, 238, 240, 241, 243, 244, 247, 249, 250, 253, 264, 265, 270, 271, 272, 282, 284, 286, 290, 291, 308, 312, 314, 318, 324, 335, 369, 421, 560, 569, 570, 574, 584, 586, 602, 603, 621, 639, 659, 665, 714, 724, 725, 737, 759, 761, 771, 808, 835, 836, 848, 852, 862, 899, 908, 921, 955, 975, 1013, 1054, 1065, 1078, 1079, 1083, 1089, 1104], "comment": [29, 34, 35, 36, 38, 44, 145, 154, 189, 209, 210, 212, 225, 231, 233, 237, 238, 241, 243, 248, 249, 264, 271, 273, 284, 290, 291, 312, 318, 324, 340, 363, 408, 427, 455, 492, 493, 521, 761, 913, 1051, 1065, 1078, 1089, 1104, 1119], "line": [29, 34, 35, 36, 38, 63, 112, 120, 148, 149, 152, 154, 157, 167, 171, 174, 175, 188, 192, 202, 204, 208, 209, 211, 212, 217, 218, 221, 222, 224, 225, 227, 228, 230, 231, 232, 235, 237, 238, 240, 241, 243, 244, 247, 249, 250, 252, 253, 264, 265, 270, 271, 272, 274, 278, 282, 284, 285, 286, 290, 291, 292, 304, 308, 312, 314, 318, 324, 331, 340, 363, 369, 370, 378, 382, 385, 387, 393, 402, 404, 409, 415, 419, 422, 426, 431, 435, 438, 439, 441, 444, 445, 449, 452, 455, 462, 492, 493, 643, 646, 649, 667, 705, 758, 760, 761, 777, 781, 788, 790, 808, 835, 836, 839, 848, 850, 852, 874, 895, 897, 899, 900, 901, 905, 909, 912, 913, 914, 956, 966, 997, 1003, 1008, 1009, 1033, 1050, 1054, 1056, 1057, 1058, 1063, 1065, 1078, 1084, 1089, 1103, 1104, 1106, 1109, 1114, 1119, 1140], "python_exercises_legacy_function_prim": [29, 209, 761, 1065, 1075, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "python_exercises_legacy_max_numb": [29, 209, 761, 1065, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "determin": [29, 102, 114, 145, 151, 175, 180, 182, 190, 191, 196, 198, 203, 209, 215, 219, 221, 222, 225, 231, 235, 241, 243, 246, 248, 249, 264, 271, 284, 285, 290, 291, 312, 313, 318, 319, 324, 643, 677, 678, 715, 761, 816, 838, 857, 858, 859, 860, 861, 862, 863, 900, 904, 913, 931, 968, 969, 999, 1065, 1067, 1068, 1069, 1072, 1075, 1078, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1134, 1169], "python_exercises_legacy_mixed_list_execut": [29, 209, 761, 1065, 1075, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "execut": [29, 44, 63, 108, 110, 111, 114, 145, 148, 152, 154, 162, 163, 167, 172, 179, 184, 191, 198, 204, 209, 219, 221, 222, 225, 227, 235, 237, 240, 264, 271, 284, 285, 290, 291, 294, 295, 310, 311, 312, 313, 318, 319, 324, 325, 326, 333, 340, 362, 363, 397, 399, 403, 425, 430, 434, 443, 451, 454, 455, 467, 486, 489, 496, 503, 508, 522, 551, 575, 590, 693, 759, 761, 806, 808, 834, 835, 836, 843, 845, 850, 855, 856, 864, 868, 915, 924, 953, 966, 980, 982, 983, 984, 985, 988, 992, 994, 998, 1000, 1006, 1010, 1014, 1017, 1030, 1040, 1041, 1044, 1063, 1065, 1075, 1078, 1079, 1080, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1115, 1118, 1147, 1149, 1161, 1172, 1173], "python_exercises_legacy_cmdline_digit": [29, 209, 340, 761, 1065, 1073, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104], "digit": [29, 145, 171, 172, 191, 198, 203, 209, 219, 222, 231, 235, 240, 241, 243, 244, 246, 248, 249, 264, 271, 284, 285, 286, 290, 291, 303, 312, 313, 314, 318, 319, 324, 325, 345, 371, 380, 761, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104], "word": [29, 43, 65, 145, 152, 172, 180, 184, 188, 191, 198, 203, 209, 213, 219, 222, 230, 231, 235, 238, 240, 241, 243, 246, 248, 249, 256, 257, 259, 264, 271, 278, 284, 285, 286, 290, 291, 303, 312, 313, 316, 317, 318, 319, 324, 340, 345, 370, 423, 465, 470, 543, 643, 721, 730, 738, 760, 761, 848, 850, 897, 969, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1091, 1104], "python_exercises_legacy_dict_keyerror": [29, 761, 1065, 1074, 1078, 1104], "python_exercises_legacy_max_numbers_funct": [29, 209, 761, 1065, 1075, 1078, 1079, 1081, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "python_exercises_legacy_mixed_list_interact": [29, 209, 761, 1065, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1104], "interact": [29, 63, 85, 125, 127, 131, 148, 159, 191, 192, 198, 209, 219, 221, 222, 225, 227, 235, 237, 240, 245, 264, 265, 271, 284, 285, 290, 291, 293, 312, 313, 318, 319, 324, 761, 868, 916, 921, 924, 934, 996, 1031, 1065, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1104, 1111, 1119], "interpret": [29, 63, 148, 154, 172, 173, 184, 188, 191, 198, 209, 212, 219, 221, 222, 225, 227, 235, 237, 240, 244, 260, 261, 264, 270, 271, 284, 285, 286, 290, 291, 293, 302, 303, 307, 312, 313, 318, 319, 324, 340, 425, 460, 464, 471, 475, 485, 499, 513, 565, 761, 808, 892, 914, 935, 982, 983, 1030, 1031, 1032, 1033, 1063, 1065, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1106, 1119, 1141, 1162], "python_exercises_legacy_revert": [29, 209, 761, 1065, 1075, 1078, 1086, 1089, 1104], "revert": [29, 131, 152, 209, 761, 786, 804, 966, 1025, 1065, 1075, 1078, 1089, 1104], "python_exercises_legacy_python_0350_exercis": [29, 209, 761, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1104], "right": [29, 34, 35, 36, 38, 42, 63, 80, 84, 119, 145, 151, 152, 154, 157, 172, 192, 203, 204, 209, 214, 219, 232, 234, 240, 244, 252, 265, 278, 286, 326, 332, 364, 384, 385, 386, 392, 403, 433, 463, 514, 522, 569, 584, 586, 587, 665, 677, 693, 719, 724, 729, 741, 761, 769, 788, 792, 808, 827, 850, 851, 853, 868, 923, 953, 1003, 1025, 1036, 1042, 1065, 1075, 1078, 1086, 1089, 1090, 1104], "justifi": [29, 172, 184, 209, 219, 240, 286, 364, 731, 761, 1030, 1065, 1075, 1078, 1086, 1089, 1090, 1104], "python_exercises_legacy_join_funct": [29, 209, 761, 1065, 1075, 1078, 1079, 1086, 1087, 1089, 1090, 1104], "join": [29, 35, 63, 163, 191, 209, 211, 212, 217, 219, 221, 224, 225, 227, 232, 236, 242, 250, 265, 272, 282, 286, 292, 308, 315, 325, 334, 449, 542, 665, 726, 732, 737, 739, 761, 951, 956, 979, 1065, 1075, 1078, 1086, 1087, 1089, 1090, 1104, 1139], "python_exercises_legacy_wc": [29, 209, 761, 1065, 1075, 1078, 1086, 1089, 1090, 1104], "charact": [29, 154, 170, 195, 200, 204, 209, 213, 217, 224, 230, 240, 247, 250, 268, 271, 286, 292, 308, 363, 364, 370, 378, 381, 387, 388, 393, 402, 409, 415, 419, 422, 425, 426, 430, 432, 435, 439, 444, 445, 630, 667, 705, 758, 759, 760, 761, 770, 775, 778, 785, 789, 799, 802, 810, 812, 817, 823, 824, 826, 829, 848, 850, 868, 890, 904, 912, 967, 1017, 1036, 1050, 1051, 1052, 1056, 1058, 1065, 1068, 1075, 1078, 1086, 1089, 1104, 1119, 1146], "python_exercises_legacy_python_1011_generators_yield": [29, 761, 1065, 1078, 1104], "fibonacci": [29, 172, 175, 191, 212, 225, 264, 278, 280, 281, 285, 291, 302, 303, 306, 672, 694, 761, 1010, 1011, 1012, 1065, 1078, 1104], "python_exercises_userdb_csvread": [29, 761, 1065, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104], "reader": [29, 149, 224, 238, 241, 246, 249, 261, 264, 284, 285, 290, 291, 312, 313, 318, 324, 430, 449, 472, 761, 852, 1018, 1021, 1048, 1065, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1104], "python_exercises_userdb_user_class_person": [29, 761, 1065, 1099, 1101, 1104], "awai": [29, 63, 77, 84, 151, 152, 153, 157, 176, 192, 213, 219, 227, 261, 264, 284, 285, 290, 296, 299, 312, 318, 324, 329, 461, 724, 761, 847, 868, 979, 1003, 1021, 1065, 1099, 1104], "raw": [29, 63, 127, 197, 200, 203, 208, 220, 223, 232, 236, 242, 256, 257, 261, 263, 264, 268, 270, 284, 285, 290, 293, 296, 299, 303, 312, 318, 324, 325, 335, 361, 449, 450, 456, 479, 486, 524, 604, 725, 761, 844, 1021, 1037, 1042, 1058, 1065, 1099, 1104], "python_exercises_userdb_user_json": [29, 761, 1065, 1099, 1100, 1101, 1102, 1104], "json": [29, 78, 85, 92, 114, 119, 122, 149, 185, 191, 201, 215, 219, 220, 228, 229, 237, 240, 241, 245, 248, 254, 263, 296, 298, 299, 301, 303, 306, 320, 360, 761, 1021, 1065, 1099, 1100, 1101, 1104, 1122, 1135], "python_exercises_userdb_userdb_modul": [29, 761, 1065, 1099, 1100, 1101, 1102, 1103, 1104], "refactor": [29, 43, 55, 127, 149, 238, 241, 246, 249, 261, 264, 280, 284, 285, 290, 291, 312, 313, 318, 324, 408, 448, 465, 712, 761, 769, 775, 785, 789, 799, 810, 812, 817, 823, 826, 829, 904, 1021, 1065, 1099, 1100, 1101, 1102, 1104], "both": [29, 54, 63, 85, 114, 115, 117, 123, 127, 131, 142, 152, 154, 159, 172, 184, 190, 211, 227, 230, 238, 241, 244, 246, 249, 261, 264, 276, 284, 285, 290, 291, 312, 313, 318, 324, 441, 447, 449, 450, 475, 521, 523, 543, 575, 583, 656, 712, 723, 761, 779, 802, 808, 847, 948, 952, 956, 969, 992, 998, 1005, 1018, 1021, 1025, 1032, 1039, 1046, 1050, 1055, 1065, 1068, 1071, 1077, 1099, 1100, 1101, 1102, 1104, 1112, 1139, 1146, 1159], "Into": [29, 97, 230, 235, 238, 241, 246, 249, 261, 264, 270, 284, 285, 290, 291, 312, 313, 318, 324, 378, 393, 402, 408, 409, 415, 419, 422, 426, 435, 439, 443, 444, 445, 512, 513, 565, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 667, 705, 758, 760, 761, 996, 1021, 1065, 1099, 1100, 1101, 1102, 1104], "python_exercises_userdb_csvdictread": [29, 761, 1065, 1095, 1096, 1099, 1100, 1101, 1102, 1103, 1104], "dictread": [29, 203, 224, 225, 238, 241, 246, 249, 261, 264, 284, 285, 290, 291, 308, 312, 313, 318, 324, 761, 1021, 1063, 1065, 1099, 1100, 1101, 1102, 1103, 1104], "python_exercises_userdb_csvdictreader_funct": [29, 761, 1065, 1096, 1099, 1100, 1101, 1102, 1103, 1104], "python_exercises_userdb_mqtt_publish_csv": [29, 761, 1065, 1099, 1100, 1104], "publish": [29, 112, 122, 156, 158, 167, 228, 240, 241, 261, 303, 337, 346, 348, 761, 1021, 1065, 1099, 1102, 1104, 1106, 1137], "python_exercises_userdb_csvreader_funct": [29, 761, 1065, 1098, 1099, 1104], "python_exercises_csv_csv_modul": [29, 761, 1063, 1064, 1065, 1104], "python_exercises_csv_csv_db": [29, 761, 1062, 1064, 1065, 1104], "sqlite3": [29, 85, 188, 219, 225, 231, 238, 761, 1064, 1065, 1104, 1115, 1116, 1120], "python_db_sqlite3": [29, 761, 1062, 1064, 1065, 1104, 1116], "dbapi": [29, 188, 219, 231, 761, 1062, 1064, 1065, 1104, 1116], "python_exercises_herdt_swap": [29, 761, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1104], "python_exercises_herdt_boolean": [29, 761, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1104], "express": [29, 59, 62, 171, 187, 188, 190, 191, 201, 211, 220, 225, 226, 228, 232, 251, 252, 254, 255, 256, 257, 260, 261, 266, 285, 286, 291, 304, 315, 363, 365, 369, 373, 382, 383, 385, 386, 387, 390, 392, 395, 397, 398, 400, 402, 408, 409, 415, 419, 422, 426, 435, 439, 444, 445, 449, 464, 473, 485, 486, 489, 493, 499, 500, 513, 521, 565, 567, 645, 667, 678, 682, 687, 705, 758, 760, 761, 868, 901, 982, 1002, 1012, 1018, 1039, 1041, 1048, 1050, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1102, 1103, 1104, 1106, 1127, 1158, 1159, 1160], "python_exercises_herdt_username_password": [29, 761, 1065, 1067, 1069, 1072, 1104], "usernam": [29, 167, 196, 204, 225, 337, 761, 835, 843, 852, 915, 925, 1052, 1065, 1067, 1069, 1084, 1104, 1169], "password": [29, 159, 162, 167, 192, 196, 204, 225, 337, 340, 345, 761, 843, 865, 905, 915, 916, 921, 1065, 1067, 1069, 1084, 1104, 1117, 1169], "python_exercises_herdt_greet": [29, 761, 1065, 1067, 1068, 1069, 1072, 1104], "python_exercises_herdt_max_numb": [29, 761, 1065, 1067, 1068, 1069, 1070, 1072, 1104], "python_exercises_herdt_while_even_numb": [29, 761, 1065, 1067, 1069, 1104], "python_exercises_sensors_project_setup": [29, 761, 1065, 1092, 1093, 1094, 1104], "setup": [29, 106, 114, 127, 136, 140, 149, 167, 179, 183, 184, 222, 224, 240, 247, 250, 252, 257, 259, 265, 268, 272, 282, 286, 308, 314, 337, 340, 345, 346, 431, 464, 478, 489, 491, 505, 519, 522, 524, 525, 658, 660, 761, 776, 802, 899, 904, 912, 914, 929, 931, 942, 979, 983, 987, 989, 992, 993, 1003, 1010, 1018, 1061, 1065, 1092, 1104, 1140, 1150, 1152], "python_exercises_sensors_sensor_const": [29, 761, 1065, 1092, 1093, 1094, 1104], "python_db_postgr": [29, 761, 1104, 1116], "postgresql": [29, 761, 1104, 1115, 1116], "python_db_dbapi2": [29, 761, 1062, 1064, 1065, 1104, 1116], "python_swdev_unittest": [29, 761, 1104, 1133], "unittest": [29, 65, 114, 148, 149, 165, 168, 179, 181, 184, 187, 188, 198, 201, 212, 214, 219, 261, 270, 281, 330, 340, 348, 349, 358, 359, 759, 761, 1048, 1104, 1106, 1133, 1144], "python_swdev_pip": [29, 761, 1059, 1104, 1107, 1108, 1112, 1120, 1122, 1133, 1136, 1143], "python_swdev_pytest_intro": [29, 761, 1104, 1133, 1138], "By": [29, 51, 53, 152, 154, 159, 163, 167, 179, 185, 221, 227, 228, 230, 237, 238, 240, 241, 245, 249, 252, 256, 257, 259, 261, 270, 278, 280, 281, 285, 296, 299, 302, 303, 306, 316, 317, 348, 380, 407, 430, 433, 650, 651, 653, 654, 657, 659, 661, 662, 705, 706, 758, 760, 761, 777, 850, 899, 912, 948, 967, 983, 994, 1018, 1025, 1102, 1103, 1104, 1113, 1133, 1138], "python_drafts_setuptool": [29, 761, 1059, 1104], "setuptool": [29, 61, 148, 261, 296, 306, 761, 1059, 1104, 1141], "python_drafts_argpars": [29, 761, 1059, 1104], "argpars": [29, 228, 249, 280, 302, 306, 326, 761, 1059, 1104], "python_drafts_matplotlib": [29, 761, 1059, 1104], "matplotlib": [29, 184, 203, 222, 223, 235, 249, 250, 252, 254, 285, 304, 309, 313, 315, 349, 761, 1002, 1059, 1104, 1106, 1112], "As": [30, 46, 68, 80, 114, 149, 152, 154, 159, 163, 169, 181, 184, 188, 219, 232, 294, 310, 343, 360, 398, 429, 432, 508, 510, 524, 575, 580, 582, 583, 660, 743, 781, 808, 834, 843, 912, 913, 921, 923, 940, 968, 976, 998, 1004, 1025, 1030, 1034, 1091, 1095, 1108, 1149, 1161], "follow": [30, 39, 43, 78, 106, 107, 109, 117, 120, 142, 151, 152, 154, 155, 156, 157, 159, 167, 172, 176, 180, 181, 184, 188, 192, 193, 204, 221, 227, 237, 238, 240, 244, 253, 257, 259, 276, 277, 279, 285, 286, 337, 359, 361, 364, 381, 382, 395, 398, 425, 427, 429, 431, 436, 437, 440, 448, 450, 455, 465, 466, 469, 470, 486, 487, 489, 490, 491, 492, 493, 511, 514, 515, 518, 519, 521, 522, 523, 524, 525, 537, 543, 569, 584, 585, 586, 587, 640, 647, 649, 654, 656, 657, 660, 661, 664, 682, 715, 755, 756, 759, 769, 771, 777, 808, 834, 835, 836, 841, 843, 845, 847, 859, 861, 862, 868, 872, 880, 881, 905, 912, 913, 914, 935, 938, 939, 940, 941, 950, 967, 976, 980, 982, 988, 990, 992, 994, 996, 997, 998, 1001, 1005, 1006, 1010, 1017, 1036, 1050, 1058, 1063, 1066, 1071, 1075, 1077, 1081, 1084, 1085, 1088, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1128, 1132, 1141, 1162], "version": [30, 61, 151, 155, 157, 158, 159, 162, 165, 167, 168, 180, 181, 182, 184, 191, 200, 202, 211, 212, 221, 225, 227, 231, 237, 240, 247, 252, 255, 264, 270, 276, 277, 278, 279, 286, 333, 348, 408, 447, 448, 450, 451, 453, 460, 463, 560, 657, 659, 660, 707, 711, 723, 756, 781, 783, 800, 808, 809, 824, 868, 912, 913, 983, 984, 994, 996, 997, 999, 1030, 1031, 1037, 1061, 1134, 1141, 1142, 1148, 1154], "control": [30, 45, 59, 62, 63, 86, 115, 117, 123, 124, 131, 132, 151, 158, 165, 167, 170, 181, 184, 189, 191, 192, 193, 194, 203, 204, 219, 222, 235, 240, 246, 260, 317, 341, 342, 343, 345, 348, 386, 400, 401, 447, 450, 464, 471, 514, 515, 518, 524, 566, 761, 781, 806, 808, 813, 868, 904, 906, 907, 911, 912, 914, 930, 979, 984, 1003, 1006, 1014, 1026, 1039, 1041, 1125, 1140, 1142, 1160, 1170, 1176], "done": [30, 42, 46, 47, 50, 53, 55, 56, 57, 63, 75, 84, 87, 91, 102, 110, 111, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 131, 132, 139, 144, 148, 149, 151, 153, 154, 156, 157, 158, 159, 162, 167, 172, 173, 176, 180, 184, 191, 213, 228, 232, 238, 240, 256, 257, 259, 271, 274, 281, 286, 304, 326, 332, 343, 349, 364, 365, 413, 420, 421, 423, 425, 436, 447, 449, 450, 451, 455, 489, 508, 522, 525, 567, 579, 580, 608, 622, 630, 635, 659, 660, 662, 665, 672, 693, 696, 700, 701, 711, 717, 725, 729, 737, 739, 761, 767, 777, 779, 798, 800, 808, 810, 835, 836, 840, 841, 843, 844, 852, 864, 887, 905, 906, 908, 913, 914, 930, 931, 932, 942, 956, 964, 970, 979, 983, 984, 992, 996, 998, 1005, 1008, 1009, 1010, 1028, 1037, 1048, 1056, 1057, 1058, 1061, 1064, 1085, 1118, 1139, 1164], "No": [30, 43, 63, 80, 142, 148, 152, 154, 158, 159, 167, 194, 211, 227, 228, 244, 270, 351, 371, 373, 387, 403, 407, 414, 425, 430, 442, 447, 451, 452, 455, 457, 460, 461, 462, 463, 475, 521, 560, 570, 571, 583, 590, 600, 615, 618, 636, 654, 664, 666, 669, 673, 676, 680, 724, 725, 732, 739, 786, 788, 790, 792, 806, 808, 813, 825, 844, 850, 852, 855, 856, 871, 879, 887, 890, 906, 908, 914, 928, 935, 940, 941, 950, 951, 953, 955, 964, 968, 976, 979, 985, 999, 1001, 1018, 1025, 1031, 1034, 1037, 1038, 1046, 1050, 1054, 1056, 1113, 1114, 1118, 1119, 1128, 1131, 1139, 1141, 1147], "proprietari": 30, "accept": [30, 32, 60, 131, 154, 180, 276, 447, 449, 715, 725, 727, 776, 908, 934, 1004, 1028, 1174, 1176], "proven": [30, 436, 440, 584, 586, 587, 676], "difficult": [30, 68, 211, 392, 410, 560, 794, 806, 968], "ffmpeg": 31, "video4linux2": 31, "640x480": 31, "dev": [31, 63, 100, 122, 152, 153, 163, 169, 170, 180, 181, 224, 230, 240, 247, 250, 265, 268, 272, 277, 279, 282, 286, 308, 314, 346, 436, 455, 519, 761, 763, 764, 766, 772, 779, 788, 802, 804, 808, 821, 838, 839, 848, 850, 851, 868, 882, 885, 888, 890, 904, 907, 912, 913, 914, 937, 944, 964, 967, 970, 972, 975, 976, 996, 1146, 1148, 1164], "video0": 31, "500k": 31, "matroska": 31, "mk": [31, 32], "disabl": [31, 152, 155, 157, 163, 221, 227, 237, 240, 408, 800, 806, 811, 813, 968, 1134, 1154], "audio": [31, 135, 140, 154, 159, 761, 1163], "appar": [31, 57, 61, 63, 65, 66, 154, 156, 157, 159, 163, 213, 224, 276, 452, 466, 637, 682, 693, 725, 776, 912, 970, 1119], "next": [31, 39, 42, 63, 98, 114, 148, 153, 154, 159, 167, 172, 174, 185, 190, 192, 200, 204, 211, 217, 221, 224, 225, 227, 230, 232, 234, 237, 240, 244, 250, 256, 257, 262, 265, 272, 282, 286, 292, 304, 308, 314, 325, 332, 346, 380, 398, 400, 421, 449, 487, 491, 505, 515, 524, 560, 597, 673, 686, 693, 695, 717, 798, 808, 827, 852, 868, 900, 912, 914, 934, 944, 964, 983, 1009, 1010, 1013, 1041, 1044, 1111, 1147], "mention": [31, 152, 153, 180, 184, 188, 214, 238, 280, 281, 302, 303, 307, 510, 524, 708, 820, 913, 1001, 1106, 1122], "frame": [31, 146, 157, 169, 191, 221, 227, 237, 240, 270, 276, 308, 420, 433, 437, 487, 678, 906, 907, 1124], "size": [31, 100, 109, 119, 151, 153, 154, 171, 173, 179, 221, 222, 227, 230, 235, 237, 240, 244, 249, 252, 268, 285, 286, 291, 340, 371, 388, 393, 402, 409, 413, 415, 419, 420, 422, 425, 426, 428, 433, 434, 435, 437, 439, 444, 445, 467, 468, 474, 513, 525, 526, 530, 531, 532, 533, 534, 538, 539, 542, 548, 560, 565, 567, 571, 575, 580, 584, 586, 587, 600, 601, 602, 603, 608, 613, 614, 618, 622, 624, 625, 630, 632, 659, 661, 667, 670, 671, 676, 687, 688, 689, 691, 705, 715, 724, 728, 729, 737, 745, 758, 759, 760, 761, 767, 779, 794, 804, 824, 833, 838, 839, 845, 852, 882, 885, 888, 890, 896, 900, 904, 908, 913, 934, 936, 975, 976, 982, 999, 1002, 1106, 1119], "input": [31, 40, 68, 86, 122, 172, 173, 174, 175, 185, 188, 191, 193, 215, 221, 227, 230, 237, 240, 243, 244, 265, 268, 340, 345, 369, 370, 376, 400, 408, 431, 436, 448, 526, 527, 528, 529, 541, 580, 630, 649, 672, 759, 779, 834, 852, 883, 901, 905, 915, 931, 934, 946, 948, 949, 956, 1012, 1027, 1056, 1068, 1072, 1073, 1085, 1088, 1091, 1097, 1100, 1108, 1109, 1112, 1113, 1170], "rate": [31, 162, 184, 244, 303, 429, 827, 966], "hz": [31, 818], "bitrat": [31, 907], "If": [31, 43, 45, 47, 53, 55, 56, 57, 89, 112, 114, 151, 152, 153, 154, 157, 158, 159, 167, 168, 176, 184, 221, 227, 234, 237, 240, 244, 252, 257, 259, 268, 274, 286, 303, 340, 345, 386, 395, 425, 437, 457, 459, 465, 515, 521, 522, 537, 567, 572, 636, 643, 659, 660, 673, 678, 724, 728, 729, 737, 739, 761, 781, 786, 800, 808, 813, 825, 834, 843, 847, 850, 868, 869, 877, 880, 904, 905, 912, 913, 914, 915, 921, 935, 943, 945, 953, 958, 962, 975, 997, 998, 1010, 1018, 1020, 1030, 1037, 1045, 1047, 1058, 1083, 1111, 1114, 1128, 1140, 1159], "instead": [31, 58, 63, 119, 126, 132, 145, 151, 152, 153, 154, 172, 173, 181, 213, 230, 232, 240, 270, 286, 325, 346, 351, 388, 437, 465, 508, 511, 525, 587, 603, 659, 661, 678, 682, 724, 725, 739, 776, 777, 786, 839, 868, 890, 913, 955, 975, 982, 984, 994, 1000, 1031, 1077, 1089, 1101, 1125, 1146], "stdout": [31, 132, 171, 204, 208, 212, 221, 227, 237, 240, 250, 258, 265, 267, 268, 288, 289, 303, 325, 333, 335, 340, 344, 346, 636, 761, 832, 834, 838, 849, 850, 893, 896, 899, 904, 934, 979, 1006, 1056, 1058, 1063, 1068, 1072, 1075, 1090, 1122, 1131, 1165], "hold": [31, 119, 151, 153, 172, 188, 190, 191, 211, 238, 363, 375, 395, 467, 597, 652, 659, 710, 715, 729, 737, 741, 772, 806, 810, 811, 905, 912, 968, 1006, 1019, 1041, 1089, 1111], "mplayer": [31, 282], "stdin": [31, 42, 204, 212, 221, 227, 230, 237, 240, 333, 340, 372, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761, 834, 850, 851, 883, 934, 1054, 1056, 1057, 1068, 1119, 1131, 1165], "unicod": [32, 34, 35, 36, 38, 212, 221, 225, 227, 237, 240, 262, 286, 375, 1036, 1042, 1056, 1119], "sphinxemojicod": 32, "pip": [32, 61, 136, 148, 184, 188, 209, 238, 252, 934, 1030, 1060, 1061, 1093, 1106, 1122, 1133, 1134, 1135, 1139, 1141, 1142], "conf": [32, 65, 153, 155, 157, 460, 808, 914, 1006], "grimac": 32, "astonish": 32, "rolling_ey": 32, "face_with_raised_eyebrow": 32, "flush": [32, 265, 524, 767, 779], "innoc": [32, 158, 430, 731, 847, 981, 1025], "kiss": 32, "kissing_heart": 32, "middle_fing": 32, "metal": [32, 78, 80, 87, 89, 152, 358, 905, 913, 914], "muscl": 32, "nerd": [32, 868], "ok_hand": 32, "penguin": 32, "pig": [32, 425], "point_up": 32, "sleep": [32, 63, 152, 227, 256, 257, 280, 281, 302, 326, 398, 407, 737, 761, 785, 788, 790, 800, 810, 813, 817, 823, 825, 826, 829, 904, 905, 913, 942, 946, 949, 964, 966, 967, 970, 975, 1014], "sunglass": 32, "think": [32, 42, 43, 69, 152, 153, 167, 190, 214, 316, 408, 429, 430, 433, 519, 523, 570, 590, 665, 673, 675, 724, 835, 836, 839, 929, 975, 1037], "thumbsdown": 32, "thumbsup": 32, "wink": 32, "1_tone1": 32, "1_tone2": 32, "1_tone3": 32, "1_tone4": 32, "1_tone5": 32, "1st_place_med": 32, "2nd_place_med": 32, "3rd_place_med": 32, "8ball": 32, "abacu": 32, "abcd": [32, 202, 208, 224, 244, 286], "ac": [32, 162, 200], "accordion": 32, "adhesive_bandag": 32, "admission_ticket": 32, "adult": [32, 1026], "adult_dark_skin_ton": 32, "adult_light_skin_ton": 32, "adult_medium_dark_skin_ton": 32, "adult_medium_light_skin_ton": 32, "adult_medium_skin_ton": 32, "adult_tone1": 32, "adult_tone2": 32, "adult_tone3": 32, "adult_tone4": 32, "adult_tone5": 32, "ae": [32, 162], "aerial_tramwai": 32, "af": [32, 162], "afghanistan": 32, "ai": [32, 188, 1113, 1120], "airplan": [32, 905], "airplane_arriv": 32, "airplane_departur": 32, "airplane_smal": 32, "aland_island": 32, "alarm_clock": 32, "albania": 32, "alemb": 32, "algeria": 32, "alien": 32, "ambul": 32, "american_samoa": 32, "amphora": 32, "anatomical_heart": 32, "anchor": 32, "andorra": 32, "angel": [32, 276], "angel_tone1": 32, "angel_tone2": 32, "angel_tone3": 32, "angel_tone4": 32, "angel_tone5": 32, "anger": 32, "anger_right": 32, "angola": 32, "angri": 32, "anguilla": 32, "anguish": 32, "ant": 32, "antarctica": 32, "antigua_barbuda": 32, "ao": 32, "appl": [32, 982, 1048], "aq": 32, "aquariu": 32, "archeri": 32, "argentina": 32, "ari": [32, 35, 38], "armenia": 32, "arrow_backward": 32, "arrow_double_down": 32, "arrow_double_up": 32, "arrow_down": 32, "arrow_down_smal": 32, "arrow_forward": 32, "arrow_heading_down": 32, "arrow_heading_up": 32, "arrow_left": 32, "arrow_lower_left": 32, "arrow_lower_right": 32, "arrow_right": 32, "arrow_right_hook": 32, "arrow_up": 32, "arrow_up_down": 32, "arrow_up_smal": 32, "arrow_upper_left": 32, "arrow_upper_right": 32, "arrows_clockwis": 32, "arrows_counterclockwis": 32, "articulated_lorri": 32, "artificial_satellit": 32, "artist": 32, "artist_dark_skin_ton": 32, "artist_light_skin_ton": 32, "artist_medium_dark_skin_ton": 32, "artist_medium_light_skin_ton": 32, "artist_medium_skin_ton": 32, "artist_tone1": 32, "artist_tone2": 32, "artist_tone3": 32, "artist_tone4": 32, "artist_tone5": 32, "aruba": 32, "ascens": 32, "astronaut": 32, "astronaut_dark_skin_ton": 32, "astronaut_light_skin_ton": 32, "astronaut_medium_dark_skin_ton": 32, "astronaut_medium_light_skin_ton": 32, "astronaut_medium_skin_ton": 32, "astronaut_tone1": 32, "astronaut_tone2": 32, "astronaut_tone3": 32, "astronaut_tone4": 32, "astronaut_tone5": 32, "athletic_sho": 32, "atm": 32, "atom": [32, 65, 76, 88, 175, 230, 255, 256, 257, 259, 268, 279, 316, 317, 543, 675, 724, 737, 738, 760, 761, 770, 775, 778, 780, 785, 788, 789, 791, 794, 795, 799, 800, 801, 803, 805, 810, 813, 814, 817, 818, 819, 823, 826, 828, 829, 904, 944, 954, 955, 1017, 1159], "atom_symbol": 32, "australia": 32, "austria": [32, 152, 358], "auto_rickshaw": 32, "avocado": 32, "aw": 32, "ax": [32, 173, 1002], "az": 32, "azerbaijan": 32, "ba": [32, 162], "babi": 32, "baby_bottl": 32, "baby_chick": 32, "baby_symbol": 32, "baby_tone1": 32, "baby_tone2": 32, "baby_tone3": 32, "baby_tone4": 32, "baby_tone5": 32, "back_of_hand": 32, "back_of_hand_tone1": 32, "back_of_hand_tone2": 32, "back_of_hand_tone3": 32, "back_of_hand_tone4": 32, "back_of_hand_tone5": 32, "bacon": 32, "badger": 32, "badminton": 32, "bagel": 32, "baggage_claim": 32, "baguette_bread": 32, "bahama": 32, "bahrain": 32, "balance_scal": 32, "bald": 32, "ballet_sho": 32, "balloon": 32, "ballot_box": 32, "ballot_box_with_ballot": 32, "ballot_box_with_check": 32, "bamboo": 32, "banana": 32, "bangbang": 32, "bangladesh": 32, "banjo": 32, "bank": [32, 449], "bar_chart": 32, "barbado": 32, "barber": 32, "basebal": 32, "basket": 32, "basketbal": 32, "basketball_man": 32, "basketball_play": 32, "basketball_player_tone1": 32, "basketball_player_tone2": 32, "basketball_player_tone3": 32, "basketball_player_tone4": 32, "basketball_player_tone5": 32, "basketball_woman": 32, "bat": [32, 1141], "bath": 32, "bath_tone1": 32, "bath_tone2": 32, "bath_tone3": 32, "bath_tone4": 32, "bath_tone5": 32, "bathtub": 32, "batteri": [32, 89, 184, 340, 905, 1029, 1030, 1031, 1057, 1135], "bb": [32, 144, 155, 912], "bd": [32, 162], "beach": 32, "beach_umbrella": 32, "beach_with_umbrella": 32, "bear": [32, 953, 1129], "bearded_person": 32, "bearded_person_dark_skin_ton": 32, "bearded_person_light_skin_ton": 32, "bearded_person_medium_dark_skin_ton": 32, "bearded_person_medium_light_skin_ton": 32, "bearded_person_medium_skin_ton": 32, "bearded_person_tone1": 32, "bearded_person_tone2": 32, "bearded_person_tone3": 32, "bearded_person_tone4": 32, "bearded_person_tone5": 32, "beaver": 32, "bed": 32, "bee": 32, "beer": [32, 427], "beetl": 32, "belaru": 32, "belgium": 32, "beliz": 32, "bell": [32, 1025, 1028], "bell_pepp": 32, "bellhop": 32, "bellhop_bel": 32, "benin": 32, "bento": 32, "bermuda": 32, "beverage_box": 32, "bf": [32, 162], "bg": [32, 449], "bh": 32, "bhutan": 32, "bicyclist": 32, "bicyclist_tone1": 32, "bicyclist_tone2": 32, "bicyclist_tone3": 32, "bicyclist_tone4": 32, "bicyclist_tone5": 32, "bike": 32, "biking_man": 32, "biking_woman": 32, "bikini": 32, "billed_cap": 32, "biohazard": 32, "biohazard_sign": 32, "bird": 32, "birthdai": [32, 193, 655], "bison": [32, 163, 788, 912, 996], "bj": 32, "bl": 32, "black_cat": 32, "black_circl": 32, "black_flag": 32, "black_heart": 32, "black_jok": 32, "black_large_squar": 32, "black_medium_small_squar": 32, "black_medium_squar": 32, "black_nib": 32, "black_small_squar": 32, "black_square_button": 32, "blond": 32, "haired_man": 32, "haired_man_dark_skin_ton": 32, "haired_man_light_skin_ton": 32, "haired_man_medium_dark_skin_ton": 32, "haired_man_medium_light_skin_ton": 32, "haired_man_medium_skin_ton": 32, "haired_man_tone1": 32, "haired_man_tone2": 32, "haired_man_tone3": 32, "haired_man_tone4": 32, "haired_man_tone5": 32, "haired_woman": 32, "haired_woman_dark_skin_ton": 32, "haired_woman_light_skin_ton": 32, "haired_woman_medium_dark_skin_ton": 32, "haired_woman_medium_light_skin_ton": 32, "haired_woman_medium_skin_ton": 32, "haired_woman_tone1": 32, "haired_woman_tone2": 32, "haired_woman_tone3": 32, "haired_woman_tone4": 32, "haired_woman_tone5": 32, "blond_haired_person": 32, "blond_haired_person_tone1": 32, "blond_haired_person_tone2": 32, "blond_haired_person_tone3": 32, "blond_haired_person_tone4": 32, "blond_haired_person_tone5": 32, "blonde_man": 32, "blonde_woman": 32, "blossom": 32, "blowfish": 32, "blue_book": 32, "blue_car": 32, "blue_circl": 32, "blue_heart": 32, "blue_squar": 32, "blueberri": 32, "blush": 32, "bm": 32, "bn": 32, "bo": [32, 1019], "boar": 32, "boat": 32, "bolivia": 32, "bomb": 32, "bone": 32, "bookmark": [32, 1118], "bookmark_tab": 32, "boom": [32, 693, 710], "boomerang": 32, "boot": [32, 142, 153, 155, 159, 171, 272, 443, 740, 781, 786, 804, 808, 818, 846, 912, 913, 914, 1154], "bosnia_herzegovina": 32, "botswana": 32, "bottle_with_popping_cork": 32, "bouquet": 32, "bouvet_island": 32, "bow": 32, "bow_and_arrow": 32, "bow_tone1": 32, "bow_tone2": 32, "bow_tone3": 32, "bow_tone4": 32, "bow_tone5": 32, "bowing_man": 32, "bowing_woman": 32, "bowl_with_spoon": 32, "bowl": 32, "boxing_glov": 32, "boi": 32, "boy_tone1": 32, "boy_tone2": 32, "boy_tone3": 32, "boy_tone4": 32, "boy_tone5": 32, "bq": 32, "br": [32, 250, 308], "brain": [32, 59, 62], "brazil": 32, "bread": 32, "breast_feed": 32, "breast_feeding_dark_skin_ton": 32, "breast_feeding_light_skin_ton": 32, "breast_feeding_medium_dark_skin_ton": 32, "breast_feeding_medium_light_skin_ton": 32, "breast_feeding_medium_skin_ton": 32, "breast_feeding_tone1": 32, "breast_feeding_tone2": 32, "breast_feeding_tone3": 32, "breast_feeding_tone4": 32, "breast_feeding_tone5": 32, "brick": [32, 151, 164], "bride_with_veil": 32, "bride_with_veil_tone1": 32, "bride_with_veil_tone2": 32, "bride_with_veil_tone3": 32, "bride_with_veil_tone4": 32, "bride_with_veil_tone5": 32, "bridge_at_night": 32, "briefcas": 32, "brief": [32, 441, 868], "british_indian_ocean_territori": 32, "british_virgin_island": 32, "broccoli": 32, "broken_heart": 32, "broom": 32, "brown_circl": 32, "brown_heart": 32, "brown_squar": 32, "brunei": 32, "bt": 32, "bubble_tea": 32, "bucket": [32, 779], "bug": [32, 46, 55, 56, 107, 153, 154, 155, 195, 214, 230, 241, 349, 405, 407, 408, 423, 428, 430, 434, 447, 452, 457, 548, 550, 552, 560, 566, 567, 570, 575, 637, 640, 693, 703, 722, 739, 761, 798, 926, 957, 966, 967, 999, 1019, 1020, 1034, 1037], "building_construct": 32, "bulb": 32, "bulgaria": 32, "bullettrain_front": 32, "bullettrain_sid": 32, "burkina_faso": 32, "burrito": 32, "burundi": 32, "bu": [32, 81, 115, 199, 224, 240, 247, 249, 250, 265, 268, 272, 282, 286, 308, 314, 465, 479, 494, 508, 524, 525, 761, 779, 804, 868, 904, 906, 911, 912, 913, 942, 948, 1004, 1105, 1163, 1170, 1174, 1176], "business_suit_levit": 32, "busstop": 32, "bust_in_silhouett": 32, "busts_in_silhouett": 32, "butter": 32, "butterfli": 32, "bv": 32, "bw": 32, "bz": 32, "cactu": 32, "cake": 32, "calendar": 32, "calendar_spir": 32, "call_m": 32, "call_me_hand": 32, "call_me_hand_tone1": 32, "call_me_hand_tone2": 32, "call_me_hand_tone3": 32, "call_me_hand_tone4": 32, "call_me_hand_tone5": 32, "call_me_tone1": 32, "call_me_tone2": 32, "call_me_tone3": 32, "call_me_tone4": 32, "call_me_tone5": 32, "cambodia": 32, "camel": 32, "camera": [32, 33, 132, 157, 159, 913], "camera_flash": 32, "camera_with_flash": 32, "cameroon": 32, "camp": 32, "canada": 32, "canary_island": 32, "cancer": 32, "candl": 32, "candi": 32, "canned_food": 32, "cano": 32, "cape_verd": 32, "capital_abcd": 32, "capricorn": 32, "car": [32, 270, 449, 905], "card_box": 32, "card_file_box": 32, "card_index": 32, "card_index_divid": 32, "caribbean_netherland": 32, "carousel_hors": 32, "carpentry_saw": 32, "carrot": 32, "cartwheel": 32, "cartwheel_tone1": 32, "cartwheel_tone2": 32, "cartwheel_tone3": 32, "cartwheel_tone4": 32, "cartwheel_tone5": 32, "cat2": 32, "cat": [32, 154, 158, 192, 204, 258, 267, 268, 270, 288, 289, 325, 326, 425, 449, 524, 761, 766, 771, 788, 808, 824, 835, 836, 838, 839, 848, 850, 852, 880, 887, 895, 896, 898, 899, 901, 904, 905, 912, 913, 914, 915, 939, 941, 942, 946, 970, 976, 979, 1165], "cayman_island": 32, "cd": [32, 61, 138, 155, 156, 158, 159, 162, 163, 167, 180, 181, 214, 224, 244, 252, 257, 259, 326, 340, 345, 450, 522, 525, 585, 781, 783, 808, 809, 832, 834, 835, 836, 839, 845, 853, 858, 860, 868, 892, 905, 912, 913, 921, 934, 983, 984, 996, 997, 1061], "central_african_republ": 32, "ceuta_melilla": 32, "cf": [32, 314, 834, 951], "cg": 32, "ch": 32, "chad": 32, "chain": [32, 145, 151, 162, 172, 234, 251, 427, 813, 961], "chair": [32, 184], "champagn": 32, "champagne_glass": 32, "chart": [32, 198, 213, 222, 235, 249, 252, 285, 291, 1106, 1113], "chart_with_downwards_trend": 32, "chart_with_upwards_trend": 32, "checkered_flag": 32, "chees": 32, "cheese_wedg": 32, "cherri": 32, "cherry_blossom": 32, "chess_pawn": 32, "chestnut": 32, "chicken": 32, "child": [32, 99, 169, 258, 267, 268, 288, 289, 759, 761, 838, 840, 842, 843, 854, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 877, 879, 880, 904, 916, 917, 918, 919, 920, 945, 951, 958, 963, 980, 992, 993, 1023, 1131], "child_dark_skin_ton": 32, "child_light_skin_ton": 32, "child_medium_dark_skin_ton": 32, "child_medium_light_skin_ton": 32, "child_medium_skin_ton": 32, "child_tone1": 32, "child_tone2": 32, "child_tone3": 32, "child_tone4": 32, "child_tone5": 32, "children_cross": 32, "chile": 32, "china": 32, "chipmunk": 32, "chocolate_bar": 32, "chopstick": 32, "christmas_island": 32, "christmas_tre": 32, "church": 32, "ci": [32, 1139], "cinema": 32, "circus_t": 32, "city_dusk": 32, "city_sunris": 32, "city_sunset": 32, "cityscap": 32, "ck": 32, "cl": [32, 240, 265, 1022, 1023], "clamp": 32, "clap": 32, "clap_tone1": 32, "clap_tone2": 32, "clap_tone3": 32, "clap_tone4": 32, "clap_tone5": 32, "clapper": 32, "classical_build": 32, "clinking_glass": 32, "clipboard": 32, "clipperton_island": 32, "clock1030": 32, "clock10": 32, "clock1130": 32, "clock11": 32, "clock1230": 32, "clock12": 32, "clock130": 32, "clock1": 32, "clock230": 32, "clock2": 32, "clock330": 32, "clock3": 32, "clock430": 32, "clock4": 32, "clock530": 32, "clock5": 32, "clock630": 32, "clock6": 32, "clock730": 32, "clock7": 32, "clock830": 32, "clock8": 32, "clock930": 32, "clock9": 32, "clock": [32, 126, 227, 228, 436, 912], "closed_book": 32, "closed_lock_with_kei": 32, "closed_umbrella": 32, "cloud": [32, 101, 159, 204, 228, 339, 340, 343, 668, 670, 921, 1110, 1111, 1134], "cloud_lightn": 32, "cloud_rain": 32, "cloud_snow": 32, "cloud_tornado": 32, "cloud_with_lightn": 32, "cloud_with_lightning_and_rain": 32, "cloud_with_rain": 32, "cloud_with_snow": 32, "cloud_with_tornado": 32, "clown": 32, "clown_fac": 32, "club": [32, 38], "cm": 32, "cn": [32, 162], "coat": 32, "cockroach": 32, "cocktail": 32, "coconut": [32, 276], "cocos_island": 32, "coffe": [32, 155, 640, 912], "coffin": 32, "coin": 32, "cold_fac": 32, "cold_sweat": 32, "colombia": 32, "comet": 32, "comoro": 32, "compass": 32, "compress": [32, 112, 153, 167, 258, 267, 268, 288, 761, 832, 838, 904, 992, 993, 994, 997], "computer_mous": 32, "confetti_bal": 32, "confound": 32, "confus": [32, 152, 156, 184, 213, 382, 390, 436, 583, 593, 669, 680, 1048, 1132], "congo": 32, "congo_brazzavil": 32, "congo_kinshasa": 32, "congratul": 32, "construct": [32, 184, 190, 271, 274, 385, 398, 408, 437, 447, 551, 602, 621, 622, 678, 726, 1020, 1027, 1044, 1055], "construction_sit": 32, "construction_work": 32, "construction_worker_man": 32, "construction_worker_tone1": 32, "construction_worker_tone2": 32, "construction_worker_tone3": 32, "construction_worker_tone4": 32, "construction_worker_tone5": 32, "construction_worker_woman": 32, "control_knob": 32, "convenience_stor": 32, "cook": [32, 268], "cook_dark_skin_ton": 32, "cook_island": 32, "cook_light_skin_ton": 32, "cook_medium_dark_skin_ton": 32, "cook_medium_light_skin_ton": 32, "cook_medium_skin_ton": 32, "cook_tone1": 32, "cook_tone2": 32, "cook_tone3": 32, "cook_tone4": 32, "cook_tone5": 32, "cooki": [32, 790, 804], "cool": [32, 65, 138, 153, 154, 157, 159, 167, 172, 173, 184, 185, 188, 203, 268, 281, 358, 443, 449, 477, 486, 623, 665, 666, 682, 685, 704, 714, 717, 739, 808, 864, 914, 999, 1003, 1006, 1023, 1042, 1056, 1106, 1113, 1118, 1159], "cop": 32, "cop_tone1": 32, "cop_tone2": 32, "cop_tone3": 32, "cop_tone4": 32, "cop_tone5": 32, "copyright": [32, 36, 163, 204, 221, 227, 237, 240, 265, 333, 337, 575, 724, 1032], "corn": 32, "costa_rica": 32, "cote_divoir": 32, "couch": 32, "couch_and_lamp": 32, "coupl": [32, 43, 132, 151, 152, 153, 154, 159, 172, 184, 188, 361, 398, 432, 437, 713, 901, 936, 955], "couple_mm": 32, "couple_with_heart": 32, "couple_with_heart_dark_skin_ton": 32, "couple_with_heart_light_skin_ton": 32, "couple_with_heart_man_man": 32, "couple_with_heart_man_man_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_man_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_man_man_tone1": 32, "couple_with_heart_man_man_tone1_tone2": 32, "couple_with_heart_man_man_tone1_tone3": 32, "couple_with_heart_man_man_tone1_tone4": 32, "couple_with_heart_man_man_tone1_tone5": 32, "couple_with_heart_man_man_tone2": 32, "couple_with_heart_man_man_tone2_tone1": 32, "couple_with_heart_man_man_tone2_tone3": 32, "couple_with_heart_man_man_tone2_tone4": 32, "couple_with_heart_man_man_tone2_tone5": 32, "couple_with_heart_man_man_tone3": 32, "couple_with_heart_man_man_tone3_tone1": 32, "couple_with_heart_man_man_tone3_tone2": 32, "couple_with_heart_man_man_tone3_tone4": 32, "couple_with_heart_man_man_tone3_tone5": 32, "couple_with_heart_man_man_tone4": 32, "couple_with_heart_man_man_tone4_tone1": 32, "couple_with_heart_man_man_tone4_tone2": 32, "couple_with_heart_man_man_tone4_tone3": 32, "couple_with_heart_man_man_tone4_tone5": 32, "couple_with_heart_man_man_tone5": 32, "couple_with_heart_man_man_tone5_tone1": 32, "couple_with_heart_man_man_tone5_tone2": 32, "couple_with_heart_man_man_tone5_tone3": 32, "couple_with_heart_man_man_tone5_tone4": 32, "couple_with_heart_medium_dark_skin_ton": 32, "couple_with_heart_medium_light_skin_ton": 32, "couple_with_heart_medium_skin_ton": 32, "couple_with_heart_mm": 32, "couple_with_heart_person_person_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_person_person_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_person_person_tone1_tone2": 32, "couple_with_heart_person_person_tone1_tone3": 32, "couple_with_heart_person_person_tone1_tone4": 32, "couple_with_heart_person_person_tone1_tone5": 32, "couple_with_heart_person_person_tone2_tone1": 32, "couple_with_heart_person_person_tone2_tone3": 32, "couple_with_heart_person_person_tone2_tone4": 32, "couple_with_heart_person_person_tone2_tone5": 32, "couple_with_heart_person_person_tone3_tone1": 32, "couple_with_heart_person_person_tone3_tone2": 32, "couple_with_heart_person_person_tone3_tone4": 32, "couple_with_heart_person_person_tone3_tone5": 32, "couple_with_heart_person_person_tone4_tone1": 32, "couple_with_heart_person_person_tone4_tone2": 32, "couple_with_heart_person_person_tone4_tone3": 32, "couple_with_heart_person_person_tone4_tone5": 32, "couple_with_heart_person_person_tone5_tone1": 32, "couple_with_heart_person_person_tone5_tone2": 32, "couple_with_heart_person_person_tone5_tone3": 32, "couple_with_heart_person_person_tone5_tone4": 32, "couple_with_heart_tone1": 32, "couple_with_heart_tone2": 32, "couple_with_heart_tone3": 32, "couple_with_heart_tone4": 32, "couple_with_heart_tone5": 32, "couple_with_heart_woman_man": 32, "couple_with_heart_woman_man_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_man_tone1": 32, "couple_with_heart_woman_man_tone1_tone2": 32, "couple_with_heart_woman_man_tone1_tone3": 32, "couple_with_heart_woman_man_tone1_tone4": 32, "couple_with_heart_woman_man_tone1_tone5": 32, "couple_with_heart_woman_man_tone2": 32, "couple_with_heart_woman_man_tone2_tone1": 32, "couple_with_heart_woman_man_tone2_tone3": 32, "couple_with_heart_woman_man_tone2_tone4": 32, "couple_with_heart_woman_man_tone2_tone5": 32, "couple_with_heart_woman_man_tone3": 32, "couple_with_heart_woman_man_tone3_tone1": 32, "couple_with_heart_woman_man_tone3_tone2": 32, "couple_with_heart_woman_man_tone3_tone4": 32, "couple_with_heart_woman_man_tone3_tone5": 32, "couple_with_heart_woman_man_tone4": 32, "couple_with_heart_woman_man_tone4_tone1": 32, "couple_with_heart_woman_man_tone4_tone2": 32, "couple_with_heart_woman_man_tone4_tone3": 32, "couple_with_heart_woman_man_tone4_tone5": 32, "couple_with_heart_woman_man_tone5": 32, "couple_with_heart_woman_man_tone5_tone1": 32, "couple_with_heart_woman_man_tone5_tone2": 32, "couple_with_heart_woman_man_tone5_tone3": 32, "couple_with_heart_woman_man_tone5_tone4": 32, "couple_with_heart_woman_woman": 32, "couple_with_heart_woman_woman_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_light_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "couple_with_heart_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "couple_with_heart_woman_woman_tone1": 32, "couple_with_heart_woman_woman_tone1_tone2": 32, "couple_with_heart_woman_woman_tone1_tone3": 32, "couple_with_heart_woman_woman_tone1_tone4": 32, "couple_with_heart_woman_woman_tone1_tone5": 32, "couple_with_heart_woman_woman_tone2": 32, "couple_with_heart_woman_woman_tone2_tone1": 32, "couple_with_heart_woman_woman_tone2_tone3": 32, "couple_with_heart_woman_woman_tone2_tone4": 32, "couple_with_heart_woman_woman_tone2_tone5": 32, "couple_with_heart_woman_woman_tone3": 32, "couple_with_heart_woman_woman_tone3_tone1": 32, "couple_with_heart_woman_woman_tone3_tone2": 32, "couple_with_heart_woman_woman_tone3_tone4": 32, "couple_with_heart_woman_woman_tone3_tone5": 32, "couple_with_heart_woman_woman_tone4": 32, "couple_with_heart_woman_woman_tone4_tone1": 32, "couple_with_heart_woman_woman_tone4_tone2": 32, "couple_with_heart_woman_woman_tone4_tone3": 32, "couple_with_heart_woman_woman_tone4_tone5": 32, "couple_with_heart_woman_woman_tone5": 32, "couple_with_heart_woman_woman_tone5_tone1": 32, "couple_with_heart_woman_woman_tone5_tone2": 32, "couple_with_heart_woman_woman_tone5_tone3": 32, "couple_with_heart_woman_woman_tone5_tone4": 32, "couple_with_heart_ww": 32, "couple_ww": 32, "couplekiss": 32, "couplekiss_man_man": 32, "couplekiss_man_woman": 32, "couplekiss_mm": 32, "couplekiss_woman_woman": 32, "couplekiss_ww": 32, "cow2": 32, "cow": 32, "cowboi": 32, "cowboy_hat_fac": 32, "cp": [32, 99, 114, 153, 155, 158, 192, 194, 258, 267, 268, 288, 289, 340, 345, 761, 808, 835, 836, 837, 838, 839, 868, 872, 873, 875, 876, 879, 880, 882, 888, 904, 912, 924, 935, 996, 1165], "cr": [32, 1056], "crab": 32, "crayon": 32, "credit_card": 32, "crescent_moon": 32, "cricket": 32, "cricket_bat_bal": 32, "cricket_gam": 32, "croatia": 32, "crocodil": 32, "croissant": 32, "cross": [32, 38, 65, 103, 104, 106, 122, 151, 164, 188, 282, 294, 295, 310, 311, 341, 342, 343, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 942, 943, 945, 959, 962, 965, 967, 984, 988, 989, 990, 991, 993, 996, 1161], "crossed_fing": 32, "crossed_flag": 32, "crossed_sword": 32, "crown": 32, "cruise_ship": 32, "cry": [32, 152], "crying_cat_fac": 32, "crystal_bal": 32, "cu": 32, "cuba": 32, "cucumb": 32, "cup_with_straw": 32, "cupcak": 32, "cupid": 32, "curacao": 32, "curling_ston": 32, "curly_hair": 32, "curly_loop": 32, "currency_exchang": 32, "curri": [32, 213], "custard": 32, "cut_of_meat": 32, "cw": 32, "cx": 32, "cy": 32, "cyclon": 32, "cypru": 32, "cz": 32, "czech_republ": 32, "dagger": [32, 38], "dagger_knif": 32, "dancer": 32, "dancer_tone1": 32, "dancer_tone2": 32, "dancer_tone3": 32, "dancer_tone4": 32, "dancer_tone5": 32, "dancing_men": 32, "dancing_women": 32, "dango": 32, "dark_sunglass": 32, "dart": 32, "dash": [32, 34, 35, 38, 609], "date": [32, 112, 149, 155, 163, 167, 184, 190, 220, 252, 268, 270, 313, 353, 354, 449, 809, 1001, 1095, 1097, 1101, 1103, 1110, 1115], "deaf_man": 32, "deaf_man_dark_skin_ton": 32, "deaf_man_light_skin_ton": 32, "deaf_man_medium_dark_skin_ton": 32, "deaf_man_medium_light_skin_ton": 32, "deaf_man_medium_skin_ton": 32, "deaf_man_tone1": 32, "deaf_man_tone2": 32, "deaf_man_tone3": 32, "deaf_man_tone4": 32, "deaf_man_tone5": 32, "deaf_person": 32, "deaf_person_dark_skin_ton": 32, "deaf_person_light_skin_ton": 32, "deaf_person_medium_dark_skin_ton": 32, "deaf_person_medium_light_skin_ton": 32, "deaf_person_medium_skin_ton": 32, "deaf_person_tone1": 32, "deaf_person_tone2": 32, "deaf_person_tone3": 32, "deaf_person_tone4": 32, "deaf_person_tone5": 32, "deaf_woman": 32, "deaf_woman_dark_skin_ton": 32, "deaf_woman_light_skin_ton": 32, "deaf_woman_medium_dark_skin_ton": 32, "deaf_woman_medium_light_skin_ton": 32, "deaf_woman_medium_skin_ton": 32, "deaf_woman_tone1": 32, "deaf_woman_tone2": 32, "deaf_woman_tone3": 32, "deaf_woman_tone4": 32, "deaf_woman_tone5": 32, "deciduous_tre": 32, "deer": 32, "denmark": 32, "department_stor": 32, "derelict_hous": 32, "derelict_house_build": 32, "desert": 32, "desert_island": 32, "desktop": [32, 140, 152, 157, 213, 282, 890, 967, 1163, 1170], "desktop_comput": 32, "detective_tone1": 32, "detective_tone2": 32, "detective_tone3": 32, "detective_tone4": 32, "detective_tone5": 32, "dg": 32, "diamond_shape_with_a_dot_insid": 32, "diamond": [32, 34, 38, 212, 225], "diego_garcia": 32, "digit_eight": 32, "digit_f": 32, "digit_four": 32, "digit_nin": 32, "digit_on": 32, "digit_seven": 32, "digit_six": 32, "digit_thre": 32, "digit_two": 32, "digit_zero": 32, "disappoint": 32, "disappointed_reliev": 32, "disguised_fac": 32, "divid": [32, 35, 36, 38, 244, 1113], "diving_mask": 32, "diya_lamp": 32, "dizzi": 32, "dizzy_fac": 32, "dj": 32, "djibouti": 32, "dk": 32, "dm": 32, "dna": 32, "do_not_litt": 32, "dodo": 32, "dog2": 32, "dog": [32, 425], "dollar": [32, 36], "doll": 32, "dolphin": 32, "dominica": 32, "dominican_republ": 32, "door": [32, 230, 543, 798, 1016], "double_vertical_bar": 32, "doughnut": 32, "dove": 32, "dove_of_peac": 32, "dragon": [32, 97, 214, 230, 277, 279, 317, 543, 567, 568, 573, 662, 674, 676, 705, 710, 721, 725, 730, 738, 758, 760, 761, 979], "dragon_fac": 32, "dress": [32, 149], "dromedary_camel": 32, "drool": 32, "drooling_fac": 32, "drop_of_blood": 32, "droplet": 32, "drum": 32, "drum_with_drumstick": 32, "dumpl": 32, "dvd": 32, "dz": 32, "mail": [32, 149, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899, 1119, 1153], "ea": [32, 162], "eagl": [32, 224, 1063], "ear": 32, "ear_of_ric": 32, "ear_tone1": 32, "ear_tone2": 32, "ear_tone3": 32, "ear_tone4": 32, "ear_tone5": 32, "ear_with_hearing_aid": 32, "ear_with_hearing_aid_dark_skin_ton": 32, "ear_with_hearing_aid_light_skin_ton": 32, "ear_with_hearing_aid_medium_dark_skin_ton": 32, "ear_with_hearing_aid_medium_light_skin_ton": 32, "ear_with_hearing_aid_medium_skin_ton": 32, "ear_with_hearing_aid_tone1": 32, "ear_with_hearing_aid_tone2": 32, "ear_with_hearing_aid_tone3": 32, "ear_with_hearing_aid_tone4": 32, "ear_with_hearing_aid_tone5": 32, "earth_africa": 32, "earth_america": 32, "earth_asia": 32, "ec": [32, 97, 162, 204, 337, 340, 345, 348, 357, 761, 837, 838, 868, 904], "ecuador": 32, "ee": [32, 162], "eg": [32, 35, 119], "egg": [32, 61, 1050], "eggplant": 32, "egypt": 32, "eight": [32, 123, 154, 172, 185, 195, 203, 232, 234, 340, 914, 1119], "eight_pointed_black_star": 32, "eight_spoked_asterisk": 32, "eject": 32, "eject_symbol": 32, "el_salvador": 32, "electric_plug": 32, "eleph": 32, "elev": 32, "elf": [32, 160, 163, 195, 211, 221, 455, 551, 951, 982, 983, 999, 1033, 1173], "elf_dark_skin_ton": 32, "elf_light_skin_ton": 32, "elf_medium_dark_skin_ton": 32, "elf_medium_light_skin_ton": 32, "elf_medium_skin_ton": 32, "elf_tone1": 32, "elf_tone2": 32, "elf_tone3": 32, "elf_tone4": 32, "elf_tone5": 32, "england": 32, "envelop": [32, 808], "envelope_with_arrow": 32, "equatorial_guinea": 32, "er": [32, 161, 170, 185, 187, 195, 232, 1154, 1155, 1156], "eritrea": 32, "estonia": 32, "et": [32, 97, 575, 724, 928, 983, 984, 1025], "ethiopia": 32, "euro": [32, 491, 492, 493, 505, 506, 507], "european_castl": 32, "european_post_offic": 32, "european_union": 32, "evergreen_tre": 32, "exclam": [32, 36], "expecting_woman": 32, "expecting_woman_tone1": 32, "expecting_woman_tone2": 32, "expecting_woman_tone3": 32, "expecting_woman_tone4": 32, "expecting_woman_tone5": 32, "exploding_head": 32, "expressionless": 32, "eye_in_speech_bubbl": 32, "eye_speech_bubbl": 32, "eyeglass": 32, "face_exh": 32, "face_in_cloud": 32, "face_palm": 32, "face_palm_tone1": 32, "face_palm_tone2": 32, "face_palm_tone3": 32, "face_palm_tone4": 32, "face_palm_tone5": 32, "face_vomit": 32, "face_with_cowboy_hat": 32, "face_with_hand_over_mouth": 32, "face_with_head_bandag": 32, "face_with_monocl": 32, "face_with_rolling_ey": 32, "face_with_spiral_ey": 32, "face_with_symbols_over_mouth": 32, "face_with_thermomet": 32, "facepalm": 32, "facepalm_tone1": 32, "facepalm_tone2": 32, "facepalm_tone3": 32, "facepalm_tone4": 32, "facepalm_tone5": 32, "factori": [32, 106, 212, 225, 260, 279, 349, 464, 471, 485, 499, 513, 565, 761, 934, 1162], "factory_work": 32, "factory_worker_dark_skin_ton": 32, "factory_worker_light_skin_ton": 32, "factory_worker_medium_dark_skin_ton": 32, "factory_worker_medium_light_skin_ton": 32, "factory_worker_medium_skin_ton": 32, "factory_worker_tone1": 32, "factory_worker_tone2": 32, "factory_worker_tone3": 32, "factory_worker_tone4": 32, "factory_worker_tone5": 32, "fairi": 32, "fairy_dark_skin_ton": 32, "fairy_light_skin_ton": 32, "fairy_medium_dark_skin_ton": 32, "fairy_medium_light_skin_ton": 32, "fairy_medium_skin_ton": 32, "fairy_tone1": 32, "fairy_tone2": 32, "fairy_tone3": 32, "fairy_tone4": 32, "fairy_tone5": 32, "falafel": 32, "falkland_island": 32, "fallen_leaf": 32, "famili": [32, 176, 908, 914], "family_man_boi": 32, "family_man_boy_boi": 32, "family_man_girl": 32, "family_man_girl_boi": 32, "family_man_girl_girl": 32, "family_man_man_boi": 32, "family_man_man_boy_boi": 32, "family_man_man_girl": 32, "family_man_man_girl_boi": 32, "family_man_man_girl_girl": 32, "family_man_woman_boi": 32, "family_man_woman_boy_boi": 32, "family_man_woman_girl": 32, "family_man_woman_girl_boi": 32, "family_man_woman_girl_girl": 32, "family_mmb": 32, "family_mmbb": 32, "family_mmg": 32, "family_mmgb": 32, "family_mmgg": 32, "family_mwbb": 32, "family_mwg": 32, "family_mwgb": 32, "family_mwgg": 32, "family_woman_boi": 32, "family_woman_boy_boi": 32, "family_woman_girl": 32, "family_woman_girl_boi": 32, "family_woman_girl_girl": 32, "family_woman_woman_boi": 32, "family_woman_woman_boy_boi": 32, "family_woman_woman_girl": 32, "family_woman_woman_girl_boi": 32, "family_woman_woman_girl_girl": 32, "family_wwb": 32, "family_wwbb": 32, "family_wwg": 32, "family_wwgb": 32, "family_wwgg": 32, "farmer": 32, "farmer_dark_skin_ton": 32, "farmer_light_skin_ton": 32, "farmer_medium_dark_skin_ton": 32, "farmer_medium_light_skin_ton": 32, "farmer_medium_skin_ton": 32, "farmer_tone1": 32, "farmer_tone2": 32, "farmer_tone3": 32, "farmer_tone4": 32, "farmer_tone5": 32, "faroe_island": 32, "fast_forward": 32, "fax": 32, "fear": [32, 270, 942], "feather": 32, "feet": 32, "female_detect": 32, "female_sign": 32, "fencer": 32, "fenc": 32, "ferris_wheel": 32, "ferri": 32, "fi": [32, 938, 946, 961], "field_hockei": 32, "fiji": 32, "file_cabinet": 32, "file_fold": 32, "film_fram": 32, "film_projector": 32, "film_strip": 32, "fingers_cross": 32, "fingers_crossed_tone1": 32, "fingers_crossed_tone2": 32, "fingers_crossed_tone3": 32, "fingers_crossed_tone4": 32, "fingers_crossed_tone5": 32, "finland": 32, "fire": [32, 43, 63, 427], "fire_engin": 32, "fire_extinguish": 32, "firecrack": 32, "firefight": 32, "firefighter_dark_skin_ton": 32, "firefighter_light_skin_ton": 32, "firefighter_medium_dark_skin_ton": 32, "firefighter_medium_light_skin_ton": 32, "firefighter_medium_skin_ton": 32, "firefighter_tone1": 32, "firefighter_tone2": 32, "firefighter_tone3": 32, "firefighter_tone4": 32, "firefighter_tone5": 32, "firework": 32, "first_plac": 32, "first_place_med": 32, "first_quarter_moon": 32, "first_quarter_moon_with_fac": 32, "fish": [32, 34, 1141], "fish_cak": 32, "fishing_pole_and_fish": 32, "fist": 32, "fist_left": 32, "fist_oncom": 32, "fist_rais": 32, "fist_right": 32, "fist_tone1": 32, "fist_tone2": 32, "fist_tone3": 32, "fist_tone4": 32, "fist_tone5": 32, "five": [32, 36, 63, 152, 172, 185, 195, 203, 224, 234, 240, 250, 265, 286, 304, 308, 316, 340, 358, 1063, 1105], "fj": 32, "fk": 32, "flag_ac": 32, "flag_ad": 32, "flag_a": 32, "flag_af": 32, "flag_ag": 32, "flag_ai": 32, "flag_al": 32, "flag_am": 32, "flag_ao": 32, "flag_aq": 32, "flag_ar": 32, "flag_at": 32, "flag_au": 32, "flag_aw": 32, "flag_ax": 32, "flag_az": 32, "flag_ba": 32, "flag_bb": 32, "flag_bd": 32, "flag_b": 32, "flag_bf": 32, "flag_bg": 32, "flag_bh": 32, "flag_bi": 32, "flag_bj": 32, "flag_bl": 32, "flag_black": 32, "flag_bm": 32, "flag_bn": 32, "flag_bo": 32, "flag_bq": 32, "flag_br": 32, "flag_bt": 32, "flag_bv": 32, "flag_bw": 32, "flag_bz": 32, "flag_ca": 32, "flag_cc": 32, "flag_cd": 32, "flag_cf": 32, "flag_cg": 32, "flag_ch": 32, "flag_ci": 32, "flag_ck": 32, "flag_cl": 32, "flag_cm": 32, "flag_cn": 32, "flag_co": 32, "flag_cp": 32, "flag_cr": 32, "flag_cu": 32, "flag_cv": 32, "flag_cw": 32, "flag_cx": 32, "flag_cz": 32, "flag_d": 32, "flag_dg": 32, "flag_dj": 32, "flag_dk": 32, "flag_dm": 32, "flag_do": 32, "flag_dz": 32, "flag_ea": 32, "flag_ec": 32, "flag_e": 32, "flag_eg": 32, "flag_eh": 32, "flag_er": 32, "flag_": 32, "flag_et": 32, "flag_eu": 32, "flag_fi": 32, "flag_fj": 32, "flag_fk": 32, "flag_fm": 32, "flag_fo": 32, "flag_fr": 32, "flag_ga": 32, "flag_gb": 32, "flag_gd": 32, "flag_g": 32, "flag_gf": 32, "flag_gg": 32, "flag_gh": 32, "flag_gi": 32, "flag_gl": 32, "flag_gm": 32, "flag_gn": 32, "flag_gp": 32, "flag_gq": 32, "flag_gr": 32, "flag_gt": 32, "flag_gu": 32, "flag_gw": 32, "flag_hk": 32, "flag_hm": 32, "flag_hn": 32, "flag_hr": 32, "flag_ht": 32, "flag_hu": 32, "flag_ic": 32, "flag_id": 32, "flag_i": 32, "flag_il": 32, "flag_im": 32, "flag_in": 32, "flag_io": 32, "flag_iq": 32, "flag_ir": 32, "flag_it": 32, "flag_j": 32, "flag_jm": 32, "flag_jo": 32, "flag_jp": 32, "flag_k": 32, "flag_kg": 32, "flag_kh": 32, "flag_ki": 32, "flag_km": 32, "flag_kn": 32, "flag_kp": 32, "flag_kr": 32, "flag_kw": 32, "flag_kz": 32, "flag_la": 32, "flag_lb": 32, "flag_lc": 32, "flag_li": 32, "flag_lk": 32, "flag_lr": 32, "flag_l": 32, "flag_lt": 32, "flag_lu": 32, "flag_lv": 32, "flag_ma": 32, "flag_mc": 32, "flag_md": 32, "flag_m": 32, "flag_mf": 32, "flag_mg": 32, "flag_mh": 32, "flag_mk": 32, "flag_ml": 32, "flag_mm": 32, "flag_mn": 32, "flag_mo": 32, "flag_mp": 32, "flag_mq": 32, "flag_mr": 32, "flag_mt": 32, "flag_mu": 32, "flag_mv": 32, "flag_mw": 32, "flag_mx": 32, "flag_mi": 32, "flag_mz": 32, "flag_na": 32, "flag_nc": 32, "flag_n": 32, "flag_nf": 32, "flag_ng": 32, "flag_ni": 32, "flag_nl": 32, "flag_no": 32, "flag_np": 32, "flag_nr": 32, "flag_nu": 32, "flag_nz": 32, "flag_om": 32, "flag_pa": 32, "flag_p": 32, "flag_pf": 32, "flag_pg": 32, "flag_ph": 32, "flag_pk": 32, "flag_pl": 32, "flag_pm": 32, "flag_pn": 32, "flag_pr": 32, "flag_pt": 32, "flag_pw": 32, "flag_pi": 32, "flag_qa": 32, "flag_r": 32, "flag_ro": 32, "flag_ru": 32, "flag_rw": 32, "flag_sa": 32, "flag_sb": 32, "flag_sc": 32, "flag_sd": 32, "flag_s": 32, "flag_sg": 32, "flag_sh": 32, "flag_si": 32, "flag_sj": 32, "flag_sk": 32, "flag_sl": 32, "flag_sm": 32, "flag_sn": 32, "flag_so": 32, "flag_sr": 32, "flag_ss": 32, "flag_st": 32, "flag_sv": 32, "flag_sx": 32, "flag_sz": 32, "flag_ta": 32, "flag_tc": 32, "flag_td": 32, "flag_tf": 32, "flag_tg": 32, "flag_th": 32, "flag_tj": 32, "flag_tk": 32, "flag_tl": 32, "flag_tm": 32, "flag_tn": 32, "flag_to": 32, "flag_tr": 32, "flag_tt": 32, "flag_tv": 32, "flag_tw": 32, "flag_tz": 32, "flag_ua": 32, "flag_ug": 32, "flag_um": 32, "flag_u": 32, "flag_ui": 32, "flag_uz": 32, "flag_va": 32, "flag_vc": 32, "flag_v": 32, "flag_vg": 32, "flag_vi": 32, "flag_vn": 32, "flag_vu": 32, "flag_wf": 32, "flag_whit": 32, "flag_w": 32, "flag_xk": 32, "flag_y": 32, "flag_yt": 32, "flag_za": 32, "flag_zm": 32, "flag_zw": 32, "flag": [32, 48, 152, 154, 169, 180, 191, 221, 227, 230, 234, 237, 240, 265, 268, 279, 281, 295, 311, 333, 452, 453, 454, 459, 462, 648, 662, 739, 761, 767, 776, 790, 813, 816, 818, 906, 908, 937, 938, 939, 941, 955, 976, 980, 1041], "flame": [32, 155], "flamingo": 32, "flan": 32, "flashlight": 32, "flatbread": 32, "fleur": 32, "li": [32, 148, 244, 601], "fleur_de_li": 32, "flight_arriv": 32, "flight_departur": 32, "floppy_disk": 32, "flower_playing_card": 32, "fly": [32, 834, 905], "flying_disc": 32, "flying_sauc": 32, "fm": 32, "fo": 32, "fog": 32, "foggi": 32, "fondu": 32, "foot": [32, 69, 401, 870], "foot_dark_skin_ton": 32, "foot_light_skin_ton": 32, "foot_medium_dark_skin_ton": 32, "foot_medium_light_skin_ton": 32, "foot_medium_skin_ton": 32, "foot_tone1": 32, "foot_tone2": 32, "foot_tone3": 32, "foot_tone4": 32, "foot_tone5": 32, "footbal": 32, "footprint": [32, 184, 1030], "fork_and_knif": 32, "fork_and_knife_with_pl": 32, "fork_knife_pl": 32, "fortune_cooki": 32, "fountain": 32, "fountain_pen": 32, "four": [32, 35, 65, 151, 156, 172, 184, 185, 188, 195, 202, 203, 211, 227, 232, 234, 244, 247, 250, 261, 265, 268, 282, 285, 286, 292, 307, 308, 314, 320, 340, 808, 874, 1044, 1052, 1105, 1106, 1114, 1139, 1162], "four_leaf_clov": 32, "fox": [32, 425], "fox_fac": 32, "fr": [32, 163], "frame_photo": 32, "frame_with_pictur": 32, "framed_pictur": 32, "franc": 32, "french_bread": 32, "french_guiana": 32, "french_polynesia": 32, "french_southern_territori": 32, "fried_egg": 32, "fried_shrimp": 32, "fri": 32, "frog": 32, "frowning2": 32, "frown": [32, 35, 69, 1159], "frowning_fac": 32, "frowning_man": 32, "frowning_woman": 32, "fuelpump": 32, "full_moon": 32, "full_moon_with_fac": 32, "funeral_urn": 32, "ga": 32, "gabon": 32, "gambia": 32, "game_di": 32, "garlic": 32, "gay_pride_flag": 32, "gb": [32, 936], "gd": 32, "ge": [32, 35], "gear": 32, "gem": 32, "gemini": 32, "geni": 32, "georgia": 32, "germani": [32, 152, 153, 358], "gf": 32, "gg": [32, 35, 38], "gh": [32, 148, 1128], "ghana": 32, "ghost": 32, "gi": [32, 148, 235], "gibraltar": 32, "gift": [32, 188, 219], "gift_heart": 32, "giraff": 32, "girl": 32, "girl_tone1": 32, "girl_tone2": 32, "girl_tone3": 32, "girl_tone4": 32, "girl_tone5": 32, "gl": [32, 35], "glass_of_milk": 32, "globe_with_meridian": 32, "glove": 32, "gm": 32, "gn": 32, "goal": [32, 42, 68, 152, 271, 274, 325, 449, 459, 728, 747, 835, 836, 998, 1007], "goal_net": 32, "goat": 32, "goggl": 32, "golf": 32, "golfer": 32, "golfing_man": 32, "golfing_woman": 32, "gorilla": 32, "gp": 32, "gq": 32, "gr": [32, 292, 308, 1119], "grandma": 32, "grandma_tone1": 32, "grandma_tone2": 32, "grandma_tone3": 32, "grandma_tone4": 32, "grandma_tone5": 32, "grape": 32, "great_britain": 32, "greec": 32, "green_appl": 32, "green_book": 32, "green_circl": 32, "green_heart": 32, "green_salad": 32, "green_squar": 32, "greenland": 32, "grenada": 32, "grey_exclam": 32, "grey_quest": 32, "grin": 32, "gu": 32, "guadeloup": 32, "guam": 32, "guard": [32, 214, 230, 457, 736, 737, 739], "guard_tone1": 32, "guard_tone2": 32, "guard_tone3": 32, "guard_tone4": 32, "guard_tone5": 32, "guardsman": 32, "guardsman_tone1": 32, "guardsman_tone2": 32, "guardsman_tone3": 32, "guardsman_tone4": 32, "guardsman_tone5": 32, "guardswoman": 32, "guatemala": 32, "guernsei": 32, "guide_dog": 32, "guinea": 32, "guinea_bissau": 32, "guitar": 32, "gun": 32, "guyana": 32, "gw": 32, "gy": 32, "haircut": 32, "haircut_man": 32, "haircut_tone1": 32, "haircut_tone2": 32, "haircut_tone3": 32, "haircut_tone4": 32, "haircut_tone5": 32, "haircut_woman": 32, "haiti": 32, "hamburg": 32, "hammer": [32, 152, 228, 268, 788, 798], "hammer_and_pick": 32, "hammer_and_wrench": 32, "hammer_pick": 32, "hamster": 32, "hand": [32, 148, 160, 167, 172, 179, 188, 203, 214, 230, 249, 276, 348, 375, 386, 405, 407, 470, 489, 557, 568, 584, 586, 587, 713, 852, 868, 913, 914, 930, 958, 992, 1010, 1025, 1032, 1159, 1165, 1177], "hand_splai": 32, "hand_splayed_tone1": 32, "hand_splayed_tone2": 32, "hand_splayed_tone3": 32, "hand_splayed_tone4": 32, "hand_splayed_tone5": 32, "hand_with_index_and_middle_finger_cross": 32, "hand_with_index_and_middle_fingers_crossed_tone1": 32, "hand_with_index_and_middle_fingers_crossed_tone2": 32, "hand_with_index_and_middle_fingers_crossed_tone3": 32, "hand_with_index_and_middle_fingers_crossed_tone4": 32, "hand_with_index_and_middle_fingers_crossed_tone5": 32, "handbag": 32, "handbal": 32, "handball_tone1": 32, "handball_tone2": 32, "handball_tone3": 32, "handball_tone4": 32, "handball_tone5": 32, "handshak": [32, 737], "handshake_tone1": 32, "handshake_tone2": 32, "handshake_tone3": 32, "handshake_tone4": 32, "handshake_tone5": 32, "hankei": 32, "hash": [32, 184, 190, 191, 202, 208, 221, 227, 228, 231, 235, 237, 240, 244, 265, 272, 286, 340, 460, 808, 1054, 1134], "hatched_chick": 32, "hatching_chick": 32, "head_bandag": 32, "headphon": 32, "headston": 32, "health_work": 32, "health_worker_dark_skin_ton": 32, "health_worker_light_skin_ton": 32, "health_worker_medium_dark_skin_ton": 32, "health_worker_medium_light_skin_ton": 32, "health_worker_medium_skin_ton": 32, "health_worker_tone1": 32, "health_worker_tone2": 32, "health_worker_tone3": 32, "health_worker_tone4": 32, "health_worker_tone5": 32, "hear_no_evil": 32, "heart_decor": 32, "heart_exclam": 32, "heart_ey": 32, "heart_eyes_cat": 32, "heart_on_fir": 32, "heartbeat": 32, "heartpuls": 32, "heavy_check_mark": 32, "heavy_division_sign": 32, "heavy_dollar_sign": 32, "heavy_heart_exclam": 32, "heavy_heart_exclamation_mark_orna": 32, "heavy_minus_sign": 32, "heavy_multiplication_x": 32, "heavy_plus_sign": 32, "hedgehog": 32, "helicopt": 32, "helmet_with_cross": 32, "helmet_with_white_cross": 32, "herb": 32, "hibiscu": 32, "high_bright": 32, "high_heel": 32, "hiking_boot": 32, "hindu_templ": 32, "hippopotamu": 32, "hk": 32, "hn": 32, "hocho": 32, "hockei": 32, "hole": [32, 230, 761, 904, 934, 943, 944, 945, 962, 975], "hondura": 32, "honey_pot": 32, "hong_kong": 32, "hook": [32, 34, 38, 203, 221, 227, 237, 240, 270, 303, 441, 476, 732, 767], "hors": 32, "horse_rac": 32, "horse_racing_tone1": 32, "horse_racing_tone2": 32, "horse_racing_tone3": 32, "horse_racing_tone4": 32, "horse_racing_tone5": 32, "hospit": 32, "hot_dog": 32, "hot_fac": 32, "hot_pepp": 32, "hotdog": 32, "hotel": [32, 157, 358], "hotspr": 32, "hourglass": 32, "hourglass_flowing_sand": 32, "house_abandon": 32, "house_build": 32, "house_with_garden": 32, "hr": 32, "ht": 32, "hu": [32, 331, 332, 349], "hug": 32, "hugging_fac": 32, "hungari": 32, "hush": 32, "hut": 32, "ic": [32, 386, 467, 496, 1158], "ice_cream": 32, "ice_cub": 32, "ice_hockei": 32, "ice_sk": 32, "icecream": 32, "iceland": 32, "id": [32, 42, 46, 107, 110, 111, 154, 157, 167, 171, 174, 184, 185, 195, 202, 208, 221, 224, 227, 234, 237, 238, 240, 247, 250, 254, 262, 265, 272, 278, 282, 286, 292, 297, 304, 309, 314, 320, 335, 456, 491, 492, 493, 505, 506, 507, 524, 772, 804, 806, 828, 835, 836, 841, 843, 852, 853, 854, 864, 871, 892, 894, 895, 906, 912, 914, 921, 940, 950, 992, 1019, 1030, 1046, 1084, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1112, 1114, 1132, 1175], "ideograph_advantag": 32, "ie": 32, "il": [32, 162], "imp": 32, "inbox_trai": 32, "incoming_envelop": 32, "india": [32, 212, 261, 285, 307, 1106], "indonesia": 32, "infin": [32, 119, 191, 240, 313, 1011, 1012], "information_desk_person": 32, "information_desk_person_tone1": 32, "information_desk_person_tone2": 32, "information_desk_person_tone3": 32, "information_desk_person_tone4": 32, "information_desk_person_tone5": 32, "\u2139": 32, "information_sourc": 32, "interrobang": 32, "iphon": 32, "iq": 32, "ir": [32, 868], "iran": 32, "iraq": 32, "ireland": 32, "island": 32, "isle_of_man": 32, "israel": [32, 212, 261, 1106], "itali": 32, "izakaya_lantern": 32, "jack_o_lantern": 32, "jamaica": 32, "japan": 32, "japanese_castl": 32, "japanese_goblin": 32, "japanese_ogr": 32, "jean": 32, "jersei": 32, "jigsaw": 32, "jm": 32, "jo": [32, 195, 208, 221, 224, 234, 237, 240, 244, 247, 286, 292, 320], "jordan": 32, "joi": 32, "joy_cat": 32, "joystick": 32, "jp": 32, "judg": 32, "judge_dark_skin_ton": 32, "judge_light_skin_ton": 32, "judge_medium_dark_skin_ton": 32, "judge_medium_light_skin_ton": 32, "judge_medium_skin_ton": 32, "judge_tone1": 32, "judge_tone2": 32, "judge_tone3": 32, "judge_tone4": 32, "judge_tone5": 32, "juggler": 32, "juggler_tone1": 32, "juggler_tone2": 32, "juggler_tone3": 32, "juggler_tone4": 32, "juggler_tone5": 32, "juggl": 32, "juggling_tone1": 32, "juggling_tone2": 32, "juggling_tone3": 32, "juggling_tone4": 32, "juggling_tone5": 32, "kaaba": 32, "kangaroo": 32, "karate_uniform": 32, "kayak": 32, "kazakhstan": 32, "ke": 32, "kenya": 32, "key2": 32, "keyboard": [32, 340, 850, 900], "keycap_ten": 32, "kg": 32, "kh": 32, "ki": [32, 193], "kick_scoot": 32, "kimono": 32, "kiribati": 32, "kiss_dark_skin_ton": 32, "kiss_light_skin_ton": 32, "kiss_man_man_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_light_skin_ton": 32, "kiss_man_man_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_man_man_medium_skin_ton": 32, "kiss_man_man_medium_skin_tone_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_light_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_man_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_man_man_tone1": 32, "kiss_man_man_tone1_tone2": 32, "kiss_man_man_tone1_tone3": 32, "kiss_man_man_tone1_tone4": 32, "kiss_man_man_tone1_tone5": 32, "kiss_man_man_tone2": 32, "kiss_man_man_tone2_tone1": 32, "kiss_man_man_tone2_tone3": 32, "kiss_man_man_tone2_tone4": 32, "kiss_man_man_tone2_tone5": 32, "kiss_man_man_tone3": 32, "kiss_man_man_tone3_tone1": 32, "kiss_man_man_tone3_tone2": 32, "kiss_man_man_tone3_tone4": 32, "kiss_man_man_tone3_tone5": 32, "kiss_man_man_tone4": 32, "kiss_man_man_tone4_tone1": 32, "kiss_man_man_tone4_tone2": 32, "kiss_man_man_tone4_tone3": 32, "kiss_man_man_tone4_tone5": 32, "kiss_man_man_tone5": 32, "kiss_man_man_tone5_tone1": 32, "kiss_man_man_tone5_tone2": 32, "kiss_man_man_tone5_tone3": 32, "kiss_man_man_tone5_tone4": 32, "kiss_medium_dark_skin_ton": 32, "kiss_medium_light_skin_ton": 32, "kiss_medium_skin_ton": 32, "kiss_mm": 32, "kiss_person_person_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_light_skin_tone_medium_skin_ton": 32, "kiss_person_person_medium_skin_tone_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_light_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_person_person_medium_skin_tone_medium_light_skin_ton": 32, "kiss_person_person_tone1_tone2": 32, "kiss_person_person_tone1_tone3": 32, "kiss_person_person_tone1_tone4": 32, "kiss_person_person_tone1_tone5": 32, "kiss_person_person_tone2_tone1": 32, "kiss_person_person_tone2_tone3": 32, "kiss_person_person_tone2_tone4": 32, "kiss_person_person_tone2_tone5": 32, "kiss_person_person_tone3_tone1": 32, "kiss_person_person_tone3_tone2": 32, "kiss_person_person_tone3_tone4": 32, "kiss_person_person_tone3_tone5": 32, "kiss_person_person_tone4_tone1": 32, "kiss_person_person_tone4_tone2": 32, "kiss_person_person_tone4_tone3": 32, "kiss_person_person_tone4_tone5": 32, "kiss_person_person_tone5_tone1": 32, "kiss_person_person_tone5_tone2": 32, "kiss_person_person_tone5_tone3": 32, "kiss_person_person_tone5_tone4": 32, "kiss_tone1": 32, "kiss_tone2": 32, "kiss_tone3": 32, "kiss_tone4": 32, "kiss_tone5": 32, "kiss_woman_man": 32, "kiss_woman_man_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_man_medium_skin_ton": 32, "kiss_woman_man_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_light_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_man_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_man_tone1": 32, "kiss_woman_man_tone1_tone2": 32, "kiss_woman_man_tone1_tone3": 32, "kiss_woman_man_tone1_tone4": 32, "kiss_woman_man_tone1_tone5": 32, "kiss_woman_man_tone2": 32, "kiss_woman_man_tone2_tone1": 32, "kiss_woman_man_tone2_tone3": 32, "kiss_woman_man_tone2_tone4": 32, "kiss_woman_man_tone2_tone5": 32, "kiss_woman_man_tone3": 32, "kiss_woman_man_tone3_tone1": 32, "kiss_woman_man_tone3_tone2": 32, "kiss_woman_man_tone3_tone4": 32, "kiss_woman_man_tone3_tone5": 32, "kiss_woman_man_tone4": 32, "kiss_woman_man_tone4_tone1": 32, "kiss_woman_man_tone4_tone2": 32, "kiss_woman_man_tone4_tone3": 32, "kiss_woman_man_tone4_tone5": 32, "kiss_woman_man_tone5": 32, "kiss_woman_man_tone5_tone1": 32, "kiss_woman_man_tone5_tone2": 32, "kiss_woman_man_tone5_tone3": 32, "kiss_woman_man_tone5_tone4": 32, "kiss_woman_woman_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_medium_dark_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_light_skin_tone_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_light_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_dark_skin_ton": 32, "kiss_woman_woman_medium_skin_tone_medium_light_skin_ton": 32, "kiss_woman_woman_tone1": 32, "kiss_woman_woman_tone1_tone2": 32, "kiss_woman_woman_tone1_tone3": 32, "kiss_woman_woman_tone1_tone4": 32, "kiss_woman_woman_tone1_tone5": 32, "kiss_woman_woman_tone2": 32, "kiss_woman_woman_tone2_tone1": 32, "kiss_woman_woman_tone2_tone3": 32, "kiss_woman_woman_tone2_tone4": 32, "kiss_woman_woman_tone2_tone5": 32, "kiss_woman_woman_tone3": 32, "kiss_woman_woman_tone3_tone1": 32, "kiss_woman_woman_tone3_tone2": 32, "kiss_woman_woman_tone3_tone4": 32, "kiss_woman_woman_tone3_tone5": 32, "kiss_woman_woman_tone4": 32, "kiss_woman_woman_tone4_tone1": 32, "kiss_woman_woman_tone4_tone2": 32, "kiss_woman_woman_tone4_tone3": 32, "kiss_woman_woman_tone4_tone5": 32, "kiss_woman_woman_tone5": 32, "kiss_woman_woman_tone5_tone1": 32, "kiss_woman_woman_tone5_tone2": 32, "kiss_woman_woman_tone5_tone3": 32, "kiss_woman_woman_tone5_tone4": 32, "kiss_ww": 32, "kissing_cat": 32, "kissing_closed_ey": 32, "kissing_smiling_ey": 32, "kite": 32, "kiwi": 32, "kiwi_fruit": 32, "kiwifruit": 32, "km": [32, 173, 175], "kn": 32, "knife": [32, 767, 934, 1159], "knot": 32, "koala": 32, "koko": 32, "korea": 32, "kosovo": 32, "kp": 32, "kr": 32, "kuwait": 32, "kw": [32, 221, 227, 237, 240], "ky": 32, "kyrgyzstan": 32, "kz": 32, "la": 32, "lab_coat": 32, "label": [32, 39, 40, 58, 173, 175, 222, 235, 249, 252, 285, 291, 397, 402, 409, 415, 419, 422, 426, 429, 435, 439, 444, 445, 666, 667, 705, 758, 760, 761, 788, 1106, 1113, 1125, 1128], "lacross": 32, "ladder": 32, "lady_beetl": 32, "lao": 32, "large_blue_circl": 32, "large_blue_diamond": 32, "large_orange_diamond": 32, "last_quarter_moon": 32, "last_quarter_moon_with_fac": 32, "latin_cross": 32, "latvia": 32, "laugh": 32, "lb": 32, "lc": [32, 189], "leafy_green": 32, "leav": [32, 49, 65, 149, 152, 153, 159, 162, 192, 221, 244, 281, 351, 569, 571, 580, 581, 596, 598, 599, 756, 759, 771, 776, 786, 808, 913, 938, 958, 1046, 1119], "lebanon": 32, "ledger": 32, "left_facing_fist": 32, "left_facing_fist_tone1": 32, "left_facing_fist_tone2": 32, "left_facing_fist_tone3": 32, "left_facing_fist_tone4": 32, "left_facing_fist_tone5": 32, "left_fist": 32, "left_fist_tone1": 32, "left_fist_tone2": 32, "left_fist_tone3": 32, "left_fist_tone4": 32, "left_fist_tone5": 32, "left_luggag": 32, "left_right_arrow": 32, "left_speech_bubbl": 32, "leftwards_arrow_with_hook": 32, "leg": [32, 35], "leg_dark_skin_ton": 32, "leg_light_skin_ton": 32, "leg_medium_dark_skin_ton": 32, "leg_medium_light_skin_ton": 32, "leg_medium_skin_ton": 32, "leg_tone1": 32, "leg_tone2": 32, "leg_tone3": 32, "leg_tone4": 32, "leg_tone5": 32, "lemon": 32, "leo": [32, 331, 332, 349], "leopard": 32, "lesotho": 32, "level_slid": 32, "levit": 32, "levitate_tone1": 32, "levitate_tone2": 32, "levitate_tone3": 32, "levitate_tone4": 32, "levitate_tone5": 32, "liar": 32, "liberia": 32, "libra": 32, "libya": 32, "liechtenstein": 32, "lifter": 32, "lifter_tone1": 32, "lifter_tone2": 32, "lifter_tone3": 32, "lifter_tone4": 32, "lifter_tone5": 32, "light_rail": 32, "linked_paperclip": 32, "lion": 32, "lion_fac": 32, "lip": 32, "lipstick": 32, "lithuania": 32, "lizard": 32, "lk": 32, "llama": 32, "lobster": 32, "lock": [32, 152, 154, 184, 188, 221, 227, 230, 237, 240, 256, 257, 259, 268, 289, 302, 303, 316, 349, 423, 463, 543, 726, 732, 735, 737, 738, 756, 760, 761, 798, 806, 811, 816, 845, 921, 953, 958, 960, 968, 975, 1016, 1106, 1159, 1171, 1174], "lock_with_ink_pen": 32, "lollipop": 32, "long_drum": 32, "loud_sound": 32, "loudspeak": 32, "love_hotel": 32, "love_lett": 32, "love_you_gestur": 32, "love_you_gesture_dark_skin_ton": 32, "love_you_gesture_light_skin_ton": 32, "love_you_gesture_medium_dark_skin_ton": 32, "love_you_gesture_medium_light_skin_ton": 32, "love_you_gesture_medium_skin_ton": 32, "love_you_gesture_tone1": 32, "love_you_gesture_tone2": 32, "love_you_gesture_tone3": 32, "love_you_gesture_tone4": 32, "love_you_gesture_tone5": 32, "low_bright": 32, "lower_left_ballpoint_pen": 32, "lower_left_crayon": 32, "lower_left_fountain_pen": 32, "lower_left_paintbrush": 32, "lr": 32, "lu": 32, "luggag": 32, "lung": 32, "luxembourg": 32, "lv": 32, "ly": 32, "lying_fac": 32, "ma": 32, "macau": 32, "macedonia": 32, "madagascar": 32, "mag": 32, "mag_right": 32, "mage": 32, "mage_dark_skin_ton": 32, "mage_light_skin_ton": 32, "mage_medium_dark_skin_ton": 32, "mage_medium_light_skin_ton": 32, "mage_medium_skin_ton": 32, "mage_tone1": 32, "mage_tone2": 32, "mage_tone3": 32, "mage_tone4": 32, "mage_tone5": 32, "magic_wand": 32, "magnet": 32, "mahjong": 32, "mailbox": 32, "mailbox_clos": 32, "mailbox_with_mail": 32, "mailbox_with_no_mail": 32, "malawi": 32, "malaysia": 32, "maldiv": 32, "male_danc": 32, "male_dancer_tone1": 32, "male_dancer_tone2": 32, "male_dancer_tone3": 32, "male_dancer_tone4": 32, "male_dancer_tone5": 32, "male_detect": 32, "male_sign": 32, "mali": 32, "malta": 32, "mammoth": 32, "man_artist": 32, "man_artist_dark_skin_ton": 32, "man_artist_light_skin_ton": 32, "man_artist_medium_dark_skin_ton": 32, "man_artist_medium_light_skin_ton": 32, "man_artist_medium_skin_ton": 32, "man_artist_tone1": 32, "man_artist_tone2": 32, "man_artist_tone3": 32, "man_artist_tone4": 32, "man_artist_tone5": 32, "man_astronaut": 32, "man_astronaut_dark_skin_ton": 32, "man_astronaut_light_skin_ton": 32, "man_astronaut_medium_dark_skin_ton": 32, "man_astronaut_medium_light_skin_ton": 32, "man_astronaut_medium_skin_ton": 32, "man_astronaut_tone1": 32, "man_astronaut_tone2": 32, "man_astronaut_tone3": 32, "man_astronaut_tone4": 32, "man_astronaut_tone5": 32, "man_bald": 32, "man_bald_dark_skin_ton": 32, "man_bald_light_skin_ton": 32, "man_bald_medium_dark_skin_ton": 32, "man_bald_medium_light_skin_ton": 32, "man_bald_medium_skin_ton": 32, "man_bald_tone1": 32, "man_bald_tone2": 32, "man_bald_tone3": 32, "man_bald_tone4": 32, "man_bald_tone5": 32, "man_beard": 32, "man_bik": 32, "man_biking_dark_skin_ton": 32, "man_biking_light_skin_ton": 32, "man_biking_medium_dark_skin_ton": 32, "man_biking_medium_light_skin_ton": 32, "man_biking_medium_skin_ton": 32, "man_biking_tone1": 32, "man_biking_tone2": 32, "man_biking_tone3": 32, "man_biking_tone4": 32, "man_biking_tone5": 32, "man_bouncing_bal": 32, "man_bouncing_ball_dark_skin_ton": 32, "man_bouncing_ball_light_skin_ton": 32, "man_bouncing_ball_medium_dark_skin_ton": 32, "man_bouncing_ball_medium_light_skin_ton": 32, "man_bouncing_ball_medium_skin_ton": 32, "man_bouncing_ball_tone1": 32, "man_bouncing_ball_tone2": 32, "man_bouncing_ball_tone3": 32, "man_bouncing_ball_tone4": 32, "man_bouncing_ball_tone5": 32, "man_bow": 32, "man_bowing_dark_skin_ton": 32, "man_bowing_light_skin_ton": 32, "man_bowing_medium_dark_skin_ton": 32, "man_bowing_medium_light_skin_ton": 32, "man_bowing_medium_skin_ton": 32, "man_bowing_tone1": 32, "man_bowing_tone2": 32, "man_bowing_tone3": 32, "man_bowing_tone4": 32, "man_bowing_tone5": 32, "man_cartwheel": 32, "man_cartwheeling_dark_skin_ton": 32, "man_cartwheeling_light_skin_ton": 32, "man_cartwheeling_medium_dark_skin_ton": 32, "man_cartwheeling_medium_light_skin_ton": 32, "man_cartwheeling_medium_skin_ton": 32, "man_cartwheeling_tone1": 32, "man_cartwheeling_tone2": 32, "man_cartwheeling_tone3": 32, "man_cartwheeling_tone4": 32, "man_cartwheeling_tone5": 32, "man_climb": 32, "man_climbing_dark_skin_ton": 32, "man_climbing_light_skin_ton": 32, "man_climbing_medium_dark_skin_ton": 32, "man_climbing_medium_light_skin_ton": 32, "man_climbing_medium_skin_ton": 32, "man_climbing_tone1": 32, "man_climbing_tone2": 32, "man_climbing_tone3": 32, "man_climbing_tone4": 32, "man_climbing_tone5": 32, "man_construction_work": 32, "man_construction_worker_dark_skin_ton": 32, "man_construction_worker_light_skin_ton": 32, "man_construction_worker_medium_dark_skin_ton": 32, "man_construction_worker_medium_light_skin_ton": 32, "man_construction_worker_medium_skin_ton": 32, "man_construction_worker_tone1": 32, "man_construction_worker_tone2": 32, "man_construction_worker_tone3": 32, "man_construction_worker_tone4": 32, "man_construction_worker_tone5": 32, "man_cook": 32, "man_cook_dark_skin_ton": 32, "man_cook_light_skin_ton": 32, "man_cook_medium_dark_skin_ton": 32, "man_cook_medium_light_skin_ton": 32, "man_cook_medium_skin_ton": 32, "man_cook_tone1": 32, "man_cook_tone2": 32, "man_cook_tone3": 32, "man_cook_tone4": 32, "man_cook_tone5": 32, "man_curly_hair": 32, "man_curly_haired_dark_skin_ton": 32, "man_curly_haired_light_skin_ton": 32, "man_curly_haired_medium_dark_skin_ton": 32, "man_curly_haired_medium_light_skin_ton": 32, "man_curly_haired_medium_skin_ton": 32, "man_curly_haired_tone1": 32, "man_curly_haired_tone2": 32, "man_curly_haired_tone3": 32, "man_curly_haired_tone4": 32, "man_curly_haired_tone5": 32, "man_danc": 32, "man_dancing_tone1": 32, "man_dancing_tone2": 32, "man_dancing_tone3": 32, "man_dancing_tone4": 32, "man_dancing_tone5": 32, "man_dark_skin_tone_beard": 32, "man_detect": 32, "man_detective_dark_skin_ton": 32, "man_detective_light_skin_ton": 32, "man_detective_medium_dark_skin_ton": 32, "man_detective_medium_light_skin_ton": 32, "man_detective_medium_skin_ton": 32, "man_detective_tone1": 32, "man_detective_tone2": 32, "man_detective_tone3": 32, "man_detective_tone4": 32, "man_detective_tone5": 32, "man_elf": 32, "man_elf_dark_skin_ton": 32, "man_elf_light_skin_ton": 32, "man_elf_medium_dark_skin_ton": 32, "man_elf_medium_light_skin_ton": 32, "man_elf_medium_skin_ton": 32, "man_elf_tone1": 32, "man_elf_tone2": 32, "man_elf_tone3": 32, "man_elf_tone4": 32, "man_elf_tone5": 32, "man_facepalm": 32, "man_facepalming_dark_skin_ton": 32, "man_facepalming_light_skin_ton": 32, "man_facepalming_medium_dark_skin_ton": 32, "man_facepalming_medium_light_skin_ton": 32, "man_facepalming_medium_skin_ton": 32, "man_facepalming_tone1": 32, "man_facepalming_tone2": 32, "man_facepalming_tone3": 32, "man_facepalming_tone4": 32, "man_facepalming_tone5": 32, "man_factory_work": 32, "man_factory_worker_dark_skin_ton": 32, "man_factory_worker_light_skin_ton": 32, "man_factory_worker_medium_dark_skin_ton": 32, "man_factory_worker_medium_light_skin_ton": 32, "man_factory_worker_medium_skin_ton": 32, "man_factory_worker_tone1": 32, "man_factory_worker_tone2": 32, "man_factory_worker_tone3": 32, "man_factory_worker_tone4": 32, "man_factory_worker_tone5": 32, "man_fairi": 32, "man_fairy_dark_skin_ton": 32, "man_fairy_light_skin_ton": 32, "man_fairy_medium_dark_skin_ton": 32, "man_fairy_medium_light_skin_ton": 32, "man_fairy_medium_skin_ton": 32, "man_fairy_tone1": 32, "man_fairy_tone2": 32, "man_fairy_tone3": 32, "man_fairy_tone4": 32, "man_fairy_tone5": 32, "man_farm": 32, "man_farmer_dark_skin_ton": 32, "man_farmer_light_skin_ton": 32, "man_farmer_medium_dark_skin_ton": 32, "man_farmer_medium_light_skin_ton": 32, "man_farmer_medium_skin_ton": 32, "man_farmer_tone1": 32, "man_farmer_tone2": 32, "man_farmer_tone3": 32, "man_farmer_tone4": 32, "man_farmer_tone5": 32, "man_feeding_babi": 32, "man_feeding_baby_dark_skin_ton": 32, "man_feeding_baby_light_skin_ton": 32, "man_feeding_baby_medium_dark_skin_ton": 32, "man_feeding_baby_medium_light_skin_ton": 32, "man_feeding_baby_medium_skin_ton": 32, "man_feeding_baby_tone1": 32, "man_feeding_baby_tone2": 32, "man_feeding_baby_tone3": 32, "man_feeding_baby_tone4": 32, "man_feeding_baby_tone5": 32, "man_firefight": 32, "man_firefighter_dark_skin_ton": 32, "man_firefighter_light_skin_ton": 32, "man_firefighter_medium_dark_skin_ton": 32, "man_firefighter_medium_light_skin_ton": 32, "man_firefighter_medium_skin_ton": 32, "man_firefighter_tone1": 32, "man_firefighter_tone2": 32, "man_firefighter_tone3": 32, "man_firefighter_tone4": 32, "man_firefighter_tone5": 32, "man_frown": 32, "man_frowning_dark_skin_ton": 32, "man_frowning_light_skin_ton": 32, "man_frowning_medium_dark_skin_ton": 32, "man_frowning_medium_light_skin_ton": 32, "man_frowning_medium_skin_ton": 32, "man_frowning_tone1": 32, "man_frowning_tone2": 32, "man_frowning_tone3": 32, "man_frowning_tone4": 32, "man_frowning_tone5": 32, "man_geni": 32, "man_gesturing_no": 32, "man_gesturing_no_dark_skin_ton": 32, "man_gesturing_no_light_skin_ton": 32, "man_gesturing_no_medium_dark_skin_ton": 32, "man_gesturing_no_medium_light_skin_ton": 32, "man_gesturing_no_medium_skin_ton": 32, "man_gesturing_no_tone1": 32, "man_gesturing_no_tone2": 32, "man_gesturing_no_tone3": 32, "man_gesturing_no_tone4": 32, "man_gesturing_no_tone5": 32, "man_gesturing_ok": 32, "man_gesturing_ok_dark_skin_ton": 32, "man_gesturing_ok_light_skin_ton": 32, "man_gesturing_ok_medium_dark_skin_ton": 32, "man_gesturing_ok_medium_light_skin_ton": 32, "man_gesturing_ok_medium_skin_ton": 32, "man_gesturing_ok_tone1": 32, "man_gesturing_ok_tone2": 32, "man_gesturing_ok_tone3": 32, "man_gesturing_ok_tone4": 32, "man_gesturing_ok_tone5": 32, "man_getting_face_massag": 32, "man_getting_face_massage_dark_skin_ton": 32, "man_getting_face_massage_light_skin_ton": 32, "man_getting_face_massage_medium_dark_skin_ton": 32, "man_getting_face_massage_medium_light_skin_ton": 32, "man_getting_face_massage_medium_skin_ton": 32, "man_getting_face_massage_tone1": 32, "man_getting_face_massage_tone2": 32, "man_getting_face_massage_tone3": 32, "man_getting_face_massage_tone4": 32, "man_getting_face_massage_tone5": 32, "man_getting_haircut": 32, "man_getting_haircut_dark_skin_ton": 32, "man_getting_haircut_light_skin_ton": 32, "man_getting_haircut_medium_dark_skin_ton": 32, "man_getting_haircut_medium_light_skin_ton": 32, "man_getting_haircut_medium_skin_ton": 32, "man_getting_haircut_tone1": 32, "man_getting_haircut_tone2": 32, "man_getting_haircut_tone3": 32, "man_getting_haircut_tone4": 32, "man_getting_haircut_tone5": 32, "man_golf": 32, "man_golfing_dark_skin_ton": 32, "man_golfing_light_skin_ton": 32, "man_golfing_medium_dark_skin_ton": 32, "man_golfing_medium_light_skin_ton": 32, "man_golfing_medium_skin_ton": 32, "man_golfing_tone1": 32, "man_golfing_tone2": 32, "man_golfing_tone3": 32, "man_golfing_tone4": 32, "man_golfing_tone5": 32, "man_guard": 32, "man_guard_dark_skin_ton": 32, "man_guard_light_skin_ton": 32, "man_guard_medium_dark_skin_ton": 32, "man_guard_medium_light_skin_ton": 32, "man_guard_medium_skin_ton": 32, "man_guard_tone1": 32, "man_guard_tone2": 32, "man_guard_tone3": 32, "man_guard_tone4": 32, "man_guard_tone5": 32, "man_health_work": 32, "man_health_worker_dark_skin_ton": 32, "man_health_worker_light_skin_ton": 32, "man_health_worker_medium_dark_skin_ton": 32, "man_health_worker_medium_light_skin_ton": 32, "man_health_worker_medium_skin_ton": 32, "man_health_worker_tone1": 32, "man_health_worker_tone2": 32, "man_health_worker_tone3": 32, "man_health_worker_tone4": 32, "man_health_worker_tone5": 32, "man_in_business_suit_levit": 32, "man_in_business_suit_levitating_dark_skin_ton": 32, "man_in_business_suit_levitating_light_skin_ton": 32, "man_in_business_suit_levitating_medium_dark_skin_ton": 32, "man_in_business_suit_levitating_medium_light_skin_ton": 32, "man_in_business_suit_levitating_medium_skin_ton": 32, "man_in_business_suit_levitating_tone1": 32, "man_in_business_suit_levitating_tone2": 32, "man_in_business_suit_levitating_tone3": 32, "man_in_business_suit_levitating_tone4": 32, "man_in_business_suit_levitating_tone5": 32, "man_in_lotus_posit": 32, "man_in_lotus_position_dark_skin_ton": 32, "man_in_lotus_position_light_skin_ton": 32, "man_in_lotus_position_medium_dark_skin_ton": 32, "man_in_lotus_position_medium_light_skin_ton": 32, "man_in_lotus_position_medium_skin_ton": 32, "man_in_lotus_position_tone1": 32, "man_in_lotus_position_tone2": 32, "man_in_lotus_position_tone3": 32, "man_in_lotus_position_tone4": 32, "man_in_lotus_position_tone5": 32, "man_in_manual_wheelchair": 32, "man_in_manual_wheelchair_dark_skin_ton": 32, "man_in_manual_wheelchair_light_skin_ton": 32, "man_in_manual_wheelchair_medium_dark_skin_ton": 32, "man_in_manual_wheelchair_medium_light_skin_ton": 32, "man_in_manual_wheelchair_medium_skin_ton": 32, "man_in_manual_wheelchair_tone1": 32, "man_in_manual_wheelchair_tone2": 32, "man_in_manual_wheelchair_tone3": 32, "man_in_manual_wheelchair_tone4": 32, "man_in_manual_wheelchair_tone5": 32, "man_in_motorized_wheelchair": 32, "man_in_motorized_wheelchair_dark_skin_ton": 32, "man_in_motorized_wheelchair_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_dark_skin_ton": 32, "man_in_motorized_wheelchair_medium_light_skin_ton": 32, "man_in_motorized_wheelchair_medium_skin_ton": 32, "man_in_motorized_wheelchair_tone1": 32, "man_in_motorized_wheelchair_tone2": 32, "man_in_motorized_wheelchair_tone3": 32, "man_in_motorized_wheelchair_tone4": 32, "man_in_motorized_wheelchair_tone5": 32, "man_in_steamy_room": 32, "man_in_steamy_room_dark_skin_ton": 32, "man_in_steamy_room_light_skin_ton": 32, "man_in_steamy_room_medium_dark_skin_ton": 32, "man_in_steamy_room_medium_light_skin_ton": 32, "man_in_steamy_room_medium_skin_ton": 32, "man_in_steamy_room_tone1": 32, "man_in_steamy_room_tone2": 32, "man_in_steamy_room_tone3": 32, "man_in_steamy_room_tone4": 32, "man_in_steamy_room_tone5": 32, "man_in_tuxedo": 32, "man_in_tuxedo_dark_skin_ton": 32, "man_in_tuxedo_light_skin_ton": 32, "man_in_tuxedo_medium_dark_skin_ton": 32, "man_in_tuxedo_medium_light_skin_ton": 32, "man_in_tuxedo_medium_skin_ton": 32, "man_in_tuxedo_tone1": 32, "man_in_tuxedo_tone2": 32, "man_in_tuxedo_tone3": 32, "man_in_tuxedo_tone4": 32, "man_in_tuxedo_tone5": 32, "man_judg": 32, "man_judge_dark_skin_ton": 32, "man_judge_light_skin_ton": 32, "man_judge_medium_dark_skin_ton": 32, "man_judge_medium_light_skin_ton": 32, "man_judge_medium_skin_ton": 32, "man_judge_tone1": 32, "man_judge_tone2": 32, "man_judge_tone3": 32, "man_judge_tone4": 32, "man_judge_tone5": 32, "man_juggl": 32, "man_juggling_dark_skin_ton": 32, "man_juggling_light_skin_ton": 32, "man_juggling_medium_dark_skin_ton": 32, "man_juggling_medium_light_skin_ton": 32, "man_juggling_medium_skin_ton": 32, "man_juggling_tone1": 32, "man_juggling_tone2": 32, "man_juggling_tone3": 32, "man_juggling_tone4": 32, "man_juggling_tone5": 32, "man_kneel": 32, "man_kneeling_dark_skin_ton": 32, "man_kneeling_light_skin_ton": 32, "man_kneeling_medium_dark_skin_ton": 32, "man_kneeling_medium_light_skin_ton": 32, "man_kneeling_medium_skin_ton": 32, "man_kneeling_tone1": 32, "man_kneeling_tone2": 32, "man_kneeling_tone3": 32, "man_kneeling_tone4": 32, "man_kneeling_tone5": 32, "man_lifting_weight": 32, "man_lifting_weights_dark_skin_ton": 32, "man_lifting_weights_light_skin_ton": 32, "man_lifting_weights_medium_dark_skin_ton": 32, "man_lifting_weights_medium_light_skin_ton": 32, "man_lifting_weights_medium_skin_ton": 32, "man_lifting_weights_tone1": 32, "man_lifting_weights_tone2": 32, "man_lifting_weights_tone3": 32, "man_lifting_weights_tone4": 32, "man_lifting_weights_tone5": 32, "man_light_skin_tone_beard": 32, "man_mag": 32, "man_mage_dark_skin_ton": 32, "man_mage_light_skin_ton": 32, "man_mage_medium_dark_skin_ton": 32, "man_mage_medium_light_skin_ton": 32, "man_mage_medium_skin_ton": 32, "man_mage_tone1": 32, "man_mage_tone2": 32, "man_mage_tone3": 32, "man_mage_tone4": 32, "man_mage_tone5": 32, "man_mechan": 32, "man_mechanic_dark_skin_ton": 32, "man_mechanic_light_skin_ton": 32, "man_mechanic_medium_dark_skin_ton": 32, "man_mechanic_medium_light_skin_ton": 32, "man_mechanic_medium_skin_ton": 32, "man_mechanic_tone1": 32, "man_mechanic_tone2": 32, "man_mechanic_tone3": 32, "man_mechanic_tone4": 32, "man_mechanic_tone5": 32, "man_medium_dark_skin_tone_beard": 32, "man_medium_light_skin_tone_beard": 32, "man_medium_skin_tone_beard": 32, "man_mountain_bik": 32, "man_mountain_biking_dark_skin_ton": 32, "man_mountain_biking_light_skin_ton": 32, "man_mountain_biking_medium_dark_skin_ton": 32, "man_mountain_biking_medium_light_skin_ton": 32, "man_mountain_biking_medium_skin_ton": 32, "man_mountain_biking_tone1": 32, "man_mountain_biking_tone2": 32, "man_mountain_biking_tone3": 32, "man_mountain_biking_tone4": 32, "man_mountain_biking_tone5": 32, "man_office_work": 32, "man_office_worker_dark_skin_ton": 32, "man_office_worker_light_skin_ton": 32, "man_office_worker_medium_dark_skin_ton": 32, "man_office_worker_medium_light_skin_ton": 32, "man_office_worker_medium_skin_ton": 32, "man_office_worker_tone1": 32, "man_office_worker_tone2": 32, "man_office_worker_tone3": 32, "man_office_worker_tone4": 32, "man_office_worker_tone5": 32, "man_pilot": 32, "man_pilot_dark_skin_ton": 32, "man_pilot_light_skin_ton": 32, "man_pilot_medium_dark_skin_ton": 32, "man_pilot_medium_light_skin_ton": 32, "man_pilot_medium_skin_ton": 32, "man_pilot_tone1": 32, "man_pilot_tone2": 32, "man_pilot_tone3": 32, "man_pilot_tone4": 32, "man_pilot_tone5": 32, "man_playing_handbal": 32, "man_playing_handball_dark_skin_ton": 32, "man_playing_handball_light_skin_ton": 32, "man_playing_handball_medium_dark_skin_ton": 32, "man_playing_handball_medium_light_skin_ton": 32, "man_playing_handball_medium_skin_ton": 32, "man_playing_handball_tone1": 32, "man_playing_handball_tone2": 32, "man_playing_handball_tone3": 32, "man_playing_handball_tone4": 32, "man_playing_handball_tone5": 32, "man_playing_water_polo": 32, "man_playing_water_polo_dark_skin_ton": 32, "man_playing_water_polo_light_skin_ton": 32, "man_playing_water_polo_medium_dark_skin_ton": 32, "man_playing_water_polo_medium_light_skin_ton": 32, "man_playing_water_polo_medium_skin_ton": 32, "man_playing_water_polo_tone1": 32, "man_playing_water_polo_tone2": 32, "man_playing_water_polo_tone3": 32, "man_playing_water_polo_tone4": 32, "man_playing_water_polo_tone5": 32, "man_police_offic": 32, "man_police_officer_dark_skin_ton": 32, "man_police_officer_light_skin_ton": 32, "man_police_officer_medium_dark_skin_ton": 32, "man_police_officer_medium_light_skin_ton": 32, "man_police_officer_medium_skin_ton": 32, "man_police_officer_tone1": 32, "man_police_officer_tone2": 32, "man_police_officer_tone3": 32, "man_police_officer_tone4": 32, "man_police_officer_tone5": 32, "man_pout": 32, "man_pouting_dark_skin_ton": 32, "man_pouting_light_skin_ton": 32, "man_pouting_medium_dark_skin_ton": 32, "man_pouting_medium_light_skin_ton": 32, "man_pouting_medium_skin_ton": 32, "man_pouting_tone1": 32, "man_pouting_tone2": 32, "man_pouting_tone3": 32, "man_pouting_tone4": 32, "man_pouting_tone5": 32, "man_raising_hand": 32, "man_raising_hand_dark_skin_ton": 32, "man_raising_hand_light_skin_ton": 32, "man_raising_hand_medium_dark_skin_ton": 32, "man_raising_hand_medium_light_skin_ton": 32, "man_raising_hand_medium_skin_ton": 32, "man_raising_hand_tone1": 32, "man_raising_hand_tone2": 32, "man_raising_hand_tone3": 32, "man_raising_hand_tone4": 32, "man_raising_hand_tone5": 32, "man_red_hair": 32, "man_red_haired_dark_skin_ton": 32, "man_red_haired_light_skin_ton": 32, "man_red_haired_medium_dark_skin_ton": 32, "man_red_haired_medium_light_skin_ton": 32, "man_red_haired_medium_skin_ton": 32, "man_red_haired_tone1": 32, "man_red_haired_tone2": 32, "man_red_haired_tone3": 32, "man_red_haired_tone4": 32, "man_red_haired_tone5": 32, "man_rowing_boat": 32, "man_rowing_boat_dark_skin_ton": 32, "man_rowing_boat_light_skin_ton": 32, "man_rowing_boat_medium_dark_skin_ton": 32, "man_rowing_boat_medium_light_skin_ton": 32, "man_rowing_boat_medium_skin_ton": 32, "man_rowing_boat_tone1": 32, "man_rowing_boat_tone2": 32, "man_rowing_boat_tone3": 32, "man_rowing_boat_tone4": 32, "man_rowing_boat_tone5": 32, "man_run": 32, "man_running_dark_skin_ton": 32, "man_running_light_skin_ton": 32, "man_running_medium_dark_skin_ton": 32, "man_running_medium_light_skin_ton": 32, "man_running_medium_skin_ton": 32, "man_running_tone1": 32, "man_running_tone2": 32, "man_running_tone3": 32, "man_running_tone4": 32, "man_running_tone5": 32, "man_scientist": 32, "man_scientist_dark_skin_ton": 32, "man_scientist_light_skin_ton": 32, "man_scientist_medium_dark_skin_ton": 32, "man_scientist_medium_light_skin_ton": 32, "man_scientist_medium_skin_ton": 32, "man_scientist_tone1": 32, "man_scientist_tone2": 32, "man_scientist_tone3": 32, "man_scientist_tone4": 32, "man_scientist_tone5": 32, "man_shrug": 32, "man_shrugging_dark_skin_ton": 32, "man_shrugging_light_skin_ton": 32, "man_shrugging_medium_dark_skin_ton": 32, "man_shrugging_medium_light_skin_ton": 32, "man_shrugging_medium_skin_ton": 32, "man_shrugging_tone1": 32, "man_shrugging_tone2": 32, "man_shrugging_tone3": 32, "man_shrugging_tone4": 32, "man_shrugging_tone5": 32, "man_sing": 32, "man_singer_dark_skin_ton": 32, "man_singer_light_skin_ton": 32, "man_singer_medium_dark_skin_ton": 32, "man_singer_medium_light_skin_ton": 32, "man_singer_medium_skin_ton": 32, "man_singer_tone1": 32, "man_singer_tone2": 32, "man_singer_tone3": 32, "man_singer_tone4": 32, "man_singer_tone5": 32, "man_stand": 32, "man_standing_dark_skin_ton": 32, "man_standing_light_skin_ton": 32, "man_standing_medium_dark_skin_ton": 32, "man_standing_medium_light_skin_ton": 32, "man_standing_medium_skin_ton": 32, "man_standing_tone1": 32, "man_standing_tone2": 32, "man_standing_tone3": 32, "man_standing_tone4": 32, "man_standing_tone5": 32, "man_stud": 32, "man_student_dark_skin_ton": 32, "man_student_light_skin_ton": 32, "man_student_medium_dark_skin_ton": 32, "man_student_medium_light_skin_ton": 32, "man_student_medium_skin_ton": 32, "man_student_tone1": 32, "man_student_tone2": 32, "man_student_tone3": 32, "man_student_tone4": 32, "man_student_tone5": 32, "man_superhero": 32, "man_superhero_dark_skin_ton": 32, "man_superhero_light_skin_ton": 32, "man_superhero_medium_dark_skin_ton": 32, "man_superhero_medium_light_skin_ton": 32, "man_superhero_medium_skin_ton": 32, "man_superhero_tone1": 32, "man_superhero_tone2": 32, "man_superhero_tone3": 32, "man_superhero_tone4": 32, "man_superhero_tone5": 32, "man_supervillain": 32, "man_supervillain_dark_skin_ton": 32, "man_supervillain_light_skin_ton": 32, "man_supervillain_medium_dark_skin_ton": 32, "man_supervillain_medium_light_skin_ton": 32, "man_supervillain_medium_skin_ton": 32, "man_supervillain_tone1": 32, "man_supervillain_tone2": 32, "man_supervillain_tone3": 32, "man_supervillain_tone4": 32, "man_supervillain_tone5": 32, "man_surf": 32, "man_surfing_dark_skin_ton": 32, "man_surfing_light_skin_ton": 32, "man_surfing_medium_dark_skin_ton": 32, "man_surfing_medium_light_skin_ton": 32, "man_surfing_medium_skin_ton": 32, "man_surfing_tone1": 32, "man_surfing_tone2": 32, "man_surfing_tone3": 32, "man_surfing_tone4": 32, "man_surfing_tone5": 32, "man_swim": 32, "man_swimming_dark_skin_ton": 32, "man_swimming_light_skin_ton": 32, "man_swimming_medium_dark_skin_ton": 32, "man_swimming_medium_light_skin_ton": 32, "man_swimming_medium_skin_ton": 32, "man_swimming_tone1": 32, "man_swimming_tone2": 32, "man_swimming_tone3": 32, "man_swimming_tone4": 32, "man_swimming_tone5": 32, "man_teach": 32, "man_teacher_dark_skin_ton": 32, "man_teacher_light_skin_ton": 32, "man_teacher_medium_dark_skin_ton": 32, "man_teacher_medium_light_skin_ton": 32, "man_teacher_medium_skin_ton": 32, "man_teacher_tone1": 32, "man_teacher_tone2": 32, "man_teacher_tone3": 32, "man_teacher_tone4": 32, "man_teacher_tone5": 32, "man_technologist": 32, "man_technologist_dark_skin_ton": 32, "man_technologist_light_skin_ton": 32, "man_technologist_medium_dark_skin_ton": 32, "man_technologist_medium_light_skin_ton": 32, "man_technologist_medium_skin_ton": 32, "man_technologist_tone1": 32, "man_technologist_tone2": 32, "man_technologist_tone3": 32, "man_technologist_tone4": 32, "man_technologist_tone5": 32, "man_tipping_hand": 32, "man_tipping_hand_dark_skin_ton": 32, "man_tipping_hand_light_skin_ton": 32, "man_tipping_hand_medium_dark_skin_ton": 32, "man_tipping_hand_medium_light_skin_ton": 32, "man_tipping_hand_medium_skin_ton": 32, "man_tipping_hand_tone1": 32, "man_tipping_hand_tone2": 32, "man_tipping_hand_tone3": 32, "man_tipping_hand_tone4": 32, "man_tipping_hand_tone5": 32, "man_tone1": 32, "man_tone1_beard": 32, "man_tone2": 32, "man_tone2_beard": 32, "man_tone3": 32, "man_tone3_beard": 32, "man_tone4": 32, "man_tone4_beard": 32, "man_tone5": 32, "man_tone5_beard": 32, "man_vampir": 32, "man_vampire_dark_skin_ton": 32, "man_vampire_light_skin_ton": 32, "man_vampire_medium_dark_skin_ton": 32, "man_vampire_medium_light_skin_ton": 32, "man_vampire_medium_skin_ton": 32, "man_vampire_tone1": 32, "man_vampire_tone2": 32, "man_vampire_tone3": 32, "man_vampire_tone4": 32, "man_vampire_tone5": 32, "man_walk": 32, "man_walking_dark_skin_ton": 32, "man_walking_light_skin_ton": 32, "man_walking_medium_dark_skin_ton": 32, "man_walking_medium_light_skin_ton": 32, "man_walking_medium_skin_ton": 32, "man_walking_tone1": 32, "man_walking_tone2": 32, "man_walking_tone3": 32, "man_walking_tone4": 32, "man_walking_tone5": 32, "man_wearing_turban": 32, "man_wearing_turban_dark_skin_ton": 32, "man_wearing_turban_light_skin_ton": 32, "man_wearing_turban_medium_dark_skin_ton": 32, "man_wearing_turban_medium_light_skin_ton": 32, "man_wearing_turban_medium_skin_ton": 32, "man_wearing_turban_tone1": 32, "man_wearing_turban_tone2": 32, "man_wearing_turban_tone3": 32, "man_wearing_turban_tone4": 32, "man_wearing_turban_tone5": 32, "man_white_hair": 32, "man_white_haired_dark_skin_ton": 32, "man_white_haired_light_skin_ton": 32, "man_white_haired_medium_dark_skin_ton": 32, "man_white_haired_medium_light_skin_ton": 32, "man_white_haired_medium_skin_ton": 32, "man_white_haired_tone1": 32, "man_white_haired_tone2": 32, "man_white_haired_tone3": 32, "man_white_haired_tone4": 32, "man_white_haired_tone5": 32, "man_with_chinese_cap": 32, "man_with_chinese_cap_tone1": 32, "man_with_chinese_cap_tone2": 32, "man_with_chinese_cap_tone3": 32, "man_with_chinese_cap_tone4": 32, "man_with_chinese_cap_tone5": 32, "man_with_gua_pi_mao": 32, "man_with_gua_pi_mao_tone1": 32, "man_with_gua_pi_mao_tone2": 32, "man_with_gua_pi_mao_tone3": 32, "man_with_gua_pi_mao_tone4": 32, "man_with_gua_pi_mao_tone5": 32, "man_with_probing_can": 32, "man_with_probing_cane_dark_skin_ton": 32, "man_with_probing_cane_light_skin_ton": 32, "man_with_probing_cane_medium_dark_skin_ton": 32, "man_with_probing_cane_medium_light_skin_ton": 32, "man_with_probing_cane_medium_skin_ton": 32, "man_with_probing_cane_tone1": 32, "man_with_probing_cane_tone2": 32, "man_with_probing_cane_tone3": 32, "man_with_probing_cane_tone4": 32, "man_with_probing_cane_tone5": 32, "man_with_turban": 32, "man_with_turban_tone1": 32, "man_with_turban_tone2": 32, "man_with_turban_tone3": 32, "man_with_turban_tone4": 32, "man_with_turban_tone5": 32, "man_with_veil": 32, "man_with_veil_dark_skin_ton": 32, "man_with_veil_light_skin_ton": 32, "man_with_veil_medium_dark_skin_ton": 32, "man_with_veil_medium_light_skin_ton": 32, "man_with_veil_medium_skin_ton": 32, "man_with_veil_tone1": 32, "man_with_veil_tone2": 32, "man_with_veil_tone3": 32, "man_with_veil_tone4": 32, "man_with_veil_tone5": 32, "man_zombi": 32, "mango": 32, "mans_sho": 32, "mantelpiece_clock": 32, "mantlepiece_clock": 32, "manual_wheelchair": 32, "maple_leaf": 32, "marshall_island": 32, "martial_arts_uniform": 32, "martiniqu": 32, "mask": [32, 173, 244, 389, 804, 855, 856, 867, 950, 979, 981], "massage_man": 32, "massage_tone1": 32, "massage_tone2": 32, "massage_tone3": 32, "massage_tone4": 32, "massage_tone5": 32, "massage_woman": 32, "mate": [32, 238, 860], "mauritania": 32, "mauritiu": 32, "mayott": 32, "mc": [32, 155, 270, 449], "md": [32, 136, 360, 809], "meat_on_bon": 32, "mechanic_dark_skin_ton": 32, "mechanic_light_skin_ton": 32, "mechanic_medium_dark_skin_ton": 32, "mechanic_medium_light_skin_ton": 32, "mechanic_medium_skin_ton": 32, "mechanic_tone1": 32, "mechanic_tone2": 32, "mechanic_tone3": 32, "mechanic_tone4": 32, "mechanic_tone5": 32, "mechanical_arm": 32, "mechanical_leg": 32, "medal": 32, "medal_militari": 32, "medal_sport": 32, "medical_symbol": 32, "mega": [32, 1003], "melon": 32, "memo": 32, "men_holding_hands_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_light_skin_ton": 32, "men_holding_hands_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "men_holding_hands_medium_skin_ton": 32, "men_holding_hands_medium_skin_tone_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_light_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "men_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "men_holding_hands_tone1": 32, "men_holding_hands_tone1_tone2": 32, "men_holding_hands_tone1_tone3": 32, "men_holding_hands_tone1_tone4": 32, "men_holding_hands_tone1_tone5": 32, "men_holding_hands_tone2": 32, "men_holding_hands_tone2_tone1": 32, "men_holding_hands_tone2_tone3": 32, "men_holding_hands_tone2_tone4": 32, "men_holding_hands_tone2_tone5": 32, "men_holding_hands_tone3": 32, "men_holding_hands_tone3_tone1": 32, "men_holding_hands_tone3_tone2": 32, "men_holding_hands_tone3_tone4": 32, "men_holding_hands_tone3_tone5": 32, "men_holding_hands_tone4": 32, "men_holding_hands_tone4_tone1": 32, "men_holding_hands_tone4_tone2": 32, "men_holding_hands_tone4_tone3": 32, "men_holding_hands_tone4_tone5": 32, "men_holding_hands_tone5": 32, "men_holding_hands_tone5_tone1": 32, "men_holding_hands_tone5_tone2": 32, "men_holding_hands_tone5_tone3": 32, "men_holding_hands_tone5_tone4": 32, "men_with_bunny_ears_parti": 32, "men_wrestl": 32, "mending_heart": 32, "menorah": 32, "men": [32, 387, 443, 566], "mermaid": 32, "mermaid_dark_skin_ton": 32, "mermaid_light_skin_ton": 32, "mermaid_medium_dark_skin_ton": 32, "mermaid_medium_light_skin_ton": 32, "mermaid_medium_skin_ton": 32, "mermaid_tone1": 32, "mermaid_tone2": 32, "mermaid_tone3": 32, "mermaid_tone4": 32, "mermaid_tone5": 32, "merman": 32, "merman_dark_skin_ton": 32, "merman_light_skin_ton": 32, "merman_medium_dark_skin_ton": 32, "merman_medium_light_skin_ton": 32, "merman_medium_skin_ton": 32, "merman_tone1": 32, "merman_tone2": 32, "merman_tone3": 32, "merman_tone4": 32, "merman_tone5": 32, "merperson": 32, "merperson_dark_skin_ton": 32, "merperson_light_skin_ton": 32, "merperson_medium_dark_skin_ton": 32, "merperson_medium_light_skin_ton": 32, "merperson_medium_skin_ton": 32, "merperson_tone1": 32, "merperson_tone2": 32, "merperson_tone3": 32, "merperson_tone4": 32, "merperson_tone5": 32, "metal_tone1": 32, "metal_tone2": 32, "metal_tone3": 32, "metal_tone4": 32, "metal_tone5": 32, "metro": 32, "mexico": 32, "mf": [32, 224, 1063], "mg": 32, "mh": 32, "microb": 32, "micronesia": 32, "microphone2": 32, "microphon": [32, 157, 159], "microscop": 32, "middle_finger_tone1": 32, "middle_finger_tone2": 32, "middle_finger_tone3": 32, "middle_finger_tone4": 32, "middle_finger_tone5": 32, "military_helmet": 32, "military_med": 32, "milk": 32, "milk_glass": 32, "milky_wai": 32, "minibu": 32, "minidisc": 32, "mirror": 32, "ml": 32, "mm": [32, 448], "mn": 32, "mo": [32, 557], "mobile_phon": 32, "mobile_phone_off": 32, "moldova": 32, "monaco": 32, "money_mouth": 32, "money_mouth_fac": 32, "money_with_w": 32, "moneybag": 32, "mongolia": 32, "monkei": 32, "monkey_fac": 32, "monorail": 32, "montenegro": 32, "montserrat": 32, "moon": 32, "moon_cak": 32, "morocco": 32, "mortar_board": 32, "mosqu": 32, "mosquito": 32, "mother_christma": 32, "mother_christmas_tone1": 32, "mother_christmas_tone2": 32, "mother_christmas_tone3": 32, "mother_christmas_tone4": 32, "mother_christmas_tone5": 32, "motor_boat": 32, "motor_scoot": 32, "motorbik": 32, "motorboat": 32, "motorcycl": 32, "motorized_wheelchair": 32, "motorwai": 32, "mount_fuji": 32, "mountain": 32, "mountain_bicyclist": 32, "mountain_bicyclist_tone1": 32, "mountain_bicyclist_tone2": 32, "mountain_bicyclist_tone3": 32, "mountain_bicyclist_tone4": 32, "mountain_bicyclist_tone5": 32, "mountain_biking_man": 32, "mountain_biking_woman": 32, "mountain_cablewai": 32, "mountain_railwai": 32, "mountain_snow": 32, "mouse2": 32, "mous": [32, 152, 157, 868, 1044, 1052], "mouse_three_button": 32, "mouse_trap": 32, "movie_camera": 32, "moyai": 32, "mozambiqu": 32, "mp": [32, 38], "mq": [32, 974, 975], "mr": [32, 114, 221, 232, 240, 244, 1068], "mrs_clau": 32, "mrs_claus_tone1": 32, "mrs_claus_tone2": 32, "mrs_claus_tone3": 32, "mrs_claus_tone4": 32, "mrs_claus_tone5": 32, "mt": [32, 349, 978, 979], "mu": [32, 244], "muscle_tone1": 32, "muscle_tone2": 32, "muscle_tone3": 32, "muscle_tone4": 32, "muscle_tone5": 32, "mushroom": 32, "musical_keyboard": 32, "musical_not": 32, "musical_scor": 32, "mute": 32, "mv": [32, 99, 114, 192, 194, 258, 267, 268, 288, 289, 340, 345, 761, 781, 838, 875, 888, 904, 1165], "mw": 32, "mx": 32, "mx_clau": 32, "mx_claus_dark_skin_ton": 32, "mx_claus_light_skin_ton": 32, "mx_claus_medium_dark_skin_ton": 32, "mx_claus_medium_light_skin_ton": 32, "mx_claus_medium_skin_ton": 32, "mx_claus_tone1": 32, "mx_claus_tone2": 32, "mx_claus_tone3": 32, "mx_claus_tone4": 32, "mx_claus_tone5": 32, "myanmar": 32, "mz": 32, "na": [32, 221, 224, 227, 240, 247, 265, 320], "nail_car": 32, "nail_care_tone1": 32, "nail_care_tone2": 32, "nail_care_tone3": 32, "nail_care_tone4": 32, "nail_care_tone5": 32, "name_badg": 32, "namibia": 32, "national_park": 32, "nauru": 32, "nauseated_fac": 32, "nazar_amulet": 32, "nc": [32, 192, 194, 267, 288, 289, 369, 931], "ne": [32, 567, 585, 587, 946], "neckti": 32, "negative_squared_cross_mark": 32, "nepal": 32, "nerd_fac": 32, "nesting_dol": 32, "netherland": [32, 153, 1031], "neutral_fac": 32, "new_caledonia": 32, "new_moon": 32, "new_moon_with_fac": 32, "new_zealand": 32, "newspaper2": 32, "newspap": [32, 43], "newspaper_rol": 32, "next_track": 32, "next_track_button": 32, "nf": [32, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 925], "ng": [32, 153, 164, 268, 761, 904, 983, 985, 992, 993, 994], "ni": 32, "nicaragua": 32, "niger": 32, "nigeria": 32, "night_with_star": 32, "nine": [32, 172, 185, 195, 203, 221, 232, 340], "ninja_dark_skin_ton": 32, "ninja_light_skin_ton": 32, "ninja_medium_dark_skin_ton": 32, "ninja_medium_light_skin_ton": 32, "ninja_medium_skin_ton": 32, "ninja_tone1": 32, "ninja_tone2": 32, "ninja_tone3": 32, "ninja_tone4": 32, "ninja_tone5": 32, "niue": 32, "nl": [32, 369], "no_bel": 32, "no_bicycl": 32, "no_entri": 32, "no_entry_sign": 32, "no_good": 32, "no_good_man": 32, "no_good_tone1": 32, "no_good_tone2": 32, "no_good_tone3": 32, "no_good_tone4": 32, "no_good_tone5": 32, "no_good_woman": 32, "no_mobile_phon": 32, "no_mouth": 32, "no_pedestrian": 32, "no_smok": 32, "non": [32, 78, 114, 115, 130, 132, 134, 148, 154, 155, 162, 179, 192, 214, 232, 240, 244, 249, 268, 277, 279, 286, 308, 403, 425, 443, 459, 462, 513, 556, 558, 565, 567, 570, 578, 582, 583, 622, 637, 672, 678, 719, 723, 724, 739, 746, 760, 761, 794, 800, 813, 824, 845, 848, 850, 890, 915, 916, 924, 942, 957, 961, 968, 976, 1001, 1005, 1017, 1018, 1041, 1054, 1074, 1091, 1127, 1128, 1133, 1147, 1162], "potable_wat": 32, "norfolk_island": 32, "north_korea": 32, "northern_mariana_island": 32, "norwai": 32, "nose": 32, "nose_tone1": 32, "nose_tone2": 32, "nose_tone3": 32, "nose_tone4": 32, "nose_tone5": 32, "notebook_with_decorative_cov": 32, "notepad_spir": 32, "np": [32, 175, 202, 270, 304, 449, 1109, 1128], "nr": [32, 200, 244, 767], "nu": 32, "nut_and_bolt": 32, "nz": 32, "o2": [32, 437], "ocean": 32, "octagonal_sign": 32, "octopu": 32, "oden": 32, "office_work": 32, "office_worker_dark_skin_ton": 32, "office_worker_light_skin_ton": 32, "office_worker_medium_dark_skin_ton": 32, "office_worker_medium_light_skin_ton": 32, "office_worker_medium_skin_ton": 32, "office_worker_tone1": 32, "office_worker_tone2": 32, "office_worker_tone3": 32, "office_worker_tone4": 32, "office_worker_tone5": 32, "oil": 32, "oil_drum": 32, "ok": [32, 53, 65, 120, 151, 153, 154, 158, 167, 184, 200, 230, 270, 336, 377, 413, 431, 433, 463, 472, 522, 523, 524, 569, 577, 580, 585, 590, 600, 652, 659, 670, 678, 693, 712, 715, 724, 725, 741, 822, 913, 940, 958, 985, 996, 1014, 1017, 1030, 1146], "ok_hand_tone1": 32, "ok_hand_tone2": 32, "ok_hand_tone3": 32, "ok_hand_tone4": 32, "ok_hand_tone5": 32, "ok_man": 32, "ok_woman": 32, "ok_woman_tone1": 32, "ok_woman_tone2": 32, "ok_woman_tone3": 32, "ok_woman_tone4": 32, "ok_woman_tone5": 32, "old_kei": 32, "older_adult": 32, "older_adult_dark_skin_ton": 32, "older_adult_light_skin_ton": 32, "older_adult_medium_dark_skin_ton": 32, "older_adult_medium_light_skin_ton": 32, "older_adult_medium_skin_ton": 32, "older_adult_tone1": 32, "older_adult_tone2": 32, "older_adult_tone3": 32, "older_adult_tone4": 32, "older_adult_tone5": 32, "older_man": 32, "older_man_tone1": 32, "older_man_tone2": 32, "older_man_tone3": 32, "older_man_tone4": 32, "older_man_tone5": 32, "older_woman": 32, "older_woman_tone1": 32, "older_woman_tone2": 32, "older_woman_tone3": 32, "older_woman_tone4": 32, "older_woman_tone5": 32, "oliv": [32, 216], "om": [32, 703], "om_symbol": 32, "oman": 32, "oncoming_automobil": 32, "oncoming_bu": 32, "oncoming_police_car": 32, "oncoming_taxi": 32, "one_piece_swimsuit": 32, "onion": 32, "open_file_fold": 32, "open_hand": 32, "open_hands_tone1": 32, "open_hands_tone2": 32, "open_hands_tone3": 32, "open_hands_tone4": 32, "open_hands_tone5": 32, "open_mouth": 32, "open_umbrella": 32, "ophiuchu": 32, "orange_book": 32, "orange_circl": 32, "orange_heart": 32, "orange_squar": 32, "orangutan": 32, "orthodox_cross": 32, "otter": 32, "outbox_trai": 32, "owl": 32, "ox": 32, "oyster": 32, "pa": [32, 221, 227, 237, 240, 413, 597, 599, 600], "paella": 32, "page_facing_up": 32, "page_with_curl": 32, "pager": [32, 900], "paintbrush": 32, "pakistan": 32, "palau": 32, "palestinian_territori": 32, "palm_tre": 32, "palms_up_togeth": 32, "palms_up_together_dark_skin_ton": 32, "palms_up_together_light_skin_ton": 32, "palms_up_together_medium_dark_skin_ton": 32, "palms_up_together_medium_light_skin_ton": 32, "palms_up_together_medium_skin_ton": 32, "palms_up_together_tone1": 32, "palms_up_together_tone2": 32, "palms_up_together_tone3": 32, "palms_up_together_tone4": 32, "palms_up_together_tone5": 32, "panama": 32, "pancak": 32, "panda_fac": 32, "paperclip": 32, "papua_new_guinea": 32, "parachut": 32, "paraguai": 32, "parasol_on_ground": 32, "park": 32, "parrot": 32, "part_alternation_mark": 32, "partly_sunni": 32, "partying_fac": 32, "passenger_ship": 32, "passport_control": 32, "pause_button": 32, "paw_print": 32, "pe": 32, "peac": 32, "peace_symbol": 32, "peach": 32, "peacock": 32, "peanut": 32, "pear": 32, "pen": 32, "pen_ballpoint": 32, "pen_fountain": 32, "pencil2": 32, "pencil": 32, "pensiv": 32, "people_holding_hand": 32, "people_holding_hands_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_light_skin_ton": 32, "people_holding_hands_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "people_holding_hands_medium_skin_ton": 32, "people_holding_hands_medium_skin_tone_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_light_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "people_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "people_holding_hands_tone1": 32, "people_holding_hands_tone1_tone2": 32, "people_holding_hands_tone1_tone3": 32, "people_holding_hands_tone1_tone4": 32, "people_holding_hands_tone1_tone5": 32, "people_holding_hands_tone2": 32, "people_holding_hands_tone2_tone1": 32, "people_holding_hands_tone2_tone3": 32, "people_holding_hands_tone2_tone4": 32, "people_holding_hands_tone2_tone5": 32, "people_holding_hands_tone3": 32, "people_holding_hands_tone3_tone1": 32, "people_holding_hands_tone3_tone2": 32, "people_holding_hands_tone3_tone4": 32, "people_holding_hands_tone3_tone5": 32, "people_holding_hands_tone4": 32, "people_holding_hands_tone4_tone1": 32, "people_holding_hands_tone4_tone2": 32, "people_holding_hands_tone4_tone3": 32, "people_holding_hands_tone4_tone5": 32, "people_holding_hands_tone5": 32, "people_holding_hands_tone5_tone1": 32, "people_holding_hands_tone5_tone2": 32, "people_holding_hands_tone5_tone3": 32, "people_holding_hands_tone5_tone4": 32, "people_hug": 32, "people_with_bunny_ears_parti": 32, "people_wrestl": 32, "performing_art": 32, "persever": 32, "person_bald": 32, "person_bik": 32, "person_biking_tone1": 32, "person_biking_tone2": 32, "person_biking_tone3": 32, "person_biking_tone4": 32, "person_biking_tone5": 32, "person_bouncing_bal": 32, "person_bouncing_ball_tone1": 32, "person_bouncing_ball_tone2": 32, "person_bouncing_ball_tone3": 32, "person_bouncing_ball_tone4": 32, "person_bouncing_ball_tone5": 32, "person_bow": 32, "person_bowing_tone1": 32, "person_bowing_tone2": 32, "person_bowing_tone3": 32, "person_bowing_tone4": 32, "person_bowing_tone5": 32, "person_climb": 32, "person_climbing_dark_skin_ton": 32, "person_climbing_light_skin_ton": 32, "person_climbing_medium_dark_skin_ton": 32, "person_climbing_medium_light_skin_ton": 32, "person_climbing_medium_skin_ton": 32, "person_climbing_tone1": 32, "person_climbing_tone2": 32, "person_climbing_tone3": 32, "person_climbing_tone4": 32, "person_climbing_tone5": 32, "person_curly_hair": 32, "person_dark_skin_tone_bald": 32, "person_dark_skin_tone_curly_hair": 32, "person_dark_skin_tone_red_hair": 32, "person_dark_skin_tone_white_hair": 32, "person_doing_cartwheel": 32, "person_doing_cartwheel_tone1": 32, "person_doing_cartwheel_tone2": 32, "person_doing_cartwheel_tone3": 32, "person_doing_cartwheel_tone4": 32, "person_doing_cartwheel_tone5": 32, "person_facepalm": 32, "person_facepalming_tone1": 32, "person_facepalming_tone2": 32, "person_facepalming_tone3": 32, "person_facepalming_tone4": 32, "person_facepalming_tone5": 32, "person_feeding_babi": 32, "person_feeding_baby_dark_skin_ton": 32, "person_feeding_baby_light_skin_ton": 32, "person_feeding_baby_medium_dark_skin_ton": 32, "person_feeding_baby_medium_light_skin_ton": 32, "person_feeding_baby_medium_skin_ton": 32, "person_feeding_baby_tone1": 32, "person_feeding_baby_tone2": 32, "person_feeding_baby_tone3": 32, "person_feeding_baby_tone4": 32, "person_feeding_baby_tone5": 32, "person_fenc": 32, "person_frown": 32, "person_frowning_tone1": 32, "person_frowning_tone2": 32, "person_frowning_tone3": 32, "person_frowning_tone4": 32, "person_frowning_tone5": 32, "person_gesturing_no": 32, "person_gesturing_no_tone1": 32, "person_gesturing_no_tone2": 32, "person_gesturing_no_tone3": 32, "person_gesturing_no_tone4": 32, "person_gesturing_no_tone5": 32, "person_gesturing_ok": 32, "person_gesturing_ok_tone1": 32, "person_gesturing_ok_tone2": 32, "person_gesturing_ok_tone3": 32, "person_gesturing_ok_tone4": 32, "person_gesturing_ok_tone5": 32, "person_getting_haircut": 32, "person_getting_haircut_tone1": 32, "person_getting_haircut_tone2": 32, "person_getting_haircut_tone3": 32, "person_getting_haircut_tone4": 32, "person_getting_haircut_tone5": 32, "person_getting_massag": 32, "person_getting_massage_tone1": 32, "person_getting_massage_tone2": 32, "person_getting_massage_tone3": 32, "person_getting_massage_tone4": 32, "person_getting_massage_tone5": 32, "person_golf": 32, "person_golfing_dark_skin_ton": 32, "person_golfing_light_skin_ton": 32, "person_golfing_medium_dark_skin_ton": 32, "person_golfing_medium_light_skin_ton": 32, "person_golfing_medium_skin_ton": 32, "person_golfing_tone1": 32, "person_golfing_tone2": 32, "person_golfing_tone3": 32, "person_golfing_tone4": 32, "person_golfing_tone5": 32, "person_in_bed_dark_skin_ton": 32, "person_in_bed_light_skin_ton": 32, "person_in_bed_medium_dark_skin_ton": 32, "person_in_bed_medium_light_skin_ton": 32, "person_in_bed_medium_skin_ton": 32, "person_in_bed_tone1": 32, "person_in_bed_tone2": 32, "person_in_bed_tone3": 32, "person_in_bed_tone4": 32, "person_in_bed_tone5": 32, "person_in_lotus_posit": 32, "person_in_lotus_position_dark_skin_ton": 32, "person_in_lotus_position_light_skin_ton": 32, "person_in_lotus_position_medium_dark_skin_ton": 32, "person_in_lotus_position_medium_light_skin_ton": 32, "person_in_lotus_position_medium_skin_ton": 32, "person_in_lotus_position_tone1": 32, "person_in_lotus_position_tone2": 32, "person_in_lotus_position_tone3": 32, "person_in_lotus_position_tone4": 32, "person_in_lotus_position_tone5": 32, "person_in_manual_wheelchair": 32, "person_in_manual_wheelchair_dark_skin_ton": 32, "person_in_manual_wheelchair_light_skin_ton": 32, "person_in_manual_wheelchair_medium_dark_skin_ton": 32, "person_in_manual_wheelchair_medium_light_skin_ton": 32, "person_in_manual_wheelchair_medium_skin_ton": 32, "person_in_manual_wheelchair_tone1": 32, "person_in_manual_wheelchair_tone2": 32, "person_in_manual_wheelchair_tone3": 32, "person_in_manual_wheelchair_tone4": 32, "person_in_manual_wheelchair_tone5": 32, "person_in_motorized_wheelchair": 32, "person_in_motorized_wheelchair_dark_skin_ton": 32, "person_in_motorized_wheelchair_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_dark_skin_ton": 32, "person_in_motorized_wheelchair_medium_light_skin_ton": 32, "person_in_motorized_wheelchair_medium_skin_ton": 32, "person_in_motorized_wheelchair_tone1": 32, "person_in_motorized_wheelchair_tone2": 32, "person_in_motorized_wheelchair_tone3": 32, "person_in_motorized_wheelchair_tone4": 32, "person_in_motorized_wheelchair_tone5": 32, "person_in_steamy_room": 32, "person_in_steamy_room_dark_skin_ton": 32, "person_in_steamy_room_light_skin_ton": 32, "person_in_steamy_room_medium_dark_skin_ton": 32, "person_in_steamy_room_medium_light_skin_ton": 32, "person_in_steamy_room_medium_skin_ton": 32, "person_in_steamy_room_tone1": 32, "person_in_steamy_room_tone2": 32, "person_in_steamy_room_tone3": 32, "person_in_steamy_room_tone4": 32, "person_in_steamy_room_tone5": 32, "person_in_tuxedo": 32, "person_in_tuxedo_tone1": 32, "person_in_tuxedo_tone2": 32, "person_in_tuxedo_tone3": 32, "person_in_tuxedo_tone4": 32, "person_in_tuxedo_tone5": 32, "person_juggl": 32, "person_juggling_tone1": 32, "person_juggling_tone2": 32, "person_juggling_tone3": 32, "person_juggling_tone4": 32, "person_juggling_tone5": 32, "person_kneel": 32, "person_kneeling_dark_skin_ton": 32, "person_kneeling_light_skin_ton": 32, "person_kneeling_medium_dark_skin_ton": 32, "person_kneeling_medium_light_skin_ton": 32, "person_kneeling_medium_skin_ton": 32, "person_kneeling_tone1": 32, "person_kneeling_tone2": 32, "person_kneeling_tone3": 32, "person_kneeling_tone4": 32, "person_kneeling_tone5": 32, "person_lifting_weight": 32, "person_lifting_weights_tone1": 32, "person_lifting_weights_tone2": 32, "person_lifting_weights_tone3": 32, "person_lifting_weights_tone4": 32, "person_lifting_weights_tone5": 32, "person_light_skin_tone_bald": 32, "person_light_skin_tone_curly_hair": 32, "person_light_skin_tone_red_hair": 32, "person_light_skin_tone_white_hair": 32, "person_medium_dark_skin_tone_bald": 32, "person_medium_dark_skin_tone_curly_hair": 32, "person_medium_dark_skin_tone_red_hair": 32, "person_medium_dark_skin_tone_white_hair": 32, "person_medium_light_skin_tone_bald": 32, "person_medium_light_skin_tone_curly_hair": 32, "person_medium_light_skin_tone_red_hair": 32, "person_medium_light_skin_tone_white_hair": 32, "person_medium_skin_tone_bald": 32, "person_medium_skin_tone_curly_hair": 32, "person_medium_skin_tone_red_hair": 32, "person_medium_skin_tone_white_hair": 32, "person_mountain_bik": 32, "person_mountain_biking_tone1": 32, "person_mountain_biking_tone2": 32, "person_mountain_biking_tone3": 32, "person_mountain_biking_tone4": 32, "person_mountain_biking_tone5": 32, "person_playing_handbal": 32, "person_playing_handball_tone1": 32, "person_playing_handball_tone2": 32, "person_playing_handball_tone3": 32, "person_playing_handball_tone4": 32, "person_playing_handball_tone5": 32, "person_playing_water_polo": 32, "person_playing_water_polo_tone1": 32, "person_playing_water_polo_tone2": 32, "person_playing_water_polo_tone3": 32, "person_playing_water_polo_tone4": 32, "person_playing_water_polo_tone5": 32, "person_pout": 32, "person_pouting_tone1": 32, "person_pouting_tone2": 32, "person_pouting_tone3": 32, "person_pouting_tone4": 32, "person_pouting_tone5": 32, "person_raising_hand": 32, "person_raising_hand_tone1": 32, "person_raising_hand_tone2": 32, "person_raising_hand_tone3": 32, "person_raising_hand_tone4": 32, "person_raising_hand_tone5": 32, "person_red_hair": 32, "person_rowing_boat": 32, "person_rowing_boat_tone1": 32, "person_rowing_boat_tone2": 32, "person_rowing_boat_tone3": 32, "person_rowing_boat_tone4": 32, "person_rowing_boat_tone5": 32, "person_run": 32, "person_running_tone1": 32, "person_running_tone2": 32, "person_running_tone3": 32, "person_running_tone4": 32, "person_running_tone5": 32, "person_shrug": 32, "person_shrugging_tone1": 32, "person_shrugging_tone2": 32, "person_shrugging_tone3": 32, "person_shrugging_tone4": 32, "person_shrugging_tone5": 32, "person_stand": 32, "person_standing_dark_skin_ton": 32, "person_standing_light_skin_ton": 32, "person_standing_medium_dark_skin_ton": 32, "person_standing_medium_light_skin_ton": 32, "person_standing_medium_skin_ton": 32, "person_standing_tone1": 32, "person_standing_tone2": 32, "person_standing_tone3": 32, "person_standing_tone4": 32, "person_standing_tone5": 32, "person_surf": 32, "person_surfing_tone1": 32, "person_surfing_tone2": 32, "person_surfing_tone3": 32, "person_surfing_tone4": 32, "person_surfing_tone5": 32, "person_swim": 32, "person_swimming_tone1": 32, "person_swimming_tone2": 32, "person_swimming_tone3": 32, "person_swimming_tone4": 32, "person_swimming_tone5": 32, "person_tipping_hand": 32, "person_tipping_hand_tone1": 32, "person_tipping_hand_tone2": 32, "person_tipping_hand_tone3": 32, "person_tipping_hand_tone4": 32, "person_tipping_hand_tone5": 32, "person_tone1_bald": 32, "person_tone1_curly_hair": 32, "person_tone1_red_hair": 32, "person_tone1_white_hair": 32, "person_tone2_bald": 32, "person_tone2_curly_hair": 32, "person_tone2_red_hair": 32, "person_tone2_white_hair": 32, "person_tone3_bald": 32, "person_tone3_curly_hair": 32, "person_tone3_red_hair": 32, "person_tone3_white_hair": 32, "person_tone4_bald": 32, "person_tone4_curly_hair": 32, "person_tone4_red_hair": 32, "person_tone4_white_hair": 32, "person_tone5_bald": 32, "person_tone5_curly_hair": 32, "person_tone5_red_hair": 32, "person_tone5_white_hair": 32, "person_walk": 32, "person_walking_tone1": 32, "person_walking_tone2": 32, "person_walking_tone3": 32, "person_walking_tone4": 32, "person_walking_tone5": 32, "person_wearing_turban": 32, "person_wearing_turban_tone1": 32, "person_wearing_turban_tone2": 32, "person_wearing_turban_tone3": 32, "person_wearing_turban_tone4": 32, "person_wearing_turban_tone5": 32, "person_white_hair": 32, "person_with_bal": 32, "person_with_ball_tone1": 32, "person_with_ball_tone2": 32, "person_with_ball_tone3": 32, "person_with_ball_tone4": 32, "person_with_ball_tone5": 32, "person_with_blond_hair": 32, "person_with_blond_hair_tone1": 32, "person_with_blond_hair_tone2": 32, "person_with_blond_hair_tone3": 32, "person_with_blond_hair_tone4": 32, "person_with_blond_hair_tone5": 32, "person_with_pouting_fac": 32, "person_with_pouting_face_tone1": 32, "person_with_pouting_face_tone2": 32, "person_with_pouting_face_tone3": 32, "person_with_pouting_face_tone4": 32, "person_with_pouting_face_tone5": 32, "person_with_probing_can": 32, "person_with_probing_cane_dark_skin_ton": 32, "person_with_probing_cane_light_skin_ton": 32, "person_with_probing_cane_medium_dark_skin_ton": 32, "person_with_probing_cane_medium_light_skin_ton": 32, "person_with_probing_cane_medium_skin_ton": 32, "person_with_probing_cane_tone1": 32, "person_with_probing_cane_tone2": 32, "person_with_probing_cane_tone3": 32, "person_with_probing_cane_tone4": 32, "person_with_probing_cane_tone5": 32, "person_with_veil": 32, "person_with_veil_tone1": 32, "person_with_veil_tone2": 32, "person_with_veil_tone3": 32, "person_with_veil_tone4": 32, "person_with_veil_tone5": 32, "peru": 32, "petri_dish": 32, "pf": [32, 155, 741], "pg": [32, 441], "ph": 32, "philippin": 32, "phone": 32, "pick": [32, 78, 145, 155, 162, 213, 451, 524, 964, 994, 999], "pickup_truck": 32, "pie": 32, "pig2": 32, "pig_nos": 32, "pill": 32, "pilot": 32, "pilot_dark_skin_ton": 32, "pilot_light_skin_ton": 32, "pilot_medium_dark_skin_ton": 32, "pilot_medium_light_skin_ton": 32, "pilot_medium_skin_ton": 32, "pilot_tone1": 32, "pilot_tone2": 32, "pilot_tone3": 32, "pilot_tone4": 32, "pilot_tone5": 32, "pinched_fing": 32, "pinched_fingers_dark_skin_ton": 32, "pinched_fingers_light_skin_ton": 32, "pinched_fingers_medium_dark_skin_ton": 32, "pinched_fingers_medium_light_skin_ton": 32, "pinched_fingers_medium_skin_ton": 32, "pinched_fingers_tone1": 32, "pinched_fingers_tone2": 32, "pinched_fingers_tone3": 32, "pinched_fingers_tone4": 32, "pinched_fingers_tone5": 32, "pinching_hand": 32, "pinching_hand_dark_skin_ton": 32, "pinching_hand_light_skin_ton": 32, "pinching_hand_medium_dark_skin_ton": 32, "pinching_hand_medium_light_skin_ton": 32, "pinching_hand_medium_skin_ton": 32, "pinching_hand_tone1": 32, "pinching_hand_tone2": 32, "pinching_hand_tone3": 32, "pinching_hand_tone4": 32, "pinching_hand_tone5": 32, "pineappl": [32, 276], "ping_pong": 32, "pirate_flag": 32, "pisc": 32, "pitcairn_island": 32, "pizza": 32, "pi\u00f1ata": 32, "pk": 32, "pl": 32, "placard": 32, "place_of_worship": 32, "plate_with_cutleri": 32, "play_or_pause_button": 32, "play_paus": 32, "pleading_fac": 32, "plunger": 32, "pm": [32, 38], "pn": 32, "point_down": 32, "point_down_tone1": 32, "point_down_tone2": 32, "point_down_tone3": 32, "point_down_tone4": 32, "point_down_tone5": 32, "point_left": 32, "point_left_tone1": 32, "point_left_tone2": 32, "point_left_tone3": 32, "point_left_tone4": 32, "point_left_tone5": 32, "point_right": 32, "point_right_tone1": 32, "point_right_tone2": 32, "point_right_tone3": 32, "point_right_tone4": 32, "point_right_tone5": 32, "point_up_2": 32, "point_up_2_tone1": 32, "point_up_2_tone2": 32, "point_up_2_tone3": 32, "point_up_2_tone4": 32, "point_up_2_tone5": 32, "point_up_tone1": 32, "point_up_tone2": 32, "point_up_tone3": 32, "point_up_tone4": 32, "point_up_tone5": 32, "poland": 32, "polar_bear": 32, "police_car": 32, "police_offic": 32, "police_officer_tone1": 32, "police_officer_tone2": 32, "police_officer_tone3": 32, "police_officer_tone4": 32, "police_officer_tone5": 32, "policeman": 32, "policewoman": 32, "poo": 32, "poodl": 32, "poop": 32, "popcorn": 32, "portug": 32, "post_offic": 32, "postal_horn": 32, "postbox": 32, "potato": 32, "potted_pl": 32, "pouch": 32, "poultry_leg": 32, "pound": [32, 36], "pound_symbol": 32, "pouting_cat": 32, "pouting_man": 32, "pouting_woman": 32, "pr": [32, 35, 240, 255], "prai": 32, "pray_tone1": 32, "pray_tone2": 32, "pray_tone3": 32, "pray_tone4": 32, "pray_tone5": 32, "prayer_bead": 32, "pregnant_woman": 32, "pregnant_woman_tone1": 32, "pregnant_woman_tone2": 32, "pregnant_woman_tone3": 32, "pregnant_woman_tone4": 32, "pregnant_woman_tone5": 32, "pretzel": 32, "previous_track": 32, "previous_track_button": 32, "princ": 32, "prince_tone1": 32, "prince_tone2": 32, "prince_tone3": 32, "prince_tone4": 32, "prince_tone5": 32, "princess": 32, "princess_tone1": 32, "princess_tone2": 32, "princess_tone3": 32, "princess_tone4": 32, "princess_tone5": 32, "printer": 32, "probing_can": 32, "projector": 32, "p": [32, 38, 63, 114, 132, 148, 152, 153, 157, 158, 164, 180, 192, 194, 195, 211, 224, 240, 244, 270, 272, 373, 407, 413, 416, 417, 420, 421, 425, 496, 521, 522, 524, 525, 567, 569, 572, 577, 578, 579, 580, 581, 583, 585, 586, 600, 608, 668, 671, 672, 675, 677, 680, 689, 690, 691, 693, 695, 696, 699, 700, 701, 707, 709, 710, 719, 723, 728, 739, 756, 759, 772, 808, 827, 835, 836, 845, 868, 870, 887, 890, 897, 907, 915, 924, 931, 942, 951, 966, 979, 994, 1001, 1003, 1063, 1141, 1165], "pt": [32, 727, 839, 966], "pud": 32, "puerto_rico": 32, "punch": 32, "punch_tone1": 32, "punch_tone2": 32, "punch_tone3": 32, "punch_tone4": 32, "punch_tone5": 32, "purple_circl": 32, "purple_heart": 32, "purple_squar": 32, "purs": 32, "pushpin": 32, "put_litter_in_its_plac": 32, "pw": 32, "qa": 32, "qatar": 32, "rabbit2": 32, "rabbit": 32, "raccoon": 32, "race_car": 32, "racehors": 32, "racing_car": 32, "racing_motorcycl": 32, "radio": 32, "radio_button": 32, "radioact": 32, "radioactive_sign": 32, "rage": 32, "railroad_track": 32, "railway_car": 32, "railway_track": 32, "rainbow": 32, "rainbow_flag": 32, "raised_back_of_hand": 32, "raised_back_of_hand_tone1": 32, "raised_back_of_hand_tone2": 32, "raised_back_of_hand_tone3": 32, "raised_back_of_hand_tone4": 32, "raised_back_of_hand_tone5": 32, "raised_hand": 32, "raised_hand_tone1": 32, "raised_hand_tone2": 32, "raised_hand_tone3": 32, "raised_hand_tone4": 32, "raised_hand_tone5": 32, "raised_hand_with_fingers_splai": 32, "raised_hand_with_fingers_splayed_tone1": 32, "raised_hand_with_fingers_splayed_tone2": 32, "raised_hand_with_fingers_splayed_tone3": 32, "raised_hand_with_fingers_splayed_tone4": 32, "raised_hand_with_fingers_splayed_tone5": 32, "raised_hand_with_part_between_middle_and_ring_fing": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone1": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone2": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone3": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone4": 32, "raised_hand_with_part_between_middle_and_ring_fingers_tone5": 32, "raised_hands_tone1": 32, "raised_hands_tone2": 32, "raised_hands_tone3": 32, "raised_hands_tone4": 32, "raised_hands_tone5": 32, "raising_hand": 32, "raising_hand_man": 32, "raising_hand_tone1": 32, "raising_hand_tone2": 32, "raising_hand_tone3": 32, "raising_hand_tone4": 32, "raising_hand_tone5": 32, "raising_hand_woman": 32, "ram": [32, 154, 155, 159, 277, 808, 844, 846, 930], "ramen": 32, "rat": 32, "razor": 32, "re": [32, 38, 63, 112, 119, 121, 154, 159, 191, 200, 203, 204, 214, 217, 224, 225, 227, 232, 234, 240, 244, 250, 252, 253, 262, 265, 269, 285, 286, 292, 314, 340, 345, 403, 449, 450, 459, 467, 492, 522, 569, 575, 693, 715, 777, 813, 822, 827, 869, 958, 979, 994, 998, 1003, 1008, 1027, 1050, 1101, 1106], "receipt": 32, "record_button": 32, "recycl": 32, "red_car": 32, "red_circl": 32, "red_envelop": 32, "red_hair": 32, "red_squar": 32, "regional_indicator_a": 32, "regional_indicator_b": 32, "regional_indicator_c": 32, "regional_indicator_d": 32, "regional_indicator_": 32, "regional_indicator_f": 32, "regional_indicator_g": 32, "regional_indicator_h": 32, "regional_indicator_i": 32, "regional_indicator_j": 32, "regional_indicator_k": 32, "regional_indicator_l": 32, "regional_indicator_m": 32, "regional_indicator_n": 32, "regional_indicator_o": 32, "regional_indicator_p": 32, "regional_indicator_q": 32, "regional_indicator_r": 32, "regional_indicator_t": 32, "regional_indicator_u": 32, "regional_indicator_v": 32, "regional_indicator_w": 32, "regional_indicator_x": 32, "regional_indicator_z": 32, "regist": [32, 36, 38, 152, 162, 170, 195, 199, 227, 240, 286, 326, 389, 423, 474, 502, 523, 525, 532, 764, 771, 779, 786, 792, 804, 895, 912, 928, 932, 1033, 1122], "relax": 32, "reliev": [32, 57], "reminder_ribbon": 32, "repeat": [32, 43, 100, 114, 132, 142, 158, 213, 268, 347, 437, 449, 585, 761, 808, 838, 868, 872, 876, 879, 882, 887, 888, 904, 917, 944, 1041], "repeat_on": 32, "rescue_worker_helmet": 32, "restroom": 32, "reunion": 32, "reversed_hand_with_middle_finger_extend": 32, "reversed_hand_with_middle_finger_extended_tone1": 32, "reversed_hand_with_middle_finger_extended_tone2": 32, "reversed_hand_with_middle_finger_extended_tone3": 32, "reversed_hand_with_middle_finger_extended_tone4": 32, "reversed_hand_with_middle_finger_extended_tone5": 32, "revolving_heart": 32, "rewind": [32, 332, 715], "rhino": 32, "rhinocero": 32, "ribbon": 32, "rice": 32, "rice_bal": 32, "rice_crack": 32, "rice_scen": 32, "right_anger_bubbl": 32, "right_facing_fist": 32, "right_facing_fist_tone1": 32, "right_facing_fist_tone2": 32, "right_facing_fist_tone3": 32, "right_facing_fist_tone4": 32, "right_facing_fist_tone5": 32, "right_fist": 32, "right_fist_tone1": 32, "right_fist_tone2": 32, "right_fist_tone3": 32, "right_fist_tone4": 32, "right_fist_tone5": 32, "ring": [32, 35, 38, 868], "ringed_planet": 32, "ro": 32, "robot": [32, 240], "robot_fac": 32, "rock": [32, 281, 447, 998, 1000, 1135], "rocket": [32, 159], "rofl": 32, "roll_ey": 32, "roll_of_pap": 32, "rolled_up_newspap": 32, "roller_coast": 32, "roller_sk": 32, "rolling_on_the_floor_laugh": 32, "romania": 32, "rooster": 32, "rosett": 32, "rotating_light": 32, "round_pushpin": 32, "rowboat": 32, "rowboat_tone1": 32, "rowboat_tone2": 32, "rowboat_tone3": 32, "rowboat_tone4": 32, "rowboat_tone5": 32, "rowing_man": 32, "rowing_woman": 32, "ru": 32, "rugby_footbal": 32, "runner": [32, 44, 1146, 1177], "runner_tone1": 32, "runner_tone2": 32, "runner_tone3": 32, "runner_tone4": 32, "runner_tone5": 32, "running_man": 32, "running_shirt_with_sash": 32, "running_woman": 32, "russia": [32, 1119], "rw": [32, 61, 63, 153, 154, 163, 171, 240, 250, 456, 759, 764, 772, 839, 850, 853, 864, 867, 887, 890, 905, 912, 913, 914, 916, 925, 936, 939, 940, 948, 976, 982, 983, 984, 994, 996, 997, 1033, 1061], "rwanda": 32, "safety_pin": 32, "safety_vest": 32, "sagittariu": 32, "sailboat": 32, "saint_martin": 32, "sake": 32, "salad": 32, "salt": [32, 864], "samoa": 32, "san_marino": 32, "sandal": 32, "sandwich": 32, "santa": 32, "santa_tone1": 32, "santa_tone2": 32, "santa_tone3": 32, "santa_tone4": 32, "santa_tone5": 32, "sao_tome_princip": 32, "sari": 32, "satellit": 32, "satellite_orbit": 32, "saudi": 32, "saudi_arabia": 32, "saudiarabia": 32, "sauropod": 32, "saxophon": 32, "sb": [32, 269], "sc": [32, 35], "scale": [32, 78, 184, 230, 244, 437, 912, 985, 998], "scarf": 32, "school": [32, 244, 508, 543, 1128, 1160], "school_satchel": 32, "scientist": [32, 184, 1030, 1111, 1112, 1113, 1120], "scientist_dark_skin_ton": 32, "scientist_light_skin_ton": 32, "scientist_medium_dark_skin_ton": 32, "scientist_medium_light_skin_ton": 32, "scientist_medium_skin_ton": 32, "scientist_tone1": 32, "scientist_tone2": 32, "scientist_tone3": 32, "scientist_tone4": 32, "scientist_tone5": 32, "scissor": 32, "scooter": 32, "scorpion": 32, "scorpiu": 32, "scotland": 32, "scream": [32, 213, 868], "scream_cat": 32, "screwdriv": 32, "scroll": [32, 158, 508], "sd": [32, 224, 240, 244, 247, 250, 265, 272, 282, 286, 308, 314, 808], "se": [32, 572], "seal": 32, "seat": 32, "second_plac": 32, "second_place_med": 32, "secret": [32, 652, 673, 921, 1005, 1117], "see_no_evil": 32, "seedl": 32, "selfi": 32, "selfie_tone1": 32, "selfie_tone2": 32, "selfie_tone3": 32, "selfie_tone4": 32, "selfie_tone5": 32, "seneg": 32, "serbia": 32, "service_dog": 32, "seven": [32, 36, 84, 172, 185, 195, 203, 232, 340, 1073, 1084], "sewing_needl": 32, "seychel": 32, "sg": 32, "sh": [32, 61, 159, 163, 252, 781, 835, 836, 853, 914, 936, 946, 1093], "shaking_hand": 32, "shaking_hands_tone1": 32, "shaking_hands_tone2": 32, "shaking_hands_tone3": 32, "shaking_hands_tone4": 32, "shaking_hands_tone5": 32, "shallow_pan_of_food": 32, "shamrock": 32, "shark": 32, "shaved_ic": 32, "sheep": 32, "shelled_peanut": 32, "shield": [32, 152], "shinto_shrin": 32, "ship": [32, 157], "shirt": [32, 43, 149], "shit": [32, 211], "shop": [32, 276], "shopping_bag": 32, "shopping_cart": 32, "shopping_trollei": 32, "shower": 32, "shrimp": 32, "shrug": 32, "shrug_tone1": 32, "shrug_tone2": 32, "shrug_tone3": 32, "shrug_tone4": 32, "shrug_tone5": 32, "shushing_fac": 32, "si": 32, "sick": [32, 471], "sierra_leon": 32, "sign_of_the_horn": 32, "sign_of_the_horns_tone1": 32, "sign_of_the_horns_tone2": 32, "sign_of_the_horns_tone3": 32, "sign_of_the_horns_tone4": 32, "sign_of_the_horns_tone5": 32, "signal_strength": 32, "singapor": 32, "singer": 32, "singer_dark_skin_ton": 32, "singer_light_skin_ton": 32, "singer_medium_dark_skin_ton": 32, "singer_medium_light_skin_ton": 32, "singer_medium_skin_ton": 32, "singer_tone1": 32, "singer_tone2": 32, "singer_tone3": 32, "singer_tone4": 32, "singer_tone5": 32, "sint_maarten": 32, "six": [32, 172, 185, 195, 203, 221, 340, 1041], "six_pointed_star": 32, "sj": 32, "sk": 32, "skateboard": 32, "skeleton": [32, 155, 167, 450, 837], "ski": 32, "skier": 32, "skull": 32, "skull_and_crossbon": 32, "skull_crossbon": 32, "skunk": 32, "sl": [32, 332, 966], "sled": 32, "sleeping_accommod": 32, "sleeping_b": 32, "sleepi": 32, "sleuth_or_spi": 32, "sleuth_or_spy_tone1": 32, "sleuth_or_spy_tone2": 32, "sleuth_or_spy_tone3": 32, "sleuth_or_spy_tone4": 32, "sleuth_or_spy_tone5": 32, "slight_frown": 32, "slight_smil": 32, "slightly_frowning_fac": 32, "slightly_smiling_fac": 32, "slot_machin": 32, "sloth": 32, "slovakia": 32, "slovenia": [32, 219], "sm": 32, "small_airplan": 32, "small_blue_diamond": 32, "small_orange_diamond": 32, "small_red_triangl": 32, "small_red_triangle_down": 32, "smile": [32, 35], "smile_cat": 32, "smilei": [32, 63], "smiley_cat": 32, "smiling_face_with_3_heart": 32, "smiling_face_with_tear": 32, "smiling_imp": 32, "smirk": 32, "smirk_cat": 32, "smoke": 32, "sn": 32, "snail": 32, "snake": 32, "sneez": 32, "sneezing_fac": 32, "snow_capped_mountain": 32, "snowboard": 32, "snowboarder_dark_skin_ton": 32, "snowboarder_light_skin_ton": 32, "snowboarder_medium_dark_skin_ton": 32, "snowboarder_medium_light_skin_ton": 32, "snowboarder_medium_skin_ton": 32, "snowboarder_tone1": 32, "snowboarder_tone2": 32, "snowboarder_tone3": 32, "snowboarder_tone4": 32, "snowboarder_tone5": 32, "snowflak": 32, "snowman2": 32, "snowman": 32, "snowman_with_snow": 32, "sob": 32, "soccer": 32, "sock": 32, "softbal": 32, "solomon_island": 32, "somalia": 32, "soon": [32, 153, 154, 159, 572, 659, 808, 914, 966, 980, 1122], "sound": [32, 59, 62, 151, 155, 158, 159, 228, 729, 850, 905, 913, 914, 1140], "south_africa": 32, "south_georgia_south_sandwich_island": 32, "south_sudan": 32, "space_invad": 32, "spade": [32, 38], "spaghetti": [32, 119, 437, 448], "spain": 32, "sparkl": 32, "sparkler": 32, "sparkling_heart": 32, "speak_no_evil": 32, "speaker": [32, 746], "speaking_head": 32, "speaking_head_in_silhouett": 32, "speech_balloon": 32, "speech_left": 32, "speedboat": 32, "spider": 32, "spider_web": 32, "spiral_calendar": 32, "spiral_calendar_pad": 32, "spiral_note_pad": 32, "spiral_notepad": 32, "spong": 32, "spoon": 32, "sports_med": 32, "spy": 32, "spy_tone1": 32, "spy_tone2": 32, "spy_tone3": 32, "spy_tone4": 32, "spy_tone5": 32, "squeeze_bottl": 32, "squid": 32, "sr": [32, 224, 1063], "sri_lanka": 32, "st": [32, 218, 449, 976, 978, 979], "st_barthelemi": 32, "st_helena": 32, "st_kitts_nevi": 32, "st_lucia": 32, "st_pierre_miquelon": 32, "st_vincent_grenadin": 32, "stadium": 32, "star2": 32, "star": [32, 38, 609, 914, 996], "star_and_cresc": 32, "star_of_david": 32, "star_struck": 32, "station": 32, "statue_of_liberti": 32, "steam_locomot": 32, "stethoscop": 32, "stew": 32, "stop_button": 32, "stop_sign": 32, "stopwatch": 32, "straight_rul": 32, "strawberri": 32, "stuck_out_tongu": 32, "stuck_out_tongue_closed_ey": 32, "stuck_out_tongue_winking_ey": 32, "student": [32, 101, 106, 114, 132, 159, 252, 325, 326, 331, 332, 340, 1006, 1141], "student_dark_skin_ton": 32, "student_light_skin_ton": 32, "student_medium_dark_skin_ton": 32, "student_medium_light_skin_ton": 32, "student_medium_skin_ton": 32, "student_tone1": 32, "student_tone2": 32, "student_tone3": 32, "student_tone4": 32, "student_tone5": 32, "studio_microphon": 32, "stuffed_flatbread": 32, "stuffed_pita": 32, "sudan": 32, "sun_behind_large_cloud": 32, "sun_behind_rain_cloud": 32, "sun_behind_small_cloud": 32, "sun_with_fac": 32, "sunflow": 32, "sunni": [32, 109, 271, 274, 513, 524, 530, 532, 565, 761, 961, 1005], "sunris": 32, "sunrise_over_mountain": 32, "superhero": 32, "superhero_dark_skin_ton": 32, "superhero_light_skin_ton": 32, "superhero_medium_dark_skin_ton": 32, "superhero_medium_light_skin_ton": 32, "superhero_medium_skin_ton": 32, "superhero_tone1": 32, "superhero_tone2": 32, "superhero_tone3": 32, "superhero_tone4": 32, "superhero_tone5": 32, "supervillain": 32, "supervillain_dark_skin_ton": 32, "supervillain_light_skin_ton": 32, "supervillain_medium_dark_skin_ton": 32, "supervillain_medium_light_skin_ton": 32, "supervillain_medium_skin_ton": 32, "supervillain_tone1": 32, "supervillain_tone2": 32, "supervillain_tone3": 32, "supervillain_tone4": 32, "supervillain_tone5": 32, "surfer": 32, "surfer_tone1": 32, "surfer_tone2": 32, "surfer_tone3": 32, "surfer_tone4": 32, "surfer_tone5": 32, "surfing_man": 32, "surfing_woman": 32, "surinam": 32, "sushi": 32, "suspension_railwai": 32, "sv": [32, 491, 492], "swan": 32, "swaziland": 32, "sweat": 32, "sweat_drop": 32, "sweat_smil": 32, "sweden": 32, "sweet_potato": 32, "swimmer": 32, "swimmer_tone1": 32, "swimmer_tone2": 32, "swimmer_tone3": 32, "swimmer_tone4": 32, "swimmer_tone5": 32, "swimming_man": 32, "swimming_woman": 32, "switzerland": 32, "sx": 32, "symbol": [32, 33, 38, 114, 163, 192, 213, 221, 227, 230, 237, 240, 258, 267, 268, 288, 289, 378, 393, 402, 409, 415, 419, 422, 426, 429, 430, 435, 439, 444, 445, 667, 705, 711, 758, 759, 760, 761, 764, 783, 786, 808, 838, 853, 868, 888, 890, 904, 913, 1013], "synagogu": 32, "syria": 32, "syring": 32, "sz": [32, 154, 157], "t_rex": 32, "ta": 32, "table_tenni": 32, "taco": 32, "tada": 32, "taiwan": 32, "tajikistan": 32, "takeout_box": 32, "tamal": 32, "tanabata_tre": 32, "tangerin": 32, "tanzania": 32, "tauru": 32, "taxi": 32, "tc": 32, "td": [32, 216], "tea": 32, "teacher": [32, 106, 157, 453, 455, 835, 836, 994], "teacher_dark_skin_ton": 32, "teacher_light_skin_ton": 32, "teacher_medium_dark_skin_ton": 32, "teacher_medium_light_skin_ton": 32, "teacher_medium_skin_ton": 32, "teacher_tone1": 32, "teacher_tone2": 32, "teacher_tone3": 32, "teacher_tone4": 32, "teacher_tone5": 32, "teapot": 32, "technologist": 32, "technologist_dark_skin_ton": 32, "technologist_light_skin_ton": 32, "technologist_medium_dark_skin_ton": 32, "technologist_medium_light_skin_ton": 32, "technologist_medium_skin_ton": 32, "technologist_tone1": 32, "technologist_tone2": 32, "technologist_tone3": 32, "technologist_tone4": 32, "technologist_tone5": 32, "teddy_bear": 32, "telephon": 32, "telephone_receiv": 32, "telescop": 32, "ten": [32, 154, 175, 195, 234, 240, 899], "tenni": 32, "tent": 32, "test_tub": 32, "tf": [32, 247, 834, 1003], "tg": 32, "th": [32, 188, 216, 371, 413, 522, 600, 1043, 1052], "thailand": 32, "thermomet": [32, 69, 82, 84, 85, 179, 188, 240, 260, 344, 346, 347, 349, 464, 471, 474, 476, 485, 486, 499, 513, 553, 554, 562, 565, 640, 643, 761, 914], "thermometer_fac": 32, "thinking_fac": 32, "third_plac": 32, "third_place_med": 32, "thong_sand": 32, "thought_balloon": 32, "thread": [32, 59, 62, 65, 83, 89, 91, 157, 169, 170, 179, 184, 188, 199, 221, 227, 228, 230, 237, 240, 255, 256, 257, 259, 268, 277, 279, 303, 316, 317, 350, 353, 354, 355, 443, 472, 489, 503, 566, 707, 715, 724, 726, 733, 735, 738, 739, 760, 761, 790, 800, 806, 820, 828, 904, 926, 945, 953, 955, 956, 958, 960, 964, 965, 967, 978, 979, 980, 1016, 1017, 1106, 1148, 1158, 1159, 1160, 1162, 1174, 1175, 1176], "three_button_mous": 32, "thumbdown": 32, "thumbdown_tone1": 32, "thumbdown_tone2": 32, "thumbdown_tone3": 32, "thumbdown_tone4": 32, "thumbdown_tone5": 32, "thumbsdown_tone1": 32, "thumbsdown_tone2": 32, "thumbsdown_tone3": 32, "thumbsdown_tone4": 32, "thumbsdown_tone5": 32, "thumbsup_tone1": 32, "thumbsup_tone2": 32, "thumbsup_tone3": 32, "thumbsup_tone4": 32, "thumbsup_tone5": 32, "thumbup": 32, "thumbup_tone1": 32, "thumbup_tone2": 32, "thumbup_tone3": 32, "thumbup_tone4": 32, "thumbup_tone5": 32, "thunder_cloud_and_rain": 32, "thunder_cloud_rain": 32, "ticket": 32, "tiger2": 32, "tiger": 32, "timer": [32, 59, 62, 65, 114, 126, 176, 277, 428, 740, 761, 785, 810, 817, 823, 826, 827, 829, 841, 844, 904, 913, 929, 933, 945, 964, 970, 972, 980, 1173, 1176], "timer_clock": 32, "timor_lest": 32, "tipping_hand_man": 32, "tipping_hand_woman": 32, "tired_fac": 32, "tj": 32, "tk": 32, "tl": [32, 157], "tm": 32, "tn": [32, 192], "togo": 32, "toilet": [32, 230, 543, 798, 1016], "tokelau": 32, "tokyo_tow": 32, "tomato": 32, "tone1": 32, "tone2": 32, "tone3": 32, "tone4": 32, "tone5": 32, "tonga": 32, "tongu": [32, 1159], "toolbox": [32, 173], "tooth": 32, "toothbrush": 32, "tophat": 32, "tornado": 32, "tr": [32, 216], "track_next": 32, "track_previ": 32, "trackbal": 32, "tractor": 32, "traffic_light": 32, "train2": 32, "tram": 32, "transgender_flag": 32, "transgender_symbol": 32, "triangular_flag_on_post": 32, "triangular_rul": 32, "trident": 32, "trinidad_tobago": 32, "tristan_da_cunha": 32, "triumph": 32, "trolleybu": 32, "trophi": 32, "tropical_drink": 32, "tropical_fish": 32, "truck": 32, "trumpet": 32, "tt": 32, "tulip": 32, "tumbler_glass": 32, "tunisia": 32, "turkei": 32, "turkmenistan": 32, "turks_caicos_island": 32, "turtl": 32, "tuvalu": 32, "tuxedo_tone1": 32, "tuxedo_tone2": 32, "tuxedo_tone3": 32, "tuxedo_tone4": 32, "tuxedo_tone5": 32, "tw": 32, "twisted_rightwards_arrow": 32, "two_heart": 32, "two_men_holding_hand": 32, "two_women_holding_hand": 32, "tz": 32, "u5272": 32, "u5408": 32, "u55b6": 32, "u6307": 32, "u6708": 32, "u6709": 32, "u6e80": 32, "u7121": 32, "u7533": 32, "u7981": 32, "u7a7a": 32, "ua": [32, 219, 228, 303], "ug": 32, "uganda": 32, "ukrain": 32, "umbrella2": 32, "umbrella": 32, "umbrella_on_ground": 32, "unamus": 32, "underag": 32, "unicorn": 32, "unicorn_fac": 32, "united_arab_emir": 32, "united_n": 32, "united_st": 32, "unlock": [32, 735, 737, 739, 800, 806, 953, 1171], "upside_down": 32, "upside_down_fac": 32, "urn": 32, "uruguai": 32, "us_virgin_island": 32, "uz": 32, "uzbekistan": 32, "v_tone1": 32, "v_tone2": 32, "v_tone3": 32, "v_tone4": 32, "v_tone5": 32, "va": [32, 271, 274], "vampir": 32, "vampire_dark_skin_ton": 32, "vampire_light_skin_ton": 32, "vampire_medium_dark_skin_ton": 32, "vampire_medium_light_skin_ton": 32, "vampire_medium_skin_ton": 32, "vampire_tone1": 32, "vampire_tone2": 32, "vampire_tone3": 32, "vampire_tone4": 32, "vampire_tone5": 32, "vanuatu": 32, "vatican_c": 32, "vc": [32, 134, 158], "ve": [32, 152, 154, 850, 1140], "venezuela": 32, "vertical_traffic_light": 32, "vg": 32, "vh": 32, "vi": [32, 741], "vibration_mod": 32, "video_camera": 32, "video_gam": 32, "vietnam": 32, "violin": 32, "virgo": 32, "vn": 32, "volcano": 32, "volleybal": 32, "vu": 32, "vulcan": 32, "vulcan_salut": 32, "vulcan_tone1": 32, "vulcan_tone2": 32, "vulcan_tone3": 32, "vulcan_tone4": 32, "vulcan_tone5": 32, "waffl": 32, "wale": 32, "walk": [32, 151, 171, 184, 280, 281, 302, 347, 358, 665, 682, 852, 914, 1018], "walking_man": 32, "walking_tone1": 32, "walking_tone2": 32, "walking_tone3": 32, "walking_tone4": 32, "walking_tone5": 32, "walking_woman": 32, "wallis_futuna": 32, "waning_crescent_moon": 32, "waning_gibbous_moon": 32, "wastebasket": 32, "water_buffalo": 32, "water_polo": 32, "water_polo_tone1": 32, "water_polo_tone2": 32, "water_polo_tone3": 32, "water_polo_tone4": 32, "water_polo_tone5": 32, "watermelon": [32, 276], "wave": [32, 34, 38, 268, 285], "wave_tone1": 32, "wave_tone2": 32, "wave_tone3": 32, "wave_tone4": 32, "wave_tone5": 32, "waving_black_flag": 32, "waving_white_flag": 32, "wavy_dash": 32, "waxing_crescent_moon": 32, "waxing_gibbous_moon": 32, "wc": [32, 212, 213, 230, 250, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 449, 667, 705, 758, 760, 761, 848, 851, 901, 915, 1090], "weari": 32, "wed": [32, 211], "weight_lift": 32, "weight_lifter_tone1": 32, "weight_lifter_tone2": 32, "weight_lifter_tone3": 32, "weight_lifter_tone4": 32, "weight_lifter_tone5": 32, "weight_lifting_man": 32, "weight_lifting_woman": 32, "western_sahara": 32, "wf": 32, "whale2": 32, "whale": 32, "wheel_of_dharma": 32, "wheelchair": 32, "whiski": 32, "white_check_mark": 32, "white_circl": 32, "white_flag": 32, "white_flow": 32, "white_frowning_fac": 32, "white_hair": 32, "white_heart": 32, "white_large_squar": 32, "white_medium_small_squar": 32, "white_medium_squar": 32, "white_small_squar": 32, "white_square_button": 32, "white_sun_behind_cloud": 32, "white_sun_behind_cloud_with_rain": 32, "white_sun_cloud": 32, "white_sun_rain_cloud": 32, "white_sun_small_cloud": 32, "white_sun_with_small_cloud": 32, "wilted_flow": 32, "wilted_ros": 32, "wind_blowing_fac": 32, "wind_chim": 32, "wind_fac": 32, "wine_glass": 32, "wolf": 32, "woman": 32, "woman_and_man_holding_hands_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_light_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "woman_and_man_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "woman_and_man_holding_hands_tone1": 32, "woman_and_man_holding_hands_tone1_tone2": 32, "woman_and_man_holding_hands_tone1_tone3": 32, "woman_and_man_holding_hands_tone1_tone4": 32, "woman_and_man_holding_hands_tone1_tone5": 32, "woman_and_man_holding_hands_tone2": 32, "woman_and_man_holding_hands_tone2_tone1": 32, "woman_and_man_holding_hands_tone2_tone3": 32, "woman_and_man_holding_hands_tone2_tone4": 32, "woman_and_man_holding_hands_tone2_tone5": 32, "woman_and_man_holding_hands_tone3": 32, "woman_and_man_holding_hands_tone3_tone1": 32, "woman_and_man_holding_hands_tone3_tone2": 32, "woman_and_man_holding_hands_tone3_tone4": 32, "woman_and_man_holding_hands_tone3_tone5": 32, "woman_and_man_holding_hands_tone4": 32, "woman_and_man_holding_hands_tone4_tone1": 32, "woman_and_man_holding_hands_tone4_tone2": 32, "woman_and_man_holding_hands_tone4_tone3": 32, "woman_and_man_holding_hands_tone4_tone5": 32, "woman_and_man_holding_hands_tone5": 32, "woman_and_man_holding_hands_tone5_tone1": 32, "woman_and_man_holding_hands_tone5_tone2": 32, "woman_and_man_holding_hands_tone5_tone3": 32, "woman_and_man_holding_hands_tone5_tone4": 32, "woman_artist": 32, "woman_artist_dark_skin_ton": 32, "woman_artist_light_skin_ton": 32, "woman_artist_medium_dark_skin_ton": 32, "woman_artist_medium_light_skin_ton": 32, "woman_artist_medium_skin_ton": 32, "woman_artist_tone1": 32, "woman_artist_tone2": 32, "woman_artist_tone3": 32, "woman_artist_tone4": 32, "woman_artist_tone5": 32, "woman_astronaut": 32, "woman_astronaut_dark_skin_ton": 32, "woman_astronaut_light_skin_ton": 32, "woman_astronaut_medium_dark_skin_ton": 32, "woman_astronaut_medium_light_skin_ton": 32, "woman_astronaut_medium_skin_ton": 32, "woman_astronaut_tone1": 32, "woman_astronaut_tone2": 32, "woman_astronaut_tone3": 32, "woman_astronaut_tone4": 32, "woman_astronaut_tone5": 32, "woman_bald": 32, "woman_bald_dark_skin_ton": 32, "woman_bald_light_skin_ton": 32, "woman_bald_medium_dark_skin_ton": 32, "woman_bald_medium_light_skin_ton": 32, "woman_bald_medium_skin_ton": 32, "woman_bald_tone1": 32, "woman_bald_tone2": 32, "woman_bald_tone3": 32, "woman_bald_tone4": 32, "woman_bald_tone5": 32, "woman_beard": 32, "woman_bik": 32, "woman_biking_dark_skin_ton": 32, "woman_biking_light_skin_ton": 32, "woman_biking_medium_dark_skin_ton": 32, "woman_biking_medium_light_skin_ton": 32, "woman_biking_medium_skin_ton": 32, "woman_biking_tone1": 32, "woman_biking_tone2": 32, "woman_biking_tone3": 32, "woman_biking_tone4": 32, "woman_biking_tone5": 32, "woman_bouncing_bal": 32, "woman_bouncing_ball_dark_skin_ton": 32, "woman_bouncing_ball_light_skin_ton": 32, "woman_bouncing_ball_medium_dark_skin_ton": 32, "woman_bouncing_ball_medium_light_skin_ton": 32, "woman_bouncing_ball_medium_skin_ton": 32, "woman_bouncing_ball_tone1": 32, "woman_bouncing_ball_tone2": 32, "woman_bouncing_ball_tone3": 32, "woman_bouncing_ball_tone4": 32, "woman_bouncing_ball_tone5": 32, "woman_bow": 32, "woman_bowing_dark_skin_ton": 32, "woman_bowing_light_skin_ton": 32, "woman_bowing_medium_dark_skin_ton": 32, "woman_bowing_medium_light_skin_ton": 32, "woman_bowing_medium_skin_ton": 32, "woman_bowing_tone1": 32, "woman_bowing_tone2": 32, "woman_bowing_tone3": 32, "woman_bowing_tone4": 32, "woman_bowing_tone5": 32, "woman_cartwheel": 32, "woman_cartwheeling_dark_skin_ton": 32, "woman_cartwheeling_light_skin_ton": 32, "woman_cartwheeling_medium_dark_skin_ton": 32, "woman_cartwheeling_medium_light_skin_ton": 32, "woman_cartwheeling_medium_skin_ton": 32, "woman_cartwheeling_tone1": 32, "woman_cartwheeling_tone2": 32, "woman_cartwheeling_tone3": 32, "woman_cartwheeling_tone4": 32, "woman_cartwheeling_tone5": 32, "woman_climb": 32, "woman_climbing_dark_skin_ton": 32, "woman_climbing_light_skin_ton": 32, "woman_climbing_medium_dark_skin_ton": 32, "woman_climbing_medium_light_skin_ton": 32, "woman_climbing_medium_skin_ton": 32, "woman_climbing_tone1": 32, "woman_climbing_tone2": 32, "woman_climbing_tone3": 32, "woman_climbing_tone4": 32, "woman_climbing_tone5": 32, "woman_construction_work": 32, "woman_construction_worker_dark_skin_ton": 32, "woman_construction_worker_light_skin_ton": 32, "woman_construction_worker_medium_dark_skin_ton": 32, "woman_construction_worker_medium_light_skin_ton": 32, "woman_construction_worker_medium_skin_ton": 32, "woman_construction_worker_tone1": 32, "woman_construction_worker_tone2": 32, "woman_construction_worker_tone3": 32, "woman_construction_worker_tone4": 32, "woman_construction_worker_tone5": 32, "woman_cook": 32, "woman_cook_dark_skin_ton": 32, "woman_cook_light_skin_ton": 32, "woman_cook_medium_dark_skin_ton": 32, "woman_cook_medium_light_skin_ton": 32, "woman_cook_medium_skin_ton": 32, "woman_cook_tone1": 32, "woman_cook_tone2": 32, "woman_cook_tone3": 32, "woman_cook_tone4": 32, "woman_cook_tone5": 32, "woman_curly_hair": 32, "woman_curly_haired_dark_skin_ton": 32, "woman_curly_haired_light_skin_ton": 32, "woman_curly_haired_medium_dark_skin_ton": 32, "woman_curly_haired_medium_light_skin_ton": 32, "woman_curly_haired_medium_skin_ton": 32, "woman_curly_haired_tone1": 32, "woman_curly_haired_tone2": 32, "woman_curly_haired_tone3": 32, "woman_curly_haired_tone4": 32, "woman_curly_haired_tone5": 32, "woman_dark_skin_tone_beard": 32, "woman_detect": 32, "woman_detective_dark_skin_ton": 32, "woman_detective_light_skin_ton": 32, "woman_detective_medium_dark_skin_ton": 32, "woman_detective_medium_light_skin_ton": 32, "woman_detective_medium_skin_ton": 32, "woman_detective_tone1": 32, "woman_detective_tone2": 32, "woman_detective_tone3": 32, "woman_detective_tone4": 32, "woman_detective_tone5": 32, "woman_elf": 32, "woman_elf_dark_skin_ton": 32, "woman_elf_light_skin_ton": 32, "woman_elf_medium_dark_skin_ton": 32, "woman_elf_medium_light_skin_ton": 32, "woman_elf_medium_skin_ton": 32, "woman_elf_tone1": 32, "woman_elf_tone2": 32, "woman_elf_tone3": 32, "woman_elf_tone4": 32, "woman_elf_tone5": 32, "woman_facepalm": 32, "woman_facepalming_dark_skin_ton": 32, "woman_facepalming_light_skin_ton": 32, "woman_facepalming_medium_dark_skin_ton": 32, "woman_facepalming_medium_light_skin_ton": 32, "woman_facepalming_medium_skin_ton": 32, "woman_facepalming_tone1": 32, "woman_facepalming_tone2": 32, "woman_facepalming_tone3": 32, "woman_facepalming_tone4": 32, "woman_facepalming_tone5": 32, "woman_factory_work": 32, "woman_factory_worker_dark_skin_ton": 32, "woman_factory_worker_light_skin_ton": 32, "woman_factory_worker_medium_dark_skin_ton": 32, "woman_factory_worker_medium_light_skin_ton": 32, "woman_factory_worker_medium_skin_ton": 32, "woman_factory_worker_tone1": 32, "woman_factory_worker_tone2": 32, "woman_factory_worker_tone3": 32, "woman_factory_worker_tone4": 32, "woman_factory_worker_tone5": 32, "woman_fairi": 32, "woman_fairy_dark_skin_ton": 32, "woman_fairy_light_skin_ton": 32, "woman_fairy_medium_dark_skin_ton": 32, "woman_fairy_medium_light_skin_ton": 32, "woman_fairy_medium_skin_ton": 32, "woman_fairy_tone1": 32, "woman_fairy_tone2": 32, "woman_fairy_tone3": 32, "woman_fairy_tone4": 32, "woman_fairy_tone5": 32, "woman_farm": 32, "woman_farmer_dark_skin_ton": 32, "woman_farmer_light_skin_ton": 32, "woman_farmer_medium_dark_skin_ton": 32, "woman_farmer_medium_light_skin_ton": 32, "woman_farmer_medium_skin_ton": 32, "woman_farmer_tone1": 32, "woman_farmer_tone2": 32, "woman_farmer_tone3": 32, "woman_farmer_tone4": 32, "woman_farmer_tone5": 32, "woman_feeding_babi": 32, "woman_feeding_baby_dark_skin_ton": 32, "woman_feeding_baby_light_skin_ton": 32, "woman_feeding_baby_medium_dark_skin_ton": 32, "woman_feeding_baby_medium_light_skin_ton": 32, "woman_feeding_baby_medium_skin_ton": 32, "woman_feeding_baby_tone1": 32, "woman_feeding_baby_tone2": 32, "woman_feeding_baby_tone3": 32, "woman_feeding_baby_tone4": 32, "woman_feeding_baby_tone5": 32, "woman_firefight": 32, "woman_firefighter_dark_skin_ton": 32, "woman_firefighter_light_skin_ton": 32, "woman_firefighter_medium_dark_skin_ton": 32, "woman_firefighter_medium_light_skin_ton": 32, "woman_firefighter_medium_skin_ton": 32, "woman_firefighter_tone1": 32, "woman_firefighter_tone2": 32, "woman_firefighter_tone3": 32, "woman_firefighter_tone4": 32, "woman_firefighter_tone5": 32, "woman_frown": 32, "woman_frowning_dark_skin_ton": 32, "woman_frowning_light_skin_ton": 32, "woman_frowning_medium_dark_skin_ton": 32, "woman_frowning_medium_light_skin_ton": 32, "woman_frowning_medium_skin_ton": 32, "woman_frowning_tone1": 32, "woman_frowning_tone2": 32, "woman_frowning_tone3": 32, "woman_frowning_tone4": 32, "woman_frowning_tone5": 32, "woman_geni": 32, "woman_gesturing_no": 32, "woman_gesturing_no_dark_skin_ton": 32, "woman_gesturing_no_light_skin_ton": 32, "woman_gesturing_no_medium_dark_skin_ton": 32, "woman_gesturing_no_medium_light_skin_ton": 32, "woman_gesturing_no_medium_skin_ton": 32, "woman_gesturing_no_tone1": 32, "woman_gesturing_no_tone2": 32, "woman_gesturing_no_tone3": 32, "woman_gesturing_no_tone4": 32, "woman_gesturing_no_tone5": 32, "woman_gesturing_ok": 32, "woman_gesturing_ok_dark_skin_ton": 32, "woman_gesturing_ok_light_skin_ton": 32, "woman_gesturing_ok_medium_dark_skin_ton": 32, "woman_gesturing_ok_medium_light_skin_ton": 32, "woman_gesturing_ok_medium_skin_ton": 32, "woman_gesturing_ok_tone1": 32, "woman_gesturing_ok_tone2": 32, "woman_gesturing_ok_tone3": 32, "woman_gesturing_ok_tone4": 32, "woman_gesturing_ok_tone5": 32, "woman_getting_face_massag": 32, "woman_getting_face_massage_dark_skin_ton": 32, "woman_getting_face_massage_light_skin_ton": 32, "woman_getting_face_massage_medium_dark_skin_ton": 32, "woman_getting_face_massage_medium_light_skin_ton": 32, "woman_getting_face_massage_medium_skin_ton": 32, "woman_getting_face_massage_tone1": 32, "woman_getting_face_massage_tone2": 32, "woman_getting_face_massage_tone3": 32, "woman_getting_face_massage_tone4": 32, "woman_getting_face_massage_tone5": 32, "woman_getting_haircut": 32, "woman_getting_haircut_dark_skin_ton": 32, "woman_getting_haircut_light_skin_ton": 32, "woman_getting_haircut_medium_dark_skin_ton": 32, "woman_getting_haircut_medium_light_skin_ton": 32, "woman_getting_haircut_medium_skin_ton": 32, "woman_getting_haircut_tone1": 32, "woman_getting_haircut_tone2": 32, "woman_getting_haircut_tone3": 32, "woman_getting_haircut_tone4": 32, "woman_getting_haircut_tone5": 32, "woman_golf": 32, "woman_golfing_dark_skin_ton": 32, "woman_golfing_light_skin_ton": 32, "woman_golfing_medium_dark_skin_ton": 32, "woman_golfing_medium_light_skin_ton": 32, "woman_golfing_medium_skin_ton": 32, "woman_golfing_tone1": 32, "woman_golfing_tone2": 32, "woman_golfing_tone3": 32, "woman_golfing_tone4": 32, "woman_golfing_tone5": 32, "woman_guard": 32, "woman_guard_dark_skin_ton": 32, "woman_guard_light_skin_ton": 32, "woman_guard_medium_dark_skin_ton": 32, "woman_guard_medium_light_skin_ton": 32, "woman_guard_medium_skin_ton": 32, "woman_guard_tone1": 32, "woman_guard_tone2": 32, "woman_guard_tone3": 32, "woman_guard_tone4": 32, "woman_guard_tone5": 32, "woman_health_work": 32, "woman_health_worker_dark_skin_ton": 32, "woman_health_worker_light_skin_ton": 32, "woman_health_worker_medium_dark_skin_ton": 32, "woman_health_worker_medium_light_skin_ton": 32, "woman_health_worker_medium_skin_ton": 32, "woman_health_worker_tone1": 32, "woman_health_worker_tone2": 32, "woman_health_worker_tone3": 32, "woman_health_worker_tone4": 32, "woman_health_worker_tone5": 32, "woman_in_lotus_posit": 32, "woman_in_lotus_position_dark_skin_ton": 32, "woman_in_lotus_position_light_skin_ton": 32, "woman_in_lotus_position_medium_dark_skin_ton": 32, "woman_in_lotus_position_medium_light_skin_ton": 32, "woman_in_lotus_position_medium_skin_ton": 32, "woman_in_lotus_position_tone1": 32, "woman_in_lotus_position_tone2": 32, "woman_in_lotus_position_tone3": 32, "woman_in_lotus_position_tone4": 32, "woman_in_lotus_position_tone5": 32, "woman_in_manual_wheelchair": 32, "woman_in_manual_wheelchair_dark_skin_ton": 32, "woman_in_manual_wheelchair_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_dark_skin_ton": 32, "woman_in_manual_wheelchair_medium_light_skin_ton": 32, "woman_in_manual_wheelchair_medium_skin_ton": 32, "woman_in_manual_wheelchair_tone1": 32, "woman_in_manual_wheelchair_tone2": 32, "woman_in_manual_wheelchair_tone3": 32, "woman_in_manual_wheelchair_tone4": 32, "woman_in_manual_wheelchair_tone5": 32, "woman_in_motorized_wheelchair": 32, "woman_in_motorized_wheelchair_dark_skin_ton": 32, "woman_in_motorized_wheelchair_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_dark_skin_ton": 32, "woman_in_motorized_wheelchair_medium_light_skin_ton": 32, "woman_in_motorized_wheelchair_medium_skin_ton": 32, "woman_in_motorized_wheelchair_tone1": 32, "woman_in_motorized_wheelchair_tone2": 32, "woman_in_motorized_wheelchair_tone3": 32, "woman_in_motorized_wheelchair_tone4": 32, "woman_in_motorized_wheelchair_tone5": 32, "woman_in_steamy_room": 32, "woman_in_steamy_room_dark_skin_ton": 32, "woman_in_steamy_room_light_skin_ton": 32, "woman_in_steamy_room_medium_dark_skin_ton": 32, "woman_in_steamy_room_medium_light_skin_ton": 32, "woman_in_steamy_room_medium_skin_ton": 32, "woman_in_steamy_room_tone1": 32, "woman_in_steamy_room_tone2": 32, "woman_in_steamy_room_tone3": 32, "woman_in_steamy_room_tone4": 32, "woman_in_steamy_room_tone5": 32, "woman_in_tuxedo": 32, "woman_in_tuxedo_dark_skin_ton": 32, "woman_in_tuxedo_light_skin_ton": 32, "woman_in_tuxedo_medium_dark_skin_ton": 32, "woman_in_tuxedo_medium_light_skin_ton": 32, "woman_in_tuxedo_medium_skin_ton": 32, "woman_in_tuxedo_tone1": 32, "woman_in_tuxedo_tone2": 32, "woman_in_tuxedo_tone3": 32, "woman_in_tuxedo_tone4": 32, "woman_in_tuxedo_tone5": 32, "woman_judg": 32, "woman_judge_dark_skin_ton": 32, "woman_judge_light_skin_ton": 32, "woman_judge_medium_dark_skin_ton": 32, "woman_judge_medium_light_skin_ton": 32, "woman_judge_medium_skin_ton": 32, "woman_judge_tone1": 32, "woman_judge_tone2": 32, "woman_judge_tone3": 32, "woman_judge_tone4": 32, "woman_judge_tone5": 32, "woman_juggl": 32, "woman_juggling_dark_skin_ton": 32, "woman_juggling_light_skin_ton": 32, "woman_juggling_medium_dark_skin_ton": 32, "woman_juggling_medium_light_skin_ton": 32, "woman_juggling_medium_skin_ton": 32, "woman_juggling_tone1": 32, "woman_juggling_tone2": 32, "woman_juggling_tone3": 32, "woman_juggling_tone4": 32, "woman_juggling_tone5": 32, "woman_kneel": 32, "woman_kneeling_dark_skin_ton": 32, "woman_kneeling_light_skin_ton": 32, "woman_kneeling_medium_dark_skin_ton": 32, "woman_kneeling_medium_light_skin_ton": 32, "woman_kneeling_medium_skin_ton": 32, "woman_kneeling_tone1": 32, "woman_kneeling_tone2": 32, "woman_kneeling_tone3": 32, "woman_kneeling_tone4": 32, "woman_kneeling_tone5": 32, "woman_lifting_weight": 32, "woman_lifting_weights_dark_skin_ton": 32, "woman_lifting_weights_light_skin_ton": 32, "woman_lifting_weights_medium_dark_skin_ton": 32, "woman_lifting_weights_medium_light_skin_ton": 32, "woman_lifting_weights_medium_skin_ton": 32, "woman_lifting_weights_tone1": 32, "woman_lifting_weights_tone2": 32, "woman_lifting_weights_tone3": 32, "woman_lifting_weights_tone4": 32, "woman_lifting_weights_tone5": 32, "woman_light_skin_tone_beard": 32, "woman_mag": 32, "woman_mage_dark_skin_ton": 32, "woman_mage_light_skin_ton": 32, "woman_mage_medium_dark_skin_ton": 32, "woman_mage_medium_light_skin_ton": 32, "woman_mage_medium_skin_ton": 32, "woman_mage_tone1": 32, "woman_mage_tone2": 32, "woman_mage_tone3": 32, "woman_mage_tone4": 32, "woman_mage_tone5": 32, "woman_mechan": 32, "woman_mechanic_dark_skin_ton": 32, "woman_mechanic_light_skin_ton": 32, "woman_mechanic_medium_dark_skin_ton": 32, "woman_mechanic_medium_light_skin_ton": 32, "woman_mechanic_medium_skin_ton": 32, "woman_mechanic_tone1": 32, "woman_mechanic_tone2": 32, "woman_mechanic_tone3": 32, "woman_mechanic_tone4": 32, "woman_mechanic_tone5": 32, "woman_medium_dark_skin_tone_beard": 32, "woman_medium_light_skin_tone_beard": 32, "woman_medium_skin_tone_beard": 32, "woman_mountain_bik": 32, "woman_mountain_biking_dark_skin_ton": 32, "woman_mountain_biking_light_skin_ton": 32, "woman_mountain_biking_medium_dark_skin_ton": 32, "woman_mountain_biking_medium_light_skin_ton": 32, "woman_mountain_biking_medium_skin_ton": 32, "woman_mountain_biking_tone1": 32, "woman_mountain_biking_tone2": 32, "woman_mountain_biking_tone3": 32, "woman_mountain_biking_tone4": 32, "woman_mountain_biking_tone5": 32, "woman_office_work": 32, "woman_office_worker_dark_skin_ton": 32, "woman_office_worker_light_skin_ton": 32, "woman_office_worker_medium_dark_skin_ton": 32, "woman_office_worker_medium_light_skin_ton": 32, "woman_office_worker_medium_skin_ton": 32, "woman_office_worker_tone1": 32, "woman_office_worker_tone2": 32, "woman_office_worker_tone3": 32, "woman_office_worker_tone4": 32, "woman_office_worker_tone5": 32, "woman_pilot": 32, "woman_pilot_dark_skin_ton": 32, "woman_pilot_light_skin_ton": 32, "woman_pilot_medium_dark_skin_ton": 32, "woman_pilot_medium_light_skin_ton": 32, "woman_pilot_medium_skin_ton": 32, "woman_pilot_tone1": 32, "woman_pilot_tone2": 32, "woman_pilot_tone3": 32, "woman_pilot_tone4": 32, "woman_pilot_tone5": 32, "woman_playing_handbal": 32, "woman_playing_handball_dark_skin_ton": 32, "woman_playing_handball_light_skin_ton": 32, "woman_playing_handball_medium_dark_skin_ton": 32, "woman_playing_handball_medium_light_skin_ton": 32, "woman_playing_handball_medium_skin_ton": 32, "woman_playing_handball_tone1": 32, "woman_playing_handball_tone2": 32, "woman_playing_handball_tone3": 32, "woman_playing_handball_tone4": 32, "woman_playing_handball_tone5": 32, "woman_playing_water_polo": 32, "woman_playing_water_polo_dark_skin_ton": 32, "woman_playing_water_polo_light_skin_ton": 32, "woman_playing_water_polo_medium_dark_skin_ton": 32, "woman_playing_water_polo_medium_light_skin_ton": 32, "woman_playing_water_polo_medium_skin_ton": 32, "woman_playing_water_polo_tone1": 32, "woman_playing_water_polo_tone2": 32, "woman_playing_water_polo_tone3": 32, "woman_playing_water_polo_tone4": 32, "woman_playing_water_polo_tone5": 32, "woman_police_offic": 32, "woman_police_officer_dark_skin_ton": 32, "woman_police_officer_light_skin_ton": 32, "woman_police_officer_medium_dark_skin_ton": 32, "woman_police_officer_medium_light_skin_ton": 32, "woman_police_officer_medium_skin_ton": 32, "woman_police_officer_tone1": 32, "woman_police_officer_tone2": 32, "woman_police_officer_tone3": 32, "woman_police_officer_tone4": 32, "woman_police_officer_tone5": 32, "woman_pout": 32, "woman_pouting_dark_skin_ton": 32, "woman_pouting_light_skin_ton": 32, "woman_pouting_medium_dark_skin_ton": 32, "woman_pouting_medium_light_skin_ton": 32, "woman_pouting_medium_skin_ton": 32, "woman_pouting_tone1": 32, "woman_pouting_tone2": 32, "woman_pouting_tone3": 32, "woman_pouting_tone4": 32, "woman_pouting_tone5": 32, "woman_raising_hand": 32, "woman_raising_hand_dark_skin_ton": 32, "woman_raising_hand_light_skin_ton": 32, "woman_raising_hand_medium_dark_skin_ton": 32, "woman_raising_hand_medium_light_skin_ton": 32, "woman_raising_hand_medium_skin_ton": 32, "woman_raising_hand_tone1": 32, "woman_raising_hand_tone2": 32, "woman_raising_hand_tone3": 32, "woman_raising_hand_tone4": 32, "woman_raising_hand_tone5": 32, "woman_red_hair": 32, "woman_red_haired_dark_skin_ton": 32, "woman_red_haired_light_skin_ton": 32, "woman_red_haired_medium_dark_skin_ton": 32, "woman_red_haired_medium_light_skin_ton": 32, "woman_red_haired_medium_skin_ton": 32, "woman_red_haired_tone1": 32, "woman_red_haired_tone2": 32, "woman_red_haired_tone3": 32, "woman_red_haired_tone4": 32, "woman_red_haired_tone5": 32, "woman_rowing_boat": 32, "woman_rowing_boat_dark_skin_ton": 32, "woman_rowing_boat_light_skin_ton": 32, "woman_rowing_boat_medium_dark_skin_ton": 32, "woman_rowing_boat_medium_light_skin_ton": 32, "woman_rowing_boat_medium_skin_ton": 32, "woman_rowing_boat_tone1": 32, "woman_rowing_boat_tone2": 32, "woman_rowing_boat_tone3": 32, "woman_rowing_boat_tone4": 32, "woman_rowing_boat_tone5": 32, "woman_run": 32, "woman_running_dark_skin_ton": 32, "woman_running_light_skin_ton": 32, "woman_running_medium_dark_skin_ton": 32, "woman_running_medium_light_skin_ton": 32, "woman_running_medium_skin_ton": 32, "woman_running_tone1": 32, "woman_running_tone2": 32, "woman_running_tone3": 32, "woman_running_tone4": 32, "woman_running_tone5": 32, "woman_scientist": 32, "woman_scientist_dark_skin_ton": 32, "woman_scientist_light_skin_ton": 32, "woman_scientist_medium_dark_skin_ton": 32, "woman_scientist_medium_light_skin_ton": 32, "woman_scientist_medium_skin_ton": 32, "woman_scientist_tone1": 32, "woman_scientist_tone2": 32, "woman_scientist_tone3": 32, "woman_scientist_tone4": 32, "woman_scientist_tone5": 32, "woman_shrug": 32, "woman_shrugging_dark_skin_ton": 32, "woman_shrugging_light_skin_ton": 32, "woman_shrugging_medium_dark_skin_ton": 32, "woman_shrugging_medium_light_skin_ton": 32, "woman_shrugging_medium_skin_ton": 32, "woman_shrugging_tone1": 32, "woman_shrugging_tone2": 32, "woman_shrugging_tone3": 32, "woman_shrugging_tone4": 32, "woman_shrugging_tone5": 32, "woman_sing": 32, "woman_singer_dark_skin_ton": 32, "woman_singer_light_skin_ton": 32, "woman_singer_medium_dark_skin_ton": 32, "woman_singer_medium_light_skin_ton": 32, "woman_singer_medium_skin_ton": 32, "woman_singer_tone1": 32, "woman_singer_tone2": 32, "woman_singer_tone3": 32, "woman_singer_tone4": 32, "woman_singer_tone5": 32, "woman_stand": 32, "woman_standing_dark_skin_ton": 32, "woman_standing_light_skin_ton": 32, "woman_standing_medium_dark_skin_ton": 32, "woman_standing_medium_light_skin_ton": 32, "woman_standing_medium_skin_ton": 32, "woman_standing_tone1": 32, "woman_standing_tone2": 32, "woman_standing_tone3": 32, "woman_standing_tone4": 32, "woman_standing_tone5": 32, "woman_stud": 32, "woman_student_dark_skin_ton": 32, "woman_student_light_skin_ton": 32, "woman_student_medium_dark_skin_ton": 32, "woman_student_medium_light_skin_ton": 32, "woman_student_medium_skin_ton": 32, "woman_student_tone1": 32, "woman_student_tone2": 32, "woman_student_tone3": 32, "woman_student_tone4": 32, "woman_student_tone5": 32, "woman_superhero": 32, "woman_superhero_dark_skin_ton": 32, "woman_superhero_light_skin_ton": 32, "woman_superhero_medium_dark_skin_ton": 32, "woman_superhero_medium_light_skin_ton": 32, "woman_superhero_medium_skin_ton": 32, "woman_superhero_tone1": 32, "woman_superhero_tone2": 32, "woman_superhero_tone3": 32, "woman_superhero_tone4": 32, "woman_superhero_tone5": 32, "woman_supervillain": 32, "woman_supervillain_dark_skin_ton": 32, "woman_supervillain_light_skin_ton": 32, "woman_supervillain_medium_dark_skin_ton": 32, "woman_supervillain_medium_light_skin_ton": 32, "woman_supervillain_medium_skin_ton": 32, "woman_supervillain_tone1": 32, "woman_supervillain_tone2": 32, "woman_supervillain_tone3": 32, "woman_supervillain_tone4": 32, "woman_supervillain_tone5": 32, "woman_surf": 32, "woman_surfing_dark_skin_ton": 32, "woman_surfing_light_skin_ton": 32, "woman_surfing_medium_dark_skin_ton": 32, "woman_surfing_medium_light_skin_ton": 32, "woman_surfing_medium_skin_ton": 32, "woman_surfing_tone1": 32, "woman_surfing_tone2": 32, "woman_surfing_tone3": 32, "woman_surfing_tone4": 32, "woman_surfing_tone5": 32, "woman_swim": 32, "woman_swimming_dark_skin_ton": 32, "woman_swimming_light_skin_ton": 32, "woman_swimming_medium_dark_skin_ton": 32, "woman_swimming_medium_light_skin_ton": 32, "woman_swimming_medium_skin_ton": 32, "woman_swimming_tone1": 32, "woman_swimming_tone2": 32, "woman_swimming_tone3": 32, "woman_swimming_tone4": 32, "woman_swimming_tone5": 32, "woman_teach": 32, "woman_teacher_dark_skin_ton": 32, "woman_teacher_light_skin_ton": 32, "woman_teacher_medium_dark_skin_ton": 32, "woman_teacher_medium_light_skin_ton": 32, "woman_teacher_medium_skin_ton": 32, "woman_teacher_tone1": 32, "woman_teacher_tone2": 32, "woman_teacher_tone3": 32, "woman_teacher_tone4": 32, "woman_teacher_tone5": 32, "woman_technologist": 32, "woman_technologist_dark_skin_ton": 32, "woman_technologist_light_skin_ton": 32, "woman_technologist_medium_dark_skin_ton": 32, "woman_technologist_medium_light_skin_ton": 32, "woman_technologist_medium_skin_ton": 32, "woman_technologist_tone1": 32, "woman_technologist_tone2": 32, "woman_technologist_tone3": 32, "woman_technologist_tone4": 32, "woman_technologist_tone5": 32, "woman_tipping_hand": 32, "woman_tipping_hand_dark_skin_ton": 32, "woman_tipping_hand_light_skin_ton": 32, "woman_tipping_hand_medium_dark_skin_ton": 32, "woman_tipping_hand_medium_light_skin_ton": 32, "woman_tipping_hand_medium_skin_ton": 32, "woman_tipping_hand_tone1": 32, "woman_tipping_hand_tone2": 32, "woman_tipping_hand_tone3": 32, "woman_tipping_hand_tone4": 32, "woman_tipping_hand_tone5": 32, "woman_tone1": 32, "woman_tone1_beard": 32, "woman_tone2": 32, "woman_tone2_beard": 32, "woman_tone3": 32, "woman_tone3_beard": 32, "woman_tone4": 32, "woman_tone4_beard": 32, "woman_tone5": 32, "woman_tone5_beard": 32, "woman_vampir": 32, "woman_vampire_dark_skin_ton": 32, "woman_vampire_light_skin_ton": 32, "woman_vampire_medium_dark_skin_ton": 32, "woman_vampire_medium_light_skin_ton": 32, "woman_vampire_medium_skin_ton": 32, "woman_vampire_tone1": 32, "woman_vampire_tone2": 32, "woman_vampire_tone3": 32, "woman_vampire_tone4": 32, "woman_vampire_tone5": 32, "woman_walk": 32, "woman_walking_dark_skin_ton": 32, "woman_walking_light_skin_ton": 32, "woman_walking_medium_dark_skin_ton": 32, "woman_walking_medium_light_skin_ton": 32, "woman_walking_medium_skin_ton": 32, "woman_walking_tone1": 32, "woman_walking_tone2": 32, "woman_walking_tone3": 32, "woman_walking_tone4": 32, "woman_walking_tone5": 32, "woman_wearing_turban": 32, "woman_wearing_turban_dark_skin_ton": 32, "woman_wearing_turban_light_skin_ton": 32, "woman_wearing_turban_medium_dark_skin_ton": 32, "woman_wearing_turban_medium_light_skin_ton": 32, "woman_wearing_turban_medium_skin_ton": 32, "woman_wearing_turban_tone1": 32, "woman_wearing_turban_tone2": 32, "woman_wearing_turban_tone3": 32, "woman_wearing_turban_tone4": 32, "woman_wearing_turban_tone5": 32, "woman_white_hair": 32, "woman_white_haired_dark_skin_ton": 32, "woman_white_haired_light_skin_ton": 32, "woman_white_haired_medium_dark_skin_ton": 32, "woman_white_haired_medium_light_skin_ton": 32, "woman_white_haired_medium_skin_ton": 32, "woman_white_haired_tone1": 32, "woman_white_haired_tone2": 32, "woman_white_haired_tone3": 32, "woman_white_haired_tone4": 32, "woman_white_haired_tone5": 32, "woman_with_headscarf": 32, "woman_with_headscarf_dark_skin_ton": 32, "woman_with_headscarf_light_skin_ton": 32, "woman_with_headscarf_medium_dark_skin_ton": 32, "woman_with_headscarf_medium_light_skin_ton": 32, "woman_with_headscarf_medium_skin_ton": 32, "woman_with_headscarf_tone1": 32, "woman_with_headscarf_tone2": 32, "woman_with_headscarf_tone3": 32, "woman_with_headscarf_tone4": 32, "woman_with_headscarf_tone5": 32, "woman_with_probing_can": 32, "woman_with_probing_cane_dark_skin_ton": 32, "woman_with_probing_cane_light_skin_ton": 32, "woman_with_probing_cane_medium_dark_skin_ton": 32, "woman_with_probing_cane_medium_light_skin_ton": 32, "woman_with_probing_cane_medium_skin_ton": 32, "woman_with_probing_cane_tone1": 32, "woman_with_probing_cane_tone2": 32, "woman_with_probing_cane_tone3": 32, "woman_with_probing_cane_tone4": 32, "woman_with_probing_cane_tone5": 32, "woman_with_turban": 32, "woman_with_veil": 32, "woman_with_veil_dark_skin_ton": 32, "woman_with_veil_light_skin_ton": 32, "woman_with_veil_medium_dark_skin_ton": 32, "woman_with_veil_medium_light_skin_ton": 32, "woman_with_veil_medium_skin_ton": 32, "woman_with_veil_tone1": 32, "woman_with_veil_tone2": 32, "woman_with_veil_tone3": 32, "woman_with_veil_tone4": 32, "woman_with_veil_tone5": 32, "woman_zombi": 32, "womans_cloth": 32, "womans_flat_sho": 32, "womans_hat": 32, "women_holding_hands_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_light_skin_ton": 32, "women_holding_hands_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_medium_dark_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_light_skin_tone_medium_skin_ton": 32, "women_holding_hands_medium_skin_ton": 32, "women_holding_hands_medium_skin_tone_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_light_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_dark_skin_ton": 32, "women_holding_hands_medium_skin_tone_medium_light_skin_ton": 32, "women_holding_hands_tone1": 32, "women_holding_hands_tone1_tone2": 32, "women_holding_hands_tone1_tone3": 32, "women_holding_hands_tone1_tone4": 32, "women_holding_hands_tone1_tone5": 32, "women_holding_hands_tone2": 32, "women_holding_hands_tone2_tone1": 32, "women_holding_hands_tone2_tone3": 32, "women_holding_hands_tone2_tone4": 32, "women_holding_hands_tone2_tone5": 32, "women_holding_hands_tone3": 32, "women_holding_hands_tone3_tone1": 32, "women_holding_hands_tone3_tone2": 32, "women_holding_hands_tone3_tone4": 32, "women_holding_hands_tone3_tone5": 32, "women_holding_hands_tone4": 32, "women_holding_hands_tone4_tone1": 32, "women_holding_hands_tone4_tone2": 32, "women_holding_hands_tone4_tone3": 32, "women_holding_hands_tone4_tone5": 32, "women_holding_hands_tone5": 32, "women_holding_hands_tone5_tone1": 32, "women_holding_hands_tone5_tone2": 32, "women_holding_hands_tone5_tone3": 32, "women_holding_hands_tone5_tone4": 32, "women_with_bunny_ears_parti": 32, "women_wrestl": 32, "women": 32, "wood": 32, "woozy_fac": 32, "world_map": 32, "worm": [32, 460], "worri": [32, 428], "worship_symbol": 32, "wrench": 32, "wrestler": 32, "wrestlers_tone1": 32, "wrestlers_tone2": 32, "wrestlers_tone3": 32, "wrestlers_tone4": 32, "wrestlers_tone5": 32, "wrestl": 32, "wrestling_tone1": 32, "wrestling_tone2": 32, "wrestling_tone3": 32, "wrestling_tone4": 32, "wrestling_tone5": 32, "writing_hand": 32, "writing_hand_tone1": 32, "writing_hand_tone2": 32, "writing_hand_tone3": 32, "writing_hand_tone4": 32, "writing_hand_tone5": 32, "w": [32, 40, 188, 192, 195, 217, 221, 227, 237, 240, 247, 268, 282, 341, 342, 361, 449, 584, 645, 853, 867, 913, 914, 948, 1003, 1043, 1056, 1101, 1103, 1131, 1134, 1139], "xk": 32, "yarn": 32, "yawning_fac": 32, "yellow_circl": 32, "yellow_heart": 32, "yellow_squar": 32, "yemen": 32, "yen": [32, 36], "yin_yang": 32, "yo_yo": 32, "yt": 32, "yum": 32, "za": [32, 292, 380], "zambia": 32, "zany_fac": 32, "zap": 32, "zebra": 32, "zimbabw": 32, "zipper_mouth": 32, "zipper_mouth_fac": 32, "zm": 32, "zombi": 32, "zw": 32, "zzz": 32, "sheet": [33, 65, 153, 192, 204, 344, 346, 347, 693, 868, 912, 913], "layout": [33, 148, 169, 242, 425, 438, 1139], "emoji": 33, "sphinxemoji": 33, "mmlalia": 33, "mathml": 33, "alias": [33, 381, 869], "entiti": [33, 152, 389, 403, 430, 447, 467, 475, 582, 777, 966, 1119], "isoamsa": 33, "mathemat": [33, 244, 1055], "arrow": [33, 35, 36, 38, 73, 74, 868, 998], "isoamsr": 33, "relat": [33, 69, 140, 173, 184, 188, 209, 213, 268, 281, 393, 402, 409, 413, 415, 419, 422, 426, 435, 439, 444, 445, 452, 567, 667, 705, 722, 746, 758, 759, 760, 761, 776, 785, 833, 911, 966, 976, 1106, 1139, 1140], "isonum": 33, "binari": [33, 42, 50, 54, 55, 58, 76, 87, 88, 148, 152, 158, 212, 213, 221, 225, 227, 228, 230, 235, 237, 240, 250, 348, 392, 425, 437, 605, 682, 745, 786, 800, 808, 853, 982, 985, 998, 1010, 1037, 1042, 1119], "sphinxish": 33, "send": [33, 101, 114, 132, 134, 149, 152, 163, 188, 189, 191, 192, 193, 194, 227, 228, 247, 249, 250, 268, 289, 340, 345, 489, 832, 848, 864, 907, 908, 912, 921, 931, 979, 981, 1102, 1119], "v4l": [33, 132], "ssh": [33, 97, 101, 102, 114, 132, 134, 149, 159, 163, 192, 224, 240, 247, 250, 258, 265, 267, 272, 282, 286, 288, 308, 314, 326, 339, 340, 346, 347, 353, 354, 358, 524, 525, 761, 834, 835, 836, 843, 890, 899, 904, 905, 916, 917, 942, 992, 993, 994, 1163, 1165, 1170], "taken": [34, 35, 36, 38, 40, 73, 74, 118, 151, 155, 156, 163, 212, 427, 459, 524, 533, 580, 735, 811, 833, 843, 868, 982, 1033, 1119], "definit": [34, 35, 36, 38, 107, 122, 132, 148, 152, 154, 155, 157, 159, 172, 181, 184, 185, 190, 204, 211, 213, 277, 279, 295, 311, 340, 361, 362, 363, 393, 402, 405, 408, 409, 415, 419, 422, 426, 432, 433, 434, 435, 437, 438, 439, 444, 445, 452, 454, 458, 466, 467, 489, 511, 551, 569, 570, 571, 576, 577, 583, 584, 586, 595, 598, 599, 621, 647, 656, 667, 677, 693, 705, 707, 720, 724, 728, 758, 760, 761, 786, 808, 869, 913, 914, 982, 1001, 1008, 1014, 1019, 1030, 1034, 1047, 1048, 1051, 1115, 1129, 1146, 1156, 1159], "includ": [34, 35, 36, 38, 44, 107, 144, 154, 159, 163, 167, 169, 180, 184, 191, 203, 204, 213, 214, 221, 225, 227, 228, 230, 237, 240, 244, 265, 279, 286, 295, 307, 311, 337, 348, 362, 363, 365, 369, 371, 373, 404, 405, 420, 425, 428, 430, 434, 441, 450, 451, 453, 454, 455, 457, 462, 465, 466, 467, 468, 469, 470, 472, 474, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 511, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 551, 557, 560, 567, 568, 569, 571, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 592, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 645, 649, 654, 655, 656, 657, 658, 659, 660, 661, 664, 665, 666, 668, 670, 672, 675, 676, 677, 678, 680, 682, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 707, 708, 709, 710, 712, 714, 715, 717, 719, 723, 724, 725, 726, 727, 728, 729, 732, 734, 737, 739, 740, 741, 745, 747, 749, 751, 755, 756, 757, 759, 761, 767, 772, 777, 779, 786, 788, 790, 792, 794, 796, 800, 802, 804, 813, 818, 822, 825, 828, 845, 865, 868, 874, 901, 906, 908, 912, 928, 930, 931, 932, 934, 937, 938, 939, 940, 941, 944, 946, 949, 957, 961, 963, 966, 972, 975, 979, 982, 985, 994, 997, 998, 1000, 1002, 1030, 1031, 1056, 1057, 1129, 1135, 1141, 1146, 1148, 1151, 1161], "substitut": [34, 35, 36, 38, 106, 132, 204, 240, 286, 337, 431, 447, 451, 682, 925, 1118], "angzarr": 34, "0237c": 34, "angl": [34, 36, 38, 1162], "WITH": [34, 35, 38, 931], "downward": [34, 35, 36, 38, 459], "zigzag": 34, "cirmid": 34, "02aef": 34, "vertic": [34, 35, 36, 38, 382], "circl": [34, 35, 38, 214, 543, 848], "abov": [34, 35, 38, 78, 114, 119, 152, 154, 155, 156, 157, 159, 163, 167, 171, 190, 193, 204, 213, 221, 227, 237, 240, 244, 303, 351, 398, 421, 431, 441, 467, 487, 489, 511, 514, 515, 524, 525, 550, 560, 577, 578, 582, 583, 602, 646, 708, 769, 802, 808, 818, 835, 836, 852, 880, 912, 913, 914, 938, 942, 968, 975, 998, 1006, 1037, 1051, 1122, 1128, 1139, 1146], "cudarrl": 34, "02938": 34, "side": [34, 172, 194, 268, 277, 377, 386, 427, 489, 521, 560, 584, 586, 587, 737, 788, 792, 847, 868, 916, 1006, 1039, 1085, 1111, 1113, 1122], "arc": 34, "clockwis": [34, 38], "cudarrr": 34, "02935": 34, "rightward": [34, 35, 36, 38], "THEN": 34, "curv": [34, 35], "cularr": 34, "021b6": [34, 38], "anticlockwis": [34, 38], "semicircl": [34, 38], "cularrp": 34, "0293d": 34, "plu": [34, 35, 36, 38, 65, 153, 159, 221, 227, 237, 240, 253, 398, 525, 551, 583, 585, 587, 808, 934], "curarr": 34, "021b7": [34, 38], "curarrm": 34, "0293c": 34, "minu": [34, 35, 36, 38, 232, 585, 728], "darr": [34, 36], "021a1": 34, "head": [34, 38, 40, 61, 112, 153, 155, 158, 192, 194, 204, 258, 267, 276, 288, 289, 737, 761, 838, 894, 895, 898, 901, 904, 929, 930, 997, 1063], "021d3": [34, 38], "doubl": [34, 35, 36, 38, 120, 123, 214, 230, 234, 240, 348, 363, 381, 382, 383, 386, 405, 425, 434, 466, 472, 477, 479, 486, 495, 497, 498, 503, 504, 505, 506, 507, 508, 511, 519, 521, 523, 524, 525, 536, 567, 569, 575, 577, 578, 582, 586, 618, 645, 669, 672, 675, 678, 682, 687, 688, 689, 690, 703, 722, 723, 725, 728, 737, 745, 747, 749, 750, 751, 752, 808, 868, 912, 1006, 1026, 1050, 1127], "darr2": 34, "021ca": [34, 38], "pair": [34, 38, 101, 102, 119, 120, 167, 209, 219, 222, 225, 230, 234, 235, 240, 247, 249, 261, 262, 285, 291, 319, 468, 472, 475, 525, 543, 621, 622, 623, 626, 668, 714, 715, 719, 761, 772, 777, 904, 916, 917, 918, 920, 1000, 1010, 1054, 1106, 1117, 1134], "ddarr": 34, "ddotrahd": 34, "02911": 34, "dot": [34, 35, 36, 38, 156, 441, 456, 461, 890, 984], "stem": [34, 777], "dfisht": 34, "0297f": 34, "down": [34, 35, 38, 151, 152, 155, 180, 257, 295, 311, 346, 367, 408, 453, 454, 465, 472, 514, 521, 522, 523, 524, 543, 585, 618, 643, 665, 682, 707, 724, 761, 776, 777, 808, 854, 900, 907, 914, 982, 985, 1146, 1151], "tail": [34, 38, 153, 192, 194, 204, 258, 267, 288, 289, 737, 761, 796, 838, 895, 898, 901, 904, 1131], "dhar": 34, "02965": 34, "harpoon": [34, 38], "barb": [34, 38], "left": [34, 35, 36, 38, 63, 84, 110, 111, 119, 151, 152, 154, 172, 203, 214, 240, 286, 384, 385, 392, 398, 470, 514, 521, 567, 570, 574, 582, 583, 640, 647, 673, 850, 851, 868, 912, 921, 940, 982, 1010, 1014, 1025, 1026, 1037, 1051, 1105, 1111, 1129], "besid": [34, 35, 38, 167], "dharl": 34, "021c3": [34, 38], "leftward": [34, 35, 36, 38], "dharr": 34, "021c2": [34, 38], "dlarr": 34, "02199": [34, 38], "south": [34, 38], "west": [34, 38, 161], "drarr": 34, "02198": [34, 38], "east": [34, 38], "duarr": 34, "021f5": [34, 38], "OF": [34, 35, 38, 155, 715], "upward": [34, 36, 38], "duhar": 34, "0296f": [34, 38], "dzigrarr": 34, "027ff": 34, "long": [34, 35, 38, 53, 127, 151, 152, 153, 154, 155, 159, 162, 180, 184, 192, 204, 221, 225, 227, 230, 237, 240, 248, 276, 340, 358, 369, 379, 381, 382, 386, 390, 391, 418, 425, 427, 436, 440, 442, 443, 462, 467, 524, 569, 570, 575, 580, 645, 715, 724, 734, 745, 747, 749, 751, 759, 767, 779, 788, 790, 806, 808, 813, 818, 822, 847, 868, 890, 914, 925, 931, 934, 964, 972, 1001, 1008, 1048, 1058, 1106, 1113, 1124, 1131, 1159], "squiggl": 34, "erarr": 34, "02971": 34, "equal": [34, 35, 36, 38, 154, 176, 188, 204, 211, 214, 240, 244, 276, 277, 286, 298, 314, 363, 369, 385, 392, 397, 408, 433, 436, 513, 519, 526, 530, 565, 610, 629, 633, 660, 662, 728, 761, 843, 847, 901, 925, 964, 968, 969, 1037, 1091, 1146], "sign": [34, 35, 36, 38, 155, 162, 167, 230, 379, 381, 389, 433, 447, 471, 645, 708, 781, 1037, 1051, 1111, 1156, 1157], "harr": 34, "021d4": [34, 38], "02194": [34, 38], "harrcir": 34, "02948": 34, "small": [34, 38, 43, 106, 151, 153, 154, 184, 204, 208, 264, 303, 313, 361, 433, 437, 470, 522, 567, 679, 724, 905, 906, 912, 944, 976, 1029, 1052, 1118, 1146], "harrw": 34, "021ad": [34, 38], "hoarr": 34, "021ff": 34, "imof": 34, "022b7": 34, "imag": [34, 35, 38, 146, 148, 151, 152, 153, 154, 162, 175, 237, 240, 244, 262, 340, 346, 443, 449, 456, 575, 786, 808, 905, 1108, 1113], "laarr": 34, "021da": [34, 38], "tripl": [34, 35, 38, 59, 62], "larr": [34, 36], "0219e": [34, 38], "larr2": 34, "021c7": [34, 38], "larrbf": 34, "0291f": 34, "bar": [34, 35, 36, 38, 158, 179, 199, 222, 235, 240, 249, 252, 282, 285, 286, 291, 304, 308, 314, 349, 449, 514, 729, 1004, 1046, 1106], "TO": [34, 35, 38, 1061], "black": [34, 38, 157, 208, 216, 228, 231, 621, 994], "larrf": 34, "0291d": 34, "larrhk": 34, "021a9": [34, 38], "larrlp": 34, "021ab": [34, 38], "larrpl": 34, "02939": 34, "larrsim": 34, "02973": 34, "tild": [34, 35, 38], "larrtl": 34, "021a2": [34, 38], "latail": 34, "0291b": 34, "02919": 34, "lbarr": 34, "0290e": 34, "0290c": 34, "ldca": 34, "02936": 34, "ldrdhar": 34, "02967": 34, "ldrushar": 34, "0294b": 34, "ldsh": 34, "021b2": 34, "tip": [34, 38, 209, 219, 222, 225, 249, 261, 285, 291, 1106], "lfisht": 34, "0297c": 34, "lhar": 34, "02962": 34, "lhard": 34, "021bd": [34, 38], "lharu": 34, "021bc": [34, 38], "lharul": 34, "0296a": 34, "llarr": 34, "llhard": 34, "0296b": 34, "below": [34, 35, 38, 122, 130, 148, 152, 153, 154, 157, 159, 163, 172, 184, 193, 211, 244, 257, 303, 372, 374, 441, 448, 459, 492, 506, 514, 515, 521, 524, 659, 661, 675, 687, 707, 708, 724, 728, 737, 739, 756, 757, 759, 781, 802, 843, 847, 851, 868, 905, 914, 935, 979, 982, 1146], "loarr": 34, "021fd": 34, "lrarr": 34, "021c6": [34, 38], "lrarr2": 34, "lrhar": 34, "021cb": [34, 38], "lrhar2": 34, "lrhard": 34, "0296d": 34, "lsh": [34, 38], "021b0": [34, 38], "lurdshar": 34, "0294a": 34, "luruhar": 34, "02966": 34, "02905": 34, "021a6": [34, 38], "midcir": 34, "02af0": 34, "mumap": 34, "022b8": [34, 38], "multimap": [34, 38, 277, 543, 620, 629, 633, 662, 761], "nearhk": 34, "02924": 34, "north": [34, 38], "nearr": 34, "021d7": 34, "02197": [34, 38], "nesear": 34, "02928": [34, 38], "AND": [34, 35, 38, 369, 385, 408, 571, 896, 1025], "nharr": 34, "021ce": [34, 38], "stroke": [34, 38], "021ae": [34, 38], "nlarr": 34, "021cd": [34, 38], "0219a": [34, 38], "nrarr": 34, "021cf": [34, 38], "0219b": [34, 38], "nrarrc": 34, "02933": 34, "00338": [34, 38], "directli": [34, 40, 119, 148, 167, 253, 278, 326, 465, 582, 651, 779, 792, 804, 811, 822, 914, 924, 928, 982, 1005, 1025, 1033, 1096, 1098, 1125], "slash": [34, 38, 892, 976], "nrarrw": 34, "0219d": [34, 38], "nvharr": 34, "02904": 34, "nvlarr": 34, "02902": 34, "nvrarr": 34, "02903": 34, "nwarhk": 34, "02923": 34, "nwarr": 34, "021d6": 34, "02196": [34, 38], "nwnear": 34, "02927": 34, "olarr": 34, "021ba": [34, 38], "orarr": 34, "021bb": [34, 38], "origof": 34, "022b6": 34, "origin": [34, 35, 38, 61, 63, 112, 134, 149, 155, 157, 162, 167, 173, 185, 217, 221, 227, 230, 232, 237, 240, 265, 276, 281, 285, 286, 288, 289, 291, 295, 303, 307, 311, 313, 317, 319, 407, 423, 467, 470, 521, 568, 576, 577, 578, 606, 657, 658, 660, 661, 719, 723, 726, 728, 739, 781, 808, 809, 832, 835, 836, 851, 865, 1003, 1108, 1119, 1141], "raarr": 34, "021db": [34, 38], "rarr": [34, 36], "021a0": [34, 38], "rarr2": 34, "021c9": [34, 38], "rarrap": 34, "02975": 34, "almost": [34, 35, 38, 59, 62, 154, 167, 176, 213, 386, 434, 436, 457, 572, 637, 665, 713, 729, 976], "rarrbf": 34, "02920": 34, "rarrc": 34, "rarrf": 34, "0291e": 34, "rarrhk": 34, "021aa": [34, 38], "rarrlp": 34, "021ac": [34, 38], "rarrpl": 34, "02945": 34, "rarrsim": 34, "02974": 34, "rarrtl": 34, "02916": 34, "021a3": [34, 38], "rarrw": 34, "ratail": 34, "0291c": 34, "0291a": 34, "rbarr": 34, "02910": [34, 38], "0290f": [34, 38], "0290d": [34, 38], "rdca": 34, "02937": 34, "rdldhar": 34, "02969": 34, "rdsh": 34, "021b3": 34, "rfisht": 34, "0297d": 34, "rhar": 34, "02964": 34, "rhard": 34, "021c1": [34, 38], "rharu": 34, "021c0": [34, 38], "rharul": 34, "0296c": 34, "rlarr": 34, "021c4": [34, 38], "rlarr2": 34, "rlhar": 34, "021cc": [34, 38], "rlhar2": 34, "roarr": 34, "021fe": 34, "rrarr": 34, "rsh": [34, 38, 583, 915], "021b1": [34, 38], "ruluhar": 34, "02968": 34, "searhk": 34, "02925": [34, 38], "searr": 34, "021d8": 34, "seswar": 34, "02929": [34, 38], "simrarr": 34, "02972": 34, "slarr": 34, "02190": [34, 36, 38], "srarr": 34, "02192": [34, 36, 38], "swarhk": 34, "02926": [34, 38], "swarr": 34, "021d9": 34, "swnwar": 34, "0292a": 34, "uarr": [34, 36], "0219f": 34, "021d1": [34, 38], "uarr2": 34, "021c8": [34, 38], "uarrocir": 34, "02949": 34, "udarr": 34, "021c5": [34, 38], "udhar": 34, "0296e": [34, 38], "ufisht": 34, "0297e": 34, "uhar": 34, "02963": 34, "uharl": 34, "021bf": [34, 38], "uharr": 34, "021be": [34, 38], "uuarr": 34, "varr": 34, "021d5": [34, 38], "02195": [34, 38], "xharr": 34, "027fa": [34, 38], "027f7": [34, 38], "xlarr": 34, "027f8": [34, 38], "027f5": [34, 38], "xmap": 34, "027fc": [34, 38], "xrarr": 34, "027f9": [34, 38], "027f6": [34, 38], "zigrarr": 34, "021dd": 34, "ap": [35, 938], "02a70": 35, "approxim": [35, 38, 154, 250], "OR": [35, 38, 227, 369, 385, 408, 425, 896, 1025], "0224a": [35, 38], "apid": 35, "0224b": 35, "asymp": 35, "02248": [35, 38], "barv": 35, "02ae7": 35, "tack": [35, 38], "overbar": 35, "bcong": 35, "0224c": [35, 38], "bepsi": 35, "003f6": [35, 38], "greek": [35, 38], "revers": [35, 36, 38, 197, 224, 230, 247, 265, 272, 277, 286, 292, 314, 366, 543, 550, 551, 610, 614, 629, 633, 662, 707, 761, 763, 802, 841, 905, 966, 1053, 1086], "lunat": [35, 38], "epsilon": [35, 38], "bowti": 35, "022c8": 35, "bsim": 35, "0223d": [35, 38], "bsime": 35, "022cd": [35, 38], "bsolhsub": 35, "0005c": [35, 36], "02282": [35, 38], "solidu": [35, 36], "subset": [35, 38, 240, 985, 998, 1055], "bump": 35, "0224e": [35, 38], "geometr": [35, 38, 244], "equival": [35, 38, 78, 92, 106, 109, 240, 394, 398, 413, 418, 579, 656, 832, 834, 869, 901, 934, 1014, 1036, 1046, 1056], "02aae": 35, "bumpi": 35, "0224f": [35, 38], "between": [35, 38, 69, 89, 103, 127, 152, 153, 154, 156, 162, 163, 173, 188, 200, 213, 221, 224, 227, 232, 234, 237, 240, 244, 247, 262, 265, 272, 286, 291, 304, 314, 317, 320, 326, 336, 370, 373, 386, 408, 413, 420, 433, 438, 447, 458, 479, 489, 511, 519, 583, 600, 659, 715, 725, 729, 740, 762, 763, 767, 813, 839, 840, 845, 905, 912, 942, 952, 966, 967, 968, 969, 976, 980, 1014, 1025, 1035, 1037, 1048, 1112, 1164], "cire": 35, "02257": [35, 38], "colon": [35, 36, 38, 1084], "02237": [35, 38], "proport": [35, 38, 153], "02a74": 35, "02254": [35, 38], "congdot": 35, "02a6d": 35, "congruent": [35, 38], "csub": 35, "02acf": 35, "close": [35, 54, 132, 157, 163, 172, 184, 202, 211, 212, 225, 232, 256, 257, 259, 282, 286, 314, 316, 317, 413, 447, 452, 525, 543, 693, 721, 730, 738, 760, 761, 851, 912, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 944, 946, 949, 975, 979, 1003, 1115, 1172], "csube": 35, "02ad1": 35, "csup": 35, "02ad0": 35, "superset": [35, 38, 1055, 1158], "csupe": 35, "02ad2": 35, "cuepr": 35, "022de": [35, 38], "cuesc": 35, "022df": [35, 38], "succe": [35, 38, 786, 887, 916, 1005], "cupr": 35, "0227c": [35, 38], "dashv": 35, "02ae4": [35, 38], "turnstil": [35, 38], "022a3": [35, 38], "easter": [35, 204], "02a6e": 35, "asterisk": [35, 36, 38], "ecir": 35, "02256": [35, 38], "IN": [35, 38, 156], "ecolon": 35, "02255": [35, 38], "eddot": 35, "02a77": [35, 38], "edot": 35, "02251": [35, 38], "efdot": 35, "02252": [35, 38], "THE": [35, 38, 931], "02a9a": 35, "greater": [35, 36, 38, 106, 114, 279, 385, 513, 519, 527, 530, 565, 707, 761, 794, 1037], "than": [35, 36, 38, 43, 65, 68, 106, 112, 114, 122, 131, 132, 148, 152, 153, 157, 159, 162, 163, 167, 184, 188, 191, 195, 204, 211, 214, 221, 227, 232, 234, 237, 240, 244, 271, 274, 279, 303, 306, 326, 385, 386, 405, 407, 436, 437, 438, 449, 450, 452, 458, 465, 513, 521, 527, 530, 565, 569, 581, 584, 586, 587, 652, 665, 676, 702, 715, 739, 761, 764, 779, 794, 800, 804, 808, 868, 893, 897, 905, 913, 923, 924, 931, 934, 951, 979, 983, 998, 999, 1014, 1019, 1036, 1037, 1081, 1085, 1115, 1122, 1125, 1141, 1159], "02a96": [35, 38], "slant": [35, 38], "egsdot": 35, "02a98": 35, "el": [35, 200, 211, 247], "02a99": 35, "less": [35, 36, 38, 59, 62, 78, 148, 152, 153, 154, 159, 163, 213, 227, 244, 258, 267, 268, 274, 288, 289, 363, 385, 386, 390, 433, 436, 467, 519, 623, 643, 669, 715, 717, 739, 761, 779, 781, 808, 838, 852, 868, 895, 898, 899, 901, 904, 934, 1019, 1037, 1056, 1134, 1135, 1148, 1159, 1165], "02a95": [35, 38], "elsdot": 35, "02a97": 35, "equest": 35, "0225f": [35, 38], "equivdd": 35, "02a78": 35, "erdot": 35, "02253": [35, 38], "esdot": 35, "02250": [35, 38], "limit": [35, 38, 63, 152, 153, 169, 191, 221, 227, 237, 240, 286, 386, 428, 621, 665, 808, 845, 950, 969, 1011, 1012, 1037, 1110, 1132], "esim": 35, "02a73": 35, "02242": [35, 38], "fork": [35, 43, 131, 154, 169, 173, 761, 767, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904, 937, 950, 958, 976, 1172], "022d4": [35, 38], "pitchfork": [35, 38], "forkv": 35, "02ad9": 35, "02322": 35, "gap": 35, "02a86": [35, 38], "02267": [35, 38], "gel": 35, "02a8c": [35, 38], "022db": [35, 38], "02a7e": [35, 38], "gescc": 35, "02aa9": 35, "gesdot": 35, "02a80": 35, "gesdoto": 35, "02a82": 35, "gesdotol": 35, "02a84": 35, "gesl": 35, "0fe00": [35, 38], "02a94": 35, "022d9": [35, 38], "02277": [35, 38], "gla": 35, "02aa5": 35, "gle": 35, "02a92": 35, "glj": 35, "02aa4": 35, "overlap": [35, 240, 244, 286, 759, 792, 1017], "gsdot": 35, "022d7": [35, 38], "gsim": 35, "02273": [35, 38], "gsime": 35, "02a8e": 35, "similar": [35, 59, 62, 120, 152, 154, 184, 188, 192, 194, 225, 238, 252, 388, 395, 466, 493, 522, 523, 554, 566, 575, 693, 728, 729, 756, 757, 779, 794, 808, 852, 998, 1000, 1106], "gsiml": 35, "02a90": 35, "0226b": [35, 38], "gtcc": 35, "02aa7": 35, "gtcir": 35, "02a7a": 35, "gtdot": 35, "gtquest": 35, "02a7c": 35, "mark": [35, 36, 38, 211, 252, 341, 342, 382, 404, 704, 712, 824, 1014, 1016, 1134], "gtrarr": 35, "02978": 35, "homtht": 35, "0223b": 35, "homothet": 35, "lap": 35, "02a85": [35, 38], "lat": 35, "02aab": 35, "larger": [35, 68, 78, 184, 191, 214, 231, 244, 294, 310, 434, 437, 449, 487, 567, 584, 586, 779, 828, 850, 912, 914, 979, 999, 1012, 1161], "late": [35, 152, 154, 277, 279, 728, 729, 914, 970, 1014, 1031, 1048, 1162], "02aad": 35, "ldot": 35, "022d6": [35, 38], "le": [35, 487], "02266": [35, 38], "02a8b": [35, 38], "022da": [35, 38], "02a7d": [35, 38], "lescc": 35, "02aa8": 35, "lesdot": 35, "02a7f": 35, "lesdoto": 35, "02a81": 35, "lesdotor": 35, "02a83": 35, "lesg": 35, "02a93": 35, "lg": [35, 292, 308, 1119], "02276": [35, 38], "lge": 35, "02a91": 35, "ll": [35, 38, 59, 62, 114, 151, 152, 153, 155, 157, 159, 162, 167, 168, 180, 182, 192, 194, 208, 237, 240, 268, 271, 274, 508, 522, 584, 586, 587, 808, 834, 905, 914, 925, 940, 987, 990, 996, 1029, 1122], "022d8": 35, "lsim": 35, "02272": [35, 38], "lsime": 35, "02a8d": 35, "lsimg": 35, "02a8f": 35, "0226a": [35, 38], "ltcc": 35, "02aa6": 35, "ltcir": 35, "02a79": 35, "ltdot": 35, "ltlarr": 35, "02976": 35, "ltquest": 35, "02a7b": 35, "ltrie": 35, "022b4": [35, 38], "normal": [35, 38, 88, 140, 152, 154, 159, 167, 170, 175, 184, 244, 425, 452, 457, 462, 581, 583, 824, 840, 845, 966, 980, 1033, 1112, 1125, 1139, 1151], "mcomma": 35, "02a29": 35, "comma": [35, 36, 190, 203, 224, 304, 1114], "mddot": 35, "0223a": 35, "mid": 35, "02223": [35, 38], "mlcp": 35, "02adb": 35, "transvers": 35, "intersect": [35, 38, 208, 232, 304, 1055], "model": [35, 112, 255, 270, 276, 279, 424, 1037, 1109, 1112, 1131], "022a7": 35, "mstpo": 35, "0223e": 35, "invert": [35, 36, 63, 184, 948], "lazi": [35, 221, 227, 237, 240, 377, 724], "02abb": 35, "0227a": [35, 38], "prap": 35, "02ab7": [35, 38], "prcue": 35, "pre": [35, 154, 184, 213, 387, 569, 571, 575, 621, 622, 623, 673, 714, 715, 868, 1030, 1045, 1118], "02ab3": 35, "02aaf": [35, 38], "singl": [35, 36, 38, 44, 59, 62, 63, 84, 106, 110, 111, 114, 119, 122, 132, 134, 152, 154, 172, 211, 212, 221, 225, 227, 233, 234, 237, 240, 244, 268, 363, 369, 381, 382, 394, 440, 443, 447, 449, 452, 478, 491, 576, 630, 704, 715, 723, 725, 736, 767, 777, 779, 841, 843, 844, 845, 868, 873, 874, 875, 877, 893, 905, 913, 917, 953, 964, 966, 967, 976, 979, 983, 985, 988, 994, 998, 999, 1000, 1013, 1050, 1051, 1058, 1073, 1079, 1112, 1119, 1127, 1130, 1134, 1139, 1140, 1147], "prsim": 35, "0227e": [35, 38], "prurel": 35, "022b0": 35, "ratio": [35, 244], "02236": 35, "rtrie": 35, "022b5": [35, 38], "AS": [35, 38, 931], "rtriltri": 35, "029ce": 35, "triangl": [35, 38, 543], "samalg": 35, "02210": [35, 38], "coproduct": [35, 38], "02abc": 35, "0227b": [35, 38], "scap": 35, "02ab8": [35, 38], "sccue": 35, "0227d": [35, 38], "sce": 35, "02ab4": 35, "02ab0": [35, 38], "scsim": 35, "0227f": [35, 38], "sdote": 35, "02a66": 35, "sfrown": 35, "simg": 35, "02a9e": 35, "02aa0": 35, "siml": 35, "02a9d": 35, "02a9f": 35, "smid": 35, "02323": 35, "smt": 35, "02aaa": 35, "smaller": [35, 230, 244, 363, 425, 434, 449, 1000], "smte": 35, "02aac": 35, "spar": [35, 270, 449], "02225": [35, 38], "parallel": [35, 38, 59, 62, 72, 73, 74, 78, 91, 158, 181, 184, 188, 190, 225, 280, 281, 302, 457, 737, 761, 798, 800, 808, 811, 844, 852, 953, 964, 967, 1014, 1016, 1017, 1101, 1106, 1163, 1164, 1171, 1175], "sqsub": 35, "0228f": [35, 38], "squar": [35, 36, 38, 63, 172, 185, 195, 211, 217, 224, 227, 232, 234, 240, 244, 253, 265, 279, 286, 304, 308, 314, 475, 586, 1008, 1057, 1060, 1127], "sqsube": 35, "02291": [35, 38], "sqsup": 35, "02290": [35, 38], "sqsupe": 35, "02292": [35, 38], "ssmile": 35, "sub": [35, 228, 240, 286, 470, 487, 567, 1004, 1043, 1052, 1058, 1148], "022d0": [35, 38], "sube": 35, "02ac5": [35, 38], "subedot": 35, "02ac3": 35, "submult": 35, "02ac1": 35, "subplu": 35, "02abf": 35, "subrarr": 35, "02979": 35, "subsim": 35, "02ac7": 35, "subsub": 35, "02ad5": 35, "subsup": 35, "02ad3": 35, "sup": [35, 938], "022d1": [35, 38], "supdsub": 35, "02ad8": 35, "supe": 35, "02ac6": [35, 38], "supedot": 35, "02ac4": 35, "suphsol": 35, "02283": [35, 38], "0002f": [35, 36], "suphsub": 35, "02ad7": 35, "suplarr": 35, "0297b": 35, "supmult": 35, "02ac2": 35, "supplu": 35, "02ac0": 35, "supsim": 35, "02ac8": 35, "supsub": 35, "02ad4": 35, "supsup": 35, "02ad6": 35, "thkap": 35, "thksim": 35, "0223c": [35, 38], "topfork": 35, "02ada": 35, "tee": [35, 852], "trie": 35, "0225c": [35, 38], "delta": [35, 38, 112, 167, 217], "twixt": 35, "0226c": [35, 38], "vbar": 35, "02aeb": 35, "02ae8": 35, "underbar": 35, "vbarv": 35, "02ae9": 35, "vdash": 35, "022ab": 35, "022a9": 35, "022a8": [35, 38], "022a2": [35, 38], "vdashl": 35, "02ae6": 35, "veebar": 35, "022bb": 35, "xor": [35, 1025], "vltri": 35, "022b2": [35, 38], "vprop": 35, "0221d": [35, 38], "vrtri": 35, "022b3": [35, 38], "vvdash": 35, "022aa": 35, "\u00bd": 36, "\u00bc": 36, "\u215b": 36, "\u00be": 36, "\u215c": 36, "\u215d": 36, "\u215e": 36, "_": [36, 39, 63, 172, 173, 208, 221, 224, 225, 227, 234, 237, 240, 247, 250, 262, 286, 308, 332, 380, 449, 579, 702, 798, 868, 970, 996, 1014, 1016], "\u00b5": 36, "\u03c9": 36, "\u00aa": 36, "\u00ba": 36, "\u00b9": 36, "\u00b2": 36, "\u00b3": 36, "amp": [36, 224], "00026": 36, "ampersand": [36, 678], "apo": 36, "00027": 36, "apostroph": 36, "ast": [36, 487], "0002a": 36, "brvbar": 36, "000a6": 36, "broken": [36, 423, 424, 693, 800, 813, 1018, 1084, 1114], "bsol": 36, "cent": 36, "000a2": 36, "0003a": 36, "0002c": 36, "commat": 36, "00040": 36, "commerci": [36, 159, 786, 847], "AT": 36, "000a9": 36, "curren": 36, "000a4": 36, "currenc": [36, 270, 449], "02193": [36, 38], "deg": 36, "000b0": 36, "degre": [36, 466, 477, 508, 619, 914, 1031], "000f7": [36, 38], "00024": 36, "0003d": 36, "excl": 36, "00021": 36, "frac12": 36, "000bd": 36, "vulgar": 36, "fraction": [36, 244, 326], "ONE": [36, 666], "frac14": 36, "000bc": 36, "quarter": 36, "frac18": 36, "0215b": 36, "eighth": 36, "frac34": 36, "000be": 36, "frac38": 36, "0215c": 36, "frac58": 36, "0215d": 36, "frac78": 36, "0215e": 36, "0003e": 36, "horbar": 36, "02015": 36, "horizont": [36, 382], "hyphen": 36, "02010": 36, "iexcl": 36, "000a1": 36, "iquest": 36, "000bf": 36, "laquo": 36, "000ab": 36, "quotat": [36, 38], "lcub": 36, "0007b": [36, 38], "curli": [36, 38], "bracket": [36, 38, 1034], "ldquo": 36, "0201c": [36, 38], "lowbar": 36, "0005f": 36, "low": [36, 115, 148, 195, 224, 244, 261, 375, 407, 443, 447, 452, 475, 498, 511, 514, 515, 519, 723, 725, 790, 804, 844, 912, 968, 984, 1063, 1161], "lpar": 36, "00028": 36, "parenthesi": 36, "lsqb": 36, "0005b": [36, 38], "lsquo": 36, "02018": [36, 38], "0003c": 36, "micro": [36, 221, 227, 237, 240], "000b5": 36, "middot": 36, "000b7": [36, 38], "middl": [36, 38, 39, 63, 162, 173, 228, 244, 296, 299, 427, 447, 514, 543, 786, 905, 915, 921, 982, 1016], "nbsp": 36, "000a0": [36, 38], "NO": [36, 38, 163, 204, 337, 646, 914, 979], "space": [36, 38, 63, 78, 99, 110, 111, 114, 148, 152, 153, 154, 159, 172, 175, 199, 213, 240, 258, 265, 267, 268, 286, 288, 289, 331, 342, 343, 351, 370, 389, 391, 410, 471, 476, 485, 489, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 574, 583, 618, 738, 760, 761, 769, 806, 821, 835, 836, 837, 838, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904, 913, 916, 917, 918, 919, 920, 927, 931, 932, 933, 934, 935, 943, 945, 950, 958, 959, 961, 962, 965, 967, 975, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1014, 1017, 1051], "000ac": 36, "NOT": [36, 38, 182, 369, 408, 453, 492, 493, 506, 507, 779, 896, 1125], "num": [36, 157, 171, 172, 185, 195, 211, 225, 227, 232, 234, 240, 244, 262, 265, 304, 308, 413, 598, 600, 682, 683, 684, 685, 694, 714, 745, 747, 749, 751, 896, 901, 1009, 1114], "00023": 36, "ohm": 36, "02126": 36, "ordf": 36, "000aa": 36, "feminin": 36, "ordin": [36, 240, 247, 250, 286, 292, 308, 314, 1119], "indic": [36, 203, 221, 227, 232, 237, 240, 276, 621, 769], "ordm": 36, "000ba": 36, "masculin": 36, "para": 36, "000b6": 36, "pilcrow": 36, "percnt": 36, "00025": 36, "percent": [36, 244], "period": [36, 84, 123, 127, 169, 192, 441, 574, 740, 818, 905, 913, 932, 942, 964, 966, 979, 1134], "0002e": 36, "full": [36, 124, 132, 170, 215, 219, 265, 386, 401, 429, 434, 537, 548, 583, 687, 724, 737, 761, 847, 852, 913, 955, 961, 1006, 1025, 1058, 1114, 1122], "stop": [36, 146, 157, 213, 240, 277, 279, 281, 286, 304, 314, 325, 452, 492, 506, 802, 905, 980, 1005, 1128, 1146], "0002b": 36, "plusmn": 36, "000b1": [36, 38], "000a3": 36, "quest": 36, "0003f": 36, "quot": [36, 172, 220, 223, 227, 234, 240, 248, 382, 833, 896, 897, 915, 1050], "00022": 36, "raquo": 36, "000bb": 36, "rcub": 36, "0007d": [36, 38], "rdquo": 36, "0201d": [36, 38], "reg": 36, "000ae": [36, 38], "rpar": 36, "00029": 36, "rsqb": 36, "0005d": [36, 38], "rsquo": 36, "02019": [36, 38], "sect": 36, "000a7": 36, "section": [36, 38, 88, 152, 156, 157, 158, 167, 176, 189, 213, 271, 274, 277, 358, 551, 569, 651, 736, 798, 800, 868, 911, 912, 928, 982, 983, 984, 986, 992, 998, 999, 1000, 1139], "semi": [36, 272, 306, 479, 723, 950, 1001], "0003b": 36, "semicolon": [36, 452, 1114], "shy": 36, "000ad": 36, "soft": [36, 149, 347, 806], "sol": 36, "sung": 36, "0266a": 36, "sup1": 36, "000b9": 36, "superscript": 36, "sup2": 36, "000b2": 36, "sup3": 36, "000b3": 36, "000d7": 36, "trade": 36, "02122": 36, "02191": [36, 38], "verbar": 36, "0007c": [36, 38], "000a5": 36, "lorem": 37, "ipsum": 37, "h\u00f6dlmoser": 37, "anywai": [37, 43, 53, 61, 151, 153, 154, 163, 182, 184, 204, 213, 214, 240, 389, 437, 443, 447, 453, 569, 575, 584, 586, 587, 665, 673, 676, 680, 714, 715, 725, 800, 808, 847, 868, 958, 1014, 1125, 1139], "hmm": [37, 149, 158, 171, 182, 554, 687, 979], "annoi": [37, 43, 326, 449, 665, 1139], "thing": [37, 40, 42, 43, 49, 100, 127, 145, 151, 152, 154, 155, 156, 157, 158, 159, 163, 172, 176, 180, 183, 184, 188, 192, 204, 221, 227, 228, 230, 237, 240, 250, 303, 313, 329, 387, 403, 407, 431, 437, 440, 447, 471, 475, 543, 550, 551, 567, 569, 576, 581, 583, 605, 665, 687, 704, 728, 737, 759, 767, 772, 804, 808, 833, 847, 852, 901, 905, 906, 933, 938, 961, 966, 982, 994, 998, 999, 1005, 1019, 1033, 1056, 1146, 1164], "thin": [37, 38], "border": 37, "anfrag": [37, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "dauer": [37, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "tage": [37, 177, 179, 187, 357, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1170, 1172, 1173, 1175, 1176, 1177], "sysprog": [37, 148, 149, 268, 359, 761, 815, 820, 904, 945, 946, 949, 1172, 1173, 1175, 1176], "catcher": 37, "somehow": [37, 42, 120, 127, 131, 136, 153, 306, 581, 816, 1134, 1135], "einf\u00fchrungskur": [37, 1155, 1172, 1173, 1175, 1176], "richtet": [37, 1157, 1172], "kennen": [37, 341, 1172], "lernen": [37, 1172], "zusammenh\u00e4ng": [37, 1172], "grundpfeil": [37, 1172], "erkl\u00e4rt": [37, 172, 175, 179, 1156, 1172, 1176, 1177], "bild": [37, 175, 1172], "orientieren": [37, 1172], "zurechtfinden": [37, 341, 1172], "somedai": 37, "better": [37, 57, 61, 65, 131, 146, 148, 149, 153, 157, 163, 164, 174, 184, 185, 187, 188, 190, 191, 192, 195, 196, 209, 213, 219, 221, 222, 224, 225, 230, 231, 232, 234, 235, 238, 241, 244, 249, 253, 261, 268, 281, 285, 291, 366, 378, 386, 393, 402, 407, 408, 409, 415, 419, 422, 426, 427, 435, 437, 439, 444, 445, 448, 452, 457, 458, 463, 465, 543, 570, 578, 592, 605, 622, 645, 657, 660, 665, 667, 705, 717, 728, 758, 760, 761, 808, 887, 913, 914, 934, 950, 953, 979, 980, 1008, 1019, 1037, 1051, 1063, 1102, 1103, 1106, 1111, 1113, 1118, 1124, 1139, 1148], "yet": [37, 78, 142, 152, 159, 162, 172, 174, 241, 242, 252, 265, 303, 404, 437, 465, 474, 487, 489, 524, 525, 537, 543, 636, 739, 808, 825, 835, 836, 913, 921, 925, 979, 1006, 1036, 1063, 1130, 1139, 1148], "redefin": 37, "wrap": [37, 63, 211, 249, 303, 486, 725, 731, 808, 1131], "look": [37, 42, 43, 45, 59, 62, 65, 82, 89, 102, 114, 119, 127, 132, 145, 146, 151, 152, 153, 154, 155, 157, 159, 162, 167, 172, 180, 184, 188, 191, 203, 209, 213, 238, 268, 271, 274, 277, 278, 296, 299, 303, 317, 325, 358, 421, 429, 437, 443, 447, 449, 452, 453, 460, 508, 523, 524, 537, 554, 580, 592, 604, 656, 669, 693, 725, 731, 732, 762, 767, 777, 804, 808, 835, 836, 840, 844, 847, 858, 860, 865, 872, 880, 895, 906, 912, 913, 921, 938, 948, 975, 976, 999, 1003, 1013, 1030, 1033, 1071, 1075, 1084, 1106, 1113, 1114, 1125, 1141, 1159, 1162], "mdbootstrap": 37, "jqueri": 37, "icon": 37, "longrightarrow": 38, "rightarrow": 38, "doubleleftrightarrow": 38, "02220": 38, "applyfunct": 38, "02061": 38, "applic": [38, 63, 78, 94, 127, 137, 152, 157, 169, 182, 204, 299, 303, 306, 337, 358, 433, 436, 443, 524, 601, 604, 672, 713, 846, 906, 913, 925, 950, 1113], "approx": [38, 1094, 1139], "approxeq": 38, "assign": [38, 97, 172, 173, 174, 179, 185, 195, 202, 210, 221, 224, 227, 230, 232, 236, 237, 242, 244, 248, 272, 276, 277, 279, 304, 309, 320, 340, 346, 347, 369, 386, 392, 393, 402, 409, 415, 416, 419, 422, 426, 431, 433, 435, 439, 444, 445, 479, 486, 492, 493, 501, 506, 507, 569, 570, 573, 580, 636, 645, 652, 662, 666, 667, 669, 673, 680, 703, 705, 710, 719, 725, 757, 758, 760, 761, 912, 914, 953, 964, 967, 969, 1046, 1057, 1128, 1130], "backcong": 38, "backepsilon": 38, "backprim": 38, "02035": 38, "backsim": 38, "backsimeq": 38, "backslash": [38, 382, 892, 1050], "02216": 38, "barwedg": 38, "02305": 38, "02235": 38, "bernoulli": 38, "0212c": 38, "bigcap": 38, "022c2": 38, "bigcirc": 38, "025ef": 38, "bigcup": 38, "022c3": 38, "union": [38, 208, 216, 232, 304, 425, 742, 746, 749, 750, 751, 752, 760, 761, 1055, 1160], "bigodot": 38, "02a00": 38, "bigoplu": 38, "02a01": 38, "bigotim": 38, "02a02": 38, "bigsqcup": 38, "02a06": 38, "bigstar": 38, "02605": 38, "bigtriangledown": 38, "025bd": 38, "white": [38, 276, 371], "bigtriangleup": 38, "025b3": 38, "biguplu": 38, "02a04": 38, "bigve": 38, "022c1": 38, "logic": [38, 115, 154, 329, 377, 393, 402, 407, 409, 415, 419, 422, 426, 431, 435, 439, 444, 445, 472, 489, 667, 705, 758, 760, 761, 1125], "bigwedg": 38, "022c0": 38, "bkarow": 38, "blacklozeng": 38, "029eb": 38, "lozeng": 38, "blacksquar": 38, "025aa": 38, "blacktriangl": 38, "025b4": 38, "blacktriangledown": 38, "025be": 38, "blacktriangleleft": 38, "025c2": 38, "blacktriangleright": 38, "025b8": 38, "bot": [38, 1139], "022a5": 38, "boxminu": 38, "0229f": 38, "boxplu": 38, "0229e": 38, "boxtim": 38, "022a0": 38, "breve": 38, "002d8": 38, "bullet": [38, 154, 1113], "02022": 38, "bumpeq": 38, "capitaldifferentiald": 38, "02145": 38, "struck": 38, "ital": 38, "d": [38, 85, 97, 107, 114, 152, 153, 154, 155, 171, 174, 182, 185, 190, 195, 200, 202, 208, 211, 214, 217, 218, 222, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 268, 272, 281, 282, 285, 286, 292, 300, 304, 308, 314, 320, 332, 334, 335, 340, 363, 370, 371, 373, 377, 404, 408, 437, 447, 449, 463, 470, 475, 569, 575, 582, 636, 637, 642, 643, 645, 649, 675, 712, 724, 725, 737, 739, 781, 802, 816, 832, 835, 836, 845, 847, 851, 852, 865, 868, 869, 890, 894, 896, 901, 907, 912, 913, 914, 926, 931, 979, 982, 1004, 1006, 1032, 1038, 1043, 1045, 1046, 1050, 1051, 1054, 1074], "caylei": 38, "0212d": 38, "letter": [38, 65, 380, 1036], "cedilla": 38, "000b8": 38, "centerdot": 38, "checkmark": 38, "02713": 38, "circeq": 38, "circlearrowleft": 38, "circlearrowright": 38, "circledast": 38, "0229b": 38, "circledcirc": 38, "0229a": 38, "circleddash": 38, "0229d": 38, "circledot": 38, "02299": 38, "circledr": 38, "024c8": 38, "latin": [38, 231, 292, 308], "circleminu": 38, "02296": 38, "circleplu": 38, "02295": 38, "circletim": 38, "02297": 38, "clockwisecontourintegr": 38, "02232": 38, "contour": 38, "closecurlydoublequot": 38, "closecurlyquot": 38, "clubsuit": 38, "02663": 38, "suit": [38, 44, 97, 119, 148, 188, 257, 261, 348, 425, 434, 465, 466, 467, 469, 470, 472, 474, 487, 489, 490, 508, 521, 522, 523, 524, 525, 584, 585, 586, 587, 676, 677, 714, 723, 724, 755, 756, 757, 759, 1140, 1147, 1162, 1177], "coloneq": 38, "complement": [38, 106, 386], "02201": 38, "complex": [38, 69, 152, 163, 167, 184, 190, 210, 227, 232, 234, 240, 244, 248, 250, 265, 272, 286, 314, 340, 361, 404, 416, 431, 740, 912, 913, 937, 953, 976, 1037, 1046, 1152, 1162], "02102": 38, "02261": 38, "ident": [38, 236, 286, 298, 560, 1025, 1027, 1046], "contourintegr": 38, "0222e": 38, "counterclockwisecontourintegr": 38, "02233": 38, "cupcap": 38, "0224d": 38, "curlyeqprec": 38, "curlyeqsucc": 38, "curlyve": 38, "022ce": 38, "curlywedg": 38, "022cf": 38, "curvearrowleft": 38, "curvearrowright": 38, "dbkarow": 38, "ddagger": 38, "02021": 38, "ddotseq": 38, "02207": 38, "nabla": 38, "diacriticalacut": 38, "000b4": 38, "acut": 38, "accent": 38, "diacriticaldot": 38, "002d9": 38, "diacriticaldoubleacut": 38, "002dd": 38, "diacriticalgrav": 38, "00060": 38, "grave": 38, "diacriticaltild": 38, "002dc": 38, "022c4": 38, "diamondsuit": 38, "02666": 38, "differentiald": 38, "02146": 38, "digamma": 38, "003dd": 38, "div": [38, 437, 487], "divideontim": 38, "022c7": 38, "doteq": 38, "doteqdot": 38, "dotequ": 38, "dotminu": 38, "02238": 38, "dotplu": 38, "02214": 38, "dotsquar": 38, "022a1": 38, "doublebarwedg": 38, "02306": 38, "doublecontourintegr": 38, "0222f": 38, "surfac": [38, 184, 844, 912, 913, 1111, 1113], "doubledot": 38, "000a8": 38, "diaeresi": 38, "doubledownarrow": 38, "doubleleftarrow": 38, "021d0": 38, "doubleleftte": 38, "doublelongleftarrow": 38, "doublelongleftrightarrow": 38, "doublelongrightarrow": 38, "doublerightarrow": 38, "021d2": 38, "doublerightte": 38, "doubleuparrow": 38, "doubleupdownarrow": 38, "doubleverticalbar": 38, "downarrow": 38, "downarrowuparrow": 38, "downdownarrow": 38, "downharpoonleft": 38, "downharpoonright": 38, "downleftvector": 38, "downrightvector": 38, "downte": 38, "022a4": 38, "downteearrow": 38, "021a7": 38, "drbkarow": 38, "02208": 38, "emptyset": 38, "02205": 38, "eqcirc": 38, "eqcolon": 38, "eqsim": 38, "eqslantgtr": 38, "eqslantless": 38, "equaltild": 38, "equilibrium": 38, "02203": 38, "THERE": [38, 571], "02130": 38, "exponential": 38, "02147": 38, "fallingdotseq": 38, "foral": [38, 1057], "02200": 38, "FOR": [38, 163, 185, 192], "fouriertrf": 38, "02131": 38, "geq": 38, "02265": 38, "geqq": 38, "geqslant": 38, "ggg": 38, "gnapprox": 38, "02a8a": 38, "gneq": 38, "02a88": 38, "gneqq": 38, "02269": 38, "BUT": 38, "greaterequ": 38, "greaterequalless": 38, "greaterfullequ": 38, "greaterless": 38, "greaterslantequ": 38, "greatertild": 38, "gtrapprox": 38, "gtrdot": 38, "gtreqless": 38, "gtreqqless": 38, "gtrless": 38, "gtrsim": 38, "gvertneqq": 38, "hacek": 38, "002c7": 38, "caron": 38, "hbar": 38, "0210f": 38, "planck": 38, "constant": [38, 213, 221, 227, 230, 231, 232, 237, 240, 244, 282, 303, 369, 377, 378, 383, 393, 397, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 510, 617, 667, 678, 705, 715, 717, 758, 760, 761], "heartsuit": 38, "02665": 38, "hilbertspac": 38, "0210b": 38, "h": [38, 42, 44, 97, 114, 123, 127, 128, 129, 130, 132, 154, 159, 175, 178, 180, 185, 191, 195, 200, 213, 214, 221, 224, 225, 232, 234, 244, 257, 268, 279, 314, 317, 362, 363, 365, 369, 371, 373, 381, 404, 405, 407, 413, 420, 428, 430, 434, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 472, 474, 477, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 544, 550, 551, 553, 554, 557, 560, 562, 567, 568, 569, 570, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 645, 654, 655, 656, 657, 658, 659, 660, 661, 670, 672, 675, 676, 677, 693, 694, 697, 708, 711, 714, 715, 719, 723, 724, 725, 726, 728, 737, 739, 741, 745, 747, 749, 750, 751, 752, 755, 756, 757, 759, 767, 772, 776, 777, 779, 786, 788, 790, 792, 794, 796, 800, 802, 804, 813, 818, 821, 822, 825, 827, 828, 834, 845, 852, 865, 868, 890, 896, 906, 908, 912, 928, 930, 931, 932, 934, 935, 937, 938, 939, 940, 941, 944, 946, 949, 963, 966, 970, 972, 974, 975, 979, 980, 982, 983, 984, 985, 990, 994, 997, 998, 1000, 1043, 1058, 1134, 1141, 1146, 1148, 1151], "hksearow": 38, "hkswarow": 38, "hookleftarrow": 38, "hookrightarrow": 38, "hslash": 38, "humpdownhump": 38, "humpequ": 38, "iiiint": 38, "02a0c": 38, "quadrupl": 38, "iiint": 38, "0222d": 38, "02111": 38, "imaginaryi": 38, "02148": 38, "imaglin": 38, "02110": 38, "imagpart": 38, "impli": [38, 729, 1134], "02124": 38, "0222b": 38, "interc": 38, "022ba": 38, "intercal": 38, "intprod": 38, "02a3c": 38, "interior": 38, "invisiblecomma": 38, "02063": 38, "invis": [38, 493], "invisibletim": 38, "02062": 38, "langl": 38, "02329": 38, "laplacetrf": 38, "02112": 38, "lbrace": 38, "lbrack": 38, "leftanglebracket": 38, "leftarrow": 38, "leftarrowbar": 38, "021e4": 38, "leftarrowrightarrow": 38, "leftarrowtail": 38, "leftceil": 38, "02308": 38, "ceil": [38, 212, 225, 244, 314], "leftdoublebracket": 38, "0301a": 38, "leftdownvector": 38, "leftfloor": 38, "0230a": 38, "leftharpoondown": 38, "leftharpoonup": 38, "leftleftarrow": 38, "leftrightarrow": 38, "leftrightharpoon": 38, "leftrightsquigarrow": 38, "leftte": 38, "leftteearrow": 38, "021a4": 38, "leftthreetim": 38, "022cb": 38, "semidirect": 38, "lefttriangl": 38, "lefttriangleequ": 38, "leftupvector": 38, "leftvector": 38, "leq": 38, "02264": 38, "leqq": 38, "leqslant": 38, "lessapprox": 38, "lessdot": 38, "lesseqgtr": 38, "lesseqqgtr": 38, "lessequalgreat": 38, "lessfullequ": 38, "lessgreat": 38, "lessgtr": 38, "lesssim": 38, "lessslantequ": 38, "lesstild": 38, "llcorner": 38, "0231e": 38, "bottom": [38, 199, 303, 508, 521, 806, 868, 887, 905, 1005], "corner": [38, 213, 276, 358, 370, 450, 462, 521, 737], "lleftarrow": 38, "lmoustach": 38, "023b0": 38, "upper": [38, 185, 208, 232, 234, 240, 250, 265, 272, 286, 308, 325, 334, 363, 367, 383, 407, 967, 1067], "lower": [38, 154, 208, 221, 227, 232, 237, 240, 244, 250, 265, 286, 325, 334, 363, 367, 383, 407, 467, 611, 968, 976, 1025, 1130], "lnapprox": 38, "02a89": 38, "lneq": 38, "02a87": 38, "lneqq": 38, "02268": 38, "longleftarrow": 38, "longleftrightarrow": 38, "longmapsto": 38, "looparrowleft": 38, "looparrowright": 38, "lowerleftarrow": 38, "lowerrightarrow": 38, "025ca": 38, "lrcorner": 38, "0231f": 38, "lvertneqq": 38, "maltes": 38, "02720": 38, "mapsto": 38, "measuredangl": 38, "02221": 38, "measur": [38, 97, 119, 122, 132, 154, 244, 277, 281, 303, 313, 433, 440, 486, 490, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 565, 643, 745, 761, 767, 834, 843, 934, 975, 999, 1111, 1113], "mellintrf": 38, "02133": 38, "minusplu": 38, "02213": 38, "napprox": 38, "02249": 38, "0266e": 38, "music": [38, 154, 282], "02115": 38, "nearrow": 38, "negativemediumspac": 38, "0200b": 38, "width": [38, 221, 227, 230, 231, 237, 240, 262, 270, 286, 363, 386, 475, 560, 584, 905, 976, 1051, 1114, 1163, 1170], "negativethickspac": 38, "negativethinspac": 38, "negativeverythinspac": 38, "nestedgreatergreat": 38, "nestedlessless": 38, "nexist": 38, "02204": 38, "ngeq": 38, "02271": 38, "neither": [38, 172, 465, 492, 506, 676, 853, 855, 856, 938, 1047], "nor": [38, 172, 228, 492, 506, 576, 676, 853, 855, 856, 905, 925, 938, 1047], "ngeqq": 38, "ngeqslant": 38, "ngtr": 38, "0226f": 38, "nleftarrow": 38, "nleftrightarrow": 38, "nleq": 38, "02270": 38, "nleqq": 38, "nleqslant": 38, "nless": 38, "0226e": 38, "nonbreakingspac": 38, "notcongru": 38, "02262": 38, "notdoubleverticalbar": 38, "02226": 38, "notel": 38, "02209": 38, "notequ": 38, "02260": 38, "notequaltild": 38, "notexist": 38, "notgreat": 38, "notgreaterequ": 38, "notgreaterfullequ": 38, "notgreatergreat": 38, "notgreaterless": 38, "02279": 38, "notgreaterslantequ": 38, "notgreatertild": 38, "02275": 38, "nothumpdownhump": 38, "notlefttriangl": 38, "022ea": 38, "notlefttriangleequ": 38, "022ec": 38, "notless": 38, "notlessequ": 38, "notlessgreat": 38, "02278": 38, "notlessless": 38, "notlessslantequ": 38, "notlesstild": 38, "02274": 38, "notpreced": 38, "02280": 38, "notprecedesequ": 38, "notprecedesslantequ": 38, "022e0": 38, "notreverseel": 38, "0220c": 38, "notrighttriangl": 38, "022eb": 38, "notrighttriangleequ": 38, "022ed": 38, "notsquaresubsetequ": 38, "022e2": 38, "notsquaresupersetequ": 38, "022e3": 38, "notsubset": 38, "020d2": 38, "notsubsetequ": 38, "02288": 38, "notsucce": 38, "02281": 38, "notsucceedsequ": 38, "notsucceedsslantequ": 38, "022e1": 38, "notsuperset": 38, "notsupersetequ": 38, "02289": 38, "nottild": 38, "02241": 38, "nottildeequ": 38, "02244": 38, "asymptot": 38, "nottildefullequ": 38, "02247": 38, "actual": [38, 42, 43, 48, 61, 154, 157, 162, 167, 184, 211, 221, 227, 230, 237, 240, 244, 271, 274, 276, 306, 343, 467, 477, 636, 643, 665, 723, 767, 905, 913, 937, 980, 1003, 1019, 1028, 1061, 1109, 1111, 1113, 1132, 1146], "nottildetild": 38, "notverticalbar": 38, "02224": 38, "nparallel": 38, "nprec": 38, "npreceq": 38, "nrightarrow": 38, "nshortmid": 38, "nshortparallel": 38, "nsimeq": 38, "nsubset": 38, "nsubseteq": 38, "nsubseteqq": 38, "nsucc": 38, "nsucceq": 38, "nsupset": 38, "nsupseteq": 38, "nsupseteqq": 38, "ntriangleleft": 38, "ntrianglelefteq": 38, "ntriangleright": 38, "ntrianglerighteq": 38, "nwarrow": 38, "oint": 38, "opencurlydoublequot": 38, "opencurlyquot": 38, "orderof": 38, "02134": 38, "partiald": 38, "02202": 38, "partial": [38, 278, 307, 786, 1110], "differenti": [38, 69, 659, 727, 808, 853, 912, 1037, 1105, 1119], "plusminu": 38, "poincareplan": 38, "0210c": 38, "prec": 38, "precapprox": 38, "preccurlyeq": 38, "precedesequ": 38, "precedesslantequ": 38, "precedestild": 38, "preceq": 38, "precnapprox": 38, "02ab9": 38, "precneqq": 38, "02ab5": 38, "precnsim": 38, "022e8": 38, "precsim": 38, "02119": 38, "propto": 38, "quaternion": 38, "0210d": 38, "questeq": 38, "rangl": 38, "0232a": 38, "0211a": 38, "q": [38, 114, 192, 244, 407, 413, 567, 585, 586, 600, 728, 845, 868, 900, 975, 1134], "rbrace": 38, "rbrack": 38, "0211c": 38, "realin": 38, "0211b": 38, "realpart": 38, "real": [38, 73, 115, 121, 125, 127, 130, 131, 143, 159, 162, 167, 170, 172, 188, 209, 222, 227, 228, 235, 237, 240, 244, 249, 252, 262, 270, 276, 285, 291, 303, 326, 387, 436, 443, 457, 463, 469, 486, 508, 516, 517, 518, 519, 520, 524, 566, 567, 572, 687, 702, 720, 723, 769, 808, 845, 846, 868, 905, 913, 925, 966, 1052, 1106, 1109, 1111, 1140, 1159, 1162], "0211d": 38, "reverseel": 38, "0220b": 38, "reverseequilibrium": 38, "reverseupequilibrium": 38, "rightanglebracket": 38, "rightarrowbar": 38, "021e5": 38, "rightarrowleftarrow": 38, "rightarrowtail": 38, "rightceil": 38, "02309": 38, "rightdoublebracket": 38, "0301b": 38, "rightdownvector": 38, "rightfloor": 38, "0230b": 38, "rightharpoondown": 38, "rightharpoonup": 38, "rightleftarrow": 38, "rightleftharpoon": 38, "rightrightarrow": 38, "rightsquigarrow": 38, "rightte": 38, "rightteearrow": 38, "rightthreetim": 38, "022cc": 38, "righttriangl": 38, "righttriangleequ": 38, "rightupvector": 38, "rightvector": 38, "risingdotseq": 38, "rmoustach": 38, "023b1": 38, "rrightarrow": 38, "searrow": 38, "setminu": 38, "shortdownarrow": 38, "shortleftarrow": 38, "shortmid": 38, "shortparallel": 38, "shortrightarrow": 38, "shortuparrow": 38, "simeq": 38, "02243": 38, "smallcircl": 38, "02218": 38, "smallsetminu": 38, "spadesuit": 38, "02660": 38, "sqrt": [38, 212, 225, 314, 567, 569, 577, 578, 586, 672, 687, 688, 689, 690, 691, 728], "0221a": 38, "sqsubset": 38, "sqsubseteq": 38, "sqsupset": 38, "sqsupseteq": 38, "025a1": 38, "squareintersect": 38, "02293": 38, "cap": [38, 224, 1063], "squaresubset": 38, "squaresubsetequ": 38, "squaresuperset": 38, "squaresupersetequ": 38, "squareunion": 38, "02294": 38, "cup": [38, 282], "022c6": 38, "straightepsilon": 38, "003f5": 38, "straightphi": 38, "003d5": 38, "phi": 38, "subseteq": 38, "02286": 38, "subseteqq": 38, "subsetequ": 38, "subsetneq": 38, "0228a": 38, "subsetneqq": 38, "02acb": 38, "succ": 38, "succapprox": 38, "succcurlyeq": 38, "succeedsequ": 38, "succeedsslantequ": 38, "succeedstild": 38, "succeq": 38, "succnapprox": 38, "02aba": 38, "succneqq": 38, "02ab6": 38, "succnsim": 38, "022e9": 38, "succsim": 38, "suchthat": 38, "02211": 38, "summat": 38, "supersetequ": 38, "02287": 38, "supset": 38, "supseteq": 38, "supseteqq": 38, "supsetneq": 38, "0228b": 38, "supsetneqq": 38, "02acc": 38, "swarrow": 38, "therefor": [38, 142, 152], "02234": 38, "thickapprox": 38, "thicksim": 38, "thinspac": 38, "02009": 38, "tildeequ": 38, "tildefullequ": 38, "02245": 38, "tildetild": 38, "toea": 38, "tosa": 38, "025b5": 38, "triangledown": 38, "025bf": 38, "triangleleft": 38, "025c3": 38, "trianglelefteq": 38, "triangleq": 38, "triangleright": 38, "025b9": 38, "trianglerighteq": 38, "tripledot": 38, "020db": 38, "combin": [38, 85, 108, 110, 111, 155, 173, 204, 260, 392, 403, 408, 425, 433, 464, 473, 485, 499, 513, 565, 600, 639, 717, 761, 790, 848, 850, 852, 868, 890, 901, 938, 939, 941, 988, 1041, 1056, 1072, 1125, 1159], "twoheadleftarrow": 38, "twoheadrightarrow": 38, "ulcorn": 38, "0231c": 38, "unionplu": 38, "0228e": 38, "multiset": 38, "uparrow": 38, "uparrowdownarrow": 38, "updownarrow": 38, "upequilibrium": 38, "upharpoonleft": 38, "upharpoonright": 38, "upperleftarrow": 38, "upperrightarrow": 38, "upsilon": 38, "003c5": 38, "upte": 38, "upteearrow": 38, "021a5": 38, "upuparrow": 38, "urcorn": 38, "0231d": 38, "varepsilon": 38, "003b5": 38, "varkappa": 38, "003f0": 38, "kappa": 38, "varnoth": 38, "varphi": 38, "003c6": 38, "varpi": 38, "003d6": 38, "varpropto": 38, "varrho": 38, "003f1": 38, "rho": 38, "varsigma": 38, "003c2": 38, "sigma": [38, 244], "varsubsetneq": 38, "variant": [38, 196, 212, 225, 255, 256, 257, 316, 363, 379, 496, 560, 713, 717, 719, 742, 746, 749, 760, 761, 786, 1166, 1169], "varsubsetneqq": 38, "varsupsetneq": 38, "varsupsetneqq": 38, "vartheta": 38, "003d1": 38, "theta": 38, "vartriangleleft": 38, "vartriangleright": 38, "vee": 38, "02228": 38, "vert": 38, "02016": 38, "verticalbar": 38, "verticaltild": 38, "02240": 38, "wreath": 38, "verythinspac": 38, "0200a": 38, "hair": 38, "wedg": 38, "02227": 38, "wp": 38, "02118": 38, "wr": 38, "zeetrf": 38, "02128": 38, "restructured text": 39, "cheat sheet": 39, "restructur": 39, "guid": [39, 136, 157, 167, 188, 213, 360, 440, 518, 670, 779, 794, 847], "author": [39, 155, 162, 240, 583, 781, 912, 1061, 1115], "overridden": [39, 386, 637, 704, 1139], "titl": [39, 40, 148, 158, 222, 235, 240, 249, 252, 285, 286, 291, 1022, 1106, 1111], "favorit": [39, 184, 188, 191, 209, 213, 235, 238, 326, 808, 914, 966, 1030, 1106], "__": [39, 169, 171, 179, 286, 718, 722, 1026], "ref": [39, 114, 167, 256, 257, 665, 680, 724, 756], "uniqu": [39, 167, 214, 256, 257, 259, 524, 543, 725, 737, 756, 758, 760, 761, 914, 928, 942, 1001, 1054, 1058, 1128], "across": [39, 43, 152, 159, 169, 221, 227, 237, 240, 270, 279, 303, 358, 386, 406, 430, 465, 470, 489, 552, 728, 739, 759, 835, 836, 847, 865, 912, 914, 934, 942, 976, 1037, 1048, 1115], "tree": [39, 42, 100, 102, 114, 142, 144, 153, 155, 158, 163, 167, 180, 181, 188, 212, 225, 228, 231, 235, 268, 296, 299, 416, 438, 443, 455, 487, 522, 524, 621, 624, 761, 783, 786, 800, 810, 833, 835, 836, 838, 852, 868, 869, 876, 880, 882, 888, 897, 904, 913, 918, 920, 925, 945, 953, 962, 985, 990, 1010, 1022, 1113, 1131, 1139, 1141], "_dummi": 39, "dummi": [39, 158, 346, 347, 788, 827, 1146], "One": [39, 43, 59, 62, 63, 76, 80, 82, 97, 106, 152, 154, 163, 180, 191, 212, 230, 251, 252, 277, 326, 340, 351, 367, 407, 420, 429, 432, 441, 443, 448, 454, 459, 465, 524, 543, 551, 566, 585, 590, 600, 605, 670, 704, 729, 739, 808, 813, 839, 841, 844, 852, 868, 912, 913, 914, 938, 950, 955, 966, 967, 975, 980, 985, 1017, 1041, 1114, 1115, 1119, 1124, 1161, 1175], "a_footnot": 39, "footer": 39, "block": [39, 98, 110, 111, 151, 152, 153, 154, 192, 194, 212, 219, 221, 225, 227, 237, 240, 249, 252, 261, 282, 285, 303, 325, 340, 345, 349, 363, 365, 383, 402, 408, 409, 415, 419, 422, 426, 434, 435, 437, 439, 444, 445, 472, 572, 575, 667, 693, 705, 724, 735, 736, 737, 738, 739, 758, 759, 760, 761, 794, 810, 820, 824, 838, 839, 841, 842, 844, 845, 890, 904, 913, 937, 944, 945, 950, 955, 959, 960, 965, 967, 975, 976, 979, 981, 1003, 1005, 1031, 1034, 1041, 1044, 1106], "rubric": 39, "nbsphinx": 40, "capabl": [40, 78, 152, 153, 159, 734, 808, 834, 897, 905, 913, 966, 1132, 1162], "nice": [40, 149, 152, 169, 192, 214, 279, 442, 443, 463, 511, 578, 665, 827, 834, 907, 913, 964, 1027, 1063, 1111, 1113, 1122, 1128, 1142], "few": [40, 115, 152, 153, 154, 155, 158, 159, 184, 188, 221, 361, 431, 682, 808, 846, 1005, 1009, 1140, 1164], "keep": [40, 43, 110, 111, 153, 154, 167, 176, 188, 191, 195, 211, 244, 317, 326, 351, 375, 431, 437, 438, 647, 687, 800, 808, 813, 832, 847, 850, 906, 958, 994, 997, 1017, 1034, 1111, 1112, 1159], "mind": [40, 120, 152, 153, 364, 731, 1034], "though": [40, 43, 45, 53, 68, 151, 152, 157, 159, 162, 163, 167, 168, 173, 180, 184, 188, 190, 191, 209, 212, 214, 225, 227, 228, 230, 235, 238, 252, 261, 270, 271, 274, 285, 306, 307, 326, 367, 377, 386, 398, 403, 465, 466, 467, 470, 479, 487, 489, 522, 523, 524, 543, 567, 569, 570, 574, 577, 580, 583, 584, 586, 587, 600, 601, 636, 643, 665, 673, 675, 682, 687, 693, 710, 714, 719, 724, 725, 728, 735, 747, 749, 762, 763, 767, 786, 800, 839, 846, 847, 850, 853, 887, 901, 905, 912, 913, 914, 924, 932, 934, 961, 966, 968, 970, 976, 985, 1003, 1005, 1006, 1009, 1014, 1016, 1023, 1025, 1033, 1037, 1050, 1075, 1106, 1113, 1114, 1127, 1134, 1135, 1139, 1141, 1159, 1162], "toplevel": [40, 44, 109, 114, 132, 180, 213, 262, 451, 453, 457, 458, 459, 461, 508, 781, 809, 834, 1003, 1148], "begin": [40, 42, 43, 112, 116, 117, 118, 122, 124, 125, 131, 132, 134, 151, 152, 162, 190, 211, 212, 224, 227, 240, 244, 256, 257, 261, 278, 286, 307, 357, 363, 371, 383, 386, 407, 413, 430, 431, 433, 463, 470, 560, 570, 583, 596, 598, 600, 601, 602, 604, 605, 607, 608, 609, 611, 612, 613, 614, 618, 621, 632, 665, 680, 693, 696, 700, 707, 713, 714, 717, 731, 761, 834, 868, 892, 900, 926, 934, 1010, 1034, 1056, 1106, 1140], "deeper": [40, 153, 184, 271, 274, 452, 961], "trail": [40, 156, 240, 282, 286, 304, 331, 332], "underscor": [40, 380, 1006, 1013, 1026, 1036], "ipynb": [40, 171, 191, 201, 203, 240, 250, 271, 275, 281, 285, 291, 296, 299, 303, 307, 313, 314, 319, 1108, 1112], "labels_": [40, 173, 175], "result": [40, 78, 115, 120, 131, 145, 154, 163, 169, 171, 191, 195, 211, 221, 227, 230, 237, 240, 244, 253, 262, 282, 286, 370, 386, 421, 428, 430, 431, 437, 467, 492, 496, 583, 611, 672, 678, 687, 715, 779, 924, 970, 998, 1010, 1025, 1039, 1045, 1057, 1114], "cluster": [40, 175, 1108, 1113], "membership": [40, 173, 190, 191, 233, 479, 1038, 1055], "sequenc": [40, 106, 109, 145, 172, 173, 175, 185, 191, 212, 214, 223, 225, 226, 227, 230, 233, 237, 240, 244, 262, 277, 279, 286, 292, 362, 416, 467, 513, 528, 529, 530, 565, 610, 629, 633, 649, 662, 670, 717, 761, 967, 1010, 1011, 1012, 1028, 1037, 1038, 1043, 1045, 1048, 1052, 1053, 1076, 1088, 1119, 1162], "bring": [40, 45, 112, 120, 132, 145, 152, 154, 162, 163, 184, 188, 191, 194, 230, 268, 271, 274, 277, 279, 303, 306, 348, 353, 354, 358, 543, 582, 621, 645, 656, 664, 804, 808, 820, 912, 913, 914, 983, 1030, 1078, 1101, 1119, 1159, 1162], "bigplan": [40, 175, 1108], "686": [40, 173, 227, 996], "unknown": [40, 270, 449, 746, 764, 913, 1019], "cmd": [40, 158, 802, 827, 1141], "color": [40, 157, 175, 890, 1108, 1134], "tmp": [40, 134, 148, 153, 155, 158, 195, 208, 211, 227, 232, 240, 244, 247, 250, 252, 257, 259, 262, 265, 272, 282, 286, 292, 308, 314, 320, 372, 414, 437, 450, 455, 456, 463, 524, 525, 645, 722, 741, 786, 808, 830, 834, 839, 848, 852, 853, 866, 867, 868, 870, 872, 873, 875, 877, 880, 887, 890, 891, 896, 917, 924, 935, 936, 938, 939, 941, 966, 972, 1003, 1004, 1005, 1010, 1018, 1019, 1025, 1026, 1047, 1048, 1052, 1056, 1062, 1118, 1127, 1128, 1140, 1141], "craft": [41, 53, 238, 280, 281, 447, 492, 729, 762], "tar": [42, 61, 109, 114, 139, 148, 163, 192, 194, 258, 267, 268, 288, 289, 443, 761, 808, 830, 831, 833, 838, 904, 990, 992, 993, 994, 996, 997, 1003, 1061, 1141, 1165], "xz": [42, 61, 155, 163, 268, 436, 990, 994, 996, 997], "push": [42, 77, 134, 156, 158, 167, 170, 213, 228, 238, 295, 311, 346, 408, 453, 454, 465, 489, 599, 602, 737, 761, 808, 950, 968, 1081, 1085, 1139], "cmakelist": [42, 44, 112, 114, 119, 132, 178, 179, 180, 181, 182, 213, 230, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 463, 508, 521, 522, 523, 524, 525, 544, 547, 550, 551, 553, 556, 559, 562, 656, 971, 974, 978, 983, 984, 1145, 1148, 1150], "src": [42, 152, 153, 155, 213, 227, 257, 259, 265, 346, 375, 387, 437, 461, 462, 472, 508, 511, 521, 522, 523, 524, 526, 585, 602, 723, 724, 834, 852, 896, 1056, 1061, 1139], "load": [42, 43, 53, 56, 63, 75, 88, 151, 162, 163, 170, 171, 175, 191, 199, 200, 216, 217, 221, 227, 237, 240, 244, 247, 253, 262, 279, 280, 281, 297, 300, 302, 303, 423, 443, 455, 738, 760, 761, 764, 765, 767, 768, 770, 773, 775, 776, 778, 783, 785, 788, 789, 793, 799, 802, 804, 805, 808, 810, 812, 817, 820, 823, 826, 829, 844, 904, 913, 914, 945, 953, 959, 982, 999, 1106, 1124, 1164, 1173, 1175], "store": [42, 57, 63, 75, 88, 106, 119, 123, 151, 153, 170, 172, 180, 181, 211, 214, 221, 279, 280, 281, 302, 303, 371, 423, 467, 649, 693, 707, 710, 717, 738, 745, 747, 751, 760, 761, 774, 808, 847, 860, 904, 921, 945, 953, 959, 983, 1001, 1005, 1006, 1010, 1054, 1084, 1118, 1134, 1175], "search": [42, 51, 53, 106, 145, 147, 148, 152, 173, 176, 182, 184, 190, 191, 200, 211, 212, 214, 217, 221, 224, 225, 227, 230, 231, 232, 235, 237, 240, 253, 262, 265, 269, 272, 277, 282, 286, 292, 294, 310, 314, 407, 434, 437, 449, 513, 524, 526, 530, 565, 610, 615, 629, 633, 650, 662, 761, 786, 850, 868, 900, 961, 983, 996, 1013, 1042, 1112, 1139, 1161], "payload": [42, 769, 796, 906, 908], "primari": [42, 152, 163, 184, 270, 271, 274, 441, 806, 835, 836, 843, 845, 1084], "insert": [42, 63, 109, 112, 146, 151, 167, 171, 188, 190, 195, 225, 227, 230, 232, 234, 240, 244, 247, 265, 286, 292, 304, 340, 404, 421, 425, 441, 468, 474, 496, 502, 513, 530, 531, 532, 543, 560, 565, 601, 602, 615, 625, 626, 650, 658, 659, 660, 662, 669, 676, 678, 693, 714, 757, 759, 761, 786, 792, 802, 804, 808, 868, 912, 925, 956, 966, 1038, 1053, 1054, 1062, 1118, 1139], "const": [42, 58, 70, 97, 107, 109, 110, 111, 114, 119, 179, 214, 230, 277, 279, 316, 375, 383, 387, 405, 407, 413, 421, 433, 435, 437, 439, 444, 445, 450, 466, 467, 468, 469, 470, 472, 474, 489, 490, 496, 497, 498, 501, 502, 503, 505, 506, 507, 513, 517, 521, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 541, 542, 543, 551, 556, 558, 560, 565, 567, 568, 569, 570, 572, 574, 575, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 593, 594, 600, 604, 606, 607, 608, 609, 610, 616, 620, 622, 625, 626, 629, 632, 633, 636, 639, 640, 643, 645, 646, 647, 650, 651, 654, 655, 657, 658, 659, 660, 661, 662, 669, 671, 672, 673, 674, 675, 676, 677, 678, 687, 688, 689, 690, 691, 693, 695, 696, 699, 700, 701, 702, 703, 705, 707, 708, 709, 710, 712, 713, 715, 717, 721, 723, 724, 725, 726, 727, 730, 738, 739, 741, 747, 751, 755, 756, 757, 758, 759, 760, 761, 764, 767, 772, 788, 790, 794, 802, 804, 818, 822, 828, 926, 934, 938, 939, 940, 941, 944, 946, 949, 951, 953, 955, 963, 969, 972, 975, 976, 980, 1000, 1018, 1094, 1117, 1151, 1157, 1158], "care": [42, 46, 48, 80, 132, 151, 152, 154, 157, 159, 184, 192, 224, 331, 363, 386, 395, 397, 413, 437, 438, 461, 492, 493, 568, 582, 600, 643, 714, 715, 719, 728, 751, 752, 755, 762, 786, 798, 800, 808, 813, 834, 835, 836, 913, 921, 925, 937, 950, 958, 984, 1006, 1030, 1034, 1046, 1053, 1056, 1057, 1063, 1086, 1110, 1118, 1131, 1141], "dump": [42, 152, 171, 200, 216, 217, 227, 240, 244, 247, 253, 262, 297, 300, 303, 472, 491, 492, 575, 580, 703, 723, 846, 979, 980], "db": [42, 50, 162, 188, 213, 214, 215, 219, 225, 238, 253, 453, 467, 468, 474, 496, 502, 657, 658, 659, 660, 661, 729, 1062], "pull": [42, 44, 50, 63, 77, 114, 115, 131, 156, 167, 204, 213, 214, 228, 325, 348, 449, 453, 465, 582, 665, 781, 808, 1010, 1013, 1130], "paramet": [42, 58, 63, 110, 111, 119, 127, 151, 154, 159, 169, 172, 179, 180, 184, 189, 190, 191, 193, 195, 203, 204, 208, 211, 212, 213, 214, 221, 225, 227, 230, 231, 233, 236, 237, 240, 247, 250, 271, 272, 274, 276, 326, 331, 340, 362, 371, 373, 377, 388, 392, 407, 408, 413, 415, 416, 419, 422, 426, 427, 433, 435, 439, 444, 445, 448, 450, 455, 511, 521, 527, 543, 557, 567, 569, 572, 576, 579, 580, 583, 587, 592, 593, 647, 653, 667, 670, 677, 693, 705, 707, 712, 725, 737, 758, 760, 761, 766, 767, 774, 788, 811, 816, 821, 824, 827, 828, 848, 850, 913, 928, 951, 961, 976, 984, 997, 1001, 1006, 1020, 1023, 1028, 1035, 1051, 1058, 1063, 1073, 1079, 1081, 1085, 1091, 1100, 1111, 1114, 1117, 1124, 1127, 1128, 1130, 1155, 1156], "entri": [42, 120, 149, 153, 154, 158, 216, 227, 362, 462, 478, 621, 623, 643, 796, 834, 847, 851, 852, 853, 890, 896, 928, 934, 948, 999, 1006, 1054, 1117, 1148], "o_creat": [42, 761, 904, 934, 935, 939, 943, 945, 962, 975], "o_trunc": [42, 48, 934], "o_wronli": [42, 761, 904, 934, 935, 937, 938, 939, 943, 944, 945, 946, 949, 962, 975], "0666": [42, 867, 938, 939, 975], "assert": [42, 46, 188, 212, 225, 237, 240, 254, 270, 303, 305, 449, 472, 614, 655, 658, 660, 666, 739, 932, 944, 946, 949, 975, 979, 980, 1018, 1094, 1101, 1102, 1103, 1139, 1145, 1146, 1148, 1156], "ing": [42, 940], "mode": [42, 101, 114, 155, 167, 169, 204, 212, 221, 224, 225, 227, 237, 240, 244, 247, 265, 268, 272, 286, 289, 303, 437, 513, 565, 738, 760, 761, 767, 800, 806, 834, 835, 836, 838, 841, 842, 845, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 868, 904, 907, 914, 928, 933, 934, 935, 943, 945, 959, 962, 965, 967, 975, 976, 1031, 1033, 1134], "binaryus": 42, "hton": [42, 931], "arpa": [42, 931], "inet": [42, 169, 931], "again": [42, 99, 114, 151, 152, 154, 157, 159, 163, 167, 168, 180, 184, 188, 190, 191, 192, 204, 213, 238, 243, 252, 258, 261, 267, 268, 285, 288, 291, 307, 340, 341, 342, 345, 346, 351, 358, 359, 408, 449, 471, 475, 485, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 560, 565, 567, 569, 582, 583, 587, 597, 676, 687, 729, 737, 738, 756, 759, 760, 761, 828, 831, 835, 836, 837, 838, 841, 842, 849, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 898, 904, 914, 921, 924, 927, 929, 931, 932, 933, 935, 940, 943, 945, 946, 955, 959, 961, 962, 965, 967, 976, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1003, 1023, 1028, 1046, 1051, 1056, 1106, 1124, 1127, 1159], "od": [42, 240], "hardwir": [42, 63, 317, 769, 930, 1023], "enter": [42, 110, 111, 123, 185, 192, 221, 226, 227, 237, 240, 249, 250, 252, 253, 270, 303, 304, 325, 340, 345, 365, 560, 583, 642, 676, 682, 693, 725, 786, 808, 824, 841, 864, 966, 967, 1041, 1093], "joerg": [42, 50, 134, 171, 185, 186, 188, 189, 191, 193, 200, 204, 208, 211, 217, 224, 227, 230, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 279, 281, 282, 286, 292, 297, 304, 308, 314, 334, 337, 432, 459, 467, 474, 508, 524, 526, 542, 580, 614, 626, 645, 655, 656, 657, 658, 660, 677, 835, 836, 843, 845, 850, 864, 880, 893, 899, 924, 961, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1035, 1057, 1061, 1084, 1101, 1114, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "huber": [42, 234, 240, 1114], "caro": [42, 224, 234, 237, 244, 247, 250, 253, 262, 265, 272, 286, 304, 314, 467, 474, 526, 542, 614, 626, 658, 660, 1022, 1024, 1044, 1095, 1097, 1101, 1103, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "johanna": [42, 224, 234, 237, 244, 247, 265, 272, 286, 304, 314, 467, 526, 542, 614, 626, 1044, 1095, 1097, 1101, 1103, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "bodi": [42, 50, 55, 110, 111, 158, 362, 363, 365, 369, 398, 408, 437, 527, 560, 569, 570, 574, 577, 647, 665, 666, 669, 728, 1010, 1140], "compil": [42, 43, 65, 103, 104, 108, 110, 111, 114, 153, 154, 163, 172, 179, 180, 181, 200, 214, 217, 230, 237, 253, 262, 265, 268, 269, 277, 286, 292, 294, 310, 314, 317, 348, 360, 373, 382, 383, 392, 395, 397, 404, 405, 414, 416, 423, 426, 429, 430, 431, 432, 433, 435, 436, 437, 439, 440, 441, 442, 444, 445, 449, 453, 456, 458, 461, 462, 465, 471, 485, 487, 492, 493, 506, 507, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 551, 557, 560, 565, 567, 570, 572, 576, 578, 582, 593, 621, 640, 647, 652, 654, 665, 666, 667, 668, 670, 672, 673, 675, 676, 678, 680, 682, 687, 690, 693, 702, 703, 705, 711, 714, 715, 717, 719, 723, 724, 758, 760, 761, 776, 777, 792, 904, 912, 983, 984, 987, 988, 989, 990, 992, 1006, 1031, 1036, 1048, 1050, 1146, 1148, 1156, 1157, 1159, 1160, 1161, 1172], "still": [42, 54, 61, 140, 146, 151, 152, 153, 154, 162, 163, 172, 173, 174, 214, 224, 230, 268, 270, 331, 351, 360, 411, 423, 449, 452, 458, 511, 533, 554, 557, 575, 576, 597, 603, 636, 651, 676, 693, 710, 714, 719, 723, 724, 726, 727, 728, 771, 776, 808, 811, 851, 865, 887, 912, 913, 914, 964, 966, 968, 979, 1001, 1009, 1012, 1018, 1031, 1034, 1037, 1061, 1097, 1120, 1128, 1148, 1156], "funni": [42, 44, 50, 100, 114, 184, 268, 470, 761, 838, 876, 882, 888, 904, 983], "temp": [42, 44, 240, 349, 723, 724, 725], "got": [42, 45, 152, 162, 214, 286, 308, 407, 679, 934, 1007], "overwritten": [42, 47, 53, 55, 56, 602, 761, 935, 1013], "suspect": [42, 154, 156], "inmem": 42, "loos": [42, 43, 188, 204, 361, 386, 433, 798], "foolishli": 42, "main": [42, 50, 63, 107, 123, 145, 154, 157, 158, 163, 191, 213, 225, 237, 238, 240, 257, 268, 276, 279, 281, 294, 296, 299, 303, 310, 340, 360, 362, 363, 365, 369, 371, 373, 374, 388, 403, 404, 405, 407, 411, 423, 430, 434, 437, 438, 441, 443, 449, 450, 452, 456, 472, 486, 491, 492, 493, 508, 509, 511, 519, 521, 523, 524, 543, 551, 554, 557, 571, 575, 576, 578, 580, 582, 583, 585, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 649, 654, 655, 656, 657, 658, 659, 660, 661, 665, 670, 680, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 707, 709, 710, 712, 715, 717, 723, 724, 726, 727, 728, 729, 732, 737, 739, 759, 769, 776, 777, 779, 808, 845, 847, 865, 912, 914, 915, 928, 930, 931, 932, 938, 939, 940, 941, 946, 949, 950, 952, 956, 961, 963, 966, 967, 972, 975, 976, 979, 982, 990, 994, 1000, 1014, 1017, 1032, 1096, 1098, 1146, 1151, 1164], "chang": [42, 45, 46, 47, 51, 55, 56, 77, 80, 114, 116, 123, 130, 131, 151, 154, 156, 157, 158, 159, 162, 163, 167, 175, 188, 204, 213, 244, 252, 347, 386, 423, 425, 429, 432, 433, 437, 447, 450, 465, 510, 516, 521, 522, 524, 525, 576, 601, 658, 712, 737, 743, 759, 761, 781, 786, 834, 843, 845, 847, 865, 874, 877, 892, 905, 907, 912, 913, 924, 928, 949, 979, 982, 997, 1013, 1037, 1046, 1085, 1096, 1098, 1101, 1124, 1128, 1142, 1159], "errorhandl": 42, "just": [42, 46, 63, 69, 84, 108, 121, 122, 127, 142, 151, 152, 153, 154, 155, 156, 158, 159, 163, 167, 174, 176, 180, 184, 191, 214, 225, 228, 253, 294, 303, 310, 328, 369, 388, 413, 416, 425, 443, 447, 452, 462, 467, 508, 511, 521, 523, 524, 525, 548, 567, 568, 569, 575, 578, 579, 580, 583, 602, 630, 637, 643, 647, 651, 665, 672, 676, 678, 679, 693, 708, 711, 725, 727, 729, 745, 759, 766, 771, 779, 781, 788, 792, 798, 800, 808, 824, 847, 868, 871, 872, 901, 905, 913, 914, 929, 931, 932, 938, 939, 941, 950, 951, 961, 968, 976, 994, 1001, 1004, 1005, 1008, 1010, 1028, 1029, 1035, 1036, 1037, 1044, 1048, 1056, 1057, 1111, 1112, 1119, 1124, 1125, 1129, 1130, 1135, 1139, 1151, 1161], "silent": [42, 65, 234, 244, 669, 912], "truncat": [42, 240, 286, 363, 384, 486, 850, 934, 1056], "faschingb": 42, "echo": [42, 153, 204, 240, 268, 326, 524, 649, 781, 790, 808, 835, 836, 839, 840, 848, 852, 862, 871, 874, 878, 887, 905, 907, 912, 913, 914, 915, 935, 937, 946, 948, 949, 961, 964, 970, 979, 1141], "success": [42, 181, 221, 227, 237, 240, 424, 453, 682, 735, 786, 790, 880, 1072], "failur": [42, 43, 221, 227, 237, 240, 252, 257, 286, 325, 433, 443, 449, 463, 521, 525, 1139, 1140, 1147, 1148, 1151], "renam": [42, 50, 57, 63, 66, 99, 112, 114, 145, 211, 258, 267, 268, 288, 289, 560, 712, 761, 776, 777, 838, 875, 888, 904, 1000, 1118], "most": [43, 44, 57, 59, 62, 65, 87, 112, 148, 151, 152, 154, 155, 158, 163, 174, 176, 182, 184, 188, 190, 212, 221, 224, 227, 228, 237, 238, 240, 244, 250, 270, 272, 286, 306, 307, 308, 325, 361, 369, 398, 401, 408, 423, 425, 431, 436, 437, 441, 442, 452, 466, 479, 522, 582, 583, 621, 673, 717, 722, 725, 731, 786, 794, 808, 813, 833, 835, 836, 839, 846, 870, 901, 905, 912, 914, 926, 934, 940, 953, 968, 976, 979, 980, 982, 1003, 1004, 1005, 1010, 1017, 1018, 1019, 1025, 1026, 1034, 1036, 1037, 1038, 1041, 1044, 1047, 1048, 1052, 1054, 1057, 1058, 1063, 1105, 1106, 1115, 1119, 1123, 1127, 1128, 1133, 1135, 1139, 1140, 1146, 1161, 1162, 1164], "somebodi": [43, 159, 167, 180, 214, 375, 432, 453, 551, 575, 627, 687, 693, 704, 735, 798, 816, 970], "concis": [43, 151, 184, 188, 238, 307, 341, 342, 452, 808, 1106], "longer": [43, 167, 970, 1031, 1159], "necessari": [43, 61, 131, 145, 153, 159, 163, 172, 181, 195, 211, 214, 271, 274, 306, 307, 365, 375, 407, 447, 449, 453, 465, 511, 570, 574, 642, 668, 669, 703, 713, 725, 737, 804, 808, 843, 912, 914, 915, 930, 968, 979, 999, 1026, 1033, 1037, 1061, 1118, 1139], "gosh": [43, 148, 386, 431, 433, 627, 710, 958, 1003, 1004, 1010, 1037], "hungarian": [43, 427], "notat": [43, 179, 219, 235, 240, 245, 286, 427, 740, 913, 1019], "userdb": [43, 47, 48, 51, 53, 54, 56, 57, 214, 216, 230, 238, 285, 296, 299, 650, 658, 659, 660, 662, 761, 1095, 1096, 1097, 1098, 1103], "bolt": [43, 214], "onto": [43, 59, 62, 112, 120, 123, 162, 173, 214, 230, 303, 489, 571, 648, 662, 725, 761, 808, 893, 905, 913, 932, 964, 987, 994], "unclear": [43, 514, 980], "semant": [43, 49, 81, 152, 176, 256, 257, 259, 277, 316, 418, 432, 433, 487, 568, 621, 627, 666, 673, 705, 721, 724, 725, 726, 727, 730, 738, 758, 760, 761, 767, 772, 800, 979, 980, 1037, 1115, 1159], "backingstor": [43, 53, 56, 761], "mangl": [43, 211, 212, 225, 242, 1031], "prefix": [43, 61, 148, 163, 221, 225, 227, 237, 240, 286, 333, 579, 609, 665, 808, 994, 996, 1003, 1025, 1026, 1051, 1058, 1141], "m_": 43, "enough": [43, 155, 159, 176, 184, 234, 244, 277, 286, 351, 375, 466, 642, 912, 925, 953, 983, 1005, 1022, 1030, 1051, 1119, 1124, 1131, 1133, 1140, 1161], "take": [43, 48, 86, 102, 110, 111, 115, 120, 122, 145, 146, 151, 152, 153, 156, 157, 158, 159, 162, 167, 169, 172, 173, 175, 180, 184, 185, 190, 191, 192, 212, 225, 230, 232, 240, 244, 250, 274, 313, 325, 326, 331, 340, 370, 407, 410, 427, 429, 436, 438, 442, 443, 447, 448, 450, 465, 466, 489, 490, 492, 493, 511, 521, 524, 537, 543, 557, 569, 576, 580, 583, 585, 623, 647, 665, 670, 677, 678, 687, 715, 717, 723, 727, 737, 751, 752, 771, 798, 808, 834, 835, 836, 912, 942, 970, 994, 1000, 1004, 1008, 1030, 1046, 1047, 1063, 1070, 1073, 1075, 1079, 1080, 1081, 1084, 1085, 1086, 1088, 1090, 1100, 1105, 1113, 1114, 1119, 1124, 1134, 1141], "dogmat": [43, 230, 358, 1119], "switch": [43, 45, 54, 58, 59, 62, 110, 111, 112, 114, 115, 116, 117, 118, 122, 123, 124, 127, 153, 157, 159, 171, 172, 213, 221, 227, 237, 238, 240, 317, 326, 327, 329, 346, 349, 352, 382, 396, 400, 402, 409, 415, 419, 422, 424, 426, 435, 439, 442, 444, 445, 449, 452, 465, 479, 513, 514, 515, 565, 626, 666, 667, 705, 747, 749, 758, 760, 761, 788, 806, 813, 822, 825, 827, 841, 845, 905, 908, 966, 999, 1156, 1160], "bool": [43, 50, 53, 55, 56, 125, 131, 195, 202, 224, 227, 230, 232, 234, 237, 240, 247, 250, 265, 269, 270, 272, 276, 286, 314, 320, 457, 459, 526, 527, 531, 533, 538, 567, 569, 583, 584, 585, 586, 587, 605, 608, 614, 623, 670, 682, 683, 684, 685, 693, 696, 700, 707, 737, 739, 741, 761, 821, 828, 966, 972, 979, 1037, 1063, 1125, 1130], "wear": [43, 149, 153], "incorrect": [43, 221, 227, 237, 240, 244, 386, 405, 1131], "metaphor": 43, "But": [43, 152, 153, 154, 157, 168, 204, 213, 303, 369, 375, 404, 407, 413, 416, 429, 431, 437, 447, 566, 567, 575, 580, 581, 582, 600, 618, 636, 637, 675, 678, 714, 723, 727, 729, 746, 760, 761, 790, 792, 808, 818, 835, 836, 890, 904, 912, 913, 914, 921, 935, 943, 945, 950, 958, 962, 985, 999, 1001, 1022, 1025, 1031, 1111, 1114, 1125], "support": [43, 78, 120, 153, 155, 159, 163, 172, 176, 188, 200, 202, 221, 224, 227, 232, 234, 237, 240, 244, 247, 262, 265, 272, 304, 314, 320, 336, 405, 429, 443, 449, 566, 567, 569, 673, 725, 729, 745, 755, 759, 764, 800, 890, 912, 913, 914, 924, 976, 982, 1010, 1018, 1025, 1031, 1048, 1061, 1111, 1113, 1128, 1146], "copy_process": 43, "law": [43, 204, 337, 380, 425, 1005, 1130], "tdd": [43, 114, 183, 188, 198, 238, 280, 296, 299, 303, 317, 359, 1139], "until": [43, 55, 97, 98, 99, 102, 105, 110, 111, 114, 119, 127, 131, 140, 142, 152, 154, 156, 158, 203, 212, 224, 243, 261, 281, 307, 397, 403, 428, 431, 525, 585, 649, 693, 699, 737, 739, 776, 796, 806, 816, 818, 824, 841, 845, 852, 868, 880, 887, 929, 930, 931, 932, 955, 969, 976, 980, 1009, 1010, 1031, 1039, 1041, 1106], "fail": [43, 44, 148, 152, 154, 162, 163, 167, 179, 184, 214, 240, 257, 289, 325, 351, 450, 453, 463, 467, 472, 474, 521, 652, 673, 675, 682, 687, 741, 759, 761, 786, 808, 887, 904, 914, 935, 940, 943, 945, 960, 961, 962, 979, 999, 1003, 1005, 1014, 1056, 1072, 1128, 1140, 1141, 1145, 1147, 1149], "suffici": [43, 116, 167, 172, 184, 326, 574, 602, 643, 647, 658, 666, 781, 890, 980, 1028, 1030, 1058, 1140], "pass": [43, 44, 48, 55, 57, 58, 63, 110, 111, 172, 180, 184, 189, 190, 191, 193, 200, 211, 213, 217, 221, 227, 230, 232, 234, 237, 240, 244, 247, 250, 252, 253, 257, 262, 265, 270, 271, 274, 282, 286, 304, 325, 351, 371, 373, 375, 386, 407, 411, 414, 416, 433, 463, 465, 470, 472, 511, 521, 522, 523, 524, 526, 527, 567, 577, 578, 584, 585, 586, 587, 596, 647, 653, 677, 707, 715, 720, 724, 727, 755, 756, 757, 774, 811, 852, 912, 938, 941, 952, 961, 984, 1001, 1003, 1004, 1005, 1006, 1018, 1019, 1020, 1022, 1028, 1046, 1048, 1056, 1058, 1094, 1123, 1139, 1146], "current": [43, 99, 109, 114, 119, 138, 140, 153, 154, 155, 157, 159, 162, 163, 167, 192, 214, 221, 227, 237, 240, 258, 265, 267, 268, 286, 288, 289, 332, 351, 354, 359, 408, 441, 449, 465, 467, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 565, 655, 659, 724, 725, 738, 746, 760, 761, 777, 808, 816, 830, 834, 835, 836, 837, 838, 841, 842, 843, 845, 851, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 868, 869, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 890, 892, 904, 913, 927, 933, 934, 935, 943, 945, 950, 952, 959, 962, 965, 966, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1004, 1009, 1030, 1033, 1041, 1044, 1165], "initi": [43, 45, 63, 110, 111, 112, 114, 125, 134, 151, 152, 155, 159, 167, 169, 179, 184, 188, 193, 199, 208, 212, 213, 223, 224, 225, 240, 244, 247, 250, 255, 265, 272, 277, 279, 282, 286, 299, 308, 314, 363, 365, 372, 416, 421, 431, 435, 439, 441, 444, 445, 467, 469, 487, 492, 493, 506, 507, 511, 513, 514, 515, 516, 517, 518, 521, 543, 557, 560, 565, 569, 570, 571, 573, 578, 580, 582, 584, 586, 601, 602, 603, 608, 621, 626, 647, 652, 654, 655, 656, 661, 662, 676, 687, 705, 713, 724, 725, 727, 739, 758, 760, 761, 766, 769, 771, 772, 779, 786, 794, 804, 808, 835, 836, 844, 869, 899, 913, 914, 929, 932, 950, 953, 966, 975, 976, 982, 1017, 1020, 1050, 1111, 1115, 1159, 1164], "mess": [43, 152, 238, 257, 259, 314, 316, 317, 667, 705, 760, 761, 1037, 1050, 1140], "roughli": [43, 65, 154, 159, 303, 436, 833, 966, 975], "took": [43, 151, 158, 188, 1071], "our": [43, 53, 59, 62, 70, 77, 104, 114, 125, 127, 131, 132, 134, 153, 154, 156, 158, 163, 167, 174, 188, 203, 204, 213, 214, 228, 230, 268, 279, 281, 317, 340, 433, 436, 447, 458, 466, 470, 475, 487, 491, 508, 519, 524, 658, 661, 781, 788, 808, 912, 913, 938, 941, 966, 976, 980, 982, 994, 997, 1000, 1006, 1103, 1111, 1114], "craftsmanship": [43, 45], "anoth": [43, 63, 78, 112, 151, 152, 153, 154, 158, 159, 162, 163, 167, 174, 176, 181, 184, 190, 191, 214, 221, 227, 230, 237, 242, 244, 250, 265, 268, 271, 274, 277, 303, 377, 395, 396, 410, 418, 430, 437, 448, 465, 466, 469, 474, 489, 492, 493, 506, 507, 511, 516, 525, 577, 580, 581, 583, 665, 670, 693, 717, 725, 729, 739, 746, 751, 752, 796, 808, 834, 835, 836, 841, 850, 852, 864, 901, 912, 914, 924, 925, 939, 953, 955, 967, 975, 980, 997, 1000, 1001, 1004, 1005, 1022, 1029, 1037, 1053, 1057, 1062, 1114, 1122, 1128, 1131, 1139, 1162], "isol": [43, 54, 182, 184, 188, 238, 252, 912, 966, 967, 1017, 1106, 1118, 1134, 1150, 1152], "wrong": [43, 78, 152, 154, 277, 386, 408, 427, 643, 729, 781, 938, 953, 967, 1001, 1005, 1017, 1036, 1100, 1111], "oracl": [43, 1115], "conduct": [43, 1139], "serious": 43, "safeti": [43, 230, 429, 432, 435, 439, 444, 445, 448, 543, 666, 736, 761, 767, 905, 979, 980, 1003], "architectur": [43, 108, 149, 159, 211, 357, 381, 408, 425, 448, 729, 769, 905, 932, 982, 983, 992, 994, 1162], "treat": [43, 81, 244, 373, 403, 850], "them": [43, 63, 66, 110, 111, 145, 149, 151, 152, 154, 157, 158, 159, 162, 163, 167, 172, 173, 174, 181, 184, 188, 189, 191, 193, 209, 211, 214, 225, 249, 252, 261, 281, 291, 303, 403, 425, 456, 467, 471, 487, 523, 584, 586, 587, 640, 647, 649, 652, 665, 715, 729, 808, 834, 840, 841, 847, 850, 875, 887, 914, 921, 966, 967, 976, 979, 982, 983, 994, 999, 1004, 1005, 1006, 1007, 1028, 1030, 1052, 1084, 1087, 1106, 1112, 1119, 1130, 1146], "carefulli": [43, 154, 167, 433, 492, 682, 1112], "independ": [43, 63, 232, 244, 375, 408, 580, 892, 906, 914, 984], "self": [43, 59, 62, 63, 152, 153, 163, 171, 172, 179, 185, 188, 190, 208, 211, 212, 224, 225, 227, 234, 237, 242, 244, 250, 253, 265, 272, 282, 286, 292, 304, 308, 441, 449, 567, 569, 673, 675, 676, 710, 723, 729, 735, 769, 800, 804, 963, 999, 1003, 1004, 1005, 1014, 1018, 1019, 1022, 1023, 1024, 1025, 1026, 1027, 1037, 1127, 1128, 1140, 1145, 1146, 1148, 1159], "valid": [43, 151, 154, 162, 240, 243, 286, 351, 406, 413, 429, 433, 592, 600, 624, 659, 673, 710, 713, 739, 821, 1036, 1037, 1051, 1052, 1068, 1073, 1127, 1128, 1134], "first": [43, 53, 61, 63, 87, 119, 142, 149, 151, 154, 155, 157, 158, 159, 163, 167, 172, 182, 184, 191, 211, 224, 225, 232, 234, 238, 240, 244, 268, 270, 281, 286, 303, 325, 331, 337, 361, 369, 392, 407, 408, 413, 421, 437, 438, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 463, 513, 554, 560, 565, 567, 573, 575, 579, 598, 599, 600, 604, 623, 626, 658, 660, 665, 687, 694, 695, 714, 715, 717, 755, 756, 757, 761, 775, 778, 785, 789, 799, 808, 810, 812, 817, 823, 826, 829, 846, 847, 848, 853, 864, 868, 874, 890, 892, 895, 899, 901, 904, 905, 912, 913, 931, 935, 955, 963, 966, 969, 975, 983, 984, 998, 999, 1000, 1001, 1005, 1006, 1010, 1017, 1019, 1023, 1031, 1032, 1033, 1034, 1036, 1037, 1046, 1047, 1050, 1056, 1057, 1063, 1086, 1095, 1101, 1103, 1112, 1114, 1122, 1140, 1146, 1159, 1164], "debug": [43, 152, 153, 181, 211, 221, 227, 237, 240, 291, 295, 311, 340, 345, 358, 408, 434, 437, 441, 442, 443, 451, 453, 454, 470, 548, 693, 710, 761, 766, 788, 790, 850, 868, 934, 958, 979, 1056, 1134, 1157, 1160, 1165, 1174], "fact": [43, 53, 152, 153, 184, 303, 405, 413, 437, 447, 808, 853, 938, 976, 1115], "hard": [43, 70, 78, 85, 114, 119, 127, 131, 142, 152, 154, 157, 158, 163, 168, 173, 180, 184, 191, 213, 228, 234, 244, 258, 267, 268, 288, 289, 303, 386, 405, 434, 447, 475, 551, 759, 761, 808, 838, 844, 847, 888, 890, 904, 907, 913, 994, 1003, 1005, 1025, 1042, 1056, 1108, 1129, 1159, 1175], "principl": [43, 53, 54, 83, 106, 132, 148, 154, 163, 278, 279, 280, 281, 448, 471, 472, 761, 808, 912, 914, 925, 985, 1114], "mayb": [43, 45, 57, 58, 61, 63, 78, 114, 119, 142, 145, 152, 153, 154, 157, 158, 167, 180, 184, 211, 227, 228, 278, 279, 280, 281, 296, 343, 346, 348, 349, 450, 469, 470, 471, 503, 556, 557, 627, 675, 757, 913, 997, 1019, 1148], "overview": [43, 98, 114, 148, 159, 176, 192, 194, 209, 213, 225, 258, 259, 267, 271, 274, 277, 279, 288, 289, 305, 354, 358, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 585, 681, 692, 705, 716, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 868, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 916, 917, 918, 919, 920, 927, 928, 931, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993, 997, 1029, 1106, 1159, 1160, 1162, 1164], "respons": [43, 53, 56, 89, 127, 132, 137, 151, 162, 167, 215, 447, 489, 503, 511, 569, 577, 725, 761, 804, 816, 913, 914, 937, 966, 967, 1033, 1113, 1164], "googl": [44, 147, 152, 159, 161, 173, 176, 179, 180, 184, 185, 188, 209, 214, 360, 522, 723, 724, 897, 1031, 1106, 1146, 1148, 1177], "cloner": 44, "init": [44, 134, 151, 153, 169, 173, 250, 257, 259, 371, 398, 496, 497, 519, 522, 550, 567, 585, 603, 763, 771, 776, 796, 798, 810, 844, 896, 980], "cpp": [44, 50, 97, 112, 114, 115, 116, 117, 118, 119, 122, 123, 163, 178, 188, 213, 214, 230, 257, 268, 277, 279, 360, 451, 452, 453, 458, 465, 466, 467, 469, 470, 472, 474, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 505, 506, 507, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 567, 568, 569, 570, 571, 575, 576, 578, 580, 581, 582, 583, 584, 585, 586, 587, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 645, 649, 654, 655, 656, 657, 658, 659, 660, 661, 665, 670, 672, 675, 676, 677, 680, 682, 687, 693, 702, 703, 704, 707, 708, 709, 710, 711, 712, 714, 715, 717, 719, 723, 724, 725, 726, 727, 728, 737, 739, 741, 745, 747, 749, 751, 755, 756, 757, 759, 912, 942, 946, 949, 961, 963, 966, 982], "assert_eq": [44, 465, 467, 470, 474, 487, 514, 515, 521, 524, 525, 526, 527, 528, 529, 531, 533, 534, 535, 538, 539, 540, 541, 542, 560, 567, 568, 569, 580, 581, 583, 584, 585, 586, 587, 645, 670, 672, 675, 676, 677, 708, 719, 723, 724, 725, 726, 728, 741, 755, 756, 757, 759, 1146, 1151], "test_f": [44, 489, 524, 525, 759, 1151], "simplefixtur": 44, "public": [44, 55, 101, 102, 107, 114, 119, 123, 127, 149, 162, 167, 204, 212, 225, 253, 258, 267, 268, 276, 282, 288, 289, 337, 340, 345, 421, 457, 458, 459, 461, 466, 468, 472, 474, 477, 478, 479, 489, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 511, 524, 525, 537, 551, 557, 566, 567, 568, 570, 571, 572, 574, 575, 576, 577, 578, 579, 581, 582, 583, 590, 593, 608, 609, 626, 636, 637, 639, 640, 642, 643, 651, 652, 657, 659, 660, 665, 668, 669, 670, 671, 672, 675, 676, 678, 687, 689, 690, 691, 693, 695, 696, 699, 700, 701, 702, 703, 704, 708, 709, 710, 712, 723, 724, 725, 728, 729, 737, 739, 745, 747, 749, 751, 759, 761, 772, 776, 837, 838, 843, 857, 863, 904, 916, 917, 918, 919, 920, 925, 1026, 1031, 1151], "myfirstsuit": 44, "test_find": 44, "wtf": [44, 53, 114, 190, 221, 226, 227, 230, 232, 250, 289, 560, 575, 761, 904, 929, 933, 945, 979, 981, 1004], "tallk": 44, "morph": [44, 63, 179, 188, 213, 214, 279, 545, 557, 560, 563, 569, 665, 717, 810, 1008], "fixtur": [44, 179, 188, 280, 281, 296, 302, 303, 306, 307, 317, 348, 478, 489, 525, 761, 1144, 1177], "trivial": [44, 152, 163, 294, 310, 387, 403, 560, 577, 673, 678, 729, 813, 821, 914, 930, 966, 1161], "tempfil": [44, 1003], "crap": [44, 153, 228, 270, 433, 449, 452, 627, 666, 746, 914, 979], "null": [44, 63, 153, 154, 155, 170, 195, 211, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 362, 375, 382, 410, 421, 431, 436, 449, 524, 580, 679, 766, 772, 779, 804, 839, 848, 850, 851, 868, 883, 890, 932, 937, 944, 951, 953, 955, 957, 963, 966, 967, 972, 975, 979], "deriv": [44, 107, 115, 131, 174, 228, 240, 307, 327, 351, 525, 543, 569, 639, 640, 642, 643, 704, 712, 745, 1005, 1018, 1151], "seminar": [45, 135], "psycho": 45, "rule": [45, 153, 159, 184, 234, 240, 244, 277, 316, 348, 363, 382, 384, 385, 386, 401, 407, 425, 436, 437, 438, 440, 448, 450, 475, 487, 492, 593, 639, 673, 676, 680, 682, 702, 728, 729, 847, 868, 929, 1005, 1028, 1036, 1037, 1047, 1056, 1119, 1166], "dont": [45, 244, 447, 781], "scenario": [45, 154, 167, 176, 184, 188, 370, 491, 643, 737, 967, 968, 975], "robert": [45, 475], "martin": [45, 447, 448, 475], "someon": [45, 184, 225, 240, 247, 250, 281, 347, 582, 737, 800, 865, 871, 892, 914, 938, 982, 1030], "mistak": [45, 152, 158, 159, 209, 225, 249, 912, 1106, 1119], "kill": [45, 153, 154, 230, 868, 922, 951, 970, 979, 980, 1009, 1165], "peopl": [45, 63, 149, 152, 154, 156, 157, 159, 167, 172, 184, 213, 247, 358, 447, 475, 493, 682, 808, 847, 1014, 1030, 1058, 1113, 1115], "polit": [45, 715], "thei": [45, 55, 65, 78, 112, 140, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 172, 174, 176, 180, 192, 214, 221, 225, 227, 230, 237, 240, 244, 286, 294, 310, 351, 377, 383, 403, 431, 434, 437, 443, 447, 448, 452, 461, 466, 467, 487, 492, 493, 521, 523, 543, 560, 570, 575, 601, 605, 637, 665, 666, 669, 676, 677, 724, 725, 731, 767, 781, 800, 808, 833, 843, 847, 869, 905, 912, 913, 914, 925, 950, 979, 980, 985, 1000, 1010, 1018, 1025, 1028, 1078, 1101, 1108, 1111, 1112, 1119, 1122, 1125, 1139, 1145, 1161, 1164], "regul": 45, "ethic": 45, "everi": [45, 53, 59, 62, 63, 78, 89, 110, 111, 120, 145, 152, 158, 188, 211, 240, 281, 372, 429, 443, 447, 470, 475, 491, 510, 511, 580, 590, 642, 664, 666, 671, 759, 779, 792, 808, 833, 841, 843, 845, 846, 862, 869, 871, 913, 928, 963, 966, 979, 980, 999, 1001, 1010, 1046, 1064, 1075, 1086, 1112, 1146, 1161], "particular": [45, 112, 151, 163, 184, 416, 441, 467, 491, 543, 759, 854, 1029, 1030], "electr": 45, "seem": [45, 140, 151, 153, 154, 173, 278, 466, 912, 914, 979, 1161], "adher": [45, 850], "immedi": [45, 63, 152, 153, 158, 159, 230, 271, 274, 277, 279, 326, 408, 618, 732, 737, 790, 800, 804, 905, 955, 964, 967, 969, 1050, 1146], "survei": [45, 173], "had": [45, 112, 151, 153, 154, 158, 159, 163, 167, 172, 184, 188, 217, 219, 238, 377, 416, 487, 554, 566, 651, 665, 802, 835, 836, 847, 872, 912, 925, 996, 1030, 1037, 1056, 1125, 1129], "life": [45, 125, 131, 148, 159, 164, 167, 170, 172, 180, 572, 702, 723, 738, 760, 761, 808, 847, 904, 945, 959, 965, 1031, 1052, 1109], "accomplish": [45, 57, 78, 192, 278, 280, 281, 433, 448, 912], "befor": [45, 115, 119, 127, 131, 148, 152, 153, 155, 156, 157, 159, 162, 167, 172, 188, 191, 195, 213, 240, 256, 257, 259, 280, 281, 286, 302, 303, 304, 307, 314, 316, 365, 373, 374, 383, 403, 452, 524, 554, 560, 599, 625, 640, 666, 678, 693, 705, 710, 711, 721, 725, 726, 731, 732, 737, 739, 740, 759, 760, 761, 772, 786, 796, 802, 808, 834, 870, 905, 914, 953, 968, 970, 982, 1005, 1010, 1028, 1071, 1096, 1098, 1102, 1111, 1124, 1128, 1131, 1140, 1141, 1147], "formal": [45, 162, 176, 213, 214, 303, 306, 514, 1140], "googletest": [45, 65, 97, 179, 181, 182, 214, 257, 259, 294, 310, 463, 472, 508, 521, 523, 524, 585, 723, 724, 725, 759, 761, 762, 1146, 1148, 1161], "messag": [45, 119, 147, 149, 157, 158, 167, 170, 176, 182, 190, 191, 217, 221, 224, 227, 237, 240, 247, 250, 265, 272, 280, 281, 282, 286, 308, 314, 328, 340, 345, 448, 451, 453, 472, 577, 593, 652, 682, 687, 707, 709, 710, 719, 729, 737, 761, 783, 808, 841, 845, 850, 904, 926, 945, 955, 959, 1034, 1048, 1058, 1100, 1141, 1145, 1147, 1173, 1174, 1175], "saniti": [45, 439, 444, 445, 448, 452, 456, 582, 667, 705, 758, 760, 761], "perform": [45, 152, 158, 167, 169, 191, 210, 211, 240, 281, 308, 346, 387, 390, 413, 420, 425, 433, 436, 437, 440, 443, 444, 445, 451, 560, 600, 618, 621, 643, 664, 678, 720, 761, 792, 970, 987, 997, 998, 1056, 1139, 1157, 1160], "delici": [45, 53], "fearlessli": [45, 53], "backlog": [45, 46, 47, 51, 55, 56, 761], "Or": [45, 46, 47, 51, 55, 56, 115, 131, 152, 259, 316, 432, 448, 551, 679, 705, 716, 760, 761, 899, 925, 935, 961, 1036, 1050, 1127, 1131], "Will": [45, 46, 47, 51, 55, 56, 152, 185, 244, 326, 761, 769, 982, 1048, 1134, 1148, 1154, 1173], "high": [46, 53, 115, 173, 213, 227, 244, 447, 475, 498, 511, 515, 519, 723, 725, 740, 790, 802, 806, 818, 827], "speed": [46, 53, 142, 147, 152, 221, 225, 227, 237, 240, 244, 308, 438, 728, 802, 808, 968, 970, 1110, 1111], "hype": [46, 746], "we": [46, 47, 50, 51, 55, 56, 59, 61, 62, 68, 115, 119, 123, 127, 130, 131, 132, 134, 142, 151, 152, 154, 155, 156, 157, 158, 159, 163, 167, 168, 171, 172, 173, 174, 175, 176, 180, 181, 184, 188, 189, 190, 191, 192, 194, 203, 204, 211, 212, 213, 214, 218, 221, 224, 225, 227, 228, 230, 257, 259, 261, 268, 271, 274, 276, 278, 280, 281, 299, 303, 306, 307, 326, 343, 346, 347, 351, 362, 377, 388, 395, 403, 416, 425, 427, 431, 433, 436, 441, 448, 450, 458, 459, 465, 466, 467, 470, 472, 474, 477, 486, 487, 491, 492, 508, 509, 510, 511, 519, 522, 523, 524, 554, 560, 569, 581, 605, 636, 640, 657, 658, 659, 660, 661, 665, 676, 687, 693, 719, 720, 725, 728, 739, 743, 761, 769, 772, 776, 777, 781, 783, 786, 804, 808, 810, 816, 824, 835, 836, 850, 851, 865, 871, 872, 887, 905, 912, 913, 914, 921, 925, 930, 931, 932, 938, 939, 940, 941, 953, 966, 975, 992, 996, 997, 998, 1006, 1025, 1030, 1056, 1058, 1062, 1064, 1093, 1100, 1101, 1102, 1106, 1111, 1112, 1113, 1114, 1121, 1122, 1128, 1131, 1147, 1148, 1164], "did": [46, 153, 154, 156, 158, 159, 162, 163, 171, 180, 184, 191, 276, 427, 431, 447, 472, 510, 658, 727, 729, 756, 781, 786, 808, 847, 905, 916, 925, 1006, 1159], "consequ": [46, 151, 152, 271, 274, 407, 428, 431, 432, 475, 938, 1025, 1125, 1159], "unsign": [46, 127, 225, 230, 379, 381, 389, 418, 421, 425, 433, 479, 494, 509, 523, 524, 525, 575, 645, 646, 655, 703, 737, 739, 745, 747, 749, 751, 759, 764, 767, 772, 779, 788, 790, 792, 798, 804, 813, 818, 822, 934, 975, 976, 1156, 1157], "introduc": [46, 58, 78, 97, 213, 230, 238, 279, 294, 310, 429, 437, 449, 465, 470, 492, 510, 511, 512, 513, 543, 565, 651, 761, 827, 979, 1008, 1034, 1048, 1113, 1161], "throw": [46, 119, 156, 159, 230, 467, 491, 492, 496, 502, 503, 505, 506, 507, 525, 543, 621, 659, 701, 722, 725, 736, 739, 1151], "notfounderror": 46, "cbda1e98040d084c31ff6e83f04d78dbebf5c1c2": 46, "cluster_clean_cod": [46, 47, 51, 53, 55, 56, 761], "cluster_clean_code_bug": [46, 47, 53, 55, 56, 761], "clean_code_bugs_find_error": [46, 47, 53, 761], "twice": [47, 53, 55, 56, 57, 152, 369, 408, 430, 450, 673, 676, 735, 761, 828, 868, 905, 921, 953, 998], "crash": [47, 53, 63, 110, 111, 150, 152, 153, 154, 157, 209, 211, 221, 227, 237, 240, 358, 398, 405, 491, 575, 602, 647, 723, 761, 966, 980, 1106], "found": [47, 53, 108, 109, 120, 139, 148, 151, 163, 172, 184, 217, 221, 224, 227, 230, 232, 234, 237, 240, 250, 265, 272, 286, 294, 304, 308, 310, 314, 326, 340, 434, 443, 453, 455, 463, 501, 505, 506, 507, 513, 524, 526, 530, 531, 532, 560, 565, 605, 608, 611, 621, 625, 626, 650, 658, 660, 662, 670, 756, 761, 779, 840, 843, 850, 897, 914, 982, 985, 994, 999, 1005, 1013, 1022, 1052, 1084, 1110, 1113, 1149, 1161], "clean_code_bugs_overwrite_store_content_on_read": [47, 53, 55, 56, 761], "clean_code_bugs_overwrite_existing_fil": [47, 53, 55, 56, 761], "explicitli": [48, 153, 154, 158, 184, 224, 234, 244, 277, 385, 386, 404, 442, 448, 492, 569, 572, 580, 621, 670, 673, 676, 729, 741, 839, 967, 976, 1004, 1014, 1033, 1119, 1127], "solut": [48, 65, 114, 157, 159, 167, 168, 176, 178, 184, 203, 213, 214, 219, 222, 225, 230, 235, 241, 257, 260, 271, 280, 281, 285, 291, 316, 317, 407, 408, 411, 430, 433, 451, 464, 491, 513, 543, 565, 571, 572, 592, 629, 631, 633, 640, 654, 662, 677, 682, 687, 713, 729, 754, 760, 761, 869, 870, 887, 950, 955, 968, 969, 985, 1010, 1046, 1077, 1089, 1119, 1162], "force_overwrit": 48, "descriptor": [48, 152, 176, 208, 240, 244, 265, 286, 304, 347, 572, 767, 788, 824, 844, 850, 851, 908, 930, 931, 932, 976], "mani": [49, 53, 56, 59, 62, 89, 132, 152, 154, 158, 159, 176, 181, 184, 200, 211, 232, 242, 247, 268, 272, 276, 277, 279, 285, 304, 326, 347, 351, 375, 387, 389, 398, 413, 427, 429, 434, 449, 450, 462, 463, 466, 469, 474, 477, 516, 543, 590, 600, 619, 621, 640, 652, 664, 665, 673, 693, 714, 719, 727, 735, 761, 767, 769, 786, 794, 800, 804, 808, 834, 844, 845, 847, 848, 901, 913, 931, 932, 951, 961, 964, 979, 980, 982, 992, 1001, 1003, 1005, 1010, 1019, 1029, 1034, 1037, 1040, 1044, 1052, 1056, 1058, 1062, 1111, 1113, 1114, 1115, 1119, 1128, 1146, 1159, 1162], "overwrit": [49, 109, 491, 492, 505, 513, 530, 532, 565, 575, 621, 623, 652, 761, 808, 870, 875, 887, 939, 1054], "present": [49, 61, 132, 149, 155, 159, 163, 167, 172, 185, 240, 286, 294, 303, 310, 459, 571, 804, 808, 843, 914, 925, 944, 1005, 1088, 1128, 1161], "continu": [50, 53, 63, 89, 99, 106, 110, 111, 112, 115, 132, 145, 153, 162, 163, 175, 184, 185, 188, 197, 202, 203, 204, 233, 238, 244, 250, 260, 337, 401, 402, 408, 409, 415, 419, 422, 426, 431, 435, 439, 444, 445, 447, 449, 452, 453, 470, 584, 586, 587, 647, 667, 675, 705, 756, 757, 758, 759, 760, 761, 905, 907, 911, 917, 940, 941, 979, 980, 985, 996, 1003, 1010, 1014, 1047, 1050, 1068, 1113, 1128, 1146], "expected_cont": 50, "fill": [50, 154, 155, 167, 189, 240, 241, 286, 389, 665, 669, 714, 724, 779, 804, 808, 874, 931, 1008], "strategi": [50, 224, 423, 913, 1063, 1139], "hurri": [50, 408], "read_fil": 50, "compar": [50, 114, 212, 214, 225, 240, 281, 286, 386, 428, 442, 443, 452, 521, 567, 724, 916, 951, 1048, 1053, 1077, 1081, 1111], "binaryfil": 50, "doesn": [50, 154, 157, 265, 314, 403, 405, 408, 423, 437, 719, 767, 828, 835, 836, 870, 874, 887, 983, 994, 1050], "belong": [50, 181, 184, 375, 395, 421, 448, 543, 567, 581, 583, 853, 861, 940, 1021, 1035], "test_write_csv": 50, "test_read_csv": [50, 1103], "ah": [50, 59, 62, 158, 174, 211, 213, 227, 622, 982, 1058, 1122], "altern": [51, 53, 55, 56, 63, 65, 68, 78, 83, 131, 151, 152, 159, 185, 204, 230, 291, 382, 459, 567, 576, 590, 601, 604, 673, 722, 728, 749, 761, 808, 847, 868, 908, 912, 914, 926, 934, 940, 951, 957, 975, 982, 1030, 1050, 1053, 1127, 1131, 1134, 1141, 1151, 1154, 1170, 1171, 1173, 1176], "cluster_clean_code_featur": [51, 53, 55, 56, 761], "clean_code_features_other_index": [51, 53, 761], "clean_code_features_csv": [51, 53, 55, 56, 761], "establish": [53, 71, 192, 204, 268, 280, 281, 302, 306, 337, 447, 808, 966, 1162], "were": [53, 112, 131, 145, 152, 154, 158, 167, 184, 188, 358, 407, 463, 566, 575, 576, 602, 669, 708, 835, 836, 914, 941, 996, 1004, 1028, 1037, 1056, 1061, 1119, 1125, 1159], "occas": [53, 89, 153, 724], "ourselv": [53, 184, 905], "gather": [53, 159, 191, 280, 281, 302, 303, 306, 325, 441, 443, 1090], "wreak": [53, 110, 111, 423, 647], "havoc": [53, 110, 111, 423, 647], "shoehorn": 53, "violat": [53, 132, 152, 447, 475, 703, 725, 822, 966, 980], "nearli": [53, 184, 190, 425, 958], "solid": [53, 148, 164, 277, 279, 448, 475, 1157, 1158, 1172, 1173, 1175, 1176], "chanc": [53, 152, 154, 189, 427, 447, 763, 808, 933, 1164], "cluster_clean_code_refactor": [53, 55, 56, 761], "clean_code_refactoring_backingstore_monolith": [53, 55, 56, 761], "clean_code_refactoring_store_enum_switch": [53, 55, 56, 761], "clean_code_refactoring_backingstore_interfac": [53, 56, 761], "clean_code_refactoring_pass_store_in_ctor": [53, 56, 761], "now": [54, 61, 112, 151, 152, 153, 154, 155, 156, 158, 159, 167, 171, 180, 190, 200, 217, 224, 230, 234, 244, 252, 272, 276, 297, 326, 327, 340, 403, 416, 431, 436, 461, 467, 474, 487, 492, 514, 515, 522, 581, 605, 608, 614, 618, 626, 669, 720, 725, 740, 741, 766, 786, 808, 816, 818, 824, 840, 843, 905, 912, 913, 914, 940, 941, 949, 994, 996, 1001, 1004, 1019, 1022, 1046, 1101, 1111, 1113, 1131, 1140, 1159], "violatin": 54, "respect": [54, 59, 62, 65, 145, 153, 167, 214, 276, 278, 332, 379, 427, 447, 492, 510, 569, 576, 639, 673, 724, 725, 839, 847, 912, 966, 980, 1025], "mainli": [55, 152, 188, 277, 286, 621, 759, 948, 1008], "bugfix": 55, "ongo": [55, 112, 968], "scene": [55, 982, 1025], "pleas": [55, 114, 153, 154, 157, 159, 163, 180, 184, 188, 189, 191, 192, 193, 194, 204, 230, 257, 259, 268, 289, 331, 373, 407, 437, 525, 582, 584, 585, 586, 587, 847, 905, 913, 914, 929, 958, 976, 984, 985, 1030, 1132], "wait": [55, 72, 73, 74, 78, 83, 87, 127, 131, 141, 152, 153, 154, 155, 156, 158, 199, 303, 326, 637, 665, 732, 740, 761, 785, 800, 806, 810, 813, 816, 818, 841, 844, 852, 904, 905, 931, 933, 937, 949, 961, 964, 967, 974, 976, 979, 1054, 1122, 1146, 1164, 1172], "unnecessarili": [55, 69, 976], "conflict": [55, 75, 77, 112, 115, 131, 279, 280, 281, 302, 373, 424, 576, 666, 738, 760, 761, 764, 767, 777, 904, 913, 945, 953, 959, 979, 1013, 1142], "rip": [55, 155, 449, 508, 966, 1121], "detail": [55, 84, 149, 154, 157, 162, 166, 167, 179, 185, 199, 210, 211, 213, 214, 221, 227, 237, 241, 242, 244, 248, 270, 281, 320, 340, 447, 452, 475, 512, 522, 524, 572, 724, 786, 868, 912, 914, 968, 1000, 1108, 1148, 1157], "instanc": [55, 57, 107, 110, 111, 122, 159, 200, 208, 212, 221, 224, 225, 232, 234, 239, 242, 244, 247, 262, 265, 272, 286, 304, 314, 320, 336, 351, 465, 470, 478, 489, 491, 492, 493, 505, 506, 507, 510, 523, 636, 647, 654, 659, 707, 710, 769, 774, 777, 975, 976, 1003, 1005, 1019, 1020, 1022, 1025, 1048], "its": [55, 57, 59, 62, 65, 84, 87, 108, 110, 111, 127, 146, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 169, 174, 176, 180, 181, 182, 184, 204, 211, 212, 214, 221, 225, 227, 237, 240, 244, 253, 268, 270, 271, 274, 277, 279, 286, 303, 331, 342, 373, 395, 406, 408, 423, 425, 427, 434, 436, 458, 466, 470, 489, 492, 493, 508, 509, 510, 511, 516, 521, 524, 566, 567, 568, 570, 572, 577, 607, 647, 665, 677, 687, 713, 732, 759, 772, 781, 786, 808, 813, 835, 836, 839, 841, 845, 850, 855, 856, 868, 869, 890, 892, 913, 916, 917, 924, 934, 935, 940, 955, 961, 964, 966, 967, 968, 976, 998, 1003, 1005, 1008, 1013, 1018, 1022, 1028, 1036, 1046, 1048, 1053, 1057, 1063, 1111, 1113, 1132, 1139, 1141, 1159, 1161, 1162, 1164], "replac": [55, 63, 97, 119, 157, 202, 213, 221, 224, 225, 227, 228, 230, 237, 240, 272, 286, 303, 325, 367, 382, 423, 449, 512, 513, 565, 598, 599, 658, 665, 693, 710, 724, 739, 746, 759, 761, 811, 914, 954, 966, 980, 1004], "symptom": [57, 162], "mismatch": [57, 549], "onc": [57, 115, 151, 153, 154, 157, 158, 159, 162, 167, 172, 173, 325, 343, 365, 390, 399, 407, 437, 450, 466, 467, 468, 472, 477, 489, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 522, 524, 582, 600, 601, 655, 696, 707, 717, 735, 745, 747, 749, 750, 751, 752, 759, 769, 772, 804, 905, 914, 956, 979, 980, 999, 1005, 1006, 1007, 1041, 1062, 1071, 1084, 1115, 1118, 1141], "sync": [57, 132, 153, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 423, 427, 808, 899], "imho": [57, 704], "forbidden": [58, 425], "accord": [58, 63, 114, 127, 151, 154, 240, 656, 852, 868, 901, 905, 913, 914], "uncl": [58, 358], "bob": [58, 240, 358, 447], "enum": [58, 213, 214, 317, 382, 397, 435, 439, 444, 445, 449, 452, 667, 705, 747, 749, 758, 760, 761, 767, 769, 777, 966, 1159], "born": [59, 62, 846, 1031], "bound": [59, 62, 63, 230, 234, 265, 277, 292, 424, 434, 439, 444, 445, 549, 577, 579, 581, 599, 678, 761, 846, 850, 906, 967, 970, 1023, 1044, 1067, 1127], "employe": [59, 62, 179, 211, 1022], "year": [59, 62, 151, 152, 153, 154, 158, 163, 184, 224, 230, 272, 276, 447, 566, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 664, 711, 761, 1063], "emploi": [59, 62, 153, 163, 188, 408, 808], "configur": [59, 61, 62, 63, 68, 73, 78, 82, 84, 85, 86, 104, 112, 114, 119, 125, 127, 131, 132, 137, 138, 151, 153, 154, 157, 159, 182, 192, 258, 267, 268, 277, 288, 289, 295, 296, 299, 303, 311, 340, 346, 450, 454, 455, 457, 458, 470, 472, 477, 514, 515, 516, 524, 761, 781, 788, 808, 822, 838, 839, 840, 843, 852, 888, 901, 904, 905, 913, 925, 932, 946, 948, 976, 983, 984, 996, 1006, 1076, 1114, 1118, 1127, 1134, 1162], "pattern": [59, 62, 82, 106, 132, 148, 149, 165, 168, 187, 188, 214, 217, 240, 279, 348, 357, 359, 447, 464, 465, 466, 467, 469, 470, 472, 474, 475, 476, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 513, 565, 728, 729, 761, 762, 868, 897, 964, 1011, 1012, 1146, 1166], "led": [59, 62, 72, 73, 74, 78, 91, 116, 117, 118, 123, 124, 132, 170, 192, 268, 326, 349, 514, 761, 767, 905, 913], "hei": [59, 62, 152, 192, 244, 582, 583, 843, 929, 1051, 1119], "reinvent": [59, 62, 212, 261, 1106], "wheel": [59, 62, 115, 136, 148, 810, 845, 940, 1134], "admit": [59, 62, 159], "notori": [59, 62], "fun": [59, 62, 121, 152, 157, 210, 212, 248, 277, 358, 471, 708, 808, 847, 905, 912, 913, 1010, 1022, 1034, 1050, 1105, 1106, 1133, 1140, 1159], "live": [59, 62, 70, 97, 98, 114, 119, 149, 153, 157, 175, 179, 184, 188, 193, 204, 212, 213, 214, 215, 228, 230, 238, 249, 256, 257, 258, 259, 261, 267, 269, 270, 277, 278, 279, 280, 281, 285, 288, 289, 303, 307, 316, 317, 340, 344, 348, 349, 351, 358, 359, 360, 420, 437, 449, 450, 455, 471, 476, 485, 487, 489, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 543, 600, 601, 621, 663, 674, 705, 706, 707, 724, 738, 759, 760, 761, 762, 772, 808, 838, 841, 842, 847, 863, 864, 904, 945, 1013, 1030, 1063, 1106, 1132, 1140, 1158, 1159, 1173], "session": [59, 62, 148, 157, 159, 177, 184, 188, 192, 196, 221, 227, 237, 240, 252, 256, 257, 259, 270, 278, 346, 810, 839, 840, 922, 933, 1094, 1106, 1132, 1139, 1169], "simpl": [59, 62, 72, 74, 75, 78, 86, 112, 139, 148, 152, 156, 157, 159, 162, 163, 167, 172, 176, 179, 180, 184, 188, 191, 214, 230, 232, 234, 240, 244, 296, 299, 361, 362, 369, 408, 410, 424, 427, 434, 449, 450, 451, 452, 453, 457, 458, 460, 470, 568, 575, 576, 614, 642, 650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 682, 715, 725, 734, 761, 767, 781, 788, 800, 808, 810, 818, 844, 897, 905, 906, 912, 913, 942, 948, 950, 953, 968, 976, 979, 983, 984, 985, 990, 1006, 1010, 1030, 1031, 1039, 1058, 1106, 1112, 1114, 1130, 1145, 1146], "thu": [59, 62, 152, 153, 154, 190, 392, 467, 781, 786, 828, 835, 938, 1118, 1164], "techniqu": [59, 62, 69, 70, 71, 427, 437, 523, 647, 908], "usag": [59, 62, 65, 80, 106, 115, 132, 154, 159, 204, 214, 225, 238, 252, 277, 279, 280, 302, 317, 326, 346, 358, 408, 433, 434, 441, 452, 456, 462, 471, 472, 485, 511, 512, 513, 565, 575, 582, 583, 601, 636, 638, 639, 642, 643, 662, 664, 676, 687, 693, 707, 714, 746, 760, 761, 810, 845, 868, 897, 900, 915, 946, 949, 964, 1000, 1005, 1008, 1058, 1100, 1102, 1134, 1141, 1148, 1159], "At": [59, 62, 127, 152, 153, 156, 159, 163, 167, 184, 188, 214, 224, 228, 230, 264, 372, 401, 405, 437, 465, 723, 800, 1001, 1018, 1106], "flow": [59, 62, 153, 184, 189, 191, 192, 193, 194, 198, 203, 204, 219, 222, 235, 246, 341, 342, 343, 345, 381, 401, 409, 415, 419, 422, 426, 435, 437, 439, 444, 445, 667, 705, 714, 758, 760, 761, 979, 1014, 1039, 1041, 1048, 1125, 1160], "event": [59, 62, 63, 86, 122, 126, 155, 176, 212, 221, 225, 227, 237, 240, 268, 280, 281, 443, 693, 737, 744, 748, 761, 776, 777, 785, 810, 811, 823, 824, 825, 826, 829, 841, 845, 904, 908, 933, 945, 948, 964, 967, 968, 972, 976, 1017, 1122, 1131, 1164, 1173, 1175, 1176], "save": [59, 62, 63, 85, 148, 151, 152, 164, 172, 175, 221, 227, 237, 240, 271, 274, 277, 389, 391, 665, 696, 699, 700, 701, 852, 870, 924, 933, 970, 999, 1003, 1009, 1019, 1052, 1111, 1141, 1159], "schedul": [59, 62, 63, 65, 99, 110, 111, 114, 126, 152, 169, 192, 194, 258, 267, 268, 288, 353, 354, 465, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 790, 800, 806, 813, 828, 835, 836, 837, 838, 842, 844, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 950, 959, 961, 962, 966, 970, 984, 986, 987, 988, 989, 990, 991, 992, 993, 1118, 1154, 1164, 1165, 1175], "overhead": [59, 62, 437, 443, 554, 563, 728, 729], "usual": [59, 62, 84, 108, 114, 152, 153, 159, 162, 167, 172, 182, 184, 244, 278, 294, 310, 363, 403, 404, 430, 443, 447, 453, 455, 460, 465, 479, 487, 493, 522, 567, 583, 624, 678, 713, 714, 728, 737, 740, 759, 767, 779, 781, 786, 796, 802, 804, 808, 822, 824, 828, 844, 846, 850, 869, 905, 906, 913, 934, 948, 966, 967, 982, 983, 984, 985, 994, 1003, 1004, 1005, 1006, 1010, 1013, 1016, 1017, 1023, 1025, 1027, 1028, 1030, 1033, 1039, 1044, 1105, 1112, 1113, 1119, 1141, 1142, 1148, 1161], "exhibit": [59, 62, 230, 659, 914, 935, 940], "glitch": [59, 62, 154, 159, 913, 914], "caus": [59, 62, 152, 155, 167, 221, 227, 237, 240, 244, 914, 961, 966, 1128], "hiccup": [59, 62, 159, 270, 984], "twist": [59, 62, 792], "amazingli": [59, 62, 852], "submiss": 60, "submit": [60, 109, 802], "linuxtag": [60, 191, 307, 910], "pure": [61, 69, 122, 159, 340, 403, 476, 639, 665, 704, 729, 847, 1037, 1159], "local": [61, 152, 153, 155, 158, 167, 180, 184, 185, 192, 193, 197, 213, 214, 228, 230, 231, 237, 240, 243, 244, 265, 268, 280, 282, 291, 294, 302, 303, 306, 307, 310, 312, 313, 318, 320, 324, 326, 340, 373, 377, 401, 403, 420, 458, 462, 471, 485, 487, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 565, 572, 590, 673, 676, 678, 707, 761, 781, 808, 813, 835, 836, 840, 890, 904, 912, 914, 915, 916, 917, 923, 925, 931, 942, 950, 992, 994, 1001, 1004, 1049, 1134, 1161, 1162, 1175], "easili": [61, 132, 146, 153, 159, 326, 382, 401, 434, 447, 466, 639, 715, 790, 806, 934, 964, 970, 1000, 1013, 1045, 1159], "guess": [61, 234, 244, 270, 427, 432, 682, 921, 976], "autotool": [61, 163], "portabl": [61, 176, 375, 437, 732, 950, 957, 976, 980, 1037, 1115], "archiv": [61, 103, 104, 114, 163, 164, 192, 194, 258, 267, 268, 288, 443, 456, 462, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 761, 838, 868, 904, 984, 987, 989, 990, 992, 993, 994, 999, 1003, 1134], "m4": 61, "macro": [61, 230, 295, 311, 367, 378, 381, 393, 402, 409, 415, 419, 422, 426, 429, 435, 439, 444, 445, 453, 454, 458, 459, 462, 667, 705, 711, 758, 760, 761, 777, 796, 810, 850, 928, 934, 940, 950, 984, 1056, 1146, 1151, 1156, 1160], "stock": [61, 224, 225, 1062, 1063], "sudo": [61, 101, 114, 122, 148, 155, 157, 159, 167, 181, 192, 230, 258, 267, 268, 277, 279, 288, 289, 453, 460, 537, 761, 838, 863, 865, 904, 905, 914, 968, 996, 1141], "pwd": [61, 109, 112, 180, 257, 259, 340, 345, 456, 522, 524, 585, 783, 786, 835, 836, 845, 890, 892, 905, 983, 984, 997, 999, 1139], "pub": [61, 155, 192, 781, 921, 1100], "lib": [61, 114, 148, 157, 163, 191, 211, 214, 224, 240, 247, 250, 265, 272, 279, 282, 286, 308, 314, 320, 455, 521, 786, 798, 804, 808, 899, 914, 979, 983, 985, 994, 996, 1134, 1141], "remot": [61, 102, 104, 155, 157, 159, 167, 204, 213, 260, 326, 464, 485, 499, 513, 565, 761, 781, 808, 809, 813, 834, 837, 904, 913, 915, 918, 919, 920, 923, 931, 994, 1006, 1162, 1163, 1170], "v0": 61, "v1": [61, 270, 472, 487, 669], "v2": [61, 63, 159, 179, 270, 472, 487, 669], "autotooleri": 61, "autogen": 61, "step": [61, 63, 151, 152, 158, 159, 163, 167, 188, 227, 230, 231, 257, 259, 272, 276, 281, 304, 363, 365, 367, 383, 407, 449, 452, 469, 512, 522, 560, 585, 590, 723, 808, 835, 836, 982, 990, 1127, 1128, 1140], "noconfigur": 61, "suppress": [61, 158, 204, 441, 466, 575, 724, 887, 1134], "absorb": [61, 145, 190, 446, 448, 676, 1063], "Be": [61, 97, 230, 277, 279, 317, 326, 380, 413, 522, 543, 568, 573, 635, 662, 674, 676, 705, 707, 710, 721, 730, 738, 758, 760, 761, 834, 979, 994], "awar": [61, 326, 424, 457, 968], "enabl": [61, 151, 157, 184, 192, 213, 221, 227, 237, 240, 268, 278, 386, 437, 463, 470, 492, 548, 806, 808, 813, 860, 905, 909, 913, 925, 968, 992, 996, 1006, 1164], "mkdir": [61, 100, 114, 138, 153, 158, 162, 180, 181, 257, 259, 268, 340, 345, 522, 524, 525, 585, 759, 761, 808, 835, 836, 837, 838, 872, 873, 874, 875, 876, 879, 880, 882, 888, 904, 921, 925, 975, 994, 996, 997, 1003], "dist": [61, 136, 728, 1061], "406332": 61, "apr": [61, 63, 211, 221, 250, 333, 983, 984, 997], "transfer": [61, 152, 214, 217, 294, 310, 326, 443, 525, 575, 676, 779, 808, 821, 822, 834, 835, 836, 895, 915, 921, 924, 1122, 1159, 1161], "scp": [61, 97, 101, 114, 138, 163, 192, 258, 267, 268, 288, 289, 524, 525, 761, 781, 835, 836, 904, 915, 916, 917, 918, 920, 925, 942, 992, 993, 994], "192": [61, 185, 192, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 346, 781, 843, 925, 1176], "168": [61, 185, 192, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 346, 781, 843, 925, 994, 1176], "82": [61, 162, 171, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1063, 1110, 1111], "prerequisit": [61, 104, 230, 781, 912, 1033], "apt": [61, 122, 163, 167, 181, 230, 277, 279, 537, 788, 907, 912, 914, 925, 984, 996, 1141, 1146], "python3": [61, 63, 86, 136, 148, 163, 172, 185, 191, 211, 221, 227, 237, 240, 244, 320, 960, 970, 996, 1006, 1033, 1127, 1128, 1134, 1141], "along": [61, 153, 159, 212, 225, 358, 407, 477, 759, 853, 961, 982, 1013], "omit": [61, 63, 158, 167, 172, 221, 227, 237, 240, 241, 244, 314, 344, 388, 425, 437, 449, 469, 643, 665, 712, 786, 802, 851, 912, 913, 914, 921, 937, 938, 942, 953, 1003, 1006, 1058, 1139], "bind": [61, 132, 153, 255, 277, 279, 307, 317, 385, 392, 623, 665, 678, 705, 729, 730, 732, 738, 760, 761, 908, 982, 1014, 1018, 1037, 1048, 1125, 1159, 1174, 1176], "cxx": [61, 149, 450, 465, 466, 467, 468, 469, 470, 472, 474, 477, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 521, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 759, 983, 984], "xf": [61, 163, 834, 996], "ld_library_path": [61, 455, 999], "gpiod": [61, 63, 788], "py3": [61, 136, 148, 1061], "aarch64": [61, 163, 994], "multi": [63, 1112, 1119], "chmod": [63, 159, 340, 835, 836, 853, 858, 860, 862, 865, 917, 921], "snippet": [63, 172, 191, 313, 325, 630, 913, 1006], "subdirectori": [63, 132, 158, 167, 179, 181, 204, 295, 311, 450, 454, 455, 508, 522, 761, 783, 834, 835, 836, 848, 858, 860, 877, 892, 896, 913, 914, 994, 1094, 1146], "stuff": [63, 70, 78, 100, 114, 123, 151, 154, 158, 167, 172, 184, 188, 191, 204, 213, 214, 235, 249, 268, 270, 291, 326, 344, 443, 449, 551, 598, 759, 761, 767, 776, 808, 838, 868, 876, 882, 888, 904, 912, 942, 1003, 1005, 1061, 1101, 1106, 1108, 1139], "stuff_complet": 63, "strace": [63, 97, 152, 154, 358, 766, 771, 824, 931, 937, 950, 966, 975, 1172], "pid": [63, 152, 154, 155, 442, 827, 840, 844, 846, 950, 966, 969, 975, 979, 980], "4677": 63, "11hello": 63, "clock_gettime64": 63, "clock_monoton": [63, 740, 932, 966], "tv_sec": [63, 966], "164646": 63, "tv_nsec": [63, 966], "833862215": 63, "_newselect": 63, "tv_usec": 63, "500000": [63, 907, 913, 1111], "unfinish": [63, 154], "4679": 63, "resum": [63, 695, 696, 699, 700, 701, 804, 966], "timeout": [63, 735, 737, 739, 931, 1134], "mi": [63, 232], "845864201": 63, "4678": [63, 227], "fd": [63, 162, 224, 268, 525, 767, 912, 926, 930, 931, 932, 934, 938, 939, 940, 941, 944, 946, 949, 972, 975, 979, 1063], "fourth": 63, "involv": [63, 78, 152, 155, 159, 162, 214, 268, 280, 281, 302, 346, 423, 431, 437, 443, 508, 575, 577, 666, 779, 808, 905, 983, 992, 994], "occasion": [63, 140, 167, 184, 213, 230, 433, 447, 457, 659, 808, 852, 1030, 1044, 1120], "due": [63, 159, 184, 465, 729, 1134], "weird": [63, 268, 313, 433, 703, 741, 767, 792, 961, 979], "gil": [63, 184, 188, 280, 281, 302, 303, 306, 1106], "jitter": [63, 968, 970], "heavi": [63, 176, 184, 475, 914, 1030, 1164], "usr": [63, 152, 153, 157, 163, 172, 175, 180, 182, 204, 211, 212, 221, 224, 227, 237, 240, 244, 247, 250, 265, 270, 272, 282, 286, 308, 314, 320, 337, 340, 450, 452, 453, 455, 456, 460, 682, 715, 725, 759, 781, 808, 834, 840, 852, 864, 896, 899, 912, 914, 960, 970, 979, 982, 983, 984, 985, 994, 997, 999, 1006, 1009, 1033, 1094, 1109, 1122, 1134, 1141, 1148], "env": [63, 148, 153, 175, 270, 960, 970, 1033, 1060, 1094, 1109, 1122], "hello_left": 63, "hello_right": 63, "rjust": [63, 172, 240, 286], "hello_middl": 63, "center": [63, 175, 217, 232, 234, 240, 244, 265, 272, 286, 304, 308, 314, 334, 441, 521], "t1": [63, 171, 234, 244, 265, 269, 286, 308, 951], "t2": [63, 171, 227, 234, 244, 265, 308, 951], "t3": 63, "async": [63, 152, 184, 188, 221, 227, 237, 238, 240, 303, 307, 693, 958, 981, 1106, 1174], "await": [63, 303], "epoll_wait": 63, "201": [63, 155, 185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 320], "multiplex": [63, 913, 932, 966, 1176], "create_task": 63, "sysf": [63, 114, 115, 116, 118, 124, 125, 149, 199, 268, 327, 328, 524, 761, 764, 765, 810, 904, 905, 912, 914, 945, 946, 949, 1163, 1170], "unmaintain": [63, 258, 267, 268, 311, 359, 984, 1048, 1156], "immun": [63, 582, 740], "hotplug": [63, 912], "reset": [63, 151, 472, 474, 724, 725, 726, 759, 1128, 1175], "pullup": 63, "pulldown": 63, "rpi": [63, 134, 163, 326, 808, 809, 912], "hope": [63, 152, 154, 157, 159, 163], "major": [63, 157, 170, 221, 227, 237, 240, 277, 279, 447, 451, 582, 767, 774, 839, 967, 1031, 1037, 1052], "releas": [63, 155, 181, 295, 311, 408, 454, 725, 736, 737, 739, 761, 767, 781, 905, 912, 955, 960, 996, 999, 1031, 1140, 1171], "ton": [63, 723, 847, 909, 934, 966, 970, 1159], "bartosz": 63, "golaszewski": 63, "gpiochip0": [63, 788, 948], "ioctl": [63, 268, 429, 774, 776, 802, 810, 811, 816, 822, 908, 912], "crw": [63, 772, 839, 890, 912, 913, 914], "254": [63, 173, 224, 227, 232, 234, 237, 244, 247, 265, 272, 282, 286, 292, 308], "request": [63, 93, 98, 115, 131, 153, 154, 157, 214, 216, 241, 247, 303, 448, 467, 489, 503, 672, 673, 676, 677, 766, 810, 934, 949, 1139], "request_lin": 63, "consum": [63, 132, 154, 157, 174, 224, 303, 441, 458, 487, 737, 739, 833, 841, 848, 955, 956, 967, 972, 974, 976, 979, 1006, 1028, 1037, 1063, 1118, 1164], "mytest": 63, "config": [63, 97, 119, 120, 141, 142, 148, 153, 155, 157, 163, 171, 265, 282, 286, 344, 351, 360, 524, 725, 761, 781, 809, 890, 912, 913, 914, 921, 996, 1006, 1134], "lineset": 63, "set_valu": [63, 739], "all_io": 63, "transform": [63, 66, 172, 187, 188, 191, 193, 203, 208, 209, 211, 212, 219, 230, 232, 235, 238, 261, 268, 270, 279, 285, 303, 316, 325, 437, 528, 529, 541, 543, 596, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 693, 717, 761, 992, 1012, 1056, 1089, 1106], "ntime": [63, 1016], "task": [63, 77, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 167, 209, 222, 235, 249, 252, 255, 285, 291, 344, 347, 349, 350, 353, 354, 355, 358, 761, 835, 836, 853, 895, 904, 912, 915, 930, 945, 951, 964, 965, 967, 968, 1106, 1139], "interv": [63, 89, 119, 191, 221, 227, 228, 237, 240, 244, 265, 303, 344, 509, 511, 524, 525, 665, 739, 740, 932, 942, 966, 970], "none": [63, 127, 136, 148, 151, 152, 157, 162, 171, 173, 185, 195, 202, 203, 212, 217, 218, 221, 224, 227, 233, 234, 237, 240, 244, 247, 253, 262, 265, 269, 270, 272, 282, 286, 292, 304, 308, 314, 320, 335, 427, 428, 449, 452, 572, 658, 660, 931, 948, 976, 1003, 1006, 1028, 1054, 1061, 1131, 1146], "itertool": [63, 249, 251, 303, 1010], "cram": [63, 145, 182, 776, 966, 1003, 1119], "goe": [63, 65, 85, 112, 122, 155, 157, 172, 277, 437, 472, 537, 640, 660, 669, 719, 772, 808, 850, 851, 937, 964, 970, 980, 983, 990, 1033, 1036, 1056], "stuff_raw": 63, "mod": [63, 240, 265, 285, 786], "sidewai": [63, 188, 191, 246, 353, 354, 1011, 1012], "numpi": [63, 184, 188, 203, 222, 228, 235, 270, 276, 304, 306, 309, 449, 1030, 1105, 1109, 1112, 1120, 1124, 1134, 1141], "transpos": [63, 868], "col": 63, "tolist": 63, "outsid": [63, 240, 476, 489, 569, 577, 582, 724, 725, 798, 869, 951, 967, 1006], "instanti": [63, 123, 211, 344, 467, 478, 492, 493, 506, 507, 508, 511, 593, 622, 640, 661, 687, 693, 715, 728, 729, 1018, 1019, 1109], "coro": [63, 693, 695, 696, 698, 699, 700, 701], "cannot": [63, 110, 111, 148, 152, 153, 154, 159, 163, 174, 175, 181, 182, 184, 191, 211, 244, 271, 274, 308, 326, 403, 404, 407, 408, 427, 429, 431, 434, 437, 455, 458, 470, 493, 521, 560, 569, 572, 574, 577, 578, 601, 636, 637, 639, 640, 642, 643, 647, 666, 669, 672, 678, 704, 714, 715, 719, 725, 727, 737, 739, 804, 808, 813, 828, 845, 850, 853, 864, 879, 887, 923, 967, 976, 998, 999, 1000, 1004, 1006, 1018, 1023, 1030, 1038, 1039, 1045, 1046, 1056, 1125, 1127, 1128, 1139, 1164], "stuff_raw2": 63, "05": [63, 97, 114, 155, 162, 167, 211, 246, 269, 276, 287, 296, 299, 339, 357, 456, 1110], "runtimeerror": [63, 175, 211, 265, 325, 1003, 1005], "reus": [63, 112, 167, 173, 998, 1048], "alreadi": [63, 80, 114, 123, 152, 153, 155, 163, 174, 176, 184, 188, 244, 271, 274, 420, 431, 437, 469, 489, 491, 502, 505, 524, 541, 621, 761, 767, 781, 788, 796, 806, 808, 811, 828, 904, 912, 913, 914, 921, 934, 935, 937, 942, 943, 945, 962, 997, 1003, 1030, 1056, 1134, 1139, 1141, 1148], "bare": [63, 78, 80, 87, 89, 108, 134, 152, 358, 905, 913], "create_coro": 63, "ctor": [63, 179, 188, 237, 286, 521, 543, 551, 568, 571, 572, 575, 585, 587, 622, 645, 669, 670, 672, 676, 677, 702, 710, 725, 741, 827], "nest": [63, 148, 212, 225, 234, 244, 251, 255, 272, 282, 371, 400, 401, 427, 687, 739, 755, 813, 1003, 1046], "_blink": 63, "coro_cr": 63, "creator": [63, 146, 163], "create_factory_for_blink": 63, "blinkfunc": 63, "blink_func": 63, "stuff_decorator_stage1": 63, "stage1": 63, "stararg": [63, 1004, 1007, 1028], "func": [63, 211, 221, 227, 237, 240, 271, 285, 527, 596, 665, 680, 687, 728, 1004, 1008], "becom": [63, 68, 78, 89, 92, 122, 127, 131, 152, 154, 180, 192, 271, 274, 294, 296, 299, 310, 386, 416, 418, 425, 428, 449, 465, 469, 508, 669, 724, 725, 726, 808, 845, 864, 897, 913, 914, 921, 964, 967, 968, 1003, 1009, 1039, 1140, 1146, 1161, 1162], "obsolet": [63, 184, 1030], "prog": [63, 225, 325], "demo": [63, 97, 98, 112, 114, 122, 132, 152, 175, 179, 184, 187, 189, 192, 193, 196, 204, 211, 219, 222, 225, 228, 230, 235, 241, 258, 261, 264, 267, 268, 288, 289, 340, 358, 450, 451, 455, 456, 460, 463, 511, 519, 649, 726, 761, 838, 841, 842, 863, 864, 904, 933, 975, 984, 1030, 1112, 1145, 1165, 1169], "opposit": [63, 156, 401, 914, 967, 1119], "futur": [63, 114, 130, 159, 224, 244, 256, 257, 259, 268, 316, 331, 353, 354, 425, 489, 659, 693, 735, 737, 738, 760, 761, 818, 1159], "steig": [64, 160], "normalweg": 64, "w\u00e4r": 64, "umst\u00e4nden": [64, 1154, 1158, 1173], "renat": 64, "beschreibung": [64, 196, 198, 206, 209, 212, 213, 215, 231, 243, 896], "bergfex": 64, "reden": 64, "sie": [64, 160, 166, 171, 175, 232, 237, 304, 335, 341, 358, 830, 895, 1153, 1155, 1156, 1157, 1163, 1173, 1175, 1176, 1177], "tagen": [64, 1163], "wir": [64, 170, 175, 179, 185, 187, 195, 196, 201, 215, 234, 240, 247, 300, 358, 626, 1154, 1169, 1170], "w\u00fcrden": 64, "denk": [64, 160, 216, 1173], "beiden": [64, 171, 185, 232, 240, 247], "h\u00fctten": [64, 161], "schlafen": 64, "hochk\u00f6nig": 65, "cite": [65, 159, 173, 184, 306], "complain": [65, 154, 163, 167, 181, 387, 560, 575, 576, 783, 811, 921], "subrepo": 65, "whole": [65, 231, 243, 244, 246, 249, 252, 261, 264, 303, 325, 449, 678, 687, 729, 783, 786, 808, 853, 935, 1004, 1075, 1162], "subtitl": 65, "fight": [65, 847], "against": [65, 154, 163, 204, 212, 224, 225, 407, 449, 453, 457, 508, 524, 740, 781, 783, 788, 792, 800, 843, 940, 985, 990, 1000, 1014, 1072, 1139, 1164], "fake": [65, 912], "simplest": [65, 190, 252, 450, 467, 600, 607, 714, 735, 813, 843, 897, 961, 994, 1032, 1037, 1139, 1147], "unprofession": [65, 156], "populist": 65, "gtest_discover_test": 65, "robust": 65, "sentenc": 65, "implicitli": [65, 208, 213, 224, 414, 464, 572, 580, 670, 678, 771, 938, 1003, 1035, 1119], "gtest_add_test": 65, "scan": [65, 221, 244, 247, 314, 912, 914], "primit": [65, 152, 196, 197, 277, 1012, 1159, 1169], "sort": [65, 85, 106, 108, 139, 152, 179, 185, 193, 197, 212, 214, 224, 225, 230, 232, 234, 235, 240, 248, 262, 265, 272, 277, 286, 292, 314, 320, 437, 438, 441, 442, 452, 543, 601, 619, 629, 633, 662, 703, 707, 715, 728, 737, 739, 761, 848, 852, 890, 901, 914, 1005, 1053, 1054, 1108, 1134], "port": [65, 122, 148, 149, 154, 159, 164, 224, 258, 267, 288, 289, 303, 326, 358, 761, 841, 847, 895, 904, 915, 920, 924, 942, 1063, 1118, 1122, 1134, 1163, 1170], "trap": [65, 153, 214, 420, 425, 443, 571, 1158, 1160], "hehe": [65, 184, 191], "html_sidebar": 65, "rtd": [65, 149], "linkcheck": 65, "admonit": 65, "matrix": [65, 173, 175, 276, 347, 349, 438], "thoma": [65, 146], "cokela": 65, "ablog": 65, "couldn": [65, 159, 163, 188, 191, 1044], "figur": [65, 114, 138, 144, 149, 157, 158, 173, 228, 1002], "piec": [65, 78, 145, 153, 427, 543, 595, 913, 944], "especi": [65, 86, 92, 112, 122, 153, 157, 176, 184, 268, 340, 358, 360, 386, 397, 427, 447, 669, 783, 914], "feed": [65, 84, 149, 1111], "blog_baseurl": 65, "nicer": [65, 968], "pour": [65, 465, 834], "tag": [65, 155, 157, 160, 161, 185, 201, 203, 245, 452, 460, 781, 996, 999, 1171], "resolv": [66, 77, 112, 163, 167, 221, 224, 227, 230, 237, 240, 247, 250, 265, 272, 282, 286, 308, 314, 404, 430, 579, 925, 982, 985, 1110, 1111], "buildenviron": 66, "resolve_refer": 66, "builder": [66, 224, 1063], "get_and_resolve_doctre": 66, "apply_post_transform": 66, "addnod": 66, "docstr": [66, 148, 208, 211, 221, 227, 233, 245, 248, 251, 273, 305, 340, 1034], "emit": [66, 84, 492, 493, 850], "doctre": 66, "increasingli": 68, "whose": [68, 163, 221, 227, 237, 240, 276, 286, 353, 354, 487, 557, 660, 661, 905, 1006, 1139, 1146], "mainten": [68, 382, 408, 427, 999], "easier": [68, 80, 85, 92, 173, 214, 449, 475, 580, 664, 808, 1159], "never": [68, 110, 111, 152, 153, 154, 159, 172, 234, 240, 244, 286, 304, 386, 407, 423, 434, 437, 447, 465, 487, 566, 647, 725, 747, 749, 751, 847, 905, 928, 953, 983], "simpler": [68, 163, 214, 278, 281, 365, 424, 458, 604, 804, 808, 913, 925], "wors": [68, 140, 155, 240, 433, 449, 687, 930, 1142], "makefil": [68, 97, 214, 257, 259, 450, 461, 777, 781, 809, 810, 987, 990, 992, 999, 1000], "everytbodi": 69, "runtim": [69, 152, 163, 185, 189, 213, 237, 240, 320, 362, 383, 431, 441, 442, 455, 460, 491, 492, 505, 519, 554, 563, 603, 621, 622, 665, 707, 714, 728, 729, 951, 982, 1018, 1036, 1048, 1112, 1113], "dispatch": [69, 303, 554, 563, 639, 642, 643, 745, 746, 747, 749, 760, 761], "hell": [69, 204, 238, 433, 466, 679, 710, 732, 798, 833, 958, 1119], "destructor": [69, 70, 97, 106, 122, 132, 214, 230, 251, 277, 279, 317, 342, 343, 471, 485, 513, 523, 537, 543, 552, 558, 565, 566, 567, 568, 573, 575, 590, 638, 639, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 678, 705, 721, 730, 736, 738, 741, 746, 758, 760, 761, 769, 800, 813, 825, 1151], "opportun": [69, 159, 162, 172, 184, 203, 437, 656, 1019, 1162], "shoot": [69, 870], "oneself": [69, 1164], "encapsul": [70, 73, 212, 225, 230, 277, 279, 303, 326, 447, 467, 471, 485, 511, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 543, 565, 566, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 665, 674, 705, 721, 730, 738, 746, 758, 760, 761, 777, 810, 976, 1031, 1160], "hide": [70, 213, 225, 281, 1031], "fanci": [70, 1051, 1112, 1132], "whatnot": [70, 228, 737, 808, 905, 913, 931, 961], "boost": [71, 230, 460, 463, 543, 693, 969, 1177], "feel": [71, 152, 154, 163, 184, 560, 657, 659, 660, 665, 950, 968, 1030], "cluster_ecpropos": [72, 73, 74, 87, 761], "cluster_ecproposal_ec1": [72, 73, 74, 87, 761], "cluster_ecproposal_ec1_cxx": [72, 73, 74, 87, 761], "cluster_ecproposal_ec1_linux": [72, 73, 74, 761], "cluster_ecproposal_ec1_mt": [72, 73, 74, 87, 761], "cluster_ecproposal_ec2": [72, 74, 761], "cluster_ecproposal_ec2_python": [72, 74, 761], "ecproposal_ec1_git": [72, 73, 74, 761], "ecproposal_ec1_cxx_unittest": [72, 73, 74, 761], "ecproposal_ec1_cxx_oo_bas": [72, 73, 74, 761], "ecproposal_ec1_cxx_build": [72, 73, 74, 87, 761], "ecproposal_ec1_cxx_ifac": [72, 73, 74, 761], "ecproposal_ec1_linux_dev_mgmt": [72, 73, 74, 761], "ecproposal_ec1_linux_bas": [72, 73, 74, 761], "ecproposal_ec1_linux_exercise_sensor": [72, 73, 74, 761], "ex": [72, 73, 74, 78, 87, 140, 212, 225, 537, 554, 715, 761, 853, 868, 1141], "temperatur": [72, 73, 74, 78, 82, 91, 94, 97, 114, 115, 116, 117, 122, 123, 124, 132, 188, 221, 268, 303, 316, 317, 346, 349, 364, 366, 368, 466, 472, 477, 498, 512, 513, 514, 515, 516, 517, 518, 519, 523, 524, 525, 536, 554, 565, 643, 675, 745, 747, 749, 751, 761, 808, 904, 911, 943, 945, 962, 1018, 1094, 1109, 1110, 1111, 1112], "ecproposal_ec1_linux_exercise_avg_sensor_parallel": [72, 73, 74, 761], "averag": [72, 73, 74, 78, 84, 85, 188, 224, 228, 244, 279, 303, 470, 486, 516, 523, 761, 970, 1063], "ecproposal_ec1_linux_exercise_avg_sensor": [72, 73, 74, 761], "ecproposal_ec1_mt_wait": [72, 73, 74, 87, 761], "ecproposal_ec1_mt_exercise_mt_race_fix": [72, 73, 74, 87, 761], "avoid": [72, 73, 74, 78, 87, 152, 159, 167, 244, 373, 408, 486, 521, 523, 533, 567, 571, 622, 761, 806, 897, 913, 1160], "ecproposal_ec1_linux_exercise_led_displai": [72, 73, 74, 761], "displai": [72, 73, 74, 78, 115, 124, 132, 157, 221, 227, 237, 240, 265, 268, 270, 272, 277, 282, 286, 308, 314, 349, 441, 514, 761, 843, 890, 899, 912, 966, 1141], "ecproposal_ec1_linux_gpio": [72, 73, 74, 761], "ecproposal_ec1_mt_lock": [72, 73, 74, 87, 761], "semaphor": [72, 73, 74, 76, 78, 87, 89, 147, 176, 177, 199, 221, 227, 237, 240, 358, 737, 761, 800, 955, 1164, 1174], "ecproposal_ec1_mt_exercise_mt_rac": [72, 73, 74, 87, 761], "ecproposal_ec2_python_exercise_avg_displai": [72, 74, 761], "ecproposal_ec2_python_exercise_sensor": [72, 74, 761], "ecproposal_ec2_python_bas": [72, 74, 761], "ecproposal_ec2_python_web_sensor": [72, 74, 761], "ecproposal_ec2_python_flask": [72, 74, 761], "qualiti": [73, 159, 213, 276, 913, 1133], "assur": 73, "characterist": 73, "polymorph": [74, 106, 114, 115, 130, 211, 212, 225, 277, 279, 281, 296, 299, 449, 471, 485, 513, 565, 638, 639, 642, 643, 662, 723, 728, 745, 746, 747, 760, 761, 1159, 1162], "concurr": [74, 184, 188, 238, 307, 715, 798, 1014, 1106], "increment": [75, 170, 213, 227, 230, 253, 276, 365, 369, 373, 393, 402, 409, 413, 415, 419, 422, 426, 435, 439, 444, 445, 543, 560, 667, 705, 758, 760, 761, 840, 952, 953, 954, 975, 976, 1014], "lossi": 75, "access": [76, 78, 88, 110, 111, 119, 149, 153, 154, 155, 157, 159, 172, 182, 192, 199, 211, 221, 224, 227, 230, 237, 240, 247, 250, 265, 268, 272, 282, 286, 296, 308, 313, 314, 326, 340, 343, 345, 377, 416, 437, 438, 476, 492, 517, 518, 519, 520, 543, 566, 578, 580, 583, 584, 586, 587, 601, 626, 640, 647, 650, 653, 654, 657, 658, 659, 660, 661, 662, 676, 693, 708, 712, 724, 761, 766, 776, 779, 785, 796, 804, 808, 810, 826, 841, 844, 853, 855, 856, 879, 904, 914, 923, 924, 930, 934, 938, 940, 944, 948, 952, 966, 967, 975, 980, 1001, 1006, 1013, 1014, 1017, 1036, 1043, 1045, 1058, 1074, 1110, 1127, 1141, 1164], "flavor": [76, 87, 152, 450, 714, 719], "stash": 77, "suffic": [77, 159, 375, 425], "purpos": [77, 78, 80, 119, 130, 145, 153, 157, 163, 184, 203, 221, 227, 237, 240, 252, 265, 343, 371, 449, 461, 568, 600, 640, 729, 808, 841, 850, 913, 935, 940, 961, 982, 1000, 1030, 1111, 1140, 1163, 1170], "unifi": [78, 127, 191, 593], "intention": [78, 213, 286, 680], "power": [78, 89, 151, 153, 168, 173, 213, 230, 341, 342, 343, 361, 373, 374, 416, 425, 808, 818, 825, 839, 905, 909, 912, 913, 914, 933, 948, 966, 970, 1007, 1025, 1029, 1031, 1037, 1042, 1054, 1129], "being": [78, 81, 115, 140, 152, 155, 156, 162, 176, 184, 190, 211, 240, 244, 303, 317, 340, 386, 413, 430, 466, 469, 554, 578, 621, 723, 725, 729, 731, 737, 759, 790, 804, 808, 843, 925, 940, 966, 1013, 1020, 1030, 1033, 1110, 1148, 1151, 1164], "address": [78, 99, 106, 110, 111, 114, 115, 152, 154, 155, 156, 159, 192, 199, 204, 211, 213, 214, 230, 232, 258, 267, 268, 279, 288, 289, 337, 342, 343, 351, 404, 406, 415, 419, 422, 425, 426, 434, 435, 439, 444, 445, 465, 471, 476, 479, 485, 487, 489, 494, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 565, 575, 580, 667, 677, 678, 705, 719, 738, 758, 760, 761, 788, 792, 804, 806, 835, 836, 837, 838, 841, 842, 844, 848, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904, 906, 908, 913, 914, 916, 917, 918, 919, 920, 925, 927, 931, 933, 935, 942, 943, 945, 950, 958, 959, 961, 962, 965, 967, 975, 982, 984, 986, 987, 988, 989, 990, 991, 992, 993, 999, 1014, 1017, 1110, 1111, 1130, 1139], "crucial": [78, 152, 176, 440, 602], "mmu": [78, 152, 779, 822, 845, 966], "sophist": [78, 221, 466, 487, 524, 661], "permiss": [78, 97, 100, 101, 102, 114, 187, 188, 192, 194, 204, 211, 227, 247, 258, 267, 282, 285, 288, 303, 326, 335, 340, 341, 342, 343, 345, 513, 565, 651, 738, 759, 760, 761, 767, 808, 835, 836, 838, 841, 842, 845, 851, 854, 858, 859, 860, 861, 862, 864, 865, 866, 870, 882, 885, 887, 888, 890, 904, 905, 915, 918, 920, 921, 924, 925, 930, 933, 934, 935, 938, 940, 941, 943, 945, 959, 962, 965, 967, 968, 980, 1005, 1106, 1134, 1141, 1165, 1174], "nativ": [78, 97, 104, 114, 151, 157, 159, 185, 221, 257, 259, 277, 347, 761, 808, 904, 983, 987, 989, 992, 1115, 1118, 1124], "varieti": [78, 443, 844, 982, 1162], "storag": [78, 157, 162, 450, 678, 808, 844, 905, 913, 930, 950, 1175], "underli": [78, 212, 219, 235, 244, 285, 340, 345, 715, 914, 1106, 1111, 1115], "platform": [78, 159, 212, 221, 225, 227, 237, 240, 244, 252, 270, 320, 333, 342, 360, 788, 808, 913, 914, 948, 966, 1094, 1139, 1141], "offer": [78, 152, 162, 203, 278, 401, 578, 582], "popular": [78, 163, 176, 180, 396, 673, 833, 914, 966, 982, 998, 1024, 1108, 1114, 1122, 1135, 1162], "often": [78, 89, 151, 152, 153, 154, 184, 234, 244, 271, 274, 294, 310, 382, 392, 413, 452, 467, 479, 593, 715, 808, 868, 944, 1010, 1030, 1044, 1161, 1162], "appropri": [78, 116, 127, 139, 145, 152, 162, 167, 172, 204, 244, 382, 396, 408, 523, 729, 804, 912, 924, 975, 1112, 1118, 1162], "prototyp": [78, 326, 373, 465, 527, 560, 676, 808, 905, 913, 926, 1003, 1118], "higher": [78, 152, 163, 221, 227, 237, 240, 759, 806, 905, 967, 969, 976, 984, 992, 1118, 1161], "fulli": [78, 156, 159, 163, 188, 429, 524, 976], "distribut": [78, 157, 162, 167, 179, 184, 204, 214, 232, 244, 337, 465, 511, 519, 732, 779, 808, 846, 847, 968, 1030], "en": [78, 157, 169, 179, 240, 268, 645], "vogu": 78, "serial": [78, 151, 152, 162, 192, 227, 228, 240, 841, 843, 1163, 1170], "groundwork": 78, "lai": 78, "instruct": [78, 151, 155, 159, 182, 213, 268, 277, 279, 437, 508, 724, 739, 954, 966, 997, 1094], "consolid": [78, 184], "makeri": 78, "everybodi": [78, 157, 278, 429, 475, 569, 608, 651, 839, 1033, 1037, 1139, 1159], "clarifi": 78, "earli": [78, 151, 184, 188, 193, 278, 813, 825, 840, 968, 1001, 1018, 1056, 1161], "matter": [78, 151, 156, 157, 159, 167, 184, 190, 192, 367, 411, 443, 450, 457, 467, 567, 568, 580, 583, 669, 708, 715, 725, 727, 783, 808, 810, 853, 864, 906, 912, 914, 925, 1005, 1030, 1131, 1141, 1151, 1162], "rewrit": [78, 80, 152, 449], "translat": [78, 91, 92, 172, 185, 203, 240, 244, 247, 250, 286, 714, 1073], "flask": [78, 93, 149, 188, 191, 1004], "network": [78, 110, 111, 138, 147, 148, 149, 152, 159, 169, 170, 192, 194, 199, 224, 240, 247, 250, 261, 265, 267, 268, 272, 282, 286, 288, 303, 308, 314, 342, 358, 359, 443, 476, 761, 762, 785, 825, 841, 843, 844, 846, 904, 907, 908, 913, 914, 915, 925, 929, 930, 933, 934, 945, 964, 1170, 1174], "oppos": [80, 114, 151, 191, 225, 232, 242, 277, 408, 452, 457, 554, 892, 906, 913, 921, 955, 968, 975, 980, 999, 1025, 1036, 1037, 1119, 1127], "ahead": [80, 167, 447, 1020], "optimz": 80, "donald": [80, 436], "knuth": [80, 436], "prematur": [80, 436, 440], "optim": [80, 153, 265, 277, 308, 423, 439, 440, 444, 445, 452, 761, 792, 1118, 1158, 1160], "evil": [80, 230, 377, 427, 436, 440, 452, 580], "knowledg": [81, 85, 271, 274, 277, 524, 658, 660, 808, 906, 914, 1007, 1029, 1133], "onewir": [81, 85, 97, 106, 114, 115, 116, 124, 132, 268, 279, 316, 340, 343, 512, 513, 565, 761, 904, 911, 912, 943, 945, 962], "protocol": [81, 144, 157, 190, 191, 201, 223, 226, 228, 229, 233, 236, 239, 242, 251, 264, 266, 271, 274, 280, 281, 283, 284, 287, 290, 302, 303, 305, 306, 307, 309, 313, 315, 346, 349, 381, 389, 476, 489, 766, 895, 906, 908, 912, 914, 915, 923, 924, 944, 1003, 1007, 1011, 1018], "aspect": [81, 119, 184, 188, 214, 238, 277, 279, 307, 472, 839, 912, 914, 1106, 1133, 1139, 1164], "regard": [81, 159, 184, 326, 868, 1030, 1037, 1135, 1139], "filesystem": [81, 85, 106, 114, 151, 154, 163, 192, 194, 204, 255, 340, 345, 524, 760, 761, 808, 834, 913, 925, 941, 948, 966, 985, 1139, 1165, 1170, 1172, 1176], "hwmon": [81, 85, 115, 346, 349], "composit": [82, 106, 118, 121, 132, 188, 214, 260, 278, 279, 296, 464, 471, 485, 499, 513, 565, 761, 1010, 1162], "mock": [82, 114, 115, 130, 131, 132, 278, 280, 281, 302, 306, 317, 327, 329, 513, 514, 515, 516, 518, 554, 565, 761, 1146], "pin": [84, 131, 268, 326, 905, 909, 912, 913], "light": [84, 162, 847, 1029, 1139], "linearli": [84, 244, 607, 844], "cold": [84, 203], "hot": [84, 154, 438, 441, 790], "queri": [84, 1038], "said": [84, 110, 111, 154, 167, 184, 271, 274, 281, 487, 600, 647, 731, 737, 769, 905, 913, 914, 925, 952, 967, 1010, 1030, 1050, 1119, 1132], "ds18s20": [85, 346, 1139], "datasheet": [85, 137, 804, 905, 914], "lm73": [85, 268, 346, 349, 761, 904, 911, 914], "ti": [85, 151, 447, 525, 569, 726], "hoc": [85, 214, 407], "report": [85, 115, 118, 124, 132, 151, 154, 155, 167, 169, 171, 351, 433, 443, 566, 761, 926, 961, 1146, 1148], "experi": [85, 140, 159, 184, 447, 452, 551, 913, 914, 1140], "subsystem": [86, 97, 98, 103, 104, 114, 170, 192, 199, 204, 241, 257, 259, 261, 267, 268, 277, 279, 280, 296, 302, 761, 786, 804, 818, 838, 842, 844, 904, 905, 912, 913, 914, 948, 964, 1005, 1139, 1163, 1164, 1170], "deprec": [86, 131, 281, 634, 934, 948, 1159], "foremost": 87, "osen": [87, 89, 162, 731, 759, 966], "recurs": [87, 88, 188, 212, 221, 227, 237, 240, 735, 800, 813, 852, 853, 868, 880, 890, 897, 917, 924, 961, 1042, 1046, 1159], "mother": [88, 108, 168, 230, 543, 1023, 1159], "protect": [88, 152, 154, 204, 212, 224, 277, 279, 388, 407, 505, 506, 566, 569, 580, 636, 638, 639, 662, 737, 761, 792, 800, 806, 845, 887, 913, 954, 955, 966, 1014, 1017, 1026, 1151, 1164], "critic": [88, 152, 162, 443, 736, 798, 800, 1134], "kind": [88, 152, 154, 162, 167, 172, 184, 188, 221, 227, 228, 237, 238, 240, 252, 268, 280, 281, 302, 306, 472, 524, 572, 619, 669, 678, 723, 737, 839, 905, 912, 913, 1014, 1106, 1132, 1133, 1164], "poll": [89, 158, 169, 800, 802, 825, 948, 953, 955, 972, 976, 1163, 1170, 1174, 1176], "second": [89, 151, 154, 155, 159, 171, 184, 190, 211, 217, 221, 225, 227, 237, 240, 244, 270, 272, 326, 361, 371, 425, 441, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 501, 505, 506, 507, 511, 514, 524, 560, 575, 623, 625, 626, 665, 694, 695, 714, 725, 726, 739, 740, 755, 756, 757, 818, 845, 850, 853, 913, 932, 935, 942, 966, 975, 979, 983, 984, 998, 999, 1000, 1050, 1058, 1134, 1146, 1159], "readi": [89, 151, 905, 1139], "rare": [89, 157, 174, 188, 450, 460, 522, 524, 575, 673, 724, 890, 912, 929, 1041, 1045, 1058, 1140], "btw": [89, 156, 162, 184, 190, 204, 211, 231, 234, 340, 424, 777, 843, 1095, 1097], "increas": [89, 154, 437, 905, 968, 970, 998, 1162], "tight": [89, 176, 381, 739, 811, 1131], "bui": [89, 152, 466], "bigger": [89, 152, 184, 437, 1112], "avail": [89, 122, 127, 132, 151, 152, 154, 155, 157, 163, 167, 176, 180, 184, 204, 213, 221, 227, 237, 240, 294, 302, 303, 306, 310, 359, 451, 453, 458, 462, 467, 492, 493, 693, 729, 735, 739, 781, 808, 813, 840, 864, 905, 909, 912, 913, 964, 967, 968, 985, 996, 1001, 1006, 1013, 1037, 1055, 1056, 1105, 1114, 1131, 1134, 1141, 1142, 1161, 1164], "intro": [93, 114, 131, 132, 149, 179, 203, 213, 222, 235, 236, 249, 252, 271, 274, 279, 285, 291, 303, 565, 665, 673, 693, 717, 761, 904, 928, 945, 947, 949, 1106, 1160, 1162, 1174], "rout": [93, 188, 1004], "jinja2": 93, "ss2022": [96, 761, 837, 838, 904], "ws2022": 96, "lab": [96, 106, 114, 340], "vo": [97, 106, 114, 346], "ku": [97, 105, 106, 114], "g1": [97, 761, 837, 838, 904], "g2": [97, 340, 761, 837, 838, 904], "08": [97, 99, 105, 114, 155, 162, 163, 164, 218, 221, 246, 250, 276, 314, 357, 461, 905, 912, 914, 936, 997, 1110], "cont": [97, 114, 222, 285], "command": [97, 99, 112, 114, 148, 151, 156, 162, 192, 204, 209, 219, 221, 227, 228, 235, 237, 240, 249, 252, 258, 260, 267, 268, 285, 288, 289, 326, 340, 345, 358, 408, 429, 440, 452, 462, 463, 464, 471, 485, 489, 499, 513, 522, 565, 575, 724, 738, 760, 761, 808, 834, 835, 836, 837, 838, 841, 842, 843, 845, 846, 847, 848, 850, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 870, 871, 872, 873, 875, 876, 877, 879, 880, 882, 883, 884, 886, 888, 896, 901, 904, 913, 914, 915, 916, 917, 924, 928, 933, 935, 943, 945, 959, 961, 962, 965, 966, 967, 968, 982, 983, 990, 994, 998, 1058, 1106, 1134, 1141, 1148, 1162], "wsl": [97, 98, 103, 104, 114, 241, 261, 267, 280, 296, 302, 761, 838, 842, 904, 985, 992, 993, 997], "homework": [97, 102, 105, 114, 154], "sshf": [97, 101, 114, 258, 267, 268, 288, 289, 347, 761, 904, 915, 920, 985, 994], "toolchain": [97, 103, 104, 106, 108, 114, 122, 147, 164, 179, 181, 268, 358, 449, 450, 456, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 565, 738, 760, 761, 809, 838, 841, 842, 904, 927, 933, 935, 942, 943, 945, 959, 962, 965, 967, 984, 985, 986, 987, 990, 998, 999, 1000, 1031, 1154, 1156, 1157, 1158, 1166, 1172, 1174], "bashrc": [97, 104, 114, 151, 163, 224, 258, 267, 268, 282, 288, 289, 761, 838, 840, 888, 890, 904, 924, 994, 996], "studi": [97, 104, 213, 256, 257, 259, 260, 268, 316, 464, 471, 665, 705, 760, 761, 904, 987, 989, 992], "ds18b20": [97, 114, 116, 132, 268, 316, 340, 761, 904, 911, 942], "slave": [97, 114, 116, 132, 268, 316, 761, 904, 909, 911, 942], "redirect": [97, 100, 114, 153, 156, 192, 194, 204, 221, 227, 237, 240, 258, 267, 268, 288, 325, 340, 345, 761, 835, 836, 837, 838, 852, 872, 873, 875, 876, 879, 880, 882, 888, 901, 904, 934, 1056, 1155, 1165, 1172], "pipe": [97, 152, 157, 159, 172, 192, 194, 204, 258, 267, 268, 270, 288, 325, 340, 345, 759, 761, 838, 845, 850, 890, 895, 904, 934, 978, 979, 980, 994, 1056, 1155, 1165, 1172], "06": [97, 106, 114, 162, 193, 237, 256, 269, 276, 293, 296, 299, 339, 357, 449, 460, 543, 759, 1033, 1110], "past": [97, 152, 156, 157, 214, 230, 413, 598, 600, 604, 607, 611, 676, 781, 783, 847, 1101, 1105, 1156], "2p": [97, 104], "3p": [97, 104], "5p": [97, 104], "pointer": [97, 108, 114, 123, 132, 155, 179, 255, 316, 332, 341, 342, 343, 358, 371, 373, 375, 416, 417, 419, 420, 422, 424, 425, 426, 435, 439, 444, 445, 479, 524, 537, 554, 559, 561, 566, 567, 569, 577, 584, 586, 595, 599, 603, 607, 608, 611, 617, 621, 634, 667, 674, 675, 676, 703, 705, 710, 712, 714, 719, 724, 726, 729, 730, 738, 741, 745, 749, 751, 756, 757, 758, 760, 761, 767, 774, 779, 790, 796, 825, 828, 926, 952, 980, 1056, 1156, 1157, 1158, 1159, 1160, 1162], "exit": [97, 114, 148, 152, 154, 182, 203, 221, 227, 230, 237, 240, 262, 268, 303, 333, 358, 362, 414, 456, 463, 472, 575, 642, 722, 724, 761, 771, 776, 810, 904, 914, 930, 931, 932, 934, 935, 940, 942, 945, 946, 962, 972, 979, 980, 999, 1005, 1013, 1014, 1032, 1035, 1048, 1058, 1068, 1085, 1134, 1141], "statu": [97, 114, 115, 124, 132, 148, 153, 155, 167, 221, 227, 230, 237, 240, 252, 262, 268, 358, 362, 414, 452, 456, 463, 642, 759, 761, 810, 824, 904, 935, 940, 942, 945, 962, 966, 979, 999, 1035, 1061, 1120], "yai": [97, 148, 224, 232, 234, 247, 253, 272, 282, 314, 608, 659, 665, 961], "ol": [97, 114, 230, 277, 279, 286, 349, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 569, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 717, 721, 727, 730, 738, 746, 749, 758, 760, 761, 901, 976, 1051, 1056, 1078], "randomsensor": [97, 132, 472, 477, 486, 498, 512, 513, 519, 523, 533, 534, 535, 536, 538, 539, 565, 723, 724, 725, 726, 761, 1018], "rectangl": [97, 145, 475, 543, 572, 588, 662, 761], "mystr": [97, 178, 230], "point3d": [97, 588, 662, 761], "cuboid": [97, 588, 662, 761], "hierarchi": [99, 106, 110, 111, 119, 188, 189, 191, 193, 211, 212, 225, 228, 240, 258, 267, 268, 288, 289, 299, 351, 438, 465, 466, 467, 470, 471, 485, 486, 490, 492, 513, 523, 565, 761, 838, 841, 842, 843, 854, 857, 858, 859, 860, 861, 862, 863, 868, 874, 880, 887, 904, 916, 917, 918, 919, 920, 945, 963, 992, 993], "parent": [99, 109, 110, 111, 154, 167, 169, 258, 267, 268, 288, 289, 759, 761, 788, 838, 840, 841, 842, 843, 844, 853, 854, 857, 858, 859, 860, 861, 862, 863, 871, 872, 873, 874, 875, 877, 879, 880, 881, 892, 904, 916, 917, 918, 919, 920, 945, 951, 992, 993], "login": [99, 114, 132, 157, 159, 192, 204, 258, 339, 340, 761, 835, 836, 838, 839, 840, 842, 844, 845, 846, 854, 857, 858, 859, 860, 861, 862, 863, 869, 904, 905, 913, 916, 917, 918, 919, 920, 921, 923, 925, 942, 992, 993, 1084, 1154, 1163, 1170], "bourn": [99, 114, 168, 192, 194, 258, 267, 268, 288, 340, 341, 342, 345, 358, 359, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 759, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 898, 904, 927, 933, 935, 943, 945, 946, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "verifi": [100, 102, 114, 127, 131, 140, 162, 168, 180, 192, 204, 268, 351, 560, 578, 761, 838, 843, 872, 875, 876, 879, 882, 888, 904, 917, 918, 920, 1072, 1109, 1112, 1134], "joke": [100, 152], "mostli": [100, 238, 358, 363, 369, 381, 397, 427, 436, 581, 622, 724, 729, 776, 844, 847, 868, 934, 961, 964, 985, 1161], "secur": [101, 114, 155, 157, 159, 204, 224, 230, 258, 267, 288, 339, 761, 835, 836, 841, 843, 846, 864, 868, 904, 905, 915, 916, 917, 918, 919, 923, 934, 942, 992, 993, 999, 1001, 1033, 1063], "account": [101, 110, 111, 114, 157, 159, 179, 184, 188, 189, 224, 230, 240, 247, 250, 265, 269, 270, 272, 282, 286, 308, 314, 340, 345, 370, 443, 449, 647, 665, 781, 912, 925, 1030, 1110], "authent": [101, 114, 192, 204, 213, 258, 267, 268, 288, 289, 337, 340, 761, 835, 836, 904, 915, 916, 917, 918, 919, 920, 925, 1072], "ownership": [101, 114, 179, 214, 268, 289, 303, 513, 533, 537, 543, 565, 678, 720, 723, 724, 738, 760, 761, 835, 836, 838, 841, 842, 845, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 904, 933, 934, 935, 943, 945, 959, 962, 965, 967, 1159, 1162], "setuid": [101, 114, 192, 258, 267, 268, 288, 289, 761, 838, 843, 863, 904], "quick": [102, 114, 184, 191, 209, 213, 219, 228, 235, 249, 261, 291, 492, 729, 895, 905, 1106, 1132], "credenti": [102, 114, 159, 252, 761, 836, 837, 838, 843, 857, 858, 859, 860, 861, 862, 863, 904, 921, 950, 1003], "share": [102, 103, 106, 110, 111, 114, 134, 147, 152, 154, 159, 163, 167, 176, 177, 179, 180, 182, 185, 204, 214, 221, 224, 227, 237, 240, 244, 247, 250, 255, 256, 257, 259, 265, 268, 272, 282, 286, 295, 308, 311, 314, 316, 320, 337, 358, 359, 403, 430, 431, 437, 443, 450, 454, 461, 462, 466, 478, 523, 543, 551, 665, 726, 728, 729, 737, 739, 758, 760, 761, 786, 790, 806, 813, 837, 838, 841, 847, 857, 860, 861, 863, 899, 904, 913, 937, 950, 952, 958, 964, 970, 982, 985, 992, 994, 1014, 1017, 1148, 1163, 1164, 1172, 1174], "adjust": [102, 142, 146, 761, 808, 904, 913, 918, 920, 976, 983], "ubuntu": [103, 122, 153, 159, 163, 167, 179, 180, 181, 182, 192, 257, 259, 268, 358, 761, 847, 904, 907, 925, 984, 985, 992, 993, 997, 1141, 1146], "zoom": [103, 104, 114, 159, 168, 184, 268, 282, 358, 450, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 761, 890, 904, 984, 987, 988, 989, 990, 992, 1153], "recap": [104, 114, 188, 192, 201, 230, 277, 278, 305, 340, 561, 1012], "endeavor": 104, "hoop": [104, 847, 979], "doze": [104, 158, 213, 214, 227, 340, 347, 425, 759, 847, 892, 1050, 1056, 1141], "pictur": [104, 149, 152, 173, 184, 188, 281, 282, 437, 443, 522, 820, 868, 870, 890, 905, 924, 928, 1174], "fit": [104, 163, 168, 173, 175, 381, 386, 466, 590, 665, 687, 767, 808, 905, 1109, 1111, 1120], "theori": [106, 188, 410, 437, 1111], "Of": [106, 114, 132, 154, 157, 187, 188, 238, 256, 257, 259, 261, 268, 277, 279, 317, 357, 471, 485, 513, 523, 565, 598, 638, 639, 649, 662, 746, 758, 760, 761, 837, 852, 899, 904, 942, 945, 947, 1012, 1106, 1119, 1162], "ece20": [106, 109, 508, 524, 585, 835, 836, 843], "uml": [106, 132, 260, 278, 280, 281, 471, 485, 513, 523, 565, 761], "foundat": [106, 235, 265, 471, 485, 513, 565, 761, 808, 1170], "adapt": [106, 132, 155, 188, 260, 278, 464, 471, 473, 474, 485, 489, 499, 503, 513, 565, 729, 761, 913, 914, 1162], "syllabu": [106, 348], "vote": 106, "beurteilungsschema": 106, "grade": [106, 109, 114, 132, 344, 354, 1139], "total": [106, 109, 112, 154, 163, 167, 171, 224, 240, 250, 257, 436, 441, 449, 463, 472, 487, 521, 522, 523, 524, 575, 585, 724, 890, 892, 905, 912, 913, 914, 925, 948, 976, 983, 984, 985, 994, 997, 1061, 1063, 1146], "compos": [106, 118, 119, 134, 168, 230, 303, 375, 467, 646, 808, 996, 999, 1008, 1022, 1068, 1119], "practic": [106, 225, 234, 244, 410, 447, 600, 639, 676, 711, 718, 912, 938, 980, 1114, 1159, 1162], "theoret": [106, 342, 361, 732], "semest": [106, 109, 344, 346], "addition": [106, 151, 154, 386, 470, 487], "deliv": [106, 152, 908, 979, 980], "variou": [106, 154, 230, 256, 257, 723, 737, 739, 808, 840, 1164], "weight": [106, 175, 184, 432, 802, 914, 1030], "decid": [106, 153, 154, 159, 184, 238, 436, 466, 527, 541, 605, 804, 808, 828, 912, 1013, 1030], "excerpt": [106, 188, 191, 342, 343, 1063, 1120], "w1": [106, 114, 115, 129, 268, 317, 508, 524, 525, 942], "soup": [106, 149, 450, 452, 453, 455, 456, 458, 459, 461, 463, 465, 466, 467, 468, 469, 470, 472, 474, 477, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 521, 523, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 645, 725, 759, 946, 949, 1006, 1009, 1058, 1139, 1148], "armv8": [106, 163, 268, 525, 983, 996, 997], "rpi4": [106, 163, 268, 525, 983, 996, 997], "gnueabihf": [106, 163, 268, 525, 808, 983, 994, 996, 997], "shape": [106, 145, 173, 175, 214, 276, 277, 308, 513, 543, 565, 585, 665, 761, 808, 934, 1111, 1114, 1124], "algorithm": [106, 153, 162, 173, 221, 227, 235, 237, 240, 248, 250, 256, 257, 277, 286, 437, 513, 530, 554, 561, 565, 592, 603, 605, 606, 608, 609, 612, 613, 629, 632, 633, 662, 707, 715, 717, 728, 732, 761, 1085, 1108, 1112], "find_if": [106, 108, 214, 230, 277, 316, 607, 610, 629, 633, 650, 659, 662, 728, 761], "customiz": [106, 277, 610, 629, 633, 662, 761], "binary_search": [106, 108, 214, 230, 277, 610, 629, 633, 662, 761], "associ": [106, 163, 181, 189, 191, 193, 209, 214, 268, 271, 274, 277, 279, 317, 384, 385, 393, 398, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 513, 514, 530, 532, 565, 600, 629, 633, 662, 665, 667, 693, 705, 758, 760, 761, 767, 774, 832, 906, 934, 1006, 1036, 1037, 1038, 1054, 1056, 1113, 1162], "hour": [106, 157, 159, 184, 188, 221, 243, 261, 272, 285, 307, 346, 1068, 1106, 1113], "sent": [106, 152, 153, 192, 297, 443, 489, 848, 956, 976, 980, 1122], "015": 106, "voluntari": 106, "odd": [106, 114, 244, 279, 425, 513, 527, 530, 565, 761, 913, 1008, 1010], "char": [107, 154, 170, 213, 230, 240, 286, 363, 370, 375, 376, 379, 381, 382, 383, 386, 387, 400, 405, 408, 413, 414, 421, 425, 431, 432, 434, 450, 468, 472, 502, 506, 511, 525, 526, 557, 572, 575, 576, 580, 590, 630, 645, 646, 660, 676, 678, 703, 710, 727, 741, 759, 764, 767, 772, 788, 790, 802, 828, 912, 926, 930, 931, 934, 938, 939, 940, 941, 944, 946, 949, 963, 966, 972, 975, 976, 979, 1000, 1045, 1051, 1117, 1146, 1151], "cout": [107, 119, 163, 451, 457, 472, 486, 491, 492, 493, 505, 506, 507, 508, 511, 519, 523, 524, 551, 569, 571, 576, 578, 582, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 646, 649, 656, 659, 665, 670, 680, 682, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 707, 709, 710, 712, 713, 715, 717, 726, 727, 728, 729, 737, 739, 740, 745, 747, 749, 751, 851, 912, 946, 949, 961, 963, 975, 979, 1146], "endl": [107, 163, 451, 472, 486, 491, 492, 493, 505, 506, 507, 508, 511, 519, 523, 524, 551, 569, 571, 576, 578, 582, 583, 590, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 646, 649, 656, 659, 665, 680, 682, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 707, 709, 710, 712, 713, 715, 717, 726, 727, 728, 729, 737, 739, 740, 745, 747, 749, 751, 912, 946, 949, 961, 963, 975, 979, 1146], "constitut": 107, "_id": 107, "objectcontain": 107, "add_object": 107, "_contain": [107, 715], "push_back": [107, 496, 497, 560, 601, 602, 603, 608, 611, 614, 618, 622, 669, 670, 673, 678, 737, 979, 1151], "fragment": [107, 438, 1010, 1146], "iostream": [107, 221, 227, 237, 240, 472, 486, 491, 492, 493, 501, 505, 506, 507, 508, 511, 519, 523, 551, 569, 571, 576, 578, 582, 583, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 608, 609, 612, 613, 614, 618, 622, 623, 624, 625, 626, 632, 636, 637, 640, 642, 643, 649, 655, 656, 657, 658, 659, 660, 665, 670, 680, 683, 684, 685, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 707, 709, 710, 712, 715, 717, 726, 727, 728, 729, 737, 739, 745, 747, 749, 751, 759, 912, 946, 949, 953, 961, 963, 975, 979, 980, 1146], "my_vector": 107, "sysroot": [108, 163, 983, 997], "intel": [108, 137, 141, 155, 761, 982], "header": [108, 148, 180, 214, 230, 255, 285, 294, 295, 310, 311, 407, 408, 409, 415, 419, 422, 426, 430, 435, 439, 444, 445, 449, 454, 455, 456, 461, 462, 472, 593, 667, 682, 687, 705, 711, 758, 760, 761, 852, 909, 914, 983, 985, 994, 1063, 1096, 1100, 1101, 1103, 1111, 1114, 1161], "match": [108, 151, 158, 187, 200, 217, 224, 225, 227, 232, 240, 250, 252, 253, 262, 265, 285, 286, 292, 303, 314, 405, 449, 524, 678, 682, 702, 715, 719, 843, 852, 925, 985, 1005, 1051, 1106, 1146], "linker": [108, 110, 111, 147, 179, 294, 310, 404, 430, 437, 441, 442, 453, 460, 582, 593, 808, 982, 985, 988, 992, 999, 1156, 1157, 1158, 1161, 1166, 1172], "uniquifi": [109, 279, 513, 530, 565, 761], "lookup": [109, 120, 172, 189, 202, 221, 227, 232, 237, 240, 254, 286, 432, 487, 513, 530, 532, 565, 680, 761, 1018, 1047, 1054, 1084, 1119, 1128, 1176], "leak": [109, 154, 420, 434, 472, 492, 493, 513, 530, 532, 533, 549, 557, 560, 565, 566, 572, 637, 711, 722, 724, 761, 1006], "sure": [109, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 192, 204, 211, 228, 230, 270, 337, 431, 466, 467, 470, 489, 492, 493, 522, 548, 645, 719, 756, 808, 913, 914, 935, 939, 994, 1006, 1162], "gz": [109, 148, 808, 809, 832, 833, 834, 1061, 1141], "whatev": [109, 120, 127, 131, 151, 152, 154, 159, 175, 190, 250, 326, 443, 489, 568, 668, 693, 759, 873, 875, 925, 930, 966, 968, 1036, 1103, 1111, 1118, 1119, 1141], "quiz": [110, 111, 114, 648, 662, 761, 838, 842, 857, 863, 882, 888, 904, 989, 992], "servic": [110, 111, 148, 157, 158, 159, 192, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 443, 449, 732, 800, 806, 811, 841, 844, 895, 914, 923, 925, 932, 968, 1035], "owner": [110, 111, 153, 192, 340, 345, 725, 767, 808, 841, 855, 856, 864, 890, 925, 953], "dimension": [110, 111, 173, 687, 841, 1111, 1112], "identifi": [110, 111, 153, 162, 221, 227, 237, 240, 286, 386, 408, 429, 431, 441, 656, 766, 806, 841, 912, 914, 1052, 1113], "pthread": [110, 111, 152, 163, 169, 221, 227, 237, 240, 731, 737, 841, 950, 955, 958, 966, 980, 985], "timeslic": [110, 111, 152, 841, 964, 969], "suspend": [110, 111, 152, 153, 693, 695, 735, 804, 839, 841, 852, 955, 980], "favor": [110, 111, 841, 967, 1159], "fair": [110, 111, 152, 806, 841, 967, 969], "ensur": [110, 111, 240, 467, 515, 841], "evenli": [110, 111, 232, 841], "cpu": [110, 111, 121, 151, 152, 155, 159, 162, 185, 195, 199, 279, 351, 355, 423, 424, 436, 438, 443, 601, 732, 739, 761, 779, 792, 806, 813, 818, 828, 839, 841, 844, 848, 904, 912, 913, 914, 928, 945, 953, 955, 965, 966, 967, 968, 969, 1016, 1033, 1164], "infinit": [110, 111, 152, 172, 191, 221, 225, 227, 230, 232, 237, 240, 248, 281, 285, 398, 416, 423, 841, 845, 964, 967, 1010, 1011, 1012, 1041, 1076], "illus": [110, 111, 841, 845, 964, 967, 1164], "action": [110, 111, 162, 191, 247, 450, 456, 568, 647, 867, 868, 929, 934, 966, 979, 981, 1113, 1134], "undefin": [110, 111, 213, 379, 386, 413, 456, 574, 582, 606, 613, 618, 642, 647, 678, 707, 979], "behavior": [110, 111, 119, 152, 154, 157, 189, 211, 213, 240, 386, 606, 613, 618, 647, 678, 695, 841, 935, 939, 980, 983, 1003, 1008, 1025], "declar": [110, 111, 212, 213, 225, 230, 362, 378, 393, 402, 407, 409, 415, 416, 419, 422, 423, 426, 429, 430, 431, 435, 437, 439, 444, 445, 450, 570, 580, 640, 647, 656, 657, 667, 678, 687, 703, 705, 725, 758, 760, 761, 914, 934, 938, 940, 941, 967, 1148], "promis": [110, 111, 154, 256, 257, 259, 268, 316, 373, 431, 489, 557, 569, 578, 647, 693, 695, 696, 699, 700, 737, 738, 760, 761, 979, 1031, 1159], "caller": [110, 111, 154, 230, 373, 375, 411, 417, 441, 443, 580, 647, 659, 676, 725, 727, 732, 735, 800, 811, 951, 955, 1006, 1085], "uniniti": [110, 111, 434, 560, 567, 569, 570, 571, 574, 647, 763], "guarante": [110, 111, 152, 190, 221, 240, 425, 470, 647, 772, 779, 913, 914, 967, 968, 976, 1003], "contigu": [110, 111, 438, 601, 618, 647, 794, 944, 1127], "vec": [110, 111, 567, 569, 576, 583, 584, 585, 586, 587, 647], "carri": [112, 154, 159, 174, 429, 461, 470, 487, 759, 912, 969, 982, 1005], "norm": [112, 230, 1119], "meantim": [112, 472, 929], "fresh": [112, 153], "made": [112, 119, 131, 145, 146, 151, 152, 153, 155, 158, 159, 163, 167, 204, 219, 244, 268, 303, 340, 372, 410, 411, 413, 416, 447, 467, 471, 487, 493, 693, 792, 808, 839, 840, 845, 905, 912, 938, 944, 949, 967, 985, 1010, 1017, 1027, 1063, 1111], "arbitrari": [112, 152, 173, 240, 244, 367, 383, 401, 437, 452, 590, 617, 618, 670, 728, 740, 767, 909, 934, 938, 966, 1006, 1042, 1056, 1084], "sinc": [112, 134, 163, 169, 214, 220, 251, 336, 437, 440, 569, 577, 578, 608, 621, 664, 665, 693, 714, 719, 725, 740, 759, 808, 912, 925, 932, 938, 941, 953, 968, 975, 1036, 1160], "whichev": 112, "enumer": [112, 167, 173, 175, 185, 191, 196, 197, 201, 203, 209, 210, 212, 233, 237, 242, 248, 262, 266, 283, 286, 305, 315, 382, 429, 449, 666, 769, 804, 914, 1169], "pack": [112, 163, 167, 213, 522, 543, 834, 868, 906, 908], "unpack": [112, 167, 171, 191, 197, 201, 203, 208, 212, 216, 221, 224, 229, 233, 234, 240, 245, 247, 251, 252, 263, 268, 270, 273, 282, 286, 304, 307, 309, 315, 317, 325, 340, 705, 760, 761, 808, 834, 906, 908, 912, 983, 990, 996, 997, 1036, 1054, 1159], "kib": [112, 167], "222": [112, 185, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 308, 314, 320, 456], "addit": [112, 154, 172, 184, 211, 240, 243, 325, 384, 431, 452, 486, 487, 501, 523, 569, 581, 587, 658, 808, 845, 921, 1025, 1037, 1053, 1055, 1134], "checkout": [112, 134, 144, 155, 167, 181, 781, 808, 809, 1171], "previou": [112, 156, 172, 303, 508, 560, 576, 658, 868, 900, 940, 1007, 1009, 1029, 1031, 1075, 1133], "9bfda12": 112, "mosquitto": [112, 224, 228, 240, 247, 250, 265, 272, 282, 286, 308, 314, 1100, 1122], "client": [112, 122, 134, 157, 159, 170, 215, 219, 247, 261, 447, 475, 476, 489, 728, 729, 908, 921, 923, 931, 976, 1118, 1134], "smoothli": 112, "forward": [112, 167, 230, 256, 257, 258, 267, 288, 289, 316, 378, 393, 402, 408, 409, 415, 419, 422, 426, 435, 439, 444, 445, 630, 667, 674, 705, 715, 758, 760, 761, 808, 868, 892, 900, 904, 905, 915, 920, 1159], "diverg": [112, 966], "00aea42": 112, "delet": [112, 179, 191, 221, 240, 255, 265, 286, 317, 335, 434, 465, 468, 507, 524, 533, 537, 549, 557, 572, 575, 634, 637, 642, 665, 675, 676, 677, 705, 710, 722, 723, 724, 725, 741, 751, 760, 761, 786, 816, 845, 1115, 1141, 1158, 1159], "footnot": [112, 155, 157, 158, 159, 162, 163, 168, 175, 181, 184, 187, 271, 274, 466, 493, 537, 584, 586, 587, 600, 630, 649, 777, 779, 840, 847, 862, 912, 913, 914, 935, 938, 998, 1030, 1033, 1063, 1097, 1112, 1159, 1162], "term": [112, 119, 152, 154, 176, 204, 244, 277, 279, 337, 437, 580, 583, 647, 725, 728, 841, 914, 933, 967, 979, 1111, 1146], "ss2023": 113, "ws2023": [113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 131, 761], "firstnam": [114, 132, 185, 211, 224, 232, 234, 237, 240, 244, 247, 250, 252, 253, 262, 265, 272, 286, 292, 297, 304, 326, 331, 467, 468, 496, 502, 511, 512, 525, 580, 626, 652, 656, 658, 660, 677, 835, 836, 872, 873, 875, 877, 880, 1006, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1035, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1114, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "lastnam": [114, 132, 185, 214, 224, 230, 232, 234, 237, 240, 244, 247, 250, 252, 253, 265, 272, 286, 292, 297, 304, 326, 331, 467, 468, 496, 502, 511, 512, 525, 580, 626, 650, 652, 656, 659, 662, 677, 761, 835, 836, 872, 873, 875, 877, 880, 1006, 1019, 1020, 1022, 1023, 1024, 1026, 1027, 1035, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1114, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "bouncem": [114, 132, 524, 525, 835, 836], "procf": [114, 192, 194, 268, 761, 846, 904, 945, 962, 1163, 1170], "umask": [114, 258, 267, 268, 288, 289, 340, 345, 761, 838, 863, 887, 904, 938, 950], "diff": [114, 208, 227, 567, 569, 1025, 1165], "raspi": [114, 148, 282, 340, 346, 761, 785, 808, 809, 810, 812, 817, 823, 826, 829, 904, 906, 907, 908, 909, 912, 913, 914, 996, 997], "spirit": [114, 401], "readm": [114, 136, 171, 277, 279, 912, 913], "modular": [114, 184, 189, 191, 219, 238, 270, 342, 343, 373, 450, 982, 1009], "plc": 114, "sallok": 114, "constantsensor_nopoli": [114, 132, 513, 519, 565, 761], "randomsensor_nopoli": [114, 132, 513, 565, 761], "ece21": [114, 131, 132], "labexam": 114, "hysteresis_nopoli": [114, 115, 132, 513, 514, 565, 761], "upload": [114, 158, 868, 1061, 1133], "j": [114, 149, 157, 163, 200, 215, 217, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 286, 292, 304, 308, 320, 387, 390, 407, 431, 438, 487, 580, 669, 680, 728, 818, 834, 990, 994, 1010, 1119, 1125], "bz2": [114, 153, 443, 808, 830, 833, 1003], "influenc": [114, 983, 1159], "felber": 114, "vscode": [114, 182, 346, 360, 890], "folder": [114, 158], "comprehend": [114, 238, 386, 392, 979], "workspacefold": 114, "suppli": [114, 154, 192, 525, 527, 571, 767, 808, 824, 843, 905, 909, 912, 914, 929, 938, 1067], "cpprefer": [114, 605, 606, 607, 608, 609, 611, 612, 613, 614, 617, 626, 645], "averagingsensor_nopoli": [114, 132, 513, 565, 761], "toolcas": [114, 127, 132, 277, 279, 682], "mocksensor_nopoli": [114, 132, 513, 514, 515, 516, 565, 761], "specifi": [114, 152, 169, 240, 252, 286, 381, 449, 458, 511, 514, 519, 522, 571, 651, 665, 680, 704, 715, 808, 868, 925, 938, 942, 968, 980, 1033, 1048, 1056, 1060, 1077, 1096, 1098, 1127, 1129, 1134], "hint": [114, 127, 167, 240, 252, 281, 364, 467, 527, 537, 541, 652, 835, 836, 848, 917, 966], "target_link_librari": [114, 180, 453, 455, 456, 457, 458, 462, 508, 544, 547, 553, 559, 562, 978, 983, 984, 1145, 1148, 1150], "inter": [114, 152, 170, 176, 967, 1163, 1170, 1173, 1175], "likewis": [114, 227, 554, 585, 834, 853, 924, 940, 990, 1111, 1148], "ledstripedisplay_nopoli": [114, 132, 513, 565, 761], "outlook": [115, 119, 132, 847], "somewhat": [115, 172, 213, 437, 470], "02131d959eaa": [115, 508, 524, 525, 942], "heat": [115, 260, 464, 471, 515, 524, 761, 914, 1110, 1111], "hwmon2": [115, 912], "temp1_input": [115, 912, 914], "boilingpot": [115, 117], "hysteresi": [115, 125, 130, 131, 132, 317, 349, 515], "knob": [115, 1034], "steer": 115, "desir": [115, 157, 221, 227, 237, 240, 382, 386, 397, 519, 569, 571, 577, 659, 806, 939, 941, 1113], "hardcod": [115, 153, 344, 543, 767, 771, 1072], "ledstripedisplai": [115, 125, 127, 130, 131], "unreason": 115, "cluster_fh2021": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 761], "fh2021_boiling_pot": [115, 116, 117, 118, 124, 131, 761], "fh2021_sensor_interfac": [115, 116, 117, 118, 124, 131, 761], "fh2021_switch_interfac": [115, 116, 117, 118, 123, 124, 125, 131, 761], "fh2021_sysfs_gpio_switch": [115, 116, 118, 124, 131, 761], "breadboard": [116, 118, 914, 1163, 1170], "acrobat": [116, 118], "boilingpot_suit": 117, "status_report": 117, "percentage_displai": 117, "fh2021_display_infrastructur": [117, 123, 124, 761], "infrastructur": [117, 118, 124, 132, 152, 442, 761, 764, 976], "fh2021_pwm_displai": [117, 123, 124, 127, 761], "pwm": [117, 118, 123, 124, 132, 268, 277, 761, 808, 904, 905, 911, 948, 1163, 1170], "fh2021_boiling_pot_displai": [117, 124, 761], "stripe": [118, 123, 127, 514], "termin": [119, 151, 153, 157, 171, 182, 204, 250, 252, 268, 271, 274, 277, 279, 281, 362, 365, 369, 372, 375, 382, 394, 400, 423, 443, 449, 461, 465, 491, 492, 524, 543, 572, 693, 699, 726, 732, 824, 843, 846, 850, 851, 852, 868, 890, 900, 901, 934, 952, 956, 961, 966, 978, 979, 980, 1035, 1037, 1041, 1056, 1068, 1085, 1113, 1119, 1122, 1170], "style": [119, 148, 152, 157, 221, 227, 230, 237, 240, 279, 433, 448, 449, 543, 568, 569, 574, 608, 642, 645, 656, 665, 670, 701, 717, 742, 746, 750, 751, 752, 760, 761, 776, 825, 948, 1034, 1075, 1100, 1111], "reusabl": 119, "compon": [119, 212, 225, 317, 440, 892, 967], "dedic": [119, 152, 153, 184, 189, 238, 268, 271, 274, 433, 449, 776, 846, 847, 912, 913, 914, 948, 950, 984, 1002, 1013, 1046, 1162], "constrain": [119, 846], "decoupl": [119, 228, 465, 966], "sink": [119, 121, 124, 280, 281, 296, 299, 302, 306, 761], "datalogg": [119, 281, 303], "target_include_directori": [119, 458, 459, 461, 462], "announc": [119, 347, 458, 459, 636, 912, 913], "anyon": [119, 152, 557, 779], "node": [119, 145, 157, 162, 172, 421, 441, 458, 621, 764, 767, 771, 777, 786, 998, 1122, 1139], "startlog": 119, "uint16_t": [119, 381], "special": [119, 145, 152, 199, 232, 234, 240, 244, 268, 362, 414, 475, 486, 489, 492, 493, 537, 560, 565, 678, 680, 734, 757, 834, 845, 850, 906, 928, 934, 956, 980, 999, 1004, 1023, 1025, 1033, 1042, 1044, 1048, 1108, 1113, 1144, 1164, 1165], "unif": [119, 566], "leftov": 119, "gettim": 119, "defer": [119, 152, 447, 806, 828], "timestamp": [119, 217, 227, 247, 276, 280, 281, 302, 304, 306, 308, 314, 449, 729, 769, 870, 890, 924, 975], "sinkfil": 119, "sinkmock": 119, "usabl": [119, 240, 286, 391, 470, 521, 676, 915], "sensorconfig": [119, 132, 307], "sensorvalu": [119, 120, 122, 486, 500], "runtime_error": [119, 491, 492, 503, 505, 506, 507, 525, 739], "logger_suit": 119, "loggerbasictest": 119, "sensor_values_suit": 119, "sensor_config_suit": 119, "duplicate_sensor": 119, "prebuilt": [119, 912], "order": [119, 139, 145, 151, 157, 158, 162, 163, 172, 184, 185, 188, 190, 221, 227, 232, 242, 244, 247, 277, 294, 310, 366, 392, 403, 425, 437, 452, 467, 486, 541, 543, 550, 552, 615, 661, 759, 763, 779, 792, 808, 897, 905, 912, 914, 930, 969, 994, 1010, 1030, 1078, 1088, 1161], "acquisitionloop": [119, 303, 307], "n_iter": 119, "doit": [119, 224, 472], "write_measur": [119, 303], "mockingsink": 119, "receiv": [119, 153, 172, 227, 230, 268, 297, 373, 489, 580, 678, 767, 779, 800, 808, 868, 905, 908, 914, 921, 929, 934, 956, 964, 979, 980, 1003, 1006, 1056, 1087, 1102, 1119], "yaml": 119, "ini": [119, 136, 157, 171, 348, 351, 1139], "fh2021_datalogg": [119, 120, 121, 122, 124, 761], "predecessor": [120, 122, 238, 246, 252, 296, 299], "sinklogg": [120, 122], "csvsink": [120, 303], "logfil": [120, 153, 191, 850, 901], "linksoben": 120, "rechtsunten": 120, "addmeasur": 120, "rememb": [120, 157, 158, 173, 180, 190, 211, 392, 425, 475, 601, 602, 636, 639, 676, 677, 725, 804, 808, 850, 865, 868, 887, 912, 921, 923, 1004, 1070, 1080], "csvname": [120, 225, 270, 449], "valuenam": 120, "_config": 120, "sensor_valu": 120, "getmeasur": 120, "rotat": [120, 153, 905, 930], "backup": [120, 158, 192, 450, 837, 839, 921, 1124], "fh2021_datalogger_csv_sink": [120, 124, 761], "boil": [121, 122, 125, 131, 761, 808], "pot": [121, 122, 125, 131, 761], "struct": [122, 155, 179, 213, 214, 230, 408, 413, 419, 420, 421, 422, 425, 426, 429, 431, 433, 435, 439, 444, 445, 467, 472, 489, 524, 525, 569, 570, 575, 577, 579, 580, 600, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 665, 667, 668, 669, 670, 677, 693, 696, 698, 699, 700, 701, 705, 710, 728, 729, 739, 741, 749, 750, 752, 758, 759, 760, 761, 767, 769, 772, 774, 776, 777, 779, 792, 796, 798, 800, 802, 804, 810, 811, 816, 818, 821, 825, 827, 828, 906, 908, 912, 931, 932, 944, 955, 966, 969, 975, 976, 979, 980, 1160], "sensor_config": 122, "getallmeasur": 122, "localhost": [122, 1117, 1122], "1883": [122, 1122], "transport": [122, 176, 228, 230, 522, 739, 1102, 1122], "sensor1": [122, 262, 472, 745, 747, 749, 751, 752], "sensor2": [122, 472, 745, 747, 749, 751, 752], "api": [122, 152, 159, 176, 199, 213, 240, 351, 355, 761, 764, 771, 779, 786, 790, 802, 904, 945, 957, 965, 968, 976, 1061, 1117, 1135, 1163, 1164], "burden": [122, 449, 582, 1008, 1140], "handmad": 122, "fedora": [122, 148, 157, 163, 164, 167, 181, 268, 537, 761, 765, 768, 770, 773, 775, 778, 785, 787, 788, 789, 793, 799, 805, 809, 812, 817, 823, 826, 829, 864, 868, 904, 907, 984, 985, 992, 993, 994, 997, 1122, 1146], "mosquitto_new": 122, "mosquitto_connect": 122, "mosquitto_destroi": 122, "prohibit": [122, 577], "wide": [122, 159, 163, 363, 364, 840, 921, 976, 982], "iot": [122, 124, 132, 228, 268, 761], "broadcast": [122, 737, 906, 913, 955, 980, 1176], "flexibl": [122, 260, 458, 464, 478, 485, 499, 513, 565, 611, 761, 951, 966, 982, 983, 984, 999, 1000, 1051, 1154], "fh2021_datalogger_mqtt_sink": [122, 124, 761], "percentag": [123, 127, 441], "show_percentag": [123, 127], "wire": [123, 905, 915, 994], "connect": [123, 137, 152, 159, 172, 192, 204, 225, 268, 297, 337, 345, 346, 421, 739, 839, 901, 905, 906, 913, 914, 923, 928, 934, 948, 1115, 1117, 1122, 1134, 1162, 1174, 1176], "shown": [123, 157, 190, 331, 890, 976, 1119], "src_demo": [123, 127], "logger": [124, 132, 281, 299, 303, 306, 729, 761], "fh2021_sensor_w1": [124, 761], "fh2021_datalogger_integr": [124, 761], "fh2021_boiling_pot_basic_integr": [124, 761], "fh2021_boiling_pot_full_integr": [124, 761], "fh2021_mqtt_tkinter": [124, 126, 761], "subscrib": [124, 149, 228, 240, 761], "fh2021_libgpiod_switch": [124, 125, 761], "mockswitch": [125, 130, 131], "libgpiodswitch": 125, "set_stat": [125, 131, 317], "tkinter": 126, "stackoverflow": [126, 340, 345, 423], "2400262": 126, "simul": [126, 184, 346, 347, 524], "random": [126, 132, 170, 172, 188, 200, 212, 224, 225, 228, 232, 234, 237, 240, 245, 247, 250, 272, 281, 314, 335, 340, 383, 470, 472, 477, 486, 512, 523, 533, 534, 535, 536, 538, 539, 540, 570, 723, 839, 914, 925, 944, 972, 1006, 1018, 1041, 1113, 1122], "pca9685": [127, 132, 268, 761, 904, 905, 911], "pwmchip0": [127, 905, 913], "pwm0": [127, 905, 913], "danc": [127, 158, 524, 828, 998], "phase": [127, 200, 491, 505, 976, 1010], "cumbersom": [127, 154, 156, 191, 578, 601, 669, 713, 764, 950, 976, 1146], "percentagedisplai": 127, "round": [127, 152, 219, 224, 234, 244, 260, 265, 314, 316, 464, 471, 472, 474, 476, 485, 486, 499, 513, 565, 761, 969, 1175], "hood": [127, 154, 982], "relationship": [127, 317, 340, 479, 512, 554, 636, 729, 951, 984, 998, 1014, 1018, 1112], "pwmdisplai": 127, "pwm_control": 127, "bit": [127, 131, 146, 151, 152, 154, 157, 159, 162, 163, 184, 185, 188, 195, 214, 225, 227, 228, 234, 258, 261, 267, 268, 271, 274, 288, 289, 307, 335, 340, 345, 351, 363, 369, 375, 381, 386, 393, 402, 409, 410, 415, 419, 422, 425, 426, 435, 439, 444, 445, 508, 522, 583, 667, 702, 705, 715, 725, 758, 759, 760, 761, 804, 808, 827, 838, 839, 863, 865, 867, 904, 905, 906, 908, 913, 915, 938, 966, 983, 992, 1002, 1042, 1106, 1119, 1154, 1159], "pwm5": 127, "visibl": [127, 131, 167, 193, 213, 279, 326, 373, 375, 377, 401, 403, 434, 435, 439, 444, 445, 509, 658, 761, 779, 912, 914, 976, 1047, 1075, 1115], "10000000": [127, 154, 227, 389, 952, 1008, 1016], "set_percentag": 127, "duti": [127, 905, 913], "duty_cycl": [127, 905, 913], "unbuff": 127, "automat": [127, 131, 140, 154, 156, 158, 159, 167, 202, 204, 208, 214, 221, 227, 237, 240, 244, 277, 279, 377, 386, 413, 430, 433, 437, 449, 478, 479, 568, 571, 636, 640, 678, 707, 746, 760, 761, 764, 779, 808, 912, 914, 941, 1003, 1056, 1063, 1068], "serv": [130, 156, 158, 398, 1112, 1140, 1174], "ground": [130, 913, 914], "mocksensor": [130, 132], "upstream": [131, 155, 158, 163, 167, 786], "sysfsgpioswitch": 131, "wherea": 131, "gpio20": 131, "voltag": [131, 905, 912], "constructur": 131, "proid": 131, "lifecycl": 131, "avg": [132, 240, 430, 469, 486, 497, 516, 523, 745, 747, 749, 751], "lifetim": [132, 153, 211, 213, 230, 242, 378, 393, 402, 409, 415, 419, 420, 422, 426, 435, 439, 444, 445, 479, 572, 655, 667, 678, 705, 758, 760, 761, 1001], "averagingsensor": [132, 469, 497], "overrid": [132, 148, 212, 225, 240, 255, 317, 466, 472, 474, 479, 494, 496, 497, 498, 500, 501, 503, 525, 639, 640, 704, 705, 745, 760, 761, 1003, 1018, 1151], "scheme": [132, 240, 286, 303, 306, 581, 1001, 1005], "constantsensor": [132, 469, 472, 477, 489, 490, 498, 510, 517, 523, 533, 534, 535, 536, 538, 539, 675, 723, 724, 725, 726, 1018, 1094], "w1sensor": [132, 509, 510, 511, 512, 524], "meet": [132, 157, 159, 184, 425, 852, 994, 1007], "liskow": [132, 475], "segreg": [132, 447], "invers": [132, 244, 355, 447, 465, 472, 772, 967, 968, 1175], "gcc": [132, 153, 154, 180, 200, 202, 221, 227, 237, 240, 333, 360, 362, 386, 403, 407, 425, 428, 429, 431, 441, 442, 450, 452, 551, 599, 602, 734, 808, 809, 845, 865, 930, 931, 932, 938, 939, 940, 941, 950, 953, 983, 994, 996, 997, 998, 999, 1000, 1032, 1148, 1154], "cycl": [132, 214, 249, 447, 449, 693, 724, 738, 760, 761, 904, 905, 913, 945, 959, 965], "todai": [132, 153, 204, 212, 228, 261, 278, 294, 307, 310, 349, 375, 1106, 1161, 1164], "minut": [132, 152, 158, 159, 184, 188, 191, 228, 914, 1106, 1122], "suppos": [132, 167, 188, 244, 325, 489, 786, 808, 825, 847, 905, 953, 1100, 1139], "deploi": [132, 164, 192, 340, 345, 465, 798, 835, 836, 913, 914, 919, 921, 925], "leddisplai": 132, "pwmcontrol": 132, "minor": [132, 159, 163, 221, 227, 237, 240, 270, 767, 774, 839], "tweak": [132, 1139], "standup": 132, "followup": [132, 235, 296, 299, 510, 1095], "dir": [134, 185, 204, 212, 225, 234, 237, 244, 262, 265, 285, 286, 304, 325, 333, 414, 449, 450, 456, 461, 853, 983, 984, 996, 1019, 1134, 1141], "wo": [134, 160, 170, 171, 179, 185, 187, 358, 1156, 1157, 1175], "jf": [134, 145, 159, 196, 197, 255, 272, 340, 345, 359, 489, 503, 783, 1123, 1124, 1125, 1127, 1128, 1129, 1130, 1164, 1169], "aon": 134, "biz": 134, "svn": [134, 148, 168, 214, 358, 359], "recommend": [134, 163, 184, 192, 204, 237, 437, 590, 621, 808, 868, 913, 1061, 1115, 1123], "lokalen": 134, "fetch": [134, 153, 167, 808, 951, 979], "myremot": 134, "orig": [134, 155, 202], "stia": 134, "improv": [135, 437, 440, 452, 708, 723, 759, 1001], "stack": [135, 173, 174, 175, 182, 196, 197, 215, 221, 224, 227, 237, 240, 247, 250, 265, 272, 282, 286, 308, 314, 431, 437, 487, 571, 602, 722, 841, 845, 913, 938, 950, 1169], "hang": [135, 195, 567, 811, 834], "seo": [135, 820], "blog": [135, 148, 152, 155, 162, 167, 727], "i2": [135, 137, 142, 247, 282, 761], "kontron": [135, 144, 761], "smarc": [135, 144, 761], "proper": [136, 152, 180, 423, 783, 808, 940, 1025], "manifest": [136, 994, 1142], "cfg": [136, 144], "author_email": 136, "classifi": [136, 1061, 1108], "tox": 136, "travi": 136, "yml": 136, "upgrad": [136, 140, 141, 171, 761, 1134, 1141], "zip": [136, 144, 148, 212, 232, 238, 252, 265, 315, 320, 868, 874, 890], "zipfil": [136, 212], "99": [136, 162, 171, 185, 195, 202, 208, 211, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 441, 969, 1045, 1080, 1110], "999": [136, 224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "whl": [136, 148, 1061, 1134], "uninstal": [136, 455, 1134, 1139], "pypa": 136, "sampleproject": 136, "devicetre": [137, 913], "signal": [137, 148, 149, 177, 279, 358, 441, 739, 761, 779, 800, 845, 904, 905, 913, 945, 950, 958, 966, 967, 972, 976, 1165, 1172, 1173, 1176], "audio_mck": 137, "i2s0_ck": 137, "i2s0_lrck": 137, "i2s0_sdout": 137, "alsa": [137, 155], "tlv320dac3203irg": 137, "tlv320dac3203": 137, "drive": [137, 270, 427, 515, 913, 934, 1113], "suggest": [137, 151, 152, 154, 156, 158, 159, 167, 176, 184, 191, 192, 193, 194, 257, 259, 277, 279, 401, 1030, 1058, 1139], "tlv320aic32x4": 137, "compat": [137, 157, 173, 276, 576, 666, 682, 759, 764, 783, 985, 1031, 1054, 1119, 1134, 1135], "tlv320aic31xxsw": 137, "tlv320aic31xx": 137, "wget": [138, 157, 159, 163, 282, 994, 996], "cdimag": 138, "amd64": [138, 204, 337, 381], "iso": [138, 212, 230, 231, 247, 250, 270, 292, 304, 308, 361, 449, 566, 582, 832], "netinst": 138, "img": [138, 173, 175, 436, 808, 912], "qcow2": 138, "virtualdebian": 138, "30g": [138, 159], "kvm": [138, 155], "hda": 138, "cdrom": 138, "2048": [138, 162, 227], "nic": 138, "sic": [138, 163], "box": [138, 142, 184, 905, 912, 1030], "deliveri": [139, 143, 152, 978, 981], "outcom": [140, 188, 193, 279, 808, 867, 868, 990, 1062], "dirti": [140, 141, 154, 168, 407, 472, 761], "forget": [140, 145, 152, 153, 154, 228, 372, 375, 420, 449, 1115, 1121, 1140, 1159], "graphic": [140, 442, 843, 844, 913], "plug": [140, 153, 155, 471], "monitor": [140, 155, 169], "4k": [140, 154, 966, 975], "dual": [140, 142], "gnome": [140, 152, 157, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 443, 808, 843, 899, 967], "applianc": [140, 154, 443], "x11": 140, "wayland": [140, 157], "benchmark": 140, "glxgear": 140, "su": [140, 996], "pect": 140, "cluster_project_xxx": [141, 761], "project_xxx_hardware_bringup": [141, 761], "bringup": [141, 142, 761], "project_xxx_dirty_upgrad": [141, 761], "project_xxx_wait_hardwar": [141, 761], "project_xxx_debian_config": [141, 761], "project_xxx_yocto_kernel": [141, 761], "bsp": [141, 761], "project_xxx_debian_kernel_packag": [141, 761], "finish": [141, 184, 203, 732, 761, 818, 1017], "project_xxx_audio_chip": [141, 761], "chip": [141, 170, 224, 761, 905, 909, 912, 930, 932, 966, 1063], "shot": [142, 159, 401, 665, 739, 759], "dac": 142, "massacr": [142, 171, 230, 340, 401, 407, 433, 457, 665, 1013], "distro": [142, 455, 1037, 1148], "bootload": [142, 151, 162, 443, 844, 912, 914], "oldconfig": [142, 153, 781, 788, 808, 809], "qemu": [142, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "grub": [142, 162], "stabl": [142, 159, 163, 447, 786, 808, 847, 966, 998, 1000, 1061, 1135], "yoctoproject": 144, "v5": [144, 155], "bsp_smarc": 144, "sxal4_smarc": 144, "sxal_r1": 144, "0_combin": 144, "sxal4_5": 144, "sxal4": 144, "inc": [144, 155, 276, 424, 461, 462, 734, 953, 1016], "filesextrapaths_prepend": 144, "thisdir": 144, "linux_vers": 144, "linux_version_extens": 144, "linux_kernel_typ": 144, "kbranch": 144, "kmeta": 144, "lic_files_chksum": 144, "md5": 144, "bbea815ee2795b2f4230826c0c6b8814": 144, "srcrev_machine_pn": 144, "3604bc07c035939266d78d65084c6cd54ffc6d56": 144, "srcrev_meta_pn": 144, "8d42b14fe517ef036dc4e7b290f16d142f4f1d39": 144, "src_uri": 144, "bareclon": 144, "cach": [144, 148, 153, 279, 282, 423, 437, 442, 443, 601, 618, 890, 967, 1134, 1141, 1157], "destsuffix": 144, "scc": 144, "pv": 144, "srcpv": 144, "include_patch": 144, "patch": [144, 163, 164, 968, 996, 1154], "compatible_machin": 144, "therebi": [145, 184, 673, 899, 979, 1025, 1063], "simplifi": 145, "fine": [145, 154, 159, 188, 452, 453, 568, 680, 682, 788, 818, 925, 929, 997, 1014, 1026, 1035, 1041, 1056, 1119], "grain": [145, 159, 449, 452, 818, 1026, 1041], "surround": [145, 666, 707, 719], "cut": [145, 173, 191, 204, 244, 258, 267, 288, 289, 386, 421, 761, 798, 838, 852, 898, 901, 904, 914], "linewis": 145, "wherev": [145, 365], "obs studio": 146, "video edit": 146, "screen record": 146, "These": [146, 154, 156, 157, 221, 227, 237, 240, 452, 465, 781, 808, 912, 984], "offici": [146, 188, 189, 192, 193, 194, 199, 565, 996, 1144], "jonathan": [146, 341, 342, 1154], "himself": [146, 914], "paus": [146, 154, 966, 979], "meanwhil": 146, "freez": [146, 1134, 1142], "photo": 146, "length": [146, 208, 211, 221, 227, 237, 240, 269, 276, 286, 308, 314, 449, 521, 572, 584, 645, 779, 792, 804, 906, 908, 934, 944, 976, 1111, 1119, 1123, 1130], "grab": [146, 905, 913], "neil": 147, "patel": 147, "insight": [147, 151, 452, 994, 1133], "consol": [147, 204, 843, 846, 901, 1085, 1165], "crawlabl": 147, "dn": [147, 156, 159, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 1176], "domain": [147, 148, 158, 159, 164, 433, 447, 459, 967, 1105, 1108, 1174, 1176], "ipc": [147, 148, 149, 152, 357, 359, 759, 761, 904, 945, 973, 1174], "queue": [147, 148, 153, 162, 163, 170, 176, 196, 197, 199, 228, 256, 257, 259, 268, 280, 281, 302, 303, 306, 316, 489, 738, 760, 761, 802, 810, 828, 841, 845, 904, 945, 955, 959, 1169, 1173, 1174, 1175], "pydbu": 148, "openh": [148, 149, 170, 211], "traceback": [148, 174, 221, 227, 237, 240, 250, 270, 272, 286, 308, 1003, 1004, 1005, 1010, 1018, 1019, 1025, 1026, 1047, 1048, 1052, 1054, 1057, 1058, 1119, 1127, 1128, 1140], "recent": [148, 151, 154, 159, 174, 182, 221, 227, 237, 240, 250, 270, 272, 286, 308, 361, 808, 887, 1003, 1004, 1005, 1010, 1018, 1019, 1025, 1026, 1047, 1048, 1052, 1054, 1057, 1058, 1119, 1127, 1128, 1140], "oh_test": 148, "easysuit": 148, "oh_dbus_easysuit": 148, "easysuite_error": 148, "error_suit": 148, "dbusheatingerror": 148, "modulenotfounderror": [148, 265, 270, 1005], "research": [148, 151, 152, 265, 1112], "pygobject": 148, "714": [148, 227], "kb": [148, 154, 1141], "venv": [148, 185, 211, 221, 227, 237, 238, 240, 252, 282, 320, 347, 348, 890, 1060, 1093, 1106, 1121, 1127, 1128, 1133, 1139, 1141, 1142], "standalon": [148, 425, 678, 979, 1146], "ss_9wmug": 148, "__env_pip__": 148, "ignor": [148, 169, 181, 240, 286, 351, 387, 407, 437, 459, 467, 599, 602, 665, 680, 693, 715, 766, 850, 913, 938, 980, 1003, 1134], "9lrqmi4l": 148, "overlai": [148, 808, 912, 913], "locat": [148, 149, 153, 158, 163, 184, 221, 227, 237, 240, 244, 294, 310, 340, 358, 410, 423, 431, 437, 465, 487, 580, 600, 676, 724, 783, 808, 912, 913, 914, 934, 952, 976, 983, 1003, 1110, 1127, 1161], "pycairo": 148, "cwd": [148, 522, 759, 834, 845, 871, 890, 892, 896, 984], "821": [148, 227], "py2": 148, "344": [148, 227, 240, 272, 286, 304, 314], "517": [148, 227, 272], "tmpabab356k_in_process": 148, "build_wheel": 148, "tmpt1yod7mc": 148, "o4u45fjc": 148, "pycairo_33865a19ad6b4a719885f07926efe16d": 148, "bdist_wheel": [148, 1061], "build_pi": 148, "x86_64": [148, 155, 157, 204, 211, 337, 360, 386, 524, 585, 781, 786, 985, 994], "cairo": 148, "pyi": 148, "build_ext": 148, "pkg": 148, "perhap": [148, 244, 777, 1114], "pkg_config_path": 148, "gobject": 148, "introspect": [148, 966], "cp39": 148, "linux_x86_64": 148, "lib64": [148, 180, 185, 211, 221, 227, 237, 240, 244, 320, 443, 453, 455, 460, 982, 985, 999, 1006, 1127, 1128, 1134, 1148], "_vendor": 148, "pep517": 148, "in_process": 148, "_in_process": 148, "tmpf2wjv23h": 148, "4rtfumdz": 148, "pygobject_beef4432e2454eb0b7facc57fadf42b8": 148, "pygtkcompat": 148, "generictreemodel": 148, "_signalhelp": 148, "_propertyhelp": 148, "_ossighelp": 148, "_option": 148, "_gtktemplat": 148, "_error": [148, 496], "_constant": 148, "keysym": 148, "pango": 148, "gio": 148, "gdkpixbuf": 148, "gdk": 148, "glib": 148, "gimarshallingtest": 148, "tmp56g_ixbz": 148, "bvay4iv4": 148, "pygobject_6777f13e15934fb2b13139399b143557": 148, "todo": [148, 193, 228, 256, 257, 353, 354, 523, 665, 762], "summari": [148, 189, 472, 575, 724, 1139], "c1": [148, 162, 470, 584, 669], "misc": [148, 149, 171, 172, 543, 777, 821, 1158], "w3school": 148, "howto": [148, 149, 779], "howto_css_image_transpar": 148, "asp": 148, "titelseit": 148, "mitt": 148, "howto_js_read_mor": 148, "subdir": [148, 759, 1003], "gegen": [148, 1154], "clutter": [148, 181], "404": [148, 158, 227, 234, 272, 286, 304], "prio": [148, 190, 968, 969, 975], "beagleboard": [148, 153, 164], "repair": [148, 164, 224], "nand": [148, 164], "40w": [148, 164], "suck": [148, 149, 164], "disk": [148, 151, 152, 155, 159, 164, 436, 844, 845, 865, 894, 929, 930, 999, 1056, 1154], "contact": [148, 1161], "ssl": [148, 159, 1134], "certif": [148, 159, 162, 209, 1134], "070": [148, 665], "fortgeschritten": [148, 359, 1156], "700": [148, 227, 618, 726, 921], "lf": [148, 211, 503, 1056], "descr": [148, 232, 308], "050": [148, 665, 978, 979], "080": [148, 645, 665], "020": [148, 227, 268, 645, 665, 974, 975, 978, 979], "060": [148, 149, 188, 348, 665], "_hidden": 148, "010": [148, 314, 665, 867, 971, 972, 974, 975, 978, 979], "190": [148, 185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 320], "propos": [148, 433, 511], "030": [148, 665, 675, 725, 974, 975, 978, 979], "040": [148, 314, 665, 974, 975, 978, 979], "central": [149, 181, 214, 303, 306, 361, 405, 465, 759, 999, 1044, 1056, 1162], "rstjinja": 149, "105": [149, 171, 185, 195, 200, 202, 208, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 970], "110": [149, 156, 171, 185, 195, 202, 208, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 505, 506, 665, 867, 974, 975], "cxx_class_templ": [149, 565, 761], "cxx_dynamic_memori": [149, 565, 761], "cxx_global_initi": [149, 565, 761], "cxx_inheritance_virtu": [149, 565, 761], "cxx_ownership_raii": [149, 565, 761], "cxx_stl_container_intro": [149, 565, 761], "cxx_templates_vs_interfac": [149, 565, 761], "maj": [149, 765], "min": [149, 265, 743, 765, 1111], "cdev": [149, 764, 765, 767, 771, 772, 777], "fop": [149, 765, 772], "devtmpf": [149, 764, 765, 810], "dynam": [149, 179, 187, 188, 221, 227, 237, 238, 240, 283, 358, 422, 426, 435, 439, 444, 445, 455, 486, 523, 554, 563, 565, 572, 637, 639, 642, 643, 662, 667, 676, 705, 729, 745, 746, 747, 758, 760, 761, 765, 770, 775, 778, 780, 785, 789, 799, 803, 805, 810, 812, 817, 823, 826, 829, 834, 845, 904, 953, 955, 964, 982, 983, 1022, 1036, 1057, 1106, 1160, 1164], "sysprog_ev": 149, "sysprog_ipc": 149, "sysprog_sign": 149, "unittest_gtest_bas": [149, 761, 1144], "unittest_gtest_fixtur": [149, 761, 1144], "brows": [149, 151, 167, 847, 913], "blender": 149, "corda": 149, "figclass": 149, "homebrain": [149, 270, 282, 890, 891], "literalinclud": 149, "within": [149, 154, 230, 240, 286, 358, 514, 515, 519, 524, 569, 640, 703, 772, 905, 1017, 1034, 1046, 1130], "045": [149, 268, 314], "tex": 149, "055": 149, "056": 149, "910": [149, 227, 890], "glt": 149, "virtmem": 149, "fart": 149, "ungern": 149, "lost": [149, 159, 224, 230, 434, 543, 665, 724, 921, 955, 958, 975, 1017, 1139, 1140, 1146], "he": [149, 153, 167, 175, 184, 188, 191, 204, 209, 212, 214, 235, 238, 261, 280, 281, 285, 302, 307, 678, 680, 715, 718, 923, 956, 969, 980, 1022, 1050, 1106, 1132], "friend": [151, 152, 199, 220, 256, 257, 259, 268, 279, 316, 317, 443, 506, 583, 738, 739, 760, 761, 779, 800, 905, 1148], "alia": [151, 156, 204, 230, 419, 422, 426, 435, 439, 444, 445, 453, 667, 705, 758, 760, 761, 868, 869, 996], "rm": [151, 153, 157, 158, 192, 194, 340, 345, 915, 925, 1141], "rf": [151, 153, 868, 878, 1141], "creativ": [151, 229], "variat": [151, 727, 813, 850], "thereof": [151, 268, 276, 470, 587, 1022], "happili": [151, 152, 230, 433, 582], "stage3": 151, "decad": [151, 159, 176, 808, 912, 914, 925, 1004, 1162], "busybox": [151, 152], "initramf": [151, 833], "resid": [151, 154], "flash": [151, 154, 159, 443, 846, 905, 966], "correct": [151, 159, 163, 191, 211, 213, 224, 340, 386, 423, 427, 428, 435, 438, 439, 444, 445, 447, 475, 543, 575, 640, 642, 643, 675, 720, 723, 731, 761, 851, 855, 856, 880, 912, 913, 914, 967, 1009, 1017, 1111, 1134], "eras": [151, 502, 560, 621, 726, 755, 865], "hit": [151, 153, 154, 173, 176, 214, 759, 868, 897, 900, 1134], "sole": 151, "liter": [151, 174, 190, 195, 202, 212, 220, 221, 225, 232, 237, 240, 244, 247, 256, 257, 265, 272, 286, 304, 308, 314, 316, 320, 332, 336, 340, 367, 375, 382, 431, 486, 501, 521, 665, 678, 808, 980, 1037, 1050, 1054], "told": [151, 154, 453, 492, 905], "reboot": [151, 153, 170, 808, 869, 912, 913, 914], "fatal": [151, 179, 451, 461, 808, 1147], "saw": [151, 154, 184, 213, 351, 388, 569, 938, 940], "115200": 151, "8n1": 151, "remaind": [151, 152, 155, 157, 180, 184, 268, 786, 808, 905, 913, 984], "recov": [151, 171], "fauxpa": 151, "explan": [151, 154, 180, 184, 191, 214, 245, 305, 340, 441, 462, 543, 743, 808, 839, 905, 913, 940, 970, 975, 1109, 1112, 1141], "annot": [151, 212, 261, 301, 442, 566, 1106], "beagl": 151, "omap": 151, "rom": 151, "stage": [151, 167, 213, 1113], "processor": [151, 152, 211, 212, 225, 381, 425, 618, 729, 808, 813, 950, 967, 982], "sram": 151, "dram": 151, "latter": [151, 154, 966, 1006, 1046, 1113], "abil": [151, 665], "press": [151, 788, 825, 868, 905], "wrote": [151, 154, 348, 1159], "board": [151, 153, 808, 912], "ones": [151, 167, 174, 176, 240, 278, 286, 369, 437, 913, 914, 1039, 1123], "revis": [151, 155, 158, 255, 566, 664, 1159], "slightli": [151, 163, 184, 213, 230, 231, 543, 1034], "season": 151, "c4": [151, 162], "valuabl": [151, 441, 835, 836, 998, 1000, 1006], "c3": [151, 155, 162], "angstrom": 151, "mlo": 151, "ift": 151, "fdisk": [151, 1154], "obvoiusli": 151, "fat32": [151, 808], "fat16": 151, "partit": [151, 152, 153, 240, 286, 808], "mount": [151, 153, 268, 346, 764, 808, 839, 948, 975, 976, 985, 994, 996], "sector": [151, 224, 1063], "intend": [151, 157, 158, 159, 169, 204, 221, 227, 237, 240, 452, 781, 913, 940, 941, 1061], "slot": [151, 944, 1025], "partli": [151, 153, 429], "meaning": [151, 159, 790], "scr": 151, "omap3": 151, "mmc1": 151, "arch": [151, 155, 788, 808, 809, 912], "mach": [151, 213, 218, 234], "omap2": 151, "omap3beagl": 151, "Near": 151, "notic": [151, 152, 154, 167, 221, 227, 237, 240, 433, 452, 453, 510, 757, 848, 952, 954, 1014, 1128], "offset": [151, 759, 779, 937, 999], "128k": 151, "0x80000": 151, "byte": [151, 154, 167, 169, 171, 221, 227, 237, 240, 247, 250, 265, 286, 292, 308, 314, 325, 340, 363, 371, 381, 382, 413, 416, 425, 428, 434, 438, 472, 567, 572, 575, 580, 587, 600, 724, 759, 822, 839, 845, 868, 899, 906, 912, 929, 930, 931, 934, 936, 938, 939, 940, 941, 964, 967, 972, 975, 979, 1031, 1037, 1042, 1056, 1119], "reli": [151, 184, 714, 818, 1037], "ecc": [151, 155], "nandecc": 151, "hw": 151, "80000": 151, "0x0": [151, 912], "0x60000": 151, "unlik": [151, 204, 255, 729, 736, 905, 1045, 1124, 1164], "intermedi": [151, 172, 470, 982, 1031], "nevertheless": [151, 152, 159, 271, 274, 808], "0x20000": 151, "fatload": 151, "80200000": 151, "20392": 151, "131072": [151, 766], "40000": 151, "0x40000": 151, "60000": 151, "incarn": [151, 159, 407, 713], "choic": [151, 152, 153, 176, 212, 225, 244, 437, 447, 457, 522, 570, 639, 724, 912, 966, 994, 1122], "finger": [151, 162, 437, 847, 905], "sw": [151, 520], "0x1e0000": 151, "1e0000": 151, "0x240000": 151, "275928": 151, "1966080": 151, "prompt": [151, 159, 162, 172, 204, 215, 243, 252, 840, 868, 870, 921, 1031, 1032, 1068, 1072, 1085, 1091, 1141], "280000": 151, "400000": [151, 913, 1111], "month": [152, 214, 224, 272, 276, 382], "met": [152, 429, 914], "microcontrol": [152, 398, 905, 913, 966], "clue": 152, "minim": [152, 154, 163, 172, 431, 437, 590, 890, 994, 1005], "vxwork": 152, "ce": [152, 162, 996], "quit": [152, 154, 157, 279, 408, 423, 425, 643, 658, 809, 868, 869, 900, 905, 913, 956, 979, 994], "blob": [152, 268, 279, 360, 543, 808], "presenc": [152, 154, 459, 1164], "probabl": [152, 158, 184, 244, 274, 332, 458, 463, 568, 673, 808, 820, 868, 914, 966, 1042, 1056, 1119, 1122], "sooner": [152, 167, 433, 811], "chose": [152, 163, 230, 659, 892, 925, 994], "opinion": [152, 163, 184, 238, 759, 847, 1014], "stori": [152, 153, 154, 158, 159, 163, 180, 181, 213, 276, 418, 551, 569, 583, 783, 786, 809, 847, 908, 925], "unless": [152, 234, 240, 244, 286, 637, 670, 834, 890, 951, 1037, 1056, 1127], "hire": 152, "cheap": [152, 154, 450, 580, 673, 678, 714, 715, 813, 1159], "misl": 152, "posix": [152, 154, 177, 731, 738, 740, 760, 761, 845, 904, 934, 945, 951, 955, 957, 965, 973, 1056, 1173, 1174], "tell": [152, 153, 154, 157, 158, 159, 167, 181, 228, 430, 601, 834, 914, 982], "pitfal": [152, 236, 256, 257, 259, 316, 317, 340, 601, 680, 705, 706, 707, 725, 760, 761, 905, 1159], "seen": [152, 154, 159, 172, 185, 213, 373, 392, 430, 465, 475, 779, 804, 833, 953, 1113, 1117, 1151], "didn": [152, 153, 154, 163, 184, 188, 204, 214, 238, 307, 808, 887, 939, 1056, 1058, 1106, 1110], "rtoss": 152, "commonli": [152, 221, 244, 271, 274, 479, 740, 759, 794, 828, 870, 934, 982, 1131], "tear": [152, 257, 472, 521, 522, 523, 524, 585, 724, 777, 982, 1146], "notif": [152, 157, 176, 737, 909, 980], "dread": 152, "segment": [152, 154, 405, 514, 580, 703, 723, 966, 976], "fault": [152, 154, 353, 354, 405, 580, 723, 966], "arriv": [152, 800, 825, 964, 979], "handler": [152, 221, 227, 237, 240, 279, 286, 299, 441, 788, 790, 818, 950, 966, 978, 981], "pai": [152, 276, 436, 459, 839], "attent": [152, 208, 224, 232, 371, 392, 394, 423, 442, 452, 602, 607, 676, 707, 710, 800, 968, 1003, 1129, 1151], "safe": [152, 221, 227, 228, 237, 240, 250, 433, 673, 715, 717, 725, 739, 921, 926, 950, 953, 958, 981], "pthread_": 152, "trick": [152, 209, 219, 222, 225, 249, 261, 285, 291, 408, 1106], "asynchron": [152, 221, 227, 237, 240, 307, 326, 929, 946, 949, 979, 980], "sigwait": [152, 979], "sigwaitinfo": 152, "sigtimedwait": 152, "caught": [152, 221, 227, 237, 240, 440, 590], "synchron": [152, 224, 230, 240, 247, 250, 265, 272, 280, 281, 282, 286, 302, 303, 306, 308, 314, 732, 738, 760, 761, 899, 904, 929, 945, 951, 952, 959, 965, 966, 976, 978, 981, 1164], "signalfd": [152, 934, 972, 1173, 1174], "Its": [152, 154, 157, 521, 897, 967], "emb": 152, "among": [152, 176, 184, 221, 227, 237, 240, 430, 724, 853, 912, 934, 940, 964, 980, 1030, 1114, 1115, 1139, 1162], "epol": [152, 948, 972, 976, 1174, 1176], "err": [152, 191, 211, 276, 317, 524, 621, 665, 667, 705, 713, 725, 758, 760, 761, 772, 802, 804, 839, 906, 908, 912, 1025, 1128], "naiv": [152, 172, 227, 230, 294, 310, 425, 458, 467, 559, 561, 575, 642, 723, 757, 816, 950, 970, 981, 1011, 1012, 1113, 1118, 1151, 1161], "intra": 152, "oss": 152, "synchronis": [152, 950, 1175], "pthread_mutex_init": [152, 737, 953], "critical_sect": 152, "closest": [152, 673], "pendant": [152, 560, 767], "expir": [152, 818, 932, 964, 966, 980], "sometim": [152, 167, 244, 397, 413, 437, 574, 664, 839, 846, 939, 951, 996, 1002, 1033, 1139], "setitim": 152, "timer_cr": [152, 966], "drawback": [152, 407, 424, 429, 434, 478, 601, 921], "unfortun": [152, 153, 176, 213, 492, 905, 1124], "straightforward": [152, 231, 687, 725, 776, 1008, 1025, 1043, 1111], "nanosleep": [152, 739, 966], "timerfd_cr": [152, 932, 934, 1173, 1174], "conjunct": 152, "emul": [152, 257, 259, 277, 425, 434, 440], "stupid": [152, 154, 211, 227, 230, 232, 382, 407, 413, 431, 437, 447, 673, 728, 825, 887, 929, 1010, 1056], "screw": [152, 627], "otherwis": [152, 153, 238, 240, 244, 281, 286, 314, 331, 386, 397, 423, 433, 583, 621, 678, 707, 714, 729, 735, 779, 792, 800, 808, 816, 835, 836, 921, 950, 955, 961, 976, 1005, 1034, 1037, 1054, 1056, 1075, 1086, 1151], "millisecond": [152, 221, 227, 237, 240, 726, 740, 816, 913], "etern": 152, "nowadai": [152, 154, 156, 157, 213, 280, 281, 302, 363, 381, 783, 818, 843, 846, 934, 980, 1119], "imagin": [152, 154, 427, 432, 433, 465, 478, 808, 847, 864, 905, 914, 953, 980], "moder": [152, 159, 219], "tri": [152, 153, 154, 163, 167, 173, 184, 232, 351, 522, 652, 735, 759, 905, 914, 967, 1159], "achiev": [152, 211, 244, 643, 964, 1017], "albeit": [152, 487, 713, 961, 1042, 1159], "lose": [152, 203, 214, 234, 237, 240, 250, 314, 1041], "wealth": 152, "socket": [152, 170, 191, 261, 759, 761, 841, 844, 904, 929, 933, 934, 945, 976, 980, 1134, 1173, 1174, 1176], "uart": [152, 429, 841], "previous": [152, 221, 227, 237, 240, 244, 980, 1159], "regardless": [152, 408, 913], "surpris": [152, 154, 268, 431, 636, 1001, 1025], "alon": [152, 153, 154, 167, 277, 279, 437, 441, 682, 1046, 1113, 1164], "advantag": [152, 429, 580], "consid": [152, 154, 184, 188, 212, 221, 227, 237, 238, 240, 244, 268, 286, 307, 401, 428, 429, 437, 489, 643, 868, 912, 967, 1022, 1030, 1106, 1133, 1134, 1161], "regularli": [152, 434], "buffer": [152, 240, 265, 280, 281, 286, 302, 306, 369, 498, 503, 678, 824, 852, 926, 929, 930, 931, 932, 940, 979, 1056], "ttys0": 152, "stream": [152, 157, 159, 199, 225, 240, 265, 566, 583, 852, 906, 964, 1010, 1131, 1176], "eventfd": [152, 934, 972, 1173, 1174], "complic": [152, 153, 162, 191, 234, 244, 379, 398, 437, 462, 593, 676, 682, 702, 767, 804, 906, 914, 979, 982, 1010, 1122, 1161, 1164], "unregist": [152, 474], "callback": [152, 188, 221, 227, 237, 240, 349, 693, 818, 827, 1122], "comfort": [152, 204, 343, 717, 912, 1131], "excit": 152, "hundr": [152, 154, 159, 262, 265, 934], "panel": 152, "deal": [152, 228, 431, 577, 808, 914, 1035, 1108, 1119, 1159, 1164], "touch": [152, 158, 184, 221, 227, 237, 240, 449, 853, 862, 867, 912, 935, 941, 1164], "stai": [152, 176, 188, 219, 979], "harder": [152, 729, 915], "buggi": [152, 575, 703, 715, 966], "examin": [152, 154, 433, 583, 724, 751, 868, 961], "debugg": [152, 221, 227, 237, 238, 240, 470, 1157, 1172], "gdb": [152, 204, 358, 1157], "remain": [152, 153, 163, 172, 185, 232, 240, 286, 528, 529, 541, 570, 618, 624, 655, 661, 666, 728, 736, 790, 921, 969, 980, 982, 1081, 1084, 1085, 1088, 1096, 1098, 1114, 1148], "spidev": 152, "bluntli": 152, "whether": [152, 172, 240, 244, 265, 276, 286, 372, 436, 527, 572, 605, 759, 804, 913, 1085, 1091, 1134], "deadlin": 152, "howev": [152, 162, 181, 244, 466, 781, 783, 905, 948, 950], "sched_setschedul": [152, 169, 969], "pthread_attr_setschedparam": [152, 969], "runnabl": [152, 806, 967, 968, 969], "prioriti": [152, 169, 240, 800, 806, 808, 810, 845, 967, 968, 976, 1175], "anymor": [152, 158, 163, 176, 213, 230, 449, 453, 582, 676, 678, 687, 711, 724, 725, 729, 843, 912, 955, 966, 968, 999, 1037, 1039, 1128], "potenti": [152, 450, 580, 687, 735, 925, 1005, 1017, 1062], "harm": [152, 401, 429, 725, 727, 1005], "polici": [152, 157, 169, 449, 465, 639, 643, 786, 967, 968, 1175], "sched_fifo": [152, 968, 969, 1154], "sched_rr": [152, 154, 969, 1154], "robin": [152, 219, 969, 1175], "manner": [152, 407, 808, 912], "troubl": 152, "trigger": [152, 351, 790, 794, 912, 1025, 1115], "certain": [152, 184, 191, 428, 433, 491, 514, 515, 693, 715, 804, 839, 852, 955, 982, 1030], "circumst": [152, 967], "deadlock": [152, 543, 735, 736, 800, 813, 953, 967, 968], "inspect": [152, 154, 221, 227, 237, 240, 258, 267, 278, 288, 303, 761, 838, 904, 925], "deploy": [152, 184, 188, 209, 295, 311, 454, 460, 761, 783, 1106], "uclibc": 152, "investig": 152, "spend": [152, 159, 173, 184, 188, 209, 212, 235, 261, 285, 307, 436, 1106], "browser": [153, 159, 171, 182, 215], "significantli": [153, 979], "decreas": [153, 154, 425, 868, 970], "week": [153, 168, 427], "forth": [153, 438, 839, 912, 925, 1037], "spare": 153, "volum": 153, "undertak": 153, "indirectli": [153, 724], "pocket": 153, "purchas": [153, 244], "corsair": 153, "120": [153, 171, 185, 195, 202, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 584, 665, 974, 975], "overhaul": 153, "reserv": [153, 159, 176, 188, 224, 240, 265, 286, 380, 602, 772, 804, 864, 969, 1063], "livecd": 153, "ssd": [153, 436, 930], "vanish": 153, "gone": [153, 174, 224, 693, 725, 788, 811, 869, 958], "nowher": [153, 292, 535], "depart": 153, "unusu": 153, "cope": 153, "bet": 153, "themselv": [153, 407, 447, 487], "aggress": 153, "harddisk": 153, "treatment": [153, 244, 868, 999], "proud": 153, "120g": 153, "fresher": 153, "plenti": [153, 155, 441], "4g": [153, 154], "shouldn": [153, 665, 808, 1054], "hibern": 153, "fstab": 153, "room": [153, 159, 188, 303, 467, 618, 802, 914, 1119, 1162], "swapon": 153, "sda1": 153, "swapoff": 153, "overal": 153, "mitig": [153, 802], "temporari": [153, 162, 179, 221, 227, 230, 237, 240, 280, 281, 302, 306, 452, 524, 525, 673, 677, 678, 693, 707, 715, 759, 852, 982, 1008, 1089], "perfect": [153, 159, 167, 213, 261, 316, 361, 618, 674, 705, 728, 760, 761, 1008, 1061, 1106, 1137, 1159], "portag": [153, 808, 897], "openoffic": 153, "tmpdir": [153, 278, 307, 449, 524, 759, 1003, 1101, 1103, 1139], "500m": 153, "2g": 153, "6g": 153, "throwawai": 153, "1tb": 153, "sdc1": [153, 839], "mnt": [153, 839, 847, 976], "emerg": 153, "umount": 153, "runnung": 153, "offend": [153, 155, 157, 167, 492, 966], "candid": [153, 172, 213, 437, 682, 702, 715, 1005, 1077], "destin": [153, 388, 455, 560, 601, 676, 924, 931], "app": [153, 157, 966, 1118], "admin": [153, 159, 340, 919, 923], "cron": [153, 851, 1035], "rc": [153, 905], "grep": [153, 157, 163, 192, 194, 204, 258, 267, 288, 289, 761, 827, 832, 838, 843, 845, 850, 852, 864, 895, 898, 901, 904, 912, 914, 915, 951, 961, 966, 1122, 1163, 1165, 1170], "tune": [153, 154, 163, 437, 835, 836, 858, 860, 862, 869, 917, 1034], "exce": [153, 188, 769, 966, 976], "20m": [153, 905, 964], "compresscmd": 153, "bzip2": [153, 163, 192, 194, 833, 834, 996], "compressopt": 153, "compressext": 153, "missingok": 153, "sharedscript": 153, "postrot": 153, "reload": [153, 192], "endscript": 153, "adjac": [153, 347, 724, 779], "sda": [153, 912, 914], "cfq": 153, "noop": [153, 907], "believ": [153, 159, 905, 914, 942], "r5": 153, "menuconfig": [153, 163, 808, 912, 996], "xorg": [153, 157], "emerge_log_dir": 153, "unionf": 153, "fuse": [153, 155, 915, 925], "persist": [153, 169, 377, 381, 389, 459, 869, 913], "held": [154, 296, 299, 358, 766, 800, 813], "compani": [154, 157, 158, 159, 194, 204, 244, 270, 281, 296, 447, 465, 466, 847, 1061, 1108], "z\u00fcrich": [154, 357], "hardcor": 154, "attitud": [154, 159, 278], "began": 154, "dive": [154, 271, 274, 1120], "inevit": [154, 358, 717], "came": [154, 221, 225, 227, 237, 240, 865, 871, 912, 1037, 1089, 1159], "mb": [154, 846], "heap": [154, 420, 472, 572, 575, 627, 707, 724, 769, 794], "128": [154, 157, 171, 185, 195, 202, 208, 211, 217, 221, 224, 227, 230, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 436, 580, 912, 940, 997, 1119], "dead": [154, 163, 437], "attempt": [154, 159, 182, 240, 359, 673, 675, 746, 1134], "reject": [154, 167], "proof": [154, 176, 425, 436, 440, 470, 554], "evid": 154, "fortun": [154, 159, 437, 449, 678, 1111], "overnight": [154, 219], "night": [154, 188], "instinct": 154, "defens": [154, 379, 380], "grow": [154, 601, 845, 998], "growth": [154, 224, 1063], "handi": [154, 1170], "tricki": 154, "alloca": 154, "essenti": [154, 181, 230, 277, 279, 655], "stdio": [154, 213, 225, 362, 363, 365, 369, 371, 373, 404, 430, 450, 576, 582, 845, 865, 912, 930, 931, 932, 934, 935, 938, 939, 940, 941, 953, 966, 972, 975, 979, 980, 982, 985, 994, 998, 1000, 1056], "unistd": [154, 428, 525, 557, 865, 912, 928, 930, 931, 932, 934, 937, 938, 939, 940, 941, 944, 946, 949, 963, 966, 972, 975, 979], "stdlib": [154, 420, 434, 912, 930, 931, 932, 963, 972, 979], "size_t": [154, 420, 433, 468, 548, 557, 560, 603, 608, 614, 618, 624, 645, 659, 671, 676, 687, 688, 689, 690, 691, 755, 756, 757, 759, 767, 794, 926, 934, 944, 976, 979], "stack_growth": 154, "argc": [154, 414, 472, 511, 912, 938, 939, 940, 941, 946, 949, 963, 979, 1000, 1146, 1151], "mem": [154, 170, 557, 772], "fprintf": [154, 395, 408, 926, 966, 1000], "stderr": [154, 203, 212, 221, 227, 237, 240, 250, 258, 267, 268, 288, 289, 333, 340, 395, 408, 452, 761, 838, 849, 850, 904, 926, 934, 966, 1000, 1035, 1048, 1056, 1165], "atoi": [154, 942], "printf": [154, 163, 213, 225, 362, 363, 365, 371, 373, 377, 403, 404, 407, 408, 430, 450, 576, 582, 845, 865, 928, 932, 972, 979, 980, 982, 994, 998, 1000, 1045, 1051], "getpid": [154, 979], "memset": [154, 931, 966, 975, 979], "24299": 154, "vsz": 154, "rss": 154, "3944": [154, 227], "986": [154, 224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "188": [154, 185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 262, 265, 272, 282, 286, 292, 304, 308, 320], "320": [154, 227, 237, 240, 265, 272, 286, 292, 304], "exact": [154, 204, 244, 337, 401, 712, 729, 781, 783, 1134], "glibc": [154, 788, 994, 996, 997, 1154], "presum": 154, "assum": [154, 240, 244, 286, 431, 578, 739, 786, 868, 912, 914, 925, 997, 1066, 1141], "writabl": [154, 431, 853, 868, 940], "eater": [154, 970], "1k": 154, "furthermor": 154, "188k": 154, "anyth": [154, 158, 159, 184, 211, 227, 231, 254, 276, 277, 347, 447, 458, 462, 479, 514, 589, 658, 678, 755, 756, 757, 905, 917, 925, 929, 935, 964, 998, 1003, 1004, 1005, 1048, 1056, 1111, 1128, 1132], "proce": [154, 162, 241, 274, 346, 524], "million": [154, 190, 465, 643, 808, 1008], "24908": 154, "4800": [154, 227], "1200": [154, 227, 618, 1128], "1044": [154, 227], "1376": [154, 227], "grown": [154, 157], "reflect": [154, 808, 967, 997, 998, 1025], "greedi": 154, "24960": 154, "8mb": 154, "barrier": [154, 423, 724, 739, 792], "ulimit": [154, 845], "8192": [154, 227, 408, 845], "8000000": 154, "25018": 154, "11632": [154, 227], "2908": [154, 227], "7876": [154, 227], "8236": [154, 227], "demand": [154, 157, 174, 274, 431, 808, 859, 861, 1010, 1045], "magic": [154, 156, 414, 449, 693, 767, 808, 1010, 1139], "bother": [154, 925, 929], "pthread_attr_setstacks": 154, "2mb": 154, "rlimit_stack": 154, "pthread_creat": [154, 951, 966], "nthread": 154, "act": [154, 211, 532, 602, 914, 925, 928, 980, 1016], "shut": [154, 776, 808], "sit": [154, 230, 346, 477, 852, 912, 913, 923, 925, 929, 979, 1122], "stack_limit": 154, "thread_func": 154, "arg": [154, 171, 185, 211, 212, 221, 225, 227, 237, 238, 240, 244, 250, 265, 286, 304, 450, 767, 951, 1003, 1007, 1028, 1035, 1058, 1148, 1154], "pthread_attr_t": [154, 951, 969], "attr": [154, 169, 951, 953, 955, 969, 975, 976], "pthread_attr_init": 154, "ld": [154, 456, 460, 551, 569, 642, 786, 808, 835, 836, 853, 866, 890, 972, 982, 983, 994, 999], "strerror": [154, 227, 926, 935, 966, 979], "p_attr": 154, "pthread_t": [154, 951, 966, 969], "rv": [154, 200, 262], "31524": 154, "825840": 154, "206460": 154, "819936": 154, "1404": [154, 227], "800mb": 154, "writeabl": [154, 864, 887], "worth": [154, 808, 914, 1034, 1105, 1159, 1174], "physic": [154, 157, 192, 199, 280, 281, 302, 306, 438, 643, 792, 844, 913, 932, 936, 966, 967], "eaten": 154, "field": [154, 157, 159, 171, 176, 182, 218, 225, 232, 240, 250, 253, 270, 272, 276, 286, 332, 351, 364, 747, 749, 843, 848, 867, 901, 1052, 1063, 1084, 1113, 1114], "alleg": 154, "wast": [154, 162, 163, 433, 720, 737, 1119], "moment": [154, 188, 433, 465, 467, 661, 710], "771": [154, 227, 314], "766604": 154, "aha": [154, 174, 185, 325, 771, 788, 913, 1119, 1146], "hasn": [154, 157, 158, 167, 802, 825, 1036], "effect": [154, 158, 179, 341, 342, 377, 427, 437, 489, 636, 763, 792, 864, 869, 912, 924, 925, 967, 981, 1006, 1018, 1039, 1085, 1113, 1133, 1141], "4096": [154, 171, 227, 759, 835, 836, 905, 912, 913, 914, 925, 948, 975], "1026": [154, 227], "invalid": [154, 195, 202, 232, 237, 238, 240, 244, 247, 265, 272, 279, 286, 304, 308, 314, 320, 336, 351, 434, 492, 503, 506, 560, 575, 658, 659, 660, 673, 676, 682, 723, 725, 739, 766, 955, 1058], "insist": [154, 184, 582, 1148], "pthread_stack_min": 154, "16384": [154, 159, 227, 912, 913, 914], "1125": 154, "7840": [154, 227], "1960": [154, 227], "1936": [154, 227], "risk": [154, 465, 905, 923, 968, 1033], "512": [154, 227, 272, 304, 438, 845], "513": [154, 227, 272, 724], "2212": [154, 227], "4210920": 154, "1052730": 154, "4205016": 154, "4576": [154, 227], "misunderstand": [154, 733], "obvious": [154, 155, 157, 163, 175, 363, 427, 431, 458, 487, 551, 577, 583, 621, 636, 637, 665, 676, 710, 714, 719, 759, 806, 808, 821, 844, 845, 851, 865, 913, 914, 924, 940, 941, 968, 980, 982, 998, 1019, 1022, 1161], "overcommit": 154, "kept": [154, 159, 184, 190, 408, 423, 845, 906, 982, 1010], "plai": [154, 162, 204, 425, 443, 808, 905, 1023, 1026, 1113], "stutter": 154, "4353": 154, "red": [154, 155, 200, 202, 208, 216, 228, 231, 244, 276, 333, 621, 905, 1032, 1122], "chili": 154, "pepper": 154, "overli": [154, 851, 1009], "adob": 154, "riddanc": 154, "8462": [154, 227], "3284640": 154, "821160": 154, "3278736": 154, "3064580": 154, "lie": [154, 715], "constraint": [154, 162, 682, 685, 687, 914], "800": [154, 195, 227, 618, 1066], "4000000": 154, "11338": [154, 227], "900": [154, 227, 618], "12156": [154, 227], "shrink": [154, 601], "inadvert": 154, "3mb": 154, "nois": 154, "henc": [154, 159, 524, 578, 622, 930, 934, 982], "14386": [154, 227], "child_stack": 154, "0x7f5813f22ff0": 154, "clone_vm": 154, "clone_f": 154, "clone_fil": 154, "clone_sigha": 154, "14413": 154, "mmap": [154, 974, 976, 1173], "8392704": 154, "prot_read": [154, 975], "prot_writ": [154, 975], "map_priv": [154, 975], "map_anonym": 154, "map_stack": 154, "0x7fd14f9af000": 154, "mprotect": 154, "0x7fd14f1ae000": 154, "prot_non": 154, "placehold": [154, 493, 525, 680, 729, 914], "proc": [154, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 771, 788, 790, 792, 808, 809, 934, 951, 975, 979, 1172], "7fd14f1af000": 154, "7fd14f9af000": 154, "00000000": 154, "7fd14f9b0000": 154, "topmost": [154, 1139], "pseudo": [154, 172], "redund": [154, 408, 437], "smap": 154, "7fd14f1ae000": 154, "pss": 154, "shared_clean": 154, "shared_dirti": 154, "private_clean": 154, "private_dirti": 154, "referenc": [154, 172, 195, 303, 306, 464, 582, 724, 725, 726, 942, 1148], "anonym": [154, 467, 781, 975], "anonhugepag": 154, "kernelpages": 154, "mmupages": 154, "miss": [154, 173, 180, 182, 184, 200, 227, 232, 237, 244, 303, 306, 340, 397, 442, 443, 451, 453, 461, 523, 554, 575, 666, 702, 783, 786, 932, 966, 984, 1007], "shallow": [154, 224, 236, 668], "extent": [154, 184, 191, 204, 337, 428, 433, 808, 982, 1030], "8k": [154, 852], "swamp": 154, "panic": [154, 167, 816, 868], "meaningless": 154, "global": [154, 155, 173, 179, 184, 188, 193, 197, 200, 213, 221, 224, 227, 230, 231, 237, 240, 243, 254, 257, 265, 277, 280, 282, 286, 291, 295, 302, 306, 307, 311, 312, 313, 318, 324, 335, 340, 386, 403, 409, 415, 419, 422, 426, 430, 433, 435, 439, 440, 444, 445, 453, 454, 459, 472, 478, 487, 521, 522, 523, 524, 565, 572, 585, 667, 705, 708, 723, 724, 734, 758, 760, 761, 777, 914, 950, 953, 957, 958, 960, 982, 1003, 1006, 1014, 1016, 1049, 1063, 1106, 1134, 1142, 1146], "dig": [154, 156], "thorough": [154, 163, 1029, 1113, 1132, 1174], "counter": [154, 237, 365, 371, 372, 381, 437, 442, 443, 567, 676, 975], "delai": [154, 221, 227, 237, 240, 913], "substanti": 154, "overcom": [154, 303, 340, 427], "beforehand": 154, "mlock": [154, 1173], "mlockal": [154, 1173], "contradictori": 154, "lengthi": 154, "felt": 154, "lucki": [154, 575], "agre": [154, 184, 188, 346, 475, 967, 1112], "glad": 154, "outdat": [155, 163, 808, 1134], "halfwai": 155, "procedur": [155, 163, 373, 717, 905, 1063], "thunderbolt": 155, "hdmi": 155, "unplug": 155, "oop": [155, 1158], "feb": [155, 200, 202, 204, 337, 382, 890, 948, 994], "derefer": [155, 580], "0000000000000080": 155, "supervisor": 155, "error_cod": 155, "0x0000": 155, "pgd": 155, "p4d": 155, "0000": [155, 240, 286, 914], "smp": [155, 204, 211, 337], "pti": 155, "281": [155, 224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 286, 292, 304, 314], "comm": 155, "kworker": 155, "taint": 155, "fc31": 155, "asustek": 155, "zenbook": 155, "ux391ua": 155, "bio": 155, "204": [155, 185, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 286, 292, 304, 308, 314, 320, 472], "workqueu": [155, 761, 785, 810, 823, 826, 904], "ucsi_connector_chang": 155, "typec_ucsi": 155, "0010": 155, "ucsi_displayport_remove_partn": 155, "0xa": 155, "0x20": [155, 798], "c7": [155, 162, 1134], "83": [155, 162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 759, 809, 1110, 1111], "5b": [155, 162], "e9": [155, 162], "6d": [155, 162, 364, 365], "f3": [155, 162], "3d": [155, 162, 173], "fb": [155, 162], "2e": [155, 162, 669], "0f": [155, 162], "1f": [155, 162], "84": [155, 162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 1110, 1111], "90": [155, 162, 171, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 449, 1110, 1111, 1139], "85": [155, 162, 171, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 983, 984, 1110, 1111, 1146], "ff": [155, 162, 358, 748, 914], "8b": 155, "78": [155, 162, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 521, 1110, 1111], "c6": 155, "rsp": [155, 224, 1063], "0018": 155, "ffff9daa002d3df8": 155, "eflag": 155, "00010202": 155, "rax": 155, "0000000000000008": 155, "rbx": 155, "ffff901f4ce35710": 155, "rcx": 155, "0000000000003c7d": 155, "rdx": 155, "0000000000003c7c": 155, "rsi": [155, 868], "0000000000000001": 155, "rdi": 155, "rbp": 155, "0000000000000000": [155, 1000], "r08": 155, "ffffffffbc7dbe60": 155, "r09": 155, "ffff9daa002d3cf0": 155, "r10": 155, "ffff901f54951a18": 155, "r11": 155, "ffff901f56a68a78": 155, "r12": 155, "r13": 155, "r14": 155, "ffff901f4ce35860": 155, "r15": 155, "ffff901f4ce355d8": 155, "ffff901f56a00000": 155, "knlg": 155, "cr0": 155, "0000000080050033": 155, "cr2": 155, "cr3": 155, "000000028fbbc003": 155, "cr4": 155, "00000000003606f0": 155, "trace": [155, 174, 221, 227, 237, 240, 452, 798], "ucsi_unregister_altmod": 155, "0x77": 155, "0x90": [155, 798], "ucsi_unregister_partn": 155, "0x13": 155, "0x30": [155, 389], "0x247": 155, "0x340": 155, "process_one_work": 155, "0x1b5": 155, "0x360": 155, "worker_thread": 155, "0x50": 155, "0x3c0": 155, "kthread": 155, "0xf9": 155, "0x130": 155, "kthread_park": 155, "ret_from_fork": 155, "0x35": 155, "0x40": [155, 913], "cdc_ether": 155, "usbnet": 155, "r8152": 155, "mii": 155, "rc_cec": 155, "typec_displayport": 155, "uinput": 155, "rfcomm": 155, "ccm": 155, "xt_checksum": 155, "xt_masquerad": 155, "nf_nat_tftp": 155, "nf_conntrack_tftp": 155, "tun": [155, 160, 175, 179, 195, 202, 241, 1156, 1157, 1158], "bridg": 155, "stp": 155, "llc": 155, "nf_conntrack_netbios_n": 155, "nf_conntrack_broadcast": 155, "xt_ct": 155, "ip6t_reject": 155, "nf_reject_ipv6": 155, "ip6t_rpfilt": 155, "ipt_reject": 155, "nf_reject_ipv4": 155, "xt_conntrack": 155, "ebtable_nat": 155, "ebtable_brout": 155, "ip6table_nat": 155, "ip6table_mangl": 155, "ip6table_raw": 155, "ip6table_secur": 155, "iptable_nat": 155, "nf_nat": 155, "iptable_mangl": 155, "iptable_raw": 155, "iptable_secur": 155, "nf_conntrack": 155, "nf_defrag_ipv6": 155, "nf_defrag_ipv4": 155, "libcrc32c": 155, "ip_set": 155, "nfnetlink": 155, "ebtable_filt": 155, "ebtabl": 155, "ip6table_filt": 155, "ip6_tabl": 155, "iptable_filt": 155, "cmac": 155, "bnep": 155, "sunrpc": 155, "vfat": [155, 808, 839], "snd_hda_codec_hdmi": 155, "snd_soc_skl": 155, "snd_soc_sst_ipc": 155, "snd_soc_sst_dsp": 155, "snd_hda_ext_cor": 155, "x86_pkg_temp_therm": 155, "intel_powerclamp": 155, "snd_soc_acpi_intel_match": 155, "coretemp": 155, "snd_soc_acpi": 155, "kvm_intel": 155, "snd_soc_cor": 155, "snd_hda_codec_realtek": 155, "snd_hda_codec_gener": 155, "snd_compress": 155, "ledtrig_audio": 155, "ac97_bu": 155, "snd_pcm_dmaengin": 155, "iwlmvm": 155, "snd_hda_intel": 155, "snd_intel_dspcfg": 155, "irqbypass": 155, "snd_hda_codec": 155, "uvcvideo": 155, "mac80211": 155, "btusb": 155, "itco_wdt": 155, "btrtl": 155, "crct10dif_pclmul": 155, "videobuf2_vmalloc": 155, "itco_vendor_support": 155, "videobuf2_memop": 155, "mei_hdcp": 155, "btbcm": 155, "btintel": 155, "crc32_pclmul": 155, "intel_rapl_msr": 155, "snd_hda_cor": 155, "videobuf2_v4l2": 155, "libarc4": 155, "ghash_clmulni_intel": 155, "videobuf2_common": 155, "snd_hwdep": 155, "intel_cst": 155, "bluetooth": [155, 1163, 1176], "snd_seq": 155, "asus_nb_wmi": 155, "iwlwifi": 155, "videodev": 155, "snd_seq_devic": 155, "intel_uncor": 155, "asus_wmi": 155, "snd_pcm": 155, "intel_rapl_perf": 155, "cdc_acm": 155, "sparse_keymap": 155, "wmi_bmof": 155, "ecdh_gener": 155, "cfg80211": 155, "intel_wmi_thunderbolt": 155, "pcspkr": 155, "snd_timer": 155, "snd": 155, "i2c_i801": 155, "soundcor": 155, "joydev": 155, "idma64": 155, "intel_xhci_usb_role_switch": 155, "mei_m": 155, "ucsi_acpi": 155, "processor_thermal_devic": 155, "intel_rapl_common": 155, "mei": [155, 227], "intel_soc_dts_iosf": 155, "intel_pch_therm": 155, "typec": 155, "int3403_therm": 155, "int340x_thermal_zon": 155, "int3400_therm": 155, "acpi_thermal_rel": 155, "acpi_pad": 155, "binfmt_misc": 155, "ip_tabl": 155, "rfkill": 155, "i915": 155, "i2c_algo_bit": 155, "drm_kms_helper": 155, "hid_multitouch": 155, "drm": 155, "nvme": 155, "crc32c_intel": 155, "nvme_cor": 155, "serio_raw": 155, "wmi": 155, "i2c_hid": 155, "76d248e576fee192": 155, "deferenc": 155, "dp": 155, "ness": [155, 191, 276], "ucsi": 155, "displayport": 155, "linu": [155, 800, 808], "typec_altmod": 155, "alt": [155, 185, 868, 896, 1156, 1163, 1170], "ucsi_dp": 155, "typec_altmode_get_drvdata": 155, "271": [155, 224, 227, 232, 234, 240, 265, 272, 286, 292, 314], "bugzilla": 155, "1785972": 155, "john": [155, 437], "stebbin": 155, "roundtrip": 155, "wiki": [155, 169, 280, 281, 302, 306, 781, 808], "explod": [155, 783, 1045], "jwboyer": [155, 781], "f31": 155, "quiet": [155, 188, 1134], "4382f76bc8ef9fce5e7e96d4cdb0c073564ad249": 155, "josh": 155, "boyer": 155, "fedoraproject": [155, 781], "mon": 155, "rpmdevtool": [155, 781], "koji": 155, "rpmdev": 155, "setuptre": 155, "spec": [155, 240, 781, 804], "srpm": 155, "unam": [155, 781, 786, 804, 808, 809], "correspond": [155, 167, 240, 362, 405, 913, 990, 998, 1037, 1073, 1108, 1134], "kenrel": 155, "ivh": [155, 157], "crypto": 155, "ccp": 155, "sha": 155, "drop": [155, 167, 303, 468, 487, 496, 717, 724, 726, 827, 975, 980], "edit": [155, 157, 158, 167, 199, 204, 240, 268, 361, 521, 781, 808, 913, 1061, 1132, 1172], "zips": 155, "ko": [155, 777, 786, 808], "endif": [155, 405, 407, 408, 450, 452, 457, 458, 551, 560, 569, 575, 577, 578, 618, 676, 677, 723, 739, 982, 998, 1000, 1148], "buildid": [155, 781, 983], "primary_target": 155, "825": [155, 227], "asoc": 155, "patch601": 155, "patch999": 155, "roedel": [155, 522, 525, 984, 997, 1093, 1141], "patienc": [155, 184, 1030], "oldpackag": 155, "uefi": [155, 162], "market": [156, 159, 224, 268, 276, 1063], "intent": [156, 158, 162, 163, 470, 725, 729, 781, 938, 940, 941], "remark": 156, "organ": [156, 181, 403, 438, 449, 477, 618, 844, 930, 997], "numer": [156, 173, 189, 191, 193, 227, 237, 240, 244, 276, 286, 452, 624, 925], "enforc": [156, 214, 425, 447, 582, 767, 914], "cname": [156, 158], "propag": [156, 379, 437, 453, 458, 461, 462, 643, 693, 915], "1100": [156, 221, 227, 244, 618], "3600": [156, 227], "185": [156, 185, 202, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "199": [156, 185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 808, 1063], "109": [156, 171, 185, 195, 200, 202, 208, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345], "153": [156, 171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 347], "111": [156, 171, 173, 185, 195, 202, 208, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335], "108": [156, 171, 185, 195, 202, 208, 211, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335], "strip": [156, 175, 184, 218, 220, 221, 224, 232, 236, 237, 242, 244, 250, 253, 265, 272, 282, 286, 292, 308, 314, 340, 349, 982, 983, 985, 994, 1013, 1086, 1131], "breviti": 156, "fqdn": 156, "qualifi": [156, 431, 577, 578, 715], "surf": 156, "consequenti": [156, 159, 162, 190, 839, 912, 1002, 1023, 1148], "microsoft team": 157, "chrome": 157, "google chrom": 157, "confer": [157, 159, 188, 212, 235, 261, 307, 746], "virtual classroom": 157, "classroom": [157, 159], "remote train": 157, "dr": [157, 997], "chromium": [157, 192], "frequent": [157, 159, 167, 184, 244, 893, 913, 1030, 1051], "face": [157, 159, 184, 234, 244, 731], "travel": [157, 868], "corona": [157, 159, 184], "viru": [157, 159], "conferenc": 157, "dramat": 157, "march": 157, "spent": [157, 436, 740, 1004, 1112], "weston": 157, "invest": [157, 159, 163, 244], "smooth": 157, "layer": [157, 257, 259, 277, 767, 839, 913, 925, 935, 944], "cornercas": 157, "hover": 157, "sharer": 157, "gdm": [157, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 843, 899], "daemon": [157, 204, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 443, 843, 846, 893, 894, 897, 899, 915, 923, 928, 930, 960, 1016], "uncom": [157, 492, 493, 687, 912], "waylanden": 157, "defaultsess": 157, "deb": [157, 289], "5153": 157, "thank": [157, 238, 265, 679, 715, 790, 950, 1111], "marjan": 157, "javorka": 157, "fashion": 157, "efl": [157, 827, 915, 966], "61762": 157, "1670": [157, 227], "80": [157, 162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 441, 514, 890, 966, 996, 1008, 1063, 1110, 1111, 1139], "947213": 157, "61764": 157, "98775": 157, "zygot": 157, "sandbox": [157, 184, 188, 238, 252, 270, 1106, 1141, 1142], "61800": 157, "239615": 157, "gpu": 157, "sharedarraybuff": 157, "sparerendererforsiteperprocess": 157, "prefer": [157, 234, 244, 381, 437, 479, 583, 670, 678, 682, 800, 852, 1058], "kaaaaaaaaacaaabaaqaaaaaaaaaaagaaaaaaaaaaaaaiaaaaaaaaaagaaaaaaaaa": 157, "token": [157, 214, 230, 367, 407, 843, 956, 1061, 1156], "4327801531638606376": 157, "61825": 157, "420846": 157, "autoplai": 157, "gestur": 157, "12993561460135093079": 157, "asar": 157, "agent": [157, 921, 1113], "mozilla": [157, 282, 890], "applewebkit": 157, "537": [157, 227, 314], "khtml": 157, "gecko": 157, "microsoftteam": 157, "preview": [157, 242, 295, 311, 454, 761], "3497": 157, "safari": 157, "webview": 157, "preload": 157, "preload_notif": 157, "fff": 157, "eyjjci5jb21wyw55ijoirwxly3ryb24ilcjjci5kdw1wcyi6iiisimnylmvuywjszwqiomzhbhnllcjjci5wcm9kdwn0ijoirwxly3ryb24ilcjjci5zzxnzaw9uijoiiiwiy3iudxjsijoiiiwiy3iudmvyc2lvbii6iny0ljiumtiifq": 157, "raster": 157, "v8_context_snapshot_data": 157, "v8_natives_data": 157, "101": [157, 171, 185, 195, 202, 208, 217, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 1041, 1110, 1111], "msteam": 157, "notificationsmanag": 157, "61973": 157, "790018": 157, "432557619363765409": 157, "mainwindow": 157, "62033": 157, "1259666": 157, "5585537623314398260": 157, "pluginhost": 157, "wish": [157, 159, 167, 188, 441, 450, 589, 656, 737, 1029, 1124, 1125, 1141], "insan": [157, 296, 839], "killal": [157, 970, 980], "63500": 157, "298385": 157, "63502": 157, "blood": 157, "pressur": [157, 221], "rise": [157, 515, 790, 948, 949, 966], "wipe": 157, "logout": 157, "pop": [157, 170, 232, 234, 247, 262, 272, 282, 292, 304, 408, 599, 602, 737, 1028, 1053], "morn": [157, 193, 203, 221, 230, 232, 238, 307, 1068], "webassembli": 157, "blow": 157, "water": [157, 276], "tab": [157, 158, 171, 240, 268, 286, 331, 382, 808, 868, 1050, 1075, 1165], "firefox": [157, 443, 951, 980, 1118], "dom": [157, 216], "gave": [157, 159, 172, 184, 910, 1111], "3987": 157, "132": [157, 171, 173, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "plagu": 157, "invent": [157, 375, 407, 467, 489, 490, 1161, 1162], "game": [157, 224, 240, 247, 250, 265, 272, 282, 286, 303, 308, 314, 864, 928, 1044], "pornwatch": 157, "teamview": 157, "webpag": 158, "properli": [158, 661, 739, 808, 994], "retrospect": 158, "jekyl": 158, "bend": [158, 519], "companion": [158, 276], "pollut": [158, 408, 431, 437, 470, 666, 984], "distinguish": [158, 576, 729, 840, 994], "handwritten": [158, 256, 257, 259, 316, 317, 575, 675, 705, 706, 707, 723, 760, 761], "remind": 158, "pile": [158, 167, 477, 980], "incomprehens": [158, 238, 639, 746, 1159], "blame": [158, 914], "technic": [158, 159, 181, 317, 462, 466, 566, 621, 665, 1010, 1119, 1151], "nojekyl": 158, "eof": [158, 208, 211, 230, 231, 247, 332, 369, 370, 371, 372, 385, 649, 810, 824, 930, 931, 934, 940, 972, 979, 1032], "doctyp": 158, "constel": 158, "machineri": [158, 280, 281, 302, 306], "eventu": [158, 167, 440, 948, 997], "click": [158, 159], "cri": [158, 728], "haven": [158, 159, 184, 543, 905, 912], "subdomain": 158, "afterthough": 158, "preserv": [158, 169, 190, 247, 425, 835, 836, 870, 924, 1131], "_build": 158, "restor": [158, 167, 174, 221, 227, 237, 240, 781, 980, 1003], "shini": 158, "nervous": 158, "marketinges": [158, 268], "familiar": [158, 184, 240, 342, 343, 732, 913, 1030], "big blue button": 159, "strongli": [159, 221, 227, 237, 240, 271, 274, 317, 523, 621, 667, 705, 758, 760, 761, 1159], "shame": 159, "pursu": 159, "collabor": [159, 169, 176, 181, 188, 261], "moreov": 159, "focus": 159, "teach": [159, 184, 358], "trust": [159, 162, 224, 280, 281, 302, 673, 921, 923, 1063, 1134, 1151], "benefit": [159, 271, 274, 277, 279, 431, 1101], "beat": [159, 234, 244, 746, 1105], "talent": [159, 358], "whiteboard": [159, 975], "chat": 159, "breakout": [159, 912], "stabil": [159, 472, 914, 1135], "thousand": [159, 265, 314, 839], "curiou": [159, 1106], "curious": 159, "licens": [159, 265, 459, 764, 1032, 1061], "lgpl": 159, "blindsid": 159, "govern": [159, 794, 934], "html5": 159, "exception": [159, 914], "modern": [159, 163, 165, 176, 179, 184, 191, 213, 235, 453, 727, 761, 768, 770, 775, 778, 785, 789, 799, 810, 812, 817, 823, 826, 829, 904, 982, 1001, 1031, 1106, 1132, 1160, 1162], "heavili": [159, 181, 184, 268, 270, 358, 523, 718, 808, 905, 914, 1030], "webrtc": 159, "pain": [159, 808, 985, 994], "death": [159, 211, 980], "firewal": [159, 192, 923], "busi": [159, 303, 447, 457, 582, 813, 825, 837, 872, 874, 879, 880], "indefinit": [159, 655], "vm": [159, 343], "encrypt": [159, 843, 864, 915, 923, 924, 925, 1084, 1122], "bbb": [159, 171, 232, 250], "provis": 159, "gcp": 159, "expertis": [159, 524], "n1": [159, 185, 244], "accordingli": [159, 192, 511, 521, 524, 554, 912, 914, 999, 1034, 1037, 1131], "500gb": 159, "10gb": 159, "spars": [159, 234, 244, 585, 587, 804], "mandatori": [159, 914, 1031], "issuanc": 159, "udp": [159, 906, 908, 1174, 1176], "32768": 159, "clickabl": 159, "7443": 159, "755": [159, 227, 340, 853, 1033], "xenial": 159, "220": [159, 185, 200, 211, 221, 224, 227, 232, 234, 240, 244, 247, 262, 265, 272, 282, 286, 292, 304, 308, 314], "hostnam": [159, 1134], "certbot": 159, "greenlight": 159, "letsencrypt": 159, "docker": [159, 163], "bundl": [159, 182, 1118, 1134], "rake": 159, "succesfulli": 159, "screenshot": [159, 182, 340], "tryout": [159, 914], "kid": [159, 204, 222, 326], "layman": 159, "knew": [159, 188, 680, 999], "reproduc": [159, 162, 278, 434, 914], "thought": [159, 408, 720, 808, 1119], "fred": [159, 906, 1006], "dixon": 159, "leader": 159, "aka": [159, 204, 227, 230, 232, 252, 543, 727], "canva": 159, "bradlei": 159, "schreffler": 159, "upfront": 159, "far": [159, 184, 192, 213, 219, 227, 230, 270, 377, 392, 413, 414, 416, 427, 431, 436, 461, 590, 600, 665, 728, 786, 850, 914, 1008, 1030, 1111, 1159], "exhaust": [159, 964, 967, 1010], "heard": 159, "tast": [159, 367, 583, 639, 665, 708, 728], "era": 159, "budget": [159, 208], "advertis": [159, 718], "viabl": 159, "shout": [159, 707, 710], "loud": [159, 386, 601, 669, 707, 713, 714], "gmunden": [160, 358], "traunse": 160, "hike": [160, 161, 188], "bergsteigen": [160, 161], "climb": [160, 161, 188, 219], "klettern": [160, 161], "outdoor": [160, 161], "donnerstag": 160, "geistigen": 160, "ersch\u00f6pfung": 160, "k\u00f6rperlich": 160, "erfahren": [160, 161, 358, 1157], "dazu": [160, 169, 170, 175, 179, 196, 340, 345, 358, 1155, 1169, 1177], "ausgesucht": [160, 161], "zwar": [160, 1154, 1158, 1170], "lo": [160, 161, 202, 240, 276, 519, 788, 1018], "gmundner": [160, 188], "h\u00fctte": [160, 161, 188], "n\u00e4chsten": 160, "naturfreundesteig": 160, "zusammenfassung": [160, 166], "wunsch": 160, "vollend": 160, "erf\u00fcllt": 160, "unversichert": 160, "unmarkiert": 160, "leicht": [160, 196, 1154, 1169, 1175, 1176], "panik": 160, "geraten": 160, "h\u00e4nde": [160, 161], "braucht": [160, 161], "fingern\u00e4gel": 160, "z\u00e4hne": 160, "mitunt": [160, 161, 1166], "verkoffert": 160, "augen": [160, 247], "offenhalten": 160, "jeder": [160, 1153, 1156, 1157, 1176], "spur": 160, "folgen": [160, 196, 197, 1156, 1169], "fr\u00fcher": [160, 241], "umdrehen": 160, "sackgass": 160, "erweist": 160, "vielleicht": [160, 185, 196, 247, 1158, 1169], "weggehen": 160, "stirnlamp": 160, "mitnehmen": 160, "war": [160, 170, 175, 177, 185, 196, 200, 358, 447, 1154, 1156, 1158, 1169, 1175, 1176], "sch\u00f6nsten": 160, "jemal": 160, "zuletzt": 160, "traumhaften": 160, "gegend": 160, "immer": [160, 161, 175, 179, 185, 187, 200, 272, 1154, 1158, 1165, 1175], "griffweit": 160, "erscheint": 160, "paar": [160, 170, 185, 187, 195, 202, 234, 340, 345, 1154, 1177], "eindr\u00fcck": 160, "m\u00fcder": 160, "abklatsch": 160, "erinnerungen": 160, "hirn": 160, "eingebrannt": 160, "einstieg": [160, 196, 1169], "traunsteinstra\u00df": 160, "hundert": [160, 171, 244], "meter": 160, "s\u00fcdlich": 160, "hoisn": [160, 188], "wirt": [160, 188], "markiert": [160, 161], "wanderweg": [160, 161], "wegweisern": [160, 161], "bergauf": [160, 161], "kupp": 160, "klamm": 160, "einsteigt": 160, "bergab": 160, "touristisch": 160, "erschlossen": 160, "trifft": 160, "familien": 160, "kindern": [160, 1170], "rechter": 160, "felsstock": 160, "adlerhorst": 160, "sieht": [160, 171, 175, 185], "rau": [160, 234], "touristenzon": 160, "rauf": 160, "schart": 160, "durchschnaufen": 160, "einstellen": 160, "gen\u00fcsslich": 160, "h\u00f6henmet": 160, "verspeisen": 160, "steinmanderl": 160, "verfehlen": 160, "erkennbar": [160, 171, 1172], "kamm": 160, "r\u00fcber": 160, "traunsteinfelsen": 160, "erstreckt": [160, 161], "sch\u00f6nste": 160, "teil": [160, 170, 179, 187, 1154, 1156], "meditativ": 160, "wundersch\u00f6n": [160, 161], "steil": 160, "voll": 160, "zecken": 160, "schon": [160, 161, 170, 185, 187, 195, 225, 358, 1156, 1158, 1163, 1170, 1172, 1175], "bl\u00fcht": 160, "rinnen": 160, "leichtest": [160, 171], "dahin": [160, 1154], "wieder": [160, 185, 187, 195, 200, 202, 216, 1156, 1170], "vertun": 160, "manderl": 160, "aufstellen": 160, "nachwelt": 160, "nemesi": 160, "bergverr\u00fcckten": 160, "gleich": [160, 171, 185, 195, 196, 200, 202, 234, 282, 314, 335, 1154, 1169, 1176], "schl\u00fcsselstel": 160, "quert": 160, "latschen": 160, "\u00f6fter": [160, 161], "festhalten": 160, "gel\u00e4nd": 160, "einsam": 160, "bohrhaken": 160, "verrotteten": 160, "schuhband": 160, "festh\u00e4lt": 160, "runterfallen": 160, "glaub": [160, 169, 170], "stell": [160, 185, 216], "umgehen": [160, 1163], "querung": 160, "hierher": 160, "st\u00fcck": 160, "reinzum\u00fcnden": 160, "scheint": [160, 169], "gibt": [160, 161, 166, 169, 171, 172, 175, 185, 196, 197, 208, 234, 335, 1153, 1154, 1155, 1156, 1158, 1163, 1169, 1175], "foto": [160, 870], "mittendrin": 160, "besch\u00e4ftigt": 160, "hose": 160, "kacken": 160, "gesagt": [160, 175, 185, 195, 358, 1154], "manderln": 160, "aufnahmen": 160, "zunehmenden": 160, "sonnenuntergang": 160, "unvergesslich": 160, "nacht": [160, 161], "geworden": 160, "halten": [160, 161], "zumindest": [160, 185, 1156], "hinauf": 160, "stund": [160, 895, 1177], "gekostet": 160, "exklus": [160, 185, 195], "schneck": 160, "j\u00e4gerbrot": 160, "schein": 160, "ausstieg": 160, "hernlersteig": 160, "m\u00fcndet": 160, "gmundnerh\u00fctt": 160, "gem\u00fctlich": [160, 161], "nett": [160, 161, 175, 286, 358, 1163, 1170], "wirtsleut": 160, "h\u00fcttenruh": 160, "ansitzen": 160, "schweinsbraten": 160, "reinkommt": 160, "k\u00fcche": 160, "geputzt": 160, "backerbsen": 160, "morgen": [160, 240, 244], "hochnebel": 160, "blick": [160, 161, 1155], "flugzeug": 160, "gipfel": [160, 161], "dolin": 160, "nebel": 160, "dabei": [160, 171, 175, 211, 358, 1153], "verziehen": 160, "r\u00fcckweg": 160, "hoisnwirt": 160, "miesweg": 160, "karibik": 160, "steiner alpen": 161, "kamni\u0161ke alp": 161, "kamni\u0161ko savinjskih alp": 161, "alten": [161, 1158], "tradit": [161, 224, 227, 433, 448, 584, 586, 587, 589, 609, 850, 914, 1053, 1084, 1173], "bleiburg": [161, 219], "k\u00e4rnten": [161, 358], "umliegenden": 161, "bergen": 161, "interessantesten": 161, "2558m": [161, 219], "steiner": 161, "alpen": 161, "davor": [161, 203], "gekannt": 161, "nun": [161, 179, 185, 208, 215, 240, 626], "gesehen": [161, 185, 191, 225], "steht": [161, 185, 195, 196, 1166, 1169], "fest": 161, "n\u00e4chste": [161, 179], "jahr": [161, 185], "\u00fcberschreitung": 161, "soweit": [161, 1163, 1170], "h\u00f6chst": 161, "interessant": [161, 1155], "steinhaufen": 161, "unge\u00fcbt": 161, "verloren": [161, 200, 203], "h\u00f6henangst": 161, "schauen": [161, 196, 1169], "helm": 161, "schaden": 161, "schottersurf": 161, "kommen": [161, 166, 234, 340, 345, 358, 896], "ihr": [161, 166, 170, 175, 185, 830, 1153, 1155, 1157, 1158, 1163, 1170, 1176], "artikel": [161, 169], "rein": [161, 171, 196, 1169, 1170], "ins": [161, 170, 358, 734, 1154, 1170], "eisenkappel": 161, "seebergsattel": 161, "openstreetmap": 161, "klein": [161, 170, 171, 175, 1154, 1156, 1157], "dorf": 161, "uhren": 161, "stehengeblieben": 161, "scheinen": 161, "parkplatz": 161, "geparkt": 161, "wissend": 161, "hinten": 161, "tal": 161, "beginnt": [161, 195, 1177], "ahnen": 161, "stetig": 161, "verzagen": 161, "eingang": [161, 1154], "kar": 161, "pl\u00f6tzlich": 161, "freundlich": 161, "vorhanden": [161, 1163, 1170], "fr\u00fchst\u00fcck": 161, "lager": [161, 276], "respektvol": 161, "erklimmenden": 161, "zieht": 161, "haltend": 161, "wand": 161, "wiederum": [161, 185], "gilt": [161, 175, 216, 358], "mittlerweil": [161, 1154, 1171], "akzeptiert": 161, "deswegen": [161, 195, 200, 1156], "schliesslich": [161, 1154], "stehend": 161, "denn": [161, 185, 195, 1175, 1177], "hinaufkomm": 161, "passiert": [161, 185, 202], "anf\u00e4ngern": 161, "geschehen": [161, 320], "jung": [161, 358], "izola": 161, "slowenien": 161, "stellten": 161, "ankam": 161, "ob": [161, 169, 195, 1158, 1177], "beantwortet": 161, "adoptivs\u00f6hn": 161, "gewonnen": 161, "nachbarberg": 161, "ko\u010dna": 161, "sichtlich": 161, "spa\u00df": [161, 241, 1172], "abstieg": 161, "erweitert": 161, "rund": 161, "fertig": [161, 195, 212, 240, 320, 686, 693], "empfehl": [161, 1154], "runterzugehen": 161, "raufgekommen": 161, "ostseitigen": 161, "westseitig": 161, "sch\u00f6ner": [161, 185], "langen": 161, "grat": 161, "felst\u00fcrm": 161, "daf\u00fcr": [161, 179, 185, 195, 196, 1154], "anstrengend": 161, "200m": 161, "pulverhangerl": 161, "zur\u00fcck": [161, 185, 197, 1163, 1170], "wohlverdient": 161, "la\u0161ko": 161, "geschmack": 161, "schroff": 161, "selektiv": 161, "jedermann": 161, "kett": 161, "2000m": 161, "umschlossen": 161, "gletschergeformten": 161, "karen": 161, "steilen": 161, "w\u00e4nden": 161, "ost": 161, "richtung": [161, 1165], "schlafm\u00f6glichkeiten": 161, "biwak": 161, "einladung": 161, "\u00fcberquerung": 161, "dringend": 161, "f\u00e4llig": [161, 358], "fu\u00dfnoten": [161, 1153], "belieben": 161, "gummi": 161, "reifen": 161, "fahren": 161, "mehrplatzlag": 161, "reserviert": 161, "h\u00fcttenschl\u00e4fer": 161, "ohrenst\u00f6psel": 161, "f\u00e4lle": 161, "eingetreten": 161, "fassen": [161, 240], "typ": [161, 197, 208, 218, 896, 1118], "geschnarcht": 161, "geschrien": 161, "modules sign": 162, "secure boot": 162, "shim": 162, "dell xps 13": 162, "unresolv": [162, 783, 786, 982], "upset": [162, 718], "tendenc": 162, "vendor": [162, 163, 463, 465, 524, 804, 808, 912, 942], "efi": 162, "implementor": [162, 256, 257, 259, 316, 317, 667, 705, 714, 760, 761, 767, 1139, 1159], "shine": 162, "stuck": 162, "cryptographi": 162, "third": [162, 199, 211, 240, 286, 453, 581, 583, 694, 695, 786, 788, 853, 895, 938], "parti": [162, 167, 471, 583, 779, 786, 934, 975, 1122], "signatur": [162, 208, 240, 244, 265, 286, 569, 665, 712, 728, 729, 976], "openssl": [162, 864], "req": 162, "x509": 162, "newkei": 162, "rsa": [162, 921], "keyout": 162, "xps13": 162, "priv": [162, 802], "outform": 162, "36500": [162, 524], "subj": 162, "passphras": [162, 192, 921], "expiri": 162, "0x2": 162, "97": [162, 171, 185, 195, 200, 202, 208, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 441, 1110], "e5": 162, "ef": 162, "88": [162, 171, 185, 195, 200, 202, 208, 211, 213, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 443, 1050, 1110, 1111, 1146], "3a": 162, "b3": 162, "9c": 162, "1b": 162, "a4": 162, "d7": 162, "sha256withrsaencrypt": 162, "issuer": [162, 467], "sep": [162, 163, 191, 211, 224, 227, 232, 240, 244, 247, 265, 286, 304, 449, 646, 890, 912, 914, 925, 982], "gmt": 162, "aug": [162, 227, 905, 913], "2121": 162, "subject": [162, 450, 769, 806, 1139], "rsaencrypt": 162, "modulu": [162, 221, 227, 237, 240], "b5": 162, "2d": [162, 214, 583, 1051], "5c": 162, "6f": [162, 970], "b0": 162, "95": [162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1110, 1111], "f6": 162, "9e": 162, "9d": 162, "0d": 162, "bc": [162, 788, 912], "f5": 162, "6e": 162, "fe": [162, 449], "94": [162, 171, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 492, 493, 1110], "2b": [162, 914], "e6": 162, "b2": 162, "a0": [162, 913], "f8": 162, "7d": 162, "1c": 162, "2c": 162, "9f": 162, "4d": [162, 1051], "86": [162, 171, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1110, 1111], "e3": [162, 486], "dd": [162, 839, 868, 1154], "7b": 162, "3f": 162, "aa": 162, "b8": 162, "a5": [162, 913], "d5": 162, "0b": 162, "81": [162, 171, 173, 185, 195, 200, 202, 208, 211, 213, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 984, 1008, 1110, 1111], "d1": [162, 234, 297, 320, 640], "e8": 162, "dc": [162, 467], "c5": 162, "d2": [162, 234, 297, 640], "c2": [162, 470, 584, 669], "0a": [162, 369], "a1": [162, 224, 269, 1063], "e1": [162, 212, 225, 486, 666], "89": [162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 441, 912, 913, 914, 984, 1110, 1111], "4c": 162, "4a": 162, "77": [162, 185, 193, 195, 200, 202, 204, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 337, 340, 345, 1110, 1111], "a9": 162, "68": [162, 185, 190, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 332, 335, 890, 1110, 1111], "b6": 162, "a8": 162, "9b": 162, "d8": 162, "7f": [162, 914], "e2": [162, 212, 225, 486, 666], "a3": 162, "79": [162, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 1110, 1111], "f4": 162, "96": [162, 171, 185, 195, 200, 202, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 441, 983, 984, 1110, 1111], "4f": [162, 1051], "1d": 162, "7e": 162, "4e": 162, "0e": 162, "d9": 162, "8c": 162, "d3": [162, 640], "c8": 162, "f7": 162, "8e": 162, "d6": 162, "3b": 162, "1e": 162, "4b": [162, 914, 970], "5e": [162, 1037], "5f": [162, 741], "7c": 162, "expon": [162, 1037], "65537": 162, "0x10001": 162, "x509v3": 162, "98": [162, 171, 185, 195, 202, 208, 211, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 566, 603, 984], "0c": [162, 914], "keyid": 162, "c0": 162, "8f": 162, "b1": 162, "b7": 162, "9a": 162, "fa": 162, "7a": 162, "df": [162, 188, 304, 308, 314, 449], "a6": 162, "c9": 162, "76": [162, 185, 195, 200, 202, 208, 211, 213, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 460, 461, 725, 759, 1063, 1110, 1111], "f0": 162, "b4": 162, "f9": 162, "eb": 162, "f1": 162, "6c": [162, 914], "2f": [162, 365, 1051], "5a": 162, "e0": 162, "d0": 162, "93": [162, 171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1110], "8d": 162, "2a": 162, "fc": [162, 466, 467], "1a": 162, "b9": 162, "cb": [162, 630], "miidbtccae2gawibagiuarax5e9vn4g6eclb5bocbruks9cwdqyjkozihvcnaqel": 162, "bqawetepma0ga1ueawwgamzhc2nomcaxdtixmdkwnzeyntc1nloydzixmjewode0": 162, "mti1nzu2wjarmq8wdqydvqqddazqzmfzy2gwggeima0gcsqgsib3dqebaquaa4ib": 162, "dwawggekaoibaqc1lvzqb2aw15x2nlvnnmth6qxdnq1xvokb9vbu6zx": 162, "wl72mzqr": 162, "5rkvwabpeph9hcwdnwcm9mjnhupdexi": 162, "hmszvaowukuzi2kflrpvc": 162, "79gwnr4": 162, "jc": 162, "xdlzwnekcnuhsogjwxxttbydsghpd8q": 162, "valspcvotvjdokib4eyxnavjbdjdldd": 162, "rb8ueftirkn5abigzdoortik9jy1v2ocui5zqu8dkg4vph4mtkp": 162, "nb3kgq7zt5ym": 162, "b8ce2f": 162, "ettmprmfi94x": 162, "7i5tuqrbsylistict": 162, "rf1kw6": 162, "zuzvmwyow9cyzwc5rar": 162, "ys0exg3v": 162, "hyjl7vaxa23rb": 162, "xyiuztxqunxragmbaagjuzbrmb0ga1uddgqwbbqk": 162, "p1jr3huijl4otbwyvngmdz1idzafbgnvhsmegdawgbqkp1jr3huijl4otbwyvngm": 162, "dz1idzapbgnvhrmbaf8ebtadaqh": 162, "ma0gcsqgsib3dqebcwuaa4ibaqa5yke5gyfa": 162, "h49rsbdpobkbr5rv0hz693pljj02mn9hprusmgbygdujyx6odqbzcfah8ko0": 162, "xra": 162, "kdtflvc7uuvwtp": 162, "envqn8vx6twkd0r7maeyze8q6w2y1p1xcbrbwhmhemi": 162, "tjjadwenms9xosesipxkduey9oa6ep6indatkyt2lrw5tyagfocnxyiniybsvdtw": 162, "yqfvxbjphkw": 162, "dintokuzmazeiq3j0hi8o789xdyxlf2snsdshq5huaz67c5brli": 162, "ahemjzbycfiiq65b5x": 162, "y7aq": 162, "eg70tffm4fd8iys4tyxajdhcarqvfpdxazkhx": 162, "rk": 162, "b3lljngstu2g": 162, "mokutil": 162, "mokmanag": 162, "bloodi": [162, 979, 1119], "fan": [162, 184, 188, 214, 238, 307, 1106], "highest": [162, 221, 227, 237, 240, 286, 392, 437, 913, 969], "melt": 162, "7390": [162, 227], "cross develop": 163, "raspberry pi": [163, 905, 906, 907, 908, 909, 912, 913, 914], "crosstool-ng": 163, "c++": [163, 165, 1158, 1159, 1160, 1162], "sadli": [163, 214, 431, 777, 912, 946, 949, 983, 1005], "linaro": [163, 761, 904, 992, 993], "libstdc": [163, 994, 996], "unsatisfi": 163, "libpthread": [163, 985], "feedback": [163, 179, 182, 191, 192, 193], "thankfulli": 163, "gperf": [163, 996], "flex": [163, 788, 912, 996], "texinfo": [163, 996], "help2man": [163, 996], "libtool": [163, 996], "ncurs": [163, 781], "unzip": [163, 809, 996], "rsync": [163, 996], "diffutil": 163, "libncurses5": [163, 996], "gawk": [163, 996], "util": [163, 170, 191, 464, 470, 489, 503, 618, 673, 676, 678, 759, 996, 1003, 1134], "ct": [163, 996], "zlib": [163, 996], "extra": [163, 185, 195, 221, 398, 459, 551, 722, 808], "prior": [163, 834, 850, 875, 912, 982, 998, 1052], "bootstrap": [163, 996, 1141], "latest": [163, 764, 779, 785, 1134], "yann": 163, "morin": 163, "warranti": [163, 204, 337], "merchant": 163, "chosen": [163, 452, 905, 912, 914, 940, 944, 964, 968, 1112, 1125], "rpi3": 163, "armv7": 163, "rpi2": 163, "23179": 163, "libc": [163, 982, 999], "glibc_2": [163, 982], "ldd": [163, 453, 455, 999], "0xb6e06000": 163, "invok": [163, 193, 212, 225, 326, 331, 467, 569, 581, 640, 670, 961, 983, 1020, 1032, 1033, 1058], "rpt2": 163, "rpi1": 163, "deb10u1": 163, "quirk": [163, 905], "werror": [163, 373, 386, 429, 452, 467, 474, 759, 776, 777, 1148], "behind": [163, 203, 386, 437, 467, 489, 599, 808, 923, 982, 1025, 1123], "glibcxx_3": 163, "libgcc_": 163, "downgrad": 163, "cmake_find_root_path": [163, 983], "cmake_sysroot": [163, 983], "viewpoint": 163, "bye": [163, 693, 697, 699, 700, 701, 1119], "relocat": 163, "fragil": 163, "sdk": 163, "buildroot": 163, "encount": [163, 192, 240, 244, 913, 914, 940], "ct_prefix": 163, "categori": [164, 176, 449, 1108], "crosstool": [164, 268, 761, 904, 983, 985, 992, 993, 994], "1399": 164, "dell": 164, "xp": [164, 447], "grintovec": [164, 219], "plan\u0161arsko": 164, "jezero": 164, "\u010de\u0161ka": [164, 219], "ko\u010da": [164, 219], "traunstein": [164, 188, 358], "zierlersteig": [164, 188], "bigbluebutton": [164, 168, 1153], "consumpt": 164, "buildmanag": 165, "embeddedentwicklung": 165, "anpassungen": 165, "paketen": 165, "rootfilesystem": [165, 985], "dient": 166, "vermarktung": 166, "referenz": [166, 255], "kursteilnehm": [166, 358], "beendigung": 166, "entstandenen": 166, "zur\u00fcckgreifen": 166, "finden": [166, 170, 179, 1153], "sofern": 166, "kund": [166, 179], "w\u00fcnscht": 166, "abstufungen": 166, "\u00f6ffentlichkeit": [166, 1170], "besprochen": 166, "hierbei": 166, "anwendung": [166, 1175], "g\u00e4nzlich": 166, "abgesehen": 166, "ausdr\u00fccklich": 166, "zustimmt": 166, "namen": [166, 185, 195, 244, 304, 896, 1177], "individuen": 166, "prinzipiel": 166, "erw\u00e4hnt": [166, 179], "erlaubni": 166, "sollten": [166, 234, 272], "vorgehen": [166, 252, 1170, 1177], "anbietet": 166, "nie": [166, 175, 187, 358, 1158], "zug\u00e4nglich": 166, "onlinekursen": 166, "m\u00f6glichkeit": [166, 169, 187, 1156, 1175, 1176], "\u00fcbungsmateri": 166, "zustimmen": 166, "einzeln": [166, 179], "keinesfal": 166, "ver\u00f6ffentlicht": 166, "verschiedenst": 166, "m\u00f6glichkeiten": [166, 179, 1172, 1175], "entstanden": [166, 179, 187], "nichtsdestotrotz": [166, 1156], "verf\u00fcgung": [166, 185, 1158, 1175], "accompani": [167, 188, 277, 279, 1109, 1164], "privaci": [167, 184, 188, 189], "guidelin": [167, 184, 303, 914], "certainli": [167, 940], "redhat": [167, 289, 443], "gitk": [167, 868], "traine": [167, 194], "respositori": [167, 179], "user1": 167, "user2": 167, "user3": 167, "untrack": 167, "beast": 167, "similarli": 167, "unstag": 167, "accident": [167, 580, 712, 792, 835, 836, 875, 939, 1047], "7434a5b": 167, "100755": 167, "cowork": 167, "employ": [167, 447], "favourit": 167, "869": [167, 227, 314], "124": [167, 171, 185, 192, 195, 202, 208, 211, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 1063], "a4b9666": 167, "bf5bb75": 167, "went": [167, 188], "retri": [167, 926, 1025, 1134], "noon": [167, 307, 968, 1056], "lack": [167, 427, 452, 524, 658, 660, 914, 994], "unavoid": 167, "her": [167, 171, 196, 240, 243, 660, 843, 864, 1072, 1114, 1169], "confid": 167, "merg": [167, 213, 810, 968, 1054, 1171], "gentl": [168, 1160], "histori": [168, 176, 212, 230, 256, 257, 259, 261, 307, 316, 317, 386, 663, 667, 669, 705, 758, 760, 761, 767, 810, 839, 845, 896, 1106, 1112, 1118, 1161, 1165, 1172], "tinker": 168, "solder": 168, "sysv": [169, 983], "grace": [169, 281, 732], "sigterm": [169, 979, 980], "sigkil": 169, "beeinflussen": 169, "shutdown": [169, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 317, 348, 786, 899, 976, 1014], "herausgefunden": [169, 175, 358], "nachfolgend": [169, 1154], "manpag": 169, "verhindern": 169, "genehm": 169, "systemd": [169, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 808, 846, 899, 914, 979, 1154], "inhibit": [169, 316, 665, 703], "children": [169, 441], "vererbt": 169, "attributen": 169, "setprior": 169, "execv": [169, 937, 982], "sched_reset_on_fork": 169, "ORed": 169, "privileg": [169, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 864, 899], "playback": 169, "prevent": [169, 172, 221, 227, 230, 237, 240, 268, 423, 429, 433, 845, 934, 939, 968, 979, 1005, 1017, 1047], "evad": 169, "rlimit_rttim": 169, "getr": 169, "anstel": 169, "prozessen": 169, "teilen": 169, "prozess": [169, 341, 1163, 1165, 1172, 1173, 1176], "startenden": 169, "gestarteten": 169, "weitergegeben": 169, "ausser": [169, 196, 335, 1169], "unterbunden": 169, "pthread_attr_setinheritsch": 169, "pthread_inherit_sch": 169, "pthread_explicit_sch": 169, "newli": [169, 429], "sowa": [169, 175, 358, 1154], "\u00e4hnlich": [169, 200], "wikipedia": [169, 230, 437, 580, 914, 925, 969, 1001, 1119], "filter_driv": 169, "offenbar": [169, 185, 358, 1156], "miser": [169, 618], "netzwerkdrivern": 169, "hoher": 169, "interruptlast": 169, "verbessern": 169, "n\u00f6tig": [169, 1165], "diesbez\u00fcglich": 169, "\u00fcberlegt": 169, "schaltet": 169, "netzwerkdriv": 169, "30107": 169, "linuxfound": 169, "workgroup": 169, "napi": [169, 199, 802], "implementationen": 169, "libmodbu": 169, "freemodbu": 169, "konfiguriert": [169, 170], "jumbo": 169, "jumbo_fram": 169, "mtu": [169, 907], "1500": [169, 227], "eth0": 169, "9000": [169, 227], "ifconfig": [169, 802], "abgelegt": 169, "konfigur": [169, 171], "ifac": [169, 492, 506, 729], "vorsicht": [169, 195, 896], "routern": 169, "fragmentieren": 169, "tracerout": 169, "netzwerkverbindung": 169, "g\u00fcte": 169, "wissen": [169, 358, 1156, 1163], "sar": 169, "sysstat": 169, "schmerzvol": 169, "netter": 169, "ausprogrammiert": 170, "konflikt": [170, 1171], "parallelen": [170, 1175], "demonstr": [170, 172, 192, 264, 519, 568, 1108, 1112, 1151], "mutter": [170, 358, 359, 1175], "aller": [170, 179, 358, 359, 1154, 1175], "danach": [170, 1153], "hilf": [170, 195, 340, 345, 1165], "gefixt": 170, "kommunk": 170, "variablen": [170, 171, 196, 197, 200, 203, 208, 236, 254, 255, 332, 335, 341, 1155, 1165, 1166, 1169], "frontal": 170, "vorgef\u00fchrt": 170, "diskuss": [170, 179, 201, 358], "dank": [170, 175, 358, 1154], "beispielcod": 170, "h\u00e4ndisch": [170, 1157], "zweier": [170, 196, 1169], "bewundern": 170, "k\u00f6nnt": 170, "euch": 170, "erinnern": [170, 358], "blinken": 170, "liess": 170, "irgendwo": [170, 244], "hatten": [170, 175, 358], "edg": [170, 214, 790, 948, 949], "kleinen": 170, "empf": 170, "unbedingt": [170, 185, 1154], "beispielprogramm": 170, "horcht": 170, "gesprochen": 170, "ausf\u00fchrlich": [170, 255], "schamlos": 170, "eigenwerbung": 170, "\u00fcberbleibsel": 170, "ehemaligen": 170, "socketcan": [170, 906, 907], "absorbiert": 170, "worden": [170, 179, 1154], "enth\u00e4lt": [170, 185], "schnuckelig": 170, "aufzeichnen": 170, "replai": [170, 907], "folien": [170, 179, 187, 1153], "freitag": [170, 1154], "kerneldrivertag": 170, "sorri": [170, 176, 847], "emanuel": 170, "beispieldriv": 170, "han": 170, "findet": 170, "angeboten": [170, 1153], "promin": [170, 722, 804], "implementiert": [170, 185, 216, 1163, 1177], "gute": [170, 187, 1163, 1170], "anfang": [170, 171, 179], "mcp2515": [170, 808], "angesprochen": [170, 187], "fortgeschrittener": [170, 187], "einpflegt": 170, "agiert": 170, "mcp251x": 170, "at91": 170, "soc": [170, 912, 913, 914, 948], "deinem": 170, "stecker": 170, "verbaut": 170, "at91_can": 170, "lacht": 170, "zeilenweisen": 171, "nutzdaten": [171, 224], "extrahieren": [171, 198], "wollend": [171, 1170], "spalt": 171, "offensichtlich": [171, 1157], "separiert": 171, "felder": 171, "antwort": [171, 272, 314], "stdtype": 171, "gscheitesten": 171, "aufeinanderfolgend": 171, "whitespac": [171, 232, 240, 286, 371, 1052, 1075, 1131], "nimmt": [171, 196, 208, 232, 234, 240, 272, 1156, 1169], "tupl": [171, 184, 189, 191, 193, 197, 201, 203, 209, 210, 212, 216, 219, 222, 223, 225, 226, 228, 229, 233, 235, 236, 237, 242, 245, 248, 249, 251, 261, 263, 266, 269, 270, 273, 283, 285, 287, 291, 292, 304, 307, 309, 315, 317, 319, 321, 325, 340, 496, 705, 760, 761, 1010, 1028, 1029, 1036, 1037, 1042, 1051, 1054, 1083, 1106, 1127, 1128, 1159], "weiss": [171, 175, 185, 304, 1172, 1177], "rauskommen": 171, "aaa": [171, 232, 244, 250, 286], "tbbb": 171, "tccc": 171, "feld0": 171, "feld1": 171, "feld2": 171, "ccc": [171, 250], "optional": [171, 1156], "splittet": 171, "bearbeitet": [171, 1176], "manuel": [171, 195, 200], "ddd": 171, "eee": 171, "maxsplit": [171, 240, 286, 449], "restfield": 171, "len": [171, 172, 173, 175, 185, 195, 200, 202, 203, 208, 211, 212, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 293, 304, 308, 314, 320, 332, 335, 449, 804, 908, 1009, 1022, 1035, 1037, 1043, 1045, 1052, 1054, 1056, 1057, 1101, 1119, 1123, 1127, 1130], "10101010": 171, "switchnumb": 171, "rsplit": [171, 240, 286, 449, 1052], "l1": [171, 174, 185, 202, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 487], "l2": [171, 174, 185, 202, 208, 211, 216, 221, 224, 227, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320], "\u00e4nderung": [171, 185, 1177], "87": [171, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 1063, 1110, 1111], "zeigen": [171, 895], "dasselb": 171, "objekt": [171, 185, 195, 286], "140070310441600": 171, "ver\u00e4ndert": 171, "91": [171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 1110, 1111], "140070371015728": 171, "92": [171, 172, 195, 200, 202, 204, 208, 211, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345, 892, 1110, 1111], "attributeerror": [171, 185, 221, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 1005, 1018, 1019, 1026], "gottseidank": 171, "alternativ": 171, "aufruf": [171, 185, 191, 195, 240, 336], "paaren": 171, "keyerror": [171, 174, 185, 195, 202, 211, 221, 224, 227, 232, 234, 237, 240, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1005, 1054, 1128], "nix": [171, 172, 185, 203, 211, 232, 234, 237, 262, 282, 314, 335, 525], "umstaendlich": 171, "102": [171, 185, 195, 200, 202, 208, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 345], "103": [171, 185, 195, 202, 208, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335], "104": [171, 173, 185, 195, 200, 202, 208, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1063], "106": [171, 185, 195, 200, 202, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 890], "setdefault": [171, 212, 232, 247, 262, 265, 272, 282, 286, 292, 304, 308, 314, 1054], "107": [171, 185, 195, 200, 202, 204, 208, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 337, 436], "meinvoelligsinnlosertyp": 171, "sinnlose_addit": 171, "sinnlobj": 171, "112": [171, 185, 192, 195, 200, 202, 208, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 335, 890], "113": [171, 185, 195, 200, 202, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 269, 272, 282, 286, 292, 304, 308, 314, 320, 472], "__main__": [171, 175, 185, 190, 208, 211, 221, 224, 225, 227, 232, 234, 237, 240, 244, 247, 250, 253, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 340, 1006, 1009, 1013, 1019, 1027, 1134, 1140], "0x7f64a8934890": 171, "114": [171, 173, 185, 195, 202, 208, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "115": [171, 185, 195, 200, 202, 208, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "116": [171, 185, 195, 202, 208, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "nochwenigersinnvol": 171, "der_absolute_unsinn": 171, "super": [171, 187, 188, 195, 209, 211, 212, 227, 235, 238, 242, 261, 265, 276, 285, 307, 486, 1003, 1005, 1022, 1106, 1113], "unsinn": 171, "uebertreibs_jetzt_bitt": 171, "117": [171, 185, 195, 202, 208, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "118": [171, 185, 195, 202, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 890, 1063], "0x7f64a894a790": 171, "119": [171, 185, 195, 202, 204, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 337], "121": [171, 173, 185, 195, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "1335": 171, "122": [171, 173, 185, 195, 200, 202, 208, 211, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 984], "819508": 171, "123": [171, 185, 195, 202, 203, 208, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 382, 907, 1063, 1070, 1140], "uptim": 171, "timedelta": [171, 190, 217, 219, 272], "358": [171, 227, 272, 286, 304, 314, 443], "125": [171, 195, 200, 202, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "irgendwann_einmal_gewesen": 171, "834972": 171, "126": [171, 185, 195, 200, 202, 208, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "datetime_from_batteri": 171, "840837": 171, "127": [171, 185, 195, 200, 202, 208, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 923, 931], "846889": 171, "woher": [171, 234], "ausschauen": 171, "sinnlo": [171, 234], "sinnlos": [171, 208, 286], "repraesent": 171, "129": [171, 185, 195, 202, 204, 211, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 337], "130": [171, 185, 195, 202, 217, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 276, 282, 286, 292, 304, 308, 314, 665, 781, 1050], "completedprocess": [171, 240, 250], "returncod": [171, 240, 250], "erfolgreich": 171, "beendet": [171, 1175], "schau": 171, "du": [171, 185, 240, 247, 253, 931, 936], "verwendest": 171, "anzuzeigen": 171, "cell": [171, 184, 905, 1030, 1111], "gesendet": 171, "ausf\u00fchrt": 171, "krieg": 171, "131": [171, 185, 195, 202, 211, 217, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 715], "capture_output": [171, 250], "ndrwxrwxr": [171, 250], "mar": [171, 240, 382, 835, 836, 839, 853, 865, 887, 890, 892, 916, 930, 940, 982, 985, 994], "2607": 171, "33768": 171, "ndrwxr": 171, "xr": [171, 460, 835, 836, 853, 855, 856, 864, 865, 890, 905, 912, 913, 914, 982, 994, 996, 997, 1033], "switchzeug": 171, "keiner": [171, 185, 304, 1158], "seinen": [171, 185], "formuliert": [171, 179], "logisch": [171, 195], "irgendwa": [171, 217, 232, 234], "konverti": 171, "musst": 171, "dich": 171, "festlegen": 171, "133": [171, 185, 195, 202, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "stdout_as_utf8": 171, "utf": [171, 212, 221, 224, 225, 227, 231, 237, 240, 250, 272, 286, 292, 304, 308, 314, 1037, 1056, 1103], "134": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 724], "135": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "drwxrwxr": [171, 250, 890, 948, 983, 984, 985, 994, 996], "drwxr": [171, 835, 836, 853, 890, 905, 912, 913, 914, 994, 996], "136": [171, 173, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 461], "fuer": [171, 232, 237, 244], "listdir": [171, 278, 282, 314, 347, 449], "ipynb_checkpoint": [171, 250, 314], "gitignor": [171, 450, 984], "137": [171, 182, 185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314], "rekurs": 171, "iterieren": [171, 175, 185, 200, 208], "dirpath": 171, "dirnam": [171, 224, 227, 278, 449, 524, 759, 1139], "checkpoint": [171, 221, 227, 237, 240], "itg": 171, "scope": [171, 179, 185, 196, 197, 200, 231, 243, 256, 257, 259, 268, 280, 291, 302, 306, 307, 312, 313, 316, 318, 324, 340, 377, 383, 487, 537, 557, 570, 572, 581, 666, 707, 719, 722, 737, 738, 760, 761, 1004, 1049, 1159, 1169, 1173], "getter": [171, 578, 626], "setter": [171, 211, 1026], "fibo": [171, 172, 191, 211, 225, 693, 695, 1009], "listcomprehens": 171, "generatorexpress": [171, 172], "switchdb": 171, "schema": [171, 252, 567, 1062], "michi": 171, "pyexec": 171, "ifadminstatu": 171, "ifdescr": 171, "iflastchang": 171, "snmpenginetim": 171, "ifoperstatu": 171, "fein": [171, 195], "helferlein": 171, "hochtrabend": 171, "nennt": 171, "funktional": 171, "138": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 1063], "139": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "140": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 282, 286, 292, 304, 308, 314, 320, 665], "l_quadrat": 171, "141": [171, 185, 195, 202, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 382, 890], "kompliziert": [171, 185, 237, 240, 262, 1154, 1173], "anm": 171, "versionen": [171, 241], "aufgebaut": 171, "rausnehmen": 171, "konfigurationsfil": 171, "configpars": 171, "142": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 269, 282, 286, 292, 304, 308, 314, 320, 925, 970], "143": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "liste_als_str": 171, "144": [171, 185, 195, 202, 211, 218, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 461], "145": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 1124], "herbert": 171, "146": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "heraussen": 171, "147": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 843], "148": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 584], "149": [171, 185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "151": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 347], "152": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320, 347], "mein_dict": 171, "gerhard": 171, "175": [171, 185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 286, 292, 304, 308, 314], "154": [171, 185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 890], "dict_as_json_str": 171, "155": [171, 185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 347], "gelesenes_dict_von_json": 171, "nahm": 172, "woch": [172, 192, 358, 359, 1154], "anspruch": 172, "platz": 172, "gesammelten": 172, "notizen": 172, "schnell": [172, 175, 195, 216, 241, 1157], "sachen": [172, 198], "is_prim": [172, 195, 198, 203, 1085], "divisor": [172, 203, 759, 1077], "unmodifi": [172, 185, 221, 232, 470, 521, 567, 581, 912, 914, 1005, 1018, 1088], "randomnumb": 172, "howmani": 172, "randrang": [172, 200, 224, 232, 234, 237, 240, 244, 247, 250, 272, 314, 335, 1006, 1041], "prev": [172, 798], "cur": [172, 292, 387], "fibonum": 172, "tend": [172, 271, 274, 281, 437, 781, 847, 997], "input_list_str": 172, "input_list": [172, 247, 1088], "__n": [172, 759], "__lt__": [172, 234, 237, 240, 244, 262, 265, 286, 304], "rh": [172, 221, 225, 240, 375, 417, 433, 487, 501, 567, 581, 583, 707], "__le__": [172, 234, 237, 240, 244, 262, 265, 286, 304, 1025], "__eq__": [172, 234, 237, 240, 244, 262, 265, 286, 304, 1025], "__iadd__": 172, "iadd": 172, "__add__": [172, 237, 240, 244, 262, 286, 304, 1025], "new_numb": [172, 227], "__radd__": [172, 237, 244, 262, 1025], "radd": 172, "lh": [172, 221, 225, 375, 417, 433, 487, 501, 557, 567, 581, 583, 707, 839], "makesnosens": 172, "__number": 172, "input_numb": 172, "numnber": 172, "list_of_squar": 172, "shorter": [172, 1013, 1024, 1056, 1105], "compehens": 172, "effort": [172, 244, 278, 430, 431, 448, 913], "local_assign": 172, "read_global_vari": 172, "enclos": [172, 240, 400], "local_shadows_glob": 172, "explicit_global_assign": 172, "creation": [172, 281, 303, 731, 733, 738, 760, 761, 867, 904, 934, 945, 950, 959, 965, 976, 985, 1047, 1056, 1057, 1141], "captur": [172, 255, 256, 257, 259, 279, 316, 317, 325, 340, 705, 706, 709, 760, 761, 905, 1001, 1159], "create_funct": 172, "inner_funct": 172, "whic": 172, "f_one": 172, "f_two": 172, "launch": [172, 188], "discov": [172, 184, 191], "area": [172, 181, 214, 244, 804, 913, 1170, 1176], "scikit": [173, 175, 222, 1141], "manipul": [173, 452, 601, 724, 759, 806, 912, 925, 934, 969, 981, 1044, 1062], "appreci": [173, 224, 847, 1063], "beauti": [173, 187, 188, 191, 209, 211, 212, 219, 230, 234, 235, 238, 244, 261, 285, 340, 413, 543, 601, 950, 1007, 1056, 1063, 1106], "spectral": [173, 1108], "mat": 173, "scipi": [173, 175, 203, 222, 1141], "loadmat": [173, 175], "sklearn": [173, 175, 1109, 1111, 1141], "pixel": 173, "rgb": [173, 175, 349], "dimens": [173, 175, 1111, 1162], "xkcd": 173, "schafer": [173, 184, 187, 188, 191, 209, 212, 219, 222, 225, 235, 238, 249, 252, 261, 285, 291, 319, 340, 345, 1106, 1124, 1125, 1127, 1128, 1129, 1130, 1132, 1142], "keith": [173, 184, 188, 209, 222, 235, 249, 252, 285, 291, 1106], "galli": [173, 184, 188, 209, 222, 235, 249, 252, 285, 291, 1106], "sci": 173, "kit": [173, 349], "spyder": [173, 184, 1030], "pycharm": [173, 184, 278, 1030], "retain": [173, 406, 1048], "invoc": [173, 487], "comparison": [173, 190, 213, 227, 230, 240, 248, 286, 382, 386, 392, 543, 707, 1039, 1081], "misfeatur": 173, "png": [173, 175, 456, 984, 1108], "imgfil": 173, "veggi": [173, 175, 1108], "pillow": [173, 175], "welcom": 173, "cooper": [173, 732], "477x686": 173, "imgarrai": [173, 175], "ndim": [173, 1111], "477": [173, 227, 272], "dtype": [173, 175, 269, 272, 276, 308, 314, 1111, 1124, 1125, 1127, 1128, 1129, 1130], "uint8": 173, "255": [173, 208, 224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 961], "172": [173, 185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 432], "nrow": [173, 175], "ncol": [173, 175], "reshap": [173, 175, 209, 222, 235, 249, 252, 285, 291, 1106, 1109, 1111], "irrelev": [173, 190, 195, 228, 382, 424, 447, 853, 1037, 1119], "colorspac": 173, "mpl_toolkit": 173, "mplot3d": 173, "axes3d": 173, "pyplot": [173, 202, 221, 250, 253, 304, 308, 314, 1002, 1060, 1111], "plt": [173, 202, 221, 250, 253, 304, 308, 314, 1002, 1060, 1111], "fig": 173, "add_subplot": 173, "set_xlabel": 173, "set_ylabel": 173, "set_zlabel": 173, "ndindex": 173, "scatter": [173, 779], "rgb_linear": 173, "n_cluster": [173, 175], "copy_x": 173, "max_it": 173, "n_init": 173, "n_job": 173, "precompute_dist": 173, "random_st": [173, 1109, 1111], "tol": 173, "verbos": [173, 180, 452, 725, 834, 868, 870, 1041, 1134], "cluster_cent": 173, "int32": [173, 433], "327222": 173, "cluster_centers_": [173, 175], "20529747": 173, "50360681": 173, "3796182": 173, "94408609": 173, "75471018": 173, "53133237": 173, "226": [173, 185, 204, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308, 320, 337], "64913628": 173, "76939951": 173, "92569235": 173, "71464963": 173, "47333306": 173, "60640492": 173, "8888303": 173, "92275244": 173, "84313209": 173, "157": [173, 185, 195, 202, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "30685398": 173, "43988931": 173, "03959132": 173, "225": [173, 185, 224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 286, 292, 308, 314, 456, 1063], "55934051": 173, "182": [173, 185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "98255893": 173, "3232048": 173, "241": [173, 224, 227, 232, 234, 237, 240, 247, 250, 265, 282, 286, 292, 308, 1063], "37322907": 173, "159": [173, 185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "54158234": 173, "51775529": 173, "idx": [173, 175, 240], "cube": 173, "concaten": [173, 175, 212, 224, 225, 232, 240, 286, 314, 334, 382, 448, 893, 1042, 1050], "axi": [173, 175, 276, 1127, 1128], "reduced_img": [173, 175], "fromarrai": [173, 175], "float": [174, 185, 189, 191, 193, 195, 202, 203, 208, 211, 221, 224, 225, 227, 230, 232, 234, 237, 240, 245, 248, 262, 265, 270, 282, 286, 292, 303, 305, 308, 314, 320, 335, 336, 363, 364, 365, 369, 379, 381, 382, 386, 416, 425, 430, 449, 477, 486, 592, 593, 682, 741, 912, 970, 980, 1018, 1036, 1051, 1058, 1063, 1156, 1160], "franziska": [174, 175], "baseexcept": [174, 211, 240, 244, 265, 1005], "callabl": [174, 188, 224, 237, 247, 250, 265, 272, 282, 286, 293, 665, 707, 729, 737, 1019, 1020, 1057], "forev": [174, 407, 408], "rescu": [174, 232, 580, 601, 723, 725, 808, 1003], "pooh": [174, 593], "hex": [174, 185, 195, 202, 217, 227, 237, 250, 262, 265, 272, 282, 292, 308, 314, 320, 335, 351, 524, 914, 1051], "0x7f03d41165f0": 174, "nonexist": 174, "react": [174, 189, 191, 193, 294, 310, 429, 590, 912, 929, 1005, 1161], "ensu": 174, "catch": [174, 214, 230, 253, 279, 325, 351, 467, 474, 496, 513, 530, 532, 565, 591, 594, 610, 616, 620, 625, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 693, 701, 739, 741, 759, 761, 980], "jessa": [174, 195, 202, 224, 253, 304], "verdammt": [174, 340], "ipython": [174, 211, 221, 227, 237, 240, 265, 282, 320, 890], "bd3a1af9b474": 174, "issubclass": [174, 211, 227, 240, 265], "rais": [174, 175, 189, 191, 193, 211, 212, 221, 225, 227, 228, 232, 234, 237, 238, 240, 244, 252, 253, 286, 303, 325, 351, 1003, 1010, 1016, 1026, 1052, 1054, 1127, 1128], "bummer": [174, 227, 739, 1050], "peter": [174, 197, 234, 244, 331, 332, 1043], "paul": [174, 331, 332, 1043], "mari": [174, 1043], "pet": 174, "perfectli": [174, 230], "bloh": [174, 211], "blech": [174, 282, 678, 1122], "range_iter": [174, 185, 200, 217, 224, 232, 234, 237, 240, 250, 262, 265, 272, 282], "0x7f03d402e570": 174, "stopiter": [174, 185, 200, 211, 217, 221, 224, 227, 232, 234, 237, 240, 244, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 693, 701, 1005, 1010], "beantwortung": [175, 358], "herrschaft": [175, 358], "gestellt": [175, 185, 358, 1158], "schulungsr\u00e4umen": [175, 358], "platzhirsch": [175, 358], "schlagen": [175, 358], "spass": [175, 358, 1163, 1165, 1170], "unglaublich": [175, 358], "lustig": [175, 196, 358, 1154, 1165], "vermittelt": [175, 358, 1175], "gelernt": [175, 358, 1163], "anwend": [175, 358], "beachten": [175, 196, 358, 1169], "zudem": [175, 358], "kursleit": [175, 358], "sympathisch": [175, 358], "kompet": [175, 358], "w\u00fcrde": [175, 185, 358], "weiterempfehlen": [175, 358], "wiederholen": [175, 358], "christoph": [175, 217, 358], "jemand": [175, 358], "lassen": [175, 185, 196, 358, 1157, 1163, 1169, 1173, 1177], "bevor": [175, 1163, 1170, 1177], "anf\u00e4ngerthemen": 175, "vorbei": [175, 234, 240, 1166], "herumzureiten": 175, "gehackt": [175, 215], "zeug": [175, 304, 1172], "chef": 175, "vorgespr\u00e4ch": 175, "\u00fcbungsbeispiel": [175, 185], "mitgegeben": 175, "ausgehend": [175, 196, 358], "spektralbild": 175, "sagt": [175, 232], "verwend": [175, 208, 358], "clusteringalgorithmu": 175, "kategorisieren": 175, "abgebildeten": 175, "st\u00fccke": [175, 179], "erkennen": [175, 1158], "hab": 175, "erlaubt": [175, 185, 1154], "kursvorbereitung": 175, "appet": 175, "reduzieren": 175, "farbredukt": 175, "farben": 175, "bilddaten": 175, "interoperiert": 175, "nahtlo": [175, 1163, 1170], "zufal": [175, 201, 1157], "alpha": [175, 240, 286, 1061], "ausgangsbild": 175, "abzuschneiden": 175, "restoren": 175, "algorithmu": [175, 195, 240, 244, 247], "reduc": [175, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 465, 667, 705, 758, 760, 761, 914, 1108], "acht": [175, 195, 196, 240, 272, 292, 320, 1169], "\u00fcberschaubar": 175, "ausdrucksst\u00e4rk": 175, "bemerkbar": 175, "wegschneiden": 175, "pil": 175, "kmean": 175, "nrgba": 175, "disregard": [175, 386], "arbitrarili": [175, 767, 940, 944, 1003], "linear_rgb": 175, "rgba": 175, "ergeben": 175, "testprogramm": 175, "imndata": 175, "teilzeitmitarbeiterin": 175, "studiert": 175, "folgendem": [175, 217, 1177], "bekackten": 175, "inputformat": 175, "parsen": [175, 200], "zwischendurch": 175, "gruppenarbeit": 175, "h2o": 175, "dat": 175, "mass": [175, 281], "0000000e": 175, "2662399e": 175, "5994910e": 175, "4391972e": 175, "0048070e": 175, "0078250e": 175, "hessian": 175, "hartre": 175, "bohr": 175, "kamu": 175, "05054e": 175, "61610e": 175, "00000e": 175, "20781e": 175, "08051e": 175, "83024e": 175, "06829e": 175, "42629e": 175, "65256e": 175, "52600e": 175, "69570e": 175, "91733e": 175, "04388e": 175, "34292e": 175, "04780e": 175, "63758e": 175, "19019e": 175, "41217e": 175, "11622e": 175, "21912e": 175, "11752e": 175, "04198e": 175, "36702e": 175, "14839e": 175, "71613e": 175, "96373e": 175, "40456e": 175, "21369e": 175, "24236e": 175, "60956e": 175, "84350e": 175, "29686e": 175, "92365e": 175, "einigen": [175, 196, 358], "runden": [175, 185], "nachdenken": 175, "einigerma\u00dfen": 175, "zufrieden": 175, "load_dat": 175, "matrix_lin": 175, "readlin": [175, 202, 204, 211, 212, 224, 225, 231, 240, 247, 272, 282, 308, 314, 332, 868, 1056], "vergeigt": 175, "matrix_el": 175, "unnecessari": [175, 377, 407], "triangular": 175, "max": [175, 185, 203, 208, 221, 227, 230, 232, 234, 237, 242, 247, 265, 320, 391, 407, 543, 592, 845, 906, 1111], "row_no": 175, "__name__": [175, 211, 212, 225, 234, 240, 244, 265, 282, 286, 333, 340, 1004, 1006, 1009, 1013], "bildverarbeitung": 175, "ahnung": [175, 217], "beeeeeep": 176, "broad": [176, 466, 1113, 1159, 1160], "responsibl": [176, 967, 1139], "sane": [176, 351, 845, 1114, 1139], "interfer": [176, 437, 450, 913], "paradigm": [176, 844, 852, 905, 913, 1174], "breakag": [176, 788], "nontrivi": [176, 184, 188, 342, 1030, 1133], "inappropri": [176, 364, 369, 470, 766], "conclus": [176, 184, 191, 806], "awkward": 176, "encourag": [176, 767], "hear": 176, "predat": [176, 771, 897, 976], "doubt": [176, 221, 227, 237, 240, 244, 724, 1037], "schulungsbeschreibung": [177, 1153], "drehbuch": 177, "workshop": 177, "infolgedessen": 177, "virtuel": [177, 241, 1163, 1173, 1174], "konzipiert": [177, 187, 358], "add_subdirectori": [178, 457, 461, 974, 1148], "group1": 178, "group2": 178, "montag": [179, 187, 188, 209, 213, 1154], "vorbereitung": [179, 358, 1156], "mitbringen": 179, "teilzunehmen": 179, "stattfinden": [179, 255], "folgt": 179, "hierzu": 179, "privatheitsrichtlinien": 179, "bauanleitung": 179, "ausprobieren": 179, "willkommen": 179, "schulungsbeschreibungen": 179, "raii": [179, 281, 565, 761], "stl": [179, 349, 413, 526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542, 565, 566, 604, 608, 630, 632, 633, 647, 662, 673, 761, 1158, 1159, 1160], "scott": [179, 672, 727], "meyer": [179, 475, 727], "primer": [179, 1146], "sonstig": 179, "argh": [179, 408, 659, 687, 1005, 1134, 1146], "kursanforderung": 179, "erg\u00e4nzend": 179, "lasst": 179, "testgetrieben": 179, "testcas": [179, 1140], "aufgab": [179, 185, 215, 1166], "hacken": 179, "diskutieren": 179, "niederschrift": 179, "geschehenen": 179, "geh\u00f6renden": 179, "privaten": 179, "verl\u00e4uft": 179, "ansehen": 179, "clonen": 179, "wann": [179, 187], "zugeh\u00f6rigen": 179, "entspricht": 179, "unbetr\u00e4chtlich": 179, "gcc5": 179, "laufen": [179, 1154], "darau": [179, 187], "installationsanleitung": 179, "benutzung": [179, 340, 345], "zuerst": [179, 1177], "aggreg": [179, 438, 449, 567, 820, 1124, 1146], "klassen": [179, 185, 191, 341, 1158], "konstruktoren": [179, 203, 255, 341, 1158], "methoden": [179, 185, 197, 335, 1158], "referenzen": [179, 185, 196, 197, 255, 1158, 1169], "klass": [179, 208, 304], "\u00e4quival": 179, "\u00fcbergab": 179, "langsam": [179, 185, 234], "ausbauen": 179, "dynmem": 179, "demonstrieren": 179, "alloziert": [179, 185, 202], "konstruktor": 179, "destruktor": 179, "vermeiden": [179, 185, 1175], "dtor": [179, 465, 551, 637, 642, 673, 676, 710], "ausflug": [179, 195, 236], "capac": [179, 618], "\u00fcbung": [179, 196, 197, 1169], "handgestrickt": 179, "fallen": [179, 1157, 1158], "lustvol": 179, "erleiden": 179, "teufel": [179, 1157], "smart": [179, 255, 277, 316, 341, 342, 343, 358, 447, 524, 634, 674, 675, 705, 725, 730, 738, 758, 760, 761, 1159, 1162], "shared_ptr": [179, 214, 230, 256, 257, 259, 277, 279, 316, 317, 479, 543, 634, 665, 674, 705, 720, 726, 727, 730, 738, 758, 760, 761, 1159], "unique_ptr": [179, 214, 230, 256, 257, 259, 277, 279, 316, 317, 465, 472, 479, 505, 506, 543, 634, 673, 674, 705, 720, 723, 730, 738, 757, 758, 759, 760, 761, 1159], "demonstriert": 179, "vorgriff": 179, "sortieren": [179, 1158], "employeerecord": 179, "parametrisierbarem": 179, "koordinatentyp": 179, "102ff": 179, "arten": [179, 1156], "containern": 179, "pointerarithmetik": 179, "wiederholung": [179, 196, 203, 239, 1169], "iteratoren": [179, 242], "laufzeitverhalten": [179, 197], "verbesserungen": 179, "gegen\u00fcb": [179, 1156], "6ff": 179, "lambda": [179, 211, 212, 225, 227, 230, 242, 255, 262, 279, 282, 287, 304, 308, 449, 543, 608, 680, 705, 710, 715, 717, 729, 732, 737, 760, 761, 1001, 1158, 1159, 1160], "gegen\u00fcberstellung": 179, "sort_algorithm_reverse_lambda": 179, "vererbung": [179, 1158], "fallstudi": 179, "livegehackt": 179, "angebunden": 179, "komplex": [179, 232, 234, 240, 247, 272, 1175], "aufbauen": 179, "vergleichbaren": 179, "anbinden": 179, "wurden": [179, 187], "eigen": [179, 198, 1158, 1163, 1170, 1175, 1176], "kapitel": [179, 340, 345, 1156], "behandelt": [179, 1153], "vorbeigehen": 179, "dcmake_cxx_flag": 180, "dcmake_install_prefix": [180, 455], "libgtest": [180, 181, 277, 279, 1146, 1148], "claim": [180, 375, 584, 586, 587, 843, 936], "simlp": 180, "concret": [180, 188, 214, 277, 465, 472, 477, 492, 554, 640, 642, 737, 745, 1018, 1113], "find_packag": [180, 182, 1148], "add_execut": [180, 450, 456, 462, 508, 544, 547, 550, 553, 556, 559, 562, 656, 971, 978, 983, 984, 1145, 1148, 1150], "add_test": [180, 463, 547, 1145, 1148], "emphasi": 180, "ultim": [180, 211, 231, 575, 740, 913], "luke": [180, 240, 1148], "thetoplevel": 180, "findgtest": [180, 182, 1148], "gtest_root": 180, "dgtest_root": 180, "paranoidli": 180, "bitrot": [181, 1148], "var": [181, 185, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 501, 808, 840, 870, 890, 895, 896, 899, 996], "libgmock": [181, 277, 279], "gmock": [181, 1146], "dcmake_build_typ": [181, 452], "loudli": [181, 575, 811, 921], "flathub": 182, "appstream": 182, "visualstudio": [182, 241, 360], "flatpakref": 182, "stone": 182, "snap": 182, "hate": [182, 569], "textual": [182, 184, 522], "findpackagehandlestandardarg": 182, "gtest_librari": 182, "gtest_include_dir": 182, "gtest_main_librari": 182, "378": [182, 224, 227, 234, 272, 314, 1063], "_fphsa_failure_messag": 182, "197": [182, 185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 265, 282, 286, 292, 304, 308, 314, 320], "find_package_handle_standard_arg": 182, "occur": [182, 244, 367, 382, 387, 388, 434, 458, 541, 735, 806, 868, 897, 967, 1051, 1052, 1056, 1164], "gessmann": 182, "cpoint_demo": 182, "cmakefil": [182, 450, 456, 461, 983, 984], "cmakeoutput": 182, "sigh": [182, 214, 524, 727, 1097], "jail": 182, "dict_extensions_suit": 183, "thing_suit": 183, "xsv": 183, "dict_extens": 183, "wednesdai": [184, 192, 274], "thursdai": [184, 188], "publicli": [184, 557], "freedom": [184, 437, 643], "spontan": 184, "cost": 184, "agil": [184, 198, 447, 1133], "methodologi": 184, "formul": [184, 280, 449, 682, 740, 931, 1162], "diadact": [184, 1030], "anaconda": [184, 278, 1030], "dictat": [184, 294, 310, 386, 425, 976, 1030, 1031, 1115, 1132, 1134, 1161], "volumin": [184, 1030], "nodepad": [184, 1030], "configurabilti": [184, 1132], "eclips": [184, 1030, 1122], "pydev": [184, 1030], "seemingli": [184, 188, 982, 1030, 1106], "strang": [184, 912, 1030], "emac": [184, 204, 282, 868, 890, 982, 1030, 1132], "immutabilii": 184, "crisi": 184, "slept": 184, "lunch": 184, "squeez": 184, "Such": [184, 263, 982, 1139], "takeawai": 184, "nonverb": 184, "antenna": 184, "Being": [184, 851, 892, 914, 1046], "stubborn": 184, "greybeard": 184, "distutil": 184, "azur": 184, "devop": [184, 1029], "heavyweight": [184, 346, 729], "reach": [184, 232, 649, 724, 747, 749, 767, 772, 839, 940, 1051], "afternoon": [184, 307], "simplic": [184, 487, 839, 906, 929, 1003], "paral": 184, "imposs": [184, 244, 433, 469, 693, 704, 806, 958], "expand": [184, 240, 286, 407, 408, 911, 940, 982, 984], "entertain": [184, 188, 209, 212, 235, 261, 285, 307, 1106], "david": [184, 187, 188, 196, 209, 212, 235, 261, 276, 280, 281, 285, 302, 306, 307, 341, 342, 673, 722], "beazlei": [184, 187, 188, 196, 209, 212, 235, 261, 280, 281, 285, 302, 306, 307, 341, 342], "freelanc": 184, "raymond": [184, 187, 188, 191, 195, 196, 209, 212, 219, 235, 238, 261, 285, 307], "hetting": [184, 187, 188, 191, 195, 196, 209, 212, 219, 235, 238, 261, 285, 307], "bias": 184, "humor": [184, 912, 1051], "emphas": [184, 191, 213, 560, 763, 771, 788, 1134], "dissect": [184, 188, 276, 710, 1010, 1106], "multiprocess": [184, 188, 238, 280, 281, 307, 1106, 1163, 1170, 1174], "truli": [184, 188, 1106], "chri": [184, 188, 209, 1106], "wilcox": [184, 188, 209, 1106], "frontier": [184, 188, 261, 285, 307, 1106], "whop": [184, 188, 261, 285, 307, 997, 1106, 1113], "covid": 184, "apart": [184, 244, 281, 400, 666, 906, 1008], "ipykernel_launch": [185, 237, 240, 320], "57bd7d77": 185, "6e54": 185, "4dcd": 185, "b7a8": 185, "452f82f88569": 185, "welt": [185, 195, 208, 335, 358, 1154, 1175], "doku": [185, 195, 262], "aeh": 185, "__doc__": [185, 208, 211, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 286, 304, 308, 314, 320, 333, 335, 1006, 1034, 1057], "interaktiven": 185, "modu": 185, "formatierung": [185, 195, 255], "\u00fcbernimmt": 185, "nachdem": [185, 195], "welch": [185, 225], "hamma": 185, "bieten": [185, 1173], "sech": [185, 195, 208, 240, 247, 272, 286, 320], "zurueck": [185, 244, 282], "objektidentit\u00e4t": [185, 203], "0x7fe9d8578dc0": 185, "referenzieren": 185, "wechselt": 185, "zeigt": [185, 195, 1170], "identit\u00e4t": 185, "0x7fe9c4454d90": 185, "listen": [185, 191, 196, 197, 201, 236, 255, 308, 340, 792, 907, 923, 1122, 1169, 1174, 1176], "ausdrucksstark": 185, "trotzdem": [185, 1163, 1170], "lesbar": [185, 234], "beid": [185, 200, 216, 1177], "modifizieren": 185, "modifik": 185, "sichtbar": [185, 358], "gerechnet": 185, "valueerror": [185, 195, 211, 217, 224, 232, 234, 237, 240, 244, 247, 250, 253, 265, 272, 286, 304, 308, 314, 320, 1005, 1052], "typeerror": [185, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 304, 308, 314, 320, 334, 1004, 1005, 1018, 1025, 1048, 1057, 1128], "gel\u00f6scht": 185, "retten": 185, "uff": 185, "140641996429568": 185, "\u00e4ndern": [185, 197, 1177], "erzeugt": [185, 195], "operanden": 185, "unver\u00e4ndert": 185, "new_l": [185, 240, 1038], "140641996429632": 185, "hurra": [185, 202, 265], "killerfeatur": 185, "abcabc": [185, 224], "sequentiel": [185, 195, 234, 239, 1158], "suche": 185, "Suche": [185, 197, 208, 216, 234], "umst\u00e4ndlich": [185, 195], "andrea": [185, 186, 244, 686, 693], "pfeifer": 185, "gefundener_us": 185, "glauben": 185, "klammern": 185, "begrenz": 185, "interpretiert": 185, "overriden": 185, "ausdruck": 185, "evaluierungsreihenfolg": 185, "9223372036854775808": 185, "einstellig": 185, "schreibt": [185, 896, 1177], "datenmengen": 185, "abzulegen": 185, "sucht": 185, "solchen": [185, 195], "vorstellungsvermoegen": 185, "milliarden": 185, "sebastian": 185, "hugo": [185, 227], "machma": 185, "behandeln": 185, "nichtvorhandensein": 185, "ausnahm": 185, "regel": 185, "mim": 185, "victor": 185, "festzustellen": 185, "evaluiert": 185, "aufgerufen": 185, "operand": [185, 202, 221, 224, 250, 384, 385, 386, 392, 583, 584, 586, 587, 682, 715, 1025, 1039], "bereit": [185, 196, 1153, 1158, 1169], "gesamtergebni": 185, "jaja": [185, 240], "rechten": 185, "sparen": 185, "potschert": [185, 197, 200, 203, 227, 234, 247, 314], "berechnung": [185, 234], "summ": [185, 208, 234, 240, 244, 247, 272, 297], "einzig": [185, 493, 507, 1172, 1175], "iteriert": [185, 195], "bildet": [185, 240], "primitiveren": 185, "intelligenteren": 185, "0x7fe9c43c3c90": 185, "letzt": [185, 200, 245], "schleif": [185, 196, 197, 201, 1169], "jede": [185, 340, 345, 1153, 1176, 1177], "selb": [185, 195], "k\u00fcrzer": 185, "vergleicht": 185, "objektidentit\u00e4ten": 185, "objektinhalt": 185, "modifiziert": 185, "kopieren": [185, 340, 345, 1158], "vermeintlich": 185, "modifiktionen": 185, "sch\u00fctzen": 185, "l3": [185, 202, 234, 240, 250, 262, 272, 282, 292, 314, 487], "kopi": [185, 234], "klar": [185, 195, 1154], "geschachtelt": [185, 196, 197, 1169], "gleicher": 185, "referenziert": [185, 195], "erachtet": 185, "ersparst": 185, "kopien": 185, "ran": [185, 257, 307, 455, 472, 521, 522, 523, 524, 585, 724, 999, 1146], "parametern": [185, 208], "beliebigen": [185, 896], "definieren": 185, "vergleichbar": 185, "unterst\u00fctzen": 185, "ihn": [185, 244], "\u00e4pfel": 185, "birnen": 185, "verglichen": 185, "hingegen": [185, 195, 1172], "php": [185, 215, 231, 727], "falschem": 185, "uebergeben": 185, "vergleich": [185, 208, 216, 245, 255], "aepfeln": 185, "140641996137808": 185, "add_to_list": 185, "__defaults__": [185, 234, 244, 265, 286, 1048], "meine_list": [185, 195], "defaultwert": 185, "benutzt": [185, 1163], "allerhand": 185, "seiteneffekten": 185, "aufpassen": 185, "ewig": 185, "existierend": 185, "unf\u00e4ll": 185, "wechselwirkungen": 185, "eventuellen": 185, "globalen": [185, 195], "156": [185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "erzwingt": 185, "158": [185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 269, 282, 286, 292, 304, 308, 314], "160": [185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 262, 265, 276, 282, 286, 292, 304, 308, 314, 320, 454, 761], "gesucht": 185, "genauer": 185, "n\u00e4chst\u00e4u\u00dferen": 185, "162": [185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "nirgend": 185, "163": [185, 195, 202, 218, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "gibtsnetglob": 185, "gibtsnet": 185, "164": [185, 195, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "nameerror": [185, 200, 234, 240, 265, 286, 292, 320, 1005, 1047], "aufgabenstellung": 185, "kandidat": 185, "ersten": [185, 187, 200, 292, 332, 1155, 1175, 1177], "unsportlich": 185, "zweiten": [185, 187, 292], "unnachhaltig": 185, "dritten": [185, 292], "gelegenheit": 185, "gab": [185, 187], "erz\u00e4hlen": [185, 1156], "165": [185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 1063], "seq": [185, 203, 265, 798, 970, 1008], "fromkei": [185, 231, 236, 248], "166": [185, 195, 202, 224, 227, 232, 234, 240, 244, 247, 262, 265, 282, 286, 292, 304, 308, 314, 320], "167": [185, 195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "xxx": [185, 202, 224, 232, 234, 240, 250, 272, 304, 308, 314, 334, 336, 416, 492], "kksvjhbsk": 185, "sgkysdudsvvc": 185, "dict_kei": [185, 253, 282, 1054], "diesmal": 185, "169": [185, 195, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320], "170": [185, 202, 211, 218, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "irgendein": [185, 217], "171": [185, 202, 204, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 314, 337], "sonst": [185, 195, 232, 234, 247], "kategori": 185, "number_str": 185, "173": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 899], "ihm": [185, 187, 196], "174": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 282, 286, 292, 304, 308, 314, 320, 890], "176": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 286, 292, 304, 308, 314, 320], "177": [185, 202, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "178": [185, 202, 211, 224, 227, 232, 234, 240, 244, 247, 253, 262, 265, 282, 286, 292, 304, 308, 314], "179": [185, 192, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "180": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 449, 792], "181": [185, 202, 224, 227, 232, 234, 240, 244, 247, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 449], "heisst": [185, 197, 201, 202, 1157, 1163], "sequenz": 185, "kopiert": 185, "unterschi": [185, 202, 208, 232], "sobald": [185, 187], "183": [185, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "\u00fcbergeben": 185, "184": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314], "it1": 185, "it2": 185, "multipli": [185, 212, 225, 244, 286, 672], "n2": [185, 244], "combined_iter": 185, "186": [185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "schlecht": 185, "simplen": 185, "transformationen": 185, "generieren": 185, "quadratzahlen": [185, 234], "187": [185, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 320], "quadrat": 185, "naeherung": 185, "performant": 185, "gen_squar": 185, "189": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 282, 286, 292, 304, 308], "syntaktisch": [185, 208], "191": [185, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 253, 262, 265, 282, 286, 292, 304, 308, 320], "genexpr": [185, 211, 304, 314], "0x7fe9c43f2900": 185, "193": [185, 202, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "194": [185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 286, 292, 304, 308, 314, 320], "195": [185, 202, 224, 227, 232, 234, 237, 240, 244, 247, 253, 265, 286, 292, 304, 308, 314], "indent": [185, 200, 218, 225, 231, 240, 241, 395, 1028, 1031, 1041, 1131], "196": [185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320], "userlist": 185, "nochwa": [185, 234, 272], "dropdown": 185, "dropdownlist": 185, "fehleranf\u00e4llig": 185, "198": [185, 202, 211, 224, 227, 232, 234, 237, 240, 244, 247, 253, 265, 272, 282, 286, 292, 304, 308, 314, 320], "202": [185, 202, 211, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 286, 292, 304, 308, 320, 449, 472], "203": [185, 202, 211, 213, 224, 227, 232, 234, 237, 240, 244, 247, 262, 265, 286, 292, 304, 308, 314, 320], "205": [185, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314, 320], "206": [185, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 286, 292, 304, 308, 314, 320], "207": [185, 211, 224, 227, 232, 234, 240, 244, 247, 250, 265, 286, 292, 308, 314, 320], "208": [185, 224, 227, 232, 234, 240, 244, 247, 250, 265, 286, 292, 304, 308, 314], "209": [185, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 286, 292, 304, 308, 314, 320], "user_a": 185, "user_b": 185, "n\u00e4herung": 185, "nackten": [185, 1156], "210": [185, 211, 224, 227, 232, 234, 240, 244, 247, 265, 272, 286, 292, 304, 308, 314, 320], "hantiert": [185, 1157], "anderem": [185, 1163, 1170], "211": [185, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 308, 314], "reviewten": 185, "funktionsaufruf": [185, 247], "sonder": 185, "stackoverflowprogrammierung": 185, "entgegenwirken": 185, "ausholen": 185, "212": [185, 211, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 286, 292, 304, 314, 320], "veloc": [185, 211, 336, 1048], "length_m": [185, 211, 336, 1048], "time_": [185, 211, 336, 1048], "213": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 286, 292, 314], "spiel": 185, "214": [185, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 286, 292, 304, 314], "liegen": 185, "positionel": 185, "215": [185, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 286, 292, 314, 320], "param": [185, 195, 208, 225, 253, 286, 678, 727, 728, 913, 969], "216": [185, 211, 224, 227, 232, 234, 240, 244, 247, 262, 265, 272, 286, 292, 304, 308, 314, 320], "217": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308, 314, 320], "218": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314], "219": [185, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 314, 320], "entpacken": 185, "positionellen": 185, "221": [185, 211, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308], "kwarg": [185, 211, 238, 240, 244, 265, 286, 1003, 1007, 1028], "explizi": 185, "rauskletzeln": 185, "223": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 286, 292, 304, 308, 314, 1119], "celebrate_another_birthdai": 185, "224": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 286, 292, 308, 314, 320], "227": [185, 224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 314], "228": [185, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 286, 292, 304, 314], "zeiterfassung": 186, "__pycache__": [186, 212, 225], "supp": 186, "cpython": [186, 211, 221, 227, 237, 240], "pyc": 186, "dienstag": 187, "anleitung": 187, "offen": [187, 358, 1153], "vorwissen": [187, 1158], "konkreten": [187, 358], "aufgabenstellungen": 187, "dienstgeb": 187, "mitgebracht": 187, "quickstart": [187, 1164], "vorgetragen": 187, "wenngleich": [187, 358, 1163, 1173, 1175, 1176], "un\u00fcblichen": 187, "reihenfolg": [187, 1154], "verbrachten": 187, "firmenprojekt": 187, "entspringenden": 187, "festgehalten": 187, "empfehlungen": 187, "weitergehen": 187, "k\u00f6nnte": [187, 1177], "idiomat": [187, 188, 191, 209, 212, 219, 235, 238, 261, 285, 1106], "lieblingsphras": 187, "bringt": [187, 1156, 1175], "forgiv": [187, 188, 285, 1106], "eafp": [187, 188, 285, 1106], "begriff": [187, 201], "viertelstund": 187, "regex": [187, 200, 225, 227, 252, 253, 262, 285, 292, 1050, 1106], "unumg\u00e4nglich": [187, 1171], "textuel": 187, "analysieren": 187, "hero": [187, 188, 209, 212, 235, 261, 285, 307, 1106], "unterhaltsamen": 187, "keynot": [187, 188, 209, 212, 235, 238, 261, 285, 307, 1106], "konferenz": 187, "pydata": [187, 188, 209, 212, 235, 261, 285, 307, 1106], "chicago": [187, 188, 209, 212, 235, 261, 285, 307, 1106], "witzig": 187, "kommt": [187, 202, 212, 215, 241, 1166, 1175, 1177], "selten": 187, "l\u00e4nge": 187, "ganzen": [187, 196, 1169], "abend": 187, "totalschaden": 187, "\u00fcbertragen": 187, "jedem": 187, "angemeldet": 187, "experienc": [188, 277, 279, 306, 358, 1034, 1164], "machinelearn": 188, "fuzzi": [188, 227], "improvis": 188, "shall": 188, "jango": 188, "rush": 188, "strong": [188, 238, 385, 1113, 1115], "claus": [188, 191, 221, 227, 237, 242, 264, 687, 1008, 1041, 1044], "whet": [188, 271], "appetit": [188, 271], "get_temperatur": [188, 240, 303, 466, 469, 470, 472, 477, 479, 489, 490, 495, 497, 498, 500, 503, 504, 508, 511, 516, 517, 518, 519, 523, 524, 525, 536, 554, 675, 723, 724, 725, 726, 745, 747, 749, 750, 751, 752, 1018, 1094], "__dict__": [188, 208, 211, 212, 224, 225, 234, 237, 240, 244, 253, 265, 282, 286, 304, 1019, 1025], "con": [188, 745, 893, 999], "fiction": 188, "get_temperature_celsiu": 188, "competitor": 188, "eana": 188, "get_temperature_fahrenheit": 188, "eanaadapt": 188, "unserthermomet": 188, "revisit": [188, 230, 238, 261, 279, 303, 600], "shift": [188, 229, 425, 437, 569, 618, 913, 1025], "visitor": [188, 741, 750, 752], "gang": [188, 1162], "idiom": [188, 566, 703], "classic": [188, 424, 475, 566, 746, 760, 761, 800, 1162], "travers": [188, 438, 711, 723, 1005, 1010, 1046], "convolut": 188, "__call__": [188, 234, 244, 265, 286, 292, 1004], "__str__": [188, 211, 212, 225, 234, 237, 240, 244, 262, 265, 286, 303, 304, 351, 1005], "__repr__": [188, 234, 237, 240, 244, 262, 265, 286, 304], "poor": [188, 230, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761, 798, 905, 935, 980], "deleg": [188, 317, 575, 705, 760, 761, 1159], "deck": [188, 213, 543], "sensordata": 188, "sensordata_test": 188, "historydata": 188, "slowli": [188, 560, 665, 790, 905], "csvreport": 188, "csv2sqlite3": 188, "frontend": [188, 576, 982, 1000, 1135], "flaskerl": 188, "reiter": [188, 209, 228, 230, 235, 238, 348, 577, 1106], "phrase": [188, 191, 209, 232, 234, 235, 238, 240, 265, 835, 836, 1023, 1106], "impress": [188, 423], "brought": [188, 437, 1014], "cloth": 188, "extraordinari": 188, "mondai": [189, 191, 193, 194, 219, 268, 274, 277, 279], "preliminari": [189, 191, 192, 193, 194], "homogen": [189, 358], "versu": [189, 191, 193], "immut": [189, 191, 193, 195, 196, 203, 210, 212, 223, 224, 225, 227, 233, 239, 242, 248, 254, 263, 271, 273, 274, 287, 304, 308, 315, 335, 407, 1029, 1036, 1037, 1038, 1042, 1169], "datastructur": [189, 213, 231, 1042], "exercise4": 189, "uh2ebfw8oym": [189, 193], "f26namfjggw": 189, "5qqq3yzbkp8": 189, "ugharkscop9uthgcoaec": 189, "pairwis": [190, 224, 582], "vale": 190, "bewar": [190, 386, 912, 980, 1111, 1113], "cheaper": [190, 437, 584, 586, 587, 665], "memorywis": 190, "johann": 190, "syntact": [190, 211, 394, 537, 577, 665, 717], "sugar": [190, 665, 717], "allow": [190, 191, 211, 240, 380, 447, 652, 725, 759, 790, 813, 1068, 1139, 1159], "retval": [190, 433, 623, 951], "dlc": 190, "msg1": 190, "readabl": [190, 234, 244, 278, 373, 404, 408, 428, 429, 430, 437, 447, 449, 508, 622, 643, 658, 666, 669, 704, 715, 717, 723, 728, 729, 843, 853, 859, 864, 868, 890, 915, 982, 1008, 1027, 1048, 1056, 1058, 1077], "0x7f41f5ff26a0": 190, "msglist": 190, "0x7f41f5ff4160": 190, "0x7f41f5ff41c0": 190, "291130": 190, "now_timestamp": 190, "1603884859": 190, "3412576": 190, "fromtimestamp": 190, "341258": 190, "372": [190, 227, 234, 272], "45259": 190, "microsecond": [190, 428, 845], "programmverweis": 191, "xy": [191, 234, 237, 272, 585, 1046], "zab": 191, "eventcodefil": 191, "definedlisaev": 191, "event_id": 191, "bla": [191, 314, 320], "blubb": 191, "verbessert": 191, "stringformatierung": 191, "ctype": 191, "headerfil": [191, 896], "lst": [191, 227, 850, 1154], "callbackfunc": 191, "datetim": [191, 212, 218, 219, 220, 225, 273, 276, 313, 314, 1063], "observ": [191, 260, 278, 325, 464, 471, 485, 488, 499, 513, 565, 761, 1011, 1012, 1118, 1162], "longish": 191, "resurrect": [191, 450, 868], "outputsequ": 191, "resist": 191, "uncondition": [191, 811, 1005], "suitabl": [191, 240, 286, 781, 905, 954, 1018, 1027], "analysi": [191, 437, 746, 1108, 1111, 1124], "cp1252": [191, 1100, 1101, 1103], "csvlog": 191, "csv_reader": 191, "recv": [191, 192, 908], "tuesdai": [192, 274, 289], "246": [192, 224, 227, 232, 234, 237, 240, 247, 265, 282, 286, 292, 314, 1119], "corpor": [192, 265], "commandin": [192, 194], "comress": [192, 194], "gzip": [192, 194, 258, 267, 288, 289, 761, 808, 831, 833, 834, 838, 904, 992, 993, 1165], "diagnos": [192, 194, 341, 342, 1163, 1170], "netstat": [192, 194, 267, 288, 289, 1122, 1163, 1170], "netcat": [192, 194, 267, 288, 289], "subshel": [192, 194, 204], "telnetd": 192, "insecur": [192, 921], "proto": 192, "foreign": [192, 268, 408], "34490": 192, "56062": 192, "sshd": [192, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 840, 844, 846, 899, 915, 925], "systemctl": [192, 996, 1122], "freedesktop": 192, "systemd1": 192, "quickli": [192, 279, 294, 306, 307, 310, 343, 407, 467, 913, 1161], "unprivileg": 192, "putti": [192, 204, 337], "puttygen": 192, "id_rsa": [192, 921], "authorized_kei": [192, 921], "trivia": 192, "hoorai": [192, 237, 250, 272, 1041], "idiot": 192, "blinker": 192, "briana": 192, "mac": [192, 209, 225, 868, 1032, 1106, 1142], "wakeup": [193, 230, 307, 351, 355, 737, 761, 804, 904, 913, 932, 945, 955, 965, 967], "patrick": 193, "1996": [193, 227], "wagna": 193, "gernot": 193, "1982": [193, 227], "birthplac": 193, "txt2json": 193, "equip": [194, 268, 348, 905, 1163, 1170], "wobei": 195, "deppert": [195, 208, 335], "sidestep": 195, "builtin_function_or_method": [195, 265, 292, 314], "sozusagen": 195, "genauso": [195, 1153], "aufrufen": [195, 896], "zaehler": 195, "initialwert": 195, "zaehlen": 195, "naechsten": 195, "schleifendurchlauf": 195, "locker": [195, 806], "mein_integ": 195, "1024": [195, 227, 839, 845, 868, 930], "sch\u00fctzt": 195, "passen": [195, 262], "gehandhabt": 195, "1267650600228229401496703205376": [195, 221, 224, 232, 244, 250, 272], "hoch": 195, "rechnen": [195, 340, 345], "tut": [195, 304, 335, 1156], "ausschliesslich": [195, 1165], "ganzzahldivis": 195, "ganzzahligen": 195, "resultat": 195, "gleichen": [195, 1163, 1176], "vorrang": 195, "ghi": [195, 234], "viert": 195, "nwelt": 195, "nwie": 195, "linefe": [195, 204, 225, 232, 369, 370, 1050, 1056, 1086, 1131], "bedeutung": [195, 1158, 1165], "unangetastet": 195, "glump": 195, "nebenlaeufigkeitsdemo": 195, "ebenlaeufigkeitsdemo": 195, "l\u00f6sung": [195, 208, 217, 358, 907], "formatierungsm\u00f6glichkeit": 195, "pfx_var1": 195, "pfx_var2": 195, "ausgab": [195, 1156], "notwendig": [195, 1155, 1171, 1172], "abzubrechen": 195, "ignorieren": [195, 196, 202, 1169], "gefunden": [195, 265, 896], "value1": [195, 1066], "501": [195, 227, 1066], "value2": [195, 1066], "799": [195, 224, 227, 1063, 1066], "value3": [195, 1066], "sprachen": [195, 196, 1156, 1169], "neg": [195, 240, 244, 314, 386, 428, 433, 645, 786, 899, 1146], "indiz": 195, "erscheinen": 195, "komisch": 195, "bequem": 195, "mapping_t": 195, "f\u00fcnf": [195, 1163], "sieben": [195, 208, 234, 320, 623], "neun": 195, "explicit": [195, 214, 221, 225, 234, 242, 244, 383, 392, 420, 433, 437, 450, 492, 493, 506, 507, 543, 569, 571, 572, 596, 622, 665, 666, 675, 682, 687, 695, 702, 707, 722, 725, 779, 934, 948, 980, 1000, 1001, 1031, 1034, 1037, 1114, 1127], "implicit": [195, 221, 234, 244, 373, 379, 383, 548, 664, 666, 682, 868, 937, 1023, 1037], "primzahlen": 195, "checken": 195, "primzahl": [195, 196, 1169], "checkenden": 195, "zahl": [195, 202, 208, 233, 234, 237, 247, 335], "probier": 195, "gach": [195, 234], "teiler": 195, "teiler_kandidaten": 195, "prim": 195, "gleichema\u00dfen": 195, "vollst\u00e4ndigkeit": 195, "halber": 195, "startend": [195, 234], "schrittweit": 195, "0x7f24f2ac0e50": 195, "ablegen": 195, "0x7f24f2ac0e70": 195, "arschlangsam": 195, "num_comparison": 195, "datenstruktur": [195, 216], "suchen": [195, 216, 895, 1158, 1165], "einf\u00fcgen": [195, 1163], "optimiert": [195, 208], "perfekt": 195, "einitreten": 195, "himmi": 195, "list_reverseiter": [195, 224, 247, 272], "0x7f24ec31d190": 195, "bricht": 195, "beinhart": 195, "liefert": [195, 1165], "lieber": 195, "zweit": [195, 208, 234, 265, 304, 335, 1163], "po": [195, 234, 240, 244, 265, 270, 282, 286, 308, 314, 449, 525, 618, 645], "wirklichkeit": 195, "ordin\u00e4r": 195, "alternativen": 195, "fruit": 195, "gemma": 195, "divisor_candid": 195, "161": [195, 202, 224, 227, 232, 234, 237, 240, 244, 247, 250, 262, 265, 282, 286, 292, 304, 308, 314], "wegen": 195, "dogma": 195, "zugewiesen": 195, "meine_vari": 195, "eine_vari": [195, 272, 282, 314], "angelegt": 195, "streng": 195, "obigem": 195, "dazusagen": 195, "noch_eine_globale_vari": 195, "increment_diese_vari": 195, "offiziel": [196, 198, 206, 209, 212, 213, 215, 231, 243], "leitfaden": 196, "kommentar": [196, 197, 208, 272, 335, 1169], "platziert": [196, 216], "hackereien": 196, "gleicherma\u00dfen": 196, "sogenannten": 196, "semantik": [196, 197, 1169], "sprach": [196, 197, 1156, 1157, 1158, 1169, 1170, 1177], "standarddatentypen": [196, 197, 1169], "literal": [196, 197, 255, 1169], "python2": [196, 234, 1169], "endg\u00fcltig": [196, 1169], "rausl\u00f6schen": [196, 1169], "konstanten": [196, 197, 1169], "typen": [196, 202, 1165, 1169, 1175], "operatoren": [196, 197, 896, 1158, 1169], "angeschnitten": [196, 1169], "vertiefung": [196, 212, 1169], "nocheinm": [196, 358, 1169], "ausdr\u00fcck": [196, 197, 255, 1169], "operatorrangfolgen": [196, 197, 1169], "grundlegenden": [196, 341, 1165, 1169], "sprachelementen": [196, 1169], "rede": [196, 1169], "syntaxdiagramm": [196, 1169], "gespritzt": [196, 1169], "gesamt": [196, 1169], "sperrig": [196, 1169], "n\u00fctzt": [196, 1169], "menschlich": [196, 1169], "abzubilden": [196, 1169], "tabel": [196, 1169], "anweisungen": [196, 197, 1169], "gro\u00dfen": [196, 1169], "fisch": [196, 1169], "instruktiv": [196, 1169], "bedingungen": [196, 197, 1155, 1169], "verzweigungen": [196, 197, 1169], "bedingt": [196, 197, 1156, 1169], "anweisung": [196, 197, 1169], "formulierungen": [196, 1169], "mehrfach": [196, 197, 1169], "fallauswahl": [196, 197, 1169], "benutzereingaben": [196, 1169], "\u00fcberpr\u00fcfen": [196, 1169], "schleifenkonstrukt": [196, 1169], "weitgehend": [196, 1169], "unserem": [196, 1169], "vehikel": [196, 1169], "hilfreich": [196, 1165, 1169], "klarstellung": [196, 1169], "fu\u00dfgesteuert": [196, 197, 1169], "z\u00e4hlergesteuert": [196, 197, 1169], "auslassen": [196, 1169], "kopfgesteuert": [196, 197, 1169], "gewinnt": [196, 1169], "konsol": [196, 1169], "anzeigen": [196, 1165, 1169], "voraussetzung": [196, 1169], "ausblick": [196, 1169], "schnell\u00fcbersicht": [196, 197, 1169], "sprunganweisungen": [196, 197, 1169], "endlosschleifen": [196, 197, 1169], "naja": [196, 1169], "reinschauen": [196, 1169], "mager": [196, 1169], "ausgelassen": [196, 1169], "eindimensional": [196, 197, 1169], "gefolgt": [196, 234, 1169], "zeichenketten": [196, 197, 1169], "tupel": [196, 197, 200, 1169], "besonder": [196, 197, 1169], "stapel": [196, 197, 1169], "schlangen": [196, 197, 1169], "tempo": [196, 1169], "schauma": [196, 202, 1169], "fallt": [196, 1169], "gscheit": [196, 203, 314, 1169], "gemeinsam": [196, 1153, 1155, 1169, 1172], "dr\u00fcber": [196, 1169], "vielzahl": [196, 1169, 1173, 1176], "l\u00f6sungsm\u00f6glichkeiten": [196, 1169], "eingegangen": [196, 1153, 1169, 1173], "pythonischst": [196, 1169], "bestritten": [196, 1169], "unterprogramm": [196, 197, 1169], "parameter\u00fcbergab": [196, 197, 1169], "r\u00fcckgabewert": [196, 197, 1169], "inner": [196, 197, 217, 449, 1004, 1169], "standardbibliotheken": [196, 197, 1169], "funktionalit\u00e4ten": [196, 197, 1169], "berechnet": [196, 232, 240, 1169], "satz": 196, "gepr\u00e4gt": 196, "konferenzen": 196, "definitiv": 196, "sehenswert": 196, "anf\u00e4nger": [196, 1172], "hochinteress": 196, "sprachelement": 197, "elementar": 197, "beliebig": [197, 232, 1170], "gro\u00df": [197, 1175], "vergleichsoperatoren": 197, "strichrechnung": 197, "modulo": [197, 208, 221, 227, 232, 240, 335, 384, 1025, 1037], "un\u00e4rer": 197, "negat": [197, 221, 244, 897, 1025, 1037, 1055], "konvertierungen": [197, 1156], "pr\u00e4zendenzregeln": 197, "vertauschen": [197, 208, 335], "kontrollstrukturen": [197, 233, 1156], "verzweigung": 197, "schleifen": [197, 255, 1155], "versuch": [197, 209], "hybrid": [197, 639], "supergscheit": 197, "prozeduren": 197, "funktionen": [197, 201, 255, 341, 1155, 1156, 1158, 1166], "funktionspoint": 197, "funktionsobjekt": 197, "primzahlenbeispiel": 197, "laufzeitfehl": 197, "lokal": [197, 208, 254, 255, 1176], "zuweisen": 197, "fehlerfal": 197, "anschliessend": 198, "interaktiv": 198, "uebungen": 198, "idealerweis": [198, 272], "ueblichen": 198, "negoti": 199, "deiniti": [199, 786, 1164], "unload": [199, 788, 802, 804, 1164], "synchronizt": 199, "spinlock": [199, 761, 785, 800, 806, 810, 812, 816, 817, 823, 826, 827, 829, 904, 968, 1164], "rcu": 199, "halv": 199, "softirq": 199, "tasklet": [199, 806], "irss": 199, "kmalloc": [199, 761, 770, 775, 778, 779, 780, 785, 789, 798, 799, 803, 805, 812, 817, 820, 823, 826, 829, 904], "dma": [199, 761, 785, 803, 805, 847, 904, 929, 930, 931, 1164], "coher": [199, 779], "20201125": [200, 202], "unbekannten": 200, "lookup_t": [200, 203, 335], "12345": [200, 232, 244, 272, 320, 1140], "noch_eine_list": 200, "gesamte_list": 200, "vorl\u00e4ufig": 200, "letz": 200, "indented_text": 200, "nebenbei": [200, 202, 335], "eine_zum_sterben_verurteilte_vari": 200, "ein_set": 200, "sequenzen": 200, "grottenlangsam": 200, "subscript": [200, 234, 304, 413, 600, 621, 625, 1127], "multiple_return_valu": 200, "xyz": [200, 202, 208, 227, 234, 265], "mein_formatierter_str": 200, "my_rang": [200, 240, 286, 292, 314], "retlist": 200, "zeichenkett": 200, "funktionieren": [200, 1158, 1176], "my_list": [200, 211, 253], "airms_eth": 200, "simplizistisch": 200, "bl\u00f6d": 200, "i_oder_v": 200, "iv": 200, "rms_eth": 200, "vorcompilieren": 200, "acirms_eth": 200, "my_regex": 200, "zeilennumm": 200, "dazuhaben": 200, "meine_zu_sendenden_daten": 200, "345": [200, 221, 227, 240, 272, 304, 314], "234": [200, 224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 282, 286, 292, 304, 308, 314, 320, 335], "meine_zu_sendenden_daten_in_string_form": 200, "ueblicherweis": 200, "ueber": 200, "verschickt": 200, "empfangen": [200, 215], "geschrieben": [200, 1176], "empfaeng": 200, "empfangenen": 200, "natuerlich": 200, "zurueckkonvertieren": 200, "meine_empfangenen_daten_python_form": 200, "gegangen": [200, 253], "wurscht": [200, 240, 314, 896], "returnwerten": 201, "containerdatentypen": 201, "untypisiert": 201, "zeilen": [202, 244, 1165], "neiner": 202, "nund": [202, 221], "nb": 202, "stoppt": 202, "newlin": [202, 204, 217, 240, 265, 282, 331, 362, 369, 382, 1034, 1050], "ndrin": 202, "drin": [202, 203, 208, 244, 272, 282, 335, 340], "zuviel": [202, 1158], "mischt": 202, "unsupport": [202, 224, 250, 1025], "140546731085392": 202, "0x7fd395fb0e50": 202, "0x7fd3900395b0": 202, "new_t": [202, 1038], "0x7fd390052800": 202, "667": [202, 224, 227, 247, 253, 560], "2923750584022716461": 202, "529344067295497451": 202, "unhash": [202, 262, 272, 286, 314], "fuenf": [202, 224, 234, 262, 272, 286, 304, 320, 335], "verschluckt": 202, "6000000": 202, "elementen": [202, 216], "nonetyp": [202, 212, 226, 227, 282, 292, 304, 320], "_io": [202, 221, 224, 227, 237, 240, 272, 286, 332, 810], "textiowrapp": [202, 221, 224, 227, 237, 240, 272, 286, 332, 1003], "oi": 202, "456": [202, 203, 227, 234, 272, 382], "hansi": [202, 240, 244, 247], "linspac": [202, 308], "11111111": 202, "22222222": 202, "33333333": 202, "44444444": 202, "55555556": 202, "66666667": 202, "77777778": 202, "88888889": 202, "sin": 202, "8961922": 202, "79522006": 202, "19056796": 202, "96431712": 202, "66510151": 202, "37415123": 202, "99709789": 202, "51060568": 202, "54402111": 202, "plot": [202, 221, 250, 253, 304, 308, 314, 1002, 1060, 1112, 1113], "line2d": [202, 250, 253, 304, 308, 314], "0x7fd35cd3ef40": 202, "splev": 202, "splrep": 202, "spline": 202, "represent": [202, 221, 240, 711, 818, 912, 913], "spl": 202, "evalu": [202, 221, 226, 232, 242, 365, 385, 390, 392, 400, 407, 408, 486, 487, 500, 501, 672, 682, 851, 868, 1005, 1039, 1041, 1048, 1146], "x2": [202, 244], "y2": 202, "0x7fd341a486d0": 202, "speicher": [203, 1156, 1163, 1170], "sch\u00fctze": 203, "gemischten": 203, "operationen": [203, 1175], "interpol": [203, 244, 1111], "lag": 203, "gib": [203, 282], "depp": [203, 232], "ret_l": 203, "uniq_l": 203, "read_excel": [203, 1111], "invit": [204, 639], "effici": [204, 249, 303, 397, 436, 438, 440, 601, 605, 615, 618, 720, 852, 899, 901, 1010, 1113, 1124, 1127, 1164], "expans": [204, 896, 897, 1155], "ecdsa": [204, 337], "fingerprint": [204, 337, 916, 967], "sha256": [204, 337, 916], "in22o4vcd400x0bb4flcb5": [204, 337], "vqnrvkvoirgfqq6mapo": [204, 337], "perman": [204, 337], "individu": [204, 337, 389, 447], "sat": [204, 337], "straight": [204, 687, 1128], "startung": 204, "standpoint": 204, "suboptim": [204, 253], "pwned": 204, "hidden": [204, 478, 673, 781, 982], "clumsi": [204, 230, 231, 271, 274, 463, 467, 567, 575, 583, 596, 623, 665, 728, 1002, 1003, 1019, 1020, 1127, 1159], "clumsier": 204, "dumpbin": 204, "hmoe": 204, "frcoll": 204, "bunch": [204, 729, 835, 994, 1018], "oom": [204, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 1009], "killer": [204, 224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 1043], "amoc": 204, "snapshot": [204, 707, 740, 846, 994], "tinkernut": 204, "raspberi": 204, "awesom": [204, 1139], "tunnel": [204, 270, 915, 923, 934], "centric": [204, 1164], "virtualbox": [204, 847], "cygwin": [204, 257, 259, 277, 847], "assort": 204, "nano": 204, "univers": [204, 279, 524, 934, 1031, 1164], "scripe": 204, "voellig": 208, "wohl": [208, 292, 1156, 1177], "selbsterklaerend": 208, "printet": 208, "builtin": [208, 214, 221, 227, 228, 237, 240, 244, 265, 286, 303, 304, 314, 868, 1006], "accur": [208, 240, 244, 265, 286, 442], "__weakref__": [208, 224, 234, 237, 240, 244, 253, 265, 286, 304], "weak": [208, 240, 244, 265, 286, 304, 726, 1113], "_abc": [208, 221, 227, 237, 240], "_1": [208, 728, 729], "a123": 208, "vernichten": 208, "laufzeit": 208, "140032702361168": 208, "refcount": [208, 724, 726, 1003, 1159], "dezim": 208, "oktal": 208, "0o755": [208, 244, 335], "493": [208, 227, 244], "0b11": [208, 244, 247], "sql": [208, 219, 231, 1115, 1118], "0b11111111": 208, "ordnung": 208, "uhrzeit": 208, "vormittag": 208, "6666666666666666": [208, 244], "nda": [208, 262], "python_dir": 208, "jan": [208, 237, 240, 331, 332, 349, 382, 772, 864, 890, 948, 982, 996, 1033], "lowercas": [208, 240, 286, 868, 915, 1051, 1068, 1073], "140032636418048": 208, "ein_iterierbares_d": 208, "extraw\u00fcrschtl": 208, "sex": [208, 221, 243, 244, 1068], "diver": 208, "translation_t": [208, 244, 247, 250, 320], "bag": [208, 256, 257, 259, 450, 460, 758, 760, 761, 976, 1038], "green": [208, 244, 489, 524, 525, 585, 905], "blue": [208, 216, 224, 244, 1063], "mengenoperationen": 208, "set1": 208, "set2": 208, "symm_diff": 208, "lisa": 208, "eugeni": [208, 211], "okan": 208, "mcguir": 208, "sinner": 208, "vornam": [208, 216, 217], "nachnam": [208, 216, 217], "persnr": 208, "personalnumm": 208, "5000": [208, 221, 227, 1022], "4000": [208, 227], "3000": [208, 221, 227, 247, 286], "15000": [208, 227], "uppercas": [208, 240, 286, 868, 1051, 1068], "verfuegbar": 208, "restlichen": 208, "gehaelt": 208, "konstant": [208, 216, 239], "unexpect": [208, 427], "pcap": [209, 229], "certifi": 209, "math": [209, 212, 222, 224, 225, 227, 235, 244, 249, 252, 285, 291, 314, 567, 569, 1031, 1106], "statist": [209, 222, 235, 244, 249, 252, 285, 291, 441, 970, 1090, 1106, 1111, 1139], "undo": [209, 868, 1106], "brad": [209, 1106], "traversi": [209, 1106], "evaluierung": 210, "eval": [210, 238, 239, 248, 266, 280, 281, 286, 293, 302, 305, 306, 1027], "openfil": 211, "hanld": 211, "soemth": [211, 822], "zf": 211, "namelist": 211, "zipdemo": 211, "extracted_nam": 211, "isinst": [211, 212, 225, 227, 240, 253, 265, 1025, 1128], "superclass": [211, 212, 225, 240], "subclass": [211, 212, 225, 240, 244, 1005, 1022], "class1": 211, "class2": 211, "salari": 211, "selina": 211, "orgl": 211, "8010": [211, 227, 449], "birth": [211, 237, 250, 567, 759, 1095, 1096, 1097, 1098, 1101, 1102, 1103], "1622102062": 211, "4778333": 211, "019427776336669922": 211, "009679079055786133": 211, "daniel": [211, 214, 331, 332, 349], "ortner": 211, "num_employe": 211, "__first": 211, "__last": 211, "__address": 211, "_person__first": 211, "_person__last": 211, "_person__address": 211, "_first": 211, "_last": 211, "_address": 211, "do_debug": 211, "val": [211, 240, 728, 913], "ueberhaupt": 211, "l_float": 211, "0x7fd9881b04a0": 211, "functool": [211, 278], "wrapper": [211, 240, 250, 255, 292, 314, 470, 668, 693, 928, 976, 1004, 1025, 1108], "komplexen": 211, "testfil": 211, "nzeil": [211, 240, 308], "seek": [211, 286, 332], "nth_fibo": 211, "accomod": 211, "0x7fd9801cec10": 211, "0x7fd9801b8d60": 211, "0x7fd9801b4900": 211, "0x7fd98014cd40": 211, "gen": [211, 286], "sequenceno": 211, "kv_pair": 211, "permissionerror": [211, 227, 247, 265, 282, 1005], "deni": [211, 227, 247, 282, 492, 506, 851, 887, 915, 923, 935, 940, 941, 1005, 1134], "eacc": 211, "filenotfounderror": [211, 227, 265, 1005], "64bit": 211, "utc": 211, "python_implement": [211, 212, 225], "python_version_tupl": [211, 212, 225], "python39": 211, "dynload": [211, 320], "isfil": [211, 325, 449], "isdir": [211, 449], "my_path": 211, "hopefulli": 211, "the_except": 211, "__class__": [211, 234, 237, 240, 244, 253, 262, 265, 286, 304], "__bases__": [211, 212, 225, 242], "distrust": 211, "guido": [211, 1130], "incompet": 211, "precondit": [211, 837], "abdefg": 211, "beg": [211, 408, 1006], "bdefg": 211, "stringifi": 211, "0x7ffa9c2ac3a0": 211, "formatstr": 211, "ding": [211, 241, 975], "formatierter_str": 211, "oserror": [212, 240, 265, 1005], "errno": [212, 225, 227, 247, 282, 433, 786, 935, 950, 979, 980, 997, 1005, 1134], "assertionerror": [212, 237, 253, 265, 304, 1005, 1018, 1139, 1140], "jjjj": [212, 353, 354, 446], "line_count": 212, "aud": 212, "qualifii": [212, 225], "trunc": [212, 225], "hypot": [212, 225], "seed": [212, 225, 244, 519], "ascii": [212, 225, 240, 247, 250, 265, 286, 292, 308, 314, 369, 372, 375, 381, 1036, 1037, 1050, 1056, 1114], "codepoint": [212, 225], "escap": [212, 225, 240, 262, 362, 1114], "ord": [212, 225, 244, 265, 1045], "chr": [212, 225, 265], "isxxx": [212, 225], "rfind": [212, 225, 240, 286, 292, 1052], "grammar": [212, 225], "instrospect": [212, 225], "hasattr": [212, 225, 240, 253, 265, 1019, 1025], "__module__": [212, 224, 225, 234, 237, 240, 244, 253, 265, 286, 304], "bytearrai": [212, 225, 240, 265], "histogram": [212, 213, 230, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 553, 554, 562, 667, 705, 758, 760, 761], "defaultdict": [212, 238, 239, 263], "make_histogram": [212, 554, 563], "fileobj": 212, "stringio": [212, 240], "8859": [212, 230, 231, 247, 250, 270, 292, 304, 308, 449], "pycon": [212, 238, 261, 285, 307, 1106], "2017": [212, 238, 261, 307, 575, 673, 724, 1106], "metaprogram": [212, 239, 261, 682, 1018, 1106, 1160], "contract": [212, 214, 261, 1106], "evolut": [212, 261, 307, 868, 1106], "unauthor": [212, 261, 307, 1106], "biographi": [212, 261, 307, 1106], "lesson": [212, 261, 307, 337, 343, 448, 711, 998, 1106], "evolv": [212, 261, 307, 708, 1106], "assembli": [212, 261, 285, 307, 982, 984, 1106, 1161], "revolv": [212, 238, 307, 1106, 1112], "mro": [212, 238, 242, 307, 1106], "cpa": 213, "fahr": [213, 363, 365], "tomorrow": [213, 228, 347, 348], "correctli": [213, 303, 326, 425, 912, 935, 1058, 1114], "consecut": [213, 388, 717, 901], "becam": [213, 299], "44ff": 213, "gig": 213, "upcom": 213, "msi": 213, "wswitch": [213, 429, 666, 777], "wall": [213, 227, 228, 386, 436, 452, 740, 776, 777, 1148], "77ff": 213, "skip": [213, 240, 332, 450, 452, 783, 913, 983, 984, 1005, 1141], "89ff": 213, "alongsid": [213, 802], "num_us": 213, "199ff": 213, "204ff": 213, "208ff": 213, "220ff": 213, "222ff": 213, "db_get_user_at_index": 213, "298ff": 213, "strcpy": [213, 230, 375, 421, 557, 572, 575, 676, 710, 908, 966], "strlen": [213, 375, 400, 428, 572, 575, 676, 710, 946, 949, 979], "bahavior": 213, "dest": [213, 375], "strtol": 213, "stringif": [213, 1156], "db_error_str": 213, "sexi": [213, 958], "caleb": 213, "discret": [214, 244, 303, 435, 439, 444, 445, 667, 705, 758, 760, 761], "bleed": 214, "rect": [214, 416, 543], "sphere": [214, 543], "preprocessor": [214, 230, 382, 409, 415, 419, 422, 426, 431, 435, 439, 444, 445, 664, 667, 705, 758, 760, 761, 982, 1146, 1160], "julia": 214, "yesterdai": [214, 230, 238, 278], "distanc": [214, 569, 577, 578, 598, 715, 728], "has_lastnam": 214, "botton": 214, "mingw": [214, 257, 259, 277, 347, 360, 847], "resembl": 214, "tortur": 214, "functor": [214, 256, 257, 259, 316, 317, 609, 705, 706, 760, 761], "rudimentarili": [214, 1035, 1109], "gotten": [214, 741], "recourc": 214, "outright": [214, 270, 423, 1010, 1041], "geniu": [214, 270, 600, 1010, 1041], "livehackingli": 214, "zuordnung": [215, 231, 243], "bissl": 215, "commandlineargument": [215, 1155], "stoff": 215, "summenbeispiel": 215, "showcas": 215, "datenbank": 215, "formulieren": 215, "verbindung": [215, 1153, 1163, 1170, 1176], "schicken": [215, 1153], "schickman": 215, "muessen": 215, "verwandlen": 215, "fractal": [215, 231], "schatzi": 216, "zeitkomplexit\u00e4t": 216, "foreach": 216, "assozi": [216, 1158], "color_transl": 216, "gelb": 216, "yellow": 216, "hashtabl": [216, 1128], "englisch": [216, 1153], "sack": 216, "my_color": 216, "her_color": 216, "pink": 216, "gr\u00fcn": 216, "beig": 216, "vereiningungsmeng": 216, "schnittmeng": 216, "symmetrisch": 216, "differenzmeng": 216, "sei": 216, "gewesen": 216, "waer": [216, 292], "1037190666": [216, 232, 234, 240, 244, 247, 250, 253, 467, 474, 491, 492, 493, 505, 506, 507, 626, 1019], "6666010185": 216, "schwarzbauer": 216, "json_string_fuer_den_brows": 216, "response_dict": 216, "svnr": [216, 224, 227, 234, 240, 244, 247, 250, 252, 253, 292, 468, 474, 496, 502, 1019, 1123], "pprint": [216, 218, 225, 227, 262, 1006, 1114], "formatieren": 216, "endlich": 216, "transfer_string_in_php_am_serv": 216, "u00f6rg": 216, "transfer_string_in_js_am_brows": 216, "response_dict_am_brows": 216, "verwandeln": [216, 1172], "schlussendlich": 216, "geeignet": [216, 1154], "platzieren": 216, "meine_t": 216, "sozialversicherungsnumm": 216, "simmer": 217, "mein_str": 217, "sq": [217, 224, 227, 234, 244, 265, 286, 304, 308], "docu": 217, "nmehrzeilig": 217, "nvon": 217, "mehrzeilig": 217, "deppertem": 217, "irrelevant": 217, "quargel": [217, 218], "190666": 217, "inkorrekt": 217, "geburtsdatum": 217, "endswith": [217, 232, 234, 240, 250, 265, 269, 272, 286, 292, 308, 314, 1052], "sss": 217, "isalpha": [217, 221, 232, 234, 240, 244, 265, 286, 292, 314, 1052], "isidentifi": [217, 221, 234, 240, 250, 265, 286, 292, 1052], "islow": [217, 240, 250, 265, 286, 1052], "arg1": 217, "arg2": 217, "arg3": 217, "abcblah": 217, "blahabcbcabcc": 217, "lah": 217, "rstrip": [217, 221, 225, 232, 236, 237, 240, 250, 265, 282, 286, 292, 308, 331, 340], "lstrip": [217, 232, 236, 240, 265, 286, 292, 340], "wieviel": [217, 1163, 1170], "995237": 217, "datestr": 217, "dt": [217, 314, 808, 912], "strptime": [217, 218, 219, 225, 314], "uuid": 217, "msg_aussi": 217, "sea": [217, 232, 265, 336, 686], "oida": [217, 234, 237, 286, 452], "msgid": 217, "uuid4": 217, "345654325678": 217, "json_aussi": 217, "6563515ef0824d42b459389cefd09127": 217, "json_eini": 217, "sender": [217, 980], "msg_eini": 217, "sauberestextfil": 218, "12345678": 218, "2270": [218, 227], "20333": 218, "360": [218, 227, 304, 314], "91011121": 218, "30333": 218, "36756788": 218, "1112": [218, 227], "1244": [218, 227], "31333": 218, "45011121": 218, "44444": 218, "340": [218, 227, 234, 240, 272, 286, 314], "sauber": 218, "read_sauberes_text_fil": 218, "item1": [218, 314], "item13": 218, "werk": 218, "lort": 218, "charg": [218, 471, 478, 491, 492, 493, 505, 506, 507], "sonderbestandsnumm": 218, "materialkurztext": 218, "lagerplatz": 218, "verfueg_bestand": 218, "bme": 218, "we_datum": 218, "verf\u00fcg": 218, "bestand": 218, "datum": [218, 1113], "api2": 219, "opc": [219, 228, 303], "rrdtool": 219, "rrd": 219, "subprocess": [219, 235, 240, 249, 251, 261, 285, 325, 340, 345, 1106], "commmon": [221, 408], "140576769461632": 221, "simplicit": 221, "inputfil": [221, 449], "450": [221, 227, 234, 269, 272], "paragraph": [221, 462], "highli": [221, 358, 524], "pathnam": [221, 227, 237, 240, 767, 934, 938, 1050], "displayhook": [221, 227, 237, 240, 333], "excepthook": [221, 227, 237, 240, 333], "uncaught": [221, 227, 237, 240, 543], "systemexit": [221, 227, 237, 240, 262, 265, 333, 1005], "behav": [221, 227, 230, 237, 240, 522, 543, 669, 724, 725, 756, 824, 850, 970], "last_typ": [221, 227, 237, 240, 333], "last_valu": [221, 227, 237, 240, 333, 693, 696, 699, 700, 701], "last_traceback": [221, 227, 237, 240, 333], "builtin_module_nam": [221, 227, 237, 240, 333], "pertain": [221, 227, 237, 240], "exec_prefix": [221, 227, 237, 240, 333], "float_info": [221, 227, 237, 240, 333], "float_repr_styl": [221, 227, 237, 240, 333], "hash_info": [221, 227, 237, 240, 333], "hexvers": [221, 227, 237, 240, 333], "int_info": [221, 227, 237, 240, 333], "maxsiz": [221, 227, 237, 240, 333], "largest": [221, 227, 237, 240, 425], "maxunicod": [221, 227, 237, 240, 333], "thread_info": [221, 227, 237, 240, 333], "version_info": [221, 227, 237, 240, 333], "__stdin__": [221, 227, 237, 240, 333], "__stdout__": [221, 227, 237, 240, 333], "__stderr__": [221, 227, 237, 240, 333], "__displayhook__": [221, 227, 237, 240, 333], "__excepthook__": [221, 227, 237, 240, 333], "screen": [221, 227, 237, 240, 844, 850, 868], "exc_info": [221, 227, 237, 240, 333], "getdlopenflag": [221, 227, 237, 240, 333], "dlopen": [221, 227, 237, 240, 1173], "getprofil": [221, 227, 237, 240, 333], "profil": [221, 227, 237, 240, 358, 436, 442, 445, 761, 808, 840, 1157, 1160], "getrefcount": [221, 227, 237, 240, 247, 333], "getrecursionlimit": [221, 227, 237, 240, 333], "getsizeof": [221, 227, 237, 240, 262, 265, 308, 333], "gettrac": [221, 227, 237, 240, 333], "setdlopenflag": [221, 227, 237, 240, 333], "setprofil": [221, 227, 237, 240, 333], "setrecursionlimit": [221, 227, 237, 240, 333], "settrac": [221, 227, 237, 240, 333], "__breakpointhook__": [221, 227, 237, 240, 333], "breakpointhook": [221, 227, 237, 240, 333], "breakpoint": [221, 227, 237, 240, 265], "exctyp": [221, 227, 237, 240], "__unraisablehook__": [221, 227, 237, 240, 333], "unraisablehook": [221, 227, 237, 240, 333], "unrais": [221, 227, 237, 240], "exc_typ": [221, 227, 237, 240, 1003], "exc_valu": [221, 227, 237, 240, 1003], "exc_traceback": [221, 227, 237, 240, 1003], "err_msg": [221, 227, 237, 240], "addaudithook": [221, 227, 237, 240, 333], "audit": [221, 227, 237, 240, 333], "call_trac": [221, 227, 237, 240, 333], "afterward": [221, 227, 237, 240, 387, 437, 574, 724, 725, 726, 739, 804, 976, 1140], "older": [221, 227, 237, 240, 833, 976], "get_asyncgen_hook": [221, 227, 237, 240, 333], "firstit": [221, 227, 237, 240], "get_coroutine_origin_tracking_depth": [221, 227, 237, 240, 333], "coroutin": [221, 227, 237, 240, 316, 695, 696, 698, 699, 700, 701, 705, 760, 761, 1106], "getallocatedblock": [221, 227, 237, 240, 333], "getdefaultencod": [221, 227, 237, 240, 286, 333], "getfilesystemencodeerror": [221, 227, 237, 240, 333], "getfilesystemencod": [221, 227, 237, 240, 333], "getswitchinterv": [221, 227, 237, 240, 333], "setswitchinterv": [221, 227, 237, 240, 333], "is_fin": [221, 227, 237, 240, 333], "set_asyncgen_hook": [221, 227, 237, 240, 333], "set_coroutine_origin_tracking_depth": [221, 227, 237, 240, 333], "cr_origin": [221, 227, 237, 240], "rtld_global": [221, 227, 237, 240], "rtld_xxx": [221, 227, 237, 240], "rtld_lazi": [221, 227, 237, 240], "frequenc": [221, 227, 237, 240, 244, 280, 281, 302, 306, 326, 351, 355, 761, 904, 905, 913, 945, 965, 967], "uninterrupt": [221, 227, 237, 240, 800], "workload": [221, 227, 237, 240], "typic": [221, 227, 237, 240, 268, 278, 294, 306, 310, 408, 448, 452, 469, 493, 522, 649, 779, 828, 853, 983, 1028, 1038, 1159, 1161], "005": [221, 227, 237, 240], "abiflag": [221, 227, 237, 240, 333], "api_vers": [221, 227, 237, 240, 333], "1013": [221, 227, 237, 240], "ipyk": 221, "base_exec_prefix": [221, 227, 237, 240, 333], "base_prefix": [221, 227, 237, 240, 333], "_ast": [221, 227, 237, 240], "_codec": [221, 227, 237, 240], "_collect": [221, 227, 237, 240], "_f": [221, 227, 237, 240], "byteord": [221, 227, 237, 240, 262, 333, 906], "foundati": [221, 227, 237, 240], "emati": [221, 227, 237, 240], "ipykernel": [221, 227, 237, 240, 265], "zmqshelldisplayhook": [221, 227, 237, 240], "dont_write_bytecod": [221, 227, 237, 240, 333], "opt": [221, 227, 237, 240, 414], "ation": [221, 227, 237, 240], "7976931348623157e": [221, 227, 237, 240], "308": [221, 227, 234, 237, 240, 282, 292, 304, 314], "max_": [221, 227, 237, 240], "epsilo": [221, 227, 237, 240], "2305843009213693": [221, 227, 237, 240], "iphash2": [221, 227, 237, 240], "50922736": 221, "cache_tag": [221, 227, 237, 240], "xv": [221, 227, 237, 240], "bits_per_digit": [221, 227, 237, 240], "sizeof_digit": [221, 227, 237, 240], "syntaxerror": [221, 232, 237, 244, 265, 1005], "eol": [221, 244], "9223372036854775807": [221, 227, 237, 240, 759], "1114111": [221, 227, 237, 240], "meta_path": [221, 227, 237, 240, 333], "_frozen_importlib": [221, 227, 237, 240, 265], "builtinimport": [221, 227, 237, 240, 265], "_fro": [221, 227, 237, 240], "homepa": 221, "path_hook": [221, 227, 237, 240, 333], "zipimport": [221, 227, 237, 240], "filefind": [221, 227, 237, 240], "path_importer_cach": [221, 227, 237, 240, 333], "jfa": [221, 227, 237, 240], "platlibdir": [221, 227, 237, 240, 333], "ps1": [221, 227, 237, 240, 333, 1141], "ps2": [221, 227, 237, 240, 333], "ps3": [221, 227, 237, 240, 333], "pycache_prefix": [221, 227, 237, 240, 333], "outstream": [221, 227, 237, 240], "versio": [221, 227, 237, 240], "202103": 221, "releaselev": [221, 227, 237, 240], "warnopt": [221, 227, 237, 240, 333], "isdigit": [221, 232, 240, 244, 265, 272, 286, 292, 1052], "pp": [221, 272, 413, 600], "list_of_str": 221, "tensorflow": 222, "kesselfal": 222, "rettenbachklamm": 222, "hochtor": 222, "hochschwab": 222, "_a": [224, 240, 265], "_123": 224, "140575811317328": 224, "140575811316208": 224, "0xffffffff": [224, 225, 386], "4294967296": [224, 232], "0x48": [224, 912], "330": [224, 227, 240, 265, 272, 286, 304, 314], "332": [224, 227, 240, 272, 286, 304], "333": [224, 227, 240, 272, 286, 314, 336], "334": [224, 227, 240, 272, 314], "dstr": 224, "777": [224, 227, 314], "aliv": [224, 406, 958, 1001], "bcd": 224, "dusan": 224, "alex": [224, 238, 1023], "mist": [224, 272], "span": [224, 250, 253, 255, 262, 286, 363, 382, 406, 783], "141592653589793": [224, 227], "roll": [224, 243, 264, 280, 281, 1041, 1156], "dice": [224, 243, 264, 280, 281, 1041], "win": [224, 240, 250, 314, 899, 966, 1041], "rnd": [224, 247], "convention": 224, "wise": [224, 268, 431, 575, 647, 678, 759, 761, 776, 786, 806, 904, 945, 1005], "resultset": [224, 227, 1118], "sbin": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 840, 844, 846, 893, 899, 930, 940], "nologin": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 893, 899, 930, 940], "adm": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 894, 897, 899], "lp": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "spool": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "lpd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "ftp": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 895, 996], "65534": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "apach": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "httpd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "coredump": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899, 979], "997": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "dumper": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "998": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "996": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "timesync": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "995": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "tss": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "tpm": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "dbu": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 846], "polkitd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 846], "994": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "avahi": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 846], "mdn": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "unbound": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 1037], "992": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "dnsmasq": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 846], "991": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "dhcp": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "nm": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 443, 576, 808, 994, 1000], "openconnect": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "993": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "989": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "networkmanag": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 443, 846], "usbmuxd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "gluster": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "988": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "glusterf": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "rtkit": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "realtimekit": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "pipewir": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "987": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "geoclu": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "990": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314], "chroni": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "984": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "saslauth": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "saslauthd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "radvd": [224, 240, 247, 250], "rpc": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "rpcbind": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "openvpn": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "982": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "981": [224, 227, 240, 247, 250], "spawn": [224, 240, 247, 250, 265, 272, 282, 286, 303, 308, 314], "colord": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "985": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "rpcuser": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314], "abrt": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 846, 899], "flatpak": [224, 240, 247, 250, 265, 272, 282, 286, 289, 308, 314, 899], "979": [224, 227, 240, 247, 250], "helper": [224, 240, 244, 247, 250, 265, 272, 282, 286, 308, 314, 381, 575, 639, 687, 728, 802, 899, 1131, 1134], "983": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "978": [224, 227, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "vboxadd": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "tcpdump": [224, 240, 247, 250, 265, 272, 282, 286, 308, 314, 899], "974": [224, 227, 240, 247, 250], "broker": [224, 228, 240, 247, 250, 265, 272, 282, 286, 303, 308, 314, 846, 1100], "mappingproxi": [224, 240, 253], "229": [224, 227, 232, 234, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314], "230": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308, 314, 320], "231": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 286, 292, 308, 314, 320, 491, 492, 493, 505, 506, 507], "232": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 286, 292, 308, 314, 320], "233": [224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 282, 286, 292, 308, 314, 320], "inputlist": [224, 1008], "ret": [224, 227, 232, 449, 687, 972, 1008, 1053], "235": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308], "236": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 286, 292, 304, 308, 314, 320, 434], "237": [224, 227, 232, 234, 240, 244, 247, 250, 265, 282, 286, 292, 308, 314, 320], "238": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304, 308, 314, 320], "239": [224, 227, 232, 234, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 320], "240": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 282, 286, 292, 308, 314, 320], "242": [224, 227, 232, 234, 237, 240, 247, 250, 265, 282, 286, 292, 304, 308, 314, 320], "243": [224, 227, 232, 234, 240, 247, 250, 265, 282, 286, 292, 304, 314], "244": [224, 227, 232, 234, 237, 240, 247, 250, 265, 286, 292, 304, 314, 320], "245": [224, 227, 232, 234, 247, 265, 282, 286, 292, 304, 314, 320], "247": [224, 227, 232, 234, 240, 244, 247, 265, 282, 286, 292, 308, 314, 320], "248": [224, 227, 232, 234, 237, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 320], "249": [224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 286, 292, 304, 308, 314, 320], "250": [224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 276, 282, 286, 292, 314, 320, 897], "251": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 304, 308, 320], "252": [224, 227, 232, 234, 237, 244, 247, 265, 272, 282, 286, 292, 304, 308, 314, 1119], "253": [224, 227, 232, 234, 237, 240, 247, 250, 265, 272, 286, 292, 308], "256": [224, 227, 232, 234, 240, 247, 250, 265, 272, 282, 286, 292, 308, 314, 372, 580, 1108, 1119], "257": [224, 227, 232, 234, 237, 240, 244, 247, 250, 265, 272, 282, 286, 292, 314], "258": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292], "0x7fda5444e6a0": 224, "259": [224, 227, 232, 234, 237, 240, 247, 265, 272, 282, 286, 292, 314], "260": [224, 227, 232, 234, 237, 240, 247, 265, 272, 282, 286, 292, 304, 314], "261": [224, 227, 232, 234, 240, 244, 250, 265, 272, 282, 286, 292], "262": [224, 227, 232, 234, 240, 250, 265, 272, 282, 286, 292, 304, 314], "263": [224, 227, 232, 234, 240, 244, 247, 250, 265, 272, 282, 286, 292, 304], "264": [224, 227, 232, 234, 237, 240, 247, 250, 265, 272, 286, 292, 304, 314], "265": [224, 227, 232, 234, 240, 247, 265, 272, 286, 292, 304, 314], "266": [224, 227, 232, 234, 237, 240, 244, 250, 265, 286, 292], "267": [224, 227, 232, 234, 237, 240, 247, 250, 265, 272, 286, 292, 304], "268": [224, 227, 232, 234, 240, 247, 250, 265, 272, 286, 292, 314], "269": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 984], "270": [224, 227, 232, 234, 240, 244, 247, 265, 272, 282, 286, 292, 304, 314], "other_map": 224, "272": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 304], "273": [224, 227, 232, 234, 240, 244, 265, 272, 286, 292, 314, 515, 533, 534, 535, 536, 538, 539, 747, 749, 751, 1018], "274": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 282, 286, 292, 314], "140575811316304": 224, "275": [224, 227, 232, 234, 240, 244, 247, 265, 272, 282, 286, 292, 304], "276": [224, 227, 232, 234, 237, 247, 265, 272, 282, 286, 292, 304], "277": [224, 227, 232, 234, 237, 240, 244, 247, 265, 282, 286, 292, 314], "278": [224, 227, 232, 234, 240, 247, 265, 272, 286, 292, 304, 314], "279": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 286, 292, 304], "280": [224, 227, 232, 234, 237, 240, 244, 265, 272, 286, 292, 304, 983, 984], "140575692459008": 224, "282": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 286, 292, 304], "283": [224, 227, 232, 234, 237, 240, 244, 247, 265, 286, 292], "284": [224, 227, 232, 234, 240, 244, 247, 265, 269, 292, 304, 314], "elementwis": 224, "285": [224, 227, 232, 234, 237, 240, 265, 272, 286, 292, 304], "286": [224, 227, 232, 234, 237, 240, 244, 265, 286, 292, 304], "287": [224, 227, 232, 234, 237, 240, 244, 247, 265, 272, 292, 304, 314], "140575692438848": 224, "288": [224, 227, 232, 234, 240, 244, 247, 265, 272, 286, 292, 304, 314], "140575692448960": 224, "289": [224, 227, 232, 234, 240, 265, 272, 286, 292, 304, 314], "290": [224, 227, 232, 234, 240, 265, 272, 286, 292], "292": [224, 227, 232, 240, 244, 265, 272, 282, 286], "293": [224, 227, 232, 234, 240, 265, 272, 282, 286, 292], "295": [224, 227, 232, 234, 240, 244, 265, 272, 282, 286], "296": [224, 227, 232, 234, 240, 265, 272, 282, 286, 292], "298": [224, 227, 232, 240, 244, 265, 272, 282, 286, 292, 314], "deep": [224, 236, 304, 682, 687, 970], "301": [224, 227, 232, 237, 240, 244, 265, 272, 282, 286, 292, 304], "302": [224, 227, 234, 240, 244, 265, 272, 286, 292, 304, 1063], "deepcopi": [224, 234, 247, 272, 292, 304, 1046], "303": [224, 227, 234, 237, 240, 272, 286, 292, 304, 314, 984], "304": [224, 227, 234, 237, 240, 244, 304], "305": [224, 227, 237, 240, 265, 282, 286, 292, 304], "314": [224, 227, 234, 237, 240, 265, 272, 282, 286, 292, 314], "315": [224, 227, 240, 265, 286, 292, 314], "rdr": [224, 225, 308, 449, 472, 1114], "delimit": [224, 225, 240, 269, 270, 286, 308, 314, 596, 894, 1034, 1114], "fund_nam": [224, 225, 1063], "fund_isin": [224, 225, 1063], "fund_tick": [224, 225, 1063], "as_of_d": [224, 225, 1063], "fund_in_univers": [224, 225, 1063], "fund_of_fund": [224, 225, 1063], "fund_holdings_count": [224, 225, 1063], "fund_holding_funds_count": [224, 225, 1063], "american": [224, 230, 648, 662, 761, 1063, 1119], "fund": [224, 1063], "balanc": [224, 228, 416, 1063], "us0240711020": [224, 1063], "abalx": [224, 1063], "20210103": [224, 1063], "084": [224, 1063], "dodg": [224, 1063], "cox": [224, 1063], "us2562011047": [224, 1063], "dodbx": [224, 1063], "410": [224, 227, 272, 286, 1063], "us2562191062": [224, 1063], "dodgx": [224, 1063], "franklin": [224, 1063], "incom": [224, 240, 303, 1063, 1122], "us3534963000": [224, 1063], "fkinx": [224, 1063], "america": [224, 1063], "us3998741066": [224, 1063], "agthx": [224, 1063], "price": [224, 244, 442, 465, 1063], "us7414791092": [224, 1063], "prgfx": [224, 1063], "fidel": [224, 1063], "puritan": [224, 1063], "us3163451079": [224, 1063], "fpurx": [224, 1063], "contrafund": [224, 1063], "us3160711095": [224, 1063], "fcntx": [224, 1063], "363": [224, 227, 272, 286, 304, 314, 1063], "us77954m1053": [224, 1063], "prwcx": [224, 1063], "westburi": [224, 1063], "us6804141090": [224, 1063], "owlsx": [224, 1063], "us1401931035": [224, 1063], "caibx": [224, 1063], "582": [224, 227, 1063], "harbor": [224, 1063], "institut": [224, 225, 478, 493, 1063], "us4115115044": [224, 1063], "hacax": [224, 1063], "us77954q1067": [224, 1063], "trbcx": [224, 1063], "dreyfu": [224, 1063], "treasuri": [224, 1063], "cash": [224, 1063], "inst": [224, 1063], "us2619411083": [224, 1063], "dirxx": [224, 1063], "blackrock": [224, 1063], "us09251t5092": [224, 1063], "malox": [224, 1063], "us3163453059": [224, 1063], "flpsx": [224, 1063], "liquid": [224, 1063], "us09248u5517": [224, 1063], "tttxx": [224, 1063], "dfa": [224, 1063], "portfolio": [224, 244, 1063], "us2332038841": [224, 1063], "dfgbx": [224, 1063], "feder": [224, 1063], "herm": [224, 1063], "us60934n6821": [224, 1063], "utixx": [224, 1063], "oakmark": [224, 1063], "investor": [224, 244, 1063], "us4138382027": [224, 1063], "oakix": [224, 1063], "asset": [224, 1063], "us00767h4939": [224, 1063], "787": [224, 227, 1063], "fpa": [224, 1063], "crescent": [224, 1063], "us30254t7596": [224, 1063], "fpacx": [224, 1063], "us3534968058": [224, 1063], "fcisx": [224, 1063], "us5529836943": [224, 1063], "meiix": [224, 1063], "goldman": [224, 1063], "sach": [224, 1063, 1177], "instrument": [224, 440, 442, 912, 1063], "us38142b5003": [224, 1063], "ftixx": [224, 1063], "schwab": [224, 1063], "us8085098551": [224, 1063], "swppx": [224, 1063], "508": [224, 227, 272, 304, 1063], "templeton": [224, 1063], "bond": [224, 1063], "advisor": [224, 1063], "us8802084009": [224, 1063], "tgbax": [224, 1063], "us32008f6060": [224, 1063], "sgiix": [224, 1063], "ishar": [224, 1063], "etf": [224, 1063], "us4642872000": [224, 1063], "ivv": [224, 1063], "507": [224, 227, 304, 1063], "vanguard": [224, 1063], "admir": [224, 1063], "us9229087104": [224, 1063], "vfiax": [224, 1063], "510": [224, 227, 304, 314, 1063], "us9229087286": [224, 1063], "vtsax": [224, 1063], "370": [224, 227, 272, 286, 314, 1063], "spdr": [224, 1063], "midcap": [224, 1063], "us78467y1073": [224, 1063], "mdy": [224, 1063], "dow": [224, 1063], "jone": [224, 341, 342, 1063], "industri": [224, 808, 1063], "us78467x1090": [224, 1063], "health": [224, 1063], "us81369y2090": [224, 1063], "xlv": [224, 1063], "discretionari": [224, 1063], "us81369y4070": [224, 1063], "xly": [224, 1063], "energi": [224, 1063], "us81369y5069": [224, 1063], "xle": [224, 1063], "financi": [224, 1063], "us81369y6059": [224, 1063], "xlf": [224, 1063], "us81369y8030": [224, 1063], "xlk": [224, 1063], "invesco": [224, 1063], "qqq": [224, 1063], "us46090e1038": [224, 1063], "us2562061034": [224, 1063], "dodfx": [224, 1063], "msci": [224, 1063], "eaf": [224, 1063], "us4642874659": [224, 1063], "efa": [224, 1063], "897": [224, 227, 1063], "jpmorgan": [224, 1063], "sec": [224, 463, 966, 1063, 1134], "mny": [224, 1063], "mkt": [224, 1063], "us4812a28358": [224, 1063], "jtsxx": [224, 1063], "eql": [224, 1063], "wght": [224, 1063], "us46137v3574": [224, 1063], "us4812a03757": [224, 1063], "cjtxx": [224, 1063], "us00143w8753": [224, 1063], "odvyx": [224, 1063], "dividend": [224, 1063], "us78464a7634": [224, 1063], "sdy": [224, 1063], "equiti": [224, 1063], "us2332033719": [224, 1063], "dfiex": [224, 1063], "888": [224, 227, 1063], "edgewood": [224, 1063], "us0075w07594": [224, 1063], "egfix": [224, 1063], "prudenti": [224, 1063], "us00767h7585": [224, 1063], "r6": [224, 1063], "us55273h3536": [224, 1063], "meikx": [224, 1063], "327": [224, 227, 240, 265, 272, 282, 314], "328": [224, 227, 234, 240, 272], "geschieht": [225, 358, 895], "wunder": 225, "groesser": 225, "jave": 225, "shorthand": [225, 373, 887, 1019], "lin": 225, "lout": 225, "faster": [225, 244, 303, 425, 437, 970, 976], "outputlist": 225, "getus": [225, 1084], "userdatabas": [225, 1084], "userid": [225, 237], "groupid": 225, "loginshel": 225, "userrecord": 225, "dens": [225, 234, 244], "pratic": 225, "_fix_float_numb": 225, "fieldnam": [225, 1114], "_fix_bool": 225, "elif": [225, 232, 308, 371, 408, 449, 1025, 1040, 1041], "_fix_dat": 225, "read_stock": [225, 1063], "csvfile": [225, 1018], "converted_record": 225, "dbname": [225, 1117], "stmt": 225, "predefin": [225, 940, 975, 980, 1152], "circuit": [226, 232, 242, 913, 1039, 1163, 1170], "windows_path": [227, 232], "festplatt": [227, 1173], "eue": [227, 304, 335], "lehrer": 227, "50923504": 227, "202107": 227, "140106795875920": 227, "140106669190640": 227, "669": [227, 244], "140106669191024": 227, "0j": 227, "copied_l": [227, 234], "140106669249856": 227, "copied_t": 227, "tuple_containing_one_el": 227, "tran": 227, "satan": [227, 237], "queen": [227, 247, 1095, 1097, 1101, 1103, 1114], "10000000000": [227, 282, 335], "prod": 227, "resultset_to_local_db": 227, "my_local_db": 227, "basenam": 227, "normalized_path": 227, "normpath": [227, 234, 1013], "291": [227, 232, 240, 265, 282, 292, 304, 314, 441], "294": [227, 232, 240, 265, 282, 286, 292], "297": [227, 232, 234, 240, 244, 286, 314], "299": [227, 232, 237, 240, 244, 265, 272, 282, 286, 292, 314], "306": [227, 237, 244, 265, 282, 286, 292, 304, 314], "307": [227, 234, 240, 265, 282, 286, 292, 304, 314], "309": [227, 234, 237, 240, 272, 282, 286, 292, 304, 308], "310": [227, 234, 237, 240, 286, 292, 304, 386], "311": [227, 234, 265, 286, 292, 314], "312": [227, 234, 240, 265, 272, 282, 292, 314], "313": [227, 234, 240, 272, 286, 292, 314], "316": [227, 234, 237, 240, 265, 286, 304, 314], "317": [227, 234, 237, 265, 272, 282, 286, 304, 314], "318": [227, 237, 240, 272, 286, 314], "319": [227, 234, 237, 240, 265, 282, 286, 304, 314], "321": [227, 237, 240, 272, 282, 286, 292, 304], "322": [227, 237, 240, 272, 292, 304, 314], "323": [227, 234, 237, 240, 265, 286, 292, 304, 314], "324": [227, 237, 240, 265, 282, 286, 292, 304, 314, 524], "325": [227, 234, 240, 272, 282, 292, 314], "326": [227, 234, 240, 265, 282, 292, 304, 314], "329": [227, 240, 265, 272, 304], "331": [227, 234, 240, 265, 286], "335": [227, 234, 240, 272, 286, 314], "336": [227, 234, 240, 286, 314, 456], "337": [227, 240, 272, 286, 314], "338": [227, 234, 272, 286, 314], "339": [227, 234, 240, 286, 314], "341": [227, 234, 240, 272, 286, 304, 314], "342": [227, 234, 240, 272, 292, 314], "343": [227, 240, 272, 286, 304], "346": [227, 240, 286, 304, 314, 622, 623, 624, 625], "347": [227, 272, 286, 304, 314], "348": [227, 240, 304, 314], "349": [227, 240, 286, 304, 314, 436], "351": [227, 234, 240, 286, 314], "352": [227, 234, 240, 272, 286, 314], "353": [227, 234, 240, 272, 286, 314], "354": [227, 240, 286, 314, 470], "355": [227, 272, 286, 314], "356": [227, 247, 286, 304], "357": [227, 272, 286, 304, 314], "359": [227, 286, 314], "361": [227, 286, 304, 314], "362": [227, 272, 286, 304, 314], "364": [227, 286], "365": [227, 304], "366": [227, 272, 286], "367": [227, 286, 304, 314], "368": [227, 286, 314], "369": [227, 272, 286, 314], "371": [227, 272, 314], "373": [227, 234, 272, 304, 314], "374": [227, 234, 286, 304], "375": [227, 234, 244, 272, 286, 304, 314, 436], "376": [227, 272, 286, 304, 314], "377": [227, 234, 272, 286, 304, 314], "379": [227, 272, 286, 304, 314], "380": [227, 272, 286, 304], "381": [227, 234, 272, 286], "382": [227, 272, 286, 304], "383": [227, 234, 272, 276, 304, 314], "384": [227, 272, 286, 304, 314], "385": [227, 272, 286, 304], "386": [227, 272, 286, 304], "387": 227, "388": [227, 272, 286, 304], "389": [227, 304], "390": [227, 286, 304], "391": [227, 272, 304], "392": [227, 272], "393": [227, 234, 272, 286, 304], "394": [227, 234, 272, 286, 304], "395": [227, 234, 272, 286, 304, 314], "396": [227, 234, 272, 853], "397": [227, 234, 286, 304], "398": [227, 234, 286], "399": [227, 234, 286, 304], "401": [227, 234, 272, 286], "402": [227, 272, 304], "403": [227, 234, 286, 304], "405": [227, 286], "406": [227, 234, 272, 286, 304], "407": [227, 272, 286, 304], "408": [227, 234, 272, 286, 304], "409": [227, 234, 272, 286, 304, 314], "411": [227, 234, 272, 286, 314], "412": [227, 286], "413": [227, 234, 272, 286], "414": [227, 234, 272, 286, 304], "415": [227, 286, 304], "416": [227, 234, 272, 304], "417": [227, 234, 272, 286], "418": [227, 234, 272, 304], "419": [227, 234, 272, 286, 304], "420": [227, 234, 272, 286, 304], "421": [227, 234, 272, 286, 304], "422": [227, 234, 314], "423": [227, 272, 286, 304, 759], "424": [227, 234, 272, 286], "425": [227, 272], "426": [227, 304], "427": [227, 234, 272, 304], "428": [227, 234, 272, 304], "429": [227, 272, 304], "430": [227, 234, 272, 304], "431": [227, 272, 304, 314, 759], "432": [227, 234, 272, 304], "433": [227, 272, 304, 314], "434": [227, 272], "435": 227, "436": [227, 272, 304], "437": [227, 234, 272, 304, 314], "438": [227, 234, 304], "439": [227, 272], "440": [227, 234, 272], "441": [227, 234, 272], "442": [227, 234, 272, 314], "443": [227, 234, 304], "444": [227, 234, 304], "445": [227, 234, 304, 314], "446": [227, 272], "447": [227, 234, 272, 304, 314], "448": [227, 272], "449": [227, 234], "451": [227, 234, 304], "452": [227, 234, 272], "453": [227, 234, 304], "454": [227, 234, 272], "455": [227, 234], "457": 227, "458": [227, 272], "459": [227, 314], "460": [227, 272], "461": [227, 272], "462": [227, 272], "463": 227, "464": [227, 272], "465": [227, 272, 276, 314], "466": [227, 272], "467": [227, 272, 314], "468": [227, 272], "469": [227, 272, 725], "470": [227, 272], "471": [227, 272, 314], "472": [227, 272], "473": 227, "474": [227, 272], "475": [227, 272], "476": [227, 272, 314], "478": 227, "479": [227, 272], "480": [227, 272], "481": [227, 272], "482": [227, 272, 314], "483": [227, 272, 314], "484": 227, "485": 227, "486": [227, 272], "487": [227, 272], "488": [227, 272], "489": 227, "490": [227, 890], "491": 227, "492": 227, "494": [227, 272], "495": 227, "496": 227, "497": [227, 272], "498": [227, 272], "499": 227, "502": [227, 272], "503": 227, "504": [227, 272], "505": [227, 240, 272], "506": [227, 272], "509": [227, 304], "511": [227, 304, 314], "514": 227, "515": [227, 272, 724], "516": [227, 272], "518": [227, 272], "519": 227, "520": [227, 272], "521": [227, 272, 744, 748], "522": 227, "523": 227, "524": [227, 272], "525": [227, 272], "526": 227, "527": 227, "528": 227, "529": [227, 314], "530": 227, "531": [227, 272], "532": [227, 759], "533": 227, "534": 227, "535": 227, "536": [227, 890], "538": 227, "539": 227, "540": [227, 314], "541": 227, "542": 227, "543": 227, "544": [227, 314], "545": [227, 314], "546": 227, "547": 227, "548": [227, 276], "549": 227, "550": 227, "551": 227, "552": [227, 314], "553": [227, 314], "554": [227, 892], "555": 227, "556": [227, 314], "557": 227, "558": 227, "559": 227, "560": 227, "561": 227, "562": 227, "563": 227, "564": 227, "565": 227, "566": 227, "567": 227, "568": 227, "569": 227, "570": 227, "571": 227, "572": 227, "573": 227, "574": 227, "575": 227, "576": 227, "577": 227, "578": 227, "579": 227, "580": 227, "581": 227, "583": [227, 314], "584": 227, "585": 227, "586": 227, "587": 227, "588": [227, 308], "589": 227, "590": 227, "591": [227, 314], "592": 227, "593": 227, "594": [227, 314], "595": 227, "596": [227, 996], "597": 227, "598": 227, "599": 227, "601": 227, "602": 227, "603": 227, "604": 227, "605": 227, "606": 227, "607": [227, 314], "608": 227, "609": [227, 314], "610": [227, 890], "611": 227, "612": [227, 853], "613": 227, "614": 227, "615": [227, 314], "616": 227, "617": 227, "618": 227, "619": 227, "620": 227, "621": 227, "622": 227, "623": 227, "624": 227, "625": [227, 244], "626": 227, "627": 227, "628": 227, "629": 227, "630": 227, "631": 227, "632": 227, "633": 227, "634": 227, "635": 227, "636": 227, "637": 227, "638": 227, "639": 227, "640": [227, 575], "641": 227, "642": 227, "643": 227, "644": [227, 1033], "645": 227, "646": 227, "647": 227, "648": 227, "649": 227, "650": [227, 314], "651": 227, "652": 227, "653": 227, "654": 227, "655": [227, 314], "656": 227, "657": [227, 314], "658": 227, "659": 227, "660": 227, "661": 227, "662": 227, "663": 227, "665": [227, 314], "668": [227, 314, 1037], "670": 227, "671": [227, 314], "672": 227, "673": 227, "674": 227, "675": 227, "676": 227, "677": 227, "678": 227, "679": 227, "680": [227, 314], "681": [227, 314], "682": [227, 890], "683": 227, "684": 227, "685": 227, "687": 227, "688": 227, "689": 227, "690": 227, "691": 227, "692": 227, "693": 227, "694": 227, "695": [227, 314], "696": 227, "697": [227, 314], "698": [227, 890, 930], "699": 227, "701": [227, 314], "702": 227, "703": [227, 280, 281, 302], "704": 227, "705": 227, "706": [227, 314], "707": 227, "708": [227, 240], "709": 227, "710": [227, 575], "711": 227, "712": 227, "713": 227, "715": [227, 649], "716": [227, 314], "717": 227, "718": 227, "719": 227, "720": 227, "721": 227, "722": 227, "723": 227, "724": 227, "725": 227, "726": 227, "727": [227, 314], "728": 227, "729": 227, "730": [227, 269], "731": 227, "732": 227, "733": 227, "734": 227, "735": 227, "736": 227, "737": 227, "738": 227, "739": 227, "740": 227, "741": 227, "742": 227, "743": 227, "744": 227, "745": 227, "746": [227, 314, 984], "747": 227, "748": 227, "749": 227, "750": 227, "751": 227, "752": 227, "753": 227, "754": 227, "756": 227, "757": 227, "758": 227, "759": 227, "760": 227, "761": 227, "762": 227, "763": 227, "764": 227, "765": 227, "766": 227, "767": 227, "768": [227, 314], "769": 227, "770": [227, 314], "772": 227, "773": 227, "774": [227, 314], "775": 227, "776": 227, "778": 227, "779": 227, "780": 227, "781": [227, 314], "782": [227, 276], "783": 227, "784": 227, "785": 227, "786": 227, "788": [227, 314], "789": [227, 234], "790": 227, "791": [227, 724], "792": 227, "793": 227, "794": 227, "795": 227, "796": 227, "797": 227, "798": 227, "801": [227, 269], "802": 227, "803": 227, "804": [227, 314], "805": 227, "806": 227, "807": 227, "808": 227, "809": [227, 308], "810": 227, "811": [227, 314], "812": [227, 314], "813": [227, 314], "814": 227, "815": [227, 244], "816": [227, 250, 314], "817": 227, "818": 227, "819": 227, "820": 227, "822": 227, "823": 227, "824": 227, "826": 227, "827": [227, 314], "828": [227, 276, 314], "829": 227, "830": 227, "831": 227, "832": 227, "833": 227, "834": 227, "835": 227, "836": 227, "837": 227, "838": 227, "839": [227, 314], "840": 227, "841": 227, "842": 227, "843": 227, "844": [227, 314], "845": 227, "846": 227, "847": 227, "848": 227, "849": 227, "850": 227, "851": 227, "852": 227, "853": 227, "854": 227, "855": 227, "856": 227, "857": 227, "858": 227, "859": 227, "860": 227, "861": 227, "862": [227, 314], "863": 227, "864": 227, "865": 227, "866": 227, "867": 227, "868": 227, "870": 227, "871": 227, "872": 227, "873": 227, "874": [227, 472], "875": 227, "876": 227, "877": [227, 314], "878": 227, "879": [227, 436], "880": 227, "881": [227, 314], "882": 227, "883": [227, 314], "884": 227, "885": 227, "886": 227, "887": [227, 314], "889": 227, "890": 227, "891": [227, 314], "892": 227, "893": 227, "894": 227, "895": 227, "896": 227, "898": [227, 314], "899": 227, "901": 227, "902": [227, 890], "903": 227, "904": 227, "905": 227, "906": 227, "907": 227, "908": 227, "909": [227, 314], "911": 227, "912": 227, "913": 227, "914": 227, "915": 227, "916": 227, "917": [227, 276], "918": [227, 314], "919": 227, "920": 227, "921": [227, 314], "922": [227, 314], "923": 227, "924": 227, "925": 227, "926": [227, 314], "927": 227, "928": 227, "929": [227, 314], "930": 227, "931": 227, "932": 227, "933": [227, 314], "934": 227, "935": [227, 314], "936": 227, "937": 227, "938": 227, "939": [227, 314], "940": [227, 314], "941": [227, 314], "942": 227, "943": 227, "944": 227, "945": 227, "946": [227, 314], "947": 227, "948": 227, "949": [227, 314], "950": 227, "951": [227, 308], "952": 227, "953": 227, "954": 227, "955": 227, "956": 227, "957": 227, "958": 227, "959": 227, "960": 227, "961": 227, "962": 227, "963": 227, "964": [227, 314], "965": [227, 1127, 1128], "966": [227, 1127, 1128], "967": [227, 314, 1127, 1128], "968": [227, 1127, 1128], "969": [227, 1127, 1128], "970": 227, "971": [227, 314], "972": 227, "973": 227, "975": 227, "976": [227, 265, 272, 282, 286, 308, 314], "977": [227, 265, 272, 282, 286, 308, 314, 899], "timeaxi": 227, "myrang": 227, "1002": [227, 622, 623, 624, 625, 853], "1004": 227, "1006": 227, "1008": 227, "1010": 227, "1012": 227, "1014": 227, "1016": 227, "1018": 227, "1020": [227, 835, 836, 843], "1022": 227, "1028": 227, "1030": 227, "1032": 227, "1034": 227, "1036": 227, "1038": 227, "1040": 227, "1042": [227, 970], "1046": 227, "1048": 227, "1050": 227, "1052": 227, "1054": 227, "1056": 227, "1058": 227, "1060": 227, "1062": 227, "1064": 227, "1066": 227, "1068": [227, 276], "1070": [227, 276], "1072": [227, 276], "1074": 227, "1076": 227, "1078": 227, "1080": 227, "1082": 227, "1084": 227, "1086": 227, "1088": 227, "1090": 227, "1092": 227, "1094": 227, "1096": 227, "1098": 227, "1102": 227, "1104": 227, "1106": 227, "1108": 227, "1110": 227, "1114": 227, "1116": 227, "1118": 227, "1120": 227, "1122": 227, "1124": 227, "1126": 227, "1128": 227, "1130": 227, "1132": 227, "1134": 227, "1136": 227, "1138": 227, "1140": 227, "1142": 227, "1144": 227, "1146": 227, "1148": 227, "1150": 227, "1152": [227, 1128], "1154": [227, 1128], "1156": 227, "1158": 227, "1160": 227, "1162": 227, "1164": 227, "1166": 227, "1168": 227, "1170": 227, "1172": 227, "1174": 227, "1176": 227, "1178": 227, "1180": 227, "1182": 227, "1184": 227, "1186": 227, "1188": 227, "1190": 227, "1192": 227, "1194": 227, "1196": 227, "1198": 227, "1202": [227, 1128], "1204": [227, 1128], "1206": 227, "1208": 227, "1210": 227, "1212": 227, "1214": 227, "1216": 227, "1218": 227, "1220": 227, "1222": 227, "1224": 227, "1226": 227, "1228": 227, "1230": 227, "1232": 227, "1236": 227, "1238": 227, "1240": 227, "1242": 227, "1246": 227, "1248": 227, "1250": 227, "1252": 227, "1254": [227, 491, 492, 493, 505, 506, 507], "1256": 227, "1258": 227, "1260": [227, 456], "1262": 227, "1264": 227, "1266": 227, "1268": 227, "1270": 227, "1272": 227, "1274": 227, "1276": 227, "1278": 227, "1280": 227, "1282": 227, "1284": 227, "1286": 227, "1288": 227, "1290": 227, "1292": 227, "1294": 227, "1296": 227, "1298": 227, "1300": 227, "1302": 227, "1304": 227, "1306": 227, "1308": 227, "1310": 227, "1312": 227, "1314": 227, "1316": 227, "1318": 227, "1320": 227, "1322": 227, "1324": 227, "1326": 227, "1328": 227, "1330": 227, "1332": 227, "1334": 227, "1336": 227, "1338": 227, "1340": 227, "1342": 227, "1344": 227, "1346": 227, "1348": 227, "1350": 227, "1352": [227, 940], "1354": 227, "1356": 227, "1358": 227, "1360": 227, "1362": 227, "1364": 227, "1366": 227, "1368": 227, "1370": 227, "1372": 227, "1374": 227, "1378": 227, "1380": 227, "1382": 227, "1384": 227, "1386": 227, "1388": 227, "1390": 227, "1392": [227, 472], "1394": 227, "1396": 227, "1398": 227, "1400": 227, "1402": 227, "1406": 227, "1408": 227, "1410": 227, "1412": 227, "1414": 227, "1416": [227, 1051], "1418": 227, "1420": 227, "1422": 227, "1424": 227, "1426": 227, "1428": 227, "1430": 227, "1432": 227, "1434": 227, "1436": 227, "1438": 227, "1440": 227, "1442": 227, "1444": 227, "1446": 227, "1448": 227, "1450": [227, 1127], "1452": [227, 1127], "1454": [227, 1127], "1456": 227, "1458": 227, "1460": 227, "1462": 227, "1464": 227, "1466": 227, "1468": 227, "1470": 227, "1472": 227, "1474": 227, "1476": 227, "1478": 227, "1480": 227, "1482": 227, "1484": 227, "1486": 227, "1488": 227, "1490": 227, "1492": 227, "1494": 227, "1496": 227, "1498": 227, "1502": 227, "1504": 227, "1506": 227, "1508": 227, "1510": 227, "1512": 227, "1514": 227, "1516": 227, "1518": [227, 1127], "1520": [227, 1127], "1522": [227, 1127], "1524": 227, "1526": 227, "1528": 227, "1530": 227, "1532": 227, "1534": 227, "1536": [227, 982], "1538": 227, "1540": 227, "1542": 227, "1544": 227, "1546": 227, "1548": 227, "1550": 227, "1552": 227, "1554": 227, "1556": 227, "1558": [227, 851], "1560": 227, "1562": 227, "1564": 227, "1566": 227, "1568": 227, "1570": 227, "1572": 227, "1574": 227, "1576": 227, "1578": 227, "1580": 227, "1582": 227, "1584": 227, "1586": 227, "1588": 227, "1590": 227, "1592": 227, "1594": 227, "1596": 227, "1598": 227, "1600": 227, "1602": 227, "1604": [227, 976], "1606": 227, "1608": 227, "1610": 227, "1612": 227, "1614": 227, "1616": 227, "1618": 227, "1620": 227, "1622": 227, "1624": 227, "1626": 227, "1628": 227, "1630": 227, "1632": 227, "1634": [227, 491, 492], "1636": 227, "1638": 227, "1640": 227, "1642": 227, "1644": 227, "1646": 227, "1648": 227, "1650": 227, "1652": 227, "1654": 227, "1656": 227, "1658": 227, "1660": 227, "1662": 227, "1664": 227, "1666": 227, "1668": 227, "1672": 227, "1674": 227, "1676": 227, "1678": 227, "1680": 227, "1682": 227, "1684": 227, "1686": 227, "1688": [227, 983, 984], "1690": 227, "1692": 227, "1694": 227, "1696": 227, "1698": 227, "1700": 227, "1702": 227, "1704": 227, "1706": [227, 994], "1708": 227, "1710": 227, "1712": 227, "1714": 227, "1716": 227, "1718": 227, "1722": 227, "1724": 227, "1726": 227, "1728": 227, "1730": 227, "1732": 227, "1734": 227, "1736": 227, "1738": 227, "1740": 227, "1742": 227, "1744": 227, "1746": 227, "1748": 227, "1750": 227, "1752": 227, "1754": 227, "1756": 227, "1758": 227, "1760": 227, "1762": 227, "1764": [227, 286], "1766": 227, "1768": 227, "1770": 227, "1772": 227, "1774": 227, "1776": 227, "1778": 227, "1780": 227, "1782": 227, "1784": 227, "1786": 227, "1788": 227, "1790": 227, "1792": 227, "1794": 227, "1796": 227, "1798": 227, "1800": [227, 982], "1802": 227, "1804": 227, "1806": 227, "1808": 227, "1810": 227, "1812": 227, "1814": 227, "1816": 227, "1818": 227, "1820": 227, "1822": 227, "1824": 227, "1826": 227, "1828": 227, "1830": 227, "1832": 227, "1834": 227, "1836": 227, "1838": 227, "1840": 227, "1842": 227, "1844": 227, "1846": 227, "1848": 227, "1850": 227, "1852": 227, "1854": 227, "1856": 227, "1858": 227, "1860": 227, "1862": 227, "1864": 227, "1866": 227, "1868": 227, "1870": 227, "1872": 227, "1874": 227, "1876": 227, "1878": 227, "1880": 227, "1882": 227, "1884": 227, "1886": 227, "1888": 227, "1890": 227, "1892": 227, "1894": 227, "1896": 227, "1898": 227, "1900": [227, 237, 1095, 1097, 1101, 1103], "1902": 227, "1904": 227, "1906": 227, "1908": 227, "1910": 227, "1912": 227, "1914": 227, "1916": 227, "1918": 227, "1920": 227, "1922": 227, "1924": 227, "1926": 227, "1928": 227, "1930": 227, "1932": 227, "1934": 227, "1938": 227, "1940": 227, "1942": 227, "1944": 227, "1946": 227, "1948": 227, "1950": 227, "1952": 227, "1954": [227, 1061], "1956": [227, 1031], "1958": 227, "1962": 227, "1964": 227, "1968": [227, 401], "1970": [227, 740], "1972": 227, "1974": 227, "1976": 227, "1978": [227, 361], "1980": [227, 566, 982], "1984": 227, "1986": [227, 1095, 1097, 1101, 1103], "1988": [227, 361, 475], "1990": [227, 566], "1992": 227, "1994": 227, "2004": 227, "2024": [227, 357], "2026": 227, "2028": 227, "2030": 227, "2032": 227, "2034": 227, "2036": 227, "2038": 227, "2040": 227, "2042": 227, "2044": 227, "2046": 227, "2050": 227, "2052": 227, "2054": 227, "2056": 227, "2058": 227, "2060": 227, "2062": 227, "2064": 227, "2066": 227, "2068": 227, "2070": 227, "2072": 227, "2074": 227, "2076": 227, "2078": 227, "2080": 227, "2082": 227, "2084": 227, "2086": 227, "2088": 227, "2090": 227, "2092": 227, "2094": 227, "2096": 227, "2098": 227, "2100": 227, "2102": 227, "2104": 227, "2106": 227, "2108": 227, "2110": 227, "2112": 227, "2114": 227, "2116": 227, "2118": 227, "2120": 227, "2122": 227, "2124": 227, "2126": 227, "2128": 227, "2130": 227, "2132": 227, "2134": 227, "2136": 227, "2138": 227, "2140": 227, "2142": 227, "2144": 227, "2146": 227, "2148": 227, "2150": 227, "2152": 227, "2154": 227, "2156": 227, "2158": 227, "2160": 227, "2162": 227, "2164": 227, "2166": 227, "2168": 227, "2170": 227, "2172": 227, "2174": 227, "2176": 227, "2178": 227, "2180": 227, "2182": 227, "2184": 227, "2186": 227, "2188": 227, "2190": 227, "2192": 227, "2194": 227, "2196": [227, 759], "2198": 227, "2200": 227, "2202": 227, "2204": 227, "2206": 227, "2208": 227, "2210": 227, "2214": 227, "2216": 227, "2218": 227, "2220": 227, "2222": 227, "2224": 227, "2226": 227, "2228": 227, "2230": 227, "2232": 227, "2234": 227, "2236": 227, "2238": 227, "2240": 227, "2242": 227, "2244": 227, "2246": 227, "2248": 227, "2250": 227, "2252": 227, "2254": 227, "2256": 227, "2258": 227, "2260": 227, "2262": 227, "2264": 227, "2266": 227, "2268": 227, "2272": 227, "2274": 227, "2276": 227, "2278": 227, "2280": 227, "2282": 227, "2284": 227, "2286": 227, "2288": 227, "2290": 227, "2292": 227, "2294": 227, "2296": 227, "2298": 227, "2300": 227, "2302": 227, "2304": 227, "2306": 227, "2308": 227, "2310": 227, "2312": 227, "2314": 227, "2316": 227, "2318": 227, "2320": 227, "2322": 227, "2324": 227, "2326": 227, "2328": 227, "2330": 227, "2332": [227, 890], "2334": 227, "2336": 227, "2338": 227, "2340": 227, "2342": 227, "2344": 227, "2346": 227, "2348": 227, "2350": 227, "2352": 227, "2354": 227, "2356": 227, "2358": 227, "2360": 227, "2362": 227, "2364": 227, "2366": 227, "2368": 227, "2370": 227, "2372": 227, "2374": 227, "2376": 227, "2378": 227, "2380": 227, "2382": 227, "2384": 227, "2386": 227, "2388": 227, "2390": 227, "2392": 227, "2394": 227, "2396": 227, "2398": 227, "2400": 227, "2402": 227, "2404": 227, "2406": 227, "2408": 227, "2410": 227, "2412": 227, "2414": 227, "2416": 227, "2418": 227, "2420": 227, "2422": 227, "2424": 227, "2426": 227, "2428": 227, "2430": 227, "2432": 227, "2434": 227, "2436": 227, "2438": 227, "2440": [227, 308, 314], "2442": 227, "2444": 227, "2446": 227, "2448": 227, "2450": 227, "2452": 227, "2454": 227, "2456": 227, "2458": 227, "2460": [227, 715], "2462": 227, "2464": 227, "2466": 227, "2468": 227, "2470": 227, "2472": 227, "2474": 227, "2476": 227, "2478": 227, "2480": 227, "2482": 227, "2484": 227, "2486": 227, "2488": 227, "2490": 227, "2492": 227, "2494": 227, "2496": 227, "2498": 227, "2500": 227, "2502": 227, "2504": 227, "2506": 227, "2508": 227, "2510": 227, "2512": 227, "2514": 227, "2516": 227, "2518": 227, "2520": 227, "2522": 227, "2524": 227, "2526": 227, "2528": 227, "2530": 227, "2532": 227, "2534": 227, "2536": 227, "2538": 227, "2540": 227, "2542": 227, "2544": 227, "2546": 227, "2548": 227, "2550": 227, "2552": 227, "2554": 227, "2556": 227, "2558": 227, "2560": 227, "2562": 227, "2564": 227, "2566": 227, "2568": 227, "2570": 227, "2572": 227, "2574": 227, "2576": 227, "2578": 227, "2580": 227, "2582": 227, "2584": 227, "2586": 227, "2588": 227, "2590": 227, "2592": 227, "2594": 227, "2596": 227, "2598": 227, "2600": 227, "2602": 227, "2604": 227, "2606": 227, "2608": 227, "2610": 227, "2612": 227, "2614": 227, "2616": 227, "2618": 227, "2620": 227, "2622": 227, "2624": 227, "2626": 227, "2628": 227, "2630": 227, "2632": 227, "2634": 227, "2636": 227, "2638": 227, "2640": [227, 286], "2642": 227, "2644": 227, "2646": 227, "2648": 227, "2650": 227, "2652": 227, "2654": 227, "2656": 227, "2658": 227, "2660": 227, "2662": 227, "2664": 227, "2666": 227, "2668": 227, "2670": 227, "2672": 227, "2674": 227, "2676": 227, "2678": 227, "2680": 227, "2682": 227, "2684": 227, "2686": 227, "2688": 227, "2690": 227, "2692": 227, "2694": 227, "2696": 227, "2698": 227, "2700": 227, "2702": 227, "2704": 227, "2706": 227, "2708": 227, "2710": 227, "2712": 227, "2714": 227, "2716": 227, "2718": 227, "2720": 227, "2722": 227, "2724": 227, "2726": 227, "2728": 227, "2730": [227, 282], "2732": 227, "2734": 227, "2736": 227, "2738": 227, "2740": 227, "2742": 227, "2744": 227, "2746": [227, 890, 916, 940], "2748": [227, 247, 265, 272, 304, 308, 314, 320], "2750": 227, "2752": 227, "2754": 227, "2756": 227, "2758": 227, "2760": 227, "2762": 227, "2764": 227, "2766": 227, "2768": 227, "2770": 227, "2772": 227, "2774": 227, "2776": 227, "2778": 227, "2780": 227, "2782": 227, "2784": 227, "2786": 227, "2788": 227, "2790": 227, "2792": 227, "2794": 227, "2796": 227, "2798": 227, "2800": [227, 270, 449], "2802": [227, 449], "2804": 227, "2806": 227, "2808": 227, "2810": 227, "2812": 227, "2814": 227, "2816": 227, "2818": 227, "2820": 227, "2822": 227, "2824": 227, "2826": 227, "2828": [227, 443], "2830": 227, "2832": 227, "2834": 227, "2836": 227, "2838": 227, "2840": 227, "2842": 227, "2844": 227, "2846": 227, "2848": 227, "2850": 227, "2852": 227, "2854": 227, "2856": 227, "2858": 227, "2860": 227, "2862": 227, "2864": 227, "2866": 227, "2868": 227, "2870": 227, "2872": 227, "2874": 227, "2876": 227, "2878": 227, "2880": 227, "2882": 227, "2884": 227, "2886": 227, "2888": 227, "2890": 227, "2892": 227, "2894": 227, "2896": 227, "2898": 227, "2900": 227, "2902": 227, "2904": 227, "2906": 227, "2910": 227, "2912": 227, "2914": 227, "2916": 227, "2918": 227, "2920": 227, "2922": 227, "2924": 227, "2926": 227, "2928": 227, "2930": 227, "2932": 227, "2934": 227, "2936": 227, "2938": 227, "2940": 227, "2942": 227, "2944": 227, "2946": 227, "2948": 227, "2950": 227, "2952": 227, "2954": 227, "2956": 227, "2958": 227, "2960": 227, "2962": 227, "2964": 227, "2966": 227, "2968": 227, "2970": 227, "2972": 227, "2974": 227, "2976": 227, "2978": 227, "2980": 227, "2982": 227, "2984": 227, "2986": 227, "2988": 227, "2990": 227, "2992": 227, "2994": 227, "2996": 227, "2998": 227, "3002": 227, "3004": 227, "3006": 227, "3008": 227, "3010": 227, "3012": 227, "3014": 227, "3016": 227, "3018": 227, "3020": 227, "3022": 227, "3024": 227, "3026": 227, "3028": 227, "3030": 227, "3032": 227, "3034": 227, "3036": 227, "3038": 227, "3040": 227, "3042": 227, "3044": 227, "3046": 227, "3048": 227, "3050": 227, "3052": 227, "3054": 227, "3056": 227, "3058": 227, "3060": 227, "3062": 227, "3064": 227, "3066": 227, "3068": 227, "3070": 227, "3072": 227, "3074": 227, "3076": 227, "3078": 227, "3080": 227, "3082": 227, "3084": 227, "3086": 227, "3088": 227, "3090": 227, "3092": 227, "3094": 227, "3096": 227, "3098": 227, "3100": 227, "3102": 227, "3104": 227, "3106": 227, "3108": 227, "3110": [227, 276], "3112": 227, "3114": 227, "3116": 227, "3118": 227, "3120": 227, "3122": 227, "3124": 227, "3126": 227, "3128": 227, "3130": 227, "3132": 227, "3134": 227, "3136": 227, "3138": 227, "3140": 227, "3142": 227, "3144": 227, "3146": 227, "3148": 227, "3150": 227, "3152": 227, "3154": 227, "3156": 227, "3158": 227, "3160": 227, "3162": 227, "3164": 227, "3166": 227, "3168": 227, "3170": 227, "3172": 227, "3174": 227, "3176": 227, "3178": 227, "3180": 227, "3182": 227, "3184": 227, "3186": 227, "3188": 227, "3190": 227, "3192": 227, "3194": 227, "3196": 227, "3198": 227, "3200": 227, "3202": 227, "3204": 227, "3206": 227, "3208": 227, "3210": 227, "3212": 227, "3214": 227, "3216": 227, "3218": 227, "3220": 227, "3222": 227, "3224": 227, "3226": 227, "3228": 227, "3230": 227, "3232": 227, "3234": 227, "3236": 227, "3238": 227, "3240": 227, "3242": 227, "3244": 227, "3246": 227, "3248": 227, "3250": 227, "3252": 227, "3254": 227, "3256": 227, "3258": 227, "3260": 227, "3262": 227, "3264": 227, "3266": 227, "3268": 227, "3270": 227, "3272": 227, "3274": 227, "3276": 227, "3278": 227, "3280": 227, "3282": 227, "3284": 227, "3286": 227, "3288": 227, "3290": 227, "3292": 227, "3294": 227, "3296": 227, "3298": 227, "3300": 227, "3302": 227, "3304": 227, "3306": 227, "3308": 227, "3310": 227, "3312": 227, "3314": 227, "3316": 227, "3318": 227, "3320": 227, "3322": 227, "3324": 227, "3326": 227, "3328": 227, "3330": 227, "3332": 227, "3334": 227, "3336": 227, "3338": 227, "3340": 227, "3342": 227, "3344": 227, "3346": 227, "3348": 227, "3350": 227, "3352": 227, "3354": 227, "3356": 227, "3358": 227, "3360": 227, "3362": 227, "3364": 227, "3366": 227, "3368": 227, "3370": 227, "3372": 227, "3374": 227, "3376": 227, "3378": 227, "3380": 227, "3382": 227, "3384": 227, "3386": 227, "3388": 227, "3390": 227, "3392": 227, "3394": 227, "3396": 227, "3398": 227, "3400": 227, "3402": 227, "3404": 227, "3406": 227, "3408": 227, "3410": [227, 1006], "3412": 227, "3414": 227, "3416": 227, "3418": 227, "3420": 227, "3422": 227, "3424": 227, "3426": 227, "3428": 227, "3430": 227, "3432": 227, "3434": 227, "3436": 227, "3438": 227, "3440": 227, "3442": 227, "3444": 227, "3446": 227, "3448": 227, "3450": 227, "3452": 227, "3454": 227, "3456": 227, "3458": 227, "3460": 227, "3462": 227, "3464": 227, "3466": 227, "3468": 227, "3470": 227, "3472": 227, "3474": 227, "3476": 227, "3478": 227, "3480": 227, "3482": 227, "3484": 227, "3486": 227, "3488": 227, "3490": 227, "3492": 227, "3494": 227, "3496": 227, "3498": 227, "3500": 227, "3502": 227, "3504": 227, "3506": 227, "3508": 227, "3510": 227, "3512": 227, "3514": 227, "3516": 227, "3518": 227, "3520": 227, "3522": 227, "3524": 227, "3526": 227, "3528": 227, "3530": 227, "3532": 227, "3534": 227, "3536": 227, "3538": 227, "3540": 227, "3542": 227, "3544": 227, "3546": 227, "3548": 227, "3550": 227, "3552": 227, "3554": 227, "3556": 227, "3558": 227, "3560": 227, "3562": 227, "3564": 227, "3566": 227, "3568": 227, "3570": 227, "3572": 227, "3574": 227, "3576": 227, "3578": 227, "3580": 227, "3582": 227, "3584": 227, "3586": 227, "3588": 227, "3590": 227, "3592": 227, "3594": 227, "3596": 227, "3598": 227, "3602": 227, "3604": 227, "3606": 227, "3608": 227, "3610": 227, "3612": 227, "3614": 227, "3616": 227, "3618": 227, "3620": [227, 1128], "3622": [227, 1128], "3624": [227, 1128], "3626": 227, "3628": 227, "3630": 227, "3632": 227, "3634": 227, "3636": 227, "3638": 227, "3640": 227, "3642": 227, "3644": 227, "3646": 227, "3648": 227, "3650": 227, "3652": 227, "3654": 227, "3656": 227, "3658": 227, "3660": 227, "3662": 227, "3664": 227, "3666": 227, "3668": 227, "3670": 227, "3672": 227, "3674": 227, "3676": 227, "3678": 227, "3680": 227, "3682": 227, "3684": 227, "3686": 227, "3688": 227, "3690": 227, "3692": 227, "3694": 227, "3696": 227, "3698": 227, "3700": 227, "3702": 227, "3704": 227, "3706": 227, "3708": 227, "3710": 227, "3712": 227, "3714": 227, "3716": 227, "3718": 227, "3720": 227, "3722": [227, 937], "3724": 227, "3726": 227, "3728": 227, "3730": 227, "3732": 227, "3734": 227, "3736": 227, "3738": 227, "3740": 227, "3742": 227, "3744": 227, "3746": 227, "3748": 227, "3750": 227, "3752": 227, "3754": 227, "3756": 227, "3758": 227, "3760": 227, "3762": 227, "3764": 227, "3766": 227, "3768": 227, "3770": [227, 276], "3772": 227, "3774": 227, "3776": 227, "3778": 227, "3780": 227, "3782": 227, "3784": 227, "3786": 227, "3788": 227, "3790": 227, "3792": 227, "3794": 227, "3796": 227, "3798": 227, "3800": 227, "3802": 227, "3804": 227, "3806": 227, "3808": 227, "3810": 227, "3812": 227, "3814": 227, "3816": 227, "3818": 227, "3820": 227, "3822": 227, "3824": 227, "3826": 227, "3828": 227, "3830": 227, "3832": 227, "3834": 227, "3836": 227, "3838": 227, "3840": 227, "3842": 227, "3844": 227, "3846": 227, "3848": 227, "3850": 227, "3852": 227, "3854": 227, "3856": 227, "3858": 227, "3860": 227, "3862": 227, "3864": 227, "3866": 227, "3868": 227, "3870": 227, "3872": 227, "3874": [227, 1128], "3876": [227, 1128], "3878": [227, 1128], "3880": 227, "3882": 227, "3884": 227, "3886": 227, "3888": 227, "3890": 227, "3892": 227, "3894": 227, "3896": 227, "3898": 227, "3900": 227, "3902": 227, "3904": 227, "3906": 227, "3908": 227, "3910": 227, "3912": 227, "3914": 227, "3916": 227, "3918": 227, "3920": 227, "3922": 227, "3924": 227, "3926": 227, "3928": 227, "3930": 227, "3932": 227, "3934": 227, "3936": 227, "3938": 227, "3940": 227, "3942": 227, "3946": 227, "3948": 227, "3950": 227, "3952": 227, "3954": 227, "3956": 227, "3958": 227, "3960": 227, "3962": 227, "3964": 227, "3966": 227, "3968": 227, "3970": 227, "3972": 227, "3974": 227, "3976": 227, "3978": 227, "3980": 227, "3982": 227, "3984": 227, "3986": 227, "3988": 227, "3990": 227, "3992": 227, "3994": 227, "3996": 227, "3998": 227, "4002": 227, "4004": 227, "4006": 227, "4008": 227, "4010": 227, "4012": 227, "4014": 227, "4016": 227, "4018": 227, "4020": 227, "4022": 227, "4024": 227, "4026": 227, "4028": 227, "4030": 227, "4032": 227, "4034": 227, "4036": 227, "4038": 227, "4040": 227, "4042": 227, "4044": 227, "4046": 227, "4048": 227, "4050": 227, "4052": 227, "4054": 227, "4056": 227, "4058": 227, "4060": 227, "4062": 227, "4064": 227, "4066": 227, "4068": 227, "4070": 227, "4072": 227, "4074": 227, "4076": 227, "4078": 227, "4080": 227, "4082": 227, "4084": 227, "4086": 227, "4088": 227, "4090": 227, "4092": 227, "4094": 227, "4098": 227, "4100": 227, "4102": 227, "4104": 227, "4106": 227, "4108": 227, "4110": 227, "4112": 227, "4114": 227, "4116": 227, "4118": 227, "4120": 227, "4122": 227, "4124": 227, "4126": 227, "4128": 227, "4130": 227, "4132": 227, "4134": 227, "4136": 227, "4138": 227, "4140": 227, "4142": 227, "4144": 227, "4146": 227, "4148": 227, "4150": 227, "4152": 227, "4154": 227, "4156": 227, "4158": 227, "4160": 227, "4162": 227, "4164": 227, "4166": 227, "4168": 227, "4170": 227, "4172": 227, "4174": 227, "4176": 227, "4178": 227, "4180": 227, "4182": 227, "4184": 227, "4186": 227, "4188": 227, "4190": 227, "4192": 227, "4194": 227, "4196": 227, "4198": 227, "4200": 227, "4202": 227, "4204": 227, "4206": 227, "4208": 227, "4210": 227, "4212": 227, "4214": 227, "4216": 227, "4218": 227, "4220": 227, "4222": 227, "4224": 227, "4226": 227, "4228": 227, "4230": 227, "4232": 227, "4234": 227, "4236": 227, "4238": 227, "4240": 227, "4242": 227, "4244": 227, "4246": 227, "4248": 227, "4250": 227, "4252": 227, "4254": 227, "4256": 227, "4258": 227, "4260": 227, "4262": 227, "4264": 227, "4266": 227, "4268": 227, "4270": 227, "4272": 227, "4274": 227, "4276": 227, "4278": 227, "4280": 227, "4282": 227, "4284": 227, "4286": 227, "4288": 227, "4290": 227, "4292": 227, "4294": 227, "4296": 227, "4298": 227, "4300": 227, "4302": 227, "4304": 227, "4306": 227, "4308": 227, "4310": 227, "4312": 227, "4314": 227, "4316": 227, "4318": 227, "4320": 227, "4322": 227, "4324": 227, "4326": 227, "4328": 227, "4330": 227, "4332": 227, "4334": 227, "4336": 227, "4338": 227, "4340": 227, "4342": 227, "4344": 227, "4346": 227, "4348": 227, "4350": 227, "4352": 227, "4354": 227, "4356": 227, "4358": 227, "4360": 227, "4362": 227, "4364": 227, "4366": 227, "4368": 227, "4370": 227, "4372": 227, "4374": 227, "4376": 227, "4378": 227, "4380": 227, "4382": 227, "4384": 227, "4386": 227, "4388": 227, "4390": 227, "4392": 227, "4394": 227, "4396": 227, "4398": 227, "4400": 227, "4402": 227, "4404": 227, "4406": 227, "4408": 227, "4410": 227, "4412": 227, "4414": 227, "4416": 227, "4418": 227, "4420": 227, "4422": 227, "4424": 227, "4426": 227, "4428": 227, "4430": 227, "4432": 227, "4434": 227, "4436": 227, "4438": 227, "4440": 227, "4442": 227, "4444": 227, "4446": 227, "4448": 227, "4450": 227, "4452": 227, "4454": 227, "4456": 227, "4458": 227, "4460": 227, "4462": 227, "4464": 227, "4466": 227, "4468": 227, "4470": 227, "4472": 227, "4474": 227, "4476": 227, "4478": 227, "4480": 227, "4482": 227, "4484": 227, "4486": 227, "4488": 227, "4490": 227, "4492": 227, "4494": 227, "4496": 227, "4498": 227, "4502": 227, "4504": 227, "4506": 227, "4508": 227, "4510": 227, "4512": 227, "4514": 227, "4516": 227, "4518": 227, "4520": 227, "4522": 227, "4524": 227, "4526": 227, "4528": 227, "4530": 227, "4532": 227, "4534": 227, "4536": 227, "4538": 227, "4540": 227, "4542": 227, "4544": 227, "4546": 227, "4548": 227, "4550": 227, "4552": 227, "4554": 227, "4556": 227, "4558": 227, "4560": 227, "4562": 227, "4564": 227, "4566": 227, "4568": 227, "4570": 227, "4572": 227, "4574": 227, "4578": 227, "4580": 227, "4582": 227, "4584": 227, "4586": 227, "4588": 227, "4590": 227, "4592": 227, "4594": 227, "4596": 227, "4598": 227, "4600": 227, "4602": 227, "4604": 227, "4606": 227, "4608": 227, "4610": 227, "4612": 227, "4614": 227, "4616": 227, "4618": 227, "4620": 227, "4622": 227, "4624": 227, "4626": 227, "4628": [227, 240], "4630": [227, 443], "4632": 227, "4634": 227, "4636": 227, "4638": 227, "4640": 227, "4642": 227, "4644": 227, "4646": 227, "4648": 227, "4650": 227, "4652": 227, "4654": 227, "4656": 227, "4658": 227, "4662": 227, "4664": 227, "4666": 227, "4668": 227, "4670": 227, "4672": 227, "4674": 227, "4676": 227, "4680": 227, "4682": 227, "4684": 227, "4686": 227, "4688": 227, "4690": 227, "4692": 227, "4694": 227, "4696": 227, "4698": 227, "4700": 227, "4702": 227, "4704": 227, "4706": 227, "4708": 227, "4710": 227, "4712": 227, "4714": 227, "4716": 227, "4718": 227, "4720": 227, "4722": 227, "4724": 227, "4726": 227, "4728": 227, "4730": 227, "4732": 227, "4734": 227, "4736": 227, "4738": 227, "4740": 227, "4742": 227, "4744": 227, "4746": 227, "4748": 227, "4750": 227, "4752": 227, "4754": 227, "4756": 227, "4758": 227, "4760": 227, "4762": 227, "4764": 227, "4766": 227, "4768": 227, "4770": 227, "4772": 227, "4774": 227, "4776": 227, "4778": 227, "4780": 227, "4782": 227, "4784": 227, "4786": 227, "4788": 227, "4790": 227, "4792": 227, "4794": 227, "4796": 227, "4798": 227, "4802": 227, "4804": 227, "4806": 227, "4808": 227, "4810": 227, "4812": 227, "4814": 227, "4816": 227, "4818": 227, "4820": 227, "4822": 227, "4824": 227, "4826": 227, "4828": 227, "4830": 227, "4832": 227, "4834": 227, "4836": 227, "4838": 227, "4840": 227, "4842": 227, "4844": 227, "4846": 227, "4848": 227, "4850": 227, "4852": 227, "4854": 227, "4856": 227, "4858": 227, "4860": 227, "4862": 227, "4864": 227, "4866": [227, 237], "4868": 227, "4870": 227, "4872": 227, "4874": 227, "4876": 227, "4878": 227, "4880": 227, "4882": [227, 853], "4884": 227, "4886": 227, "4888": 227, "4890": 227, "4892": 227, "4894": 227, "4896": 227, "4898": 227, "4900": 227, "4902": 227, "4904": 227, "4906": 227, "4908": 227, "4910": 227, "4912": 227, "4914": 227, "4916": 227, "4918": 227, "4920": 227, "4922": 227, "4924": 227, "4926": [227, 240], "4928": 227, "4930": 227, "4932": 227, "4934": 227, "4936": 227, "4938": 227, "4940": 227, "4942": 227, "4944": 227, "4946": 227, "4948": 227, "4950": [227, 244], "4952": 227, "4954": 227, "4956": 227, "4958": 227, "4960": 227, "4962": 227, "4964": 227, "4966": 227, "4968": 227, "4970": 227, "4972": 227, "4974": 227, "4976": 227, "4978": 227, "4980": 227, "4982": 227, "4984": 227, "4986": 227, "4988": 227, "4990": 227, "4992": 227, "4994": 227, "4996": 227, "4998": 227, "5002": 227, "5004": 227, "5006": 227, "5008": 227, "5010": 227, "5012": 227, "5014": 227, "5016": 227, "5018": 227, "5020": 227, "5022": 227, "5024": 227, "5026": 227, "5028": 227, "5030": 227, "5032": 227, "5034": 227, "5036": 227, "5038": 227, "5040": 227, "5042": 227, "5044": 227, "5046": 227, "5048": 227, "5052": 227, "5054": 227, "5056": 227, "5058": 227, "5060": 227, "5062": 227, "5064": 227, "5066": 227, "5068": 227, "5070": 227, "5072": 227, "5074": 227, "5076": 227, "5078": 227, "5080": [227, 890], "5082": 227, "5084": 227, "5086": 227, "5088": 227, "5090": 227, "5092": 227, "5094": 227, "5096": 227, "5098": 227, "5100": 227, "5102": 227, "5104": 227, "5106": 227, "5108": 227, "5110": 227, "5112": 227, "5114": 227, "5116": 227, "5118": 227, "5120": 227, "5122": 227, "5124": 227, "5126": 227, "5128": 227, "5130": 227, "5132": 227, "5134": 227, "5136": 227, "5138": 227, "5140": 227, "5142": 227, "5144": 227, "5146": 227, "5148": 227, "5150": 227, "5152": 227, "5154": 227, "5156": 227, "5158": 227, "5160": 227, "5162": 227, "5164": 227, "5166": 227, "5168": 227, "5170": 227, "5172": 227, "5174": 227, "5176": 227, "5178": 227, "5180": 227, "5182": 227, "5184": 227, "5186": 227, "5188": 227, "5190": 227, "5192": 227, "5194": 227, "5196": 227, "5198": 227, "5200": 227, "5202": 227, "5204": 227, "5206": 227, "5208": 227, "5210": 227, "5212": 227, "5214": 227, "5216": 227, "5218": 227, "5220": 227, "5222": 227, "5224": 227, "5226": 227, "5228": 227, "5230": 227, "5232": 227, "5234": 227, "5236": 227, "5238": 227, "5240": 227, "5242": 227, "5244": 227, "5246": 227, "5248": 227, "5250": 227, "5252": 227, "5254": 227, "5256": 227, "5258": 227, "5260": 227, "5262": 227, "5264": 227, "5266": 227, "5268": 227, "5270": 227, "5272": 227, "5274": 227, "5276": 227, "5278": 227, "5280": 227, "5282": 227, "5284": 227, "5286": 227, "5288": 227, "5290": 227, "5292": 227, "5294": 227, "5296": 227, "5298": 227, "5300": 227, "5302": 227, "5304": 227, "5306": 227, "5308": 227, "5310": 227, "5312": 227, "5314": 227, "5316": 227, "5318": 227, "5320": 227, "5322": 227, "5324": 227, "5326": 227, "5328": 227, "5330": 227, "5332": 227, "5334": 227, "5336": 227, "5338": 227, "5340": 227, "5342": 227, "5344": 227, "5346": 227, "5348": 227, "5350": 227, "5352": 227, "5354": 227, "5356": 227, "5358": 227, "5360": 227, "5362": [227, 270, 449], "5364": 227, "5366": 227, "5368": 227, "5370": 227, "5372": 227, "5374": 227, "5376": 227, "5378": 227, "5380": 227, "5382": 227, "5384": 227, "5386": 227, "5388": 227, "5390": 227, "5392": 227, "5394": 227, "5396": 227, "5398": 227, "5400": 227, "5402": 227, "5404": 227, "5406": 227, "5408": 227, "5410": [227, 443], "5412": 227, "5414": 227, "5416": 227, "5418": 227, "5420": 227, "5422": 227, "5424": 227, "5426": 227, "5428": 227, "5430": 227, "5432": 227, "5434": 227, "5436": 227, "5438": 227, "5440": 227, "5442": 227, "5444": 227, "5446": 227, "5448": 227, "5450": 227, "5452": 227, "5454": 227, "5456": 227, "5458": 227, "5460": 227, "5462": 227, "5464": 227, "5466": 227, "5468": 227, "5470": 227, "5472": 227, "5474": 227, "5476": 227, "5478": 227, "5480": 227, "5482": 227, "5484": 227, "5486": 227, "5488": 227, "5490": 227, "5492": 227, "5494": 227, "5496": 227, "5498": 227, "5500": 227, "5502": 227, "5504": 227, "5506": 227, "5508": 227, "5510": 227, "5512": 227, "5514": 227, "5516": 227, "5518": 227, "5520": 227, "5522": 227, "5524": 227, "5526": 227, "5528": 227, "5530": 227, "5532": 227, "5534": 227, "5536": 227, "5538": 227, "5540": 227, "5542": 227, "5544": 227, "5546": 227, "5548": 227, "5550": 227, "5552": 227, "5554": 227, "5556": 227, "5558": 227, "5560": 227, "5562": 227, "5564": 227, "5566": 227, "5568": 227, "5570": 227, "5572": 227, "5574": 227, "5576": 227, "5578": 227, "5580": 227, "5582": 227, "5584": 227, "5586": 227, "5588": 227, "5590": 227, "5592": 227, "5594": 227, "5596": 227, "5598": 227, "5600": 227, "5602": 227, "5604": 227, "5606": 227, "5608": 227, "5610": 227, "5612": 227, "5614": 227, "5616": 227, "5618": 227, "5620": 227, "5622": 227, "5624": 227, "5626": 227, "5628": 227, "5630": 227, "5632": 227, "5634": 227, "5636": 227, "5638": 227, "5640": 227, "5642": 227, "5644": 227, "5646": 227, "5648": 227, "5650": 227, "5652": 227, "5654": 227, "5656": 227, "5658": 227, "5660": 227, "5662": 227, "5664": 227, "5666": 227, "5668": 227, "5670": 227, "5672": 227, "5674": 227, "5676": 227, "5678": [227, 923], "5680": 227, "5682": 227, "5684": 227, "5686": 227, "5688": 227, "5690": 227, "5692": 227, "5694": 227, "5696": 227, "5698": 227, "5700": 227, "5702": 227, "5704": 227, "5706": 227, "5708": 227, "5710": 227, "5712": 227, "5714": 227, "5716": 227, "5718": 227, "5720": 227, "5722": 227, "5724": 227, "5726": 227, "5728": 227, "5730": 227, "5732": 227, "5734": 227, "5736": 227, "5738": 227, "5740": 227, "5742": 227, "5744": 227, "5746": 227, "5748": 227, "5750": 227, "5752": 227, "5754": 227, "5756": 227, "5758": 227, "5760": 227, "5762": 227, "5764": 227, "5766": 227, "5768": 227, "5770": 227, "5772": 227, "5774": 227, "5776": 227, "5778": 227, "5780": 227, "5782": 227, "5784": 227, "5786": 227, "5788": 227, "5790": 227, "5792": 227, "5794": 227, "5796": 227, "5798": 227, "5800": 227, "5802": 227, "5804": 227, "5806": 227, "5808": 227, "5810": 227, "5812": 227, "5814": 227, "5816": 227, "5818": 227, "5820": 227, "5822": 227, "5824": 227, "5826": 227, "5828": 227, "5830": 227, "5832": [227, 237], "5834": 227, "5836": 227, "5838": 227, "5840": 227, "5842": 227, "5844": 227, "5846": 227, "5848": 227, "5850": 227, "5852": 227, "5854": 227, "5856": 227, "5858": 227, "5860": 227, "5862": 227, "5864": 227, "5866": 227, "5868": 227, "5870": 227, "5872": 227, "5874": 227, "5876": 227, "5878": 227, "5880": 227, "5882": 227, "5884": 227, "5886": 227, "5888": 227, "5890": 227, "5892": 227, "5894": 227, "5896": 227, "5898": 227, "5900": 227, "5902": 227, "5904": 227, "5906": 227, "5908": 227, "5910": 227, "5912": 227, "5914": 227, "5916": 227, "5918": 227, "5920": 227, "5922": 227, "5924": 227, "5926": 227, "5928": 227, "5930": 227, "5932": 227, "5934": 227, "5936": 227, "5938": 227, "5940": 227, "5942": 227, "5944": 227, "5946": 227, "5948": 227, "5950": 227, "5952": 227, "5954": 227, "5956": 227, "5958": 227, "5960": 227, "5962": 227, "5964": 227, "5966": 227, "5968": 227, "5970": 227, "5972": 227, "5974": 227, "5976": 227, "5978": 227, "5980": 227, "5982": 227, "5984": 227, "5986": 227, "5988": 227, "5990": 227, "5992": 227, "5994": 227, "5996": 227, "5998": 227, "6000": [227, 1022], "6002": 227, "6004": 227, "6006": 227, "6008": 227, "6010": 227, "6012": 227, "6014": 227, "6016": 227, "6018": 227, "6020": 227, "6022": 227, "6024": 227, "6026": 227, "6028": 227, "6030": 227, "6032": 227, "6034": 227, "6036": 227, "6038": 227, "6040": 227, "6042": 227, "6044": 227, "6046": 227, "6048": 227, "6050": 227, "6052": 227, "6054": 227, "6056": 227, "6058": 227, "6060": 227, "6062": 227, "6064": 227, "6066": 227, "6068": 227, "6070": 227, "6072": 227, "6074": 227, "6076": 227, "6078": 227, "6080": 227, "6082": 227, "6084": 227, "6086": 227, "6088": 227, "6090": 227, "6092": 227, "6094": 227, "6096": 227, "6098": 227, "6100": 227, "6102": 227, "6104": 227, "6106": 227, "6108": 227, "6110": 227, "6112": 227, "6114": 227, "6116": 227, "6118": 227, "6120": 227, "6122": 227, "6124": 227, "6126": 227, "6128": 227, "6130": 227, "6132": 227, "6134": 227, "6136": 227, "6138": 227, "6140": 227, "6142": 227, "6144": 227, "6146": 227, "6148": 227, "6150": 227, "6152": 227, "6154": 227, "6156": 227, "6158": 227, "6160": 227, "6162": 227, "6164": 227, "6166": 227, "6168": 227, "6170": 227, "6172": 227, "6174": 227, "6176": 227, "6178": 227, "6180": 227, "6182": 227, "6184": 227, "6186": 227, "6188": 227, "6190": 227, "6192": 227, "6194": 227, "6196": 227, "6198": 227, "6200": 227, "6202": 227, "6204": 227, "6206": 227, "6208": 227, "6210": 227, "6212": 227, "6214": 227, "6216": 227, "6218": 227, "6220": 227, "6222": 227, "6224": 227, "6226": 227, "6228": 227, "6230": 227, "6232": 227, "6234": 227, "6236": 227, "6238": 227, "6240": 227, "6242": 227, "6244": 227, "6246": 227, "6248": 227, "6250": 227, "6252": 227, "6254": 227, "6256": 227, "6258": 227, "6260": 227, "6262": 227, "6264": 227, "6266": 227, "6268": 227, "6270": 227, "6272": 227, "6274": 227, "6276": 227, "6278": 227, "6280": 227, "6282": 227, "6284": 227, "6286": 227, "6288": 227, "6290": 227, "6292": 227, "6294": 227, "6296": 227, "6298": 227, "6300": 227, "6302": 227, "6304": 227, "6306": 227, "6308": 227, "6310": 227, "6312": 227, "6314": 227, "6316": 227, "6318": 227, "6320": 227, "6322": 227, "6324": 227, "6326": 227, "6328": 227, "6330": 227, "6332": 227, "6334": 227, "6336": 227, "6338": 227, "6340": 227, "6342": 227, "6344": 227, "6346": 227, "6348": 227, "6350": 227, "6352": 227, "6354": 227, "6356": 227, "6358": 227, "6360": 227, "6362": 227, "6364": 227, "6366": 227, "6368": 227, "6370": 227, "6372": 227, "6374": 227, "6376": 227, "6378": 227, "6380": 227, "6382": 227, "6384": 227, "6386": 227, "6388": 227, "6390": 227, "6392": 227, "6394": 227, "6396": 227, "6398": 227, "6400": 227, "6402": 227, "6404": 227, "6406": 227, "6408": 227, "6410": 227, "6412": 227, "6414": 227, "6416": 227, "6418": 227, "6420": 227, "6422": 227, "6424": 227, "6426": 227, "6428": 227, "6430": 227, "6432": 227, "6434": 227, "6436": 227, "6438": 227, "6440": 227, "6442": 227, "6444": 227, "6446": 227, "6448": 227, "6450": 227, "6452": 227, "6454": 227, "6456": 227, "6458": 227, "6460": 227, "6462": 227, "6464": 227, "6466": 227, "6468": 227, "6470": 227, "6472": 227, "6474": 227, "6476": 227, "6478": 227, "6480": 227, "6482": 227, "6484": 227, "6486": 227, "6488": 227, "6490": 227, "6492": 227, "6494": 227, "6496": 227, "6498": 227, "6500": 227, "6502": 227, "6504": 227, "6506": 227, "6508": 227, "6510": 227, "6512": 227, "6514": 227, "6516": 227, "6518": 227, "6520": 227, "6522": 227, "6524": 227, "6526": 227, "6528": 227, "6530": 227, "6532": 227, "6534": 227, "6536": 227, "6538": 227, "6540": 227, "6542": 227, "6544": 227, "6546": 227, "6548": 227, "6550": 227, "6552": 227, "6554": 227, "6556": 227, "6558": 227, "6560": 227, "6562": 227, "6564": 227, "6566": 227, "6568": 227, "6570": 227, "6572": 227, "6574": 227, "6576": 227, "6578": 227, "6580": 227, "6582": 227, "6584": 227, "6586": 227, "6588": 227, "6590": 227, "6592": 227, "6594": 227, "6596": 227, "6598": 227, "6600": 227, "6602": 227, "6604": 227, "6606": 227, "6608": 227, "6610": 227, "6612": 227, "6614": 227, "6616": 227, "6618": 227, "6620": 227, "6622": 227, "6624": 227, "6626": 227, "6628": 227, "6630": 227, "6632": 227, "6634": 227, "6636": 227, "6638": 227, "6640": 227, "6642": 227, "6644": 227, "6646": 227, "6648": 227, "6650": 227, "6652": 227, "6654": 227, "6656": 227, "6658": 227, "6660": 227, "6662": 227, "6664": 227, "6666": 227, "6668": 227, "6670": 227, "6672": 227, "6674": 227, "6676": 227, "6678": 227, "6680": 227, "6682": 227, "6684": 227, "6686": 227, "6688": 227, "6690": 227, "6692": 227, "6694": 227, "6696": 227, "6698": 227, "6700": 227, "6702": 227, "6704": 227, "6706": 227, "6708": 227, "6710": 227, "6714": 227, "6716": [227, 250], "6718": 227, "6720": 227, "6722": 227, "6724": 227, "6726": 227, "6728": 227, "6730": 227, "6732": 227, "6734": 227, "6736": 227, "6738": 227, "6740": 227, "6742": 227, "6744": 227, "6746": 227, "6748": 227, "6750": 227, "6752": 227, "6754": 227, "6756": 227, "6758": 227, "6760": 227, "6762": 227, "6764": 227, "6766": 227, "6768": 227, "6770": 227, "6772": 227, "6774": 227, "6776": 227, "6778": 227, "6780": 227, "6782": 227, "6784": 227, "6786": 227, "6788": 227, "6790": 227, "6792": 227, "6794": 227, "6796": 227, "6798": 227, "6800": 227, "6802": 227, "6804": 227, "6806": 227, "6808": 227, "6810": 227, "6812": 227, "6814": 227, "6816": 227, "6818": 227, "6820": 227, "6822": 227, "6824": 227, "6826": 227, "6828": 227, "6830": 227, "6832": 227, "6834": 227, "6836": 227, "6838": 227, "6840": 227, "6842": 227, "6844": 227, "6846": 227, "6848": 227, "6850": 227, "6852": 227, "6854": 227, "6856": 227, "6858": [227, 276], "6860": 227, "6862": 227, "6864": 227, "6866": 227, "6868": 227, "6870": 227, "6872": 227, "6874": 227, "6876": 227, "6878": 227, "6880": 227, "6882": 227, "6884": 227, "6886": 227, "6888": 227, "6890": 227, "6892": 227, "6894": 227, "6896": 227, "6898": 227, "6900": 227, "6902": 227, "6904": 227, "6906": 227, "6908": 227, "6910": 227, "6912": 227, "6914": 227, "6916": 227, "6918": 227, "6920": 227, "6922": 227, "6924": 227, "6926": 227, "6928": 227, "6930": 227, "6932": 227, "6934": 227, "6936": 227, "6938": 227, "6940": 227, "6942": 227, "6944": 227, "6946": 227, "6948": 227, "6950": 227, "6952": 227, "6954": 227, "6956": 227, "6958": 227, "6960": 227, "6962": 227, "6964": 227, "6966": 227, "6968": 227, "6970": 227, "6972": 227, "6974": 227, "6976": 227, "6978": 227, "6980": 227, "6982": 227, "6984": 227, "6986": 227, "6988": 227, "6990": 227, "6992": 227, "6994": 227, "6996": 227, "6998": 227, "7000": 227, "7002": 227, "7004": 227, "7006": 227, "7008": 227, "7010": 227, "7012": 227, "7014": 227, "7016": 227, "7018": 227, "7020": 227, "7022": 227, "7024": 227, "7026": 227, "7028": 227, "7030": 227, "7032": 227, "7034": 227, "7036": 227, "7038": 227, "7040": 227, "7042": 227, "7044": 227, "7046": 227, "7048": 227, "7050": 227, "7052": 227, "7054": 227, "7056": 227, "7058": 227, "7060": 227, "7062": 227, "7064": 227, "7066": 227, "7068": 227, "7070": 227, "7072": 227, "7074": 227, "7076": 227, "7078": 227, "7080": 227, "7082": 227, "7084": 227, "7086": 227, "7088": 227, "7090": 227, "7092": 227, "7094": 227, "7096": 227, "7098": 227, "7100": 227, "7102": 227, "7104": 227, "7106": 227, "7108": 227, "7110": 227, "7112": 227, "7114": 227, "7116": 227, "7118": 227, "7120": 227, "7122": 227, "7124": 227, "7126": 227, "7128": 227, "7130": 227, "7132": 227, "7134": 227, "7136": 227, "7138": 227, "7140": 227, "7142": 227, "7144": 227, "7146": 227, "7148": 227, "7150": 227, "7152": 227, "7154": 227, "7156": 227, "7158": 227, "7160": 227, "7162": 227, "7164": 227, "7166": 227, "7168": 227, "7170": 227, "7172": 227, "7174": 227, "7176": 227, "7178": 227, "7180": 227, "7182": 227, "7184": 227, "7186": 227, "7188": 227, "7190": 227, "7192": 227, "7194": 227, "7196": 227, "7198": 227, "7200": 227, "7202": 227, "7204": 227, "7206": 227, "7208": 227, "7210": 227, "7212": 227, "7214": 227, "7216": 227, "7218": 227, "7220": 227, "7222": 227, "7224": 227, "7226": 227, "7228": 227, "7230": 227, "7232": 227, "7234": 227, "7236": 227, "7238": 227, "7240": 227, "7242": 227, "7244": 227, "7246": 227, "7248": 227, "7250": 227, "7252": 227, "7254": 227, "7256": 227, "7258": 227, "7260": 227, "7262": 227, "7264": 227, "7266": 227, "7268": 227, "7270": 227, "7272": 227, "7274": 227, "7276": 227, "7278": 227, "7280": 227, "7282": 227, "7284": 227, "7286": 227, "7288": 227, "7290": 227, "7292": 227, "7294": 227, "7296": 227, "7298": 227, "7300": 227, "7302": 227, "7304": 227, "7306": 227, "7308": 227, "7310": 227, "7312": 227, "7314": 227, "7316": 227, "7318": 227, "7320": 227, "7322": 227, "7324": 227, "7326": 227, "7328": 227, "7330": 227, "7332": 227, "7334": 227, "7336": 227, "7338": 227, "7340": 227, "7342": 227, "7344": 227, "7346": 227, "7348": 227, "7350": 227, "7352": 227, "7354": 227, "7356": 227, "7358": 227, "7360": 227, "7362": 227, "7364": 227, "7366": 227, "7368": 227, "7370": 227, "7372": 227, "7374": 227, "7376": 227, "7378": 227, "7380": 227, "7382": 227, "7384": 227, "7386": 227, "7388": 227, "7392": 227, "7394": 227, "7396": 227, "7398": 227, "7400": 227, "7402": 227, "7404": 227, "7406": 227, "7408": 227, "7410": 227, "7412": 227, "7414": 227, "7416": 227, "7418": 227, "7420": 227, "7422": 227, "7424": 227, "7426": 227, "7428": 227, "7430": 227, "7432": 227, "7434": 227, "7436": 227, "7438": 227, "7440": 227, "7442": 227, "7444": 227, "7446": 227, "7448": 227, "7450": 227, "7452": 227, "7454": 227, "7456": 227, "7458": 227, "7460": 227, "7462": 227, "7464": 227, "7466": 227, "7468": 227, "7470": 227, "7472": 227, "7474": 227, "7476": 227, "7478": 227, "7480": 227, "7482": 227, "7484": 227, "7486": 227, "7488": 227, "7490": 227, "7492": 227, "7494": 227, "7496": 227, "7498": 227, "7500": 227, "7502": 227, "7504": 227, "7506": 227, "7508": 227, "7510": 227, "7512": 227, "7514": 227, "7516": 227, "7518": 227, "7520": 227, "7522": 227, "7524": 227, "7526": 227, "7528": 227, "7530": 227, "7532": 227, "7534": 227, "7536": 227, "7538": 227, "7540": 227, "7542": 227, "7544": 227, "7546": 227, "7548": 227, "7550": 227, "7552": 227, "7554": 227, "7556": 227, "7558": 227, "7560": 227, "7562": 227, "7564": 227, "7566": 227, "7568": 227, "7570": 227, "7572": 227, "7574": 227, "7576": 227, "7578": 227, "7580": 227, "7582": 227, "7584": 227, "7586": 227, "7588": 227, "7590": 227, "7592": 227, "7594": 227, "7596": 227, "7598": 227, "7600": 227, "7602": 227, "7604": 227, "7606": 227, "7608": 227, "7610": 227, "7612": 227, "7614": 227, "7616": 227, "7618": 227, "7620": 227, "7622": 227, "7624": 227, "7626": 227, "7628": 227, "7630": 227, "7632": 227, "7634": 227, "7636": 227, "7638": 227, "7640": 227, "7642": 227, "7644": 227, "7646": 227, "7648": 227, "7650": 227, "7652": 227, "7654": 227, "7656": 227, "7658": 227, "7660": 227, "7662": 227, "7664": 227, "7666": 227, "7668": 227, "7670": 227, "7672": 227, "7674": 227, "7676": 227, "7678": 227, "7680": 227, "7682": 227, "7684": 227, "7686": 227, "7688": 227, "7690": 227, "7692": 227, "7694": 227, "7696": 227, "7698": 227, "7700": 227, "7702": 227, "7704": 227, "7706": 227, "7708": 227, "7710": 227, "7712": 227, "7714": 227, "7716": 227, "7718": 227, "7720": 227, "7722": 227, "7724": 227, "7726": 227, "7728": 227, "7730": 227, "7732": 227, "7734": 227, "7736": 227, "7738": 227, "7740": 227, "7742": 227, "7744": 227, "7746": 227, "7748": 227, "7750": 227, "7752": 227, "7754": 227, "7756": 227, "7758": 227, "7760": 227, "7762": 227, "7764": 227, "7766": 227, "7768": 227, "7770": 227, "7772": 227, "7774": 227, "7776": 227, "7778": 227, "7780": 227, "7782": 227, "7784": 227, "7786": 227, "7788": 227, "7790": 227, "7792": 227, "7794": 227, "7796": 227, "7798": 227, "7800": 227, "7802": 227, "7804": 227, "7806": 227, "7808": 227, "7810": 227, "7812": 227, "7814": 227, "7816": 227, "7818": 227, "7820": 227, "7822": 227, "7824": 227, "7826": 227, "7828": 227, "7830": 227, "7832": 227, "7834": 227, "7836": 227, "7838": 227, "7842": 227, "7844": 227, "7846": 227, "7848": 227, "7850": 227, "7852": 227, "7854": 227, "7856": 227, "7858": 227, "7860": 227, "7862": 227, "7864": 227, "7866": 227, "7868": 227, "7870": 227, "7872": 227, "7874": 227, "7878": 227, "7880": 227, "7882": 227, "7884": 227, "7886": 227, "7888": 227, "7890": 227, "7892": 227, "7894": 227, "7896": 227, "7898": 227, "7900": 227, "7902": 227, "7904": 227, "7906": 227, "7908": 227, "7910": 227, "7912": 227, "7914": 227, "7916": 227, "7918": 227, "7920": 227, "7922": 227, "7924": 227, "7926": 227, "7928": 227, "7930": 227, "7932": 227, "7934": 227, "7936": 227, "7938": 227, "7940": 227, "7942": 227, "7944": 227, "7946": 227, "7948": 227, "7950": 227, "7952": 227, "7954": 227, "7956": 227, "7958": 227, "7960": 227, "7962": 227, "7964": 227, "7966": 227, "7968": 227, "7970": 227, "7972": 227, "7974": 227, "7976": 227, "7978": 227, "7980": 227, "7982": 227, "7984": 227, "7986": 227, "7988": 227, "7990": 227, "7992": 227, "7994": 227, "7996": 227, "7998": 227, "8002": 227, "8004": 227, "8006": 227, "8008": 227, "8012": 227, "8014": 227, "8016": 227, "8018": 227, "8022": 227, "8024": 227, "8026": 227, "8028": 227, "8030": 227, "8032": 227, "8034": 227, "8036": 227, "8038": 227, "8040": 227, "8042": 227, "8044": 227, "8046": 227, "8048": 227, "8050": 227, "8052": 227, "8054": 227, "8056": 227, "8058": 227, "8060": 227, "8062": 227, "8064": 227, "8066": 227, "8068": 227, "8070": 227, "8072": 227, "8074": 227, "8076": 227, "8078": 227, "8080": 227, "8082": 227, "8084": 227, "8086": 227, "8088": 227, "8090": 227, "8092": 227, "8094": 227, "8096": 227, "8098": 227, "8100": 227, "8102": [227, 983, 984], "8104": 227, "8106": 227, "8108": 227, "8110": 227, "8112": 227, "8114": 227, "8116": 227, "8118": 227, "8120": 227, "8122": 227, "8124": 227, "8126": 227, "8128": 227, "8130": 227, "8132": 227, "8134": 227, "8136": 227, "8138": 227, "8140": 227, "8142": 227, "8144": 227, "8146": 227, "8148": 227, "8150": 227, "8152": 227, "8154": 227, "8156": 227, "8158": 227, "8160": 227, "8162": 227, "8164": 227, "8166": 227, "8168": 227, "8170": 227, "8172": 227, "8174": 227, "8176": 227, "8178": 227, "8180": 227, "8182": 227, "8184": 227, "8186": 227, "8188": 227, "8190": 227, "8194": 227, "8196": 227, "8198": 227, "8200": 227, "8202": 227, "8204": 227, "8206": 227, "8208": 227, "8210": 227, "8212": 227, "8214": 227, "8216": 227, "8218": 227, "8220": 227, "8222": 227, "8224": 227, "8226": 227, "8228": 227, "8230": 227, "8232": 227, "8234": 227, "8238": 227, "8240": 227, "8242": 227, "8244": 227, "8246": 227, "8248": 227, "8250": 227, "8252": 227, "8254": 227, "8256": 227, "8258": 227, "8260": [227, 808], "8262": 227, "8264": 227, "8266": 227, "8268": 227, "8270": 227, "8272": 227, "8274": 227, "8276": 227, "8278": 227, "8280": 227, "8282": 227, "8284": 227, "8286": 227, "8288": 227, "8290": 227, "8292": 227, "8294": 227, "8296": 227, "8298": 227, "8300": 227, "8302": 227, "8304": 227, "8306": 227, "8308": 227, "8310": 227, "8312": 227, "8314": 227, "8316": 227, "8318": 227, "8320": 227, "8322": 227, "8324": 227, "8326": 227, "8328": 227, "8330": 227, "8332": 227, "8334": 227, "8336": 227, "8338": 227, "8340": 227, "8342": 227, "8344": 227, "8346": 227, "8348": 227, "8350": 227, "8352": 227, "8354": 227, "8356": 227, "8358": 227, "8360": 227, "8362": 227, "8364": 227, "8366": 227, "8368": 227, "8370": 227, "8372": 227, "8374": 227, "8376": 227, "8378": 227, "8380": 227, "8382": 227, "8384": 227, "8386": 227, "8388": 227, "8390": 227, "8392": 227, "8394": 227, "8396": 227, "8398": 227, "8400": 227, "8402": 227, "8404": 227, "8406": 227, "8408": 227, "8410": 227, "8412": 227, "8414": 227, "8416": 227, "8418": 227, "8420": 227, "8422": 227, "8424": 227, "8426": 227, "8428": 227, "8430": 227, "8432": 227, "8434": 227, "8436": 227, "8438": 227, "8440": 227, "8442": 227, "8444": 227, "8446": 227, "8448": 227, "8450": 227, "8452": 227, "8454": 227, "8456": 227, "8458": 227, "8460": 227, "8464": 227, "8466": 227, "8468": 227, "8470": 227, "8472": 227, "8474": 227, "8476": 227, "8478": 227, "8480": 227, "8482": 227, "8484": 227, "8486": 227, "8488": 227, "8490": 227, "8492": 227, "8494": 227, "8496": 227, "8498": 227, "8500": 227, "8502": 227, "8504": 227, "8506": 227, "8508": 227, "8510": 227, "8512": 227, "8514": 227, "8516": 227, "8518": 227, "8520": 227, "8522": 227, "8524": 227, "8526": 227, "8528": 227, "8530": 227, "8532": 227, "8534": 227, "8536": 227, "8538": 227, "8540": 227, "8542": 227, "8544": 227, "8546": 227, "8548": 227, "8550": 227, "8552": 227, "8554": 227, "8556": 227, "8558": 227, "8560": 227, "8562": 227, "8564": 227, "8566": 227, "8568": 227, "8570": 227, "8572": 227, "8574": 227, "8576": 227, "8578": 227, "8580": 227, "8582": 227, "8584": 227, "8586": 227, "8588": 227, "8590": 227, "8592": 227, "8594": 227, "8596": 227, "8598": 227, "8600": 227, "8602": 227, "8604": 227, "8606": 227, "8608": 227, "8610": 227, "8612": 227, "8614": 227, "8616": 227, "8618": 227, "8620": 227, "8622": 227, "8624": 227, "8626": 227, "8628": 227, "8630": 227, "8632": 227, "8634": 227, "8636": 227, "8638": 227, "8640": 227, "8642": 227, "8644": 227, "8646": 227, "8648": 227, "8650": 227, "8652": 227, "8654": 227, "8656": 227, "8658": 227, "8660": 227, "8662": 227, "8664": 227, "8666": 227, "8668": 227, "8670": 227, "8672": 227, "8674": 227, "8676": 227, "8678": 227, "8680": 227, "8682": 227, "8684": 227, "8686": 227, "8688": 227, "8690": 227, "8692": 227, "8694": 227, "8696": 227, "8698": 227, "8700": 227, "8702": 227, "8704": 227, "8706": 227, "8708": 227, "8710": 227, "8712": 227, "8714": 227, "8716": 227, "8718": 227, "8720": 227, "8722": 227, "8724": 227, "8726": 227, "8728": 227, "8730": 227, "8732": 227, "8734": 227, "8736": 227, "8738": 227, "8740": 227, "8742": 227, "8744": 227, "8746": 227, "8748": 227, "8750": 227, "8752": 227, "8754": 227, "8756": 227, "8758": 227, "8760": 227, "8762": 227, "8764": 227, "8766": 227, "8768": 227, "8770": 227, "8772": 227, "8774": 227, "8776": 227, "8778": 227, "8780": 227, "8782": 227, "8784": 227, "8786": 227, "8788": 227, "8790": 227, "8792": 227, "8794": 227, "8796": 227, "8798": 227, "8800": 227, "8802": 227, "8804": 227, "8806": 227, "8808": 227, "8810": 227, "8812": 227, "8814": 227, "8816": 227, "8818": 227, "8820": 227, "8822": 227, "8824": 227, "8826": 227, "8828": 227, "8830": 227, "8832": 227, "8834": 227, "8836": 227, "8838": 227, "8840": 227, "8842": 227, "8844": 227, "8846": 227, "8848": 227, "8850": 227, "8852": 227, "8854": 227, "8856": 227, "8858": 227, "8860": 227, "8862": 227, "8864": 227, "8866": 227, "8868": 227, "8870": 227, "8872": 227, "8874": 227, "8876": 227, "8878": 227, "8880": 227, "8882": 227, "8884": 227, "8886": 227, "8888": 227, "8890": 227, "8892": 227, "8894": 227, "8896": 227, "8898": 227, "8900": 227, "8902": 227, "8904": 227, "8906": 227, "8908": 227, "8910": 227, "8912": 227, "8914": 227, "8916": 227, "8918": 227, "8920": 227, "8922": 227, "8924": 227, "8926": 227, "8928": 227, "8930": 227, "8932": 227, "8934": 227, "8936": 227, "8938": 227, "8940": 227, "8942": 227, "8944": 227, "8946": 227, "8948": 227, "8950": 227, "8952": 227, "8954": 227, "8956": 227, "8958": 227, "8960": 227, "8962": 227, "8964": 227, "8966": 227, "8968": 227, "8970": 227, "8972": 227, "8974": 227, "8976": 227, "8978": 227, "8980": 227, "8982": 227, "8984": 227, "8986": 227, "8988": 227, "8990": 227, "8992": 227, "8994": 227, "8996": 227, "8998": 227, "9002": 227, "9004": 227, "9006": 227, "9008": 227, "9010": 227, "9012": 227, "9014": 227, "9016": 227, "9018": 227, "9020": 227, "9022": 227, "9024": 227, "9026": 227, "9028": 227, "9030": 227, "9032": 227, "9034": 227, "9036": 227, "9038": 227, "9040": 227, "9042": 227, "9044": 227, "9046": 227, "9048": 227, "9050": 227, "9052": 227, "9054": 227, "9056": 227, "9058": 227, "9060": 227, "9062": 227, "9064": 227, "9066": 227, "9068": 227, "9070": 227, "9072": 227, "9074": 227, "9076": 227, "9078": 227, "9080": 227, "9082": 227, "9084": 227, "9086": 227, "9088": 227, "9090": 227, "9092": 227, "9094": 227, "9096": 227, "9098": 227, "9100": 227, "9102": 227, "9104": 227, "9106": 227, "9108": 227, "9110": 227, "9112": 227, "9114": 227, "9116": 227, "9118": 227, "9120": 227, "9122": 227, "9124": 227, "9126": 227, "9128": 227, "9130": 227, "9132": 227, "9134": 227, "9136": 227, "9138": 227, "9140": 227, "9142": 227, "9144": 227, "9146": 227, "9148": 227, "9150": 227, "9152": 227, "9154": 227, "9156": 227, "9158": 227, "9160": 227, "9162": 227, "9164": 227, "9166": 227, "9168": 227, "9170": 227, "9172": 227, "9174": 227, "9176": 227, "9178": 227, "9180": 227, "9182": 227, "9184": 227, "9186": 227, "9188": 227, "9190": 227, "9192": 227, "9194": 227, "9196": 227, "9198": 227, "9200": 227, "9202": 227, "9204": 227, "9206": 227, "9208": 227, "9210": 227, "9212": 227, "9214": 227, "9216": 227, "9218": 227, "9220": 227, "9222": 227, "9224": 227, "9226": 227, "9228": 227, "9230": 227, "9232": 227, "9234": 227, "9236": 227, "9238": 227, "9240": 227, "9242": 227, "9244": 227, "9246": 227, "9248": 227, "9250": 227, "9252": 227, "9254": 227, "9256": 227, "9258": 227, "9260": 227, "9262": 227, "9264": 227, "9266": 227, "9268": 227, "9270": 227, "9272": 227, "9274": 227, "9276": 227, "9278": 227, "9280": 227, "9282": 227, "9284": 227, "9286": 227, "9288": 227, "9290": 227, "9292": 227, "9294": 227, "9296": 227, "9298": 227, "9300": 227, "9302": 227, "9304": 227, "9306": 227, "9308": 227, "9310": 227, "9312": 227, "9314": 227, "9316": 227, "9318": 227, "9320": 227, "9322": 227, "9324": 227, "9326": 227, "9328": 227, "9330": 227, "9332": 227, "9334": 227, "9336": 227, "9338": 227, "9340": 227, "9342": 227, "9344": 227, "9346": 227, "9348": 227, "9350": 227, "9352": 227, "9354": 227, "9356": 227, "9358": 227, "9360": 227, "9362": 227, "9364": 227, "9366": 227, "9368": 227, "9370": 227, "9372": 227, "9374": 227, "9376": 227, "9378": 227, "9380": 227, "9382": 227, "9384": 227, "9386": 227, "9388": 227, "9390": 227, "9392": 227, "9394": [227, 868], "9396": 227, "9398": 227, "9400": 227, "9402": 227, "9404": 227, "9406": 227, "9408": 227, "9410": 227, "9412": 227, "9414": 227, "9416": 227, "9418": 227, "9420": 227, "9422": 227, "9424": 227, "9426": 227, "9428": 227, "9430": 227, "9432": 227, "9434": 227, "9436": 227, "9438": 227, "9440": 227, "9442": 227, "9444": 227, "9446": 227, "9448": 227, "9450": 227, "9452": 227, "9454": 227, "9456": 227, "9458": 227, "9460": 227, "9462": 227, "9464": 227, "9466": 227, "9468": 227, "9470": 227, "9472": 227, "9474": 227, "9476": 227, "9478": 227, "9480": 227, "9482": 227, "9484": 227, "9486": 227, "9488": 227, "9490": 227, "9492": 227, "9494": 227, "9496": 227, "9498": 227, "9500": 227, "9502": 227, "9504": 227, "9506": 227, "9508": 227, "9510": 227, "9512": 227, "9514": 227, "9516": 227, "9518": 227, "9520": 227, "9522": 227, "9524": 227, "9526": 227, "9528": 227, "9530": 227, "9532": 227, "9534": 227, "9536": 227, "9538": 227, "9540": 227, "9542": 227, "9544": 227, "9546": 227, "9548": 227, "9550": 227, "9552": 227, "9554": 227, "9556": 227, "9558": 227, "9560": 227, "9562": 227, "9564": 227, "9566": 227, "9568": 227, "9570": 227, "9572": 227, "9574": 227, "9576": 227, "9578": 227, "9580": 227, "9582": 227, "9584": 227, "9586": 227, "9588": 227, "9590": 227, "9592": 227, "9594": 227, "9596": 227, "9598": 227, "9600": 227, "9602": 227, "9604": 227, "9606": 227, "9608": 227, "9610": 227, "9612": 227, "9614": 227, "9616": 227, "9618": 227, "9620": 227, "9622": 227, "9624": 227, "9626": 227, "9628": 227, "9630": 227, "9632": 227, "9634": 227, "9636": 227, "9638": 227, "9640": 227, "9642": 227, "9644": 227, "9646": 227, "9648": 227, "9650": 227, "9652": 227, "9654": 227, "9656": 227, "9658": 227, "9660": 227, "9662": 227, "9664": 227, "9666": 227, "9668": 227, "9670": 227, "9672": 227, "9674": 227, "9676": 227, "9678": 227, "9680": 227, "9682": 227, "9684": 227, "9686": 227, "9688": 227, "9690": 227, "9692": 227, "9694": 227, "9696": 227, "9698": 227, "9700": 227, "9702": 227, "9704": 227, "9706": 227, "9708": 227, "9710": 227, "9712": 227, "9714": 227, "9716": 227, "9718": 227, "9720": 227, "9722": 227, "9724": 227, "9726": 227, "9728": 227, "9730": 227, "9732": 227, "9734": 227, "9736": 227, "9738": 227, "9740": 227, "9742": 227, "9744": 227, "9746": 227, "9748": 227, "9750": 227, "9752": 227, "9754": 227, "9756": 227, "9758": 227, "9760": 227, "9762": 227, "9764": 227, "9766": 227, "9768": [227, 237], "9770": 227, "9772": 227, "9774": 227, "9776": 227, "9778": 227, "9780": 227, "9782": 227, "9784": 227, "9786": 227, "9788": 227, "9790": 227, "9792": 227, "9794": 227, "9796": 227, "9798": 227, "9800": 227, "9802": 227, "9804": 227, "9806": 227, "9808": 227, "9810": 227, "9812": 227, "9814": 227, "9816": 227, "9818": 227, "9820": 227, "9822": 227, "9824": 227, "9826": 227, "9828": 227, "9830": 227, "9832": 227, "9834": 227, "9836": 227, "9838": 227, "9840": 227, "9842": 227, "9844": 227, "9846": 227, "9848": 227, "9850": 227, "9852": 227, "9854": 227, "9856": 227, "9858": 227, "9860": 227, "9862": 227, "9864": 227, "9866": 227, "9868": 227, "9870": 227, "9872": 227, "9874": 227, "9876": 227, "9878": 227, "9880": 227, "9882": 227, "9884": 227, "9886": 227, "9888": 227, "9890": 227, "9892": 227, "9894": 227, "9896": 227, "9898": 227, "9900": 227, "9902": 227, "9904": 227, "9906": 227, "9908": 227, "9910": 227, "9912": 227, "9914": 227, "9916": 227, "9918": 227, "9920": 227, "9922": 227, "9924": 227, "9926": 227, "9928": 227, "9930": 227, "9932": 227, "9934": 227, "9936": 227, "9938": 227, "9940": 227, "9942": 227, "9944": 227, "9946": 227, "9948": 227, "9950": 227, "9952": 227, "9954": 227, "9956": 227, "9958": 227, "9960": 227, "9962": 227, "9964": 227, "9966": 227, "9968": 227, "9970": 227, "9972": 227, "9974": 227, "9976": 227, "9978": 227, "9980": 227, "9982": 227, "9984": 227, "9986": 227, "9988": 227, "9990": 227, "9992": 227, "9994": 227, "9996": 227, "9998": 227, "10002": 227, "10004": 227, "10006": 227, "10008": 227, "10010": 227, "10012": 227, "10014": 227, "10016": 227, "10018": 227, "10020": 227, "10022": 227, "10024": 227, "10026": 227, "10028": 227, "10030": 227, "10032": 227, "10034": 227, "10036": 227, "10038": 227, "10040": 227, "10042": 227, "10044": 227, "10046": 227, "10048": 227, "10050": 227, "10052": 227, "10054": 227, "10056": 227, "10058": 227, "10060": 227, "10062": 227, "10064": 227, "10066": 227, "10068": 227, "10070": 227, "10072": 227, "10074": 227, "10076": 227, "10078": 227, "10080": 227, "10082": 227, "10084": 227, "10086": 227, "10088": 227, "10090": 227, "10092": 227, "10094": 227, "10096": 227, "10098": 227, "10100": 227, "10102": 227, "10104": 227, "10106": 227, "10108": 227, "10110": 227, "10112": 227, "10114": 227, "10116": 227, "10118": 227, "10120": 227, "10122": 227, "10124": 227, "10126": 227, "10128": 227, "10130": 227, "10132": 227, "10134": 227, "10136": 227, "10138": 227, "10140": 227, "10142": 227, "10144": 227, "10146": 227, "10148": 227, "10150": 227, "10152": 227, "10154": 227, "10156": 227, "10158": 227, "10160": 227, "10162": 227, "10164": 227, "10166": 227, "10168": 227, "10170": 227, "10172": 227, "10174": 227, "10176": 227, "10178": 227, "10180": 227, "10182": 227, "10184": 227, "10186": 227, "10188": 227, "10190": 227, "10192": 227, "10194": 227, "10196": 227, "10198": 227, "10200": 227, "10202": 227, "10204": 227, "10206": 227, "10208": 227, "10210": 227, "10212": 227, "10214": 227, "10216": 227, "10218": 227, "10220": 227, "10222": 227, "10224": 227, "10226": [227, 276], "10228": 227, "10230": 227, "10232": 227, "10234": 227, "10236": 227, "10238": 227, "10240": 227, "10242": 227, "10244": 227, "10246": 227, "10248": 227, "10250": 227, "10252": 227, "10254": 227, "10256": 227, "10258": 227, "10260": 227, "10262": 227, "10264": 227, "10266": 227, "10268": 227, "10270": 227, "10272": 227, "10274": 227, "10276": 227, "10278": 227, "10280": 227, "10282": 227, "10284": 227, "10286": 227, "10288": 227, "10290": 227, "10292": 227, "10294": 227, "10296": 227, "10298": 227, "10300": 227, "10302": 227, "10304": 227, "10306": 227, "10308": 227, "10310": 227, "10312": 227, "10314": 227, "10316": 227, "10318": 227, "10320": 227, "10322": 227, "10324": 227, "10326": 227, "10328": 227, "10330": 227, "10332": 227, "10334": 227, "10336": 227, "10338": 227, "10340": 227, "10342": 227, "10344": 227, "10346": 227, "10348": 227, "10350": 227, "10352": 227, "10354": 227, "10356": 227, "10358": 227, "10360": 227, "10362": 227, "10364": 227, "10366": 227, "10368": 227, "10370": 227, "10372": 227, "10374": 227, "10376": 227, "10378": 227, "10380": 227, "10382": 227, "10384": 227, "10386": 227, "10388": 227, "10390": 227, "10392": 227, "10394": 227, "10396": 227, "10398": 227, "10400": 227, "10402": 227, "10404": 227, "10406": 227, "10408": 227, "10410": 227, "10412": 227, "10414": 227, "10416": 227, "10418": 227, "10420": 227, "10422": 227, "10424": 227, "10426": 227, "10428": 227, "10430": 227, "10432": 227, "10434": 227, "10436": 227, "10438": 227, "10440": 227, "10442": 227, "10444": 227, "10446": 227, "10448": 227, "10450": 227, "10452": 227, "10454": 227, "10456": 227, "10458": 227, "10460": 227, "10462": 227, "10464": 227, "10466": 227, "10468": 227, "10470": 227, "10472": 227, "10474": 227, "10476": 227, "10478": 227, "10480": 227, "10482": 227, "10484": 227, "10486": 227, "10488": 227, "10490": 227, "10492": 227, "10494": 227, "10496": 227, "10498": 227, "10500": 227, "10502": 227, "10504": 227, "10506": 227, "10508": 227, "10510": 227, "10512": 227, "10514": 227, "10516": 227, "10518": 227, "10520": 227, "10522": 227, "10524": 227, "10526": 227, "10528": 227, "10530": 227, "10532": 227, "10534": 227, "10536": 227, "10538": 227, "10540": 227, "10542": 227, "10544": 227, "10546": 227, "10548": 227, "10550": 227, "10552": [227, 994], "10554": 227, "10556": 227, "10558": 227, "10560": 227, "10562": 227, "10564": 227, "10566": 227, "10568": 227, "10570": 227, "10572": 227, "10574": 227, "10576": 227, "10578": 227, "10580": 227, "10582": 227, "10584": 227, "10586": 227, "10588": 227, "10590": 227, "10592": 227, "10594": 227, "10596": 227, "10598": 227, "10600": 227, "10602": 227, "10604": 227, "10606": 227, "10608": 227, "10610": 227, "10612": 227, "10614": 227, "10616": 227, "10618": 227, "10620": 227, "10622": 227, "10624": 227, "10626": 227, "10628": 227, "10630": 227, "10632": 227, "10634": 227, "10636": 227, "10638": 227, "10640": 227, "10642": 227, "10644": 227, "10646": 227, "10648": 227, "10650": 227, "10652": 227, "10654": 227, "10656": 227, "10658": 227, "10660": 227, "10662": 227, "10664": 227, "10666": 227, "10668": 227, "10670": 227, "10672": 227, "10674": 227, "10676": 227, "10678": 227, "10680": 227, "10682": 227, "10684": 227, "10686": 227, "10688": 227, "10690": 227, "10692": 227, "10694": 227, "10696": 227, "10698": 227, "10700": 227, "10702": 227, "10704": 227, "10706": 227, "10708": 227, "10710": 227, "10712": 227, "10714": 227, "10716": 227, "10718": 227, "10720": 227, "10722": 227, "10724": 227, "10726": 227, "10728": 227, "10730": 227, "10732": 227, "10734": 227, "10736": 227, "10738": 227, "10740": 227, "10742": 227, "10744": 227, "10746": 227, "10748": 227, "10750": 227, "10752": 227, "10754": 227, "10756": 227, "10758": 227, "10760": 227, "10762": 227, "10764": 227, "10766": 227, "10768": 227, "10770": 227, "10772": 227, "10774": 227, "10776": 227, "10778": 227, "10780": 227, "10782": 227, "10784": 227, "10786": 227, "10788": 227, "10790": 227, "10792": 227, "10794": 227, "10796": 227, "10798": 227, "10800": 227, "10802": 227, "10804": 227, "10806": 227, "10808": 227, "10810": 227, "10812": 227, "10814": 227, "10816": 227, "10818": 227, "10820": 227, "10822": 227, "10824": 227, "10826": 227, "10828": 227, "10830": 227, "10832": 227, "10834": 227, "10836": 227, "10838": 227, "10840": 227, "10842": 227, "10844": 227, "10846": 227, "10848": 227, "10850": 227, "10852": 227, "10854": 227, "10856": 227, "10858": 227, "10860": 227, "10862": 227, "10864": 227, "10866": 227, "10868": 227, "10870": 227, "10872": 227, "10874": 227, "10876": 227, "10878": 227, "10880": 227, "10882": 227, "10884": 227, "10886": 227, "10888": 227, "10890": 227, "10892": 227, "10894": 227, "10896": 227, "10898": 227, "10900": 227, "10902": 227, "10904": 227, "10906": 227, "10908": 227, "10910": 227, "10912": 227, "10914": 227, "10916": 227, "10918": 227, "10920": 227, "10922": 227, "10924": 227, "10926": 227, "10928": 227, "10930": 227, "10932": 227, "10934": 227, "10936": 227, "10938": 227, "10940": 227, "10942": 227, "10944": 227, "10946": 227, "10948": 227, "10950": 227, "10952": 227, "10954": 227, "10956": 227, "10958": 227, "10960": 227, "10962": 227, "10964": 227, "10966": 227, "10968": 227, "10970": 227, "10972": 227, "10974": 227, "10976": 227, "10978": 227, "10980": 227, "10982": 227, "10984": 227, "10986": 227, "10988": 227, "10990": 227, "10992": 227, "10994": 227, "10996": 227, "10998": 227, "11000": 227, "11002": 227, "11004": 227, "11006": 227, "11008": 227, "11010": 227, "11012": 227, "11014": 227, "11016": 227, "11018": 227, "11020": 227, "11022": 227, "11024": 227, "11026": 227, "11028": 227, "11030": 227, "11032": 227, "11034": 227, "11036": 227, "11038": 227, "11040": 227, "11042": 227, "11044": 227, "11046": 227, "11048": 227, "11050": 227, "11052": 227, "11054": 227, "11056": 227, "11058": 227, "11060": 227, "11062": 227, "11064": 227, "11066": 227, "11068": 227, "11070": 227, "11072": 227, "11074": 227, "11076": 227, "11078": 227, "11080": 227, "11082": 227, "11084": 227, "11086": 227, "11088": 227, "11090": 227, "11092": 227, "11094": 227, "11096": 227, "11098": 227, "11100": 227, "11102": 227, "11104": 227, "11106": 227, "11108": 227, "11110": 227, "11112": 227, "11114": 227, "11116": 227, "11118": 227, "11120": 227, "11122": 227, "11124": 227, "11126": 227, "11128": 227, "11130": 227, "11132": 227, "11134": 227, "11136": 227, "11138": 227, "11140": 227, "11142": 227, "11144": 227, "11146": 227, "11148": 227, "11150": 227, "11152": 227, "11154": 227, "11156": 227, "11158": 227, "11160": 227, "11162": 227, "11164": 227, "11166": 227, "11168": 227, "11170": 227, "11172": 227, "11174": 227, "11176": 227, "11178": 227, "11180": 227, "11182": 227, "11184": 227, "11186": 227, "11188": 227, "11190": 227, "11192": 227, "11194": 227, "11196": 227, "11198": 227, "11200": 227, "11202": 227, "11204": 227, "11206": 227, "11208": 227, "11210": 227, "11212": 227, "11214": 227, "11216": 227, "11218": 227, "11220": 227, "11222": 227, "11224": 227, "11226": 227, "11228": 227, "11230": 227, "11232": 227, "11234": 227, "11236": 227, "11238": 227, "11240": 227, "11242": 227, "11244": 227, "11246": 227, "11248": 227, "11250": 227, "11252": 227, "11254": 227, "11256": 227, "11258": 227, "11260": 227, "11262": 227, "11264": 227, "11266": 227, "11268": 227, "11270": 227, "11272": 227, "11274": 227, "11276": 227, "11278": 227, "11280": 227, "11282": 227, "11284": 227, "11286": 227, "11288": 227, "11290": 227, "11292": 227, "11294": 227, "11296": 227, "11298": 227, "11300": 227, "11302": 227, "11304": 227, "11306": 227, "11308": 227, "11310": 227, "11312": 227, "11314": 227, "11316": 227, "11318": 227, "11320": 227, "11322": 227, "11324": 227, "11326": 227, "11328": 227, "11330": 227, "11332": 227, "11334": 227, "11336": 227, "11340": 227, "11342": 227, "11344": 227, "11346": 227, "11348": [227, 276], "11350": 227, "11352": 227, "11354": 227, "11356": 227, "11358": 227, "11360": 227, "11362": 227, "11364": 227, "11366": 227, "11368": 227, "11370": 227, "11372": 227, "11374": 227, "11376": 227, "11378": 227, "11380": 227, "11382": 227, "11384": 227, "11386": 227, "11388": 227, "11390": 227, "11392": 227, "11394": 227, "11396": 227, "11398": 227, "11400": 227, "11402": 227, "11404": 227, "11406": 227, "11408": 227, "11410": 227, "11412": 227, "11414": 227, "11416": 227, "11418": 227, "11420": 227, "11422": 227, "11424": 227, "11426": 227, "11428": 227, "11430": 227, "11432": 227, "11434": 227, "11436": 227, "11438": 227, "11440": 227, "11442": 227, "11444": 227, "11446": 227, "11448": 227, "11450": 227, "11452": 227, "11454": 227, "11456": 227, "11458": 227, "11460": 227, "11462": 227, "11464": 227, "11466": 227, "11468": 227, "11470": 227, "11472": 227, "11474": 227, "11476": 227, "11478": 227, "11480": 227, "11482": 227, "11484": 227, "11486": 227, "11488": 227, "11490": 227, "11492": 227, "11494": 227, "11496": 227, "11498": 227, "11500": 227, "11502": 227, "11504": 227, "11506": 227, "11508": 227, "11510": 227, "11512": 227, "11514": 227, "11516": 227, "11518": 227, "11520": 227, "11522": 227, "11524": 227, "11526": 227, "11528": 227, "11530": 227, "11532": 227, "11534": 227, "11536": 227, "11538": 227, "11540": 227, "11542": 227, "11544": 227, "11546": 227, "11548": 227, "11550": 227, "11552": 227, "11554": 227, "11556": 227, "11558": 227, "11560": 227, "11562": 227, "11564": 227, "11566": 227, "11568": 227, "11570": 227, "11572": 227, "11574": 227, "11576": 227, "11578": 227, "11580": 227, "11582": 227, "11584": 227, "11586": 227, "11588": 227, "11590": 227, "11592": 227, "11594": 227, "11596": 227, "11598": 227, "11600": 227, "11602": 227, "11604": 227, "11606": 227, "11608": 227, "11610": 227, "11612": 227, "11614": 227, "11616": 227, "11618": 227, "11620": 227, "11622": 227, "11624": 227, "11626": 227, "11628": 227, "11630": 227, "11634": 227, "11636": 227, "11638": 227, "11640": 227, "11642": 227, "11644": 227, "11646": 227, "11648": 227, "11650": 227, "11652": 227, "11654": 227, "11656": 227, "11658": 227, "11660": 227, "11662": 227, "11664": 227, "11666": 227, "11668": 227, "11670": 227, "11672": 227, "11674": 227, "11676": 227, "11678": 227, "11680": 227, "11682": 227, "11684": 227, "11686": 227, "11688": 227, "11690": 227, "11692": 227, "11694": 227, "11696": 227, "11698": 227, "11700": 227, "11702": 227, "11704": 227, "11706": 227, "11708": 227, "11710": 227, "11712": 227, "11714": 227, "11716": 227, "11718": 227, "11720": 227, "11722": 227, "11724": 227, "11726": 227, "11728": 227, "11730": 227, "11732": 227, "11734": 227, "11736": 227, "11738": 227, "11740": 227, "11742": 227, "11744": 227, "11746": 227, "11748": 227, "11750": 227, "11752": 227, "11754": 227, "11756": 227, "11758": 227, "11760": 227, "11762": 227, "11764": 227, "11766": 227, "11768": 227, "11770": 227, "11772": 227, "11774": 227, "11776": 227, "11778": 227, "11780": 227, "11782": 227, "11784": 227, "11786": 227, "11788": 227, "11790": 227, "11792": 227, "11794": 227, "11796": 227, "11798": 227, "11800": 227, "11802": 227, "11804": 227, "11806": 227, "11808": 227, "11810": 227, "11812": 227, "11814": 227, "11816": 227, "11818": 227, "11820": 227, "11822": 227, "11824": 227, "11826": 227, "11828": 227, "11830": 227, "11832": 227, "11834": 227, "11836": 227, "11838": 227, "11840": 227, "11842": 227, "11844": 227, "11846": 227, "11848": 227, "11850": 227, "11852": 227, "11854": 227, "11856": 227, "11858": 227, "11860": 227, "11862": 227, "11864": 227, "11866": 227, "11868": 227, "11870": 227, "11872": 227, "11874": 227, "11876": 227, "11878": 227, "11880": 227, "11882": 227, "11884": 227, "11886": 227, "11888": 227, "11890": 227, "11892": 227, "11894": 227, "11896": 227, "11898": 227, "11900": 227, "11902": 227, "11904": 227, "11906": 227, "11908": 227, "11910": 227, "11912": 227, "11914": 227, "11916": 227, "11918": 227, "11920": 227, "11922": 227, "11924": 227, "11926": 227, "11928": 227, "11930": 227, "11932": 227, "11934": 227, "11936": 227, "11938": 227, "11940": 227, "11942": 227, "11944": 227, "11946": 227, "11948": 227, "11950": 227, "11952": 227, "11954": 227, "11956": 227, "11958": 227, "11960": 227, "11962": 227, "11964": 227, "11966": 227, "11968": 227, "11970": 227, "11972": 227, "11974": 227, "11976": 227, "11978": 227, "11980": 227, "11982": 227, "11984": 227, "11986": 227, "11988": 227, "11990": 227, "11992": 227, "11994": 227, "11996": 227, "11998": 227, "12000": 227, "12002": 227, "12004": 227, "12006": 227, "12008": 227, "12010": 227, "12012": 227, "12014": 227, "12016": 227, "12018": 227, "12020": 227, "12022": 227, "12024": 227, "12026": 227, "12028": 227, "12030": 227, "12032": 227, "12034": 227, "12036": 227, "12038": 227, "12040": 227, "12042": 227, "12044": 227, "12046": 227, "12048": 227, "12050": 227, "12052": 227, "12054": 227, "12056": 227, "12058": 227, "12060": 227, "12062": 227, "12064": 227, "12066": 227, "12068": 227, "12070": 227, "12072": 227, "12074": 227, "12076": 227, "12078": 227, "12080": 227, "12082": 227, "12084": 227, "12086": 227, "12088": 227, "12090": 227, "12092": 227, "12094": 227, "12096": 227, "12098": 227, "12100": 227, "12102": 227, "12104": 227, "12106": 227, "12108": 227, "12110": 227, "12112": 227, "12114": 227, "12116": 227, "12118": 227, "12120": 227, "12122": 227, "12124": 227, "12126": 227, "12128": 227, "12130": 227, "12132": 227, "12134": 227, "12136": 227, "12138": 227, "12140": 227, "12142": 227, "12144": 227, "12146": 227, "12148": 227, "12150": 227, "12152": 227, "12154": 227, "12158": 227, "12160": 227, "12162": 227, "12164": 227, "12166": 227, "12168": 227, "12170": 227, "12172": 227, "12174": 227, "12176": 227, "12178": 227, "12180": 227, "12182": 227, "12184": 227, "12186": 227, "12188": 227, "12190": 227, "12192": 227, "12194": 227, "12196": 227, "12198": 227, "12200": 227, "12202": 227, "12204": 227, "12206": 227, "12208": 227, "12210": 227, "12212": 227, "12214": 227, "12216": 227, "12218": 227, "12220": 227, "12222": 227, "12224": 227, "12226": 227, "12228": 227, "12230": 227, "12232": 227, "12234": 227, "12236": 227, "12238": 227, "12240": 227, "12242": 227, "12244": 227, "12246": 227, "12248": 227, "12250": 227, "12252": 227, "12254": 227, "12256": 227, "12258": 227, "12260": 227, "12262": 227, "12264": 227, "12266": 227, "12268": 227, "12270": 227, "12272": 227, "12274": 227, "12276": 227, "12278": 227, "12280": 227, "12282": 227, "12284": 227, "12286": 227, "12288": 227, "12290": 227, "12292": 227, "12294": 227, "12296": 227, "12298": 227, "12300": 227, "12302": 227, "12304": 227, "12306": 227, "12308": 227, "12310": 227, "12312": 227, "12314": 227, "12316": 227, "12318": 227, "12320": 227, "12322": 227, "12324": 227, "12326": 227, "12328": 227, "12330": 227, "12332": 227, "12334": 227, "12336": 227, "12338": 227, "12340": 227, "12342": 227, "12344": 227, "12346": 227, "12348": 227, "12350": 227, "12352": 227, "12354": 227, "12356": 227, "12358": 227, "12360": 227, "12362": 227, "12364": 227, "12366": 227, "12368": 227, "12370": 227, "12372": 227, "12374": 227, "12376": 227, "12378": 227, "12380": 227, "12382": 227, "12384": 227, "12386": 227, "12388": 227, "12390": 227, "12392": 227, "12394": 227, "12396": 227, "12398": 227, "12400": 227, "12402": 227, "12404": 227, "12406": 227, "12408": 227, "12410": 227, "12412": 227, "12414": 227, "12416": 227, "12418": 227, "12420": 227, "12422": 227, "12424": 227, "12426": 227, "12428": 227, "12430": 227, "12432": 227, "12434": 227, "12436": 227, "12438": 227, "12440": 227, "12442": 227, "12444": 227, "12446": 227, "12448": 227, "12450": 227, "12452": 227, "12454": 227, "12456": 227, "12458": 227, "12460": 227, "12462": 227, "12464": 227, "12466": 227, "12468": 227, "12470": 227, "12472": 227, "12474": 227, "12476": 227, "12478": 227, "12480": 227, "12482": 227, "12484": 227, "12486": 227, "12488": 227, "12490": 227, "12492": 227, "12494": 227, "12496": 227, "12498": 227, "12500": 227, "12502": 227, "12504": 227, "12506": 227, "12508": 227, "12510": 227, "12512": 227, "12514": 227, "12516": 227, "12518": 227, "12520": 227, "12522": 227, "12524": 227, "12526": 227, "12528": 227, "12530": 227, "12532": 227, "12534": 227, "12536": 227, "12538": 227, "12540": 227, "12542": 227, "12544": 227, "12546": 227, "12548": 227, "12550": 227, "12552": 227, "12554": 227, "12556": 227, "12558": 227, "12560": 227, "12562": 227, "12564": 227, "12566": 227, "12568": 227, "12570": 227, "12572": 227, "12574": 227, "12576": 227, "12578": 227, "12580": 227, "12582": 227, "12584": 227, "12586": 227, "12588": 227, "12590": 227, "12592": 227, "12594": 227, "12596": 227, "12598": 227, "12600": 227, "12602": 227, "12604": 227, "12606": 227, "12608": 227, "12610": 227, "12612": 227, "12614": 227, "12616": 227, "12618": 227, "12620": 227, "12622": 227, "12624": 227, "12626": 227, "12628": 227, "12630": 227, "12632": 227, "12634": 227, "12636": 227, "12638": 227, "12640": 227, "12642": 227, "12644": 227, "12646": 227, "12648": 227, "12650": 227, "12652": 227, "12654": 227, "12656": 227, "12658": 227, "12660": 227, "12662": 227, "12664": 227, "12666": 227, "12668": 227, "12670": 227, "12672": 227, "12674": 227, "12676": 227, "12678": 227, "12680": 227, "12682": 227, "12684": 227, "12686": 227, "12688": 227, "12690": 227, "12692": 227, "12694": 227, "12696": 227, "12698": 227, "12700": 227, "12702": 227, "12704": 227, "12706": 227, "12708": 227, "12710": 227, "12712": 227, "12714": 227, "12716": 227, "12718": 227, "12720": 227, "12722": 227, "12724": 227, "12726": 227, "12728": 227, "12730": 227, "12732": 227, "12734": 227, "12736": 227, "12738": 227, "12740": 227, "12742": 227, "12744": 227, "12746": 227, "12748": 227, "12750": 227, "12752": 227, "12754": 227, "12756": 227, "12758": 227, "12760": 227, "12762": 227, "12764": 227, "12766": 227, "12768": 227, "12770": 227, "12772": 227, "12774": 227, "12776": 227, "12778": 227, "12780": 227, "12782": 227, "12784": 227, "12786": 227, "12788": 227, "12790": 227, "12792": 227, "12794": 227, "12796": 227, "12798": 227, "12800": 227, "12802": 227, "12804": 227, "12806": 227, "12808": 227, "12810": 227, "12812": 227, "12814": 227, "12816": 227, "12818": 227, "12820": 227, "12822": 227, "12824": 227, "12826": 227, "12828": 227, "12830": 227, "12832": 227, "12834": 227, "12836": 227, "12838": 227, "12840": 227, "12842": 227, "12844": 227, "12846": 227, "12848": 227, "12850": 227, "12852": 227, "12854": 227, "12856": 227, "12858": 227, "12860": 227, "12862": 227, "12864": 227, "12866": 227, "12868": 227, "12870": 227, "12872": 227, "12874": 227, "12876": 227, "12878": 227, "12880": 227, "12882": 227, "12884": 227, "12886": 227, "12888": 227, "12890": 227, "12892": 227, "12894": 227, "12896": 227, "12898": 227, "12900": 227, "12902": 227, "12904": 227, "12906": 227, "12908": 227, "12910": 227, "12912": 227, "12914": 227, "12916": 227, "12918": 227, "12920": 227, "12922": 227, "12924": 227, "12926": 227, "12928": 227, "12930": 227, "12932": 227, "12934": 227, "12936": 227, "12938": 227, "12940": 227, "12942": 227, "12944": 227, "12946": 227, "12948": 227, "12950": 227, "12952": 227, "12954": 227, "12956": 227, "12958": 227, "12960": 227, "12962": 227, "12964": 227, "12966": 227, "12968": 227, "12970": 227, "12972": 227, "12974": 227, "12976": 227, "12978": 227, "12980": 227, "12982": 227, "12984": 227, "12986": 227, "12988": 227, "12990": 227, "12992": 227, "12994": 227, "12996": 227, "12998": 227, "13000": 227, "13002": 227, "13004": 227, "13006": 227, "13008": 227, "13010": 227, "13012": 227, "13014": 227, "13016": 227, "13018": 227, "13020": 227, "13022": 227, "13024": 227, "13026": 227, "13028": 227, "13030": 227, "13032": 227, "13034": 227, "13036": 227, "13038": 227, "13040": 227, "13042": 227, "13044": 227, "13046": 227, "13048": 227, "13050": 227, "13052": 227, "13054": 227, "13056": 227, "13058": 227, "13060": 227, "13062": 227, "13064": 227, "13066": 227, "13068": 227, "13070": 227, "13072": 227, "13074": 227, "13076": 227, "13078": 227, "13080": 227, "13082": 227, "13084": 227, "13086": 227, "13088": 227, "13090": 227, "13092": 227, "13094": 227, "13096": 227, "13098": 227, "13100": 227, "13102": 227, "13104": 227, "13106": 227, "13108": 227, "13110": 227, "13112": 227, "13114": 227, "13116": 227, "13118": 227, "13120": 227, "13122": 227, "13124": 227, "13126": 227, "13128": 227, "13130": 227, "13132": 227, "13134": 227, "13136": 227, "13138": 227, "13140": 227, "13142": 227, "13144": 227, "13146": 227, "13148": 227, "13150": 227, "13152": 227, "13154": 227, "13156": 227, "13158": 227, "13160": 227, "13162": 227, "13164": 227, "13166": 227, "13168": 227, "13170": 227, "13172": 227, "13174": 227, "13176": 227, "13178": 227, "13180": 227, "13182": 227, "13184": 227, "13186": 227, "13188": 227, "13190": 227, "13192": 227, "13194": 227, "13196": 227, "13198": 227, "13200": 227, "13202": 227, "13204": 227, "13206": 227, "13208": 227, "13210": 227, "13212": 227, "13214": 227, "13216": 227, "13218": 227, "13220": 227, "13222": 227, "13224": 227, "13226": 227, "13228": 227, "13230": 227, "13232": 227, "13234": 227, "13236": 227, "13238": 227, "13240": 227, "13242": 227, "13244": 227, "13246": 227, "13248": 227, "13250": 227, "13252": 227, "13254": 227, "13256": 227, "13258": 227, "13260": 227, "13262": 227, "13264": 227, "13266": 227, "13268": 227, "13270": 227, "13272": 227, "13274": 227, "13276": 227, "13278": 227, "13280": 227, "13282": 227, "13284": 227, "13286": 227, "13288": 227, "13290": 227, "13292": 227, "13294": 227, "13296": 227, "13298": 227, "13300": 227, "13302": 227, "13304": 227, "13306": 227, "13308": 227, "13310": 227, "13312": 227, "13314": 227, "13316": 227, "13318": 227, "13320": 227, "13322": 227, "13324": 227, "13326": 227, "13328": 227, "13330": 227, "13332": 227, "13334": 227, "13336": 227, "13338": 227, "13340": 227, "13342": 227, "13344": 227, "13346": 227, "13348": 227, "13350": 227, "13352": 227, "13354": 227, "13356": 227, "13358": 227, "13360": 227, "13362": 227, "13364": 227, "13366": 227, "13368": 227, "13370": 227, "13372": 227, "13374": 227, "13376": 227, "13378": 227, "13380": 227, "13382": 227, "13384": 227, "13386": 227, "13388": 227, "13390": 227, "13392": 227, "13394": 227, "13396": 227, "13398": 227, "13400": 227, "13402": 227, "13404": 227, "13406": 227, "13408": 227, "13410": 227, "13412": 227, "13414": 227, "13416": 227, "13418": 227, "13420": 227, "13422": 227, "13424": 227, "13426": 227, "13428": 227, "13430": 227, "13432": 227, "13434": 227, "13436": 227, "13438": 227, "13440": 227, "13442": 227, "13444": 227, "13446": 227, "13448": 227, "13450": 227, "13452": 227, "13454": 227, "13456": 227, "13458": 227, "13460": 227, "13462": 227, "13464": 227, "13466": 227, "13468": 227, "13470": 227, "13472": 227, "13474": 227, "13476": 227, "13478": 227, "13480": 227, "13482": 227, "13484": 227, "13486": 227, "13488": 227, "13490": 227, "13492": 227, "13494": 227, "13496": 227, "13498": 227, "13502": 227, "13504": 227, "13506": 227, "13508": 227, "13510": 227, "13512": 227, "13514": 227, "13516": 227, "13518": 227, "13520": 227, "13522": 227, "13524": 227, "13526": 227, "13528": 227, "13530": 227, "13532": 227, "13534": 227, "13536": 227, "13538": 227, "13540": 227, "13542": 227, "13544": 227, "13546": 227, "13548": 227, "13550": 227, "13552": 227, "13554": 227, "13556": 227, "13558": 227, "13560": 227, "13562": 227, "13564": 227, "13566": 227, "13568": 227, "13570": 227, "13572": 227, "13574": 227, "13576": 227, "13578": 227, "13580": 227, "13582": 227, "13584": 227, "13586": 227, "13588": 227, "13590": 227, "13592": 227, "13594": 227, "13596": 227, "13598": 227, "13600": 227, "13602": 227, "13604": 227, "13606": 227, "13608": 227, "13610": 227, "13612": 227, "13614": 227, "13616": 227, "13618": 227, "13620": 227, "13622": 227, "13624": 227, "13626": 227, "13628": 227, "13630": 227, "13632": 227, "13634": 227, "13636": 227, "13638": 227, "13640": 227, "13642": 227, "13644": 227, "13646": 227, "13648": 227, "13650": 227, "13652": 227, "13654": 227, "13656": 227, "13658": 227, "13660": 227, "13662": 227, "13664": 227, "13666": 227, "13668": 227, "13670": 227, "13672": 227, "13674": 227, "13676": 227, "13678": 227, "13680": 227, "13682": 227, "13684": 227, "13686": 227, "13688": 227, "13690": 227, "13692": 227, "13694": 227, "13696": 227, "13698": 227, "13700": 227, "13702": 227, "13704": 227, "13706": 227, "13708": 227, "13710": 227, "13712": 227, "13714": 227, "13716": 227, "13718": 227, "13720": 227, "13722": 227, "13724": 227, "13726": 227, "13728": 227, "13730": 227, "13732": 227, "13734": 227, "13736": 227, "13738": 227, "13740": 227, "13742": 227, "13744": 227, "13746": 227, "13748": 227, "13750": 227, "13752": 227, "13754": 227, "13756": 227, "13758": 227, "13760": 227, "13762": 227, "13764": 227, "13766": 227, "13768": 227, "13770": 227, "13772": 227, "13774": 227, "13776": 227, "13778": 227, "13780": 227, "13782": 227, "13784": 227, "13786": 227, "13788": 227, "13790": 227, "13792": 227, "13794": 227, "13796": 227, "13798": 227, "13800": 227, "13802": 227, "13804": 227, "13806": 227, "13808": 227, "13810": 227, "13812": 227, "13814": 227, "13816": 227, "13818": 227, "13820": 227, "13822": 227, "13824": 227, "13826": 227, "13828": 227, "13830": 227, "13832": 227, "13834": 227, "13836": 227, "13838": 227, "13840": 227, "13842": 227, "13844": 227, "13846": 227, "13848": 227, "13850": 227, "13852": 227, "13854": 227, "13856": 227, "13858": 227, "13860": 227, "13862": 227, "13864": 227, "13866": 227, "13868": 227, "13870": 227, "13872": 227, "13874": 227, "13876": 227, "13878": 227, "13880": 227, "13882": 227, "13884": 227, "13886": 227, "13888": 227, "13890": 227, "13892": 227, "13894": 227, "13896": 227, "13898": 227, "13900": 227, "13902": 227, "13904": 227, "13906": 227, "13908": 227, "13910": 227, "13912": 227, "13914": 227, "13916": 227, "13918": 227, "13920": 227, "13922": 227, "13924": 227, "13926": 227, "13928": 227, "13930": 227, "13932": 227, "13934": 227, "13936": 227, "13938": 227, "13940": 227, "13942": 227, "13944": 227, "13946": 227, "13948": 227, "13950": 227, "13952": 227, "13954": 227, "13956": 227, "13958": 227, "13960": [227, 951], "13962": 227, "13964": 227, "13966": 227, "13968": 227, "13970": 227, "13972": 227, "13974": 227, "13976": 227, "13978": 227, "13980": 227, "13982": 227, "13984": 227, "13986": 227, "13988": 227, "13990": 227, "13992": 227, "13994": 227, "13996": 227, "13998": 227, "14000": 227, "14002": 227, "14004": 227, "14006": 227, "14008": 227, "14010": 227, "14012": 227, "14014": 227, "14016": 227, "14018": 227, "14020": 227, "14022": 227, "14024": 227, "14026": 227, "14028": 227, "14030": 227, "14032": 227, "14034": 227, "14036": 227, "14038": 227, "14040": 227, "14042": 227, "14044": 227, "14046": 227, "14048": 227, "14050": 227, "14052": 227, "14054": 227, "14056": 227, "14058": 227, "14060": 227, "14062": 227, "14064": 227, "14066": 227, "14068": 227, "14070": 227, "14072": 227, "14074": 227, "14076": 227, "14078": 227, "14080": 227, "14082": 227, "14084": 227, "14086": 227, "14088": 227, "14090": 227, "14092": 227, "14094": 227, "14096": 227, "14098": 227, "14100": 227, "14102": 227, "14104": 227, "14106": 227, "14108": 227, "14110": 227, "14112": 227, "14114": 227, "14116": 227, "14118": 227, "14120": 227, "14122": 227, "14124": 227, "14126": 227, "14128": 227, "14130": 227, "14132": 227, "14134": 227, "14136": 227, "14138": 227, "14140": 227, "14142": 227, "14144": 227, "14146": 227, "14148": 227, "14150": 227, "14152": 227, "14154": 227, "14156": 227, "14158": 227, "14160": 227, "14162": 227, "14164": 227, "14166": 227, "14168": 227, "14170": 227, "14172": 227, "14174": 227, "14176": 227, "14178": 227, "14180": 227, "14182": 227, "14184": 227, "14186": 227, "14188": 227, "14190": 227, "14192": 227, "14194": 227, "14196": 227, "14198": 227, "14200": 227, "14202": 227, "14204": 227, "14206": 227, "14208": 227, "14210": 227, "14212": 227, "14214": 227, "14216": 227, "14218": 227, "14220": 227, "14222": 227, "14224": 227, "14226": 227, "14228": 227, "14230": 227, "14232": 227, "14234": 227, "14236": 227, "14238": 227, "14240": 227, "14242": 227, "14244": 227, "14246": 227, "14248": 227, "14250": 227, "14252": 227, "14254": 227, "14256": 227, "14258": 227, "14260": 227, "14262": 227, "14264": 227, "14266": 227, "14268": 227, "14270": 227, "14272": 227, "14274": 227, "14276": 227, "14278": 227, "14280": 227, "14282": 227, "14284": 227, "14286": 227, "14288": 227, "14290": 227, "14292": 227, "14294": 227, "14296": 227, "14298": 227, "14300": 227, "14302": 227, "14304": 227, "14306": 227, "14308": 227, "14310": 227, "14312": 227, "14314": 227, "14316": 227, "14318": 227, "14320": 227, "14322": 227, "14324": 227, "14326": 227, "14328": 227, "14330": 227, "14332": 227, "14334": 227, "14336": 227, "14338": 227, "14340": 227, "14342": 227, "14344": 227, "14346": 227, "14348": 227, "14350": 227, "14352": 227, "14354": 227, "14356": 227, "14358": 227, "14360": 227, "14362": 227, "14364": 227, "14366": 227, "14368": 227, "14370": 227, "14372": 227, "14374": 227, "14376": 227, "14378": 227, "14380": 227, "14382": 227, "14384": 227, "14388": 227, "14390": 227, "14392": 227, "14394": 227, "14396": 227, "14398": 227, "14400": 227, "14402": 227, "14404": 227, "14406": 227, "14408": 227, "14410": 227, "14412": 227, "14414": 227, "14416": 227, "14418": 227, "14420": 227, "14422": 227, "14424": 227, "14426": 227, "14428": 227, "14430": 227, "14432": 227, "14434": 227, "14436": 227, "14438": 227, "14440": 227, "14442": 227, "14444": 227, "14446": 227, "14448": 227, "14450": 227, "14452": 227, "14454": 227, "14456": 227, "14458": 227, "14460": 227, "14462": 227, "14464": 227, "14466": 227, "14468": 227, "14470": 227, "14472": 227, "14474": 227, "14476": 227, "14478": 227, "14480": 227, "14482": 227, "14484": 227, "14486": 227, "14488": 227, "14490": 227, "14492": 227, "14494": 227, "14496": 227, "14498": 227, "14500": 227, "14502": 227, "14504": 227, "14506": 227, "14508": 227, "14510": 227, "14512": 227, "14514": 227, "14516": 227, "14518": 227, "14520": 227, "14522": 227, "14524": 227, "14526": 227, "14528": 227, "14530": 227, "14532": 227, "14534": 227, "14536": 227, "14538": 227, "14540": 227, "14542": 227, "14544": 227, "14546": 227, "14548": 227, "14550": 227, "14552": 227, "14554": 227, "14556": 227, "14558": 227, "14560": 227, "14562": 227, "14564": 227, "14566": 227, "14568": 227, "14570": 227, "14572": 227, "14574": 227, "14576": 227, "14578": 227, "14580": 227, "14582": 227, "14584": 227, "14586": 227, "14588": 227, "14590": 227, "14592": 227, "14594": 227, "14596": 227, "14598": 227, "14600": 227, "14602": 227, "14604": 227, "14606": 227, "14608": 227, "14610": 227, "14612": 227, "14614": 227, "14616": 227, "14618": 227, "14620": 227, "14622": 227, "14624": 227, "14626": 227, "14628": 227, "14630": 227, "14632": 227, "14634": 227, "14636": 227, "14638": 227, "14640": 227, "14642": 227, "14644": 227, "14646": 227, "14648": 227, "14650": 227, "14652": 227, "14654": 227, "14656": 227, "14658": 227, "14660": 227, "14662": 227, "14664": 227, "14666": 227, "14668": 227, "14670": 227, "14672": 227, "14674": 227, "14676": 227, "14678": 227, "14680": 227, "14682": 227, "14684": 227, "14686": 227, "14688": 227, "14690": 227, "14692": 227, "14694": 227, "14696": 227, "14698": 227, "14700": 227, "14702": 227, "14704": 227, "14706": 227, "14708": 227, "14710": 227, "14712": 227, "14714": 227, "14716": 227, "14718": 227, "14720": 227, "14722": 227, "14724": 227, "14726": 227, "14728": 227, "14730": 227, "14732": 227, "14734": 227, "14736": 227, "14738": 227, "14740": 227, "14742": 227, "14744": 227, "14746": 227, "14748": 227, "14750": 227, "14752": 227, "14754": 227, "14756": 227, "14758": 227, "14760": 227, "14762": 227, "14764": 227, "14766": 227, "14768": 227, "14770": 227, "14772": 227, "14774": 227, "14776": 227, "14778": 227, "14780": 227, "14782": 227, "14784": 227, "14786": 227, "14788": 227, "14790": 227, "14792": 227, "14794": 227, "14796": 227, "14798": 227, "14800": 227, "14802": 227, "14804": 227, "14806": 227, "14808": 227, "14810": 227, "14812": 227, "14814": 227, "14816": 227, "14818": 227, "14820": 227, "14822": 227, "14824": 227, "14826": 227, "14828": 227, "14830": 227, "14832": 227, "14834": 227, "14836": 227, "14838": 227, "14840": 227, "14842": 227, "14844": 227, "14846": 227, "14848": 227, "14850": 227, "14852": 227, "14854": 227, "14856": 227, "14858": 227, "14860": 227, "14862": 227, "14864": 227, "14866": 227, "14868": 227, "14870": 227, "14872": 227, "14874": 227, "14876": 227, "14878": 227, "14880": 227, "14882": [227, 566], "14884": 227, "14886": 227, "14888": 227, "14890": 227, "14892": 227, "14894": 227, "14896": 227, "14898": 227, "14900": 227, "14902": 227, "14904": 227, "14906": 227, "14908": 227, "14910": 227, "14912": 227, "14914": 227, "14916": 227, "14918": 227, "14920": 227, "14922": 227, "14924": 227, "14926": 227, "14928": 227, "14930": 227, "14932": 227, "14934": 227, "14936": 227, "14938": 227, "14940": 227, "14942": 227, "14944": 227, "14946": 227, "14948": 227, "14950": 227, "14952": 227, "14954": 227, "14956": 227, "14958": 227, "14960": 227, "14962": 227, "14964": 227, "14966": 227, "14968": 227, "14970": 227, "14972": 227, "14974": 227, "14976": 227, "14978": 227, "14980": 227, "14982": 227, "14984": 227, "14986": 227, "14988": 227, "14990": [227, 276], "14992": 227, "14994": 227, "14996": 227, "14998": 227, "15002": 227, "15004": 227, "15006": 227, "15008": 227, "15010": 227, "15012": 227, "15014": 227, "15016": 227, "15018": 227, "15020": 227, "15022": 227, "15024": 227, "15026": 227, "15028": 227, "15030": 227, "15032": 227, "15034": 227, "15036": 227, "15038": 227, "15040": 227, "15042": 227, "15044": 227, "15046": 227, "15048": 227, "15050": 227, "15052": 227, "15054": 227, "15056": 227, "15058": 227, "15060": 227, "15062": 227, "15064": 227, "15066": 227, "15068": 227, "15070": 227, "15072": 227, "15074": 227, "15076": 227, "15078": 227, "15080": 227, "15082": 227, "15084": 227, "15086": 227, "15088": 227, "15090": 227, "15092": 227, "15094": 227, "15096": 227, "15098": 227, "15100": 227, "15102": 227, "15104": 227, "15106": 227, "15108": 227, "15110": 227, "15112": 227, "15114": 227, "15116": 227, "15118": 227, "15120": 227, "15122": 227, "15124": 227, "15126": 227, "15128": 227, "15130": 227, "15132": 227, "15134": 227, "15136": 227, "15138": 227, "15140": 227, "15142": 227, "15144": 227, "15146": 227, "15148": 227, "15150": 227, "15152": 227, "15154": 227, "15156": 227, "15158": 227, "15160": 227, "15162": 227, "15164": 227, "15166": 227, "15168": 227, "15170": 227, "15172": 227, "15174": 227, "15176": 227, "15178": 227, "15180": 227, "15182": 227, "15184": 227, "15186": 227, "15188": 227, "15190": 227, "15192": 227, "15194": 227, "15196": 227, "15198": 227, "15200": 227, "15202": 227, "15204": 227, "15206": 227, "15208": 227, "15210": 227, "15212": 227, "15214": 227, "15216": 227, "15218": 227, "15220": 227, "15222": 227, "15224": 227, "15226": 227, "15228": 227, "15230": 227, "15232": 227, "15234": 227, "15236": 227, "15238": 227, "15240": 227, "15242": 227, "15244": [227, 996], "15246": 227, "15248": 227, "15250": 227, "15252": 227, "15254": 227, "15256": 227, "15258": 227, "15260": 227, "15262": 227, "15264": 227, "15266": 227, "15268": 227, "15270": 227, "15272": 227, "15274": 227, "15276": 227, "15278": 227, "15280": 227, "15282": 227, "15284": 227, "15286": 227, "15288": 227, "15290": 227, "15292": 227, "15294": 227, "15296": 227, "15298": 227, "15300": 227, "15302": 227, "15304": 227, "15306": 227, "15308": 227, "15310": 227, "15312": 227, "15314": 227, "15316": 227, "15318": 227, "15320": 227, "15322": 227, "15324": 227, "15326": 227, "15328": 227, "15330": 227, "15332": 227, "15334": 227, "15336": 227, "15338": 227, "15340": 227, "15342": 227, "15344": 227, "15346": 227, "15348": 227, "15350": 227, "15352": 227, "15354": 227, "15356": 227, "15358": 227, "15360": 227, "15362": 227, "15364": 227, "15366": 227, "15368": 227, "15370": 227, "15372": 227, "15374": 227, "15376": 227, "15378": 227, "15380": 227, "15382": 227, "15384": 227, "15386": 227, "15388": 227, "15390": 227, "15392": 227, "15394": 227, "15396": 227, "15398": 227, "15400": 227, "15402": 227, "15404": 227, "15406": 227, "15408": 227, "15410": 227, "15412": 227, "15414": 227, "15416": 227, "15418": 227, "15420": 227, "15422": 227, "15424": 227, "15426": 227, "15428": 227, "15430": 227, "15432": 227, "15434": 227, "15436": 227, "15438": 227, "15440": 227, "15442": 227, "15444": 227, "15446": 227, "15448": 227, "15450": 227, "15452": 227, "15454": 227, "15456": 227, "15458": 227, "15460": 227, "15462": 227, "15464": 227, "15466": 227, "15468": 227, "15470": 227, "15472": 227, "15474": 227, "15476": 227, "15478": 227, "15480": 227, "15482": 227, "15484": 227, "15486": 227, "15488": 227, "15490": 227, "15492": 227, "15494": 227, "15496": 227, "15498": 227, "15500": 227, "15502": 227, "15504": 227, "15506": 227, "15508": 227, "15510": 227, "15512": 227, "15514": 227, "15516": 227, "15518": 227, "15520": 227, "15522": 227, "15524": 227, "15526": 227, "15528": 227, "15530": 227, "15532": 227, "15534": 227, "15536": 227, "15538": 227, "15540": 227, "15542": 227, "15544": 227, "15546": 227, "15548": 227, "15550": 227, "15552": 227, "15554": 227, "15556": 227, "15558": 227, "15560": 227, "15562": 227, "15564": 227, "15566": 227, "15568": 227, "15570": 227, "15572": 227, "15574": 227, "15576": 227, "15578": 227, "15580": 227, "15582": 227, "15584": 227, "15586": 227, "15588": 227, "15590": 227, "15592": 227, "15594": 227, "15596": 227, "15598": 227, "15600": 227, "15602": 227, "15604": 227, "15606": 227, "15608": 227, "15610": 227, "15612": 227, "15614": 227, "15616": 227, "15618": 227, "15620": 227, "15622": 227, "15624": 227, "15626": 227, "15628": 227, "15630": 227, "15632": 227, "15634": 227, "15636": 227, "15638": 227, "15640": 227, "15642": 227, "15644": 227, "15646": 227, "15648": 227, "15650": 227, "15652": 227, "15654": 227, "15656": 227, "15658": 227, "15660": 227, "15662": 227, "15664": 227, "15666": 227, "15668": 227, "15670": 227, "15672": 227, "15674": 227, "15676": 227, "15678": 227, "15680": 227, "15682": 227, "15684": 227, "15686": 227, "15688": 227, "15690": 227, "15692": 227, "15694": 227, "15696": 227, "15698": 227, "15700": 227, "15702": 227, "15704": 227, "15706": 227, "15708": 227, "15710": 227, "15712": 227, "15714": 227, "15716": 227, "15718": 227, "15720": 227, "15722": 227, "15724": 227, "15726": 227, "15728": 227, "15730": 227, "15732": 227, "15734": 227, "15736": 227, "15738": 227, "15740": 227, "15742": 227, "15744": 227, "15746": 227, "15748": 227, "15750": 227, "15752": 227, "15754": 227, "15756": 227, "15758": 227, "15760": 227, "15762": 227, "15764": 227, "15766": 227, "15768": 227, "15770": 227, "15772": 227, "15774": 227, "15776": 227, "15778": 227, "15780": 227, "15782": 227, "15784": 227, "15786": 227, "15788": 227, "15790": 227, "15792": 227, "15794": 227, "15796": 227, "15798": 227, "15800": 227, "15802": 227, "15804": 227, "15806": 227, "15808": 227, "15810": 227, "15812": 227, "15814": 227, "15816": 227, "15818": 227, "15820": 227, "15822": 227, "15824": 227, "15826": 227, "15828": 227, "15830": 227, "15832": 227, "15834": 227, "15836": 227, "15838": 227, "15840": 227, "15842": 227, "15844": 227, "15846": 227, "15848": 227, "15850": 227, "15852": 227, "15854": 227, "15856": 227, "15858": 227, "15860": 227, "15862": 227, "15864": 227, "15866": 227, "15868": 227, "15870": 227, "15872": 227, "15874": 227, "15876": 227, "15878": 227, "15880": 227, "15882": 227, "15884": 227, "15886": 227, "15888": 227, "15890": 227, "15892": 227, "15894": 227, "15896": 227, "15898": 227, "15900": 227, "15902": 227, "15904": 227, "15906": 227, "15908": 227, "15910": 227, "15912": 227, "15914": 227, "15916": 227, "15918": 227, "15920": 227, "15922": 227, "15924": 227, "15926": 227, "15928": 227, "15930": 227, "15932": 227, "15934": 227, "15936": 227, "15938": 227, "15940": 227, "15942": 227, "15944": 227, "15946": 227, "15948": 227, "15950": 227, "15952": 227, "15954": 227, "15956": 227, "15958": 227, "15960": 227, "15962": 227, "15964": 227, "15966": 227, "15968": 227, "15970": 227, "15972": 227, "15974": 227, "15976": 227, "15978": 227, "15980": 227, "15982": 227, "15984": 227, "15986": 227, "15988": 227, "15990": 227, "15992": 227, "15994": 227, "15996": 227, "15998": 227, "16000": 227, "16002": 227, "16004": 227, "16006": 227, "16008": 227, "16010": 227, "16012": 227, "16014": 227, "16016": 227, "16018": 227, "16020": 227, "16022": 227, "16024": 227, "16026": 227, "16028": 227, "16030": 227, "16032": 227, "16034": 227, "16036": 227, "16038": 227, "16040": 227, "16042": 227, "16044": 227, "16046": 227, "16048": 227, "16050": 227, "16052": 227, "16054": 227, "16056": 227, "16058": 227, "16060": 227, "16062": 227, "16064": 227, "16066": 227, "16068": 227, "16070": 227, "16072": 227, "16074": 227, "16076": 227, "16078": 227, "16080": 227, "16082": 227, "16084": 227, "16086": 227, "16088": 227, "16090": 227, "16092": 227, "16094": 227, "16096": 227, "16098": 227, "16100": 227, "16102": 227, "16104": 227, "16106": 227, "16108": 227, "16110": 227, "16112": 227, "16114": 227, "16116": 227, "16118": 227, "16120": 227, "16122": 227, "16124": 227, "16126": 227, "16128": 227, "16130": 227, "16132": 227, "16134": 227, "16136": 227, "16138": 227, "16140": 227, "16142": 227, "16144": 227, "16146": 227, "16148": 227, "16150": 227, "16152": 227, "16154": 227, "16156": 227, "16158": 227, "16160": 227, "16162": 227, "16164": 227, "16166": 227, "16168": 227, "16170": 227, "16172": 227, "16174": 227, "16176": 227, "16178": 227, "16180": 227, "16182": 227, "16184": 227, "16186": 227, "16188": 227, "16190": 227, "16192": 227, "16194": 227, "16196": 227, "16198": 227, "16200": 227, "16202": 227, "16204": 227, "16206": 227, "16208": 227, "16210": 227, "16212": 227, "16214": 227, "16216": 227, "16218": 227, "16220": 227, "16222": 227, "16224": 227, "16226": 227, "16228": 227, "16230": 227, "16232": 227, "16234": 227, "16236": 227, "16238": 227, "16240": 227, "16242": 227, "16244": 227, "16246": 227, "16248": 227, "16250": 227, "16252": 227, "16254": 227, "16256": 227, "16258": 227, "16260": 227, "16262": 227, "16264": 227, "16266": 227, "16268": 227, "16270": 227, "16272": 227, "16274": 227, "16276": 227, "16278": 227, "16280": 227, "16282": 227, "16284": 227, "16286": 227, "16288": 227, "16290": 227, "16292": 227, "16294": 227, "16296": 227, "16298": 227, "16300": 227, "16302": 227, "16304": 227, "16306": 227, "16308": 227, "16310": 227, "16312": 227, "16314": 227, "16316": 227, "16318": 227, "16320": 227, "16322": 227, "16324": 227, "16326": 227, "16328": 227, "16330": 227, "16332": 227, "16334": 227, "16336": 227, "16338": 227, "16340": 227, "16342": 227, "16344": 227, "16346": 227, "16348": 227, "16350": 227, "16352": 227, "16354": 227, "16356": 227, "16358": 227, "16360": 227, "16362": 227, "16364": 227, "16366": 227, "16368": 227, "16370": 227, "16372": 227, "16374": 227, "16376": 227, "16378": 227, "16380": 227, "16382": 227, "16386": 227, "16388": 227, "16390": 227, "16392": 227, "16394": 227, "16396": 227, "16398": 227, "16400": 227, "16402": 227, "16404": 227, "16406": 227, "16408": 227, "16410": 227, "16412": 227, "16414": 227, "16416": 227, "16418": 227, "16420": 227, "16422": 227, "16424": 227, "16426": 227, "16428": 227, "16430": 227, "16432": 227, "16434": 227, "16436": 227, "16438": 227, "16440": 227, "16442": 227, "16444": 227, "16446": 227, "16448": 227, "16450": 227, "16452": 227, "16454": 227, "16456": 227, "16458": 227, "16460": 227, "16462": 227, "16464": 227, "16466": 227, "16468": 227, "16470": 227, "16472": 227, "16474": 227, "16476": 227, "16478": 227, "16480": 227, "16482": 227, "16484": 227, "16486": 227, "16488": 227, "16490": 227, "16492": 227, "16494": 227, "16496": 227, "16498": 227, "16500": 227, "16502": 227, "16504": 227, "16506": 227, "16508": 227, "16510": 227, "16512": 227, "16514": 227, "16516": 227, "16518": 227, "16520": 227, "16522": 227, "16524": 227, "16526": 227, "16528": 227, "16530": 227, "16532": 227, "16534": 227, "16536": 227, "16538": 227, "16540": 227, "16542": 227, "16544": 227, "16546": 227, "16548": 227, "16550": 227, "16552": 227, "16554": 227, "16556": 227, "16558": 227, "16560": 227, "16562": 227, "16564": 227, "16566": 227, "16568": 227, "16570": 227, "16572": 227, "16574": 227, "16576": 227, "16578": 227, "16580": 227, "16582": 227, "16584": 227, "16586": 227, "16588": 227, "16590": 227, "16592": 227, "16594": 227, "16596": 227, "16598": 227, "16600": 227, "16602": 227, "16604": 227, "16606": 227, "16608": 227, "16610": 227, "16612": 227, "16614": 227, "16616": 227, "16618": 227, "16620": 227, "16622": 227, "16624": 227, "16626": 227, "16628": 227, "16630": 227, "16632": 227, "16634": 227, "16636": 227, "16638": 227, "16640": 227, "16642": 227, "16644": 227, "16646": 227, "16648": 227, "16650": 227, "16652": 227, "16654": 227, "16656": 227, "16658": 227, "16660": 227, "16662": 227, "16664": 227, "16666": 227, "16668": 227, "16670": 227, "16672": 227, "16674": 227, "16676": 227, "16678": 227, "16680": 227, "16682": 227, "16684": 227, "16686": 227, "16688": 227, "16690": 227, "16692": 227, "16694": 227, "16696": 227, "16698": 227, "16700": 227, "16702": 227, "16704": 227, "16706": 227, "16708": 227, "16710": 227, "16712": 227, "16714": 227, "16716": 227, "16718": 227, "16720": 227, "16722": 227, "16724": 227, "16726": 227, "16728": 227, "16730": 227, "16732": 227, "16734": 227, "16736": 227, "16738": 227, "16740": 227, "16742": 227, "16744": 227, "16746": 227, "16748": 227, "16750": 227, "16752": 227, "16754": 227, "16756": 227, "16758": 227, "16760": 227, "16762": 227, "16764": 227, "16766": 227, "16768": 227, "16770": 227, "16772": 227, "16774": 227, "16776": 227, "16778": 227, "16780": 227, "16782": 227, "16784": 227, "16786": 227, "16788": 227, "16790": 227, "16792": 227, "16794": 227, "16796": 227, "16798": 227, "16800": 227, "16802": 227, "16804": 227, "16806": 227, "16808": 227, "16810": 227, "16812": 227, "16814": 227, "16816": 227, "16818": 227, "16820": 227, "16822": 227, "16824": 227, "16826": 227, "16828": 227, "16830": 227, "16832": 227, "16834": 227, "16836": 227, "16838": 227, "16840": 227, "16842": 227, "16844": 227, "16846": 227, "16848": 227, "16850": 227, "16852": 227, "16854": 227, "16856": 227, "16858": 227, "16860": 227, "16862": 227, "16864": 227, "16866": 227, "16868": 227, "16870": 227, "16872": 227, "16874": 227, "16876": 227, "16878": 227, "16880": 227, "16882": 227, "16884": 227, "16886": 227, "16888": 227, "16890": 227, "16892": 227, "16894": 227, "16896": 227, "16898": 227, "16900": 227, "16902": 227, "16904": 227, "16906": 227, "16908": 227, "16910": 227, "16912": 227, "16914": 227, "16916": 227, "16918": 227, "16920": 227, "16922": 227, "16924": 227, "16926": 227, "16928": 227, "16930": 227, "16932": 227, "16934": 227, "16936": 227, "16938": 227, "16940": 227, "16942": 227, "16944": 227, "16946": 227, "16948": 227, "16950": 227, "16952": 227, "16954": 227, "16956": 227, "16958": 227, "16960": 227, "16962": 227, "16964": 227, "16966": 227, "16968": 227, "16970": 227, "16972": 227, "16974": 227, "16976": 227, "16978": 227, "16980": 227, "16982": 227, "16984": 227, "16986": 227, "16988": 227, "16990": 227, "16992": 227, "16994": 227, "16996": 227, "16998": 227, "17000": 227, "17002": 227, "17004": 227, "17006": 227, "17008": 227, "17010": 227, "17012": 227, "17014": 227, "17016": 227, "17018": 227, "17020": 227, "17022": 227, "17024": 227, "17026": 227, "17028": 227, "17030": 227, "17032": 227, "17034": 227, "17036": 227, "17038": 227, "17040": 227, "17042": 227, "17044": 227, "17046": 227, "17048": 227, "17050": 227, "17052": 227, "17054": 227, "17056": 227, "17058": 227, "17060": 227, "17062": 227, "17064": 227, "17066": 227, "17068": 227, "17070": 227, "17072": 227, "17074": 227, "17076": 227, "17078": 227, "17080": 227, "17082": 227, "17084": 227, "17086": 227, "17088": 227, "17090": 227, "17092": 227, "17094": 227, "17096": 227, "17098": 227, "17100": 227, "17102": 227, "17104": 227, "17106": 227, "17108": 227, "17110": 227, "17112": 227, "17114": 227, "17116": 227, "17118": 227, "17120": 227, "17122": 227, "17124": 227, "17126": [227, 276], "17128": 227, "17130": 227, "17132": 227, "17134": 227, "17136": 227, "17138": 227, "17140": 227, "17142": 227, "17144": 227, "17146": 227, "17148": 227, "17150": 227, "17152": 227, "17154": 227, "17156": 227, "17158": 227, "17160": 227, "17162": 227, "17164": 227, "17166": 227, "17168": 227, "17170": 227, "17172": 227, "17174": 227, "17176": 227, "17178": 227, "17180": 227, "17182": 227, "17184": 227, "17186": 227, "17188": 227, "17190": 227, "17192": 227, "17194": 227, "17196": 227, "17198": 227, "17200": 227, "17202": 227, "17204": 227, "17206": 227, "17208": 227, "17210": 227, "17212": 227, "17214": 227, "17216": 227, "17218": 227, "17220": 227, "17222": 227, "17224": 227, "17226": 227, "17228": 227, "17230": 227, "17232": 227, "17234": 227, "17236": 227, "17238": 227, "17240": 227, "17242": 227, "17244": 227, "17246": 227, "17248": 227, "17250": 227, "17252": 227, "17254": 227, "17256": 227, "17258": 227, "17260": 227, "17262": 227, "17264": 227, "17266": 227, "17268": 227, "17270": 227, "17272": 227, "17274": 227, "17276": 227, "17278": 227, "17280": 227, "17282": 227, "17284": 227, "17286": 227, "17288": 227, "17290": 227, "17292": 227, "17294": 227, "17296": 227, "17298": 227, "17300": 227, "17302": 227, "17304": 227, "17306": 227, "17308": 227, "17310": 227, "17312": 227, "17314": 227, "17316": 227, "17318": 227, "17320": 227, "17322": 227, "17324": 227, "17326": 227, "17328": 227, "17330": 227, "17332": 227, "17334": 227, "17336": 227, "17338": 227, "17340": 227, "17342": 227, "17344": 227, "17346": 227, "17348": 227, "17350": 227, "17352": 227, "17354": 227, "17356": 227, "17358": 227, "17360": 227, "17362": 227, "17364": 227, "17366": 227, "17368": 227, "17370": 227, "17372": 227, "17374": 227, "17376": 227, "17378": 227, "17380": 227, "17382": 227, "17384": 227, "17386": 227, "17388": 227, "17390": 227, "17392": 227, "17394": 227, "17396": 227, "17398": 227, "17400": 227, "17402": 227, "17404": 227, "17406": 227, "17408": 227, "17410": 227, "17412": 227, "17414": 227, "17416": 227, "17418": 227, "17420": 227, "17422": 227, "17424": 227, "17426": 227, "17428": 227, "17430": 227, "17432": 227, "17434": 227, "17436": 227, "17438": 227, "17440": 227, "17442": 227, "17444": 227, "17446": 227, "17448": 227, "17450": 227, "17452": 227, "17454": 227, "17456": 227, "17458": 227, "17460": 227, "17462": 227, "17464": 227, "17466": 227, "17468": 227, "17470": 227, "17472": 227, "17474": 227, "17476": 227, "17478": 227, "17480": 227, "17482": 227, "17484": 227, "17486": 227, "17488": 227, "17490": 227, "17492": 227, "17494": 227, "17496": 227, "17498": 227, "17500": 227, "17502": 227, "17504": 227, "17506": 227, "17508": 227, "17510": 227, "17512": 227, "17514": 227, "17516": 227, "17518": 227, "17520": 227, "17522": 227, "17524": 227, "17526": 227, "17528": 227, "17530": 227, "17532": 227, "17534": 227, "17536": 227, "17538": 227, "17540": 227, "17542": 227, "17544": 227, "17546": 227, "17548": 227, "17550": 227, "17552": 227, "17554": 227, "17556": 227, "17558": 227, "17560": 227, "17562": 227, "17564": 227, "17566": 227, "17568": 227, "17570": 227, "17572": 227, "17574": 227, "17576": 227, "17578": 227, "17580": 227, "17582": 227, "17584": 227, "17586": 227, "17588": 227, "17590": 227, "17592": 227, "17594": 227, "17596": 227, "17598": 227, "17600": 227, "17602": 227, "17604": 227, "17606": 227, "17608": 227, "17610": 227, "17612": 227, "17614": 227, "17616": 227, "17618": 227, "17620": 227, "17622": 227, "17624": 227, "17626": 227, "17628": 227, "17630": 227, "17632": 227, "17634": 227, "17636": 227, "17638": 227, "17640": 227, "17642": 227, "17644": 227, "17646": 227, "17648": 227, "17650": 227, "17652": 227, "17654": 227, "17656": 227, "17658": 227, "17660": 227, "17662": 227, "17664": 227, "17666": 227, "17668": 227, "17670": 227, "17672": 227, "17674": 227, "17676": 227, "17678": 227, "17680": 227, "17682": 227, "17684": 227, "17686": 227, "17688": 227, "17690": 227, "17692": 227, "17694": 227, "17696": 227, "17698": 227, "17700": 227, "17702": 227, "17704": 227, "17706": 227, "17708": 227, "17710": 227, "17712": 227, "17714": 227, "17716": 227, "17718": 227, "17720": 227, "17722": 227, "17724": 227, "17726": 227, "17728": 227, "17730": 227, "17732": 227, "17734": 227, "17736": 227, "17738": 227, "17740": 227, "17742": 227, "17744": 227, "17746": 227, "17748": 227, "17750": 227, "17752": 227, "17754": 227, "17756": 227, "17758": 227, "17760": 227, "17762": 227, "17764": 227, "17766": 227, "17768": 227, "17770": 227, "17772": 227, "17774": 227, "17776": 227, "17778": 227, "17780": 227, "17782": 227, "17784": 227, "17786": 227, "17788": 227, "17790": 227, "17792": 227, "17794": 227, "17796": 227, "17798": 227, "17800": 227, "17802": 227, "17804": 227, "17806": 227, "17808": 227, "17810": 227, "17812": 227, "17814": 227, "17816": 227, "17818": 227, "17820": 227, "17822": 227, "17824": 227, "17826": 227, "17828": 227, "17830": 227, "17832": 227, "17834": 227, "17836": 227, "17838": 227, "17840": 227, "17842": 227, "17844": 227, "17846": 227, "17848": 227, "17850": 227, "17852": 227, "17854": 227, "17856": 227, "17858": 227, "17860": 227, "17862": 227, "17864": 227, "17866": 227, "17868": 227, "17870": 227, "17872": 227, "17874": 227, "17876": 227, "17878": 227, "17880": 227, "17882": 227, "17884": 227, "17886": 227, "17888": 227, "17890": 227, "17892": 227, "17894": 227, "17896": 227, "17898": 227, "17900": 227, "17902": 227, "17904": 227, "17906": 227, "17908": 227, "17910": 227, "17912": 227, "17914": 227, "17916": 227, "17918": 227, "17920": 227, "17922": 227, "17924": 227, "17926": 227, "17928": 227, "17930": 227, "17932": 227, "17934": 227, "17936": 227, "17938": 227, "17940": 227, "17942": 227, "17944": 227, "17946": 227, "17948": 227, "17950": 227, "17952": 227, "17954": 227, "17956": 227, "17958": 227, "17960": 227, "17962": 227, "17964": 227, "17966": 227, "17968": 227, "17970": 227, "17972": 227, "17974": 227, "17976": 227, "17978": 227, "17980": 227, "17982": 227, "17984": 227, "17986": 227, "17988": 227, "17990": 227, "17992": 227, "17994": 227, "17996": 227, "17998": 227, "18000": [227, 914], "18002": 227, "18004": 227, "18006": 227, "18008": 227, "18010": 227, "18012": 227, "18014": 227, "18016": 227, "18018": 227, "18020": 227, "18022": 227, "18024": 227, "18026": 227, "18028": 227, "18030": 227, "18032": 227, "18034": 227, "18036": 227, "18038": 227, "18040": 227, "18042": 227, "18044": 227, "18046": 227, "18048": 227, "18050": 227, "18052": 227, "18054": 227, "18056": 227, "18058": 227, "18060": 227, "18062": 227, "18064": 227, "18066": 227, "18068": 227, "18070": 227, "18072": 227, "18074": 227, "18076": 227, "18078": 227, "18080": 227, "18082": 227, "18084": 227, "18086": 227, "18088": 227, "18090": 227, "18092": 227, "18094": 227, "18096": 227, "18098": 227, "18100": 227, "18102": 227, "18104": 227, "18106": 227, "18108": 227, "18110": 227, "18112": 227, "18114": 227, "18116": 227, "18118": 227, "18120": 227, "18122": 227, "18124": 227, "18126": 227, "18128": 227, "18130": 227, "18132": 227, "18134": 227, "18136": 227, "18138": 227, "18140": 227, "18142": 227, "18144": 227, "18146": 227, "18148": 227, "18150": 227, "18152": 227, "18154": 227, "18156": 227, "18158": 227, "18160": 227, "18162": 227, "18164": 227, "18166": 227, "18168": 227, "18170": 227, "18172": 227, "18174": 227, "18176": 227, "18178": 227, "18180": 227, "18182": 227, "18184": 227, "18186": 227, "18188": 227, "18190": 227, "18192": 227, "18194": 227, "18196": 227, "18198": 227, "18200": 227, "18202": 227, "18204": 227, "18206": 227, "18208": 227, "18210": 227, "18212": 227, "18214": 227, "18216": 227, "18218": 227, "18220": 227, "18222": 227, "18224": 227, "18226": 227, "18228": 227, "18230": 227, "18232": 227, "18234": 227, "18236": 227, "18238": 227, "18240": 227, "18242": 227, "18244": 227, "18246": 227, "18248": 227, "18250": 227, "18252": 227, "18254": 227, "18256": 227, "18258": 227, "18260": 227, "18262": 227, "18264": 227, "18266": 227, "18268": 227, "18270": 227, "18272": 227, "18274": 227, "18276": 227, "18278": 227, "18280": 227, "18282": 227, "18284": 227, "18286": 227, "18288": 227, "18290": 227, "18292": 227, "18294": 227, "18296": 227, "18298": 227, "18300": 227, "18302": 227, "18304": 227, "18306": 227, "18308": 227, "18310": 227, "18312": 227, "18314": 227, "18316": 227, "18318": 227, "18320": 227, "18322": 227, "18324": 227, "18326": 227, "18328": 227, "18330": 227, "18332": 227, "18334": 227, "18336": 227, "18338": 227, "18340": 227, "18342": 227, "18344": 227, "18346": 227, "18348": 227, "18350": 227, "18352": 227, "18354": 227, "18356": 227, "18358": 227, "18360": 227, "18362": 227, "18364": 227, "18366": 227, "18368": 227, "18370": 227, "18372": 227, "18374": 227, "18376": 227, "18378": 227, "18380": 227, "18382": 227, "18384": [227, 982], "18386": 227, "18388": 227, "18390": 227, "18392": 227, "18394": 227, "18396": 227, "18398": 227, "18400": 227, "18402": 227, "18404": 227, "18406": 227, "18408": 227, "18410": 227, "18412": 227, "18414": 227, "18416": 227, "18418": 227, "18420": 227, "18422": 227, "18424": 227, "18426": 227, "18428": 227, "18430": 227, "18432": 227, "18434": 227, "18436": 227, "18438": 227, "18440": 227, "18442": 227, "18444": 227, "18446": 227, "18448": 227, "18450": 227, "18452": 227, "18454": 227, "18456": 227, "18458": 227, "18460": 227, "18462": 227, "18464": 227, "18466": 227, "18468": 227, "18470": 227, "18472": 227, "18474": 227, "18476": 227, "18478": 227, "18480": 227, "18482": 227, "18484": 227, "18486": 227, "18488": 227, "18490": 227, "18492": 227, "18494": 227, "18496": 227, "18498": 227, "18500": 227, "18502": 227, "18504": 227, "18506": 227, "18508": 227, "18510": 227, "18512": 227, "18514": 227, "18516": 227, "18518": 227, "18520": 227, "18522": 227, "18524": 227, "18526": 227, "18528": 227, "18530": 227, "18532": 227, "18534": 227, "18536": 227, "18538": 227, "18540": 227, "18542": 227, "18544": 227, "18546": 227, "18548": 227, "18550": 227, "18552": 227, "18554": 227, "18556": 227, "18558": 227, "18560": 227, "18562": 227, "18564": 227, "18566": 227, "18568": 227, "18570": 227, "18572": 227, "18574": 227, "18576": 227, "18578": 227, "18580": 227, "18582": 227, "18584": 227, "18586": 227, "18588": 227, "18590": 227, "18592": 227, "18594": 227, "18596": 227, "18598": 227, "18600": 227, "18602": 227, "18604": 227, "18606": 227, "18608": 227, "18610": 227, "18612": 227, "18614": 227, "18616": 227, "18618": 227, "18620": 227, "18622": 227, "18624": 227, "18626": 227, "18628": 227, "18630": 227, "18632": 227, "18634": 227, "18636": 227, "18638": 227, "18640": 227, "18642": 227, "18644": 227, "18646": 227, "18648": 227, "18650": 227, "18652": 227, "18654": 227, "18656": 227, "18658": 227, "18660": 227, "18662": 227, "18664": 227, "18666": 227, "18668": 227, "18670": 227, "18672": 227, "18674": 227, "18676": 227, "18678": 227, "18680": 227, "18682": 227, "18684": 227, "18686": 227, "18688": 227, "18690": 227, "18692": 227, "18694": 227, "18696": 227, "18698": 227, "18700": 227, "18702": 227, "18704": 227, "18706": 227, "18708": 227, "18710": 227, "18712": 227, "18714": 227, "18716": 227, "18718": 227, "18720": 227, "18722": 227, "18724": 227, "18726": 227, "18728": 227, "18730": 227, "18732": 227, "18734": 227, "18736": 227, "18738": 227, "18740": 227, "18742": 227, "18744": 227, "18746": 227, "18748": 227, "18750": 227, "18752": 227, "18754": 227, "18756": 227, "18758": 227, "18760": 227, "18762": 227, "18764": 227, "18766": 227, "18768": 227, "18770": 227, "18772": 227, "18774": 227, "18776": 227, "18778": 227, "18780": 227, "18782": 227, "18784": 227, "18786": 227, "18788": 227, "18790": 227, "18792": 227, "18794": 227, "18796": 227, "18798": 227, "18800": 227, "18802": 227, "18804": 227, "18806": 227, "18808": 227, "18810": 227, "18812": 227, "18814": 227, "18816": 227, "18818": 227, "18820": 227, "18822": 227, "18824": 227, "18826": 227, "18828": 227, "18830": 227, "18832": 227, "18834": 227, "18836": 227, "18838": 227, "18840": 227, "18842": 227, "18844": 227, "18846": 227, "18848": 227, "18850": 227, "18852": 227, "18854": 227, "18856": 227, "18858": 227, "18860": 227, "18862": 227, "18864": 227, "18866": 227, "18868": 227, "18870": 227, "18872": 227, "18874": 227, "18876": 227, "18878": 227, "18880": 227, "18882": 227, "18884": 227, "18886": 227, "18888": 227, "18890": 227, "18892": 227, "18894": 227, "18896": 227, "18898": 227, "18900": 227, "18902": 227, "18904": 227, "18906": 227, "18908": 227, "18910": 227, "18912": 227, "18914": 227, "18916": 227, "18918": 227, "18920": 227, "18922": 227, "18924": 227, "18926": 227, "18928": 227, "18930": 227, "18932": 227, "18934": 227, "18936": 227, "18938": 227, "18940": 227, "18942": 227, "18944": 227, "18946": 227, "18948": 227, "18950": 227, "18952": 227, "18954": 227, "18956": 227, "18958": 227, "18960": 227, "18962": 227, "18964": 227, "18966": 227, "18968": 227, "18970": 227, "18972": 227, "18974": 227, "18976": 227, "18978": 227, "18980": 227, "18982": 227, "18984": 227, "18986": 227, "18988": 227, "18990": 227, "18992": 227, "18994": 227, "18996": 227, "18998": 227, "19000": 227, "19002": 227, "19004": 227, "19006": 227, "19008": 227, "19010": 227, "19012": 227, "19014": 227, "19016": 227, "19018": 227, "19020": 227, "19022": 227, "19024": 227, "19026": 227, "19028": 227, "19030": 227, "19032": 227, "19034": 227, "19036": 227, "19038": 227, "19040": 227, "19042": 227, "19044": 227, "19046": 227, "19048": 227, "19050": 227, "19052": 227, "19054": 227, "19056": 227, "19058": 227, "19060": 227, "19062": 227, "19064": 227, "19066": 227, "19068": 227, "19070": 227, "19072": 227, "19074": 227, "19076": 227, "19078": 227, "19080": 227, "19082": 227, "19084": 227, "19086": 227, "19088": 227, "19090": 227, "19092": 227, "19094": 227, "19096": 227, "19098": 227, "19100": 227, "19102": 227, "19104": 227, "19106": 227, "19108": 227, "19110": 227, "19112": 227, "19114": 227, "19116": 227, "19118": 227, "19120": 227, "19122": 227, "19124": 227, "19126": 227, "19128": 227, "19130": 227, "19132": 227, "19134": 227, "19136": 227, "19138": 227, "19140": 227, "19142": 227, "19144": 227, "19146": 227, "19148": 227, "19150": 227, "19152": 227, "19154": 227, "19156": 227, "19158": 227, "19160": 227, "19162": 227, "19164": 227, "19166": 227, "19168": 227, "19170": 227, "19172": 227, "19174": 227, "19176": 227, "19178": 227, "19180": 227, "19182": 227, "19184": 227, "19186": 227, "19188": 227, "19190": 227, "19192": 227, "19194": 227, "19196": 227, "19198": 227, "19200": 227, "19202": 227, "19204": 227, "19206": 227, "19208": 227, "19210": 227, "19212": 227, "19214": 227, "19216": 227, "19218": 227, "19220": 227, "19222": 227, "19224": 227, "19226": 227, "19228": 227, "19230": 227, "19232": 227, "19234": 227, "19236": 227, "19238": 227, "19240": 227, "19242": 227, "19244": 227, "19246": 227, "19248": 227, "19250": 227, "19252": 227, "19254": 227, "19256": 227, "19258": 227, "19260": 227, "19262": 227, "19264": 227, "19266": 227, "19268": 227, "19270": 227, "19272": 227, "19274": 227, "19276": 227, "19278": 227, "19280": 227, "19282": 227, "19284": 227, "19286": 227, "19288": 227, "19290": 227, "19292": 227, "19294": 227, "19296": 227, "19298": 227, "19300": 227, "19302": 227, "19304": 227, "19306": 227, "19308": 227, "19310": 227, "19312": 227, "19314": 227, "19316": 227, "19318": 227, "19320": 227, "19322": 227, "19324": 227, "19326": 227, "19328": 227, "19330": 227, "19332": 227, "19334": 227, "19336": 227, "19338": 227, "19340": 227, "19342": 227, "19344": 227, "19346": 227, "19348": 227, "19350": 227, "19352": 227, "19354": 227, "19356": 227, "19358": 227, "19360": 227, "19362": 227, "19364": 227, "19366": 227, "19368": 227, "19370": 227, "19372": 227, "19374": 227, "19376": 227, "19378": 227, "19380": 227, "19382": 227, "19384": 227, "19386": 227, "19388": 227, "19390": 227, "19392": 227, "19394": 227, "19396": 227, "19398": 227, "19400": 227, "19402": 227, "19404": 227, "19406": 227, "19408": 227, "19410": 227, "19412": 227, "19414": 227, "19416": 227, "19418": 227, "19420": 227, "19422": 227, "19424": 227, "19426": 227, "19428": 227, "19430": 227, "19432": 227, "19434": 227, "19436": 227, "19438": 227, "19440": 227, "19442": 227, "19444": 227, "19446": 227, "19448": 227, "19450": 227, "19452": 227, "19454": 227, "19456": 227, "19458": 227, "19460": 227, "19462": 227, "19464": 227, "19466": 227, "19468": 227, "19470": 227, "19472": 227, "19474": 227, "19476": 227, "19478": 227, "19480": 227, "19482": 227, "19484": 227, "19486": 227, "19488": 227, "19490": 227, "19492": 227, "19494": 227, "19496": 227, "19498": 227, "19500": 227, "19502": 227, "19504": 227, "19506": 227, "19508": 227, "19510": 227, "19512": 227, "19514": 227, "19516": 227, "19518": 227, "19520": 227, "19522": 227, "19524": 227, "19526": 227, "19528": 227, "19530": 227, "19532": 227, "19534": 227, "19536": 227, "19538": 227, "19540": 227, "19542": 227, "19544": 227, "19546": 227, "19548": 227, "19550": 227, "19552": 227, "19554": 227, "19556": 227, "19558": 227, "19560": 227, "19562": 227, "19564": 227, "19566": 227, "19568": 227, "19570": 227, "19572": 227, "19574": 227, "19576": 227, "19578": 227, "19580": 227, "19582": 227, "19584": 227, "19586": 227, "19588": 227, "19590": 227, "19592": 227, "19594": 227, "19596": 227, "19598": 227, "19600": 227, "19602": 227, "19604": 227, "19606": 227, "19608": 227, "19610": 227, "19612": 227, "19614": 227, "19616": 227, "19618": 227, "19620": 227, "19622": 227, "19624": 227, "19626": 227, "19628": 227, "19630": 227, "19632": 227, "19634": 227, "19636": 227, "19638": 227, "19640": 227, "19642": 227, "19644": 227, "19646": 227, "19648": 227, "19650": 227, "19652": 227, "19654": 227, "19656": 227, "19658": 227, "19660": 227, "19662": 227, "19664": 227, "19666": 227, "19668": 227, "19670": 227, "19672": 227, "19674": 227, "19676": 227, "19678": 227, "19680": 227, "19682": 227, "19684": 227, "19686": 227, "19688": 227, "19690": 227, "19692": 227, "19694": 227, "19696": 227, "19698": 227, "19700": 227, "19702": 227, "19704": 227, "19706": 227, "19708": 227, "19710": 227, "19712": 227, "19714": 227, "19716": 227, "19718": 227, "19720": 227, "19722": 227, "19724": 227, "19726": 227, "19728": 227, "19730": 227, "19732": 227, "19734": 227, "19736": 227, "19738": 227, "19740": 227, "19742": 227, "19744": 227, "19746": 227, "19748": 227, "19750": 227, "19752": 227, "19754": 227, "19756": 227, "19758": 227, "19760": 227, "19762": 227, "19764": 227, "19766": 227, "19768": 227, "19770": 227, "19772": 227, "19774": 227, "19776": 227, "19778": 227, "19780": 227, "19782": 227, "19784": 227, "19786": 227, "19788": 227, "19790": 227, "19792": 227, "19794": 227, "19796": 227, "19798": 227, "19800": 227, "19802": 227, "19804": 227, "19806": 227, "19808": 227, "19810": 227, "19812": 227, "19814": 227, "19816": 227, "19818": 227, "19820": 227, "19822": 227, "19824": 227, "19826": 227, "19828": 227, "19830": 227, "19832": 227, "19834": 227, "19836": 227, "19838": 227, "19840": 227, "19842": 227, "19844": 227, "19846": 227, "19848": 227, "19850": 227, "19852": 227, "19854": 227, "19856": 227, "19858": 227, "19860": 227, "19862": 227, "19864": 227, "19866": 227, "19868": 227, "19870": 227, "19872": 227, "19874": 227, "19876": 227, "19878": 227, "19880": 227, "19882": 227, "19884": 227, "19886": 227, "19888": 227, "19890": 227, "19892": 227, "19894": 227, "19896": 227, "19898": 227, "19900": 227, "19902": 227, "19904": 227, "19906": 227, "19908": 227, "19910": 227, "19912": 227, "19914": 227, "19916": 227, "19918": 227, "19920": 227, "19922": 227, "19924": 227, "19926": 227, "19928": 227, "19930": 227, "19932": 227, "19934": 227, "19936": 227, "19938": 227, "19940": 227, "19942": 227, "19944": 227, "19946": 227, "19948": 227, "19950": 227, "19952": 227, "19954": 227, "19956": 227, "19958": 227, "19960": 227, "19962": 227, "19964": 227, "19966": 227, "19968": 227, "19970": 227, "19972": 227, "19974": 227, "19976": 227, "19978": 227, "19980": 227, "19982": 227, "19984": 227, "19986": 227, "19988": 227, "19990": 227, "19992": 227, "19994": 227, "19996": 227, "19998": 227, "l_to_send": 227, "json_to_send": 227, "json_receiv": 227, "l_receiv": 227, "sine": [227, 268, 285], "140106668681968": 227, "wallclock_axi": 227, "1638538131": 227, "1975703": 227, "2978473": 227, "3981225": 227, "498449": 227, "5987027": 227, "698947": 227, "7996597": 227, "899947": 227, "1638538132": 227, "0001943": 227, "1010473": 227, "0b10110": 227, "0x16": [227, 798], "0b1011": [227, 262], "bit_3": 227, "0b00001": 227, "0b1": [227, 244, 314], "0b1000": [227, 244], "0b11110": 227, "bitwis": [227, 392, 425, 934, 938, 1025], "num1": [227, 244], "0b110101101": 227, "num2": [227, 244], "0b101110100": 227, "0b100100100": 227, "0b111111101": 227, "0b1010": 227, "0b10100": [227, 244], "1fuzzi2fuzzi3fuzzi4": 227, "0b11011001": 227, "abcdef": [227, 234, 240, 244], "cde": 227, "lexic": [227, 452, 759], "indexerror": [227, 244, 247, 265, 304, 340, 1005, 1058, 1127], "auer": 227, "aue": 227, "zerodivisionerror": [227, 240, 265, 1005], "lst1": 227, "lst2": 227, "toc": 228, "treeset": 228, "searchabl": [228, 231], "diesel": 228, "vibrat": 228, "lighter": 228, "sensorrandom": 228, "sensorsin": 228, "sensorconst": 228, "wild": [228, 230, 235, 270], "yesterai": 228, "deseri": [228, 240], "decod": [228, 240, 247, 250, 286, 292, 303, 306, 308, 314, 1056, 1102], "swallow": [228, 839, 1005], "walkthrough": [228, 230, 235, 1174], "1h": 228, "exchangeformat": 228, "test_mqtt_format": 228, "parser": [228, 240, 294, 310, 351, 679, 1058, 1161], "mosquitto_sub": [228, 1122], "writer": [228, 767, 852], "deserializeerror": 228, "dangl": [228, 395, 566, 580], "fahrenheit": [230, 363, 365, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 466, 667, 705, 758, 760, 761], "nonconst": [230, 578], "getchar": [230, 369, 371, 376, 385], "dry": 230, "verif": [230, 1111], "umlaut": [230, 231, 325, 1037, 1119], "\u00f6": [230, 250, 1119], "canari": 230, "asid": [230, 403, 404, 416, 678, 967], "brainfuck": 230, "nok": [230, 715, 961], "singli": [230, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "typedef": [230, 419, 422, 426, 435, 439, 444, 445, 665, 667, 705, 713, 729, 758, 760, 761, 828, 976], "commonplac": [230, 1164], "boundari": [230, 240, 286, 425, 739, 906], "neighborhood": 230, "signed": [230, 379, 428], "unsigned": 230, "excurs": [230, 469, 1105], "pointerarith": 230, "lower_bound": [230, 277, 316, 605, 610, 629, 633, 662, 761], "for_each": [230, 277, 610, 629, 633, 662, 713, 761], "diagram": [230, 469, 487, 489, 821, 905, 912, 914], "search_by_lastnam": [230, 658, 659, 660], "const_iter": [230, 560, 604, 607, 608, 609, 611, 626, 665, 680, 713, 714], "calloper": [230, 543], "exc": [230, 543], "ostream": [230, 543, 569, 729, 759, 1146], "paint": [230, 648, 662, 761], "reverse_copi": [230, 277, 543, 610, 629, 633, 662, 761], "cin": [230, 612, 630, 632, 648, 662, 761], "accumul": [230, 543], "raci": [230, 543], "wsl2": [230, 257, 259, 277, 279, 347], "libsqlite3": [230, 453], "libboost": 230, "libgtk": 230, "prosaic": 230, "roman": 230, "mad": [230, 427], "wxwidget": 230, "lieb": [231, 292, 308], "gr\u00fc\u00dfe": [231, 292, 308], "utf8": 231, "distil": [231, 291, 326, 1003, 1075], "4j": 232, "unlimitxdeadbeef": [232, 234, 240, 286, 292, 335, 524], "3735928559": [232, 234, 240, 244, 286, 292, 335], "0b10010011": 232, "ippi": 232, "0b0101": 232, "0101": 232, "teifl": 232, "fun1": 232, "fun2": 232, "ipykernel_165524": 232, "729327466": 232, "nsecond": [232, 1050], "rline": 232, "carriag": [232, 382, 1050], "neuer": 232, "ordner": 232, "euer": 232, "regex_str": [232, 250], "calim": 232, "yaaai": 232, "needl": [232, 1044, 1052], "haystack": [232, 1044, 1052], "finit": [232, 281, 397, 897], "haystack_s": 232, "0x7fe07c0cdf90": 232, "list_iter": [232, 250, 304, 314], "0x7fe07c0cd7f0": 232, "unicode_code_point": 232, "l_new": 232, "ijk": 232, "mengenlehr": 232, "s1": [232, 240, 244, 247, 250, 265, 272, 282, 292, 304, 314, 469, 486, 516, 575, 669, 675, 723, 745, 747, 749, 751, 1055], "s2": [232, 240, 244, 247, 250, 265, 272, 282, 292, 304, 314, 469, 486, 516, 575, 669, 675, 723, 745, 747, 749, 1055], "gunnar": 232, "liam": 232, "maximumum": 232, "variable2": 232, "maximum2": 232, "mrmr": 232, "einser": 232, "square_numb": [232, 1053], "squares_gener": 232, "other_d": [232, 265], "nove": 232, "isspac": [232, 234, 237, 240, 265, 286, 314, 1052], "buchhaltung": [232, 868, 890, 891], "startswith": [232, 240, 269, 270, 272, 286, 449, 1052, 1125], "buch": [232, 1156], "oooo": 232, "isupp": [232, 240, 250, 286, 1052], "zz": 232, "traurig": 232, "substr": [232, 234, 240, 250, 265, 272, 286, 304, 308, 314, 1146], "gid": [232, 240, 308, 759, 835, 836, 843, 845, 853, 925, 940, 1084], "count_byt": 232, "nbyte": 232, "2691": [232, 759, 864], "miscellanea": [233, 928], "brace": [233, 240, 286, 369, 392, 395, 407, 467, 560, 569, 601, 603, 608, 621, 622, 665, 705, 714, 758, 760, 761, 1034, 1037], "hour_of_dai": 233, "ein_str": 234, "ein_anderer_str": 234, "fghjgfgh": 234, "dfghgfgh": 234, "do_someth": [234, 253, 335, 398, 400, 408, 423, 437, 722, 1034], "komplett": 234, "returnwert": [234, 1156], "sinnloser": 234, "weis": [234, 1177], "vorgenommen": 234, "obacht": 234, "140672599989840": 234, "140672464974720": 234, "hoechst": [234, 272], "rechnern": 234, "100000": [234, 250, 678, 913, 1111], "": [234, 250], "exponenti": [234, 1037, 1051], "__annotations__": [234, 244, 265, 286, 300, 1006], "__closure__": [234, 244, 265, 286], "__code__": [234, 244, 265, 286], "__delattr__": [234, 237, 240, 244, 262, 265, 286, 304], "__dir__": [234, 237, 244, 262, 265, 286, 304], "__format__": [234, 237, 240, 244, 262, 265, 286, 304], "__ge__": [234, 237, 240, 244, 262, 265, 286, 304, 1025], "__get__": [234, 244, 265, 286], "__getattribute__": [234, 237, 240, 244, 262, 265, 286, 304], "__globals__": [234, 244, 265, 286], "__gt__": [234, 237, 240, 244, 262, 265, 286, 304], "__hash__": [234, 237, 240, 244, 262, 265, 286, 304, 314], "__init_subclass__": [234, 237, 244, 262, 265, 286, 304], "__kwdefaults__": [234, 244, 265, 286], "__ne__": [234, 237, 240, 244, 262, 265, 286, 304, 1025], "__new__": [234, 237, 240, 244, 262, 265, 286, 304], "__qualname__": [234, 244, 265, 286], "__reduce__": [234, 237, 240, 244, 262, 265, 286, 304], "__reduce_ex__": [234, 237, 244, 262, 265, 286, 304], "__setattr__": [234, 237, 240, 244, 262, 265, 286, 304], "__sizeof__": [234, 237, 240, 244, 262, 265, 286, 304], "__subclasshook__": [234, 237, 244, 262, 265, 286, 304], "karteikart": 234, "my_formatted_person": 234, "123425041997": 234, "caros_str": 234, "joergs_str": 234, "0x7ff0dc48b490": 234, "next_po": 234, "tim": [234, 244, 331, 332], "ugli": [234, 244, 258, 267, 268, 281, 288, 289, 364, 369, 543, 761, 833, 838, 863, 864, 904, 1003, 1004], "flat": [234, 244, 416, 442, 443, 975, 976], "puriti": [234, 244], "silenc": [234, 244, 408, 851], "ambigu": [234, 244, 395, 430, 431, 432, 579, 679, 868], "refus": [234, 244, 253, 459, 781, 834, 905, 921, 980], "temptat": [234, 244], "dutch": [234, 244], "honk": [234, 244], "wahr": 234, "falsch": [234, 247, 1163], "kriegt": 234, "nachkommastellen": 234, "moeglichkeit": 234, "f_str": 234, "punkt_po": 234, "nachkomma_str": 234, "praezedenz": 234, "wandel": 234, "vorn": 234, "anhaengen": 234, "wuenschen": 234, "wuerd": 234, "appendleft": 234, "extendleft": 234, "relem": 234, "popleft": 234, "sorted_l": 234, "sorted_t": 234, "sorted_": 234, "subtext": 234, "ssissippi": 234, "140672464726576": 234, "copied_text": 234, "140672464784832": 234, "140672464784064": 234, "140672599989872": 234, "140672464751872": 234, "140672464768512": 234, "140672464594880": 234, "jkl": 234, "suesser": [234, 240, 247, 250, 253, 269], "sechser_gewuerfelt": 234, "n_tri": [234, 237, 272, 314, 1041], "versag": [234, 272], "eva": [234, 286, 1044], "xrang": [234, 1045], "0x7ff0dc48bed0": 234, "hann": 234, "gruess": 234, "gott": [234, 265, 358], "fill_in_us": 234, "scho": 234, "my_db": 234, "uniq_dict": 234, "konfigurierbaren": 234, "startwert": 234, "ausgibt": 234, "sqnum": 234, "0x7ff014b01820": 234, "xslx": 234, "yz": 234, "lret": 234, "ochwa": 234, "unbalanc": 235, "geospati": 235, "gdal": 235, "sweigart": [235, 249, 291, 1106], "datenypen": 236, "libarari": 236, "chainmap": 236, "dequ": [236, 737], "suchalgorithmen": 236, "51139385": 237, "77397a312b47": 237, "50924272": [237, 240], "20210728": [237, 240, 1032], "eine_komplizierte_funkt": 237, "endeffekt": 237, "zusammenzuzaehlen": 237, "tarnt": 237, "vergeblich": 237, "komplexitaet": 237, "zahl_als_str": 237, "bledsinn": 237, "try_no": 237, "blahblahblah": 237, "cxyxyyyyxi": 237, "table_str": 237, "table_dict": 237, "139769175732912": 237, "139769175738624": 237, "satan_str": 237, "satan_int": 237, "result_of_print": 237, "result_of_evald_print": 237, "code_str": [237, 247], "compiled_cod": 237, "woswasi": [237, 244], "0x7f1e91eb42f0": 237, "philipp": [237, 244, 247, 265, 272, 286, 304, 314, 467, 542, 614, 626, 658, 660, 1095, 1097, 1101, 1103, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "lastnma": 237, "0x7f1e8c0fe2e0": 237, "__abs__": [237, 244, 262], "__and__": [237, 244, 304, 1025], "__bool__": [237, 244, 262], "__ceil__": [237, 244, 262], "__divmod__": [237, 244, 262], "__float__": [237, 244, 262, 286], "__floor__": [237, 244, 262], "__floordiv__": [237, 244, 262, 1025], "__getnewargs__": [237, 240, 244, 262, 286], "__index__": [237, 244], "__int__": [237, 244, 262, 286, 303], "__invert__": [237, 244], "__lshift__": [237, 244, 1025], "__mod__": [237, 240, 244, 262, 286, 1025], "__mul__": [237, 240, 244, 262, 286, 1025], "__neg__": [237, 244, 262], "__or__": [237, 244, 304, 1025], "__pos__": [237, 244, 262], "__pow__": [237, 244, 262, 1025], "__rand__": [237, 244, 304], "__rdivmod__": [237, 244, 262], "__rfloordiv__": [237, 244, 262], "__rlshift__": [237, 244], "__rmod__": [237, 240, 244, 262, 286], "__rmul__": [237, 240, 244, 262, 286], "__ror__": [237, 244, 304], "__round__": [237, 244, 262], "__rpow__": [237, 244, 262], "__rrshift__": [237, 244, 1025], "__rshift__": [237, 244, 1025], "__rsub__": [237, 244, 262, 304, 308, 1025], "__rtruediv__": [237, 244, 262], "__rxor__": [237, 244, 304], "__sub__": [237, 244, 262, 304, 308, 1025], "__truediv__": [237, 244, 262, 1025], "__trunc__": [237, 244, 262], "__xor__": [237, 244, 304, 1025], "as_integer_ratio": [237, 244, 262], "bit_length": [237, 244], "conjug": [237, 244, 262], "denomin": [237, 244], "from_byt": [237, 244], "to_byt": [237, 244], "0x7f1e8c0b3130": 237, "int_list": 237, "0x7f1e8c0fe340": 237, "0x7f1e8c0fe760": 237, "u1": 237, "u2": 237, "type_of_us": 237, "scrambl": 237, "hansj\u00f6rg": [237, 449], "gr\u00f6jsnah": 237, "class_str": 237, "1997": [237, 247, 1031, 1095, 1097, 1101, 1103], "0x7f1e8c1c2e50": 237, "joleckmi": 237, "cmdline": 238, "excess": [238, 398], "provocantli": 238, "pybai": [238, 307, 1106], "suchzeit": 239, "everywher": [239, 254, 428, 443, 459, 669, 820, 958, 1044], "d_as_str": 240, "received_d": 240, "1939": 240, "145415": 240, "bytes_or_buff": [240, 286], "expos": [240, 286, 557, 643, 839, 905, 913, 914, 948], "strict": [240, 260, 286, 304, 464, 478, 485, 499, 513, 565, 761, 1055, 1135], "__contains__": [240, 286, 304], "format_spec": [240, 265, 286], "getattr": [240, 244, 265, 286, 1019], "__getitem__": [240, 286, 1127, 1128], "__iter__": [240, 286, 304, 1010], "__len__": [240, 286, 304], "casefold": [240, 286], "caseless": [240, 286], "fillchar": [240, 286], "pad": [240, 286, 1051], "occurr": [240, 286, 372], "codec": [240, 247, 250, 286, 292, 308, 314, 1119], "unicodeencodeerror": [240, 247, 250, 265, 286, 292, 308, 1005, 1119], "xmlcharrefreplac": [240, 286], "register_error": [240, 286], "suffix": [240, 286], "expandtab": [240, 265, 286, 314], "tabsiz": [240, 286], "lowest": [240, 286, 392, 398, 968, 969, 1056], "format_map": [240, 286], "isalnum": [240, 286, 1052], "alphabet": [240, 286, 372, 427, 449, 852, 1119], "isascii": [240, 286], "007f": [240, 286], "isdecim": [240, 286], "iskeyword": [240, 250, 286], "isnumer": [240, 286], "isprint": [240, 286, 372, 400], "printabl": [240, 286, 372, 1005], "istitl": [240, 286], "uncas": [240, 286], "pq": [240, 286], "ljust": [240, 286], "removeprefix": [240, 286], "removesuffix": [240, 286], "rindex": [240, 286, 1052], "rpartit": [240, 286], "discard": [240, 286, 304, 431, 577, 578, 715, 850, 851], "splitlin": [240, 286], "keepend": [240, 286], "swapcas": [240, 286], "titlecas": [240, 286], "lookuperror": [240, 265, 286, 1005], "untouch": [240, 286, 808], "zfill": [240, 286], "maketran": [240, 286], "numerischen": 240, "ecma": 240, "3rd": [240, 767], "interchang": [240, 647, 729, 1119], "marshal": 240, "pickl": [240, 244], "simplejson": 240, "foo": [240, 272, 282, 286, 304, 308, 314, 537, 678, 711, 729, 741, 1005, 1046], "baz": 240, "u1234": 240, "sort_kei": 240, "getvalu": 240, "compact": [240, 398], "mydict": 240, "obj": [240, 265, 308, 505, 776, 777, 786, 1019, 1027, 1127, 1128], "x08ar": 240, "as_complex": 240, "dct": 240, "__complex__": 240, "object_hook": 240, "2j": 240, "parse_float": 240, "encode_complex": 240, "serializ": 240, "1j": 240, "jsonencod": 240, "iterencod": 240, "scanner": 240, "jsondecodeerror": 240, "jsondecod": 240, "msg": [240, 253, 314, 383, 468, 472, 972, 974, 975, 979, 1001, 1004, 1005], "unformat": 240, "lineno": [240, 247, 314], "colno": 240, "delattr": [240, 244, 265], "setattr": [240, 244, 265, 1019], "__setstate__": [240, 244], "with_traceback": [240, 244], "tb": [240, 244], "__traceback__": [240, 244], "__cause__": [240, 244], "__context__": [240, 244], "__suppress_context__": [240, 244], "parse_int": 240, "parse_const": 240, "object_pairs_hook": 240, "nan": [240, 272, 1111, 1123], "num_str": 240, "_w": 240, "0x7f99fff1bb70": 240, "raw_decod": 240, "extran": 240, "skipkei": 240, "ensure_ascii": 240, "check_circular": 240, "allow_nan": 240, "recogn": [240, 593, 914, 1162], "sensibl": 240, "circular": 240, "recursionerror": [240, 265, 1005], "compliant": [240, 1018], "item_separ": 240, "key_separ": 240, "_one_shot": 240, "chunk": [240, 340, 428, 802, 940, 1108, 1119], "bigobject": 240, "mysocket": 240, "fp": 240, "inf": 240, "complianc": 240, "ippolito": 240, "redivi": 240, "140299267714496": 240, "140299267930496": 240, "schweissparameter_aussi": 240, "strom_ma": 240, "200004": 240, "spannung_v": 240, "aufs_kabel": 240, "maschine_112": 240, "kabel": [240, 244], "vom_kabel": 240, "schweissparameter_eini": 240, "strom_a": 240, "hal": 240, "2c445fb3": 240, "6ca4": 240, "b9d9": 240, "7cfbbff55326": 240, "doesnt_exist": 240, "_a666": 240, "140299402960464": 240, "0b10000000000000000000000000000000000000000000000000000000000000000": [240, 244, 265, 282, 320], "140299327492352": 240, "func_fals": 240, "func_tru": 240, "sex_opt": 240, "140298898107648": 240, "t_mit_einem_el": 240, "supi": 240, "squares_map": 240, "squares_set": 240, "numtri": 240, "even_numb": [240, 304], "mississppi": 240, "xxxx": 240, "nbin": [240, 247, 272, 286, 308], "ndaemon": [240, 247, 272, 286, 308], "nadm": [240, 247, 272, 286, 308], "nlp": [240, 247, 272, 286, 308], "nsync": [240, 247, 272, 286, 308], "nshutdown": [240, 247, 272, 286, 308], "nhalt": [240, 247, 272, 286, 308], "nmail": [240, 247, 272, 286, 308], "noper": [240, 247, 272, 286, 308], "ngame": [240, 247, 272, 286, 308], "nftp": [240, 247, 272, 286, 308], "nnobodi": [240, 247, 272, 286, 308], "napach": [240, 247, 272, 286, 308], "nsystemd": [240, 247, 272, 286, 308], "ntss": [240, 247, 272, 286, 308], "ndbu": [240, 247, 272, 286, 308], "npolkitd": [240, 247, 272, 286, 308], "navahi": [240, 247, 272, 286, 308], "nunbound": [240, 247, 272, 286, 308], "ndnsmasq": [240, 247, 272, 286, 308], "nnm": [240, 247, 272, 286, 308], "nusbmuxd": [240, 247, 272, 286, 308], "ngluster": [240, 247, 272, 286, 308], "nrtkit": [240, 247, 272, 286, 308], "npipewir": [240, 247, 272, 286, 308], "ngeoclu": [240, 247, 272, 286, 308], "nchroni": [240, 247, 272, 286, 308], "nsaslauth": [240, 247, 272, 286, 308], "nradvd": [240, 247], "nrpc": [240, 247, 272, 286, 308], "nqemu": [240, 247, 272, 286, 308], "nopenvpn": [240, 247, 272, 286, 308], "ncolord": [240, 247, 272, 286, 308, 930], "nrpcuser": [240, 247, 272, 286, 308], "nabrt": [240, 247, 272, 286, 308], "nflatpak": [240, 247, 272, 286, 308], "ngdm": [240, 247, 272, 286, 308], "ngnome": [240, 247, 272, 286, 308], "nvboxadd": [240, 247, 272, 286, 308], "nsshd": [240, 247, 272, 286, 308], "ntcpdump": [240, 247, 272, 286, 308], "njfasch": [240, 247, 272, 286, 308], "nmosquitto": [240, 247, 272, 286, 308], "nsomeon": [240, 247], "1001": [240, 247, 250, 622, 623, 624, 625, 853, 865, 896, 925], "move_to_end": 240, "thermometera": 240, "thermometerb": 240, "get_average_temperatur": 240, "th_list": 240, "ipykernel_9164": 240, "859664274": 240, "2942790015": 240, "0x7fac83797be0": 240, "basisklass": 240, "level2_1": 240, "l21": 240, "level2_2": 240, "level3": 240, "jedi": 240, "blueey": 240, "droid": 240, "r2d2": 240, "derivednoctor": 240, "dnoctor": 240, "derivedctorcallingsup": 240, "derivedctorcallingbasector": 240, "__firstnam": 240, "__lastnam": 240, "_user__firstnam": 240, "_user__lastnam": 240, "lightsab": 240, "padawan": 240, "arithmeticerror": [240, 265, 1005], "waaah": 240, "abgebrannt": 240, "puh": 240, "intakt": 240, "is_even": [240, 244, 314, 682, 683, 684, 685], "0x7fac81f52df0": 240, "0x7fac81cb5700": 240, "progamm": 240, "tumpfback": 240, "och": 240, "umpfback": 240, "rt": [240, 761, 785, 789, 799, 810, 812, 817, 820, 823, 826, 829, 904], "wholefil": 240, "notepad": 241, "betreiben": [241, 1163, 1170, 1171], "unterschiedlichen": 241, "sinnvol": 241, "umgebungen": 241, "unausweichlich": 241, "installationsverzeichni": 241, "verzeichniss": [241, 1165], "ausf\u00fchren": 241, "hernimmt": 241, "wei\u00df": 241, "rennt": 241, "ordereddict": 242, "__mro__": 242, "udemi": 242, "successor": [243, 392], "repeatedli": [243, 622, 1118], "kantenlaeng": 244, "ipykernel_101004": 244, "2437887948": 244, "0x10": [244, 247, 456], "0b1111111111111111111111111111111111111111111111111111111111111111": [244, 265, 282, 286, 314, 320], "1267650600228229401496703205381": 244, "735611673": 244, "ndigit": [244, 265, 314, 371], "0b101": 244, "0b100": [244, 247], "register_statu": 244, "0b1001000": 244, "0b00001000": 244, "strom": [244, 314], "liegt_strom_an": 244, "0b00111110": 244, "ever": [244, 304, 447, 456, 487, 847, 913, 1036, 1159], "deadbeef": [244, 524, 907], "gross": 244, "doktor": 244, "jawui": 244, "akademik": 244, "ndef": [244, 314], "tdef": [244, 265], "geh": 244, "hochkomplex": [244, 320], "verendet": 244, "euler": 244, "sche": 244, "dokumentiern": 244, "koennt": 244, "varianc": 244, "fmean": 244, "geometric_mean": 244, "harmonic_mean": 244, "harmon": 244, "median": 244, "median_low": 244, "median_high": 244, "median_group": 244, "50th": 244, "percentil": 244, "multimod": 244, "quantil": 244, "centr": 244, "nearest": [244, 490, 1113], "doctest": 244, "ellipsi": [244, 265], "8333333333": 244, "8333": 244, "spread": 244, "pvarianc": 244, "pstdev": 244, "stdev": [244, 968, 970], "38961843444": 244, "recalcul": 244, "statisticserror": 244, "normaldist": 244, "x1": 244, "unchang": [244, 666, 999], "jointli": 244, "rescal": 244, "cdf": 244, "cumul": [244, 441], "inv_cdf": 244, "coeffici": 244, "ovl": 244, "agreement": 244, "densiti": 244, "8035050657330205": 244, "dx": 244, "quartil": 244, "decil": 244, "zscore": 244, "score": 244, "from_sampl": 244, "readonli": 244, "dataset": [244, 1109, 1111, 1124, 1126, 1128, 1130], "subcontrari": 244, "reciproc": 244, "quantiti": [244, 276, 1113], "earn": 244, "5625": 244, "midpoint": 244, "estim": 244, "nomin": 244, "taught": [244, 1029, 1164], "aabbbbbbbbcc": 244, "aabbbbccddddeeffffgg": 244, "986893273527251": 244, "0th": 244, "100th": 244, "xbar": 244, "0810874155219827": 244, "3720238095238095": 244, "01875": 244, "gesamter_gruss": 244, "excelsheet": 244, "hinters": 244, "gabali": 244, "helen": 244, "fischer": 244, "sssklndkfgv": 244, "fosvh": 244, "worl": [244, 247, 1043], "lowr": 244, "dlrow": [244, 1043], "olleh": [244, 1043], "even_numbers_fun": 244, "even_numbers_gen": 244, "evennum": 244, "even_filt": 244, "tausend": 244, "1234250497": [244, 247, 250, 253, 467, 474, 626], "1234250597": 244, "users_json_str": 244, "liest": 244, "kontrah": 244, "verwandelt": 244, "gelesenes_ding_wieder_als_dict": 244, "schatz": 244, "erich": 244, "koxi": 244, "hatkeinenwert": 244, "fn": [244, 432, 449, 759, 1130], "ul": [244, 386], "ln": [244, 432], "1st": [245, 1148], "einschub": 245, "filterketten": 245, "datensatz": 245, "letzten": 245, "recapitul": 246, "naeherungsverfahren": 247, "addieren": 247, "140606563548752": 247, "wirklich": [247, 1154], "0o10": 247, "teilbar": 247, "00001": 247, "abd": [247, 592], "i1": [247, 282], "140606428182128": 247, "140606428182896": 247, "2345010101": 247, "elizabeth": [247, 1095, 1097, 1101, 1103, 1114], "1901": 247, "evi": 247, "maxim": [247, 447, 914], "wuerfeln": 247, "freuen": 247, "sechser": 247, "faellt": 247, "jammern": 247, "versuch_numm": 247, "versuchen": 247, "jammert": 247, "hlo": [247, 1043], "output_list": [247, 1088], "nullt": 247, "34567654567": 247, "gsd": 247, "another_t": 247, "symmetisch": 247, "netzwerkkommunik": 247, "request_to_send": 247, "request_str_to_send": 247, "1651046407": 247, "3633313": 247, "cabl": [247, 839], "request_str_from_c": 247, "request_from_c": 247, "1651046335": 247, "8477345": 247, "139909434561408": 247, "139909544402512": 247, "139909544402544": 247, "139909543772528": 247, "139909433666288": 247, "roo": [247, 286, 899], "xf6": [247, 250, 292, 1037, 1119], "joerg_latin": 247, "xf6rg": [247, 250, 292, 304, 308, 1119], "j\u0456rg": [247, 250, 292, 308, 1119], "cyclic": 249, "140616191009600": 250, "140616191012720": 250, "140116274372176": 250, "0x7f6f5cc2de50": 250, "0x7f6f5cc2df30": 250, "18446744073709551617": 250, "multi_dict": 250, "ipykernel_189565": 250, "1743780635": 250, "140115753096128": 250, "ntri": 250, "bytes_joerg": 250, "bytes_joerg_iso_latin_1": 250, "bytes_joerg_utf_32": 250, "xff": [250, 292, 308], "xfe": [250, 292, 308], "x00": [250, 292, 308, 912], "x00j": [250, 292], "x00r": [250, 292], "x00g": [250, 292], "bytes_joerg_utf_16": 250, "xfej": 250, "bytes_joerg_utf_8": 250, "xc3": [250, 286, 292, 308, 1037, 1119], "xb6rg": [250, 286, 292, 308, 1119], "iso_latin_1": 250, "russian": 250, "bytes_received_by_russian": 250, "2435": 250, "010d": 250, "0000000666": 250, "ssi": 250, "garbag": [250, 442, 449, 465, 724, 736, 914, 941, 1003], "ipykernel_4000": 250, "3227798639": 250, "ahja": 250, "24000": 250, "24500": 250, "25000": 250, "25500": 250, "26000": 250, "26500": 250, "__del__": 250, "whe": 250, "13397": 250, "116985": 250, "120725": 250, "118110": 250, "0x7fe3a392aa30": 250, "test_person_bas": 252, "pluggi": [252, 270, 1094, 1139], "rootdir": [252, 270, 808, 1094, 1139], "test_persondb_bas": 252, "test_pytest_demo": 252, "xfail": [252, 1139], "test_persondb": 252, "test_duplicate_svnr": 252, "test_update_sunnycas": 252, "test_update_notexist": 252, "test_update_exact_dupl": 252, "former": [252, 1046], "persondb": 252, "sqlite": [252, 453, 1062, 1115], "ics_demand": 252, "maco": [252, 340, 345], "woe": 252, "homebrew": 252, "brew": 252, "flaviocop": 252, "str_mit_666": 253, "140240419976192": 253, "140240419593568": 253, "aclass": 253, "almostempti": 253, "beenther": 253, "kuckucksei": 253, "chirp": 253, "some_bullshit": 253, "bad_thing_happen": 253, "do_some_bullshit": 253, "boah": [253, 314], "python_cod": 253, "a_global_vari": 253, "globale_vari": 253, "140240513015376": 253, "140240513014256": 253, "140240419270768": 253, "140240419271792": 253, "storesanintegerandmodifiesit": 253, "the_int": 253, "my_int": 253, "saiami": 253, "storesalistandmodifiesit": 253, "the_list": 253, "append_someth": 253, "salami": 253, "compute_squar": 253, "satanicerror": 253, "jess": 253, "invalidsvnr": 253, "rex_lin": 253, "json_str": [253, 1102], "python_l": 253, "0x7f8c0551f490": 253, "behandlung": 255, "kurzer": 255, "reicht": [255, 1154], "unwichtig": 255, "weggelassen": 255, "\u00fc": [255, 1119], "jeden": 255, "teilnehmer\u00fcbung": 255, "kernsprach": 255, "rvalu": [255, 277, 317, 568, 673, 705, 715, 721, 724, 725, 726, 727, 730, 738, 758, 760, 761, 1158, 1159, 1160], "constexpr": [255, 256, 257, 277, 279, 317, 705, 715, 739, 759, 760, 761, 1159], "uniform": [255, 256, 257, 259, 316, 447, 467, 569, 601, 621, 622, 665, 705, 714, 758, 760, 761, 1018, 1159], "initialisierung": [255, 1175], "infer": 255, "speichermodel": 255, "atomar": [255, 1157, 1175], "standardbibliothek": 255, "regu\u00e4r": 255, "trait": 255, "zufallszahlen": 255, "zeitbibliothek": 255, "sprachsyntax": 255, "deduct": [255, 680, 682], "erweiterungen": 255, "ge\u00e4ndert": 255, "definitionen": 255, "bibliothek": 255, "zusatzvari": 255, "constinit": 255, "modularisierung": [255, 341, 1156], "versionierung": 255, "routinen": 255, "synchronisierung": 255, "werkzeug": [255, 1156, 1163, 1165, 1170, 1173], "kalend": [255, 1153], "zeitzonen": 255, "zus\u00e4tz": 255, "chrono": [255, 256, 257, 259, 268, 316, 472, 665, 726, 737, 738, 742, 760, 761], "initializer_list": [256, 257, 259, 316, 317, 468, 469, 496, 497, 665, 667, 705, 760, 761], "handwrit": [256, 257, 259, 316, 705, 721, 760, 761], "weak_ptr": [256, 257, 259, 316, 317, 721, 758, 760, 761], "boilerpl": [256, 257, 259, 295, 311, 316, 317, 454, 705, 706, 707, 725, 760, 761, 984, 1155], "condition_vari": [256, 257, 259, 268, 316, 738, 760, 761, 1159], "emplace_back": [256, 257, 601], "cref": [256, 257], "interoper": [257, 259, 277, 279], "wazoo": [257, 259, 277, 279], "anviron": [257, 259], "submodul": [257, 259, 522, 585], "chdir": [257, 259], "gtest_main": [257, 472, 521, 523, 524, 544, 547, 559, 585, 723, 724, 1145, 1150], "dummy_suit": 257, "sticki": [258, 267, 268, 288, 289, 340, 345, 761, 838, 863, 904], "insod": 259, "lvalu": [259, 316, 317, 673, 674, 677, 705, 715, 721, 725, 730, 738, 758, 760, 761], "afterword": [259, 316, 317, 674, 705, 760, 761], "ain": [259, 447, 1033], "singleton": [260, 464, 465, 471, 485, 499, 513, 565, 761, 1162], "inflex": [260, 367, 464, 478, 485, 491, 492, 499, 513, 565, 761], "proxi": [260, 278, 280, 281, 302, 306, 346, 464, 471, 473, 474, 485, 499, 513, 565, 761, 1134, 1162], "serverthread": [260, 489, 503], "my_si": [262, 1013], "function_returns_two_valu": 262, "140134238766608": 262, "sizeof": [262, 371, 381, 392, 413, 420, 421, 425, 428, 548, 560, 572, 600, 666, 728, 908, 926, 930, 931, 932, 938, 939, 940, 941, 966, 972, 975, 979, 1045], "__getformat__": 262, "__setformat__": 262, "fromhex": 262, "0b0010": 262, "0b1001": 262, "key_list": 262, "key_tupl": 262, "evil_list": 262, "evil_list_2": 262, "neinem": 262, "nviel": 262, "doze_path": [262, 265], "compiled_regex": 262, "l_json": 262, "l_json_sent": 262, "received_data": 262, "0x7f73869f06c0": 262, "create_avg_item": 262, "ninetynin": 262, "koppel": 264, "netzwerk": [264, 341, 1163, 1173, 1176], "condens": [264, 448], "nprint": 265, "noption": 265, "nfile": 265, "nsep": 265, "nend": 265, "nflush": 265, "forcibli": 265, "didact": [265, 358, 361, 584, 586, 587, 1162], "fullnam": [265, 272, 1022, 1026], "nerst": 265, "nzweit": [265, 335], "andere_list": 265, "neue_list": 265, "140323934455312": 265, "140323934455344": 265, "140323934455376": 265, "140323852147712": 265, "140323933649904": 265, "140323833601584": 265, "frozenset": [265, 282, 303], "__builtins__": [265, 286, 1006], "gr\u00fc\u00df": 265, "nocheinprogramm": 265, "ocheinprogramm": 265, "dfghgfdfghj": 265, "jhghgh": 265, "matchstr": 265, "compiled_match": 265, "tprint": 265, "num_ss": 265, "isi": [265, 526, 542, 1123], "strippeditem": 265, "yet_another_d": 265, "s3": [265, 272, 486], "s4": 265, "isdisjoint": [265, 272, 304, 1055], "nnoteworthi": 265, "nil": 265, "__package__": [265, 333, 1006], "__loader__": [265, 333, 1006], "__spec__": [265, 333, 1006], "modulespec": 265, "loader": [265, 437, 455, 460, 982, 999, 1173], "__build_class__": 265, "__import__": 265, "dont_inherit": 265, "_feature_vers": 265, "divmod": 265, "raw_input": 265, "ipkernel": 265, "ipythonkernel": 265, "0x7f9fb16abcd0": 265, "class_or_tupl": 265, "aiter": 265, "async_iter": 265, "anext": 265, "oct": [265, 890, 912, 914], "pow": [265, 577, 578, 728], "exp": [265, 501], "notimpl": [265, 304, 308, 1025], "memoryview": 265, "__debug__": 265, "stopasynciter": [265, 1005], "generatorexit": [265, 1005], "keyboardinterrupt": [265, 281, 1005], "importerror": [265, 1005], "environmenterror": [265, 1134], "ioerror": [265, 1140], "eoferror": [265, 1005], "notimplementederror": [265, 1005], "unboundlocalerror": [265, 1005], "indentationerror": [265, 1005], "taberror": [265, 1005], "unicodeerror": [265, 1005], "unicodedecodeerror": [265, 308, 314, 1005], "unicodetranslateerror": [265, 1005], "floatingpointerror": [265, 1005], "overflowerror": [265, 1005], "systemerror": [265, 1005], "referenceerror": [265, 1005], "memoryerror": [265, 1005], "buffererror": [265, 1005], "userwarn": [265, 1005], "encodingwarn": [265, 1005], "deprecationwarn": [265, 1005], "pendingdeprecationwarn": [265, 1005], "syntaxwarn": [265, 1005], "runtimewarn": [265, 1005], "futurewarn": [265, 1005, 1123], "importwarn": [265, 1005], "unicodewarn": [265, 1005], "byteswarn": [265, 1005], "resourcewarn": [265, 1005], "connectionerror": [265, 1005], "blockingioerror": [265, 1005], "brokenpipeerror": [265, 1005], "childprocesserror": [265, 1005], "connectionabortederror": [265, 1005], "connectionrefusederror": [265, 1005], "connectionreseterror": [265, 1005], "fileexistserror": [265, 1005], "isadirectoryerror": [265, 1005], "notadirectoryerror": [265, 1005], "interruptederror": [265, 1005], "processlookuperror": [265, 1005], "timeouterror": [265, 1005], "closefd": 265, "beopen": 265, "1995": [265, 475, 1095, 1097, 1101, 1103], "nation": [265, 912], "1991": [265, 1031], "sticht": 265, "centrum": 265, "amsterdam": [265, 1031], "credit": [265, 779, 1032], "cwi": 265, "cnri": 265, "zope": 265, "cast": [265, 392, 548, 636, 643, 767], "execfil": 265, "_pydev_imp": 265, "_pydev_execfil": 265, "glob": [265, 424, 896, 953, 1001, 1016, 1146], "runfil": 265, "_pydev_bundl": 265, "pydev_umd": 265, "wdir": 265, "__ipython__": 265, "exclud": [265, 443, 570], "transient": 265, "display_id": 265, "get_ipython": 265, "interactiveshel": 265, "zmqshell": 265, "zmqinteractiveshel": 265, "0x7f9fb1516200": 265, "config_fil": 265, "srcdir": 265, "dstdir": 265, "dst": [265, 387, 437, 526, 567, 586, 595, 596, 602, 1056], "untrust": 268, "lan": 268, "programmat": [268, 493, 905, 913, 961, 981, 1131], "stty": 268, "termio": 268, "ioctl_tti": 268, "setseri": 268, "tty": [268, 839, 894, 966, 972, 996], "tty_io": 268, "bidirection": 268, "nake": 268, "tiocgseri": 268, "tiocsseri": 268, "async_low_lat": 268, "cfmakeraw": 268, "ttyusb0": [268, 839], "low_lat": 268, "serial_struct": 268, "bidir": 268, "advantec": 268, "nonetheless": [268, 271, 274, 303, 682, 1146], "mycat": 268, "mimick": [268, 723], "make_realtim": 268, "interfaceri": 268, "cif": 268, "samba": 268, "automationadmin": 268, "gsc": 268, "pd": [269, 270, 272, 276, 304, 449, 1109, 1111, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "read_csv": [269, 270, 276, 304, 308, 314, 449, 1109, 1111], "txn": 269, "iso8859": 269, "time_book": [269, 270, 449], "time_valuta": [269, 270, 449], "at66666666666666": 269, "bezahlung": [269, 270, 272, 449], "kart": [269, 270, 272, 449], "eur": [269, 270, 449], "95111243": [269, 449], "abbuchung": [269, 449], "onlinebank": [269, 449], "gutschrift": 269, "000000144919": 269, "339099446722187": 269, "000": [269, 304, 308, 314, 449, 867, 905], "card_pay": 269, "filt": 269, "9325008697": 269, "339099446790254": 269, "og": [269, 437], "237811001182": 269, "auszahlung": 269, "200075787001": 269, "tzb": 269, "anl": 269, "347159strom": 269, "200004871820": 269, "200004876265": 269, "200004848862": 269, "200004871863": 269, "dauerauftrag": 269, "qsnng6xau": 269, "00121672661": 269, "120016487112": [269, 449], "bx": 269, "000009219": 269, "entgelt": 269, "nichtdurchf\u00fchrung": 269, "032300005522384": 269, "saldo": 269, "messtechnik": 269, "602674240071": 269, "0004325259000023": 269, "oeamtc": 269, "mitgliedschaft": 269, "re_liv": 269, "billa": [269, 272, 449], "rew": 269, "dankt": [269, 270, 272, 449], "pipe_stag": 270, "max_colwidth": 270, "max_column": 270, "max_row": 270, "039": 270, "consolut": 270, "insuffici": [270, 679], "categor": [270, 448, 1113], "fuction": 270, "filt_uncat": 270, "uncat_row": 270, "unspecif": [270, 351, 786], "useless": [270, 673, 731, 852, 899, 955, 1027], "food": [270, 276], "luxuri": 270, "categorize_card_pay": 270, "jet": 270, "uncertainti": 270, "categorize_v1": 270, "categorize_v2": 270, "secondari": 270, "test_categori": [270, 449], "test_bas": [270, 1094], "000009258": 270, "k002": [270, 449], "impos": [271, 274], "hurt": [271, 274, 386], "strength": [271, 274, 413, 1029], "overengin": [271, 274, 386, 447, 448, 1154, 1162], "140480285361680": 272, "0xffffffffffffffff": [272, 292, 308], "0x10000000000000000": [272, 292, 308], "140479638276224": 272, "140480203220736": 272, "140480210406176": 272, "7940943354778932823": 272, "0x7fc4189e7c90": 272, "28800": 272, "237988": 272, "produce_dai": 272, "374557": 272, "l_mal_2": 272, "140480285361712": 272, "140479638477760": 272, "140479638427520": 272, "l4": 272, "l5": 272, "140480202528192": 272, "140479638428736": 272, "140480203212992": 272, "l6": 272, "140479598069936": 272, "is_old": 272, "ipykernel_370861": 272, "4290492544": 272, "abc123": 272, "0x7fc4189e5030": 272, "yyi": [272, 314], "lichtenberg": [272, 467, 626, 658, 660, 1095, 1097, 1101, 1103, 1123, 1124, 1125, 1127, 1128, 1129, 1130], "persons2": [272, 1123, 1124], "set_index": [272, 1128], "sort_valu": 272, "inplac": [272, 276, 921, 1124], "flt": [272, 1125], "isin": [272, 1125], "reset_index": 272, "dropna": 272, "value_count": [272, 276], "int64": [272, 276, 1130], "conversiosn": 273, "9am": 274, "woven": [274, 278], "pipelin": [274, 358, 833, 848, 851, 852, 901, 915, 994], "accountid": 276, "accountdescript": 276, "accountparentid": 276, "storeid": 276, "storedescript": 276, "locationid": 276, "locationdescript": 276, "productid": 276, "productdescript": 276, "sales_managerid": 276, "dateyear": 276, "datequart": 276, "datemonth": 276, "datedai": 276, "categoryvers": 276, "categorycategori": 276, "categorytyp": 276, "valueunit": 276, "original_sales_pric": 276, "sale": 276, "st43": 276, "franchescini": 276, "ct14": 276, "salem": 276, "pd23": 276, "ipa": 276, "sm1": 276, "20144": 276, "201412": 276, "1779": 276, "763910": 276, "usd": 276, "st35": 276, "pd2": 276, "pepsi": 276, "sm4": 276, "201410": 276, "957113": 276, "st98": 276, "walter": 276, "pd24": 276, "amber": 276, "20142": 276, "201406": 276, "449395": 276, "st188": 276, "arrowhead": 276, "ct1": 276, "pd19": 276, "sm8": 276, "20164": 276, "201611": 276, "078689": 276, "st107": 276, "spire": 276, "ct5": 276, "san": 276, "jose": 276, "pd15": 276, "juic": 276, "sm5": 276, "20154": 276, "201512": 276, "303679": 276, "quantity_sold": 276, "sold": 276, "st4": 276, "gstore": 276, "ct13": 276, "portland": 276, "pd26": 276, "wine": 276, "000000": [276, 1111], "1069": 276, "st49": 276, "bai": 276, "depot": 276, "ct4": 276, "sacramento": 276, "pd27": 276, "20151": 276, "201501": 276, "592904": 276, "discount": 276, "st36": 276, "pricelow": 276, "arena": [276, 744], "ct10": 276, "reno": 276, "pd22": 276, "sm3": 276, "20162": 276, "201605": 276, "4351": 276, "045830": 276, "1071": 276, "st7": 276, "street": [276, 874], "pd16": 276, "7905": 276, "590606": 276, "pd12": 276, "lemonad": 276, "20153": 276, "201507": 276, "1073": 276, "modified_model": 276, "sales_managerdescript": 276, "janet": 276, "buri": 276, "nanci": 276, "miller": 276, "setp": 276, "nan_field": 276, "bitfield": 276, "bitfi": 276, "nan_column": 276, "gabriel": [276, 711], "walton": 276, "carl": 276, "jjjjj": 276, "ref_t": 276, "datetime64": 276, "damn": 276, "ref_2015_12_04": 276, "flt_before_2015_12_04": 276, "rows_before_2015_12_04": 276, "st119": 276, "ct2": 276, "francisco": 276, "pd11": 276, "orang": [276, 1048], "pulp": 276, "sm7": 276, "kiran": 276, "raj": 276, "201503": 276, "226847": 276, "13627": 276, "793342": 276, "3427": 276, "896898": 276, "15569": 276, "353983": 276, "float64": [276, 308, 314, 1111], "1957": 276, "740301": 276, "572676": 276, "686587": 276, "289381": 276, "flt_product_pd2": 276, "flt_2015": 276, "flt_only_sold": 276, "flt_combin": 276, "st139": 276, "farlo": 276, "ct15": 276, "eugen": 276, "sm11": 276, "jame": 276, "frank": 276, "201511": 276, "st178": 276, "rai": 276, "ct8": 276, "beverli": 276, "hill": 276, "201508": 276, "facet": [277, 279, 621], "rich": [277, 279, 1124, 1133], "toolset": [277, 279, 639], "conceptu": [277, 279, 438, 779, 786, 924], "undergon": [277, 279], "revolut": [277, 279], "odr": [277, 711], "explor": [277, 913], "rodata": [277, 999], "unspecifi": [277, 392, 479, 551, 979, 980], "bookkeep": [278, 448], "fewer": 278, "love": [278, 1101], "closer": 278, "augment": [278, 808, 1120], "test_blah": 278, "monkeypatch": [278, 280, 281, 296, 302, 303, 306], "contextlib": 278, "chatgpt": 279, "ludwig": 279, "registri": [279, 532], "memleak": 279, "jason": [280, 281, 302], "brownle": [280, 281, 302], "contriv": [280, 281, 302, 470, 1006, 1041], "subthread": [280, 281], "introductori": [280, 281, 302, 307, 761, 904, 945, 1112, 1113, 1159], "mindset": [280, 281, 302, 306, 808], "develp": 280, "10am": 281, "reopen": 281, "drei_millionen_int": 282, "3_000_000": 282, "odd_numb": [282, 1010], "odd_numbers_func": 282, "ret_num": 282, "0x7f32ccc4c610": 282, "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": [282, 335], "139855258515840": 282, "139856078033344": 282, "139856078226432": 282, "139856160540176": 282, "i3": 282, "i4": 282, "nope": [282, 961], "0101010101010": 282, "bash_logout": [282, 890], "bash_profil": [282, 890], "thunderbird": [282, 870, 890], "gnupg": [282, 890], "hst": 282, "gitconfig": [282, 890], "pki": [282, 890], "daham": 282, "20230403": 282, "222915": 282, "bash_histori": [282, 890], "python_histori": [282, 890], "lesshst": [282, 890], "139855258795072": 282, "139855260513728": 282, "139856085569920": 282, "doppelt": 282, "gemoppelt": 282, "trag": 282, "exakt": 282, "paarweis": 282, "read_lines_of_fil": 282, "0x7f32c7d8d390": 282, "nohead": [285, 1100, 1101, 1103], "userdb_csv": [285, 1101, 1102, 1103], "interleav": 285, "dosometh": 286, "0x7fe7fbf80df0": 286, "140634424624656": 286, "140634424623536": 286, "0o644": 286, "0b01110101": 286, "setting_blah": 286, "setting_foo": 286, "config_context": 286, "140634341074320": 286, "140634424624688": 286, "140634341076688": 286, "140634341077776": 286, "140634343012864": 286, "140634341099856": 286, "ipykernel_61373": 286, "1125713270": 286, "1234567876543234567654321234565432123456": 286, "140634281233520": 286, "140634341798400": 286, "140634341995008": 286, "140634341576640": 286, "140634341773312": 286, "140634281802304": 286, "global_vari": 286, "bar2": 286, "bar3": 286, "bar4": 286, "bar5": 286, "bar6": 286, "0x7fe7f869b7d0": 286, "0x7fe7f869b920": 286, "0x7fe7f869bbc0": 286, "punctuat": 286, "abcabcabcabcabc": [286, 314], "rex": 286, "cba": [286, 630], "another_d": 286, "rb": 286, "30000": 286, "coreutil": 289, "autopoint": 289, "rpm": [289, 460], "fcntl": [289, 912, 930, 934, 938, 939, 940, 941, 946, 949, 972, 975, 979], "luciano": [291, 341, 342, 1106], "ramalho": [291, 341, 342, 1106], "140640823526928": 292, "0x7fe97e53c610": 292, "140640823526960": 292, "140640741310912": 292, "140640741034048": 292, "140640741341184": 292, "wasjetzt": 292, "140640722624768": 292, "140640722715136": 292, "l1_copi": 292, "my_funky_gener": 292, "meine_dumme_sequenz": 292, "0x7fe9785083a0": 292, "0x7fe98c21bce0": 292, "greeter": [292, 451, 452, 453, 457, 458, 998], "0x7fe9796976d0": 292, "140640740502720": 292, "140640722823952": 292, "140640741119552": 292, "l_copi": 292, "140640741312256": 292, "140640722734080": 292, "140640722760768": 292, "140640722739712": 292, "140640741402496": 292, "owher": 292, "0000042": [292, 1051], "bled": 292, "xfc": [292, 308, 1037, 1119], "xdfe": [292, 308, 1119], "gr\u045c\u043fe": [292, 308, 1119], "\u795d\u597d": [292, 308], "big5": [292, 308, 1119], "xaf": [292, 308], "xac": [292, 308], "xa6n": [292, 308], "unterschrift": 292, "illeg": [292, 429, 1119], "multibyt": [292, 375, 1119], "xe7": [292, 308, 1119], "xa5": [292, 308, 1119], "x9d": [292, 308, 1119], "xe5": [292, 308, 1119], "xbd": [292, 308, 1119], "incorpor": [294, 310, 1161], "tradition": [294, 310, 715, 907, 1028, 1161], "lexer": [294, 310, 1161], "aris": [294, 310, 478, 1161], "compili": [294, 310, 1161], "rant": [295, 311, 454, 761, 1129], "blacklist": [295, 311, 453, 454, 459, 462, 761], "acquaint": [296, 299], "data_to_send": 297, "data_receiv": 297, "user_receiv": [297, 1102], "140048588115008": 297, "140048588341376": 297, "d_str": [300, 645], "uebertragen": 300, "d_str_receiv": 300, "d_receiv": 300, "ala": [303, 306, 492, 583, 864, 930, 970, 1134], "frozendict": [303, 304], "filesensor": 303, "sergei": 303, "test_acquisition_loop": 303, "test_mock_csv_sink": 303, "mymockedth": 303, "nonloc": [303, 1047], "millcelsiu": 303, "acquisition_loop_util": 303, "ont": 303, "necessarili": [303, 413, 443, 600, 759, 794, 808, 845, 925, 1023, 1141, 1148], "10m": [303, 970], "acquir": [303, 349, 739, 813, 955, 960, 969], "slower": [303, 437, 845], "packet": [303, 489, 802, 908, 931, 964], "transmit": 303, "datatim": 303, "read_measur": 303, "fourier": 303, "fft": 303, "011": [303, 314], "ifft": 303, "print_": 304, "0x7f0b165fdf00": 304, "dos_path": [304, 335], "vernuenftigen": 304, "__class_getitem__": 304, "__iand__": 304, "__ior__": 304, "__isub__": 304, "__ixor__": 304, "difference_upd": 304, "intersection_upd": 304, "issubset": 304, "issuperset": 304, "symmetric_differ": 304, "symmetric_difference_upd": 304, "hallohallohallohallohallo": 304, "139685905188368": 304, "139685905188400": 304, "0x7f0b14487be0": 304, "fasschingbau": 304, "139685602274352": 304, "139685561461616": 304, "139685561690240": 304, "139685561316032": 304, "139685595970464": 304, "139685561151488": 304, "30000000": 304, "my_iter": 304, "my_print": [304, 1028], "my_arg": [304, 1003], "even_squar": [304, 314], "squares_fun": 304, "squares_gen": 304, "0x7f0aefb94f20": 304, "0x7f0aefb955b0": 304, "squares_list": 304, "foobar": 304, "expr_str": 304, "expr": [304, 398, 408, 868], "skiprow": 304, "hz2": 304, "hz3_5": 304, "000566": 304, "000729": 304, "132363": 304, "229977": 304, "260597": 304, "444942": 304, "385433": 304, "638212": 304, "502710": 304, "796519": 304, "936250": 304, "972326": 304, "974442": 304, "999992": 304, "995683": 304, "973719": 304, "999245": 304, "895850": 304, "985202": 304, "768778": 304, "arang": 304, "001": [304, 314, 389], "002": 304, "003": 304, "004": 304, "0x7f0ad44b8f70": 304, "0x7f0ad23371f0": 304, "aaarghhh": 305, "expresss": 305, "realist": [306, 924], "postpon": [306, 828], "coverag": [307, 1012], "hackin": 307, "mocksink": 307, "139680347735568": 308, "0x10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000": 308, "0xabc": 308, "convert_to_int": 308, "konvertieren": 308, "drei_int": 308, "fooabc": 308, "userlin": 308, "tjr": 308, "\u00f6rg": 308, "0xc3": [308, 314], "enc_": 308, "enc_s_recvd": 308, "ipykernel_81650": 308, "1521975281": 308, "lg_joerg": 308, "concat": [308, 449, 1123], "linksunten": 308, "rechtsoben": 308, "meinsinussensor": 308, "sinvalu": 308, "ndarrai": [308, 1112, 1128], "0x7f67142f53c0": 308, "timeit": 313, "0x64": 314, "0b1100100": 314, "0b100101100": 314, "0b0": 314, "type_of_i": 314, "schade": 314, "worldhello": 314, "140572055569936": 314, "500001": 314, "499999999999999999999999": 314, "4999": 314, "my_round": 314, "diff_to_next": 314, "5001": 314, "500000001": 314, "str_i": 314, "int_i": 314, "float_i": 314, "nocheinelist": 314, "140571746172800": 314, "140571753417312": 314, "my_": 314, "2282548071841868421": 314, "oioi": 314, "ueberbleibsel": 314, "my_sum": 314, "doom": 314, "0x7f48e8543060": 314, "doedel": 314, "sdhcbdhcb": 314, "kjsdskbh": 314, "akjsdhvksb": 314, "item2": [314, 756, 757], "line_r": 314, "tyyi": 314, "mp_left": 314, "mp_top": 314, "mp_right": 314, "mp_righ": 314, "brenner": 314, "kupfer": 314, "koax": 314, "oberflaech": 314, "gasdues": 314, "fsc": 314, "zellentemp": 314, "raumtemp": 314, "vdc": 314, "077": 314, "090": [314, 665], "76220": 314, "77849": 314, "086": 314, "81216": 314, "99354": 314, "92051": 314, "035": [314, 978, 979], "82874": 314, "075": 314, "006": 314, "78855": 314, "098": 314, "036": 314, "007": 314, "76466": 314, "091": 314, "64736": 314, "65062": 314, "transform_t": 314, "transformed_timestamp": 314, "646126e": 314, "646130e": 314, "mpleft_1": 314, "mpleft_2": 314, "0x7f48ab74abf0": 314, "0x7f48a96648b0": 314, "noch_eine_vari": 314, "even_pr": 314, "0x7f48a9505b40": 314, "0x7f48a95250e0": 314, "squaredict": 314, "squaresset": 314, "bloat": [316, 317, 425, 745, 754, 760, 761, 1025], "ugh": 316, "urgh": 316, "nodiscard": 316, "fallthrough": [316, 979], "noexcept": [316, 468, 502, 673, 676, 678, 693, 695, 696, 698, 699, 700, 701, 715, 725, 739], "string_view": 316, "hierachi": 317, "conveni": [317, 372, 456, 834, 914, 979, 999, 1111], "powercontrol": 317, "temperaturecontrol": 317, "get_target_temperatur": 317, "copyabl": [317, 568], "_run": 317, "kochtopftemperaturecontrol": 317, "get_current_temperatur": 317, "debt": [317, 491, 492, 493, 505, 506, 507], "erasur": [317, 745, 754, 760, 761], "align": [317, 358, 426, 435, 439, 444, 445, 667, 705, 744, 758, 760, 761, 906, 908, 975, 1051, 1157, 1160], "commmandlin": 325, "omg": [325, 407, 767, 1140], "checker": [326, 331, 340], "horribl": 326, "gpio25": [326, 909], "embarass": 326, "winscp": 326, "cluster_ece19": [326, 327, 328, 329, 330, 331, 340, 761], "ece19": [326, 327, 328, 329, 331, 339, 340, 346, 347, 351, 761], "ece19_blinklicht": [326, 327, 328, 329, 330, 340, 761], "ece19_file_read": [326, 327, 328, 329, 330, 331, 340, 761], "ece19_blinklicht_oo": [327, 328, 329, 330, 340, 761], "ece19_blinklicht_abc": [329, 330, 340, 761], "ece19_blinklicht_unittest": [329, 330, 340, 761], "blinklicht": [330, 340, 345, 761], "1910420003": [331, 332], "corinna": [331, 332], "baumgartn": [331, 332, 349], "1910420002": [331, 332], "anzhelika": [331, 332, 340], "chernykh": [331, 332, 340, 349], "1910420005": [331, 332], "simon": [331, 332], "1910420006": [331, 332], "matthia": [331, 332, 349], "kappel": [331, 332, 349], "1810420009": [331, 332], "kolter": [331, 332], "1920420033": [331, 332], "kornberg": [331, 332, 349, 352], "1910420007": [331, 332], "lui": [331, 332, 349], "kraker": [331, 332, 349, 352], "1810420010": [331, 332], "leonid": [331, 332], "kudriaschov": [331, 332], "1910420008": [331, 332], "michael": [331, 332, 341, 342], "1910420010": [331, 332], "sonja": [331, 332, 349], "luka": [331, 332, 349, 352], "1910420013": [331, 332], "behnaz": [331, 332], "mehrabadi": [331, 332, 349], "1910420014": [331, 332], "moser": [331, 332, 349], "1910420015": [331, 332], "moritz": [331, 332], "nagelschmi": [331, 332, 349], "1910420018": [331, 332], "bianca": [331, 332], "reimer": [331, 332], "1910420020": [331, 332], "schmid": [331, 332, 349], "1910420021": [331, 332], "sch\u00fcttler": [331, 332], "1910420022": [331, 332], "schweiger": [331, 332, 349], "1910420024": [331, 332], "sinabel": [331, 332], "1910420025": [331, 332], "slovik": [331, 332, 349], "1910420026": [331, 332], "s\u00f6l": [331, 332, 349], "1910420027": [331, 332], "stangl": [331, 332, 349], "1910420028": [331, 332], "felix": [331, 332, 349], "themessl": [331, 332, 349], "1920420035": [331, 332], "astrid": [331, 332], "vogel": [331, 332, 349], "1810420029": [331, 332], "florian": [331, 332, 349], "zwittnigg": [331, 332], "matricul": [331, 1006], "studentdb": 331, "greatli": [331, 433, 1159], "matnr": 331, "rid": [331, 431, 472, 810, 827], "zuweisung": 332, "n1910420002": 332, "n1910420005": 332, "n1910420006": 332, "n1810420009": 332, "n1920420033": 332, "n1910420007": 332, "n1810420010": 332, "n1910420008": 332, "n1910420010": 332, "n1910420013": 332, "n1910420014": 332, "n1910420015": 332, "n1910420018": 332, "n1910420020": 332, "n1910420021": 332, "n1910420022": 332, "n1910420024": 332, "n1910420025": 332, "n1910420026": 332, "n1910420027": 332, "n1910420028": 332, "n1920420035": 332, "n1810420029": 332, "n666": 332, "5g": 332, "n19": 332, "10420013": 332, "n181": 332, "0420029": 332, "20210324": 333, "orig_si": 333, "__interactivehook__": 333, "_base_execut": 333, "_clear_type_cach": 333, "_current_fram": 333, "_debugmallocstat": 333, "_framework": 333, "_getfram": 333, "_git": 333, "_home": 333, "_xoption": 333, "flo": 334, "ted": 334, "rainer": 334, "rg": 334, "some_numb": [335, 1034], "auszuspucken": 335, "eine_neue_vari": 335, "klassisch": 335, "140705292246608": 335, "register_cont": 335, "0b11010001110101000": 335, "107432": 335, "erzwungen": 335, "0x1249ad2594c37ceb0b2784c4ce0bf38ace408e211a7caab24308a82e8f10000000000000000000000000": 335, "groesst": 335, "darstellbar": 335, "ein_string_der_aussieht_wie_ein_integ": 335, "ein_integ": 335, "ver\u00e4ndernd": 335, "say_hello": [336, 1023], "333333333333336": 336, "disclos": [337, 921], "formalit\u00e4ten": 339, "summer": [339, 340, 346], "daili": [339, 851], "organiz": 340, "shortcut": [340, 417, 868, 900, 1037, 1165], "baustein": [340, 345], "navigieren": [340, 345], "sitzen": [340, 345], "nat\u00fcrlich": [340, 345, 358, 1153], "verstehen": [340, 345, 358, 1166], "pr\u00fcfung": [340, 345], "trocken": [340, 345], "pfade": [340, 345, 1154, 1165], "symbolisch": [340, 345, 895], "verschieben": [340, 345], "textfil": [340, 345], "113ff": [340, 345], "ansatzweis": [340, 345], "durchgegangen": [340, 345], "133ff": [340, 345], "durchgemacht": [340, 345], "wirkungsweis": [340, 345], "verstanden": [340, 345, 1156], "verkn\u00fcpfen": [340, 345], "aufw\u00e4rmen": 340, "fremden": 340, "fragerund": 340, "tire": [340, 345], "transact": [340, 345], "wertebereich": 340, "vpn": [340, 915], "gitlab": 340, "sidenot": 340, "swoop": [340, 466], "hashbang": 340, "student1": 340, "student2": 340, "student3": 340, "undescript": 340, "contribut": [340, 982], "crlf": 340, "bang": [340, 460], "trial": [340, 985, 994, 1113], "systemkonzept": [341, 358, 1172], "adressr\u00e4um": [341, 358, 1163], "ger\u00e4t": 341, "destruktoren": [341, 1158], "containertempl": 341, "ausz\u00fcg": 341, "labor\u00fcbungen": 341, "absolventinnen": 341, "absolventen": 341, "entwicklungsplatform": 341, "zielplattform": [341, 1158], "dortigen": 341, "betriebssystemkonzept": [341, 1163, 1170], "verinnerlichen": 341, "eckpfeil": [341, 1158], "ansteuern": 341, "merkmal": 341, "nichttrivial": 341, "kerrisk": [341, 342], "handbook": [341, 342], "corbet": [341, 342, 1154], "allessandro": [341, 342], "rubini": [341, 342], "greg": [341, 342], "kroah": [341, 342], "hartman": [341, 342], "richard": [341, 342, 982], "steven": [341, 342, 437], "stephen": [341, 342], "rago": [341, 342], "brian": [341, 342, 361, 1156], "cookbook": [341, 342, 1146], "lutz": [341, 342], "integriert": 341, "\u00fcbungsanteil": 341, "informatik": 341, "einzelpr\u00fcfung": 341, "schriftlich": 341, "vorlesung": 341, "graduat": 342, "copver": 342, "warm": 343, "briefli": [344, 905], "filethermomet": 344, "ue": 346, "arduino": [346, 348, 905, 913, 1122], "homedirectori": [346, 896], "vbox": 346, "subnet": 346, "mgmt": 347, "64ff": 347, "readdir": [347, 759], "ow": [347, 491, 492, 493, 505, 506, 507], "readlink": 347, "tracker": [348, 349], "thermometers_docu": 348, "toctre": 348, "execconfig": 348, "wacom": [348, 410, 411], "schuettler": 349, "zwittnig": 349, "simu": 349, "kudriaschow": 349, "hysteres": 349, "impl": 349, "marku": 349, "stepper": 349, "motor": [349, 761, 904, 911], "wasserfal": 349, "influxdb": 349, "grafana": 349, "nachmittag": 349, "multitask": [350, 355, 738, 760, 761, 904, 945, 959, 965, 967, 968, 970, 1170], "latenc": [351, 355, 739, 761, 806, 904, 945, 965, 967], "gotcha": [351, 355, 640, 761, 904, 925, 945, 965, 967, 975], "type_from_ini": 351, "ece19error": 351, "configfil": [351, 1006], "prettier": [351, 582], "support_address": 351, "invalidtypeerror": 351, "newcom": [353, 354], "individualtrain": 357, "baden": 357, "w\u00fcrttemberg": 357, "beginnend": 357, "kursnotizen": 357, "qualivis": 357, "logbuch": 358, "kursteilnehmern": 358, "zustandegekommen": 358, "zukommen": 358, "potentiellen": 358, "zuk\u00fcnftigen": 358, "eindruck": [358, 1153], "zukommt": 358, "publizieren": 358, "einverst\u00e4ndni": 358, "richtlinien": 358, "thalheim": 358, "aachen": 358, "herzogenrath": 358, "mixtur": [358, 601], "gr\u00e4felf": 358, "wel": 358, "regensburg": 358, "pr\u00e4sent": 358, "inhous": [358, 1108, 1153], "linuxcampu": 358, "sch\u00f6nen": 358, "aktiv": 358, "mitgestaltet": 358, "kursabschluss": 358, "dran": 358, "provok": 358, "kam": 358, "anmeldung": 358, "zustand": 358, "freiheiten": 358, "gestanden": 358, "zusatzaufgab": 358, "gef\u00fchrt": [358, 1153], "einschr\u00e4nkungen": [358, 1171], "eintagesworkshop": 358, "leuten": 358, "kenn": 358, "einhergehend": 358, "l\u00f6sungen": [358, 1153, 1154], "darauffolgend": 358, "vertiefen": 358, "ausgew\u00e4hlten": 358, "bereichen": 358, "dbapi2": [358, 1118], "objektorientierung": 358, "r\u00e4umen": 358, "zweit\u00e4gig": 358, "gemisch": 358, "kursen": 358, "ziemlich": 358, "eingemacht": 358, "bestellt": 358, "neugier": 358, "leichtfertig": 358, "tief": 358, "hinabgestiegen": 358, "feiner": 358, "internen": 358, "forschungsprojekt": 358, "gebracht": 358, "diesen": [358, 1173], "zusammenschnitt": 358, "workshopcharakt": [358, 1177], "angegraut": 358, "bewusst": [358, 1175], "verwendung": 358, "wunderbar": 358, "automatisieren": 358, "zurerst": 358, "shellbenutzung": 358, "betriebssystemen": [358, 1165, 1170, 1172], "angeordnet": 358, "ge\u00fcbt": 358, "herk\u00f6mmlichen": [358, 1158], "auffrischung": 358, "eingerostet": 358, "neuigkeiten": 358, "querbeet": 358, "aufbauend": 358, "zuvor": 358, "grundkur": 358, "wichtigsten": 358, "neuerungen": [358, 1158], "tobak": 358, "lieblingsschulungen": 358, "basiswissen": 358, "hoeri": 358, "bastelwoch": 358, "betrachtung": 358, "realtimef\u00e4higkeit": 358, "xenomai": [358, 1154], "fad": 358, "auszugsweis": 358, "richtig": [358, 1173], "n\u00e4chten": 358, "schulungstagen": 358, "kurzweil": 358, "beschert": 358, "einf\u00fchrungscharakt": 358, "kernelprogrammierung": 358, "auftrag": 358, "hardwarenah": [358, 1163, 1170], "ausgew\u00e4ht": 358, "kernelstruktur": 358, "crosscompil": 358, "newer": [359, 762, 925, 998, 1162], "msys2": 360, "5595": 360, "17619": 360, "pacman": 360, "mingw64": 360, "w64": 360, "x64": 360, "medium": [360, 450, 727, 980, 1176], "swlh": 360, "2b2e66352456": 360, "kernighan": [361, 1156, 1157], "denni": [361, 401, 600, 1156], "ritchi": [361, 401, 600, 1156, 1157], "ansi": 361, "iec": [361, 566], "9899": 361, "c11": 361, "pdp": [361, 375], "ken": 361, "thompson": 361, "tabul": [362, 370], "celsiu": [363, 364, 466, 477, 508, 912, 914], "brutal": [363, 382, 386, 407, 665, 682, 968], "ordinari": [363, 583, 637, 687, 792, 800, 871, 948, 1028, 1035], "everytim": [365, 383, 912], "ascend": [366, 1128], "unread": [367, 385, 442, 728, 983, 984, 1004, 1048], "putchar": 369, "caution": [369, 575, 834, 908], "obscur": [369, 377, 522, 643, 825, 934, 976], "alright": [369, 395], "inequ": [369, 583], "word1": [370, 542], "word2": [370, 542], "word3": [370, 542], "word4": 370, "word5": 370, "unixen": [370, 759, 976, 1141, 1154], "nonsens": [371, 389, 408, 568, 572, 575, 665, 724, 871, 966, 1003, 1112, 1151], "illustr": [371, 1006], "countchar": 371, "nwhite": 371, "nother": 371, "stat": [371, 759, 930, 938, 939, 940, 941, 966, 972, 975, 979, 1139], "nonprint": [372, 400], "decis": [372, 447, 527, 574, 590, 724, 905, 968, 1008, 1113, 1162], "xxxxxxxxxxxxxxxxxxxxxxxxx": 372, "xxxxxxxxxxxxxxxxxx": 372, "subroutin": [373, 441], "outer": [373, 400], "wimplicit": [373, 776], "hygien": 373, "dear": 373, "assembl": [375, 982], "contradict": [375, 670], "640k": 375, "a_str": 375, "strncpy": 375, "maxlen": [375, 376], "strcat": 375, "strncat": 375, "strcmp": [375, 676, 677], "strncmp": 375, "another_str": 375, "nonsensi": 376, "read_lin": 376, "longest": 376, "confin": [377, 1006], "cluster_c": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cluster_c_introduct": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 705, 721, 730, 738, 746, 758, 760, 761], "c_introduction_exercise_string_read_lin": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_character_arrai": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_exercise_histogram": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_arrai": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_exercise_power_declar": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_funct": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_exercise_fahrenheit_for": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_for_loop": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_external_variables_and_scop": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_exercise_wc": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_introduct": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_instal": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 667, 674, 705, 721, 730, 738, 746, 758, 760, 761], "c_introduction_exercise_fahrenheit_cpp": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_cpp_symbolic_const": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_variables_and_arithmetic_express": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_hello_world": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_character_io": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_introduction_exercise_fahrenheit_float": [378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "z0": 380, "abbrevi": [381, 682, 685, 687, 691, 745, 747, 749, 750, 751], "char_bit": 381, "x86": [381, 460, 982, 999], "stdint": [381, 912, 932, 975], "int8_t": 381, "uint8_t": [381, 479, 494, 666, 912], "int16_t": 381, "int32_t": 381, "uint32_t": 381, "int64_t": 381, "uint64_t": [381, 418, 524, 694, 695, 729, 932, 975], "052": 382, "0x2a": 382, "0b010010": 382, "42l": 382, "456f": 382, "456l": 382, "x61": 382, "alert": [382, 425, 431, 725, 1037, 1045, 1054, 1056], "backspac": [382, 868, 1050], "formfe": 382, "ooo": 382, "octal": [382, 1037, 1050, 1051], "xhh": 382, "some_funct": 383, "some_vari": 383, "1415926535897932": 383, "some_nonsensical_numb": 383, "legal": [385, 429, 575, 673, 938, 980], "truth": [385, 935, 961], "eleg": [385, 728], "blank": 385, "num_lf": 385, "narrow": [386, 1113], "4294967295u": 386, "wsign": [386, 428], "wconvers": 386, "4294967296u": 386, "unscrupul": 386, "0x100000000": 386, "weaker": 386, "stronger": [386, 1018, 1125], "1l": 386, "1u": 386, "losslessli": 386, "1ul": 386, "wtype": [386, 428], "wextra": [386, 428], "pedant": 386, "anti": [386, 813, 950], "sloppi": 386, "advic": [386, 1037], "immens": [386, 980], "hazard": 386, "messi": [386, 457], "subtl": [387, 407, 430, 522, 1031], "copy_and_omit": 387, "0x4b": 389, "01001011": 389, "0x0c": 389, "00001100": 389, "0x08": 389, "00001000": 389, "0x4f": 389, "01001111": 389, "0x47": 389, "01000111": 389, "0x03": 389, "00000011": 389, "0x80": 389, "00110000": 389, "0x4c": [389, 798], "01001100": 389, "0xb3": 389, "10110011": 389, "arr": [390, 669], "unari": [392, 1037], "strongest": [392, 1037], "intuit": [392, 440], "danger": [392, 410, 568, 808, 958, 979, 1046, 1159], "decrement": [393, 402, 409, 413, 415, 419, 422, 426, 435, 439, 444, 445, 618, 667, 705, 724, 758, 760, 761, 767], "cluster_c_types_operators_express": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_const": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_datatypes_s": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_assignment_operators_and_express": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_bit_oper": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_relational_logical_oper": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_arithmetic_oper": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_exercise_string_reduc": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_increment_decrement_oper": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_variable_nam": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_introduct": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_conditional_express": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_type_convers": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_precedence_and_order_of_evalu": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_types_operators_expressions_declar": [393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "doabl": 398, "cond": [398, 955], "precedenceof": 398, "innermost": [400, 637, 642], "concern": [400, 401, 449, 767, 844, 914, 1005, 1161], "edsger": 401, "dijkstra": 401, "plea": 401, "manifold": 401, "judici": [401, 437, 1161], "do_complicated_stuff": 401, "cleanup_mess": 401, "cluster_c_program_flow": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_statements_and_block": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_break_and_continu": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_loops_do_whil": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_loops_while_and_for": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_switch": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_goto_and_label": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_else_if": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_flow_if_els": [402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "vice": 403, "versa": 403, "g_lobal": [404, 405, 407], "print_g": [404, 405], "linkag": 405, "percept": [405, 844], "disciplin": [405, 427, 437, 447, 1112], "convent": [405, 449, 824, 868, 890, 928, 1005, 1020], "ifndef": [405, 407, 408, 450, 457, 551, 569, 575, 577, 578, 676, 677, 723, 982, 998, 1000], "g_h": 405, "programx": 406, "cautious": 407, "c99": [407, 1157], "slow": [407, 438, 442, 618, 914, 925], "have_c_h": 407, "clash": [407, 430], "include_onc": 407, "newbi": [407, 669], "hurdl": 407, "ifdef": [408, 465, 618], "defined": 408, "unequ": 408, "tempt": 408, "horror": 408, "do_much": 408, "do_thi": [408, 729], "do_that": [408, 729], "do_less": 408, "__pragma": 408, "4127": 408, "warn_if": 408, "statem": 408, "function_help": 408, "function_quit": 408, "function_": 408, "inject_viru": 408, "doomed_process": 408, "win32": [408, 1175], "foreign_mem": 408, "virtualallocex": 408, "mem_commit": 408, "page_execut": 408, "page_readwrit": 408, "infect": 408, "__file__": [408, 1006, 1139], "__line__": 408, "smell": [408, 462], "pest": 408, "cluster_c_functions_and_program_structur": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_external_vari": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_bas": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_c_preprocessor_advanc": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_c_preprocessor": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_header_fil": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_functions_and_program_structure_static_vari": [409, 415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "dereferenc": [410, 678, 713, 717], "35129": 410, "calle": [411, 441, 443, 580, 1001], "tablet": 411, "excang": 412, "pa1": 413, "pa2": 413, "cluster_c_pointers_and_arrai": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_pointers_and_arrays_pointers_and_function_argu": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_pointers_and_arrays_pointers_and_address": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_pointers_and_arrays_command_line_argu": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_pointers_and_arrays_pointers_and_arrai": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_pointers_and_arrays_exercise_swap": [415, 419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "scalar": [416, 431, 1054], "fantasi": [416, 905, 907], "p1": [416, 521, 567, 569, 575, 581, 583, 585, 586, 670], "p2": [416, 521, 567, 569, 575, 581, 583, 586, 670], "laid": 416, "makepoint": 417, "addpoint": [417, 433], "addtopoint": 417, "pid_t": [418, 951, 969, 980], "cluster_c_structur": [419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_structures_structures_and_funct": [419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_structures_bas": [419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_structures_typedef": [419, 422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "dealloc": [420, 558, 710, 769, 796, 802], "ptr": [420, 543, 675, 723, 724, 725, 726], "do_something_with": [420, 668, 714], "list_init": 421, "list_destroi": 421, "list_insert": 421, "list_remov": 421, "list_count": 421, "list_print": 421, "keylen": 421, "cluster_c_memori": [422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_memory_malloc": [422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_memory_exercise_linked_list": [422, 426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "corollari": [423, 425, 731, 1014], "reorder": [423, 739, 792], "use_count": [423, 424, 724, 726, 756], "use_resourc": [423, 424], "do_something_with_shared_resourc": [423, 424], "conceiv": [423, 1031], "completion_flag": 423, "out_word": 423, "in_word": 423, "unforese": 423, "volatil": [424, 426, 435, 439, 444, 445, 667, 705, 733, 758, 760, 761, 818, 980, 1157, 1160], "instr": [424, 442, 953, 1016], "pthread_mutex_t": [424, 737, 800, 953, 955], "use_count_mutex": 424, "pthread_mutex_initi": [424, 953], "pthread_mutex_lock": [424, 737, 953, 955], "pthread_mutex_unlock": [424, 737, 953, 955], "expens": [424, 431, 567, 580, 583, 673, 678, 714, 715, 724, 813, 950, 1159], "fetch_and_add": [424, 953], "__sync_fetch_and_add": [424, 734, 953, 954], "sheer": [424, 570], "neglig": 425, "penalti": 425, "memcpi": 425, "freeli": 425, "rearrang": [425, 617], "anim": 425, "pragma": [425, 466, 468, 472, 477, 489, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 524, 582, 599, 602, 696, 745, 747, 749, 750, 751, 752, 759], "textit": 425, "bogu": [425, 437, 578, 676, 677, 703, 914, 980], "__pad0": 425, "__pad1": 425, "misalign": 425, "intrins": [426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "cluster_c_advanced_language_featur": [426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_advanced_language_features_atom": [426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_advanced_language_features_volatil": [426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "c_advanced_language_features_align": [426, 435, 439, 444, 445, 667, 705, 758, 760, 761], "matur": 427, "odditi": 427, "rectifi": 427, "fortran": 427, "lazy": [427, 708], "meant": [427, 979], "shortcom": [427, 492, 653, 658, 661], "holidai": 427, "handcraft": [427, 475, 1041], "clariti": [428, 432, 937], "baud": 429, "idl": 429, "writing_request": 429, "reading_respons": 429, "wait_retri": 429, "protocol_engin": [429, 433], "deduc": [429, 665, 668, 693], "obligatori": 429, "anyhow": 429, "forgot": 429, "unambigu": [429, 665], "protocol_error": 429, "eat": [429, 437], "unintend": 431, "wwrite": 431, "max_bucket": 431, "unus": [431, 466, 521, 523, 567, 571, 582, 621, 622, 675, 786, 845, 961, 975], "pj": 431, "pointe": 431, "ppi": 431, "height": [432, 475, 584], "beman": 432, "daw": 432, "obfusc": 433, "ssize_t": [433, 525, 767, 926, 930, 931, 932, 934, 938, 939, 940, 941, 944, 946, 949, 972, 975, 976, 979], "send_fram": 433, "eng": 433, "send_sum": 433, "v_int32": 433, "spectacular": 433, "adequ": 433, "unix_error": 433, "app_error": 433, "unix_error_cr": 433, "unix_error_ok": 433, "uerr": 433, "app_error_cr": 433, "app_os_error": 433, "impact": [433, 437], "enhanc": [433, 841], "beyond": [434, 934], "consider": [434, 868], "slowdown": 434, "0x400552": 434, "0x51bb072": 434, "0x4c28c6d": 434, "vg_replace_malloc": [434, 575], "0x400545": 434, "loss": [434, 916], "rec": [434, 1096, 1098], "uncov": 434, "readabilti": [435, 439, 444, 445, 667, 705, 758, 760, 761], "explict": [435, 439, 444, 445, 761], "cluster_c_program_san": [435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_sanity_struct_initi": [435, 439, 444, 445, 761], "c_program_sanity_const": [435, 439, 444, 445, 761], "c_program_sanity_integral_typ": [435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_sanity_introduct": [435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_sanity_valgrind": [435, 439, 444, 445, 761], "c_program_sanity_explicit_type_safeti": [435, 439, 444, 445, 761], "c_program_sanity_discrete_valu": [435, 439, 444, 445, 667, 705, 758, 760, 761], "c_program_sanity_stat": [435, 439, 444, 445, 761], "hotspot": [436, 440], "checksum": [436, 916, 964], "externel": 436, "sha1sum": [436, 964, 967, 970], "8g": 436, "0m38": 436, "0m3": 436, "0m0": 436, "perceiv": 436, "daze": 436, "mp3": 436, "018": 436, "mult": 437, "rumour": 437, "uncondit": 437, "finlin": 437, "o3": [437, 452, 759, 1148], "heurist": 437, "o1": 437, "magnitud": [437, 438], "overus": [437, 479, 1019, 1159], "spill": 437, "fira": 437, "rtfm": [437, 1052, 1146], "compromis": [437, 447, 475], "transit": [437, 462], "fmove": 437, "outweigh": 437, "thrash": [437, 967, 1157], "understood": [437, 447, 524, 729, 808, 1161], "misnom": [437, 1056], "o0": [437, 452], "unagress": 437, "chew": [437, 739], "agress": 437, "muchnik": 437, "levin": 437, "nearbi": 438, "bounc": [438, 827], "4x3": 438, "rectangular": 438, "cluster_c_perform": [439, 444, 445, 761], "c_performance_memori": [439, 444, 445, 761], "c_performance_computebound": [439, 444, 445, 761], "c_performance_introduct": [439, 444, 445, 761], "bust": 440, "haul": 440, "cheater": 440, "fallibl": 440, "supplement": 440, "gprof": [440, 442, 443, 444, 445, 761, 1157], "callgrind": [440, 443, 444, 445, 761, 1157], "oprofil": [440, 444, 445, 761, 1157], "gmon": 441, "spot": 441, "38000000": 441, "find_dupl": [441, 443], "criterion": [441, 608], "37000000": 441, "luck": [441, 912, 1003, 1005], "gprof2dot": 441, "tjpeg": 441, "predict": [442, 443, 1109, 1111, 1112], "sluggishli": 442, "16761": 442, "callgrind_annot": 442, "atstart": 442, "callgrind_control": 442, "nmi": 443, "ophelp": 443, "operf": 443, "oprofile_data": 443, "opreport": 443, "opannot": 443, "oparch": 443, "opgprof": 443, "Their": 443, "2085": 443, "2505": 443, "maskabl": 443, "callgraph": 443, "pxe": 443, "vmlinux": [443, 783], "debuginfo": 443, "userland": [443, 767], "routin": [443, 449, 554, 759, 800, 806, 811, 932, 968, 1000, 1100, 1102], "analyz": 443, "jcf": [443, 808, 834], "jxf": [443, 808, 834], "gdf": 443, "op2calltre": 443, "oprof": 443, "applet": 443, "viewabl": [443, 456], "kcachegrind": 443, "cluster_c_profil": [444, 445, 761], "c_profiling_oprofil": [444, 445, 761], "c_profiling_callgrind": [444, 445, 761], "c_profiling_introduct": [444, 445, 761], "c_profiling_gprof": [444, 445, 761], "worker": [447, 673], "consensu": [447, 470], "consent": [447, 1026], "male": [447, 1068], "prcess": 447, "obei": [447, 449], "liskov": 447, "antipattern": [447, 475], "gonna": 447, "indecis": [447, 1162], "road": 447, "manufactur": [447, 914], "pcb": [447, 912], "bom": 447, "requiremenet": 447, "yyyi": 448, "testabl": [448, 1140], "yagni": 448, "fraunhof": 448, "make_categori": 449, "outputfil": 449, "to_datetim": 449, "make_float": 449, "orpheum": 449, "goingout": 449, "hervi": 449, "sport": 449, "card": [449, 808, 837, 872, 874, 879, 880], "to_csv": 449, "read_from_csv": 449, "write_to_csv": 449, "clean_data": 449, "csvname_or_list_thereof": 449, "workaround": [449, 666, 669, 781, 1139], "read_from_dir": 449, "re_yyyy_mm": 449, "inputdir": 449, "libreoffic": 449, "monolith": [449, 982], "factor": [449, 776, 777, 808], "test_data_clean": 449, "test_make_float": 449, "1999": 449, "test_date_convers": 449, "at666666666666666666": 449, "000009173": 449, "bawaatwwxxx": 449, "at211420020010848041": 449, "ausgleich": 449, "firmenkonto": 449, "test_input": 449, "read_from_csv_singl": 449, "read_from_csv_multipl": 449, "deliber": 449, "test_read_csv_singl": 449, "000009284": 449, "2371": 449, "000009283": 449, "at613400000005077508": 449, "world4you": 449, "writelin": [449, 1056, 1101, 1103], "test_read_csv_multipl": 449, "lines_2023_02": 449, "lines_2023_01": 449, "000009229": 449, "4111": 449, "bp": 449, "tankstel": 449, "000009228": 449, "at081400086210003454": 449, "\u00f6sterreichisch": 449, "gesundheitskass": 449, "_write_csv": 449, "read_from_csv_dir": 449, "test_read_csv_dir": 449, "testutil": 449, "write_csv": 449, "test_category_csv": 449, "000009168": 449, "000009169": 449, "2801": 449, "strassenbahn": 449, "eas": [449, 1118], "finer": 449, "refact": 449, "str_categori": 449, "cardunknown": 449, "flughafen": 449, "wien": 449, "test_more_of_it": 449, "000009153": 449, "parken": 449, "fl": 449, "inputread": 449, "recursivecsvinputread": 449, "singlecsvinputread": 449, "compositeinputread": 449, "input_abc": 449, "abstractmethod": [449, 1018], "multiplecsvinputread": 449, "test_input_abc": 449, "cmake_minimum_requir": [450, 984, 1148], "identif": [450, 912, 983, 984], "abi": [450, 460, 786, 788, 928, 983, 984], "hello_nam": [450, 456], "hello_name_h": 450, "democonfig": [451, 453, 457, 458, 459], "libhello": [451, 452, 453, 455, 458, 461], "configure_fil": 451, "demo_version_major": 451, "demo_version_minor": 451, "cmake_current_binary_dir": 451, "demo_major": 451, "demo_minor": 451, "include_directori": [451, 462], "overkil": 451, "cmake_cxx_standard": [452, 1148], "dndebug": 452, "cmake_": 452, "_compiler_id": 452, "IF": [452, 457, 458, 459], "g3": 452, "strequal": 452, "cmake_c_compiler_id": 452, "cmake_c_flag": [452, 1148], "cmake_cxx_compiler_id": 452, "cmake_cxx_flag": [452, 1148], "howdi": [452, 576, 707, 709, 710, 848, 852, 938, 939, 941, 1023], "bullshithowdi": 452, "fatal_error": 452, "send_error": 452, "attract": [452, 669], "findsqlite3": 453, "sqlite3_include_dir": 453, "sqlite3_librari": 453, "typo": [453, 1019, 1020], "sqlite3_vers": 453, "sqlite3_found": 453, "olden": 453, "0x00007f76ae011000": 453, "libz": 453, "0x00007f76adef7000": 453, "cluster_cmak": [454, 761], "cmake_configure_fil": [454, 761], "cmake_cxx_and_r": [454, 761], "cmake_shared_libraries_preview": [454, 761], "cmake_librari": [454, 761], "cmake_test": [454, 761], "cmake_external_depend": [454, 761], "cmake_bas": [454, 761], "cmake_optional_code_approach_1": [454, 761], "cmake_optional_code_problem": [454, 761], "cmake_structur": [454, 761], "cmake_instal": [454, 761, 983, 984], "cmake_targets_properti": [454, 761], "cmake_optional_code_approach_2": [454, 761], "cmake_install_prefix": 455, "set_properti": [455, 460], "dbuild_shared_lib": [455, 460], "ON": [455, 458, 459, 460, 514, 515, 520, 966], "readelf": [455, 982, 994, 999], "0x0000000000000001": [455, 999], "0x000000000000001d": 455, "0x00007f773aefe000": 455, "ldconfig": [455, 1154], "sonam": [455, 460], "add_librari": [456, 458, 460, 462, 508, 553, 562, 983, 984], "0x29": 456, "collect2": [456, 642, 999], "acycl": [456, 984, 998], "dag": 456, "jul": [456, 460], "tpng": [456, 984], "descend": [457, 458, 459, 461, 508, 869, 976], "use_blacklist": [457, 458], "macro_use_blacklist": [457, 459], "demo_use_blacklist": [457, 458], "namegreet": 457, "_blacklist": 457, "implic": [457, 792, 864, 925], "sayhello": 457, "is_forbidden": 457, "_name": [457, 498, 501, 505, 506, 507], "goodby": [457, 980], "use_backlist": 457, "condition": 457, "duse_blacklist": [458, 459], "target_compile_opt": [458, 462], "manyfold": 459, "target_compile_definit": [459, 462], "lightli": 459, "symlink": [460, 759, 912, 1141, 1165], "build_shared_lib": 460, "qf": 460, "libboost_regex": 460, "lrwxrwxrwx": [460, 890, 912, 913, 914, 948, 982], "rwxr": [460, 853, 855, 856, 865, 982, 994, 1033], "289264": 460, "temporarili": [460, 969, 982], "project_vers": 460, "makefile2": 461, "compile_definit": 462, "dname": 462, "compile_opt": 462, "widest": 462, "asymmetr": 462, "enable_test": 463, "toplavel": 463, "set_tests_properti": [463, 1145, 1148], "pass_regular_express": 463, "ctest": 463, "cdash": 463, "kitwar": 463, "socialdb": [464, 467, 471, 496, 502], "i2csensor_vendor1": [465, 494], "0x37": 465, "suddenli": [465, 808, 848, 1114], "vener": [465, 486, 568, 583, 711], "damag": [465, 1128], "slip": 465, "cascad": 465, "i2csensor": [465, 479, 494], "create_i2c_sensor": 465, "i2csensorfactori": 465, "speak": [465, 895, 913, 1010, 1035], "vendor1": [465, 494], "abstract_factory_suit": 465, "instantiate_vendor1": 465, "i2csensorfactory_vendor1": 465, "i2c_factory_vendor1": 465, "i2c_sensor": 465, "assert_tru": [465, 520, 521, 526, 531, 533, 538, 567, 569, 584, 585, 586, 587, 670, 724, 725, 741, 759, 1146], "dynamic_cast": [465, 492, 506], "a_sensor": [465, 675], "vendor2": [465, 494], "instantiate_vendor2": 465, "i2csensorfactory_vendor2": [465, 494], "i2c_factory_vendor2": 465, "i2csensor_vendor2": [465, 494], "pu": 465, "tinto": 465, "fahrenheitsensor": [466, 495], "get_temperature_f": [466, 495], "formula": 466, "adapter_suit": 466, "constantfahrenheitsensor": 466, "assert_float_eq": [466, 469, 470, 472, 489, 490, 516, 517, 518, 519, 521, 524, 525, 536, 567, 569, 586, 672, 675, 741], "fahrenheitsensor_adapt": [466, 495], "adapter__is_a__sensor": 466, "adapter__knows__an_a_sensor": 466, "variablefahrenheitsensor": 466, "initial_valu": 466, "_valu": [466, 501], "change_temperatur": [466, 516, 524, 525], "adapter__definitely_knows__a_sensor__hel": 466, "multitud": 467, "socialdbcommand": [467, 496], "command_suit": 467, "2345110695": [467, 626], "socialdbinsertcommand": [467, 496], "3456060486": [467, 626], "insert_by_bas": 467, "socialdbfindcommand": [467, 496], "socialdbdropcommand": [467, 496], "notfound": [467, 468, 496, 658, 659, 660], "assert_throw": [467, 474, 759], "notinsert": [467, 468, 496], "bulkinsert": 467, "bulk_insert": 467, "socialdbbulkinsertcommand": [467, 496], "bic": 467, "std_initializer_list": 467, "bulk_insert__std_initializer_list": 467, "_msg": 468, "c_str": [468, 503, 525, 671, 676, 677, 979], "_db": 468, "hypthet": 469, "composite_suit": 469, "cs1": 469, "cs2": 469, "recompil": [470, 999], "decorator_suit": 470, "average_with_base_sensor": 470, "decoratedsensor": [470, 498], "propon": 470, "diagnost": [470, 599, 602], "decorated_sensor_const_added_function": 470, "decorated_sensor_random_added_function": 470, "decorated_sensor_const__is_a__sensor": 470, "decorated_sensor_random__is_a__sensor": 470, "assert_g": [470, 519, 536], "assert_l": [470, 519, 536], "average_with_decorated_sensor": 470, "mtqueue": [471, 489], "devis": 471, "notifi": [471, 737, 929, 976, 1122], "cluster_cxx_design_pattern": [471, 485, 513, 565, 761], "cluster_linux": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 765, 768, 770, 773, 775, 778, 780, 782, 784, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 812, 814, 817, 819, 823, 826, 829, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 910, 911, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 947, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "cluster_linux_bas": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "cluster_linux_basics_shel": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "cluster_linux_basics_intro": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "cluster_linux_toolchain": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "cluster_cxx03": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 628, 629, 630, 632, 633, 635, 638, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cluster_cxx03_inheritance_oo": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cluster_cxx03_data_encapsul": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cluster_cxx": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 761], "cluster_cxx_exercis": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 761], "cluster_cxx_exercises_design_pattern": [471, 485, 513, 565, 761], "cxx_design_patterns_oo_principl": [471, 761], "cxx_design_patterns_uml": [471, 485, 513, 565, 761], "cxx03_inheritance_oo_interfac": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx_design_patterns_sensor_hierarchi": [471, 485, 513, 565, 761], "cxx_design_patterns_command": [471, 485, 513, 565, 761], "cxx_design_patterns_composit": [471, 485, 513, 565, 761], "cxx_design_patterns_decor": [471, 485, 513, 565, 761], "cxx_design_patterns_adapt": [471, 485, 513, 565, 761], "cxx_design_patterns_proxi": [471, 485, 513, 565, 761], "cxx_exercises_design_patterns_proxy_round": [471, 485, 513, 565, 761], "cxx_design_patterns_heating_screenplai": [471, 761], "cxx_design_patterns_singleton": [471, 485, 513, 565, 761], "cxx_design_patterns_interpret": [471, 485, 513, 565, 761], "cxx_design_patterns_observ": [471, 485, 513, 565, 761], "cxx_design_patterns_abstract_factori": [471, 485, 513, 565, 761], "linux_basics_shell_file_dir_create_rm": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 835, 836, 837, 838, 841, 842, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 888, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_basics_shell_path": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 835, 836, 837, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_basics_shell_cwd": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 835, 836, 837, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_basics_shell_commandlin": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_basics_intro_process": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 835, 836, 837, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_basics_intro_overview": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 831, 835, 836, 837, 838, 841, 842, 849, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 898, 904, 916, 917, 918, 919, 920, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_toolchain_separate_compil": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 761, 904, 984, 987, 988, 989, 990, 992], "linux_toolchain_bas": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967, 984, 986, 987, 988, 989, 990, 991, 992, 993], "linux_toolchain_cmake_loc": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 761, 904, 984, 992], "linux_toolchain_static_librari": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 565, 761, 904, 984, 987, 989, 990, 992], "cxx03_introduct": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx03_inheritance_oo_destructor": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx03_inheritance_oo_bas": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx03_data_encapsulation_ctor_dtor": [471, 485, 513, 523, 565, 573, 638, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx03_inheritance_oo_virtual_destructor": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx03_inheritance_oo_virtual_method": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx03_inheritance_oo_polymorph": [471, 485, 513, 523, 565, 638, 662, 746, 760, 761], "cxx03_data_encapsulation_classes_object": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx03_data_encapsulation_c": [471, 485, 513, 514, 515, 516, 517, 518, 519, 520, 523, 530, 532, 565, 573, 588, 591, 594, 610, 616, 620, 629, 632, 633, 638, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx03_data_encapsulation_ctor_default": [471, 485, 513, 523, 565, 573, 638, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx03_data_encapsulation_ctor_custom": [471, 485, 513, 516, 519, 523, 565, 573, 638, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 746, 758, 760, 761], "cxx_exercises_sensor_interfac": [471, 485, 513, 523, 565, 761], "sensorread": 472, "chrono_liter": [472, 665, 737, 739, 740], "demologg": 472, "cerr": [472, 511, 590, 659, 729, 739, 912, 946, 949], "demovaluestor": 472, "_store": 472, "namedsensor": 472, "_sensor": [472, 479, 497, 498, 500, 503, 504, 725], "_logger": 472, "_value_stor": 472, "sensora": 472, "sensorb": 472, "sensorc": 472, "200000": [472, 913, 1111], "this_thread": [472, 665, 726, 737, 739], "sleep_for": [472, 665, 726, 737, 739], "12597": 472, "valuestor": 472, "2895": 472, "158243": 472, "cassert": [472, 614, 655, 658, 660, 666, 739], "boss": 472, "v3": 472, "abort": [472, 491, 492, 575, 703, 926], "mocklogg": 472, "lines_log": 472, "mockvaluestor": 472, "sensorreader_suit": 472, "141320": 472, "memcheck": [472, 575, 724], "detector": [472, 575, 724], "myobserv": 474, "socialdb_observ": [474, 502], "newcitizenobserv": [474, 502], "new_citizen": 474, "_new_citizen_svnr": 474, "new_citizen_ad": [474, 502], "observer_suit": 474, "register_on": 474, "register_new_citizen_notif": [474, 502], "register_mani": 474, "observer1": 474, "observer2": 474, "register_dupl": 474, "observeralreadyregist": [474, 502], "unregister_new_citizen_notif": [474, 502], "unregister_not_regist": 474, "observernotregist": [474, 502], "addict": [475, 847, 868, 1132, 1140], "bertrand": 475, "barbara": 475, "polish": 475, "be_sick": 478, "insur": [478, 491, 492, 493, 505, 506, 507], "teardown": [478, 525, 1003, 1140, 1150, 1152], "purest": 479, "lightest": 479, "pidcontrol": 479, "_switch": 479, "cluster_cxx_exercises_design_patterns_solut": [485, 513, 565, 761], "cxx_exercises_design_patterns_interpreter_bas": [485, 513, 565, 761], "cxx_exercises_design_patterns_singleton_inflex": [485, 513, 565, 761], "cxx_exercises_design_patterns_decor": [485, 513, 565, 761], "cxx_exercises_design_patterns_interpreter_and_adapt": [485, 513, 565, 761], "cxx_exercises_design_patterns_observ": [485, 513, 565, 761], "cxx_exercises_design_patterns_adapt": [485, 513, 565, 761], "cxx_exercises_design_patterns_composit": [485, 513, 565, 761], "cxx_exercises_design_patterns_abstract_factori": [485, 513, 565, 761], "cxx_exercises_design_patterns_proxy_remot": [485, 513, 565, 761], "cxx_exercises_design_patterns_singleton_flex": [485, 513, 565, 761], "cxx_exercises_design_patterns_singleton_flexible_strict": [485, 513, 565, 761], "cxx_exercises_design_patterns_command": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_adapt": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_interpreter_bas": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_observ": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_singleton_flex": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_interpreter_and_adapt": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_proxy_round": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_proxy_remot": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_abstract_factori": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_command": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_decor": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_singleton_flexible_strict": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_singleton_inflex": [485, 513, 565, 761], "cxx_exercises_design_patterns_solutions_composit": [485, 513, 565, 761], "cla": 486, "roundingsensor": [486, 490, 504], "r1": [486, 587, 678], "r2": [486, 587, 678], "r3": 486, "sensorvalueexpress": [486, 500], "e1_e2": 486, "e1_e2_e3": 486, "num_measur": 486, "v_avg": 486, "v_ass": 486, "combinatin": 487, "interpreter_suit": 487, "e_lh": 487, "e_rh": 487, "e_add": 487, "e_sub": 487, "mul": 487, "e_mul": 487, "e_div": 487, "arithemet": 487, "arith": [487, 559, 560, 596, 597, 598, 599, 604], "combined_arith": 487, "l7": 487, "a_7_plus_3": 487, "s_3_minus_1": 487, "variable_not_set": 487, "analogi": [487, 511, 914, 976, 1016], "assignment_valu": 487, "variable_assign": 487, "ass": 487, "variable_used_as_express": 487, "ass_v1": 487, "ass_v2": 487, "reachabl": [489, 724, 912, 914], "remoteadapt": [489, 503], "response_promis": 489, "_adapt": 489, "_queue": [489, 737], "_thread": 489, "fulfil": [489, 524], "proxy_remote_suit": 489, "_c": 489, "remotesensoradapt": [489, 503], "remotesensor": [489, 503], "remote_sensor__is_a__sensor": 489, "somth": 489, "simplist": 489, "fullfil": 490, "proxy_round_suit": 490, "round_down": 490, "round_up": 490, "rouding_sensor__is_a__sensor": 490, "advis": [491, 1102], "hypothet": [491, 523, 524, 574, 905], "fee": 491, "socialinsur": [491, 492, 493, 507], "oegk": [491, 492], "startup": [491, 492, 493, 505, 840, 976, 982, 1014], "set_inst": [491, 492, 505], "make_uniqu": [491, 505, 757], "socinsur": [492, 506], "inisur": 492, "reimplement": [492, 661], "compiabl": [492, 506], "iface_inst": [492, 506], "svs_instanc": [492, 506], "oegk_inst": [492, 506], "another_inst": [492, 493, 506, 507], "1485": [492, 493], "unset": [492, 955], "sozialversicherung": [493, 507], "unrealist": 493, "adapte": 495, "_adapte": 495, "_svnr": 496, "_firstnam": [496, 626, 1026], "_lastnam": [496, 626, 1026], "_result": 496, "_command": 496, "get_if": [496, 751], "decoratedconstantsensor": 498, "sstream": [498, 503, 585, 587], "iomanip": 498, "ostringstream": [498, 503, 584, 585, 586, 587], "decoratedrandomsensor": 498, "_variabl": 501, "_lh": 501, "_rh": 501, "_context": 501, "_var": 501, "_exp": 501, "stdexcept": [501, 503, 505, 506, 507, 525, 759], "_new_citizen_observ": 502, "num_eras": 502, "_server": 503, "cstdio": 503, "num_item": 503, "sscanf": 503, "cmath": [504, 569, 577, 578, 586, 672, 688, 689, 690, 691, 728], "_instanc": [505, 506, 507], "nullptr": [505, 506, 524, 535, 539, 665, 675, 676, 723, 724, 725, 737, 739, 741, 756, 757, 949, 1159], "_databas": [505, 506, 507], "0l": [505, 506], "cstdlib": [506, 525], "ssocinsur": 506, "toi": [508, 665, 980], "millidegre": 508, "parameteriz": [509, 1108], "loop_and_measur": 509, "niter": 509, "counterpart": 510, "stod": 511, "uniform_real_distribut": [511, 519, 723], "default_random_engin": [511, 519, 723], "random_devic": [511, 519, 723], "_distribut": [511, 723], "_engin": [511, 723, 1128], "_x": [511, 569, 570, 572, 574, 576, 577, 578, 579, 581, 583, 593, 608, 672, 687, 689, 690, 691], "_y": [511, 569, 570, 572, 574, 576, 577, 578, 579, 581, 583, 593, 608, 672, 687, 689, 690, 691], "spit": [511, 1114], "cluster_cxx03_stl": [513, 530, 532, 565, 610, 616, 620, 628, 629, 630, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cluster_cxx03_stl_associative_contain": [513, 530, 532, 565, 620, 629, 633, 662, 761], "cluster_cxx03_stl_algorithm": [513, 530, 565, 610, 629, 632, 633, 662, 761], "cluster_cxx03_templ": [513, 530, 532, 565, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cluster_cxx03_functions_and_method": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 647, 648, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cluster_cxx03_except": [513, 530, 532, 565, 591, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cluster_linux_basics_permiss": [513, 565, 738, 760, 761, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 904, 933, 935, 943, 945, 959, 962, 965, 967], "cluster_linux_sysprog": [513, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 947, 959, 962, 965, 967], "cluster_linux_sysprog_bas": [513, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967], "cluster_linux_sysprog_fileio": [513, 565, 738, 760, 761, 838, 841, 842, 904, 933, 935, 943, 945, 959, 962, 965, 967], "cluster_cxx_exercises_stl": [513, 530, 532, 565, 761], "cluster_cxx_exercises_stl_sensor_repositori": [513, 530, 532, 565, 761], "cluster_cxx_exercises_fh_sensor_first_tri": [513, 565, 761], "cxx03_stl_basic": [513, 530, 532, 565, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_templates_class_templ": [513, 530, 532, 565, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_stl_vector_copy_etc": [513, 530, 565, 629, 633, 662, 761], "cxx03_stl_associative_containers_bas": [513, 530, 532, 565, 620, 629, 633, 662, 761], "cxx03_stl_associative_containers_map": [513, 530, 532, 565, 620, 629, 633, 662, 761], "cxx03_stl_algorithm_copi": [513, 530, 565, 610, 629, 633, 662, 761], "cxx03_stl_algorithm_find": [513, 530, 565, 610, 629, 633, 662, 761], "cxx03_templates_function_templ": [513, 530, 532, 565, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_exceptions_try_catch": [513, 530, 532, 565, 591, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_data_encapsulation_initializer_list": [513, 516, 519, 565, 573, 662, 761], "cxx03_functions_and_methods_stat": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_functions_and_methods_refer": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 653, 654, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cxx03_functions_and_methods_overload": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 647, 648, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cxx03_functions_and_methods_const": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 653, 654, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cxx03_functions_and_methods_method": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cxx03_functions_and_methods_thi": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 653, 654, 657, 658, 659, 660, 661, 662, 674, 705, 721, 730, 738, 758, 760, 761], "cxx03_functions_and_methods_oper": [513, 530, 532, 565, 588, 591, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "cxx03_exceptions_bas": [513, 530, 532, 565, 591, 594, 610, 616, 620, 629, 632, 633, 650, 657, 658, 659, 660, 661, 662, 761], "linux_basics_shell_l": [513, 565, 738, 760, 761, 835, 836, 837, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 872, 875, 876, 879, 880, 882, 883, 884, 885, 886, 888, 904, 933, 935, 943, 945, 959, 962, 965, 967], "linux_basics_permissions_bas": [513, 565, 738, 760, 761, 838, 841, 842, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 904, 933, 935, 943, 945, 959, 962, 965, 967], "linux_sysprog_basics_errorhandl": [513, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967], "linux_sysprog_basics_syscal": [513, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967], "linux_sysprog_basics_groupnod": [513, 565, 738, 760, 761, 838, 841, 842, 904, 927, 933, 935, 943, 945, 959, 962, 965, 967], "linux_sysprog_fileio_bas": [513, 565, 738, 760, 761, 838, 841, 842, 904, 933, 935, 943, 945, 959, 962, 965, 967], "linux_sysprog_fileio_exercise_w1_sensor": [513, 565, 761, 904, 943, 945, 962], "cxx_exercises_sensor_mock_nopoli": [513, 514, 515, 516, 518, 565, 761], "cxx_exercises_display_led_stripe_nopoli": [513, 514, 565, 761], "cxx_exercises_switch_mock_nopoli": [513, 514, 515, 520, 565, 761], "cxx_exercises_sensor_const_nopoli": [513, 517, 519, 565, 761], "cxx_exercises_hysteresis_nopoli": [513, 515, 565, 761], "cxx_exercises_oo_shap": [513, 565, 761], "cxx_exercises_sensor_w1_factori": [513, 565, 761], "cxx_exercises_sensor_w1": [513, 565, 761], "cxx_exercises_sensor_avg_nopoli": [513, 516, 565, 761], "cxx_exercises_sensor_random_nopoli": [513, 519, 565, 761], "cxx_exercises_stl_uniq": [513, 530, 565, 761], "cxx_exercises_stl_vector": [513, 530, 565, 761], "cxx_exercises_stl_filter_greater_10": [513, 530, 565, 761], "cxx_exercises_stl_filter_odd": [513, 530, 565, 761], "cxx_exercises_stl_algo": [513, 530, 565, 761], "cxx_exercises_stl_map": [513, 530, 532, 565, 761], "cxx_exercises_stl_filter_gener": [513, 530, 565, 761], "cxx_exercises_stl_sensor_repository_insert_no_overwrit": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_insert_sunni": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_memory_leak": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_lookup_not_found": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_lookup_sunni": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_size_const": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_remove_sunni": [513, 530, 532, 565, 761], "cxx_exercises_stl_sensor_repository_remove_not_found": [513, 530, 532, 565, 761], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_loop_funct": [513, 565, 761], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo": [513, 565, 761], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_random_sensor": [513, 565, 761], "cxx_exercises_fh_sensor_first_try_exercise_fh_sensor_oo_no_polymorph": [513, 565, 761], "mockswitch_nopoli": [514, 515, 520], "display_led_stripe_nopoly_suite__somewhere_in_the_middl": 514, "nopoli": [514, 515, 516, 517, 518, 519, 520], "display_led_stripe_nopoly_suit": 514, "somewhere_in_the_middl": 514, "sw0": 514, "sw1": 514, "sw2": 514, "sw3": 514, "sw4": 514, "sw5": 514, "sw6": 514, "sw7": 514, "display_led_stripe_nopoly_suite__below_rang": 514, "below_rang": 514, "display_led_stripe_nopoly_suite__above_rang": 514, "above_rang": 514, "display_led_stripe_nopoly_suite__mov": 514, "movement": [514, 905], "set_temperatur": [514, 515, 516, 518], "display_led_stripe_nopoly_suite__vari": 514, "variation_2_switch": 514, "variation_interval_not_from_0": 514, "thermostat": 515, "threshold": 515, "nop_when_within_rang": 515, "hysteresis_suit": 515, "hyst": 515, "falls_below_rang": 515, "rises_above_rang": 515, "rises_above_range_when_on": 515, "sensor_avg_nopoly_suit": 516, "sensor_const_nopoly_suit": 517, "subsequ": 518, "sensor_mock_nopoly_suit": 518, "sensor_random_suit": [519, 523, 524], "uniformli": 519, "rd": 519, "obtain": [519, 736, 1056], "rng": 519, "tailor": 519, "switch_mock_suit": 520, "initial_st": [520, 1151], "set_on_off": 520, "initial_failur": 521, "failit": 521, "point_suit": [521, 585], "ctor_and_gett": 521, "coordin": [521, 567, 569, 576, 577, 687, 930], "ctor_and_getters_const": 521, "default_ctor": [521, 584, 585, 586, 587, 741], "equal_method": 521, "p3": 521, "p4": [521, 868], "assert_fals": [521, 526, 531, 533, 538, 567, 584, 585, 586, 587, 759], "equal_method_const": 521, "operator_equ": 521, "operator_equals_const": 521, "move_method": 521, "operator_plus_equ": 521, "add_method": 521, "new_p": 521, "add_method_const": 521, "operator_plu": [521, 584, 585, 586], "operator_plus_const": 521, "radiu": 521, "circle_suit": 521, "ctor_and_getters_using_operator_equ": 521, "14159": 521, "53981634": 521, "area_const": 521, "square_suit": 521, "bottom_left": [521, 587], "side_length": 521, "shape_suit": 521, "circle_is_a_shap": 521, "square_is_a_shap": 521, "area_is_shape_functionality__circl": 521, "area_is_shape_functionality__squar": 521, "human": [522, 524, 729, 868, 890, 982, 1027, 1113], "ineffici": [522, 645, 825, 944], "epath": 522, "bag_copy_suit": [522, 755], "find_by_int_ok": [522, 755, 756, 757], "find_by_int_nok": [522, 755, 756, 757], "remove_by_int_ok": [522, 755, 756, 757], "bag_unique_suit": [522, 757], "bag_shared_suit": [522, 756], "insert_const_ref": [522, 756], "insert_mov": [522, 756], "unrel": [523, 554, 563, 729, 746, 747, 751, 760, 761, 966, 976, 1005, 1022, 1120], "tyo": 523, "sensor_const_suit": [523, 524], "is_a_sensor": [523, 524], "5731": 523, "aptli": 524, "23062": 524, "w1sensorfactori": 524, "find_by_address": 524, "sensor_w1_factory_suit": 524, "fstream": [524, 759], "tmpdir_fixtur": 524, "device_dir": 524, "create_directori": 524, "ofstream": [524, 759], "42459": 524, "temp_milli": [524, 525], "w1_fs_root": 524, "sensor_factori": 524, "0x02131d959eaa": 524, "assert_n": [524, 560, 583, 584, 719, 741, 756, 757], "horizon": 524, "0x012345678901": 524, "w1_sensor_suit": [524, 525], "test_read_sensor": [524, 525], "36700": 524, "basedir": 524, "0x2131d959eaa": 524, "dcmake_toolchain_fil": [525, 983, 997], "20687": 525, "write_temperatur": 525, "thaht": 525, "filename_pattern": 525, "xxxxxx": 525, "mkstemp": 525, "unlink": [525, 974, 976], "to_str": [525, 645], "off_t": [525, 934, 944, 949, 975], "lseek": [525, 944, 949, 975], "seek_set": [525, 934, 949, 975], "nwritten": [525, 938, 939, 940, 941, 946, 949, 975, 979], "algo": [526, 559, 560, 595, 596], "copy_into_vector": 526, "stl_exercises_suit": [526, 527, 528, 529, 531, 533, 534, 535, 536, 538, 539, 540, 541, 542], "required_cont": 526, "find_in_vector": 526, "my_vec": [526, 542], "wladimir": 526, "sort_in_plac": 526, "required_output": [526, 527, 528, 529, 541], "orig_input": [526, 527, 528, 529, 541], "alement": 527, "is_odd": 527, "filter_greater_10": 528, "filter_odd": 529, "map_insert": 531, "my_map": [531, 621, 622, 623, 624, 625], "map_insert_simpl": 531, "insert_check_dupl": 531, "map_insert_check_dupl": 531, "insert_remove_by_kei": 531, "map_insert_remove_by_kei": 531, "map_remove_by_kei": 531, "map_find": 531, "sensorrepositori": [532, 533, 534, 535, 536, 537, 538, 539, 540], "decript": 532, "sensor_repository_insert_dupl": 533, "add_sensor": [533, 534, 535, 536, 538, 539], "ofen": [533, 534, 535, 536, 538, 539], "weltraum": [533, 534, 535, 536, 538, 539], "mond": [533, 538], "sucess": 533, "sensor_repository_insert": 534, "sensor_repository_lookup_neg": 535, "get_sensor": [535, 536, 539], "sensor_repository_lookup_posit": 536, "complaint": 537, "ish": 537, "sensor_repository_remove_nonexist": 538, "remove_sensor": [538, 539], "sensor_repository_remov": 539, "sensor_repository_size_const": 540, "vector_append": 542, "vector_join": 542, "joined_cont": 542, "userdb_map": 543, "userdb_vector": 543, "dan": 543, "sak": 543, "cppcon": [543, 670, 672, 673, 686, 693, 711, 722, 743, 746], "transcrib": 543, "mallocfre": 548, "arrayofinteg": 548, "memoryleak": 548, "arrayboundswrit": 548, "newdelet": 548, "singleinteg": 548, "deletemismatch": 548, "thing1": [550, 551], "thing2": [550, 551], "global_str": 551, "__have_thing_h__": 551, "_content": 551, "denstruct": 551, "destruct": [551, 572, 642, 673, 723, 850], "essenc": [551, 1146], "collaps": 554, "thoroughli": [554, 912], "_mem": [557, 703], "determinist": [557, 722, 736, 1003, 1054], "maybeown": 557, "pointerarithmet": 560, "bugp": 560, "105ff": 560, "num_el": 560, "another_arrai": 560, "yet_another_arrai": 560, "108ff": 560, "basics_cxx03": 560, "basics_cxx11": 560, "cbegin": [560, 613, 632, 669, 680], "my_copi": 560, "naivecopi": 560, "cend": [560, 613, 632, 669], "algocopi": 560, "backinsert": 560, "back_insert_iter": [560, 601], "nah": [560, 1148], "insertfind": 560, "make_pair": [560, 623, 626, 714], "erasebyposit": 560, "erasebykei": 560, "domin": 566, "bjarn": 566, "stroustrup": 566, "1985": 566, "2003": [566, 1159], "point_c_suit": [567, 569], "struct_initi": 567, "point_init_default": 567, "c_default_constructor_init": 567, "point_create_default": 567, "c_default_constructor_cr": 567, "point_creat": [567, 569], "c_constructor": [567, 569], "eq": [567, 583, 585, 587], "point_equ": 567, "point_not_equ": 567, "eq_n": 567, "point_mov": [567, 569, 577, 579], "point_add": 567, "point_sub": 567, "add_sub": 567, "point_dist": 567, "point_ab": [567, 569], "hyp": [567, 569, 577], "unwant": [567, 618, 714, 786, 1005, 1026, 1050], "cpp_copy_suit": 568, "generated_copy_ctor": 568, "copy1": [568, 724], "copy2": [568, 724], "copy3": 568, "manual_copy_suit": 568, "copy_ctor": [568, 723], "assignment_oper": 568, "earlier": 569, "point_h": [569, 577, 578], "point_cpp_suit": 569, "constructor_coordin": 569, "inaccessibil": 569, "move_op_pluseq": 569, "whenev": [570, 577, 587, 673], "sth": 571, "dirty_stack": 571, "use_uniniti": 571, "onward": [571, 575, 582], "nw": 572, "memberwis": 572, "_c_str": [572, 575, 676], "cxx03_data_encapsulation_copy_bas": [573, 662, 761], "cxx03_data_encapsulation_object_copi": [573, 662, 674, 705, 721, 730, 738, 758, 760, 761], "string_h": [575, 676], "cstring": [575, 676, 677, 710], "tcach": [575, 703], "221601": 575, "julian": [575, 724], "seward": [575, 724], "libvex": [575, 724], "rerun": [575, 724], "realloc": [575, 618], "0x484465b": 575, "1103": 575, "0x401210": 575, "0x401194": 575, "0x4dc8c80": 575, "0x401188": 575, "0x484222f": 575, "0x4011c5": 575, "0x40116f": 575, "freed": [575, 767, 937, 1003], "destroi": [575, 637, 659, 678, 695, 710, 725, 736, 798], "221807": 575, "twostr": 575, "twotwostr": 575, "s21": 575, "s22": 575, "segfault": [575, 822, 980], "paraamet": 576, "__pretty_function__": 576, "0000000000401176": 576, "_z1fi": 576, "00000000004011a0": 576, "_z1fpc": 576, "demangl": 576, "anywher": [577, 1001], "fab": [577, 578], "distance_origin": [577, 578, 728], "hid": 577, "standardes": 577, "d_orig": 578, "fpermiss": [578, 715], "arrog": 578, "goodi": [578, 906], "pascal": 580, "uninitil": 580, "pass_by_copi": 580, "references_suit": 580, "voila": [580, 912, 970, 983, 984, 994, 1025], "tediou": [580, 931, 984, 1058], "pass_by_point": 580, "pass_by_refer": 580, "pass_by_const_point": 580, "const_point": 580, "pass_by_const_refer": 580, "const_refer": 580, "pass_by_copy_expens": 580, "copy_expens": 580, "pass_by_const_reference_cheap": 580, "const_reference_cheap": 580, "addend": [581, 708, 728], "straightforwardli": [581, 1063], "add_point": 581, "static_suit": 581, "global_funct": 581, "static_method": 581, "bss": 582, "definition1": 582, "definition2": 582, "forbid": 582, "trickeri": 582, "points_equ": 583, "oddli": 583, "operators_suit": 583, "equals_glob": 583, "difficulti": 583, "equals_object": 583, "vector_addition_glob": 583, "vector_addition_object": 583, "point_plus_equ": 583, "combo": [584, 586], "cuboid_suit": 584, "front_bottom_left": 584, "point_whl_ctor": 584, "operator_eq_n": [584, 585, 586, 587], "operator_pluseq": [584, 585, 586], "operator_minuseq": [584, 586], "operator_minu": [584, 586], "operator_ostream": [584, 585, 586, 587], "buf": [584, 585, 586, 587, 926, 934, 944], "entirei": [584, 586, 587], "starting_point": 585, "implementation_in_cpp_fil": 585, "rectangle_suit": [585, 587], "pluseq": 585, "operator_unary_minu": [585, 586], "minus_p": [585, 586], "point3d_suit": 586, "coordinates_ctor": 586, "071067812": 586, "69041576": 586, "top_right": 587, "top_left": 587, "bottom_right": 587, "rational": [587, 621], "operator_plus_equal_vec": 587, "plus_vec": 587, "cxx03_functions_and_methods_exercise_class_cuboid": [588, 662, 761], "cxx03_functions_and_methods_exercise_class_point3d": [588, 662, 761], "cxx03_functions_and_methods_exercise_class_point": [588, 662, 761], "cxx03_functions_and_methods_exercise_class_rectangl": [588, 662, 761], "cxx03_functions_and_methods_static_member_vari": [588, 662, 761], "dothat": [589, 590], "dothi": [589, 590], "dothos": [589, 590], "dammit": [589, 590, 669], "thisexcept": 590, "thatexcept": 590, "thrown": [590, 979], "myexcept": 590, "error_detect": 590, "granular": [590, 779, 966], "typenam": [592, 593, 675, 682, 683, 684, 685, 687, 689, 690, 691, 696, 717, 723, 727, 737, 739], "a_begin": [596, 598], "a_end": [596, 598], "src_begin": [596, 600], "src_end": [596, 600], "dst_begin": [596, 600], "decai": 597, "zeroth": 597, "warrai": 599, "unflex": 601, "shrink_to_fit": 601, "prealloc": [601, 602], "wnonnul": 602, "gool": [603, 670], "cplusplu": [605, 606, 607, 608, 609, 611, 612, 613, 614, 617, 626], "int_arrai": [605, 607, 611, 614], "binarili": 605, "is_el": 605, "original_begin": 606, "original_end": 606, "copy_run": 606, "original_run": 606, "int_array_c": 607, "match_666": 608, "match_42": 608, "x_equals_666": 608, "x_equals_4": 608, "x_equal": 608, "_criterion": 608, "yesno": [608, 835, 836], "output_stern": 609, "output_bindestrich": 609, "output_with_prefix": 609, "_prefix": 609, "cxx03_stl_algorithm_binary_search": [610, 629, 633, 662, 761], "cxx03_stl_algorithm_sort": [610, 629, 633, 662, 761], "cxx03_stl_algorithm_revers": [610, 629, 632, 633, 662, 761], "cxx03_stl_algorithm_for_each": [610, 629, 633, 662, 761], "cxx03_stl_algorithm_find_if": [610, 629, 633, 662, 761], "cxx03_stl_algorithm_reverse_copi": [610, 629, 632, 633, 662, 761], "cxx03_stl_algorithm_lower_bound": [610, 629, 633, 662, 761], "reversed_": [613, 632], "less_revers": 614, "greater_than": 614, "cluster_cxx03_stl_sequential_contain": [616, 629, 633, 662, 761], "cxx03_stl_sequential_containers_list": [616, 629, 633, 662, 761], "cxx03_stl_sequential_containers_bas": [616, 629, 633, 662, 761], "cxx03_stl_sequential_containers_vector": [616, 629, 633, 662, 761], "liek": 618, "logarithm": 618, "mein_int_arrai": 618, "insert_po": 618, "new_elems_as_vector": 618, "elems_to_insert": 618, "cxx03_stl_associative_containers_multimap": [620, 629, 633, 662, 761], "realiz": [621, 1054], "parameter": [621, 727, 732, 990, 1004], "keytyp": [621, 665], "valuetyp": [621, 665], "some_map": 621, "key_typ": [621, 622], "mapped_typ": [621, 622], "value_typ": [621, 622], "emplac": 621, "collis": 621, "zweiundvierzig": 621, "out_of_rang": [621, 625], "mymap": [622, 623, 624, 625], "sechshundersechsundsechzig": 622, "kv": 622, "pre11": [622, 623], "einundfuenfzig": [622, 623, 624, 625], "vierundfuenfzig": [622, 623, 624, 625], "dreihundertsechsundvierzig": [622, 623, 624, 625], "tausendein": [622, 623, 624, 625], "tausendzwei": [622, 623, 624, 625], "retval_7": 623, "retval_2": 623, "n_remov": 624, "found_value_1001": 625, "found_value_666": 625, "found_valu": 625, "joerg_svnr": 626, "caro_svnr": 626, "johanna_svnr": 626, "philipp_svnr": 626, "datenzwilling_von_joerg": 626, "faschingzwil": 626, "meine_map": 626, "datenzwil": 626, "equal_rang": 626, "found_rang": 626, "svnr_notexist": 626, "1234567": 626, "memory_resourc": 627, "cluster_cxx03_stl_alloc": [628, 629, 633, 662, 761], "cxx03_stl_allocator_bas": [628, 629, 633, 662, 761], "cluster_cxx03_stl_exercis": [629, 630, 632, 633, 662, 761], "cluster_cxx03_stl_exercises_reverse_str": [629, 630, 632, 633, 662, 761], "cxx03_stl_exercises_reverse_string_exercis": [629, 630, 632, 633, 662, 761], "cxx03_stl_exercises_reverse_string_solut": [629, 632, 633, 662, 761], "auto_ptr": [634, 673, 1159], "cluster_cxx03_dynamic_memori": [635, 662, 761], "cxx03_dynamic_memory_todo": [635, 662, 761], "inher": [636, 637, 640, 642, 643, 968, 1056], "novirtu": [636, 637, 643], "mantra": [637, 833], "spoiler": [637, 1014], "cxx03_inheritance_oo_private_protect": [638, 662, 761], "derived1": 640, "derived2": 640, "countless": 640, "derived3": 640, "unimpl": [640, 1018], "polymorp": [642, 745], "strictli": [642, 912, 913, 1014], "indirect": [643, 729, 845, 999], "cluster_cxx03_standard_library_miscellanea": [644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 761], "cxx03_standard_library_miscellanea_str": [644, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 761], "string_suit": 645, "another_hello": 645, "greeting1": 645, "greeting2": 645, "convert_to_signed_integ": 645, "stol": 645, "stoll": 645, "numstr": 645, "stoi": [645, 946, 949], "convert_to_unsigned_integ": 645, "stoull": 645, "stoui": 645, "stoul": 645, "convert_from_someth": 645, "basic_str": [645, 727, 759], "i_str": 645, "ui_str": 645, "666000": 645, "sprintf": [645, 946, 949, 979, 980], "print_char": 646, "cluster_cxx03_exercises_misc": [646, 647, 648, 649, 662, 761], "cxx03_exercises_misc_american_flag": [646, 648, 662, 761], "cxx03_exercises_misc_fh_moodle_quiz": [647, 648, 662, 761], "cxx03_exercises_misc_sum_integers_from_stdin": [648, 649, 662, 761], "ctrl": [649, 980, 1032], "cluster_cxx03_exercises_userdb": [650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_user_const_memb": [650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_user_ctor": [650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_user_simple_method": [650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_userdb_search_find_if": [650, 658, 659, 662, 761], "cxx03_exercises_userdb_userdb_search": [650, 658, 659, 660, 662, 761], "cxx03_exercises_userdb_userdb_insert": [650, 657, 658, 659, 660, 662, 761], "cxx03_exercises_userdb_userdb_vector_bas": [650, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_user_default_ctor": [650, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_user_const": [650, 653, 654, 657, 658, 659, 660, 661, 662, 761], "cxx03_exercises_userdb_userdb_search_notfound_except": [650, 659, 662, 761], "cxx03_exercises_userdb_user_access_method": [650, 651, 653, 654, 657, 658, 659, 660, 661, 662, 761], "architecton": 652, "celebr": 655, "trittsich": [655, 656], "age_by_n_year": 655, "user_init": 656, "userdb_insert": 657, "doesnotexist": [658, 660], "isvalid": [658, 659, 660], "unnatur": 659, "_user": [659, 810], "thereaft": 659, "wrinkl": 659, "usernotfound": 659, "unreach": [659, 923], "userdb_search_by_lastnam": 660, "undetect": 660, "userdb_init": 661, "cluster_cxx11": [663, 667, 674, 681, 692, 705, 706, 716, 721, 730, 738, 742, 746, 758, 760, 761], "cluster_cxx11_introduct": [663, 667, 705, 758, 760, 761], "cxx11_introduction_overview_livehack": [663, 760, 761], "cxx11_introduction_histori": [663, 667, 705, 758, 760, 761], "ugliest": 664, "todo_list": 665, "tdl": 665, "desc": 665, "key_value_pair": 665, "up_1_to_10": 665, "down_1000_to_980": 665, "todo_item": 665, "make_shar": [665, 726, 756], "todolist": 665, "nocopi": 665, "add_item": 665, "_list": 665, "evangelist": 665, "cstdint": [666, 695], "wchar_t": 666, "cluster_cxx11_new_language_featur": [667, 674, 681, 692, 705, 706, 716, 721, 730, 738, 758, 760, 761], "cluster_cxx11_new_language_features_brace_initi": [667, 705, 758, 760, 761], "cxx11_new_language_features_auto": [667, 705, 758, 760, 761], "cxx11_new_language_features_strongly_typed_enum": [667, 705, 758, 760, 761], "cxx11_new_language_features_brace_initialization_implementor_view": [667, 705, 760, 761], "cxx11_new_language_features_brace_initialization_intro": [667, 705, 758, 760, 761], "cxx11_new_language_features_brace_initialization_mess": [667, 705, 760, 761], "pointcloud": [668, 670], "_point": 668, "data_": [669, 671], "memoriz": 669, "brace_initialization_suit": 670, "explicit_ctor_cal": 670, "initlist_ctor_cal": 670, "explicit_ctor": 670, "initlist_ctor": 670, "disabigu": 670, "nightmar": [670, 673, 999], "size_": 671, "constexpr_suit": 672, "basic_const_is_constexpr": 672, "constexpr_function_request": 672, "constexpr_function_not_request": 672, "constexpr_recursive_funct": 672, "6765": 672, "constexpr_ctor": 672, "schurr": 672, "olsen": [673, 722], "nicolai": [673, 715, 718], "josutti": [673, 715, 718], "smartptr": [674, 705, 723, 724, 760, 761], "cluster_cxx11_smart_point": [674, 705, 721, 730, 738, 758, 760, 761], "cluster_cxx11_new_language_features_move_pf": [674, 705, 721, 730, 738, 758, 760, 761], "cxx11_perfect_forward": [674, 705, 760, 761], "cxx11_new_language_features_move_pf_overview": [674, 705, 721, 730, 738, 758, 760, 761], "cxx11_smart_pointers_introduct": [674, 705, 721, 730, 738, 758, 760, 761], "cxx11_new_language_features_miscellan": [674, 705, 721, 730, 738, 758, 760, 761], "cxx11_smart_pointers_unique_ptr": [674, 705, 721, 730, 738, 758, 760, 761], "cxx11_new_language_features_move_pf_livehack_using_string_mov": [674, 705, 760, 761], "cxx11_new_language_features_move_pf_livehack_string_mov": [674, 705, 760, 761], "cxx11_new_language_features_move_pf_afterword": [674, 705, 760, 761], "_p": [675, 723], "handwritten_suit": [675, 723], "explicit_mov": [675, 723], "assert_double_eq": [675, 723, 724], "create_constant_sensor": [675, 725], "prove": [675, 847], "return_by_copi": 675, "another_sensor": 675, "assigne": 675, "dubiou": 675, "bugfre": 676, "string_move_suit": 676, "make_a_string_from": 676, "ret_": 676, "move_return": 676, "move_assign": 676, "assig": 676, "person_h": 677, "person_suit": 677, "contructor": 677, "outliv": [678, 1001], "rvr": 678, "ado": [680, 951, 1115], "mytyp": 680, "spellabl": 680, "0x7ffcd604846c": 680, "0x7ffcd6048468": 680, "iref": 680, "0x7ffffefe2b54": 680, "0x7ffffefe2b50": 680, "0x7ffc59ebd7bc": 680, "ciref": 680, "0x7ffc23e46284": 680, "0x7ffe4a148064": 680, "0x7ffc528e013c": 680, "cluster_cxx11_new_language_features_concept": [681, 705, 760, 761], "cxx11_new_language_features_concepts_link": [681, 705, 760, 761], "cxx11_new_language_features_concepts_intro": [681, 705, 760, 761], "cxx11_new_language_features_concepts_writing_concept": [681, 705, 760, 761], "conceptless": 682, "4ul": [682, 683], "4l": [682, 683], "satisfact": 682, "is_integral_v": 682, "_tp": [682, 715, 725], "hendrik": 686, "niemey": 686, "hypotenus": [687, 688, 689, 690, 691], "sumsq": [687, 688, 689, 690, 691], "point2d": [687, 689, 690, 691], "dozen": 687, "ruin": 687, "5l": 687, "same_a": 687, "commone_reference_with": 687, "common_reference_with": [687, 691], "has_siz": [690, 691], "index_returns_doubl": 691, "cluster_cxx11_new_language_features_coroutin": [692, 705, 760, 761], "cxx11_new_language_features_coroutines_intro": [692, 705, 760, 761], "stackless": 693, "asio": 693, "co_return": [693, 697, 698, 699, 700, 701], "hello_inst": [693, 697, 698, 699, 700, 701], "promise_typ": [693, 695, 696, 698, 699, 700, 701], "get_return_object": [693, 695, 696, 698, 699, 700, 701], "suspend_alwai": [693, 695, 696, 698, 699, 700, 701], "initial_suspend": [693, 695, 696, 698, 699, 700, 701], "final_suspend": [693, 695, 696, 698, 699, 700, 701], "return_void": [693, 696, 698, 699, 700, 701], "unhandled_except": [693, 695, 696, 698, 699, 700, 701], "suspend_nev": [693, 695, 696, 700], "coroutine_handl": [693, 695, 696, 699, 700, 701], "from_promis": [693, 695, 696, 699, 700, 701], "_coro": [693, 695], "yield_valu": [693, 695, 696, 699, 700, 701], "sentinel": [693, 696, 700, 701, 715], "_promis": [693, 696, 699, 700, 701], "glue": 693, "deciph": 693, "diagrammat": 693, "wei": 693, "co_yield": [694, 695, 696, 697, 699, 700, 701], "_elem": 695, "ed": [696, 699, 700, 701, 897, 934], "lackingdefaultconstructor": 702, "ldc": 702, "hasdefaultconstructor": 702, "hmpf": 702, "hdc": 702, "ownsmemori": 703, "om_copi": 703, "incontin": 704, "leaf": [704, 887], "method1": 704, "method2": 704, "cluster_cxx11_new_language_features_lambda": [705, 706, 760, 761], "cluster_cxx11_new_language_features_rang": [705, 716, 760, 761], "cxx11_new_language_features_structured_bind": [705, 760, 761], "cxx11_new_language_features_overrid": [705, 760, 761], "cxx11_new_language_features_constexpr": [705, 760, 761], "cxx11_new_language_features_default": [705, 760, 761], "cxx11_new_language_features_delet": [705, 760, 761], "cxx11_new_language_features_livehack_smartptr_mov": [705, 760, 761], "cxx11_smart_pointers_introduction_livehack": [705, 721, 760, 761], "cxx11_new_language_features_fin": [705, 760, 761], "cxx11_new_language_features_delegating_ctor": [705, 760, 761], "cxx11_new_language_features_range_based_for": [705, 758, 760, 761], "cxx11_new_language_features_range_based_for_map": [705, 760, 761], "cxx11_new_language_features_modul": [705, 760, 761], "cxx11_new_language_features_lambda_lambda_captur": [705, 706, 760, 761], "cxx11_new_language_features_lambda_lambda": [705, 706, 760, 761], "cxx11_new_language_features_lambda_lambda_is_functor": [705, 706, 760, 761], "cxx11_new_language_features_lambda_lambda_is_functor_pitfal": [705, 706, 760, 761], "cxx11_new_language_features_ranges_good_bad": [705, 716, 760, 761], "cxx11_new_language_features_ranges_link": [705, 716, 760, 761], "cxx11_new_language_features_ranges_intro": [705, 716, 760, 761], "elsewher": [707, 808, 1008], "lamda": 707, "print_messag": [707, 709, 710], "create_print_funct": [707, 709, 710], "constantli": [708, 825, 967], "mere": 708, "catur": 708, "akin": 708, "lambda_capture_suit": 708, "explicit_by_copi": 708, "lambda_capure_suit": 708, "explicit_by_refer": 708, "dubio": 708, "explicit_mix": 708, "initialized_captur": 708, "all_by_refer": 708, "all_by_copi": 708, "all_by_copy_except": 708, "this_captur": 708, "_i": [708, 728], "add_to_yourself_and_guarantee_programmers_job_secur": 708, "print_message_func": [709, 710], "_messag": [709, 710], "piti": 710, "mpp": 711, "precompil": [711, 808, 982], "speedup": 711, "rei": 711, "bori": 711, "kolpackov": 711, "abandon": 711, "inde": 713, "range_based_for_suit": 714, "map_pre_11": 714, "map_bas": 714, "map_basic_const_auto_refer": 714, "ific": [714, 719], "map_unpack_copi": 714, "map_unpack_refer": 714, "map_unpack_const_refer": 714, "min_el": 715, "forward_rang": [715, 717], "drop_view": 715, "filter_view": 715, "ref_view": 715, "ranges_util": 715, "view_interfac": 715, "_deriv": 715, "sized_sentinel_for": 715, "decltyp": 715, "__cust": 715, "declval": 715, "__cust_access": 715, "__begin": 715, "_s_size": 715, "_m_deriv": 715, "forward_iter": 715, "coll": 715, "2nd": [715, 1148], "__cxx11": [715, 727, 759], "_vp": 715, "__simple_view": 715, "random_access_rang": [715, 717], "sized_rang": 715, "pretend": 715, "comitte": [715, 718], "lazili": 717, "first_two_drop": 717, "first_two_dropped_next_two_taken": 717, "oldstyl": 717, "inspir": 717, "refin": 717, "input_rang": 717, "bidirectional_rang": 717, "backward": [717, 783, 868, 900, 905, 1031, 1135], "contiguous_rang": 717, "tristan": 718, "brindl": 718, "cppnorth": 718, "l0bhzp6hmdm": 718, "nico": 718, "accu": 718, "rust": [718, 982], "parrai": 719, "decompos": 719, "structured_binding_suit": 719, "struct_copi": 719, "struct_refer": 719, "struct_const_refer": 719, "tuple_copi": 719, "make_tupl": 719, "affect": 719, "tuple_refer": 719, "tuple_const_refer": 719, "array_copi": 719, "array_refer": 719, "array_const_refer": 719, "suspici": 719, "designwis": 720, "uptr": 720, "cxx11_smart_pointers_closing_word": [721, 730, 738, 760, 761], "cxx11_smart_pointers_shared_ptr": [721, 730, 738, 758, 760, 761], "cxx11_smart_pointers_weak_ptr": [721, 758, 760, 761], "myclass": [722, 724], "unwind": 722, "yoky6hzlkx": 722, "steal": [723, 968], "cxx11_unique_ptr_sensors_h": 723, "_temp": 723, "basic_const": 723, "raw_": 723, "raw_s_ref": 723, "copy_ctor_bad": 723, "assignment_operator_bad": 723, "gtest_filt": [723, 724, 1146], "reveal": [723, 1001], "vtabl": 723, "autoptr": 723, "copy_ctor_good_autoptr_styl": 723, "unexpectedli": 723, "assignment_operator_good_autoptr_styl": 723, "destiat": 723, "excus": 724, "shared_ptr_suit": 724, "rs1": [724, 725], "rs2": [724, 725], "rand1": [724, 725, 726], "rand2": [724, 725, 726], "cann": 724, "basic_make_shar": 724, "set_refer": 724, "_ref": 724, "cyclic_refer": 724, "303549": 724, "unique_ptr_suit": 725, "threw": 725, "ownership_error": 725, "cxx11": [725, 759], "unique_ptr_suite_ownership_error_test": 725, "testbodi": 725, "_dp": 725, "default_delet": 725, "verbose_ctor": 725, "make_unique_auto": 725, "tranfer": 725, "create_random_sensor": 725, "implicit_ownership_transf": 725, "holdsasensor": 725, "taking_ownership_in_own_cod": 725, "sompil": 725, "raw1": 725, "tie": 726, "unti": 726, "weak_ptr_suit": 726, "borrowed_sensor": 726, "another_refer": 726, "sensor_ref": 726, "measurement_thread": 726, "rvref": 727, "lo_funct": 727, "adventur": 727, "grimm": 727, "jaud": 727, "factset": 727, "570f242261f8": 727, "suffer": [728, 913], "origin_dist": 728, "criteria": [728, 852, 1135], "predic": 728, "void_funct": 728, "bind_suit": 728, "plain_void_funct": 728, "one_parameter_funct": 728, "plain_one_parameter_funct": 728, "minus_hardcod": 728, "_1_minus_2": 728, "minus_swap_paramet": 728, "second_minus_first": 728, "_2": [728, 729], "minus_hardcode_first_paramet": 728, "_42_minus_param": 728, "funcfunc": 728, "tradeoff": [728, 813], "oneimplement": 729, "anotherimplement": 729, "do_much_work": 729, "c_using_on": 729, "c_using_anoth": 729, "explanatori": 729, "trampolin": 729, "rtti": 729, "pod": 729, "metaphys": 729, "ostreamlogg": 729, "databaselogg": 729, "logfunc_t": 729, "funcptrlogg": 729, "somebusinessclasswithneedforlog": 729, "successfulli": [729, 828, 843, 1134, 1141], "do_stupid_log": 729, "ostream_logg": 729, "database_logg": 729, "funcptr_logg": 729, "busy_logging_to_ostream": 729, "busy_logging_to_databas": 729, "busy_logging_to_funcptr": 729, "foo_func": 729, "explos": 729, "cluster_cxx11_functions_funct": [730, 738, 760, 761], "cxx11_functions_functions_bind": [730, 738, 760, 761], "cxx11_functions_functions_funct": [730, 738, 760, 761], "msdn": 731, "devil": 731, "singlethread": 731, "god": 731, "paralleliz": 732, "cancel": [732, 958], "interlockedincr": 734, "mutual": [735, 1016], "try_lock": 735, "try_lock_for": 735, "unavail": 735, "try_lock_until": 735, "time_point": [735, 740], "do_something_errorpron": 736, "do_more_of_it": 736, "wake": [737, 790, 800, 931, 955, 964, 970], "waiter": [737, 800, 825, 955], "stop_wait": 737, "wait_for": [737, 739], "wait_until": [737, 739], "notify_on": 737, "notify_al": 737, "thunder": 737, "herd": 737, "condvar": 737, "threadsafequeu": 737, "maxelem": 737, "_maxelem": 737, "dur": [737, 739], "scoped_lock": [737, 739], "_lock": [737, 739], "pop_front": 737, "2m": [737, 739, 905], "1m": [737, 833, 905], "consumer1": 737, "consumer2": 737, "pthread_cond_init": [737, 955], "_not_empti": 737, "_not_ful": 737, "pthread_cond_wait": [737, 955], "pthread_cond_sign": [737, 955], "pthread_cond_t": [737, 955], "unique_lock": 737, "cluster_cxx11_multithread": [738, 760, 761], "cluster_linux_sysprog_blocking_io": [738, 760, 761, 838, 841, 842, 904, 933, 945, 959, 965, 967], "cluster_linux_sysprog_schedul": [738, 760, 761, 904, 945, 959, 965, 967], "cluster_linux_sysprog_posix_thread": [738, 760, 761, 904, 945, 959, 965], "cxx11_multithreading_scoped_lock": [738, 760, 761], "cxx11_multithreading_mutex": [738, 760, 761], "cxx11_multithreading_thread": [738, 760, 761], "cxx11_multithreading_introduct": [738, 760, 761], "linux_sysprog_posix_threads_lifecycl": [738, 760, 761, 904, 945, 959, 965], "cxx11_multithreading_promise_futur": [738, 760, 761], "cxx11_multithreading_race_condit": [738, 760, 761], "linux_sysprog_posix_threads_mutex": [738, 760, 761, 904, 945, 959, 965], "cxx11_multithreading_condition_vari": [738, 760, 761], "linux_sysprog_posix_threads_condition_vari": [738, 760, 761, 904, 945, 959], "cxx11_multithreading_chrono": [738, 760, 761], "cxx11_multithreading_atom": [738, 760, 761], "linux_sysprog_posix_threads_exercise_pthcreate_racecondit": [738, 760, 761, 904, 945, 959, 965], "linux_sysprog_blocking_io_blocking_io": [738, 760, 761, 838, 841, 842, 904, 933, 945, 959, 965, 967], "linux_sysprog_scheduling_bas": [738, 760, 761, 904, 945, 959, 965, 967], "linux_sysprog_posix_threads_exercise_mutex": [738, 760, 761, 904, 945, 959], "linux_sysprog_posix_threads_bas": [738, 760, 761, 904, 945, 959, 965], "get_futur": 739, "set_except": 739, "exception_ptr": 739, "shared_futur": 739, "uncoordin": 739, "ten_million_years_": 739, "answer_poll_interval_m": 739, "answer_valid": 739, "chew_answ": 739, "timespec": [739, 955, 966, 976], "reaction": [739, 923, 1005], "answer_computation_tim": 739, "answer_poll_interv": 739, "ten_million_year": 739, "lockguard": 739, "_answer_valid": 739, "_answer": 739, "_data": [739, 996], "binary_semaphor": 739, "__cplusplu": 739, "202001l": 739, "_notifi": 739, "answer_promis": 739, "answer_futur": 739, "make_exception_ptr": 739, "epoch": [740, 975], "time_t": 740, "notion": 740, "system_clock": 740, "monoton": [740, 816, 818], "ntp": 740, "steady_clock": 740, "timepoint": 740, "steadili": 740, "high_resolution_clock": 740, "brand": 740, "spent_milli": 740, "duration_cast": 740, "variant_suit": 741, "holds_altern": 741, "converting_ctor": 741, "bad_access": 741, "visit": [741, 746, 750, 760, 761], "int_seen": 741, "float_seen": 741, "charp": 741, "string_charp": 741, "no_default_ctor": 741, "cluster_cxx11_miscellan": [742, 746, 760, 761], "cxx11_miscellaneous_vari": [742, 746, 760, 761], "timur": 743, "doumler": 743, "aligned_alloc": 744, "alignof": 744, "pmr": 744, "heis": [744, 748], "_temperatur": [745, 747, 749, 751], "crtp": [746, 754], "klau": 746, "iglberg": 746, "cluster_cxx11_embedded_problem": [746, 760, 761], "cxx11_embedded_problems_variant_automatic_visit": [746, 760, 761], "cxx11_embedded_problems_variant_manual_visit": [746, 760, 761], "cxx11_embedded_problems_variant_manual_if": [746, 760, 761], "cxx11_embedded_problems_unrel": [746, 760, 761], "cxx11_embedded_problems_classic_virtu": [746, 760, 761], "cxx11_embedded_problems_related_no_virtu": [746, 760, 761], "static_cast": [747, 759], "derivedtyp": 747, "sensorptr": 749, "get_temperature_visitor": [750, 752], "bagcopi": 755, "find_by_int": [755, 756, 757], "remove_by_int": [755, 756, 757], "nremov": [755, 756, 757], "bagshar": 756, "weakref": 756, "sharedref": 756, "baguniqu": 757, "constbag": 757, "cluster_cxx11_exercis": [758, 760, 761], "cxx11_exercises_bag_shar": [758, 760, 761], "cxx11_exercises_bag_uniqu": [758, 760, 761], "cxx11_exercises_bag_copi": [758, 760, 761], "withing": 759, "filesystem_suit": 759, "cd_to_tmpdir_fixtur": 759, "path_compose_compar": 759, "path_compose_compare_2": 759, "is_absolut": 759, "is_rel": 759, "path_abs_rel": 759, "abspath": 759, "relpath": 759, "parent_path": 759, "remove_filenam": 759, "replace_filenam": 759, "replace_extens": 759, "path_component_access": 759, "filename_part": 759, "dir_part": 759, "path_iter": 759, "current_directori": 759, "cwd_chdir": 759, "current_path": 759, "create_directory_error": 759, "filesystem_error": 759, "char_trait": 759, "char_typ": 759, "_chart": 759, "_trait": 759, "_alloc": 759, "_s_copi": 759, "size_typ": 759, "_m_replac": 759, "tcc": 759, "2171": 759, "canonicalizeforstdlibvers": 759, "__builtin_memcpi": 759, "9223372036854775810": 759, "9223372036854775813": 759, "__s1": 759, "__s2": 759, "create_directory_singl": 759, "is_regular_fil": 759, "create_directory_multipl": 759, "is_directori": 759, "is_block_fil": 759, "is_character_fil": 759, "is_empti": 759, "is_fifo": 759, "is_oth": 759, "is_socket": 759, "is_symlink": 759, "greatest": 759, "nov": [759, 798, 864, 890, 912, 996, 1032, 1061], "inod": [759, 767, 774], "919153": 759, "0644": [759, 853, 867], "system_u": 759, "object_r": 759, "passwd_file_t": 759, "s0": 759, "111282886": 759, "0100": 759, "737858445": 759, "743858359": 759, "file_s": 759, "hard_link_count": 759, "last_write_tim": 759, "ext4": [759, 808], "btrf": 759, "ntf": 759, "directory_iter": 759, "subdir1": 759, "subdir2": 759, "file1": [759, 777, 893], "file2": [759, 777, 893], "dirit": 759, "recursive_directory_iter": 759, "cxx11_filesystem": [760, 761], "cluster_unittest": [761, 1144], "cluster_linux_toolchain_cross": [761, 904, 986, 987, 989, 991, 992, 993], "cluster_linux_toolchain_raspi": [761, 904, 987, 989, 992, 993], "cluster_linux_toolchain_exercis": [761, 904, 987, 988, 989, 990, 991, 992], "cluster_linux_ssh": [761, 904, 916, 917, 918, 919, 920, 992, 993], "cluster_linux_ssh_exercis": [761, 904, 916, 917, 918, 919, 920], "cluster_linux_basics_archiving_compress": [761, 831, 838, 904, 992, 993], "cluster_linux_basics_shell_exercis": [761, 835, 836, 837, 838, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 888, 904], "cluster_linux_basics_shell_exercises_l": [761, 838, 882, 883, 884, 885, 886, 888, 904], "cluster_linux_basics_shell_exercises_cp_mv_mkdir_rm": [761, 835, 836, 837, 838, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 888, 904], "cluster_linux_basics_io_redir_pip": [761, 838, 849, 904], "cluster_linux_basics_permissions_exercis": [761, 838, 854, 857, 858, 859, 860, 861, 862, 863, 904], "cluster_linux_basics_text_tool": [761, 838, 898, 904], "cluster_linux_basics_exercis": [761, 835, 836, 837, 838, 904], "cluster_linux_sysprog_intro_hw": [761, 904, 945, 947], "cluster_linux_sysprog_process": [761, 904, 945], "cluster_linux_hardwar": [761, 904, 910, 911], "cluster_linux_hardware_can": [761, 904, 910, 911], "cluster_linux_kernel": [761, 765, 768, 770, 773, 775, 778, 780, 782, 784, 785, 787, 789, 791, 793, 795, 797, 799, 801, 803, 805, 807, 809, 812, 814, 817, 819, 823, 826, 829, 904], "unittest_gtest_cmak": [761, 1144], "linux_toolchain_cmake_cross": [761, 904, 992], "linux_toolchain_shared_librari": [761, 904, 992], "linux_basics_intro_environ": [761, 838, 842, 888, 904, 945, 992, 993], "linux_toolchain_cross_bas": [761, 904, 986, 987, 989, 991, 992, 993], "linux_toolchain_raspi_toolchain_setup": [761, 904, 987, 989, 992, 993], "linux_toolchain_raspi_detail": [761, 904, 992, 993], "linux_ssh_bas": [761, 904, 916, 917, 918, 919, 920, 992, 993], "linux_ssh_scp": [761, 904, 916, 917, 918, 920, 992, 993], "linux_basics_archiving_compression_tar": [761, 831, 838, 904, 992, 993], "linux_toolchain_raspi_linaro_pi": [761, 904, 992, 993], "defunct": [761, 904, 992, 993], "linux_toolchain_raspi_docker_fedora_wsl": [761, 904, 992, 993], "linux_toolchain_exercises_cross_build": [761, 904, 987, 989, 992], "linux_toolchain_exercises_fh_moodle_quiz": [761, 904, 988, 989, 992], "linux_toolchain_exercises_native_build": [761, 904, 989, 990, 992], "linux_toolchain_exercises_raspberry_toolchain": [761, 904, 989, 991, 992], "linux_basics_intro_login": [761, 838, 842, 854, 857, 858, 859, 860, 861, 862, 863, 904, 916, 917, 918, 919, 920, 992, 993], "linux_ssh_key_pair": [761, 904, 916, 917, 918, 919, 920], "linux_ssh_sshf": [761, 904, 920], "linux_ssh_link": [761, 904, 920], "linux_ssh_portforward": [761, 904, 920], "linux_ssh_exercises_copy_tre": [761, 904, 917, 918, 920], "linux_ssh_exercises_copy_fil": [761, 904, 916, 917, 918, 920], "linux_ssh_exercises_pubkei": [761, 904, 916, 917, 918, 919, 920], "linux_basics_archiving_compression_gzip": [761, 831, 838, 904, 992, 993], "linux_basics_archiving_compression_overview": [761, 831, 838, 904, 992, 993], "linux_basics_archiving_compression_exercis": [761, 831, 838, 904], "linux_basics_intro_process_tre": [761, 838, 842, 854, 857, 858, 859, 860, 861, 862, 863, 904, 916, 917, 918, 919, 920, 945, 992, 993], "linux_basics_intro_wsl": [761, 838, 842, 904], "linux_basics_intro_fh_moodle_quiz": [761, 838, 841, 842, 904], "linux_basics_intro_demo_everything_is_a_fil": [761, 838, 841, 842, 904], "linux_sysprog_blocking_io_blocking_io_fil": [761, 838, 841, 842, 904, 933, 945], "linux_basics_shell_cp": [761, 835, 836, 837, 838, 872, 873, 875, 876, 879, 880, 882, 888, 904], "linux_basics_shell_mv": [761, 838, 888, 904], "linux_basics_shell_link": [761, 838, 888, 904], "linux_basics_shell_fh_moodle_quiz": [761, 838, 881, 888, 904], "linux_basics_shell_configfil": [761, 838, 888, 904], "linux_basics_shell_exercises_ls_dev_typ": [761, 838, 882, 883, 885, 888, 904], "linux_basics_shell_exercises_ls_etc_passwd_s": [761, 838, 882, 884, 885, 888, 904], "linux_basics_shell_exercises_ls_home_permiss": [761, 838, 882, 885, 886, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_copy_tre": [761, 838, 872, 876, 879, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_verify_hierarchi": [761, 838, 872, 876, 879, 880, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_mkdir_p_rm_r": [761, 835, 836, 837, 838, 872, 873, 874, 875, 876, 877, 879, 880, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_create_fil": [761, 835, 836, 837, 838, 872, 873, 874, 875, 876, 879, 880, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_copy_fil": [761, 838, 872, 873, 876, 879, 880, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_echo_move_fil": [761, 838, 872, 875, 876, 879, 880, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_rf": [761, 838, 876, 878, 882, 888, 904], "linux_basics_shell_exercises_cp_mv_mkdir_rm_rm_tre": [761, 838, 876, 879, 882, 888, 904], "linux_basics_io_redir_pipes_exercis": [761, 838, 849, 904], "linux_basics_io_redir_pipes_io_redir": [761, 838, 849, 904], "linux_basics_io_redir_pipes_io_redir_swap_stdout_stderr": [761, 838, 849, 904], "linux_basics_io_redir_pipes_pip": [761, 838, 849, 904], "linux_basics_permissions_setuid": [761, 838, 863, 904], "linux_basics_permissions_setuid_livedemo": [761, 838, 863, 904], "linux_basics_permissions_fh_moodle_quiz_nocheat": [761, 838, 856, 863, 904], "linux_basics_permissions_fh_moodle_quiz": [761, 838, 855, 863, 904], "linux_basics_permissions_sticki": [761, 838, 863, 904], "linux_basics_permissions_umask": [761, 838, 863, 904], "linux_basics_permissions_exercises_credenti": [761, 838, 854, 857, 858, 859, 860, 861, 862, 863, 904], "linux_basics_permissions_exercises_private_directori": [761, 838, 857, 858, 859, 863, 904], "linux_basics_permissions_exercises_private_directory_quest": [761, 838, 857, 859, 863, 904], "linux_basics_permissions_exercises_public_directory_quest": [761, 838, 857, 861, 863, 904], "linux_basics_permissions_exercises_public_directori": [761, 838, 857, 860, 861, 863, 904], "linux_basics_permissions_exercises_shared_fil": [761, 838, 857, 862, 863, 904], "linux_basics_text_tools_cat": [761, 838, 898, 904], "linux_basics_text_tools_overview": [761, 838, 898, 904], "linux_basics_text_tools_find": [761, 838, 898, 904], "linux_basics_text_tools_grep": [761, 838, 898, 904], "linux_basics_text_tools_less": [761, 838, 898, 904], "linux_basics_text_tools_head_tail": [761, 838, 898, 904], "linux_basics_text_tools_cut": [761, 838, 898, 904], "linux_basics_text_tools_exercis": [761, 838, 898, 904], "linux_basics_exercises_fh_ss2022_exam_01_g2": [761, 836, 837, 838, 904], "linux_basics_exercises_fh_ss2022_exam_01_g1": [761, 835, 837, 838, 904], "linux_sysprog_ipc": [761, 904, 945], "linux_sysprog_ev": [761, 904, 945], "linux_sysprog_sign": [761, 904, 945], "linux_sysprog_blocking_io_blocking_io_network": [761, 904, 933, 945], "linux_sysprog_blocking_io_blocking_io_tim": [761, 904, 933, 945], "linux_sysprog_fileio_misc": [761, 904, 943, 945, 962], "linux_sysprog_fileio_example_o_creat": [761, 904, 943, 945, 962], "linux_sysprog_fileio_example_o_wronli": [761, 904, 943, 945, 962], "linux_sysprog_fileio_example_o_rdonli": [761, 904, 943, 945, 962], "o_rdonli": [761, 766, 904, 930, 934, 935, 938, 941, 942, 943, 945, 946, 949, 962, 972, 975, 979], "linux_sysprog_fileio_example_o_excl": [761, 904, 943, 945, 962], "o_excl": [761, 904, 934, 935, 943, 945, 962, 975], "linux_sysprog_fileio_fileio_group": [761, 904, 943, 945, 962], "linux_sysprog_fileio_basics_exercise_copi": [761, 904, 935, 943, 945, 962], "linux_sysprog_fileio_basics_exercise_hol": [761, 904, 943, 945, 962], "linux_sysprog_fileio_dupl": [761, 904, 943, 945, 962], "linux_sysprog_intro_hw_get": [761, 904, 945, 947], "linux_sysprog_intro_hw_sysfs_gpio": [761, 904, 945, 947], "linux_sysprog_intro_hw_watch": [761, 904, 945, 947], "linux_sysprog_posix_threads_mutex_trylock": [761, 904, 945, 959], "trylock": [761, 904, 945, 953, 959], "islock": [761, 904, 945, 953, 959], "linux_sysprog_posix_threads_last_warn": [761, 904, 945, 959], "linux_sysprog_posix_threads_miscellan": [761, 904, 945, 959], "linux_sysprog_posix_threads_exercise_condition_vari": [761, 904, 945, 959], "linux_sysprog_scheduling_exam_quest": [761, 904, 945, 965, 967], "linux_sysprog_scheduling_realtim": [761, 904, 945, 965, 967], "linux_sysprog_scheduling_wakeup_lat": [761, 904, 945, 965, 967], "linux_sysprog_scheduling_processes_and_thread": [761, 904, 945, 965, 967], "linux_sysprog_scheduling_realtime_api": [761, 904, 945, 965], "linux_sysprog_process_tre": [761, 904, 945], "linux_sysprog_process_commandlin": [761, 904, 945], "linux_hardware_brushless_motor": [761, 904, 911], "brushless": [761, 904, 911], "linux_hardware_pwm": [761, 904, 911], "linux_hardware_w1": [761, 904, 911], "linux_hardware_i2c": [761, 904, 911], "linux_hardware_can_program": [761, 904, 910, 911], "linux_hardware_can_interfac": [761, 904, 910, 911], "linux_hardware_can_intro": [761, 904, 910, 911], "linux_hardware_can_hardwar": [761, 904, 910, 911], "linux_kernel_mutex": [761, 785, 789, 799, 801, 812, 817, 823, 826, 829, 904], "linux_kernel_process_vs_atom": [761, 770, 775, 778, 780, 785, 789, 791, 795, 799, 801, 803, 805, 807, 812, 814, 817, 819, 823, 826, 829, 904], "linux_kernel_cdev_file_oper": [761, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_cdev_auto": [761, 765, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_stub_sysprog_dup": [761, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "dup": [761, 767, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 851, 904, 937, 976], "stub": [761, 768, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904, 995], "linux_kernel_cdev_manu": [761, 765, 768, 770, 773, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_cdev_first_function": [761, 770, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_kmalloc": [761, 770, 775, 778, 780, 785, 789, 799, 803, 805, 812, 817, 823, 826, 829, 904], "linux_kernel_list": [761, 770, 775, 778, 785, 789, 797, 799, 812, 817, 823, 826, 829, 904], "doubli": [761, 770, 774, 775, 778, 785, 789, 798, 799, 810, 812, 817, 823, 826, 829, 904], "linux_kernel_spinlock_cod": [761, 785, 812, 817, 823, 826, 829, 904], "linux_kernel_interrupt_cod": [761, 785, 789, 812, 817, 823, 826, 829, 904], "linux_kernel_spinlock": [761, 785, 812, 814, 817, 823, 826, 829, 904], "linux_kernel_raspi_kernel_build": [761, 785, 789, 809, 812, 817, 823, 826, 829, 904], "linux_kernel_interrupt": [761, 785, 789, 791, 803, 805, 812, 817, 823, 826, 829, 904], "linux_kernel_mutex_cod": [761, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_fedora_module_build": [761, 765, 768, 770, 773, 775, 778, 784, 785, 787, 789, 793, 799, 805, 812, 817, 823, 826, 829, 904], "linux_kernel_fedora_kernel_build": [761, 765, 768, 770, 773, 775, 778, 782, 784, 785, 787, 789, 793, 799, 805, 812, 817, 823, 826, 829, 904], "linux_kernel_waitqueu": [761, 785, 826, 904], "linux_kernel_usermem": [761, 785, 823, 826, 904], "linux_kernel_workqueu": [761, 785, 823, 826, 829, 904], "linux_kernel_dma": [761, 780, 785, 803, 805, 904], "linux_kernel_netdev": [761, 785, 803, 904], "linux_kernel_modules_hello_world": [761, 765, 768, 770, 773, 775, 778, 785, 787, 789, 793, 799, 805, 812, 817, 823, 826, 829, 904], "linux_kernel_multiple_devic": [761, 775, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_cdev_refactor": [761, 775, 778, 785, 789, 799, 812, 817, 823, 826, 829, 904], "linux_kernel_tim": [761, 785, 817, 819, 823, 826, 829, 904], "linux_kernel_iomemori": [761, 785, 793, 805, 904], "linux_kernel_timer_cod": [761, 785, 817, 823, 826, 829, 904], "linux_kernel_pci": [761, 785, 805, 904], "interconnect": 762, "device_cr": [763, 764, 767], "cdev_init": [763, 771, 772], "cdev_add": [763, 771, 772], "unhappi": 763, "device_destroi": 763, "my_class": 763, "my_driv": [763, 766, 776, 777, 788, 798, 804, 810, 816, 827], "mknod": [763, 771, 772], "character devic": [764, 767, 772, 1164], "relatim": 764, "register_chrdev_region": [764, 771, 772], "alloc_chrdev_region": [764, 772], "htmldoc": 764, "chrdev": 764, "dev_t": [764, 772], "baseminor": 764, "highlight": 764, "bug_on": 764, "module_licens": [764, 786], "openat": [766, 930], "at_fdcwd": [766, 930], "0x7f3d11330000": 766, "einval": [766, 771, 786, 824], "enotti": 766, "file_oper": [767, 771, 772, 810], "citizenship": 767, "__user": [767, 822], "loff_t": 767, "unlocked_ioctl": 767, "my_op": 767, "this_modul": 767, "my_open": 767, "my_read": 767, "my_writ": 767, "my_ioctl": [767, 798], "mode_t": [767, 934, 938, 976], "filp": [767, 810, 824], "vf": 767, "swiss": [767, 934, 1159], "armi": [767, 934, 1159], "my_ioctl_request": [767, 769], "my_request_such": 767, "my_request_such_and_such": 767, "laden": [767, 1173], "endod": 767, "_iow": 767, "_ior": 767, "_ioc": 767, "_ioc_non": 767, "_ioc_read": 767, "_ioc_typecheck": 767, "_ioc_writ": 767, "_iowr": 767, "my_ev": [769, 776, 777, 816, 821], "my_event_typ": 769, "my_event_ioctl": 769, "jiffi": [769, 810, 816], "my_event_list": [769, 776, 777, 798], "list_head": [769, 796, 798, 821], "num_ev": 769, "my_event_list_init": 769, "my_event_list_destroi": 769, "my_event_list_add": [769, 798, 811, 816, 827], "my_ioctl_add_ev": 769, "printk": [769, 786, 788, 827], "unregister_chrdev_region": [771, 772], "caveat": [771, 810, 913], "register_chrdev": 771, "unregister_chrdev": 771, "kern_err": 771, "cdev_del": [771, 772], "my_driver_henkel": 771, "kmem": 772, "opaqu": 772, "majmin": 772, "mkdev": 772, "drivernam": 772, "my_fop": 772, "my_cdev": 772, "devicefil": 772, "ndevic": 774, "module_param": 774, "my_devic": [774, 776, 777, 788, 804, 816], "private_data": [774, 804, 810], "kbuild": [776, 777], "torn": [776, 1151], "ccflag": [776, 777], "container_of": [777, 828], "file3": 777, "distinct": [777, 844, 928, 1055], "my_device_init": 777, "my_device_destroi": [777, 816], "everyt": 779, "vmalloc": 779, "ioremap": [779, 792], "iommu": 779, "pysic": 779, "dma_addr_t": 779, "alloc_pag": 779, "gfp_mask": 779, "get_free_pag": 779, "__get_free_pag": 779, "2order": 779, "__get_dma_pag": 779, "zone": 779, "__free_pag": 779, "free_pag": 779, "addr": [779, 792, 804, 908, 913, 931, 975, 1139], "dma_handl": 779, "cpu_addr": [779, 804], "dma_alloc_coher": 779, "gfp": [779, 794, 820], "dma_free_coher": 779, "pci_dev": [779, 804], "gfp_kernel": [779, 794, 811], "gfp_atom": [779, 794], "dma_bidirect": 779, "dma_to_devic": 779, "dma_from_devic": 779, "dma_map_singl": 779, "dma_mapping_error": 779, "fuck": 779, "dma_unmap_singl": 779, "dma_map_pag": 779, "dma_unmap_pag": 779, "dma_address": 779, "sglist": 779, "sg_run": 779, "dma_map_sg": 779, "for_each_sg": 779, "hw_address": 779, "sg_dma_address": 779, "hw_len": 779, "sg_dma_len": 779, "dma_unmap_sg": 779, "nent": 779, "unmap": [779, 804], "recreat": [779, 880, 998], "dma_sync_single_for_cpu": 779, "dma_sync_sg_for_cpu": 779, "mel": [779, 794], "gorman": [779, 794], "incredibli": 779, "transcript": [781, 808, 1105], "building_a_custom_kernel": 781, "fc33": [781, 786], "extravers": [781, 809], "cleanli": 781, "uncommit": 781, "j6": 781, "fedpkg": 781, "pesign": 781, "grubbi": 781, "33rd": 781, "f33": 781, "builddep": 781, "libexec": [781, 994], "symver": [783, 786], "modpost": [783, 786], "module_src": 783, "kernel_build": 783, "install_mod_path": [783, 808], "modules_instal": [783, 808, 912], "fedora_kernel_build": 785, "fedora_module_build": 785, "modules_hello_world": 785, "cdev_manu": 785, "process_vs_atom": 785, "stub_sysprog_dup": 785, "cdev_auto": 785, "cdev_file_oper": 785, "cdev_first_function": 785, "cdev_refactor": 785, "multiple_devic": 785, "mutex_cod": 785, "raspi_kernel_build": 785, "interrupt_cod": 785, "spinlock_cod": 785, "timer_cod": 785, "usermem": 785, "iomemori": 785, "waitqueu": [785, 1164], "netdev": 785, "ldd3": [785, 796], "reilli": [785, 897], "probe": [786, 912, 913, 914], "hello_init": 786, "kern_debug": 786, "hello_exit": 786, "module_init": 786, "module_exit": 786, "exot": 786, "currect": [786, 881], "lsmod": [786, 912, 913, 914], "insmod": 786, "modprob": [786, 808, 809, 907, 912, 913, 914], "rmmod": [786, 816], "dep": 786, "softdep": 786, "rebuilt": 786, "depmod": [786, 804], "cross_compil": [788, 808, 809], "libssl": [788, 912], "gpio_request": 788, "gpio_fre": 788, "gpio_direction_input": 788, "gpio_direction_output": 788, "gpio_to_irq": 788, "my_device_activate_gpio": 788, "_destroi": 788, "3f200000": 788, "pinctrl": 788, "bcm2835": [788, 909], "request_irq": [788, 790, 804], "free_irq": [788, 790, 804], "priorit": [790, 806, 906, 964, 976], "preempt_rt": [790, 800, 1154], "mainlin": [790, 808, 968, 1154], "irqreturn_t": [790, 804], "irq_handl": [790, 804], "irq": [790, 804, 806, 810, 966], "opqu": 790, "irq_non": 790, "irq_wake_thread": 790, "irq_handler_t": 790, "irqf_shar": [790, 804], "irqf_trigger_ris": 790, "irqf_trigger_fal": 790, "irqf_trigger_high": 790, "irqf_trigger_low": 790, "iomem": 792, "ioport": 792, "request_mem_region": 792, "0x20200000": 792, "release_mem_region": 792, "asm": [792, 997], "iounmap": 792, "ioread8": 792, "ioread16": 792, "ioread32": 792, "iowrite8": 792, "u8": 792, "iowrite16": 792, "u16": 792, "iowrite32": 792, "u32": 792, "kmalloc kfre": 794, "dynamic memori": 794, "slab": 794, "gfp_t": [794, 811, 827], "kzalloc": 794, "kfree": 794, "scarc": 794, "discourag": 794, "stolen": [796, 905], "some_list": 796, "init_list_head": 796, "some_data": 796, "list_add": 796, "list_add_tail": 796, "new_payload": 796, "existing_payload": 796, "prepend": [796, 808, 840, 1043], "list_for_each": 796, "list_entri": 796, "cursor": [796, 868, 1115], "run_payload": 796, "list_empti": 796, "list_first_entri": 796, "list_del": [796, 798], "a_payload": 796, "inject": [798, 811, 816, 1118], "opfer": 798, "corrupt": 798, "ffff91285ae68f00": 798, "ffff9128406cec00": 798, "list_debug": 798, "0x70": [798, 913], "0xb0": 798, "0xdd": 798, "ksys_ioctl": 798, "0x82": 798, "0xc0": 798, "__x64_sys_ioctl": 798, "do_syscall_64": 798, "0x4d": 798, "entry_syscall_64_after_hwfram": 798, "0x44": 798, "0xa9": 798, "unprotect": [798, 810, 1026], "nevent": [798, 821], "my_device_list": 798, "preemptibl": [800, 968], "preemption": [800, 806, 813, 913, 964, 967, 968], "holder": [800, 1024], "mutex_init": 800, "mutex_destroi": 800, "mutex_lock": 800, "mutex_lock_interrupt": 800, "eintr": [800, 926, 979, 980], "mutex_lock_interruptible_nest": 800, "mutex_trylock": 800, "eagain": [800, 810, 824], "mutex_unlock": 800, "torvald": [800, 808], "trickl": 800, "rtmutex": 800, "rt_mutex": 800, "net_devic": 802, "alloc_netdev": 802, "sizeof_priv": 802, "netdev_priv": 802, "funcion": 802, "ethernet": 802, "etherdevic": 802, "alloc_etherdev": 802, "free_netdev": 802, "register_netdev": 802, "unregister_netdev": 802, "devinc": 802, "hard_start_xmit": 802, "sk_buff": 802, "skb": 802, "transmiss": [802, 931, 1102], "tx_timeout": 802, "quota": [802, 834], "stead": 802, "do_ioctl": 802, "ifreq": [802, 908], "ifr": [802, 908], "netif_start_queu": 802, "netif_stop_queu": 802, "netif_wake_queu": 802, "udevd": 804, "pci_device_id": 804, "my_id": 804, "pci_devic": 804, "0xdead": 804, "0xbeef": 804, "0xbeee": 804, "module_device_t": 804, "my_prob": 804, "my_remov": 804, "my_suspend": 804, "pm_message_t": 804, "my_resum": 804, "my_shutdown": 804, "pci_driv": 804, "id_tabl": 804, "my_init": 804, "pci_register_driv": 804, "my_exit": [804, 1013], "pci_unregister_driv": 804, "subsystem_vendor": 804, "subsystem_devic": 804, "u64": [804, 818], "dma_mask": 804, "device_count_resourc": 804, "pci_enable_devic": 804, "pdev": 804, "wizardri": 804, "pci_request_region": 804, "pci_set_mast": 804, "pci_clear_mast": 804, "pci_set_dma_mask": 804, "pci_set_drvdata": 804, "ioread": 804, "iowrit": 804, "pci_resource_len": 804, "bar_no": 804, "__iomem": 804, "pci_iomap": 804, "pci_iounmap": 804, "pci_alloc_consist": 804, "os_devic": 804, "_o": 804, "dma_addr": 804, "pci_free_consist": 804, "_size": 804, "_cpu_addr": 804, "t_os_dma_addr__get_n": 804, "_dma_addr": 804, "_os_devic": 804, "dma_bit_mask": 804, "pci_set_consistent_dma_mask": 804, "config_debug_atomic_sleep": [806, 811], "cross compil": 808, "educ": 808, "raspberrypi": [808, 809, 912, 984, 991], "borrow": 808, "pi2": 808, "1gb": 808, "canon": [808, 925], "workstat": 808, "hf": 808, "armv6j": 808, "hardfloat": 808, "gnueabi": 808, "objcopi": 808, "raspberry_pi": 808, "local_overlai": 808, "ebuild": 808, "binutil": [808, 809], "repo_nam": 808, "9999": 808, "sourcedir": 808, "builddir": 808, "buildparam": 808, "kconfig": 808, "zconf": 808, "raspbian": 808, "bootdir": 808, "bootf": 808, "rootf": 808, "kernel7": 808, "Then": [808, 923, 1122], "assimil": 808, "bcmrpi_defconfig": 808, "bcm2709_defconfig": 808, "config_localvers": 808, "config_ikconfig": 808, "eveytim": 808, "config_can_mcp251x": 808, "config_sensors_lm73": 808, "zimag": [808, 809, 912], "dtb": [808, 809, 912], "j3": 808, "mkknlimg": 808, "te": 808, "superus": 808, "jtf": 808, "bcm2709": 808, "smi": 808, "ft5406": 808, "can1": [808, 907], "v7": [808, 809], "ipv4": [808, 1176], "xfrm4_mode_beet": 808, "inet_lro": 808, "esp4": 808, "xfrm4_mode_transport": 808, "udp_tunnel": 808, "sdb": 808, "57344": 808, "sdb1": 808, "4162560": 808, "sdb2": 808, "enjoi": 808, "ec2aa3d2": 808, "eee7": 808, "454e": 808, "d145df5ddcba": 808, "agnost": 808, "urg": 808, "rasperri": [809, 912, 914, 1163, 1170], "patchlevel": 809, "sublevel": 809, "_morph": [810, 820], "my_driver_hello": 810, "my_driver_cdev_manu": 810, "my_driver_cdev_dynamic_major": 810, "my_driver_cdev_file_oper": 810, "my_driver_cdev_first_function": 810, "my_driver_cdev_refactor": 810, "my_driver_multiple_devic": 810, "my_driver_mutex": 810, "my_driver_interrupt": 810, "my_driver_spinlock_atom": 810, "my_driver_time_tim": 810, "my_driver_workqueu": 810, "my_driver_usermem": 810, "copy_": 810, "my_driver_waitqueu": 810, "nonblock": [810, 824, 976, 1176], "spinlock_t": [811, 813], "isr": [811, 968, 1164], "spin_unlock": [811, 813], "reenabl": 811, "uniprocessor": 813, "multiprocessor": 813, "spin_lock_init": 813, "spin_lock": 813, "spin_trylock": 813, "irqflag": 813, "spin_lock_irqsav": 813, "spin_unlock_irqrestor": 813, "pend": [816, 845, 968, 981], "my_inject_deferred_ev": 816, "my_device_add_deferred_ev": 816, "del_timer_sync": [816, 818], "paranoia": 816, "symmetri": 816, "my_device_add_ev": 816, "my_inject_ev": 816, "tick": 818, "config_hz": 818, "friendli": [818, 1056, 1125, 1129], "hrtimer": 818, "jiffies_to_msec": 818, "jiffies_to_usec": 818, "jiffies_to_nsec": 818, "msecs_to_jiffi": 818, "usecs_to_jiffi": 818, "timespec64_to_jiffi": 818, "timespec64": 818, "jiffies_to_timespec64": 818, "timer_list": 818, "my_tim": 818, "timerfunc": 818, "timer_setup": 818, "add_tim": 818, "del_tim": 818, "0520": 820, "0521": 820, "0525": 820, "0532": 820, "0710": 820, "preempt": [820, 964, 968], "caption": 820, "backlink": 820, "my_event_nod": 821, "my_get_one_ev": [821, 824], "my_device_get_one_ev": 821, "my_event_get_one_ev": 821, "efault": [821, 822], "uaccess": 822, "copy_to_us": 822, "copy_from_us": 822, "enosi": 824, "timerfd": [824, 932, 972], "f_flag": 824, "wait_queue_head_t": 825, "wq": [825, 827, 828], "init_waitqueue_head": 825, "sched": 825, "wait_ev": 825, "wait_event_interrupt": 825, "wait_event_timeout": 825, "timeout_jiffi": 825, "wait_event_interruptible_timeout": 825, "wake_up": 825, "wake_up_interrupt": 825, "task_interrupt": 825, "create_workqueu": [827, 828], "destroy_workqueu": [827, 828], "eo": 827, "rtprio": 827, "work_struct": [827, 828], "init_work": [827, 828], "chrt": [827, 968], "workqueue_struct": 828, "work_func_t": 828, "queue_work": 828, "packen": 830, "gunzip": 832, "zgrep": 832, "zcat": 832, "zless": 832, "intact": [832, 1081, 1085], "viro": 833, "cpio": 833, "cleaner": 833, "archivformat": 833, "lzma": 833, "430mb": 833, "95mb": 833, "74mb": 833, "5m": [833, 905], "64mb": 833, "togeht": 834, "ceph": 834, "gfs2": 834, "zcf": 834, "decompress": [834, 994], "zxf": 834, "ztf": 834, "dirt": 834, "livingroom": 834, "grumbl": 834, "reat": 834, "tract": 834, "ell": [834, 868], "vv": 834, "supplementari": [835, 836, 843, 845], "1021": [835, 836, 843], "somefil": [835, 836, 874], "chgrp": [835, 836, 853, 860, 862], "fellow": [835, 836], "picki": [835, 836, 1018], "ttyusb1": 839, "stick": [839, 843], "2006854": 839, "sdc": 839, "2006823": 839, "deserv": [839, 897, 958, 984], "trash": [839, 868], "burn": [839, 914], "1mib": 839, "1mibf": 839, "0m": [839, 890, 966], "mkf": 839, "entropi": 839, "my_vari": 840, "1034184": 840, "1035812": 840, "ancestor": [840, 846, 924], "decriptor": [841, 940], "getti": 843, "kerbero": [843, 845], "gnome3": 843, "agetti": 843, "cleartext": [843, 864], "shadow": [843, 864, 940, 1047, 1084], "brute": [843, 921, 984], "crack": 843, "attack": [843, 921, 999, 1118, 1162], "hierarch": 844, "peripher": [844, 1163, 1170], "grand": 844, "ten_integ": 845, "unfair": [845, 968], "dialout": [845, 940], "seg": 845, "kbyte": 845, "62715": 845, "819200": 845, "pstree": 846, "modemmanag": 846, "journ": 846, "abrtd": 846, "auditd": 846, "bluetoothd": 846, "cupsd": 846, "lau": 846, "firewalld": 846, "fwupd": 846, "tini": [846, 982], "enemi": 847, "guidanc": 847, "dicdat": 847, "acknowledg": [847, 905], "seamless": [847, 1131], "vmware": 847, "exampk": 847, "altruism": 847, "mkfifo": [848, 852], "stdin_fileno": [850, 934, 944, 980, 1056], "stdout_fileno": [850, 930, 931, 934, 940, 966, 975, 979, 980, 1056], "stderr_fileno": [850, 934, 1056], "religi": 850, "fed": 850, "filefor": 850, "sudoer": 851, "weekli": 851, "compet": [852, 913], "award": [852, 899], "plumber": 852, "sniff": 852, "fifo": [852, 934, 1175], "rendezv": 852, "unnam": 852, "chown": [853, 865, 996], "useradd": [853, 996], "groupadd": 853, "usermod": 853, "groupmod": 853, "teammember42": 853, "manfromthestreet": 853, "jun": [853, 984], "triplet": 853, "1003": 853, "110100100": 853, "110000000": 853, "0600": 853, "111101101": 853, "0755": 853, "bitmask": [853, 864, 980], "1317": 864, "mdmckqvpfaqquqypvzjjkihsbkkcniogknxtiobvbfw8u7zuf3": 864, "0g2rqr9cnydnqq5unt": 864, "wpu8jyzeuxktapl0": 864, "burnout": 864, "retyp": 864, "rwsr": [864, 865], "32712": 864, "rwxrwxrwx": 864, "4755": [864, 865], "uid_t": 865, "getuid": 865, "geteuid": 865, "rwxrwxr": [865, 930, 982, 983, 984], "24456": 865, "drwxrwxrwt": 866, "0022": 867, "strain": 868, "injuri": 868, "diseas": 868, "outout": 868, "20k": 868, "olevel": 868, "debugopt": 868, "expr1": 868, "expr2": 868, "daystart": 868, "regextyp": 868, "synopsi": 868, "findu": 868, "til": 868, "findutil": 868, "pression": 868, "print0": 868, "keystrok": 868, "noob": [868, 1029], "pos1": 868, "misconfigur": 868, "esc": 868, "freak": 868, "cvsserver": 868, "gitview": 868, "oesterreich": 868, "clearanc": 868, "e7d76d19": 868, "dd3d": 868, "4d52": 868, "2c16dc73f9d1_vstv_921302213705_2021___vstvf": 868, "boardingpass_1d9xf3dvd1uzt00tsswu68duh": 868, "gif": [868, 1119], "einkommensteuerbescheid1": 868, "boardingpass_b6uy9xqgeojspx1hxshogcbbq": 868, "einkommensteuervorauszahlungsbescheid1": 868, "immobilienbewertung": 868, "etw": 868, "confirm": 868, "ova": 868, "umsatzsteuerbescheid1": [868, 890, 891], "h0020211105124337": 868, "vk9vst311192021_0022021": 868, "img_": 870, "jpg": 870, "bilder": 870, "121751": 871, "op": [871, 1057], "garbage1": [872, 873, 875, 879, 880], "garbage2": [872, 873, 875, 879, 880], "diretori": 874, "sweetheart": [874, 880, 887, 961], "citi": 874, "mqueue": [883, 975], "leavel": 887, "hintingx": 890, "1048576": 890, "drwx": [890, 892], "36817": 890, "umsatzsteuerbescheid": 891, "finanzamt": 891, "abgab": 891, "neighbor": [892, 1113], "enat": 893, "dereferenzieren": 895, "50k": [895, 896], "rekursiv": 896, "eintr\u00e4g": 896, "unterhalb": 896, "gefiltert": 896, "un\u00fcblich": 896, "gebr\u00e4uchlich": 896, "geh\u00f6ren": 896, "mmin": 896, "h\u00f6chsten": 896, "gefundenem": 896, "eintrag": 896, "heissen": 896, "beginnen": 896, "versteht": 896, "vergessen": 896, "j\u00fcnger": 896, "verkn\u00fcpft": 896, "metacharact": [896, 915], "gr\u00f6\u00dfer": 896, "lobal": 897, "egular": 897, "xpression": 897, "rint": 897, "sed": [897, 1163, 1170], "tream": 897, "itor": 897, "verb": 897, "insensit": [897, 1130], "entor": 897, "perlr": 897, "perlretut": 897, "perlrequick": 897, "jeffrei": 897, "friedl": 897, "philosopi": 901, "toether": 901, "hc": 901, "325324": 901, "xarg": 901, "bitbak": 903, "behan": 903, "webster": 903, "drone": 905, "electronic speed control": 905, "vehicl": 905, "rack": 905, "recognit": [905, 1113], "flight": 905, "fritz": [905, 913], "brigh": 905, "heinrich": 905, "polar": 905, "uevent": [905, 912, 913, 914, 948], "puls": [905, 1163, 1170], "cheapest": 905, "quicrun": 905, "16bl30": 905, "brake": 905, "11v": 905, "conclud": [905, 913], "lipo": 905, "madli": 905, "transmitt": 905, "throttl": 905, "neutral": [905, 1115], "chop": 905, "kindli": [905, 1119], "mechatron": 905, "50hz": 905, "nanosecond": [905, 913, 932], "20000000": [905, 1016], "oscil": 905, "10bl60": 905, "000n": 905, "1500000": [905, 970], "2000000": 905, "1550000": 905, "1600000": 905, "acceler": 905, "1650000": 905, "1700000": 905, "1750000": 905, "1800000": 905, "1850000": 905, "1900000": 905, "1950000": 905, "logist": [905, 1113], "hobbi": 905, "can bu": [906, 907, 908, 909], "sinowatz": [906, 1006], "donat": 906, "volkswagen": 906, "traffic": 906, "octet": 906, "arbitr": 906, "can_fram": [906, 908], "canid_t": [906, 908], "can_id": [906, 908], "eff": [906, 908], "rtr": [906, 908], "__u8": [906, 908], "can_dlc": [906, 908], "__attribute__": [906, 908], "can0": [907, 908], "noarp": 907, "qdisc": 907, "qlen": 907, "relic": 907, "cansend": 907, "candump": 907, "canplay": 907, "cangen": 907, "snif": 907, "loopback": 907, "pf_can": 908, "sockaddr_can": 908, "sock_raw": 908, "can_raw": 908, "ifr_nam": 908, "siocgifindex": 908, "can_famili": 908, "af_can": 908, "can_ifindex": 908, "ifr_ifindex": 908, "sockaddr": [908, 931], "can_socket": 908, "packt": 908, "frame_layout": 908, "ib3x8": 908, "frame_s": 908, "calcsiz": 908, "recvfrom": 908, "sendto": 908, "lnxpp": 909, "can2udp": 909, "openwrt": 909, "asymmetrisch": 909, "mosi": 909, "miso": 909, "sclk": 909, "broadcom": 909, "ce0": 909, "3v": [909, 912], "5v": [909, 912], "transceiv": 909, "inter intergrated circuit": 912, "lm-sensor": 912, "handwork": [912, 914], "texa": 912, "maker": 912, "dtparam": [912, 913, 914], "i2c_arm": [912, 913, 914], "gpio2": 912, "gpio3": 912, "i2c_bcm2835": [912, 913, 914], "fe804000": [912, 914, 948], "i2c_dev": [912, 913], "sot": 912, "7v": 912, "rail": 912, "capacitor": 912, "idc": 912, "gnd": [912, 914], "vdd": 912, "smbdat": 912, "smbclk": 912, "unconnect": 912, "0x49": 912, "0x4a": 912, "jumper": 912, "3v3": [912, 914], "scl": [912, 914], "probl": 912, "i2c_slav": 912, "0x0703": 912, "o_rdwr": [912, 934, 941, 975], "msb_lsb": 912, "msb": 912, "lsb": [912, 983], "65535": 912, "dev_fd": 912, "perror": [912, 926, 930, 931, 932, 938, 939, 940, 941, 946, 949, 966, 972, 975, 979], "libncurs": 912, "bcm2711_defconfig": 912, "v7l": 912, "semiconductor": 912, "j4": 912, "kernel7l": 912, "new_devic": [912, 914], "0048": 912, "modalia": 912, "preinstal": 912, "hwmon0": 912, "thermal": 912, "thermal_zone0": 912, "hwmon1": [912, 914], "temp1_max": 912, "temp1_max_alarm": 912, "temp1_min": 912, "temp1_min_alarm": 912, "update_interv": 912, "milli": [912, 914], "22000": 912, "randomli": [912, 914], "nomenclatur": 912, "pulse width modul": 913, "resistor": 913, "bright": 913, "potentiomet": 913, "ssop": 913, "0b1000000": 913, "buse": [913, 914], "i2cdetect": [913, 914], "charactr": 913, "pca": 913, "simultan": [913, 979], "peculiar": 913, "pca9685a": 913, "nxp": 913, "dtoverlai": [913, 914], "pwm_pca9685": 913, "regmap_i2c": 913, "3f804000": 913, "0040": [913, 948], "npwm": 913, "unexport": [913, 948], "butt": [913, 994], "intercept": [913, 1005], "dim": 913, "300000": [913, 1111], "fade": 913, "800000": [913, 1111], "600000": [913, 1111], "50000": 913, "apolog": 913, "kenel": 913, "devlop": 913, "pleasur": 913, "cornerston": 914, "unstabl": 914, "parasit": 914, "bitbang": 914, "gpiopin": 914, "profession": 914, "addon": 914, "pinout": 914, "01144fe43baa": 914, "w1_bus_master8": 914, "w1_bus_master1": 914, "amaz": 914, "400000000000": 914, "800000000000": 914, "behalf": [914, 928, 982], "ad0": 914, "ad1": 914, "ad2": 914, "vcc": 914, "0x18": 914, "0b0011000": 914, "shortli": [914, 1005], "execstart": 914, "36864": 914, "w1_bus_master2": 914, "w1_bus_master3": 914, "w1_bus_master4": 914, "w1_bus_master5": 914, "w1_bus_master6": 914, "w1_bus_master7": 914, "busno": 914, "abtract": 914, "prepackag": 914, "afford": 914, "alarm": [914, 978, 981], "conv_tim": 914, "w1_slave_driv": 914, "eeprom": 914, "ext_pow": 914, "w1_slave": 914, "22750": 914, "crc": 914, "rpi_volt": 914, "isa": 914, "in0": 914, "cpu_therm": 914, "temp1": 914, "w1_slave_temp": 914, "reliabl": 914, "radiou": 914, "disappear": 914, "0c4000000000": 914, "0x28": 914, "dalla": [914, 942], "02131d9920aa": 914, "5d": 914, "011432f138f9": 914, "misbehavior": 914, "instabl": 914, "pump": 914, "nuclear": 914, "plant": 914, "ssh-keygen": [915, 921], "password authent": [915, 921], "key based authent": [915, 921], "remote login": [915, 921], "unencrypt": 915, "rlogin": 915, "telnet": 915, "nsa": 915, "primarili": [915, 1008, 1127], "sftp": 915, "portno": 915, "unabl": 915, "propaget": 915, "sha256sum": 916, "72c18232434d0551af75f964ea66ae5d9271faba895f40a929fb17f19d7ab44c": 916, "mitm": 921, "uncomfort": 921, "keygen": 921, "safeguard": 921, "unrespons": 922, "port forward": 923, "portforward": 923, "secure copi": [923, 924], "hmmm": 923, "whateer": 923, "mydocu": 924, "recus": 924, "mobil": 924, "bandwidth": 924, "mediat": 924, "descriptiotn": 924, "file system": 925, "network file system": 925, "smb": 925, "crawl": 925, "debianish": 925, "mountpoint": 925, "grant": 925, "idmap": 925, "errnum": 926, "strerror_r": 926, "buflen": 926, "cleanest": 926, "_r": 926, "reentrant": 926, "syscal": 928, "getaddrinfo": 928, "ri": 930, "nbytes_read": [930, 931, 932], "24608": 930, "1024root": 930, "nager": 930, "698nager": 930, "gatewai": 931, "peer": [931, 934], "netinet": 931, "af_inet": 931, "sock_stream": 931, "sockaddr_in": 931, "sin_famili": 931, "sin_port": 931, "inet_aton": 931, "sin_addr": 931, "ipproto_ip": 931, "sa_famili": 931, "inet_addr": 931, "10hallo": 931, "16thi": 931, "ong": 931, "14ong": 931, "timerfd_settim": 932, "itimerspec": [932, 966], "nasti": [933, 966], "ingenu": 934, "smae": 934, "o_append": 934, "o_cloexec": 934, "sigpip": [934, 980], "whenc": 934, "seek_cur": 934, "seek_end": 934, "occupi": [934, 936, 937], "status": 935, "srcfile": 935, "dstfile": 935, "1073741825": 936, "0k": 936, "texttt": 937, "dup2": 937, "oldfd": 937, "newfd": 937, "o_": 937, "bytes_to_writ": [938, 939, 941], "wxr": 938, "o_tmpfil": 938, "speci": 938, "pli": 938, "nread": [940, 946, 949, 972, 975, 979], "thats": [940, 941], "litter": 941, "misspel": 941, "24625": 942, "24562": 942, "pread": 944, "pwrite": 944, "readv": 944, "writev": 944, "uio": 944, "iovec": 944, "iov": 944, "iovcnt": 944, "preadv": 944, "pwritev": 944, "ftruncat": [944, 975, 976], "filedescriptor": 944, "gpio26": [946, 948, 949], "subtre": 948, "fe200000": 948, "gpiochip488": 948, "gpiochip504": 948, "active_low": 948, "fd_set": [949, 972], "exc_fd": 949, "fd_zero": [949, 972], "nreadi": 949, "fd_isset": [949, 972], "eek": 949, "intens": 950, "ppid": 950, "tid": 950, "tsd": 950, "spezif": 950, "_reentrant": 950, "lpthread": [950, 966, 985], "start_routin": 951, "pthread_exit": 951, "pthread_cancel": 951, "pthread_attr_setdetachst": 951, "detachst": 951, "pthread_create_detach": 951, "pthread_detach": 951, "pthread_self": 951, "pthread_equ": 951, "30650": 951, "13961": 951, "correl": 951, "gettid": 951, "pthread_mutexattr_t": [953, 969], "pthread_mutex_destroi": 953, "pthread_mutex_trylock": 953, "global_mutex": 953, "pthread_mutexattr_settyp": 953, "pthread_mutex_norm": 953, "pthread_mutex_errorcheck": 953, "pthread_mutex_recurs": 953, "pthread_mutex_default": 953, "pthread_cond_destroi": 955, "pthread_cond_broadcast": 955, "parlanc": 955, "set_autoreset_ev": 955, "ev": 955, "is_set": 955, "wait_autoreset_ev": 955, "acquiriert": 955, "autoreset": 955, "spuriou": 955, "woken": 955, "pthread_condattr_t": 955, "pthread_cond_initi": 955, "pthread_cond_timedwait": 955, "abstim": 955, "use_glob": 957, "pthread_once_t": 957, "global_onc": 957, "pthread_once_init": 957, "init_glob": 957, "pthread_onc": 957, "once_control": 957, "init_routin": 957, "pthread_key_cr": 957, "__thread": 957, "pthread_atfork": 958, "legales": 958, "lock_rac": 960, "succeed": [960, 1146], "foreground": [961, 1014], "huh": 961, "paradox": 961, "setenv": 963, "putenv": 963, "unsetenv": 963, "clearenv": 963, "customvar": 963, "timesl": 964, "starv": 964, "throughput": 964, "sha1": [964, 967, 983], "voluntarili": [964, 967], "lrt": 966, "app_statu": 966, "tick_count": 966, "update_statu": 966, "sigact": [966, 979, 980], "sa_handl": [966, 979, 980], "sigrtmin": 966, "sigev": [966, 976], "sev": 966, "sigev_notifi": 966, "sigev_sign": 966, "sigev_signo": 966, "timer_t": 966, "tspec": 966, "nsec": 966, "timer_settim": 966, "show_statu": 966, "freerto": [966, 969], "syncron": 966, "update_status_func": 966, "initial_t": 966, "interval_t": 966, "show_status_func": 966, "update_task": 966, "show_task": 966, "231765": 966, "225819": 966, "5635": 966, "lwp": 966, "231766": 966, "231767": 966, "tracer": 966, "restart_syscal": 966, "clock_nanosleep": 966, "clock_realtim": 966, "500000000": 966, "033": 966, "7m": 966, "flash_func": 966, "is_revers": 966, "flash_task": 966, "flasher": 966, "indepen": 966, "toggl": 966, "fore": [966, 1016], "particularli": 967, "suscept": 967, "renic": 968, "din": 968, "44300": 968, "echtzeitbetrieb": 968, "betrieb": 968, "rechensystem": 968, "verarbeitung": 968, "anfallend": 968, "st\u00e4ndig": 968, "derart": 968, "betriebsbereit": 968, "da\u00df": 968, "verarbeitungsergebniss": 968, "innerhalb": [968, 1176], "vorgegebenen": 968, "zeitspann": 968, "000014": 968, "013914m": 968, "91410827636698u": 968, "000002": [968, 970], "002382m": 968, "3820173632900326u": 968, "intrus": 968, "controversi": 968, "sched_oth": 969, "relinquish": 969, "sched_param": 969, "sched_getschedul": 969, "sched_prior": 969, "pthread_setschedparam": 969, "pthread_getschedparam": 969, "predefini": 969, "pthread_attr_setschedpolici": 969, "spoken": 969, "pthread_mutexattr_setprotocol": 969, "pthread_prio_inherit": 969, "pthread_prio_protect": 969, "risen": 969, "pthread_mutexattr_setprioceil": 969, "000105": 970, "105247m": 970, "24749755859354u": 970, "000015": 970, "014643m": 970, "64260525619006u": 970, "105u": 970, "000067": 970, "067263m": 970, "2626495361326u": 970, "000003": 970, "002883m": 970, "8827592917392217u": 970, "ondemand": 970, "governor": 970, "cpufreq": 970, "scaling_governor": 970, "cpuinfo_cur_freq": 970, "067036m": 970, "03615188598611u": 970, "000001": 970, "001257m": 970, "2571678380193383u": 970, "000065": 970, "065188m": 970, "188407897949u": 970, "002376m": 970, "3758434034066656u": 970, "001042": 970, "042438m": 970, "4375534057617u": 970, "000017": 970, "017123m": 970, "123423079175748u": 970, "000143": 970, "142646m": 970, "6458358764593u": 970, "000005": 970, "004995m": 970, "994855006705264u": 970, "_syse": 972, "exit_failur": 972, "consume_fd": 972, "random_fd": 972, "tty_fd": 972, "nfd": 972, "ttys4": 972, "in_fd": 972, "eof_detect": 972, "shm": [974, 975, 976], "099": 974, "sem": [974, 975, 976], "shared memori": 975, "message queu": 975, "mman": 975, "fstat": 975, "st_size": 975, "map_fail": 975, "shm_open": [975, 976], "tmpf": [975, 976], "resiz": 975, "4095": 975, "weigh": 975, "map_shar": 975, "counter_loc": 975, "sem_t": [975, 976], "sem_open": 975, "sem_fail": 975, "sem_wait": 975, "sem_post": 975, "mq_attr": [975, 976], "mq_maxmsg": [975, 976], "mq_msgsize": [975, 976], "mqd_t": [975, 976], "mq_open": 975, "mq_send": 975, "mq_receiv": 975, "shm_unlink": 976, "overtak": 976, "mq_overview": 976, "oflag": 976, "mq_flag": 976, "mqde": 976, "msg_ptr": 976, "msg_len": 976, "msg_prio": 976, "sevp": 976, "disturb": [976, 979], "elegantli": 976, "qsize": 976, "signo": 976, "notify_pid": 976, "goiven": 976, "sem_overview": 976, "sem_trywait": 976, "sem_timedwait": 976, "abs_timeout": 976, "shm_close": 976, "shm_overview": 976, "051": [978, 979], "segv": [979, 980], "mortem": [979, 1105], "core_pattern": 979, "termination_handl": 979, "sigint": [979, 980], "sig_atomic_t": [979, 980], "term_act": 979, "alarm_handl": 979, "alarm_act": 979, "sigset_t": [979, 981], "termination_sign": 979, "sigemptyset": [979, 980], "sigaddset": [979, 980], "sigquit": 979, "sigprocmask": [979, 980], "sig_block": 979, "impolit": 979, "sig": [979, 980], "consume_pip": 979, "pipenam": 979, "puzzl": 979, "pthread_sigmask": [979, 980], "sigtstp": 980, "sigalrm": [980, 981], "sigchld": 980, "abnorm": 980, "sigabrt": 980, "sigsegv": 980, "sigbu": 980, "sigil": 980, "sigfp": 980, "unblock": 980, "oldset": 980, "sigpend": 980, "sigfillset": 980, "signum": 980, "sigdelset": 980, "sigismemb": 980, "sigsetop": 980, "recept": 980, "sa_mask": 980, "sa_flag": 980, "oldact": 980, "sig_ign": 980, "sig_dfl": 980, "sighandler_t": 980, "_exit": 980, "barebon": 981, "louder": 981, "stallman": 982, "risc": 982, "llvm": 982, "24360": 982, "hello_h": [982, 998, 1000], "24416": 982, "linkabl": [982, 1118, 1173], "0000000000401040": 982, "_start": 982, "0000000000401000": 982, "_init": 982, "00000000004011b8": 982, "_fini": 982, "crt": 982, "crt1": 982, "crti": 982, "crtn": 982, "0000000000404000": 982, "_global_offset_table_": 982, "reloc": 982, "1762320": 982, "0000000000401126": 982, "1224008": 982, "greetdemo": 983, "cmake_system_nam": 983, "toolchain_base_dir": [983, 997], "cmake_c_compil": 983, "cmake_cxx_compil": 983, "find_xxx": 983, "cmake_find_root_path_mode_program": 983, "cmake_find_root_path_mode_librari": 983, "cmake_find_root_path_mode_includ": 983, "toolchian": 983, "cmake_toolchain_fil": 983, "libgreet": [983, 984, 990, 999, 1000], "13921": [983, 984], "cmakecach": [983, 984], "26192": [983, 984], "27920": [983, 984], "8503": [983, 984], "eabi5": 983, "armhf": 983, "5db807d9b005b19e1e0c957755fa7ca7b771edcb": 983, "debug_info": 983, "armv7l": 985, "challeng": 985, "metadistribut": 985, "miniumum": 985, "realiti": 985, "rasberri": 987, "clickabout": 992, "workabl": 994, "tarbal": 994, "lastest": 994, "x86_64_arm": 994, "precompos": 994, "uncompress": 994, "73812": 994, "1107168": 994, "1481768": 994, "1968456": 994, "1091864": 994, "1030432": 994, "1221816": 994, "lynxbe": 996, "y3p9kn7mjei": 996, "cli": 996, "containerd": 996, "dockerhub": 996, "hub": 996, "sh_18_04": 996, "78683068": 996, "1292296": 996, "70mb": 997, "73018472": 997, "auxvec": 997, "bitsperlong": 997, "bpf_perf_ev": 997, "rapidli": 998, "phoni": [998, 999, 1000], "origaniz": 999, "relink": 999, "0x2e20": 999, "vdso": 999, "0x00007fffe9fa7000": 999, "0x00007f75ca289000": 999, "0x00007f75ca46d000": 999, "r_x86_64_32": 999, "fpic": 999, "whom": 1000, "hello_flex": 1000, "hello_flexible_h": 1000, "cq": 1000, "lisp": 1001, "create_f": 1001, "create_print": 1001, "print_blah": 1001, "print_someth": 1001, "sytax": 1002, "432x288": 1002, "shutil": 1003, "tarfil": 1003, "temporarydirectori": 1003, "tmpd": 1003, "tarnam": 1003, "expandvar": 1003, "contrain": 1003, "__enter__": 1003, "__exit__": 1003, "openforread": 1003, "ipykernel_83565": 1003, "2037535577": 1003, "myprint": 1003, "orig_print": 1003, "exc_val": 1003, "exc_tb": 1003, "myarg": 1003, "total_ord": 1004, "ipykernel_83583": 1004, "2840657929": 1004, "a_vari": 1005, "dec": [1005, 1050], "fallback": [1005, 1025], "baseexceptiongroup": 1005, "exceptiongroup": 1005, "subtyp": 1005, "maybe_fail": 1005, "ipykernel_83601": 1005, "104829323": 1005, "lone": 1005, "4008457068": 1005, "mysubsystemerror": 1005, "reallybaderror": 1005, "someothererror": 1005, "definitelybad": 1005, "evenwors": 1005, "collapsingtheworld": 1005, "errorcod": 1005, "__cached__": 1006, "_frozen_importlib_extern": 1006, "sourcefileload": 1006, "0x7fcdfa31d510": 1006, "blindli": 1006, "ansibl": 1006, "matno": 1006, "conffil": 1006, "confcod": 1006, "confdict": 1006, "1027": 1006, "object ori": [1007, 1162], "keyword argu": 1007, "starstararg": [1007, 1028], "for loop": 1007, "iterator protocol": 1007, "operator overload": 1007, "drawn": 1008, "cnt": 1008, "inputrang": 1008, "disgust": 1008, "gentli": 1008, "smarter": 1008, "nolimit": 1009, "fibo_numb": 1009, "jerki": 1009, "max_numb": 1009, "satisfactori": 1009, "python_1010_generators_yield": 1009, "glossari": 1010, "ipykernel_83623": 1010, "4235178104": 1010, "breadth": 1010, "subnamespac": 1013, "mysupermodul": 1013, "mysuperfunct": 1013, "subpackage1": 1013, "module1": 1013, "module2": 1013, "subpackage2": 1013, "disambigu": 1013, "increment_background": [1014, 1016], "background_integ": 1014, "foreground_integ": 1014, "runn": 1014, "backgroundincrement": 1014, "uncool": 1014, "14784035": 1016, "quack": 1018, "mockup": 1018, "82353827282566": 1018, "11227246776899": 1018, "627244023298786": 1018, "17836070148935": 1018, "550218944522214": 1018, "__next__": 1018, "brokensensor": 1018, "gettemperatur": 1018, "ipykernel_83641": 1018, "2792400554": 1018, "71536506": 1018, "152158437": 1018, "1134347102": 1018, "refect": 1019, "ipykernel_83659": 1019, "1242235954": 1019, "4119786358": 1019, "emp": 1022, "add_employe": 1022, "mgr": 1022, "isold": [1022, 1023, 1123], "haubentauch": [1022, 1023, 1026, 1123], "parentcl": 1022, "funnili": 1022, "make_child": 1023, "parent1": 1023, "parent2": 1023, "vvv": 1023, "father": 1023, "vvvvvv": 1023, "tabular": 1024, "someclass": 1024, "persons_from_csv": 1024, "person_dict": 1024, "operators object oriented program": 1025, "behaivor": 1025, "number2": 1025, "int2": 1025, "ipykernel_83751": 1025, "3709071117": 1025, "151628379": 1025, "whistl": [1025, 1028], "symmetr": [1025, 1055], "commut": 1025, "452733317": 1025, "summar": 1025, "ipykernel_83769": 1026, "2144392361": 1026, "attrnam": 1026, "meier": 1026, "3124626440": 1026, "1226798660": 1026, "expicitli": 1027, "0x7ff6bba240a0": 1027, "toolkit": 1029, "marker": 1031, "eighti": 1031, "monti": 1031, "incompat": [1031, 1037, 1045, 1056], "benevol": 1031, "bdfl": [1031, 1115], "overse": 1031, "januari": 1031, "dropbox": 1031, "awk": 1033, "sensit": 1036, "throughout": 1036, "0o01234": 1037, "14159265359": [1037, 1051], "3e12": 1037, "afterthought": 1037, "\u00e4\u00f6\u00fc": 1037, "xa4": 1037, "xb6": 1037, "xbc": 1037, "xe4": 1037, "compel": 1037, "codebas": 1037, "ancient": 1037, "sequencish": 1041, "sixtim": 1041, "seen_sixey": 1041, "blahblahblahblahblah": 1042, "aah": 1043, "a_list": 1043, "a_tupl": 1043, "hlow": 1043, "hlowrd": 1043, "straw": [1044, 1052], "heritag": 1045, "139860819052048": 1046, "139860819052080": 1046, "139860819052304": 1046, "139860507640576": 1046, "139860507835536": 1046, "ipykernel_83844": 1047, "723444260": 1047, "globvar": 1047, "parameterizab": 1048, "ipykernel_83864": 1048, "3939188879": 1048, "3571579993": 1048, "program_exit": 1048, "exitstatu": 1048, "spam": [1050, 1113], "x58": 1050, "07d": 1051, "0x": 1051, "5x": 1051, "0x2f": 1051, "4x": 1051, "0x002f": 1051, "5o": 1051, "0o31": 1051, "04d": 1051, "0042": 1051, "05d": 1051, "00042": 1051, "thistl": 1052, "thorn": 1052, "ipykernel_83922": 1052, "677815794": 1052, "annoy": 1052, "sqn": 1053, "defval": 1054, "iterkei": 1054, "keyiter": 1054, "0x7ff2e8753418": 1054, "unord": 1055, "tunabl": 1056, "shoudn": 1056, "0x7fca2c785b70": 1057, "tof": 1057, "outputfilenam": 1058, "argumentpars": 1058, "add_argu": 1058, "parse_arg": 1058, "ou": 1058, "ylabel": [1060, 1111], "xmin": 1060, "xmax": 1060, "ymin": 1060, "ymax": 1060, "twine": 1061, "lotsa": [1061, 1134], "long_descript": 1061, "long_description_content_typ": 1061, "beta": 1061, "osi": 1061, "approv": 1061, "package_dir": 1061, "python_requir": 1061, "install_requir": 1061, "paho": [1061, 1122], "pyproject": 1061, "toml": 1061, "backend": 1061, "build_meta": 1061, "yadda": 1061, "sdist": 1061, "python_course_2022_11_07": 1061, "12549": 1061, "BE": 1061, "mydb": 1062, "hardli": 1063, "femal": 1068, "miracl": [1071, 1088], "previouslin": 1075, "ifi": 1088, "uniqifi": 1089, "sensor_const": 1094, "test_sensor_const": 1094, "ii": [1095, 1097, 1101, 1103, 1114], "user_record": [1096, 1098], "read_csv_head": [1096, 1103], "read_csv_nohead": [1098, 1102, 1103], "csvfilenam": 1100, "test_noheader_person": 1101, "read_noheader_person": 1101, "test_must_not_use_global_variables_as_return_object": 1101, "filename1": 1101, "noheader1": 1101, "filename2": 1101, "noheader2": 1101, "users1": 1101, "users2": 1101, "test_header_person": 1101, "read_header_person": 1101, "test_user_json_person": 1101, "userdb_json": [1101, 1102], "test_person_to_json": 1101, "joerg_sent": 1101, "to_json_person": 1101, "joerg_receiv": 1101, "from_json_person": 1101, "envis": [1102, 1160], "user_json": 1102, "to_json": 1102, "test_user_json": 1102, "test_user_to_json": 1102, "user_s": 1102, "json_user_s": 1102, "from_json": 1102, "test_nohead": 1103, "test_head": 1103, "lectur": [1105, 1174], "unsupervis": [1108, 1113], "conveyor": 1108, "belt": 1108, "linear_regress": [1109, 1112], "model_select": [1109, 1111], "train_test_split": [1109, 1111], "linear_model": [1109, 1111], "linearregress": [1109, 1111], "history_data": [1109, 1110, 1111, 1112], "inputfeatur": [1109, 1111], "outputfeatur": [1109, 1111], "input_train": [1109, 1111], "input_test": [1109, 1111], "output_train": [1109, 1111], "output_test": [1109, 1111], "test_siz": [1109, 1111], "output_predict": [1109, 1111], "visualcross": 1110, "york": [1110, 1111], "wind": [1110, 1111], "chill": [1110, 1111], "precipit": [1110, 1111], "snow": [1110, 1111], "gust": [1110, 1111], "humid": [1110, 1111], "rain": 1110, "cloudi": 1110, "995833": 1111, "688889": 1111, "287500": 1111, "327273": 1111, "012222": 1111, "690278": 1111, "470769": 1111, "369444": 1111, "513421": 1111, "946106": 1111, "574023": 1111, "313256": 1111, "994536": 1111, "070695": 1111, "025980": 1111, "302423": 1111, "214825": 1111, "665492": 1111, "900000": 1111, "700000": 1111, "090000": 1111, "050000": 1111, "377500": 1111, "750000": 1111, "950000": 1111, "650000": 1111, "330000": 1111, "325000": 1111, "850000": 1111, "425000": 1111, "825000": 1111, "715000": 1111, "470000": 1111, "970000": 1111, "multidimension": 1111, "xlabel": 1111, "coef_": 1111, "80189231": 1111, "intercept_": 1111, "95355086": 1111, "609608": 1111, "571879": 1111, "736988": 1111, "170933": 1111, "798254": 1111, "189739": 1111, "180394": 1111, "449230": 1111, "661530": 1111, "057745": 1111, "850176": 1111, "284120": 1111, "685067": 1111, "weather": [1112, 1113], "splice": [1112, 1113], "cute": 1112, "paper": 1112, "aspir": [1112, 1139], "dilig": 1113, "bite": 1113, "forecast": 1113, "agi": 1113, "asi": 1113, "forest": 1113, "predictor": 1113, "accuraci": 1113, "classif": 1113, "unlabel": 1113, "reinforc": 1113, "reward": 1113, "bay": 1113, "sepp": 1114, "tupleunpack": 1114, "spell": 1114, "redundantli": 1114, "quotechar": 1114, "spreadsheet": 1114, "odbc": 1115, "mysql": 1115, "informix": 1115, "berkeleydb": 1115, "mongodb": 1115, "rollback": 1115, "initd": 1117, "psycopg": 1117, "libpq": 1117, "conninfo": 1117, "psycopg2": 1117, "schwammerldb": 1117, "android": 1118, "schwammerln": 1118, "giftig": 1118, "geniessbar": 1118, "dbm": 1118, "steinpilz": 1118, "roehren": 1118, "speisetaeubl": 1118, "lamellen": 1118, "speitaeubl": 1118, "eierschwammerl": 1118, "teufelsroehrl": 1118, "overcod": 1119, "512119": 1119, "european": 1119, "steroid": 1119, "htmlhelp": 1119, "charset": 1119, "latin1": 1119, "chines": 1119, "enc": 1119, "0xfc": 1119, "0xdf": 1119, "0xf6": 1119, "\u00df": 1119, "cyril": 1119, "received_enc": 1119, "lg_enc": 1119, "bye_enc": 1119, "artificial intellig": 1120, "postgr": 1120, "mssql": 1120, "data sci": 1120, "ecosystem": 1120, "antp": 1122, "53767": 1122, "tcp6": 1122, "mosquitto_pub": 1122, "easiest": 1122, "message_receiv": 1122, "userdata": 1122, "on_messag": 1122, "loop_forev": 1122, "mosqitto_pub": 1122, "styrian": 1122, "esp": 1122, "666608091972": 1123, "ignore_index": 1123, "new_person": 1123, "saskia": 1123, "456710042003": 1123, "irrevers": 1124, "ipykernel_84310": 1127, "3315724720": 1127, "maybe_cal": [1127, 1128], "apply_if_cal": [1127, 1128], "_getitem_axi": [1127, 1128], "_is_scalar_access": [1127, 1128], "1519": 1127, "_validate_integ": 1127, "1521": 1127, "_ix": 1127, "len_axi": 1127, "_get_axi": 1127, "1451": 1127, "1453": 1127, "rangeindex": 1128, "get_loc": 1128, "toler": 1128, "3621": 1128, "casted_kei": 1128, "_lib": 1128, "pyx": 1128, "indexengin": 1128, "hashtable_class_help": 1128, "pxi": 1128, "pyobjecthasht": 1128, "get_item": 1128, "ipykernel_84335": 1128, "1471010945": 1128, "thru": 1128, "1201": 1128, "_validate_kei": 1128, "_get_label": 1128, "1203": 1128, "_get_slice_axi": 1128, "slice_obj": 1128, "1151": 1128, "5667": 1128, "1153": 1128, "1155": 1128, "_handle_lowerdim_multi_index_axis0": 1128, "tup": 1128, "drop_level": 1128, "new_index": 1128, "3875": 1128, "3877": 1128, "3623": 1128, "3625": 1128, "listlik": 1128, "_check_indexing_error": 1128, "sort_index": 1128, "multiindex": 1128, "contrari": 1129, "lower_email": 1130, "rentner": 1130, "is_palindrom": 1130, "facto": [1131, 1155], "subel": 1131, "attrib": 1131, "getroot": 1131, "package manag": 1133, "project manag": [1133, 1161], "unit test": 1133, "virtual environ": 1133, "affin": 1133, "witch": 1134, "gnore": 1134, "ackup": 1134, "bort": 1134, "cert": 1134, "pem": 1134, "pythonhost": 1134, "e17846ef3601dcb6f118ea447439650e0c35cb4fe60274fbe24214156df2": 1134, "cp38": 1134, "manylinux2010_x86_64": 1134, "ext": 1134, "argcomplet": 1134, "asn1crypto": 1134, "ensurepip": [1135, 1141], "test_project": 1139, "test_soup": 1139, "test_task": 1139, "stringent": 1139, "discoveri": 1139, "syndrom": [1139, 1140, 1146], "test_person_point": 1139, "deselect": 1139, "test_": 1139, "test_simpl": 1139, "test_trivi": 1139, "test_trivial_but_fail": 1139, "___________________________": 1139, "____________________________": 1139, "test_stat": 1139, "implementation_point": 1139, "implementor1": 1139, "implementor2": 1139, "documentation_point": 1139, "integration_point": 1139, "implementation_perc": 1139, "documentation_perc": 1139, "integration_perc": 1139, "total_perc": 1139, "total_point": 1139, "gathered_point": 1139, "test_another_task_aspect": 1139, "pathlib": 1139, "test_ini_file_pars": 1139, "my_test_fil": 1139, "mytestcas": 1140, "runtest": 1140, "assertequ": 1140, "texttestrunn": 1140, "__db": 1140, "create_databas": 1140, "fill_test_data": 1140, "remove_databas": 1140, "testfeature1": 1140, "testfeature2": 1140, "testsuit": 1140, "addtest": 1140, "testload": 1140, "loadtestsfromtestcas": 1140, "testsometh": 1140, "failif": 1140, "failunless": 1140, "failunlessequ": 1140, "failifequ": 1140, "failunlessalmostequ": 1140, "failunlessrais": 1140, "env_dir": 1141, "my_venv": 1141, "csh": 1141, "easy_instal": 1141, "pip3": 1141, "powershel": 1141, "joblib": 1141, "threadpoolctl": 1141, "deactiv": 1141, "my_recreated_venv": 1141, "persuad": 1141, "will_fail": [1145, 1148], "initgoogletest": [1146, 1151], "run_all_test": [1146, 1151], "lgtest": [1146, 1148], "onesuit": 1146, "test1": 1146, "test2": 1146, "anothersuit": 1146, "postive_pattern": 1146, "negative_pattern": 1146, "gtest_list_test": 1146, "faildemo": 1146, "failisfat": 1146, "assertdemo": 1146, "assertisfat": 1146, "expect_": 1146, "expectdemo": 1146, "expectisnonfat": 1146, "expect_tru": 1146, "expect_eq": 1146, "0x58": 1146, "0x55": 1146, "assert_": 1147, "repoqueri": 1148, "dpkg": 1148, "listfil": 1148, "joergfaschingbau": 1148, "cmake_compiler_is_gnucc": 1148, "ggdb": 1148, "googlebenchmark": 1148, "predef": [1150, 1151], "predefinedtestenviron": 1151, "paranoidtest": 1151, "untechn": 1151, "thefixtur": 1151, "testthatmodifiesst": 1151, "complexfixtur": 1151, "first_n": 1151, "sometest": 1151, "egal": 1153, "welcher": 1153, "schulungstyp": 1153, "problemlo": 1153, "verifiziert": 1153, "formlos": 1153, "anliegen": 1153, "umgehend": 1153, "setzen": 1153, "besprechen": 1153, "gestaltung": 1153, "schl\u00fcssigkeit": 1153, "chronologisch": 1153, "gehaltenen": 1153, "querzulesen": 1153, "roter": 1153, "faden": 1153, "ablaufen": 1153, "\u00e4nderungen": 1153, "kursgeschehen": 1153, "passieren": 1153, "detailliert": 1153, "kosten": 1153, "terminen": 1153, "inhouseschulungen": 1153, "buchenden": 1153, "terminisiert": 1153, "zustandekommt": 1153, "zeitlich": 1153, "\u00f6rtlich": 1153, "flexibel": [1153, 1154], "zul\u00e4sst": 1153, "besond": 1153, "onlineschulungen": 1153, "erwiesen": 1153, "dedizierten": 1153, "implementieren": [1153, 1158], "instruktionen": [1153, 1157], "datenschutzrichtlinien": 1153, "genug": 1153, "durchweg": 1153, "wahlweis": 1153, "offenen": 1153, "anmelden": 1153, "inhouseschulung": 1153, "exklusiv": 1153, "\u00fcblicherweis": 1153, "firmenstandort": 1153, "basteln": [1153, 1170], "schwierig": 1153, "z\u00fcgig": 1154, "uhr": 1154, "punktlandung": 1154, "mbr": 1154, "bootet": 1154, "nachs\u00e4tz": 1154, "wahllos": 1154, "reinen": [1154, 1170], "gebastelt": 1154, "leichtfertigerweis": 1154, "richtigerweis": 1154, "multilib": 1154, "ausgestattet": [1154, 1163, 1170, 1177], "l\u00e4uft": 1154, "seltsamerweis": 1154, "dar\u00fcber": 1154, "zeitersparnisgr\u00fcnden": 1154, "hinweggeholfen": 1154, "vorcompilierten": 1154, "statisch": [1154, 1172], "gelinkten": 1154, "christof": 1154, "sourcen": 1154, "crosszucompilieren": 1154, "gescheitert": 1154, "ungl\u00fccklichen": 1154, "umstand": 1154, "schulungsrechn": 1154, "neu": 1154, "aufzusetzen": 1154, "kompil": 1154, "verschwunden": 1154, "buildscript": 1154, "konnt": 1154, "kreativen": 1154, "wiederhergestellt": 1154, "v\u00f6llig": 1154, "sinnfrei": 1154, "distributionen": 1154, "compilieren": [1154, 1156], "architekturen": 1154, "versucht": [1154, 1155, 1157], "richtigen": 1154, "leben": [1154, 1170], "anzuwenden": 1154, "leut": 1154, "anzusehen": 1154, "wort": [1154, 1156], "gefallen": 1154, "hart": 1154, "garantien": 1154, "durchau": 1154, "gerechtfertigt": 1154, "gesch\u00fctz": 1154, "auffahren": 1154, "enthaltenen": 1154, "n\u00fctzen": 1154, "stichwort": [1154, 1163, 1170], "mittelweg": 1154, "diffundieren": 1154, "aufruft": 1154, "startet": 1154, "ausgekl\u00fcgelt": 1154, "funktionsweis": 1154, "jeher": 1154, "kennt": [1154, 1176], "gewaltig": 1154, "geschichtsbelastet": 1154, "tr\u00e4gt": 1154, "intelligent": [1154, 1163, 1170], "trotz": 1154, "behauptungen": 1154, "gar": 1154, "lieblingsseit": 1154, "linuxthemen": 1154, "zentrisch": 1154, "bourne shel": [1155, 1165], "\u00fcbel": 1155, "sprechen": [1155, 1163, 1170], "vollst\u00e4ndig": 1155, "shellprogrammierung": 1155, "ruf": 1155, "schmutzigen": 1155, "stattdessen": 1155, "hauch": 1155, "pervers": 1155, "\u00e4sthetik": 1155, "verpassen": 1155, "geschicht": 1155, "kram": 1155, "environmentvariablen": 1155, "kontrollkonstrukt": [1155, 1156], "hauptteil": 1155, "stringmanipul": 1155, "obskur": 1155, "konstrukt": [1155, 1165], "auskommt": 1155, "umgang": [1155, 1165], "vorausgesetzt": [1155, 1157, 1158, 1166, 1172, 1173, 1175, 1176], "bibel": 1156, "hinzuf\u00fcgen": 1156, "erfind": 1156, "tickt": 1156, "wozu": 1156, "grenzen": 1156, "vorlag": 1156, "didaktik": 1156, "erg\u00e4nzt": 1156, "kontext": 1156, "heutigen": 1156, "dienen": 1156, "sprachkern": 1156, "unterrichten": 1156, "standardlibrari": 1156, "zugunsten": 1156, "bequemeren": 1156, "verzichten": 1156, "sprachdesign": 1156, "geachtet": 1156, "isoliert": 1156, "abseit": [1156, 1158, 1176], "mitbringt": 1156, "h\u00e4lt": 1156, "eignet": 1156, "hervorragend": [1156, 1163, 1171, 1176], "systemprogrammierung": 1156, "weglassen": 1156, "programmiert": [1156, 1158], "dementsprechend": [1156, 1176], "sinngem\u00e4ss": 1156, "aufgeteilt": 1156, "manipulieren": [1156, 1165], "maschineninstruktionen": 1156, "ausgef\u00fchrt": [1156, 1157], "geschwindigkeitsvorteil": 1156, "interpretierten": 1156, "nachteil": 1156, "verst\u00e4ndni": [1156, 1165, 1175], "speicherverwaltung": [1156, 1158, 1173], "integral": 1156, "zusammengesetzt": 1156, "speicherlayout": 1156, "wenigst": 1156, "worin": 1156, "programmstrukturierung": 1156, "deklar": 1156, "beliebtest": 1156, "unmeng": 1156, "flexibilit\u00e4t": [1156, 1173], "einbringen": 1156, "unbeliebtest": 1156, "fehlerm\u00f6glichkeiten": 1156, "verkettet": 1156, "fehlerszenarien": [1156, 1176], "absturz": 1156, "dahinsiechen": 1156, "debugginghilfen": 1156, "typumwandlungen": 1156, "hauptkritikpunkt": 1156, "sorglos": 1156, "integertypen": 1156, "breit": [1156, 1163], "regelwerk": 1156, "historisch": 1156, "aufarbeitung": 1156, "historischem": 1156, "ballast": 1156, "compileroptionen": 1156, "pr\u00e4prozessor": [1156, 1157], "leid": 1156, "grundz\u00fcgen": 1156, "gezeigt": [1156, 1165, 1170], "compilierung": 1156, "heutzutag": 1156, "wegzudenken": [1156, 1163], "damal": [1156, 1158], "programmen": [1156, 1157, 1172], "separat": 1156, "verbinden": 1156, "spielt": 1156, "archivieren": 1156, "linken": 1156, "programmgesundheit": 1156, "bedeutungen": 1156, "optimierungsm\u00f6glichkeiten": 1156, "memoryfehlern": 1156, "verwalten": 1156, "formatiert": 1156, "_und_": 1156, "komfort": 1156, "m\u00e4chtige": [1156, 1173], "jedoch": [1156, 1163, 1170, 1176], "weit": 1156, "fehlerimmunit\u00e4t": 1156, "allein": 1156, "verdienen": 1156, "erw\u00e4hnung": 1156, "stringbearbeitung": 1156, "heutig": 1156, "eigenwillig": 1156, "f\u00fclle": 1156, "erleichtern": 1156, "lauern": [1156, 1175], "gefahren": [1156, 1175, 1176], "sprachumfang": 1157, "angeht": 1157, "compiliert": 1157, "maschinencod": 1157, "pointern": 1157, "sofort": 1157, "beipflichten": 1157, "einmal": [1157, 1172, 1173, 1177], "beinharten": 1157, "typenkonvertierungen": 1157, "aufgesessen": 1157, "beleuchtet": [1157, 1175], "beschrittenen": 1157, "dunklen": 1157, "ecken": 1157, "widmet": 1157, "intensiv": 1157, "fehlersuch": 1157, "erkl\u00e4rungen": 1157, "sprachdefinit": 1157, "greifbar": 1157, "verdacht": 1157, "manch": 1157, "typkonversionen": 1157, "l\u00fccken": 1157, "typensystem": [1157, 1158], "techniken": [1157, 1163], "typensicherheit": 1157, "dunkl": 1157, "unn\u00f6tig": 1157, "programmhygien": 1157, "wege": 1157, "sauberen": 1157, "weisen": 1157, "optimierungstechniken": 1157, "anwenden": 1157, "optimierung": 1157, "erschweren": 1157, "lesbarkeit": 1157, "memoryzugriff": 1157, "ur": 1157, "beziehungsweis": 1157, "hardwareunterst\u00fctzung": 1157, "Ins": 1157, "kenntniss": [1157, 1158, 1166, 1172, 1173, 1175, 1176], "urspr\u00fcnglich": 1158, "erfunden": 1158, "leichter": 1158, "handhabbar": 1158, "erm\u00f6glichen": [1158, 1173], "ressourcenverwaltung": 1158, "kontrolliert": 1158, "mainstream": 1158, "einzug": 1158, "hie\u00df": 1158, "treffend": 1158, "seitdem": 1158, "vereinzelt": 1158, "soviel": 1158, "dampflokomot": 1158, "stellt": [1158, 1176], "vielfalt": 1158, "sprachkonstrukt": 1158, "genial": 1158, "gewagt": 1158, "behaupten": 1158, "anbelangt": 1158, "sprachmittel": 1158, "wichtigst": 1158, "n\u00e4mlich": 1158, "reichlich": [1158, 1163, 1170], "umstieg": 1158, "erw\u00e4gen": 1158, "embeddedbetriebssystem": 1158, "einsetzen": 1158, "vielerort": 1158, "m\u00f6glich": [1158, 1163], "datenkapselung": 1158, "objekten": 1158, "fallstrick": 1158, "korrektheit": 1158, "100ste": 1158, "strukturiert": 1158, "fehlerbehandlung": 1158, "generisch": 1158, "mechanismen": [1158, 1173, 1175, 1177], "mehrfachvererbung": 1158, "teilweis": 1158, "kapiteln": 1158, "unterschied": 1158, "erl\u00e4utert": [1158, 1163], "c++ 11": 1159, "enjoy": 1159, "overrrid": 1159, "coolest": 1159, "optinion": 1159, "oneshot": 1159, "communict": 1159, "unlearn": 1159, "inventor": 1160, "weren": 1161, "intricaci": 1161, "interdepend": 1161, "rudimentari": 1161, "graviti": 1162, "vocabulari": 1162, "confront": 1162, "reusab": 1162, "nicknam": 1162, "zentrum": [1163, 1170], "vollwertig": 1163, "selben": 1163, "betriessystemkonzept": 1163, "jahrzehnten": 1163, "bew\u00e4hrt": 1163, "automot": 1163, "sektor": 1163, "vertreten": 1163, "altbew\u00e4hrten": 1163, "konsequ": [1163, 1173], "ausbaut": 1163, "hardwareschnittstellen": 1163, "echtzeitf\u00e4higkeit": 1163, "dahint": 1163, "rundet": 1163, "hardwarebastelworkshop": 1163, "embeddedprogrammier": [1163, 1170], "l\u00e4nger": [1163, 1170], "normalen": [1163, 1170], "dateisystem": [1163, 1170], "versagt": [1163, 1170], "teuer": [1163, 1170], "erkauft": [1163, 1170], "elektronik": [1163, 1170], "testen": [1163, 1170, 1177], "hostsoftwar": [1163, 1170], "architekten": [1163, 1170], "plattformzusammensetzung": [1163, 1170], "entscheiden": [1163, 1170, 1177], "rechtfertigen": [1163, 1170], "logik": [1163, 1170], "steck": [1163, 1170], "beantworten": [1163, 1170, 1177], "eingeladen": [1163, 1170], "l\u00f6tmateri": [1163, 1170], "mitzubringen": [1163, 1170], "bastelei": 1163, "erfolgt": 1163, "vorhandenen": [1163, 1170, 1177], "minicomputern": 1163, "prototypen": 1163, "desktopbetriebssystem": [1163, 1170], "verh\u00e4ltniss": [1163, 1170], "512mb": [1163, 1170], "m\u00fchsam": [1163, 1170], "produktivsystem": [1163, 1170], "ohnehin": [1163, 1170], "unangebracht": [1163, 1170], "anf\u00e4ng": [1163, 1170], "filesystemen": [1163, 1170], "durchzuf\u00fchren": 1163, "filedeskriptoren": [1163, 1165], "getrennt": 1163, "abl\u00e4uf": 1163, "adressraum": 1163, "sorgfalt": 1163, "bloss": 1163, "gef\u00e4chert": 1163, "gewissen": 1163, "szenarien": 1163, "steuerungen": 1163, "gef\u00e4hrlich": 1163, "umfangreich": 1163, "hauptthema": 1163, "dennoch": 1163, "n\u00fctzlich": 1163, "haub": 1163, "schalten": [1163, 1170], "ausg\u00e4ngen": [1163, 1170], "abfragen": [1163, 1170], "eing\u00e4ngen": [1163, 1170], "sowohl": [1163, 1170], "dumm": [1163, 1170], "ereignisgesteuert": [1163, 1170], "mikrocontrollern": [1163, 1170], "aufgaben": [1163, 1170], "temperaturmessung": [1163, 1170], "expandierung": [1163, 1170], "ausgelagert": [1163, 1170, 1173], "dediziert": [1163, 1170], "angesteuert": [1163, 1170], "gegeben": [1163, 1170, 1172, 1173], "driverframework": 1163, "netzwerkstack": [1163, 1170], "einpasst": [1163, 1170], "schnittstellen": [1163, 1173], "implementationssprachen": 1163, "hardwareerfahrung": [1163, 1170], "linux kernel": 1164, "kernel driv": [1164, 1174], "wait queu": 1164, "block devic": 1164, "interrupt handl": 1164, "dose": 1164, "curios": 1164, "userpac": 1164, "massiv": 1164, "vital": 1164, "einblick": 1165, "gingen": 1165, "vieler": 1165, "demosess": 1165, "vertrackt": 1165, "entmystifiziert": 1165, "gef\u00fcrchteten": 1165, "erlernt": 1165, "inbetriebsetz": 1165, "hardwareingenieur": 1165, "angehend": 1165, "administratoren": 1165, "editieren": 1165, "bl\u00e4ttern": 1165, "textdateien": 1165, "schnittstel": 1165, "kombinationen": 1165, "kombin": 1165, "abschweifen": 1165, "programmierkenntniss": 1165, "zwingend": [1165, 1172], "make gnu": 1166, "gnu mak": 1166, "build manag": 1166, "seiner": [1166, 1173, 1177], "m\u00e4chtigen": 1166, "daran": 1166, "wendet": 1166, "interessiert": 1166, "gr\u00f6\u00dfere": 1166, "gebaut": 1166, "komplizierten": 1166, "griff": 1166, "regeln": 1166, "selbstdefiniert": 1166, "gewiss": [1166, 1171, 1173], "fertigkeit": 1166, "hemmenhofen": 1170, "gleichnamigen": 1170, "gerufen": 1170, "produktivem": 1170, "n\u00e4herzubringen": 1170, "spielekonsumenten": 1170, "kinder": 1170, "enden": 1170, "erstem": 1170, "breiteren": 1170, "drauf": 1170, "vorhandensein": 1170, "basisinfrastruktur": 1170, "vielem": 1170, "hervorragenden": 1170, "gestandenen": 1170, "obwohl": [1170, 1173], "sprachunabh\u00e4ngig": 1170, "brauchen": 1170, "computerspielen": 1170, "spielerischen": 1170, "f\u00fchren": 1170, "w\u00e4hlt": 1170, "lm": 1170, "netzwerkprotokol": [1170, 1176], "behaupt": 1171, "allen": 1171, "gro\u00dfkopferten": 1171, "kommerziellen": 1171, "systemen": 1171, "perforc": 1171, "etabliert": 1171, "erh\u00e4ltlich": 1171, "nachfolg": 1171, "abgel\u00f6st": 1171, "prim\u00e4r": 1171, "publikum": 1171, "sekund\u00e4r": 1171, "versionieren": 1171, "arbeitsweis": 1171, "bereinigung": 1171, "strategien": 1171, "programmierern": 1171, "vertrautheit": 1171, "vorteil": [1171, 1172], "umsteig": 1172, "\u00e4rgerni": 1172, "schl\u00e4gt": 1172, "ausgekl\u00fcgeltst": 1172, "systemcal": [1172, 1173, 1176], "sogenannt": 1172, "inspizieren": 1172, "grundprinzip": [1172, 1176], "sammlung": [1172, 1173], "ausf\u00fchrbar": 1172, "bedient": 1172, "handhabung": 1172, "gew\u00f6hnungsbed\u00fcrftig": 1172, "filedescriptoren": 1172, "lowlevel": 1172, "tiefen": 1173, "steigen": 1173, "alltagsprogrammier": 1173, "normalerweis": 1173, "verborgen": 1173, "hochperformant": 1173, "anwendungen": 1173, "modernen": [1173, 1175], "bertriebssystemen": 1173, "sogenanntem": 1173, "virtuellen": 1173, "speicherbereich": 1173, "instanzen": 1173, "desselben": 1173, "hauptspeich": 1173, "speicherzugriff": 1173, "schutzmechanismen": 1173, "miteinand": 1173, "kommunizieren": [1173, 1176], "semaphoren": 1173, "steinalt": 1173, "\u00fcberlebt": 1173, "keinesweg": 1173, "fehlerfrei": 1173, "benutzen": 1173, "verpasst": 1173, "beruht": 1173, "ladbar": 1173, "ressourcenschonung": 1173, "wasserdichten": 1173, "upgradepfad": 1173, "grundkenntni": [1173, 1175, 1176], "memory manag": 1174, "tcp-ip": 1174, "unverst\u00e4ndlich": 1175, "ungeachtet": 1175, "effizient": 1175, "propagiert": 1175, "soliden": 1175, "unbedacht": 1175, "handeln": 1175, "lebenszyklu": 1175, "gestartet": 1175, "versuchung": 1175, "gewalt": 1175, "terminieren": 1175, "konsequenzen": 1175, "joinabl": 1175, "detach": 1175, "eigenschaften": 1175, "racecondit": 1175, "vermeidung": 1175, "\u00fcberal": 1175, "vermutet": 1175, "integeroperationen": 1175, "kommunikationsmechanismen": 1175, "werkzeugkasten": 1175, "kommunikationskan\u00e4l": 1175, "niemal": 1175, "reihen": 1175, "traditionellen": 1175, "aufgenommen": 1175, "codebasi": 1175, "verzweigt": 1175, "ansehnlich": 1175, "realtimef\u00e4higkeiten": 1175, "priorit\u00e4ten": 1175, "f\u00fcgt": 1176, "benutzend": 1176, "programmierparadigma": 1176, "dar": 1176, "beschr\u00e4nkt": 1176, "streamverbindungen": 1176, "verbindungsaufnahm": 1176, "datagramm": 1176, "verbindungslos": 1176, "adressfamilien": 1176, "auffassung": 1176, "adress": 1176, "endpoint": 1176, "nummern": 1176, "adressen": 1176, "verbindungen": 1176, "hilfsfunktionen": 1176, "adresskonvertierung": 1176, "ipv6": 1176, "\u00e4quivalent": 1176, "ungleich": 1176, "ressourcenschonend": 1176, "pfadnamen": 1176, "bedienbar": 1176, "mittlerweis": 1176, "eingepasst": 1176, "angenehm": 1176, "umzugehen": 1176, "widmen": 1176, "verbundenen": 1176, "auszusetzen": 1176, "reagiert": 1176, "gelesen": 1176, "eventgetrieben": 1176, "knopfdruck": 1177, "abnimmt": 1177, "zahlreichen": 1177, "abgeklopft": 1177, "angst": 1177, "kaputtmachen": 1177, "konstruktiv": 1177, "einfachheit": 1177, "klarzumachen": 1177, "umzusetzen": 1177, "anstatt": 1177, "auszustatten": 1177, "gedanken": 1177, "erkannt": 1177, "entscheidung": 1177, "verbockt": 1177, "softwareentwickl": 1177, "jedwed": 1177, "stabilen": 1177, "abliefern": 1177, "entscheidungstr\u00e4g": 1177, "vorgesetzt": 1177, "schl\u00fcssige": 1177, "kan\u00e4l": 1177, "etablieren": 1177, "unittestframework": 1177, "tragen": 1177, "schwerf\u00e4llig": 1177, "halben": 1177, "\u00fcbrige": 1177, "zurechtzufinden": 1177, "vortragend": 1177, "aufgrund": 1177, "aufwarten": 1177, "beibringen": 1177, "\u00fcppigen": 1177, "verbergen": 1177, "pr\u00e4ferierten": 1177, "vortragenden": 1177, "98f8b9be": 320, "ad8f": 320, "4023": 320, "81a2": 320, "d1dc67d0282c": 320, "python310": 320, "140482934998544": 320, "0x7fc4bb700610": 320, "0b10000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000": 320, "1_000_000": 320, "3267": 320, "140482548300736": 320, "140482934998576": 320, "meng": 320, "m1": 320, "m2": 320, "leeres_set": 320}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"kontakt": 0, "navig": [0, 868], "googl": 0, "map": [0, 7, 132, 200, 205, 208, 211, 214, 230, 240, 304, 335, 531, 532, 560, 621, 622, 713, 714, 779, 925], "streetview": 0, "curriculum": [1, 73, 74], "vita": 1, "\u00fcber": [2, 185, 195, 200, 208, 216], "mich": [2, 202], "projekt": [3, 23], "au": 3, "selbstst\u00e4ndig": 3, "t\u00e4tigkeit": 3, "nichtselbstst\u00e4ndig": 3, "skill": [4, 149], "angebot": 5, "In": [5, 32, 45, 65, 112, 157, 159, 160, 162, 192, 195, 256, 257, 259, 278, 280, 303, 316, 358, 449, 451, 457, 458, 519, 524, 526, 567, 571, 582, 583, 584, 585, 586, 587, 612, 669, 673, 677, 707, 708, 714, 727, 786, 835, 836, 843, 899, 949, 982, 984, 998, 1005, 1046, 1159], "hous": 5, "schulungen": [5, 1153], "zu": [5, 23, 178, 195], "meiner": 5, "person": [5, 253, 478, 677], "schwerpunk": 5, "c": [5, 7, 67, 68, 69, 70, 71, 97, 107, 108, 110, 111, 114, 149, 163, 178, 179, 195, 205, 213, 214, 230, 255, 256, 257, 259, 260, 268, 277, 279, 316, 317, 322, 343, 349, 358, 367, 407, 408, 445, 452, 457, 464, 471, 513, 519, 530, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 569, 575, 576, 580, 581, 582, 594, 600, 602, 639, 647, 662, 664, 665, 666, 669, 670, 702, 703, 707, 714, 715, 723, 732, 737, 741, 760, 908, 928, 946, 949, 1051, 1156, 1157, 1158, 1159, 1160, 1162], "python": [5, 8, 11, 59, 60, 62, 63, 90, 95, 126, 145, 172, 175, 184, 185, 187, 188, 189, 191, 193, 195, 198, 200, 203, 209, 210, 212, 215, 217, 219, 222, 223, 224, 225, 226, 228, 229, 231, 234, 235, 238, 241, 243, 246, 248, 249, 250, 251, 252, 254, 256, 257, 259, 261, 262, 263, 264, 265, 266, 271, 273, 274, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 340, 343, 345, 358, 665, 693, 707, 714, 908, 910, 1007, 1010, 1014, 1029, 1030, 1031, 1033, 1035, 1037, 1045, 1056, 1059, 1104, 1105, 1106, 1119, 1120, 1122, 1132, 1133, 1134, 1135, 1136, 1167, 1168], "linux": [5, 79, 80, 81, 97, 110, 111, 114, 152, 157, 165, 167, 168, 170, 177, 192, 194, 199, 204, 258, 267, 268, 288, 289, 343, 345, 358, 360, 785, 837, 838, 841, 847, 904, 906, 910, 911, 912, 914, 927, 945, 968, 1154, 1164, 1165, 1172, 1173, 1174, 1175, 1176], "schulungsstil": 5, "preis": 5, "cours": [6, 11, 12, 59, 60, 62, 63, 78, 145, 147, 168, 204, 213, 257, 259, 267, 296, 299, 342, 448, 1105, 1161, 1164], "materi": [6, 24, 28, 30, 175, 177, 192, 213, 339, 354, 355, 359, 448, 1104, 1105, 1126], "einleitung": [7, 205], "datatyp": [7, 195, 200, 202, 205, 208, 217, 221, 224, 227, 232, 234, 240, 244, 247, 249, 250, 262, 264, 265, 271, 272, 274, 282, 284, 285, 286, 290, 291, 292, 302, 304, 306, 308, 312, 313, 314, 318, 319, 320, 324, 335, 363, 413, 416, 1008, 1037, 1038, 1042], "number": [7, 205, 208, 211, 232, 244, 247, 335, 693, 764, 771, 772, 935, 1009, 1025, 1028, 1037, 1045, 1046, 1067, 1070, 1080, 1081, 1123, 1127, 1128, 1151], "integ": [7, 185, 195, 200, 205, 208, 232, 234, 244, 247, 253, 265, 272, 292, 304, 308, 314, 320, 335, 381, 428, 433, 649, 1016, 1037, 1046], "string": [7, 171, 172, 178, 185, 195, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 249, 250, 253, 262, 265, 269, 272, 286, 292, 304, 308, 314, 332, 334, 335, 362, 375, 376, 382, 388, 452, 630, 631, 632, 645, 676, 677, 1037, 1050, 1051, 1052, 1087, 1130], "compound": [7, 195, 205, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 282, 286, 292, 304, 308, 320, 416, 1038], "list": [7, 11, 23, 171, 172, 185, 195, 202, 205, 208, 211, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 314, 320, 421, 452, 519, 543, 560, 574, 617, 665, 678, 715, 769, 796, 797, 798, 820, 890, 1002, 1005, 1008, 1009, 1018, 1038, 1046, 1053, 1082, 1083, 1134], "arrai": [7, 173, 195, 205, 362, 371, 375, 413, 415, 425, 438, 548, 600, 602, 610, 654, 669, 680, 719], "javascript": [7, 205, 244], "std": [7, 107, 132, 205, 214, 230, 256, 257, 259, 316, 317, 467, 526, 531, 532, 542, 560, 583, 584, 585, 586, 587, 595, 601, 602, 603, 604, 614, 621, 622, 632, 645, 658, 661, 665, 668, 670, 677, 713, 714, 715, 719, 721, 724, 725, 726, 728, 729, 734, 735, 736, 737, 739, 740, 741, 744, 750, 751, 752, 756, 759], "vector": [7, 107, 205, 526, 542, 560, 567, 583, 601, 602, 603, 604, 618, 661, 670, 715, 744, 961], "java": [7, 205], "dictionari": [7, 171, 185, 195, 200, 202, 205, 208, 216, 217, 221, 224, 227, 232, 234, 237, 240, 244, 247, 250, 253, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 335, 1002, 1006, 1019, 1038, 1054, 1074, 1101], "kei": [7, 162, 205, 253, 335, 624, 625, 868, 919, 921], "valu": [7, 63, 190, 205, 276, 277, 335, 373, 429, 586, 946, 968, 1039], "set": [7, 38, 63, 190, 195, 200, 205, 208, 216, 217, 221, 224, 227, 232, 234, 240, 244, 247, 250, 262, 265, 272, 282, 286, 292, 304, 308, 314, 320, 864, 865, 980, 1002, 1038, 1055, 1093, 1118, 1128], "mathematisch": [7, 205], "mengen": [7, 195, 205], "while": [7, 172, 185, 195, 205, 224, 232, 234, 237, 240, 247, 250, 272, 314, 398, 399, 806, 811, 812, 1041, 1067, 1091], "function": [7, 43, 159, 172, 190, 195, 205, 208, 211, 214, 217, 221, 224, 232, 234, 240, 244, 249, 250, 253, 256, 257, 259, 261, 265, 272, 278, 286, 296, 297, 299, 302, 303, 304, 306, 312, 313, 314, 316, 317, 318, 324, 340, 373, 375, 380, 407, 409, 411, 412, 417, 449, 450, 509, 543, 567, 576, 581, 583, 588, 592, 608, 665, 672, 675, 676, 677, 678, 687, 717, 729, 730, 769, 770, 832, 926, 928, 966, 1001, 1003, 1004, 1006, 1008, 1009, 1028, 1045, 1047, 1048, 1049, 1057, 1079, 1081, 1085, 1088, 1096, 1098, 1130], "basic": [8, 63, 70, 90, 116, 151, 163, 172, 184, 189, 191, 192, 193, 194, 198, 199, 203, 204, 213, 222, 225, 228, 235, 241, 246, 249, 252, 258, 264, 267, 271, 274, 281, 284, 285, 286, 288, 289, 290, 291, 292, 293, 296, 299, 302, 303, 304, 306, 307, 308, 312, 313, 314, 315, 318, 319, 320, 321, 324, 335, 358, 403, 407, 410, 416, 443, 450, 466, 467, 521, 524, 589, 594, 597, 600, 601, 603, 607, 610, 621, 627, 636, 672, 680, 714, 719, 723, 724, 725, 726, 759, 771, 772, 773, 834, 837, 838, 841, 851, 890, 901, 906, 915, 927, 934, 942, 950, 982, 1004, 1005, 1058, 1060, 1094, 1113, 1124, 1125, 1145, 1146, 1147, 1165, 1168], "2021": [8, 11, 113, 196, 198, 201, 203, 204, 206, 209, 212, 213, 214, 215, 219, 222, 224, 225, 227, 228, 230, 332, 333, 340, 343, 344, 345, 346, 347, 348, 349, 358], "xx": 8, "yy": 8, "train": [8, 24, 25, 26, 27, 28, 145, 149, 159, 168, 173, 188, 189, 191, 192, 193, 194, 196, 198, 199, 203, 206, 209, 212, 213, 214, 215, 219, 222, 231, 235, 238, 241, 243, 246, 249, 252, 261, 264, 271, 274, 359, 1105, 1111], "inform": [8, 39, 137, 147, 159, 184, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 203, 206, 209, 212, 213, 214, 215, 219, 222, 231, 235, 238, 241, 243, 246, 249, 252, 261, 264, 271, 274, 331, 340, 443, 727, 1035, 1105], "\u00fcberblick": [8, 196, 206, 215, 231, 243, 1158], "log": [8, 105, 136, 153, 188, 189, 192, 193, 201, 203, 204, 206, 209, 213, 215, 219, 222, 231, 243, 252, 340, 353, 354, 835, 836, 843], "tag": [8, 179, 198, 202, 206, 209, 215, 231, 243, 244], "1": [8, 19, 23, 37, 73, 78, 97, 107, 114, 154, 157, 169, 177, 179, 184, 188, 189, 191, 192, 193, 195, 196, 198, 203, 204, 206, 209, 213, 214, 215, 219, 222, 225, 228, 231, 235, 243, 268, 271, 274, 277, 278, 279, 280, 281, 285, 289, 291, 296, 302, 303, 306, 307, 317, 339, 341, 342, 349, 356, 358, 361, 362, 363, 365, 369, 373, 382, 384, 385, 386, 387, 391, 392, 395, 398, 404, 405, 406, 407, 408, 411, 413, 417, 421, 423, 425, 428, 429, 430, 431, 433, 434, 436, 437, 443, 457, 467, 470, 472, 508, 570, 572, 579, 590, 593, 600, 602, 683, 688, 729, 734, 740, 755, 756, 767, 772, 779, 790, 800, 868, 907, 908, 914, 923, 937, 950, 951, 953, 955, 957, 958, 969, 976, 980, 983, 984, 1000, 1008, 1013, 1034, 1036, 1037, 1043, 1046, 1051, 1052, 1054, 1055, 1056, 1057, 1119, 1130, 1131, 1154], "2": [8, 19, 23, 37, 74, 78, 97, 107, 114, 154, 157, 179, 184, 185, 188, 189, 191, 192, 193, 195, 198, 202, 203, 204, 206, 209, 213, 214, 215, 219, 222, 224, 225, 228, 231, 235, 243, 268, 271, 274, 277, 278, 279, 280, 281, 285, 289, 296, 302, 303, 306, 307, 313, 317, 354, 356, 358, 361, 362, 363, 365, 369, 373, 382, 384, 385, 386, 387, 391, 392, 395, 398, 404, 405, 407, 408, 411, 413, 417, 421, 423, 425, 428, 429, 430, 431, 433, 434, 436, 437, 443, 458, 467, 470, 472, 508, 557, 570, 572, 579, 590, 593, 600, 602, 684, 689, 729, 734, 740, 755, 756, 772, 779, 800, 868, 907, 908, 914, 923, 937, 950, 951, 953, 955, 957, 958, 969, 976, 980, 983, 984, 996, 1000, 1008, 1013, 1034, 1036, 1037, 1043, 1045, 1046, 1052, 1054, 1055, 1056, 1057, 1115, 1117, 1118, 1119, 1130, 1131], "live": [8, 42, 44, 45, 171, 174, 196, 206, 209, 219, 268, 565, 605, 606, 608, 609, 612, 613, 614, 626, 665, 676, 709, 710, 737, 739, 839, 865, 929, 947], "hack": [8, 42, 44, 45, 171, 174, 196, 206, 209, 219, 268, 271, 275, 278, 281, 307, 565, 605, 606, 608, 609, 612, 613, 614, 626, 665, 676, 709, 710, 737, 739, 866, 947], "jupyt": [8, 9, 40, 196, 197, 201, 202, 203, 206, 207, 209, 210, 219, 220, 222, 223, 225, 226, 229, 231, 233, 236, 239, 242, 245, 248, 250, 251, 254, 263, 266, 269, 273, 282, 283, 287, 293, 298, 301, 304, 305, 308, 309, 315, 335, 1111, 1112], "notebook": [8, 9, 40, 191, 196, 197, 201, 202, 203, 206, 207, 209, 210, 212, 219, 220, 222, 223, 225, 226, 227, 229, 231, 233, 236, 239, 242, 245, 248, 250, 251, 254, 263, 266, 269, 273, 282, 283, 287, 293, 298, 301, 304, 305, 308, 309, 315, 335, 340, 1109, 1111, 1112], "link": [8, 23, 39, 136, 155, 173, 184, 187, 189, 191, 193, 196, 198, 203, 204, 206, 215, 219, 222, 225, 231, 238, 249, 252, 285, 291, 345, 347, 421, 423, 672, 686, 693, 711, 718, 722, 785, 796, 797, 847, 868, 889, 907, 914, 922, 998, 999, 1030, 1060, 1061, 1106, 1122, 1124, 1125, 1127, 1128, 1129, 1130, 1137, 1142], "programmierung": [9, 11, 171, 196, 197, 206, 207, 215, 231, 233, 243, 245, 358], "grundlagen": [9, 11, 184, 195, 196, 197, 206, 207, 209, 210, 215, 219, 223, 226, 229, 231, 233, 243, 245, 248, 251, 254, 263, 266, 287, 358], "detail": [10, 78, 204, 208, 240, 247, 279, 335, 357, 433, 511, 601, 1036], "content": [11, 24, 37, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 167, 176, 180, 181, 211, 342, 446, 548, 551, 557, 560, 566, 648, 725, 837, 857, 870, 876, 882, 885, 902, 910, 911, 918, 927, 943, 945, 947, 962, 972, 975, 989, 1009, 1064, 1065, 1069, 1078, 1092, 1099, 1146, 1148, 1151, 1159, 1162, 1164], "anhand": [11, 195, 215, 231, 243, 358, 1165], "von": [11, 23, 166, 171, 175, 178, 185, 195, 202, 215, 216, 231, 243, 335, 358, 1165], "12": [11, 23, 45, 115, 116, 119, 127, 132, 175, 194, 195, 199, 206, 214, 227, 228, 230, 261, 312, 313, 314, 317, 318, 319, 320, 321, 340, 345, 349, 351, 358], "und": [11, 23, 165, 169, 185, 195, 196, 200, 202, 206, 208, 211, 215, 231, 234, 240, 243, 247, 253, 341, 358, 383, 392, 1158, 1169], "13": [11, 23, 41, 45, 162, 184, 195, 196, 206, 259, 268, 271, 272, 274, 358], "4": [11, 23, 107, 154, 179, 188, 191, 195, 203, 204, 206, 209, 213, 214, 231, 243, 268, 349, 358, 363, 421, 425, 431, 467, 470, 572, 690, 1008], "templat": [12, 132, 213, 230, 279, 530, 543, 544, 545, 546, 562, 563, 564, 592, 593, 594, 600, 633, 679, 682, 687, 689, 717, 750], "descript": [12, 59, 62, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 478, 565, 573, 588, 591, 594, 630, 635, 644, 646, 649, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 663, 705, 706, 730, 738, 742, 754, 758, 760, 902, 910, 911, 965], "sidebar": [12, 37], "metadata": [12, 256, 257, 259, 890], "about": [13, 107, 149, 168, 227, 232, 244, 262, 265, 271, 275, 292, 299, 314, 460, 670, 707, 897, 998, 1050, 1053, 1054, 1055], "thi": [13, 32, 37, 115, 119, 120, 122, 125, 127, 131, 136, 154, 159, 160, 162, 163, 173, 182, 579, 593, 708, 827, 906, 929, 982, 999, 1006, 1008], "site": [13, 28, 32, 136, 156, 158, 182], "licens": 13, "gplv3": 13, "github": [13, 112, 132, 156, 158, 188, 189, 201, 209, 340, 508, 522, 1106], "sphinx": [13, 40, 66, 158], "instal": [13, 61, 122, 155, 159, 163, 167, 180, 181, 184, 209, 213, 214, 294, 310, 340, 345, 360, 455, 783, 925, 980, 991, 996, 997, 1030, 1060, 1061, 1093, 1106, 1122, 1139, 1141, 1146, 1148, 1161], "instruct": [13, 424, 734, 953, 983, 1000], "pip": [13, 285], "venv": [13, 285], "work": [13, 17, 65, 97, 112, 114, 135, 140, 154, 188, 219, 257, 259, 276, 277, 278, 279, 347, 441, 442, 443, 522, 593, 759, 827, 828, 864, 867, 871, 996], "progress": [13, 17, 135], "more": [13, 154, 172, 185, 224, 227, 232, 240, 244, 247, 249, 261, 262, 264, 265, 268, 270, 271, 274, 280, 281, 284, 285, 290, 291, 292, 299, 302, 306, 312, 313, 314, 318, 324, 340, 363, 369, 392, 408, 410, 424, 434, 450, 460, 462, 572, 582, 585, 592, 605, 611, 665, 707, 708, 712, 729, 816, 845, 846, 847, 851, 852, 897, 924, 966, 1003, 1005, 1007, 1050, 1053, 1054, 1055, 1105, 1114, 1139, 1151], "opentrain": [14, 23], "draft": [15, 754, 902, 1059], "topic": [15, 21, 73, 74, 98, 99, 101, 102, 103, 104, 148, 184, 188, 191, 212, 213, 214, 225, 230, 249, 252, 268, 271, 274, 277, 278, 302, 306, 316, 317, 330, 344, 348, 349, 358, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 471, 514, 515, 516, 517, 518, 519, 520, 523, 565, 573, 588, 591, 594, 610, 616, 620, 628, 633, 635, 638, 644, 662, 663, 667, 674, 681, 692, 705, 706, 716, 721, 730, 738, 742, 754, 758, 760, 761, 762, 785, 905, 920, 938, 940, 959, 965, 986, 992, 993, 1008, 1013, 1021, 1059, 1108, 1112, 1116, 1120, 1122, 1126, 1138, 1144], "miscellan": [16, 134, 145, 149, 168, 172, 192, 221, 232, 234, 240, 250, 256, 257, 261, 265, 268, 277, 280, 281, 286, 291, 292, 302, 303, 306, 313, 314, 316, 543, 565, 644, 648, 679, 742, 944, 955, 957, 1052, 1120], "s5": [17, 18, 149], "integr": [17, 116, 118, 121, 669, 685], "web": [17, 93, 94, 150], "slide": [17, 18, 30, 45, 172, 343, 355, 976, 980], "implement": [17, 115, 119, 120, 122, 123, 125, 127, 131, 132, 240, 303, 316, 326, 332, 472, 479, 489, 494, 504, 505, 506, 507, 511, 519, 524, 525, 569, 570, 575, 581, 583, 641, 665, 676, 766, 769, 788, 824, 1003, 1009, 1025, 1084], "note": [17, 37, 61, 126, 134, 167, 326, 465, 853], "todo": [17, 149, 178, 181, 192, 198, 327, 328, 329, 346, 448, 543, 544, 547, 550, 553, 556, 559, 562, 765, 769, 777, 809, 971, 974, 978, 1121, 1145, 1150], "test": [18, 37, 42, 43, 44, 45, 50, 71, 115, 119, 120, 122, 123, 125, 127, 131, 163, 184, 214, 238, 249, 252, 261, 270, 271, 274, 275, 276, 280, 281, 294, 296, 299, 302, 303, 306, 310, 348, 354, 358, 449, 463, 472, 492, 508, 522, 524, 525, 585, 769, 788, 821, 913, 942, 994, 997, 1061, 1094, 1101, 1102, 1103, 1111, 1139, 1140, 1144, 1146, 1148, 1151, 1161, 1177], "level": [19, 437], "head": [19, 37, 796, 899, 1114], "imag": [19, 173, 192, 996], "screencast": [20, 146], "written": [21, 114, 568, 571], "new": [21, 123, 132, 148, 214, 230, 256, 257, 259, 316, 317, 358, 511, 548, 664, 665, 705, 741, 760, 788, 821, 1123], "write": [21, 42, 50, 58, 151, 511, 548, 575, 687, 702, 725, 766, 934, 941, 1026, 1056, 1062, 1131], "netide": [22, 23], "f\u00f6rderantrag": [22, 23], "daten": [23, 208, 216], "antragsteller_in": 23, "allgemein": 23, "projektnam": 23, "untertitel": 23, "3": [23, 97, 107, 114, 132, 154, 179, 188, 189, 191, 192, 193, 194, 195, 198, 203, 204, 209, 213, 214, 215, 217, 219, 224, 225, 228, 231, 235, 243, 250, 268, 271, 274, 277, 279, 280, 281, 285, 289, 291, 302, 303, 304, 306, 307, 313, 317, 358, 363, 413, 417, 421, 425, 431, 433, 434, 436, 437, 467, 470, 472, 508, 572, 685, 756, 937, 953, 957, 958, 1008, 1037, 1045, 1051, 1056], "allgemeinverst\u00e4ndlich": 23, "kurzbeschreibung": 23, "de": [23, 261, 358, 834], "anschlussf\u00f6rderung": 23, "die": [23, 53, 160, 178, 216, 1166], "besonder": [23, 195], "bedeutung": 23, "ihr": 23, "f\u00fcr": [23, 179, 185, 195, 358, 1157], "da": [23, 175, 185, 202, 211, 244], "internet": 23, "internetnutzung": 23, "IN": 23, "\u00f6sterreich": 23, "zielgrupp": 23, "projektziel": 23, "5": [23, 154, 172, 179, 184, 185, 187, 195, 213, 214, 216, 268, 349, 358, 421, 431, 467, 470, 691, 835, 836], "l\u00f6sung": [23, 185], "beschreibung": 23, "der": [23, 195, 200, 216, 341, 358, 1154], "probleml\u00f6sung": 23, "wesentlich": 23, "element": [23, 195, 232, 250, 252, 526, 528, 529, 533, 621, 623, 624, 1042], "ein": [23, 185, 216, 1165, 1170], "nachhaltigen": 23, "impact": 23, "nach": [23, 252], "projektend": 23, "6": [23, 132, 195, 196, 216, 217, 250, 358, 421, 431, 467, 470, 1051, 1169], "umfeldanalys": 23, "wa": [23, 184, 200, 654, 746], "ist": [23, 185], "stand": 23, "technik": 23, "method": [23, 208, 211, 221, 232, 234, 237, 240, 250, 265, 277, 286, 292, 304, 308, 314, 332, 334, 342, 521, 557, 569, 576, 577, 578, 581, 583, 585, 588, 640, 643, 651, 655, 723, 724, 725, 726, 727, 750, 767, 802, 804, 818, 1023, 1025, 1051, 1052, 1053, 1140], "wissen": 23, "welch": 23, "ander": [23, 171, 341], "l\u00f6sungen": 23, "vorhaben": 23, "den": [23, 160, 200, 216], "genannten": 23, "problemen": 23, "gibt": [23, 195], "e": [23, 440, 724], "schon": 23, "7": [23, 188, 195, 196, 216, 358, 421, 431, 1169], "alleinstellungsmerkm": 23, "8": [23, 195, 196, 215, 216, 358, 421, 431, 914, 1119, 1169], "projektergebniss": 23, "erforderlich": 23, "lizenzen": 23, "dritter": 23, "9": [23, 188, 189, 195, 196, 216, 358, 421, 431, 1008, 1154, 1169], "erfolgreich": 23, "projektabschluss": 23, "sonstigen": 23, "aktivit\u00e4ten": 23, "im": [23, 195, 221, 234, 247, 250, 265, 272, 286, 292, 304, 308, 358, 1046], "projektbereich": 23, "angaben": 23, "zur": [23, 166, 185, 195], "fachlichen": 23, "eignung": 23, "mitarbeiterinnen": 23, "projektkernteam": 23, "erfahrung": 23, "vorgesehenen": 23, "projektleiterin": 23, "zum": [23, 171, 216], "maxim": 23, "min\u00fctigen": 23, "video": [23, 24, 31, 203, 261, 291, 307, 673], "risiken": 23, "erfolgskriterien": 23, "am": [23, 185, 244, 358], "angestrebt": 23, "jahr": 23, "10": [23, 45, 99, 100, 132, 138, 169, 172, 177, 188, 191, 195, 230, 231, 258, 259, 260, 261, 262, 276, 299, 300, 302, 303, 305, 340, 344, 345, 346, 350, 358, 421, 528, 835, 836], "umsetzung": 23, "einj\u00e4hrig": 23, "wichtig": 23, "partner_innen": 23, "arbeitsschwerpunkt": 23, "ressourcen": 23, "nutzer_innen": 23, "kommunikationskan\u00e4l": 23, "11": [23, 45, 115, 119, 127, 131, 132, 170, 175, 193, 194, 195, 224, 225, 230, 255, 259, 261, 264, 265, 299, 306, 307, 308, 309, 310, 311, 312, 313, 314, 347, 348, 358, 421, 543, 666, 669, 702, 703, 714, 723, 760], "projekttermin": 23, "termin": [23, 839, 951, 1014], "projektstart": 23, "kosten": 23, "finanzierung": 23, "projektkosten": 23, "personalkosten": 23, "sonstig": 23, "gesamtkosten": 23, "wir": [23, 200, 216], "beantragen": 23, "folgend": 23, "f\u00f6rderung": 23, "restlichen": 23, "werden": [23, 195], "finanziert": 23, "durch": [23, 185], "sonderprei": 23, "14": [23, 45, 115, 116, 119, 127, 132, 175, 184, 195, 196, 199, 213, 255, 358], "erg\u00e4nzend": 23, "transparenz": 23, "mehrfachantr\u00e4g": 23, "nutzung": 23, "whataventur": 23, "plattform": 23, "eingereicht": 23, "teil": 23, "einer": [23, 175, 184, 195, 358], "schulischen": 23, "verpflichtung": 23, "z": 23, "b": 23, "htl": 23, "diplomarbeit": 23, "wie": [23, 202, 208], "haben": [23, 185], "sie": [23, 185], "erfahren": 23, "mehrfachnennungen": 23, "m\u00f6glich": 23, "16": [23, 214, 238, 252, 264, 265, 358, 1008, 1154], "datenschutz": 23, "screenplai": [24, 63, 325, 449, 545, 548, 551, 554, 557, 560, 563, 595, 596, 597, 598, 599, 602, 603, 604, 622, 623, 624, 625, 763, 766, 771, 776, 781, 783, 821, 824, 827, 972, 975, 979, 1047, 1134, 1141, 1146, 1148, 1151], "The": [24, 39, 43, 45, 61, 100, 112, 115, 150, 163, 195, 211, 214, 217, 224, 241, 250, 253, 268, 276, 278, 280, 286, 289, 296, 299, 302, 303, 306, 308, 316, 317, 361, 369, 370, 407, 408, 423, 430, 431, 440, 441, 445, 446, 455, 523, 524, 576, 600, 621, 622, 644, 664, 665, 673, 678, 680, 682, 707, 725, 728, 739, 760, 804, 834, 843, 844, 851, 868, 871, 882, 885, 888, 890, 899, 901, 905, 921, 923, 925, 926, 928, 934, 942, 946, 961, 963, 970, 982, 984, 985, 994, 995, 1003, 1004, 1006, 1010, 1014, 1022, 1025, 1029, 1031, 1033, 1040, 1045, 1051, 1093, 1114, 1121, 1130, 1140, 1161], "problem": [24, 405, 427, 450, 451, 459, 465, 466, 467, 470, 476, 523, 524, 666, 678, 682, 702, 703, 712, 728, 741, 746, 764, 798, 845, 864, 923, 925, 929, 984, 999, 1000, 1004, 1018, 1113, 1135, 1142], "And": [24, 42, 61, 63, 112, 117, 118, 132, 163, 259, 262, 265, 268, 271, 276, 277, 278, 279, 280, 281, 286, 289, 291, 294, 296, 299, 302, 303, 306, 307, 308, 310, 314, 316, 317, 381, 425, 449, 450, 452, 455, 456, 461, 462, 463, 469, 472, 478, 486, 487, 492, 500, 506, 521, 568, 569, 575, 580, 596, 600, 601, 602, 604, 622, 637, 638, 642, 645, 670, 676, 678, 680, 693, 710, 713, 714, 715, 717, 718, 723, 735, 737, 739, 741, 756, 772, 830, 834, 835, 836, 840, 843, 849, 851, 887, 899, 901, 906, 910, 916, 917, 928, 941, 963, 991, 992, 994, 996, 997, 998, 999, 1001, 1006, 1010, 1011, 1014, 1018, 1019, 1020, 1025, 1026, 1027, 1028, 1092, 1093, 1094, 1102, 1114, 1119, 1124, 1125, 1127, 1128, 1129, 1139, 1161], "me": [24, 156, 316, 940], "open": [24, 140, 165, 281, 475, 766, 767, 931, 934, 937, 939, 976, 1003, 1056], "sourc": [24, 40, 155, 165, 181, 450, 468, 764, 767, 769, 772, 774, 777, 781, 786, 788, 798, 800, 808, 811, 816, 935, 984, 1061, 1119], "walk": [24, 268, 340], "through": [24, 268, 340], "us": [25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 153, 157, 159, 163, 173, 174, 180, 182, 192, 211, 213, 214, 227, 230, 366, 368, 371, 386, 401, 423, 433, 441, 442, 451, 453, 467, 470, 487, 508, 608, 632, 653, 661, 673, 677, 678, 714, 728, 739, 750, 751, 752, 900, 912, 913, 914, 950, 966, 983, 984, 994, 995, 1001, 1003, 1006, 1009, 1019, 1028, 1134, 1140, 1141], "case": [25, 26, 27, 28, 29, 30, 213, 397, 401, 472, 534, 536, 539, 713, 714, 935, 939, 940, 941, 993, 1001, 1028, 1140, 1146], "custom": [25, 140, 143, 156, 330, 569, 570, 584, 590, 614, 668, 1128, 1130, 1146], "subtract": [25, 567], "known": [25, 151], "calcul": [26, 211, 390, 469, 1026], "minimum": [26, 786], "durat": 26, "trainer": [27, 167], "editor": [27, 204], "end": [27, 679], "user": [27, 42, 46, 214, 216, 358, 571, 650, 655, 656, 657, 658, 659, 660, 772, 840, 841, 843, 844, 845, 853, 854, 865, 925, 1005, 1095, 1097, 1099, 1100, 1102, 1134], "audienc": [27, 1161], "from": [28, 29, 31, 38, 40, 42, 43, 45, 57, 100, 112, 132, 138, 144, 163, 173, 181, 182, 190, 230, 240, 268, 271, 276, 285, 303, 358, 376, 398, 404, 446, 449, 592, 595, 636, 645, 649, 675, 676, 715, 776, 781, 822, 827, 912, 924, 942, 966, 975, 982, 1024, 1061, 1101, 1105, 1106, 1111, 1113, 1154], "other": [28, 38, 52, 211, 280, 292, 342, 673, 786, 808, 853, 1013], "menu": 29, "choos": 29, "show": 30, "plain": [30, 608, 636, 637, 665], "text": [30, 289, 407, 895, 898, 901, 1056, 1131], "file": [30, 31, 42, 48, 173, 175, 211, 221, 224, 240, 247, 249, 250, 264, 268, 272, 282, 284, 285, 286, 289, 290, 291, 308, 312, 313, 314, 318, 324, 331, 332, 347, 405, 449, 451, 457, 472, 551, 582, 766, 767, 768, 776, 808, 835, 836, 839, 857, 862, 863, 869, 870, 873, 874, 875, 883, 887, 890, 891, 895, 898, 900, 916, 924, 925, 929, 930, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 948, 972, 976, 982, 983, 997, 1003, 1032, 1056, 1061, 1062, 1063, 1084, 1086, 1095, 1097, 1114, 1146], "send": [31, 976, 980], "A": [31, 45, 63, 112, 127, 132, 152, 163, 230, 256, 257, 259, 271, 275, 276, 277, 278, 280, 285, 316, 317, 358, 364, 373, 403, 430, 448, 449, 452, 466, 486, 500, 508, 511, 521, 526, 541, 567, 582, 583, 592, 601, 631, 642, 643, 656, 665, 670, 678, 680, 707, 710, 723, 726, 728, 835, 836, 839, 853, 864, 887, 891, 924, 926, 930, 931, 932, 935, 938, 939, 940, 941, 948, 961, 966, 969, 982, 995, 996, 999, 1000, 1001, 1004, 1009, 1028, 1031, 1093, 1119, 1124, 1127, 1130, 1131, 1139], "v4l": 31, "camera": 31, "devic": [31, 63, 81, 97, 114, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 776, 798, 802, 803, 804, 839, 912, 914, 972], "output": [31, 50, 120, 173, 185, 331, 463, 646, 850, 1008, 1111, 1146], "over": [31, 224, 232, 234, 759, 914, 1044, 1045], "ssh": [31, 204, 268, 289, 337, 345, 915, 918, 919, 920, 921, 922, 923, 924, 925], "captur": [31, 707, 708, 710], "To": [31, 37, 39, 42, 44, 53, 149, 247, 276, 316, 471, 472, 487, 508, 634, 645, 665, 669, 678, 680, 682, 693, 707, 715, 723, 725, 727, 728, 739, 779, 820, 822, 835, 836, 916, 917, 924, 984, 994, 996, 1001, 1003, 1004, 1024, 1025, 1102, 1123, 1124, 1130], "plai": [31, 63, 693], "remot": [31, 97, 112, 114, 134, 476, 489, 503, 835, 836, 916, 917, 921, 924, 925], "system": [31, 154, 227, 268, 289, 347, 358, 379, 443, 640, 731, 857, 863, 925, 927, 928, 929, 934, 945, 963, 966, 969, 1035, 1134, 1154, 1172, 1173, 1174, 1175, 1176], "emoji": 32, "code": [32, 41, 43, 45, 107, 182, 183, 185, 186, 209, 225, 278, 280, 281, 294, 310, 358, 427, 437, 447, 448, 449, 451, 457, 458, 459, 464, 468, 544, 547, 550, 553, 556, 559, 562, 592, 677, 725, 746, 769, 770, 774, 775, 776, 777, 778, 788, 789, 798, 799, 810, 811, 812, 816, 817, 940, 971, 974, 978, 998, 999, 1000, 1101, 1102, 1103, 1106, 1109, 1112, 1119, 1132, 1141, 1145, 1150, 1161], "sphinxemoji": 32, "setup": [32, 63, 78, 109, 155, 159, 181, 188, 189, 191, 192, 193, 214, 264, 270, 271, 274, 277, 279, 281, 284, 285, 289, 290, 291, 312, 313, 318, 319, 324, 463, 521, 523, 905, 913, 921, 932, 996, 997, 1030, 1093, 1094, 1141, 1151], "most": [32, 38, 63, 680, 1134], "here": [32, 153, 472, 924], "all": [32, 38, 53, 63, 208, 211, 230, 276, 306, 317, 358, 639, 665, 673, 708, 728, 827, 845, 982, 998, 1016, 1104], "recip": 33, "isoamsa": 34, "txt": [34, 35, 36, 38], "ad": [34, 35, 36, 156, 998, 1123, 1130], "mathemat": [34, 35, 36], "symbol": [34, 35, 36, 367, 382, 443, 889, 982], "arrow": 34, "isoamsr": 35, "relat": [35, 168, 271, 274, 385, 747], "isonum": 36, "binari": [36, 487, 1056], "oper": [36, 172, 185, 195, 208, 224, 227, 230, 237, 240, 244, 247, 261, 276, 296, 308, 335, 369, 384, 385, 386, 389, 390, 392, 393, 398, 410, 521, 543, 568, 569, 575, 583, 623, 723, 731, 737, 766, 767, 768, 850, 929, 966, 1025, 1035, 1037, 1039, 1055, 1125], "layout": [37, 240, 416], "page": [37, 94, 156, 158, 779, 868, 900, 928], "admonit": 37, "i": [37, 45, 153, 154, 171, 211, 221, 227, 232, 237, 240, 247, 249, 250, 282, 286, 289, 291, 332, 344, 369, 395, 442, 448, 466, 521, 540, 567, 574, 636, 642, 643, 678, 680, 703, 707, 712, 715, 724, 728, 732, 736, 781, 792, 813, 828, 839, 843, 844, 849, 850, 851, 864, 874, 887, 914, 924, 925, 926, 929, 930, 931, 932, 933, 934, 937, 939, 941, 943, 944, 961, 964, 982, 999, 1001, 1006, 1056, 1113, 1127, 1151], "an": [37, 156, 227, 280, 295, 302, 306, 311, 336, 340, 358, 454, 459, 569, 678, 693, 769, 887, 913, 924, 929, 966, 999, 1010, 1019, 1046, 1048, 1141, 1159], "tip": 37, "hint": [37, 489, 519], "import": [37, 163, 171, 211, 221, 230, 340, 574, 980, 1005, 1013, 1121], "attent": [37, 1048], "caution": [37, 643], "error": [37, 43, 163, 227, 280, 281, 302, 303, 306, 408, 433, 467, 589, 599, 600, 684, 687, 850, 914, 926, 935, 939, 940, 941, 1018, 1074], "danger": [37, 375, 736, 865], "blech": 37, "titl": 37, "blah": 37, "kursdaten": [37, 1155, 1156, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "local": [37, 39, 97, 112, 114, 134, 172, 195, 406, 438, 455, 476, 921, 924, 957, 984, 1047, 1141], "bleh": 37, "do": [37, 42, 149, 211, 253, 316, 399, 436, 455, 466, 665, 798, 820, 835, 836, 851, 982], "mmlalia": 38, "mathml": 38, "alias": 38, "entiti": [38, 951], "restructuredtext": 39, "cheat": [39, 340], "sheet": [39, 340], "further": [39, 137, 176, 212, 213, 235, 331, 340, 437, 673, 727, 1035], "document": [39, 158, 208, 224, 304, 335, 605, 606, 607, 608, 609, 611, 612, 613, 614, 617, 618, 621, 626, 772, 788, 790, 794, 796, 818, 822, 825, 835, 836, 839, 843, 850, 851, 852, 853, 868, 869, 870, 871, 887, 890, 891, 924, 926, 928, 930, 931, 932, 934, 937, 938, 939, 940, 941, 944, 982, 983, 1034, 1058, 1068, 1131, 1139, 1146], "extern": [39, 294, 310, 326, 404, 453, 582, 783, 784, 913, 999, 1069, 1161], "section": 39, "refer": [39, 149, 152, 195, 221, 224, 227, 234, 247, 250, 256, 257, 259, 262, 265, 269, 272, 277, 280, 286, 292, 304, 316, 373, 411, 438, 580, 674, 677, 678, 680, 707, 708, 710, 719, 724, 726, 727, 756, 757, 815, 1046], "That": [39, 253, 256, 257, 259, 276, 303, 412, 470, 567, 574, 665, 668, 678, 707, 725, 726, 808, 843, 914, 924, 929, 930, 933, 1001, 1028, 1148], "we": [39, 42, 45, 53, 316, 447, 449, 798, 827, 994, 1146], "anoth": [39, 240, 447, 966, 998], "contain": [39, 132, 230, 250, 276, 279, 317, 543, 559, 560, 561, 600, 601, 615, 616, 619, 620, 621, 665, 669, 717, 796, 996], "abov": 39, "footnot": 39, "sphinxish": 40, "run": [40, 138, 157, 463, 522, 585, 816, 905, 930, 931, 932, 996, 997, 1033, 1109, 1112, 1139], "seminar": 41, "clean": [41, 43, 45, 218, 278, 280, 281, 358, 448, 449], "2022": [41, 98, 99, 100, 101, 102, 103, 104, 230, 231, 232, 235, 238, 241, 243, 246, 249, 252, 255, 258, 259, 260, 261, 262, 264, 265, 350, 351, 352, 358], "04": [41, 104, 157, 230, 241, 243, 246, 279, 280, 281, 282, 283, 317, 340, 358, 996], "agenda": [41, 188, 189, 191, 192, 193, 194, 199, 203, 204, 241, 246, 258, 267, 271, 274, 280, 284, 288, 290, 294, 296, 302, 306, 310, 312, 316, 318, 324, 353, 354, 1161], "timelin": 41, "befor": [42, 63, 140, 173, 296, 299, 723, 1146], "formal": [42, 369], "unit": [42, 43, 45, 71, 184, 214, 252, 261, 271, 274, 348, 508, 524, 585, 1094, 1144], "initi": [42, 221, 256, 257, 259, 316, 317, 371, 383, 432, 519, 550, 551, 552, 567, 574, 585, 622, 645, 665, 667, 668, 669, 670, 714, 736, 741, 802, 813, 825, 955, 957], "structur": [42, 43, 132, 145, 149, 172, 235, 256, 257, 259, 261, 283, 294, 305, 309, 310, 316, 401, 409, 416, 419, 425, 461, 508, 543, 714, 719, 739, 776, 804, 1000, 1013, 1139, 1146, 1161], "snippet": [42, 44, 50], "userdb": [42, 46, 49, 50, 55, 58, 213, 543, 657, 661], "bin": 42, "binaryfil": 42, "cpp": [42, 457, 508, 511, 683, 684, 685, 688, 689, 690, 691, 694, 695, 697, 698, 699, 700, 701], "extend": [42, 208, 585, 1022], "read": [42, 49, 50, 58, 211, 218, 331, 332, 342, 376, 437, 449, 472, 673, 715, 766, 824, 930, 934, 940, 942, 1056, 1062, 1063, 1095, 1096, 1097, 1098, 1111, 1131], "iter": [42, 174, 185, 190, 195, 200, 202, 208, 211, 216, 217, 221, 224, 227, 232, 234, 237, 240, 249, 250, 261, 262, 264, 265, 271, 274, 278, 282, 284, 285, 286, 290, 291, 303, 304, 308, 312, 313, 314, 318, 319, 324, 332, 600, 601, 624, 665, 693, 700, 713, 714, 715, 759, 796, 1008, 1010, 1011, 1012, 1024, 1044, 1045, 1054], "bug": [42, 47, 53, 386, 551, 715], "faschingbau": [42, 156], "As": [42, 470, 487, 678, 717, 914, 948, 982, 1019, 1148], "last": [42, 386, 407, 408, 437, 590, 593, 729, 958, 980, 1146], "name": [42, 43, 120, 221, 224, 240, 380, 418, 576, 665, 808, 852, 870, 976, 1047, 1058], "wrap": [42, 184, 433, 665, 1004], "up": [42, 154, 184, 218, 261, 279, 280, 302, 345, 433, 665, 1019], "what": [42, 45, 49, 53, 159, 162, 227, 237, 395, 436, 447, 571, 640, 659, 665, 677, 678, 707, 728, 777, 798, 808, 824, 828, 843, 851, 869, 908, 921, 924, 925, 929, 930, 933, 937, 969, 982, 994, 998, 1006, 1010, 1014, 1057, 1127, 1130], "have": [42, 45, 447, 798, 994, 999], "messag": [43, 152, 153, 446, 452, 956, 975, 976, 1122, 1146], "book": [43, 45, 199, 249, 291, 361, 446, 1106], "survei": [43, 447], "comment": [43, 208, 232, 247, 272, 335, 1034, 1075], "format": [43, 50, 211, 217, 232, 292, 1051, 1103], "object": [43, 185, 190, 227, 234, 240, 244, 252, 253, 261, 264, 265, 277, 278, 280, 281, 284, 285, 290, 296, 297, 299, 302, 303, 306, 307, 312, 318, 324, 328, 447, 465, 470, 550, 551, 552, 567, 569, 572, 575, 577, 581, 583, 638, 640, 654, 669, 672, 675, 678, 724, 976, 999, 1000, 1005, 1013, 1019, 1021, 1023, 1057, 1124, 1128], "data": [43, 119, 120, 121, 122, 172, 174, 200, 209, 235, 249, 252, 261, 285, 302, 303, 304, 306, 381, 425, 428, 449, 573, 577, 600, 719, 843, 957, 1024, 1092, 1106, 1111, 1113], "handl": [43, 227, 230, 240, 252, 271, 274, 279, 280, 281, 302, 303, 306, 351, 459, 467, 589, 926, 1005, 1058], "boundari": [43, 1119], "class": [43, 185, 211, 230, 234, 237, 240, 253, 261, 277, 282, 296, 299, 452, 470, 477, 478, 495, 496, 508, 511, 525, 544, 545, 546, 569, 576, 577, 582, 584, 585, 586, 587, 593, 608, 636, 637, 656, 665, 666, 668, 676, 677, 709, 723, 764, 1004, 1018, 1019, 1022, 1023, 1024, 1025], "switch": [44, 125, 130, 131, 132, 397, 429, 520], "googletest": [44, 180, 522, 1144], "git": [44, 77, 112, 132, 134, 155, 163, 167, 209, 213, 214, 268, 340, 345, 358, 781, 1106], "submodul": 44, "establish": [44, 45, 997], "demo": [44, 123, 270, 271, 278, 453, 472, 709, 724, 839, 865, 929, 964, 968], "straightforward": [44, 185], "main": [44, 112, 414, 505, 506, 507, 745, 747, 749, 751, 998], "convers": [44, 208, 224, 232, 234, 240, 244, 247, 265, 276, 282, 286, 292, 304, 308, 314, 320, 335, 386, 413, 637, 645, 1037, 1051], "fix": [44, 155, 163, 256, 257, 259, 276, 332, 575, 693, 739, 798, 799, 811, 812], "shortcom": 44, "softwar": [45, 132, 181, 278, 447, 448, 914, 987, 990, 1163], "craft": [45, 278, 448], "09": [45, 132, 157, 212, 222, 230, 296, 297, 298, 299, 300, 301, 358], "00": 45, "15": [45, 195, 201, 238, 271, 274, 284, 285, 286, 340, 347, 352, 358, 835, 836], "introductori": [45, 268, 693, 947], "word": [45, 247, 407, 408, 437, 440, 590, 593, 720, 729, 868, 1073, 1090], "engin": [45, 249, 914], "disciplin": 45, "coffe": 45, "break": [45, 195, 232, 400, 1041, 1044], "project": [45, 109, 112, 124, 132, 156, 172, 213, 214, 228, 252, 257, 259, 261, 277, 279, 280, 281, 294, 296, 299, 302, 303, 306, 307, 310, 346, 347, 348, 352, 354, 447, 449, 508, 513, 522, 523, 585, 1093, 1133, 1139, 1161, 1164], "enter": [45, 63, 224, 600, 643, 678, 704, 713, 727, 811, 900, 968, 998, 1006, 1018, 1019, 1114, 1119, 1124], "framework": 45, "lunch": 45, "cornerston": 45, "45": 45, "keep": [45, 157, 870], "small": 45, "23": [45, 193, 219, 235, 241, 259, 267, 277, 288, 289, 358], "59": 45, "extrem": 45, "program": [45, 50, 63, 93, 123, 168, 184, 190, 211, 214, 230, 240, 252, 253, 261, 264, 268, 278, 280, 281, 284, 285, 286, 290, 296, 299, 302, 303, 306, 307, 312, 318, 324, 347, 358, 362, 363, 365, 401, 402, 403, 409, 435, 440, 445, 447, 452, 472, 505, 506, 507, 511, 567, 728, 745, 747, 749, 751, 769, 821, 853, 864, 865, 906, 908, 927, 942, 945, 946, 949, 961, 971, 979, 982, 1014, 1021, 1030, 1031, 1033, 1035, 1082, 1094, 1105, 1132, 1160, 1172, 1173, 1174, 1175, 1176], "session": 45, "find": [46, 137, 155, 173, 467, 526, 607, 625, 755, 896, 1148], "crash": [46, 155], "If": [46, 49, 571, 665, 680, 824, 938, 939, 1005, 1130], "Not": [46, 63, 65, 115, 119, 120, 122, 125, 127, 131, 163, 244, 253, 533, 535, 538, 607, 643, 659, 665, 687, 702, 703, 715, 724, 798, 824, 864, 935, 938, 939, 940, 941, 961, 982, 999, 1009, 1124, 1146], "found": [46, 535, 538, 607, 659, 1148], "state": [46, 153, 213, 693, 811, 813], "exist": [48, 65, 123, 149, 533, 935, 938, 939, 941, 1022, 1130], "ar": [48, 152, 153, 232, 234, 247, 297, 433, 449, 571, 577, 665, 693, 966, 976, 1004, 1013, 1025, 1129, 1148], "overwritten": 48, "done": [49, 112, 115, 119, 128, 129, 130, 317, 471, 634, 728], "twice": 49, "altern": [50, 674], "csv": [50, 120, 132, 224, 241, 249, 252, 261, 264, 284, 285, 286, 290, 291, 306, 312, 313, 318, 324, 449, 1062, 1063, 1064, 1095, 1096, 1097, 1098, 1103, 1114], "frontend": 50, "featur": [51, 53, 63, 264, 280, 281, 282, 284, 285, 290, 302, 306, 317, 426, 449, 705, 1007, 1022, 1041, 1111, 1113], "search": [52, 605, 607, 608, 611, 621, 625, 645, 658, 659, 660, 897, 999, 1052, 1134], "By": [52, 180, 244, 276, 373, 580, 624, 655, 658, 660, 682, 693, 704, 707, 708, 710, 715, 719, 727, 755, 756, 757, 1005, 1038, 1127, 1128, 1129, 1139], "index": [52, 195, 213, 232, 244, 292, 438, 691, 908, 1043, 1128, 1134, 1135, 1136], "backlog": 53, "need": [53, 332, 472, 687, 689, 966, 1114], "chang": [53, 112, 853, 864, 871], "Or": [53, 449, 457, 458, 472, 676, 715, 928, 1019, 1124], "Will": 53, "refactor": [53, 56, 449, 525, 776, 777, 778, 816, 1096, 1098, 1103], "after": [53, 188, 219, 399, 827, 843, 1022], "backingstor": [54, 55, 57], "ha": [54, 55, 690], "too": [54, 55, 443, 458, 665, 709, 732], "mani": [54, 55, 240, 437, 459, 715, 745, 747, 749, 751, 890, 970], "respons": [54, 55, 216, 475], "interfac": [54, 69, 86, 123, 128, 130, 192, 240, 279, 317, 327, 458, 462, 472, 475, 479, 487, 498, 505, 506, 521, 523, 553, 554, 555, 562, 563, 564, 639, 767, 839, 907, 908, 911, 913, 1018, 1115], "load": [57, 173, 424, 460, 786, 787, 912, 954, 1016], "constructor": [57, 190, 240, 256, 257, 259, 265, 316, 521, 551, 557, 568, 569, 570, 571, 572, 574, 575, 584, 585, 586, 587, 654, 669, 670, 671, 676, 678, 702, 722, 723, 1020], "bool": 58, "realli": [58, 665, 727], "submiss": [59, 62, 109], "pointless": [59, 60, 62, 63, 1025], "blink": [59, 60, 62, 63, 340], "With": [59, 60, 62, 63, 97, 114, 182, 213, 260, 276, 278, 280, 302, 306, 358, 442, 450, 471, 486, 500, 522, 593, 675, 728, 741, 834, 835, 836, 897, 900, 905, 910, 936, 999, 1047, 1127, 1129, 1140, 1141, 1144], "asyncio": [59, 60, 62, 63], "libgpiod": [59, 60, 61, 62, 63, 125], "raspberri": [59, 60, 62, 63, 163, 192, 326, 358, 788, 809, 905, 909, 912, 987, 991, 993, 995, 1170], "pi": [59, 60, 61, 62, 63, 163, 192, 358, 788, 808, 809, 905, 912, 994, 995, 1170], "biographi": [59, 62], "abstract": [59, 62, 261, 296, 299, 465, 480, 494, 844, 930, 931, 932, 1018], "fedora": [61, 155, 162, 781, 782, 783, 784, 996], "prepar": [61, 155, 173, 188, 189, 191, 192, 193, 194, 204, 213, 228, 257, 259, 267, 508, 585, 808], "tarbal": [61, 163], "On": [61, 63, 112, 213, 247, 249, 271, 275, 276, 280, 302, 306, 360, 522, 524, 569, 600, 601, 605, 611, 714, 739, 851, 930, 931, 932, 937, 942, 946, 969, 996, 1061], "build": [61, 68, 153, 155, 163, 180, 181, 214, 232, 450, 452, 460, 508, 522, 584, 585, 586, 587, 776, 781, 782, 783, 784, 786, 808, 809, 912, 930, 931, 932, 942, 983, 984, 987, 990, 994, 995, 996, 998, 999, 1000, 1054, 1148, 1166], "present": 63, "start": [63, 230, 256, 257, 259, 358, 472, 675, 687, 999, 1122, 1146], "point": [63, 244, 247, 521, 567, 569, 577, 583, 585, 586, 587, 593, 675, 687, 739, 835, 836, 994, 1037], "greet": [63, 303, 1068], "multipl": [63, 112, 190, 408, 449, 450, 774, 775, 776, 870, 924, 982, 1003, 1005, 1042, 1124, 1127, 1140], "background": [63, 157, 159, 566, 664], "thread": [63, 152, 154, 163, 280, 281, 349, 543, 665, 731, 732, 737, 950, 951, 952, 957, 959, 966, 969, 1014], "charact": [63, 362, 369, 372, 375, 382, 763, 764, 765, 766, 767, 768, 771, 772, 773, 1090], "base": [63, 163, 232, 240, 256, 257, 259, 261, 296, 299, 316, 470, 636, 637, 665, 678, 693, 713, 714, 1000, 1005, 1018], "gpio": [63, 86, 131, 132, 170, 192, 326, 327, 328, 329, 340, 788, 789, 912, 914, 946, 947, 948], "entir": [63, 276, 781, 783, 868, 924], "matrix": 63, "off": [63, 213], "bring": [63, 134, 345, 639], "togeth": [63, 455, 639, 870], "modular": [63, 230, 403], "bit": [63, 285, 389, 853, 864, 866, 1031, 1033], "row": [63, 276, 1123, 1127, 1128, 1129], "coroutin": [63, 259, 692, 693], "enough": [63, 567, 643], "sequenc": [63, 221, 224, 232, 264, 271, 274, 284, 285, 290, 291, 312, 313, 318, 319, 324, 382, 541, 605, 611, 1009, 1042, 1050], "loop": [63, 172, 174, 185, 195, 200, 232, 234, 244, 247, 250, 256, 257, 259, 278, 280, 302, 306, 314, 316, 365, 398, 399, 437, 509, 713, 949, 1010, 1041, 1044], "forev": 63, "strip": [63, 217, 234, 240, 332], "down": [63, 458], "factori": [63, 465, 480, 494, 524], "turn": [63, 1009], "Into": [63, 112, 274, 296, 299, 302, 376, 472, 509, 526, 602, 656, 665, 709, 1096, 1098, 1103], "anti": [63, 737, 739], "clumsi": [63, 739], "decor": [63, 211, 261, 271, 274, 278, 280, 281, 296, 302, 303, 306, 470, 484, 498, 1004], "wrapper": [63, 122], "final": [63, 240, 256, 257, 259, 316, 704, 843, 847, 1005], "playground": 63, "cycl": [63, 115, 119, 120, 122, 125, 127, 131, 951], "fast": [63, 190], "forward": [63, 259, 374, 438, 727, 923], "ani": [63, 276, 466, 521, 961], "cancel": 63, "goodby": 63, "hochk\u00f6nig": 64, "k\u00f6nigsjodl": 64, "klettersteig": 64, "tour": [64, 261, 665], "werfen": 64, "ostpreussenh\u00fctt": 64, "matrashau": 64, "blog": [65, 149], "articl": [65, 159, 160, 162, 163], "yet": [65, 240], "revisit": [65, 365, 433, 676], "post": [65, 164, 173, 975], "pending_xref": 66, "cmake": [68, 180, 181, 213, 268, 294, 295, 310, 311, 358, 450, 452, 454, 458, 508, 522, 942, 983, 984, 997, 1148, 1149, 1161], "oo": [70, 108, 132, 185, 211, 214, 230, 237, 240, 249, 252, 256, 257, 259, 261, 271, 274, 277, 279, 296, 299, 303, 307, 316, 317, 349, 475, 512, 521, 543, 1014], "graph": [72, 73, 74, 441, 443, 648, 761, 809, 1064, 1065, 1069, 1078, 1092, 1099], "embed": [73, 74, 78, 96, 97, 107, 108, 113, 114, 133, 170, 179, 268, 277, 279, 317, 322, 339, 341, 342, 354, 356, 358, 746, 1162, 1163], "comput": [73, 74, 78, 96, 107, 108, 113, 133, 337, 339, 341, 342, 354, 356, 436, 437, 521, 835, 836, 844], "current": [73, 74, 470, 741, 759, 871], "depend": [73, 74, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 181, 294, 296, 310, 326, 327, 328, 329, 331, 453, 454, 456, 457, 461, 471, 475, 485, 508, 513, 530, 532, 543, 551, 610, 616, 620, 628, 630, 633, 638, 646, 647, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 667, 674, 681, 692, 716, 721, 746, 785, 786, 835, 836, 837, 841, 855, 856, 857, 876, 881, 882, 885, 918, 920, 927, 933, 935, 943, 945, 947, 959, 962, 984, 986, 988, 989, 992, 993, 999, 1014, 1016, 1062, 1063, 1066, 1067, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103, 1108, 1112, 1116, 1119, 1122, 1126, 1138, 1144, 1161], "ex": [75, 76, 82, 83, 84, 85, 91, 92], "race": [75, 76, 88, 733, 798, 799, 806, 952, 953, 1016], "condit": [75, 76, 88, 391, 399, 408, 733, 737, 798, 799, 806, 952, 953, 955, 956, 1016], "avoid": [76, 88], "goal": [76, 82, 83, 84, 85, 87, 88, 89, 91, 137, 139, 140, 142, 173, 277, 279, 1159, 1162], "outcom": [76, 82, 83, 84, 85, 191, 299, 342], "introduct": [77, 80, 172, 256, 257, 259, 271, 274, 278, 279, 289, 294, 295, 310, 311, 316, 317, 343, 358, 361, 378, 436, 440, 454, 471, 479, 566, 663, 669, 713, 722, 731, 788, 808, 842, 1005, 1139, 1159, 1161, 1172], "2019": [78, 172, 175, 358], "overview": [78, 132, 168, 268, 280, 281, 304, 316, 355, 359, 675, 682, 693, 717, 723, 737, 739, 745, 747, 749, 750, 751, 752, 759, 779, 833, 844, 870, 901, 912, 913, 914, 915, 950, 982, 1004, 1108, 1112], "knowledg": [78, 1161], "transfer": [78, 725], "unix": [80, 110, 111, 176, 345, 361, 423, 433, 469, 1033], "hardwar": [81, 84, 85, 132, 140, 143, 268, 423, 909, 911, 912, 914, 947, 1163], "manag": [81, 154, 202, 232, 252, 261, 271, 274, 277, 278, 280, 296, 299, 302, 303, 306, 347, 348, 352, 447, 575, 635, 723, 818, 819, 984, 1003, 1022, 1133, 1163], "averag": [82, 83, 91, 469, 497, 745, 747, 749, 751], "sensor": [82, 83, 85, 91, 92, 94, 128, 129, 279, 303, 316, 465, 466, 470, 472, 477, 495, 497, 498, 504, 508, 510, 511, 512, 523, 524, 525, 532, 723, 745, 747, 749, 751, 912, 914, 942, 1092, 1094], "parallel": 83, "led": [84, 127, 340], "temperatur": [84, 85, 92, 127, 508, 511, 912, 914, 942], "displai": [84, 91, 117, 118, 123, 127], "sysf": [86, 131, 132, 192, 326, 340, 913, 947, 948], "gpiod": 86, "multithread": [87, 170, 230, 256, 257, 259, 268, 302, 303, 306, 316, 348, 355, 737, 738, 979, 1014, 1015, 1017, 1175], "semaphor": [88, 152, 739, 975, 976], "mutex": [88, 152, 424, 735, 739, 798, 799, 800, 801, 813, 814, 953, 954, 969, 1016], "commun": [89, 249, 489, 737, 955, 976], "wait": [89, 143, 737, 739, 824, 825, 826, 955, 975], "someth": [89, 185, 567, 665, 739, 824, 825, 826, 1044], "simpl": [93, 190, 463, 567, 577, 592, 643, 655, 811, 813, 839, 853, 982, 999, 1004, 1024, 1054, 1131, 1139], "2020": [96, 157, 177, 179, 184, 185, 187, 188, 189, 191, 193, 194, 199, 358], "ss2022": [97, 105, 835, 836], "block": [97, 114, 394, 590, 929, 930, 931, 932, 933, 980], "cross": [97, 108, 114, 163, 268, 788, 808, 983, 985, 986, 987, 992, 994, 995, 997, 1154], "develop": [97, 108, 114, 115, 119, 120, 122, 125, 127, 131, 132, 184, 199, 213, 216, 238, 249, 252, 268, 271, 273, 274, 277, 278, 279, 280, 281, 302, 303, 306, 322, 343, 358, 785, 985, 986, 992, 1162, 1163, 1164, 1177], "03": [98, 99, 100, 101, 102, 103, 132, 201, 204, 209, 228, 230, 238, 241, 258, 271, 272, 274, 277, 278, 294, 340, 358, 665, 666], "08": [98, 219, 222, 230, 243, 358], "homework": [98, 99, 100, 101, 104], "until": 100, "21": [100, 101, 241, 333, 340, 358], "exercis": [100, 109, 145, 167, 172, 173, 185, 188, 189, 193, 201, 202, 204, 213, 214, 224, 230, 247, 252, 256, 257, 259, 261, 264, 268, 272, 277, 279, 280, 284, 285, 290, 291, 292, 296, 299, 302, 303, 306, 312, 313, 318, 324, 330, 332, 340, 346, 364, 366, 368, 370, 372, 374, 376, 388, 412, 421, 465, 466, 467, 469, 470, 471, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 541, 542, 543, 573, 584, 585, 586, 587, 588, 629, 630, 631, 638, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 727, 755, 756, 757, 758, 830, 837, 848, 854, 857, 858, 860, 862, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 886, 895, 916, 917, 918, 919, 935, 936, 942, 976, 980, 987, 989, 990, 991, 992, 1021, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103], "creat": [100, 112, 134, 146, 151, 155, 158, 180, 181, 522, 665, 732, 828, 834, 835, 836, 853, 858, 860, 862, 870, 874, 876, 887, 919, 936, 938, 939, 941, 975, 976, 994, 996, 1001, 1093, 1111, 1113], "copi": [100, 185, 234, 269, 316, 388, 526, 560, 568, 575, 580, 595, 601, 602, 606, 613, 665, 676, 678, 703, 708, 710, 714, 719, 723, 724, 755, 822, 870, 872, 873, 876, 916, 917, 924, 935, 1046, 1124], "move": [100, 256, 257, 259, 277, 316, 317, 521, 567, 583, 674, 675, 676, 677, 678, 723, 725, 756, 788, 868, 875, 876, 891], "remov": [100, 250, 458, 538, 539, 621, 624, 755, 876, 879, 887, 976], "l": [100, 885, 890], "command": [100, 467, 482, 496, 786, 853, 864, 868, 885, 890, 905, 996], "22": [102, 191, 198, 203, 290, 291, 292, 306, 307, 308, 309, 358], "24": [102, 124, 132, 198, 230, 260, 280, 281, 282, 283, 302, 303, 305, 306, 307, 308, 309, 358], "ku": 102, "28": [103, 172, 189, 230, 278, 346, 358], "01": [104, 109, 222, 228, 230, 231, 232, 261, 267, 312, 313, 314, 340, 350, 351, 358, 835, 836], "ws2022": [106, 107, 108], "plan": [106, 132, 241, 343], "evolut": 106, "fh": [107, 108, 112, 133, 508, 509, 510, 511, 512, 584, 585, 586, 587, 647, 841, 855, 856, 881, 988], "joanneum": [107, 108, 133], "2023": [107, 108, 109, 110, 111, 115, 116, 119, 127, 131, 132, 259, 267, 268, 271, 272, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 358], "question": [107, 108, 140, 211, 355, 449, 463, 508, 647, 841, 855, 856, 859, 861, 881, 967, 988, 1017], "inherit": [107, 171, 211, 240, 261, 296, 299, 479, 553, 554, 555, 636, 637, 638, 641, 665, 937, 1014, 1022], "memori": [107, 154, 176, 202, 413, 416, 420, 422, 424, 431, 438, 537, 547, 548, 549, 575, 634, 635, 779, 792, 793, 794, 795, 821, 822, 823, 841, 845, 975, 976, 1163, 1173], "leak": [107, 537, 548, 575, 725], "ye": [108, 1119], "No": [108, 153, 192, 487, 665, 682, 728, 1005, 1130, 1146], "lab": 109, "exam": [109, 110, 111, 114, 212, 225, 227, 340, 355, 521, 835, 836, 837, 967, 1017], "17": [109, 132, 224, 225, 227, 231, 232, 238, 255, 262, 268, 284, 285, 286, 358, 582], "ss2023": [110, 111, 114], "06": [110, 111, 212, 213, 230, 259, 290, 291, 292, 317, 340, 358], "30": [110, 111, 170, 179, 189, 194, 241, 358], "handout": 110, "concept": [110, 111, 259, 289, 316, 681, 682, 685, 686, 687, 690, 691, 717, 842, 1113], "toolchain": [110, 111, 163, 214, 294, 310, 808, 982, 983, 988, 989, 991, 992, 993, 994, 995, 996, 997, 1161], "solv": [111, 954, 1113, 1135, 1142], "our": [112, 180, 914], "ece21": 112, "fork": [112, 132, 815], "pull": [112, 132, 472], "request": [112, 132, 449, 767, 769, 788, 790, 948], "upstream": [112, 132, 134], "sync": [112, 779], "onli": [112, 250, 276, 413, 680, 728, 781, 1075], "onc": [112, 340], "updat": [112, 132, 157], "It": [112, 155, 184, 276, 344, 413, 639, 864, 925, 938, 939, 982], "Its": [112, 1019], "fetch": 112, "your": [112, 176, 269, 270, 428, 687, 854], "clone": [112, 163, 167, 180, 522], "merg": 112, "push": [112, 458], "finish": [114, 139, 148, 214, 827], "boil": [115, 116, 117, 118, 124, 132], "pot": [115, 116, 117, 118, 124, 132], "begin": [115, 322, 324, 361, 715], "standup": [115, 116, 117, 118, 119, 123, 127, 131], "record": [115, 116, 117, 118, 119, 123, 127, 131, 195, 1100, 1102], "20": [115, 119, 127, 131, 132, 241, 255, 259, 277, 279, 290, 291, 292, 316, 318, 319, 320, 321, 332, 340, 358, 996], "requir": [115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 131, 218, 249, 296, 299, 342, 453, 465, 486, 489, 508, 509, 510, 514, 515, 516, 517, 518, 519, 520, 687, 935, 942, 1062, 1063, 1084, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1103], "futur": [115, 119, 120, 122, 125, 127, 131, 349, 739], "part": [115, 119, 120, 122, 125, 127, 131, 241, 1148], "Of": [115, 119, 120, 122, 125, 127, 131, 276, 285, 296, 299, 324, 450, 521, 567, 599, 600, 640, 678, 710, 715, 725, 727, 737, 755, 756, 757, 835, 836, 843, 935, 946, 970, 984, 1005, 1008, 1028, 1124, 1130], "statu": [117, 915, 951, 961], "report": 117, "full": [118, 216], "iot": 118, "logger": [119, 120, 121, 122, 472], "sink": [120, 122, 132, 303], "column": [120, 276, 1124, 1125, 1127, 1128, 1129, 1130], "configur": [120, 156, 158, 163, 451, 869, 907, 912, 914, 949], "mqtt": [122, 126, 132, 240, 303, 306, 1100, 1122], "mosquitto": 122, "infrastructur": 123, "percentagedisplai": 123, "composit": [123, 469, 479, 483, 497, 759], "breadboard": 123, "acrobat": 123, "ws2023": [124, 132], "group": [124, 213, 214, 228, 261, 268, 280, 281, 296, 299, 302, 303, 306, 307, 346, 378, 393, 402, 409, 415, 419, 422, 426, 435, 439, 444, 445, 565, 573, 588, 591, 594, 635, 644, 663, 705, 706, 730, 738, 742, 754, 758, 760, 845, 853, 862, 902, 910, 911, 965], "task": [124, 132, 346, 966], "datalogg": [124, 132], "peripher": [124, 132], "client": [124, 216, 503, 1122], "subscrib": [126, 1122], "via": [127, 132, 160, 161, 337, 914], "pwm": [127, 913], "control": [127, 249, 264, 271, 274, 284, 285, 290, 291, 312, 313, 318, 319, 324, 472, 693, 905, 913], "onewir": [129, 508, 524, 525, 914, 942], "05": [132, 209, 212, 243, 249, 252, 255, 258, 284, 285, 286, 288, 289, 332, 333, 340, 358], "vo": 132, "recap": [132, 200, 213, 214, 228, 261, 281, 296, 299, 303, 304, 560, 722, 982, 1008], "polymorph": [132, 214, 317, 514, 515, 516, 517, 518, 519, 520, 523, 640, 729, 748], "collabor": 132, "necessarili": 132, "first": [132, 185, 214, 362, 512, 728, 769, 770, 804, 1141], "round": [132, 490, 504], "organiz": 132, "design": [132, 260, 278, 280, 281, 296, 299, 317, 358, 375, 432, 447, 471, 475, 485, 638, 1162], "At": 132, "larg": 132, "07": [132, 214, 230, 261, 294, 295, 340, 344, 358], "renam": [132, 891], "graz": [133, 175, 177, 184, 222, 358], "branch": [134, 395], "track": [134, 998], "submit": [134, 827, 828], "appli": [134, 155, 1130], "patch": [134, 155], "packag": [136, 139, 157, 163, 180, 261, 278, 296, 302, 333, 808, 987, 990, 1013, 1061, 1133, 1134, 1135, 1136, 1137, 1141], "pypi": [136, 209, 249, 1061, 1106, 1135, 1137], "audio": [137, 141], "chip": [137, 913], "bringup": [137, 140, 914], "get": [138, 151, 181, 232, 317, 739, 796, 821, 946], "debian": [138, 139], "kernel": [138, 139, 140, 144, 153, 155, 199, 358, 443, 772, 781, 782, 783, 784, 785, 786, 800, 802, 808, 809, 841, 844, 909, 912, 1164], "config": [138, 808], "within": 138, "qemu": 138, "extract": [138, 144, 211, 509, 1096, 1098, 1103, 1111], "boot": [138, 151, 162, 358, 844], "etc": [139, 200, 208, 211, 240, 250, 253, 286, 884, 912, 940, 1034, 1084], "yocto": [140, 144, 903], "everyth": [140, 168, 227, 455, 839, 850, 929], "like": [140, 316, 567, 961], "i2": 141, "kontron": 141, "smarc": 141, "modul": [141, 185, 209, 211, 249, 250, 262, 278, 285, 302, 303, 333, 340, 443, 458, 522, 711, 776, 781, 783, 784, 786, 787, 802, 808, 913, 1013, 1103, 1106, 1114, 1140, 1148], "dirti": 142, "upgrad": 142, "path": [142, 163, 211, 221, 227, 234, 461, 759, 840, 892, 994, 999, 1093, 1148], "step": [142, 467, 470, 472, 508, 600, 693, 755, 756, 983, 984, 998, 1018, 1043], "intel": 144, "bsp": 144, "improv": 145, "beginn": [145, 209, 221, 244, 249, 261, 285, 1105, 1106], "split": [145, 171, 234, 240, 314, 332, 1052, 1111], "openshot": 146, "seo": [147, 148], "sitemap": 147, "meta": [147, 148], "stack": [148, 154, 195, 216, 420, 678], "hang": 148, "dbu": [148, 472], "stuff": [148, 317, 340, 433, 844, 878], "extens": 149, "rest": [149, 211, 306, 317, 934], "style": [149, 396, 447, 567, 669, 723, 741, 1051], "convert": [149, 172, 276, 1024, 1102], "rst": 149, "exampl": [149, 234, 240, 244, 336, 369, 373, 408, 410, 430, 433, 469, 508, 593, 618, 669, 670, 688, 689, 690, 691, 717, 726, 832, 850, 852, 853, 901, 925, 929, 934, 937, 955, 980, 1003, 1018, 1038, 1048, 1051, 1052, 1053, 1054, 1075, 1117, 1125, 1130, 1139, 1140], "add": [149, 270, 459, 463, 521, 769, 816, 827, 979, 1022, 1123], "miss": [149, 261, 669, 938], "past": [149, 408], "learn": [150, 271, 342, 1107, 1113], "beagleboard": 151, "how": [151, 154, 162, 184, 214, 232, 377, 416, 441, 442, 443, 577, 715, 725, 851, 864, 867, 1010, 1113], "repair": 151, "nand": 151, "also": [151, 414, 839, 844, 845, 850, 851, 930, 931, 932, 934, 961, 964, 968, 970, 1049, 1113], "40w": 151, "x": [151, 214, 557], "loader": 151, "u": [151, 925], "bootabl": 151, "mmc": 151, "sd": [151, 192], "card": [151, 192, 270, 836], "port": [152, 923], "There": [152, 232, 447, 575, 731, 824, 914, 924, 929, 940, 941], "": [152, 167, 192, 389, 413, 447, 567, 659, 665, 668, 728, 772, 777, 796, 808, 824, 853, 869, 921, 969, 982, 1010, 1014, 1057], "alwai": [152, 232, 252, 703, 939], "better": [152, 364, 449, 818, 1028, 1119], "wai": [152, 211, 232, 240, 437, 970, 1014, 1033], "process": [152, 154, 173, 268, 289, 806, 807, 840, 841, 845, 846, 961, 962, 963, 966, 970], "signal": [152, 176, 423, 737, 955, 978, 979, 980, 981], "aren": 152, "t": [152, 209, 715, 1106], "queue": [152, 195, 737, 825, 956, 975, 976], "timer": [152, 816, 818, 819, 932, 966], "poll": [152, 737, 739], "event": [152, 769, 788, 798, 816, 817, 821, 949, 955, 971, 973], "dispatch": [152, 750, 751, 752], "interrupt": [152, 788, 789, 790, 791, 804, 813, 949, 966], "realtim": [152, 154, 351, 355, 358, 800, 968, 969, 1154, 1163], "save": [153, 725], "solid": [153, 447], "disk": [153, 192, 839], "life": [153, 726, 951], "gentoo": [153, 808], "rant": [153, 173, 452, 984], "swap": [153, 247, 412, 728, 851, 1071], "tmpf": 153, "instanc": [153, 211, 237, 240], "syslog": 153, "var": 153, "mountpoint": 153, "logrot": 153, "o": [153, 211, 221, 227, 234, 235, 240, 247, 249, 250, 282, 286, 289, 291, 332, 369, 792, 849, 850, 851, 874, 887, 929, 930, 931, 932, 933, 934, 943, 944, 964, 1056], "schedul": [153, 289, 350, 351, 355, 841, 845, 951, 964, 965, 967, 968, 969], "ram": 153, "thing": [153, 214, 235, 256, 257, 259], "left": [153, 389, 580], "why": [154, 155, 163, 232, 447, 475, 567, 570, 574, 575, 722, 728, 753, 781, 827, 852, 906, 913, 921, 925, 950, 1003, 1048], "p": 154, "suck": [154, 788], "count": [154, 724, 815, 851, 1090], "consumpt": 154, "conclus": [154, 813, 905, 913], "pthread": 154, "experi": 154, "100": 154, "default": [154, 185, 232, 234, 256, 257, 259, 316, 336, 521, 569, 571, 572, 584, 585, 586, 587, 654, 702, 723, 741, 867, 980, 1048, 1128], "eat": 154, "limit": [154, 1009], "than": [154, 528, 1025], "my": [154, 157, 253, 362, 363, 449, 776, 847, 864], "could": [154, 726], "take": [154, 414, 725, 1028], "doe": [154, 593, 851, 864, 867, 935, 938, 939], "differ": [154, 185, 413, 598, 600, 870, 924], "rpm": [155, 157, 182, 781], "prerequisit": [155, 163, 181, 280, 302, 306, 342, 783, 1061], "rpmbuild": 155, "directori": [155, 180, 181, 347, 449, 450, 522, 759, 835, 836, 853, 858, 859, 860, 861, 870, 871, 872, 879, 886, 887, 890, 891, 896, 924, 935, 983, 984, 1003, 1139], "download": [155, 201, 203, 340, 345, 359, 525, 994, 997, 1153], "For": [155, 157, 163, 241, 244, 268, 271, 273, 274, 277, 279, 322, 358, 370, 495, 569, 580, 665, 693, 714, 739, 843, 929, 994, 995, 996, 1006, 1024, 1093, 1162], "domain": [156, 176, 274, 740], "subdomain": 156, "www": 156, "apex": 156, "microsoft": 157, "team": 157, "screen": [157, 900], "share": [157, 455, 460, 720, 724, 727, 756, 835, 836, 862, 975, 976, 998, 999, 1173], "x11": 157, "reviv": 157, "meh": 157, "annoy": 157, "re": [157, 1005], "regist": [157, 437], "itself": 157, "autostart": 157, "browser": [157, 216], "recommend": [157, 188, 342, 1140, 1161], "deploi": 158, "gener": [158, 162, 172, 181, 185, 190, 217, 224, 227, 232, 234, 240, 259, 261, 265, 271, 274, 278, 280, 281, 285, 292, 294, 302, 303, 304, 306, 310, 314, 398, 527, 568, 571, 575, 693, 694, 696, 697, 702, 761, 914, 921, 948, 983, 984, 1008, 1009, 1010, 1011, 1012, 1037, 1076, 1089, 1161], "public": [158, 211, 462, 569, 835, 836, 860, 861, 921], "repo": [158, 180], "jfasch": [158, 865], "home": [158, 840, 870, 886, 925], "time": [158, 167, 171, 276, 453, 740, 816, 817, 845, 957, 1068], "deploy": [158, 294, 310, 455, 808, 1161], "bigbluebutton": 159, "onlin": [159, 168, 1153], "tl": 159, "dr": 159, "host": [159, 204, 808, 996], "check": [159, 463, 487, 853, 914, 955, 991, 1052, 1072], "els": [159, 227, 234, 240, 250, 280, 302, 306, 371, 395, 396, 397, 574, 589, 891, 908, 921, 1005, 1041, 1044], "traunstein": 160, "zierlersteig": 160, "kaltenbachwildni": 160, "anstieg": 160, "auf": [160, 201], "zierlerberg": 160, "rinn": 160, "abstieg": 160, "grintovec": 161, "plan\u0161arsko": 161, "jezero": 161, "\u010de\u0161ka": 161, "ko\u010da": 161, "anreis": 161, "hinauf": 161, "runter": 161, "zusammenfassung": 161, "brick": 162, "1399": 162, "dell": 162, "xp": 162, "happen": 162, "virtualbox": 162, "secur": [162, 192, 268, 289, 337, 920, 924], "enrol": 162, "machin": [162, 192, 213, 271, 337, 916, 917, 942, 1107, 1113], "owner": [162, 853], "mok": 162, "pair": [162, 665, 919, 921], "stage": 162, "reboot": 162, "diagnost": [162, 912], "crosstool": [163, 995, 996], "ng": [163, 995, 996], "prebuilt": [163, 1130], "repositori": [163, 167, 354, 522, 532], "releas": [163, 452, 790, 800, 1016], "glibc": 163, "version": [163, 449, 452, 455, 665, 693, 938], "gcc": [163, 424, 437, 982], "simplest": [163, 693, 698, 736, 1002, 1025, 1140, 1146], "stdio": 163, "h": [163, 696, 900], "iostream": 163, "distribut": [163, 1061], "afterword": [163, 673], "schulung": [165, 185], "entwicklung": 165, "beratung": 165, "richtlinien": 166, "ver\u00f6ffentlichung": 166, "kursmateri": 166, "window": [167, 204, 221, 277, 279, 360, 847], "workflow": [167, 214], "conflict": [167, 954, 1016], "individu": 168, "languag": [168, 184, 214, 230, 256, 257, 259, 264, 284, 285, 290, 316, 317, 358, 426, 445, 705, 961, 1007, 1029, 1031], "qualivis": [169, 358], "z\u00fcrich": [169, 358], "2013": [169, 358, 1154], "fragen": [169, 202], "antworten": 169, "kursnotizen": 170, "2015": [170, 358], "userspac": [170, 767, 769, 821, 822, 823, 912, 913, 949], "can": [170, 191, 214, 249, 414, 466, 470, 521, 580, 665, 725, 906, 907, 908, 910], "bu": [170, 191, 472, 907, 910, 914], "driver": [170, 199, 270, 358, 785, 786, 804, 912, 1164], "beispiel": [170, 185, 244, 896], "heizungssteuerung": 170, "k\u00f6nnen": [171, 195, 208], "viel": 171, "mutabl": [171, 174, 185, 195, 202, 208, 221, 224, 232, 234, 237, 240, 247, 250, 253, 265, 272, 282, 286, 292, 304, 308, 314, 1046, 1048], "immut": [171, 174, 185, 202, 208, 221, 232, 237, 240, 247, 253, 262, 269, 272, 286, 314, 578, 1046], "kann": [171, 216], "man": [171, 216, 868], "nicht": [171, 185, 195], "oft": 171, "genug": 171, "wiederholen": 171, "hart": 171, "indizieren": 171, "weich": 171, "nettfragen": 171, "shortcut": [171, 1024, 1054], "objektorientiert": 171, "date": [171, 217, 276, 345], "delta": 171, "datetim": [171, 190, 211, 217, 272], "bissl": 171, "potschert": [171, 195], "schreiben": [171, 195], "scho": 171, "formen": 171, "represent": [171, 1027], "__str__": [171, 1022, 1027], "subprocess": [171, 250], "enumer": [171, 195, 200, 202, 208, 211, 232, 240, 247, 265, 282, 304, 314], "zip": [171, 211, 314], "comprehens": [171, 195, 217, 224, 227, 232, 234, 240, 244, 265, 271, 272, 274, 304, 314, 1002, 1008, 1053], "exec": [171, 237, 253, 261, 265, 292, 314, 1006], "eval": [171, 172, 208, 237, 247, 265, 292, 304], "umgebend": 171, "context": [171, 232, 271, 274, 278, 806, 807, 827, 1003, 1006], "eigen": 171, "json": [171, 193, 200, 216, 217, 227, 244, 247, 253, 261, 262, 297, 300, 1102], "individualtrain": [172, 187, 358], "tage": [172, 358], "beginnend": [172, 358], "inhalt": [172, 175, 979, 1156], "51": 172, "58": 172, "94": [172, 185], "121": 172, "famou": [172, 440], "overload": [172, 230, 240, 261, 296, 308, 543, 569, 576, 583, 723, 1025, 1027], "getter": [172, 521, 577], "setter": 172, "listcomprehens": 172, "express": [172, 185, 200, 217, 224, 250, 253, 265, 314, 391, 393, 469, 487, 501, 672, 897, 1008, 1066, 1125], "global": [172, 185, 195, 253, 303, 377, 383, 404, 406, 420, 457, 550, 551, 552, 581, 582, 583, 926, 1001, 1047], "scope": [172, 195, 303, 736, 739, 1001, 1047], "variabl": [172, 195, 208, 211, 221, 224, 232, 240, 247, 250, 262, 282, 286, 308, 314, 320, 335, 363, 377, 380, 383, 404, 406, 412, 431, 487, 551, 578, 582, 708, 737, 840, 926, 955, 956, 963, 1036, 1047, 1071], "closur": [172, 195, 261, 278, 280, 281, 296, 302, 306, 707, 1001, 1003], "between": [172, 586, 1111], "walkthrough": 173, "reduc": [173, 388], "eight": 173, "color": 173, "pil": 173, "numpi": [173, 175, 202, 209, 249, 252, 271, 274, 285, 291, 303, 308, 324, 358, 1106, 1111], "cluster": 173, "excurs": [173, 249, 707], "matplotlib": [173, 202, 221, 253, 291, 308, 314, 1060, 1111], "now": [173, 185], "come": [173, 209, 455, 649, 982, 1106], "let": 173, "kmean": 173, "result": [173, 441, 1118], "properti": [173, 211, 240, 461, 462, 1026], "center": 173, "restor": 173, "alpha": 173, "back": [173, 618, 1102], "rgba": 173, "random": [174, 211, 244, 249, 498, 511, 519, 1126], "type": [174, 200, 224, 227, 237, 240, 247, 256, 257, 259, 261, 262, 276, 278, 296, 299, 300, 304, 316, 336, 379, 381, 382, 386, 393, 418, 428, 433, 452, 462, 571, 600, 621, 622, 665, 666, 669, 680, 682, 719, 741, 746, 748, 749, 779, 788, 883, 890, 953, 1003, 1005, 1018, 1025, 1048, 1113], "except": [174, 211, 227, 230, 237, 240, 252, 253, 261, 271, 274, 278, 279, 296, 299, 312, 318, 324, 351, 543, 590, 591, 659, 708, 715, 739, 1005], "demonstr": 174, "dict": [174, 224, 232, 234, 240, 247, 1024], "access": [174, 213, 371, 424, 425, 569, 577, 585, 651, 741, 745, 747, 749, 750, 751, 752, 759, 792, 821, 822, 823, 1019, 1026, 1053, 1054], "indic": [174, 202], "slice": [174, 185, 200, 211, 234, 240, 244, 265, 286, 292, 845, 1043, 1127, 1129], "protocol": [174, 185, 200, 221, 224, 227, 232, 234, 237, 240, 250, 265, 278, 282, 286, 304, 308, 314, 693, 905, 969, 1010, 1012], "standardthemen": 175, "hauptthema": 175, "numerik": 175, "lesen": [175, 195], "mat": 175, "l\u00f6sen": 175, "uni": 175, "\u00fcbung": [175, 178, 195], "propos": 176, "posix": [176, 737, 950, 959, 972, 974, 975, 976, 977], "ipc": [176, 177, 358, 972, 974, 975, 976, 977, 1173], "virtual": [176, 249, 270, 553, 554, 555, 640, 642, 643, 745, 746, 747, 749, 750, 751, 752, 753, 779, 841, 845, 907, 975, 1093, 1141, 1142, 1143, 1173], "socket": [176, 908, 931], "applic": [176, 966], "compani": 176, "thought": 176, "handgestrickt": 178, "um": 178, "fallen": 178, "lustvol": 178, "erleiden": 178, "programmier": 179, "baden": [179, 358], "w\u00fcrttemberg": [179, 358], "kursinform": 179, "kursaufbau": 179, "kursverlauf": [179, 187], "hand": 180, "privat": [180, 211, 240, 462, 569, 641, 703, 835, 836, 858, 859], "makefil": [181, 522, 776, 786, 983, 984, 998], "argh": 182, "visual": [182, 209, 225, 441, 456, 1106, 1132, 1141], "studio": [182, 209, 225, 1106, 1132, 1141], "flatpak": 182, "issu": [182, 1001], "m": 182, "bei": [184, 195, 358], "firma": [184, 358], "environ": [184, 249, 257, 259, 268, 270, 277, 278, 279, 347, 840, 963, 1030, 1093, 1141, 1142, 1143, 1151], "driven": [184, 213, 238, 249, 252, 280, 281, 302, 303, 306, 358, 971, 1177], "dai": [184, 188, 189, 191, 192, 193, 203, 204, 213, 214, 219, 222, 224, 225, 228, 235, 268, 271, 274, 277, 278, 279, 280, 281, 285, 289, 291, 296, 302, 303, 306, 307, 313, 317, 714, 1068, 1159], "advanc": [184, 188, 191, 200, 203, 212, 228, 238, 241, 252, 261, 264, 274, 280, 281, 282, 283, 284, 285, 290, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 358, 426, 1105, 1106, 1167], "18": [185, 187, 213, 232, 252, 264, 265, 279, 295, 318, 319, 320, 321, 340, 358, 996], "19": [185, 187, 191, 225, 241, 339, 340, 354, 356, 358], "sy": [185, 211, 839, 1035], "multilin": [185, 217, 221, 314, 335, 1050], "docstr": [185, 232, 244, 247, 250, 272, 304, 335], "datentypen": [185, 195, 202, 215, 231, 243], "ausflug": [185, 234], "variablen": [185, 195, 202, 215, 231, 234, 243, 253], "deren": 185, "unterbau": 185, "zuweisung": 185, "mit": [185, 195, 200, 213, 358, 896, 1154, 1170], "hilf": 185, "tupl": [185, 190, 195, 200, 202, 208, 211, 221, 224, 227, 232, 234, 240, 244, 247, 250, 256, 257, 259, 262, 265, 272, 282, 286, 308, 314, 316, 320, 334, 335, 665, 714, 719, 1038, 1046, 1114], "unpack": [185, 190, 195, 200, 202, 211, 227, 232, 244, 250, 256, 257, 259, 262, 272, 308, 314, 316, 334, 335, 665, 714, 719, 994, 1114], "unendlich": 185, "breit": 185, "divis": [185, 195], "floor": [185, 195], "konvertierung": 185, "konstruktoren": [185, 202], "welchen": 185, "typ": [185, 195], "typen": 185, "besser": 185, "laufzeitverhalten": [185, 195], "geeigneter": 185, "datenstrukturen": [185, 195, 196, 216, 234, 1169], "boolean": [185, 195, 221, 224, 232, 234, 240, 244, 247, 314, 320, 385, 469, 1039, 1066, 1125], "short": [185, 224, 240, 385, 479, 788], "circuit": [185, 224, 240, 385], "evalu": [185, 224, 240], "warum": [185, 195], "sind": [185, 195], "mehr": [185, 200], "rang": [185, 190, 195, 202, 211, 217, 221, 224, 232, 234, 237, 244, 247, 250, 256, 257, 259, 262, 272, 286, 292, 303, 316, 599, 600, 665, 693, 713, 714, 715, 716, 717, 718, 1008, 1045, 1060], "foli": 185, "161": 185, "shallow": [185, 234, 1046], "deep": [185, 234, 1046], "dem": [185, 1170], "deepcopi": 185, "funktionen": [185, 195, 196, 200, 1169], "gotcha": [185, 786, 816, 970], "paramet": [185, 232, 234, 278, 336, 375, 411, 414, 417, 431, 449, 453, 678, 682, 717, 728, 808, 938, 983, 1048, 1118], "90": 185, "ff": 185, "lokal": [185, 195, 253], "92": 185, "uniq": [185, 1088, 1089], "punkt": [185, 195], "zusammengefasst": 185, "hier": 185, "sch\u00f6nere": 185, "al": [185, 195, 244], "comprens": 185, "125": 185, "lesbarkeit": 185, "perform": [185, 208, 439, 715], "review": [185, 214], "pprint": 185, "praktisch": 185, "debug": [185, 452, 806, 1004], "datentransform": 185, "127ff": 185, "complet": [185, 543, 868], "collect": [185, 234, 237, 262, 982, 1024, 1124, 1137], "namedtupl": [185, 1024], "parameter\u00fcbergab": [185, 195], "variabel": 185, "lang": 185, "argumentlisten": 185, "erst": 185, "klass": 185, "weiterf\u00fchrend": [187, 209], "workspac": [188, 189, 191, 193], "core": [188, 225, 268, 983], "special": [188, 307, 892], "tutori": [188, 191, 203, 209, 219, 249, 252, 285, 1106], "parti": [188, 219], "v": [190, 195, 202, 208, 211, 232, 237, 240, 244, 247, 253, 269, 272, 282, 286, 297, 334, 335, 373, 382, 394, 397, 401, 403, 452, 455, 562, 563, 564, 578, 724, 732, 748, 786, 806, 807, 813, 814, 928, 964, 1034, 1037, 1045, 1056, 1134], "return": [190, 253, 417, 675, 676, 678, 693], "orient": [190, 240, 253, 261, 264, 265, 278, 280, 281, 284, 285, 290, 296, 299, 302, 303, 306, 307, 312, 318, 324, 328, 447, 567, 638, 1021], "addit": [191, 567, 583, 645, 1022], "brought": 191, "thoma": 191, "cloud": [192, 317, 337], "particip": 192, "desk": 192, "interlud": [192, 788], "bloodi": 192, "wild": [192, 241, 296, 299, 302], "watchdog": 192, "support": [192, 204, 668, 804], "25": [193, 203, 212, 219, 230, 235, 246, 288, 289, 296, 297, 298, 301, 358], "grundlegend": [195, 196, 1169], "sprachelement": [195, 196, 1169], "syntax": [195, 202, 208, 240, 250, 272, 286, 314, 335, 708, 717, 1034], "semantik": 195, "einr\u00fcckung": 195, "ihren": 195, "\u00e4ndern": 195, "kommentar": 195, "sprach": 195, "standarddatentypen": 195, "elementar": [195, 196, 1169], "beliebig": 195, "gro\u00df": 195, "vergleichsoperatoren": 195, "pr\u00e4zedenz": 195, "vor": 195, "strichrechnung": 195, "modulo": 195, "un\u00e4rer": 195, "negat": [195, 1125], "erzwingen": 195, "auch": 195, "zeichenketten": 195, "raw": [195, 202, 217, 221, 234, 240, 262, 292, 1019, 1050, 1101], "f": [195, 217, 232, 250, 292, 314, 1051], "konvertierungen": 195, "pr\u00e4zendenzregeln": 195, "literal": 195, "primit": [195, 731, 1008], "konstanten": 195, "operatoren": 195, "ausdr\u00fcck": 195, "operatorrangfolgen": 195, "\u00fcbungen": [195, 1153], "zwei": 195, "vertauschen": 195, "kontrollstrukturen": [195, 196, 215, 231, 232, 243, 1169], "anweisungen": 195, "folgen": 195, "bedingungen": 195, "verzweigungen": 195, "bedingt": 195, "anweisung": 195, "verzweigung": [195, 196, 1169], "geschachtelt": 195, "mehrfach": 195, "fallauswahl": 195, "schleifen": [195, 196, 1169], "z\u00e4hlergesteuert": 195, "kopfgesteuert": 195, "schleif": [195, 200], "fu\u00dfgesteuert": 195, "jf": 195, "continu": [195, 230, 232, 271, 279, 281, 303, 313, 400, 1041, 1044], "sequenti": [195, 200, 232, 244, 314, 607, 608, 615, 616, 1008, 1042], "schnell\u00fcbersicht": 195, "sprunganweisungen": 195, "endlosschleifen": 195, "ben\u00f6tigt": 195, "Suche": 195, "eindimensional": 195, "tupel": 195, "listen": [195, 200, 234, 335], "sort": [195, 247, 526, 605, 610, 611, 614, 1128], "revers": [195, 612, 613, 630, 631, 632, 1025], "stapel": 195, "schlangen": 195, "versuch": 195, "zur\u00fcck": 195, "hybrid": 195, "supergscheit": 195, "methoden": [195, 196, 1169], "prozeduren": [195, 196, 1169], "funktionspoint": 195, "so": [195, 208, 211, 221, 253, 277, 447, 567, 665, 678, 680, 707, 1127], "heisst": [195, 200], "funktionsobjekt": 195, "primzahlenbeispiel": 195, "funktion": 195, "laufzeitfehl": 195, "existiert": 195, "zuweisen": 195, "fehlerfal": 195, "peter": 195, "unterprogramm": 195, "wert": 195, "referenzen": 195, "r\u00fcckgabewert": 195, "oder": [195, 341, 1154], "inner": [195, 1001], "standardbibliotheken": 195, "built": [195, 278, 571, 669, 786, 1005], "funktionalit\u00e4ten": 195, "struktur": 196, "herdt": [196, 1169], "kapitel": [196, 1169], "ganz": [200, 232], "kurz": 200, "mehreren": 200, "returnwerten": 200, "bzw": [200, 341], "containerdatentypen": 200, "untypisiert": 200, "l\u00f6schen": 200, "begriff": 200, "zufal": 200, "regular": [200, 213, 214, 250, 253, 265, 314, 897], "hallo": 202, "speicher": 202, "sch\u00fctze": 202, "ich": 202, "davor": 202, "aber": 202, "gemischten": 202, "wiederholung": [202, 237], "objektidentit\u00e4t": 202, "statement": [202, 211, 394, 408, 1001, 1003, 1016, 1034, 1040, 1118, 1121], "operationen": 202, "verloren": 202, "interpol": 202, "mittel": [202, 208], "scipi": 202, "shell": [204, 268, 289, 337, 358, 840, 851, 853, 869, 881, 882, 888, 920, 937, 946, 961, 1155], "script": [204, 289, 358, 915, 946, 1013, 1032, 1155], "29": [204, 278, 312, 313, 314, 340, 348, 358], "assign": [208, 234, 240, 247, 308, 335, 390, 487, 568, 574, 575, 675, 676, 678, 723, 1001, 1036, 1043, 1047, 1123], "fun": [208, 247, 261, 1036], "arithmet": [208, 213, 232, 244, 335, 363, 384, 413, 487, 501, 560, 583, 596, 597, 601, 604, 1025, 1037], "complex": [208, 247, 335, 1151], "nur": 208, "sum": [208, 649], "weiter": 208, "dynamisch": 208, "evaluierung": 208, "scienc": [209, 235, 249, 252, 285, 302, 303, 304, 306, 1106], "don": [209, 715, 1106], "batteri": [209, 335, 1052, 1106], "confer": [209, 285, 1106], "talk": [209, 285, 906, 912, 913, 1106], "zipfil": 211, "One": [211, 250, 276, 332, 389, 408, 447, 449, 582, 715, 728, 821, 906, 924, 957, 982, 998], "member": [211, 240, 569, 574, 575, 577, 582, 651, 652, 669, 741], "attribut": [211, 237, 253, 316, 845, 948, 1019, 1026, 1131], "protect": [211, 641, 715, 798], "posit": [211, 567, 999, 1028, 1058], "keyword": [211, 232, 256, 257, 259, 316, 336, 430, 431, 1001, 1028, 1048], "argument": [211, 232, 240, 261, 296, 336, 414, 935, 961, 1004, 1028, 1035, 1048, 1058], "mix": [211, 224, 292, 708, 1082, 1083], "yield": [211, 227, 232, 250, 278, 292, 1008, 1011], "filter": [211, 240, 269, 270, 276, 304, 314, 527, 528, 529, 715, 1125], "nonetyp": [211, 224], "none": [211, 232], "recurs": [211, 416, 575, 672, 759, 870], "fibonacci": [211, 693, 695, 1009, 1076], "sever": 211, "same": [211, 551, 576, 582, 707, 1047, 1140], "oserror": 211, "errno": [211, 926], "platform": [211, 912], "assert": [211, 253, 304], "assertionerror": 211, "27": [212, 230, 246, 296, 297, 298, 301, 310, 311, 358], "predefin": [212, 408, 1151], "stream": [212, 779, 850, 1056], "pcap": [212, 225, 227], "syllabu": [212, 225], "programmieren": [213, 358], "tool": [213, 286, 289, 304, 342, 833, 898, 901, 912, 1166], "massacr": 213, "kick": 213, "encapsul": [213, 433, 573, 739], "flow": [213, 243, 249, 264, 271, 274, 284, 285, 290, 291, 312, 313, 318, 319, 324, 402], "pointer": [213, 214, 230, 256, 257, 259, 277, 279, 317, 410, 411, 413, 415, 431, 543, 560, 575, 579, 580, 596, 597, 598, 600, 601, 604, 624, 665, 680, 720, 721, 722, 723, 725], "standard": [213, 225, 230, 234, 249, 277, 279, 285, 381, 428, 452, 530, 590, 600, 633, 644, 646, 673, 850, 934, 1056, 1106, 1148], "librari": [213, 225, 230, 249, 277, 279, 285, 375, 450, 455, 456, 460, 530, 590, 600, 633, 644, 673, 928, 999, 1000, 1106, 1173], "stl": [213, 543, 559, 560, 561, 592, 600, 601, 629], "kid": 214, "recapitul": 214, "some": [214, 232, 237, 276, 279, 289, 708, 739], "jump": [214, 413], "complic": [214, 492, 998], "Be": [214, 466, 470, 471, 575, 580, 634, 726, 731], "toolbox": 214, "databas": [214, 306, 650, 786, 1062, 1064, 1099, 1115, 1116, 1118], "gtest": [214, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152], "smart": [214, 230, 256, 257, 259, 279, 317, 543, 720, 721, 722, 723], "datenbank": 216, "showcas": 216, "kommt": 216, "db": 216, "aufgab": 216, "formulieren": 216, "damit": 216, "dies": 216, "http": [216, 304], "verbindung": 216, "schicken": 216, "jetzt": 216, "schickman": 216, "weg": 216, "vom": [216, 358], "server": [216, 1122], "php": 216, "j": 216, "empfangen": 216, "nun": 216, "muessen": 216, "verwandlen": 216, "liter": [217, 335, 487, 739, 740], "quot": [217, 221, 247, 1114], "friend": [217, 735], "sinc": [217, 250, 256, 257, 259, 582, 1051], "pars": [217, 1035, 1058, 1084], "sap": [218, 271, 273, 274, 275, 276, 323, 358], "export": 218, "solut": [218, 405, 427, 450, 459, 465, 466, 467, 470, 471, 476, 485, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 575, 602, 632, 669, 671, 678, 702, 703, 712, 746, 845, 864, 923, 925, 929, 998, 1000, 1016, 1142], "terminologi": [221, 289, 842, 980, 1113], "31": [222, 230, 238, 358], "numer": [222, 324], "ai": 222, "mountain": 222, "io": [224, 240, 268, 272, 308, 314, 436, 792, 793, 848, 948], "common": [224, 437, 449, 615, 1009, 1018], "wtf": [224, 932, 980], "creativ": [227, 834, 1022], "shift": [227, 389, 583], "sampl": [227, 728, 810, 865, 1063, 1084, 1105, 1139, 1164], "hmmm": 228, "02": [230, 235, 249, 268, 352, 358, 847], "undefin": [230, 1047], "behavior": [230, 717], "again": [230, 278, 289, 577, 664, 888, 1025, 1155], "26": [230, 260, 267, 280, 281, 282, 283, 302, 303, 305, 340, 358], "repeat": [230, 880], "quickli": 230, "algorithm": [230, 247, 271, 279, 316, 317, 413, 526, 543, 560, 595, 596, 600, 601, 610, 614, 1111, 1113], "functor": [230, 543, 608, 707, 709, 710, 728], "unifi": 230, "model": [230, 1111, 1113], "uml": [230, 479], "todai": [230, 1001], "associ": [230, 392, 479, 619, 620], "dynam": [230, 261, 280, 281, 282, 302, 306, 420, 547, 548, 549, 601, 634, 635, 748, 764, 794, 795, 999, 1019, 1028], "alloc": [230, 316, 437, 557, 602, 627, 628, 635, 744, 746, 779, 802, 944, 1008], "week": 230, "zahl": 232, "miscellanea": 232, "brace": [232, 256, 257, 259, 316, 317, 667, 668, 669, 670, 1125], "singl": [232, 450, 475, 924, 982, 1146], "hour_of_dai": 232, "membership": [232, 1042], "best": 232, "intro": [234, 268, 340, 559, 560, 561, 948, 1002], "doc": [234, 304], "ident": [234, 297], "datenypen": 234, "libarari": 234, "chainmap": 234, "dequ": 234, "suchalgorithmen": 234, "pitfal": [234, 277, 280, 336, 571, 640, 665, 693, 710], "fromkei": [234, 247], "join": [234, 240, 314, 1052, 1079], "lstrip": [234, 332], "rstrip": [234, 332], "sequentiel": 237, "konstant": 237, "suchzeit": 237, "metaprogram": 237, "everywher": [237, 253, 575, 1006], "defaultdict": [237, 262], "hello": [240, 250, 362, 697, 786, 787, 1032], "world": [240, 362, 369, 786, 787, 1032], "blahblah": [240, 244, 247, 250, 314, 600, 1031], "commandlin": [240, 268, 306, 326, 331, 414, 442, 449, 868, 923, 946, 980, 1035, 1058], "lifetim": [240, 377, 406, 710, 724, 732, 1115], "preview": [240, 460], "explicit": [240, 371, 567, 579, 670, 708, 710, 723, 736, 1016], "max": 240, "iteratoren": 240, "generatoren": 240, "ordereddict": 240, "duck": [240, 256, 257, 259, 296, 299, 316, 680, 749, 1018], "resolut": 240, "order": [240, 551, 1005, 1025], "mro": 240, "super": 240, "__bases__": 240, "__mro__": 240, "self": [240, 575, 1020], "call": [240, 407, 411, 437, 441, 443, 543, 811, 928, 934, 963, 969, 1028], "mangl": [240, 576], "udemi": 240, "claus": [240, 280, 302, 306, 1005], "lambda": [240, 256, 257, 259, 286, 316, 317, 665, 706, 707, 708, 709, 728], "oppos": 240, "discuss": [243, 280, 281, 346, 371, 373, 737, 811, 816, 824], "chart": 243, "interact": [244, 292, 1032, 1083], "1st": 244, "explan": [244, 304], "preced": [244, 247, 392, 1037], "float": [244, 247, 304, 1037], "einschub": 244, "vergleich": 244, "filterketten": 244, "zen": 244, "datensatz": 244, "notat": 244, "letzt": 244, "letzten": 244, "infinit": [247, 1009], "long": [247, 665], "comparison": [247, 567, 614, 759, 833, 1025, 1037], "digit": [247, 340, 1073], "english": [247, 342, 1073], "determin": [247, 854, 1070, 1080, 1081], "maximum": [247, 1070, 1080, 1081], "two": [247, 412, 505, 506, 567, 586, 670, 976, 1070, 1071, 1080, 1081], "out": [247, 280, 281, 472, 570, 599, 600, 970, 984, 1001, 1043], "duplic": [247, 450, 592, 937], "encod": [247, 249, 250, 261, 271, 291, 292, 308, 340, 1119], "nest": [250, 403, 416], "itertool": 250, "chain": [250, 811], "destructor": [250, 551, 557, 572, 637, 642, 722], "prient": 252, "next": [252, 436, 701, 1146], "standesregist": 252, "sqlite3": [252, 453, 1062, 1118], "xml": [252, 1131], "tree": [252, 781, 808, 846, 872, 879, 917, 924, 963], "projektabschlusstag": 252, "id": [253, 281, 308, 845, 865, 925, 951, 963, 1154], "anyth": 253, "defin": [253, 459, 571, 708, 1005], "own": [253, 449, 677, 687, 845], "lookup": [253, 535, 536], "vorbesprechung": 255, "legend": 255, "neuerungen": 255, "seit": 255, "2011": [255, 256, 257, 259, 358], "ausblick": 255, "thank": [256, 257, 259], "you": [256, 257, 259, 680], "readablil": [256, 257, 259], "writabl": [256, 257, 259, 935], "err": [256, 257, 259, 316, 624, 680, 714, 719], "bind": [256, 257, 259, 316, 714, 719, 727, 728, 1118], "auto": [256, 257, 259, 316, 665, 680, 713, 714, 955, 1140], "without": [256, 257, 259, 316, 581, 602, 676, 680, 944], "simpli": [256, 257, 259, 317, 925], "deserv": [256, 257, 259], "ag": [256, 257, 259, 655], "overrid": [256, 257, 259, 316, 712], "delet": [256, 257, 259, 316, 548, 617, 703, 868], "strongli": [256, 257, 259, 316, 666], "enum": [256, 257, 259, 316, 429, 666, 776], "deleg": [256, 257, 259, 316, 671], "nullptr": [256, 257, 259, 316, 679], "rvalu": [256, 257, 259, 316, 674, 677, 678], "skeleton": [257, 259, 277, 279, 585, 835, 836], "perfect": [259, 387, 429, 727], "view": [259, 668, 715, 717, 718, 772, 834], "architectur": [260, 358, 447, 665, 704, 808], "pattern": [260, 278, 280, 281, 358, 471, 485, 1009, 1162], "mondai": 260, "tuesdai": 260, "wednesdai": 260, "forc": [261, 386], "front": [261, 280, 302, 1019], "seri": [261, 264, 284, 285, 290, 291, 312, 313, 318, 324, 543, 1092, 1099, 1124], "piec": 261, "go": [261, 937, 1114], "kickoff": [261, 280, 281, 296, 299, 303, 306], "livehack": [261, 270, 449, 472, 674, 771, 1047, 1134, 1141], "Such": [262, 645], "noob": 264, "wsl": [268, 277, 279, 847, 996], "quick": 268, "permiss": [268, 289, 853, 855, 856, 857, 863, 867, 886, 917], "uart": [268, 839], "susi": 268, "untold": [268, 271, 277, 278, 281, 317], "whet": [269, 270], "appetit": [269, 270], "panda": [269, 271, 272, 274, 276, 278, 291, 303, 308, 314, 324, 1111, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "regex": 269, "pipelin": 270, "categori": 270, "payment": 270, "select": [270, 276, 278, 905, 912, 972, 1124, 1125, 1127, 1129, 1146], "uncategor": 270, "dataset": [271, 275, 276, 1110, 1112], "origin": [271, 274, 592, 709, 710, 818, 1114], "automat": [271, 274, 294, 310, 383, 406, 702, 750, 1161], "cleanup": [271, 274, 816, 827], "conversiosn": 272, "outlook": [274, 316], "specif": [274, 957, 1094], "usecas": 276, "drop": [276, 467, 715], "nan": 276, "datafram": [276, 1111, 1124, 1128], "isna": 276, "to_datetim": 276, "dated": 276, "workabl": 276, "usag": [276, 281, 316, 416, 420, 443, 459, 463, 508, 523, 569, 606, 607, 613, 640, 668, 672, 680, 724, 725, 726, 767, 811, 851, 890, 907, 914, 938, 982, 1060], "modifi": [276, 424, 431, 508, 954, 1016, 1046, 1130], "increas": 276, "price": 276, "particular": 276, "store": [276, 424, 472, 954, 1016], "readabl": [276, 427, 739, 940], "combin": [276, 390, 486, 487, 500], "prefer": [277, 279], "ubuntu": [277, 279, 996], "under": [277, 279, 870, 930, 1003], "unsupport": 277, "heavi": [277, 279, 844], "weight": [277, 279], "resourc": [277, 342, 575, 635, 723, 736, 804], "r": [277, 887, 924], "littl": [277, 398, 449, 1031], "concurr": 277, "far": [277, 732, 1113], "fact": [278, 790, 852, 1019, 1022], "fixtur": [278, 524, 759, 1139, 1140, 1150, 1151, 1152], "omin": [278, 1004], "warm": 279, "resolv": 279, "cont": 279, "d": [279, 472], "insid": [280, 281, 577, 582, 677, 678], "construct": [280, 302, 306, 1024, 1041], "emphasi": [280, 302, 306], "recoveri": [280, 281, 302, 303, 306], "broader": 280, "sens": 280, "morn": [281, 285, 289, 291, 303, 313, 317], "pytest": [281, 1138, 1139], "awaken": [285, 313], "bash": [289, 358, 888, 1155], "bourn": [289, 888, 1155], "inspect": [289, 895, 898], "wakeup": [289, 291, 317, 968, 970], "redirect": [289, 848, 849, 850, 851, 874, 887, 937], "pipe": [289, 717, 834, 848, 849, 851, 852, 899, 901], "archiv": [289, 830, 831, 833, 834, 996, 997, 1000], "compress": [289, 830, 831, 833, 834], "network": [289, 489, 802, 803, 906, 931, 1176], "least": [289, 1146], "day2": 291, "interpret": [292, 441, 473, 486, 487, 500, 501, 1083], "len": 292, "abl": 292, "callabl": [292, 728], "summer": [296, 299, 343], "sandbox": [296, 299], "equal": [297, 521, 567, 583, 584, 585, 586, 587, 607, 1025], "spoiler": 299, "annot": 300, "multiprocess": 302, "idea": 302, "veri": [303, 712, 744, 1131], "leftov": 303, "yesterdai": 303, "ifi": 303, "toolcas": [303, 316, 683, 684, 685], "arg": [303, 1004], "kwarg": [303, 1004], "includ": [303, 407, 461, 1052], "receiv": [303, 976], "udp": 303, "datagram": [303, 906], "compositesink": 303, "timestamp": [303, 816], "org": [304, 340], "aaarghhh": 304, "expresss": 304, "constexpr": [316, 672], "constinit": 316, "constev": 316, "want": [316, 640, 665, 676, 680, 703, 776, 781, 939, 1022], "erasur": [316, 746, 748], "classic": [317, 729, 745], "semant": [317, 674, 675, 676, 677, 678, 976], "kochtopf": 317, "roundup": 317, "still": [317, 470, 665, 1003, 1008], "2024": 324, "checker": 325, "blinklicht": [326, 327, 328, 329], "electron": [326, 905], "aspect": 326, "circuitri": 326, "header": [326, 405, 451, 457, 582, 912, 1095], "pinout": [326, 912], "unittest": [329, 1140, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1177], "ece19": 330, "g2": [332, 836], "big": [332, 358, 796], "swoop": 332, "size": [332, 381, 540, 690, 884], "chunk": 332, "line": [332, 376, 408, 570, 851, 868, 1034, 1075, 1086, 1090], "str": [332, 1027], "byte": 334, "btw": 335, "wertebereich": 335, "sidenot": [336, 1048], "pure": [336, 640, 642, 1048], "beauti": [336, 443, 839, 914, 1048], "login": [337, 843, 915], "formalit\u00e4ten": 338, "ec": [339, 354, 356, 835, 836], "daili": 340, "pass": [340, 580], "fail": [340, 939, 1139, 1146, 1148], "reiter": 340, "argpars": [340, 1035, 1058], "deutsch": [341, 358], "lehrinhalt": 341, "lernergebniss": 341, "lv": 341, "empfohlen": [341, 1155, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "verpflichtend": 341, "fachliteratur": 341, "lernressourcen": 341, "instrument": 341, "art": 341, "vermittlung": 341, "voraussetzungen": 341, "begleitbedingungen": 341, "pr\u00fcfungsmethod": 341, "beurteilungskriterien": 341, "mode": [342, 452, 853, 905, 938, 1032, 1056], "deliveri": [342, 979, 980], "co": 342, "requisit": 342, "assess": 342, "criteria": [342, 964], "whose": 344, "fault": 344, "newcom": 345, "jjjj": 348, "sidewai": [349, 582, 728, 739, 1004, 1009], "bisher": 358, "gehalten": 358, "entwickl": 358, "fortgeschritten": [358, 1157], "wiener": 358, "neustadt": 358, "einf\u00fchrung": [358, 1156, 1158, 1165], "ober\u00f6sterreich": 358, "pictur": [358, 796], "obersteiermark": 358, "korn": 358, "salzburg": 358, "ausgew\u00e4hlt": 358, "themen": 358, "2018": 358, "raum": 358, "n\u00fcrnberg": 358, "oberb\u00fcren": 358, "schweiz": 358, "2017": 358, "m\u00fcnchen": [358, 1154], "lowlevel": 358, "refresh": 358, "programmiererstandpunkt": 358, "2016": 358, "wien": 358, "workshop": 358, "bodenseo": 358, "hemmenhofen": 358, "bodense": 358, "systemnah": 358, "2014": 358, "mathia": 358, "kettner": 358, "siemen": 358, "braunschweig": 358, "intermedi": [358, 498, 1001, 1018], "scratch": [358, 1154], "lpd": 358, "hannov": 358, "unter": 358, "k\u00f6ln": 358, "projektverwaltung": 358, "subvers": [358, 1171], "lka": 358, "niedersachsen": 358, "konfigur": 358, "gnu": [358, 441, 982, 1166], "make": [358, 455, 522, 664, 703, 792, 835, 836, 983, 984, 1166], "2012": 358, "hamburg": 358, "fehlerdiagnos": 358, "polizei": 358, "stia": 358, "admont": 358, "bi": 358, "2010": 358, "softwareentwicklung": 358, "darmstadt": 358, "ulm": 358, "bundeswehr": 358, "wildflecken": 358, "cool": [361, 1051], "gui": 361, "Their": [361, 381], "hobbi": 361, "histori": [361, 566, 664, 772, 976, 1001, 1031, 1110], "second": [363, 365], "fahrenheit": [364, 366, 368, 495], "tabl": [364, 366, 368, 521, 1025], "simplif": 365, "constant": [367, 382, 407, 437, 498], "preprocessor": [367, 407, 408], "macro": [368, 407, 408, 457, 767, 788], "outsid": 369, "cat": [369, 893], "poor": [369, 370], "wc": 370, "definit": [371, 373, 375, 383, 401, 403, 404, 407, 459, 582, 665, 745, 747, 749, 751, 767, 968, 1045], "memset": 371, "histogram": 372, "nonsens": 373, "signatur": 373, "declar": [373, 374, 403, 404, 405, 582], "mistak": 375, "stdin": [376, 901, 915], "variant": [381, 470, 476, 665, 741, 750, 751, 752, 976], "qualifi": 381, "width": [381, 413, 587, 600, 913, 1043], "escap": [382, 1050], "logic": 385, "implicit": [386, 725], "sign": 386, "truncat": [386, 944], "propag": 386, "unsign": 386, "compil": [386, 403, 408, 424, 425, 450, 451, 452, 568, 571, 575, 704, 725, 788, 808, 982, 985, 994, 998], "warn": [386, 392, 408, 958, 980], "cast": 386, "increment": [387, 600, 693, 1016], "decrement": [387, 600], "confus": [387, 1037, 1125], "manipul": [389, 725, 944, 980], "bitwis": [389, 1125], "AND": 389, "OR": 389, "xor": 389, "right": [389, 1087], "invert": [389, 1124], "complement": 389, "summari": [392, 567, 728, 808, 834, 999, 1019, 1127, 1129], "true": [395, 470, 580, 1128], "fals": 395, "truth": 395, "option": [395, 442, 457, 458, 459, 834, 868, 870, 890, 897, 912, 924, 1114], "matter": 396, "distinct": 397, "purpos": [398, 948], "closer": 398, "comma": 398, "infam": 398, "idiom": 398, "bodi": 399, "goto": 401, "label": [401, 1129], "monolith": [403, 450, 472, 525], "separ": [403, 404, 450, 472, 737, 892, 998], "static": [406, 430, 521, 581, 582, 748, 998, 999, 1000, 1023], "visibl": [406, 430], "replac": [407, 510, 753], "inlin": [407, 437, 570, 582], "guard": 407, "rule": [408, 447, 568, 571, 582, 670, 678, 715, 846], "span": 408, "stringif": [408, 1027], "token": 408, "address": [410, 779, 822, 845, 912, 966, 1125], "arbitrari": [413, 600, 1004, 1028], "see": [414, 839, 844, 845, 850, 851, 930, 931, 932, 934, 961, 964, 968, 970, 1049, 1113], "struct": [416, 417, 432, 567, 656, 719], "typedef": 418, "alia": 418, "singli": 421, "volatil": [423, 869], "lie": 423, "valid": 423, "handler": [423, 979, 980], "intrins": 424, "atom": [424, 734, 739, 806, 807, 811, 812, 827, 953], "builtin": 424, "align": 425, "unalign": 425, "pad": 425, "saniti": [427, 435, 449], "readabilti": 427, "shoot": 427, "offens": 427, "unobvi": 427, "ambigu": [427, 433, 670], "smell": 427, "know": 428, "size_t": 428, "discret": 429, "tradit": [429, 447, 1028], "approach": [429, 457, 458, 459], "wishlist": 429, "close": [429, 475, 720, 976], "somewhat": 430, "contriv": 430, "hoorai": 430, "correct": [431, 578, 712], "const": [431, 540, 557, 577, 578, 580, 652, 653, 665, 680, 714, 719], "non": [431, 514, 515, 516, 517, 518, 519, 520, 557, 577, 741, 747, 1146], "good": [432, 457, 458, 567, 582, 600, 669, 678, 687, 688, 715, 717], "old": [432, 582, 600, 665, 678, 687, 688, 717], "c99": 432, "explict": 433, "safeti": [433, 449], "scheme": 433, "artifici": [433, 1107], "valgrind": [434, 548], "action": [434, 980], "optim": [436, 437, 438], "bound": [436, 437, 548, 964], "unnecessari": 437, "peephol": 437, "subexpress": 437, "elimin": [437, 725, 746, 1075], "strength": 437, "reduct": 437, "fold": 437, "invari": 437, "unrol": 437, "tail": [437, 899], "cpu": [437, 845, 964, 970], "cach": [438, 459, 715], "multidimension": 438, "thrash": 438, "profil": [440, 441, 443, 444], "donald": 440, "knuth": 440, "toni": 440, "hoar": 440, "larri": 440, "wall": 440, "practic": 440, "brian": 440, "w": 440, "kernighan": 440, "rob": 440, "pike": 440, "gprof": 441, "flat": 441, "callgrind": 442, "analysi": 442, "per": [442, 776, 816, 1151], "kcachegrind": 442, "oprofil": 443, "much": [443, 458, 709, 1003], "wide": 443, "offlin": 443, "graphic": 443, "accomplish": 447, "disclaim": [447, 847], "principl": [447, 475], "yagni": 447, "uncl": 448, "bob": 448, "typic": [449, 846, 950, 966], "bookkeep": 449, "effort": 449, "spaghetti": 449, "concaten": [449, 1123], "input": [449, 850, 1008, 1111], "yyyi": 449, "mm": 449, "where": [449, 455, 844, 982], "testabl": 449, "explicitli": [449, 708, 725], "categor": 449, "net": 449, "place": [449, 526, 571, 612, 835, 836, 1046], "overengin": [449, 582], "boilerpl": [450, 709, 804], "execut": [450, 456, 853, 999, 1005, 1013, 1033, 1082, 1146, 1148], "consist": [450, 779], "paus": 452, "diagram": 452, "cmake_build_typ": 452, "k": [452, 1108], "printf": [452, 569], "popular": [452, 840], "find_packag": 453, "prefix": [455, 1004], "target": [455, 456, 458, 461, 462, 524, 942, 983, 1161], "runpath": 455, "abi": 455, "blacklist": [457, 458], "flag": [457, 646, 794, 934, 1051], "libhello": 457, "bad": [457, 458, 715, 777], "target_compile_definit": 458, "backlist": 458, "availablil": 458, "use_blacklist": 459, "normal": 460, "subdirectori": 461, "reorgan": 461, "i2c": [465, 912, 914], "subhierarchi": 465, "instanti": [465, 472, 621, 682, 741, 774], "adapt": [466, 472, 481, 486, 488, 495, 500, 728], "must": [466, 941], "adapte": 466, "asensor": 466, "real": [466, 574, 665, 726, 865], "measur": [466, 509, 740, 968, 970], "motiv": [467, 470, 486, 487, 583, 666, 669, 671, 680, 682, 707, 713, 828, 1010, 1020, 1026], "insert": [467, 533, 534, 617, 618, 621, 622, 623, 657, 727, 755, 756, 796], "bulk": 467, "6a": 467, "initializer_list": [467, 668, 670], "socialdb": 468, "filesystem": [469, 759, 976], "thermomet": [469, 489, 490, 503, 504, 523], "aggreg": [470, 479, 669], "conret": 470, "realiz": 470, "situat": [470, 925], "constantsensor": 470, "decoratedconstantsensor": 470, "randomsensor": [470, 511], "decoratedrandomsensor": 470, "verifi": [470, 880, 914, 916, 1111], "hold": [470, 1024], "studi": [472, 713, 714, 993], "heat": 472, "dbuslogg": 472, "dbusvaluestor": 472, "either": 472, "stop": [472, 723], "help": [472, 868, 900, 1134, 1141], "observ": [474, 502, 1010], "which": [475, 941, 982], "liskov": 475, "substitut": [475, 580], "segreg": 475, "invers": [475, 969], "proxi": [476, 486, 489, 490, 500, 503, 504], "foundat": 477, "hierarchi": [477, 590, 846, 1005], "hypothet": [477, 1025], "singleton": [478, 491, 492, 493, 505, 506, 507], "connector": 479, "uniniti": [487, 580], "flexibl": [491, 492, 505, 506], "strict": [492, 506], "inflex": [493, 507], "i2csensorfactori": 494, "concret": [494, 505, 506], "i2csensorfactory_vendor1": 494, "stub": [503, 815], "socialinsur": [505, 506], "oegk": [505, 506], "sv": [505, 506], "introduc": [508, 569, 715], "relationship": [508, 642, 643, 1111], "firstnam": 508, "lastnam": [508, 658, 660], "w1sensor": [508, 525], "answer": [508, 707], "try": [512, 590, 723, 1005], "ledstripedisplay_nopoli": 514, "cover": [514, 515, 516, 517, 518, 519, 520, 523], "hysteresis_nopoli": 515, "averagingsensor_nopoli": 516, "constantsensor_nopoli": 517, "mocksensor_nopoli": 518, "randomsensor_nopoli": 519, "mock": 520, "shape": [521, 868], "procedur": 521, "circl": 521, "area": [521, 587], "squar": 521, "massag": 522, "sub": 522, "notfound": 524, "find_is_const": 524, "isol": [524, 1115, 1151], "realiti": 524, "pc": 524, "greater": 528, "odd": 529, "overwrit": 533, "sunni": [534, 536, 539, 935, 939, 940, 941], "uniquifi": 541, "transcript": 543, "malloc": 548, "free": 548, "mismatch": [548, 925], "across": [551, 745, 747, 749, 751], "ownership": [556, 557, 558, 725, 853], "raii": [556, 557, 558, 736], "dealloc": 557, "naiv": [560, 581, 632, 824, 979, 1009, 1124], "ol": [567, 714], "look": [567, 930, 931, 932], "distanc": [567, 586], "length": 567, "manual": [568, 571, 575, 728, 751, 752, 868, 928, 946, 949, 1010], "specifi": [569, 935], "otherwis": 569, "lifecycl": 572, "dragon": [575, 731], "memberwis": 575, "straighforward": 575, "correctli": 575, "underli": [576, 666], "mechan": 576, "just": 576, "pollut": 578, "hidden": [579, 890], "cannot": 580, "easili": 580, "odr": 582, "litt": 582, "defnit": 582, "ostream": [583, 584, 585, 586, 587], "cout": 583, "cuboid": 584, "upon": [584, 586, 587], "point3d": [584, 586], "surfac": 584, "volum": [584, 996], "unari": [585, 586], "rectangl": [586, 587], "coordin": [586, 587], "absolut": [586, 759, 892, 1105], "height": 587, "catch": [590, 1005], "throw": [590, 741], "spirit": [600, 724, 725, 726], "pre": [602, 669], "destin": [602, 935], "back_insert_iter": 602, "binary_search": 605, "intellig": [605, 611, 1012, 1107], "find_if": [608, 658], "customiz": 608, "for_each": 609, "lower_bound": 611, "reverse_copi": [613, 632], "characterist": [615, 618], "modif": [618, 998], "fill": [621, 1118], "definin": 622, "subscript": 623, "eras": 624, "multimap": 626, "deriv": [636, 637], "larger": [640, 1000, 1008], "substr": [645, 1052], "paint": 646, "american": 646, "onto": 646, "moodl": [647, 841, 855, 856, 881, 988], "quiz": [647, 841, 855, 856, 881, 988], "cin": 649, "n": 655, "year": 655, "transform": [656, 728, 756, 1008], "wrong": [659, 739, 935], "great": [664, 966], "around": [665, 693], "school": 665, "item": [665, 727, 755, 756, 757, 1003, 1009], "inevit": 665, "union": [665, 741], "consider": [665, 966], "uniform": 667, "implementor": 668, "direct": [668, 779], "inconsist": 669, "heap": 669, "refus": 669, "narrow": 669, "mess": [670, 1119], "realist": [670, 1006, 1139], "int": [670, 961], "nicolai": 670, "josutti": 670, "complain": 670, "said": 673, "guidelin": 673, "well": 673, "smartptr": 675, "lvalu": [678, 727], "wish": [678, 1018], "theori": 678, "Ones": 678, "sai": [680, 870], "decai": 680, "chosen": 682, "rescu": [682, 707, 729, 984, 1004, 1025, 1130], "syntact": [682, 1004], "variat": [682, 714, 719, 808], "conceptless": [683, 684], "fulfil": 687, "has_siz": 687, "index_returns_doubl": 687, "func": 688, "ret": 691, "doubl": 691, "foreword": 693, "prototyp": 693, "examp": 693, "explain": 693, "drive": [693, 905], "anatomi": [693, 786], "resum": 693, "suspens": 693, "caller": 693, "co_yield": 693, "mimick": 693, "fibo": 694, "suspend": [699, 700, 701], "decis": [704, 964], "cleanli": 704, "care": 707, "handwritten": [709, 710], "proggi": 709, "morph": 709, "possibl": 710, "temporari": [710, 1003, 1139], "made": 710, "hard": [712, 889], "aris": 712, "gool": 714, "prevent": [714, 725], "accident": [714, 756], "dangl": 715, "easi": [715, 732], "constraint": 715, "dogmat": 715, "sigh": 715, "storag": [717, 957], "abbrevi": 717, "avail": [717, 767], "compat": 719, "unique_ptr": [721, 724, 725], "shared_ptr": [721, 724, 756], "handwrit": 723, "ctor": 723, "auto_ptr": 723, "mayb": 723, "uniqu": [724, 757], "But": [724, 747, 939], "juggl": 724, "make_shar": 724, "cyclic": 724, "chanc": 725, "leakag": 725, "keystrok": 725, "make_uniqu": 725, "acknowledg": 725, "prove": 725, "weak_ptr": [726, 756], "borrow": 726, "invalid": 726, "univers": 727, "dual": 727, "bag": [727, 755, 756, 757], "null": 728, "pointlessli": 728, "hardcod": [728, 772], "placehold": 728, "upsid": 729, "technic": 729, "downsid": 729, "joinabl": 732, "detach": [732, 951], "cornercas": 732, "recursive_mutex": 735, "timed_mutex": 735, "recursive_timed_mutex": 735, "lock": [736, 739, 800, 813], "unlock": [736, 813], "consid": 736, "acquisit": [736, 1092], "lock_guard": 736, "condition_vari": 737, "safe": [737, 980], "predic": [737, 955], "concern": 737, "promis": 739, "chrono": [739, 740], "utterli": 739, "becom": [739, 1000], "readi": 739, "minim": 739, "pro": 739, "clock": 740, "sleep": [740, 806, 811, 812], "bad_variant_access": 741, "accessor": 741, "get_if": 741, "fundament": [741, 1029], "crtp": [743, 748], "incomplet": [744, 1121], "bloat": 746, "unrel": 749, "visit": 752, "rel": [759, 892, 1013], "compon": 759, "creation": [759, 840, 951, 952], "create_directori": 759, "entri": 759, "classif": 759, "is_xxx": 759, "directory_entri": 759, "modern": [763, 764, 765, 1159], "slideshow": [764, 767, 769, 772, 774, 777, 779, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 811, 813, 816, 818, 822, 825, 828, 976, 980, 1048, 1135, 1142], "hook": 766, "necessari": 766, "ioctl": [766, 767, 769, 788, 821, 934], "vtabl": 767, "kernelspac": 767, "_io": [767, 788], "major": [771, 772], "minor": [771, 772], "space": [772, 822, 841, 844, 845, 966], "hair": 776, "pretti": 776, "wswitch": 776, "dma": [779, 780, 804], "physic": 779, "scatterlist": 779, "when": 781, "explod": 781, "loadabl": 786, "init": [786, 804, 846, 1154], "exit": [786, 915, 951, 961], "unload": 786, "raspi": [788, 789, 925], "legaci": [788, 1078], "api": [788, 818, 950, 969], "my_activate_gpio": 788, "servic": [790, 846, 1122], "routin": [790, 804], "reserv": 792, "kmalloc": [794, 795, 811], "doubli": [796, 797], "node": [796, 937], "empti": [796, 887, 1019, 1075], "consequ": 798, "rt": [800, 801], "mutual": [800, 813], "exclus": [800, 813], "registr": 802, "layer": 802, "util": [802, 907], "pci": [804, 805], "foremost": 804, "probe": 804, "bar": 804, "rasperri": 808, "crossdev": 808, "artifact": [808, 1108], "bootload": 808, "jjj": 809, "mainten": 810, "spinlock": [811, 813, 814], "spin_lock": 811, "irq": 811, "spin_lock_irqsav": 811, "spin_unlock_irqrestor": 811, "ah": [811, 1119], "bulletproof": 813, "dup": 815, "defer": [816, 827], "jiffi": 818, "wheel": [818, 1061], "get_one_ev": 821, "copy_to_us": 821, "noth": 824, "o_nonblock": 824, "wake": 825, "workqueu": [827, 828, 829], "did": 827, "destroi": [828, 1141], "gzip": 832, "tar": 834, "etiquett": 834, "Being": 834, "g1": 835, "lot": [835, 836], "precondit": [835, 836], "credenti": [835, 854], "backup": [835, 836, 870], "busi": 836, "ok": [839, 961], "serial": 839, "pseudo": 839, "partit": 839, "proc": 839, "authent": [843, 921], "prompt": 843, "verif": [843, 1094], "success": 843, "imperson": 843, "uid": [845, 864, 865], "parent": [846, 963], "child": 846, "subsystem": 847, "0": [847, 961, 1115, 1154], "stdout": [851, 901, 915, 937], "stderr": 851, "trick": [851, 1050], "teacher": 853, "constel": 853, "root": [853, 865], "octal": 853, "tune": [853, 968, 1114], "setuid": [864, 865], "passwd": [864, 884, 940, 1084], "sudo": 864, "password": [864, 1072], "chmod": [864, 1033], "toi": 864, "effect": [865, 980, 1019], "ugli": 866, "sticki": 866, "umask": 867, "edit": 868, "tabul": 868, "filenam": 868, "bashrc": [869, 870], "cp": 870, "similar": 870, "its": [870, 1114], "pwd": 871, "cd": 871, "mkdir": [877, 887], "funni": 878, "dev": 883, "touch": 887, "rm": 887, "rmdir": 887, "mv": 891, "somewher": 891, "cut": [894, 1043], "durchsuchen": 896, "optionen": 896, "verkn\u00fcpfungen": 896, "grep": 897, "less": [900, 1001, 1025], "brushless": 905, "motor": 905, "speed": 905, "esc": 905, "fwd": 905, "rev": 905, "calibr": 905, "exchang": 906, "packet": 906, "vcan": 907, "frame": [908, 1123], "mcp2515": 909, "schemat": 909, "solder": 909, "spi": 909, "lm73": 912, "slave": [912, 914], "master": [912, 914], "enabl": [912, 914], "bcm2835": 912, "datasheet": 912, "connect": [912, 931, 1118], "i2cdetect": 912, "detect": 912, "hwmon": [912, 914], "monitor": [912, 914], "pca9685": 913, "puls": 913, "wire": [913, 914], "ds18b20": 914, "alter": 914, "w1": 914, "attach": 914, "pin": [914, 948], "ds2482": 914, "800": 914, "channel": 914, "announc": 914, "hotplug": 914, "lm": 914, "caveat": [914, 1115], "topologi": 914, "symptom": 914, "adjust": [917, 994], "wear": 921, "admin": 921, "hat": 921, "scp": 924, "sshf": 925, "mount": 925, "logdata": 925, "unmount": 925, "fusermount": 925, "umount": 925, "helper": [926, 1125], "simplic": [930, 931, 932], "watch": 930, "strace": 930, "supervis": 930, "descriptor": [934, 937, 944], "filedescriptor": 934, "offset": [934, 944], "lseek": 934, "hole": 936, "o_creat": 938, "bogu": 938, "o_excl": 939, "alreadi": 939, "o_rdonli": 940, "even": [940, 941, 1067], "o_wronli": 941, "writeabl": 941, "implicitli": 941, "scatter": 944, "gather": 944, "retriev": 946, "wise": 947, "legal": 950, "pthread_join": 951, "synchron": [953, 979], "win32": 955, "reset": 955, "trylock": 960, "islock": 960, "argc": 961, "char": 961, "argv": [961, 1035], "procf": 963, "pid": 963, "ppid": 963, "getpid": 963, "getppid": 963, "multitask": 964, "fair": [964, 968], "runnabl": [964, 970], "bare": 966, "metal": 966, "hm": 966, "awai": [966, 1101], "stabil": 966, "latenc": [968, 970], "nice": 968, "inexact": 968, "immedi": 968, "preempt_rt": 968, "polici": 969, "prioriti": 969, "runn": 969, "frequenc": 970, "scale": 970, "mysteri": 970, "remain": 970, "sysprog": [971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981], "mmap": 975, "segment": 975, "produc": [975, 1009], "consum": 975, "mq_open": 976, "mq_send": 976, "mq_receiv": 976, "mq_close": 976, "mq_unlink": 976, "notif": 976, "mq_notifi": 976, "mqueue": 976, "sem_open": 976, "sem_wait": 976, "sem_post": 976, "sem_clos": 976, "sem_unlink": 976, "barebon": 979, "alarm": 979, "louder": 979, "innoc": 979, "sigalrm": 979, "programmat": 980, "mask": 980, "pend": 980, "sigset_t": 980, "async": 980, "seem": 982, "nm": 982, "agnost": 983, "goodi": 984, "nativ": [985, 990], "sysroot": [985, 994], "linaro": 994, "defunct": 994, "patienc": 994, "against": [994, 999, 1025], "docker": 996, "autoconf": 996, "71": 996, "zoom": 998, "rememb": 998, "reloc": 999, "independ": 999, "pic": 999, "runtim": 999, "versu": 999, "def": 1001, "reach": 1001, "theoret": 1001, "nonloc": 1001, "hood": 1003, "monkeypatch": 1003, "print": [1003, 1028], "contextlib": 1003, "contextmanag": 1003, "involv": 1003, "prefixprint": 1003, "mind": 1004, "sugar": 1004, "functool": [1004, 1025], "rais": 1005, "regardless": 1005, "coverag": 1008, "infin": 1009, "form": 1013, "daemon": 1014, "mother": 1016, "acquir": 1016, "abc": 1018, "late": 1018, "abtract": 1018, "interrelationship": 1021, "salari": 1022, "introspect": 1022, "isinst": 1022, "issubclass": 1022, "classmethod": 1023, "staticmethod": 1023, "_make": 1024, "_asdict": 1024, "dunder": 1025, "compar": 1025, "incompat": 1025, "lotsa": 1025, "magic": 1025, "__gt__": 1025, "term": 1025, "__lt__": 1025, "total_ord": 1025, "them": 1025, "readonli": 1026, "repr": 1027, "__repr__": 1027, "suppli": 1028, "ultim": 1028, "guido": 1031, "van": 1031, "rossum": 1031, "hash": 1033, "bang": 1033, "she": 1033, "doze": 1033, "registri": 1033, "indent": 1034, "cosmet": 1035, "rudimentari": 1035, "python2": 1037, "unicod": 1037, "esoter": 1041, "delimit": 1050, "interv": 1058, "axi": 1060, "setuptool": 1061, "manifest": 1061, "publish": [1061, 1100, 1122], "usernam": 1072, "prime": [1077, 1085, 1091], "strategi": 1084, "revert": 1086, "justifi": 1087, "activ": 1093, "dictread": [1095, 1096, 1114], "cp1252": [1095, 1097], "reader": [1097, 1098, 1114], "nohead": 1097, "both": 1103, "interrel": 1104, "product": 1105, "david": 1106, "beazlei": 1106, "raymond": 1106, "hetting": 1106, "mean": 1108, "linear": [1109, 1111, 1112], "regress": [1109, 1111, 1112], "weather": 1110, "ndarrai": 1111, "plot": 1111, "splice": 1111, "mankind": 1113, "god": 1113, "insan": 1114, "scsv": 1114, "dbapi": [1115, 1117, 1118], "transact": 1115, "postgresql": 1117, "postgr": 1117, "cursor": 1118, "queri": 1118, "ascii": 1119, "iso": 1119, "latin": 1119, "8859": 1119, "lieb": 1119, "gr\u00fc\u00dfe": 1119, "j\u00f6rg": 1119, "\u795d\u597d": 1119, "utf": 1119, "decod": 1119, "broker": 1122, "payload": 1122, "append": 1123, "deprec": 1123, "bitmap": 1125, "neat": 1125, "iloc": [1127, 1128], "Then": 1127, "inplac": 1128, "loc": [1128, 1129], "hiccup": 1129, "inclus": 1129, "lowercas": 1130, "email": 1130, "normalized_email": 1130, "ing": 1130, "elementtre": 1131, "etre": 1131, "sax": 1131, "dom": 1131, "invoc": 1134, "subcommand": 1134, "upload": 1137, "pythonpath": 1139, "mark": 1139, "expect": [1139, 1148], "recogn": 1140, "meat": 1140, "freez": 1141, "recreat": 1141, "fatal": 1146, "failur": 1146, "assert_": 1146, "suit": 1146, "teardown": 1151, "organisatorisch": 1153, "buchung": 1153, "kursablauf": 1153, "kursgestaltung": 1153, "unterlagen": 1153, "grub": 1154, "97": 1154, "bauen": 1154, "prozess": 1154, "verschieden": 1154, "zielpublikum": [1155, 1157, 1158, 1163, 1165, 1170, 1171, 1177], "kursinhalt": [1155, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "vorkenntniss": [1155, 1157, 1158, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1175, 1176, 1177], "three": 1159, "prior": 1161, "beispielen": 1165, "mutter": 1166, "aller": 1166, "woch": 1170, "svn": 1171}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 3, "sphinx": 60}, "alltitles": {"Kontakt": [[0, "kontakt"]], "Navigation": [[0, "navigation"]], "Google Maps": [[0, "google-maps"]], "Google Streetview": [[0, "google-streetview"]], "Curriculum Vitae": [[1, "curriculum-vitae"]], "\u00dcber Mich": [[2, "uber-mich"]], "Projekte": [[3, "projekte"]], "Projekte aus selbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-selbststandiger-tatigkeit"]], "Projekte aus nichtselbstst\u00e4ndiger T\u00e4tigkeit": [[3, "projekte-aus-nichtselbststandiger-tatigkeit"]], "Skills": [[4, "skills"], [149, "skills"]], "Angebot: In-House Schulungen": [[5, "angebot-in-house-schulungen"]], "Zu meiner Person": [[5, "zu-meiner-person"]], "Schwerpunke": [[5, "schwerpunke"]], "C/C++": [[5, "c-c"]], "Python": [[5, "python"], [95, "python"], [340, "python"], [345, "python"]], "Linux": [[5, "linux"], [79, "linux"], [167, "linux"], [904, "linux"]], "Schulungsstil": [[5, "schulungsstil"]], "Preise": [[5, "preise"]], "Course Material": [[6, "course-material"], [448, "course-material"], [1105, "course-material"]], "Einleitung": [[7, "Einleitung"], [205, "Einleitung"]], "Datatypes": [[7, "Datatypes"], [202, "Datatypes"], [205, "Datatypes"], [208, "Datatypes"], [221, "Datatypes"], [224, "Datatypes"], [232, "Datatypes"], [234, "Datatypes"], [240, "Datatypes"], [244, "Datatypes"], [247, "Datatypes"], [250, "Datatypes"], [264, "datatypes"], [271, "datatypes"], [274, "datatypes"], [282, "Datatypes"], [284, "datatypes"], [285, "datatypes"], [286, "Datatypes"], [290, "datatypes"], [291, "datatypes"], [308, "Datatypes"], [312, "datatypes"], [313, "datatypes"], [318, "datatypes"], [324, "datatypes"], [335, "Datatypes"], [1037, "datatypes"], [320, "Datatypes"], [319, "datatypes"]], "Numbers": [[7, "Numbers"], [205, "Numbers"], [208, "Numbers"], [232, "Numbers"], [335, "Numbers"], [1037, "numbers"]], "Integer Numbers": [[7, "Integer-Numbers"], [205, "Integer-Numbers"], [1037, "integer-numbers"]], "Strings": [[7, "Strings"], [202, "Strings"], [205, "Strings"], [208, "Strings"], [217, "Strings"], [221, "Strings"], [221, "id3"], [224, "Strings"], [232, "Strings"], [244, "Strings"], [262, "Strings"], [265, "Strings"], [265, "id1"], [265, "id3"], [272, "Strings"], [308, "Strings"], [335, "Strings"]], "Compound Datatypes": [[7, "Compound-Datatypes"], [205, "Compound-Datatypes"], [217, "Compound-Datatypes"], [221, "Compound-Datatypes"], [224, "Compound-Datatypes"], [227, "Compound-Datatypes"], [232, "Compound-Datatypes"], [234, "Compound-Datatypes"], [240, "Compound-Datatypes"], [244, "Compound-Datatypes"], [247, "Compound-Datatypes"], [250, "Compound-Datatypes"], [262, "Compound-Datatypes"], [286, "Compound-Datatypes"], [292, "Compound-Datatypes"], [304, "Compound-Datatypes"], [308, "Compound-Datatypes"], [1038, "compound-datatypes"], [320, "Compound-Datatypes"]], "Lists (Array in JavaScript, std::vector<> in C++, Array in Java)": [[7, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"], [205, "Lists-(Array-in-JavaScript,-std::vector<>-in-C++,-Array-in-Java)"]], "Dictionary (Key/Value Map in Javascript)": [[7, "Dictionary-(Key/Value-Map-in-Javascript)"], [205, "Dictionary-(Key/Value-Map-in-Javascript)"]], "Set: mathematische Mengen": [[7, "Set:-mathematische-Mengen"], [205, "Set:-mathematische-Mengen"]], "while": [[7, "while"], [205, "while"], [224, "while"], [240, "while"], [272, "while"]], "Functions": [[7, "Functions"], [43, "functions"], [205, "Functions"], [208, "Functions"], [221, "Functions"], [232, "Functions"], [234, "Functions"], [240, "Functions"], [244, "Functions"], [249, "functions"], [265, "Functions"], [272, "Functions"], [286, "Functions"], [302, "functions"], [306, "functions"], [312, "functions"], [313, "functions"], [314, "Functions"], [318, "functions"], [324, "functions"], [373, "functions"], [373, "id1"], [1049, "functions"]], "Python Basics (2021-xx-xx - 2021-yy-yy)": [[8, "python-basics-2021-xx-xx-2021-yy-yy"]], "Training Information": [[8, null], [188, null], [189, null], [191, null], [192, null], [193, null], [194, null], [196, null], [198, null], [199, null], [203, null], [206, null], [209, null], [212, null], [213, null], [214, null], [215, null], [219, null], [222, null], [231, null], [235, null], [238, null], [241, null], [243, null], [246, null], [249, null], [252, null], [261, null], [264, null], [271, null], [274, null]], "\u00dcberblick": [[8, "uberblick"], [196, "uberblick"], [206, "uberblick"], [215, "uberblick"], [231, "uberblick"], [243, "uberblick"]], "Log": [[8, "log"], [136, "log"], [188, "log"], [189, "log"], [192, "log"], [193, "log"], [201, "log"], [203, "log"], [204, "log"], [206, "log"], [209, "log"], [213, "log"], [215, "log"], [219, "log"], [222, "log"], [231, "log"], [243, "log"], [252, "log"]], "Tag 1": [[8, "tag-1"], [179, "tag-1"], [198, "tag-1"], [206, "tag-1"], [209, "tag-1"], [215, "tag-1"], [231, "tag-1"], [243, "tag-1"]], "Tag 2": [[8, "tag-2"], [179, "tag-2"], [198, "tag-2"], [206, "tag-2"], [209, "tag-2"], [215, "tag-2"], [231, "tag-2"], [243, "tag-2"]], "Live-Hacking (Jupyter Notebook)": [[8, "live-hacking-jupyter-notebook"], [196, "live-hacking-jupyter-notebook"], [206, "live-hacking-jupyter-notebook"], [209, "live-hacking-jupyter-notebook"], [219, "live-hacking-jupyter-notebook"]], "Links": [[8, "links"], [39, "links"], [136, "links"], [173, "Links"], [184, "links"], [189, "links"], [191, "links"], [193, "links"], [196, "links"], [203, "links"], [204, "links"], [206, "links"], [215, "links"], [219, "links"], [222, "links"], [225, "links"], [231, "links"], [238, "links"], [249, "links"], [252, "links"], [285, "links"], [291, "links"], [345, "links"], [423, "links"], [672, "links"], [693, "links"], [711, "links"], [722, "links"], [785, "links"], [847, "links"], [868, "links"], [907, null], [914, "links"], [1030, null], [1060, null], [1061, "links"], [1122, "links"], [1124, "links"], [1125, "links"], [1127, "links"], [1128, "links"], [1129, "links"], [1130, "links"], [1142, "links"]], "Programmierung Grundlagen (Jupyter Notebook)": [[9, "programmierung-grundlagen-jupyter-notebook"], [197, "programmierung-grundlagen-jupyter-notebook"], [207, "programmierung-grundlagen-jupyter-notebook"], [233, "programmierung-grundlagen-jupyter-notebook"], [245, "programmierung-grundlagen-jupyter-notebook"]], "Details": [[10, "details"], [78, "details"], [357, "details"]], "Course List": [[11, "course-list"]], "Contents": [[11, null], [24, null], [147, null], [149, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [167, null], [176, null], [180, "contents"], [181, null], [446, "contents"], [548, null], [551, null], [557, null], [560, null], [648, "id1"], [837, "id1"], [857, "id1"], [876, "id1"], [882, "id1"], [885, "id1"], [902, "id1"], [910, "id1"], [911, "id1"], [918, "id1"], [927, "id1"], [943, "id1"], [945, "id1"], [947, "id1"], [962, "id1"], [972, null], [975, null], [989, "id1"], [1009, null], [1064, "id1"], [1065, "id1"], [1069, "id1"], [1078, "id1"], [1092, "id1"], [1099, "id1"], [1146, null], [1148, null], [1151, null], [1159, "contents"], [1162, "contents"]], "Programmierung Grundlagen, anhand von Python (12. und 13.4.2021)": [[11, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"], [358, "programmierung-grundlagen-anhand-von-python-12-und-13-4-2021"]], "Templates for Course Descriptions": [[12, "templates-for-course-descriptions"]], "Sidebar: Course Metadata": [[12, "sidebar-course-metadata"]], "About This Site": [[13, "about-this-site"]], "License: GPLv3": [[13, "license-gplv3"]], "Github": [[13, "github"], [340, "github"]], "Sphinx": [[13, "sphinx"], [66, "sphinx"]], "Installation Instructions": [[13, "installation-instructions"]], "pip and venv": [[13, null]], "Work in Progress": [[13, "work-in-progress"], [135, "work-in-progress"]], "More": [[13, "more"]], "OpenTraining": [[14, "opentraining"]], "Draft Topics": [[15, "draft-topics"]], "Miscellaneous": [[16, "miscellaneous"], [134, "miscellaneous"], [145, "miscellaneous"], [172, "miscellaneous"], [192, "miscellaneous"], [256, "miscellaneous"], [257, "miscellaneous"], [277, "miscellaneous"], [291, "miscellaneous"], [302, "miscellaneous"], [303, "miscellaneous"], [306, "miscellaneous"], [313, "miscellaneous"], [316, "miscellaneous"], [543, "miscellaneous"], [543, "id1"], [679, "miscellaneous"], [742, "miscellaneous"], [944, "miscellaneous"], [957, "miscellaneous"]], "S5 Integration": [[17, "s5-integration"]], "Work in Progress: S5 Web Slides": [[17, "work-in-progress-s5-web-slides"]], "Implementation Notes": [[17, "implementation-notes"], [326, "implementation-notes"]], "Todo": [[17, "id1"], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [149, null], [178, "id1"], [181, "id2"], [181, "id3"], [448, "todo"], [544, "id1"], [547, "id1"], [550, "id1"], [553, "id1"], [556, "id1"], [559, "id1"], [562, "id1"], [765, "id1"], [769, "id1"], [777, "id2"], [971, "id1"], [974, "id1"], [978, "id1"], [1145, "id1"], [1150, "id1"]], "S5 Slide Tests": [[18, "s5-slide-tests"]], "Level 1 Heading": [[19, "level-1-heading"]], "Level 2 Heading": [[19, "level-2-heading"]], "Level 2 Heading, Image": [[19, "level-2-heading-image"]], "Screencasts": [[20, "screencasts"]], "Topics to be Written": [[21, "topics-to-be-written"]], "New Topics to Write": [[21, "new-topics-to-write"]], "Netidee F\u00f6rderantrag": [[22, "netidee-forderantrag"]], "Netidee F\u00f6rderantrag: OpenTraining": [[23, "netidee-forderantrag-opentraining"]], "1. DATEN ANTRAGSTELLER_IN": [[23, "daten-antragsteller-in"]], "2. ALLGEMEINES": [[23, "allgemeines"]], "2.1 Projektname": [[23, "projektname"]], "2.2 Projekt-Untertitel": [[23, "projekt-untertitel"]], "2.3 Allgemeinverst\u00e4ndliche KURZbeschreibung des Projektes": [[23, "allgemeinverstandliche-kurzbeschreibung-des-projektes"]], "2.4 Anschlussf\u00f6rderung": [[23, "anschlussforderung"]], "3. DIE BESONDERE BEDEUTUNG IHRES PROJEKTES F\u00dcR DAS INTERNET (DIE INTERNETNUTZUNG) IN \u00d6STERREICH?": [[23, "die-besondere-bedeutung-ihres-projektes-fur-das-internet-die-internetnutzung-in-osterreich"]], "4. ZIELGRUPPE UND PROJEKTZIEL": [[23, "zielgruppe-und-projektziel"]], "5. L\u00d6SUNG": [[23, "losung"]], "5.1 Beschreibung der Probleml\u00f6sung": [[23, "beschreibung-der-problemlosung"]], "5.2 Wesentliche Elemente eines nachhaltigen Impact NACH netidee Projektende": [[23, "wesentliche-elemente-eines-nachhaltigen-impact-nach-netidee-projektende"]], "6. UMFELDANALYSE": [[23, "umfeldanalyse"]], "6.1 Was ist der Stand der Technik / Methode / des Wissens?": [[23, "was-ist-der-stand-der-technik-methode-des-wissens"]], "6.2 Welche andere L\u00f6sungen/Vorhaben zu den genannten Problemen gibt es schon?": [[23, "welche-andere-losungen-vorhaben-zu-den-genannten-problemen-gibt-es-schon"]], "7. ALLEINSTELLUNGSMERKMAL": [[23, "alleinstellungsmerkmal"]], "8. PROJEKTERGEBNISSE": [[23, "projektergebnisse"]], "8.1 Liste der Projektergebnisse": [[23, "liste-der-projektergebnisse"]], "8.2 Erforderliche Lizenzen Dritter": [[23, "erforderliche-lizenzen-dritter"]], "9. ERFOLGREICHER PROJEKTABSCHLUSS": [[23, "erfolgreicher-projektabschluss"]], "9.1 Ihre sonstigen Aktivit\u00e4ten im Projektbereich": [[23, "ihre-sonstigen-aktivitaten-im-projektbereich"]], "9.2 Angaben zur fachlichen Eignung der MitarbeiterInnen im Projektkernteam": [[23, "angaben-zur-fachlichen-eignung-der-mitarbeiterinnen-im-projektkernteam"]], "9.3 Erfahrung des/der vorgesehenen ProjektleiterIn": [[23, "erfahrung-des-der-vorgesehenen-projektleiterin"]], "9.4 Link zum maximal 2-min\u00fctigen Video des Projektkernteams": [[23, "link-zum-maximal-2-minutigen-video-des-projektkernteams"]], "9.5 Risiken": [[23, "risiken"]], "9.6 Erfolgskriterien am netidee-Projektende": [[23, "erfolgskriterien-am-netidee-projektende"]], "9.7 Angestrebter Impact 3 Jahre nach netidee-Projektende": [[23, "angestrebter-impact-3-jahre-nach-netidee-projektende"]], "10. UMSETZUNG (EINJ\u00c4HRIGES NETIDEE PROJEKT)": [[23, "umsetzung-einjahriges-netidee-projekt"]], "10.1 Wichtige Partner_innen": [[23, "wichtige-partner-innen"]], "10.2 Arbeitsschwerpunkte": [[23, "arbeitsschwerpunkte"]], "10.3 Wesentliche Ressourcen": [[23, "wesentliche-ressourcen"]], "10.4 Nutzer_innen-Kommunikationskan\u00e4le": [[23, "nutzer-innen-kommunikationskanale"]], "11. PROJEKTTERMINE": [[23, "projekttermine"]], "11.1 Termine Projektstart - Projektende": [[23, "termine-projektstart-projektende"]], "Projektstart": [[23, "projektstart"]], "12. KOSTEN UND FINANZIERUNG": [[23, "kosten-und-finanzierung"]], "12.1 Projektkosten": [[23, "projektkosten"]], "Personalkosten": [[23, "personalkosten"]], "Sonstige Kosten": [[23, "sonstige-kosten"]], "Gesamtkosten in \u20ac": [[23, "gesamtkosten-in"]], "12.2 Wir beantragen folgende netidee-F\u00f6rderung": [[23, "wir-beantragen-folgende-netidee-forderung"]], "13.3 Die restlichen Kosten werden finanziert durch": [[23, "die-restlichen-kosten-werden-finanziert-durch"]], "13. SONDERPREIS": [[23, "sonderpreis"]], "14. ERG\u00c4NZENDE ANGABEN": [[23, "erganzende-angaben"]], "14.1 Transparenz Mehrfachantr\u00e4ge": [[23, "transparenz-mehrfachantrage"]], "14.2 Nutzung der WhatAVenture-Plattform": [[23, "nutzung-der-whataventure-plattform"]], "14.3 Das eingereichte Projekt ist Teil einer schulischen Verpflichtung (z.B. HTL Diplomarbeit)": [[23, "das-eingereichte-projekt-ist-teil-einer-schulischen-verpflichtung-z-b-htl-diplomarbeit"]], "14.4 Wie haben Sie von der netidee erfahren? (Mehrfachnennungen m\u00f6glich)": [[23, "wie-haben-sie-von-der-netidee-erfahren-mehrfachnennungen-moglich"]], "16. DATENSCHUTZ": [[23, "datenschutz"]], "Video Screenplay": [[24, "video-screenplay"]], "The Problem And Me": [[24, "the-problem-and-me"]], "Open Source Training Material": [[24, "open-source-training-material"]], "Walk-Through": [[24, "walk-through"]], "Use Case: Custom Training, Subtract Known": [[25, "use-case-custom-training-subtract-known"]], "Use Case: Calculate Minimum Training Duration": [[26, "use-case-calculate-minimum-training-duration"]], "Use Cases": [[27, "use-cases"]], "Trainer": [[27, "trainer"]], "Editor": [[27, "editor"]], "End User (Training Audience)": [[27, "end-user-training-audience"]], "Use Case: Use Training Material From Other Sites": [[28, "use-case-use-training-material-from-other-sites"]], "Use Case: Menu to Choose From": [[29, "use-case-menu-to-choose-from"]], "Use Case: Slide Show Material as Plain-Text Files": [[30, "use-case-slide-show-material-as-plain-text-files"]], "Sending A V4L Camera Device Output Over SSH": [[31, "sending-a-v4l-camera-device-output-over-ssh"]], "Capture Video To File": [[31, "capture-video-to-file"]], "Play Video From Remote System, Using SSH": [[31, "play-video-from-remote-system-using-ssh"]], "Emoji Codes (sphinxemoji)": [[32, "emoji-codes-sphinxemoji"]], "Setup": [[32, "setup"], [264, "setup"], [271, "setup"], [274, "setup"], [284, "setup"], [285, "setup"], [289, "setup"], [290, "setup"], [291, "setup"], [312, "setup"], [313, "setup"], [318, "setup"], [324, "setup"], [905, "setup"], [1030, "setup"], [1141, "setup"], [319, "setup"]], "Most Used Here In This Site": [[32, "most-used-here-in-this-site"]], "All Codes": [[32, "all-codes"]], "Recipes": [[33, "recipes"]], "isoamsa.txt: Added Mathematical Symbols: Arrows": [[34, "isoamsa-txt-added-mathematical-symbols-arrows"]], "isoamsr.txt: Added Mathematical Symbols: Relations": [[35, "isoamsr-txt-added-mathematical-symbols-relations"]], "isonum.txt: Added Mathematical Symbols: Binary Operators": [[36, "isonum-txt-added-mathematical-symbols-binary-operators"]], "Layout Test Page": [[37, "layout-test-page"]], "Admonitions": [[37, "admonitions"]], "Admonition": [[37, "admonition"]], "This is an .. admonition::": [[37, null]], "Tip": [[37, "tip"]], "Note": [[37, "note"]], "Hint": [[37, "hint"]], "Important": [[37, "important"]], "Attention": [[37, "attention"]], "Caution": [[37, "caution"]], "Error": [[37, "error"]], "Danger": [[37, "danger"]], "Sidebar": [[37, "sidebar"]], "Blech Sidebar Title Blah": [[37, null]], "Sidebar \u201cKursdaten\u201d": [[37, "sidebar-kursdaten"]], "Kursdaten": [[37, null], [1155, null], [1156, null], [1157, null], [1158, null], [1163, null], [1165, null], [1166, null], [1170, null], [1171, null], [1172, null], [1173, null], [1175, null], [1176, null], [1177, null]], "Local Content": [[37, "local-content"]], "Local Heading 1": [[37, "local-heading-1"], [37, "id3"]], "Local Heading 1.1": [[37, "local-heading-1-1"], [37, "id4"]], "Local Heading 1.2": [[37, "local-heading-1-2"], [37, "id5"]], "Local Heading 2": [[37, "local-heading-2"], [37, "id6"]], "Sidebar with Local Content": [[37, "sidebar-with-local-content"]], "Bleh Content Blah": [[37, null]], "To Do": [[37, "to-do"]], "mmlalias.txt: MathML aliases for entities from other sets": [[38, "mmlalias-txt-mathml-aliases-for-entities-from-other-sets"]], "Most used": [[38, "id1"]], "All": [[38, "id2"]], "reStructuredText Cheat Sheet": [[39, "restructuredtext-cheat-sheet"]], "Further Information": [[39, "further-information"], [137, "further-information"], [212, "further-information"], [213, "further-information"], [235, "further-information"], [331, "further-information"], [340, "further-information"], [727, "further-information"]], "Local Documents": [[39, "local-documents"]], "External Links": [[39, "external-links"]], "Section References": [[39, "section-references"]], "Section That We Refer To": [[39, "section-that-we-refer-to"]], "Another Section Contains a Link To The Referred Section Above": [[39, "another-section-contains-a-link-to-the-referred-section-above"]], "Footnotes": [[39, "footnotes"]], "Sphinxish": [[40, "sphinxish"]], "Jupyter Notebooks": [[40, "jupyter-notebooks"]], "Running Sphinx From Source": [[40, "running-sphinx-from-source"]], "Seminar on \u201cClean Code\u201d (2022-04-13)": [[41, "seminar-on-clean-code-2022-04-13"]], "Seminar Agenda and Timeline": [[41, "seminar-agenda-and-timeline"]], "Live Hacking Before (Formal) Unit Testing": [[42, "live-hacking-before-formal-unit-testing"]], "Initial Structure": [[42, "initial-structure"]], "Snippets": [[42, null], [42, null], [42, null], [42, null], [42, null], [42, null], [44, null], [44, null], [50, null], [50, null]], "User": [[42, "user"]], "UserDB": [[42, "userdb"]], "bin/userdb-write-binaryfile.cpp": [[42, "bin-userdb-write-binaryfile-cpp"]], "Extend UserDB To Write": [[42, "extend-userdb-to-write"]], "Extend UserDB To Read From File, And Iterate": [[42, "extend-userdb-to-read-from-file-and-iterate"]], "Bug: Use \u201cFaschingbauer\u201d As Last Name": [[42, "bug-use-faschingbauer-as-last-name"]], "Wrap Up: What Do We Have?": [[42, "wrap-up-what-do-we-have"]], "Clean Code: Messages From The Book": [[43, "clean-code-messages-from-the-book"]], "Survey": [[43, null], [447, null]], "Names": [[43, "names"]], "Comments": [[43, "comments"]], "Formatting": [[43, "formatting"]], "Objects and Data Structures": [[43, "objects-and-data-structures"]], "Error Handling": [[43, "error-handling"], [926, "error-handling"]], "Boundaries": [[43, "boundaries"]], "Unit Tests": [[43, "unit-tests"], [524, "unit-tests"]], "Classes": [[43, "classes"], [211, "Classes"], [296, "classes"]], "Live Hacking: Switch To googletest": [[44, "live-hacking-switch-to-googletest"]], "Git Submodule": [[44, "git-submodule"]], "Establish Tests: Demo": [[44, "establish-tests-demo"]], "Straightforward main() Conversion": [[44, "straightforward-main-conversion"]], "Fix Shortcomings": [[44, "fix-shortcomings"]], "Is Software A Craft? Software Is A Craft!": [[45, "is-software-a-craft-software-is-a-craft"]], "09:00-09:15 Introductory Words": [[45, "introductory-words"]], "09:15-10:00 Software Engineering: A Discipline? (What Have We Established?)": [[45, "software-engineering-a-discipline-what-have-we-established"]], "10:00-10:15 Coffee Break": [[45, "coffee-break"]], "10:15-11:00 Establishing \u201cThe Project\u201d (Live Hacking, Slides)": [[45, "establishing-the-project-live-hacking-slides"]], "11:00-12:00 Enter Unit Testing Frameworks": [[45, "enter-unit-testing-frameworks"]], "12:00-13:00 Lunch Break": [[45, "lunch-break"]], "13:00-14:00 Cornerstones From The \u201cClean Code\u201d Book": [[45, "cornerstones-from-the-clean-code-book"]], "14:00-14:45 Keeping Code Clean In The Small": [[45, "keeping-code-clean-in-the-small"]], "14:45-15:00 Coffee Break": [[45, "id1"]], "15:00-23:59 \u201cExtreme Programming\u201d Session": [[45, "extreme-programming-session"]], "UserDB::find() Crashes If User Not Found": [[46, "userdb-find-crashes-if-user-not-found"]], "State": [[46, "state"]], "Bugs": [[47, "bugs"], [53, "bugs"]], "Existing Files Are Overwritten": [[48, "existing-files-are-overwritten"]], "UserDB::read(): What If Done Twice?": [[49, "userdb-read-what-if-done-twice"]], "UserDB: Alternative Output Format - CSV": [[50, "userdb-alternative-output-format-csv"]], "Write CSV: Test": [[50, "write-csv-test"]], "Write CSV: Frontend Program": [[50, "write-csv-frontend-program"], [50, "id1"]], "Read CSV: Test": [[50, "read-csv-test"]], "Features": [[51, "features"]], "Search By Other Indexes": [[52, "search-by-other-indexes"]], "Backlog: What Needs To Change, Or We Will All Die": [[53, "backlog-what-needs-to-change-or-we-will-all-die"]], "Refactoring After Featuritis": [[53, "refactoring-after-featuritis"]], "BackingStore Has Too Many Responsibilities \u27f6 Interface": [[54, "backingstore-has-too-many-responsibilities-longrightarrow-interface"]], "UserDB Has Too Many Responsibilities \u27f6 BackingStore": [[55, "userdb-has-too-many-responsibilities-longrightarrow-backingstore"]], "BackingStore": [[55, "backingstore"]], "Refactoring": [[56, "refactoring"], [525, "refactoring"], [816, "refactoring"]], "Load From BackingStore in Constructor": [[57, "load-from-backingstore-in-constructor"]], "UserDB::{read,write}(): bool, Really?": [[58, "userdb-read-write-bool-really"]], "Submission: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[59, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"], [62, "submission-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Biography": [[59, "biography"], [62, "biography"]], "Abstract": [[59, "abstract"], [62, "abstract"]], "Description": [[59, "description"], [62, "description"], [478, "description"], [630, "description"], [646, "description"], [649, "description"], [651, "description"], [652, "description"], [653, "description"], [654, "description"], [655, "description"], [656, "description"], [657, "description"], [658, "description"], [660, "description"], [661, "description"]], "Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[60, "pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Installation Notes": [[61, "installation-notes"]], "libgpiod": [[61, "libgpiod"]], "Fedora: Prepare Tarballs": [[61, "fedora-prepare-tarballs"]], "On The Pi: Build And Install": [[61, "on-the-pi-build-and-install"]], "Hochk\u00f6nig": [[64, "hochkonig"]], "K\u00f6nigsjodler (Klettersteig)": [[64, "konigsjodler-klettersteig"]], "Tour: Werfen - Ostpreussenh\u00fctte - Matrashaus - Werfen": [[64, "tour-werfen-ostpreussenhutte-matrashaus-werfen"]], "Blog": [[65, "blog"], [149, "blog"]], "Articles": [[65, "articles"]], "In the Works": [[65, "in-the-works"]], "Not Yet in the Works": [[65, "not-yet-in-the-works"]], "Revisit Existing Posts": [[65, "revisit-existing-posts"]], "pending_xref": [[66, "pending-xref"]], "C++": [[67, "c"], [110, "c"], [111, "c"], [149, "c"], [662, "c"]], "C++: Building with CMake": [[68, "c-building-with-cmake"]], "C++: Interfaces": [[69, "c-interfaces"]], "C++: OO Basics": [[70, "c-oo-basics"]], "C++: Unit Testing": [[71, "c-unit-testing"]], "Graph": [[72, "graph"], [648, "graph"], [809, "graph"], [1064, "graph"], [1065, "graph"], [1069, "graph"], [1078, "graph"], [1092, "graph"], [1099, "graph"]], "Embedded Computing 1": [[73, "embedded-computing-1"], [78, "embedded-computing-1"]], "Current Curriculum": [[73, "current-curriculum"], [74, "current-curriculum"]], "Topics": [[73, "topics"], [74, "topics"], [98, "topics"], [99, "topics"], [101, "topics"], [102, "topics"], [103, "topics"], [104, "topics"], [148, "topics"], [184, "topics"], [184, "id2"], [212, "topics"], [249, "topics"], [252, null], [344, "topics"], [348, "topics"], [378, "topics"], [393, "topics"], [402, "topics"], [409, "topics"], [415, "topics"], [419, "topics"], [422, "topics"], [426, "topics"], [435, "topics"], [439, "topics"], [444, "topics"], [445, "topics"], [565, "topics"], [573, "topics"], [588, "topics"], [591, "topics"], [594, "topics"], [610, "topics"], [616, "topics"], [620, "topics"], [628, "topics"], [633, "topics"], [635, "topics"], [638, "topics"], [644, "topics"], [662, "topics"], [663, "topics"], [667, "topics"], [674, "topics"], [681, "topics"], [692, "topics"], [705, "topics"], [706, "topics"], [716, "topics"], [721, "topics"], [730, "topics"], [738, "topics"], [742, "topics"], [754, "topics"], [758, "topics"], [760, "topics"], [762, "topics"], [920, "topics"], [938, null], [940, null], [940, null], [959, "topics"], [965, "topics"], [986, "topics"], [992, "topics"], [993, "topics"], [1013, null], [1021, "topics"], [1116, "topics"], [1126, "topics"], [1138, "topics"], [1144, "topics"]], "Dependency Graph": [[73, "dependency-graph"], [74, "dependency-graph"]], "Embedded Computing 2": [[74, "embedded-computing-2"], [78, "embedded-computing-2"]], "EX: Race Conditions": [[75, "ex-race-conditions"]], "EX: Avoiding Race Condition": [[76, "ex-avoiding-race-condition"]], "Goals": [[76, "goals"], [82, "goals"], [83, "goals"], [84, "goals"], [85, "goals"], [87, "goals"], [88, "goals"], [89, "goals"], [91, "goals"]], "Outcome": [[76, "outcome"], [82, "outcome"], [83, "outcome"], [84, "outcome"], [85, "outcome"], [191, "outcome"]], "Git Introduction": [[77, "git-introduction"]], "Embedded Computing 2019": [[78, "embedded-computing-2019"]], "Overview": [[78, "overview"], [675, "overview"], [723, "overview"], [737, "overview"], [739, "overview"], [745, "overview"], [747, "overview"], [749, "overview"], [750, "overview"], [751, "overview"], [752, "overview"], [759, "overview"], [833, "overview"], [844, "overview"], [901, "overview"], [912, "overview"], [913, "overview"], [914, "overview"], [914, "id1"], [915, "overview"], [950, "overview"]], "Knowledge Transferred": [[78, "knowledge-transferred"]], "Course Setup": [[78, "course-setup"]], "Introduction to Linux and Unix": [[80, "introduction-to-linux-and-unix"]], "Linux Hardware Device Management": [[81, "linux-hardware-device-management"]], "EX: Averaging Sensor": [[82, "ex-averaging-sensor"]], "EX: Averaging Sensor (parallel)": [[83, "ex-averaging-sensor-parallel"]], "EX: LED Temperature Display": [[84, "ex-led-temperature-display"]], "Hardware": [[84, "hardware"], [85, "hardware"]], "EX: Temperature Sensors": [[85, "ex-temperature-sensors"], [92, "ex-temperature-sensors"]], "GPIO": [[86, "gpio"]], "sysfs Interface": [[86, "sysfs-interface"]], "gpiod Interface": [[86, "gpiod-interface"]], "Multithreading": [[87, "multithreading"], [170, "multithreading"], [230, "multithreading"], [256, "multithreading"], [257, "multithreading"], [259, "multithreading"], [302, "multithreading"], [303, "multithreading"], [306, "multithreading"], [316, "multithreading"], [348, "multithreading"], [355, "multithreading"], [738, "multithreading"], [979, "multithreading"], [1015, "multithreading"]], "Avoiding Race Conditions: Semaphore/Mutex": [[88, "avoiding-race-conditions-semaphore-mutex"]], "Communication: Waiting for Something": [[89, "communication-waiting-for-something"]], "Python Basics": [[90, "python-basics"]], "EX: Averaging Sensor, Display": [[91, "ex-averaging-sensor-display"]], "Simple Web Programming": [[93, "simple-web-programming"]], "Sensors Web Pages": [[94, "sensors-web-pages"]], "Embedded Computing 2020": [[96, "embedded-computing-2020"]], "SS2022": [[97, "ss2022"]], "Block 1: Linux, and Working With Remote/Embedded Devices": [[97, "block-1-linux-and-working-with-remote-embedded-devices"], [114, "block-1-linux-and-working-with-remote-embedded-devices"]], "Block 2: C on Linux: Local and Cross Development": [[97, "block-2-c-on-linux-local-and-cross-development"], [114, "block-2-c-on-linux-local-and-cross-development"]], "Block 3: C++": [[97, "block-3-c"], [114, "block-3-c"]], "2022-03-08": [[98, "id1"]], "Homework": [[98, "homework"], [99, "homework"], [101, "homework"], [104, "homework"]], "2022-03-10": [[99, "id1"]], "2022-03-10 (Homework until 2022-03-21)": [[100, "homework-until-2022-03-21"]], "From Exercises: Create/Copy/Move/Remove": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-cp-mv-mkdir-rm-group"]], "From  Exercises: The ls Command": [[100, "from-trainings-material-soup-linux-basics-shell-exercises-ls-group"]], "2022-03-21": [[101, "id1"]], "2022-03-22, 2022-03-24 (KU)": [[102, "ku"]], "2022-03-28": [[103, "id1"]], "2022-04-01": [[104, "id1"]], "SS2022: Logs": [[105, "ss2022-logs"]], "WS2022": [[106, "ws2022"]], "Plan: Evolution": [[106, "plan-evolution"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Questions About Code)": [[107, "fh-joanneum-embedded-computing-ws2022-2023-questions-about-code"]], "Question 1: C++ Inheritance": [[107, "question-1-c-inheritance"]], "Question 2: C++ Inheritance": [[107, "question-2-c-inheritance"]], "Question 3: Memory Leak": [[107, "question-3-memory-leak"]], "Question 4: std::vector": [[107, "question-4-std-vector"]], "FH Joanneum (Embedded Computing): WS2022/2023 (Yes/No Questions)": [[108, "fh-joanneum-embedded-computing-ws2022-2023-yes-no-questions"]], "Cross Development": [[108, "cross-development"], [268, "cross-development"], [985, "cross-development"], [986, "cross-development"]], "C++, OO": [[108, "c-oo"]], "Lab Exam 2023-01-17": [[109, "lab-exam-2023-01-17"]], "Project Setup": [[109, "project-setup"], [523, "project-setup"], [1093, "project-setup"]], "Exercises": [[109, "exercises"], [167, "exercises"], [172, "exercises"], [204, "exercises"], [214, "exercises"], [214, "id1"], [214, "id3"], [272, "Exercises"], [277, "exercises"], [296, "exercises"], [296, "id1"], [299, "exercises"], [303, "exercises"], [476, "exercises"], [478, "exercises"], [485, "exercises"], [513, "exercises"], [530, "exercises"], [532, "exercises"], [573, "exercises"], [588, "exercises"], [638, "exercises"], [662, "exercises"], [758, "exercises"], [992, "exercises"], [1021, "exercises"], [1065, "exercises"]], "Exam Submission": [[109, "exam-submission"]], "SS2023: Exam 2023-06-30 (Handout)": [[110, "ss2023-exam-2023-06-30-handout"]], "UNIX/Linux Concepts": [[110, "unix-linux-concepts"], [111, "unix-linux-concepts"]], "Toolchain": [[110, "toolchain"], [111, "toolchain"]], "SS2023: Exam 2023-06-30 (Solved)": [[111, "ss2023-exam-2023-06-30-solved"]], "Working with Git In Our FH-ECE21 Project": [[112, "working-with-git-in-our-fh-ece21-project"]], "Forks And Pull Requests": [[112, "forks-and-pull-requests"]], "Multiple Pull Requests: Pulling Upstream Changes (\u201cSyncing\u201d A Fork)": [[112, "multiple-pull-requests-pulling-upstream-changes-syncing-a-fork"]], "Creating A Remote for Upstream (Done Only Once)": [[112, "creating-a-remote-for-upstream-done-only-once"]], "Updating The Fork (\u201cSyncing\u201d It From Its Upstream)": [[112, "updating-the-fork-syncing-it-from-its-upstream"]], "Fetch upstream Into Your Clone": [[112, "fetch-upstream-into-your-clone"]], "Merge upstream/main Into Local main": [[112, "merge-upstream-main-into-local-main"]], "Push Into Fork On Github": [[112, "push-into-fork-on-github"]], "Embedded Computing 2021": [[113, "embedded-computing-2021"]], "SS2023": [[114, "ss2023"]], "Finish: Written Exam": [[114, "finish-written-exam"]], "(DONE) Boiling Pot (The Beginning)": [[115, "done-boiling-pot-the-beginning"]], "Standup Records": [[115, "standup-records"], [116, "standup-records"], [117, "standup-records"], [118, "standup-records"], [119, "standup-records"], [123, "standup-records"], [127, "standup-records"], [131, "standup-records"]], "2023-11-20": [[115, "id1"], [119, "id1"], [127, "id1"], [131, "id1"]], "2023-12-14": [[115, "id2"], [116, "id1"], [119, "id2"], [127, "id2"]], "Requirements": [[115, "requirements"], [116, "requirements"], [117, "requirements"], [118, "requirements"], [119, "requirements"], [120, "requirements"], [121, "requirements"], [122, "requirements"], [123, "requirements"], [125, "requirements"], [127, "requirements"], [131, "requirements"], [465, "requirements"], [489, "requirements"], [520, "requirements"]], "Implementation": [[115, "implementation"], [119, "implementation"], [120, "implementation"], [122, "implementation"], [125, "implementation"], [127, "implementation"], [131, "implementation"], [524, "implementation"]], "Testing": [[115, "testing"], [119, "testing"], [120, "testing"], [122, "testing"], [125, "testing"], [127, "testing"], [131, "testing"], [270, "testing"]], "Future (Not Part Of This Development Cycle)": [[115, "future-not-part-of-this-development-cycle"], [119, "future-not-part-of-this-development-cycle"], [120, "future-not-part-of-this-development-cycle"], [122, "future-not-part-of-this-development-cycle"], [125, "future-not-part-of-this-development-cycle"], [127, "future-not-part-of-this-development-cycle"], [131, "future-not-part-of-this-development-cycle"]], "Dependencies": [[115, "dependencies"], [116, "dependencies"], [117, "dependencies"], [118, "dependencies"], [119, "dependencies"], [120, "dependencies"], [121, "dependencies"], [122, "dependencies"], [123, "dependencies"], [124, "dependencies"], [125, "dependencies"], [126, "dependencies"], [127, "dependencies"], [131, "dependencies"], [326, "dependencies"], [327, "dependencies"], [328, "dependencies"], [329, "dependencies"], [331, "dependencies"], [454, "dependencies"], [471, "dependencies"], [485, "dependencies"], [513, "dependencies"], [530, "dependencies"], [532, "dependencies"], [543, "dependencies"], [610, "dependencies"], [616, "dependencies"], [620, "dependencies"], [628, "dependencies"], [630, "dependencies"], [633, "dependencies"], [638, "dependencies"], [646, "dependencies"], [647, "dependencies"], [649, "dependencies"], [651, "dependencies"], [652, "dependencies"], [653, "dependencies"], [654, "dependencies"], [655, "dependencies"], [656, "dependencies"], [657, "dependencies"], [658, "dependencies"], [659, "dependencies"], [660, "dependencies"], [661, "dependencies"], [667, "dependencies"], [674, "dependencies"], [681, "dependencies"], [692, "dependencies"], [716, "dependencies"], [721, "dependencies"], [746, "dependencies"], [835, "dependencies"], [836, "dependencies"], [837, "dependencies"], [841, "dependencies"], [855, "dependencies"], [856, "dependencies"], [857, "dependencies"], [876, "dependencies"], [881, "dependencies"], [882, "dependencies"], [885, "dependencies"], [918, "dependencies"], [920, "dependencies"], [927, "dependencies"], [933, "dependencies"], [935, "dependencies"], [943, "dependencies"], [945, "dependencies"], [947, "dependencies"], [959, "dependencies"], [962, "dependencies"], [986, "dependencies"], [988, "dependencies"], [989, "dependencies"], [992, "dependencies"], [993, "dependencies"], [1014, "dependencies"], [1016, "dependencies"], [1062, "dependencies"], [1063, "dependencies"], [1066, "dependencies"], [1067, "dependencies"], [1068, "dependencies"], [1070, "dependencies"], [1071, "dependencies"], [1072, "dependencies"], [1073, "dependencies"], [1074, "dependencies"], [1075, "dependencies"], [1079, "dependencies"], [1080, "dependencies"], [1081, "dependencies"], [1082, "dependencies"], [1083, "dependencies"], [1085, "dependencies"], [1086, "dependencies"], [1087, "dependencies"], [1088, "dependencies"], [1089, "dependencies"], [1090, "dependencies"], [1091, "dependencies"], [1093, "dependencies"], [1094, "dependencies"], [1095, "dependencies"], [1096, "dependencies"], [1097, "dependencies"], [1098, "dependencies"], [1100, "dependencies"], [1101, "dependencies"], [1102, "dependencies"], [1103, "dependencies"], [1116, "dependencies"], [1119, "dependencies"], [1122, "dependencies"], [1126, "dependencies"], [1138, "dependencies"], [1144, "dependencies"]], "Boiling Pot: Basic Integration": [[116, "boiling-pot-basic-integration"]], "Boiling Pot: Display, And Status Reporting": [[117, "boiling-pot-display-and-status-reporting"]], "Boiling Pot: Full Integration (Display And IoT)": [[118, "boiling-pot-full-integration-display-and-iot"]], "(DONE) Data Logger": [[119, "done-data-logger"]], "Data Logger: CSV Sink": [[120, "data-logger-csv-sink"]], "Column name configuration": [[120, "column-name-configuration"]], "output()": [[120, "output"]], "Data Logger: Integration": [[121, "data-logger-integration"]], "Data Logger: MQTT Sink": [[122, "data-logger-mqtt-sink"]], "MQTT Implementation: mosquitto": [[122, "mqtt-implementation-mosquitto"]], "Installation": [[122, "installation"], [360, "installation"], [925, "installation"], [1060, "installation"], [1122, "installation"], [1146, "installation"]], "Wrapper": [[122, "wrapper"]], "Display Interface/Infrastructure": [[123, "display-interface-infrastructure"]], "New Interface PercentageDisplay": [[123, "new-interface-percentagedisplay"]], "Existing Implementations": [[123, "existing-implementations"]], "Composite Display": [[123, "composite-display"]], "Testing: Breadboard Acrobatics, Demo Program": [[123, "testing-breadboard-acrobatics-demo-program"]], "WS2023/24: Group Project - Tasks": [[124, "ws2023-24-group-project-tasks"]], "Tasks": [[124, "tasks"], [132, "tasks"], [966, "tasks"]], "Datalogger": [[124, "datalogger"], [132, "datalogger"]], "Boiling Pot": [[124, "boiling-pot"], [132, "boiling-pot"]], "Peripherals": [[124, "peripherals"], [132, "peripherals"]], "Client": [[124, "client"], [1122, "client"]], "libgpiod Switch": [[125, "libgpiod-switch"]], "Python MQTT Subscriber": [[126, "python-mqtt-subscriber"]], "Notes": [[126, "notes"], [465, "notes"]], "Temperature Display: LED Via A PWM Controller": [[127, "temperature-display-led-via-a-pwm-controller"]], "(DONE) Sensor Interface": [[128, "done-sensor-interface"]], "(DONE) Onewire Sensor": [[129, "done-onewire-sensor"]], "(DONE) Switch Interface": [[130, "done-switch-interface"]], "SysFS GPIO Switch": [[131, "sysfs-gpio-switch"], [132, "sysfs-gpio-switch"]], "WS2023/24": [[132, "ws2023-24"]], "2023-10-05 (6 VO)": [[132, "vo"]], "OO: Recap": [[132, "oo-recap"]], "Plan \ud83d\udcaa": [[132, "plan-muscle"]], "OO: Polymorphism": [[132, "oo-polymorphism"]], "Git Collaboration (via Github, but not necessarily): Forks And Pull Request": [[132, "git-collaboration-via-github-but-not-necessarily-forks-and-pull-request"]], "Tasks, First Round": [[132, "tasks-first-round"]], "2023-11-03 (6 VO)": [[132, "id1"]], "Organizational": [[132, "organizational"]], "OO: Design?": [[132, "oo-design"]], "Project": [[132, "project"], [132, "id3"], [132, "id5"], [132, "id7"], [132, "id9"], [132, "id11"], [132, "id13"], [172, "project"]], "Hardware Overview": [[132, "hardware-overview"]], "2023-11-09 (3 VO)": [[132, "id2"]], "2023-11-10 (3 VO)": [[132, "id4"]], "2023-11-17 (3 VO)": [[132, "id6"]], "OO, And Software Development At Large": [[132, "oo-and-software-development-at-large"]], "Updating A Fork From Upstream": [[132, "updating-a-fork-from-upstream"]], "2023-11-20 (6 VO)": [[132, "id8"]], "Container Templates (std::map)": [[132, "container-templates-std-map"]], "New Tasks: MQTT And CSV Sink Implementations": [[132, "new-tasks-mqtt-and-csv-sink-implementations"]], "Datalogger Pull Request": [[132, "datalogger-pull-request"]], "Boiling Pot, Switches": [[132, "boiling-pot-switches"]], "2023-12-07 (6 VO)": [[132, "id10"]], "Structure": [[132, "structure"], [149, "structure"], [508, "structure"]], "Renames": [[132, "renames"]], "2023-12-14 (6 VO)": [[132, "id12"]], "Embedded Computing (FH Joanneum Graz)": [[133, "embedded-computing-fh-joanneum-graz"]], "Git Notes": [[134, "git-notes"]], "Bring Local Branch Upstream": [[134, "bring-local-branch-upstream"]], "Create Remote Tracking Branch": [[134, "create-remote-tracking-branch"]], "Create, Submit, Apply Patches": [[134, "create-submit-apply-patches"]], "Packaging this Site on PyPI": [[136, "packaging-this-site-on-pypi"]], "Audio Chip Bringup": [[137, "audio-chip-bringup"]], "Goal": [[137, "goal"], [139, "goal"], [140, "goal"], [142, "goal"], [277, "goal"], [279, "goal"], [1159, "goal"], [1162, "goal"]], "Findings": [[137, "findings"]], "Get Debian 10 Kernel Config": [[138, "get-debian-10-kernel-config"]], "Run Debian within Qemu": [[138, "run-debian-within-qemu"]], "Extract Kernel Config from /boot": [[138, "extract-kernel-config-from-boot"]], "Finish: Debian Kernel Package etc.": [[139, "finish-debian-kernel-package-etc"]], "Yocto Kernel Bringup on Customer Hardware": [[140, "yocto-kernel-bringup-on-customer-hardware"]], "Open Questions: Everything Works Like Before?": [[140, "open-questions-everything-works-like-before"]], "I2S Audio for a Kontron SMARC Module": [[141, "i2s-audio-for-a-kontron-smarc-module"]], "Dirty Upgrade Path": [[142, "dirty-upgrade-path"]], "Steps": [[142, "steps"]], "Wait for Customer Hardware": [[143, "wait-for-customer-hardware"]], "Extract Kernel from Intel Yocto BSP": [[144, "extract-kernel-from-intel-yocto-bsp"]], "Python Training Improvements": [[145, "python-training-improvements"]], "Beginner Course": [[145, "beginner-course"]], "Exercise Structure": [[145, "exercise-structure"]], "Split Exercises": [[145, "split-exercises"]], "Creating Screencasts": [[146, "creating-screencasts"]], "OpenShot": [[146, "openshot"]], "SEO": [[147, "seo"]], "Sitemap": [[147, "sitemap"]], "Meta Information": [[147, "meta-information"]], "Courses": [[147, "courses"]], "Stacks (Hanging)": [[148, "stacks-hanging"]], "DBus (New Topic)": [[148, "dbus-new-topic"]], "Finish Meta/SEO and Stuff": [[148, "finish-meta-seo-and-stuff"]], "Miscellaneous To Do": [[149, "miscellaneous-to-do"]], "Extensions": [[149, "extensions"]], "reST Todos": [[149, "rest-todos"]], "Styling": [[149, "styling"]], "Convert to RST/S5": [[149, "convert-to-rst-s5"]], "Examples": [[149, "examples"], [469, "examples"], [669, "examples"], [717, "examples"], [832, "examples"], [934, null]], "Convert Existing Content": [[149, "convert-existing-content"]], "Add Missing": [[149, "add-missing"]], "References, Past Trainings": [[149, "references-past-trainings"]], "About": [[149, "about"]], "Learning The Web": [[150, "learning-the-web"]], "Beagleboard: How to Repair NAND (also known as 40W)": [[151, "beagleboard-how-to-repair-nand-also-known-as-40w"]], "Basics": [[151, "basics"], [222, "basics"], [249, "basics"], [264, "basics"], [284, "basics"], [285, "basics"], [285, "id1"], [290, "basics"], [291, "basics"], [291, "id1"], [312, "basics"], [318, "basics"], [324, "basics"], [335, "Basics"], [403, "basics"], [589, "basics"], [601, "basics"], [621, "basics"], [719, "basics"], [834, "basics"], [950, "basics"], [1058, "basics"]], "Getting X-Loader and U-Boot": [[151, "getting-x-loader-and-u-boot"]], "Creating a Bootable MMC/SD card": [[151, "creating-a-bootable-mmc-sd-card"]], "Repairing the NAND": [[151, "repairing-the-nand"]], "Writing X-Loader to NAND": [[151, "writing-x-loader-to-nand"]], "Writing U-Boot to NAND": [[151, "writing-u-boot-to-nand"]], "Porting to Linux (There\u2019s Always A Better Way)": [[152, "porting-to-linux-there-s-always-a-better-way"]], "Processes are Threads": [[152, "processes-are-threads"]], "Signals Aren\u2019t Messages": [[152, "signals-aren-t-messages"]], "References": [[152, null], [152, null], [152, null], [224, "References"], [227, "References"], [580, "references"]], "Message Queues aren\u2019t Message Queues": [[152, "message-queues-aren-t-message-queues"]], "Semaphores and Mutexes": [[152, "semaphores-and-mutexes"]], "Timers": [[152, "timers"]], "Polling": [[152, "polling"]], "Event Dispatching": [[152, "event-dispatching"]], "Interrupts": [[152, "interrupts"], [791, "interrupts"]], "Realtime": [[152, "realtime"], [968, "realtime"], [1154, "realtime"]], "Saving Solid State Disk Life (Gentoo)": [[153, "saving-solid-state-disk-life-gentoo"]], "Rant": [[153, "rant"], [173, "Rant"], [984, null]], "No Swap": [[153, "no-swap"]], "tmpfs instances here and there": [[153, "tmpfs-instances-here-and-there"]], "Syslog, /var/log/messages": [[153, "syslog-var-log-messages"]], "Mountpoint for messages": [[153, "mountpoint-for-messages"]], "Logrotate": [[153, "logrotate"]], "Kernel I/O Scheduler": [[153, "kernel-i-o-scheduler"]], "Use RAM for the Kernel Build": [[153, "use-ram-for-the-kernel-build"]], "Things that are left": [[153, "things-that-are-left"]], "\u201cWhy ps Sucks\u201d or \u201cCounting Memory Consumption\u201d": [[154, "why-ps-sucks-or-counting-memory-consumption"]], "Process Stack Management": [[154, "process-stack-management"]], "Conclusion": [[154, "conclusion"], [154, "id1"], [905, "conclusion"], [913, "conclusion"]], "Thread (pthread) Stack Management": [[154, "thread-pthread-stack-management"]], "Experiment #1: 100 default threads, eating no stack": [[154, "experiment-1-100-default-threads-eating-no-stack"]], "Experiment #2: 100 default threads, eating up stack": [[154, "experiment-2-100-default-threads-eating-up-stack"]], "Experiment #3: 100 threads with limited stack": [[154, "experiment-3-100-threads-with-limited-stack"]], "Experiment #4: more threads than my system could take (eat no stack)": [[154, "experiment-4-more-threads-than-my-system-could-take-eat-no-stack"]], "Experiment #5: more threads than my system could take (eat stack)": [[154, "experiment-5-more-threads-than-my-system-could-take-eat-stack"]], "How does this work?": [[154, "how-does-this-work"]], "Realtime is different": [[154, "realtime-is-different"]], "Patching and Building the Fedora Kernel": [[155, "patching-and-building-the-fedora-kernel"]], "Why?": [[155, "why"], [921, "why"], [1003, "why"]], "Find Kernel Source (Git), Fix It, and Create Patch": [[155, "find-kernel-source-git-fix-it-and-create-patch"]], "Link": [[155, null], [155, null]], "Prepare the RPM Build": [[155, "prepare-the-rpm-build"]], "Install Prerequisites": [[155, "install-prerequisites"]], "Setup rpmbuild Directory": [[155, "setup-rpmbuild-directory"]], "Download and Install Source RPM For Crashing Kernel": [[155, "download-and-install-source-rpm-for-crashing-kernel"]], "Apply the Patch": [[155, "apply-the-patch"]], "Build the Kernel RPMs": [[155, "build-the-kernel-rpms"]], "Install Kernel": [[155, "install-kernel"]], "Adding a Custom Domain to a Github Pages Project Site": [[156, "adding-a-custom-domain-to-a-github-pages-project-site"]], "Configure a Subdomain, www.faschingbauer.me": [[156, "configure-a-subdomain-www-faschingbauer-me"]], "Configure an Apex Domain, faschingbauer.me": [[156, "configure-an-apex-domain-faschingbauer-me"]], "Using Microsoft Teams on Linux": [[157, "using-microsoft-teams-on-linux"]], "Screen Sharing: X11 Revival": [[157, "screen-sharing-x11-revival"]], "RPM Package (Meh!)": [[157, "rpm-package-meh"]], "Updated on 2020-04-09": [[157, null]], "Annoyance #1: Keeps Running in Background": [[157, "annoyance-1-keeps-running-in-background"]], "Annoyance #2: (Re)Registers Itself For Autostart": [[157, "annoyance-2-re-registers-itself-for-autostart"]], "Run In Browser (My Recommendation)": [[157, "run-in-browser-my-recommendation"]], "Deploying Sphinx Generated Documentation to Github Pages": [[158, "deploying-sphinx-generated-documentation-to-github-pages"]], "Create \u201cSite Publication Repo\u201d": [[158, "create-site-publication-repo"]], "Configure Github Pages for jfasch-home-pages": [[158, "configure-github-pages-for-jfasch-home-pages"]], "Time for Deployment": [[158, "time-for-deployment"]], "Using BigBlueButton for Online Training": [[159, "using-bigbluebutton-for-online-training"]], "In this Article": [[159, null], [160, null], [162, null]], "TL;DR": [[159, "tl-dr"]], "Background Information": [[159, "background-information"]], "Hosting Setup": [[159, "hosting-setup"]], "BigBlueButton Installation": [[159, "bigbluebutton-installation"]], "Functionality Check": [[159, "functionality-check"]], "What Else?": [[159, "what-else"], [908, "what-else"], [921, "what-else"]], "Traunstein via Zierlersteig": [[160, "traunstein-via-zierlersteig"]], "Kaltenbachwildnis": [[160, "kaltenbachwildnis"]], "Anstieg auf den Zierlerberg": [[160, "anstieg-auf-den-zierlerberg"]], "Die Rinne": [[160, "die-rinne"]], "Abstieg": [[160, "abstieg"]], "Grintovec (via Plan\u0161arsko Jezero, \u010ce\u0161ka Ko\u010da)": [[161, "grintovec-via-plansarsko-jezero-ceska-koca"]], "Anreise": [[161, "anreise"]], "\u010ce\u0161ka Ko\u010da": [[161, "ceska-koca"]], "Hinauf": [[161, "hinauf"]], "Runter": [[161, "runter"]], "Zusammenfassung": [[161, "zusammenfassung"]], "How to Brick a \u20ac1399 Dell XPS 13": [[162, "how-to-brick-a-1399-dell-xps-13"]], "What Happened?": [[162, "what-happened"]], "VirtualBox, Fedora, and Secure Boot": [[162, "virtualbox-fedora-and-secure-boot"]], "Enrolling Machine Owner Key (MOK)": [[162, "enrolling-machine-owner-key-mok"]], "Generate Key Pair": [[162, "generate-key-pair"]], "Stage Key for Enrollment": [[162, "stage-key-for-enrollment"]], "Reboot, Brick": [[162, "reboot-brick"]], "Diagnostics": [[162, "diagnostics"]], "Building A Cross Toolchain For The Raspberry Pi, Using crosstool-ng": [[163, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"], [995, "building-a-cross-toolchain-for-the-raspberry-pi-using-crosstool-ng"]], "Why This Article? Why Not Use A Prebuilt Toolchain?": [[163, "why-this-article-why-not-use-a-prebuilt-toolchain"]], "Installing crosstool-ng": [[163, "installing-crosstool-ng"]], "Prerequisites": [[163, "prerequisites"], [1061, "prerequisites"]], "Installing From Cloned Git Repository": [[163, "installing-from-cloned-git-repository"]], "Installing From Release Tarball": [[163, "installing-from-release-tarball"]], "PATH, And Basic Test": [[163, "path-and-basic-test"]], "Configure Toolchain Build": [[163, "configure-toolchain-build"]], "Base Configuration For The Raspberry": [[163, "base-configuration-for-the-raspberry"]], "Important: glibc Version": [[163, "important-glibc-version"]], "The Error": [[163, "the-error"], [163, "id4"]], "The Fix": [[163, "the-fix"], [163, "id5"]], "Important: GCC Version": [[163, "important-gcc-version"]], "Toolchain Build/Install": [[163, "toolchain-build-install"]], "Test": [[163, "test"], [788, "test"]], "Simplest: C, <stdio.h>": [[163, "simplest-c-stdio-h"]], "C++, <iostream>": [[163, "c-iostream"]], "C++, <thread>": [[163, "c-thread"]], "Packaging/Distributing The Toolchain": [[163, "packaging-distributing-the-toolchain"]], "Afterword": [[163, "afterword"]], "Posts": [[164, "posts"]], "Linux und Open Source": [[165, "linux-und-open-source"]], "Schulung": [[165, "schulung"]], "Entwicklung": [[165, "entwicklung"]], "Beratung": [[165, "beratung"]], "Richtlinien zur Ver\u00f6ffentlichung von Kursmaterial": [[166, "richtlinien-zur-veroffentlichung-von-kursmaterial"]], "Installing Git": [[167, "installing-git"]], "Windows": [[167, "windows"]], "Workflow": [[167, "workflow"]], "Cloning the Repository": [[167, "cloning-the-repository"]], "Exercise Time": [[167, "exercise-time"]], "Conflicts": [[167, "conflicts"]], "Trainer\u2019s Notes": [[167, "trainer-s-notes"]], "Courses: Overview": [[168, "courses-overview"]], "Online Trainings": [[168, null]], "Individual Trainings": [[168, null]], "Everything About Linux": [[168, "everything-about-linux"]], "Programming Languages": [[168, "programming-languages"]], "Miscellaneous but Related": [[168, "miscellaneous-but-related"]], "Qualivision, Z\u00fcrich, 1.10.2013": [[169, "qualivision-zurich-1-10-2013"]], "Fragen und Antworten": [[169, "fragen-und-antworten"]], "Kursnotizen: Linux Embedded 2015-11-30": [[170, "kursnotizen-linux-embedded-2015-11-30"]], "GPIOs in Userspace": [[170, "gpios-in-userspace"]], "CAN Bus": [[170, "can-bus"], [191, "can-bus"]], "Driver Beispiele": [[170, "driver-beispiele"]], "Heizungssteuerung": [[170, "heizungssteuerung"]], "Live Hacking": [[171, "Live-Hacking"], [605, "live-hacking"], [606, "live-hacking"], [608, "live-hacking"], [609, "live-hacking"], [612, "live-hacking"], [613, "live-hacking"], [614, "live-hacking"], [626, "live-hacking"]], "Strings k\u00f6nnen viel: split()": [[171, "Strings-k\u00f6nnen-viel:-split()"]], "Mutability, Immutability: kann man nicht oft genug wiederholen": [[171, "Mutability,-Immutability:-kann-man-nicht-oft-genug-wiederholen"]], "Dictionaries": [[171, "Dictionaries"], [200, "Dictionaries"], [272, "Dictionaries"], [286, "Dictionaries"], [335, "Dictionaries"], [1054, "dictionaries"]], "\u201cHartes\u201d Indizieren \u2026": [[171, "\u201cHartes\u201d-Indizieren-\u2026"]], "\u201cWeiches\u201d Nettfragen \u2026": [[171, "\u201cWeiches\u201d-Nettfragen-\u2026"]], "Shortcuts": [[171, "Shortcuts"]], "Objektorientierte Programmierung": [[171, "Objektorientierte-Programmierung"]], "Inheritance": [[171, "Inheritance"], [211, "Inheritance"], [1022, "inheritance"]], "Date and Time and Time Deltas - datetime": [[171, "Date-and-Time-and-Time-Deltas---datetime"]], "Bissl potschert zum Schreiben is scho \u2026 (andere Formen von import)": [[171, "Bissl-potschert-zum-Schreiben-is-scho-\u2026-(andere-Formen-von-import)"]], "String Representations: __str__()": [[171, "String-Representations:-__str__()"]], "subprocess": [[171, "subprocess"], [250, "subprocess"]], "enumerate(), zip()": [[171, "enumerate(),-zip()"]], "List Comprehension": [[171, "List-Comprehension"], [195, "List-Comprehension"], [234, "List-Comprehension"], [304, "List-Comprehension"], [314, "List-Comprehension"], [1008, "list-comprehension"], [1053, "list-comprehension"]], "exec(), eval()": [[171, "exec(),-eval()"]], "Umgebender Context": [[171, "Umgebender-Context"]], "Eigener Context": [[171, "Eigener-Context"]], "json": [[171, "json"], [247, "json"]], "Python Individualtraining (5 Tage, beginnend 28.10.2019)": [[172, "python-individualtraining-5-tage-beginnend-28-10-2019"], [358, "python-individualtraining-5-tage-beginnend-28-10-2019"]], "Inhalt": [[172, null], [175, null], [979, null], [1156, "inhalt"]], "Slide 51, \u201cExercises: Basics\u201d": [[172, "slide-51-exercises-basics"]], "Slide 58, \u201cExercises: While Loop\u201d": [[172, "slide-58-exercises-while-loop"]], "Slide 94, \u201cExercises: Lists, Loops, Functions\u201d": [[172, "slide-94-exercises-lists-loops-functions"]], "Slide 121, \u201cExercises: Strings\u201d": [[172, "slide-121-exercises-strings"]], "Famous Generator Introduction": [[172, "famous-generator-introduction"]], "eval(): Convert a String into a Python Data Structure": [[172, "eval-convert-a-string-into-a-python-data-structure"]], "Operator Overloading": [[172, "operator-overloading"], [230, "operator-overloading"], [240, "Operator-Overloading"], [261, "operator-overloading"], [296, "operator-overloading"], [543, "operator-overloading"], [569, "operator-overloading"], [583, "operator-overloading"], [1025, "operator-overloading"]], "Getters and Setters": [[172, "getters-and-setters"]], "More on Listcomprehensions and Generator Expressions": [[172, "more-on-listcomprehensions-and-generator-expressions"]], "More on Local and Global Scope and Global Variables": [[172, "more-on-local-and-global-scope-and-global-variables"]], "Closures: Between Local and Global": [[172, "closures-between-local-and-global"]], "Goals of this Training": [[173, "Goals-of-this-Training"]], "Exercise": [[173, "Exercise"], [214, "exercise"], [256, "exercise"], [256, "id1"], [257, "exercise"], [259, "exercise"], [268, "exercise"], [277, "exercise"], [299, "exercise"], [340, "exercise"], [346, "exercise"], [465, "exercise"], [466, "exercise"], [467, "exercise"], [469, "exercise"], [470, "exercise"], [473, "exercise"], [474, "exercise"], [659, "exercise"]], "Walkthrough: Reduce Image to Eight Colors": [[173, "Walkthrough:-Reduce-Image-to-Eight-Colors"]], "Load Image from File: PIL": [[173, "Load-Image-from-File:-PIL"]], "Image as NumPy Array": [[173, "Image-as-NumPy-Array"]], "Preparation before Clustering": [[173, "Preparation-before-Clustering"]], "Excursion: matplotlib": [[173, "Excursion:-matplotlib"]], "Now Comes the Clustering": [[173, "Now-Comes-the-Clustering"]], "Let KMeans find eight clusters \u2026": [[173, "Let-KMeans-find-eight-clusters-\u2026"]], "Use the result: output-properties": [[173, "Use-the-result:-output-properties"]], "Clusters be their Centers": [[173, "Clusters-be-their-Centers"]], "Post Processing: Restore Alpha, Back into RGBA": [[173, "Post-Processing:-Restore-Alpha,-Back-into-RGBA"]], "Random Live Hacking": [[174, "Random-Live-Hacking"]], "Data Types": [[174, "Data-Types"], [304, "Data-Types"]], "Mutable, Immutable": [[174, "Mutable,-Immutable"]], "Exception, demonstrated using dict access": [[174, "Exception,-demonstrated-using-dict-access"]], "Indices and Slicing": [[174, "Indices-and-Slicing"]], "for loops": [[174, "for-loops"]], "Iterator protocol": [[174, "Iterator-protocol"], [237, "Iterator-protocol"]], "Python (12.11.2019 - 14.11.2019 in Graz)": [[175, "python-12-11-2019-14-11-2019-in-graz"]], "Material": [[175, null], [177, null], [339, null]], "Standardthemen": [[175, "standardthemen"]], "Das Hauptthema: Numerik, NumPy": [[175, "das-hauptthema-numerik-numpy"]], "Lesen von .mat Files": [[175, "lesen-von-mat-files"]], "L\u00f6sen einer Uni-\u00dcbung": [[175, "losen-einer-uni-ubung"]], "Proposal": [[176, "proposal"]], "Signals": [[176, "signals"]], "Posix IPC (and Virtual Memory)": [[176, "posix-ipc-and-virtual-memory"]], "Unix Domain Sockets": [[176, "unix-domain-sockets"]], "Application in your Company": [[176, "application-in-your-company"]], "Further Thoughts": [[176, "further-thoughts"]], "IPC in Linux (10.1.2020 in Graz)": [[177, "ipc-in-linux-10-1-2020-in-graz"]], "\u00dcbung: handgestrickter String, um die Fallen von C++ lustvoll zu erleiden": [[178, "ubung-handgestrickter-string-um-die-fallen-von-c-lustvoll-zu-erleiden"]], "C++ f\u00fcr Embedded C Programmierer (30.3.2020 - 3.4.2020 Baden W\u00fcrttemberg)": [[179, "c-fur-embedded-c-programmierer-30-3-2020-3-4-2020-baden-wurttemberg"]], "Kursinformation": [[179, null]], "Kursaufbau": [[179, "kursaufbau"]], "Kursverlauf": [[179, "kursverlauf"], [187, "kursverlauf"]], "Tag 3": [[179, "tag-3"], [198, "tag-3"], [209, "tag-3"], [231, "tag-3"], [243, "tag-3"]], "Tag 4": [[179, "tag-4"], [209, "tag-4"], [231, "tag-4"], [243, "tag-4"]], "Tag 5": [[179, "tag-5"]], "Installing googletest By Hand": [[180, "installing-googletest-by-hand"]], "Clone googletest Repo": [[180, "clone-googletest-repo"]], "Create Build Directory": [[180, "create-build-directory"], [181, "create-build-directory"], [522, "create-build-directory"]], "CMake, Build and Install": [[180, "cmake-build-and-install"]], "Build Packages to Use Our Private googletest Install": [[180, "build-packages-to-use-our-private-googletest-install"]], "Software Setup, Build": [[181, "software-setup-build"]], "Getting the Source": [[181, "getting-the-source"]], "Install Prerequisites and Dependencies": [[181, "install-prerequisites-and-dependencies"]], "Generate Makefile Build from CMake Sources": [[181, "generate-makefile-build-from-cmake-sources"]], "Argh: Using This Site With Visual Studio Code": [[182, "argh-using-this-site-with-visual-studio-code"]], "Flatpak": [[182, "flatpak"]], "Issues": [[182, "issues"]], "RPM From M$": [[182, "rpm-from-m"]], "Code": [[183, "code"], [186, "code"]], "Python Grundlagen (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[184, "python-grundlagen-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "Information": [[184, null], [187, null]], "Environment": [[184, "environment"], [840, "environment"]], "Unit Testing and Test Driven Development": [[184, "unit-testing-and-test-driven-development"]], "Python Installation": [[184, "python-installation"], [1030, "python-installation"]], "Programming Environment": [[184, "programming-environment"], [268, "programming-environment"], [1030, "programming-environment"]], "Day 1: Language Basics": [[184, "day-1-language-basics"]], "Day 2: Advanced Topics": [[184, "day-2-advanced-topics"]], "Wrap-Up": [[184, "wrap-up"]], "How Was It?": [[184, "how-was-it"]], "Python Schulung 18. und 19.5.2020": [[185, "Python-Schulung-18.-und-19.5.2020"]], "Das sys Modul": [[185, "Das-sys-Modul"]], "Multiline Strings und Docstrings": [[185, "Multiline-Strings-und-Docstrings"]], "Datentypen (Ausflug)": [[185, "Datentypen-(Ausflug)"]], "Variablen und deren Unterbau": [[185, "Variablen-und-deren-Unterbau"]], "Ausflug \u201cPythonic\u201d: Zuweisung mit Hilfe von \u201cTuple Unpacking\u201d": [[185, "Ausflug-\u201cPythonic\u201d:-Zuweisung-mit-Hilfe-von-\u201cTuple-Unpacking\u201d"]], "Mutability am Beispiel list": [[185, "Mutability-am-Beispiel-list"]], "Integers haben unendliche Breite": [[185, "Integers-haben-unendliche-Breite"]], "Division und Floor Division": [[185, "Division-und-Floor-Division"]], "Konvertierung durch Konstruktoren": [[185, "Konvertierung-durch-Konstruktoren"]], "Welchen Typ haben Typen?": [[185, "Welchen-Typ-haben-Typen?"]], "list und Mutability": [[185, "list-und-Mutability"]], "Tuple und Immutability": [[185, "Tuple-und-Immutability"]], "Besseres Laufzeitverhalten durch Geeignetere Datenstrukturen": [[185, "Besseres-Laufzeitverhalten-durch-Geeignetere-Datenstrukturen"]], "Boolean: Short Circuit Evaluation": [[185, "Boolean:-Short-Circuit-Evaluation"]], "while Loops, und warum sie nicht Pythonic sind": [[185, "while-Loops,-und-warum-sie-nicht-Pythonic-sind"]], "Mehr \u00fcber range(): Iterator Protocol (Folie 161)": [[185, "Mehr-\u00fcber-range():-Iterator-Protocol-(Folie-161)"]], "Mutability, Shallow und Deep Copy": [[185, "Mutability,-Shallow-und-Deep-Copy"]], "Shallow Copy mit dem Slice-Operator": [[185, "Shallow-Copy-mit-dem-Slice-Operator"]], "Deep Copy (copy.deepcopy())": [[185, "Deep-Copy-(copy.deepcopy())"]], "Funktionen": [[185, "Funktionen"]], "Funktionen sind \u201cFirst Class Objects\u201d": [[185, "Funktionen-sind-\u201cFirst-Class-Objects\u201d"]], "Gotcha: Mutable Default Parameters (Folie 90 ff.)": [[185, "Gotcha:-Mutable-Default-Parameters-(Folie-90-ff.)"]], "Globale und lokale Variablen (Folie 92)": [[185, "Globale-und-lokale-Variablen-(Folie-92)"]], "Exercise: uniq() (Folie 94, Punkt 2)": [[185, "Exercise:-uniq()-(Folie-94,-Punkt-2)"]], "Zusammengefasst: hier eine \u201csch\u00f6nere\u201d L\u00f6sung": [[185, "Zusammengefasst:-hier-eine-\u201csch\u00f6nere\u201d-L\u00f6sung"]], "Funktionen als Parameter": [[185, "Funktionen-als-Parameter"]], "List Comprensions (Folie 125)": [[185, "List-Comprensions-(Folie-125)"]], "Generator Expressions: Lesbarkeit und Performance": [[185, "Generator-Expressions:-Lesbarkeit-und-Performance"]], "Code Review": [[185, "Code-Review"]], "pprint() ist praktisch f\u00fcr Debug-Output": [[185, "pprint()-ist-praktisch-f\u00fcr-Debug-Output"]], "Straightforward Datentransformation": [[185, "Straightforward-Datentransformation"]], "Ausflug: More on Dictionaries (Folie 127ff.)": [[185, "Ausflug:-More-on-Dictionaries-(Folie-127ff.)"]], "Now for something completely different: collections.namedtuple": [[185, "Now-for-something-completely-different:-collections.namedtuple"]], "Mehr zur Parameter\u00fcbergabe: variabel lange Argumentlisten": [[185, "Mehr-zur-Parameter\u00fcbergabe:-variabel-lange-Argumentlisten"]], "OO: eine erste Klasse": [[185, "OO:-eine-erste-Klasse"]], "Python Individualtraining (18.5.2020 - 19.5.2020)": [[187, "python-individualtraining-18-5-2020-19-5-2020"], [358, "python-individualtraining-18-5-2020-19-5-2020"]], "Weiterf\u00fchrende Links": [[187, "weiterfuhrende-links"]], "Python Advanced (7.9.2020 - 10.9.2020)": [[188, "python-advanced-7-9-2020-10-9-2020"], [358, "python-advanced-7-9-2020-10-9-2020"]], "Preparation": [[188, "preparation"], [189, "preparation"], [191, "preparation"], [192, "preparation"], [193, "preparation"], [194, "preparation"], [585, "preparation"]], "Workspace Setup": [[188, "workspace-setup"], [189, "workspace-setup"], [191, "workspace-setup"], [193, "workspace-setup"]], "Github for Exercises": [[188, "github-for-exercises"], [189, "github-for-exercises"]], "Agenda": [[188, "agenda"], [189, "agenda"], [191, "agenda"], [192, "agenda"], [193, "agenda"], [194, "agenda"], [199, "agenda"], [203, "agenda"], [204, "agenda"], [241, "agenda"], [246, "agenda"], [258, "agenda"], [267, "agenda"], [288, "agenda"], [296, "agenda"], [1161, "agenda"]], "Advanced Core Python Topics": [[188, "advanced-core-python-topics"]], "Special Topics": [[188, "special-topics"]], "Day 1": [[188, "day-1"], [189, "day-1"], [191, "day-1"], [192, "day-1"], [193, "day-1"], [203, "day-1"], [204, "day-1"], [213, "day-1"], [214, "day-1"], [219, "day-1"], [222, "day-1"], [225, "day-1"], [228, "day-1"], [235, "day-1"], [277, "day-1"], [278, "day-1"], [279, "day-1"], [285, "day-1"], [289, "day-1"], [291, "day-1"], [296, "day-1"], [303, "day-1"]], "Day 2": [[188, "day-2"], [189, "day-2"], [191, "day-2"], [192, "day-2"], [193, "day-2"], [203, "day-2"], [204, "day-2"], [213, "day-2"], [214, "day-2"], [219, "day-2"], [222, "day-2"], [224, "Day-2"], [225, "day-2"], [228, "day-2"], [235, "day-2"], [268, "day-2"], [277, "day-2"], [279, "day-2"], [285, "day-2"], [289, "day-2"], [296, "day-2"], [303, "day-2"]], "Day 3": [[188, "day-3"], [189, "day-3"], [191, "day-3"], [192, "day-3"], [193, "day-3"], [203, "day-3"], [204, "day-3"], [213, "day-3"], [214, "day-3"], [219, "day-3"], [224, "Day-3"], [225, "day-3"], [228, "day-3"], [235, "day-3"], [268, "day-3"], [271, "day-3"], [277, "day-3"], [279, "day-3"], [285, "day-3"], [289, "day-3"], [291, "day-3"], [303, "day-3"]], "Day 4": [[188, "day-4"], [191, "day-4"], [203, "day-4"], [204, "day-4"], [213, "day-4"], [214, "day-4"], [268, "day-4"]], "Recommended Tutorials": [[188, "recommended-tutorials"]], "After Work Party": [[188, "after-work-party"], [219, "after-work-party"]], "Python Basics (28.9.2020 - 30.9.2020)": [[189, "python-basics-28-9-2020-30-9-2020"], [358, "python-basics-28-9-2020-30-9-2020"]], "Iterables": [[190, "Iterables"]], "set constructor": [[190, "set-constructor"]], "Fast vs.\u00a0Simple": [[190, "Fast-vs.\u00a0Simple"]], "for, Iterables, range and Generators": [[190, "for,-Iterables,-range-and-Generators"]], "Tuples, Tuple Unpacking, Returning Multiple Values from Functions": [[190, "Tuples,-Tuple-Unpacking,-Returning-Multiple-Values-from-Functions"]], "Object Oriented Programming": [[190, "Object-Oriented-Programming"], [240, "Object-Oriented-Programming"], [253, "Object-Oriented-Programming"], [264, "object-oriented-programming"], [278, "object-oriented-programming"], [280, "object-oriented-programming"], [281, "object-oriented-programming"], [284, "object-oriented-programming"], [285, "object-oriented-programming"], [290, "object-oriented-programming"], [296, "object-oriented-programming"], [299, "object-oriented-programming"], [302, "object-oriented-programming"], [303, "object-oriented-programming"], [306, "object-oriented-programming"], [312, "object-oriented-programming"], [318, "object-oriented-programming"], [324, "object-oriented-programming"], [447, "object-oriented-programming"], [1021, "object-oriented-programming"]], "datetime": [[190, "datetime"], [217, "datetime"], [272, "datetime"]], "Python Basic and Advanced (19.10.2020 - 22.10.2020)": [[191, "python-basic-and-advanced-19-10-2020-22-10-2020"]], "Additional Topics, brought in by Thomas": [[191, "additional-topics-brought-in-by-thomas"]], "Notebook": [[191, "notebook"], [212, "notebook"], [227, "Notebook"], [340, "notebook"]], "Tutorials": [[191, "tutorials"], [219, "tutorials"]], "Linux on Raspberry Pi": [[192, "linux-on-raspberry-pi"]], "Cloud Machine": [[192, "cloud-machine"]], "Raspberry on Participant\u2019s Desks": [[192, "raspberry-on-participant-s-desks"]], "Basic security": [[192, "basic-security"]], "Interlude: SD Card Setup (No Bloody Disk Imager)": [[192, "interlude-sd-card-setup-no-bloody-disk-imager"]], "GPIO, using sysfs interface": [[192, "gpio-using-sysfs-interface"]], "In the Wild: Watchdog": [[192, "in-the-wild-watchdog"]], "TODO": [[192, "todo"], [327, "todo"], [328, "todo"], [329, "todo"], [1121, "todo"]], "Support Material": [[192, "support-material"]], "Python Basics (23.11.2020 - 25.11.2020)": [[193, "python-basics-23-11-2020-25-11-2020"], [358, "python-basics-23-11-2020-25-11-2020"]], "Exercise: JSON": [[193, "exercise-json"]], "Linux Basics (30.11.2020 - 3.12.2020)": [[194, "linux-basics-30-11-2020-3-12-2020"], [358, "linux-basics-30-11-2020-3-12-2020"]], "6 Grundlegende Sprachelemente": [[195, "6-Grundlegende-Sprachelemente"]], "6.1 Syntax und Semantik": [[195, "6.1-Syntax-und-Semantik"]], "Zur Syntax mit der Einr\u00fcckung \u2026": [[195, "Zur-Syntax-mit-der-Einr\u00fcckung-\u2026"]], "In Python k\u00f6nnen Variablen ihren Typ \u00e4ndern": [[195, "In-Python-k\u00f6nnen-Variablen-ihren-Typ-\u00e4ndern"]], "Kommentare": [[195, "Kommentare"]], "6.2 Grundlegende Elemente einer Sprache": [[195, "6.2-Grundlegende-Elemente-einer-Sprache"]], "6.3 Standarddatentypen (elementare Datentypen)": [[195, "6.3-Standarddatentypen-(elementare-Datentypen)"]], "Integers sind beliebig gro\u00df": [[195, "Integers-sind-beliebig-gro\u00df"]], "Vergleichsoperatoren": [[195, "Vergleichsoperatoren"]], "Operator Pr\u00e4zedenz: Punkt vor Strichrechnung": [[195, "Operator-Pr\u00e4zedenz:-Punkt-vor-Strichrechnung"]], "Floor Division": [[195, "Floor-Division"]], "Modulo Operator: %": [[195, "Modulo-Operator:-%"]], "(Un\u00e4rer) Negations Operator": [[195, "(Un\u00e4rer)-Negations-Operator"]], "Operator Pr\u00e4zedenz erzwingen": [[195, "Operator-Pr\u00e4zedenz-erzwingen"]], "Strings gibts auch (Zeichenketten)": [[195, "Strings-gibts-auch-(Zeichenketten)"]], "Raw Strings": [[195, "Raw-Strings"], [217, "Raw-Strings"], [234, "Raw-Strings"], [240, "Raw-Strings"], [262, "Raw-Strings"], [292, "Raw-Strings"], [1050, "raw-strings"]], "f-Strings": [[195, "f-Strings"], [314, "f-Strings"]], "Konvertierungen": [[195, "Konvertierungen"]], "Boolean": [[195, "Boolean"], [221, "Boolean"], [224, "Boolean"], [232, "Boolean"], [234, "Boolean"], [244, "Boolean"], [247, "Boolean"], [1039, "boolean"], [320, "Boolean"]], "Pr\u00e4zendenzregeln: and vor or": [[195, "Pr\u00e4zendenzregeln:-and-vor-or"]], "6.4 Literale f\u00fcr primitive Datentypen": [[195, "6.4-Literale-f\u00fcr-primitive-Datentypen"]], "6.5 Variablen und Konstanten": [[195, "6.5-Variablen-und-Konstanten"]], "6.6 Operatoren": [[195, "6.6-Operatoren"]], "6.7 Ausdr\u00fccke und Operatorrangfolgen": [[195, "6.7-Ausdr\u00fccke-und-Operatorrangfolgen"]], "6.8 \u00dcbungen": [[195, "6.8-\u00dcbungen"]], "Zwei Variablen vertauschen": [[195, "Zwei-Variablen-vertauschen"]], "Zwei Variablen vertauschen mit Tuple Unpacking": [[195, "Zwei-Variablen-vertauschen-mit-Tuple-Unpacking"]], "\u00dcbung 1, 5.": [[195, "\u00dcbung-1,-5."]], "7 Kontrollstrukturen": [[195, "7-Kontrollstrukturen"]], "7.1 Anweisungen und Folgen": [[195, "7.1-Anweisungen-und-Folgen"]], "7.2 Bedingungen und Kontrollstrukturen": [[195, "7.2-Bedingungen-und-Kontrollstrukturen"]], "7.3 Grundlagen zu Verzweigungen": [[195, "7.3-Grundlagen-zu-Verzweigungen"]], "7.4 Bedingte Anweisung": [[195, "7.4-Bedingte-Anweisung"]], "7.5 Verzweigung": [[195, "7.5-Verzweigung"]], "7.6 Geschachtelte Verzweigung": [[195, "7.6-Geschachtelte-Verzweigung"]], "7.7 Mehrfache Verzweigung (Fallauswahl)": [[195, "7.7-Mehrfache-Verzweigung-(Fallauswahl)"]], "7.8 Schleifen": [[195, "7.8-Schleifen"]], "7.9 Z\u00e4hlergesteuerte Schleifen (Iteration)": [[195, "7.9-Z\u00e4hlergesteuerte-Schleifen-(Iteration)"]], "7.10 Kopfgesteuerte bedingte Schleife": [[195, "7.10-Kopfgesteuerte-bedingte-Schleife"]], "7.11 Fu\u00dfgesteuerte bedingte Schleife": [[195, "7.11-Fu\u00dfgesteuerte-bedingte-Schleife"]], "(jf) break und continue": [[195, "(jf)-break-und-continue"]], "(jf) Sequential Datatypes": [[195, "(jf)-Sequential-Datatypes"]], "(jf) for Loops": [[195, "(jf)-for-Loops"]], "Iteration mit Dictionaries": [[195, "Iteration-mit-Dictionaries"]], "(jf) The range() Function": [[195, "(jf)-The-range()-Function"]], "7.12 Schnell\u00fcbersicht": [[195, "7.12-Schnell\u00fcbersicht"]], "7.13 Sprunganweisungen": [[195, "7.13-Sprunganweisungen"]], "7.14 Endlosschleifen": [[195, "7.14-Endlosschleifen"]], "7.15 \u00dcbungen": [[195, "7.15-\u00dcbungen"]], "8 Elementare Datenstrukturen": [[195, "8-Elementare-Datenstrukturen"]], "8.1 Warum werden Datenstrukturen ben\u00f6tigt?": [[195, "8.1-Warum-werden-Datenstrukturen-ben\u00f6tigt?"]], "(jf) Compound Datatypes": [[195, "(jf)-Compound-Datatypes"]], "(jf) References, (Im)mutability": [[195, "(jf)-References,-(Im)mutability"]], "(jf) Laufzeitverhalten bei der Suche (der in Operator)": [[195, "(jf)-Laufzeitverhalten-bei-der-Suche-(der-in-Operator)"]], "Liste": [[195, "Liste"]], "Set": [[195, "Set"], [216, "Set"], [217, "Set"], [221, "Set"], [221, "id1"], [224, "Set"], [227, "Set"], [227, "id1"], [234, "Set"], [247, "Set"], [250, "Set"], [262, "Set"], [265, "Set"], [265, "id5"], [272, "Set"], [282, "Set"], [286, "Set"], [304, "Set"], [308, "Set"], [320, "Set"]], "8.2 Arrays": [[195, "8.2-Arrays"]], "8.3 Eindimensionale Arrays": [[195, "8.3-Eindimensionale-Arrays"]], "8.4 Records": [[195, "8.4-Records"]], "8.5 Zeichenketten": [[195, "8.5-Zeichenketten"]], "8.6 Tupel und Listen": [[195, "8.6-Tupel-und-Listen"]], "sorted, reversed": [[195, "sorted,-reversed"]], "8.7 Dictionaries": [[195, "8.7-Dictionaries"]], "(jf) Records in Python": [[195, "(jf)-Records-in-Python"]], "8.8 Mengen": [[195, "8.8-Mengen"]], "8.9 Besondere Datenstrukturen anhand von Stapel (Stack) und Schlangen (Queue)": [[195, "8.9-Besondere-Datenstrukturen-anhand-von-Stapel-(Stack)-und-Schlangen-(Queue)"]], "8.10 \u00dcbungen": [[195, "8.10-\u00dcbungen"]], "\u00dcbung 1": [[195, "\u00dcbung-1"]], "Versuch 1: in und index()": [[195, "Versuch-1:-in-und-index()"]], "Versuch 2: Zur\u00fcck zu while \u2026": [[195, "Versuch-2:-Zur\u00fcck-zu-while-\u2026"]], "Versuch 3: hybrid potschert mit for": [[195, "Versuch-3:-hybrid-potschert-mit-for"]], "Versuch 4: supergscheit mit for und enumerate()": [[195, "Versuch-4:-supergscheit-mit-for-und-enumerate()"]], "9 Methoden, Prozeduren und Funktionen": [[195, "9-Methoden,-Prozeduren-und-Funktionen"]], "Funktionspointer (so heissts in C): Funktionsobjekte (Python)": [[195, "Funktionspointer-(so-heissts-in-C):-Funktionsobjekte-(Python)"]], "(jf) Primzahlenbeispiel mit Funktion": [[195, "(jf)-Primzahlenbeispiel-mit-Funktion"]], "(jf) Local vs.\u00a0Global Scope": [[195, "(jf)-Local-vs.\u00a0Global-Scope"]], "Laufzeitfehler: Variable existiert nicht": [[195, "Laufzeitfehler:-Variable-existiert-nicht"]], "Lokale Variable": [[195, "Lokale-Variable"]], "Globale Variable (lesen)": [[195, "Globale-Variable-(lesen)"]], "Globale Variable (schreiben/zuweisen)": [[195, "Globale-Variable-(schreiben/zuweisen)"]], "Fehlerfall von Peter": [[195, "Fehlerfall-von-Peter"]], "9.1 Unterprogramme": [[195, "9.1-Unterprogramme"]], "9.2 Parameter\u00fcbergabe": [[195, "9.2-Parameter\u00fcbergabe"]], "9.3 Parameter\u00fcbergabe als Wert": [[195, "9.3-Parameter\u00fcbergabe-als-Wert"]], "9.4 Parameter\u00fcbergabe \u00fcber Referenzen": [[195, "9.4-Parameter\u00fcbergabe-\u00fcber-Referenzen"]], "9.5 R\u00fcckgabewerte von Funktionen oder Methoden": [[195, "9.5-R\u00fcckgabewerte-von-Funktionen-oder-Methoden"]], "9.6 Innere Funktionen - Closures": [[195, "9.6-Innere-Funktionen---Closures"]], "9.7 Standardbibliotheken und Built-in-Funktionalit\u00e4ten": [[195, "9.7-Standardbibliotheken-und-Built-in-Funktionalit\u00e4ten"]], "9.8 \u00dcbungen": [[195, "9.8-\u00dcbungen"]], "Programmierung Grundlagen (13. und 14.1.2021)": [[196, "programmierung-grundlagen-13-und-14-1-2021"]], "Struktur": [[196, "struktur"]], "Herdt Kapitel 6: Grundlegende Sprachelemente": [[196, "herdt-kapitel-6-grundlegende-sprachelemente"], [1169, "herdt-kapitel-6-grundlegende-sprachelemente"]], "Herdt Kapitel 7: Kontrollstrukturen": [[196, "herdt-kapitel-7-kontrollstrukturen"], [1169, "herdt-kapitel-7-kontrollstrukturen"]], "Verzweigung": [[196, "verzweigung"], [1169, "verzweigung"]], "Schleifen": [[196, "schleifen"], [1169, "schleifen"]], "Herdt Kapitel 8: Elementare Datenstrukturen": [[196, "herdt-kapitel-8-elementare-datenstrukturen"], [1169, "herdt-kapitel-8-elementare-datenstrukturen"]], "Herdt Kapitel 9: Methoden, Prozeduren und Funktionen": [[196, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"], [1169, "herdt-kapitel-9-methoden-prozeduren-und-funktionen"]], "Python Basics (22.2.2021 - 24.2.2021)": [[198, "python-basics-22-2-2021-24-2-2021"], [358, "python-basics-22-2-2021-24-2-2021"]], "Links (ToDo)": [[198, "links-todo"]], "Linux Kernel Driver Development Basics (14.12.2020)": [[199, "linux-kernel-driver-development-basics-14-12-2020"]], "Books": [[199, "books"], [249, "books"], [291, "books"], [1106, "books"]], "Python Advanced": [[200, "Python-Advanced"]], "Data Types Recap": [[200, "Data-Types-Recap"]], "Sequential Datatypes": [[200, "Sequential-Datatypes"], [232, "Sequential-Datatypes"], [244, "Sequential-Datatypes"], [314, "Sequential-Datatypes"], [1042, "sequential-datatypes"], [1042, "id1"]], "Slicing etc.": [[200, "Slicing-etc."]], "Mapping Types (Dictionary, und mehr)": [[200, "Mapping-Types-(Dictionary,-und-mehr)"]], "Sets": [[200, "Sets"], [200, "id1"], [208, "Sets"], [1055, "sets"]], "for Schleife, ganz kurz": [[200, "for-Schleife,-ganz-kurz"]], "Tuple": [[200, "Tuple"], [224, "Tuple"], [227, "Tuple"], [234, "Tuple"], [247, "Tuple"], [250, "Tuple"], [262, "Tuple"], [320, "Tuple"]], "Funktionen mit mehreren Returnwerten (bzw. Tuple Unpacking)": [[200, "Funktionen-mit-mehreren-Returnwerten-(bzw.-Tuple-Unpacking)"]], "Iteration \u00fcber Containerdatentypen": [[200, "Iteration-\u00fcber-Containerdatentypen"]], "Listen": [[200, "Listen"], [234, "Listen"], [335, "Listen"]], "Was heisst \u201cUntypisiert\u201d?": [[200, "Was-heisst-\u201cUntypisiert\u201d?"]], "Wir l\u00f6schen den Integer": [[200, "Wir-l\u00f6schen-den-Integer"]], "Iterator Protocol, for Loops": [[200, "Iterator-Protocol,-for-Loops"]], "Iterable: Der Begriff": [[200, "Iterable:-Der-Begriff"]], "Zufall": [[200, "Zufall"]], "Regular Expressions": [[200, "Regular-Expressions"], [253, "Regular-Expressions"], [265, "Regular-Expressions"], [314, "Regular-Expressions"], [897, "regular-expressions"]], "enumerate()": [[200, "enumerate()"], [208, "enumerate()"], [211, "enumerate()"], [247, "enumerate()"], [265, "enumerate()"], [282, "enumerate()"], [304, "enumerate()"]], "JSON": [[200, "JSON"], [217, "JSON"], [227, "JSON"], [253, "JSON"], [262, "JSON"], [297, "JSON"], [300, "JSON"]], "2021-03-15": [[201, "id1"]], "Exercises (auf Github)": [[201, "exercises-auf-github"]], "Jupyter Notebook": [[201, "jupyter-notebook"], [203, "jupyter-notebook"], [220, "jupyter-notebook"], [222, "jupyter-notebook"], [225, "jupyter-notebook"], [231, "jupyter-notebook"], [236, "jupyter-notebook"], [239, "jupyter-notebook"], [242, "jupyter-notebook"], [335, "Jupyter-Notebook"], [1112, "jupyter-notebook"]], "Download": [[201, null], [203, null]], "Hallo Jupyter Notebook": [[202, "Hallo-Jupyter-Notebook"]], "Syntax": [[202, "Syntax"], [272, "Syntax"], [314, "Syntax"], [335, "Syntax"], [335, "id1"]], "Raw strings": [[202, "Raw-strings"]], "Variablen": [[202, "Variablen"], [234, "Variablen"]], "Tuple Unpacking": [[202, "Tuple-Unpacking"], [244, "Tuple-Unpacking"], [262, "Tuple-Unpacking"], [272, "Tuple-Unpacking"], [308, "Tuple-Unpacking"], [314, "Tuple-Unpacking"], [334, "Tuple-Unpacking"], [335, "Tuple-Unpacking"], [335, "id2"]], "Speicher, Memory Management": [[202, "Speicher,-Memory-Management"]], "Mutable vs.\u00a0Immutable": [[202, "Mutable-vs.\u00a0Immutable"], [253, "Mutable-vs.\u00a0Immutable"]], "Wie sch\u00fctze ich mich davor?": [[202, "Wie-sch\u00fctze-ich-mich-davor?"]], "Aber!!!!": [[202, "Aber!!!!"]], "Dictionary": [[202, "Dictionary"], [208, "Dictionary"], [216, "Dictionary"], [217, "Dictionary"], [221, "Dictionary"], [221, "id2"], [224, "Dictionary"], [227, "Dictionary"], [227, "id2"], [234, "Dictionary"], [247, "Dictionary"], [250, "Dictionary"], [262, "Dictionary"], [265, "Dictionary"], [265, "id4"], [272, "Dictionary"], [282, "Dictionary"], [286, "Dictionary"], [292, "Dictionary"], [304, "Dictionary"], [308, "Dictionary"], [320, "Dictionary"]], "Exercise: Liste von gemischten Datentypen": [[202, "Exercise:-Liste-von-gemischten-Datentypen"]], "Konstruktoren": [[202, "Konstruktoren"]], "Tag 2: Wiederholung, Fragen": [[202, "Tag-2:-Wiederholung,-Fragen"]], "for und range()": [[202, "for-und-range()"]], "Objektidentit\u00e4t": [[202, "Objektidentit\u00e4t"]], "Das with Statement": [[202, "Das-with-Statement"], [211, "Das-with-Statement"]], "Tuple Unpacking, Dictionary Iteration": [[202, "Tuple-Unpacking,-Dictionary-Iteration"]], "String Operationen": [[202, "String-Operationen"]], "enumerate(), und verlorene Indices": [[202, "enumerate(),-und-verlorene-Indices"]], "NumPy, matplotlib": [[202, "NumPy,-matplotlib"]], "Interpolation mittels scipy": [[202, "Interpolation-mittels-scipy"]], "Python Basic and Advanced (22.3.2021 - 25.3.2021)": [[203, "python-basic-and-advanced-22-3-2021-25-3-2021"]], "(Tutorial) Videos": [[203, "tutorial-videos"]], "Linux Basics, Shell Scripting (2021-03-29)": [[204, "linux-basics-shell-scripting-2021-03-29"]], "Course Details": [[204, null]], "Course Preparation": [[204, "course-preparation"], [257, "course-preparation"], [259, "course-preparation"], [267, "course-preparation"]], "SSH": [[204, "ssh"], [345, "ssh"]], "Linux and/or Shell on Windows Host": [[204, "linux-and-or-shell-on-windows-host"]], "Editor Support for Shell Scripting": [[204, "editor-support-for-shell-scripting"]], "Programmierung Grundlagen (12. und 13.4.2021)": [[206, "programmierung-grundlagen-12-und-13-4-2021"]], "Syntax etc.": [[208, "Syntax-etc."], [240, "Syntax-etc."], [286, "Syntax-etc."], [1034, "syntax-etc"]], "Comments vs.\u00a0Documentation": [[208, "Comments-vs.\u00a0Documentation"]], "Variables": [[208, "Variables"], [221, "Variables"], [224, "Variables"], [240, "Variables"], [250, "Variables"], [282, "Variables"], [286, "Variables"], [308, "Variables"], [314, "Variables"], [335, "Variables"], [1036, "variables"], [320, "Variables"]], "Assignment Fun": [[208, "Assignment-Fun"], [247, "Assignment-Fun"], [1036, "assignment-fun"]], "Assignment Details": [[208, "Assignment-Details"], [240, "Assignment-Details"], [247, "Assignment-Details"], [335, "Assignment-Details"], [1036, "assignment-details"]], "Operators": [[208, "Operators"], [244, "Operators"]], "Integer Arithmetic": [[208, "Integer-Arithmetic"]], "String Methods": [[208, "String-Methods"], [334, "String-Methods"]], "Datatype Conversions": [[208, "Datatype-Conversions"], [232, "Datatype-Conversions"], [234, "Datatype-Conversions"], [240, "Datatype-Conversions"], [244, "Datatype-Conversions"], [247, "Datatype-Conversions"], [265, "Datatype-Conversions"], [282, "Datatype-Conversions"], [286, "Datatype-Conversions"], [292, "Datatype-Conversions"], [304, "Datatype-Conversions"], [308, "Datatype-Conversions"], [314, "Datatype-Conversions"], [335, "Datatype-Conversions"], [1037, "datatype-conversions"]], "Strings k\u00f6nnen alles!": [[208, "Strings-k\u00f6nnen-alles!"]], "Complex Datatypes": [[208, "Complex-Datatypes"], [335, "Complex-Datatypes"]], "List (mutable)": [[208, "List-(mutable)"], [221, "List-(mutable)"], [314, "List-(mutable)"]], "extend()? Iterable?": [[208, "extend()?-Iterable?"]], "Tuple (wie Liste, nur immutable)": [[208, "Tuple-(wie-Liste,-nur-immutable)"]], "in Operator": [[208, "in-Operator"], [247, "in-Operator"]], "Iteration \u00fcber Daten: mittels for": [[208, "Iteration-\u00fcber-Daten:-mittels-for"]], "enumerate(), sum(), map(), und so weiter": [[208, "enumerate(),-sum(),-map(),-und-so-weiter"]], "sum()": [[208, "sum()"]], "map()": [[208, "map()"], [211, "map()"]], "list() function": [[208, "list()-function"]], "Performance: in Operator, und list und set": [[208, "Performance:-in-Operator,-und-list-und-set"]], "Dynamische Evaluierung: eval()": [[208, "Dynamische-Evaluierung:-eval()"]], "Python Grundlagen (2021-05-03 - 2021-05-05)": [[209, "python-grundlagen-2021-05-03-2021-05-05"], [358, "python-grundlagen-2021-05-03-2021-05-05"]], "Weiterf\u00fchrende Information": [[209, "weiterfuhrende-information"]], "Visual Studio Code": [[209, "visual-studio-code"], [225, "visual-studio-code"], [1106, "visual-studio-code"]], "Python Beginner Tutorials": [[209, "python-beginner-tutorials"], [249, "python-beginner-tutorials"], [1106, "python-beginner-tutorials"]], "NumPy and Data Science Tutorials": [[209, "numpy-and-data-science-tutorials"], [249, "numpy-and-data-science-tutorials"], [252, "numpy-and-data-science-tutorials"], [285, "numpy-and-data-science-tutorials"], [1106, "numpy-and-data-science-tutorials"]], "PyPI (Installing Modules that don\u2019t come as Batteries)": [[209, "pypi-installing-modules-that-don-t-come-as-batteries"], [1106, "pypi-installing-modules-that-don-t-come-as-batteries"]], "Git, and Github": [[209, "git-and-github"], [1106, "git-and-github"]], "Conference Talks": [[209, "conference-talks"], [285, "conference-talks"], [1106, "conference-talks"]], "Python Grundlagen (Jupyter Notebook)": [[210, "python-grundlagen-jupyter-notebook"], [223, "python-grundlagen-jupyter-notebook"], [226, "python-grundlagen-jupyter-notebook"], [229, "python-grundlagen-jupyter-notebook"], [248, "python-grundlagen-jupyter-notebook"], [251, "python-grundlagen-jupyter-notebook"], [254, "python-grundlagen-jupyter-notebook"], [263, "python-grundlagen-jupyter-notebook"], [266, "python-grundlagen-jupyter-notebook"], [287, "python-grundlagen-jupyter-notebook"]], "import zipfile": [[211, "import-zipfile"]], "Read Contents \u2026": [[211, "Read-Contents-\u2026"]], "Extract One Member": [[211, "Extract-One-Member"]], "All in One, Using with": [[211, "All-in-One,-Using-with"]], "Functionality: Methods": [[211, "Functionality:-Methods"]], "Class Attributes vs.\u00a0Instance Attributes (not Variables)": [[211, "Class-Attributes-vs.\u00a0Instance-Attributes-(not-Variables)"]], "Instance Attributes": [[211, "Instance-Attributes"]], "Class Attributes": [[211, "Class-Attributes"]], "Public, Protected, Private": [[211, "Public,-Protected,-Private"]], "Properties": [[211, "Properties"], [240, "Properties"], [462, "properties"], [1026, "properties"]], "Functions, Positional and Keyword Arguments": [[211, "Functions,-Positional-and-Keyword-Arguments"]], "Positional Arguments": [[211, "Positional-Arguments"]], "Keyword Arguments": [[211, "Keyword-Arguments"], [232, "Keyword-Arguments"], [336, "Keyword-Arguments"], [1048, "keyword-arguments"]], "Mixing Positional and Keyword Arguments": [[211, "Mixing-Positional-and-Keyword-Arguments"]], "The range() Function": [[211, "The-range()-Function"], [217, "The-range()-Function"], [224, "The-range()-Function"]], "Functional Programming, Iteration, yield, map(), filter(), \u2026": [[211, "Functional-Programming,-Iteration,-yield,-map(),-filter(),-\u2026"]], "Iterable": [[211, "Iterable"], [227, "Iterable"]], "list(), and iterable?": [[211, "list(),-and-iterable?"]], "Tuple Unpacking and the Rest": [[211, "Tuple-Unpacking-and-the-Rest"]], "Decorators, etc.": [[211, "Decorators,-etc."]], "NoneType and None": [[211, "NoneType-and-None"]], "File I/O": [[211, "File-I/O"], [240, "File-I/O"], [247, "File-I/O"], [250, "File-I/O"], [282, "File-I/O"], [286, "File-I/O"], [332, "File-I/O"], [943, "file-i-o"], [1056, "file-i-o"]], "Iteration, yield, Recursion": [[211, "Iteration,-yield,-Recursion"]], "Recursion": [[211, "Recursion"]], "Iteratively Calculating Fibonacci Numbers -> yield": [[211, "Iteratively-Calculating-Fibonacci-Numbers-->-yield"]], "map(), filter(), zip(), enumerate() \u2026": [[211, "map(),-filter(),-zip(),-enumerate()-\u2026"]], "map(), and several other ways to do the same": [[211, "map(),-and-several-other-ways-to-do-the-same"]], "zip()": [[211, "zip()"]], "filter(), and several other methods to do the same": [[211, "filter(),-and-several-other-methods-to-do-the-same"]], "OSError, errno": [[211, "OSError,-errno"]], "The platform Module, sys.path": [[211, "The-platform-Module,-sys.path"]], "os.path": [[211, "os.path"], [227, "os.path"], [234, "os.path"]], "Exceptions und so (assert())": [[211, "Exceptions-und-so-(assert())"]], "AssertionError": [[211, "AssertionError"]], "Random Questions": [[211, "Random-Questions"]], "Slicing": [[211, "Slicing"], [234, "Slicing"], [240, "Slicing"], [265, "Slicing"], [286, "Slicing"], [1127, "slicing"]], "OO": [[211, "OO"], [279, "oo"], [349, "oo"], [543, "oo"]], "String Formatting": [[211, "String-Formatting"], [217, "String-Formatting"], [1051, "string-formatting"]], "import datetime": [[211, "import-datetime"]], "Python Advanced (2021-05-25 - 2021-05-27)": [[212, "python-advanced-2021-05-25-2021-05-27"]], "Predefined streams": [[212, "predefined-streams"]], "PCAP Exam Syllabus": [[212, "pcap-exam-syllabus"], [225, "pcap-exam-syllabus"]], "2021-06-09": [[212, "id1"]], "Programmieren mit C (2021-06-14 - 2021-06-18)": [[213, "programmieren-mit-c-2021-06-14-2021-06-18"], [358, "programmieren-mit-c-2021-06-14-2021-06-18"]], "Preparation: Tools": [[213, "preparation-tools"]], "State machine": [[213, "state-machine"]], "Regular Course Topics": [[213, "regular-course-topics"]], "Development Tools (Git & CMake) Installation Massacre": [[213, "development-tools-git-cmake-installation-massacre"]], "Regular Course Material": [[213, "regular-course-material"], [213, "id1"]], "Group Project Kick-Off :-)": [[213, "group-project-kick-off"]], "Exercise: Encapsulate Index Access to userdb": [[213, "exercise-encapsulate-index-access-to-userdb"]], "Group Project (Use Case Driven Course Flow :-) )": [[213, "group-project-use-case-driven-course-flow"]], "Day 5": [[213, "day-5"], [214, "day-5"], [268, "day-5"]], "Pointer Recap": [[213, "pointer-recap"]], "On With Group Project": [[213, "on-with-group-project"]], "C++ Basics": [[213, "c-basics"]], "Pointers, Pointer Arithmetic, and the Standard Template Library (STL)": [[213, "pointers-pointer-arithmetic-and-the-standard-template-library-stl"]], "The C++ Programming Language (2021-07-12 - 2021-07-16)": [[214, "the-c-programming-language-2021-07-12-2021-07-16"]], "Setup for the new kids": [[214, "setup-for-the-new-kids"]], "Recapitulate some C": [[214, "recapitulate-some-c"]], "Group project review": [[214, "group-project-review"]], "Jump into C++": [[214, "jump-into-c"]], "Regular Topics": [[214, "regular-topics"], [214, "id2"], [214, "id4"]], "Toolchain: C/C++ Build (How Complicated Can Things Be?)": [[214, "toolchain-c-c-build-how-complicated-can-things-be"]], "Exercises: Using the C++ Toolbox": [[214, "exercises-using-the-c-toolbox"]], "Finish First \u201cUser Database\u201d Functionality": [[214, "finish-first-user-database-functionality"]], "Unit Testing": [[214, "unit-testing"], [271, "unit-testing"], [274, "unit-testing"], [348, "unit-testing"]], "GTest Installation": [[214, "gtest-installation"]], "Git Workflows": [[214, "git-workflows"]], "Day X": [[214, "day-x"]], "Smart Pointers, Recap": [[214, "smart-pointers-recap"]], "std::map": [[214, "std-map"], [621, "std-map"]], "OO, and Polymorphism": [[214, "oo-and-polymorphism"]], "Programmierung Grundlagen, anhand von Python (2. und 3.8.2021)": [[215, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"], [358, "programmierung-grundlagen-anhand-von-python-2-und-3-8-2021"]], "Variablen und Datentypen": [[215, "variablen-und-datentypen"], [231, "variablen-und-datentypen"], [243, "variablen-und-datentypen"]], "Kontrollstrukturen": [[215, "kontrollstrukturen"], [231, "kontrollstrukturen"], [232, "Kontrollstrukturen"], [243, "kontrollstrukturen"]], "Datenstrukturen": [[216, "Datenstrukturen"]], "List": [[216, "List"], [217, "List"], [224, "List"], [227, "List"], [247, "List"], [250, "List"], [262, "List"], [265, "List"], [292, "List"], [304, "List"], [1134, "list"], [320, "List"]], "Iteration": [[216, "Iteration"], [216, "id1"], [217, "Iteration"], [217, "id1"], [227, "Iteration"], [250, "Iteration"], [262, "Iteration"], [304, "Iteration"]], "User Datenbank: Showcase Full Stack Development": [[216, "User-Datenbank:-Showcase-Full-Stack-Development"]], "5: Response kommt von der DB": [[216, "5:-Response-kommt-von-der-DB"]], "6: Aufgabe: Formulieren eines JSON Strings, damit man diese Daten \u00fcber die HTTP Verbindung zum Client/Browser schicken kann.": [[216, "6:-Aufgabe:-Formulieren-eines-JSON-Strings,-damit-man-diese-Daten-\u00fcber-die-HTTP-Verbindung-zum-Client/Browser-schicken-kann."]], "7. Jetzt schickman weg: vom Server (PHP) zum Browser (JS)": [[216, "7.-Jetzt-schickman-weg:-vom-Server-(PHP)-zum-Browser-(JS)"]], "8. in JS JSON string empfangen": [[216, "8.-in-JS-JSON-string-empfangen"]], "9. Nun muessen wir den JSON-String in JS verwandlen": [[216, "9.-Nun-muessen-wir-den-JSON-String-in-JS-verwandlen"]], "Iterable?": [[217, "Iterable?"]], "List Comprehension, Generator Expression": [[217, "List-Comprehension,-Generator-Expression"]], "Literals": [[217, "Literals"], [487, "literals"]], "Quoting?": [[217, "Quoting?"], [221, "Quoting?"]], "Multiline Strings": [[217, "Multiline-Strings"], [221, "Multiline-Strings"], [314, "Multiline-Strings"], [1050, "multiline-strings"]], "Functionality": [[217, "Functionality"], [832, "functionality"]], "strip() and friends": [[217, "strip()-and-friends"]], "f-Strings (since Python 3.6)": [[217, "f-Strings-(since-Python-3.6)"]], "Parsing date formats": [[217, "Parsing-date-formats"]], "Read a Cleaned-Up SAP Export": [[218, "read-a-cleaned-up-sap-export"]], "Requirement": [[218, "requirement"], [486, "requirement"], [508, "requirement"], [509, "requirement"], [510, "requirement"], [514, "requirement"], [515, "requirement"], [516, "requirement"], [517, "requirement"], [518, "requirement"], [519, "requirement"], [935, "requirement"], [942, "requirement"], [1062, "requirement"], [1063, "requirement"], [1084, "requirement"], [1095, "requirement"], [1096, "requirement"], [1097, "requirement"], [1098, "requirement"], [1100, "requirement"], [1101, "requirement"], [1102, "requirement"], [1103, "requirement"]], "Solution": [[218, "solution"], [465, "solution"], [467, "solution"], [470, "solution"], [1142, "solution"]], "Python Grundlagen (2021-08-23 - 2021-08-25)": [[219, "python-grundlagen-2021-08-23-2021-08-25"]], "Initial Terminology": [[221, "Initial-Terminology"]], "Sequence": [[221, "Sequence"]], "Tuple (immutable)": [[221, "Tuple-(immutable)"], [314, "Tuple-(immutable)"]], "References, (Im)mutability": [[221, "References,-(Im)mutability"], [234, "References,-(Im)mutability"], [247, "References,-(Im)mutability"], [250, "References,-(Im)mutability"], [265, "References,-(Im)mutability"], [272, "References,-(Im)mutability"], [286, "References,-(Im)mutability"], [292, "References,-(Im)mutability"], [292, "id1"], [304, "References,-(Im)mutability"], [1046, "references-im-mutability"]], "Iteration, for, and range()": [[221, "Iteration,-for,-and-range()"]], "Iterator Protocol (not so important for beginners)": [[221, "Iterator-Protocol-(not-so-important-for-beginners)"]], "Iteration, and Compound Datatypes": [[221, "Iteration,-and-Compound-Datatypes"]], "List and Tuple": [[221, "List-and-Tuple"]], "matplotlib": [[221, "matplotlib"], [253, "matplotlib"]], "File I/O, and Strings": [[221, "File-I/O,-and-Strings"]], "Raw strings: Windows path names": [[221, "Raw-strings:-Windows-path-names"]], "Miscellaneous String Methods": [[221, "Miscellaneous-String-Methods"], [232, "Miscellaneous-String-Methods"], [234, "Miscellaneous-String-Methods"], [240, "Miscellaneous-String-Methods"], [250, "Miscellaneous-String-Methods"], [265, "Miscellaneous-String-Methods"], [286, "Miscellaneous-String-Methods"], [292, "Miscellaneous-String-Methods"], [314, "Miscellaneous-String-Methods"], [1052, "miscellaneous-string-methods"]], "Python Basics (2021-08-31 - 2021-09-01)": [[222, "python-basics-2021-08-31-2021-09-01"], [358, "python-basics-2021-08-31-2021-09-01"]], "Numerics, and AI": [[222, "numerics-and-ai"]], "Mountains near Graz": [[222, "mountains-near-graz"]], "2021-11-17": [[224, "2021-11-17"]], "Enter Tuples": [[224, "Enter-Tuples"]], "Datatype Conversions, Type Names": [[224, "Datatype-Conversions,-Type-Names"]], "NoneType": [[224, "NoneType"]], "Short Circuit Evaluation of Boolean Expression": [[224, "Short-Circuit-Evaluation-of-Boolean-Expression"]], "Exercise: Mixed List": [[224, "Exercise:-Mixed-List"]], "Python Documentation": [[224, "Python-Documentation"]], "for": [[224, "for"], [286, "for"], [335, "for"]], "Iteration over Compound Datatypes": [[224, "Iteration-over-Compound-Datatypes"], [234, "Iteration-over-Compound-Datatypes"]], "File IO": [[224, "File-IO"], [240, "File-IO"], [268, "file-io"], [272, "File-IO"], [308, "File-IO"], [314, "File-IO"]], "Generators, Iterator Protocol, for": [[224, "Generators,-Iterator-Protocol,-for"]], "Common Sequence Operation": [[224, "Common-Sequence-Operation"]], "Comprehensions": [[224, "Comprehensions"], [227, "Comprehensions"], [240, "Comprehensions"], [272, "Comprehensions"], [304, "Comprehensions"]], "List, Iterable? WTF?": [[224, "List,-Iterable?-WTF?"]], "Dict and iterable": [[224, "Dict-and-iterable"]], "More on Lists": [[224, "More-on-Lists"], [232, "More-on-Lists"], [247, "More-on-Lists"]], "More on Dictionaries": [[224, "More-on-Dictionaries"], [232, "More-on-Dictionaries"]], "References, Mutability": [[224, "References,-Mutability"]], "CSV": [[224, "CSV"], [241, "csv"], [249, "csv"], [286, "CSV"]], "Python Basics (2021-11-17 - 2021-11-19)": [[225, "python-basics-2021-11-17-2021-11-19"], [358, "python-basics-2021-11-17-2021-11-19"]], "Python (Core Topics)": [[225, "python-core-topics"]], "Python Standard Library": [[225, "python-standard-library"]], "More About Strings": [[227, "More-About-Strings"], [244, "More-About-Strings"], [292, "More-About-Strings"], [314, "More-About-Strings"], [1050, "more-about-strings"]], "List, Tuple": [[227, "List,-Tuple"], [282, "List,-Tuple"], [286, "List,-Tuple"]], "Tuple Unpacking: What Else": [[227, "Tuple-Unpacking:-What-Else"]], "Iterator Protocol": [[227, "Iterator-Protocol"], [234, "Iterator-Protocol"], [265, "Iterator-Protocol"], [282, "Iterator-Protocol"], [286, "Iterator-Protocol"], [314, "Iterator-Protocol"]], "yield": [[227, "yield"], [250, "yield"]], "Everything is an Object of a Type": [[227, "Everything-is-an-Object-of-a-Type"]], "Generators, used more creatively": [[227, "Generators,-used-more-creatively"]], "Exception Handling and Exception Types": [[227, "Exception-Handling-and-Exception-Types"]], "2021-12-17": [[227, "2021-12-17"]], "Shift Operators": [[227, "Shift-Operators"]], "PCAP Sample Exam": [[227, "PCAP-Sample-Exam"]], "System Errors": [[227, "System-Errors"]], "Python Advanced (2021-12-01 - 2021-12-03)": [[228, "python-advanced-2021-12-01-2021-12-03"], [358, "python-advanced-2021-12-01-2021-12-03"]], "Basics Recap": [[228, "basics-recap"], [281, "basics-recap"]], "Group Project Preparation": [[228, "group-project-preparation"]], "Hmmm?": [[228, "hmmm"]], "C/C++ Programming (2021-12-06 - 2021-12-10, 2022-01-24 - 2022-02-04)": [[230, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"], [358, "c-c-programming-2021-12-06-2021-12-10-2022-01-24-2022-02-04"]], "2021-12-06": [[230, "id1"]], "2021-12-07": [[230, "id2"]], "2021-12-08": [[230, "id3"]], "2021-12-09": [[230, "id4"]], "2022-01-24": [[230, "id5"]], "Undefined Behavior": [[230, "undefined-behavior"]], "Modularization": [[230, "modularization"], [403, "modularization"]], "2022-01-25": [[230, "id6"]], "C++ and OO (Classes)": [[230, "c-and-oo-classes"]], "Modularization (again)": [[230, "modularization-again"]], "2022-01-26": [[230, "id7"]], "Modularization: Repeating Important Topics (Quickly)": [[230, "modularization-repeating-important-topics-quickly"]], "Classes (continued)": [[230, "classes-continued"]], "2022-01-27": [[230, "id8"]], "2022-01-28": [[230, "id9"]], "Standard Template Library: Container Templates": [[230, "standard-template-library-container-templates"]], "2022-01-31": [[230, "id10"]], "2022-02-01": [[230, "id11"]], "Algorithms": [[230, "algorithms"], [610, "algorithms"]], "Functors": [[230, "functors"]], "Unified Modeling Language (UML)": [[230, "unified-modeling-language-uml"]], "Exercise (Using All From Today)": [[230, "exercise-using-all-from-today"]], "2022-02-02": [[230, "id12"]], "Associative Container: std::map": [[230, "associative-container-std-map"]], "Exceptions, and Exception Handling": [[230, "exceptions-and-exception-handling"]], "2022-02-03": [[230, "id13"]], "2022-02-04": [[230, "id14"]], "C++11: A New Language": [[230, "c-11-a-new-language"]], "Dynamic Allocation, Smart Pointers": [[230, "dynamic-allocation-smart-pointers"]], "2022-02-07: Start of Exercise Week": [[230, "start-of-exercise-week"]], "Programmierung Grundlagen, anhand von Python (2022-01-17 - 2022-01-10)": [[231, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"], [358, "programmierung-grundlagen-anhand-von-python-2022-01-17-2022-01-10"]], "2022-01-17": [[232, "2022-01-17"]], "Variables and Datatypes": [[232, "Variables-and-Datatypes"]], "Comments vs Docstrings": [[232, "Comments-vs-Docstrings"]], "Integer (Ganze Zahl)": [[232, "Integer-(Ganze-Zahl)"]], "Integer Numbers: Arithmetic": [[232, "Integer-Numbers:-Arithmetic"], [244, "Integer-Numbers:-Arithmetic"], [1037, "integer-numbers-arithmetic"]], "Some Methods": [[232, "Some-Methods"]], "String Formatting: f-Strings": [[232, "String-Formatting:-f-Strings"]], "More about Strings": [[232, "More-about-Strings"]], "if": [[232, "if"], [272, "if"]], "2022-01-18": [[232, "2022-01-18"]], "Miscellanea": [[232, "Miscellanea"]], "Braces: Single Element Tuples?": [[232, "Braces:-Single-Element-Tuples?"]], "Ranges -> range() (hour_of_day)": [[232, "Ranges-->-range()-(hour_of_day)"]], "while Loops": [[232, "while-Loops"], [234, "while-Loops"], [247, "while-Loops"], [314, "while-Loops"], [1041, "while-loops"], [1041, "id1"]], "break and continue": [[232, "break-and-continue"], [400, "break-and-continue"], [400, "id1"], [1041, "break-and-continue"]], "yield, Generator, Iteration Protocol": [[232, "yield,-Generator,-Iteration-Protocol"]], "Sequence Membership": [[232, "Sequence-Membership"], [1042, "sequence-membership"]], "list (mutable)": [[232, "list-(mutable)"]], "tuple (immutable)": [[232, "tuple-(immutable)"]], "dict (mutable)": [[232, "dict-(mutable)"]], "set (mutable)": [[232, "set-(mutable)"]], "Why Index Based Iteration is not Always the Best Way to Iterate": [[232, "Why-Index-Based-Iteration-is-not-Always-the-Best-Way-to-Iterate"]], "How to get Indexes if There are None? (enumerate(), and Tuple Unpacking)": [[232, "How-to-get-Indexes-if-There-are-None?-(enumerate(),-and-Tuple-Unpacking)"]], "Default Parameters": [[232, "Default-Parameters"], [234, "Default-Parameters"], [336, "Default-Parameters"], [1048, "default-parameters"]], "List Comprehensions": [[232, "List-Comprehensions"], [244, "List-Comprehensions"]], "Iteration over Dictionaries": [[232, "Iteration-over-Dictionaries"]], "Building Dictionaries": [[232, "Building-Dictionaries"], [1054, "building-dictionaries"]], "More on Sets": [[232, "More-on-Sets"]], "with: Context Managers": [[232, "with:-Context-Managers"]], "Strings Intro": [[234, "Strings-Intro"]], "Doc Strings": [[234, "Doc-Strings"]], "Object Identity": [[234, "Object-Identity"]], "Integers": [[234, "Integers"], [244, "Integers"], [247, "Integers"], [265, "Integers"], [272, "Integers"], [292, "Integers"], [308, "Integers"], [314, "Integers"], [320, "Integers"]], "Variablen? Datenypen?": [[234, "Variablen?-Datenypen?"]], "Objects, Classes": [[234, "Objects,-Classes"]], "Python Standard Libarary Examples": [[234, "Python-Standard-Libarary-Examples"]], "collections": [[234, "collections"]], "ChainMap": [[234, "ChainMap"]], "deque": [[234, "deque"]], "Suchalgorithmen und Datenstrukturen (Ausflug)": [[234, "Suchalgorithmen-und-Datenstrukturen-(Ausflug)"]], "Slice Assignment": [[234, "Slice-Assignment"], [1043, "slice-assignment"]], "Lists are mutable": [[234, "Lists-are-mutable"]], "Shallow copy and deep copy": [[234, "Shallow-copy-and-deep-copy"]], "else": [[234, "else"], [240, "else"]], "for Loops, range()": [[234, "for-Loops,-range()"]], "Default Parameters: Pitfalls": [[234, "Default-Parameters:-Pitfalls"]], "dict.fromkeys()": [[234, "dict.fromkeys()"], [247, "dict.fromkeys()"]], "Generators": [[234, "Generators"], [240, "Generators"], [280, "generators"], [281, "generators"], [285, "generators"], [302, "generators"], [306, "generators"]], "join, split": [[234, "join,-split"]], "strip, lstrip, rstrip": [[234, "strip,-lstrip,-rstrip"]], "Python Basics (2022-02-23 - 2022-02-25)": [[235, "python-basics-2022-02-23-2022-02-25"], [358, "python-basics-2022-02-23-2022-02-25"]], "Data Structures": [[235, "data-structures"]], "OS Things": [[235, "os-things"]], "Data Science": [[235, "data-science"], [303, "data-science"], [304, "Data-Science"]], "Wiederholung": [[237, "Wiederholung"]], "Mutable/Immutable": [[237, "Mutable/Immutable"]], "Attribute": [[237, "Attribute"]], "Sequentielle vs.\u00a0Konstante Suchzeit": [[237, "Sequentielle-vs.\u00a0Konstante-Suchzeit"]], "Exceptions": [[237, "Exceptions"], [253, "Exceptions"], [278, "exceptions"], [312, "exceptions"], [318, "exceptions"], [324, "exceptions"], [543, "exceptions"], [590, "exceptions"], [591, "exceptions"]], "for vs.\u00a0while, range()": [[237, "for-vs.\u00a0while,-range()"]], "String Methods (some)": [[237, "String-Methods-(some)"]], "eval()": [[237, "eval()"], [247, "eval()"], [304, "eval()"]], "exec()": [[237, "exec()"], [253, "exec()"], [314, "exec()"]], "Dictionary Iteration": [[237, "Dictionary-Iteration"]], "Classes, Attributes, OO": [[237, "Classes,-Attributes,-OO"]], "Types and Instances": [[237, "Types-and-Instances"]], "Metaprogramming? Types? What is a Type?": [[237, "Metaprogramming?-Types?-What-is-a-Type?"]], "OO Everywhere": [[237, "OO-Everywhere"]], "Dictionary Operations": [[237, "Dictionary-Operations"]], "collections.defaultdict": [[237, "collections.defaultdict"], [262, "collections.defaultdict"]], "Python Advanced (2022-03-15 - 2022-03-17, 2022-03-31)": [[238, "python-advanced-2022-03-15-2022-03-17-2022-03-31"]], "2022-03-15": [[238, "id1"]], "2022-03-16": [[238, "id2"]], "Test Driven Development": [[238, "test-driven-development"], [280, "test-driven-development"], [302, "test-driven-development"], [303, "test-driven-development"]], "2022-03-17": [[238, "id3"]], "2022-03-31": [[238, "id4"]], "Hello World": [[240, "Hello-World"], [362, "hello-world"], [1032, "hello-world"]], "Blahblah": [[240, "Blahblah"], [600, "blahblah"], [1031, "blahblah"]], "Object Oriented?": [[240, "Object-Oriented?"]], "MQTT": [[240, "MQTT"], [306, "mqtt"], [1122, "mqtt"]], "Commandline Arguments": [[240, "Commandline-Arguments"], [414, "commandline-arguments"], [414, "id1"]], "Object Lifetime": [[240, "Object-Lifetime"]], "Boolean, Short Circuit Evaluation": [[240, "Boolean,-Short-Circuit-Evaluation"]], "More String Methods": [[240, "More-String-Methods"], [240, "id1"]], "Dictionary Preview": [[240, "Dictionary-Preview"]], "list: Mutable": [[240, "list:-Mutable"]], "list(): explicit constructor": [[240, "list():-explicit-constructor"]], "tuple: Immutable": [[240, "tuple:-Immutable"]], "dict: Mutable": [[240, "dict:-Mutable"]], "set: Mutable": [[240, "set:-Mutable"]], "List comprehension": [[240, "List-comprehension"]], "DIctionary Comprehension": [[240, "DIctionary-Comprehension"]], "Set Comprehension": [[240, "Set-Comprehension"], [304, "Set-Comprehension"], [314, "Set-Comprehension"], [1002, "set-comprehension"]], "max": [[240, "max"]], "for, enumerate()": [[240, "for,-enumerate()"]], "Iteratoren, Generatoren": [[240, "Iteratoren,-Generatoren"]], "Generatoren": [[240, "Generatoren"]], "split und join": [[240, "split-und-join"]], "strip()": [[240, "strip()"]], "dict vs.\u00a0OrderedDict": [[240, "dict-vs.\u00a0OrderedDict"]], "Duck Typing": [[240, "Duck-Typing"], [1018, "duck-typing"]], "Interfaces": [[240, "Interfaces"], [639, "interfaces"]], "Implementation Inheritance": [[240, "Implementation-Inheritance"]], "Method Resolution Order (MRO), and super()": [[240, "Method-Resolution-Order-(MRO),-and-super()"]], "__bases__": [[240, "__bases__"]], "__mro__": [[240, "__mro__"]], "Object Layout (self)": [[240, "Object-Layout-(self)"]], "More from OO": [[240, "More-from-OO"]], "Calling Base Class Constructor (Many Ways)": [[240, "Calling-Base-Class-Constructor-(Many-Ways)"]], "Name Mangling (\u201cprivate\u201d Members)": [[240, "Name-Mangling-(\u201cprivate\u201d-Members)"]], "Yet Another Example From Udemy": [[240, "Yet-Another-Example-From-Udemy"]], "Exception Handling": [[240, "Exception-Handling"], [271, "exception-handling"], [274, "exception-handling"], [279, "exception-handling"], [351, "exception-handling"], [1005, "exception-handling"]], "Order of except Clauses": [[240, "Order-of-except-Clauses"]], "finally": [[240, "finally"]], "lambda": [[240, "lambda"]], "map(), filter()": [[240, "map(),-filter()"], [304, "map(),-filter()"]], "Generators, Iteration Protocol": [[240, "Generators,-Iteration-Protocol"]], "Class Variables (as Opposed to Instance Variables)": [[240, "Class-Variables-(as-Opposed-to-Instance-Variables)"]], "Python (2022-03-23, 2022-03-30, 2022-04-19 - 2022-03-21)": [[241, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"], [358, "python-2022-03-23-2022-03-30-2022-04-19-2022-03-21"]], "2022-03-23: Basics": [[241, "basics"]], "2022-03-30: Basics": [[241, "id1"]], "2022-04-19, 2022-04-20, 2022-04-21: Advanced": [[241, "advanced"]], "Plan For The Wild Part": [[241, "plan-for-the-wild-part"]], "Programmierung Grundlagen, anhand von Python (2022-04-05 - 2022-04-08)": [[243, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"], [358, "programmierung-grundlagen-anhand-von-python-2022-04-05-2022-04-08"]], "Discussion: Flow Charts?": [[243, "discussion-flow-charts"]], "BlahBlah": [[244, "BlahBlah"], [247, "BlahBlah"], [250, "BlahBlah"], [314, "BlahBlah"]], "Interactive": [[244, "Interactive"]], "For Beginners": [[244, "For-Beginners"]], "Not For Beginners?": [[244, "Not-For-Beginners?"]], "Strings, 1st Explanation": [[244, "Strings,-1st-Explanation"]], "Operator Precedence": [[244, "Operator-Precedence"], [247, "Operator-Precedence"], [1037, "operator-precedence"]], "Floating Point Numbers": [[244, "Floating-Point-Numbers"], [1037, "floating-point-numbers"]], "Docstrings": [[244, "Docstrings"], [250, "Docstrings"], [335, "Docstrings"]], "Einschub: String-Vergleich vs.\u00a0Integer-Vergleich": [[244, "Einschub:-String-Vergleich-vs.\u00a0Integer-Vergleich"]], "Random Numbers": [[244, "Random-Numbers"]], "Indexing and Slicing": [[244, "Indexing-and-Slicing"], [292, "Indexing-and-Slicing"], [1043, "indexing-and-slicing"]], "for Loops": [[244, "for-Loops"], [314, "for-Loops"], [365, "for-loops"], [1044, "for-loops"]], "range()": [[244, "range()"], [272, "range()"]], "Filterketten": [[244, "Filterketten"]], "Zen": [[244, "Zen"]], "Compound Datatypes By Example: List, Tuple": [[244, "Compound-Datatypes-By-Example:-List,-Tuple"], [1038, "compound-datatypes-by-example-list-tuple"]], "Compound Datatypes By Example: Dictionary": [[244, "Compound-Datatypes-By-Example:-Dictionary"], [1038, "compound-datatypes-by-example-dictionary"]], "Datensatz als Dictionary?": [[244, "Datensatz-als-Dictionary?"]], "JSON (Javascript Object Notation)": [[244, "JSON-(Javascript-Object-Notation)"]], "Compound Datatypes By Example: Set": [[244, "Compound-Datatypes-By-Example:-Set"], [1038, "compound-datatypes-by-example-set"]], "Das Letzte Beispiel am Letzten Tag": [[244, "Das-Letzte-Beispiel-am-Letzten-Tag"]], "Python Basics (2022-04-25 - 2022-04-27)": [[246, "python-basics-2022-04-25-2022-04-27"], [358, "python-basics-2022-04-25-2022-04-27"]], "Strings und Quotes": [[247, "Strings-und-Quotes"]], "Comments vs.\u00a0Docstrings": [[247, "Comments-vs.\u00a0Docstrings"]], "Variables and Types": [[247, "Variables-and-Types"]], "Swap": [[247, "Swap"]], "Integers are Infinitely long": [[247, "Integers-are-Infinitely-long"]], "Floating Point Comparison": [[247, "Floating-Point-Comparison"]], "Mutability/Immutability": [[247, "Mutability/Immutability"]], "Exercise: Digit To English Word": [[247, "Exercise:-Digit-To-English-Word"]], "Exercise: Determine Maximum of Two Numbers": [[247, "Exercise:-Determine-Maximum-of-Two-Numbers"], [1070, "exercise-determine-maximum-of-two-numbers"], [1080, "exercise-determine-maximum-of-two-numbers"]], "Ranges": [[247, "Ranges"], [716, "ranges"]], "Exercise: Sort out Duplicates": [[247, "Exercise:-Sort-out-Duplicates"]], "Algorithmic Complexity": [[247, "Algorithmic-Complexity"]], "More On Dictionaries": [[247, "More-On-Dictionaries"]], "More On Sets": [[247, "More-On-Sets"]], "eval(), json": [[247, "eval(),-json"]], "Encoding": [[247, "Encoding"], [271, "encoding"], [292, "Encoding"], [308, "Encoding"], [308, "id1"], [340, "encoding"], [1119, "encoding"]], "Python (2022-05-02 - 2022-05-05)": [[249, "python-2022-05-02-2022-05-05"], [358, "python-2022-05-02-2022-05-05"]], "Control Flow and Iteration": [[249, "control-flow-and-iteration"]], "Encoding, Strings, and File I/O": [[249, "encoding-strings-and-file-i-o"]], "Excursion: CAN Communication, OO, Modules": [[249, "excursion-can-communication-oo-modules"]], "Modules": [[249, "modules"], [262, "Modules"], [303, "modules"], [340, "modules"], [711, "modules"], [1013, "modules"]], "CSV, Functions": [[249, "csv-functions"]], "PyPI, Virtual Environments": [[249, "pypi-virtual-environments"]], "Requirements Engineering, Test Driven Development": [[249, "requirements-engineering-test-driven-development"]], "More On DataTypes": [[249, "more-on-datatypes"]], "Random Topics": [[249, "random-topics"]], "Standard Library": [[249, "standard-library"]], "Hello Jupyter Notebook": [[250, "Hello-Jupyter-Notebook"]], "Syntax etc": [[250, "Syntax-etc"]], "Mutability": [[250, "Mutability"], [282, "Mutability"]], "Removing Elements": [[250, "Removing-Elements"], [621, "removing-elements"]], "Nested Lists?": [[250, "Nested-Lists?"]], "while loops, and else": [[250, "while-loops,-and-else"]], "for loops (and else)": [[250, "for-loops-(and-else)"]], "The range() Function, Iterator Protocol": [[250, "The-range()-Function,-Iterator-Protocol"]], "Encoding, and String": [[250, "Encoding,-and-String"]], "Regular Expression": [[250, "Regular-Expression"]], "f-Strings (since Python 3.6 !!)": [[250, "f-Strings-(since-Python-3.6-!!)"]], "Tuples Containing Only One Element": [[250, "Tuples-Containing-Only-One-Element"]], "Iterables, Lists, and the itertools Modules": [[250, "Iterables,-Lists,-and-the-itertools-Modules"]], "itertools.chain()": [[250, "itertools.chain()"]], "Destructor?": [[250, "Destructor?"]], "Tuple Unpacking on Dictionaries": [[250, "Tuple-Unpacking-on-Dictionaries"]], "Python Advanced (2022-05-16 - 2022-05-18)": [[252, "python-advanced-2022-05-16-2022-05-18"], [358, "python-advanced-2022-05-16-2022-05-18"]], "Project Management": [[252, "project-management"], [303, "project-management"], [347, "project-management"], [348, "project-management"], [352, "project-management"]], "Unit Testing, Test Driven Development": [[252, "unit-testing-test-driven-development"]], "Object Priented Programming": [[252, "object-priented-programming"]], "OO: next exercise (CSV as always \ud83d\ude44)": [[252, "oo-next-exercise-csv-as-always-rolling-eyes"]], "Exercise: Exception Handling": [[252, "exercise-exception-handling"]], "Standesregister nach SQLite3": [[252, "standesregister-nach-sqlite3"]], "XML/Element Tree": [[252, "xml-element-tree"]], "Projektabschlusstag": [[252, "projektabschlusstag"]], "Basic Python": [[252, "basic-python"], [1168, "basic-python"]], "Assert": [[253, "Assert"]], "The id() function": [[253, "The-id()-function"]], "class Person": [[253, "class-Person"]], "Functions That Do Not Return Anything": [[253, "Functions-That-Do-Not-Return-Anything"]], "Classes, Attributes, und so (Dictionaries Everywhere!)": [[253, "Classes,-Attributes,-und-so-(Dictionaries-Everywhere!)"]], "Globale, lokale, und Class Variablen": [[253, "Globale,-lokale,-und-Class-Variablen"]], "Defining my Own Exceptions": [[253, "Defining-my-Own-Exceptions"]], "Dictionary Lookup, keys() etc.": [[253, "Dictionary-Lookup,-keys()-etc."]], "Integers, Strings, und so": [[253, "Integers,-Strings,-und-so"]], "Vorbesprechung 2022-05-11": [[255, "vorbesprechung-2022-05-11"]], "Legende": [[255, "legende"]], "Neuerungen in C++ seit 2011": [[255, "neuerungen-in-c-seit-2011"]], "Neuerungen in C++ 14": [[255, "neuerungen-in-c-14"]], "Neuerungen in C++ 17": [[255, "neuerungen-in-c-17"]], "Neuerungen in C++ 20 (Ausblick)": [[255, "neuerungen-in-c-20-ausblick"]], "C++: A New Language Starting In 2011": [[256, "c-a-new-language-starting-in-2011"], [257, "c-a-new-language-starting-in-2011"]], "Metadata": [[256, "metadata"], [257, "metadata"], [259, "metadata"], [890, "metadata"]], "Introduction": [[256, "introduction"], [257, "introduction"], [259, "introduction"], [278, "introduction"], [279, "introduction"], [361, "introduction"], [378, "introduction"], [440, "introduction"], [471, "introduction"], [566, "introduction"], [663, "introduction"], [722, "introduction"], [808, "introduction"], [1005, "introduction"]], "Pythonicity (Thank You: Readablility and Writability)": [[256, "pythonicity-thank-you-readablility-and-writability"], [257, "pythonicity-thank-you-readablility-and-writability"], [259, "pythonicity-thank-you-readablility-and-writability"]], "Range Based for Loops": [[256, "range-based-for-loops"], [257, "range-based-for-loops"], [259, "range-based-for-loops"], [316, "range-based-for-loops"]], "Tuple Unpacking (err, Structured Binding)": [[256, "tuple-unpacking-err-structured-binding"], [257, "tuple-unpacking-err-structured-binding"], [259, "tuple-unpacking-err-structured-binding"], [316, "tuple-unpacking-err-structured-binding"]], "Duck Typing (err, auto) Without A Duck": [[256, "duck-typing-err-auto-without-a-duck"], [257, "duck-typing-err-auto-without-a-duck"], [259, "duck-typing-err-auto-without-a-duck"], [316, "duck-typing-err-auto-without-a-duck"]], "Things That Simply Deserved Fixing Since Ages": [[256, "things-that-simply-deserved-fixing-since-ages"], [257, "things-that-simply-deserved-fixing-since-ages"], [259, "things-that-simply-deserved-fixing-since-ages"]], "Brace Initialization": [[256, "brace-initialization"], [257, "brace-initialization"], [259, "brace-initialization"], [316, "brace-initialization"], [317, "brace-initialization"]], "New OO keywords: override, final, default, delete": [[256, "new-oo-keywords-override-final-default-delete"], [257, "new-oo-keywords-override-final-default-delete"], [259, "new-oo-keywords-override-final-default-delete"], [316, "new-oo-keywords-override-final-default-delete"]], "Strongly Typed enum": [[256, "strongly-typed-enum"], [257, "strongly-typed-enum"], [259, "strongly-typed-enum"], [316, "strongly-typed-enum"], [666, "strongly-typed-enum"]], "Delegating Constructor": [[256, "delegating-constructor"], [257, "delegating-constructor"], [259, "delegating-constructor"], [316, "delegating-constructor"], [671, "delegating-constructor"]], "nullptr": [[256, "nullptr"], [257, "nullptr"], [259, "nullptr"], [316, "nullptr"], [679, "nullptr"]], "Smart Pointers": [[256, "smart-pointers"], [257, "smart-pointers"], [259, "smart-pointers"], [279, "smart-pointers"], [317, "smart-pointers"], [543, "smart-pointers"]], "Moving, \u201cRValue References\u201d": [[256, "moving-rvalue-references"], [257, "moving-rvalue-references"]], "Functions (std::bind<>, std::function<>, Lambdas)": [[256, "functions-std-bind-std-function-lambdas"], [257, "functions-std-bind-std-function-lambdas"], [259, "functions-std-bind-std-function-lambdas"]], "Work Environment": [[257, "work-environment"], [259, "work-environment"], [277, "work-environment"], [278, "work-environment"], [279, "work-environment"], [347, "work-environment"]], "Skeleton Project": [[257, "skeleton-project"], [259, "skeleton-project"], [585, "skeleton-project"]], "Linux Basics (2022-10-03 - 2022-10-05)": [[258, "linux-basics-2022-10-03-2022-10-05"], [358, "linux-basics-2022-10-03-2022-10-05"]], "C++: A New Language Starting In 2011 (2022-10-11 - 2022-10-13)": [[259, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"], [358, "c-a-new-language-starting-in-2011-2022-10-11-2022-10-13"]], "Moving, \u201cRValue References\u201d, And Perfect Forwarding": [[259, "moving-rvalue-references-and-perfect-forwarding"]], "News in C++20 (2023-06-13)": [[259, "news-in-c-20-2023-06-13"]], "Coroutines and C++23 Generators": [[259, "coroutines-and-c-23-generators"]], "Ranges And Views": [[259, "ranges-and-views"]], "Concepts": [[259, "concepts"], [316, "concepts"], [681, "concepts"]], "Design- and Architectural Patterns With C++ (2022-10-24 - 2022-10-26)": [[260, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"], [358, "design-and-architectural-patterns-with-c-2022-10-24-2022-10-26"]], "Monday": [[260, "monday"]], "Tuesday": [[260, "tuesday"]], "Wednesday": [[260, "wednesday"]], "Python: Tour-De-Force (2022-11-07 - 2022-11-10, 2022-12-01)": [[261, "python-tour-de-force-2022-11-07-2022-11-10-2022-12-01"]], "Up Front: Project Management": [[261, "up-front-project-management"], [280, "up-front-project-management"], [302, "up-front-project-management"]], "Object Oriented Programming: Classes": [[261, "object-oriented-programming-classes"]], "Exercise Series: CSV": [[261, "exercise-series-csv"]], "Missing Pieces: Encoding, Unit Testing": [[261, "missing-pieces-encoding-unit-testing"]], "Exercise Series: CSV, JSON": [[261, "exercise-series-csv-json"]], "Iteration, Generators": [[261, "iteration-generators"]], "Going Dynamic: type(), exec()": [[261, "going-dynamic-type-exec"]], "More OO: Inheritance, Abstract Base Classes": [[261, "more-oo-inheritance-abstract-base-classes"]], "Group Project Kickoff": [[261, "group-project-kickoff"], [281, "group-project-kickoff"], [303, "group-project-kickoff"], [306, "group-project-kickoff"]], "Data Structures Recap": [[261, "data-structures-recap"]], "Miscellaneous Livehacking": [[261, "miscellaneous-livehacking"]], "Function Arguments, Closures, Decorators": [[261, "function-arguments-closures-decorators"], [296, "function-arguments-closures-decorators"]], "Exceptions, with": [[261, "exceptions-with"], [296, "exceptions-with"], [299, "exceptions-with"]], "Package Management": [[261, "package-management"]], "Videos": [[261, "videos"], [307, "videos"]], "Beginner": [[261, "beginner"], [285, "beginner"]], "Advanced": [[261, "advanced"], [285, "advanced"]], "Fun": [[261, "fun"]], "Python (2022-10-17)": [[262, "Python-(2022-10-17)"]], "Tuple Unpacking, Lists Iteration, And Such": [[262, "Tuple-Unpacking,-Lists-Iteration,-And-Such"]], "Variables, Types": [[262, "Variables,-Types"]], "Immutable? References?": [[262, "Immutable?-References?"]], "And range()?": [[262, "And-range()?"]], "More About Dictionaries": [[262, "More-About-Dictionaries"], [262, "id1"], [265, "More-About-Dictionaries"], [292, "More-About-Dictionaries"], [314, "More-About-Dictionaries"], [1054, "more-about-dictionaries"]], "More About Lists": [[262, "More-About-Lists"], [265, "More-About-Lists"], [292, "More-About-Lists"], [314, "More-About-Lists"], [1053, "more-about-lists"]], "Python (2022-11-16 - 2022-11-18)": [[264, "python-2022-11-16-2022-11-18"], [265, "Python-(2022-11-16---2022-11-18)"], [358, "python-2022-11-16-2022-11-18"]], "Control Flow, Sequences, Iteration": [[264, "control-flow-sequences-iteration"], [271, "control-flow-sequences-iteration"], [274, "control-flow-sequences-iteration"], [284, "control-flow-sequences-iteration"], [285, "control-flow-sequences-iteration"], [290, "control-flow-sequences-iteration"], [291, "control-flow-sequences-iteration"], [291, "id2"], [312, "control-flow-sequences-iteration"], [313, "control-flow-sequences-iteration"], [318, "control-flow-sequences-iteration"], [324, "control-flow-sequences-iteration"], [319, "control-flow-sequences-iteration"]], "More Datatypes": [[264, "more-datatypes"], [271, "more-datatypes"], [274, "more-datatypes"], [284, "more-datatypes"], [285, "more-datatypes"], [285, "id2"], [290, "more-datatypes"], [291, "more-datatypes"], [312, "more-datatypes"], [313, "more-datatypes"], [318, "more-datatypes"], [324, "more-datatypes"], [363, "more-datatypes"]], "Exercise Series: CSV Files": [[264, "exercise-series-csv-files"], [284, "exercise-series-csv-files"], [285, "exercise-series-csv-files"], [290, "exercise-series-csv-files"], [291, "exercise-series-csv-files"], [312, "exercise-series-csv-files"], [313, "exercise-series-csv-files"], [318, "exercise-series-csv-files"], [324, "exercise-series-csv-files"]], "Advanced Language Features": [[264, "advanced-language-features"], [284, "advanced-language-features"], [285, "advanced-language-features"], [290, "advanced-language-features"], [426, "advanced-language-features"]], "Noob Exercises": [[264, "noob-exercises"]], "Object Oriented": [[265, "Object-Oriented"]], "Lists and Tuples": [[265, "Lists-and-Tuples"]], "for, and Iteration, and Generators": [[265, "for,-and-Iteration,-and-Generators"]], "Lists, Dictionaries, Generators, Constructors": [[265, "Lists,-Dictionaries,-Generators,-Constructors"]], "And Lists? Mutable!": [[265, "And-Lists?-Mutable!"]], "Tuples?": [[265, "Tuples?"]], "set": [[265, "set"]], "More About Sets": [[265, "More-About-Sets"], [292, "More-About-Sets"], [1055, "more-about-sets"]], "Comprehensions (List, Dictionary, Set)": [[265, "Comprehensions-(List,-Dictionary,-Set)"], [314, "Comprehensions-(List,-Dictionary,-Set)"], [1002, "comprehensions-list-dictionary-set"]], "Generator Expressions": [[265, "Generator-Expressions"]], "eval and exec": [[265, "eval-and-exec"]], "Linux Basics (2023-01-23 - 2023-01-26)": [[267, "linux-basics-2023-01-23-2023-01-26"], [358, "linux-basics-2023-01-23-2023-01-26"]], "Embedded Linux Systems Programming (2023-02-13 - 2023-02-17)": [[268, "embedded-linux-systems-programming-2023-02-13-2023-02-17"], [358, "embedded-linux-systems-programming-2023-02-13-2023-02-17"]], "WSL For Core Linux Topics": [[268, "wsl-for-core-linux-topics"]], "Cross Development For Hardware Topics": [[268, "cross-development-for-hardware-topics"]], "Day 1: Overview": [[268, "day-1-overview"]], "Introductory Live Hacking": [[268, "introductory-live-hacking"]], "The Shell": [[268, "the-shell"]], "Processes Quick Walk-Through": [[268, "processes-quick-walk-through"]], "Permissions": [[268, "permissions"]], "Development: CMake Quick Intro, And Git Quick Intro": [[268, "development-cmake-quick-intro-and-git-quick-intro"]], "UART": [[268, "uart"]], "SUSI": [[268, "susi"]], "Secure Shell (SSH)": [[268, "secure-shell-ssh"]], "Miscellaneous Hardware": [[268, "miscellaneous-hardware"]], "Group Exercise": [[268, "group-exercise"]], "Untold": [[268, "untold"], [278, "untold"], [281, "untold"]], "More From The Commandline": [[268, "more-from-the-commandline"]], "Multithreading (And C++)": [[268, "multithreading-and-c"]], "Whetting Your Appetite (Jupyter Notebook)": [[269, "Whetting-Your-Appetite-(Jupyter-Notebook)"]], "Filter in Pandas": [[269, "Filter-in-Pandas"]], "Copy vs Reference": [[269, "Copy-vs-Reference"]], "Immutable": [[269, "Immutable"]], "String": [[269, "String"]], "Regex": [[269, "Regex"]], "Whetting Your Appetite (Livehacking Demo)": [[270, "whetting-your-appetite-livehacking-demo"]], "Pipeline Driver": [[270, "pipeline-driver"]], "Virtual Environment Setup": [[270, "virtual-environment-setup"]], "Filter: Add Category: card-payment": [[270, "filter-add-category-card-payment"]], "Filter: Select Uncategorized": [[270, "filter-select-uncategorized"]], "More Categories": [[270, "more-categories"]], "Python For SAP Developers (2023-03-13 - 2023-03-15)": [[271, "python-for-sap-developers-2023-03-13-2023-03-15"], [358, "python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1 (Basics)": [[271, "day-1-basics"]], "Demo": [[271, "demo"]], "Day 2 (Basics, Continued)": [[271, "day-2-basics-continued"]], "Pandas": [[271, "pandas"], [272, "Pandas"], [274, "pandas"], [278, "pandas"], [303, "pandas"], [1126, "pandas"]], "Hacking About On A SAP Test Dataset": [[271, "hacking-about-on-a-sap-test-dataset"], [275, "hacking-about-on-a-sap-test-dataset"]], "Untold (From Original Agenda)": [[271, "untold-from-original-agenda"]], "OO Introduction": [[271, "oo-introduction"], [274, "oo-introduction"]], "Context Managers (Automatic Cleanup)": [[271, "context-managers-automatic-cleanup"], [274, "context-managers-automatic-cleanup"]], "Iteration, Generators, Comprehensions": [[271, "iteration-generators-comprehensions"], [274, "iteration-generators-comprehensions"]], "Decorators, and Related Topics": [[271, "decorators-and-related-topics"], [274, "decorators-and-related-topics"]], "Machine Learning: Pandas, NumPy, And Algorithms": [[271, "machine-learning-pandas-numpy-and-algorithms"]], "2023-03-13": [[272, "2023-03-13"]], "Comment vs Docstring": [[272, "Comment-vs-Docstring"]], "Mutable? Immutable?": [[272, "Mutable?-Immutable?"]], "Lists": [[272, "Lists"], [272, "id2"], [286, "Lists"]], "Tuples": [[272, "Tuples"]], "DataType Conversiosn": [[272, "DataType-Conversiosn"]], "String, File IO Exercise": [[272, "String,-File-IO-Exercise"]], "Python For SAP Developers (Jupyter Notebook)": [[273, "python-for-sap-developers-jupyter-notebook"]], "Original Agenda: Python For SAP Developers (2023-03-13 - 2023-03-15)": [[274, "original-agenda-python-for-sap-developers-2023-03-13-2023-03-15"]], "Day 1: Basics": [[274, "day-1-basics"], [307, "day-1-basics"]], "Day 2: Outlook Into Advanced Python": [[274, "day-2-outlook-into-advanced-python"]], "Day 3: Domain Specifics": [[274, "day-3-domain-specifics"]], "NumPy": [[274, "numpy"], [303, "numpy"]], "Some Usecases On A Test Dataset From SAP": [[276, "Some-Usecases-On-A-Test-Dataset-From-SAP"]], "Dropping Columns That Contain Only NaN Values": [[276, "Dropping-Columns-That-Contain-Only-NaN-Values"]], "DataFrame.isna()": [[276, "DataFrame.isna()"]], "DataFrame.all() (and any())": [[276, "DataFrame.all()-(and-any())"]], "Column Selection": [[276, "Column-Selection"]], "Dropping Columns": [[276, "Dropping-Columns"]], "Fixing Date Values/Columns, And Operating With Date And Time": [[276, "Fixing-Date-Values/Columns,-And-Operating-With-Date-And-Time"]], "pandas.to_datetime()": [[276, "pandas.to_datetime()"]], "Converting The Entire DateDATE Column To A Workable Type (And Working With It)": [[276, "Converting-The-Entire-DateDATE-Column-To-A-Workable-Type-(And-Working-With-It)"]], "Conversion": [[276, "Conversion"]], "Usage: A Filter": [[276, "Usage:-A-Filter"]], "Modify Rows: Increase All Prices Of One Particular Store By 10%": [[276, "Modify-Rows:-Increase-All-Prices-Of-One-Particular-Store-By-10%"]], "Filter Readability: Combining Filters": [[276, "Filter-Readability:-Combining-Filters"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-23)": [[277, "c-for-embedded-developers-2023-03-20-2023-03-23"]], "Preferred: Ubuntu under Windows (WSL)": [[277, "preferred-ubuntu-under-windows-wsl"], [279, "preferred-ubuntu-under-windows-wsl"]], "Unsupported Environments": [[277, "unsupported-environments"]], "Skeleton Project Setup": [[277, "skeleton-project-setup"], [279, "skeleton-project-setup"]], "Classes, Objects, Methods": [[277, "classes-objects-methods"]], "Heavy Weight OO \ud83d\udcaa": [[277, "heavy-weight-oo-muscle"], [279, "heavy-weight-oo-muscle"]], "Resource Management Pitfalls": [[277, "resource-management-pitfalls"]], "R-Value References/Moving, And Managed Pointers": [[277, "r-value-references-moving-and-managed-pointers"]], "A Little Concurrency": [[277, "a-little-concurrency"]], "Untold So Far": [[277, "untold-so-far"]], "C++ Standard Library": [[277, "c-standard-library"]], "Miscellaneous Topics": [[277, "miscellaneous-topics"]], "Clean Code Development With Python (2023-03-28 - 2023-03-29)": [[278, "clean-code-development-with-python-2023-03-28-2023-03-29"]], "Clean Code?": [[278, "clean-code"], [280, "clean-code"], [281, "clean-code"]], "Demo Hacking": [[278, "demo-hacking"]], "Python Development: Select Topics": [[278, "python-development-select-topics"]], "Built-In Types: Facts": [[278, "built-in-types-facts"]], "for Loops, And The Iterator Protocol": [[278, "for-loops-and-the-iterator-protocol"]], "Day 2: Clean Code? (Software Development: A Craft)": [[278, "day-2-clean-code-software-development-a-craft"]], "Closures, And Function Parameters": [[278, "closures-and-function-parameters"]], "Generators (Again), yield Fixtures, And yield Context Managers": [[278, "generators-again-yield-fixtures-and-yield-context-managers"]], "Decorators (The Ominous @)": [[278, "decorators-the-ominous"]], "Modules And Packages": [[278, "modules-and-packages"], [302, "modules-and-packages"]], "Design Patterns": [[278, "design-patterns"]], "C++ For Embedded Developers (2023-04-18 - 2023-04-20)": [[279, "c-for-embedded-developers-2023-04-18-2023-04-20"], [358, "c-for-embedded-developers-2023-04-18-2023-04-20"]], "Some Details": [[279, "some-details"]], "Standard Template Library": [[279, "standard-template-library"], [633, "standard-template-library"]], "Warm-Up": [[279, "warm-up"]], "Sensor Exercise, Resolved": [[279, "sensor-exercise-resolved"]], "OO, Cont\u2019d": [[279, "oo-cont-d"]], "Smart Pointers (Continued)": [[279, "smart-pointers-continued"]], "Exercises: Containers And Algorithms": [[279, "exercises-containers-and-algorithms"]], "Exercises: OO And Interfaces": [[279, "exercises-oo-and-interfaces"]], "Agenda: Python Advanced (2023-04-24 - 2023-04-26)": [[280, "agenda-python-advanced-2023-04-24-2023-04-26"]], "Day 1: Python Inside Out": [[280, "day-1-python-inside-out"], [281, "day-1-python-inside-out"]], "Exercise Prerequisites": [[280, "exercise-prerequisites"], [302, "exercise-prerequisites"]], "References And Other Pitfalls": [[280, "references-and-other-pitfalls"]], "Looping Constructs (With An Emphasis On The else Clause)": [[280, "looping-constructs-with-an-emphasis-on-the-else-clause"], [302, "looping-constructs-with-an-emphasis-on-the-else-clause"], [306, "looping-constructs-with-an-emphasis-on-the-else-clause"]], "Closures, Decorators And More": [[280, "closures-decorators-and-more"], [281, "closures-decorators-and-more"], [302, "closures-decorators-and-more"], [306, "closures-decorators-and-more"]], "Dynamic Features": [[280, "dynamic-features"], [281, "dynamic-features"], [282, "Dynamic-Features"], [302, "dynamic-features"], [306, "dynamic-features"]], "Error Handling And Recovery": [[280, "error-handling-and-recovery"], [281, "error-handling-and-recovery"], [302, "error-handling-and-recovery"], [303, "error-handling-and-recovery"], [306, "error-handling-and-recovery"]], "Miscellaneous Threading": [[280, "miscellaneous-threading"], [281, "miscellaneous-threading"]], "Day 2: Clean Code (In A Broader Sense), Group Project Kickoff": [[280, "day-2-clean-code-in-a-broader-sense-group-project-kickoff"]], "Group Project: Discussion": [[280, "group-project-discussion"]], "Design Patterns Overview": [[280, "design-patterns-overview"], [281, "design-patterns-overview"]], "Day 3: Group Project": [[280, "day-3-group-project"], [281, "day-3-group-project"]], "Python Advanced (2023-04-24 - 2023-04-26)": [[281, "python-advanced-2023-04-24-2023-04-26"], [358, "python-advanced-2023-04-24-2023-04-26"]], "Day 2: Object Oriented Programming, And Miscellaneous Discussion": [[281, "day-2-object-oriented-programming-and-miscellaneous-discussion"]], "Morning Opening": [[281, "morning-opening"]], "Object Oriented Programming (Continued)": [[281, "object-oriented-programming-continued"]], "Project Setup (IDE Usage?)": [[281, "project-setup-ide-usage"]], "Continue Hacking": [[281, "continue-hacking"]], "Test Driven Development, pytest": [[281, "test-driven-development-pytest"]], "Jupyter Notebook: Python Advanced (2023-04-24 - 2023-04-26)": [[282, "Jupyter-Notebook:-Python-Advanced-(2023-04-24---2023-04-26)"]], "is vs.\u00a0==": [[282, "is-vs.\u00a0=="]], "Compound DataTypes": [[282, "Compound-DataTypes"]], "class": [[282, "class"]], "Jupyter Notebook (Structure): Python Advanced (2023-04-24 - 2023-04-26)": [[283, "jupyter-notebook-structure-python-advanced-2023-04-24-2023-04-26"]], "Agenda: Python Basics (2023-05-15 - 2023-05-17)": [[284, "agenda-python-basics-2023-05-15-2023-05-17"]], "Python Basics (2023-05-15 - 2023-05-17)": [[285, "python-basics-2023-05-15-2023-05-17"], [286, "Python-Basics-(2023-05-15---2023-05-17)"], [358, "python-basics-2023-05-15-2023-05-17"]], "Morning Awakening": [[285, "morning-awakening"]], "A Bit Of venv, A Bit Of pip": [[285, "a-bit-of-venv-a-bit-of-pip"]], "Modules from Standard Library": [[285, "modules-from-standard-library"], [1106, "modules-from-standard-library"]], "Immutable vs.\u00a0Mutable": [[286, "Immutable-vs.\u00a0Mutable"]], "The range Function": [[286, "The-range-Function"], [1045, "the-range-function"]], "Lambda, And Functional Programming Tools": [[286, "Lambda,-And-Functional-Programming-Tools"]], "Agenda: Linux Basics (2023-05-23 - 2023-05-25)": [[288, "agenda-linux-basics-2023-05-23-2023-05-25"]], "Linux Basics (2023-05-23 - 2023-05-25)": [[289, "linux-basics-2023-05-23-2023-05-25"], [358, "linux-basics-2023-05-23-2023-05-25"]], "Introduction: Concepts and Terminology": [[289, "introduction-concepts-and-terminology"], [842, "introduction-concepts-and-terminology"]], "The Shell (Bash - \u201cBourne Again Shell\u201d)": [[289, "the-shell-bash-bourne-again-shell"], [289, "id1"], [888, "the-shell-bash-bourne-again-shell"]], "Tools: Inspecting Text Files": [[289, "tools-inspecting-text-files"], [898, "tools-inspecting-text-files"]], "File System Permissions": [[289, "file-system-permissions"], [289, "id2"], [863, "file-system-permissions"]], "Morning Wakeup": [[289, "morning-wakeup"], [291, "morning-wakeup"], [317, "morning-wakeup"]], "I/O Redirection And Pipes": [[289, "i-o-redirection-and-pipes"], [849, "i-o-redirection-and-pipes"]], "Archiving and Compression": [[289, "archiving-and-compression"], [831, "archiving-and-compression"], [833, "archiving-and-compression"]], "Networking": [[289, "networking"]], "Processes And Scheduling": [[289, "processes-and-scheduling"]], "SSH: Secure Shell": [[289, "ssh-secure-shell"], [920, "ssh-secure-shell"]], "Shell Scripting (at least some of it)": [[289, "shell-scripting-at-least-some-of-it"]], "Agenda: Python Basics (2023-06-20 - 2023-06-22)": [[290, "agenda-python-basics-2023-06-20-2023-06-22"]], "Python Basics (2023-06-20 - 2023-06-22)": [[291, "python-basics-2023-06-20-2023-06-22"], [292, "Python-Basics-(2023-06-20---2023-06-22)"], [358, "python-basics-2023-06-20-2023-06-22"]], "Day2": [[291, "day2"]], "File I/O, And Encoding": [[291, "file-i-o-and-encoding"]], "Python Videos": [[291, "python-videos"]], "NumPy, Pandas, Matplotlib": [[291, "numpy-pandas-matplotlib"]], "DataTypes": [[292, "DataTypes"], [314, "DataTypes"]], "(Im)mutable?": [[292, "(Im)mutable?"]], "Exercise: Mixed List, Interactive Interpreter": [[292, "Exercise:-Mixed-List,-Interactive-Interpreter"]], "len(), range(), for": [[292, "len(),-range(),-for"]], "Generators, yield": [[292, "Generators,-yield"]], "Other -ables: Callable": [[292, "Other--ables:-Callable"]], "exec() (and eval())": [[292, "exec()-(and-eval())"]], "Formatting (f-Strings)": [[292, "Formatting-(f-Strings)"]], "Python Basics (Jupyter Notebook)": [[293, "python-basics-jupyter-notebook"], [315, "python-basics-jupyter-notebook"]], "Agenda: CMake (2023-07-03)": [[294, "agenda-cmake-2023-07-03"]], "Toolchain Introduction": [[294, "toolchain-introduction"], [310, "toolchain-introduction"], [1161, "toolchain-introduction"]], "Project Structure, Dependencies": [[294, "project-structure-dependencies"], [310, "project-structure-dependencies"], [1161, "project-structure-dependencies"]], "External Dependencies": [[294, "external-dependencies"], [310, "external-dependencies"], [453, "external-dependencies"], [1161, "external-dependencies"]], "Code Generators": [[294, "code-generators"], [310, "code-generators"], [1161, "code-generators"]], "Automatic Testing": [[294, "automatic-testing"], [310, "automatic-testing"], [1161, "automatic-testing"]], "Installation And Deployment": [[294, "installation-and-deployment"], [310, "installation-and-deployment"], [1161, "installation-and-deployment"]], "CMake: An Introduction (2023-07-18)": [[295, "cmake-an-introduction-2023-07-18"], [358, "cmake-an-introduction-2023-07-18"]], "Python Advanced (2023-09-25 - 2023-09-27)": [[296, "python-advanced-2023-09-25-2023-09-27"], [297, "Python-Advanced-(2023-09-25---2023-09-27)"], [358, "python-advanced-2023-09-25-2023-09-27"]], "Recap Of Python Basics Course (Before Summer)": [[296, "recap-of-python-basics-course-before-summer"], [299, "recap-of-python-basics-course-before-summer"]], "Project Management: Requirements, Sandboxing, Testing": [[296, "project-management-requirements-sandboxing-testing"], [299, "project-management-requirements-sandboxing-testing"]], "Into The Wild: Group Project Kickoff": [[296, "into-the-wild-group-project-kickoff"], [299, "into-the-wild-group-project-kickoff"]], "OO Design: Duck Typing, Inheritance, And Abstract Base Classes": [[296, "oo-design-duck-typing-inheritance-and-abstract-base-classes"], [299, "oo-design-duck-typing-inheritance-and-abstract-base-classes"]], "Package And Dependency Management": [[296, "package-and-dependency-management"]], "Equality vs.\u00a0Identity": [[297, "Equality-vs.\u00a0Identity"]], "Functions Are Objects": [[297, "Functions-Are-Objects"]], "Python Advanced, Jupyter Notebook (2023-09-25 - 2023-09-27)": [[298, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"], [301, "python-advanced-jupyter-notebook-2023-09-25-2023-09-27"]], "Python Advanced (2023-10-09 - 2023-10-11)": [[299, "python-advanced-2023-10-09-2023-10-11"], [358, "python-advanced-2023-10-09-2023-10-11"]], "Classes: Basics": [[299, "classes-basics"]], "Classes: More": [[299, "classes-more"]], "Spoiler: Group Project Outcome": [[299, "spoiler-group-project-outcome"]], "More About Functions": [[299, "more-about-functions"]], "Python Advanced (2023-10-09 - 2023-10-09)": [[300, "Python-Advanced-(2023-10-09---2023-10-09)"]], "Type Annotations": [[300, "Type-Annotations"]], "Agenda: Python Advanced (2023-10-24 - 2023-10-26)": [[302, "agenda-python-advanced-2023-10-24-2023-10-26"]], "Day 1: Basic Python": [[302, "day-1-basic-python"], [306, "day-1-basic-python"]], "Datatypes, Datatypes": [[302, "datatypes-datatypes"], [306, "datatypes-datatypes"]], "Day 2: Advanced Python Features": [[302, "day-2-advanced-python-features"]], "Multiprocessing": [[302, "multiprocessing"]], "Day 3: Into The Wild": [[302, "day-3-into-the-wild"]], "Data Science Topics": [[302, "data-science-topics"], [306, "data-science-topics"]], "Group Project: An Idea": [[302, "group-project-an-idea"]], "Python Advanced (2023-10-24 - 2023-10-26)": [[303, "python-advanced-2023-10-24-2023-10-26"], [358, "python-advanced-2023-10-24-2023-10-26"]], "Python Basics Recap": [[303, "python-basics-recap"], [304, "Python-Basics-Recap"]], "The Very Basics": [[303, "the-very-basics"]], "range(), And Iteration In General": [[303, "range-and-iteration-in-general"]], "Leftovers From Yesterday": [[303, "leftovers-from-yesterday"]], "Object Oriented Programming, Continued": [[303, "object-oriented-programming-continued"], [303, "id1"]], "Group Project, OO-ified": [[303, "group-project-oo-ified"]], "Decorator Toolcase: *args, **kwargs": [[303, "decorator-toolcase-args-kwargs"]], "Morning Greeting": [[303, "morning-greeting"]], "Decorator Toolcase, Continued (Including Function Scoping and global)": [[303, "decorator-toolcase-continued-including-function-scoping-and-global"]], "Sensor Implementation That Receives UDP Datagrams": [[303, "sensor-implementation-that-receives-udp-datagrams"]], "CompositeSink": [[303, "compositesink"]], "MQTT Sink Implementation": [[303, "mqtt-sink-implementation"]], "Timestamps?": [[303, "timestamps"]], "Jupyter Notebook: Python Advanced": [[304, "Jupyter-Notebook:-Python-Advanced"]], "Jupyter Notebook Explanation": [[304, "Jupyter-Notebook-Explanation"]], "Integers and Floats": [[304, "Integers-and-Floats"]], "Strings: String Methods, Docstrings, \u2026": [[304, "Strings:-String-Methods,-Docstrings,-\u2026"]], "Python Documentation Overview: https://docs.python.org/3/": [[304, "Python-Documentation-Overview:-https://docs.python.org/3/"]], "assert": [[304, "assert"]], "Iteration, Generators, Iterator Protocol": [[304, "Iteration,-Generators,-Iterator-Protocol"]], "AAARGHHH": [[304, "AAARGHHH"]], "Generator Expresssions": [[304, "Generator-Expresssions"]], "Dictionary Comprehension": [[304, "Dictionary-Comprehension"], [314, "Dictionary-Comprehension"], [1002, "dictionary-comprehension"]], "Functional Tools": [[304, "Functional-Tools"]], "filter()": [[304, "filter()"], [314, "filter()"]], "Jupyter Notebook (Structure): Python Advanced (2023-10-24 - 2023-10-26)": [[305, "jupyter-notebook-structure-python-advanced-2023-10-24-2023-10-26"]], "Agenda: Python Advanced (2023-11-22 - 2023-11-24)": [[306, "agenda-python-advanced-2023-11-22-2023-11-24"]], "Exercise Prerequisites: The Commandline": [[306, "exercise-prerequisites-the-commandline"]], "Day 2: Group Project Kickoff, Advanced Topics": [[306, "day-2-group-project-kickoff-advanced-topics"]], "Project Management, Test Driven Development": [[306, "project-management-test-driven-development"]], "Day 3: More Advanced Topics (All The Rest, And More)": [[306, "day-3-more-advanced-topics-all-the-rest-and-more"]], "CSV And Databases": [[306, "csv-and-databases"]], "Python Advanced (2023-11-22 - 2023-22-24)": [[307, "python-advanced-2023-11-22-2023-22-24"]], "Day 2: Group Project, And Object Oriented Programming": [[307, "day-2-group-project-and-object-oriented-programming"]], "Day 3: OO, Hacking, Python Specials": [[307, "day-3-oo-hacking-python-specials"]], "Jupyter Notebook: Python Advanced (2023-11-22 - 2023-11-24)": [[308, "Jupyter-Notebook:-Python-Advanced-(2023-11-22---2023-11-24)"]], "Assignment, And IDs": [[308, "Assignment,-And-IDs"]], "(Im)Mutability": [[308, "(Im)Mutability"]], "Operator Overloading (Basics)": [[308, "Operator-Overloading-(Basics)"]], "And Iterables? The Iterator Protocol!": [[308, "And-Iterables?-The-Iterator-Protocol!"]], "Methods": [[308, "Methods"], [577, "methods"], [724, "methods"], [725, "methods"], [726, "methods"], [1023, "methods"]], "numpy, pandas, matplotlib": [[308, "numpy,-pandas,-matplotlib"]], "Jupyter Notebook (Structure): Python Advanced (2023-11-22 - 2023-11-24)": [[309, "jupyter-notebook-structure-python-advanced-2023-11-22-2023-11-24"]], "Agenda: CMake (2023-11-27)": [[310, "agenda-cmake-2023-11-27"]], "CMake: An Introduction (2023-11-27)": [[311, "cmake-an-introduction-2023-11-27"], [358, "cmake-an-introduction-2023-11-27"]], "Agenda: Python Basics (2023-11-29 - 2023-12-01)": [[312, "agenda-python-basics-2023-11-29-2023-12-01"]], "Python Basics (2023-11-29 - 2023-12-01)": [[313, "python-basics-2023-11-29-2023-12-01"], [314, "Python-Basics-(2023-11-29---2023-12-01)"], [358, "python-basics-2023-11-29-2023-12-01"]], "Day 2, Morning Awakening": [[313, "day-2-morning-awakening"]], "Control Flow, Sequences, Iteration (Continued)": [[313, "control-flow-sequences-iteration-continued"]], "Day 3, Morning Awakening": [[313, "day-3-morning-awakening"]], "Dictionary (mutable)": [[314, "Dictionary-(mutable)"]], "Set (mutable)": [[314, "Set-(mutable)"]], "Boolean (immutable)": [[314, "Boolean-(immutable)"]], "split() and join()": [[314, "split()-and-join()"]], "Pythonicity (enumerate())": [[314, "Pythonicity-(enumerate())"]], "pandas, matplotlib": [[314, "pandas,-matplotlib"]], "Generator Expression": [[314, "Generator-Expression"]], "zip(), And Dictionaries": [[314, "zip(),-And-Dictionaries"]], "Agenda: C++: Advanced Topics": [[316, "agenda-c-advanced-topics"]], "Introduction: A New Language To Me": [[316, "introduction-a-new-language-to-me"]], "constexpr, constinit, consteval": [[316, "constexpr-constinit-consteval"]], "Functions: std::function<>, Lambdas": [[316, "functions-std-function-lambdas"], [317, "functions-std-function-lambdas"]], "Moving, RValue References: Do We Want To Copy Sensors?": [[316, "moving-rvalue-references-do-we-want-to-copy-sensors"]], "Moving: Usage": [[316, "moving-usage"]], "Moving: Implementation": [[316, "moving-implementation"]], "Type Erasure": [[316, "type-erasure"]], "Allocators": [[316, "allocators"], [628, "allocators"], [746, "allocators"]], "C++ Pythonic Toolcase": [[316, "c-pythonic-toolcase"]], "Outlook In >=20": [[316, "outlook-in-20"]], "Attributes And The Like": [[316, "attributes-and-the-like"]], "<algorithm> Overview": [[316, "algorithm-overview"]], "Miscellaneous Miscellaneous": [[316, "miscellaneous-miscellaneous"]], "C++: Advanced Topics (2023-12-04 - 2023-12-06)": [[317, "c-advanced-topics-2023-12-04-2023-12-06"], [358, "c-advanced-topics-2023-12-04-2023-12-06"]], "Day 1: Introduction: C++, A New Language": [[317, "day-1-introduction-c-a-new-language"]], "Pythonicity": [[317, "pythonicity"]], "New OO Features": [[317, "new-oo-features"]], "Day 2: Simply Getting Stuff Done": [[317, "day-2-simply-getting-stuff-done"]], "Classic Polymorphism: Interfaces": [[317, "classic-polymorphism-interfaces"]], "Move Semantics": [[317, "move-semantics"]], "Day 3: All The Rest": [[317, "day-3-all-the-rest"]], "Interfaces, And OO Design: Kochtopf And The Cloud": [[317, "interfaces-and-oo-design-kochtopf-and-the-cloud"]], "Moving, Roundup": [[317, "moving-roundup"]], "Containers And Algorithms": [[317, "containers-and-algorithms"]], "And Embedded?": [[317, "and-embedded"]], "Still Untold": [[317, "still-untold"]], "Agenda: Python Basics (2023-12-18 - 2023-12-20)": [[318, "agenda-python-basics-2023-12-18-2023-12-20"]], "C++ For Embedded Developers (Beginning of 2023)": [[322, "c-for-embedded-developers-beginning-of-2023"]], "Python/SAP": [[323, "python-sap"]], "Agenda: Python Basics (Beginning Of 2024)": [[324, "agenda-python-basics-beginning-of-2024"]], "Numerics: Pandas, NumPy": [[324, "numerics-pandas-numpy"]], "Screenplay Checker": [[325, "screenplay-checker"]], "GPIO: Blinklicht": [[326, "gpio-blinklicht"]], "Commandline": [[326, "commandline"], [331, "commandline"], [868, "commandline"]], "sysfs GPIO": [[326, "sysfs-gpio"]], "Electronic Aspect": [[326, "electronic-aspect"]], "External Circuitry": [[326, "external-circuitry"]], "Raspberry Header Pinout": [[326, "raspberry-header-pinout"]], "GPIO: Blinklicht Interface": [[327, "gpio-blinklicht-interface"]], "GPIO: Object Oriented Blinklicht": [[328, "gpio-object-oriented-blinklicht"]], "GPIO: Blinklicht Unittests": [[329, "gpio-blinklicht-unittests"]], "ECE19: Exercises and Custom Topics": [[330, "ece19-exercises-and-custom-topics"]], "Reading a File": [[331, "reading-a-file"], [930, "reading-a-file"]], "Output": [[331, "output"]], "2021-05-20 (G2)": [[332, "2021-05-20-(G2)"]], "Reading File in One Big Swoop": [[332, "Reading-File-in-One-Big-Swoop"]], "Reading File in Fixed Sized Chunks": [[332, "Reading-File-in-Fixed-Sized-Chunks"]], "Reading File Line by Line": [[332, "Reading-File-Line-by-Line"]], "Iterating a File": [[332, "Iterating-a-File"]], "String Methods (Needed to Implement the Exercise)": [[332, "String-Methods-(Needed-to-Implement-the-Exercise)"]], "str.strip(), str.rstrip(), str.lstrip()": [[332, "str.strip(),-str.rstrip(),-str.lstrip()"]], "str.split()": [[332, "str.split()"]], "2021-05-21": [[333, "2021-05-21"], [340, "id11"]], "Modules and Packages": [[333, "Modules-and-Packages"], [1013, "modules-and-packages"]], "Strings vs.\u00a0Bytes": [[334, "Strings-vs.\u00a0Bytes"]], "Batteries": [[335, "Batteries"]], "Key Value Map": [[335, "Key-Value-Map"]], "Comments vs Documentation": [[335, "Comments-vs-Documentation"]], "Multiline String (btw.)": [[335, "Multiline-String-(btw.)"]], "Integer Numbers (Literals)": [[335, "Integer-Numbers-(Literals)"]], "Arithmetic Operators": [[335, "Arithmetic-Operators"], [384, "arithmetic-operators"], [1025, "arithmetic-operators"]], "Wertebereich von Integers": [[335, "Wertebereich-von-Integers"]], "An Example": [[336, "An-Example"], [1048, "an-example"]], "Sidenote: Pure Beauty": [[336, "Sidenote:-Pure-Beauty"], [1048, "sidenote-pure-beauty"]], "Parameters and Types": [[336, "Parameters-and-Types"], [1048, "parameters-and-types"]], "Pitfalls": [[336, "Pitfalls"]], "Cloud Computer, SSH Login": [[337, "cloud-computer-ssh-login"]], "Machine, Logins": [[337, "machine-logins"]], "Login via Secure Shell (SSH)": [[337, "login-via-secure-shell-ssh"]], "Formalit\u00e4ten": [[338, "formalitaten"]], "Embedded Computing 1 (ECE 19)": [[339, "embedded-computing-1-ece-19"]], "Daily Log": [[340, "daily-log"]], "2021-03-04": [[340, "id1"]], "2021-03-05": [[340, "id2"]], "Cheat Sheets": [[340, null]], "2021-03-18": [[340, "id3"]], "2021-03-26": [[340, "id4"]], "2021-04-15": [[340, "id5"]], "2021-04-21": [[340, "id6"]], "Git Intro": [[340, "git-intro"]], "Download and Installation": [[340, null], [345, null]], "2021-04-29": [[340, "id7"]], "2021-05-10": [[340, "id8"]], "Org Stuff": [[340, "org-stuff"]], "Python: Functions": [[340, "python-functions"]], "2021-05-12": [[340, "id9"]], "Python: Walk-Through Passing and Failing an Exam": [[340, "python-walk-through-passing-and-failing-an-exam"]], "2021-05-{19,20}": [[340, "id10"]], "Reiterating on Exercise": [[340, "reiterating-on-exercise"]], "import argparse": [[340, "import-argparse"]], "Exercise digit (Once More)": [[340, "exercise-digit-once-more"]], "2021-06-01": [[340, "id12"]], "sysfs GPIO: Blinking an LED": [[340, "sysfs-gpio-blinking-an-led"]], "2021-06-07": [[340, "id13"]], "Embedded Computing 1 (Deutsch)": [[341, "embedded-computing-1-deutsch"]], "Lehrinhalte": [[341, "lehrinhalte"]], "Lernergebnisse der LV": [[341, "lernergebnisse-der-lv"]], "Empfohlene oder verpflichtende Fachliteratur und andere Lernressourcen bzw. \u2013instrumente": [[341, "empfohlene-oder-verpflichtende-fachliteratur-und-andere-lernressourcen-bzw-instrumente"]], "Art der Vermittlung": [[341, "art-der-vermittlung"]], "Voraussetzungen und Begleitbedingungen": [[341, "voraussetzungen-und-begleitbedingungen"]], "Pr\u00fcfungsmethode und Beurteilungskriterien": [[341, "prufungsmethode-und-beurteilungskriterien"]], "Embedded Computing 1 (English)": [[342, "embedded-computing-1-english"]], "Course Content": [[342, "course-content"]], "Learning Outcome": [[342, "learning-outcome"]], "Recommended or Required Reading and Other Learning Resources / Tools": [[342, "recommended-or-required-reading-and-other-learning-resources-tools"]], "Mode of delivery": [[342, "mode-of-delivery"]], "Prerequisites and Co-Requisites": [[342, "prerequisites-and-co-requisites"]], "Assessment Methods and Criteria": [[342, "assessment-methods-and-criteria"]], "Plan for Summer 2021": [[343, "plan-for-summer-2021"]], "Linux Introduction": [[343, "linux-introduction"]], "Slides": [[343, null], [343, null], [343, null]], "C/C++ Development": [[343, "c-c-development"]], "Python Development": [[343, "python-development"]], "2021-10-07": [[344, "id1"]], "Whose Fault It Is": [[344, "whose-fault-it-is"]], "2021-10-12 (Bringing Newcomers Up-to-Date)": [[345, "bringing-newcomers-up-to-date"]], "Linux/UNIX": [[345, "linux-unix"]], "Git": [[345, "git"]], "2021-10-28": [[346, "id1"]], "Group Project": [[346, "group-project"]], "Discussion of Tasks": [[346, "discussion-of-tasks"]], "TODOs": [[346, "todos"]], "2021-11-15": [[347, "id1"]], "Systems Programming: Files, Directories, Links \u2026": [[347, "systems-programming-files-directories-links"]], "2021-11-29": [[348, "id1"]], "jjjj": [[348, "jjjj"]], "2021-12-1{4,5}": [[349, "id1"]], "Future Topics": [[349, "future-topics"]], "Threading": [[349, "threading"]], "C++ Sideways": [[349, "c-sideways"]], "2022-01-10": [[350, "id1"]], "Scheduling": [[350, "scheduling"], [964, "scheduling"], [965, "scheduling"]], "2022-01-12": [[351, "id1"]], "Scheduling and Realtime": [[351, "scheduling-and-realtime"], [355, "scheduling-and-realtime"]], "2022-02-15": [[352, "id1"]], "Agenda/Log": [[353, "agenda-log"], [354, "agenda-log"]], "Embedded Computing 2 (ECE 19)": [[354, "embedded-computing-2-ece-19"]], "Project Repository": [[354, "project-repository"]], "Test Material": [[354, "test-material"]], "Exam Material Overview": [[355, "exam-material-overview"]], "Questions": [[355, "questions"], [355, "id1"], [647, "questions"], [841, "questions"], [855, "questions"], [856, "questions"], [881, "questions"], [988, "questions"]], "Slide Material": [[355, "slide-material"], [355, "id2"]], "Embedded Computing 1+2, ECE 19": [[356, "embedded-computing-1-2-ece-19"]], "Bisher Gehaltene": [[358, "bisher-gehaltene"]], "Python Basics (2023-12-18 - 2023-12-20)": [[358, "python-basics-2023-12-18-2023-12-20"], [320, "Python-Basics-(2023-12-18---2023-12-20)"], [319, "python-basics-2023-12-18-2023-12-20"], [321, "python-basics-2023-12-18-2023-12-20"]], "Python Advanced (2023-11-22 - 2023-11-24)": [[358, "python-advanced-2023-11-22-2023-11-24"]], "Clean Code Development With Python (2023-03-28 - 2023-03-30)": [[358, "clean-code-development-with-python-2023-03-28-2023-03-30"]], "C++ For Embedded Developers (2023-03-20 - 2023-03-22)": [[358, "c-for-embedded-developers-2023-03-20-2023-03-22"]], "Python (2022-11-07 - 2022-11-10, 2022-12-01)": [[358, "python-2022-11-07-2022-11-10-2022-12-01"]], "C++: A New Language Starting In 2011 (2022-07-26 - 2022-07-27)": [[358, "c-a-new-language-starting-in-2011-2022-07-26-2022-07-27"]], "C++: A New Language Starting In 2011 (2022-06-14 - 2022-06-15)": [[358, "c-a-new-language-starting-in-2011-2022-06-14-2022-06-15"]], "Python Advanced (2022-03-15 - 2022-03-17)": [[358, "python-advanced-2022-03-15-2022-03-17"]], "Python Basics (2021-08-23 - 2021-08-25)": [[358, "python-basics-2021-08-23-2021-08-25"]], "Programmieren mit C++ (2021-07-12 - 2021-07-16)": [[358, "programmieren-mit-c-2021-07-12-2021-07-16"]], "Linux Basics, Shell Scripting (2019-03-29 - 1.4.2021)": [[358, "linux-basics-shell-scripting-2019-03-29-1-4-2021"]], "Python (22.3.2021 - 25.3.2021)": [[358, "python-22-3-2021-25-3-2021"]], "Python Advanced (15.3.2021 - 17.3.2021)": [[358, "python-advanced-15-3-2021-17-3-2021"]], "Linux Kernel Driver Development Basics (8.3.2021 - 12.3.2020)": [[358, "linux-kernel-driver-development-basics-8-3-2021-12-3-2020"]], "Programmierung Grundlagen, anhand von Python (13. und 14.1.2021)": [[358, "programmierung-grundlagen-anhand-von-python-13-und-14-1-2021"]], "Linux und Raspberry Pi (3.11.2020, 4.11.2020, 17.11.2020)": [[358, "linux-und-raspberry-pi-3-11-2020-4-11-2020-17-11-2020"]], "Python Basics (19.10.2020 - 22.10.2020)": [[358, "python-basics-19-10-2020-22-10-2020"]], "Python Advanced (13.5.2020 - 14.5.2020 bei einer Firma in Graz)": [[358, "python-advanced-13-5-2020-14-5-2020-bei-einer-firma-in-graz"]], "C++ f\u00fcr Embedded-Entwickler (30.3.2020 - 4.4.2020, bei einer Firma in Baden-W\u00fcrttemberg)": [[358, "c-fur-embedded-entwickler-30-3-2020-4-4-2020-bei-einer-firma-in-baden-wurttemberg"]], "IPC in Linux (10.1.2020, bei einer Firma in Graz)": [[358, "ipc-in-linux-10-1-2020-bei-einer-firma-in-graz"]], "Python/NumPy (12.11.2019 - 13.11.2019 in Graz)": [[358, "python-numpy-12-11-2019-13-11-2019-in-graz"]], "Python Advanced (9.10.2019 - 10.10.2019 bei einer Firma in Graz)": [[358, "python-advanced-9-10-2019-10-10-2019-bei-einer-firma-in-graz"]], "C f\u00fcr Fortgeschrittene (30.9.2019 - 4.10.2019 in Wiener Neustadt)": [[358, "c-fur-fortgeschrittene-30-9-2019-4-10-2019-in-wiener-neustadt"]], "Einf\u00fchrung in Raspberry Pi (8.7.2019 - 10.7.2019 in Graz)": [[358, "einfuhrung-in-raspberry-pi-8-7-2019-10-7-2019-in-graz"]], "Python Basics (24.6.2019 - 27.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[358, "python-basics-24-6-2019-27-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.6.2019 - 19.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-13-6-2019-19-6-2019-bei-einer-firma-in-oberosterreich"]], "Python Basics (3.6.2019 - 6.6.2019, bei einer Firma in Ober\u00f6sterreich)": [[358, "python-basics-3-6-2019-6-6-2019-bei-einer-firma-in-oberosterreich"]], "Linux Big Picture (27.5.2019 - 29.5.2019, bei einer Firma in Baden-W\u00fcrttemberg)": [[358, "linux-big-picture-27-5-2019-29-5-2019-bei-einer-firma-in-baden-wurttemberg"]], "Python Basics (23.5.2019 - 24.5.2019, bei einer Firma in der Obersteiermark)": [[358, "python-basics-23-5-2019-24-5-2019-bei-einer-firma-in-der-obersteiermark"]], "Korn Shell Scripting (20.5.2019 - 22.5.2019 bei einer Firma in Salzburg)": [[358, "korn-shell-scripting-20-5-2019-22-5-2019-bei-einer-firma-in-salzburg"]], "Linux Basics (13.5.2019 - 15.5.2019, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-13-5-2019-15-5-2019-bei-einer-firma-in-oberosterreich"]], "C: Ausgew\u00e4hlte Themen (17.12.2018 - 19.12.2018 in Graz)": [[358, "c-ausgewahlte-themen-17-12-2018-19-12-2018-in-graz"]], "Python Basics (1.10.2018 - 4.10.2018, bei einer Firma in Ober\u00f6sterreich)": [[358, "python-basics-1-10-2018-4-10-2018-bei-einer-firma-in-oberosterreich"]], "Linux Basics, Shell Scripting (16.7.2018 - 20.7.2018, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-shell-scripting-16-7-2018-20-7-2018-bei-einer-firma-in-oberosterreich"]], "Advanced C on Linux (9.7.2018 - 11.7.2018, Raum N\u00fcrnberg)": [[358, "advanced-c-on-linux-9-7-2018-11-7-2018-raum-nurnberg"]], "Linux f\u00fcr Fortgeschrittene (12.3.2018 - 16.3.2018, Oberb\u00fcren/Schweiz)": [[358, "linux-fur-fortgeschrittene-12-3-2018-16-3-2018-oberburen-schweiz"]], "Linux und Python (11.9.2017 - 13.9.2017, bei einer Firma im Raum M\u00fcnchen)": [[358, "linux-und-python-11-9-2017-13-9-2017-bei-einer-firma-im-raum-munchen"]], "Linux Lowlevel Programming (28.8.2017 - 30.8.2017, Raum N\u00fcrnberg)": [[358, "linux-lowlevel-programming-28-8-2017-30-8-2017-raum-nurnberg"]], "C Refresher (23.8.2017 - 24.8.2017, Raum N\u00fcrnberg)": [[358, "c-refresher-23-8-2017-24-8-2017-raum-nurnberg"]], "C++11: Ausgew\u00e4hlte Themen (6.6.2017 - 8.6.2017 bei einer Firma in Graz)": [[358, "c-11-ausgewahlte-themen-6-6-2017-8-6-2017-bei-einer-firma-in-graz"]], "Linux vom Programmiererstandpunkt (30.12.2016 in Wien)": [[358, "linux-vom-programmiererstandpunkt-30-12-2016-in-wien"]], "Embedded Linux anhand des Raspberry Pi (17.10.2016 - 21.10.2016 bei einer Firma in Baden-W\u00fcrttemberg)": [[358, "embedded-linux-anhand-des-raspberry-pi-17-10-2016-21-10-2016-bei-einer-firma-in-baden-wurttemberg"]], "Linux vom Programmiererstandpunkt (20.9.2016 in Wien)": [[358, "linux-vom-programmiererstandpunkt-20-9-2016-in-wien"]], "C for Advanced Users (5.7.2016 - 6.7.2016, Raum N\u00fcrnberg)": [[358, "c-for-advanced-users-5-7-2016-6-7-2016-raum-nurnberg"]], "Einf\u00fchrung in C++ (22.2.2016 - 26.2.2016 bei einer Firma in Graz)": [[358, "einfuhrung-in-c-22-2-2016-26-2-2016-bei-einer-firma-in-graz"]], "Advanced Python Workshop (20.2.2017 - 23.2.2017, bei einer Firma in Ober\u00f6sterreich)": [[358, "advanced-python-workshop-20-2-2017-23-2-2017-bei-einer-firma-in-oberosterreich"]], "Embedded Linux (30.11.2015 - 4.12.2015, Bodenseo, Hemmenhofen am Bodensee)": [[358, "embedded-linux-30-11-2015-4-12-2015-bodenseo-hemmenhofen-am-bodensee"]], "Linux Kernel, Realtime (17.11.2015 - 19.11.2015 bei einer Firma in Graz)": [[358, "linux-kernel-realtime-17-11-2015-19-11-2015-bei-einer-firma-in-graz"]], "Linux Basics (3.11.2015 - 5.11.2015 bei einer Firma in Graz)": [[358, "linux-basics-3-11-2015-5-11-2015-bei-einer-firma-in-graz"]], "Einf\u00fchrung in Python (5.10.2015 - 6.10.2015 in Wien)": [[358, "einfuhrung-in-python-5-10-2015-6-10-2015-in-wien"]], "Linux Basics, Systemnahe Programmierung (27.7.2015 - 31.7.2015, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-systemnahe-programmierung-27-7-2015-31-7-2015-bei-einer-firma-in-oberosterreich"]], "Design Patterns and Test Driven Development (1.7.2015 - 3.7.2015, Raum N\u00fcrnberg)": [[358, "design-patterns-and-test-driven-development-1-7-2015-3-7-2015-raum-nurnberg"]], "C for Advanced Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[358, "c-for-advanced-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Python (1.6.2015 - 3.6.2015, Mathias Kettner in M\u00fcnchen)": [[358, "python-1-6-2015-3-6-2015-mathias-kettner-in-munchen"]], "Linux Basics, Kernel, Git (9.3.2015 - 13.3.2015, Siemens Braunschweig)": [[358, "linux-basics-kernel-git-9-3-2015-13-3-2015-siemens-braunschweig"]], "Embedded Linux (28.1.2015 - 30.1.2015, bei einer Firma im Raum M\u00fcnchen)": [[358, "embedded-linux-28-1-2015-30-1-2015-bei-einer-firma-im-raum-munchen"]], "C for Intermediate Users (9.12.2014 - 11.12.2014, Raum N\u00fcrnberg)": [[358, "c-for-intermediate-users-9-12-2014-11-12-2014-raum-nurnberg"]], "Linux from Scratch (1.12.2014 - 5.12.2014 LPD Hannover)": [[358, "linux-from-scratch-1-12-2014-5-12-2014-lpd-hannover"]], "Einf\u00fchrung in C++ (7.10.2014 - 10.10.2014 in Wien)": [[358, "einfuhrung-in-c-7-10-2014-10-10-2014-in-wien"]], "Systemnahe Programmierung unter Linux (14.4.2014 - 17.4.2014 in K\u00f6ln)": [[358, "systemnahe-programmierung-unter-linux-14-4-2014-17-4-2014-in-koln"]], "Einf\u00fchrung in C++ (3.3.2014 - 14.3.2014 in Wien)": [[358, "einfuhrung-in-c-3-3-2014-14-3-2014-in-wien"]], "Projektverwaltung mit Subversion und CMake (24.2.2014 - 27.2.2014 in Wien)": [[358, "projektverwaltung-mit-subversion-und-cmake-24-2-2014-27-2-2014-in-wien"]], "Einf\u00fchrung in Python (23.6.2014 - 26.6.2014, LKA Niedersachsen)": [[358, "einfuhrung-in-python-23-6-2014-26-6-2014-lka-niedersachsen"]], "Linux: Boot-Konfiguration und Systemnahe Programmierung (27.5.2014 - 30.5.2014 in Graz)": [[358, "linux-boot-konfiguration-und-systemnahe-programmierung-27-5-2014-30-5-2014-in-graz"]], "Einf\u00fchrung in C (11.11.2013 - 22.11.2013 in Wien)": [[358, "einfuhrung-in-c-11-11-2013-22-11-2013-in-wien"]], "Linux Basics (28.10.2013 - 31.10.2013 in Wien)": [[358, "linux-basics-28-10-2013-31-10-2013-in-wien"]], "Linux Basics, Embedded Linux (14.10.2013 - 15.10.2013 bei einer Firma im Raum M\u00fcnchen)": [[358, "linux-basics-embedded-linux-14-10-2013-15-10-2013-bei-einer-firma-im-raum-munchen"]], "Shell/Bash Scripting (7.10.2013 - 9.10.2013, bei einer Firma in Ober\u00f6sterreich)": [[358, "shell-bash-scripting-7-10-2013-9-10-2013-bei-einer-firma-in-oberosterreich"]], "Alles Linux (1.10.2013 - 4.10.2013, QualiVision in Z\u00fcrich)": [[358, "alles-linux-1-10-2013-4-10-2013-qualivision-in-zurich"]], "Linux from Scratch (16.9.2013 - 20.9.2013, Mathias Kettner in M\u00fcnchen)": [[358, "linux-from-scratch-16-9-2013-20-9-2013-mathias-kettner-in-munchen"]], "Linux Basics (2.7.2013 - 4.7.2013, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-2-7-2013-4-7-2013-bei-einer-firma-in-oberosterreich"]], "Linux - Einf\u00fchrung und Programmierung (27.5.2013 - 29.5.2013, bei einer Firma im Raum M\u00fcnchen)": [[358, "linux-einfuhrung-und-programmierung-27-5-2013-29-5-2013-bei-einer-firma-im-raum-munchen"]], "GNU Make (23.4.2013 in Graz)": [[358, "gnu-make-23-4-2013-in-graz"]], "Linux Basics & Embedded (14.1.2013 - 18.1.2013, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-embedded-14-1-2013-18-1-2013-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah, Embedded, C++ (26.11.2012 - 28.11.2012, bei einer Firma in Hamburg)": [[358, "linux-systemnah-embedded-c-26-11-2012-28-11-2012-bei-einer-firma-in-hamburg"]], "Fehlerdiagnose unter Linux (19.11.2012 - 21.11.2012, Polizei Niedersachsen in Hannover)": [[358, "fehlerdiagnose-unter-linux-19-11-2012-21-11-2012-polizei-niedersachsen-in-hannover"]], "Systemnahe Programmierung unter Linux (29.10.2012 - 30.10.2012, bei einer Firma im Raum M\u00fcnchen)": [[358, "systemnahe-programmierung-unter-linux-29-10-2012-30-10-2012-bei-einer-firma-im-raum-munchen"]], "Einf\u00fchrung in Python (15.10.2012 - 17.10.2012, Mathias Kettner in M\u00fcnchen)": [[358, "einfuhrung-in-python-15-10-2012-17-10-2012-mathias-kettner-in-munchen"]], "Einf\u00fchrung in Python (25.9.2012 - 27.9.2012, STIA in Admont)": [[358, "einfuhrung-in-python-25-9-2012-27-9-2012-stia-in-admont"]], "Linux Systemnah (13.2.2012 bis 15.2.2012, bei einer Firma in Z\u00fcrich)": [[358, "linux-systemnah-13-2-2012-bis-15-2-2012-bei-einer-firma-in-zurich"]], "Einf\u00fchrung in Python (24.1.2012 - 26.1.2012, Mathias Kettner in M\u00fcnchen)": [[358, "einfuhrung-in-python-24-1-2012-26-1-2012-mathias-kettner-in-munchen"]], "Linux Systemnah (19.9.2011 - 22.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-systemnah-19-9-2011-22-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Basics (13.9.2011 - 15.9.2011, bei einer Firma in Ober\u00f6sterreich)": [[358, "linux-basics-13-9-2011-15-9-2011-bei-einer-firma-in-oberosterreich"]], "Linux Systemnah (4.7.2011 - 7.7.2011, Bodenseo, Hemmenhofen am Bodensee)": [[358, "linux-systemnah-4-7-2011-7-7-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux Systemnah (14.2.2011 - 18.2.2011, Bodenseo, Hemmenhofen am Bodensee)": [[358, "linux-systemnah-14-2-2011-18-2-2011-bodenseo-hemmenhofen-am-bodensee"]], "Linux from Scratch (12.12.2010 - 17.12.2010, Mathias Kettner in M\u00fcnchen)": [[358, "linux-from-scratch-12-12-2010-17-12-2010-mathias-kettner-in-munchen"]], "Softwareentwicklung unter Linux (6.12.2010 - 10.12.2010, bei einer Firma in Darmstadt)": [[358, "softwareentwicklung-unter-linux-6-12-2010-10-12-2010-bei-einer-firma-in-darmstadt"]], "Softwareentwicklung unter Linux (24.11.2010 - 26.11.2010, bei einer Firma im Raum Ulm)": [[358, "softwareentwicklung-unter-linux-24-11-2010-26-11-2010-bei-einer-firma-im-raum-ulm"]], "Linux Kernel (25.10.2010 - 26.10.2010, Deutsche Bundeswehr in Wildflecken)": [[358, "linux-kernel-25-10-2010-26-10-2010-deutsche-bundeswehr-in-wildflecken"]], "Softwareentwicklung unter Linux (20.10.2010 - 24.10.2010, Mathias Kettner)": [[358, "softwareentwicklung-unter-linux-20-10-2010-24-10-2010-mathias-kettner"]], "Training Material: Overview and Download": [[359, "training-material-overview-and-download"]], "On Windows": [[360, "on-windows"]], "On Linux": [[360, "on-linux"]], "The Book (1)": [[361, "the-book-1"]], "The Book (2)": [[361, "the-book-2"]], "The Beginning": [[361, "the-beginning"]], "Cool Guys and Their Hobby": [[361, "cool-guys-and-their-hobby"]], "History of UNIX": [[361, "history-of-unix"]], "My First Program (1)": [[362, "my-first-program-1"]], "My First Program (2)": [[362, "my-first-program-2"]], "Character Arrays - Strings": [[362, "character-arrays-strings"]], "Variables and Arithmetic": [[363, "variables-and-arithmetic"]], "My Second Program (1)": [[363, "my-second-program-1"]], "My Second Program (2)": [[363, "my-second-program-2"]], "My Second Program (3)": [[363, "my-second-program-3"]], "My Second Program (4)": [[363, "my-second-program-4"]], "Exercise: A Better Fahrenheit Table": [[364, "exercise-a-better-fahrenheit-table"]], "for: Loop Simplification (1)": [[365, "for-loop-simplification-1"]], "for: Loop Simplification (2)": [[365, "for-loop-simplification-2"]], "Second Program, revisited": [[365, "second-program-revisited"]], "Exercise: Fahrenheit Table Using for": [[366, "exercise-fahrenheit-table-using-for"]], "Symbolic Constants": [[367, "symbolic-constants"]], "C Preprocessor: Symbolic Constants": [[367, "c-preprocessor-symbolic-constants"]], "Exercise: Fahrenheit Table Using Macros": [[368, "exercise-fahrenheit-table-using-macros"]], "Character I/O": [[369, "character-i-o"]], "The Outside World": [[369, "the-outside-world"]], "cat for the Poor (1)": [[369, "cat-for-the-poor-1"]], "cat for the Poor (2)": [[369, "cat-for-the-poor-2"]], "More Examples \u2026": [[369, "more-examples"]], "More Examples - if": [[369, "more-examples-if"]], "if, Formally": [[369, "if-formally"]], "Operators, Formally": [[369, "operators-formally"]], "Exercise: wc For The Poor": [[370, "exercise-wc-for-the-poor"]], "Arrays": [[371, "arrays"]], "Array Definition, Explicit Initialization": [[371, "array-definition-explicit-initialization"]], "Array Access": [[371, "array-access"]], "Discussion: Initialization": [[371, "discussion-initialization"]], "Discussion: if, else": [[371, "discussion-if-else"]], "Array Initializer": [[371, "array-initializer"]], "Discussion: Initializer": [[371, "discussion-initializer"]], "Initialization using memset()": [[371, "initialization-using-memset"]], "Discussion: memset()": [[371, "discussion-memset"]], "Exercise: Character Histogram": [[372, "exercise-character-histogram"]], "A Nonsensical Example": [[373, "a-nonsensical-example"]], "Function Signature": [[373, "function-signature"]], "Discussion": [[373, "discussion"]], "Definition vs. Declaration (1)": [[373, "definition-vs-declaration-1"]], "Definition vs. Declaration (2)": [[373, "definition-vs-declaration-2"]], "By Value / By Reference": [[373, "by-value-by-reference"]], "Exercise: Forward Declaration": [[374, "exercise-forward-declaration"]], "Character Arrays": [[375, "character-arrays"]], "Strings: Mistake by Design?": [[375, "strings-mistake-by-design"]], "Strings: Definition": [[375, "strings-definition"]], "Strings: Library Functions": [[375, "strings-library-functions"]], "Strings as Parameters": [[375, "strings-as-parameters"]], "Strings: Dangers": [[375, "strings-dangers"]], "Exercise: Read Line Into String from stdin": [[376, "exercise-read-line-into-string-from-stdin"]], "Lifetime of Variables": [[377, "lifetime-of-variables"]], "Lifetime": [[377, "lifetime"]], "Global Variables": [[377, "global-variables"], [551, "global-variables"]], "Global Variables: How?": [[377, "global-variables-how"]], "Group Description": [[378, "group-description"], [393, "group-description"], [402, "group-description"], [409, "group-description"], [415, "group-description"], [419, "group-description"], [422, "group-description"], [426, "group-description"], [435, "group-description"], [439, "group-description"], [444, "group-description"], [445, "group-description"], [565, "group-description"], [573, "group-description"], [588, "group-description"], [591, "group-description"], [594, "group-description"], [635, "group-description"], [644, "group-description"], [663, "group-description"], [705, "group-description"], [706, "group-description"], [730, "group-description"], [738, "group-description"], [742, "group-description"], [754, "group-description"], [758, "group-description"], [760, "group-description"], [902, "group-description"], [910, "group-description"], [911, "group-description"], [965, "group-description"]], "Type System": [[379, "type-system"]], "Variable Names": [[380, "variable-names"]], "Variable- and Function Names": [[380, "variable-and-function-names"]], "Data Types, Sizes": [[381, "data-types-sizes"]], "Standard Data Types And Their Sizes": [[381, "standard-data-types-and-their-sizes"]], "Integer Variants (\u201cQualifiers\u201d)": [[381, "integer-variants-qualifiers"]], "Widths": [[381, "widths"]], "Constants": [[382, "constants"]], "Constants and Types": [[382, "constants-and-types"]], "Character Constants: Escape Sequences": [[382, "character-constants-escape-sequences"]], "String Constants": [[382, "string-constants"]], "Character vs. String Constants": [[382, "character-vs-string-constants"]], "Symbolic Constants (1)": [[382, "symbolic-constants-1"]], "Symbolic Constants (2)": [[382, "symbolic-constants-2"]], "Variable Definitions": [[383, "variable-definitions"]], "Definitions und Initialization": [[383, "definitions-und-initialization"]], "Initialization of Automatic Variables": [[383, "initialization-of-automatic-variables"]], "Initialization of Global Variables": [[383, "initialization-of-global-variables"]], "Arithmetic Operators (1)": [[384, "arithmetic-operators-1"]], "Arithmetic Operators (2)": [[384, "arithmetic-operators-2"]], "Relational and Logical Operators": [[385, "relational-and-logical-operators"]], "Relational Operators (1)": [[385, "relational-operators-1"]], "Relational Operators (2)": [[385, "relational-operators-2"]], "Logical (Boolean) Operators": [[385, "logical-boolean-operators"]], "Boolean Operators: Short-Circuit": [[385, "boolean-operators-short-circuit"]], "Type Conversions": [[386, "type-conversions"]], "Implicit Type Conversions": [[386, "implicit-type-conversions"]], "Sign Bugs": [[386, "sign-bugs"]], "Truncation": [[386, "truncation"]], "Sign Propagation": [[386, "sign-propagation"]], "Conversion Using Operators": [[386, "conversion-using-operators"]], "Conversion and unsigned (1)": [[386, "conversion-and-unsigned-1"]], "Conversion and unsigned (2)": [[386, "conversion-and-unsigned-2"]], "Compiler Warnings": [[386, "compiler-warnings"]], "Last Warning": [[386, "last-warning"], [958, "last-warning"]], "Forced Conversion - Cast": [[386, "forced-conversion-cast"]], "Increment, Decrement": [[387, "increment-decrement"]], "Confusion: ++, --": [[387, "confusion"]], "Confused to perfection (1)": [[387, "confused-to-perfection-1"]], "Confused to perfection (2)": [[387, "confused-to-perfection-2"]], "Exercise: Copy and Reduce String": [[388, "exercise-copy-and-reduce-string"]], "Bit-Operators": [[389, "bit-operators"]], "Bit Manipulation": [[389, "bit-manipulation"]], "Bitwise AND and OR": [[389, "bitwise-and-and-or"]], "Bitwise XOR": [[389, "bitwise-xor"]], "Shift Left": [[389, "shift-left"]], "Shift Right": [[389, "shift-right"]], "Inverting (\u201cOne\u2019s-Complement\u201d)": [[389, "inverting-one-s-complement"]], "Assignment with Calculation": [[390, "assignment-with-calculation"]], "Combined Operators": [[390, "combined-operators"]], "?: - Conditional Expression": [[391, "conditional-expression"]], "?: - Conditional Expression (1)": [[391, "conditional-expression-1"]], "?: - Conditional Expression (2)": [[391, "conditional-expression-2"]], "Precedence, Associativity": [[392, "precedence-associativity"]], "Summary: Operators": [[392, "summary-operators"]], "Operators: Precedence und Associativity (1)": [[392, "operators-precedence-und-associativity-1"]], "Operators: Precedence und Associativity (2)": [[392, "operators-precedence-und-associativity-2"]], "More Warnings": [[392, "more-warnings"]], "Types, Operators, Expressions": [[393, "types-operators-expressions"]], "Statements and Blocks": [[394, "statements-and-blocks"]], "Statement vs. Block": [[394, "statement-vs-block"]], "if - else": [[395, "if-else"]], "Branches": [[395, "branches"]], "True or False? What is Truth?": [[395, "true-or-false-what-is-truth"]], "else is optional (1)": [[395, "else-is-optional-1"]], "else is optional (2)": [[395, "else-is-optional-2"]], "else - if": [[396, "else-if"]], "Style Matters": [[396, "style-matters"]], "switch": [[397, "switch"], [397, "id1"]], "Case Distinctions": [[397, "case-distinctions"]], "if - else if vs. switch": [[397, "if-else-if-vs-switch"]], "Loops: while and for": [[398, "loops-while-and-for"]], "while: general purpose loop": [[398, "while-general-purpose-loop"]], "From while to for (1)": [[398, "from-while-to-for-1"]], "From while to for (2)": [[398, "from-while-to-for-2"]], "for, a Little Closer": [[398, "for-a-little-closer"]], "Comma Operator": [[398, "comma-operator"]], "for: Infamous Idioms": [[398, "for-infamous-idioms"]], "Loops: do - while": [[399, "loops-do-while"]], "do - while: Condition After Body": [[399, "do-while-condition-after-body"]], "goto and Labels": [[401, "goto-and-labels"]], "Structured Programming vs. goto": [[401, "structured-programming-vs-goto"]], "goto: Definition": [[401, "goto-definition"]], "goto: Use Cases": [[401, "goto-use-cases"]], "Program Flow": [[402, "program-flow"]], "Nesting": [[403, "nesting"]], "Declaration vs. Definition": [[403, "declaration-vs-definition"]], "A Monolithic Program": [[403, "a-monolithic-program"]], "Separate Compilation": [[403, "separate-compilation"]], "Extern/Global Variables": [[404, "extern-global-variables"]], "Variables: Declaration and Definition": [[404, "variables-declaration-and-definition"]], "Variables: Separating Declaration from Definition (1)": [[404, "variables-separating-declaration-from-definition-1"]], "Variables: Separating Declaration from Definition (2)": [[404, "variables-separating-declaration-from-definition-2"]], "Header Files": [[405, "header-files"]], "Declarations: Problems (1)": [[405, "declarations-problems-1"]], "Declarations: Problems (2)": [[405, "declarations-problems-2"]], "Declarations: Solutions": [[405, "declarations-solutions"]], "Static Variables": [[406, "static-variables"]], "Lifetime and Visibility (1)": [[406, "lifetime-and-visibility-1"]], "Automatic Variables": [[406, "automatic-variables"]], "Local static Variable": [[406, "local-static-variable"]], "Global static Variable": [[406, "global-static-variable"]], "Global Variable": [[406, "global-variable"], [1047, "global-variable"]], "C Preprocessor: Basics": [[407, "c-preprocessor-basics"]], "#include": [[407, "include"]], "Macros: Text Replacement": [[407, "macros-text-replacement"]], "Macros: Constant Definition": [[407, "macros-constant-definition"]], "Macros: Inline Replacement as Function Call (1)": [[407, "macros-inline-replacement-as-function-call-1"]], "Macros: Inline Replacement as Function Call (2)": [[407, "macros-inline-replacement-as-function-call-2"]], "Include Guards (1)": [[407, "include-guards-1"]], "Include Guards (2)": [[407, "include-guards-2"]], "The C Preprocessor: Last Words": [[407, "the-c-preprocessor-last-words"], [408, "the-c-preprocessor-last-words"]], "C Preprocessor: More": [[408, "c-preprocessor-more"]], "Conditional Compilation: Rules": [[408, "conditional-compilation-rules"]], "Conditional Compilation: Examples": [[408, "conditional-compilation-examples"]], "Conditional Compilation: Last Words": [[408, "conditional-compilation-last-words"]], "Macros: Spanning Multiple Lines": [[408, "macros-spanning-multiple-lines"]], "Macros: Multiple Statements as One Statement (1)": [[408, "macros-multiple-statements-as-one-statement-1"]], "Macros: Multiple Statements as One Statement (2)": [[408, "macros-multiple-statements-as-one-statement-2"]], "Stringification (1)": [[408, "stringification-1"]], "Stringification (2)": [[408, "stringification-2"]], "Token Pasting (1)": [[408, "token-pasting-1"]], "Token Pasting (2)": [[408, "token-pasting-2"]], "Warnings and Errors": [[408, "warnings-and-errors"]], "Predefined Macros (1)": [[408, "predefined-macros-1"]], "Functions and Program Structure": [[409, "functions-and-program-structure"]], "Pointers and Addresses": [[410, "pointers-and-addresses"]], "Pointers: Basics": [[410, "pointers-basics"]], "Pointer: Operators": [[410, "pointer-operators"]], "More Examples": [[410, "more-examples"]], "Pointers as Function Parameters": [[411, "pointers-as-function-parameters"]], "Call by Reference (1)": [[411, "call-by-reference-1"]], "Call by Reference (2)": [[411, "call-by-reference-2"]], "Exercise: Function That Swaps Two Variables": [[412, "exercise-function-that-swaps-two-variables"]], "Pointers and Arrays": [[413, "pointers-and-arrays"], [415, "pointers-and-arrays"]], "It\u2019s Only Memory": [[413, "it-s-only-memory"]], "Conversion Array \u27f6 Pointer": [[413, "conversion-array-longrightarrow-pointer"]], "Pointer Arithmetic (1)": [[413, "pointer-arithmetic-1"]], "Pointer Arithmetic (2)": [[413, "pointer-arithmetic-2"]], "Pointer Arithmetic (3)": [[413, "pointer-arithmetic-3"]], "Pointer Arithmetic: Difference": [[413, "pointer-arithmetic-difference"]], "Pointer Arithmetic: Array Algorithms": [[413, "pointer-arithmetic-array-algorithms"]], "Pointer Arithmetic: Jump Width? (1)": [[413, "pointer-arithmetic-jump-width-1"]], "Pointer Arithmetic: Jump Width? (2)": [[413, "pointer-arithmetic-jump-width-2"]], "Pointer Arithmetic: Arbitrary Datatypes": [[413, "pointer-arithmetic-arbitrary-datatypes"]], "See also": [[414, null], [839, null], [844, null], [844, null], [845, null], [845, null], [845, null], [850, null], [851, null], [934, null], [961, null], [964, null], [968, null], [970, null], [1049, null]], "main() Can Take Parameters": [[414, "main-can-take-parameters"]], "struct: Basics": [[416, "struct-basics"]], "struct: Compound Datatypes": [[416, "struct-compound-datatypes"]], "struct: How?": [[416, "struct-how"]], "Usage": [[416, "usage"], [606, "usage"], [613, "usage"]], "Nested Structures": [[416, "nested-structures"]], "Memory Layout": [[416, "memory-layout"]], "Recursive Structures?": [[416, "recursive-structures"]], "struct: Functions": [[417, "struct-functions"]], "Parameters and Return (1)": [[417, "parameters-and-return-1"]], "Parameters and Return (2)": [[417, "parameters-and-return-2"]], "Parameters and Return (3)": [[417, "parameters-and-return-3"]], "typedef: Type Alias": [[418, "typedef-type-alias"]], "Alias for Type Names": [[418, "alias-for-type-names"]], "Structures": [[419, "structures"]], "Dynamic Memory": [[420, "dynamic-memory"], [420, "id1"]], "Stack and Global Memory": [[420, "stack-and-global-memory"]], "Dynamic Memory - Usage": [[420, "dynamic-memory-usage"]], "Singly Linked List": [[421, "singly-linked-list"]], "Exercises (1)": [[421, "exercises-1"]], "Exercises (2)": [[421, "exercises-2"]], "Exercises (3)": [[421, "exercises-3"]], "Exercises (4)": [[421, "exercises-4"]], "Exercises (5)": [[421, "exercises-5"]], "Exercises (6)": [[421, "exercises-6"]], "Exercises (7)": [[421, "exercises-7"]], "Exercises (8)": [[421, "exercises-8"]], "Exercises (9)": [[421, "exercises-9"]], "Exercises (10)": [[421, "exercises-10"]], "Exercises (11)": [[421, "exercises-11"]], "Memory": [[422, "memory"]], "Volatile": [[423, "volatile"]], "volatile: The Lie (1)": [[423, "volatile-the-lie-1"]], "volatile: The Lie (2)": [[423, "volatile-the-lie-2"]], "volatile: Valid Use: Hardware": [[423, "volatile-valid-use-hardware"]], "volatile: Valid Use: Unix Signal Handlers": [[423, "volatile-valid-use-unix-signal-handlers"]], "Compiler Intrinsics": [[424, "compiler-intrinsics"]], "Atomic Memory Access": [[424, "atomic-memory-access"]], "Atomic Memory Access: Load/Modify/Store": [[424, "atomic-memory-access-load-modify-store"]], "Load/Modify/Store: Mutex": [[424, "load-modify-store-mutex"]], "Atomic Instructions": [[424, "atomic-instructions"], [953, "atomic-instructions"]], "More GCC \u201cBuiltins\u201d": [[424, "more-gcc-builtins"]], "Alignment": [[425, "alignment"]], "Data Alignment": [[425, "data-alignment"]], "Data Alignment, Compilers": [[425, "data-alignment-compilers"]], "Unaligned Data Access (1)": [[425, "unaligned-data-access-1"]], "Unaligned Data Access (2)": [[425, "unaligned-data-access-2"]], "Padding (1)": [[425, "padding-1"]], "Padding (2)": [[425, "padding-2"]], "Padding (3)": [[425, "padding-3"]], "Padding (4)": [[425, "padding-4"]], "Structure Alignment (1)": [[425, "structure-alignment-1"]], "Structure Alignment (2)": [[425, "structure-alignment-2"]], "And Arrays? (1)": [[425, "and-arrays-1"]], "And Arrays? (2)": [[425, "and-arrays-2"]], "And Arrays? (3)": [[425, "and-arrays-3"]], "Sanity and Readabilty": [[427, "sanity-and-readabilty"]], "Shooting Offense: Unobvious Solution": [[427, "shooting-offense-unobvious-solution"]], "Shooting Offense: Unobvious Problem": [[427, "shooting-offense-unobvious-problem"]], "Shooting Offenses": [[427, "shooting-offenses"]], "Ambiguity": [[427, "ambiguity"]], "Readability": [[427, "readability"]], "Code Smells": [[427, "code-smells"]], "Know Your Integers": [[428, "know-your-integers"]], "Standard Data Types: size_t (1)": [[428, "standard-data-types-size-t-1"]], "Standard Data Types: size_t (2)": [[428, "standard-data-types-size-t-2"]], "Discrete Values - enum": [[429, "discrete-values-enum"], [429, "id1"]], "Discrete Values": [[429, "discrete-values"]], "Discrete Values - Traditional Approach (1)": [[429, "discrete-values-traditional-approach-1"]], "Discrete Values - Traditional Approach (2)": [[429, "discrete-values-traditional-approach-2"]], "Discrete Values - Wishlist": [[429, "discrete-values-wishlist"]], "Discrete Values - enum and switch": [[429, "discrete-values-enum-and-switch"], [429, "id2"]], "Discrete Values - Close to Perfection": [[429, "discrete-values-close-to-perfection"]], "Visibility - static": [[430, "visibility-static"]], "Visibility": [[430, "visibility"]], "A Somewhat Contrived Example (1)": [[430, "a-somewhat-contrived-example-1"]], "A Somewhat Contrived Example (2)": [[430, "a-somewhat-contrived-example-2"]], "The static Keyword (Hooray!)": [[430, "the-static-keyword-hooray"]], "Correctness - const": [[431, "correctness-const"]], "Non-Modifiable Memory (1)": [[431, "non-modifiable-memory-1"]], "Non-Modifiable Memory (2)": [[431, "non-modifiable-memory-2"]], "The const Keyword (1)": [[431, "the-const-keyword-1"]], "The const Keyword (2)": [[431, "the-const-keyword-2"]], "const Variables": [[431, "const-variables"]], "const Parameters (1)": [[431, "const-parameters-1"]], "const Parameters (2)": [[431, "const-parameters-2"]], "Pointers, Pointers, Pointers \u2026 (1)": [[431, "pointers-pointers-pointers-1"]], "Pointers, Pointers, Pointers \u2026 (2)": [[431, "pointers-pointers-pointers-2"]], "Pointers, Pointers, Pointers \u2026 (3)": [[431, "pointers-pointers-pointers-3"]], "Pointers, Pointers, Pointers \u2026 (4)": [[431, "pointers-pointers-pointers-4"]], "Pointers, Pointers, Pointers \u2026 (5)": [[431, "pointers-pointers-pointers-5"]], "Pointers, Pointers, Pointers \u2026 (6)": [[431, "pointers-pointers-pointers-6"]], "Pointers, Pointers, Pointers \u2026 (7)": [[431, "pointers-pointers-pointers-7"]], "Pointers, Pointers, Pointers \u2026 (8)": [[431, "pointers-pointers-pointers-8"]], "Pointers, Pointers, Pointers \u2026 (9)": [[431, "pointers-pointers-pointers-9"]], "Struct Initialization": [[432, "struct-initialization"]], "Good Old Struct Initialization": [[432, "good-old-struct-initialization"]], "C99 Designated Initializer": [[432, "c99-designated-initializer"]], "Explict Type Safety": [[433, "explict-type-safety"]], "Integer Types Are Ambiguous": [[433, "integer-types-are-ambiguous"]], "Example: Ambiguous Error Schemes (1)": [[433, "example-ambiguous-error-schemes-1"]], "Example: Ambiguous Error Schemes (2)": [[433, "example-ambiguous-error-schemes-2"]], "Example: Ambiguous Error Schemes (3)": [[433, "example-ambiguous-error-schemes-3"]], "Artificial Integer Type Safety": [[433, "artificial-integer-type-safety"]], "Error Schemes, Revisited": [[433, "error-schemes-revisited"]], "Error Schemes: Encapsulating Unix Details": [[433, "error-schemes-encapsulating-unix-details"]], "Error Schemes: Using Encapsulated Stuff": [[433, "error-schemes-using-encapsulated-stuff"]], "Wrap-Up: Artificial Type Safety": [[433, "wrap-up-artificial-type-safety"]], "valgrind": [[434, "valgrind"]], "Valgrind": [[434, "id1"]], "Valgrind in Action (1)": [[434, "valgrind-in-action-1"]], "Valgrind in Action (2)": [[434, "valgrind-in-action-2"]], "Valgrind in Action (3)": [[434, "valgrind-in-action-3"]], "Valgrind: more \u2026": [[434, "valgrind-more"]], "Program Sanity": [[435, "program-sanity"]], "Optimization": [[436, "optimization"]], "Optimization - Introduction": [[436, "optimization-introduction"]], "Compute Bound or IO Bound? (1)": [[436, "compute-bound-or-io-bound-1"]], "Compute Bound or IO Bound? (2)": [[436, "compute-bound-or-io-bound-2"]], "Compute Bound or IO Bound? (3)": [[436, "compute-bound-or-io-bound-3"]], "What to do Next?": [[436, "what-to-do-next"]], "Optimizations: Compute Bound Code": [[437, "optimizations-compute-bound-code"]], "Many Ways of Optimization": [[437, "many-ways-of-optimization"]], "Unnecessary Optimizations": [[437, "unnecessary-optimizations"]], "Inlining (1)": [[437, "inlining-1"]], "Inlining (2)": [[437, "inlining-2"]], "Inlining (3)": [[437, "inlining-3"]], "Register Allocation (1)": [[437, "register-allocation-1"]], "Register Allocation (2)": [[437, "register-allocation-2"]], "Peephole Optimization": [[437, "peephole-optimization"]], "Peephole Optimization: Common Subexpression Elimination": [[437, "peephole-optimization-common-subexpression-elimination"]], "Peephole Optimization: Strength Reduction": [[437, "peephole-optimization-strength-reduction"]], "Peephole Optimization: Constant Folding": [[437, "peephole-optimization-constant-folding"]], "Loop Invariants": [[437, "loop-invariants"]], "Loop Unrolling": [[437, "loop-unrolling"]], "Tail Call Optimization": [[437, "tail-call-optimization"]], "CPU Optimization, Last Words": [[437, "cpu-optimization-last-words"]], "GCC: Optimization \u201cLevels\u201d": [[437, "gcc-optimization-levels"]], "Further Reading": [[437, "further-reading"]], "Optimizations: Memory Optimizations": [[438, "optimizations-memory-optimizations"]], "Memory: Caches": [[438, "memory-caches"]], "Locality of reference": [[438, "locality-of-reference"]], "Multidimensional Arrays": [[438, "multidimensional-arrays"]], "Multidimensional Arrays: Cache Thrashing": [[438, "multidimensional-arrays-cache-thrashing"]], "Multidimensional Arrays: Forward Indexing": [[438, "multidimensional-arrays-forward-indexing"]], "Performance": [[439, "performance"]], "Profiling - Famous Words": [[440, "profiling-famous-words"]], "Donald E. Knuth": [[440, null]], "Tony Hoare": [[440, null]], "Larry Wall": [[440, null]], "The Practice of Programming, Brian W. Kernighan and\n             Rob Pike": [[440, null]], "Profiling - Introduction": [[440, "profiling-introduction"]], "GNU Profiler - gprof": [[441, "gnu-profiler-gprof"]], "gprof - How it Works": [[441, "gprof-how-it-works"]], "Using gprof": [[441, "using-gprof"]], "gprof: Flat Profile": [[441, "gprof-flat-profile"]], "gprof: Call Graph": [[441, "gprof-call-graph"]], "gprof: Interpreting The Results": [[441, "gprof-interpreting-the-results"]], "gprof: Visualization": [[441, "gprof-visualization"]], "callgrind": [[442, "callgrind"]], "callgrind - How it Works": [[442, "callgrind-how-it-works"]], "callgrind - How it is Used": [[442, "callgrind-how-it-is-used"]], "callgrind - Analysis Per Commandline": [[442, "callgrind-analysis-per-commandline"]], "callgrind - Analysis With kcachegrind": [[442, "callgrind-analysis-with-kcachegrind"]], "callgrind - Useful Options": [[442, "callgrind-useful-options"]], "oprofile": [[443, "oprofile"]], "oprofile - How it Works": [[443, "oprofile-how-it-works"]], "oprofile - Basic Usage (1)": [[443, "oprofile-basic-usage-1"]], "oprofile - Basic Usage (2)": [[443, "oprofile-basic-usage-2"]], "oprofile - Too Much Information": [[443, "oprofile-too-much-information"]], "oprofile - Call Graph": [[443, "oprofile-call-graph"]], "oprofile - Kernel Symbols (1)": [[443, "oprofile-kernel-symbols-1"]], "oprofile - Kernel Symbols (2)": [[443, "oprofile-kernel-symbols-2"]], "oprofile - Kernel Modules": [[443, "oprofile-kernel-modules"]], "oprofile - System-Wide Profiling": [[443, "oprofile-system-wide-profiling"]], "oprofile - Offline Profiling": [[443, "oprofile-offline-profiling"]], "oprofile - Graphical Beauty": [[443, "oprofile-graphical-beauty"]], "Profiling": [[444, "profiling"]], "The C Programming Language": [[445, "the-c-programming-language"]], "Messages From The Book": [[446, "messages-from-the-book"]], "What\u2019s There? What Have We Accomplished?": [[447, "what-s-there-what-have-we-accomplished"]], "Rules? Why Rules?": [[447, "rules-why-rules"]], "Coding Style": [[447, "coding-style"]], "Disclaimer": [[447, null]], "Design Principles: SOLID": [[447, "design-principles-solid"]], "Another One: YAGNI": [[447, "another-one-yagni"]], "Architecture": [[447, "architecture"]], "Project Management: Traditional": [[447, "project-management-traditional"]], "Project Management: Software": [[447, "project-management-software"]], "So What?": [[447, "so-what"]], "Is Software A Craft? Software Is A Craft! \u27f6 Clean Code": [[448, "is-software-a-craft-software-is-a-craft-longrightarrow-clean-code"]], "Uncle Bob": [[448, "uncle-bob"]], "A Typical Project (Livehacking Screenplay: My Own Bookkeeping Effort)": [[449, "a-typical-project-livehacking-screenplay-my-own-bookkeeping-effort"]], "Spaghetti Version": [[449, "spaghetti-version"]], "A Little Better: Functions (And Commandline Parameters)": [[449, "a-little-better-functions-and-commandline-parameters"]], "Feature Request: Concatenate Input Data From Multiple CSV Files": [[449, "feature-request-concatenate-input-data-from-multiple-csv-files"]], "Feature Request: Concatenate Input Data From YYYY-MM.csv Files": [[449, "feature-request-concatenate-input-data-from-yyyy-mm-csv-files"]], "Where Are We? Questions!": [[449, "where-are-we-questions"]], "Testability: Input Cleaning": [[449, "testability-input-cleaning"]], "Testability: Reading Input (One Or Multiple Files, Explicitly)": [[449, "testability-reading-input-one-or-multiple-files-explicitly"]], "Test Sanity: Common Code": [[449, "test-sanity-common-code"]], "Testability: Reading Input From Directory": [[449, "testability-reading-input-from-directory"]], "Testability: Categorization": [[449, "testability-categorization"]], "Safety Net In Place \u27f6 Refactoring Categorization": [[449, "safety-net-in-place-longrightarrow-refactoring-categorization"]], "Refactoring Input Reading (\u27f6 Overengineering)": [[449, "refactoring-input-reading-longrightarrow-overengineering"]], "Basics: Boilerplate, And Executables": [[450, "basics-boilerplate-and-executables"]], "Single Monolithic Executable": [[450, "single-monolithic-executable"]], "Building With CMake": [[450, "building-with-cmake"]], "Building With CMake: Separate Source And Build Directories": [[450, "building-with-cmake-separate-source-and-build-directories"]], "Executables Consisting Of Multiple Sources": [[450, "executables-consisting-of-multiple-sources"]], "Problem: Duplicate Compilation": [[450, "problem-duplicate-compilation"]], "Problem: More Functionality": [[450, "problem-more-functionality"]], "Solution: Libraries": [[450, "solution-libraries"], [1000, "solution-libraries"]], "\u201cConfigured\u201d Header Files": [[451, "configured-header-files"]], "Problem": [[451, "problem"], [459, "problem"], [465, "problem"], [466, "problem"], [467, "problem"], [470, "problem"], [476, "problem"], [524, "problem"], [798, "problem"], [929, "problem"]], "Configured Files": [[451, "configured-files"]], "Use In Compiled Code": [[451, "use-in-compiled-code"]], "C++, Debug/Release, CMake \u201cProgramming\u201d, Rants": [[452, "c-debug-release-cmake-programming-rants"]], "Pause": [[452, "pause"]], "Class Diagram": [[452, "class-diagram"]], "C++ Standard Version": [[452, "c-standard-version"]], "Debug Vs. Release Builds: CMAKE_BUILD_TYPE": [[452, "debug-vs-release-builds-cmake-build-type"]], "Compiler Type": [[452, "compiler-type"]], "Strings And Lists": [[452, "strings-and-lists"]], "MESSAGE() (A.k.a printf() Debugging)": [[452, "message-a-k-a-printf-debugging"]], "MESSAGE(): Popular \u201cModes\u201d": [[452, "message-popular-modes"]], "FIND_PACKAGE()": [[453, "find-package"]], "FIND_PACKAGE(... REQUIRED)": [[453, "find-package-required"]], "SQLite3 Parameters": [[453, "sqlite3-parameters"]], "Using SQLite3 Parameters": [[453, "using-sqlite3-parameters"]], "Demo Time": [[453, "demo-time"]], "CMake: An Introduction": [[454, "cmake-an-introduction"]], "Installation (\u201cDeployment\u201d)": [[455, "installation-deployment"]], "\u201cPrefix\u201d: Where Everything Comes Together": [[455, "prefix-where-everything-comes-together"]], "Installing Targets": [[455, "installing-targets"]], "Doing The Installation (make install)": [[455, "doing-the-installation-make-install"]], "And Shared Libraries?": [[455, "and-shared-libraries"]], "Shared Libraries: Installed Vs. Local (RUNPATH)": [[455, "shared-libraries-installed-vs-local-runpath"]], "Shared Libraries: ABI Versions": [[455, "shared-libraries-abi-versions"]], "Libraries, And Dependencies": [[456, "libraries-and-dependencies"]], "Libraries And Executables": [[456, "libraries-and-executables"]], "Targets And Dependencies": [[456, "targets-and-dependencies"]], "Visualizing Dependencies": [[456, "visualizing-dependencies"]], "Optional Code, Approach 1: Optional blacklist, C Macro  (Global Flags)": [[457, "optional-code-approach-1-optional-blacklist-c-macro-global-flags"]], "Optional blacklist, C Macro": [[457, "optional-blacklist-c-macro"]], "Optional Dependency In libhello": [[457, "optional-dependency-in-libhello"]], "Optional Dependency In libhello Header File": [[457, "optional-dependency-in-libhello-header-file"]], "Optional Dependency In libhello CPP File": [[457, "optional-dependency-in-libhello-cpp-file"]], "Good Or Bad?": [[457, "good-or-bad"], [458, "good-or-bad"]], "Optional Code, Approach 2: Pushing Optionality Down In Module Interface": [[458, "optional-code-approach-2-pushing-optionality-down-in-module-interface"]], "Remove Too Much CMake Optionality": [[458, "remove-too-much-cmake-optionality"]], "TARGET_COMPILE_DEFINITIONS() (backlist Availablility)": [[458, "target-compile-definitions-backlist-availablility"]], "Push Optionality Down In blacklist (\u27f6 INTERFACE Targets)": [[458, "push-optionality-down-in-blacklist-longrightarrow-interface-targets"]], "Optional Code: Problem Definition, OPTION()": [[459, "optional-code-problem-definition-option"]], "Solution: Add An Option": [[459, "solution-add-an-option"]], "Define Option USE_BLACKLIST; Option Usage, Cache": [[459, "define-option-use-blacklist-option-usage-cache"]], "Option Handling: Many Approaches": [[459, "option-handling-many-approaches"]], "Shared Libraries (Preview)": [[460, "shared-libraries-preview"]], "\u201cNormal\u201d Libraries": [[460, "normal-libraries"]], "Building Shared Libraries": [[460, "building-shared-libraries"]], "More About Loading": [[460, "more-about-loading"]], "Structure - Subdirectories, Dependencies, and Include Paths": [[461, "structure-subdirectories-dependencies-and-include-paths"]], "Reorganization": [[461, "reorganization"]], "Dependencies, And Target Properties": [[461, "dependencies-and-target-properties"]], "Targets, Properties, And More": [[462, "targets-properties-and-more"]], "Target Types": [[462, "target-types"]], "Properties: PRIVATE, PUBLIC, INTERFACE?": [[462, "properties-private-public-interface"]], "Running Tests": [[463, "running-tests"], [1139, "running-tests"]], "Setup And Usage": [[463, "setup-and-usage"]], "Add Simple Test": [[463, "add-simple-test"]], "Checking Test Output": [[463, "checking-test-output"]], "Questionability": [[463, "questionability"]], "C++ Code": [[464, "c-code"]], "Abstract Factory": [[465, "abstract-factory"]], "I2C Sensor Subhierarchy": [[465, "i2c-sensor-subhierarchy"]], "Problem: I2C Sensor Instantiation": [[465, "problem-i2c-sensor-instantiation"]], "Solution: Factory Objects": [[465, "solution-factory-objects"]], "Adapter": [[466, "adapter"]], "Solution: Adaptation": [[466, "solution-adaptation"]], "Basic Adaptation": [[466, "basic-adaptation"]], "Adapter Must Be-A Sensor": [[466, "adapter-must-be-a-sensor"]], "Adaptee Can Be-Any ASensor": [[466, "adaptee-can-be-any-asensor"]], "Adapter Is Doing Real Measurements": [[466, "adapter-is-doing-real-measurements"]], "Command": [[467, "command"]], "Motivation": [[467, "motivation"], [470, "motivation"], [486, "motivation"], [487, "motivation"], [583, "motivation"], [680, "motivation"], [682, "motivation"], [707, "motivation"], [713, "motivation"], [1020, "motivation"], [1026, "motivation"]], "Step 1: Basic insert()": [[467, "step-1-basic-insert"]], "Step 2: Basic find()": [[467, "step-2-basic-find"]], "Step 3: drop()": [[467, "step-3-drop"]], "Step 4: Handle find() Errors": [[467, "step-4-handle-find-errors"]], "Step 5: Handle insert() Errors": [[467, "step-5-handle-insert-errors"]], "Step 6: Bulk Insert?": [[467, "step-6-bulk-insert"]], "Step 6a: Bulk Insert Using std::initializer_list?": [[467, "step-6a-bulk-insert-using-std-initializer-list"]], "SocialDB Source Code": [[468, "socialdb-source-code"]], "Composite": [[469, "composite"]], "Unix Filesystem": [[469, "unix-filesystem"]], "Boolean Expressions": [[469, "boolean-expressions"]], "Thermometers, And Average Calculation": [[469, "thermometers-and-average-calculation"]], "Decorator": [[470, "decorator"]], "Variant 1: Aggregate Base Class Objects": [[470, "variant-1-aggregate-base-class-objects"]], "Variant 2: Aggregate Conrete Class Objects": [[470, "variant-2-aggregate-conrete-class-objects"]], "Step 1: Realize Current Situation": [[470, "step-1-realize-current-situation"]], "Step 2: Decorate ConstantSensor \u27f6 DecoratedConstantSensor": [[470, "step-2-decorate-constantsensor-longrightarrow-decoratedconstantsensor"]], "Step 3: Decorate RandomSensor \u27f6 DecoratedRandomSensor": [[470, "step-3-decorate-randomsensor-longrightarrow-decoratedrandomsensor"]], "Step 4: Verify That DecoratedConstantSensor Can Be Used As Sensor": [[470, "step-4-verify-that-decoratedconstantsensor-can-be-used-as-sensor"]], "Step 5: Verify That DecoratedRandomSensor Can Be Used As Sensor": [[470, "step-5-verify-that-decoratedrandomsensor-can-be-used-as-sensor"]], "Step 6: Verify That Current Situation Still Holds True": [[470, "step-6-verify-that-current-situation-still-holds-true"]], "Design Patterns With C++": [[471, "design-patterns-with-c"]], "Topics/Exercises": [[471, "topics-exercises"]], "Solutions": [[471, "solutions"], [485, "solutions"], [499, "solutions"]], "To Be Done": [[471, "to-be-done"]], "Case Study/Livehacking: Heating Control (Reading Sensors)": [[472, "case-study-livehacking-heating-control-reading-sensors"]], "Step 1: Monolithic": [[472, "step-1-monolithic"]], "Step 2: And D-Bus? \u27f6 Interfaces": [[472, "step-2-and-d-bus-longrightarrow-interfaces"]], "Step 3: Start D-Bus Implementation": [[472, "step-3-start-d-bus-implementation"]], "Pull Demo Logger/Store Out Into Separate Files": [[472, "pull-demo-logger-store-out-into-separate-files"]], "Adapter: DBusLogger": [[472, "adapter-dbuslogger"]], "Adapter: DBusValueStore": [[472, "adapter-dbusvaluestore"]], "Demo Program To Instantiate Either Demo Or DBus": [[472, "demo-program-to-instantiate-either-demo-or-dbus"]], "Stop Here, Need Help": [[472, "stop-here-need-help"]], "Tests": [[472, "tests"], [492, "tests"]], "Interpreter": [[473, "interpreter"]], "Observer": [[474, "observer"]], "OO Design Principles": [[475, "oo-design-principles"]], "Principles: Why? Which?": [[475, "principles-why-which"]], "Single Responsibility": [[475, "single-responsibility"]], "Open/Closed": [[475, "open-closed"]], "Liskov Substitution": [[475, "liskov-substitution"]], "Interface Segregation": [[475, "interface-segregation"]], "Dependency Inversion": [[475, "dependency-inversion"]], "Proxy": [[476, "proxy"]], "Solution: Proxy": [[476, "solution-proxy"]], "Local Variant": [[476, "local-variant"]], "Remote Variant": [[476, "remote-variant"]], "Exercise Foundation: Sensor Hierarchy": [[477, "exercise-foundation-sensor-hierarchy"]], "Hypothetical": [[477, "hypothetical"]], "Class Hierarchy": [[477, "class-hierarchy"]], "Singleton": [[478, "singleton"]], "And class Person?": [[478, "and-class-person"]], "UML Short Introduction": [[479, "uml-short-introduction"]], "Interface": [[479, "interface"]], "Interface Implementation, Inheritance": [[479, "interface-implementation-inheritance"]], "Connectors: Association, Aggregation, Composition": [[479, "connectors-association-aggregation-composition"]], "Association": [[479, "association"]], "Aggregation": [[479, "aggregation"]], "Composition": [[479, "composition"]], "Exercise: Abstract Factory": [[480, "exercise-abstract-factory"]], "Exercise: Adapter": [[481, "exercise-adapter"], [488, "exercise-adapter"]], "Exercise: Command": [[482, "exercise-command"]], "Exercise: Composite": [[483, "exercise-composite"]], "Exercise: Decorator": [[484, "exercise-decorator"]], "Exercises: Design Patterns": [[485, "exercises-design-patterns"]], "Exercise: Interpreter Combined With Adapter (And A Proxy)": [[486, "exercise-interpreter-combined-with-adapter-and-a-proxy"]], "Exercise: Arithmetic Expression Interpreter": [[487, "exercise-arithmetic-expression-interpreter"]], "Expression Interface": [[487, "expression-interface"]], "Arithmetic (Binary) Expressions": [[487, "arithmetic-binary-expressions"]], "Check: Combined Arithmetic Expressions": [[487, "check-combined-arithmetic-expressions"]], "And Variables?": [[487, "and-variables"]], "No Uninitialized Variables!!": [[487, "no-uninitialized-variables"]], "Assigning To Variables": [[487, "assigning-to-variables"]], "Using Variables As Expressions": [[487, "using-variables-as-expressions"]], "Exercise: Proxy (Remote Thermometer)": [[489, "exercise-proxy-remote-thermometer"]], "Network Communication": [[489, "network-communication"]], "Implementation Hints": [[489, "implementation-hints"]], "Exercise: Proxy (Rounding Thermometer)": [[490, "exercise-proxy-rounding-thermometer"]], "Exercise: Singleton (Flexible)": [[491, "exercise-singleton-flexible"]], "Exercise: Singleton (Flexible And Strict)": [[492, "exercise-singleton-flexible-and-strict"]], "Complications": [[492, "complications"]], "Exercise: Singleton (Inflexible)": [[493, "exercise-singleton-inflexible"]], "Solution: Abstract Factory": [[494, "solution-abstract-factory"]], "I2CSensorFactory Abstract Factory": [[494, "i2csensorfactory-abstract-factory"]], "Concrete Factory Implementations": [[494, "concrete-factory-implementations"]], "I2CSensorFactory_Vendor1": [[494, "i2csensorfactory-vendor1"], [494, "id1"]], "Solution: Adapter": [[495, "solution-adapter"]], "Adapter Class For Fahrenheit Sensors": [[495, "adapter-class-for-fahrenheit-sensors"]], "Solution: Command": [[496, "solution-command"]], "Command Classes": [[496, "command-classes"]], "Solution: Composite": [[497, "solution-composite"]], "Averaging (Composite) Sensor": [[497, "averaging-composite-sensor"]], "Solution: Decorator": [[498, "solution-decorator"]], "Decorated Sensor (Intermediate Interface)": [[498, "decorated-sensor-intermediate-interface"]], "Decorated Constant Sensor": [[498, "decorated-constant-sensor"]], "Decorated Random Sensor": [[498, "decorated-random-sensor"]], "Solution: Interpreter Combined With Adapter (And A Proxy)": [[500, "solution-interpreter-combined-with-adapter-and-a-proxy"]], "Solution: Arithmetic Expression Interpreter": [[501, "solution-arithmetic-expression-interpreter"]], "Solution: Observer": [[502, "solution-observer"]], "Solution: Proxy (Remote Thermometer)": [[503, "solution-proxy-remote-thermometer"]], "Client (Proxy) Thermometer": [[503, "client-proxy-thermometer"]], "Remote Stub": [[503, "remote-stub"]], "Solution: Proxy (Rounding Thermometer)": [[504, "solution-proxy-rounding-thermometer"]], "Rounding Sensor (Proxy) Implementation": [[504, "rounding-sensor-proxy-implementation"]], "Solution: Singleton (Flexible)": [[505, "solution-singleton-flexible"]], "Main Program": [[505, "main-program"], [506, "main-program"], [507, "main-program"], [745, "main-program"], [747, "main-program"], [749, "main-program"], [751, "main-program"]], "SocialInsurance Interface": [[505, "socialinsurance-interface"], [506, "socialinsurance-interface"]], "Two Concrete Implementations": [[505, "two-concrete-implementations"], [506, "two-concrete-implementations"]], "OEGK": [[505, "oegk"], [506, "oegk"]], "SVS": [[505, "svs"], [506, "svs"]], "Solution: Singleton (Flexible And Strict)": [[506, "solution-singleton-flexible-and-strict"]], "Solution: Singleton (Inflexible)": [[507, "solution-singleton-inflexible"]], "Singleton Implementation": [[507, "singleton-implementation"]], "Exercise (FH): Introducing a Sensor Class": [[508, "exercise-fh-introducing-a-sensor-class"]], "Github Project": [[508, "github-project"]], "CMake Build": [[508, "cmake-build"], [942, "cmake-build"]], "Dependencies/Usage Relationships": [[508, "dependencies-usage-relationships"]], "Onewire Sensor Usage: Example/Unit-Test": [[508, "onewire-sensor-usage-example-unit-test"]], "Step 1: Preparation": [[508, "step-1-preparation"]], "Step 2: Modify onewire-temperature-<firstname>-<lastname>.cpp To Use class W1Sensor": [[508, "step-2-modify-onewire-temperature-firstname-lastname-cpp-to-use-class-w1sensor"]], "Step 3: Answer A Question": [[508, "step-3-answer-a-question"]], "Exercise (FH): Extract Measurement Loop Into Function": [[509, "exercise-fh-extract-measurement-loop-into-function"]], "Exercise (FH): Replace Sensor": [[510, "exercise-fh-replace-sensor"]], "Exercise (FH): Write A Sensor Class: RandomSensor": [[511, "exercise-fh-write-a-sensor-class-randomsensor"]], "New Sensor Class: RandomSensor": [[511, "new-sensor-class-randomsensor"]], "Implementation Details": [[511, "implementation-details"]], "New Program: random-temperature.cpp": [[511, "new-program-random-temperature-cpp"]], "FH Sensor OO (First Try)": [[512, "fh-sensor-oo-first-try"]], "C++ Exercises": [[513, "c-exercises"]], "Exercise Projects": [[513, "exercise-projects"]], "Exercise: LEDStripeDisplay_nopoly (Non-Polymorphic)": [[514, "exercise-ledstripedisplay-nopoly-non-polymorphic"]], "Topics Covered": [[514, "topics-covered"], [515, "topics-covered"], [516, "topics-covered"], [517, "topics-covered"], [518, "topics-covered"], [519, "topics-covered"], [520, "topics-covered"], [523, "topics-covered"]], "Exercise: Hysteresis_nopoly (Non-Polymorphic)": [[515, "exercise-hysteresis-nopoly-non-polymorphic"]], "Exercise: AveragingSensor_nopoly (Non-Polymorphic)": [[516, "exercise-averagingsensor-nopoly-non-polymorphic"]], "Exercise: ConstantSensor_nopoly (Non-Polymorphic)": [[517, "exercise-constantsensor-nopoly-non-polymorphic"]], "Exercise: MockSensor_nopoly (Non-Polymorphic)": [[518, "exercise-mocksensor-nopoly-non-polymorphic"]], "Exercise: RandomSensor_nopoly (Non-Polymorphic)": [[519, "exercise-randomsensor-nopoly-non-polymorphic"]], "Implementation Hint: Randomicity In C++": [[519, "implementation-hint-randomicity-in-c"]], "Implementation Hint: Initializer Lists": [[519, "implementation-hint-initializer-lists"]], "Exercise: Mocking Switch (Non-Polymorphic)": [[520, "exercise-mocking-switch-non-polymorphic"]], "OO Basics, Interfaces (Shapes)": [[521, "oo-basics-interfaces-shapes"]], "Exercise Table": [[521, "exercise-table"]], "Setup, Exam Procedure": [[521, "setup-exam-procedure"]], "Point": [[521, "point"]], "Point: Constructor and Getter Methods": [[521, "point-constructor-and-getter-methods"]], "Point: Default Constructor": [[521, "point-default-constructor"]], "Point: Static Method: equal()": [[521, "point-static-method-equal"]], "Point: operator==()": [[521, "point-operator"]], "Point: Method: move()": [[521, "point-method-move"]], "Point: operator+=()": [[521, "point-suite-operator-plus-equals"]], "Point: Static Method: add()": [[521, "point-static-method-add"]], "Point: operator+()": [[521, "point-suite-operator-plus"]], "Circle": [[521, "circle"]], "Circle: Constructor": [[521, "circle-constructor"]], "Circle: operator==()": [[521, "circle-operator"]], "Circle: Method: area()": [[521, "circle-method-area"]], "Square": [[521, "square"]], "Square: Constructor": [[521, "square-constructor"]], "Square: operator==()": [[521, "square-operator"]], "Square: Method: area()": [[521, "square-method-area"]], "Interface: Shape": [[521, "interface-shape"]], "Interface: Circle And Square Is-A Shape": [[521, "interface-circle-and-square-is-a-shape"]], "Interface: Can Compute Area Of Any Shape": [[521, "interface-can-compute-area-of-any-shape"]], "Working On Exercise Projects": [[522, "working-on-exercise-projects"]], "Clone Github Repository": [[522, "clone-github-repository"]], "Massage googletest Sub-Module": [[522, "massage-googletest-sub-module"]], "Build Directory: Create Makefiles With cmake": [[522, "build-directory-create-makefiles-with-cmake"]], "Build Directory: Build With make": [[522, "build-directory-build-with-make"]], "Build Directory: Run Tests": [[522, "build-directory-run-tests"]], "Exercise: Sensor Interface": [[523, "exercise-sensor-interface"]], "Problem: Polymorphic Thermometer Usage": [[523, "problem-polymorphic-thermometer-usage"]], "The Exercise": [[523, "the-exercise"]], "Exercise: OneWire Sensor Factory": [[524, "exercise-onewire-sensor-factory"]], "Fixture": [[524, "fixture"], [759, "fixture"]], "basic": [[524, "basic"]], "notfound": [[524, "notfound"]], "find_is_const": [[524, "find-is-const"]], "Testing In Isolation": [[524, "testing-in-isolation"]], "Testing In Reality": [[524, "testing-in-reality"]], "On The PC": [[524, "on-the-pc"]], "On The Target": [[524, "on-the-target"]], "Exercise: OneWire Sensor Class": [[525, "exercise-onewire-sensor-class"]], "Download Monolithic Sensor Implementation": [[525, "download-monolithic-sensor-implementation"]], "Test Monolithic Implementation": [[525, "test-monolithic-implementation"]], "class W1Sensor": [[525, "class-w1sensor"]], "Exercise: Algorithms": [[526, "exercise-algorithms"]], "Copy Into std::vector": [[526, "copy-into-std-vector"]], "Find Element In std::vector": [[526, "find-element-in-std-vector"]], "Sort In-Place": [[526, "sort-in-place"]], "Sort Into A Copy": [[526, "sort-into-a-copy"]], "Exercise: Generic Filter": [[527, "exercise-generic-filter"]], "Exercise: Filter Elements Greater Than 10": [[528, "exercise-filter-elements-greater-than-10"]], "Exercise: Filter Odd Elements": [[529, "exercise-filter-odd-elements"]], "C++ Exercises: Standard Template Library": [[530, "c-exercises-standard-template-library"]], "Exercise: std::map<>": [[531, "exercise-std-map"]], "Exercises: Sensor Repository (std::map)": [[532, "exercises-sensor-repository-std-map"]], "Insert - Not Overwriting Existing Elements": [[533, "insert-not-overwriting-existing-elements"]], "Insert - Sunny Case": [[534, "insert-sunny-case"]], "Lookup - Not Found": [[535, "lookup-not-found"]], "Lookup - Sunny Case": [[536, "lookup-sunny-case"]], "Memory Leaks?": [[537, "memory-leaks"]], "Remove - Not Found": [[538, "remove-not-found"]], "Remove - Sunny Case": [[539, "remove-sunny-case"]], ".size() Is const": [[540, "size-is-const"]], "Exercise: Uniquify A Sequence": [[541, "exercise-uniquify-a-sequence"]], "Exercise: std::vector<>": [[542, "exercise-std-vector"]], "C++: TODO List": [[543, "c-todo-list"]], "Structural": [[543, "structural"]], "STL, Containers and Algorithms": [[543, "stl-containers-and-algorithms"]], "Templates/Overloading": [[543, "templates-overloading"]], "Functors: Overloading the Function Call Operator": [[543, "functors-overloading-the-function-call-operator"]], "Threads": [[543, "threads"]], "C++ >= 11": [[543, "c-11"]], "UserDB Exercise": [[543, "userdb-exercise"]], "Complete Transcription of C++11": [[543, "complete-transcription-of-c-11"]], "Exercise series": [[543, "exercise-series"]], "Code: C++: Class Templates": [[544, "code-c-class-templates"]], "Screenplay: C++: Class Templates": [[545, "screenplay-c-class-templates"]], "C++: Class Templates": [[546, "c-class-templates"]], "Code: C++: Dynamic Memory": [[547, "code-c-dynamic-memory"]], "Screenplay: C++: Dynamic Memory": [[548, "screenplay-c-dynamic-memory"]], "C: malloc()/free()": [[548, "c-malloc-free"]], "valgrind: Memory Leak": [[548, "valgrind-memory-leak"]], "valgrind: Array Bounds Write": [[548, "valgrind-array-bounds-write"]], "C++: new, delete": [[548, "c-new-delete"]], "C++: new, delete on Arrays": [[548, "c-new-delete-on-arrays"]], "valgrind: delete Mismatch": [[548, "valgrind-delete-mismatch"]], "C++: Dynamic Memory": [[549, "c-dynamic-memory"]], "Code: C++: Global Objects Initialization": [[550, "code-c-global-objects-initialization"]], "Screenplay: C++: Global Objects Initialization": [[551, "screenplay-c-global-objects-initialization"]], "Constructor and Destructor Order in Same File": [[551, "constructor-and-destructor-order-in-same-file"]], "Constructor and Destructor Order Across Files": [[551, "constructor-and-destructor-order-across-files"]], "Constructor and Destructor Order Across Files: Dependencies, Bugs": [[551, "constructor-and-destructor-order-across-files-dependencies-bugs"]], "C++: Global Objects Initialization": [[552, "c-global-objects-initialization"]], "Code: C++: Inheritance, Interfaces, virtual": [[553, "code-c-inheritance-interfaces-virtual"]], "Screenplay: C++: Inheritance, Interfaces, virtual": [[554, "screenplay-c-inheritance-interfaces-virtual"]], "C++: Inheritance, Interfaces, virtual": [[555, "c-inheritance-interfaces-virtual"]], "Code: C++: Ownership/RAII": [[556, "code-c-ownership-raii"]], "Screenplay: C++: Ownership/RAII": [[557, "screenplay-c-ownership-raii"]], "Allocate in Constructor": [[557, "allocate-in-constructor"]], "Deallocate in Destructor - Ownership": [[557, "deallocate-in-destructor-ownership"]], "Ownership: 2 x non-const": [[557, "ownership-2-x-non-const"]], "Ownership: const Method": [[557, "ownership-const-method"]], "Ownership: 2 x const": [[557, "ownership-2-x-const"]], "C++: Ownership/RAII": [[558, "c-ownership-raii"]], "Code: C++: STL Containers (Intro)": [[559, "code-c-stl-containers-intro"]], "Screenplay: C++: STL Containers (Intro)": [[560, "screenplay-c-stl-containers-intro"]], "Pointer Arithmetics Recap": [[560, "pointer-arithmetics-recap"]], "Container: std::vector": [[560, "container-std-vector"]], "Algorithm: std::vector and Naive Copy": [[560, "algorithm-std-vector-and-naive-copy"]], "Algorithm: std::vector and std::copy<>": [[560, "algorithm-std-vector-and-std-copy"]], "Container: std::list": [[560, "container-std-list"]], "Container: std::map": [[560, "container-std-map"]], "C++: STL Containers (Intro)": [[561, "c-stl-containers-intro"]], "Code: C++: Templates vs. Interfaces": [[562, "code-c-templates-vs-interfaces"]], "Screenplay: C++: Templates vs. Interfaces": [[563, "screenplay-c-templates-vs-interfaces"]], "C++: Templates vs. Interfaces": [[564, "c-templates-vs-interfaces"]], "C++: Miscellaneous Live-Hacking": [[565, "c-miscellaneous-live-hacking"]], "Background": [[566, "background"]], "History": [[566, "history"], [1001, "history"]], "Content": [[566, "content"]], "Object Oriented Programming In Good Ol\u2019 C": [[567, "object-oriented-programming-in-good-ol-c"]], "C Is Simple, So Why C++?": [[567, "c-is-simple-so-why-c"]], "struct point: Something That Looks Like A Point": [[567, "struct-point-something-that-looks-like-a-point"]], "Good Style: Explicit Initialization Functions": [[567, "good-style-explicit-initialization-functions"]], "Comparison Functions: (In)Equality": [[567, "comparison-functions-in-equality"]], "Moving Points": [[567, "moving-points"]], "Vector Addition and Subtraction": [[567, "vector-addition-and-subtraction"]], "Distance Of Two Points": [[567, "distance-of-two-points"]], "Length Of A Point\u2019s Position Vector": [[567, "length-of-a-point-s-position-vector"]], "Summary: Is C Good Enough?": [[567, "summary-is-c-good-enough"]], "Copy Constructor, Assignment Operator": [[568, "copy-constructor-assignment-operator"]], "Compiler Generated Copy Constructor": [[568, "compiler-generated-copy-constructor"]], "Rule": [[568, null], [571, null], [670, "rule"]], "Manually Written Copy Constructor And Assignment Operator": [[568, "manually-written-copy-constructor-and-assignment-operator"]], "Classes and Objects": [[569, "classes-and-objects"]], "Introducing C++: class point": [[569, "introducing-c-class-point"]], "Access Specifiers: public And private": [[569, "access-specifiers-public-and-private"]], "Default Constructor": [[569, "default-constructor"], [571, "default-constructor"], [584, "default-constructor"], [585, "default-constructor"], [586, "default-constructor"], [587, "default-constructor"]], "Custom Constructor: Usage": [[569, "custom-constructor-usage"]], "Custom Constructor: Implementation": [[569, "custom-constructor-implementation"]], "Access Methods For Otherwise Private Members": [[569, "access-methods-for-otherwise-private-members"]], "Methods: Operations On An Object": [[569, "methods-operations-on-an-object"]], "And printf()?!": [[569, "and-printf"]], "Custom Constructor": [[570, "custom-constructor"], [584, "custom-constructor"]], "Constructors: why? (1)": [[570, "constructors-why-1"]], "Constructors: why? (2)": [[570, "constructors-why-2"]], "Constructors: Implementation - Inline": [[570, "constructors-implementation-inline"]], "Constructors: Implementation - Out-of-Line": [[570, "constructors-implementation-out-of-line"]], "Compiler Generated Default Constructor": [[571, "compiler-generated-default-constructor"]], "Compiler Generated Default Constructor: Pitfall: Built-In Types": [[571, "compiler-generated-default-constructor-pitfall-built-in-types"]], "Manually Written Default Constructor": [[571, "manually-written-default-constructor"]], "What If User-Defined Constructors Are In Place?": [[571, "what-if-user-defined-constructors-are-in-place"]], "More Constructors, Destructors": [[572, "more-constructors-destructors"]], "Default Constructor (1)": [[572, "default-constructor-1"]], "Default Constructor (2)": [[572, "default-constructor-2"]], "Object Lifecycle - Destructor": [[572, "object-lifecycle-destructor"]], "Destructors (1)": [[572, "destructors-1"]], "Destructors (2)": [[572, "destructors-2"]], "Destructors (3)": [[572, "destructors-3"]], "Destructors (4)": [[572, "destructors-4"]], "Data Encapsulation": [[573, "data-encapsulation"]], "Constructors: Member Initialization": [[574, "constructors-member-initialization"]], "Member Initialization? Assignment?": [[574, "member-initialization-assignment"]], "Real Initialization: Initializer List": [[574, "real-initialization-initializer-list"]], "Why Is That Important?": [[574, "why-is-that-important"]], "Why Else Is That Important?": [[574, "why-else-is-that-important"]], "Object Copy (And Resource Management): There Be Dragons": [[575, "object-copy-and-resource-management-there-be-dragons"]], "Copy in C": [[575, "copy-in-c"]], "Copy Constructor": [[575, "copy-constructor"]], "Pointer Members, And Compiler Generated Copy": [[575, "pointer-members-and-compiler-generated-copy"]], "Why? Dragons Everywhere!": [[575, "why-dragons-everywhere"]], "Solution: Write Copy Constructor Manually": [[575, "solution-write-copy-constructor-manually"]], "Copy Constructor: Recursive/Memberwise": [[575, "copy-constructor-recursive-memberwise"]], "Assignment Operator": [[575, "assignment-operator"]], "Assignment Operator and Pointer Members: Memory Leak": [[575, "assignment-operator-and-pointer-members-memory-leak"]], "Assignment Operator and Pointer Members: Memory Leak, Straighforward Fix": [[575, "assignment-operator-and-pointer-members-memory-leak-straighforward-fix"]], "Assignment Operator and Pointer Members: Self-Assignment": [[575, "assignment-operator-and-pointer-members-self-assignment"]], "Assignment Operator: Self Assignment, Correctly Implemented": [[575, "assignment-operator-self-assignment-correctly-implemented"]], "Overloading": [[576, "overloading"]], "Functions in C": [[576, "functions-in-c"]], "Functions in C++ \u2014 Overloading": [[576, "functions-in-c-overloading"]], "Underlying Mechanism: Name Mangling": [[576, "underlying-mechanism-name-mangling"]], "Overloading Class Methods: Just The Same": [[576, "overloading-class-methods-just-the-same"]], "Objects - Data and Methods": [[577, "objects-data-and-methods"]], "class point Again": [[577, "class-point-again"]], "Simple Methods: Access Methods (\u201cGetters\u201d)": [[577, "simple-methods-access-methods-getters"]], "How Are Members Accessed Inside Methods?": [[577, "how-are-members-accessed-inside-methods"]], "const Methods": [[577, "const-methods"], [578, "const-methods"]], "Non const Methods": [[577, "non-const-methods"]], "const": [[578, "const"]], "const: Immutable Variable": [[578, "const-immutable-variable"]], "const Correctness vs. Pollution": [[578, "const-correctness-vs-pollution"]], "this": [[579, "this"]], "Hidden Pointer: this (1)": [[579, "hidden-pointer-this-1"]], "Hidden Pointer: this (2)": [[579, "hidden-pointer-this-2"]], "Explicit this Pointer": [[579, "explicit-this-pointer"]], "Pass By Copy/Reference": [[580, "pass-by-copy-reference"]], "Pointers Can Be Left Uninitialized": [[580, "pointers-can-be-left-uninitialized"]], "References Cannot (Easily) Be Left Uninitialized": [[580, "references-cannot-easily-be-left-uninitialized"]], "Copy? Reference? C? Pointers!": [[580, "copy-reference-c-pointers"]], "C++: True References": [[580, "c-true-references"]], "And const? Pointers?": [[580, "and-const-pointers"]], "const References": [[580, "const-references"]], "const Reference: Substitute For \u201cPass by Copy\u201d": [[580, "const-reference-substitute-for-pass-by-copy"]], "static Methods": [[581, "static-methods"]], "Methods without Object": [[581, "methods-without-object"]], "Naive Implementation: Global Function": [[581, "naive-implementation-global-function"]], "C++: static Method": [[581, "c-static-method"]], "static Member Variables": [[582, "static-member-variables"]], "Good Old C: extern Global Variables": [[582, "good-old-c-extern-global-variables"]], "ODR: One Definition Rule": [[582, "odr-one-definition-rule"]], "(A Litte) More Overengineered: Declaration In Header File": [[582, "a-litte-more-overengineered-declaration-in-header-file"]], "Same Inside A Class: static Member Variable": [[582, "same-inside-a-class-static-member-variable"]], "Sideway: Definition In A Header File?": [[582, "sideway-definition-in-a-header-file"]], "static inline Member Defnition (Since C++17)": [[582, "static-inline-member-defnition-since-c-17"]], "Implementing (In)Equality": [[583, "implementing-in-equality"]], "Implementing (In)Equality: Global Function": [[583, "implementing-in-equality-global-function"]], "Implementing (In)Equality: Object Method": [[583, "implementing-in-equality-object-method"]], "Implementing Arithmetic: + (Vector Addition)": [[583, "implementing-arithmetic-vector-addition"]], "Implementing Arithmetic: + (Vector Addition): Global Function": [[583, "implementing-arithmetic-vector-addition-global-function"]], "Implementing Arithmetic: + (Vector Addition): Object Method": [[583, "implementing-arithmetic-vector-addition-object-method"]], "Implementing Arithmetic: += (Moving A Point)": [[583, "implementing-arithmetic-moving-a-point"]], "Implementing ostream Shift: std::cout << ...": [[583, "implementing-ostream-shift-std-cout"]], "Exercise (FH): class cuboid": [[584, "exercise-fh-class-cuboid"]], "Building class cuboid Upon class point3d": [[584, "building-class-cuboid-upon-class-point3d"]], "(In-)Equality": [[584, "in-equality"], [585, "in-equality"], [586, "in-equality"], [587, "in-equality"]], "+=": [[584, "id2"], [585, "id1"], [586, "id2"], [587, "id2"]], "-=": [[584, "id4"], [586, "id4"]], "+": [[584, "id6"], [585, "id2"], [586, "id6"], [587, "id3"]], "-": [[584, "id8"], [586, "id8"]], "<< (std::ostream)": [[584, "std-ostream"], [585, "std-ostream"], [586, "std-ostream"], [587, "std-ostream"]], "Surface": [[584, "surface"]], "Volume": [[584, "volume"]], "Exercise (FH): class point": [[585, "exercise-fh-class-point"]], "Initial Build": [[585, "initial-build"]], "Initial Test Run": [[585, "initial-test-run"]], "Extending class point: More Unit Tests": [[585, "extending-class-point-more-unit-tests"]], "Access Methods": [[585, "access-methods"]], "Unary -": [[585, "unary"], [586, "unary"]], "Exercise (FH): class point3d": [[586, "exercise-fh-class-point3d"]], "Building class rectangle Upon class point": [[586, "building-class-rectangle-upon-class-point"], [587, "building-class-rectangle-upon-class-point"]], "Coordinates": [[586, "coordinates"], [587, "coordinates"]], "Absolute Value": [[586, "absolute-value"]], "Distance Between Two Points": [[586, "distance-between-two-points"]], "Exercise (FH): class rectangle": [[587, "exercise-fh-class-rectangle"]], "Width, Height, Area": [[587, "width-height-area"]], "Functions and Methods": [[588, "functions-and-methods"]], "Error Handling: if - else if - else": [[589, "error-handling-if-else-if-else"]], "try - catch": [[590, "try-catch"]], "try - Block": [[590, "try-block"]], "catch - Block": [[590, "catch-block"]], "Standard Library: Exception-Hierarchy": [[590, "standard-library-exception-hierarchy"]], "Custom Exceptions (1)": [[590, "custom-exceptions-1"]], "Custom Exceptions (2)": [[590, "custom-exceptions-2"]], "Throwing Exceptions - throw": [[590, "throwing-exceptions-throw"]], "Last Words": [[590, "last-words"], [593, "last-words"]], "Function Templates": [[592, "function-templates"]], "Origin: Duplicated Code": [[592, "origin-duplicated-code"]], "A simple Function-Template": [[592, "a-simple-function-template"]], "More Templates from the STL": [[592, "more-templates-from-the-stl"]], "Class Templates": [[593, "class-templates"]], "Does This Work With Classes?": [[593, "does-this-work-with-classes"]], "Example: point as a Class Template (1)": [[593, "example-point-as-a-class-template-1"]], "Example: point as a Class Template (2)": [[593, "example-point-as-a-class-template-2"]], "C++ Template Basics": [[594, "c-template-basics"]], "Screenplay: std::copy<>() From <algorithm>": [[595, "screenplay-std-copy-from-algorithm"]], "Screenplay: Pointer Arithmetic, And Algorithms": [[596, "screenplay-pointer-arithmetic-and-algorithms"]], "Screenplay: Pointer Arithmetic Basics": [[597, "screenplay-pointer-arithmetic-basics"]], "Screenplay: Pointer Difference": [[598, "screenplay-pointer-difference"]], "Screenplay: Out Of Range Errors": [[599, "screenplay-out-of-range-errors"]], "Standard Template Library: Basics": [[600, "standard-template-library-basics"]], "Containers, Iterators, Algorithms": [[600, "containers-iterators-algorithms"]], "Pointer Increment and Decrement": [[600, "pointer-increment-and-decrement"]], "Out Of Range Errors (The Spirit Of C)": [[600, "out-of-range-errors-the-spirit-of-c"]], "Pointer Difference": [[600, "pointer-difference"]], "Step Width? (1)": [[600, "step-width-1"]], "Step Width? (2)": [[600, "step-width-2"]], "And Arbitrary Data Types?": [[600, "and-arbitrary-data-types"]], "Enter Algorithms (On Good Old C Arrays)": [[600, "enter-algorithms-on-good-old-c-arrays"]], "STL Algorithms": [[600, "stl-algorithms"]], "STL Containers": [[600, "stl-containers"]], "std::vector (And std::copy())": [[601, "std-vector-and-std-copy"]], "Dynamicity Details": [[601, "dynamicity-details"]], "STL Iterators: Pointer Arithmetic On A std::vector<>": [[601, "stl-iterators-pointer-arithmetic-on-a-std-vector"]], "Algorithms And Containers : std::copy": [[601, "algorithms-and-containers-std-copy"]], "Screenplay: std::vector And std::copy()": [[602, "screenplay-std-vector-and-std-copy"]], "std::vector<> Into C Array": [[602, "std-vector-into-c-array"]], "Copying Into std::vector (Without Allocation)": [[602, "copying-into-std-vector-without-allocation"]], "Solution 1: Pre-allocate Destination": [[602, "solution-1-pre-allocate-destination"]], "Solution 2: std::back_insert_iterator": [[602, "solution-2-std-back-insert-iterator"]], "Screenplay: std::vector Basics": [[603, "screenplay-std-vector-basics"]], "Screenplay: std::vector, And Pointer Arithmetics": [[604, "screenplay-std-vector-and-pointer-arithmetics"]], "Documentation": [[605, null], [606, null], [607, null], [608, null], [609, null], [611, null], [612, null], [613, null], [614, null], [617, null], [618, null], [621, null], [626, null], [772, null], [772, null], [788, null], [790, "documentation"], [790, null], [794, "documentation"], [796, null], [796, null], [796, null], [822, "documentation"], [825, "documentation"], [835, null], [836, null], [839, null], [843, null], [843, null], [850, null], [851, null], [852, null], [852, null], [852, null], [853, null], [868, null], [868, null], [868, null], [869, null], [870, null], [871, null], [887, null], [887, null], [887, null], [890, null], [891, null], [924, null], [926, null], [928, null], [930, null], [931, null], [932, null], [934, null], [934, null], [934, null], [934, null], [934, null], [934, null], [937, null], [938, null], [939, null], [940, null], [940, null], [941, null], [944, null], [944, null], [944, null], [944, null], [982, null], [982, null], [983, null], [1058, null], [1068, null], [1146, "documentation"]], "binary_search<>: On Sorted Sequence": [[605, "binary-search-on-sorted-sequence"]], "More Intelligent Search": [[605, "more-intelligent-search"], [611, "more-intelligent-search"]], "copy<>": [[606, "copy"]], "find<>: Sequential Search, by Equality": [[607, "find-sequential-search-by-equality"]], "Basic Usage": [[607, "basic-usage"], [726, "basic-usage"], [890, "basic-usage"], [1060, "basic-usage"]], "Not Found?": [[607, "not-found"]], "find_if<>: Sequential Search, Customizable": [[608, "find-if-sequential-search-customizable"]], "if, Using a Plain Function": [[608, "if-using-a-plain-function"]], "if, Using a Functor Class": [[608, "if-using-a-functor-class"]], "for_each<>": [[609, "for-each"]], "Basic Algorithms": [[610, "basic-algorithms"]], "Sorted Arrays": [[610, "sorted-arrays"]], "lower_bound<>: On Sorted Sequence": [[611, "lower-bound-on-sorted-sequence"]], "reverse<>: Reversing In-Place": [[612, "reverse-reversing-in-place"]], "reverse_copy<>: Copying and Reversing": [[613, "reverse-copy-copying-and-reversing"]], "sort<>": [[614, "sort"]], "Algorithm: std::sort": [[614, "algorithm-std-sort"]], "Algorithm: std::sort, custom comparison": [[614, "algorithm-std-sort-custom-comparison"]], "Sequential Containers": [[615, "sequential-containers"], [616, "sequential-containers"]], "Common Characteristics": [[615, "common-characteristics"]], "list<>": [[617, "list"]], "Insertion and Deletion": [[617, "insertion-and-deletion"]], "vector<>": [[618, "vector"]], "Characteristics": [[618, "characteristics"]], "Modification at the Back": [[618, "modification-at-the-back"]], "Insertion": [[618, "insertion"]], "Example": [[618, "example"], [1075, "example"]], "Associative Containers": [[619, "associative-containers"], [620, "associative-containers"]], "Type Instantiation": [[621, "type-instantiation"]], "Filling The Container": [[621, "filling-the-container"]], "Inserting Elements": [[621, "inserting-elements"]], "Searching": [[621, "searching"], [645, "searching"]], "Screenplay: std::map Initialization And Inserting": [[622, "screenplay-std-map-initialization-and-inserting"]], "Definining The Type": [[622, "definining-the-type"]], "Initialization": [[622, "initialization"], [645, "initialization"]], "Screenplay: Inserting Elements": [[623, "screenplay-inserting-elements"]], "Subscript Operator": [[623, "subscript-operator"]], "insert()": [[623, "insert"]], "Screenplay: Removing (Erasing) Elements": [[624, "screenplay-removing-erasing-elements"]], "By Pointer (Err, Iterator)": [[624, "by-pointer-err-iterator"]], "By Key": [[624, "by-key"]], "Screenplay: Searching": [[625, "screenplay-searching"]], "find(key)": [[625, "find-key"]], "[key]": [[625, "key"]], "at(key)": [[625, "at-key"]], "multimap<>": [[626, "multimap"]], "Allocator Basics": [[627, "allocator-basics"]], "STL: Exercises": [[629, "stl-exercises"]], "Exercise: Reverse a String": [[630, "exercise-reverse-a-string"]], "Exercise: Reverse A String": [[631, "exercise-reverse-a-string"]], "Solution: Reverse a String": [[632, "solution-reverse-a-string"]], "Naive": [[632, "naive"]], "Using std::reverse<>": [[632, "using-std-reverse"]], "Using std::reverse_copy<>": [[632, "using-std-reverse-copy"]], "Dynamic Memory (To Be Done)": [[634, "dynamic-memory-to-be-done"]], "Dynamic Memory Allocation, Resource Management": [[635, "dynamic-memory-allocation-resource-management"]], "Inheritance Basics": [[636, "inheritance-basics"]], "Plain (Base) Class": [[636, "plain-base-class"], [637, "plain-base-class"]], "Inheriting (Deriving) From Base": [[636, "inheriting-deriving-from-base"]], "Derived is-a Base?": [[636, "derived-is-a-base"]], "Destructors And Inheritance": [[637, "destructors-and-inheritance"]], "Derived Class, And Destructor": [[637, "derived-class-and-destructor"]], "And Base Class Conversion?": [[637, "and-base-class-conversion"]], "Inheritance And Object Oriented Design": [[638, "inheritance-and-object-oriented-design"]], "C++ \u201cInterfaces\u201d": [[639, "c-interfaces"]], "Bringing It All Together": [[639, "bringing-it-all-together"]], "Polymorphic Usage Of Objects": [[640, "polymorphic-usage-of-objects"]], "What Larger Systems Want": [[640, "what-larger-systems-want"]], "Pitfall \u27f6 Pure Virtual Methods": [[640, "pitfall-longrightarrow-pure-virtual-methods"]], "Pure Virtual Method": [[640, "pure-virtual-method"]], "Inheritance: private, protected (Implementation Inheritance)": [[641, "inheritance-private-protected-implementation-inheritance"]], "Virtual Destructors": [[642, "virtual-destructors"]], "Is-A Relationships And Destructors": [[642, "is-a-relationships-and-destructors"]], "Pure Virtual Destructor?": [[642, "pure-virtual-destructor"]], "Virtual Methods": [[643, "virtual-methods"]], "Simple Is-A Relationship Is Not Enough": [[643, "simple-is-a-relationship-is-not-enough"]], "Enter virtual": [[643, "enter-virtual"]], "Caution: virtual": [[643, "caution-virtual"]], "The Standard Library: Miscellaneous Topics": [[644, "the-standard-library-miscellaneous-topics"]], "std::string": [[645, "std-string"]], "Addition, And Such": [[645, "addition-and-such"]], "Conversion From String": [[645, "conversion-from-string"]], "Conversion To String": [[645, "conversion-to-string"]], "Substrings": [[645, "substrings"]], "Exercise: Paint the American Flag Onto Standard Output": [[646, "exercise-paint-the-american-flag-onto-standard-output"]], "FH/Moodle Quiz: C++": [[647, "fh-moodle-quiz-c"]], "Exercises: Miscellaneous": [[648, "exercises-miscellaneous"]], "Exercise: Sum of Integers Coming From cin": [[649, "exercise-sum-of-integers-coming-from-cin"]], "Exercises: User Database": [[650, "exercises-user-database"]], "Exercise: Access Methods for Members": [[651, "exercise-access-methods-for-members"]], "Exercise: const Members": [[652, "exercise-const-members"]], "Exercise: Use const": [[653, "exercise-use-const"]], "Exercise: Default Constructor (was: Arrays of Objects)": [[654, "exercise-default-constructor-was-arrays-of-objects"]], "Exercise: Simple Method (Users Age By n Years)": [[655, "exercise-simple-method-users-age-by-n-years"]], "Exercise: Transform struct User Into A Class": [[656, "exercise-transform-struct-user-into-a-class"]], "Exercise: Insert a User into UserDB": [[657, "exercise-insert-a-user-into-userdb"]], "Exercise: Search a User By Lastname (std::find_if)": [[658, "exercise-search-a-user-by-lastname-std-find-if"]], "Exercise: Search, \u201cUser Not Found\u201d Exception": [[659, "exercise-search-user-not-found-exception"]], "What\u2019s Wrong?": [[659, "what-s-wrong"]], "Exercise: Search a User By Lastname": [[660, "exercise-search-a-user-by-lastname"]], "Exercise: Use std::vector in UserDB": [[661, "exercise-use-std-vector-in-userdb"]], "History, Background": [[664, "history-background"]], "Make C++ Great Again": [[664, "make-c-great-again"]], "The \u201cNew\u201d C++": [[664, "the-new-c"]], "A Live-Hacked Tour Around The New C++": [[665, "a-live-hacked-tour-around-the-new-c"]], "C++03 To-Do List Version": [[665, "c-03-to-do-list-version"]], "Real Container Initialization": [[665, "real-container-initialization"]], "Long iterator Type Names \u27f6 auto": [[665, "long-iterator-type-names-longrightarrow-auto"]], "More auto: Unpacking std::pair": [[665, "more-auto-unpacking-std-pair"]], "Pitfall: Plain auto Creates Copy \u27f6 const auto&": [[665, "pitfall-plain-auto-creates-copy-longrightarrow-const-auto"]], "Iterators Are So Old-School: Range Based For": [[665, "iterators-are-so-old-school-range-based-for"]], "Still Too Old-School: Want Python\u2019s Tuple Unpacking": [[665, "still-too-old-school-want-python-s-tuple-unpacking"]], "What If To-Do List Items Can Really Do Something? \u27f6 Functions": [[665, "what-if-to-do-list-items-can-really-do-something-longrightarrow-functions"]], "Function Pointers Are Old-School \u27f6 std::function": [[665, "function-pointers-are-old-school-longrightarrow-std-function"]], "Definitely Not Old-School: Lambda": [[665, "definitely-not-old-school-lambda"]], "Inevitable: Threads": [[665, "inevitable-threads"]], "Unions? std::variant!": [[665, "unions-std-variant"]], "Wrapping All That Into A Class": [[665, "wrapping-all-that-into-a-class"]], "Architectural Considerations: No Implementation Inheritance Wanted": [[665, "architectural-considerations-no-implementation-inheritance-wanted"]], "Wrapping Up: Initializer": [[665, "wrapping-up-initializer"]], "C++03 enum Types: Motivation": [[666, "c-03-enum-types-motivation"]], "C++03 enum Types: Problems": [[666, "c-03-enum-types-problems"]], "C++11 enum class": [[666, "c-11-enum-class"]], "C++11 enum class: Underlying Type": [[666, "c-11-enum-class-underlying-type"]], "Brace Initialization (Uniform Initialization)": [[667, "brace-initialization-uniform-initialization"]], "std::initializer_list: Brace Initialization, Implementor\u2019s View": [[668, "std-initializer-list-brace-initialization-implementor-s-view"]], "std::initializer_list": [[668, "std-initializer-list"]], "Direct Usage": [[668, "direct-usage"]], "Custom Class That Supports Brace Initialization": [[668, "custom-class-that-supports-brace-initialization"]], "Brace Initialization: Introduction": [[669, "brace-initialization-introduction"]], "Motivation: Inconsistent Initialization Styles": [[669, "motivation-inconsistent-initialization-styles"]], "Motivation: Integral Types Initialization": [[669, "motivation-integral-types-initialization"]], "Motivation: Aggregate Initialization": [[669, "motivation-aggregate-initialization"]], "Motivation: Object Initialization/Constructor": [[669, "motivation-object-initialization-constructor"]], "Motivation: Container Initialization (Missing Pre C++11)": [[669, "motivation-container-initialization-missing-pre-c-11"]], "Motivation: Member Array Initialization": [[669, "motivation-member-array-initialization"]], "Motivation: Heap Array Initialization": [[669, "motivation-heap-array-initialization"]], "Solution: Brace Initialization In C++11": [[669, "solution-brace-initialization-in-c-11"]], "Good: Refuses To Narrow Built-In Types": [[669, "good-refuses-to-narrow-built-in-types"]], "Brace Initialization: A Mess": [[670, "brace-initialization-a-mess"]], "Explicit Constructor And Brace Initialization": [[670, "explicit-constructor-and-brace-initialization"]], "Ambiguity: Explicit And std::initializer_list Constructor": [[670, "ambiguity-explicit-and-std-initializer-list-constructor"]], "Realistic Example: std::vector: Two int (Explicit)": [[670, "realistic-example-std-vector-two-int-explicit"]], "Realistic Example: std::vector: Two int (std::initializer_list)": [[670, "realistic-example-std-vector-two-int-std-initializer-list"]], "Nicolai Josuttis, Complaining About C++": [[670, "nicolai-josuttis-complaining-about-c"]], "Delegating Constructor: Motivation": [[671, "delegating-constructor-motivation"]], "Delegating Constructor: Solution": [[671, "delegating-constructor-solution"]], "constexpr": [[672, "constexpr"]], "Basic Usage: Expressions": [[672, "basic-usage-expressions"]], "constexpr Functions": [[672, "constexpr-functions"]], "Recursive constexpr": [[672, "recursive-constexpr"]], "constexpr Objects": [[672, "constexpr-objects"]], "Afterword, Further Reading": [[673, "afterword-further-reading"]], "Uses In The Standard Library": [[673, "uses-in-the-standard-library"]], "Other Uses": [[673, "other-uses"]], "All Said \u27f6 Guidelines": [[673, "all-said-longrightarrow-guidelines"]], "Further Reading (Well, Videos \ud83d\ude09)": [[673, "further-reading-well-videos-wink"]], "Move Semantics, Rvalue References": [[674, "move-semantics-rvalue-references"]], "Alternative Livehacking": [[674, "alternative-livehacking"]], "Starting Point": [[675, "starting-point"], [63, "starting-point"]], "SmartPtr With Move Semantics": [[675, "smartptr-with-move-semantics"]], "Return SmartPtr Object From Function": [[675, "return-smartptr-object-from-function"]], "Assign SmartPtr Object \u27f6 Moved": [[675, "assign-smartptr-object-longrightarrow-moved"]], "Implementing Move Semantics (class String, Live Hacked)": [[676, "implementing-move-semantics-class-string-live-hacked"]], "Copy Semantics, Revisited": [[676, "copy-semantics-revisited"]], "class String, Without Copy": [[676, "class-string-without-copy"]], "Return From Function: Copy (Or Move) Wanted": [[676, "return-from-function-copy-or-move-wanted"]], "Move Constructor? Move?": [[676, "move-constructor-move"]], "Implementing Move Constructor": [[676, "implementing-move-constructor"]], "And Move Assignment?": [[676, "and-move-assignment"]], "Implementing Move Assignment": [[676, "implementing-move-assignment"]], "Using Move Semantics In Own Code": [[677, "using-move-semantics-in-own-code"]], "Using String: class Person": [[677, "using-string-class-person"]], "What?": [[677, "what"], [851, "what"]], "Using Rvalue References Inside Function: std::move": [[677, "using-rvalue-references-inside-function-std-move"]], "Lvalues, Rvalues, And Moving": [[678, "lvalues-rvalues-and-moving"]], "Return Object Problem: Reference To Stack-Based Object": [[678, "return-object-problem-reference-to-stack-based-object"]], "Return Object Problem: Solution: Copy": [[678, "return-object-problem-solution-copy"]], "Move Semantics: Wish List": [[678, "move-semantics-wish-list"]], "Theory: Lvalues": [[678, "theory-lvalues"]], "Theory: Rvalues": [[678, "theory-rvalues"]], "Lvalue References (The Good Old Ones)": [[678, "lvalue-references-the-good-old-ones"]], "Rvalue References: So What Is That?": [[678, "rvalue-references-so-what-is-that"]], "Rvalue References As Function Parameters": [[678, "rvalue-references-as-function-parameters"]], "Use Of Rvalue References Parameter Inside A Function: Is An Lvalue": [[678, "use-of-rvalue-references-parameter-inside-a-function-is-an-lvalue"]], "Enter Move Constructor And Move Assignment": [[678, "enter-move-constructor-and-move-assignment"]], "Rules": [[678, null]], "Templates end with \u201c>>\u201d": [[679, "templates-end-with"]], "Duck Typing (Err, auto) Without A Duck": [[680, "duck-typing-err-auto-without-a-duck"]], "Most Basic Usage": [[680, "most-basic-usage"]], "auto Is Only The Basic Type": [[680, "auto-is-only-the-basic-type"]], "If You Want Reference, Say So!": [[680, "if-you-want-reference-say-so"]], "If You Want Const-Reference, Say So!": [[680, "if-you-want-const-reference-say-so"]], "If You Want Pointer, Say So!": [[680, "if-you-want-pointer-say-so"]], "And Arrays? Decay To Pointers!": [[680, "and-arrays-decay-to-pointers"]], "Concepts: Overview": [[682, "concepts-overview"]], "No Problem: Template Instantiation Chosen By Parameter Type": [[682, "no-problem-template-instantiation-chosen-by-parameter-type"]], "Problem: Template Instantiation Chosen By Parameter Type": [[682, "problem-template-instantiation-chosen-by-parameter-type"]], "Concepts To The Rescue": [[682, "concepts-to-the-rescue"]], "Syntactic Variations": [[682, "syntactic-variations"]], "toolcase-1-conceptless.cpp": [[683, "toolcase-1-conceptless-cpp"]], "toolcase-2-conceptless-error.cpp": [[684, "toolcase-2-conceptless-error-cpp"]], "toolcase-3-concept-integral.cpp": [[685, "toolcase-3-concept-integral-cpp"]], "Concepts: Links": [[686, "concepts-links"]], "Writing Your Own Concepts": [[687, "writing-your-own-concepts"]], "Starting Point: Good Old Function": [[687, "starting-point-good-old-function"]], "Need Template": [[687, "need-template"]], "Error: Requirement Not Fulfilled": [[687, "error-requirement-not-fulfilled"]], "Concept: has_size": [[687, "concept-has-size"]], "Concept: index_returns_double": [[687, "concept-index-returns-double"]], "example-1-good-old-func.cpp": [[688, "example-1-good-old-func-cpp"]], "example-2-need-template.cpp": [[689, "example-2-need-template-cpp"]], "example-4-concept-has-size.cpp": [[690, "example-4-concept-has-size-cpp"]], "example-5-concept-index-ret-double.cpp": [[691, "example-5-concept-index-ret-double-cpp"]], "Coroutines": [[692, "coroutines"]], "Coroutines: An Overview": [[693, "coroutines-an-overview"]], "Foreword": [[693, "foreword"]], "Prototypical Introductory Exampe: Fibonacci Numbers": [[693, "prototypical-introductory-exampe-fibonacci-numbers"]], "Step By Step: Simplest": [[693, "step-by-step-simplest"]], "Simplest: Incremental Fixing And Explaining": [[693, "simplest-incremental-fixing-and-explaining"]], "Driving Coroutines: Coroutine Anatomy": [[693, "driving-coroutines-coroutine-anatomy"]], "Driving Coroutines: Resuming": [[693, "driving-coroutines-resuming"]], "Suspension: Returning Control To Caller (co_yield)": [[693, "suspension-returning-control-to-caller-co-yield"]], "Playing Around: Iteration, Mimicking Python Iterator Protocol": [[693, "playing-around-iteration-mimicking-python-iterator-protocol"]], "Playing Around: Iteration, Range-Based-For": [[693, "playing-around-iteration-range-based-for"]], "Playing Around: Generic Generator": [[693, "playing-around-generic-generator"]], "Playing Around: Fibonacci Numbers, Generator Version": [[693, "playing-around-fibonacci-numbers-generator-version"]], "Pitfalls: Coroutines Are Stateful!": [[693, "pitfalls-coroutines-are-stateful"]], "fibo-generator.cpp": [[694, "fibo-generator-cpp"]], "fibonacci.cpp": [[695, "fibonacci-cpp"]], "generator.h": [[696, "generator-h"]], "generator-hello.cpp": [[697, "generator-hello-cpp"]], "simplest.cpp": [[698, "simplest-cpp"]], "suspend.cpp": [[699, "suspend-cpp"]], "suspend-iter.cpp": [[700, "suspend-iter-cpp"]], "suspend-next.cpp": [[701, "suspend-next-cpp"]], "= default": [[702, "default"]], "Problem: Default Constructor Not Automatically Generated": [[702, "problem-default-constructor-not-automatically-generated"]], "C++ < 11 Solution: Write Default Constructor \ud83d\ude20 \ud83d\udc4e": [[702, "c-11-solution-write-default-constructor-angry-thumbsdown"]], "C++ >= 11 Solution: = default": [[702, "c-11-solution-default"]], "= delete": [[703, "delete"]], "Problem: Copy Is Not Always Wanted": [[703, "problem-copy-is-not-always-wanted"]], "C++ < 11 Solution: Make Copy private": [[703, "c-11-solution-make-copy-private"]], "C++ >= 11 Solution: = delete Copy": [[703, "c-11-solution-delete-copy"]], "final": [[704, "final"]], "Architectural Decisions": [[704, "architectural-decisions"]], "Enter final: Architectural Cleanliness By Compiler": [[704, "enter-final-architectural-cleanliness-by-compiler"]], "New Language Features": [[705, "new-language-features"]], "Lambda": [[706, "lambda"], [707, "lambda"]], "Lambda To The Rescue": [[707, "lambda-to-the-rescue"]], "Excursion: Python Closures": [[707, "excursion-python-closures"]], "Same In C++: Capturing": [[707, "same-in-c-capturing"]], "So What Is That? (Answer: A Functor)": [[707, "so-what-is-that-answer-a-functor"]], "Capturing By Reference \u27f6 Careful!": [[707, "capturing-by-reference-longrightarrow-careful"]], "More About Capturing": [[707, "more-about-capturing"]], "Lambda: More Capturing": [[708, "lambda-more-capturing"]], "More Capture Syntax": [[708, "more-capture-syntax"]], "Capturing Explicitly, By Copy": [[708, "capturing-explicitly-by-copy"]], "Capturing Explicitly, By Reference": [[708, "capturing-explicitly-by-reference"]], "Mixed Explicit Capture": [[708, "mixed-explicit-capture"]], "Define Variables In Capture": [[708, "define-variables-in-capture"]], "Capturing All By Reference": [[708, "capturing-all-by-reference"]], "Capturing All By Copy": [[708, "capturing-all-by-copy"]], "Capturing All By Copy, Except Some By Reference": [[708, "capturing-all-by-copy-except-some-by-reference"]], "Capturing this": [[708, "capturing-this"]], "Live Hacking: Handwritten Functors (Too Much Boilerplate)": [[709, "live-hacking-handwritten-functors-too-much-boilerplate"]], "Original Lambda Demo Proggy": [[709, "original-lambda-demo-proggy"]], "Morph Lambda Into Handwritten Functor Class": [[709, "morph-lambda-into-handwritten-functor-class"]], "Live Hacking: Handwritten Functors, And Capturing By Reference (Pitfalls)": [[710, "live-hacking-handwritten-functors-and-capturing-by-reference-pitfalls"]], "Original, Handwritten Functor (By Copy)": [[710, "original-handwritten-functor-by-copy"]], "Possible Pitfall: Capturing A Reference": [[710, "possible-pitfall-capturing-a-reference"]], "Lifetime Of Temporary, Made Explicit": [[710, "lifetime-of-temporary-made-explicit"]], "Lifetime Of Temporary, Made Explicit \u27f6 \ud83d\ude91": [[710, "lifetime-of-temporary-made-explicit-longrightarrow-ambulance"]], "override": [[712, "override"]], "Correct Overriding \u2026": [[712, "correct-overriding"]], "\u2026 Is Very Hard": [[712, "is-very-hard"]], "More Problems Arise": [[712, "more-problems-arise"]], "Solution: override": [[712, "solution-override"]], "Range Based for Loops: Introduction": [[713, "range-based-for-loops-introduction"]], "Enter Range Based for Loops": [[713, "enter-range-based-for-loops"]], "Range Based for Loops, And auto": [[713, "range-based-for-loops-and-auto"]], "Case Study: std::map Iteration": [[713, "case-study-std-map-iteration"]], "Case Study: Range Based for On std::map": [[714, "case-study-range-based-for-on-std-map"]], "Gool Ol\u2019 Days: Iteration In C++ < 11": [[714, "gool-ol-days-iteration-in-c-11"]], "Basic C++11 Iteration: Range Based For, auto, And Initialization": [[714, "basic-c-11-iteration-range-based-for-auto-and-initialization"]], "Variation: Preventing Accidental Copy Using const auto&": [[714, "variation-preventing-accidental-copy-using-const-auto"]], "Pythonicity: Tuple Unpacking, err Structured Binding": [[714, "pythonicity-tuple-unpacking-err-structured-binding"]], "Structured Binding - Preventing Accidental Copy": [[714, "structured-binding-preventing-accidental-copy"]], "Ranges And Views: Good Or Bad?": [[715, "ranges-and-views-good-or-bad"]], "Dangling Iterator Protection": [[715, "dangling-iterator-protection"]], "Performance: views::drop Is Easy": [[715, "performance-views-drop-is-easy"]], "Performance: views::filter Is Not Easy": [[715, "performance-views-filter-is-not-easy"]], "Constraints: How To Read?": [[715, "constraints-how-to-read"]], "And drop()? std::vector Is Easy": [[715, "and-drop-std-vector-is-easy"]], "And drop()? std::list Is Not Easy": [[715, "and-drop-std-list-is-not-easy"]], "One Of Many Bugs, Introduced By .begin() Caching": [[715, "one-of-many-bugs-introduced-by-begin-caching"]], "Exceptions From Rules \u27f6 Dogmatic Don\u2019ts (Sigh, C++)": [[715, "exceptions-from-rules-longrightarrow-dogmatic-don-ts-sigh-c"]], "Ranges: Overview": [[717, "ranges-overview"]], "Ranges?": [[717, "ranges"]], "Containers And Views (Storage Behavior)": [[717, "containers-and-views-storage-behavior"]], "Pipe Syntax": [[717, "pipe-syntax"]], "Views As Parameters: Good Old Template": [[717, "views-as-parameters-good-old-template"]], "Views As Parameters: Abbreviated Function Template": [[717, "views-as-parameters-abbreviated-function-template"]], "Views As Parameters: Concepts": [[717, "views-as-parameters-concepts"]], "Available <ranges> Concepts": [[717, "available-ranges-concepts"]], "Ranges And Views: Links": [[718, "ranges-and-views-links"]], "Tuple Unpacking (Err, Structured Binding)": [[719, "tuple-unpacking-err-structured-binding"]], "Variations, Compatible Data Types": [[719, "variations-compatible-data-types"]], "struct: By Copy": [[719, "struct-by-copy"]], "struct: Reference": [[719, "struct-reference"]], "struct: By const Reference": [[719, "struct-by-const-reference"]], "std::tuple: By Copy": [[719, "std-tuple-by-copy"]], "std::tuple: By Reference": [[719, "std-tuple-by-reference"]], "std::tuple: By const Reference": [[719, "std-tuple-by-const-reference"]], "Arrays: By Copy": [[719, "arrays-by-copy"]], "Arrays: By Reference": [[719, "arrays-by-reference"]], "Arrays: By const Reference": [[719, "arrays-by-const-reference"]], "Smart Pointers: Closing Words": [[720, "smart-pointers-closing-words"]], "Shared Pointers: Closing Words": [[720, "shared-pointers-closing-words"]], "Smart Pointers (std::unique_ptr, std::shared_ptr)": [[721, "smart-pointers-std-unique-ptr-std-shared-ptr"]], "Why Smart Pointers?": [[722, "why-smart-pointers"]], "Recap: Constructors and Destructors": [[722, "recap-constructors-and-destructors"]], "(Trying To) Handwrite A Smart Pointer Class in C++ Before C++11": [[723, "trying-to-handwrite-a-smart-pointer-class-in-c-before-c-11"]], "Sensors To Manage": [[723, "sensors-to-manage"]], "Basic Resource Management, Operator Overloading": [[723, "basic-resource-management-operator-overloading"]], "Copy Constructor And Assignment Operator (And Default Ctor)": [[723, "copy-constructor-and-assignment-operator-and-default-ctor"]], "auto_ptr Style": [[723, "auto-ptr-style"]], "Explicit move() Method Maybe?": [[723, "explicit-move-method-maybe"]], "Stop!!!": [[723, "stop"]], "std::shared_ptr": [[724, "std-shared-ptr"]], "Spirit: Not Unique, But Shared (i.e. Reference Counted)": [[724, "spirit-not-unique-but-shared-i-e-reference-counted"]], "std::shared_ptr: Copy": [[724, "std-shared-ptr-copy"]], "std::shared_ptr vs. std::unique_ptr": [[724, "std-shared-ptr-vs-std-unique-ptr"]], "std::shared_ptr: Object Lifetime": [[724, "std-shared-ptr-object-lifetime"]], "std::shared_ptr: Juggling": [[724, "std-shared-ptr-juggling"]], "Demo: Basic Usage": [[724, "demo-basic-usage"]], "Demo: std::make_shared": [[724, "demo-std-make-shared"]], "Demo: Cyclic References": [[724, "demo-cyclic-references"]], "std::unique_ptr": [[725, "std-unique-ptr"]], "The Spirit Of std::unique_ptr": [[725, "the-spirit-of-std-unique-ptr"]], "Basic Usage: Prevent Leaks": [[725, "basic-usage-prevent-leaks"]], "Eliminate Chance Of Leakage \u27f6 Ownership": [[725, "eliminate-chance-of-leakage-longrightarrow-ownership"]], "Saving Keystrokes: std::make_unique<>()": [[725, "saving-keystrokes-std-make-unique"]], "Explicitly Acknowledging Ownership Transfer: std::move()": [[725, "explicitly-acknowledging-ownership-transfer-std-move"]], "Compiler Can Prove: Implicit Ownership Transfer": [[725, "compiler-can-prove-implicit-ownership-transfer"]], "How To Write Code That Can Take Ownership?": [[725, "how-to-write-code-that-can-take-ownership"]], "Manipulating Pointer Content": [[725, "manipulating-pointer-content"]], "std::weak_ptr": [[726, "std-weak-ptr"]], "Spirit: Borrowed Reference That Could Be Invalid": [[726, "spirit-borrowed-reference-that-could-be-invalid"]], "A Real-Life Example": [[726, "a-real-life-example"]], "Perfect Forwarding": [[727, "perfect-forwarding"]], "Universal References? Forwarding References? REALLY?": [[727, "universal-references-forwarding-references-really"]], "Universal Reference? Binds To Lvalues?": [[727, "universal-reference-binds-to-lvalues"]], "Enter Forwarding": [[727, "enter-forwarding"]], "Exercise: Dual insert() Method In Exercise: Bag Of Items, By Shared Reference": [[727, "exercise-dual-insert-method-in-trainings-material-soup-cxx11-exercises-bag-shared"]], "std::bind": [[728, "std-bind"]], "Why? What\u2019s The Problem?": [[728, "why-what-s-the-problem"]], "Sample Program: All Done Manually": [[728, "sample-program-all-done-manually"]], "Sideway: std::transform": [[728, "sideway-std-transform"]], "Sample Program: Using std::transform": [[728, "sample-program-using-std-transform"]], "std::bind: Null Adaptation, Pointlessly": [[728, "std-bind-null-adaptation-pointlessly"]], "std::bind: Adapting One Parameter To No Parameter": [[728, "std-bind-adapting-one-parameter-to-no-parameter"]], "std::bind: Hardcoding Parameters": [[728, "std-bind-hardcoding-parameters"]], "std::bind: Swapping Parameters \u27f6 std::placeholders": [[728, "std-bind-swapping-parameters-longrightarrow-std-placeholders"]], "std::bind: Hardcoding Only First Parameter \u27f6 std::placeholders": [[728, "std-bind-hardcoding-only-first-parameter-longrightarrow-std-placeholders"]], "std::bind: Functor (Is-A Callable)": [[728, "std-bind-functor-is-a-callable"]], "std::bind: Lambda (Is-A Callable)": [[728, "std-bind-lambda-is-a-callable"]], "Sample Program: Using std::transform With std::bind": [[728, "sample-program-using-std-transform-with-std-bind"]], "Summary": [[728, "summary"], [808, "summary"], [808, "id1"], [1127, "summary"], [1129, "summary"]], "std::function": [[729, "std-function"]], "Classic Polymorphism": [[729, "classic-polymorphism"]], "Classic Polymorphism: Upsides": [[729, "classic-polymorphism-upsides"]], "Classic Polymorphism: Technical Downsides": [[729, "classic-polymorphism-technical-downsides"]], "Classic Polymorphism: More Downsides": [[729, "classic-polymorphism-more-downsides"]], "std::function to the Rescue (1)": [[729, "std-function-to-the-rescue-1"]], "std::function to the Rescue (2)": [[729, "std-function-to-the-rescue-2"]], "std::function: Last Words": [[729, "std-function-last-words"]], "Functions, Functions": [[730, "functions-functions"]], "Threads Introduction": [[731, "threads-introduction"]], "Operating System Primitives": [[731, "operating-system-primitives"]], "There Be Dragons": [[731, "there-be-dragons"]], "Threads in C++": [[732, "threads-in-c"]], "Creating Threads is Far Too Easy": [[732, "creating-threads-is-far-too-easy"]], "Joinable vs. Detached": [[732, "joinable-vs-detached"]], "Cornercases in Thread Lifetime": [[732, "cornercases-in-thread-lifetime"]], "Race Conditions": [[733, "race-conditions"], [806, "race-conditions"]], "std::atomic": [[734, "std-atomic"]], "Atomic Instructions (1)": [[734, "atomic-instructions-1"]], "Atomic Instructions (2)": [[734, "atomic-instructions-2"]], "std::mutex And Friends": [[735, "std-mutex-and-friends"]], "std::mutex": [[735, "std-mutex"]], "std::recursive_mutex": [[735, "std-recursive-mutex"]], "std::timed_mutex": [[735, "std-timed-mutex"]], "std::recursive_timed_mutex": [[735, "std-recursive-timed-mutex"]], "Scoped Locking": [[736, "scoped-locking"]], "Explicit Unlocking Considered Dangerous": [[736, "explicit-unlocking-considered-dangerous"]], "RAII - Resource Acquisition Is Initialization": [[736, "raii-resource-acquisition-is-initialization"]], "Simplest: std::lock_guard": [[736, "simplest-std-lock-guard"]], "std::condition_variable (Live Hacking Multithreaded Queue)": [[737, "std-condition-variable-live-hacking-multithreaded-queue"]], "Overview: Operations": [[737, "overview-operations"]], "Communication, Polling: Thread-Safe Queue": [[737, "communication-polling-thread-safe-queue"]], "Anti-Polling: Thread-Safe Queue, And POSIX Condition Variables": [[737, "anti-polling-thread-safe-queue-and-posix-condition-variables"]], "Discussion: Signalling And Waiting, Predicates: Separation Of Concerns": [[737, "discussion-signalling-and-waiting-predicates-separation-of-concerns"]], "Thread-Safe Queue, And C++ Condition Variables": [[737, "thread-safe-queue-and-c-condition-variables"]], "std::promise and std::future (And Some std::chrono) (Some Live Hacking)": [[739, "std-promise-and-std-future-and-some-std-chrono-some-live-hacking"]], "Overview: std::promise": [[739, "overview-std-promise"]], "Overview: std::future": [[739, "overview-std-future"]], "Utterly Wrong: Waiting For Something To Become Ready": [[739, "utterly-wrong-waiting-for-something-to-become-ready"]], "Sideways: std::chrono, And Literals": [[739, "sideways-std-chrono-and-literals"]], "Minimal Fix: Use std::mutex": [[739, "minimal-fix-use-std-mutex"]], "Anti-Clumsiness: Scoped Locking": [[739, "anti-clumsiness-scoped-locking"]], "Pro-Readability: Encapsulate": [[739, "pro-readability-encapsulate"]], "Atomics On Structures?": [[739, "atomics-on-structures"]], "Anti-Polling: Semaphore": [[739, "anti-polling-semaphore"]], "Getting To The Point: std::promise And std::future": [[739, "getting-to-the-point-std-promise-and-std-future"]], "And Exceptions?": [[739, "and-exceptions"]], "std::chrono": [[740, "std-chrono"], [740, "id1"]], "Clock Domains": [[740, "clock-domains"]], "Measuring Time (1)": [[740, "measuring-time-1"]], "Measuring Time (2)": [[740, "measuring-time-2"]], "Sleeping, and Literals": [[740, "sleeping-and-literals"]], "New-Style Union: std::variant": [[741, "new-style-union-std-variant"]], "Problems With C Unions, And C++ Types": [[741, "problems-with-c-unions-and-c-types"]], "Instantiation, Default Initialization, Member Access": [[741, "instantiation-default-initialization-member-access"]], "Non-Default Initialization": [[741, "non-default-initialization"]], "Accessing Non-Current Member: std::bad_variant_access": [[741, "accessing-non-current-member-std-bad-variant-access"]], "Non-Throwing Accessor: std::get_if<>": [[741, "non-throwing-accessor-std-get-if"]], "And Non-Fundamental Types?": [[741, "and-non-fundamental-types"]], "CRTP": [[743, "crtp"], [748, "crtp"]], "std::vector<>: Allocators (Very Incomplete)": [[744, "std-vector-allocators-very-incomplete"]], "Classic Virtual": [[745, "classic-virtual"]], "Sensor Definitions": [[745, "sensor-definitions"], [747, "sensor-definitions"], [749, "sensor-definitions"], [751, "sensor-definitions"]], "Virtual Access": [[745, "virtual-access"], [747, "virtual-access"], [749, "virtual-access"], [750, "virtual-access"], [751, "virtual-access"], [752, "virtual-access"]], "Average Across Many": [[745, "average-across-many"], [747, "average-across-many"], [749, "average-across-many"], [751, "average-across-many"]], "Embedded Problems? Code Bloat? Type Erasure? Solutions?": [[746, "embedded-problems-code-bloat-type-erasure-solutions"]], "Type Erasure (Was: Eliminating virtual)": [[746, "type-erasure-was-eliminating-virtual"]], "Non-Virtual, But Related": [[747, "non-virtual-but-related"]], "Type Erasure (Static vs. Dynamic Polymorphism), CRTP": [[748, "type-erasure-static-vs-dynamic-polymorphism-crtp"]], "Unrelated (Duck-Typed)": [[749, "unrelated-duck-typed"]], "std::variant (Automatic Virtual Dispatch Using Template Method)": [[750, "std-variant-automatic-virtual-dispatch-using-template-method"]], "std::variant (Manual Virtual Dispatch, Using if)": [[751, "std-variant-manual-virtual-dispatch-using-if"]], "std::variant (Manual Virtual Dispatch, Using std::visit)": [[752, "std-variant-manual-virtual-dispatch-using-std-visit"]], "Why Replace virtual?": [[753, "why-replace-virtual"]], "Drafts": [[754, "drafts"], [902, "drafts"]], "Exercise: Bag Of Items, By Copy": [[755, "exercise-bag-of-items-by-copy"]], "Step 1: Insert, Find": [[755, "step-1-insert-find"]], "Step 2: Remove": [[755, "step-2-remove"]], "Exercise: Bag Of Items, By Shared Reference": [[756, "exercise-bag-of-items-by-shared-reference"]], "Step 1: Transform into std::shared_ptr": [[756, "step-1-transform-into-std-shared-ptr"]], "Step 2: Accidental Move-Insert?": [[756, "step-2-accidental-move-insert"]], "Step 3: Move-Insert, And std::weak_ptr": [[756, "step-3-move-insert-and-std-weak-ptr"]], "Exercise: Bag Of Items, By Unique Reference": [[757, "exercise-bag-of-items-by-unique-reference"]], "std::filesystem": [[759, "std-filesystem"]], "Paths: Composition, Comparison": [[759, "paths-composition-comparison"]], "Absolute and Relative Paths": [[759, "absolute-and-relative-paths"], [892, "absolute-and-relative-paths"]], "Path Component Access": [[759, "path-component-access"]], "Iterating Over Path Components": [[759, "iterating-over-path-components"]], "Current Working Directory": [[759, "current-working-directory"], [871, "current-working-directory"]], "Directory Creation: std::filesystem::create_directory()": [[759, "directory-creation-std-filesystem-create-directory"]], "Directory Creation: std::filesystem::create_directories()": [[759, "directory-creation-std-filesystem-create-directories"]], "Directory Entry Classification: std::filesystem::is_xxx()": [[759, "directory-entry-classification-std-filesystem-is-xxx"]], "Directory Entries: Basics": [[759, "directory-entries-basics"]], "Directory Entries: std::filesystem::directory_entry": [[759, "directory-entries-std-filesystem-directory-entry"]], "Iterating Over Directory Entries": [[759, "iterating-over-directory-entries"]], "Recursive Directory Iteration": [[759, "recursive-directory-iteration"]], "The New C++ (11-\u2026)": [[760, "the-new-c-11"]], "Generated Topic Graph": [[761, "generated-topic-graph"]], "Modern Character Devices (Screenplay)": [[763, "modern-character-devices-screenplay"]], "Modern Character Devices (Slideshow)": [[764, "modern-character-devices-slideshow"]], "Source": [[764, null], [767, null], [769, null], [772, null], [774, null], [777, null], [786, null], [788, null], [798, null], [800, null], [811, null], [816, null]], "Character Devices: Problems": [[764, "character-devices-problems"]], "Dynamic Device Numbers": [[764, "dynamic-device-numbers"]], "Device Classes": [[764, "device-classes"]], "Devices": [[764, "devices"]], "Modern Character Devices": [[765, "modern-character-devices"]], "File Operations on Character Devices (Screenplay)": [[766, "file-operations-on-character-devices-screenplay"]], "Hooks Necessary": [[766, "hooks-necessary"]], "Implement open(), read(), write()": [[766, "implement-open-read-write"]], "ioctl()": [[766, "ioctl"]], "File Operations on Character Devices (Slideshow)": [[767, "file-operations-on-character-devices-slideshow"]], "File Operations: Interface Definition (\u201cvtable\u201d) (1)": [[767, "file-operations-interface-definition-vtable-1"]], "Available Methods": [[767, "available-methods"]], "open(): Userspace": [[767, "open-userspace"]], "open(): Kernelspace": [[767, "open-kernelspace"]], "ioctl(): Userspace": [[767, "ioctl-userspace"]], "ioctl(): Kernelspace": [[767, "ioctl-kernelspace"]], "ioctl(): Requests": [[767, "ioctl-requests"]], "_IO*() Macros": [[767, "io-macros"]], "_IO*() Macros: Usage": [[767, "io-macros-usage"]], "File Operations on Character Devices": [[768, "file-operations-on-character-devices"]], "Coding: First Functionality (Slideshow)": [[769, "coding-first-functionality-slideshow"]], "Implement Event List": [[769, "implement-event-list"]], "Implement ioctl Request to Add an Event": [[769, "implement-ioctl-request-to-add-an-event"]], "Implement a Userspace Test Program": [[769, "implement-a-userspace-test-program"]], "Coding: First Functionality": [[770, "coding-first-functionality"]], "Character Device Basics (Livehacking Screenplay)": [[771, "character-device-basics-livehacking-screenplay"]], "Major and Minor Numbers": [[771, "major-and-minor-numbers"]], "Character Device": [[771, "character-device"]], "Character Device Basics (Slideshow)": [[772, "character-device-basics-slideshow"]], "Major and Minor Numbers: User\u2019s View": [[772, "major-and-minor-numbers-user-s-view"]], "Major and Minor Numbers: Kernel Space": [[772, "major-and-minor-numbers-kernel-space"]], "History: Hardcoded Device Numbers (1)": [[772, "history-hardcoded-device-numbers-1"]], "History: Hardcoded Device Numbers (2)": [[772, "history-hardcoded-device-numbers-2"]], "Character Device (1)": [[772, "character-device-1"]], "Character Device (2)": [[772, "character-device-2"]], "And User Space?": [[772, "and-user-space"]], "Character Device Basics": [[773, "character-device-basics"]], "Coding: Multiple Devices (Slideshow)": [[774, "coding-multiple-devices-slideshow"]], "Instantiate Multiple Devices": [[774, "instantiate-multiple-devices"]], "Coding: Multiple Devices": [[775, "coding-multiple-devices"]], "Coding: Refactoring (Screenplay)": [[776, "coding-refactoring-screenplay"]], "Build Module From Multiple Files": [[776, "build-module-from-multiple-files"]], "Per-Device Structure": [[776, "per-device-structure"]], "Want My Hair Pretty": [[776, "want-my-hair-pretty"]], "Makefile: -Wswitch-enum": [[776, "makefile-wswitch-enum"]], "Coding: Refactoring (Slideshow)": [[777, "coding-refactoring-slideshow"]], "What\u2019s Bad?": [[777, "what-s-bad"]], "Coding: Refactoring": [[778, "coding-refactoring"]], "DMA (Slideshow)": [[779, "dma-slideshow"]], "Address Types": [[779, "address-types"]], "Physical Memory Allocation": [[779, "physical-memory-allocation"]], "DMA Mappings: Overview": [[779, "dma-mappings-overview"]], "Consistent DMA Mappings": [[779, "consistent-dma-mappings"]], "Streaming Mappings: Direction": [[779, "streaming-mappings-direction"]], "Streaming Mappings: To Virtual Address": [[779, "streaming-mappings-to-virtual-address"]], "Streaming Mappings: To Page": [[779, "streaming-mappings-to-page"]], "Streaming Mappings: Scatterlists (1)": [[779, "streaming-mappings-scatterlists-1"]], "Streaming Mappings: Scatterlists (2)": [[779, "streaming-mappings-scatterlists-2"]], "Streaming Mappings: Syncing": [[779, "streaming-mappings-syncing"]], "DMA": [[780, "dma"]], "Building a Fedora Kernel (Screenplay)": [[781, "building-a-fedora-kernel-screenplay"]], "Why Build the Entire Kernel When I Only Want to Build a Module": [[781, "why-build-the-entire-kernel-when-i-only-want-to-build-a-module"]], "Building from \u201cExploded Git Tree\u201d": [[781, "building-from-exploded-git-tree"]], "Building from the RPM Source": [[781, "building-from-the-rpm-source"]], "Fedora: Building the Kernel": [[782, "fedora-building-the-kernel"]], "Fedora: Building External Kernel Modules (Screenplay)": [[783, "fedora-building-external-kernel-modules-screenplay"]], "Prerequisite: Build Entire Kernel": [[783, "prerequisite-build-entire-kernel"]], "Build Modules": [[783, "build-modules"]], "Install Modules": [[783, "install-modules"]], "Fedora: Building External Kernel Modules": [[784, "fedora-building-external-kernel-modules"]], "Linux Kernel Driver Development": [[785, "linux-kernel-driver-development"], [1164, "linux-kernel-driver-development"]], "Topics and Dependencies": [[785, "topics-and-dependencies"]], "Module Loading, Hello World (Slideshow)": [[786, "module-loading-hello-world-slideshow"]], "Kernel Driver Anatomy": [[786, "kernel-driver-anatomy"]], "Built-In vs. Loadable Module": [[786, "built-in-vs-loadable-module"]], "Minimum Module Source": [[786, "minimum-module-source"]], "Gotchas: init() and exit()": [[786, "gotchas-init-and-exit"]], "Module Build": [[786, "module-build"]], "Minimum Makefile, Building": [[786, "minimum-makefile-building"]], "Modules: Load/Unload Commands": [[786, "modules-load-unload-commands"]], "Modules: Dependency (and other) Databases": [[786, "modules-dependency-and-other-databases"]], "Module Loading, Hello World": [[787, "module-loading-hello-world"]], "Coding: Raspi GPIO Interrupts (Slideshow)": [[788, "coding-raspi-gpio-interrupts-slideshow"]], "Move to Raspberry Pi, Cross Compiling": [[788, "move-to-raspberry-pi-cross-compiling"]], "Cross Compilation": [[788, "cross-compilation"]], "Cross Compilation Sucks": [[788, "cross-compilation-sucks"]], "Short (Legacy) GPIO API Introduction": [[788, "short-legacy-gpio-api-introduction"]], "Implement New Event Type: Interrupt": [[788, "implement-new-event-type-interrupt"]], "New ioctl: MY_ACTIVATE_GPIO": [[788, "new-ioctl-my-activate-gpio"]], "Interlude: _IO*() Macros": [[788, "interlude-io-macros"]], "Request GPIO": [[788, "request-gpio"]], "Request Interrupt": [[788, "request-interrupt"]], "Coding: Raspi GPIO Interrupts": [[789, "coding-raspi-gpio-interrupts"]], "Interrupts (Slideshow)": [[790, "interrupts-slideshow"]], "Interrupt Facts": [[790, "interrupt-facts"]], "Interrupt Service Routine": [[790, "interrupt-service-routine"]], "Requesting (and Releasing) Interrupts (1)": [[790, "requesting-and-releasing-interrupts-1"]], "IO Memory (Slideshow)": [[792, "io-memory-slideshow"]], "I/O Memory": [[792, "i-o-memory"]], "I/O Memory: Reservation": [[792, "i-o-memory-reservation"]], "Making I/O Memory Accessible": [[792, "making-i-o-memory-accessible"]], "Accessing I/O Memory": [[792, "accessing-i-o-memory"]], "IO Memory": [[793, "io-memory"]], "Dynamic Memory: kmalloc() (Slideshow)": [[794, "dynamic-memory-kmalloc-slideshow"]], "Dynamic Memory: kmalloc()": [[794, "dynamic-memory-kmalloc"], [795, "dynamic-memory-kmalloc"]], "Dynamic Memory: Flags": [[794, "dynamic-memory-flags"]], "Doubly Linked Lists (Slideshow)": [[796, "doubly-linked-lists-slideshow"]], "Big Picture": [[796, "big-picture"]], "List Head": [[796, "list-head"]], "Insert a Node": [[796, "insert-a-node"]], "Iteration, and Getting a Node\u2019s Container": [[796, "iteration-and-getting-a-node-s-container"]], "Emptying a List": [[796, "emptying-a-list"]], "Doubly Linked Lists": [[797, "doubly-linked-lists"]], "Coding: Fix Race Condition (Mutex) (Slideshow)": [[798, "coding-fix-race-condition-mutex-slideshow"]], "What Do We Have?": [[798, "what-do-we-have"]], "Consequences of Not Protecting": [[798, "consequences-of-not-protecting"]], "Protect Event List": [[798, "protect-event-list"]], "Protect Device List": [[798, "protect-device-list"]], "Coding: Fix Race Condition (Mutex)": [[799, "coding-fix-race-condition-mutex"]], "Mutex (and RT Mutex) (Slideshow)": [[800, "mutex-and-rt-mutex-slideshow"]], "Locking in the Kernel": [[800, "locking-in-the-kernel"]], "Mutual Exclusion: Mutex": [[800, "mutual-exclusion-mutex"]], "Mutex: Locking (1)": [[800, "mutex-locking-1"]], "Mutex: Locking (2)": [[800, "mutex-locking-2"]], "Mutex: Releasing": [[800, "mutex-releasing"]], "Realtime Mutex": [[800, "realtime-mutex"]], "Mutex (and RT Mutex)": [[801, "mutex-and-rt-mutex"]], "Network Devices (Slideshow)": [[802, "network-devices-slideshow"]], "Module Initialization: Device Allocation": [[802, "module-initialization-device-allocation"]], "Module Initialization: Device Registration": [[802, "module-initialization-device-registration"]], "Device Methods": [[802, "device-methods"]], "Kernel Networking Layer Utilities": [[802, "kernel-networking-layer-utilities"]], "Network Devices": [[803, "network-devices"]], "PCI (Slideshow)": [[804, "pci-slideshow"]], "First and Foremost": [[804, "first-and-foremost"]], "PCI Driver Methods": [[804, "pci-driver-methods"]], "PCI Driver Structure, and the init() Method": [[804, "pci-driver-structure-and-the-init-method"]], "PCI Device Structure, and the probe() Method": [[804, "pci-device-structure-and-the-probe-method"]], "The probe() Method: Boilerplate": [[804, "the-probe-method-boilerplate"]], "The probe() Method: Interrupt": [[804, "the-probe-method-interrupt"]], "The probe() Method: PCI Resources (BARs)": [[804, "the-probe-method-pci-resources-bars"]], "DMA Support Routines": [[804, "dma-support-routines"]], "PCI": [[805, "pci"]], "Process vs.Atomic Context (Slideshow)": [[806, "process-vs-atomic-context-slideshow"]], "Process Context": [[806, "process-context"]], "Atomic Context": [[806, "atomic-context"]], "Atomic vs. Process Context": [[806, "atomic-vs-process-context"]], "\u201cSleep While Atomic\u201d Debugging": [[806, "sleep-while-atomic-debugging"]], "Process vs.Atomic Context": [[807, "process-vs-atomic-context"]], "Rasperry Pi: Kernel Build": [[808, "rasperry-pi-kernel-build"]], "Cross Toolchain on Host": [[808, "cross-toolchain-on-host"]], "Architecture Name - What\u2019s That?": [[808, "architecture-name-what-s-that"]], "Building a Toolchain with Gentoo\u2019s crossdev": [[808, "building-a-toolchain-with-gentoo-s-crossdev"]], "Other Toolchains": [[808, "other-toolchains"]], "Kernel Source": [[808, "kernel-source"]], "Kernel Compilation": [[808, "kernel-compilation"]], "Parameters for the Build": [[808, "parameters-for-the-build"]], "Preparing the Kernel .config File": [[808, "preparing-the-kernel-config-file"]], "Building the Kernel Artifacts": [[808, "building-the-kernel-artifacts"]], "Packaging": [[808, "packaging"], [1061, "packaging"]], "Bootloader Artifacts": [[808, "bootloader-artifacts"]], "Module Tree": [[808, "module-tree"]], "Deployment": [[808, "deployment"]], "Variation": [[808, "variation"]], "Raspberry Pi: Building the Kernel": [[809, "raspberry-pi-building-the-kernel"]], "Todo jjj": [[809, "todo-jjj"]], "Sample Code Maintenance": [[810, "sample-code-maintenance"]], "Coding: Fix Sleep While Atomic (Slideshow)": [[811, "coding-fix-sleep-while-atomic-slideshow"]], "Simple Spinlock Usage: spin_lock()": [[811, "simple-spinlock-usage-spin-lock"]], "Discuss Call Chain, IRQ State": [[811, "discuss-call-chain-irq-state"]], "Enter spin_lock_irqsave(), spin_unlock_irqrestore()": [[811, "enter-spin-lock-irqsave-spin-unlock-irqrestore"]], "Ah, kmalloc()": [[811, "ah-kmalloc"]], "Coding: Fix Sleep While Atomic": [[812, "coding-fix-sleep-while-atomic"]], "Spinlock (vs. Mutex) (Slideshow)": [[813, "spinlock-vs-mutex-slideshow"]], "Mutual Exclusion: Spinlock": [[813, "mutual-exclusion-spinlock"]], "Spinlock Initialization": [[813, "spinlock-initialization"]], "Simple Lock/Unlock": [[813, "simple-lock-unlock"]], "Simple is not Bulletproof: Interrupt State": [[813, "simple-is-not-bulletproof-interrupt-state"]], "Mutual Exclusion: Conclusion": [[813, "mutual-exclusion-conclusion"]], "Spinlock (vs. Mutex)": [[814, "spinlock-vs-mutex"]], "dup(), fork(), and Reference Counting (Stub)": [[815, "dup-fork-and-reference-counting-stub"]], "Coding: Timed Event (Slideshow)": [[816, "coding-timed-event-slideshow"]], "Per-Event Timestamp": [[816, "per-event-timestamp"]], "Discussion: Deferred Events": [[816, "discussion-deferred-events"]], "Add Timer": [[816, "add-timer"]], "Gotcha: Cleanup Running Timer": [[816, "gotcha-cleanup-running-timer"]], "More Gotchas": [[816, "more-gotchas"]], "Coding: Timed Event": [[817, "coding-timed-event"]], "Timer Management (Slideshow)": [[818, "timer-management-slideshow"]], "Original Timer API": [[818, "original-timer-api"]], "jiffies": [[818, "jiffies"]], "\u201cTimer Wheel\u201d Methods": [[818, "timer-wheel-methods"]], "Better Documentation": [[818, "better-documentation"]], "Timer Management": [[819, "timer-management"]], "To Do List": [[820, "to-do-list"]], "Accessing Userspace Memory (Screenplay)": [[821, "accessing-userspace-memory-screenplay"]], "New ioctl: GET_ONE_EVENT": [[821, "new-ioctl-get-one-event"]], "Getting One Event": [[821, "getting-one-event"]], "copy_to_user()": [[821, "copy-to-user"]], "Userspace Test Program": [[821, "userspace-test-program"]], "Accessing Userspace Memory (Slideshow)": [[822, "accessing-userspace-memory-slideshow"]], "Address Spaces": [[822, "address-spaces"]], "Copying To and From Userspace": [[822, "copying-to-and-from-userspace"]], "Accessing Userspace Memory": [[823, "accessing-userspace-memory"]], "Waiting for Something (Screenplay)": [[824, "waiting-for-something-screenplay"]], "read() Not Implemented": [[824, "read-not-implemented"]], "Implementing read() Naively": [[824, "implementing-read-naively"]], "Discussion: What If Nothing\u2019s There?": [[824, "discussion-what-if-nothing-s-there"]], "Implementing O_NONBLOCK": [[824, "implementing-o-nonblock"]], "Waiting for Something (Slideshow)": [[825, "waiting-for-something-slideshow"]], "Waiting for Something": [[825, "waiting-for-something"], [826, "waiting-for-something"]], "Wait Queues: Initializing": [[825, "wait-queues-initializing"]], "Wait Queue: Waiting": [[825, "wait-queue-waiting"]], "Wait Queue: Waking": [[825, "wait-queue-waking"]], "Workqueue (Screenplay)": [[827, "workqueue-screenplay"]], "Add Workqueue": [[827, "add-workqueue"]], "Submit/Defer Work From Atomic Context": [[827, "submit-defer-work-from-atomic-context"]], "Cleanup (Why We Did This, After All)": [[827, "cleanup-why-we-did-this-after-all"]], "Finish": [[827, "finish"]], "Workqueue (Slideshow)": [[828, "workqueue-slideshow"]], "Workqueue: Motivation": [[828, "workqueue-motivation"]], "Creating/Destroying a Workqueue": [[828, "creating-destroying-a-workqueue"]], "What is Work?": [[828, "what-is-work"]], "Submitting Work": [[828, "submitting-work"]], "Workqueue": [[829, "workqueue"]], "Exercises: Archiving And Compression": [[830, "exercises-archiving-and-compression"]], "gzip": [[832, "gzip"]], "Compression Tools: Comparison": [[833, "compression-tools-comparison"]], "tar": [[834, "tar"]], "Creating And Viewing Archives": [[834, "creating-and-viewing-archives"]], "(De)Compression": [[834, "de-compression"]], "Etiquette": [[834, "etiquette"]], "Option Summary": [[834, "option-summary"]], "Being Creative With The Pipe": [[834, "being-creative-with-the-pipe"]], "Exam (ECE/SS2022/G1): Do A Lot With Files And Directories": [[835, "exam-ece-ss2022-g1-do-a-lot-with-files-and-directories"]], "Precondition: Logged-In To Remote/Exam Computer": [[835, "precondition-logged-in-to-remote-exam-computer"], [836, "precondition-logged-in-to-remote-exam-computer"]], "Create Exam Skeleton (5 Points)": [[835, "create-exam-skeleton-5-points"], [836, "create-exam-skeleton-5-points"]], "Create Credentials Files (10 Points)": [[835, "create-credentials-files-10-points"]], "Public Place (10 Points)": [[835, "public-place-10-points"], [836, "public-place-10-points"]], "Private Place (10 Points)": [[835, "private-place-10-points"], [836, "private-place-10-points"]], "Shared File in Public Place (10 Points)": [[835, "shared-file-in-public-place-10-points"], [836, "shared-file-in-public-place-10-points"]], "Make A Backup Of ~/exam-01 (15 Points)": [[835, "make-a-backup-of-exam-01-15-points"], [836, "make-a-backup-of-exam-01-15-points"]], "Exam (ECE/SS2022/G2): Do A Lot With Files And Directories": [[836, "exam-ece-ss2022-g2-do-a-lot-with-files-and-directories"]], "Create Business Cards (10 Points)": [[836, "create-business-cards-10-points"]], "Exercises/Exams: Linux Basics": [[837, "exercises-exams-linux-basics"]], "Linux Basics": [[838, "linux-basics"]], "Everything Is A File (Live Demo)": [[839, "everything-is-a-file-live-demo"]], "Simple is beautiful": [[839, "simple-is-beautiful"]], "Ok: a File is a File": [[839, "ok-a-file-is-a-file"]], "Is a Serial Interface (UART) a File?": [[839, "is-a-serial-interface-uart-a-file"]], "Pseudo Terminals": [[839, "pseudo-terminals"]], "Disks and Partitions": [[839, "disks-and-partitions"]], "/proc and /sys": [[839, "proc-and-sys"]], "Pseudo Devices": [[839, "pseudo-devices"]], "Environment (Variables)": [[840, "environment-variables"]], "Shell: Environment Variables, And Process Creation": [[840, "shell-environment-variables-and-process-creation"]], "Popular Environment Variables: HOME, SHELL, USER": [[840, "popular-environment-variables-home-shell-user"]], "Popular Environment Variables: PATH": [[840, "popular-environment-variables-path"]], "FH/Moodle Quiz: Linux Basics": [[841, "fh-moodle-quiz-linux-basics"]], "User Space, Kernel Space": [[841, "user-space-kernel-space"]], "Processes, Scheduling, and Virtual Memory": [[841, "processes-scheduling-and-virtual-memory"]], "Login? What Is That?": [[843, "login-what-is-that"]], "Authentication: Prompting The User For Login Data": [[843, "authentication-prompting-the-user-for-login-data"]], "Authentication: Verification Of Login Data": [[843, "authentication-verification-of-login-data"]], "And After Successful Authentication?": [[843, "and-after-successful-authentication"]], "Impersonation": [[843, "impersonation"]], "Logged In, Finally": [[843, "logged-in-finally"]], "User Space, Kernel Space?": [[844, "user-space-kernel-space"]], "User Space: Abstractions": [[844, "user-space-abstractions"]], "Kernel: Where The Heavy Stuff Is": [[844, "kernel-where-the-heavy-stuff-is"]], "Booting a Computer": [[844, "booting-a-computer"]], "Processes, Scheduling, Address Spaces": [[845, "processes-scheduling-address-spaces"]], "Problem: Owning the CPU?": [[845, "problem-owning-the-cpu"]], "Solution: Scheduling (Time Slices)": [[845, "solution-scheduling-time-slices"]], "Problem: Owning all Memory?": [[845, "problem-owning-all-memory"]], "Solution: Virtual Memory": [[845, "solution-virtual-memory"]], "Process Attributes: User ID (UID)": [[845, "process-attributes-user-id-uid"]], "Process Attributes: Groups": [[845, "process-attributes-groups"]], "Processes: More Attributes": [[845, "processes-more-attributes"]], "Process Hierarchy (Parent, Child Process)": [[846, "process-hierarchy-parent-child-process"]], "More Process Rules": [[846, "more-process-rules"]], "Typical Process Tree": [[846, "typical-process-tree"]], "Services, init": [[846, "services-init"]], "Windows Subsystem for Linux (WSL)": [[847, "windows-subsystem-for-linux-wsl"]], "Disclaimer!": [[847, null]], "More Links": [[847, "more-links"]], "My $0.02": [[847, "my-0-02"]], "WSL, Finally": [[847, "wsl-finally"]], "Exercises: IO-Redirection, Pipes": [[848, "exercises-io-redirection-pipes"]], "I/O Redirection": [[850, "i-o-redirection"]], "Standard I/O Streams": [[850, "standard-i-o-streams"]], "I/O Redirection Operators": [[850, "i-o-redirection-operators"]], "Example: Standard Output Redirection": [[850, "example-standard-output-redirection"]], "Example: Standard Input Redirection": [[850, "example-standard-input-redirection"]], "Example: Standard Error Redirection": [[850, "example-standard-error-redirection"]], "Example: Everything Redirection": [[850, "example-everything-redirection"]], "I/O Redirection: Swap stdout And stderr": [[851, "i-o-redirection-swap-stdout-and-stderr"]], "Basic Pipe Usage": [[851, "basic-pipe-usage"]], "Basic Pipe Usage: What The Shell Does": [[851, "basic-pipe-usage-what-the-shell-does"]], "And How Do I Count Lines On stderr?": [[851, "and-how-do-i-count-lines-on-stderr"]], "More Tricks": [[851, "more-tricks"]], "Pipes": [[852, "pipes"]], "Why Pipes?": [[852, "why-pipes"]], "Pipe Facts": [[852, "pipe-facts"]], "Pipe Examples": [[852, "pipe-examples"]], "More Pipe Examples": [[852, "more-pipe-examples"]], "Named Pipes": [[852, "named-pipes"]], "Permissions: Mode, User and Group Ownership": [[853, "permissions-mode-user-and-group-ownership"]], "Owner and Permissions": [[853, "owner-and-permissions"]], "A Simple Example": [[853, "a-simple-example"]], "Teacher\u2019s note: create that constellation (as root)": [[853, null]], "Permission Check: User": [[853, "permission-check-user"]], "Permission Check: Group": [[853, "permission-check-group"]], "Permission Check: Others": [[853, "permission-check-others"]], "Programs: Execute Permissions": [[853, "programs-execute-permissions"]], "Directory Permissions": [[853, "directory-permissions"]], "Permission Bits, octal": [[853, "permission-bits-octal"]], "Shell Commands: Tuning Permissions": [[853, "shell-commands-tuning-permissions"]], "Shell Commands: Changing User/Group Ownership": [[853, "shell-commands-changing-user-group-ownership"]], "Exercise: Determine Your User Credentials": [[854, "exercise-determine-your-user-credentials"]], "FH/Moodle Quiz: Permissions": [[855, "fh-moodle-quiz-permissions"], [856, "fh-moodle-quiz-permissions"]], "Exercises: File System Permissions": [[857, "exercises-file-system-permissions"]], "Exercise: Create Private Directory": [[858, "exercise-create-private-directory"]], "Question: Private Directory": [[859, "question-private-directory"]], "Exercise: Create Public Directory": [[860, "exercise-create-public-directory"]], "Question: Public Directory": [[861, "question-public-directory"]], "Exercise: Create Group-Shared File": [[862, "exercise-create-group-shared-file"]], "SetUID Programs: passwd, sudo, \u2026": [[864, "setuid-programs-passwd-sudo"]], "Problem: Change My Password": [[864, "problem-change-my-password"]], "Solution: Set-UID Bit": [[864, "solution-set-uid-bit"]], "Set-UID: How Does It Work?": [[864, "set-uid-how-does-it-work"]], "Command: chmod": [[864, "command-chmod"]], "Set-UID Is Not A Toy!": [[864, "set-uid-is-not-a-toy"]], "SetUID: Live Demo": [[865, "setuid-live-demo"]], "Real and Effective User ID": [[865, "real-and-effective-user-id"]], "Sample Program": [[865, "sample-program"]], "Set-UID jfasch?": [[865, "set-uid-jfasch"]], "Set-UID root? Danger!": [[865, "set-uid-root-danger"]], "Ugly Hack: Sticky Bit": [[866, "ugly-hack-sticky-bit"]], "Sticky Bit": [[866, "sticky-bit"]], "Default Permissions: umask": [[867, "default-permissions-umask"]], "Default Permissions - umask": [[867, "id1"]], "umask: How Does it Work?": [[867, "umask-how-does-it-work"]], "Shape (1)": [[868, "shape-1"]], "Shape (2)": [[868, "shape-2"]], "Options": [[868, "options"], [897, "options"]], "Help and Manual": [[868, "help-and-manual"]], "Man Pages: Navigation": [[868, "man-pages-navigation"]], "Commandline Editing: Moving, Deleting": [[868, "commandline-editing-moving-deleting"]], "Commandline Editing: Entire Words": [[868, "commandline-editing-entire-words"]], "Commandline Editing: Entire Lines": [[868, "commandline-editing-entire-lines"]], "The Tabulator Key: Command Completion": [[868, "the-tabulator-key-command-completion"]], "The Tabulator Key: Filename Completion": [[868, "the-tabulator-key-filename-completion"]], "Shell Configuration File: ~/.bashrc": [[869, "shell-configuration-file-bashrc"]], "What\u2019s Volatile?": [[869, "what-s-volatile"]], "Copying: cp": [[870, "copying-cp"]], "Option Overview": [[870, "option-overview"]], "Creating backup copy of, say, .bashrc in the home directory": [[870, "creating-backup-copy-of-say-bashrc-in-the-home-directory"]], "Similar: copy a file into a different directory, under a different name": [[870, "similar-copy-a-file-into-a-different-directory-under-a-different-name"]], "Similar: copy a file into a different directory, keeping its name": [[870, "similar-copy-a-file-into-a-different-directory-keeping-its-name"]], "Copy multiple files into a directory": [[870, "copy-multiple-files-into-a-directory"]], "Copying a directory, together with its contents \u27f6 recursive copy": [[870, "copying-a-directory-together-with-its-contents-longrightarrow-recursive-copy"]], "Current Working Directory: pwd": [[871, "current-working-directory-pwd"]], "Changing The Current Working Directory: cd": [[871, "changing-the-current-working-directory-cd"]], "Exercise: Copy Directory Tree": [[872, "exercise-copy-directory-tree"]], "Exercise: Copy Files": [[873, "exercise-copy-files"]], "Exercise: Create Files (I/O Redirection)": [[874, "exercise-create-files-i-o-redirection"]], "Exercise: Move Files": [[875, "exercise-move-files"]], "Exercises: Create/Copy/Move/Remove": [[876, "exercises-create-copy-move-remove"]], "Exercise: mkdir": [[877, "exercise-mkdir"]], "Exercise: Funny Stuff": [[878, "exercise-funny-stuff"]], "Exercise: Remove Directory Tree": [[879, "exercise-remove-directory-tree"]], "Exercise: Verify, Repeat": [[880, "exercise-verify-repeat"]], "FH/Moodle Quiz: Shell": [[881, "fh-moodle-quiz-shell"]], "The Shell - Exercises": [[882, "the-shell-exercises"]], "Exercise: File Types in /dev": [[883, "exercise-file-types-in-dev"]], "Exercise: Size of /etc/passwd": [[884, "exercise-size-of-etc-passwd"]], "Exercises: The ls Command": [[885, "exercises-the-ls-command"]], "Exercise: Permissions of Home Directory": [[886, "exercise-permissions-of-home-directory"]], "Creating And Removing Files and Directories": [[887, "creating-and-removing-files-and-directories"]], "Creating a Directory: mkdir": [[887, "creating-a-directory-mkdir"]], "Creating a File: I/O redirection": [[887, "creating-a-file-i-o-redirection"]], "Creating an Empty File: touch": [[887, "creating-an-empty-file-touch"]], "Removing A File: rm": [[887, "removing-a-file-rm"]], "Removing A Directory: rmdir, rm -r": [[887, "removing-a-directory-rmdir-rm-r"]], "Symbolic Links, Hard Links": [[889, "symbolic-links-hard-links"]], "Directory Listings: The ls Command": [[890, "directory-listings-the-ls-command"]], "Many Options": [[890, "many-options"]], "Hidden Files": [[890, "hidden-files"]], "File Types": [[890, "file-types"]], "Moving and Renaming: mv": [[891, "moving-and-renaming-mv"]], "Renaming A File (or Directory)": [[891, "renaming-a-file-or-directory"]], "Moving a File to Somewhere Else": [[891, "moving-a-file-to-somewhere-else"]], "Moving a Directory to Somewhere Else": [[891, "moving-a-directory-to-somewhere-else"]], "Path Separator": [[892, "path-separator"]], "Relative Paths": [[892, "relative-paths"]], "Absolute Paths": [[892, "absolute-paths"]], "Special Paths": [[892, "special-paths"]], "cat": [[893, "cat"], [893, "id1"]], "cut": [[894, "cut"], [894, "id1"]], "Exercises: Inspecting Text Files": [[895, "exercises-inspecting-text-files"]], "find": [[896, "find"]], "Directories durchsuchen mit find": [[896, "directories-durchsuchen-mit-find"]], "find: Optionen": [[896, "find-optionen"]], "find: Beispiele": [[896, "find-beispiele"]], "find: Verkn\u00fcpfungen": [[896, "find-verknupfungen"]], "find: Verkn\u00fcpfungen: Beispiele": [[896, "find-verknupfungen-beispiele"]], "grep": [[897, "grep"]], "Searching With grep": [[897, "searching-with-grep"]], "More About Regular Expressions": [[897, "more-about-regular-expressions"]], "head And tail": [[899, "head-and-tail"]], "head": [[899, "head"]], "tail": [[899, "tail"]], "head And tail In The Pipe": [[899, "head-and-tail-in-the-pipe"]], "less": [[900, "less"]], "Paging Files Using less": [[900, "paging-files-using-less"]], "Help Screen (Enter With h)": [[900, "help-screen-enter-with-h"]], "stdin, stdout, And The Pipe": [[901, "stdin-stdout-and-the-pipe"]], "stdin, stdout: Examples": [[901, "stdin-stdout-examples"]], "Pipe: Examples": [[901, "pipe-examples"]], "Basics Text Tools": [[901, "basics-text-tools"]], "Yocto": [[903, "yocto"]], "Controlling a Brushless Motor With Raspberry Pi": [[905, "controlling-a-brushless-motor-with-raspberry-pi"]], "Topic": [[905, null]], "Electronic Speed Controller (ESC)": [[905, "electronic-speed-controller-esc"]], "Select Running Mode: \u201cFwd/Rev\u201d": [[905, "select-running-mode-fwd-rev"]], "The \u201cCommand Protocol\u201d, and Calibration": [[905, "the-command-protocol-and-calibration"]], "Driving the Motor": [[905, "driving-the-motor"]], "CAN/Linux Basics": [[906, "can-linux-basics"]], "Why This Talk?": [[906, "why-this-talk"]], "Network Programming: Datagram Exchange": [[906, "network-programming-datagram-exchange"]], "And CAN?": [[906, "and-can"]], "One CAN Network Packet \u2026": [[906, "one-can-network-packet"]], "CAN Interfaces": [[907, "can-interfaces"]], "CAN-Interface: Configuration": [[907, "can-interface-configuration"]], "CAN Utils": [[907, "can-utils"]], "CAN Utils: Usage (1)": [[907, "can-utils-usage-1"]], "CAN Utils: Usage (2)": [[907, "can-utils-usage-2"]], "vcan: Virtual CAN-Bus": [[907, "vcan-virtual-can-bus"]], "Programming": [[908, "programming"]], "CAN Programming": [[908, "can-programming"]], "CAN in C - Socket, Interface Index": [[908, "can-in-c-socket-interface-index"]], "CAN in Python - Socket, Interface Index": [[908, "can-in-python-socket-interface-index"]], "CAN in C - Frames (1)": [[908, "can-in-c-frames-1"]], "CAN in C - Frames (2)": [[908, "can-in-c-frames-2"]], "CAN in Python - Frames": [[908, "can-in-python-frames"]], "Hardware, Kernel": [[909, "hardware-kernel"]], "MCP2515: Schematic": [[909, "mcp2515-schematic"]], "MCP2515: Soldering": [[909, "mcp2515-soldering"]], "MCP2515: SPI": [[909, "mcp2515-spi"]], "MCP2515: Raspberry": [[909, "mcp2515-raspberry"]], "CAN Bus With Linux And Python": [[910, "can-bus-with-linux-and-python"]], "Linux Hardware Interfaces": [[911, "linux-hardware-interfaces"]], "Linux and I2C (using LM73 Temperature Sensor as Slave)": [[912, "linux-and-i2c-using-lm73-temperature-sensor-as-slave"]], "Configuring I2C Master": [[912, "configuring-i2c-master"]], "Enable I2C, Load BCM2835 Platform Driver": [[912, "enable-i2c-load-bcm2835-platform-driver"]], "Raspberry Pi GPIO header pinout": [[912, null]], "Enable Userspace I2C": [[912, "enable-userspace-i2c"]], "Slave Device: LM73": [[912, "slave-device-lm73"]], "Datasheet etc.": [[912, null]], "Optional: Address Selection": [[912, "optional-address-selection"]], "Connecting LM73 to Raspberry Pi": [[912, "connecting-lm73-to-raspberry-pi"]], "i2c-tools/i2cdetect: Diagnostics, Detecting Devices": [[912, "i2c-tools-i2cdetect-diagnostics-detecting-devices"]], "Using the Device: Talking I2C from Userspace": [[912, "using-the-device-talking-i2c-from-userspace"]], "Using the Device: hwmon - Hardware Monitoring": [[912, "using-the-device-hwmon-hardware-monitoring"]], "Building the Kernel, Enabling LM73": [[912, "building-the-kernel-enabling-lm73"]], "Loading the Driver": [[912, "loading-the-driver"]], "Hardware Monitoring (hwmon) Devices": [[912, "hardware-monitoring-hwmon-devices"]], "PWM Userspace Interface (using PCA9685)": [[913, "pwm-userspace-interface-using-pca9685"]], "Pulse Width Modulation (PWM)": [[913, "pulse-width-modulation-pwm"]], "Why An External PWM Controller?": [[913, "why-an-external-pwm-controller"]], "Wiring, Setup, and Testing": [[913, "wiring-setup-and-testing"]], "Talk to Chip Using the sysfs Interface": [[913, "talk-to-chip-using-the-sysfs-interface"]], "Linux and OneWire (using DS18B20 Temperature Sensor as Slave)": [[914, "linux-and-onewire-using-ds18b20-temperature-sensor-as-slave"]], "Master Device, Alterative 1: w1-gpio - OneWire Master in Software": [[914, "master-device-alterative-1-w1-gpio-onewire-master-in-software"]], "Wiring: Attach OneWire Device to GPIO Pin": [[914, "wiring-attach-onewire-device-to-gpio-pin"]], "Master Device, Alterative 2: DS2482 - I2C OneWire Master in Hardware": [[914, "master-device-alterative-2-ds2482-i2c-onewire-master-in-hardware"]], "DS2482-800: 8-Channel 1-Wire Master": [[914, null]], "Wiring: Attach DS2482-800 via I2C": [[914, "wiring-attach-ds2482-800-via-i2c"]], "Configure Software": [[914, "configure-software"]], "Enable I2C, and Check": [[914, "enable-i2c-and-check"]], "Verify That Our Device Is There": [[914, "verify-that-our-device-is-there"]], "Announce (\u201cHotplug\u201d) DS2482 to Linux": [[914, "announce-hotplug-ds2482-to-linux"]], "Wiring: Attach OneWire Device to DS2482-800": [[914, "wiring-attach-onewire-device-to-ds2482-800"]], "Over-Engineering? Beauty?": [[914, "over-engineering-beauty"]], "Hardware Bringup": [[914, "hardware-bringup"]], "Device Usage": [[914, "device-usage"]], "Slave Device: DS18B20 Temperature Sensor": [[914, "slave-device-ds18b20-temperature-sensor"]], "Using the Device": [[914, "using-the-device"]], "As a Generic OneWire Device": [[914, "as-a-generic-onewire-device"]], "As a Hardware Monitoring (hwmon) Device": [[914, "as-a-hardware-monitoring-hwmon-device"]], "lm-sensors": [[914, "lm-sensors"]], "OneWire Caveats": [[914, "onewire-caveats"]], "Bus Topology": [[914, "bus-topology"]], "Error Symptoms": [[914, "error-symptoms"]], "SSH: Basics": [[915, "ssh-basics"]], "Login": [[915, "login"]], "Exit Status, stdin, stdout: Scripting": [[915, "exit-status-stdin-stdout-scripting"]], "Exercise: Copy a File To Remote Machine, And Verify": [[916, "exercise-copy-a-file-to-remote-machine-and-verify"]], "Exercise: Copy a Tree To Remote Machine (And Adjust Permissions)": [[917, "exercise-copy-a-tree-to-remote-machine-and-adjust-permissions"]], "Exercises: SSH": [[918, "exercises-ssh"]], "Exercise: Create SSH Key Pair": [[919, "exercise-create-ssh-key-pair"]], "SSH: Public Key Authentication": [[921, "ssh-public-key-authentication"]], "Local Setup, Key Generation": [[921, "local-setup-key-generation"]], "Key Pair?": [[921, "key-pair"]], "Remote Setup (Wearing The Remote Admin\u2019s Hat)": [[921, "remote-setup-wearing-the-remote-admin-s-hat"]], "SSH: Links": [[922, "ssh-links"]], "SSH: Port Forwarding": [[923, "ssh-port-forwarding"]], "Port Forwarding - The Problem (1)": [[923, "port-forwarding-the-problem-1"]], "Port Forwarding - The Problem (2)": [[923, "port-forwarding-the-problem-2"]], "Port Forwarding - The Solution (1)": [[923, "port-forwarding-the-solution-1"]], "Port Forwarding - The Solution (2)": [[923, "port-forwarding-the-solution-2"]], "Port Forwarding - The Commandline": [[923, "port-forwarding-the-commandline"]], "SSH: Secure Copy (scp)": [[924, "ssh-secure-copy-scp"]], "What Is That?": [[924, "what-is-that"]], "Copy Single File From Local To Remote": [[924, "copy-single-file-from-local-to-remote"]], "Copy Single File from Remote To Local": [[924, "copy-single-file-from-remote-to-local"]], "Copy An Entire Directory Tree (-r)": [[924, "copy-an-entire-directory-tree-r"]], "Copy Multiple File From Here To There": [[924, "copy-multiple-file-from-here-to-there"]], "Copy From One Remote To A Different Remote": [[924, "copy-from-one-remote-to-a-different-remote"]], "More Options": [[924, "more-options"]], "SSH File System (sshfs)": [[925, "ssh-file-system-sshfs"]], "What Is It?": [[925, "what-is-it"]], "Why Is It?": [[925, "why-is-it"]], "Example Situation: The Raspi": [[925, "example-situation-the-raspi"]], "Mounting Remote  $HOME/logdata": [[925, "mounting-remote-home-logdata"]], "Unmounting: fusermount -u, or Simply umount": [[925, "unmounting-fusermount-u-or-simply-umount"]], "User ID Mismatch: Problem": [[925, "user-id-mismatch-problem"]], "User ID Mismatch: Solution (User Mapping)": [[925, "user-id-mismatch-solution-user-mapping"]], "The errno Variable": [[926, "the-errno-variable"]], "errno Is A Global Variable": [[926, "errno-is-a-global-variable"]], "Helper Functions": [[926, "helper-functions"]], "Linux Systems Programming: Basics": [[927, "linux-systems-programming-basics"]], "System Calls vs. Library Functions": [[928, "system-calls-vs-library-functions"]], "System Calls": [[928, "system-calls"]], "System Calls And The C-Library": [[928, "system-calls-and-the-c-library"]], "Library Function Or System Call?": [[928, "library-function-or-system-call"]], "Manual Pages": [[928, "manual-pages"]], "Blocking I/O: What is That? (\u201cEverything is a file\u201d)": [[929, "blocking-i-o-what-is-that-everything-is-a-file"]], "Examples/Live Demos": [[929, null]], "Solution: This Is What An Operating System Is There For": [[929, "solution-this-is-what-an-operating-system-is-there-for"]], "Blocking I/O (On A File): What is That?": [[930, "blocking-i-o-on-a-file-what-is-that"]], "See Also": [[930, null], [931, null], [932, null], [1113, "see-also"]], "Abstractions": [[930, "abstractions"], [931, "abstractions"], [932, "abstractions"]], "Simplicity": [[930, "simplicity"], [931, "simplicity"], [932, "simplicity"]], "Build, Run, Look": [[930, "build-run-look"], [931, "build-run-look"], [932, "build-run-look"]], "Watch: Run Under strace Supervision": [[930, "watch-run-under-strace-supervision"]], "Blocking I/O: On A Network Socket": [[931, "blocking-i-o-on-a-network-socket"]], "Opening a Network Connection": [[931, "opening-a-network-connection"]], "Blocking I/O: On A Timer? WTF?": [[932, "blocking-i-o-on-a-timer-wtf"]], "Setup A Timer": [[932, "setup-a-timer"]], "Blocking I/O: What Is That?": [[933, "blocking-i-o-what-is-that"]], "File I/O: Basics": [[934, "file-i-o-basics"]], "File Descriptors": [[934, "file-descriptors"]], "Standard Filedescriptors": [[934, "standard-filedescriptors"]], "File I/O: System Calls": [[934, "file-i-o-system-calls"]], "open()": [[934, "open"]], "open() Flags": [[934, "open-flags"]], "read()": [[934, "read"]], "write()": [[934, "write"]], "File Offset: lseek()": [[934, "file-offset-lseek"]], "The Rest: ioctl()": [[934, "the-rest-ioctl"]], "Exercise: Copy A File": [[935, "exercise-copy-a-file"]], "Sunny Case: Source File Exists, Destination Does Not Exist": [[935, "sunny-case-source-file-exists-destination-does-not-exist"]], "Error: Wrong Number Of Arguments Specified": [[935, "error-wrong-number-of-arguments-specified"]], "Error: Source File Does Not Exist": [[935, "error-source-file-does-not-exist"]], "Error: Destination File Exists": [[935, "error-destination-file-exists"]], "Error: Destination Directory Not Writable": [[935, "error-destination-directory-not-writable"]], "Exercise: Create File With Hole": [[936, "exercise-create-file-with-hole"]], "Duplicating (Whats Going On?)": [[937, "duplicating-whats-going-on"]], "File Descriptors, Open File, I-Node": [[937, "file-descriptors-open-file-i-node"]], "File Descriptors and Inheritance": [[937, "file-descriptors-and-inheritance"]], "Duplicating File Descriptors": [[937, "duplicating-file-descriptors"]], "Example: Shell Stdout-Redirection (1)": [[937, "example-shell-stdout-redirection-1"]], "Example: Shell Stdout-Redirection (2)": [[937, "example-shell-stdout-redirection-2"]], "Example: Shell Stdout-Redirection (3)": [[937, "example-shell-stdout-redirection-3"]], "O_CREAT: Creating A File": [[938, "o-creat-creating-a-file"]], "Creating A File If It Does Not Exist (Bogus Version)": [[938, "creating-a-file-if-it-does-not-exist-bogus-version"]], "Bogus O_CREAT Usage: Mode Parameter Missing": [[938, "bogus-o-creat-usage-mode-parameter-missing"]], "Creating A File If It Does Not Exist": [[938, "creating-a-file-if-it-does-not-exist"]], "O_EXCL: Creating A File, But Failing If It Already Exists": [[939, "o-excl-creating-a-file-but-failing-if-it-already-exists"]], "Is \u201cCreate or Open\u201d Always Wanted?": [[939, "is-create-or-open-always-wanted"]], "Sunny Case: File Does Not Exist": [[939, "sunny-case-file-does-not-exist"]], "Error: File Exists": [[939, "error-file-exists"]], "O_RDONLY: Reading a File": [[940, "o-rdonly-reading-a-file"]], "Me and /etc/passwd": [[940, "me-and-etc-passwd"]], "Code: Reading A File": [[940, "code-reading-a-file"]], "Sunny Case: Reading /etc/passwd": [[940, "sunny-case-reading-etc-passwd"]], "Error: File Not Readable": [[940, "error-file-not-readable"]], "Error: File Not Even There": [[940, "error-file-not-even-there"]], "O_WRONLY: Writing A File (Which Must Exist)": [[941, "o-wronly-writing-a-file-which-must-exist"]], "Writing (And Not Creating) A File": [[941, "writing-and-not-creating-a-file"]], "Error: File Not Writeable": [[941, "error-file-not-writeable"]], "Error: File Not Even There \u27f6 Not Implicitly Created": [[941, "error-file-not-even-there-longrightarrow-not-implicitly-created"]], "Sunny Case: File Exists, And Is Writeable": [[941, "sunny-case-file-exists-and-is-writeable"]], "Exercise: Read Temperature From Onewire Sensor": [[942, "exercise-read-temperature-from-onewire-sensor"]], "Onewire Basics": [[942, "onewire-basics"]], "Program": [[942, "program"], [1094, "program"]], "Test On The Target Machine": [[942, "test-on-the-target-machine"]], "I/O without Offset Manipulation": [[944, "i-o-without-offset-manipulation"]], "Scatter/Gather I/O": [[944, "scatter-gather-i-o"]], "Scatter/Gather I/O, without Offset Manipulation": [[944, "scatter-gather-i-o-without-offset-manipulation"]], "Truncating Files": [[944, "truncating-files"]], "File Descriptors - Allocation": [[944, "file-descriptors-allocation"]], "Linux Systems Programming": [[945, "linux-systems-programming"], [1174, "linux-systems-programming"]], "Get Value Of GPIO": [[946, "get-value-of-gpio"]], "Retrieving Value Manually, On The Commandline": [[946, "retrieving-value-manually-on-the-commandline"]], "Shell Script": [[946, "shell-script"]], "C Program": [[946, "c-program"]], "Introductory Live Hacking, Hardware-Wise (sysfs GPIO)": [[947, "introductory-live-hacking-hardware-wise-sysfs-gpio"]], "Intro: sysfs GPIO": [[948, "intro-sysfs-gpio"]], "sysfs?": [[948, "sysfs"]], "General Purpose IO (GPIO)": [[948, "general-purpose-io-gpio"]], "Requesting A GPIO Pin": [[948, "requesting-a-gpio-pin"]], "GPIO Attributes As Files": [[948, "gpio-attributes-as-files"]], "Interrupts In Userspace": [[949, "interrupts-in-userspace"]], "Manual Configuration": [[949, "manual-configuration"]], "C Program: Configuration, Event Loop": [[949, "c-program-configuration-event-loop"]], "Why Threads?": [[950, "why-threads"]], "Typical Uses": [[950, "typical-uses"]], "Legal (1)": [[950, "legal-1"]], "Legal (2)": [[950, "legal-2"]], "POSIX Thread API": [[950, "posix-thread-api"]], "Thread Life Cycle": [[951, "thread-life-cycle"], [951, "id1"]], "Thread Creation": [[951, "thread-creation"]], "Thread Termination (1)": [[951, "thread-termination-1"]], "Thread Termination (2)": [[951, "thread-termination-2"]], "Exit Status, pthread_join()": [[951, "exit-status-pthread-join"]], "Detached Threads": [[951, "detached-threads"]], "Thread ID": [[951, "thread-id"]], "Scheduled Entities (1)": [[951, "scheduled-entities-1"]], "Scheduled Entities (2)": [[951, "scheduled-entities-2"]], "Thread Creation, Race Condition": [[952, "thread-creation-race-condition"]], "Synchronization": [[953, "synchronization"]], "Race Conditions (1)": [[953, "race-conditions-1"]], "Race Conditions (2)": [[953, "race-conditions-2"]], "Mutex (1)": [[953, "mutex-1"]], "Mutex (2)": [[953, "mutex-2"]], "Mutex (3)": [[953, "mutex-3"]], "Mutex Types": [[953, "mutex-types"]], "Mutex: Solve Load/Modify/Store Conflict": [[954, "mutex-solve-load-modify-store-conflict"]], "Communication: Condition Variable": [[955, "communication-condition-variable"]], "Condition Variable (1)": [[955, "condition-variable-1"]], "Condition Variable (2)": [[955, "condition-variable-2"]], "Condition Variable: wait()": [[955, "condition-variable-wait"]], "Condition Variable: signal()": [[955, "condition-variable-signal"]], "Example: WIN32 Auto Reset Event (1)": [[955, "example-win32-auto-reset-event-1"]], "Example: WIN32 Auto Reset Event (2)": [[955, "example-win32-auto-reset-event-2"]], "Condition Variable: Checking the Predicate": [[955, "condition-variable-checking-the-predicate"]], "Condition Variable: Initialization": [[955, "condition-variable-initialization"]], "Condition Variable: Miscellaneous": [[955, "condition-variable-miscellaneous"]], "Condition Variable: Message Queue": [[956, "condition-variable-message-queue"]], "One-Time Initialization (1)": [[957, "one-time-initialization-1"]], "One-Time Initialization (2)": [[957, "one-time-initialization-2"]], "One-Time Initialization (3)": [[957, "one-time-initialization-3"]], "Thread Specific Data, Thread Local Storage": [[957, "thread-specific-data-thread-local-storage"]], "Last Warning (1)": [[958, "last-warning-1"]], "Last Warning (2)": [[958, "last-warning-2"]], "Last Warning (3)": [[958, "last-warning-3"]], "POSIX Threads": [[959, "posix-threads"]], "Trylock/islocked": [[960, "trylock-islocked"]], "Process: Arguments, Exit Status": [[961, "process-arguments-exit-status"]], "The Shell: A Program Like Any Program": [[961, "the-shell-a-program-like-any-program"]], "The Shell: A Programming Language": [[961, "the-shell-a-programming-language"]], "Exit Status": [[961, "exit-status"]], "Exit Status: 0 is \u201cOK\u201d": [[961, "exit-status-0-is-ok"]], "Exit Status: != 0 is \u201cNot OK\u201d": [[961, "exit-status-0-is-not-ok"]], "Argument Vector (int argc, char** argv)": [[961, "argument-vector-int-argc-char-argv"]], "Processes": [[962, "processes"]], "The Process Tree (And Environment, And procfs)": [[963, "the-process-tree-and-environment-and-procfs"]], "Process ID (PID) And Parent Process ID (PPID)": [[963, "process-id-pid-and-parent-process-id-ppid"]], "System Calls: getpid(), getppid()": [[963, "system-calls-getpid-getppid"]], "Environment Variables": [[963, "environment-variables"]], "Scheduling (and Multitasking)": [[964, "scheduling-and-multitasking"]], "Fairness Criteria": [[964, "fairness-criteria"]], "CPU bound vs. I/O bound": [[964, "cpu-bound-vs-i-o-bound"]], "Demo: I/O vs CPU bound": [[964, "demo-i-o-vs-cpu-bound"]], "Scheduling Decision, Runnability": [[964, "scheduling-decision-runnability"]], "Tasks? Processes? Threads?": [[966, "tasks-processes-threads"]], "A Typical Bare Metal Application": [[966, "a-typical-bare-metal-application"]], "Hm. Need Another Timer Interrupt!": [[966, "hm-need-another-timer-interrupt"]], "Away From Interrupts: Use An Operating System": [[966, "away-from-interrupts-use-an-operating-system"]], "Tasks?": [[966, "id1"]], "Threads Are Great: More Functionality": [[966, "threads-are-great-more-functionality"]], "Are Threads Great?": [[966, "are-threads-great"]], "Stability Considerations": [[966, "stability-considerations"]], "Processes, Address Spaces": [[966, "processes-address-spaces"]], "Stabilizing": [[966, "stabilizing"]], "Scheduling: Exam Questions": [[967, "scheduling-exam-questions"]], "Wakeup Latency, and Fair Scheduling": [[968, "wakeup-latency-and-fair-scheduling"]], "Nice Value: Inexact Tuning": [[968, "nice-value-inexact-tuning"]], "Enter Realtime: Definition": [[968, "enter-realtime-definition"]], "Realtime on Linux": [[968, "realtime-on-linux"]], "Demo: Measuring Wakeup Latency": [[968, "demo-measuring-wakeup-latency"]], "Immediately?": [[968, "immediately"]], "Immediately! \u27f6 PREEMPT_RT": [[968, "immediately-longrightarrow-preempt-rt"]], "Realtime API": [[969, "realtime-api"]], "Scheduling Policies": [[969, "scheduling-policies"]], "Scheduling Priorities": [[969, "scheduling-priorities"]], "What\u2019s Runnning On A System?": [[969, "what-s-runnning-on-a-system"]], "Scheduling: System Calls": [[969, "scheduling-system-calls"]], "Scheduling: Threads (1)": [[969, "scheduling-threads-1"]], "Scheduling: Threads (2)": [[969, "scheduling-threads-2"]], "Priority Inversion": [[969, "priority-inversion"]], "Priority Inversion: Mutex Protocols (1)": [[969, "priority-inversion-mutex-protocols-1"]], "Wakeup Latency, CPU Frequency (Gotcha)": [[970, "wakeup-latency-cpu-frequency-gotcha"]], "Measuring Wakeup Latency": [[970, "measuring-wakeup-latency"]], "Many Runnable Processes (Gotcha: CPU Frequency Scaling)": [[970, "many-runnable-processes-gotcha-cpu-frequency-scaling"]], "CPU Frequency Scaling Out Of The Way": [[970, "cpu-frequency-scaling-out-of-the-way"]], "Mysteries Remaining": [[970, "mysteries-remaining"]], "Code: Sysprog: Event Driven Programming": [[971, "code-sysprog-event-driven-programming"]], "Screenplay: Sysprog: POSIX IPC": [[972, "screenplay-sysprog-posix-ipc"], [975, "screenplay-sysprog-posix-ipc"]], "select on Device Files": [[972, "select-on-device-files"]], "Sysprog: Events": [[973, "sysprog-events"]], "Code: Sysprog: POSIX IPC": [[974, "code-sysprog-posix-ipc"]], "Virtual Memory, mmap()": [[975, "virtual-memory-mmap"]], "POSIX Shared Memory": [[975, "posix-shared-memory"]], "Create Shared Memory Segment": [[975, "create-shared-memory-segment"]], "Produce into Shared Memory": [[975, "produce-into-shared-memory"]], "Consume from Shared Memory": [[975, "consume-from-shared-memory"]], "POSIX Semaphores": [[975, "posix-semaphores"]], "Create Semaphore": [[975, "create-semaphore"]], "Wait": [[975, "wait"]], "Post": [[975, "post"]], "POSIX Message Queues": [[975, "posix-message-queues"]], "Create": [[975, "create"]], "Produce": [[975, "produce"]], "Consume": [[975, "consume"]], "Slides: Sysprog: POSIX IPC": [[976, "slides-sysprog-posix-ipc"]], "Slideshow": [[976, null], [980, null]], "History: Two IPC Variants": [[976, "history-two-ipc-variants"]], "Object Names": [[976, "object-names"]], "File Semantics": [[976, "file-semantics"]], "Message Queues": [[976, "message-queues"]], "Open/Create: mq_open()": [[976, "open-create-mq-open"]], "Sending/Receiving: mq_send(), mq_receive()": [[976, "sending-receiving-mq-send-mq-receive"]], "Closing/Removing: mq_close(), mq_unlink()": [[976, "closing-removing-mq-close-mq-unlink"]], "Notification: mq_notify()": [[976, "notification-mq-notify"]], "Message Queues are Files": [[976, "message-queues-are-files"]], "Message Queue Filesystem: mqueue": [[976, "message-queue-filesystem-mqueue"]], "Semaphores": [[976, "semaphores"]], "Open/Create: sem_open()": [[976, "open-create-sem-open"]], "Communication: sem_wait(), sem_post()": [[976, "communication-sem-wait-sem-post"]], "Closing/Removing: sem_close(), ``sem_unlink()": [[976, "closing-removing-sem-close-sem-unlink"]], "Semaphores are Files": [[976, "semaphores-are-files"]], "Shared Memory (1)": [[976, "shared-memory-1"]], "Shared Memory (2)": [[976, "shared-memory-2"]], "Exercise: POSIX Message Queues": [[976, "exercise-posix-message-queues"]], "Sysprog: POSIX IPC": [[977, "sysprog-posix-ipc"]], "Code: Sysprog: Signals": [[978, "code-sysprog-signals"]], "Screenplay: Sysprog: Signals": [[979, "screenplay-sysprog-signals"]], "Barebones Naive Program": [[979, "barebones-naive-program"]], "Signal Handler": [[979, "signal-handler"]], "Alarm": [[979, "alarm"]], "Alarm (Louder)": [[979, "alarm-louder"]], "Synchronous Delivery": [[979, "synchronous-delivery"]], "Innocent Multithreaded Program": [[979, "innocent-multithreaded-program"]], "Add SIGALRM": [[979, "add-sigalrm"]], "Slides: Sysprog: Signals": [[980, "slides-sysprog-signals"]], "Example Signals": [[980, "example-signals"]], "Terminology": [[980, "terminology"]], "Default Actions": [[980, "default-actions"]], "Important Signals": [[980, "important-signals"]], "Sending, Commandline": [[980, "sending-commandline"]], "Sending Signals, Programmatically": [[980, "sending-signals-programmatically"]], "Warning!": [[980, "warning"]], "Blocking Signals: Signal Mask": [[980, "blocking-signals-signal-mask"]], "Signal Mask Manipulation": [[980, "signal-mask-manipulation"]], "Pending Signals": [[980, "pending-signals"]], "Signal Set: sigset_t": [[980, "signal-set-sigset-t"]], "Signal Handlers": [[980, "signal-handlers"]], "Installing a Signal Handler (1)": [[980, "installing-a-signal-handler-1"]], "Installing a Signal Handler (2)": [[980, "installing-a-signal-handler-2"]], "Effects of Signal Delivery": [[980, "effects-of-signal-delivery"]], "Last Warning!": [[980, "last-warning"]], "WTF Async Signal Safe?": [[980, "wtf-async-signal-safe"]], "Exercise: Signals": [[980, "exercise-signals"]], "Sysprog: Signals": [[981, "sysprog-signals"]], "Toolchain: Basics": [[982, "toolchain-basics"]], "GCC - GNU Compiler Collection": [[982, "gcc-gnu-compiler-collection"]], "All-In-One Usage: Single File": [[982, "all-in-one-usage-single-file"]], "All-In-One Usage: Multiple Files": [[982, "all-in-one-usage-multiple-files"]], "This Is Not As Simple As It Seems!": [[982, "this-is-not-as-simple-as-it-seems"]], "What\u2019s In A Program? \u27f6 Symbols (nm)": [[982, "what-s-in-a-program-longrightarrow-symbols-nm"]], "Overview: Where Do Which Symbols Come From (\u27f6 The Toolchain)": [[982, "overview-where-do-which-symbols-come-from-longrightarrow-the-toolchain"]], "Recap: Toolchain": [[982, "recap-toolchain"]], "CMake: Cross Build": [[983, "cmake-cross-build"]], "Cross Build: Parameters": [[983, "cross-build-parameters"]], "Core Build Instructions: Target Agnostic": [[983, "core-build-instructions-target-agnostic"]], "Toolchain Files": [[983, "toolchain-files"]], "Step 1: Generate Makefile in Build Directory": [[983, "step-1-generate-makefile-in-build-directory"]], "Step 2: Build Using make": [[983, "step-2-build-using-make"], [984, "step-2-build-using-make"]], "CMake: Local Build": [[984, "cmake-local-build"]], "make: Problems": [[984, "make-problems"]], "CMake To The Rescue": [[984, "cmake-to-the-rescue"]], "Out-Of-Source Build": [[984, "out-of-source-build"]], "Step 1: Generate Makefile In Build Directory": [[984, "step-1-generate-makefile-in-build-directory"]], "Goodie: Dependency Management": [[984, "goodie-dependency-management"]], "Native Compilation": [[985, "native-compilation"]], "Cross?": [[985, "cross"]], "The sysroot": [[985, "the-sysroot"]], "Exercise: Build Software Package (Cross, Raspberry)": [[987, "exercise-build-software-package-cross-raspberry"]], "FH/Moodle Quiz: Toolchain": [[988, "fh-moodle-quiz-toolchain"]], "Exercises: Toolchain": [[989, "exercises-toolchain"]], "Exercise: Build Software Package (Native)": [[990, "exercise-build-software-package-native"]], "Exercise: Install And Check Raspberry Toolchain": [[991, "exercise-install-and-check-raspberry-toolchain"]], "Toolchain, And Cross Development": [[992, "toolchain-and-cross-development"]], "Case Study: Raspberry Toolchain": [[993, "case-study-raspberry-toolchain"]], "Linaro Toolchain For The Pi (Defunct)": [[994, "linaro-toolchain-for-the-pi-defunct"]], "Download And Unpack Linaro Toolchain": [[994, "download-and-unpack-linaro-toolchain"]], "Create a sysroot": [[994, "create-a-sysroot"]], "Patience!": [[994, null]], "Test Cross Build": [[994, "test-cross-build"]], "What We Have": [[994, "what-we-have"]], "Use Cross Compiler To Build Against sysroot": [[994, "use-cross-compiler-to-build-against-sysroot"]], "Adjust $PATH To Point To Toolchain": [[994, "adjust-path-to-point-to-toolchain"]], "Building A Toolchain On Fedora For Ubuntu 18.04 (WSL)": [[996, "building-a-toolchain-on-fedora-for-ubuntu-18-04-wsl"]], "Install And Run Docker": [[996, "install-and-run-docker"]], "Create Ubuntu Images (18.04 and 20.04)": [[996, "create-ubuntu-images-18-04-and-20-04"]], "Create Docker Volume": [[996, "create-docker-volume"]], "Container Work": [[996, "container-work"]], "Command To Run Container On Volumes": [[996, "command-to-run-container-on-volumes"]], "Setup container": [[996, "setup-container"]], "Install autoconf 2.71": [[996, "install-autoconf-2-71"]], "Install crosstool-ng": [[996, "install-crosstool-ng"]], "Build Toolchain": [[996, "build-toolchain"]], "crosstool-ng Toolchain Build": [[996, "crosstool-ng-toolchain-build"]], "Create Toolchain Archive": [[996, "create-toolchain-archive"]], "Install Toolchain On Host": [[996, "install-toolchain-on-host"]], "Cross Toolchain Setup": [[997, "cross-toolchain-setup"]], "Download And Install Toolchain Archive": [[997, "download-and-install-toolchain-archive"]], "Establish CMake Toolchain File": [[997, "establish-cmake-toolchain-file"]], "Test Run": [[997, "test-run"]], "Zooming In: Separate Compilation, and Linking Statically": [[998, "zooming-in-separate-compilation-and-linking-statically"]], "Remember: All-In-One Build \u2026": [[998, "remember-all-in-one-build"]], "Adding Another main(): What About Shared Code?": [[998, "adding-another-main-what-about-shared-code"]], "Solution: Separate Compilation And Linking Steps": [[998, "solution-separate-compilation-and-linking-steps"]], "Complication: Modification Tracking": [[998, "complication-modification-tracking"]], "Enter Makefiles": [[998, "enter-makefiles"]], "Shared Libraries (Shared Objects)": [[999, "shared-libraries-shared-objects"]], "Problems With Static Libraries": [[999, "problems-with-static-libraries"]], "And Dynamic Libraries?": [[999, "and-dynamic-libraries"]], "Relocations": [[999, "relocations"]], "Building A Shared Library: Position Independent Code (PIC)": [[999, "building-a-shared-library-position-independent-code-pic"]], "Linking Executables Against Shared Libraries": [[999, "linking-executables-against-shared-libraries"]], "And Build Dependencies?": [[999, "and-build-dependencies"]], "And Runtime Dependencies?": [[999, "and-runtime-dependencies"]], "And Starting An Executable Having External Dependencies?": [[999, "and-starting-an-executable-having-external-dependencies"]], "This Is Not Simple: Library Search Path": [[999, "this-is-not-simple-library-search-path"]], "Summary: Static Versus Dynamic Libraries": [[999, "summary-static-versus-dynamic-libraries"]], "Object Code Archives/Static Libraries": [[1000, "object-code-archives-static-libraries"]], "Code Bases Become Larger (1)": [[1000, "code-bases-become-larger-1"]], "Code Bases Become Larger (2)": [[1000, "code-bases-become-larger-2"]], "Problem: Structure": [[1000, "problem-structure"]], "Build Instructions: Building A Library": [[1000, "build-instructions-building-a-library"]], "Closures": [[1001, "closures"]], "Today": [[1001, "today"]], "def is a Statement": [[1001, "def-is-a-statement"]], "Functions That Create Functions": [[1001, "functions-that-create-functions"]], "Inner Function Reaches Out To Global Scope": [[1001, "inner-function-reaches-out-to-global-scope"]], "And Intermediate Scope? \u27f6 Closure": [[1001, "and-intermediate-scope-longrightarrow-closure"]], "A Less Theoretical \u201cUse Case\u201d": [[1001, "a-less-theoretical-use-case"]], "Scope Issues: Assignment to Global Scope (global Keyword)": [[1001, "scope-issues-assignment-to-global-scope-global-keyword"]], "Scope Issues: Assignment to Intermediate Scope (nonlocal Keyword)": [[1001, "scope-issues-assignment-to-intermediate-scope-nonlocal-keyword"]], "Intro": [[1002, "intro"]], "Simplest: List Comprehension": [[1002, "simplest-list-comprehension"]], "Context Managers: The with Statement": [[1003, "context-managers-the-with-statement"]], "Example: Open File": [[1003, "example-open-file"]], "Example: Temporary Directory": [[1003, "example-temporary-directory"]], "Example: Multiple with Items": [[1003, "example-multiple-with-items"]], "Under The Hood: Context Manager": [[1003, "under-the-hood-context-manager"]], "Example: Monkeypatching The print Function": [[1003, "example-monkeypatching-the-print-function"]], "Still Much Typing \u27f6 @contextlib.contextmanager": [[1003, "still-much-typing-longrightarrow-contextlib-contextmanager"]], "More Involved: Using Closures To Implement PrefixPrint": [[1003, "more-involved-using-closures-to-implement-prefixprint"]], "Decorators": [[1004, "decorators"]], "The Ominous \u201c@\u201d": [[1004, "the-ominous"]], "Decorators Overview": [[1004, "decorators-overview"]], "A Simple Minded Function": [[1004, "a-simple-minded-function"]], "Decorator Basics": [[1004, "decorator-basics"]], "Decorators are Syntactic Sugar": [[1004, "decorators-are-syntactic-sugar"]], "Problem: Arbitrary Function Arguments": [[1004, "problem-arbitrary-function-arguments"]], "*args, **kwargs To The Rescue": [[1004, "args-kwargs-to-the-rescue"]], "Sideways: functools.wraps": [[1004, "sideways-functools-wraps"]], "Class Decorator: debug() with prefix": [[1004, "class-decorator-debug-with-prefix"]], "Basic Exception Handling: try, except": [[1005, "basic-exception-handling-try-except"]], "Catching Exceptions By Type": [[1005, "catching-exceptions-by-type"]], "Exception Objects": [[1005, "exception-objects"]], "Catching Multiple Exception Types: Exception List": [[1005, "catching-multiple-exception-types-exception-list"]], "Catching Multiple Exception Types: Multiple except Clauses": [[1005, "catching-multiple-exception-types-multiple-except-clauses"]], "Catching Multiple Exception Types: By Base Type": [[1005, "catching-multiple-exception-types-by-base-type"]], "Important: Order Of except Clauses": [[1005, "important-order-of-except-clauses"]], "Built-In Exception Hierarchy": [[1005, "built-in-exception-hierarchy"]], "Raising Exceptions": [[1005, "raising-exceptions"]], "Re-Raising Exceptions": [[1005, "re-raising-exceptions"]], "User-Defined Exceptions": [[1005, "user-defined-exceptions"]], "User-Defined Exceptions: More": [[1005, "user-defined-exceptions-more"]], "else: Executed If No Exception": [[1005, "else-executed-if-no-exception"]], "finally: Executed Regardless Of Exception": [[1005, "finally-executed-regardless-of-exception"]], "The exec() Function": [[1006, "the-exec-function"]], "Dictionaries Everywhere: Context": [[1006, "dictionaries-everywhere-context"]], "Enter exec()": [[1006, "enter-exec"]], "exec(), and Context": [[1006, "exec-and-context"]], "And What Is This Used For, Realistically?": [[1006, "and-what-is-this-used-for-realistically"]], "Python: More Language Features": [[1007, "python-more-language-features"]], "Iteration, Comprehensions, and Generators": [[1008, "iteration-comprehensions-and-generators"]], "Coverage Of This Topic": [[1008, "coverage-of-this-topic"]], "for Recap: Sequential Datatypes": [[1008, "for-recap-sequential-datatypes"]], "Primitive Transformation [1,2,3,4] \u27f6 [1,4,9,16]": [[1008, "primitive-transformation-1-2-3-4-longrightarrow-1-4-9-16"]], "Larger Input List (Still Allocated)": [[1008, "larger-input-list-still-allocated"]], "Input List \u27f6 range": [[1008, "input-list-longrightarrow-range"]], "Output List \u27f6 yield": [[1008, "output-list-longrightarrow-yield"]], "Generator Function \u27f6 Generator Expression": [[1008, "generator-function-longrightarrow-generator-expression"]], "Implementing A Fibonacci Number Generator": [[1009, "implementing-a-fibonacci-number-generator"]], "Fibonacci Numbers: Naive List": [[1009, "fibonacci-numbers-naive-list"]], "Fibonacci Numbers: Naive List, Limited": [[1009, "fibonacci-numbers-naive-list-limited"]], "Sideway: Infinity by Not Using Functions": [[1009, "sideway-infinity-by-not-using-functions"]], "Fibonacci Numbers: Function Producing Infinite Sequence": [[1009, "fibonacci-numbers-function-producing-infinite-sequence"]], "Common Pattern: Turn List into Generated Items": [[1009, "common-pattern-turn-list-into-generated-items"]], "The Iterator Protocol": [[1010, "the-iterator-protocol"], [1010, "id1"]], "Iteration in Python": [[1010, "iteration-in-python"]], "What\u2019s an Iterator?": [[1010, "what-s-an-iterator"]], "What\u2019s an Iterable?": [[1010, "what-s-an-iterable"]], "The Iterator Protocol: Manual Iteration": [[1010, "the-iterator-protocol-manual-iteration"]], "The Iterator Protocol, And The for Loop": [[1010, "the-iterator-protocol-and-the-for-loop"]], "Generators: Motivation": [[1010, "generators-motivation"]], "Generators: How?": [[1010, "generators-how"]], "Observations": [[1010, "observations"]], "Iteration, Generators, And yield": [[1011, "iteration-generators-and-yield"]], "Iterating Intelligently: Generators, and the Iterator Protocol": [[1012, "iterating-intelligently-generators-and-the-iterator-protocol"]], "Modules are Objects": [[1013, "modules-are-objects"]], "Other Forms (1)": [[1013, "other-forms-1"]], "Other Forms (2)": [[1013, "other-forms-2"]], "Packages": [[1013, "packages"]], "Executing Modules as Scripts": [[1013, "executing-modules-as-scripts"]], "Package Structure": [[1013, "package-structure"]], "Relative Imports (1)": [[1013, "relative-imports-1"]], "Relative Imports (2)": [[1013, "relative-imports-2"]], "Multithreading (Python)": [[1014, "multithreading-python"]], "What\u2019s a Thread?": [[1014, "what-s-a-thread"]], "Threads: The Pythonic Way": [[1014, "threads-the-pythonic-way"]], "Threads: The OO Way - Inheritance": [[1014, "threads-the-oo-way-inheritance"]], "And Program Termination?": [[1014, "and-program-termination"]], "Daemon Threads": [[1014, "daemon-threads"]], "Race Conditions, and Mutexes": [[1016, "race-conditions-and-mutexes"]], "Mother of All Race conditions: Integer Increment": [[1016, "mother-of-all-race-conditions-integer-increment"]], "Load Modify Store Conflict": [[1016, "load-modify-store-conflict"]], "Solution: Mutex (Explicit Acquire/Release)": [[1016, "solution-mutex-explicit-acquire-release"]], "Solution: Mutex (with Statement)": [[1016, "solution-mutex-with-statement"]], "Multithreading: Exam Questions": [[1017, "multithreading-exam-questions"]], "Abstract Base Classes (abc), And Duck Typing": [[1018, "abstract-base-classes-abc-and-duck-typing"]], "Duck Typing: Examples": [[1018, "duck-typing-examples"]], "Duck Typing Problem: Late Errors": [[1018, "duck-typing-problem-late-errors"]], "Intermediate Step: Common Base Class (\u201cInterface\u201d)": [[1018, "intermediate-step-common-base-class-interface"]], "Enter Abstract Base Classes: Wish List": [[1018, "enter-abstract-base-classes-wish-list"]], "Abtract Base Class": [[1018, "abtract-base-class"]], "Classes And Dictionaries": [[1019, "classes-and-dictionaries"]], "Facts Up-Front": [[1019, "facts-up-front"]], "Using Raw Dictionaries As Objects": [[1019, "using-raw-dictionaries-as-objects"]], "Enter Classes: An Empty Class, And Its Effects": [[1019, "enter-classes-an-empty-class-and-its-effects"]], "Attributes": [[1019, "attributes"], [1131, "attributes"]], "Summary: Classes Or Raw Dictionaries": [[1019, "summary-classes-or-raw-dictionaries"]], "Dynamic Attribute Access": [[1019, "dynamic-attribute-access"]], "Constructor": [[1020, "constructor"]], "And self?": [[1020, "and-self"]], "Interrelationships": [[1021, "interrelationships"]], "Extending Existing Classes": [[1022, "extending-existing-classes"]], "Additional Feature: Salary": [[1022, "additional-feature-salary"]], "Want Manager": [[1022, "want-manager"]], "Introspecting Inheritance: isinstance(), issubclass()": [[1022, "introspecting-inheritance-isinstance-issubclass"]], "isinstance()": [[1022, "isinstance"]], "issubclass()": [[1022, "issubclass"]], "Add __str__(), Creatively, After The Fact": [[1022, "add-str-creatively-after-the-fact"]], "Object Methods": [[1023, "object-methods"]], "Class Methods (@classmethod)": [[1023, "class-methods-classmethod"]], "Static Methods (@staticmethod)": [[1023, "static-methods-staticmethod"]], "collections.namedtuple": [[1024, "collections-namedtuple"]], "Shortcut For Simple Data-Holding Classes": [[1024, "shortcut-for-simple-data-holding-classes"]], "Constructing From Iterable: _make()": [[1024, "constructing-from-iterable-make"]], "Convert To dict: _asdict()": [[1024, "convert-to-dict-asdict"]], "Operators Are \u201cDunder\u201d Methods": [[1025, "operators-are-dunder-methods"]], "Hypothetical And Pointless class Number": [[1025, "hypothetical-and-pointless-class-number"]], "Simplest: Equality Comparison (==)": [[1025, "simplest-equality-comparison"]], "Comparing Against Incompatible Types? (Lotsa Magic!)": [[1025, "comparing-against-incompatible-types-lotsa-magic"]], "Ordering: Less-Than (<) Operator": [[1025, "ordering-less-than-operator"]], "Ordering Magic, Again: __gt__ in terms of __lt__": [[1025, "ordering-magic-again-gt-in-terms-of-lt"]], "Table: Comparison Operators": [[1025, "table-comparison-operators"]], "@functools.total_ordering To The Rescue": [[1025, "functools-total-ordering-to-the-rescue"]], "Arithmetic Operators, Reverse Operations": [[1025, "arithmetic-operators-reverse-operations"]], "Table: Operators And The Methods To Implement Them": [[1025, "table-operators-and-the-methods-to-implement-them"]], "Readonly Attributes": [[1026, "readonly-attributes"]], "And Write Access?": [[1026, "and-write-access"]], "Calculated Attributes": [[1026, "calculated-attributes"]], "str() And repr()": [[1027, "str-and-repr"]], "Stringification And Representation": [[1027, "stringification-and-representation"]], "Overloading str() And repr(): __str__(), __repr__()": [[1027, "overloading-str-and-repr-str-repr"]], "Positional and Keyword Arguments": [[1028, "positional-and-keyword-arguments"]], "Traditional Function Call": [[1028, "traditional-function-call"]], "Supplying Function Arguments Dynamically": [[1028, "supplying-function-arguments-dynamically"]], "Functions That Takes Arbitrary Number Of Positional Arguments": [[1028, "functions-that-takes-arbitrary-number-of-positional-arguments"]], "Functions That Take Arbitrary Keyword Arguments": [[1028, "functions-that-take-arbitrary-keyword-arguments"]], "And Arbitrary Positional And Keyword Arguments?": [[1028, "and-arbitrary-positional-and-keyword-arguments"]], "Ultimate Dynamicity: Arbitrary Positional And Keyword Arguments": [[1028, "ultimate-dynamicity-arbitrary-positional-and-keyword-arguments"]], "Use Case: A Better print()": [[1028, "use-case-a-better-print"]], "Python: The Language Fundamentals": [[1029, "python-the-language-fundamentals"]], "The Python Programming Language": [[1031, "the-python-programming-language"]], "A Little Bit of History": [[1031, "a-little-bit-of-history"]], "Guido Van Rossum": [[1031, "guido-van-rossum"]], "Hello World: Interactive Mode": [[1032, "hello-world-interactive-mode"]], "Hello World: Script Files": [[1032, "hello-world-script-files"]], "Running Python Programs": [[1033, "running-python-programs"]], "The UNIX Way: Executable Bit, chmod": [[1033, "the-unix-way-executable-bit-chmod"]], "The UNIX Way: Hash-Bang (She-Bang)": [[1033, "the-unix-way-hash-bang-she-bang"]], "The UNIX Way: Running": [[1033, "the-unix-way-running"]], "The Doze Way: Registry": [[1033, "the-doze-way-registry"]], "Syntax: Indentation (1)": [[1034, "syntax-indentation-1"]], "Syntax: Indentation (2)": [[1034, "syntax-indentation-2"]], "Syntax: Statements and Lines": [[1034, "syntax-statements-and-lines"]], "Comments vs. Documentation": [[1034, "comments-vs-documentation"]], "Commandline Arguments (sys.argv)": [[1035, "commandline-arguments-sys-argv"]], "Operating Systems and Programs": [[1035, "operating-systems-and-programs"]], "Commandline Arguments in Python": [[1035, "commandline-arguments-in-python"]], "Cosmetics: Rudimentary Argument Parsing": [[1035, "cosmetics-rudimentary-argument-parsing"]], "Further information: argparse": [[1035, null]], "Variables (1)": [[1036, "variables-1"]], "Variables (2)": [[1036, "variables-2"]], "Integer Numbers: Comparison": [[1037, "integer-numbers-comparison"]], "Numbers: Python2 vs. Python 3 (1)": [[1037, "numbers-python2-vs-python-3-1"]], "Numbers: Python2 vs. Python 3 (2)": [[1037, "numbers-python2-vs-python-3-2"]], "Strings: Python 2": [[1037, "strings-python-2"]], "Strings: Python 2 \u2014 Confusion": [[1037, "strings-python-2-confusion"]], "Strings: Python 2 - unicode (1)": [[1037, "strings-python-2-unicode-1"]], "Strings: Python 2 \u2014 unicode (2)": [[1037, "strings-python-2-unicode-2"]], "Strings: Python 3": [[1037, "strings-python-3"]], "Python 3, Generally": [[1037, "python-3-generally"]], "Boolean Values": [[1039, "boolean-values"]], "Boolean Operators": [[1039, "boolean-operators"]], "The if Statement": [[1040, "the-if-statement"], [1040, "id1"]], "Looping Constructs": [[1041, "looping-constructs"]], "Esoteric Feature: while/else": [[1041, "esoteric-feature-while-else"]], "Sequence Elements": [[1042, "sequence-elements"]], "Sequence Multiplication": [[1042, "sequence-multiplication"]], "Indexing (1)": [[1043, "indexing-1"]], "Indexing (2)": [[1043, "indexing-2"]], "Slicing: Cutting Out": [[1043, "slicing-cutting-out"]], "Slicing: Step Width": [[1043, "slicing-step-width"]], "Iteration over \u2026 Something": [[1044, "iteration-over-something"]], "break, continue, else": [[1044, "break-continue-else"]], "Iteration over Numbers: range()": [[1045, "iteration-over-numbers-range"]], "range(): Definition": [[1045, "range-definition"]], "range(): Python 2 vs. Python 3": [[1045, "range-python-2-vs-python-3"]], "Immutability: Numbers": [[1046, "immutability-numbers"]], "Modifying An Integer In-Place? (Immutability)": [[1046, "modifying-an-integer-in-place-immutability"]], "Immutability: Tuples": [[1046, "immutability-tuples"]], "Mutability: Lists (1)": [[1046, "mutability-lists-1"]], "Mutability: Lists (2)": [[1046, "mutability-lists-2"]], "Shallow Copy": [[1046, "shallow-copy"]], "Deep Copy": [[1046, "deep-copy"]], "Functions: Global and Local Scope (Livehacking Screenplay)": [[1047, "functions-global-and-local-scope-livehacking-screenplay"]], "Undefined Variable": [[1047, "undefined-variable"]], "Local Variable": [[1047, "local-variable"]], "Local and Global Variable With Same Name": [[1047, "local-and-global-variable-with-same-name"]], "Assignment to Global Variable: global": [[1047, "assignment-to-global-variable-global"]], "Functions (Slideshow)": [[1048, "functions-slideshow"]], "Why Functions?": [[1048, "why-functions"]], "Mutable Default Parameters: Attention!": [[1048, "mutable-default-parameters-attention"]], "String Delimiters": [[1050, "string-delimiters"]], "Escape Sequences": [[1050, "escape-sequences"]], "More String Tricks": [[1050, "more-string-tricks"]], "C-Style Formatting (1)": [[1051, "c-style-formatting-1"]], "C-Style Formatting: Conversions": [[1051, "c-style-formatting-conversions"]], "C-Style Formatting: Flags": [[1051, "c-style-formatting-flags"]], "C-Style Formatting: Examples": [[1051, "c-style-formatting-examples"]], "The format Method": [[1051, "the-format-method"]], "Cool Since 3.6: f-Strings": [[1051, "cool-since-3-6-f-strings"]], "Batteries Included: Checks": [[1052, "batteries-included-checks"]], "Batteries Included: Search": [[1052, "batteries-included-search"]], "Substring Search: Examples": [[1052, "substring-search-examples"]], "Split and Join (1)": [[1052, "split-and-join-1"]], "Split and Join (2)": [[1052, "split-and-join-2"]], "List Access": [[1053, "list-access"]], "List Methods: Examples": [[1053, "list-methods-examples"]], "Dictionary Access": [[1054, "dictionary-access"]], "Examples: Simple Access": [[1054, "examples-simple-access"]], "Examples: Shortcuts": [[1054, "examples-shortcuts"]], "Dictionary Iteration (1)": [[1054, "dictionary-iteration-1"]], "Dictionary Iteration (2)": [[1054, "dictionary-iteration-2"]], "Operations on Sets (1)": [[1055, "operations-on-sets-1"]], "Operations on Sets (2)": [[1055, "operations-on-sets-2"]], "Python 2 vs. Python 3": [[1056, "python-2-vs-python-3"]], "Opening Files": [[1056, "opening-files"]], "Reading Files": [[1056, "reading-files"]], "Reading Files: Pythonic": [[1056, "reading-files-pythonic"]], "Writing Files (1)": [[1056, "writing-files-1"]], "Writing Files (2)": [[1056, "writing-files-2"]], "File Modes": [[1056, "file-modes"]], "Text vs. Binary Mode": [[1056, "text-vs-binary-mode"]], "Standard Streams": [[1056, "standard-streams"]], "Function Objects": [[1057, "function-objects"]], "What\u2019s a Function?": [[1057, "what-s-a-function"]], "Function Objects?": [[1057, "id1"]], "Function Objects! (1)": [[1057, "function-objects-1"]], "Function Objects! (2)": [[1057, "function-objects-2"]], "Commandline Parsing with argparse": [[1058, "commandline-parsing-with-argparse"]], "Handling Positional Arguments": [[1058, "handling-positional-arguments"]], "Handling Named Arguments: --interval \u2026": [[1058, "handling-named-arguments-interval"]], "Python: Draft Topics": [[1059, "python-draft-topics"]], "Matplotlib": [[1060, "matplotlib"]], "Axis Ranges": [[1060, "axis-ranges"]], "Package Installation (setuptools)": [[1061, "package-installation-setuptools"]], "Files": [[1061, "files"]], "Test \u201cInstallation\u201d": [[1061, "test-installation"]], "Source Distribution": [[1061, "source-distribution"]], "Manifest": [[1061, "manifest"]], "Installing From Wheel File": [[1061, "installing-from-wheel-file"]], "Publishing On PyPI": [[1061, "publishing-on-pypi"]], "Exercise: Read CSV File, Write into Sqlite3 Database": [[1062, "exercise-read-csv-file-write-into-sqlite3-database"]], "Exercise: Read CSV File": [[1063, "exercise-read-csv-file"]], "Sample CSV File": [[1063, "sample-csv-file"]], "CSV and Databases": [[1064, "csv-and-databases"]], "Exercise: Boolean Expressions": [[1066, "exercise-boolean-expressions"]], "Exercise: Even Numbers (while)": [[1067, "exercise-even-numbers-while"]], "Exercise: Greeting, Depending on Time of Day": [[1068, "exercise-greeting-depending-on-time-of-day"]], "Exercises (External)": [[1069, "exercises-external"]], "Exercise: Swap Two Variables": [[1071, "exercise-swap-two-variables"]], "Exercise: Username/Password Check": [[1072, "exercise-username-password-check"]], "Exercise: Digit to English Word": [[1073, "exercise-digit-to-english-word"]], "Exercise: Dictionary: Errors?": [[1074, "exercise-dictionary-errors"]], "Exercise: Eliminate Empty/Comment-Only Lines": [[1075, "exercise-eliminate-empty-comment-only-lines"]], "Exercise: Generator: Fibonacci": [[1076, "exercise-generator-fibonacci"]], "Exercise: Primeness (for)": [[1077, "exercise-primeness-for"]], "Exercises (Legacy)": [[1078, "exercises-legacy"]], "Exercise: Functions: join()": [[1079, "exercise-functions-join"]], "Exercise: Determine Maximum of Two Numbers (Function)": [[1081, "exercise-determine-maximum-of-two-numbers-function"]], "Exercise: Mixed List (Executable Program)": [[1082, "exercise-mixed-list-executable-program"]], "Exercise: Mixed List (Interactive Interpreter)": [[1083, "exercise-mixed-list-interactive-interpreter"]], "Exercise: Parsing /etc/passwd": [[1084, "exercise-parsing-etc-passwd"]], "Sample /etc/passwd file": [[1084, null]], "Implementation Strategy": [[1084, "implementation-strategy"]], "Exercise: Primeness (Function)": [[1085, "exercise-primeness-function"]], "Exercise: Reverting Lines of a File": [[1086, "exercise-reverting-lines-of-a-file"]], "Exercise: String (Right-Justify)": [[1087, "exercise-string-right-justify"]], "Exercise: Function: uniq()": [[1088, "exercise-function-uniq"]], "Exercise: Generator: uniq()": [[1089, "exercise-generator-uniq"]], "Exercise: Counting Lines, Words, Characters": [[1090, "exercise-counting-lines-words-characters"]], "Exercise: Primeness (while)": [[1091, "exercise-primeness-while"]], "Sensors, And Data Acquisition (Exercise Series)": [[1092, "sensors-and-data-acquisition-exercise-series"]], "Setting Paths": [[1093, "setting-paths"]], "Create (And Activate) A Virtual Environment For The Project": [[1093, "create-and-activate-a-virtual-environment-for-the-project"]], "Install Requirements": [[1093, "install-requirements"]], "Exercise: Basic \u201cSensor\u201d": [[1094, "exercise-basic-sensor"]], "Specification, And Setup": [[1094, "specification-and-setup"]], "Verification": [[1094, "verification"]], "Unit Test": [[1094, "unit-test"]], "Exercise: Read CSV File (csv.dictreader)": [[1095, "exercise-read-csv-file-csv-dictreader"]], "Users-header-cp1252.csv": [[1095, "id1"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.dictreader)": [[1096, "exercise-refactoring-extract-csv-reading-into-function-csv-dictreader"]], "Exercise: Read CSV File (csv.reader)": [[1097, "exercise-read-csv-file-csv-reader"]], "Users-noheader-cp1252.csv": [[1097, "id2"]], "Exercise: Refactoring - Extract CSV Reading Into Function (csv.reader)": [[1098, "exercise-refactoring-extract-csv-reading-into-function-csv-reader"]], "User Database (Exercise Series)": [[1099, "user-database-exercise-series"]], "Exercise: MQTT: Publish User Records": [[1100, "exercise-mqtt-publish-user-records"]], "Exercise: Away From Raw Dictionaries": [[1101, "exercise-away-from-raw-dictionaries"]], "Test Code": [[1101, "test-code"], [1102, "test-code"], [1103, "test-code"]], "Exercise: Convert User Record To JSON And Back": [[1102, "exercise-convert-user-record-to-json-and-back"]], "Exercise: Refactoring - Extract Both CSV Formats Into Module": [[1103, "exercise-refactoring-extract-both-csv-formats-into-module"]], "Python: All Material, Interrelated": [[1104, "python-all-material-interrelated"]], "Python Programming: From Absolute Beginner to Advanced Productivity": [[1105, "python-programming-from-absolute-beginner-to-advanced-productivity"]], "Sample Trainings": [[1105, "sample-trainings"]], "More Information": [[1105, "more-information"]], "Python Links": [[1106, "python-links"]], "Advanced Python": [[1106, "advanced-python"], [1167, "advanced-python"]], "David Beazley": [[1106, "david-beazley"]], "Raymond Hettinger": [[1106, "raymond-hettinger"]], "Machine Learning, Artificial Intelligence": [[1107, "machine-learning-artificial-intelligence"]], "K-Means": [[1108, "k-means"]], "Topic Overview": [[1108, "topic-overview"], [1112, "topic-overview"]], "Artifacts": [[1108, "artifacts"]], "Topic Dependencies": [[1108, "topic-dependencies"], [1112, "topic-dependencies"]], "Linear Regression: Running Code (no Notebook!)": [[1109, "linear-regression-running-code-no-notebook"]], "Weather History Dataset": [[1110, "weather-history-dataset"]], "Linear Regression: Jupyter Notebook": [[1111, "Linear-Regression:-Jupyter-Notebook"]], "pandas.DataFrame": [[1111, "pandas.DataFrame"]], "Reading Data": [[1111, "Reading-Data"]], "Relationship Between pandas.DataFrame and numpy.ndarray": [[1111, "Relationship-Between-pandas.DataFrame-and-numpy.ndarray"]], "Extracting Input and Output Features from a pandas.DataFrame": [[1111, "Extracting-Input-and-Output-Features-from-a-pandas.DataFrame"]], "Plotting with matplotlib": [[1111, "Plotting-with-matplotlib"]], "Data Splicing: Split into Training and Test Data": [[1111, "Data-Splicing:-Split-into-Training-and-Test-Data"]], "Creating the Model: Algorithm + Training Data": [[1111, "Creating-the-Model:-Algorithm-+-Training-Data"]], "Verify the Model": [[1111, "Verify-the-Model"]], "Linear Regression": [[1112, "linear-regression"]], "Running Code": [[1112, "running-code"]], "Dataset": [[1112, "dataset"]], "Machine Learning: Concepts and Terminology": [[1113, "machine-learning-concepts-and-terminology"]], "How Far Is Mankind from Creating God": [[1113, "how-far-is-mankind-from-creating-god"]], "Basic Terminology: Algorithm and Model": [[1113, "basic-terminology-algorithm-and-model"]], "Basic Terminology: Features and Data": [[1113, "basic-terminology-features-and-data"]], "Types of Machine Learning": [[1113, "types-of-machine-learning"]], "Problems Solved": [[1113, "problems-solved"], [1135, "problems-solved"], [1142, "problems-solved"]], "CSV Files": [[1114, "csv-files"]], "CSV in its Origins": [[1114, "csv-in-its-origins"]], "The csv Module: csv.reader": [[1114, "the-csv-module-csv-reader"]], "And Tuple Unpacking?": [[1114, "and-tuple-unpacking"]], "Going Insane: CSV? SCSV?": [[1114, "going-insane-csv-scsv"]], "More Tuning Needed: Quoting": [[1114, "more-tuning-needed-quoting"]], "Tuning Options": [[1114, "tuning-options"]], "And Headings?": [[1114, "and-headings"]], "Enter csv.DictReader": [[1114, "enter-csv-dictreader"]], "DBAPI 2": [[1115, "dbapi-2"]], "Database Interfaces": [[1115, "database-interfaces"]], "DBAPI 2.0": [[1115, "dbapi-2-0"]], "Caveat: Transaction Lifetime": [[1115, "caveat-transaction-lifetime"]], "Caveat: Isolation": [[1115, "caveat-isolation"]], "Databases": [[1116, "databases"]], "DBAPI 2: PostgreSQL": [[1117, "dbapi-2-postgresql"]], "DBAPI 2 Example: Postgres": [[1117, "dbapi-2-example-postgres"]], "DBAPI 2: sqlite3": [[1118, "dbapi-2-sqlite3"]], "SQLite3": [[1118, "sqlite3"]], "SQLite3 Connection": [[1118, "sqlite3-connection"]], "SQLite3: Cursors and Statements": [[1118, "sqlite3-cursors-and-statements"]], "SQLite3: Filling the Database": [[1118, "sqlite3-filling-the-database"]], "SQLite3: Queries - Result Set": [[1118, "sqlite3-queries-result-set"]], "SQLite3: Bind Parameters": [[1118, "sqlite3-bind-parameters"]], "ASCII": [[1119, "ascii"]], "ISO Latin 1 (ISO-8859-1)": [[1119, "iso-latin-1-iso-8859-1"]], "And Python?": [[1119, "and-python"]], "Liebe Gr\u00fc\u00dfe, J\u00f6rg": [[1119, "liebe-grusze-jorg"]], "A Better Encoding for Liebe Gr\u00fc\u00dfe, J\u00f6rg: ISO-8859-1": [[1119, "a-better-encoding-for-liebe-grusze-jorg-iso-8859-1"]], "Encoding Mess": [[1119, "encoding-mess"]], "And \u795d\u597d, J\u00f6rg? (1)": [[1119, "and-jorg-1"]], "And \u795d\u597d, J\u00f6rg? (2)": [[1119, "and-jorg-2"]], "Enter UTF-8": [[1119, "enter-utf-8"]], "Boundary Code": [[1119, "boundary-code"]], "Ah Yes: decode()": [[1119, "ah-yes-decode"]], "And Source Encoding?": [[1119, "and-source-encoding"]], "Python: Miscellaneous Topics": [[1120, "python-miscellaneous-topics"]], "The import Statement (incomplete)": [[1121, "the-import-statement-incomplete"]], "Server/Broker": [[1122, "server-broker"]], "Starting the Service": [[1122, "starting-the-service"]], "Publishing a Message in Python": [[1122, "publishing-a-message-in-python"]], "Subscribing a Topic in Python": [[1122, "subscribing-a-topic-in-python"]], "Message Payload?": [[1122, "message-payload"]], "Pandas: Adding Rows": [[1123, "pandas-adding-rows"]], "Add Rows: Assign To New Row Number": [[1123, "add-rows-assign-to-new-row-number"]], "Add Rows: append() (Deprecated)": [[1123, "add-rows-append-deprecated"]], "Add Rows: Concatenating Frames": [[1123, "add-rows-concatenating-frames"]], "Pandas: Basics (DataFrame And Series)": [[1124, "pandas-basics-dataframe-and-series"]], "Naive: Objects, And Collections Of Objects": [[1124, "naive-objects-and-collections-of-objects"]], "Inverted: Objects, And Collections Of Objects (\u27f6 DataFrame)": [[1124, "inverted-objects-and-collections-of-objects-longrightarrow-dataframe"]], "Enter pandas, DataFrame, Series": [[1124, "enter-pandas-dataframe-series"]], "Selecting A Column \u27f6 Series": [[1124, "selecting-a-column-longrightarrow-series"]], "Selecting Multiple Columns": [[1124, "selecting-multiple-columns"]], "To Copy Or Not To Copy": [[1124, "to-copy-or-not-to-copy"]], "Pandas: Filters": [[1125, "pandas-filters"]], "Basic Filter Example": [[1125, "basic-filter-example"]], "Filter? Bitmap!": [[1125, "filter-bitmap"]], "Confusion: Filter/Column Addressing": [[1125, "confusion-filter-column-addressing"]], "Column Selection And Filters": [[1125, "column-selection-and-filters"]], "Boolean Expressions: Bitwise Operators! Braces!": [[1125, "boolean-expressions-bitwise-operators-braces"]], "Negation: ~": [[1125, "negation"]], "Neat Helpers": [[1125, "neat-helpers"]], "Random Material": [[1126, "random-material"]], "Pandas: Selecting Rows (And Columns) With iloc[]": [[1127, "pandas-selecting-rows-and-columns-with-iloc"]], "Row By Number: iloc[]": [[1127, "row-by-number-iloc"]], "So What Is A Row, Then?": [[1127, "so-what-is-a-row-then"]], "Selecting Multiple Rows": [[1127, "selecting-multiple-rows"]], "Selecting Rows And Columns": [[1127, "selecting-rows-and-columns"]], "Pandas: Indexes": [[1128, "pandas-indexes"]], "Default Index: Row Number": [[1128, "default-index-row-number"]], "Setting Custom Index": [[1128, "setting-custom-index"]], "Setting Custom Index, inplace=True": [[1128, "setting-custom-index-inplace-true"]], "Custom Index, And loc[]": [[1128, "custom-index-and-loc"]], "Custom Index, And iloc[]": [[1128, "custom-index-and-iloc"]], "Sorting DataFrame Object By Index Column": [[1128, "sorting-dataframe-object-by-index-column"]], "Pandas: Selecting Rows (And Columns) With loc[]": [[1129, "pandas-selecting-rows-and-columns-with-loc"]], "Rows (And Columns) By Label": [[1129, "rows-and-columns-by-label"]], "Hiccup: Slices Are Inclusive": [[1129, "hiccup-slices-are-inclusive"]], "Column Selection By Label": [[1129, "column-selection-by-label"]], "Columns By Slicing: Inclusive": [[1129, "columns-by-slicing-inclusive"]], "Pandas: Adding/Modifying Columns": [[1130, "pandas-adding-modifying-columns"]], "Example 1: Lowercasing A Column Of Strings": [[1130, "example-1-lowercasing-a-column-of-strings"]], "Example 1: Modifying The email Column": [[1130, "example-1-modifying-the-email-column"]], "Example 2: Adding A normalized_email Column": [[1130, "example-2-adding-a-normalized-email-column"]], "What If No Prebuilt Functionality Exists? apply() To The Rescue!": [[1130, "what-if-no-prebuilt-functionality-exists-apply-to-the-rescue"]], "apply() -ing Custom Functions": [[1130, "apply-ing-custom-functions"]], "XML: ElementTree (etree)": [[1131, "xml-elementtree-etree"]], "SAX and DOM": [[1131, "sax-and-dom"]], "ElementTree": [[1131, "elementtree"]], "A Very Simple Document": [[1131, "a-very-simple-document"]], "Text (1)": [[1131, "text-1"]], "Text (2)": [[1131, "text-2"]], "Writing XML Documents": [[1131, "writing-xml-documents"]], "Reading XML Documents": [[1131, "reading-xml-documents"]], "Visual Studio Code for Python Programming": [[1132, "visual-studio-code-for-python-programming"]], "Python: Project/Package Management": [[1133, "python-project-package-management"]], "Python Package Index (Livehacking Screenplay)": [[1134, "python-package-index-livehacking-screenplay"]], "Invocation": [[1134, "invocation"]], "Help": [[1134, "help"]], "Most Used Subcommands": [[1134, "most-used-subcommands"]], "Subcommand Help": [[1134, "subcommand-help"]], "System vs. User": [[1134, "system-vs-user"]], "Search": [[1134, "search"]], "Python Package Index (Slideshow)": [[1135, "python-package-index-slideshow"]], "Python Package Index (PyPI)": [[1135, "python-package-index-pypi"]], "Python Package Index": [[1136, "python-package-index"]], "Packaging, PyPI Upload (Link Collection)": [[1137, "packaging-pypi-upload-link-collection"]], "PyTest": [[1138, "pytest"]], "pytest Introduction, By Example": [[1139, "pytest-introduction-by-example"]], "Sample Project Structure": [[1139, "sample-project-structure"]], "pytest: Installation, Documentation": [[1139, "pytest-installation-documentation"]], "And PYTHONPATH?": [[1139, "and-pythonpath"]], "A Simple Test": [[1139, "a-simple-test"]], "Failing Tests": [[1139, "failing-tests"]], "A More Realistic Example": [[1139, "a-more-realistic-example"]], "Fixtures": [[1139, "fixtures"]], "Temporary Test Directory": [[1139, "temporary-test-directory"]], "Marking Tests as Expected to Fail": [[1139, "marking-tests-as-expected-to-fail"]], "The unittest Module": [[1140, "the-unittest-module"]], "Simplest Example": [[1140, "simplest-example"]], "Using a Fixture": [[1140, "using-a-fixture"]], "Multiple Test Cases With Same Fixture": [[1140, "multiple-test-cases-with-same-fixture"]], "Auto Recognizing Test Methods": [[1140, "auto-recognizing-test-methods"]], "The Meat of a Test": [[1140, "the-meat-of-a-test"]], "Recommendations": [[1140, "recommendations"]], "Virtual Environments (Livehacking Screenplay)": [[1141, "virtual-environments-livehacking-screenplay"]], "First: Help": [[1141, "first-help"]], "Local Package Installation": [[1141, "local-package-installation"]], "Freezing an Environment": [[1141, "freezing-an-environment"]], "Destroying an Environment": [[1141, "destroying-an-environment"]], "Recreating an Environment": [[1141, "recreating-an-environment"]], "Using Virtual Environments With Visual Studio Code": [[1141, "using-virtual-environments-with-visual-studio-code"]], "Virtual Environments (Slideshow)": [[1142, "virtual-environments-slideshow"]], "Virtual Environments (Links)": [[1142, "virtual-environments-links"]], "Virtual Environments": [[1143, "virtual-environments"]], "Unit Testing With googletest": [[1144, "unit-testing-with-googletest"]], "Code: Unittest: GTest Basics": [[1145, "code-unittest-gtest-basics"]], "Screenplay: Unittest: GTest Basics": [[1146, "screenplay-unittest-gtest-basics"]], "Before We Start": [[1146, "before-we-start"]], "Simplest Test: No Test": [[1146, "simplest-test-no-test"]], "Next Simplest: Single File": [[1146, "next-simplest-single-file"]], "Executing Tests Selectively": [[1146, "executing-tests-selectively"]], "Fatal Failure": [[1146, "fatal-failure"]], "FAIL()": [[1146, "fail"]], "ASSERT_*()": [[1146, "assert"]], "Non-Fatal Failure": [[1146, "non-fatal-failure"]], "Custom Message Output": [[1146, "custom-message-output"]], "Last Not Least: Structure": [[1146, "last-not-least-structure"]], "Test Cases and Suites": [[1146, "test-cases-and-suites"]], "Unittest: GTest Basics": [[1147, "unittest-gtest-basics"]], "Screenplay: Unittest: GTest and CMake": [[1148, "screenplay-unittest-gtest-and-cmake"]], "Installed: to be found in Standard Paths": [[1148, "installed-to-be-found-in-standard-paths"]], "CMake: \u201cFind Modules\u201d": [[1148, "cmake-find-modules"]], "Executing Tests As Part of Build": [[1148, "executing-tests-as-part-of-build"]], "Tests That Are Expected to Fail": [[1148, "tests-that-are-expected-to-fail"]], "Unittest: GTest and CMake": [[1149, "unittest-gtest-and-cmake"]], "Code: Unittest: GTest Fixtures": [[1150, "code-unittest-gtest-fixtures"]], "Screenplay: Unittest: GTest Fixtures": [[1151, "screenplay-unittest-gtest-fixtures"]], "Predefined Environment for a Number of Tests": [[1151, "predefined-environment-for-a-number-of-tests"]], "Environment is Isolated Per Test": [[1151, "environment-is-isolated-per-test"]], "More Complex Environment: SetUp(), TearDown()": [[1151, "more-complex-environment-setup-teardown"]], "Unittest: GTest Fixtures": [[1152, "unittest-gtest-fixtures"]], "Organisatorisches: Buchung, Kursablauf": [[1153, "organisatorisches-buchung-kursablauf"]], "Online Schulungen": [[1153, null]], "Buchung": [[1153, "buchung"]], "Kursgestaltung": [[1153, "kursgestaltung"]], "\u00dcbungen": [[1153, "ubungen"]], "Unterlagen & Download": [[1153, "unterlagen-download"]], "Linux from Scratch, 16.9.2013, M\u00fcnchen": [[1154, "linux-from-scratch-16-9-2013-munchen"]], "GRUB 0.97": [[1154, "grub-0-97"]], "Cross Systeme Bauen": [[1154, "cross-systeme-bauen"]], "Init, oder der Prozess mit der ID 1": [[1154, "init-oder-der-prozess-mit-der-id-1"]], "Verschiedenes": [[1154, "verschiedenes"]], "Shell Scripting/Bourne Again Shell (Bash)": [[1155, "shell-scripting-bourne-again-shell-bash"]], "Zielpublikum": [[1155, "zielpublikum"], [1157, "zielpublikum"], [1158, "zielpublikum"], [1163, "zielpublikum"], [1165, "zielpublikum"], [1170, "zielpublikum"], [1171, "zielpublikum"], [1177, "zielpublikum"]], "Kursinhalt": [[1155, "kursinhalt"], [1157, "kursinhalt"], [1158, "kursinhalt"], [1163, "kursinhalt"], [1165, "kursinhalt"], [1166, "kursinhalt"], [1170, "kursinhalt"], [1171, "kursinhalt"], [1172, "kursinhalt"], [1173, "kursinhalt"], [1175, "kursinhalt"], [1176, "kursinhalt"], [1177, "kursinhalt"]], "Empfohlene Vorkenntnisse": [[1155, "empfohlene-vorkenntnisse"], [1157, "empfohlene-vorkenntnisse"], [1158, "empfohlene-vorkenntnisse"], [1163, "empfohlene-vorkenntnisse"], [1165, "empfohlene-vorkenntnisse"], [1166, "empfohlene-vorkenntnisse"], [1170, "empfohlene-vorkenntnisse"], [1171, "empfohlene-vorkenntnisse"], [1172, "empfohlene-vorkenntnisse"], [1173, "empfohlene-vorkenntnisse"], [1175, "empfohlene-vorkenntnisse"], [1176, "empfohlene-vorkenntnisse"], [1177, "empfohlene-vorkenntnisse"]], "C: Einf\u00fchrung": [[1156, "c-einfuhrung"]], "C f\u00fcr Fortgeschrittene": [[1157, "c-fur-fortgeschrittene"]], "C++: Einf\u00fchrung und \u00dcberblick": [[1158, "c-einfuhrung-und-uberblick"]], "An Introduction to Modern C++, In Three Days": [[1159, "an-introduction-to-modern-c-in-three-days"]], "C and C++ Programming": [[1160, "c-and-c-programming"]], "CMake": [[1161, "cmake"]], "The Course": [[1161, null]], "Target Audience": [[1161, "target-audience"]], "Recommended Prior Knowledge": [[1161, "recommended-prior-knowledge"]], "Design Patterns For Embedded C++ Developers": [[1162, "design-patterns-for-embedded-c-developers"]], "Embedded Software Development: Hardware, Realtime, and Memory Management": [[1163, "embedded-software-development-hardware-realtime-and-memory-management"]], "Course Contents": [[1164, "course-contents"]], "Sample Project": [[1164, "sample-project"]], "Linux Basics: Eine Einf\u00fchrung Anhand von Beispielen": [[1165, "linux-basics-eine-einfuhrung-anhand-von-beispielen"]], "GNU Make: Die Mutter aller Build Tools": [[1166, "gnu-make-die-mutter-aller-build-tools"]], "Herdt": [[1169, "herdt"]], "Eine Woche mit dem Raspberry Pi": [[1170, "eine-woche-mit-dem-raspberry-pi"]], "Subversion (SVN)": [[1171, "subversion-svn"]], "Linux Systems Programming: Introduction": [[1172, "linux-systems-programming-introduction"]], "Linux Systems Programming: Virtual Memory, IPC, Shared Libraries": [[1173, "linux-systems-programming-virtual-memory-ipc-shared-libraries"]], "Linux Systems Programming: Multithreading": [[1175, "linux-systems-programming-multithreading"]], "Linux Systems Programming: Network Programming": [[1176, "linux-systems-programming-network-programming"]], "Unittesting and Test Driven Development": [[1177, "unittesting-and-test-driven-development"]], "Datatype Conversion": [[320, "Datatype-Conversion"]], "Screenplay: Pointless Blinking With Python, asyncio, and libgpiod (and a Raspberry Pi of Course)": [[63, "screenplay-pointless-blinking-with-python-asyncio-and-libgpiod-and-a-raspberry-pi-of-course"]], "Setup Before Presentation": [[63, "setup-before-presentation"]], "Greeting": [[63, "greeting"]], "Multiple Background Threads": [[63, "multiple-background-threads"]], "Enter asyncio": [[63, "enter-asyncio"]], "Character Device Based GPIO": [[63, "character-device-based-gpio"]], "GPIO Device": [[63, "gpio-device"]], "Most Basic Feature: Setting GPIO Values": [[63, "most-basic-feature-setting-gpio-values"]], "Entire Matrix On/Off": [[63, "entire-matrix-on-off"]], "Bringing All Together": [[63, "bringing-all-together"]], "Modularize": [[63, "modularize"]], "Play A Bit: Blink Entire Rows": [[63, "play-a-bit-blink-entire-rows"]], "Coroutines?": [[63, "coroutines"]], "Not Enough: sequence()": [[63, "not-enough-sequence"]], "Looping: forever()": [[63, "looping-forever"]], "A Stripped-Down Program (\u27f6 Factory)": [[63, "a-stripped-down-program-longrightarrow-factory"]], "Turn blink() Into A Factory": [[63, "turn-blink-into-a-factory"]], "Anti-Clumsy Decorator: blink() Wrapper": [[63, "anti-clumsy-decorator-blink-wrapper"]], "@program, Finally": [[63, "program-finally"]], "Playground: cycle()": [[63, "playground-cycle"]], "Fast Forward: any(), And Cancellation": [[63, "fast-forward-any-and-cancellation"]], "Playground: on()": [[63, "playground-on"]], "Goodbye": [[63, "goodbye"]]}, "indexentries": {}})